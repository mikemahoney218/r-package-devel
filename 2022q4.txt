From edwwe|2020 @end|ng |rom gm@||@com  Mon Oct  3 17:03:20 2022
From: edwwe|2020 @end|ng |rom gm@||@com (Edward Wei)
Date: Mon, 3 Oct 2022 08:03:20 -0700
Subject: [R-pkg-devel] Unable to create manual
In-Reply-To: <20220926220141.71df28e0@Tarkus>
References: <CAEf_eRCTaa5Xnv6TkHX=Jncqv+Fu7PMTM=_w7WLFj9SDGVKm5g@mail.gmail.com>
 <a51aa30d-bff0-2824-fd6f-948a70975e06@gmail.com>
 <a325c931-4074-ca48-5d0a-42f410429eff@statistik.tu-dortmund.de>
 <CAEf_eRD7qyzRiVDrX5_CA-hEQ7wj-G+3Ku-=+2X2t=+Ai+g+aw@mail.gmail.com>
 <3275b3cb-33b1-3c2b-b86d-7ca73c8d6cb9@gmail.com>
 <CAEf_eRCUs-zRqdkPLnFMUB0Am6+=g+=DjcGsZ==Biu62MNgjhQ@mail.gmail.com>
 <20220926220141.71df28e0@Tarkus>
Message-ID: <CAEf_eRBiiSdAequnQWD9OMbP1Z=NFoPBtKQfzGG+X65b8d+Mew@mail.gmail.com>

Hello Ivan.

The Does list.files(pattern = 'utils|Rout\\.fail') gave me something like
an empty string.

So after getting some in-person help on this issue, the key to resolving
this error was explicitly defining the environmental variables in the
console as:

set
PDFLATEX=C:\Users\edmon\AppData\Local\Programs\MiKTeX\miktex\bin\x64\pdflatex



set
MAKEINDEX=C:\Users\edmon\AppData\Local\Programs\MiKTeX\miktex\bin\x64\makeindex


The makeindex was a package I was apparently missing for MikTex and I had
to download it as part of generating the manual.


I would have to set up the environmental variables every time that R got
started in order for the R CMD check to run smoothly.


Best regards,




On Mon, Sep 26, 2022 at 12:01 PM Ivan Krylov <krylov.r00t at gmail.com> wrote:

> On Mon, 26 Sep 2022 10:50:01 -0700
> Edward Wei <edwwei2020 at gmail.com> wrote:
>
> > 1. Where do I run "make check"?
>
> In the directory where R is built from source. If you're using a binary
> build of R, this isn't applicable.
>
> > 3. I get this back when I run the "tools::testInstalledPackages(scope
> > = "base")" on my RGUI.
> >
> > Error: testing 'utils' failed
> >
> > Where may I find the error log for this?
>
> testInstalledPackages() creates output files in the current directory.
> Does list.files(pattern = 'utils|Rout\\.fail') give you anything useful?
>
> --
> Best regards,
> Ivan
>

	[[alternative HTML version deleted]]


From etie@@e@come m@iii@g oii u@iv-eiiiei@ir  Tue Oct  4 12:25:57 2022
From: etie@@e@come m@iii@g oii u@iv-eiiiei@ir (etie@@e@come m@iii@g oii u@iv-eiiiei@ir)
Date: Tue, 4 Oct 2022 12:25:57 +0200 (CEST)
Subject: [R-pkg-devel] 
 NOTE checking for detritus in the temp directory on windows
In-Reply-To: <CAFDcVCQNaP8=iLPG+Vk4vfEN1Y5zfeabca8Qnov5ZomsGLwsZA@mail.gmail.com>
References: <1624161329.20817062.1664440955959.JavaMail.zimbra@ifsttar.fr>
 <CAFDcVCQNaP8=iLPG+Vk4vfEN1Y5zfeabca8Qnov5ZomsGLwsZA@mail.gmail.com>
Message-ID: <1104744221.26257047.1664879157504.JavaMail.zimbra@ifsttar.fr>

Hi,

Thanks a lot Henrik for your detailed response, the problem was the one you suspected a "plan(mutlisession)" that was not correctly closed. And following your advice I was able to reproduce it on winbuilder.

So thanks again for your help!

Best regards, 

Etienne


Etienne C?me, @comeetie
Charg? de Recherche
Universit? Gustave Eiffel
GRETTIA/COSYS
Tel : 01 81 66 87 18
Web : http://www.comeetie.fr

----- Mail original -----
De: "Henrik Bengtsson" <henrik.bengtsson at gmail.com>
?: "etienne come" <etienne.come at univ-eiffel.fr>
Cc: "r-package-devel" <r-package-devel at r-project.org>
Envoy?: Vendredi 30 Septembre 2022 17:19:03
Objet: Re: [R-pkg-devel] NOTE checking for detritus in the temp directory on windows

Hi.

> * checking for detritus in the temp directory ... NOTE
> Found the following files/directories:
> 'Rscript306c1f1adf1' 'Rscript3fb41f1adf1'

Whenever seeing detritus files with name Rscript<hexcode> like these,
it's a strong suggestion that parallel workers on MS Windows are
involved.  More precisely, each of them is from a separate PSOCK
cluster node worker typically launched by parallel::makeCluster().
When such workers are launched in example code, unit tests, or
vignettes those files are created by R itself when running on MS
Windows.  If the workers are not properly shutdown (e.g. forgetting to
call parallel::stopCluster()), those files are left behind, and 'R CMD
check' will detect them.

Now, from experience, but neither fully investigated not understood
yet, it *might* be that even if one calls parallel::stopCluster() at
the end of examples, unit tests, or vignettes, it might be that there
is still a race condition where the parallel workers are still in the
process of shutting down when 'R CMD check' is checking for detritus
files.  If that is the case, then it might be sporadic and tricky to
reproduce this problem.  This has happened to me exactly once. I'm
saying this, only in case you're struggle to reproduce it, but my
guess is that this is *not* the case here. Please see below for
options how to reproduce.

Now, I see you're using 'future' for parallelization.  Because of
this, I suspect you use plan(multisession), which launches parallel
PSOCK workers like parallel::makeCluster().  To shut down those
workers at the end, call plan(sequential).  My guess is that this is
your problem.  Before you do that, I would make sure you can reproduce
the problem first - see below.

> I did not manage to reproduce it with Rhub and github action.

1. Looking at your
https://github.com/comeetie/greed/blob/master/.github/workflows/R-CMD-check.yaml,
I see you're not checking with **R-devel** on MS Windows. I suggest
you add that and too see if you can reproduce it there.  You could
also add an explicit `env: _R_CHECK_THINGS_IN_TEMP_DIR_: true` just in
case (but I'd guess --as-cran does this).

2. Similarly, did you make sure to test with R-devel on MS Windows on R-hub?

3. Did you try with R-devel on the win-builder service?

For your future needs (pun not intended), I would make sure you can
reproduce the problem before trying to fix it.

Hope this helps,

Henrik

On Fri, Sep 30, 2022 at 12:14 AM <etienne.come at univ-eiffel.fr> wrote:
>
> Dear all,
>
> I'm getting the following Note for CRAN pre-tests (for package greed https://github.com/comeetie/greed) :
>
> * checking for detritus in the temp directory ... NOTE
> Found the following files/directories:
> 'Rscript306c1f1adf1' 'Rscript3fb41f1adf1'
>
> this note only appears on windows :
>
> * using R Under development (unstable) (2022-09-26 r82921 ucrt)
> * using platform: x86_64-w64-mingw32 (64-bit)
>
> The full pretest logs are located at https://win-builder.r-project.org/incoming_pretest/greed_0.6.1_20220927_163632/Windows/00check.log
>
> I did not manage to reproduce it with Rhub and github action.
>
> I've seen other questions on the mailing list about "detritus" but the root causes seems to be different in my case since i did not open a navigator and i did not create
> files or folders in my tests or vignettes. Any hint on how to solve this note will be welcome.
>
> Thanks a lot
>
> Etienne
>
>
> Etienne C?me, @comeetie
> Charg? de Recherche
> Universit? Gustave Eiffel
> GRETTIA/COSYS
> Tel : 01 81 66 87 18
> Web : http://www.comeetie.fr
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From v|ncentv@nhee@ @end|ng |rom gm@||@com  Tue Oct  4 16:46:03 2022
From: v|ncentv@nhee@ @end|ng |rom gm@||@com (Vincent van Hees)
Date: Tue, 4 Oct 2022 16:46:03 +0200
Subject: [R-pkg-devel] Guidance on splitting up an R package?
Message-ID: <CALnEB17ExKcv=+EH4NycFFta+jaF0N1FjbfCphttK=cnBdKgow@mail.gmail.com>

Dear all,

I am looking for guidance (blog posts / books / people with expertise) on
how to split up an R package that has grown a lot in complexity and size.
To make it worthwhile, the split needs to ease the maintenance and ongoing
development.

Here are my quick reflections on it:
1. Where possible try to preserve the consistency of the original R
package. So, spin-off packages should ideally become helper-packages to the
original package and tests need to be in place to ensure compatibility of
the original R package is preserved.
2. Keep similar functionality together. For example, a function to read
files does not have to be in the same package as a function to plot the
data, but a function to adjust the color coding of the plots should be
stored near the other plotting functions.
3. Try to isolate external dependencies. For example, if dependency Y
changes I ideally only have to worry about updating one of my R packages to
it instead of several.

I am wondering whether anyone else has ever made a more elaborate mapping
of do's and don'ts when it comes to splitting up an R package or any
software for that matter?

Vincent

	[[alternative HTML version deleted]]


From th|erry@onke||nx @end|ng |rom |nbo@be  Tue Oct  4 17:45:58 2022
From: th|erry@onke||nx @end|ng |rom |nbo@be (Thierry Onkelinx)
Date: Tue, 4 Oct 2022 17:45:58 +0200
Subject: [R-pkg-devel] Guidance on splitting up an R package?
In-Reply-To: <CALnEB17ExKcv=+EH4NycFFta+jaF0N1FjbfCphttK=cnBdKgow@mail.gmail.com>
References: <CALnEB17ExKcv=+EH4NycFFta+jaF0N1FjbfCphttK=cnBdKgow@mail.gmail.com>
Message-ID: <CAJuCY5y8rxenG8=tHjQNQvHgp_wKJ5Q_JdN5++t8AuuWz62-Og@mail.gmail.com>

Dear Vincent,

Have a look at the spatstat package which was split into several smaller
packages (https://github.com/spatstat/spatstat). Maybe the maintainers of
that package can share some insights.

Best regards,

ir. Thierry Onkelinx
Statisticus / Statistician

Vlaamse Overheid / Government of Flanders
INSTITUUT VOOR NATUUR- EN BOSONDERZOEK / RESEARCH INSTITUTE FOR NATURE AND
FOREST
Team Biometrie & Kwaliteitszorg / Team Biometrics & Quality Assurance
thierry.onkelinx at inbo.be
Havenlaan 88 bus 73, 1000 Brussel
www.inbo.be

///////////////////////////////////////////////////////////////////////////////////////////
To call in the statistician after the experiment is done may be no more
than asking him to perform a post-mortem examination: he may be able to say
what the experiment died of. ~ Sir Ronald Aylmer Fisher
The plural of anecdote is not data. ~ Roger Brinner
The combination of some data and an aching desire for an answer does not
ensure that a reasonable answer can be extracted from a given body of data.
~ John Tukey
///////////////////////////////////////////////////////////////////////////////////////////

<https://www.inbo.be>


Op di 4 okt. 2022 om 16:46 schreef Vincent van Hees <
vincentvanhees at gmail.com>:

> Dear all,
>
> I am looking for guidance (blog posts / books / people with expertise) on
> how to split up an R package that has grown a lot in complexity and size.
> To make it worthwhile, the split needs to ease the maintenance and ongoing
> development.
>
> Here are my quick reflections on it:
> 1. Where possible try to preserve the consistency of the original R
> package. So, spin-off packages should ideally become helper-packages to the
> original package and tests need to be in place to ensure compatibility of
> the original R package is preserved.
> 2. Keep similar functionality together. For example, a function to read
> files does not have to be in the same package as a function to plot the
> data, but a function to adjust the color coding of the plots should be
> stored near the other plotting functions.
> 3. Try to isolate external dependencies. For example, if dependency Y
> changes I ideally only have to worry about updating one of my R packages to
> it instead of several.
>
> I am wondering whether anyone else has ever made a more elaborate mapping
> of do's and don'ts when it comes to splitting up an R package or any
> software for that matter?
>
> Vincent
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From |gor|@|tu| @end|ng |rom gm@||@com  Tue Oct  4 20:29:54 2022
From: |gor|@|tu| @end|ng |rom gm@||@com (Igor L)
Date: Tue, 4 Oct 2022 15:29:54 -0300
Subject: [R-pkg-devel] How to decrease time to import files in xlsx format?
Message-ID: <CAHGVjr=K9YbwVhEhxq_=9v_uxkT5FXzqhoyomdPWKn_erDsvDA@mail.gmail.com>

Hello all,

I'm developing an R package that basically downloads, imports, cleans and
merges nine files in xlsx format updated monthly from a public institution.

The problem is that importing files in xlsx format is time consuming.

My initial idea was to parallelize the execution of the read_xlsx function
according to the number of cores in the user's processor, but apparently it
didn't make much difference, since when trying to parallelize it the
execution time went from 185.89 to 184.12 seconds:

# not parallelized code
y <- purrr::map_dfr(paste0(dir.temp, '/', lista.arquivos.locais),
               readxl::read_excel, sheet = 1, skip = 4, col_types =
c(rep('text', 30)))

# parallelized code
plan(strategy = future::multicore(workers = 4))
y <- furrr::future_map_dfr(paste0(dir.temp, '/', lista.arquivos.locais),
                             readxl::read_excel, sheet = 1, skip = 4,
col_types = c(rep('text', 30)))

 Any suggestions to reduce the import processing time?

Thanks in advance!

-- 
*Igor Laltuf Marques*
Economist (UFF)
Master in Urban and Regional Planning (IPPUR-UFRJ)
Researcher at ETTERN and CiDMob
https://igorlaltuf.github.io/

	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Tue Oct  4 21:39:08 2022
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Tue, 4 Oct 2022 22:39:08 +0300
Subject: [R-pkg-devel] 
 How to decrease time to import files in xlsx format?
In-Reply-To: <CAHGVjr=K9YbwVhEhxq_=9v_uxkT5FXzqhoyomdPWKn_erDsvDA@mail.gmail.com>
References: <CAHGVjr=K9YbwVhEhxq_=9v_uxkT5FXzqhoyomdPWKn_erDsvDA@mail.gmail.com>
Message-ID: <20221004223908.0f9894b7@Tarkus>

On Tue, 4 Oct 2022 15:29:54 -0300
Igor L <igorlaltuf at gmail.com> wrote:

> The problem is that importing files in xlsx format is time consuming.

Do the openxlsx or XLConnect packages fare any better?

> plan(strategy = future::multicore(workers = 4))

As far as I understand the documentation, multicore only works on
POSIX-compatible operating systems when not running under RStudio (and
even then, some macOS APIs may be not fork()-safe). Which operating
system are you running? Does it get any better if you use
future::multisession?

Have you tried profiling the code? Do you see it using 100% of one
core in some kind of task manager?

-- 
Best regards,
Ivan


From ||@t@ @end|ng |rom reve||e@net  Tue Oct  4 21:42:19 2022
From: ||@t@ @end|ng |rom reve||e@net (William Revelle)
Date: Tue, 4 Oct 2022 14:42:19 -0500
Subject: [R-pkg-devel] Guidance on splitting up an R package?
In-Reply-To: <CALnEB17ExKcv=+EH4NycFFta+jaF0N1FjbfCphttK=cnBdKgow@mail.gmail.com>
References: <CALnEB17ExKcv=+EH4NycFFta+jaF0N1FjbfCphttK=cnBdKgow@mail.gmail.com>
Message-ID: <5AD2FF42-DEBA-4907-8DFC-3A7D6D7FB45D@revelle.net>

In 2019, I split psych into psych and psychTools to meet the 5MB space restriction.  I moved several of vignettes, data sets, and a few helper functions over to psychTools. This mainly allowed for more vignettes but also allows me to add new data sets to psychTools without needing to recompile psych.   This is discussed in the news file for psych and psychTools.

Bill




> On Oct 4, 2022, at 9:46 AM, Vincent van Hees <vincentvanhees at gmail.com> wrote:
> 
> Dear all,
> 
> I am looking for guidance (blog posts / books / people with expertise) on
> how to split up an R package that has grown a lot in complexity and size.
> To make it worthwhile, the split needs to ease the maintenance and ongoing
> development.
> 
> Here are my quick reflections on it:
> 1. Where possible try to preserve the consistency of the original R
> package. So, spin-off packages should ideally become helper-packages to the
> original package and tests need to be in place to ensure compatibility of
> the original R package is preserved.
> 2. Keep similar functionality together. For example, a function to read
> files does not have to be in the same package as a function to plot the
> data, but a function to adjust the color coding of the plots should be
> stored near the other plotting functions.
> 3. Try to isolate external dependencies. For example, if dependency Y
> changes I ideally only have to worry about updating one of my R packages to
> it instead of several.
> 
> I am wondering whether anyone else has ever made a more elaborate mapping
> of do's and don'ts when it comes to splitting up an R package or any
> software for that matter?
> 
> Vincent
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Tue Oct  4 21:58:27 2022
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Tue, 04 Oct 2022 12:58:27 -0700
Subject: [R-pkg-devel] 
 How to decrease time to import files in xlsx format?
In-Reply-To: <CAHGVjr=K9YbwVhEhxq_=9v_uxkT5FXzqhoyomdPWKn_erDsvDA@mail.gmail.com>
References: <CAHGVjr=K9YbwVhEhxq_=9v_uxkT5FXzqhoyomdPWKn_erDsvDA@mail.gmail.com>
Message-ID: <802EE163-77AE-48A3-987F-3F01DFB452A8@dcn.davis.ca.us>

It looks like you are reading directly from URLs? How do you know the delay is not network I/O delay?

Parallel computation is not a panacea. It allows tasks _that are CPU-bound_ to get through the CPU-intensive work faster. You need to be certain that your tasks actually can benefit from parallelism before using it... there is a significant overhead and added complexity to using parallel processing that will lead to SLOWER processing if mis-used.

On October 4, 2022 11:29:54 AM PDT, Igor L <igorlaltuf at gmail.com> wrote:
>Hello all,
>
>I'm developing an R package that basically downloads, imports, cleans and
>merges nine files in xlsx format updated monthly from a public institution.
>
>The problem is that importing files in xlsx format is time consuming.
>
>My initial idea was to parallelize the execution of the read_xlsx function
>according to the number of cores in the user's processor, but apparently it
>didn't make much difference, since when trying to parallelize it the
>execution time went from 185.89 to 184.12 seconds:
>
># not parallelized code
>y <- purrr::map_dfr(paste0(dir.temp, '/', lista.arquivos.locais),
>               readxl::read_excel, sheet = 1, skip = 4, col_types =
>c(rep('text', 30)))
>
># parallelized code
>plan(strategy = future::multicore(workers = 4))
>y <- furrr::future_map_dfr(paste0(dir.temp, '/', lista.arquivos.locais),
>                             readxl::read_excel, sheet = 1, skip = 4,
>col_types = c(rep('text', 30)))
>
> Any suggestions to reduce the import processing time?
>
>Thanks in advance!
>

-- 
Sent from my phone. Please excuse my brevity.


From john@m@h@rro|d @end|ng |rom gm@||@com  Wed Oct  5 14:32:10 2022
From: john@m@h@rro|d @end|ng |rom gm@||@com (John Harrold)
Date: Wed, 5 Oct 2022 05:32:10 -0700
Subject: [R-pkg-devel] CRAN package isoband and its reverse dependencies
Message-ID: <CANAiAiWY8VOz785QgrSDG4GT=kfO09j8CMAMJVHyL9o8oyjvdw@mail.gmail.com>

Howdy Folks,

I got a message from CRAN today telling me that I have a strong reverse
dependency on the isoband package. But I'm not alone! It look like more
than 4700 other packages also have a strong dependency on this. Is there
some organized effort to deal with this?

Thanks
John

	[[alternative HTML version deleted]]


From @|ngm@nn @end|ng |rom gm@||@com  Wed Oct  5 14:34:59 2022
From: @|ngm@nn @end|ng |rom gm@||@com (Henrik Singmann)
Date: Wed, 5 Oct 2022 13:34:59 +0100
Subject: [R-pkg-devel] CRAN package isoband and its reverse dependencies
In-Reply-To: <CANAiAiWY8VOz785QgrSDG4GT=kfO09j8CMAMJVHyL9o8oyjvdw@mail.gmail.com>
References: <CANAiAiWY8VOz785QgrSDG4GT=kfO09j8CMAMJVHyL9o8oyjvdw@mail.gmail.com>
Message-ID: <CA+rDMK+r5TO+MTeKjCGOO-eF3LgsEAfxxZNoJ__u-wq1YCqJ7w@mail.gmail.com>

Hi John,

I think the short answer is yes, see the discussion on their GitHub:
https://github.com/wilkelab/isoband/issues/31
See also: https://github.com/tidyverse/ggplot2/issues/5006

Best,
Henrik

Am Mi., 5. Okt. 2022 um 13:32 Uhr schrieb John Harrold
<john.m.harrold at gmail.com>:
>
> Howdy Folks,
>
> I got a message from CRAN today telling me that I have a strong reverse
> dependency on the isoband package. But I'm not alone! It look like more
> than 4700 other packages also have a strong dependency on this. Is there
> some organized effort to deal with this?
>
> Thanks
> John
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel



-- 
Dr. Henrik Singmann
Lecturer, Experimental Psychology
University College London (UCL), UK
http://singmann.org


From @c @end|ng |rom |mb|@un|-|re|burg@de  Wed Oct  5 14:39:48 2022
From: @c @end|ng |rom |mb|@un|-|re|burg@de (Guido Schwarzer)
Date: Wed, 5 Oct 2022 14:39:48 +0200
Subject: [R-pkg-devel] CRAN package isoband and its reverse dependencies
In-Reply-To: <CANAiAiWY8VOz785QgrSDG4GT=kfO09j8CMAMJVHyL9o8oyjvdw@mail.gmail.com>
References: <CANAiAiWY8VOz785QgrSDG4GT=kfO09j8CMAMJVHyL9o8oyjvdw@mail.gmail.com>
Message-ID: <bcfdba01-a9ce-d149-06c2-d523785461cc@imbi.uni-freiburg.de>

Am 05.10.22 um 14:32 schrieb John Harrold:

> Howdy Folks,
>
> I got a message from CRAN today telling me that I have a strong reverse
> dependency on the isoband package. But I'm not alone! It look like more
> than 4700 other packages also have a strong dependency on this. Is there
> some organized effort to deal with this?

R package ggplot2 imports isoband which resulted in the very large 
number of strong dependencies.

For my own R packages I could move ggplot2 from Imports to Suggests, 
however, I hope that I can simply wait this out.

Best,

Guido


From |gor|@|tu| @end|ng |rom gm@||@com  Wed Oct  5 14:52:12 2022
From: |gor|@|tu| @end|ng |rom gm@||@com (Igor L)
Date: Wed, 5 Oct 2022 09:52:12 -0300
Subject: [R-pkg-devel] 
 How to decrease time to import files in xlsx format?
In-Reply-To: <802EE163-77AE-48A3-987F-3F01DFB452A8@dcn.davis.ca.us>
References: <CAHGVjr=K9YbwVhEhxq_=9v_uxkT5FXzqhoyomdPWKn_erDsvDA@mail.gmail.com>
 <802EE163-77AE-48A3-987F-3F01DFB452A8@dcn.davis.ca.us>
Message-ID: <CAHGVjrmO1a-+F4z0s986y2U=yNqUQhGpgvRRShpge6t2gprLOQ@mail.gmail.com>

According to my internet research, it looks like readxl is the fastest
package.

The profvis package indicated that the bottleneck is indeed in importing
the files.

My processor has six cores, but when I use four of them the computer
crashes completely. When I use three processors, it's still usable. So I
did one more benchmark comparing for loop, map_dfr and future_map_dfr (with
multisession and three cores).

After the benchmark was run 10 times, the result was:

             expr                  min          lq           mean
 median        uq      max neval
     import_for()        140.9940 147.9722 160.7229 155.6459 172.4661
199.1059    10
 import_map_dfr()   161.6707 339.6769 480.5760 567.8389 643.8895 666.0726
 10
   import_furrr()        112.1374 116.4301 127.5976 129.0067 137.9179
140.8632    10

For me it is proven that using the furrr package is the best solution in
this case, but what would explain so much difference with map_dfr?

Em ter., 4 de out. de 2022 ?s 16:58, Jeff Newmiller <
jdnewmil at dcn.davis.ca.us> escreveu:

> It looks like you are reading directly from URLs? How do you know the
> delay is not network I/O delay?
>
> Parallel computation is not a panacea. It allows tasks _that are
> CPU-bound_ to get through the CPU-intensive work faster. You need to be
> certain that your tasks actually can benefit from parallelism before using
> it... there is a significant overhead and added complexity to using
> parallel processing that will lead to SLOWER processing if mis-used.
>
> On October 4, 2022 11:29:54 AM PDT, Igor L <igorlaltuf at gmail.com> wrote:
> >Hello all,
> >
> >I'm developing an R package that basically downloads, imports, cleans and
> >merges nine files in xlsx format updated monthly from a public
> institution.
> >
> >The problem is that importing files in xlsx format is time consuming.
> >
> >My initial idea was to parallelize the execution of the read_xlsx function
> >according to the number of cores in the user's processor, but apparently
> it
> >didn't make much difference, since when trying to parallelize it the
> >execution time went from 185.89 to 184.12 seconds:
> >
> ># not parallelized code
> >y <- purrr::map_dfr(paste0(dir.temp, '/', lista.arquivos.locais),
> >               readxl::read_excel, sheet = 1, skip = 4, col_types =
> >c(rep('text', 30)))
> >
> ># parallelized code
> >plan(strategy = future::multicore(workers = 4))
> >y <- furrr::future_map_dfr(paste0(dir.temp, '/', lista.arquivos.locais),
> >                             readxl::read_excel, sheet = 1, skip = 4,
> >col_types = c(rep('text', 30)))
> >
> > Any suggestions to reduce the import processing time?
> >
> >Thanks in advance!
> >
>
> --
> Sent from my phone. Please excuse my brevity.
>

	[[alternative HTML version deleted]]


From h@w|ckh@m @end|ng |rom gm@||@com  Wed Oct  5 14:56:52 2022
From: h@w|ckh@m @end|ng |rom gm@||@com (Hadley Wickham)
Date: Wed, 5 Oct 2022 07:56:52 -0500
Subject: [R-pkg-devel] CRAN package isoband and its reverse dependencies
In-Reply-To: <CANAiAiWY8VOz785QgrSDG4GT=kfO09j8CMAMJVHyL9o8oyjvdw@mail.gmail.com>
References: <CANAiAiWY8VOz785QgrSDG4GT=kfO09j8CMAMJVHyL9o8oyjvdw@mail.gmail.com>
Message-ID: <CABdHhvEJoKP+vxr8KsMBCOk3z=HUsaX4K_v2ZhZZSTaHysLo6w@mail.gmail.com>

Yes, we will make sure that this is fixed ASAP. There is no need to worry.

Hadley

On Wed, Oct 5, 2022 at 7:32 AM John Harrold <john.m.harrold at gmail.com> wrote:
>
> Howdy Folks,
>
> I got a message from CRAN today telling me that I have a strong reverse
> dependency on the isoband package. But I'm not alone! It look like more
> than 4700 other packages also have a strong dependency on this. Is there
> some organized effort to deal with this?
>
> Thanks
> John
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel



-- 
http://hadley.nz


From d|ego|coe|ho @end|ng |rom gm@||@com  Wed Oct  5 15:13:56 2022
From: d|ego|coe|ho @end|ng |rom gm@||@com (=?UTF-8?Q?Diego_de_Freitas_Co=C3=AAlho?=)
Date: Wed, 5 Oct 2022 10:13:56 -0300
Subject: [R-pkg-devel] 
 How to decrease time to import files in xlsx format?
In-Reply-To: <CAHGVjrmO1a-+F4z0s986y2U=yNqUQhGpgvRRShpge6t2gprLOQ@mail.gmail.com>
References: <CAHGVjr=K9YbwVhEhxq_=9v_uxkT5FXzqhoyomdPWKn_erDsvDA@mail.gmail.com>
 <802EE163-77AE-48A3-987F-3F01DFB452A8@dcn.davis.ca.us>
 <CAHGVjrmO1a-+F4z0s986y2U=yNqUQhGpgvRRShpge6t2gprLOQ@mail.gmail.com>
Message-ID: <CAMCrwUMMpDuDNJL=DmVD3C3r1fbbVPPbf+0qKRa062-tgKxYxA@mail.gmail.com>

Hey Igor,

I have been dealing with *CSV*/*XLSX* files from time to time and depending
on the size of those files you are mentioning, 180 seconds isn't really
that much.
From my experience, *vroom *is the fastest I've encountered but it deals
with *CSV* files (I can support its usage for up to 8gb size files).
If you have the option to import CSVs instead, you should give it a try.

Other than that there are several other factors to be considered, such as
memory and disk read/write capabilities.
And again, it is just 180 seconds so just suggest the user go get a cup of
coffee :)

Best,
Diego

On Wed, 5 Oct 2022 at 10:02, Igor L <igorlaltuf at gmail.com> wrote:

> According to my internet research, it looks like readxl is the fastest
> package.
>
> The profvis package indicated that the bottleneck is indeed in importing
> the files.
>
> My processor has six cores, but when I use four of them the computer
> crashes completely. When I use three processors, it's still usable. So I
> did one more benchmark comparing for loop, map_dfr and future_map_dfr (with
> multisession and three cores).
>
> After the benchmark was run 10 times, the result was:
>
>              expr                  min          lq           mean
>  median        uq      max neval
>      import_for()        140.9940 147.9722 160.7229 155.6459 172.4661
> 199.1059    10
>  import_map_dfr()   161.6707 339.6769 480.5760 567.8389 643.8895 666.0726
>  10
>    import_furrr()        112.1374 116.4301 127.5976 129.0067 137.9179
> 140.8632    10
>
> For me it is proven that using the furrr package is the best solution in
> this case, but what would explain so much difference with map_dfr?
>
> Em ter., 4 de out. de 2022 ?s 16:58, Jeff Newmiller <
> jdnewmil at dcn.davis.ca.us> escreveu:
>
> > It looks like you are reading directly from URLs? How do you know the
> > delay is not network I/O delay?
> >
> > Parallel computation is not a panacea. It allows tasks _that are
> > CPU-bound_ to get through the CPU-intensive work faster. You need to be
> > certain that your tasks actually can benefit from parallelism before
> using
> > it... there is a significant overhead and added complexity to using
> > parallel processing that will lead to SLOWER processing if mis-used.
> >
> > On October 4, 2022 11:29:54 AM PDT, Igor L <igorlaltuf at gmail.com> wrote:
> > >Hello all,
> > >
> > >I'm developing an R package that basically downloads, imports, cleans
> and
> > >merges nine files in xlsx format updated monthly from a public
> > institution.
> > >
> > >The problem is that importing files in xlsx format is time consuming.
> > >
> > >My initial idea was to parallelize the execution of the read_xlsx
> function
> > >according to the number of cores in the user's processor, but apparently
> > it
> > >didn't make much difference, since when trying to parallelize it the
> > >execution time went from 185.89 to 184.12 seconds:
> > >
> > ># not parallelized code
> > >y <- purrr::map_dfr(paste0(dir.temp, '/', lista.arquivos.locais),
> > >               readxl::read_excel, sheet = 1, skip = 4, col_types =
> > >c(rep('text', 30)))
> > >
> > ># parallelized code
> > >plan(strategy = future::multicore(workers = 4))
> > >y <- furrr::future_map_dfr(paste0(dir.temp, '/', lista.arquivos.locais),
> > >                             readxl::read_excel, sheet = 1, skip = 4,
> > >col_types = c(rep('text', 30)))
> > >
> > > Any suggestions to reduce the import processing time?
> > >
> > >Thanks in advance!
> > >
> >
> > --
> > Sent from my phone. Please excuse my brevity.
> >
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From @|ex@ndre@court|o| @end|ng |rom gm@||@com  Sun Oct  9 14:14:40 2022
From: @|ex@ndre@court|o| @end|ng |rom gm@||@com (Alexandre Courtiol)
Date: Sun, 9 Oct 2022 14:14:40 +0200
Subject: [R-pkg-devel] Issue handling datetimes: possible differences
 between computers
Message-ID: <CAERMt4eYyTKadiTk6ZVgM5UmVXQ83PbBJQzfBOEW7=KZqsBC+w@mail.gmail.com>

Hi R pkg developers,

We are facing a datetime handling issue which manifests itself in a
package we are working on.

In context, we noticed that reading datetime info from an excel file
resulted in different data depending on the computer we used.

We are aware that timezone and regional settings are general sources
of troubles, but the code we are using was trying to circumvent this.
We went only as far as figuring out that the issue happens when
converting a POSIXlt into a POSIXct.

Please find below, a minimal reproducible example where `foo` is
converted to `bar` on two different computers.
`foo` is a POSIXlt with a defined time zone and upon conversion to a
POSIXct, despite using a set time zone, we end up with `bar` being
different on Linux and on a Windows machine.

We noticed that the difference emerges from the system call
`.Internal(as.POSIXct())` within `as.POSIXct.POSIXlt()`.
We also noticed that the internal function in R actually calls
getenv("TZ") within C, which is probably what explains where the
difference comes from.

Such a behaviour is probably expected and not a bug, but what would be
the strategy to convert a POSIXlt into a POSIXct that would not be
machine dependent?

We finally noticed that depending on the datetime used as a starting
point and on the time zone used when calling `as.POSIXct()`, we
sometimes have a difference between computers and sometimes not...
which adds to our puzzlement.

Many thanks.
Alex & Liam


``` r
## On Linux
foo <- structure(list(sec = 0, min = 0L, hour = 0L, mday = 1L, mon =
9L, year = 121L, wday = 5L, yday = 273L, isdst = 0L),
                 class = c("POSIXlt", "POSIXt"), tzone = "UTC")

bar <- as.POSIXct(foo, tz = "Europe/Berlin")

bar
#> [1] "2021-10-01 01:00:00 CEST"

dput(bar)
#> structure(1633042800, class = c("POSIXct", "POSIXt"), tzone =
"Europe/Berlin")
```

``` r
## On Windows
foo <- structure(list(sec = 0, min = 0L, hour = 0L, mday = 1L, mon =
9L, year = 121L, wday = 5L, yday = 273L, isdst = 0L),
                 class = c("POSIXlt", "POSIXt"), tzone = "UTC")

bar <- as.POSIXct(foo, tz = "Europe/Berlin")

bar
#> [1] "2021-10-01 CEST"

dput(bar)
structure(1633046400, class = c("POSIXct", "POSIXt"), tzone = "Europe/Berlin")
```

-- 
Alexandre Courtiol, www.datazoogang.de


From @|mon@urb@nek @end|ng |rom R-project@org  Mon Oct 10 03:57:06 2022
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Mon, 10 Oct 2022 14:57:06 +1300
Subject: [R-pkg-devel] Issue handling datetimes: possible differences
 between computers
In-Reply-To: <CAERMt4eYyTKadiTk6ZVgM5UmVXQ83PbBJQzfBOEW7=KZqsBC+w@mail.gmail.com>
References: <CAERMt4eYyTKadiTk6ZVgM5UmVXQ83PbBJQzfBOEW7=KZqsBC+w@mail.gmail.com>
Message-ID: <24D0D7FC-F6DF-4AB2-B5A3-7E14D631804C@R-project.org>

Alexandre,

it's better to parse the timestamp in correct timezone:

> foo = as.POSIXlt("2021-10-01", "UTC")
> as.POSIXct(as.character(foo), "Europe/Berlin")
[1] "2021-10-01 CEST"

The issue stems from the fact that you are pretending like your timestamp is UTC (which it is not) while you want to interpret the same values in a different time zone. The DST flags varies depending on the day (due to DST being 0 or 1 depending on the date) and POSIXlt does not have that information since you only attached the time zone without updating it:

> str(unclass(as.POSIXlt(foo, "Europe/Berlin")))
List of 9
 $ sec  : num 0
 $ min  : int 0
 $ hour : int 0
 $ mday : int 1
 $ mon  : int 9
 $ year : int 121
 $ wday : int 5
 $ yday : int 273
 $ isdst: int 0
 - attr(*, "tzone")= chr "Europe/Berlin"

note that isdst is 0 from the UTC entry (which doesn't have DST) even though that date is actually DST in CEST. Compare that to the correctly parsed POSIXlt:

> str(unclass(as.POSIXlt(as.character(foo), "Europe/Berlin")))
List of 11
 $ sec   : num 0
 $ min   : int 0
 $ hour  : int 0
 $ mday  : int 1
 $ mon   : int 9
 $ year  : int 121
 $ wday  : int 5
 $ yday  : int 273
 $ isdst : int 1
 $ zone  : chr "CEST"
 $ gmtoff: int NA
 - attr(*, "tzone")= chr "Europe/Berlin"

where isdst is 1 since it is indeed the DST. The OS difference seems to be that Linux respects the isdst information from POSIXlt while Windows and macOS ignores it. This behavior is documented: 

     At all other times ?isdst? can be deduced from the
     first six values, but the behaviour if it is set incorrectly is
     platform-dependent.

You can re-set isdst to -1 to make sure R will try to determine it:

> foo$isdst = -1L
> as.POSIXct(foo, "Europe/Berlin")
[1] "2021-10-01 CEST"

So, generally, you cannot simply change the time zone in POSIXlt - don't pretend the time is in UTC if it's not, you have to re-parse or re-compute the timestamps for it to be reliable or else the DST flag will be wrong.

Cheers,
Simon


> On 10/10/2022, at 1:14 AM, Alexandre Courtiol <alexandre.courtiol at gmail.com> wrote:
> 
> Hi R pkg developers,
> 
> We are facing a datetime handling issue which manifests itself in a
> package we are working on.
> 
> In context, we noticed that reading datetime info from an excel file
> resulted in different data depending on the computer we used.
> 
> We are aware that timezone and regional settings are general sources
> of troubles, but the code we are using was trying to circumvent this.
> We went only as far as figuring out that the issue happens when
> converting a POSIXlt into a POSIXct.
> 
> Please find below, a minimal reproducible example where `foo` is
> converted to `bar` on two different computers.
> `foo` is a POSIXlt with a defined time zone and upon conversion to a
> POSIXct, despite using a set time zone, we end up with `bar` being
> different on Linux and on a Windows machine.
> 
> We noticed that the difference emerges from the system call
> `.Internal(as.POSIXct())` within `as.POSIXct.POSIXlt()`.
> We also noticed that the internal function in R actually calls
> getenv("TZ") within C, which is probably what explains where the
> difference comes from.
> 
> Such a behaviour is probably expected and not a bug, but what would be
> the strategy to convert a POSIXlt into a POSIXct that would not be
> machine dependent?
> 
> We finally noticed that depending on the datetime used as a starting
> point and on the time zone used when calling `as.POSIXct()`, we
> sometimes have a difference between computers and sometimes not...
> which adds to our puzzlement.
> 
> Many thanks.
> Alex & Liam
> 
> 
> ``` r
> ## On Linux
> foo <- structure(list(sec = 0, min = 0L, hour = 0L, mday = 1L, mon =
> 9L, year = 121L, wday = 5L, yday = 273L, isdst = 0L),
>                 class = c("POSIXlt", "POSIXt"), tzone = "UTC")
> 
> bar <- as.POSIXct(foo, tz = "Europe/Berlin")
> 
> bar
> #> [1] "2021-10-01 01:00:00 CEST"
> 
> dput(bar)
> #> structure(1633042800, class = c("POSIXct", "POSIXt"), tzone =
> "Europe/Berlin")
> ```
> 
> ``` r
> ## On Windows
> foo <- structure(list(sec = 0, min = 0L, hour = 0L, mday = 1L, mon =
> 9L, year = 121L, wday = 5L, yday = 273L, isdst = 0L),
>                 class = c("POSIXlt", "POSIXt"), tzone = "UTC")
> 
> bar <- as.POSIXct(foo, tz = "Europe/Berlin")
> 
> bar
> #> [1] "2021-10-01 CEST"
> 
> dput(bar)
> structure(1633046400, class = c("POSIXct", "POSIXt"), tzone = "Europe/Berlin")
> ```
> 
> -- 
> Alexandre Courtiol, www.datazoogang.de
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 


From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Mon Oct 10 04:31:03 2022
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Sun, 09 Oct 2022 19:31:03 -0700
Subject: [R-pkg-devel] Issue handling datetimes: possible differences
 between computers
In-Reply-To: <24D0D7FC-F6DF-4AB2-B5A3-7E14D631804C@R-project.org>
References: <CAERMt4eYyTKadiTk6ZVgM5UmVXQ83PbBJQzfBOEW7=KZqsBC+w@mail.gmail.com>
 <24D0D7FC-F6DF-4AB2-B5A3-7E14D631804C@R-project.org>
Message-ID: <16B5505C-DAE0-4735-AED3-92B86E7A0DD8@dcn.davis.ca.us>

... which is why tidyverse functions and Python datetime handling irk me so much.

Is tidyverse time handling intrinsically broken? They have a standard practice of reading time as UTC and then using force_tz to fix the "mistake". Same as Python.

On October 9, 2022 6:57:06 PM PDT, Simon Urbanek <simon.urbanek at R-project.org> wrote:
>Alexandre,
>
>it's better to parse the timestamp in correct timezone:
>
>> foo = as.POSIXlt("2021-10-01", "UTC")
>> as.POSIXct(as.character(foo), "Europe/Berlin")
>[1] "2021-10-01 CEST"
>
>The issue stems from the fact that you are pretending like your timestamp is UTC (which it is not) while you want to interpret the same values in a different time zone. The DST flags varies depending on the day (due to DST being 0 or 1 depending on the date) and POSIXlt does not have that information since you only attached the time zone without updating it:
>
>> str(unclass(as.POSIXlt(foo, "Europe/Berlin")))
>List of 9
> $ sec  : num 0
> $ min  : int 0
> $ hour : int 0
> $ mday : int 1
> $ mon  : int 9
> $ year : int 121
> $ wday : int 5
> $ yday : int 273
> $ isdst: int 0
> - attr(*, "tzone")= chr "Europe/Berlin"
>
>note that isdst is 0 from the UTC entry (which doesn't have DST) even though that date is actually DST in CEST. Compare that to the correctly parsed POSIXlt:
>
>> str(unclass(as.POSIXlt(as.character(foo), "Europe/Berlin")))
>List of 11
> $ sec   : num 0
> $ min   : int 0
> $ hour  : int 0
> $ mday  : int 1
> $ mon   : int 9
> $ year  : int 121
> $ wday  : int 5
> $ yday  : int 273
> $ isdst : int 1
> $ zone  : chr "CEST"
> $ gmtoff: int NA
> - attr(*, "tzone")= chr "Europe/Berlin"
>
>where isdst is 1 since it is indeed the DST. The OS difference seems to be that Linux respects the isdst information from POSIXlt while Windows and macOS ignores it. This behavior is documented: 
>
>     At all other times ?isdst? can be deduced from the
>     first six values, but the behaviour if it is set incorrectly is
>     platform-dependent.
>
>You can re-set isdst to -1 to make sure R will try to determine it:
>
>> foo$isdst = -1L
>> as.POSIXct(foo, "Europe/Berlin")
>[1] "2021-10-01 CEST"
>
>So, generally, you cannot simply change the time zone in POSIXlt - don't pretend the time is in UTC if it's not, you have to re-parse or re-compute the timestamps for it to be reliable or else the DST flag will be wrong.
>
>Cheers,
>Simon
>
>
>> On 10/10/2022, at 1:14 AM, Alexandre Courtiol <alexandre.courtiol at gmail.com> wrote:
>> 
>> Hi R pkg developers,
>> 
>> We are facing a datetime handling issue which manifests itself in a
>> package we are working on.
>> 
>> In context, we noticed that reading datetime info from an excel file
>> resulted in different data depending on the computer we used.
>> 
>> We are aware that timezone and regional settings are general sources
>> of troubles, but the code we are using was trying to circumvent this.
>> We went only as far as figuring out that the issue happens when
>> converting a POSIXlt into a POSIXct.
>> 
>> Please find below, a minimal reproducible example where `foo` is
>> converted to `bar` on two different computers.
>> `foo` is a POSIXlt with a defined time zone and upon conversion to a
>> POSIXct, despite using a set time zone, we end up with `bar` being
>> different on Linux and on a Windows machine.
>> 
>> We noticed that the difference emerges from the system call
>> `.Internal(as.POSIXct())` within `as.POSIXct.POSIXlt()`.
>> We also noticed that the internal function in R actually calls
>> getenv("TZ") within C, which is probably what explains where the
>> difference comes from.
>> 
>> Such a behaviour is probably expected and not a bug, but what would be
>> the strategy to convert a POSIXlt into a POSIXct that would not be
>> machine dependent?
>> 
>> We finally noticed that depending on the datetime used as a starting
>> point and on the time zone used when calling `as.POSIXct()`, we
>> sometimes have a difference between computers and sometimes not...
>> which adds to our puzzlement.
>> 
>> Many thanks.
>> Alex & Liam
>> 
>> 
>> ``` r
>> ## On Linux
>> foo <- structure(list(sec = 0, min = 0L, hour = 0L, mday = 1L, mon =
>> 9L, year = 121L, wday = 5L, yday = 273L, isdst = 0L),
>>                 class = c("POSIXlt", "POSIXt"), tzone = "UTC")
>> 
>> bar <- as.POSIXct(foo, tz = "Europe/Berlin")
>> 
>> bar
>> #> [1] "2021-10-01 01:00:00 CEST"
>> 
>> dput(bar)
>> #> structure(1633042800, class = c("POSIXct", "POSIXt"), tzone =
>> "Europe/Berlin")
>> ```
>> 
>> ``` r
>> ## On Windows
>> foo <- structure(list(sec = 0, min = 0L, hour = 0L, mday = 1L, mon =
>> 9L, year = 121L, wday = 5L, yday = 273L, isdst = 0L),
>>                 class = c("POSIXlt", "POSIXt"), tzone = "UTC")
>> 
>> bar <- as.POSIXct(foo, tz = "Europe/Berlin")
>> 
>> bar
>> #> [1] "2021-10-01 CEST"
>> 
>> dput(bar)
>> structure(1633046400, class = c("POSIXct", "POSIXt"), tzone = "Europe/Berlin")
>> ```
>> 
>> -- 
>> Alexandre Courtiol, www.datazoogang.de
>> 
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> 
>
>______________________________________________
>R-package-devel at r-project.org mailing list
>https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
Sent from my phone. Please excuse my brevity.


From d@tr7320 @end|ng |rom un|@@ydney@edu@@u  Mon Oct 10 10:00:04 2022
From: d@tr7320 @end|ng |rom un|@@ydney@edu@@u (Dario Strbenac)
Date: Mon, 10 Oct 2022 08:00:04 +0000
Subject: [R-pkg-devel] Identify Original Column Names of Model Matrix
Message-ID: <SY2PR01MB30033EFCF280CCC2EB45B06DCD209@SY2PR01MB3003.ausprd01.prod.outlook.com>

Good day,

I am developing a wrapper around xgboost which does not (yet - I see that it is on the developer's version 2.0 task list) support factor variable type. It requires input data to be in one-hot encoding, which is created by Matrix::sparse.model.matrix. For further analysis, such as variable importance, is there a way to identify which original feature each column of a sparse.model.matrix result was derived from? Using str(oneHotMatrix), I don't see any class slots nor tacked-on attributes which would confidently allow the identification of original column names of the expanded input data. Is there an alternative way to robustly identify the original variable names?

--------------------------------------
Dario Strbenac
University of Sydney
Camperdown NSW 2050
Australia

From h@w|ckh@m @end|ng |rom gm@||@com  Mon Oct 10 18:40:42 2022
From: h@w|ckh@m @end|ng |rom gm@||@com (Hadley Wickham)
Date: Mon, 10 Oct 2022 11:40:42 -0500
Subject: [R-pkg-devel] Issue handling datetimes: possible differences
 between computers
In-Reply-To: <16B5505C-DAE0-4735-AED3-92B86E7A0DD8@dcn.davis.ca.us>
References: <CAERMt4eYyTKadiTk6ZVgM5UmVXQ83PbBJQzfBOEW7=KZqsBC+w@mail.gmail.com>
 <24D0D7FC-F6DF-4AB2-B5A3-7E14D631804C@R-project.org>
 <16B5505C-DAE0-4735-AED3-92B86E7A0DD8@dcn.davis.ca.us>
Message-ID: <CABdHhvFv32jRvm9WHX4dckOjWs1LK=tV=134K-0cOAgzvvDi=A@mail.gmail.com>

On Sun, Oct 9, 2022 at 9:31 PM Jeff Newmiller <jdnewmil at dcn.davis.ca.us> wrote:
>
> ... which is why tidyverse functions and Python datetime handling irk me so much.
>
> Is tidyverse time handling intrinsically broken? They have a standard practice of reading time as UTC and then using force_tz to fix the "mistake". Same as Python.

Can you point to any docs that lead you to this conclusion so we can
get them fixed? I strongly encourage people to parse date-times in the
correct time zone; this is why lubridate::ymd_hms() and friends have a
tz argument.

Hadley

-- 
http://hadley.nz


From jo@h@m@u|r|ch @end|ng |rom gm@||@com  Mon Oct 10 22:12:21 2022
From: jo@h@m@u|r|ch @end|ng |rom gm@||@com (Joshua Ulrich)
Date: Mon, 10 Oct 2022 15:12:21 -0500
Subject: [R-pkg-devel] Rd cross-references to Suggested package
Message-ID: <CAPPM_gT_Fh61FzGmrsQZt7dNWiZs6J6pxjFwiGGUNbQ2hQbhNw@mail.gmail.com>

Hi all,

I'd like to link to a help page of a package in my package's Suggests.
WRE, section 2.5 says,

"Historically (before R version 4.1.0), links of the form
\link[pkg]{foo} and \link[pkg:bar]{foo} used to be interpreted as
links to files foo.html and bar.html in package pkg, respectively. For
this reason, the HTML help system looks for file foo.html in package
pkg if it does not find topic foo, and then searches for the topic in
other installed packages. To test that links work both with both old
and new systems, the pre-4.1.0 behaviour can be restored by setting
the environment variable _R_HELP_LINKS_TO_TOPICS_=false.

"Packages referred to by these ?other forms? should be declared in the
DESCRIPTION file, in the ?Depends?, ?Im
ports?, ?Suggests? or ?Enhances? fields."

This seems to imply that it's possible... though I don't understand
when I need to set _R_HELP_LINKS_TO_TOPICS_=false in order to test
that the link is done correctly. I'm using \link[pkg]{foo} in R 4.2.1.

I ran R CMD build/INSTALL/check with and without that env var set to
false. Both times the suggested package was not installed on my
library path, so I had to set _R_CHECK_FORCE_SUGGESTS_=false for R CMD
check --as-cran.

I didn't notice a difference in output from R CMD check. Both runs had:

    * checking Rd cross-references ... NOTE
    Package unavailable to check Rd xrefs: ?timeSeries?

I'd appreciate any thoughts and/or pointers to other documentation.

Best,
Josh


-- 
Joshua Ulrich  |  about.me/joshuaulrich
FOSS Trading  |  www.fosstrading.com


From @|mon@urb@nek @end|ng |rom R-project@org  Mon Oct 10 22:13:16 2022
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Tue, 11 Oct 2022 09:13:16 +1300
Subject: [R-pkg-devel] Issue handling datetimes: possible differences
 between computers
In-Reply-To: <C86BDDF6-44EE-4B9B-9515-F19F954B5337@liamdbailey.com>
References: <CAERMt4eYyTKadiTk6ZVgM5UmVXQ83PbBJQzfBOEW7=KZqsBC+w@mail.gmail.com>
 <24D0D7FC-F6DF-4AB2-B5A3-7E14D631804C@R-project.org>
 <16B5505C-DAE0-4735-AED3-92B86E7A0DD8@dcn.davis.ca.us>
 <CABdHhvFv32jRvm9WHX4dckOjWs1LK=tV=134K-0cOAgzvvDi=A@mail.gmail.com>
 <C86BDDF6-44EE-4B9B-9515-F19F954B5337@liamdbailey.com>
Message-ID: <03EBA665-067E-45F4-A97B-4E94E98D65A8@R-project.org>

Liam,

I think I have failed to convey my main point in the last e-mail - which was that you want to parse the date/time in the timezone that you care about so in your example that would be

> foo <- as.Date(33874, origin = "1899-12-30")
> foo
[1] "1992-09-27"
> as.POSIXlt(as.character(foo), "Europe/Berlin")
[1] "1992-09-27 CEST"

I was explicitly saying that you do NOT want to simply change the time zone on POSIXlt objects as that won't work for reasons I explained - see my last e-mail.

Cheers,
Simon


> On 11/10/2022, at 6:31 AM, Liam Bailey <liam.bailey at liamdbailey.com> wrote:
> 
> Hi all,
> 
> Thanks Simon for the detailed response, that helps us understand a lot better what?s going on! However, with your response in mind, we still encounter some behaviour that we did not expect.
> 
> I?ve included another minimum reproducible example below to expand on the situation. In this example, `foo` is a Date object that we generate from a numeric input. Following your advice, `bar` is then a POSIXlt object where we now explicitly define timezone using argument tz. However, even though we are explicit about the timezone the POSIXlt that is generated is always in UTC. This then leads to the issues outlined by Alexandre above, which we now understand are caused by DST.
> 
> ``` r
> #Generate date from numeric
>     #Not possible to specify tz at this point
>     foo <- as.Date(33874, origin = "1899-12-30")
>     dput(foo)
> #> structure(8305, class = "Date")
>     
>     #Convert to POSIXlt specifying UTC timezone
>     bar <- as.POSIXlt(foo, tz = "UTC")
>     dput(bar)
> #> structure(list(sec = 0, min = 0L, hour = 0L, mday = 27L, mon = 8L, 
> #>     year = 92L, wday = 0L, yday = 270L, isdst = 0L), class = c("POSIXlt", 
> #> "POSIXt"), tzone = "UTC")
>     
>     #Convert to POSIXlt specifying Europe/Berlin.
>     #Time zone is still UTC
>     bar <- as.POSIXlt(foo, tz = "Europe/Berlin")
>     dput(bar)
> #> structure(list(sec = 0, min = 0L, hour = 0L, mday = 27L, mon = 8L, 
> #>     year = 92L, wday = 0L, yday = 270L, isdst = 0L), class = c("POSIXlt", 
> #> "POSIXt"), tzone = "UTC")
> ```
> 
> 
> We noticed that this occurs because the tz argument is not passed to `.Internal(Date2POSIXlt())` inside `as.POSIXlt.Date()`.
> 
> Reading through the documentation for `as.POSIX*` we can see that this behaviour is described:
> 
> 	> ?Dates without times are treated as being at midnight UTC.?
> 
> In this case, if we want to convert a Date object to POSIX* and specify a (non-UTC) timezone would the best strategy be to first coerce our Date object to character? Alternatively, `lubridate::as_datetime()` does seem to recognise the tz argument and convert a Date object to POSIX* with non-UTC time zone (see second example below). But it would be nice to know if there are subtle differences between these two approaches that we should be aware of.
> 
> ``` r
> foo <- as.Date(33874, origin = "1899-12-30")
> dput(foo)
> #> structure(8305, class = "Date")
> 
> #Convert to POSIXct specifying UTC timezone
> bar <- lubridate::as_datetime(foo, tz = "UTC")
> dput(as.POSIXlt(bar))
> #> structure(list(sec = 0, min = 0L, hour = 0L, mday = 27L, mon = 8L, 
> #>     year = 92L, wday = 0L, yday = 270L, isdst = 0L), class = c("POSIXlt", 
> #> "POSIXt"), tzone = "UTC")
> 
> #Convert to POSIXct specifying Europe/Berlin
> bar <- lubridate::as_datetime(foo, tz = "Europe/Berlin")
> dput(as.POSIXlt(bar))
> #> structure(list(sec = 0, min = 0L, hour = 0L, mday = 27L, mon = 8L, 
> #>     year = 92L, wday = 0L, yday = 270L, isdst = 1L, zone = "CEST", 
> #>     gmtoff = 7200L), class = c("POSIXlt", "POSIXt"), tzone = c("Europe/Berlin", 
> #> "CET", "CEST"))
> ```
> 
> Thanks again for all your help.
> Alex & Liam
> 
>> On 10 Oct 2022, at 6:40 pm, Hadley Wickham <h.wickham at gmail.com> wrote:
>> 
>> On Sun, Oct 9, 2022 at 9:31 PM Jeff Newmiller <jdnewmil at dcn.davis.ca.us> wrote:
>>> 
>>> ... which is why tidyverse functions and Python datetime handling irk me so much.
>>> 
>>> Is tidyverse time handling intrinsically broken? They have a standard practice of reading time as UTC and then using force_tz to fix the "mistake". Same as Python.
>> 
>> Can you point to any docs that lead you to this conclusion so we can
>> get them fixed? I strongly encourage people to parse date-times in the
>> correct time zone; this is why lubridate::ymd_hms() and friends have a
>> tz argument.
>> 
>> Hadley
>> 
>> -- 
>> http://hadley.nz
> 


From @|ex@ndre@court|o| @end|ng |rom gm@||@com  Mon Oct 10 22:50:26 2022
From: @|ex@ndre@court|o| @end|ng |rom gm@||@com (Alexandre Courtiol)
Date: Mon, 10 Oct 2022 22:50:26 +0200
Subject: [R-pkg-devel] Issue handling datetimes: possible differences
 between computers
In-Reply-To: <03EBA665-067E-45F4-A97B-4E94E98D65A8@R-project.org>
References: <CAERMt4eYyTKadiTk6ZVgM5UmVXQ83PbBJQzfBOEW7=KZqsBC+w@mail.gmail.com>
 <24D0D7FC-F6DF-4AB2-B5A3-7E14D631804C@R-project.org>
 <16B5505C-DAE0-4735-AED3-92B86E7A0DD8@dcn.davis.ca.us>
 <CABdHhvFv32jRvm9WHX4dckOjWs1LK=tV=134K-0cOAgzvvDi=A@mail.gmail.com>
 <C86BDDF6-44EE-4B9B-9515-F19F954B5337@liamdbailey.com>
 <03EBA665-067E-45F4-A97B-4E94E98D65A8@R-project.org>
Message-ID: <CAERMt4doKk0OFujPOzi7vNz6NrzHV8c56=5=CKMhfWBtyFbY3Q@mail.gmail.com>

Hi Simon,

Thanks for the clarification.

From a naive developer point of view, we were initially baffled that the
generic as.POSIXlt() does very different things on a character and on a
Date input:

as.POSIXlt(as.character(foo), "Europe/Berlin")
[1] "1992-09-27 CEST"

as.POSIXlt(foo, "Europe/Berlin")
[1] "1992-09-27 UTC"

Based on what you said, it does make sense: it is only when creating the
date/time that we want to include the time zone and that only happens when
we don't already work on a previously created date.
That is your subtle but spot-on distinction between "parsing" and
"changing" the time zone.

Yet, we do find it dangerous that as.POSIXlt.Date() accepts a time zone but
does nothing of it, especially when the help file starts with:

Usage
as.POSIXlt(x, tz = "", ...)

The behaviour is documented, as Liam reported it, but still, we will almost
certainly not be the last one tripping on this (without even adding the
additional issue of as.POSIXct() behaving differently across OS).

Thanks again,

Alex & Liam




On Mon, 10 Oct 2022 at 22:13, Simon Urbanek <simon.urbanek at r-project.org>
wrote:

> Liam,
>
> I think I have failed to convey my main point in the last e-mail - which
> was that you want to parse the date/time in the timezone that you care
> about so in your example that would be
>
> > foo <- as.Date(33874, origin = "1899-12-30")
> > foo
> [1] "1992-09-27"
> > as.POSIXlt(as.character(foo), "Europe/Berlin")
> [1] "1992-09-27 CEST"
>
> I was explicitly saying that you do NOT want to simply change the time
> zone on POSIXlt objects as that won't work for reasons I explained - see my
> last e-mail.
>
> Cheers,
> Simon
>
>
> > On 11/10/2022, at 6:31 AM, Liam Bailey <liam.bailey at liamdbailey.com>
> wrote:
> >
> > Hi all,
> >
> > Thanks Simon for the detailed response, that helps us understand a lot
> better what?s going on! However, with your response in mind, we still
> encounter some behaviour that we did not expect.
> >
> > I?ve included another minimum reproducible example below to expand on
> the situation. In this example, `foo` is a Date object that we generate
> from a numeric input. Following your advice, `bar` is then a POSIXlt object
> where we now explicitly define timezone using argument tz. However, even
> though we are explicit about the timezone the POSIXlt that is generated is
> always in UTC. This then leads to the issues outlined by Alexandre above,
> which we now understand are caused by DST.
> >
> > ``` r
> > #Generate date from numeric
> >     #Not possible to specify tz at this point
> >     foo <- as.Date(33874, origin = "1899-12-30")
> >     dput(foo)
> > #> structure(8305, class = "Date")
> >
> >     #Convert to POSIXlt specifying UTC timezone
> >     bar <- as.POSIXlt(foo, tz = "UTC")
> >     dput(bar)
> > #> structure(list(sec = 0, min = 0L, hour = 0L, mday = 27L, mon = 8L,
> > #>     year = 92L, wday = 0L, yday = 270L, isdst = 0L), class =
> c("POSIXlt",
> > #> "POSIXt"), tzone = "UTC")
> >
> >     #Convert to POSIXlt specifying Europe/Berlin.
> >     #Time zone is still UTC
> >     bar <- as.POSIXlt(foo, tz = "Europe/Berlin")
> >     dput(bar)
> > #> structure(list(sec = 0, min = 0L, hour = 0L, mday = 27L, mon = 8L,
> > #>     year = 92L, wday = 0L, yday = 270L, isdst = 0L), class =
> c("POSIXlt",
> > #> "POSIXt"), tzone = "UTC")
> > ```
> >
> >
> > We noticed that this occurs because the tz argument is not passed to
> `.Internal(Date2POSIXlt())` inside `as.POSIXlt.Date()`.
> >
> > Reading through the documentation for `as.POSIX*` we can see that this
> behaviour is described:
> >
> >       > ?Dates without times are treated as being at midnight UTC.?
> >
> > In this case, if we want to convert a Date object to POSIX* and specify
> a (non-UTC) timezone would the best strategy be to first coerce our Date
> object to character? Alternatively, `lubridate::as_datetime()` does seem to
> recognise the tz argument and convert a Date object to POSIX* with non-UTC
> time zone (see second example below). But it would be nice to know if there
> are subtle differences between these two approaches that we should be aware
> of.
> >
> > ``` r
> > foo <- as.Date(33874, origin = "1899-12-30")
> > dput(foo)
> > #> structure(8305, class = "Date")
> >
> > #Convert to POSIXct specifying UTC timezone
> > bar <- lubridate::as_datetime(foo, tz = "UTC")
> > dput(as.POSIXlt(bar))
> > #> structure(list(sec = 0, min = 0L, hour = 0L, mday = 27L, mon = 8L,
> > #>     year = 92L, wday = 0L, yday = 270L, isdst = 0L), class =
> c("POSIXlt",
> > #> "POSIXt"), tzone = "UTC")
> >
> > #Convert to POSIXct specifying Europe/Berlin
> > bar <- lubridate::as_datetime(foo, tz = "Europe/Berlin")
> > dput(as.POSIXlt(bar))
> > #> structure(list(sec = 0, min = 0L, hour = 0L, mday = 27L, mon = 8L,
> > #>     year = 92L, wday = 0L, yday = 270L, isdst = 1L, zone = "CEST",
> > #>     gmtoff = 7200L), class = c("POSIXlt", "POSIXt"), tzone =
> c("Europe/Berlin",
> > #> "CET", "CEST"))
> > ```
> >
> > Thanks again for all your help.
> > Alex & Liam
> >
> >> On 10 Oct 2022, at 6:40 pm, Hadley Wickham <h.wickham at gmail.com> wrote:
> >>
> >> On Sun, Oct 9, 2022 at 9:31 PM Jeff Newmiller <jdnewmil at dcn.davis.ca.us>
> wrote:
> >>>
> >>> ... which is why tidyverse functions and Python datetime handling irk
> me so much.
> >>>
> >>> Is tidyverse time handling intrinsically broken? They have a standard
> practice of reading time as UTC and then using force_tz to fix the
> "mistake". Same as Python.
> >>
> >> Can you point to any docs that lead you to this conclusion so we can
> >> get them fixed? I strongly encourage people to parse date-times in the
> >> correct time zone; this is why lubridate::ymd_hms() and friends have a
> >> tz argument.
> >>
> >> Hadley
> >>
> >> --
> >> http://hadley.nz
> >
>
>

-- 
Alexandre Courtiol, www.datazoogang.de

	[[alternative HTML version deleted]]


From d|ego@hern@ngomezherrero @end|ng |rom gm@||@com  Mon Oct 10 17:25:49 2022
From: d|ego@hern@ngomezherrero @end|ng |rom gm@||@com (=?UTF-8?Q?Diego_Hernang=C3=B3mez_Herrero?=)
Date: Mon, 10 Oct 2022 17:25:49 +0200
Subject: [R-pkg-devel] Best way forward on a CRAN archived package
Message-ID: <CAA-ibaxp8a5uttw3hci2ZUXit-CjJZf4uaYaqR4zRuD--tAMrw@mail.gmail.com>

Hi:

I have some doubts on how to proceed in this case. I am the developer of
tidyterra, and I received an email from CRAN on 23Sep2022 about an issue on
the package, setting a deadline on 07Oct2022 to correct it.

I sent a patch that was accepted on CRAN on 29Sep2022, that fixed the issue
(or at least I am pretty sure I solved it). I received no further feedback
by CRAN, so I assumed the package was safe. However it was finally archived
on 07Oct2022.

I have already sent an email to CRAN in order to check if they think the
issues still persist (or maybe they missed the patch submission?), but I am
in a rush since there are other packages that depend on tidyterra and they
may be in risk of being archived on CRAN as well.

So my question is: What is the best way forward at this point? Should I
wait to get some feedback from CRAN or is it best to resubmit the package
(I already have a new patch prepared)? I acknowledge that  "The time of the
volunteers is CRAN?s most precious resource" so my goal is to reduce their
burden as much as possible.

Kind regards

-- 



Have a nice day!

	[[alternative HTML version deleted]]


From bbo|ker @end|ng |rom gm@||@com  Mon Oct 10 22:59:35 2022
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Mon, 10 Oct 2022 16:59:35 -0400
Subject: [R-pkg-devel] Issue handling datetimes: possible differences
 between computers
In-Reply-To: <CAERMt4doKk0OFujPOzi7vNz6NrzHV8c56=5=CKMhfWBtyFbY3Q@mail.gmail.com>
References: <CAERMt4eYyTKadiTk6ZVgM5UmVXQ83PbBJQzfBOEW7=KZqsBC+w@mail.gmail.com>
 <24D0D7FC-F6DF-4AB2-B5A3-7E14D631804C@R-project.org>
 <16B5505C-DAE0-4735-AED3-92B86E7A0DD8@dcn.davis.ca.us>
 <CABdHhvFv32jRvm9WHX4dckOjWs1LK=tV=134K-0cOAgzvvDi=A@mail.gmail.com>
 <C86BDDF6-44EE-4B9B-9515-F19F954B5337@liamdbailey.com>
 <03EBA665-067E-45F4-A97B-4E94E98D65A8@R-project.org>
 <CAERMt4doKk0OFujPOzi7vNz6NrzHV8c56=5=CKMhfWBtyFbY3Q@mail.gmail.com>
Message-ID: <2e92f0f1-ddfd-1c74-4805-ac65821ccd81@gmail.com>

   Right now as.POSIXlt.Date() is just

function (x, ...)
.Internal(Date2POSIXlt(x))

How expensive would it be to throw a warning when '...' is provided by 
the user/discarded ??

Alternately, perhaps the documentation could be amended, although I'm 
not quite sure what to suggest. (The sentence Liam refers to, "Dates 
without times are treated as being at midnight UTC." is correct but 
terse ...)


On 2022-10-10 4:50 p.m., Alexandre Courtiol wrote:
> Hi Simon,
> 
> Thanks for the clarification.
> 
>  From a naive developer point of view, we were initially baffled that the
> generic as.POSIXlt() does very different things on a character and on a
> Date input:
> 
> as.POSIXlt(as.character(foo), "Europe/Berlin")
> [1] "1992-09-27 CEST"
> 
> as.POSIXlt(foo, "Europe/Berlin")
> [1] "1992-09-27 UTC"
> 
> Based on what you said, it does make sense: it is only when creating the
> date/time that we want to include the time zone and that only happens when
> we don't already work on a previously created date.
> That is your subtle but spot-on distinction between "parsing" and
> "changing" the time zone.
> 
> Yet, we do find it dangerous that as.POSIXlt.Date() accepts a time zone but
> does nothing of it, especially when the help file starts with:
> 
> Usage
> as.POSIXlt(x, tz = "", ...)
> 
> The behaviour is documented, as Liam reported it, but still, we will almost
> certainly not be the last one tripping on this (without even adding the
> additional issue of as.POSIXct() behaving differently across OS).
> 
> Thanks again,
> 
> Alex & Liam
> 
> 
> 
> 
> On Mon, 10 Oct 2022 at 22:13, Simon Urbanek <simon.urbanek at r-project.org>
> wrote:
> 
>> Liam,
>>
>> I think I have failed to convey my main point in the last e-mail - which
>> was that you want to parse the date/time in the timezone that you care
>> about so in your example that would be
>>
>>> foo <- as.Date(33874, origin = "1899-12-30")
>>> foo
>> [1] "1992-09-27"
>>> as.POSIXlt(as.character(foo), "Europe/Berlin")
>> [1] "1992-09-27 CEST"
>>
>> I was explicitly saying that you do NOT want to simply change the time
>> zone on POSIXlt objects as that won't work for reasons I explained - see my
>> last e-mail.
>>
>> Cheers,
>> Simon
>>
>>
>>> On 11/10/2022, at 6:31 AM, Liam Bailey <liam.bailey at liamdbailey.com>
>> wrote:
>>>
>>> Hi all,
>>>
>>> Thanks Simon for the detailed response, that helps us understand a lot
>> better what?s going on! However, with your response in mind, we still
>> encounter some behaviour that we did not expect.
>>>
>>> I?ve included another minimum reproducible example below to expand on
>> the situation. In this example, `foo` is a Date object that we generate
>> from a numeric input. Following your advice, `bar` is then a POSIXlt object
>> where we now explicitly define timezone using argument tz. However, even
>> though we are explicit about the timezone the POSIXlt that is generated is
>> always in UTC. This then leads to the issues outlined by Alexandre above,
>> which we now understand are caused by DST.
>>>
>>> ``` r
>>> #Generate date from numeric
>>>      #Not possible to specify tz at this point
>>>      foo <- as.Date(33874, origin = "1899-12-30")
>>>      dput(foo)
>>> #> structure(8305, class = "Date")
>>>
>>>      #Convert to POSIXlt specifying UTC timezone
>>>      bar <- as.POSIXlt(foo, tz = "UTC")
>>>      dput(bar)
>>> #> structure(list(sec = 0, min = 0L, hour = 0L, mday = 27L, mon = 8L,
>>> #>     year = 92L, wday = 0L, yday = 270L, isdst = 0L), class =
>> c("POSIXlt",
>>> #> "POSIXt"), tzone = "UTC")
>>>
>>>      #Convert to POSIXlt specifying Europe/Berlin.
>>>      #Time zone is still UTC
>>>      bar <- as.POSIXlt(foo, tz = "Europe/Berlin")
>>>      dput(bar)
>>> #> structure(list(sec = 0, min = 0L, hour = 0L, mday = 27L, mon = 8L,
>>> #>     year = 92L, wday = 0L, yday = 270L, isdst = 0L), class =
>> c("POSIXlt",
>>> #> "POSIXt"), tzone = "UTC")
>>> ```
>>>
>>>
>>> We noticed that this occurs because the tz argument is not passed to
>> `.Internal(Date2POSIXlt())` inside `as.POSIXlt.Date()`.
>>>
>>> Reading through the documentation for `as.POSIX*` we can see that this
>> behaviour is described:
>>>
>>>        > ?Dates without times are treated as being at midnight UTC.?
>>>
>>> In this case, if we want to convert a Date object to POSIX* and specify
>> a (non-UTC) timezone would the best strategy be to first coerce our Date
>> object to character? Alternatively, `lubridate::as_datetime()` does seem to
>> recognise the tz argument and convert a Date object to POSIX* with non-UTC
>> time zone (see second example below). But it would be nice to know if there
>> are subtle differences between these two approaches that we should be aware
>> of.
>>>
>>> ``` r
>>> foo <- as.Date(33874, origin = "1899-12-30")
>>> dput(foo)
>>> #> structure(8305, class = "Date")
>>>
>>> #Convert to POSIXct specifying UTC timezone
>>> bar <- lubridate::as_datetime(foo, tz = "UTC")
>>> dput(as.POSIXlt(bar))
>>> #> structure(list(sec = 0, min = 0L, hour = 0L, mday = 27L, mon = 8L,
>>> #>     year = 92L, wday = 0L, yday = 270L, isdst = 0L), class =
>> c("POSIXlt",
>>> #> "POSIXt"), tzone = "UTC")
>>>
>>> #Convert to POSIXct specifying Europe/Berlin
>>> bar <- lubridate::as_datetime(foo, tz = "Europe/Berlin")
>>> dput(as.POSIXlt(bar))
>>> #> structure(list(sec = 0, min = 0L, hour = 0L, mday = 27L, mon = 8L,
>>> #>     year = 92L, wday = 0L, yday = 270L, isdst = 1L, zone = "CEST",
>>> #>     gmtoff = 7200L), class = c("POSIXlt", "POSIXt"), tzone =
>> c("Europe/Berlin",
>>> #> "CET", "CEST"))
>>> ```
>>>
>>> Thanks again for all your help.
>>> Alex & Liam
>>>
>>>> On 10 Oct 2022, at 6:40 pm, Hadley Wickham <h.wickham at gmail.com> wrote:
>>>>
>>>> On Sun, Oct 9, 2022 at 9:31 PM Jeff Newmiller <jdnewmil at dcn.davis.ca.us>
>> wrote:
>>>>>
>>>>> ... which is why tidyverse functions and Python datetime handling irk
>> me so much.
>>>>>
>>>>> Is tidyverse time handling intrinsically broken? They have a standard
>> practice of reading time as UTC and then using force_tz to fix the
>> "mistake". Same as Python.
>>>>
>>>> Can you point to any docs that lead you to this conclusion so we can
>>>> get them fixed? I strongly encourage people to parse date-times in the
>>>> correct time zone; this is why lubridate::ymd_hms() and friends have a
>>>> tz argument.
>>>>
>>>> Hadley
>>>>
>>>> --
>>>> http://hadley.nz
>>>
>>
>>
> 

-- 
Dr. Benjamin Bolker
Professor, Mathematics & Statistics and Biology, McMaster University
Director, School of Computational Science and Engineering
(Acting) Graduate chair, Mathematics & Statistics
 > E-mail is sent at my convenience; I don't expect replies outside of 
working hours.


From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Mon Oct 10 23:19:36 2022
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Mon, 10 Oct 2022 14:19:36 -0700
Subject: [R-pkg-devel] Issue handling datetimes: possible differences
 between computers
In-Reply-To: <CABdHhvFv32jRvm9WHX4dckOjWs1LK=tV=134K-0cOAgzvvDi=A@mail.gmail.com>
References: <CAERMt4eYyTKadiTk6ZVgM5UmVXQ83PbBJQzfBOEW7=KZqsBC+w@mail.gmail.com>
 <24D0D7FC-F6DF-4AB2-B5A3-7E14D631804C@R-project.org>
 <16B5505C-DAE0-4735-AED3-92B86E7A0DD8@dcn.davis.ca.us>
 <CABdHhvFv32jRvm9WHX4dckOjWs1LK=tV=134K-0cOAgzvvDi=A@mail.gmail.com>
Message-ID: <AF4FFF49-E534-4AFD-A7CE-C1FF9E343733@dcn.davis.ca.us>

I have no idea how to get readxl::read_excel to import a timestamp column in a timezone. It is true that Excel has no concept of timezones, but the data one finds there usually came from a text file at some point. Importing as character is a feasible strategy, but trying to convince an intermediate user to go to that much trouble is a headache when the issue is ignored in the help file.

It is evidently possible to specify a locale input to readr::read_csv, but the default behaviour guesses timestamp columns and assumes "UTC", and a file may contain data from different timezones (UTC and local civil are a common combination). Again, character import and manual conversion are needed.

On October 10, 2022 9:40:42 AM PDT, Hadley Wickham <h.wickham at gmail.com> wrote:
>On Sun, Oct 9, 2022 at 9:31 PM Jeff Newmiller <jdnewmil at dcn.davis.ca.us> wrote:
>>
>> ... which is why tidyverse functions and Python datetime handling irk me so much.
>>
>> Is tidyverse time handling intrinsically broken? They have a standard practice of reading time as UTC and then using force_tz to fix the "mistake". Same as Python.
>
>Can you point to any docs that lead you to this conclusion so we can
>get them fixed? I strongly encourage people to parse date-times in the
>correct time zone; this is why lubridate::ymd_hms() and friends have a
>tz argument.
>
>Hadley
>

-- 
Sent from my phone. Please excuse my brevity.


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Tue Oct 11 08:58:01 2022
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Tue, 11 Oct 2022 08:58:01 +0200
Subject: [R-pkg-devel] Issue handling datetimes: possible differences
 between computers
In-Reply-To: <2e92f0f1-ddfd-1c74-4805-ac65821ccd81@gmail.com>
References: <CAERMt4eYyTKadiTk6ZVgM5UmVXQ83PbBJQzfBOEW7=KZqsBC+w@mail.gmail.com>
 <24D0D7FC-F6DF-4AB2-B5A3-7E14D631804C@R-project.org>
 <16B5505C-DAE0-4735-AED3-92B86E7A0DD8@dcn.davis.ca.us>
 <CABdHhvFv32jRvm9WHX4dckOjWs1LK=tV=134K-0cOAgzvvDi=A@mail.gmail.com>
 <C86BDDF6-44EE-4B9B-9515-F19F954B5337@liamdbailey.com>
 <03EBA665-067E-45F4-A97B-4E94E98D65A8@R-project.org>
 <CAERMt4doKk0OFujPOzi7vNz6NrzHV8c56=5=CKMhfWBtyFbY3Q@mail.gmail.com>
 <2e92f0f1-ddfd-1c74-4805-ac65821ccd81@gmail.com>
Message-ID: <25413.5113.302768.190731@stat.math.ethz.ch>

>>>>> Ben Bolker 
>>>>>     on Mon, 10 Oct 2022 16:59:35 -0400 writes:

    > Right now as.POSIXlt.Date() is just
    > function (x, ...)
    > .Internal(Date2POSIXlt(x))

It has been quite a bit different in R-devel  for a little
while.  NEWS entries  (there are more already, and more coming
on the wide topic)

    * The as.POSIXlt(<POSIXlt>) and as.POSIXct(<POSIXct>) default
      methods now do obey their tz argument, also in this case.

    * as.POSIXlt(<Date>) now does apply a tz (timezone) argument, as
      does as.POSIXct(); partly suggested by Roland Fuss on the R-devel
      mailing list.

and indeed it would have been good had you used (and read) the
R-devel mailing list  which is much more appropriate on the
topic of *changing* base R behavior.




    > How expensive would it be to throw a warning when '...' is provided by 
    > the user/discarded ??

    > Alternately, perhaps the documentation could be amended, although I'm 
    > not quite sure what to suggest. (The sentence Liam refers to, "Dates 
    > without times are treated as being at midnight UTC." is correct but 
    > terse ...)


    > On 2022-10-10 4:50 p.m., Alexandre Courtiol wrote:
    >> Hi Simon,
    >> 
    >> Thanks for the clarification.
    >> 
    >> From a naive developer point of view, we were initially baffled that the
    >> generic as.POSIXlt() does very different things on a character and on a
    >> Date input:
    >> 
    >> as.POSIXlt(as.character(foo), "Europe/Berlin")
    >> [1] "1992-09-27 CEST"
    >> 
    >> as.POSIXlt(foo, "Europe/Berlin")
    >> [1] "1992-09-27 UTC"
    >> 
    >> Based on what you said, it does make sense: it is only when creating the
    >> date/time that we want to include the time zone and that only happens when
    >> we don't already work on a previously created date.
    >> That is your subtle but spot-on distinction between "parsing" and
    >> "changing" the time zone.
    >> 
    >> Yet, we do find it dangerous that as.POSIXlt.Date() accepts a time zone but
    >> does nothing of it, especially when the help file starts with:
    >> 
    >> Usage
    >> as.POSIXlt(x, tz = "", ...)
    >> 
    >> The behaviour is documented, as Liam reported it, but still, we will almost
    >> certainly not be the last one tripping on this (without even adding the
    >> additional issue of as.POSIXct() behaving differently across OS).
    >> 
    >> Thanks again,
    >> 
    >> Alex & Liam
    >> 
    >> 
    >> 
    >> 
    >> On Mon, 10 Oct 2022 at 22:13, Simon Urbanek <simon.urbanek at r-project.org>
    >> wrote:
    >> 
    >>> Liam,
    >>> 
    >>> I think I have failed to convey my main point in the last e-mail - which
    >>> was that you want to parse the date/time in the timezone that you care
    >>> about so in your example that would be
    >>> 
    >>>> foo <- as.Date(33874, origin = "1899-12-30")
    >>>> foo
    >>> [1] "1992-09-27"
    >>>> as.POSIXlt(as.character(foo), "Europe/Berlin")
    >>> [1] "1992-09-27 CEST"
    >>> 
    >>> I was explicitly saying that you do NOT want to simply change the time
    >>> zone on POSIXlt objects as that won't work for reasons I explained - see my
    >>> last e-mail.
    >>> 
    >>> Cheers,
    >>> Simon
    >>> 
    >>> 
    >>>> On 11/10/2022, at 6:31 AM, Liam Bailey <liam.bailey at liamdbailey.com>
    >>> wrote:
    >>>> 
    >>>> Hi all,
    >>>> 
    >>>> Thanks Simon for the detailed response, that helps us understand a lot
    >>> better what?s going on! However, with your response in mind, we still
    >>> encounter some behaviour that we did not expect.
    >>>> 
    >>>> I?ve included another minimum reproducible example below to expand on
    >>> the situation. In this example, `foo` is a Date object that we generate
    >>> from a numeric input. Following your advice, `bar` is then a POSIXlt object
    >>> where we now explicitly define timezone using argument tz. However, even
    >>> though we are explicit about the timezone the POSIXlt that is generated is
    >>> always in UTC. This then leads to the issues outlined by Alexandre above,
    >>> which we now understand are caused by DST.
    >>>> 
    >>>> ``` r
    >>>> #Generate date from numeric
    >>>> #Not possible to specify tz at this point
    >>>> foo <- as.Date(33874, origin = "1899-12-30")
    >>>> dput(foo)
    >>>> #> structure(8305, class = "Date")
    >>>> 
    >>>> #Convert to POSIXlt specifying UTC timezone
    >>>> bar <- as.POSIXlt(foo, tz = "UTC")
    >>>> dput(bar)
    >>>> #> structure(list(sec = 0, min = 0L, hour = 0L, mday = 27L, mon = 8L,
    >>>> #>     year = 92L, wday = 0L, yday = 270L, isdst = 0L), class =
    >>> c("POSIXlt",
    >>>> #> "POSIXt"), tzone = "UTC")
    >>>> 
    >>>> #Convert to POSIXlt specifying Europe/Berlin.
    >>>> #Time zone is still UTC
    >>>> bar <- as.POSIXlt(foo, tz = "Europe/Berlin")
    >>>> dput(bar)
    >>>> #> structure(list(sec = 0, min = 0L, hour = 0L, mday = 27L, mon = 8L,
    >>>> #>     year = 92L, wday = 0L, yday = 270L, isdst = 0L), class =
    >>> c("POSIXlt",
    >>>> #> "POSIXt"), tzone = "UTC")
    >>>> ```
    >>>> 
    >>>> 
    >>>> We noticed that this occurs because the tz argument is not passed to
    >>> `.Internal(Date2POSIXlt())` inside `as.POSIXlt.Date()`.
    >>>> 
    >>>> Reading through the documentation for `as.POSIX*` we can see that this
    >>> behaviour is described:
    >>>> 
    >>>> > ?Dates without times are treated as being at midnight UTC.?
    >>>> 
    >>>> In this case, if we want to convert a Date object to POSIX* and specify
    >>> a (non-UTC) timezone would the best strategy be to first coerce our Date
    >>> object to character? Alternatively, `lubridate::as_datetime()` does seem to
    >>> recognise the tz argument and convert a Date object to POSIX* with non-UTC
    >>> time zone (see second example below). But it would be nice to know if there
    >>> are subtle differences between these two approaches that we should be aware
    >>> of.
    >>>> 
    >>>> ``` r
    >>>> foo <- as.Date(33874, origin = "1899-12-30")
    >>>> dput(foo)
    >>>> #> structure(8305, class = "Date")
    >>>> 
    >>>> #Convert to POSIXct specifying UTC timezone
    >>>> bar <- lubridate::as_datetime(foo, tz = "UTC")
    >>>> dput(as.POSIXlt(bar))
    >>>> #> structure(list(sec = 0, min = 0L, hour = 0L, mday = 27L, mon = 8L,
    >>>> #>     year = 92L, wday = 0L, yday = 270L, isdst = 0L), class =
    >>> c("POSIXlt",
    >>>> #> "POSIXt"), tzone = "UTC")
    >>>> 
    >>>> #Convert to POSIXct specifying Europe/Berlin
    >>>> bar <- lubridate::as_datetime(foo, tz = "Europe/Berlin")
    >>>> dput(as.POSIXlt(bar))
    >>>> #> structure(list(sec = 0, min = 0L, hour = 0L, mday = 27L, mon = 8L,
    >>>> #>     year = 92L, wday = 0L, yday = 270L, isdst = 1L, zone = "CEST",
    >>>> #>     gmtoff = 7200L), class = c("POSIXlt", "POSIXt"), tzone =
    >>> c("Europe/Berlin",
    >>>> #> "CET", "CEST"))
    >>>> ```
    >>>> 
    >>>> Thanks again for all your help.
    >>>> Alex & Liam
    >>>> 
    >>>>> On 10 Oct 2022, at 6:40 pm, Hadley Wickham <h.wickham at gmail.com> wrote:
    >>>>> 
    >>>>> On Sun, Oct 9, 2022 at 9:31 PM Jeff Newmiller <jdnewmil at dcn.davis.ca.us>
    >>> wrote:
    >>>>>> 
>>>>> ... which is why tidyverse functions and Python datetime handling irk
    >>> me so much.
    >>>>>> 
>>>>> Is tidyverse time handling intrinsically broken? They have a standard
    >>> practice of reading time as UTC and then using force_tz to fix the
    >>> "mistake". Same as Python.
    >>>>> 
    >>>>> Can you point to any docs that lead you to this conclusion so we can
    >>>>> get them fixed? I strongly encourage people to parse date-times in the
    >>>>> correct time zone; this is why lubridate::ymd_hms() and friends have a
    >>>>> tz argument.
    >>>>> 
    >>>>> Hadley
    >>>>> 
    >>>>> --
    >>>>> http://hadley.nz
    >>>> 
    >>> 
    >>> 
    >> 

    > -- 
    > Dr. Benjamin Bolker
    > Professor, Mathematics & Statistics and Biology, McMaster University
    > Director, School of Computational Science and Engineering
    > (Acting) Graduate chair, Mathematics & Statistics
    >> E-mail is sent at my convenience; I don't expect replies outside of 
    > working hours.

    > ______________________________________________
    > R-package-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-package-devel


From kry|ov@r00t @end|ng |rom gm@||@com  Tue Oct 11 09:38:35 2022
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Tue, 11 Oct 2022 10:38:35 +0300
Subject: [R-pkg-devel] Identify Original Column Names of Model Matrix
In-Reply-To: <SY2PR01MB30033EFCF280CCC2EB45B06DCD209@SY2PR01MB3003.ausprd01.prod.outlook.com>
References: <SY2PR01MB30033EFCF280CCC2EB45B06DCD209@SY2PR01MB3003.ausprd01.prod.outlook.com>
Message-ID: <20221011103835.0a003d6d@Tarkus>

On Mon, 10 Oct 2022 08:00:04 +0000
Dario Strbenac <dstr7320 at uni.sydney.edu.au> wrote:

> It requires input data to be in one-hot encoding, which is created by
> Matrix::sparse.model.matrix. For further analysis, such as variable
> importance, is there a way to identify which original feature each
> column of a sparse.model.matrix result was derived from?

?Matrix::sparse.model.matrix seems to recommend
MatrixModel::model.Matrix for this reason. The latter function returns
an object with additional slots `assign` and `contrasts`, which should
make it possible to recover the original columns.

-- 
Best regards,
Ivan


From Qu|r|n_St|er @end|ng |rom gmx@de  Tue Oct 11 09:35:10 2022
From: Qu|r|n_St|er @end|ng |rom gmx@de (Quirin Stier)
Date: Tue, 11 Oct 2022 09:35:10 +0200
Subject: [R-pkg-devel] R package development using GPU based on R package
 OpenCL
Message-ID: <570b824b-c239-aa61-c0e2-5a553ebf91ae@gmx.de>

Dear members,

I have difficulties packing my OpenCL functions together as a complete R
package. I did not find any exemplary R package building upon the R
OpenCL Package. Currently I can only run the OpenCL functions as was
presented by the OpenCL examples of the OpenCL package itself. So,
assuming I have working OpenCL files, how can I create the MakeVars (or
whatever necessity needs to be done), in order to create a fully
functional R package?

Best regards,

Quirin


From mtmorg@n@b|oc @end|ng |rom gm@||@com  Tue Oct 11 18:16:03 2022
From: mtmorg@n@b|oc @end|ng |rom gm@||@com (Martin Morgan)
Date: Tue, 11 Oct 2022 16:16:03 +0000
Subject: [R-pkg-devel] 
 R package development using GPU based on R package OpenCL
In-Reply-To: <570b824b-c239-aa61-c0e2-5a553ebf91ae@gmx.de>
References: <570b824b-c239-aa61-c0e2-5a553ebf91ae@gmx.de>
Message-ID: <BY5PR04MB6627ECE1F2AFE9B7C331E49EF9239@BY5PR04MB6627.namprd04.prod.outlook.com>

I?m not particularly experienced with this but wrote a ?proof-of-concept? skeleton of a package at https://github.com/mtmorgan/ocl . The basics are


  *   Import OpenCL in the DESCRIPTION file
  *   Write OpenCL scripts in inst/ (dnorm implemented in OpenCL)
  *   Use the helper function in R/ocl.R to source the code
  *   Provide a user-friendly interface as in R/examples.R (dnorm_ocl)

Martin

From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Quirin Stier <Quirin_Stier at gmx.de>
Date: Tuesday, October 11, 2022 at 10:46 AM
To: r-package-devel at r-project.org <r-package-devel at r-project.org>
Subject: [R-pkg-devel] R package development using GPU based on R package OpenCL
Dear members,

I have difficulties packing my OpenCL functions together as a complete R
package. I did not find any exemplary R package building upon the R
OpenCL Package. Currently I can only run the OpenCL functions as was
presented by the OpenCL examples of the OpenCL package itself. So,
assuming I have working OpenCL files, how can I create the MakeVars (or
whatever necessity needs to be done), in order to create a fully
functional R package?

Best regards,

Quirin

______________________________________________
R-package-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel

	[[alternative HTML version deleted]]


From r@turner @end|ng |rom @uck|@nd@@c@nz  Wed Oct 12 23:36:05 2022
From: r@turner @end|ng |rom @uck|@nd@@c@nz (Rolf Turner)
Date: Thu, 13 Oct 2022 10:36:05 +1300
Subject: [R-pkg-devel] Guidance on splitting up an R package?
In-Reply-To: <CALnEB17ExKcv=+EH4NycFFta+jaF0N1FjbfCphttK=cnBdKgow@mail.gmail.com>
References: <CALnEB17ExKcv=+EH4NycFFta+jaF0N1FjbfCphttK=cnBdKgow@mail.gmail.com>
Message-ID: <20221013103605.6244b4ff@rolf-Latitude-E7470>


On Tue, 4 Oct 2022 16:46:03 +0200
Vincent van Hees <vincentvanhees at gmail.com> wrote:

> Dear all,
> 
> I am looking for guidance (blog posts / books / people with
> expertise) on how to split up an R package that has grown a lot in
> complexity and size. To make it worthwhile, the split needs to ease
> the maintenance and ongoing development.

<SNIP>

Here is some advice based on our experience in splitting the
'spatstat' package (over 170,000 lines of code, now split into 10
sub-packages, which took us about one person-year of work).

See https://github.com/spatstat/spatstat.

1. Don't split your package unless you must.

Splitting a package into sub-packages takes considerable effort.
Maintaining a set of sub-packages requires much more effort than
maintaining a single large package.  We estimate, quasi-seriously,
that the amount of effort required is O(n^2) where n is the number
of sub-packages.  :-)

If you split a package, the CRAN servers will have less work, but
almost everyone else --- developers, maintainers, CRAN team, users
--- will have more work.  You won't even reduce the number of emails
from CRAN: the R package checker complains when a package is large,
but it also complains when the package Depends on many sub-packages.

2. Design the split.

Do not start tinkering until you have a plan.  Print out a list
of the functions (or the R files and help files) in your package,
and think about a simple rule for splitting/grouping them.

The rule for splitting the package needs to be simple and easy
to apply for developers and users.  For example in spatstat we
separated 'exploratory' statistical summaries from 'parametric'
statistical models because we can all remember what that means.
(Note that *users* have to ?apply? the splitting rule in order
to know where to find/look for a particular function after the
package has been split.)

A good splitting rule is something to do with the fundamental purpose
of each function.  The amount of trouble you will have after the
split is related to the number of dependencies (between functions)
that cross these boundaries, and the easiest way to minimise this
is to group the functions according to their fundamental purpose.

Give plenty of notice to the maintainers of packages that depend
on your package.

3. Use 'make' and 'filepp' to implement the split.

Leave the original source files where they are.  Maintain the
original source files as the master copies (i.e. bug fixes are
fixed in these original files).

For each sub-package, set up a new folder/directory with a Makefile
that copies selected source files from the original package into
the new directory.  The Makefile can include rules that invoke
'filepp' to filter the source files. Arguments to the 'filepp' call
can specify the names of variables that will then be substituted
into the source code, or used as variables in 'if/then' directives
to switch on/off blocks of code.  This setup makes it much easier
to keep track of the fate of each file, and to change your mind
if needed.

The "make" tool is extremely powerful and useful, and is ubiquitously
applied by software developers.  However its syntax is not perspicuous,
and can be daunting until you become experienced.  If you are not
completely comfortable with "make" you might find the tutorials at

    https://makefiletutorial.com

and

    https://cs.colby.edu/maxwell/courses/tutorials/maketutor

to be helpful.

For information on filepp see https://www-users.york.ac.uk/~dm26/filepp

4. Do the split offline.

Develop the sub-packages on your own machine until they all pass
the package checker.

5.  Consider the sequence of steps to get the packages on CRAN.

CRAN has no mechanism for submitting a set of packages at the
same time.  Each submission is checked individually, on several
different servers, using several versions of R, using the packages
that are installed on that server.  Hence the submission of your new
sub-packages must be carried out according to a carefully considered
incremental process.

Problems that can occur include:

a. Incompatibility between your new submission and the packages
currently on the particular  server.

b. Cycles (loops) in the dependence graph.  The dependence between
functions in the packages may include loops where A depends on B
which depends on C which depends on A, etc.

c. Hard crashes.  Crashes can occur if you use compiled functions
(e.g. C language) or if your package is byte-compiled.  In either
case, changes to the interface (argument sequence) of compiled or
byte-compiled code in one sub-package can result in an error or
hard crash when another sub-package tries to call a function using
the wrong interface.

There is no sure way to prevent these happening.  The best defence
is to use the version number dependency rules in the DESCRIPTION
file (to prevent the use of incompatible packages), and to allow
about a week for each submitted package to propagate through the
CRAN testing network (to ensure that the latest versions are used).

Despite this, you can expect to have correspondence with CRAN about
such problems.

Allow plenty of time between submitting successive sub-packages.
Give plenty of notice to users and maintainers of dependent packages.

Hope this helps.

cheers,

Rolf Turner (on behalf of Adrian Baddeley and Ege Rubak)

P.S.  I hope that this posting is not too late to be useful.  The
lateness is entirely the fault of Rolf Turner.

R.T.


-- 
Honorary Research Fellow
Department of Statistics
University of Auckland
Phone: +64-9-373-7599 ext. 88276


From @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org  Thu Oct 13 03:16:20 2022
From: @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org (Spencer Graves)
Date: Wed, 12 Oct 2022 20:16:20 -0500
Subject: [R-pkg-devel] =?utf-8?q?Problems_with_news_in_=E2=80=98NEWS?=
 =?utf-8?b?4oCZ?=
In-Reply-To: <20221013005510.eff91cf747f7bc84@rhub.io>
References: <20221013005510.eff91cf747f7bc84@rhub.io>
Message-ID: <f1198681-8078-8b40-3aa2-63bec1066b73@effectivedefense.org>

Hello, All:


	  devtools::check_rhub("Ecdat") complained:


Problems with news in ?NEWS?:
    Cannot process chunk/lines:
      2022-10-12:
    Cannot process chunk/lines:
      Ecdat 0.4-2 updated "terrorism" to 2020.
...


	  For more see below.  This is with the current version of


https://github.com/sbgraves237/Ecdat


	  I copied NEWS to NEWS.md and tried to format it as described in:


https://r-pkgs.org/other-markdown.html#news


	  Sadly, I still get the same error.  It seems to be ignoring my 
NEWS.md file and continuing to tell me I haven't fixed NEWS.


	  What do you suggest?
	  Thanks,
	  Spencer Graves


-------- Forwarded Message --------
Subject: 	Ecdat 0.4-2: NOTE
Date: 	Thu, 13 Oct 2022 00:55:10 +0000
From: 	R-hub builder <support at rhub.io>
To: 	spencer.graves at effectivedefense.org



Ecdat 0.4-2: NOTE
	
Ecdat 0.4-2: NOTE
*Build ID:* 	|Ecdat_0.4-2.tar.gz-aec6a2cb4b8a43cfbab0405f54e67c64|
*Platform:* 	Windows Server 2022, R-devel, 64 bit
*Submitted:* 	5 minutes 25 seconds ago
*Build time:* 	5 minutes 16.2 seconds


       NOTES:

* checking package subdirectories ... NOTE
Problems with news in 'NEWS':
    Cannot process chunk/lines:
      2022-10-12:
    Cannot process chunk/lines:
      Ecdat 0.4-2 updated "terrorism" to 2020.
    Cannot process chunk/lines:
      2022-07-01:
    Cannot process chunk/lines:
      Ecdat 0.4-1 replaced non-breaking spaces that used Latin-1 
encoding with " " in 4 "demoFiles/NIPA6.16*.csv" files, because the said 
non-breaking spaces were not valid in UTF-8 and were rejected by a 
development version of R.
      2022-06-14:
    Cannot process chunk/lines:
      Ecdat 0.4-0 adds new datasets USnewspapers and USPS (US Postal 
Service) while adding federal government budget data to USGDPpresidents.
    Cannot process chunk/lines:
      2020-11-01:
    Cannot process chunk/lines:
      Ecdat 0.3-9 deletes ~demoFiles/*_data.xls, because they were used 
to test Ecfun::financialDataFiles and Ecfun::readFinancialDataFiles, and 
those two functions were removed, because they used gdata, which was not 
being maintained, and the work required to maintain them exceeded the 
current need of the maintainer.
    Cannot process chunk/lines:
      2020-02-08:  Ecdat 0.3-6 adds variables popM, popYr, GDP_B, and 
GDPyr to data set "nuclearWeaponStates".
    Cannot process chunk/lines:
      2019-12-05:  Ecdat 0.3-5 corrects the description of Crime$density 
to read, "hundreds of people per square mile" from "people per square 
mile".  Thanks to Yungfong "Frank" Tang for identifying this error and 
confirming the needed correction.
    Cannot process chunk/lines:
      2019-11-05:  Ecdat 0.3-4 adds variable 'firstTestYr' to 
'nuclearWeaponStates'.  It also corrects an error in the 'Mroz' data 
set, in that "work" had the names of the levels incorrectly swapped.
    Cannot process chunk/lines:
      Ecdat 0.3-3 adds data set "nuclearWeaponStates", which might be 
used to model the probability distribution of the time to the next new 
nuclear weapon state.
    Cannot process chunk/lines:

* checking for detritus in the temp directory ... NOTE
Found the following files/directories:
    'lastMiKTeXException'

See the full build log: HTML 
<https://builder.r-hub.io/status/Ecdat_0.4-2.tar.gz-aec6a2cb4b8a43cfbab0405f54e67c64>, 
text 
<https://builder.r-hub.io/status/original/Ecdat_0.4-2.tar.gz-aec6a2cb4b8a43cfbab0405f54e67c64>, 
artifacts 
<https://artifacts.r-hub.io/Ecdat_0.4-2.tar.gz-aec6a2cb4b8a43cfbab0405f54e67c64>. 

Have questions, suggestions or want to report a bug? Please file an 
issue ticket at GitHub <https://github.com/r-hub/rhub/issues>. Thank You 
for using the R-hub builder.

(c) 2016 The R Consortium


From kry|ov@r00t @end|ng |rom gm@||@com  Thu Oct 13 11:34:19 2022
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Thu, 13 Oct 2022 12:34:19 +0300
Subject: [R-pkg-devel] =?utf-8?q?Problems_with_news_in_=E2=80=98NEWS?=
 =?utf-8?b?4oCZ?=
In-Reply-To: <f1198681-8078-8b40-3aa2-63bec1066b73@effectivedefense.org>
References: <20221013005510.eff91cf747f7bc84@rhub.io>
 <f1198681-8078-8b40-3aa2-63bec1066b73@effectivedefense.org>
Message-ID: <20221013123419.4affc14e@arachnoid>

? Wed, 12 Oct 2022 20:16:20 -0500
Spencer Graves <spencer.graves at effectivedefense.org> ?????:

> I copied NEWS to NEWS.md and tried to format it as described in:
> 
> 
> https://r-pkgs.org/other-markdown.html#news
> 
> 
> 	  Sadly, I still get the same error.  It seems to be ignoring
> my NEWS.md file and continuing to tell me I haven't fixed NEWS.

Does it help to remove the NEWS after you've created NEWS.md in the
root directory of your package? In theory, NEWS.md takes precedence
over everything except inst/NEWS.Rd, but maybe that's not the case when
checking the package.

For the record, both the plain text format R expects in the NEWS file
and the Markdown format for NEWS.md are described in help(news).

-- 
Best regards,
Ivan


From @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org  Thu Oct 13 17:29:28 2022
From: @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org (Spencer Graves)
Date: Thu, 13 Oct 2022 10:29:28 -0500
Subject: [R-pkg-devel] =?utf-8?q?Problems_with_news_in_=E2=80=98NEWS?=
 =?utf-8?b?4oCZ?=
In-Reply-To: <20221013123419.4affc14e@arachnoid>
References: <20221013005510.eff91cf747f7bc84@rhub.io>
 <f1198681-8078-8b40-3aa2-63bec1066b73@effectivedefense.org>
 <20221013123419.4affc14e@arachnoid>
Message-ID: <c5102970-e410-8e61-c1a5-7981b9a83393@effectivedefense.org>



On 10/13/22 4:34 AM, Ivan Krylov wrote:
> ? Wed, 12 Oct 2022 20:16:20 -0500
> Spencer Graves <spencer.graves at effectivedefense.org> ?????:
> 
>> I copied NEWS to NEWS.md and tried to format it as described in:
>>
>>
>> https://r-pkgs.org/other-markdown.html#news
>>
>>
>> 	  Sadly, I still get the same error.  It seems to be ignoring
>> my NEWS.md file and continuing to tell me I haven't fixed NEWS.
> 
> Does it help to remove the NEWS after you've created NEWS.md in the
> root directory of your package? In theory, NEWS.md takes precedence
> over everything except inst/NEWS.Rd, but maybe that's not the case when
> checking the package.


Thanks.  I did that, and it worked.

> 
> For the record, both the plain text format R expects in the NEWS file
> and the Markdown format for NEWS.md are described in help(news).
> 

Thanks, I missed that reference but managed to find something that worked.


	  Spencer


From roy@mende|@@ohn @end|ng |rom no@@@gov  Fri Oct 14 17:51:28 2022
From: roy@mende|@@ohn @end|ng |rom no@@@gov (Roy Mendelssohn - NOAA Federal)
Date: Fri, 14 Oct 2022 08:51:28 -0700
Subject: [R-pkg-devel] failing CRAN nightly builds
Message-ID: <03D1BB9F-72A9-48BD-9CCB-E94F370027B5@noaa.gov>

Hi All:

About a week ago I received a notice that my package 'rerddapXtracto' was failing nightly builds and i needed to fix it or face being archived.  Fair enough.  The next day I submitted a fix.  My package has one example that always comes in just above the time that is checked for.  That this is so is in the CRAN notes.

After I got the note that the new package failed the automated test for this reason,  I responded with this fact and asked it to be reconsidered, as it has been in the past.  Since then,  I have sent two more reminders with no response.  I realize CRAN folks are pretty busy,  but I really don't want the package removed from CRAN,  so am mainly hoping this email will give a little nudge,  or if people have other suggestions.

Thanks,

-Roy



**********************
"The contents of this message do not reflect any position of the U.S. Government or NOAA."
**********************
Roy Mendelssohn
Supervisory Operations Research Analyst
NOAA/NMFS
Environmental Research Division
Southwest Fisheries Science Center
***Note new street address***
110 McAllister Way
Santa Cruz, CA 95060
Phone: (831)-420-3666
Fax: (831) 420-3980
e-mail: Roy.Mendelssohn at noaa.gov www: https://www.pfeg.noaa.gov/

"Old age and treachery will overcome youth and skill."
"From those who have been given much, much will be expected" 
"the arc of the moral universe is long, but it bends toward justice" -MLK Jr.


From h@w|ckh@m @end|ng |rom gm@||@com  Sun Oct 16 18:34:34 2022
From: h@w|ckh@m @end|ng |rom gm@||@com (Hadley Wickham)
Date: Sun, 16 Oct 2022 11:34:34 -0500
Subject: [R-pkg-devel] Best way forward on a CRAN archived package
In-Reply-To: <CAA-ibaxp8a5uttw3hci2ZUXit-CjJZf4uaYaqR4zRuD--tAMrw@mail.gmail.com>
References: <CAA-ibaxp8a5uttw3hci2ZUXit-CjJZf4uaYaqR4zRuD--tAMrw@mail.gmail.com>
Message-ID: <CABdHhvGBK_R3C-Qdc8fU34dm2LhyD3sLKTp2qzKZPSdH-JJsaA@mail.gmail.com>

I?d suggest resubmitting, after ensuring that R CMD  check runs without any
notes, warnings, or errors.

Hadley

On Monday, October 10, 2022, Diego Hernang?mez Herrero <
diego.hernangomezherrero at gmail.com> wrote:

> Hi:
>
> I have some doubts on how to proceed in this case. I am the developer of
> tidyterra, and I received an email from CRAN on 23Sep2022 about an issue on
> the package, setting a deadline on 07Oct2022 to correct it.
>
> I sent a patch that was accepted on CRAN on 29Sep2022, that fixed the issue
> (or at least I am pretty sure I solved it). I received no further feedback
> by CRAN, so I assumed the package was safe. However it was finally archived
> on 07Oct2022.
>
> I have already sent an email to CRAN in order to check if they think the
> issues still persist (or maybe they missed the patch submission?), but I am
> in a rush since there are other packages that depend on tidyterra and they
> may be in risk of being archived on CRAN as well.
>
> So my question is: What is the best way forward at this point? Should I
> wait to get some feedback from CRAN or is it best to resubmit the package
> (I already have a new patch prepared)? I acknowledge that  "The time of the
> volunteers is CRAN?s most precious resource" so my goal is to reduce their
> burden as much as possible.
>
> Kind regards
>
> --
>
>
>
> Have a nice day!
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


-- 
http://hadley.nz

	[[alternative HTML version deleted]]


From d|ego@hern@ngomezherrero @end|ng |rom gm@||@com  Sun Oct 16 18:44:39 2022
From: d|ego@hern@ngomezherrero @end|ng |rom gm@||@com (=?UTF-8?Q?Diego_Hernang=C3=B3mez_Herrero?=)
Date: Sun, 16 Oct 2022 18:44:39 +0200
Subject: [R-pkg-devel] Best way forward on a CRAN archived package
In-Reply-To: <CABdHhvGBK_R3C-Qdc8fU34dm2LhyD3sLKTp2qzKZPSdH-JJsaA@mail.gmail.com>
References: <CAA-ibaxp8a5uttw3hci2ZUXit-CjJZf4uaYaqR4zRuD--tAMrw@mail.gmail.com>
 <CABdHhvGBK_R3C-Qdc8fU34dm2LhyD3sLKTp2qzKZPSdH-JJsaA@mail.gmail.com>
Message-ID: <CAA-ibay_293h5W26CEhZe8VT8k30=-Jm++XYJ=8X5YjBQVSRxA@mail.gmail.com>

Thanks all for your answers. I resubmitted last week and the package is
back on CRAN :)

El El dom, 16 oct 2022 a las 18:34, Hadley Wickham <h.wickham at gmail.com>
escribi?:

> I?d suggest resubmitting, after ensuring that R CMD  check runs without
> any notes, warnings, or errors.
>
> Hadley
>
>
> On Monday, October 10, 2022, Diego Hernang?mez Herrero <
> diego.hernangomezherrero at gmail.com> wrote:
>
>> Hi:
>>
>> I have some doubts on how to proceed in this case. I am the developer of
>> tidyterra, and I received an email from CRAN on 23Sep2022 about an issue
>> on
>> the package, setting a deadline on 07Oct2022 to correct it.
>>
>> I sent a patch that was accepted on CRAN on 29Sep2022, that fixed the
>> issue
>> (or at least I am pretty sure I solved it). I received no further feedback
>> by CRAN, so I assumed the package was safe. However it was finally
>> archived
>> on 07Oct2022.
>>
>> I have already sent an email to CRAN in order to check if they think the
>> issues still persist (or maybe they missed the patch submission?), but I
>> am
>> in a rush since there are other packages that depend on tidyterra and they
>> may be in risk of being archived on CRAN as well.
>>
>> So my question is: What is the best way forward at this point? Should I
>> wait to get some feedback from CRAN or is it best to resubmit the package
>> (I already have a new patch prepared)? I acknowledge that  "The time of
>> the
>> volunteers is CRAN?s most precious resource" so my goal is to reduce their
>> burden as much as possible.
>>
>> Kind regards
>>
>> --
>>
>>
>>
>> Have a nice day!
>>
>>         [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>
>
> --
> http://hadley.nz
>
-- 



Have a nice day!

	[[alternative HTML version deleted]]


From gor@n@bro@trom @end|ng |rom umu@@e  Mon Oct 17 11:07:25 2022
From: gor@n@bro@trom @end|ng |rom umu@@e (=?UTF-8?Q?G=c3=b6ran_Brostr=c3=b6m?=)
Date: Mon, 17 Oct 2022 11:07:25 +0200
Subject: [R-pkg-devel] Invalid UTF-8
Message-ID: <5096fab3-e7db-ad84-eb1a-37db270944ce@umu.se>

Hello,

I suddenly get Warnings from  CRAN (clang):

warning: invalid UTF-8 in comment [-Winvalid-utf8]
(It's my name)

So I wonder: How do I make valid UTF-8 in comment?
(I already have "Encoding: UTF-8" in the DESCRIPTION file)

Thanks, G?ran


From kry|ov@r00t @end|ng |rom gm@||@com  Mon Oct 17 11:18:25 2022
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Mon, 17 Oct 2022 12:18:25 +0300
Subject: [R-pkg-devel] Invalid UTF-8
In-Reply-To: <5096fab3-e7db-ad84-eb1a-37db270944ce@umu.se>
References: <5096fab3-e7db-ad84-eb1a-37db270944ce@umu.se>
Message-ID: <20221017121825.16af0ff3@arachnoid>

? Mon, 17 Oct 2022 11:07:25 +0200
G?ran Brostr?m <goran.brostrom at umu.se> ?????:

> warning: invalid UTF-8 in comment [-Winvalid-utf8]
> (It's my name)
> 
> So I wonder: How do I make valid UTF-8 in comment?

The file GB_zeroin.c is saved in Latin-1 encoding. The warning should
go away once you convert it to UTF-8.

-- 
Best regards,
Ivan


From gor@n@bro@trom @end|ng |rom umu@@e  Mon Oct 17 13:20:25 2022
From: gor@n@bro@trom @end|ng |rom umu@@e (=?UTF-8?Q?G=c3=b6ran_Brostr=c3=b6m?=)
Date: Mon, 17 Oct 2022 13:20:25 +0200
Subject: [R-pkg-devel] Invalid UTF-8
In-Reply-To: <20221017121825.16af0ff3@arachnoid>
References: <5096fab3-e7db-ad84-eb1a-37db270944ce@umu.se>
 <20221017121825.16af0ff3@arachnoid>
Message-ID: <0a0d81f0-43e3-240a-5be6-7fd661895346@umu.se>

Thanks Ivan,

I found two simple ways to convert this old file to UTF-8:

(i) In emacs, C-x <RET> f <RET> (default is utf-8)

(ii) In RStudio, set Tools-Global Options-Code-Saving-
Default text encoding  to UTF-8

No problem with new files.

G;ran (US keyboard)

Den 2022-10-17 kl. 11:18, skrev Ivan Krylov:
> ? Mon, 17 Oct 2022 11:07:25 +0200
> G?ran Brostr?m <goran.brostrom at umu.se> ?????:
> 
>> warning: invalid UTF-8 in comment [-Winvalid-utf8]
>> (It's my name)
>>
>> So I wonder: How do I make valid UTF-8 in comment?
> 
> The file GB_zeroin.c is saved in Latin-1 encoding. The warning should
> go away once you convert it to UTF-8.
>


From hj@h@jee@h @end|ng |rom utm@@c@mu  Tue Oct 18 14:11:46 2022
From: hj@h@jee@h @end|ng |rom utm@@c@mu (Jahajeeah, Havisha)
Date: Tue, 18 Oct 2022 16:11:46 +0400
Subject: [R-pkg-devel] Help - Shiny app on CRAN
In-Reply-To: <CAKU6PFVuGhq8ZUGbD=B1p3gLr4bA2LJ-kPM5dcTp=Ggfxn53CA@mail.gmail.com>
References: <CAKU6PFVuGhq8ZUGbD=B1p3gLr4bA2LJ-kPM5dcTp=Ggfxn53CA@mail.gmail.com>
Message-ID: <CAKU6PFXqRRJN9Gq339u+-=VdWz9KBrUsf7K88BCxjkdLp3vO5A@mail.gmail.com>

Hello,

Grateful if you could please help with the following comments:

Please add small executable examples in your Rd-files to illustrate the
use of the exported function but also enable automatic testing.

The greymodels package loads data from spreadsheets and each model accepts
a set of data and outputs the fitted and
predicted values. For instance, to load data and model it using the EPGM
(1; 1) model, we follow
Univariate Models > Background Values > EPGM (1; 1) model > Data Input

How do I incorporate that into executable examples?

Thanks and regards,
Havisha

On Mon, Sep 26, 2022 at 7:14 PM Jahajeeah, Havisha <hjahajeeah at utm.ac.mu>
wrote:

> Dear team,
>
> I have submitted the package GreymodelsPackage_1.0.tar.gz to CRAN and it's
> a shiny app.
>
> However, I received  the following
>
> * using log directory 'd:/RCompile/CRANincoming/R-devel/GreymodelsPackage.Rcheck'
> * using R Under development (unstable) (2022-09-25 r82916 ucrt)
> * using platform: x86_64-w64-mingw32 (64-bit)
> * using session charset: UTF-8
> * checking for file 'GreymodelsPackage/DESCRIPTION' ... OK
> * checking extension type ... ERROR
> Extensions with Type 'Shiny application' cannot be checked.
> * DONE
> Status: 1 ERROR
>
> I am not sure  how to fix the problems and I would appreciate your help on how to resolve this issue.
>
> Thanks and regards,
>
> Havisha Jahajeeah
>
>

	[[alternative HTML version deleted]]


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Tue Oct 18 14:28:29 2022
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Tue, 18 Oct 2022 14:28:29 +0200
Subject: [R-pkg-devel] Help - Shiny app on CRAN
In-Reply-To: <CAKU6PFXqRRJN9Gq339u+-=VdWz9KBrUsf7K88BCxjkdLp3vO5A@mail.gmail.com>
References: <CAKU6PFVuGhq8ZUGbD=B1p3gLr4bA2LJ-kPM5dcTp=Ggfxn53CA@mail.gmail.com>
 <CAKU6PFXqRRJN9Gq339u+-=VdWz9KBrUsf7K88BCxjkdLp3vO5A@mail.gmail.com>
Message-ID: <0092154c-395f-b172-4624-309b9a5b11f8@statistik.tu-dortmund.de>

See my response to the list.

Best,
Uwe Ligges


On 18.10.2022 14:11, Jahajeeah, Havisha wrote:
> Hello,
> 
> Grateful if you could please help with the following comments:
> 
> Please add small executable examples in your Rd-files to illustrate the
> use of the exported function but also enable automatic testing.
> 
> The greymodels package loads data from spreadsheets and each model accepts
> a set of data and outputs the fitted and
> predicted values. For instance, to load data and model it using the EPGM
> (1; 1) model, we follow
> Univariate Models > Background Values > EPGM (1; 1) model > Data Input
> 
> How do I incorporate that into executable examples?
> 
> Thanks and regards,
> Havisha
> 
> On Mon, Sep 26, 2022 at 7:14 PM Jahajeeah, Havisha <hjahajeeah at utm.ac.mu>
> wrote:
> 
>> Dear team,
>>
>> I have submitted the package GreymodelsPackage_1.0.tar.gz to CRAN and it's
>> a shiny app.
>>
>> However, I received  the following
>>
>> * using log directory 'd:/RCompile/CRANincoming/R-devel/GreymodelsPackage.Rcheck'
>> * using R Under development (unstable) (2022-09-25 r82916 ucrt)
>> * using platform: x86_64-w64-mingw32 (64-bit)
>> * using session charset: UTF-8
>> * checking for file 'GreymodelsPackage/DESCRIPTION' ... OK
>> * checking extension type ... ERROR
>> Extensions with Type 'Shiny application' cannot be checked.
>> * DONE
>> Status: 1 ERROR
>>
>> I am not sure  how to fix the problems and I would appreciate your help on how to resolve this issue.
>>
>> Thanks and regards,
>>
>> Havisha Jahajeeah
>>
>>
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From edd @end|ng |rom deb|@n@org  Tue Oct 18 16:37:41 2022
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Tue, 18 Oct 2022 09:37:41 -0500
Subject: [R-pkg-devel] Invalid UTF-8
In-Reply-To: <0a0d81f0-43e3-240a-5be6-7fd661895346@umu.se>
References: <5096fab3-e7db-ad84-eb1a-37db270944ce@umu.se>
 <20221017121825.16af0ff3@arachnoid>
 <0a0d81f0-43e3-240a-5be6-7fd661895346@umu.se>
Message-ID: <25422.47669.756325.967808@rob.eddelbuettel.com>


On 17 October 2022 at 13:20, G?ran Brostr?m wrote:
| Thanks Ivan,
| 
| I found two simple ways to convert this old file to UTF-8:
| 
| (i) In emacs, C-x <RET> f <RET> (default is utf-8)

That's a good ti[. I had actually hand-edited two lines down to 'seven bits'
instead of this.  Umlaute, accents and special characters for the win! Thanks
Ivan and G?ran.

Also, reproducing this warning required both clang(++)-15 and an explicit
setting of -Winvalid-utf8.

| (ii) In RStudio, set Tools-Global Options-Code-Saving-
| Default text encoding  to UTF-8
| 
| No problem with new files.
| 
| G;ran (US keyboard)

:)

A fortunes candidate?

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From c@chw@rz@t@t@|uc@ @end|ng |rom gm@||@com  Tue Oct 18 20:51:46 2022
From: c@chw@rz@t@t@|uc@ @end|ng |rom gm@||@com (Carl Schwarz)
Date: Tue, 18 Oct 2022 11:51:46 -0700
Subject: [R-pkg-devel] Error when install binary from CRAN but not if
 install from source - Macintoh, lme4, Matrix, buildmer
Message-ID: <CADtpigZfFG8oNO0NF2g6tku2whAFL2ycF_2JbWSL=AGkRf2F5w@mail.gmail.com>

I've run into a problem where if you install the lme4, Matrix, and buildmer
packages using the binaries from CRAN on a Mac, I get an error message
about a missing method, but if I install the same packages from SOURCE, the
code runs fine.

I would have thought that installing from source or using the binary
should look the same.

Any suggestions on how to proceed to resolve this issue?

The maintainer of buildmer is also puzzled.
You can follow the issue in more detail at:
    https://github.com/cvoeten/buildmer/issues/20

This is way above my paygrade...

Carl Schwarz

------------------------------------------------------

Tried this on an intel-Mac and arm-Mac with the same result.
Works fine on Windows machines under both scenarios.

Here is a test example

library(buildmer)
library(lme4)

nrow <- 100

test <- data.frame(x01=runif(nrow),
                   y=runif(nrow)<.1, block=as.factor(floor((1:nrow)/50)))
head(test)


fit.model <- lme4::glmer(y~x01 + (1|block), data=test,
                   family=binomial(link="logit"))
fit.model # this works

class(fit.model)

summary(fit.model)
# gives the following error message
Error in diag(from, names = FALSE) : object 'dgeMatrix_getDiag' not found

A pdf document showing output is attached (shows the sessionInfo etc).

When you install the buildmer and Matrix packages from SOURCE, it runs fine.

I've tried all combinations of installing binary/source and only if both
packages (Matrix and buidmer) are installed from source, does the code run.

Same issue on an intel-Mac.
Same issue when running under the R directly rather than Rstudio on a Mac.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: lme4-problem.pdf
Type: application/pdf
Size: 127190 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-package-devel/attachments/20221018/bfdca812/attachment.pdf>

From hj@h@jee@h @end|ng |rom utm@@c@mu  Tue Oct 18 20:58:05 2022
From: hj@h@jee@h @end|ng |rom utm@@c@mu (Jahajeeah, Havisha)
Date: Tue, 18 Oct 2022 22:58:05 +0400
Subject: [R-pkg-devel] Help - Shiny app on CRAN
In-Reply-To: <0092154c-395f-b172-4624-309b9a5b11f8@statistik.tu-dortmund.de>
References: <CAKU6PFVuGhq8ZUGbD=B1p3gLr4bA2LJ-kPM5dcTp=Ggfxn53CA@mail.gmail.com>
 <CAKU6PFXqRRJN9Gq339u+-=VdWz9KBrUsf7K88BCxjkdLp3vO5A@mail.gmail.com>
 <0092154c-395f-b172-4624-309b9a5b11f8@statistik.tu-dortmund.de>
Message-ID: <CAKU6PFUf17LtF52V9ztnq-uhh5_Bx9WfNKfCHap6CLtPtnrm0Q@mail.gmail.com>

Thank you.

On Tue, Oct 18, 2022 at 4:28 PM Uwe Ligges <ligges at statistik.tu-dortmund.de>
wrote:

> See my response to the list.
>
> Best,
> Uwe Ligges
>
>
> On 18.10.2022 14:11, Jahajeeah, Havisha wrote:
> > Hello,
> >
> > Grateful if you could please help with the following comments:
> >
> > Please add small executable examples in your Rd-files to illustrate the
> > use of the exported function but also enable automatic testing.
> >
> > The greymodels package loads data from spreadsheets and each model
> accepts
> > a set of data and outputs the fitted and
> > predicted values. For instance, to load data and model it using the EPGM
> > (1; 1) model, we follow
> > Univariate Models > Background Values > EPGM (1; 1) model > Data Input
> >
> > How do I incorporate that into executable examples?
> >
> > Thanks and regards,
> > Havisha
> >
> > On Mon, Sep 26, 2022 at 7:14 PM Jahajeeah, Havisha <hjahajeeah at utm.ac.mu
> >
> > wrote:
> >
> >> Dear team,
> >>
> >> I have submitted the package GreymodelsPackage_1.0.tar.gz to CRAN and
> it's
> >> a shiny app.
> >>
> >> However, I received  the following
> >>
> >> * using log directory
> 'd:/RCompile/CRANincoming/R-devel/GreymodelsPackage.Rcheck'
> >> * using R Under development (unstable) (2022-09-25 r82916 ucrt)
> >> * using platform: x86_64-w64-mingw32 (64-bit)
> >> * using session charset: UTF-8
> >> * checking for file 'GreymodelsPackage/DESCRIPTION' ... OK
> >> * checking extension type ... ERROR
> >> Extensions with Type 'Shiny application' cannot be checked.
> >> * DONE
> >> Status: 1 ERROR
> >>
> >> I am not sure  how to fix the problems and I would appreciate your help
> on how to resolve this issue.
> >>
> >> Thanks and regards,
> >>
> >> Havisha Jahajeeah
> >>
> >>
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Tue Oct 18 21:17:33 2022
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Tue, 18 Oct 2022 15:17:33 -0400
Subject: [R-pkg-devel] Error when install binary from CRAN but not if
 install from source - Macintoh, lme4, Matrix, buildmer
In-Reply-To: <CADtpigZfFG8oNO0NF2g6tku2whAFL2ycF_2JbWSL=AGkRf2F5w@mail.gmail.com>
References: <CADtpigZfFG8oNO0NF2g6tku2whAFL2ycF_2JbWSL=AGkRf2F5w@mail.gmail.com>
Message-ID: <485893d7-d898-0f04-957d-a81d5f6e5d03@gmail.com>

I see the same thing.  This sounds like a problem in the handling of 
methods that has been discussed somewhat recently:

   https://stat.ethz.ch/pipermail/r-devel/2022-September/081971.html

The problem is that when the binary is built, some code from other 
packages is kept as part of it.  When that other package is updated, you 
need a new source install of your own package (or a rebuild at CRAN to 
replace the binary) to cache the new code.

This can also be done explicitly by package startup code; I think this 
thread

   https://stat.ethz.ch/pipermail/r-package-devel/2022q3/008481.html

turned out to be a case where rstan was caching something, and an update 
to ggplot2 didn't work with the cached data.  Given the error message, 
your issue sounds more like the first one.

I don't recall if there was a resolution.  Maybe you can ask the CRAN 
maintainers to rebuild buildmer.

Duncan Murdoch





On 18/10/2022 2:51 p.m., Carl Schwarz wrote:
> I've run into a problem where if you install the lme4, Matrix, and buildmer
> packages using the binaries from CRAN on a Mac, I get an error message
> about a missing method, but if I install the same packages from SOURCE, the
> code runs fine.
> 
> I would have thought that installing from source or using the binary
> should look the same.
> 
> Any suggestions on how to proceed to resolve this issue?
> 
> The maintainer of buildmer is also puzzled.
> You can follow the issue in more detail at:
>      https://github.com/cvoeten/buildmer/issues/20
> 
> This is way above my paygrade...
> 
> Carl Schwarz
> 
> ------------------------------------------------------
> 
> Tried this on an intel-Mac and arm-Mac with the same result.
> Works fine on Windows machines under both scenarios.
> 
> Here is a test example
> 
> library(buildmer)
> library(lme4)
> 
> nrow <- 100
> 
> test <- data.frame(x01=runif(nrow),
>                     y=runif(nrow)<.1, block=as.factor(floor((1:nrow)/50)))
> head(test)
> 
> 
> fit.model <- lme4::glmer(y~x01 + (1|block), data=test,
>                     family=binomial(link="logit"))
> fit.model # this works
> 
> class(fit.model)
> 
> summary(fit.model)
> # gives the following error message
> Error in diag(from, names = FALSE) : object 'dgeMatrix_getDiag' not found
> 
> A pdf document showing output is attached (shows the sessionInfo etc).
> 
> When you install the buildmer and Matrix packages from SOURCE, it runs fine.
> 
> I've tried all combinations of installing binary/source and only if both
> packages (Matrix and buidmer) are installed from source, does the code run.
> 
> Same issue on an intel-Mac.
> Same issue when running under the R directly rather than Rstudio on a Mac.
> 
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From pd@|gd @end|ng |rom gm@||@com  Tue Oct 18 21:53:42 2022
From: pd@|gd @end|ng |rom gm@||@com (peter dalgaard)
Date: Tue, 18 Oct 2022 21:53:42 +0200
Subject: [R-pkg-devel] Invalid UTF-8
In-Reply-To: <25422.47669.756325.967808@rob.eddelbuettel.com>
References: <5096fab3-e7db-ad84-eb1a-37db270944ce@umu.se>
 <20221017121825.16af0ff3@arachnoid>
 <0a0d81f0-43e3-240a-5be6-7fd661895346@umu.se>
 <25422.47669.756325.967808@rob.eddelbuettel.com>
Message-ID: <D9CE8114-B2A9-43C4-A8D0-E1175CE8B33A@gmail.com>



> On 18 Oct 2022, at 16:37 , Dirk Eddelbuettel <edd at debian.org> wrote:
> 
> 
> On 17 October 2022 at 13:20, G?ran Brostr?m wrote:
> 
> | G;ran (US keyboard)
> 
> :)
> 
> A fortunes candidate?
> 

Incidentally, he's G?ran on a DK keyboard but G?ran on an NO one. The three Scandinavian languages have the same three extra letters (???), but Swedish writes the former two with diaeresis (like German), reverses their order in the alphabet (???), and switches ? and ? on the keyboard (compared to Danish, that is). Norwegian writes and sorts like Danish, but has the same key reversion as Swedish. "Brotherly love"...

-pd

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From gor@n@bro@trom @end|ng |rom umu@@e  Tue Oct 18 22:34:45 2022
From: gor@n@bro@trom @end|ng |rom umu@@e (=?UTF-8?Q?G=c3=b6ran_Brostr=c3=b6m?=)
Date: Tue, 18 Oct 2022 22:34:45 +0200
Subject: [R-pkg-devel] Invalid UTF-8
In-Reply-To: <D9CE8114-B2A9-43C4-A8D0-E1175CE8B33A@gmail.com>
References: <5096fab3-e7db-ad84-eb1a-37db270944ce@umu.se>
 <20221017121825.16af0ff3@arachnoid>
 <0a0d81f0-43e3-240a-5be6-7fd661895346@umu.se>
 <25422.47669.756325.967808@rob.eddelbuettel.com>
 <D9CE8114-B2A9-43C4-A8D0-E1175CE8B33A@gmail.com>
Message-ID: <55f0cbda-d589-466a-f219-8e9dd127f247@umu.se>



On 2022-10-18 21:53, peter dalgaard wrote:
> 
> 
>> On 18 Oct 2022, at 16:37 , Dirk Eddelbuettel <edd at debian.org>
>> wrote:
>> 
>> 
>> On 17 October 2022 at 13:20, G?ran Brostr?m wrote:
>> 
>> | G;ran (US keyboard)
>> 
>> :)
>> 
>> A fortunes candidate?
>> 
> 
> Incidentally, he's G?ran on a DK keyboard but G?ran on an NO one. The
> three Scandinavian languages have the same three extra letters (???),
> but Swedish writes the former two with diaeresis (like German),
> reverses their order in the alphabet (???), 

Actually, the order is ??? (Swedish). Didn't know about the different
Scandinavian alphabetical orderings, thanks for the info!

g,

> and switches ? and ? on
> the keyboard (compared to Danish, that is). Norwegian writes and
> sorts like Danish, but has the same key reversion as Swedish.
> "Brotherly love"...
> 
> -pd
>


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Wed Oct 19 09:39:15 2022
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Wed, 19 Oct 2022 09:39:15 +0200
Subject: [R-pkg-devel] Error when install binary from CRAN but not if
 install from source - Macintoh, lme4, Matrix, buildmer
In-Reply-To: <485893d7-d898-0f04-957d-a81d5f6e5d03@gmail.com>
References: <CADtpigZfFG8oNO0NF2g6tku2whAFL2ycF_2JbWSL=AGkRf2F5w@mail.gmail.com>
 <485893d7-d898-0f04-957d-a81d5f6e5d03@gmail.com>
Message-ID: <25423.43427.527855.288051@stat.math.ethz.ch>

>>>>> Duncan Murdoch 
>>>>>     on Tue, 18 Oct 2022 15:17:33 -0400 writes:

    > I see the same thing.  This sounds like a problem in the handling of 
    > methods that has been discussed somewhat recently:

    > https://stat.ethz.ch/pipermail/r-devel/2022-September/081971.html

    > The problem is that when the binary is built, some code from other 
    > packages is kept as part of it.  When that other package is updated, you 
    > need a new source install of your own package (or a rebuild at CRAN to 
    > replace the binary) to cache the new code.

    > This can also be done explicitly by package startup code; I think this 
    > thread

    > https://stat.ethz.ch/pipermail/r-package-devel/2022q3/008481.html

    > turned out to be a case where rstan was caching something, and an update 
    > to ggplot2 didn't work with the cached data.  Given the error message, 
    > your issue sounds more like the first one.

    > I don't recall if there was a resolution.  Maybe you can ask the CRAN 
    > maintainers to rebuild buildmer.

    > Duncan Murdoch

Yes, thank you, Duncan!

The binary version of 'builmer' (or also lme4 ?) must have been created
with an older version of Matrix  (which did not have the
dgeMatrix_getDiag C code)  and the respective maintainer of the
binary builds (*) must rebuild the binary versions of those
Matrix-reverse-dependant packages,
---
*) in this case the macOS ones (both for Intel and ARM Macs)

Martin Maechler
(maintainer of Matrix)








    > On 18/10/2022 2:51 p.m., Carl Schwarz wrote:
    >> I've run into a problem where if you install the lme4, Matrix, and buildmer
    >> packages using the binaries from CRAN on a Mac, I get an error message
    >> about a missing method, but if I install the same packages from SOURCE, the
    >> code runs fine.
    >> 
    >> I would have thought that installing from source or using the binary
    >> should look the same.
    >> 
    >> Any suggestions on how to proceed to resolve this issue?
    >> 
    >> The maintainer of buildmer is also puzzled.
    >> You can follow the issue in more detail at:
    >> https://github.com/cvoeten/buildmer/issues/20
    >> 
    >> This is way above my paygrade...
    >> 
    >> Carl Schwarz
    >> 
    >> ------------------------------------------------------
    >> 
    >> Tried this on an intel-Mac and arm-Mac with the same result.
    >> Works fine on Windows machines under both scenarios.
    >> 
    >> Here is a test example
    >> 
    >> library(buildmer)
    >> library(lme4)
    >> 
    >> nrow <- 100
    >> 
    >> test <- data.frame(x01=runif(nrow),
    >> y=runif(nrow)<.1, block=as.factor(floor((1:nrow)/50)))
    >> head(test)
    >> 
    >> 
    >> fit.model <- lme4::glmer(y~x01 + (1|block), data=test,
    >> family=binomial(link="logit"))
    >> fit.model # this works
    >> 
    >> class(fit.model)
    >> 
    >> summary(fit.model)
    >> # gives the following error message
    >> Error in diag(from, names = FALSE) : object 'dgeMatrix_getDiag' not found
    >> 
    >> A pdf document showing output is attached (shows the sessionInfo etc).
    >> 
    >> When you install the buildmer and Matrix packages from SOURCE, it runs fine.
    >> 
    >> I've tried all combinations of installing binary/source and only if both
    >> packages (Matrix and buidmer) are installed from source, does the code run.
    >> 
    >> Same issue on an intel-Mac.
    >> Same issue when running under the R directly rather than Rstudio on a Mac.


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Wed Oct 19 09:45:34 2022
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Wed, 19 Oct 2022 09:45:34 +0200
Subject: [R-pkg-devel] Error when install binary from CRAN but not if
 install from source - Macintoh, lme4, Matrix, buildmer
In-Reply-To: <25423.43427.527855.288051@stat.math.ethz.ch>
References: <CADtpigZfFG8oNO0NF2g6tku2whAFL2ycF_2JbWSL=AGkRf2F5w@mail.gmail.com>
 <485893d7-d898-0f04-957d-a81d5f6e5d03@gmail.com>
 <25423.43427.527855.288051@stat.math.ethz.ch>
Message-ID: <14101416-4d54-23d8-3b23-4271c9fe4a6d@statistik.tu-dortmund.de>

Please let the Simon (Mac maintainer for CRAN) know.
For Windows, the revdeps get rebuild automatically.

Best,
Uwe Ligges


On 19.10.2022 09:39, Martin Maechler wrote:
>>>>>> Duncan Murdoch
>>>>>>      on Tue, 18 Oct 2022 15:17:33 -0400 writes:
> 
>      > I see the same thing.  This sounds like a problem in the handling of
>      > methods that has been discussed somewhat recently:
> 
>      > https://stat.ethz.ch/pipermail/r-devel/2022-September/081971.html
> 
>      > The problem is that when the binary is built, some code from other
>      > packages is kept as part of it.  When that other package is updated, you
>      > need a new source install of your own package (or a rebuild at CRAN to
>      > replace the binary) to cache the new code.
> 
>      > This can also be done explicitly by package startup code; I think this
>      > thread
> 
>      > https://stat.ethz.ch/pipermail/r-package-devel/2022q3/008481.html
> 
>      > turned out to be a case where rstan was caching something, and an update
>      > to ggplot2 didn't work with the cached data.  Given the error message,
>      > your issue sounds more like the first one.
> 
>      > I don't recall if there was a resolution.  Maybe you can ask the CRAN
>      > maintainers to rebuild buildmer.
> 
>      > Duncan Murdoch
> 
> Yes, thank you, Duncan!
> 
> The binary version of 'builmer' (or also lme4 ?) must have been created
> with an older version of Matrix  (which did not have the
> dgeMatrix_getDiag C code)  and the respective maintainer of the
> binary builds (*) must rebuild the binary versions of those
> Matrix-reverse-dependant packages,
> ---
> *) in this case the macOS ones (both for Intel and ARM Macs)
> 
> Martin Maechler
> (maintainer of Matrix)
> 
> 
> 
> 
> 
> 
> 
> 
>      > On 18/10/2022 2:51 p.m., Carl Schwarz wrote:
>      >> I've run into a problem where if you install the lme4, Matrix, and buildmer
>      >> packages using the binaries from CRAN on a Mac, I get an error message
>      >> about a missing method, but if I install the same packages from SOURCE, the
>      >> code runs fine.
>      >>
>      >> I would have thought that installing from source or using the binary
>      >> should look the same.
>      >>
>      >> Any suggestions on how to proceed to resolve this issue?
>      >>
>      >> The maintainer of buildmer is also puzzled.
>      >> You can follow the issue in more detail at:
>      >> https://github.com/cvoeten/buildmer/issues/20
>      >>
>      >> This is way above my paygrade...
>      >>
>      >> Carl Schwarz
>      >>
>      >> ------------------------------------------------------
>      >>
>      >> Tried this on an intel-Mac and arm-Mac with the same result.
>      >> Works fine on Windows machines under both scenarios.
>      >>
>      >> Here is a test example
>      >>
>      >> library(buildmer)
>      >> library(lme4)
>      >>
>      >> nrow <- 100
>      >>
>      >> test <- data.frame(x01=runif(nrow),
>      >> y=runif(nrow)<.1, block=as.factor(floor((1:nrow)/50)))
>      >> head(test)
>      >>
>      >>
>      >> fit.model <- lme4::glmer(y~x01 + (1|block), data=test,
>      >> family=binomial(link="logit"))
>      >> fit.model # this works
>      >>
>      >> class(fit.model)
>      >>
>      >> summary(fit.model)
>      >> # gives the following error message
>      >> Error in diag(from, names = FALSE) : object 'dgeMatrix_getDiag' not found
>      >>
>      >> A pdf document showing output is attached (shows the sessionInfo etc).
>      >>
>      >> When you install the buildmer and Matrix packages from SOURCE, it runs fine.
>      >>
>      >> I've tried all combinations of installing binary/source and only if both
>      >> packages (Matrix and buidmer) are installed from source, does the code run.
>      >>
>      >> Same issue on an intel-Mac.
>      >> Same issue when running under the R directly rather than Rstudio on a Mac.
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From murdoch@dunc@n @end|ng |rom gm@||@com  Wed Oct 19 20:55:24 2022
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Wed, 19 Oct 2022 14:55:24 -0400
Subject: [R-pkg-devel] Error when install binary from CRAN but not if
 install from source - Macintoh, lme4, Matrix, buildmer
In-Reply-To: <25423.43427.527855.288051@stat.math.ethz.ch>
References: <CADtpigZfFG8oNO0NF2g6tku2whAFL2ycF_2JbWSL=AGkRf2F5w@mail.gmail.com>
 <485893d7-d898-0f04-957d-a81d5f6e5d03@gmail.com>
 <25423.43427.527855.288051@stat.math.ethz.ch>
Message-ID: <c9086e98-79f6-27b2-748b-40bf98afe70d@gmail.com>

It seems that this could be mostly avoided if instead of caching copies 
of Matrix methods when buildmer was installed, R would cache promises to 
get those methods.  Then if the method for some particular signature 
changed, on first use buildmer would retrieve the current version.

There would still be a problem if Matrix completely dropped a method or 
it migrated to a different package, but I think that's less frequent 
than a change to the internal implementation.

Has any thought been given to making this change for R 4.3.0?

Duncan Murdoch



On 19/10/2022 3:39 a.m., Martin Maechler wrote:
>>>>>> Duncan Murdoch
>>>>>>      on Tue, 18 Oct 2022 15:17:33 -0400 writes:
> 
>      > I see the same thing.  This sounds like a problem in the handling of
>      > methods that has been discussed somewhat recently:
> 
>      > https://stat.ethz.ch/pipermail/r-devel/2022-September/081971.html
> 
>      > The problem is that when the binary is built, some code from other
>      > packages is kept as part of it.  When that other package is updated, you
>      > need a new source install of your own package (or a rebuild at CRAN to
>      > replace the binary) to cache the new code.
> 
>      > This can also be done explicitly by package startup code; I think this
>      > thread
> 
>      > https://stat.ethz.ch/pipermail/r-package-devel/2022q3/008481.html
> 
>      > turned out to be a case where rstan was caching something, and an update
>      > to ggplot2 didn't work with the cached data.  Given the error message,
>      > your issue sounds more like the first one.
> 
>      > I don't recall if there was a resolution.  Maybe you can ask the CRAN
>      > maintainers to rebuild buildmer.
> 
>      > Duncan Murdoch
> 
> Yes, thank you, Duncan!
> 
> The binary version of 'builmer' (or also lme4 ?) must have been created
> with an older version of Matrix  (which did not have the
> dgeMatrix_getDiag C code)  and the respective maintainer of the
> binary builds (*) must rebuild the binary versions of those
> Matrix-reverse-dependant packages,
> ---
> *) in this case the macOS ones (both for Intel and ARM Macs)
> 
> Martin Maechler
> (maintainer of Matrix)
> 
> 
> 
> 
> 
> 
> 
> 
>      > On 18/10/2022 2:51 p.m., Carl Schwarz wrote:
>      >> I've run into a problem where if you install the lme4, Matrix, and buildmer
>      >> packages using the binaries from CRAN on a Mac, I get an error message
>      >> about a missing method, but if I install the same packages from SOURCE, the
>      >> code runs fine.
>      >>
>      >> I would have thought that installing from source or using the binary
>      >> should look the same.
>      >>
>      >> Any suggestions on how to proceed to resolve this issue?
>      >>
>      >> The maintainer of buildmer is also puzzled.
>      >> You can follow the issue in more detail at:
>      >> https://github.com/cvoeten/buildmer/issues/20
>      >>
>      >> This is way above my paygrade...
>      >>
>      >> Carl Schwarz
>      >>
>      >> ------------------------------------------------------
>      >>
>      >> Tried this on an intel-Mac and arm-Mac with the same result.
>      >> Works fine on Windows machines under both scenarios.
>      >>
>      >> Here is a test example
>      >>
>      >> library(buildmer)
>      >> library(lme4)
>      >>
>      >> nrow <- 100
>      >>
>      >> test <- data.frame(x01=runif(nrow),
>      >> y=runif(nrow)<.1, block=as.factor(floor((1:nrow)/50)))
>      >> head(test)
>      >>
>      >>
>      >> fit.model <- lme4::glmer(y~x01 + (1|block), data=test,
>      >> family=binomial(link="logit"))
>      >> fit.model # this works
>      >>
>      >> class(fit.model)
>      >>
>      >> summary(fit.model)
>      >> # gives the following error message
>      >> Error in diag(from, names = FALSE) : object 'dgeMatrix_getDiag' not found
>      >>
>      >> A pdf document showing output is attached (shows the sessionInfo etc).
>      >>
>      >> When you install the buildmer and Matrix packages from SOURCE, it runs fine.
>      >>
>      >> I've tried all combinations of installing binary/source and only if both
>      >> packages (Matrix and buidmer) are installed from source, does the code run.
>      >>
>      >> Same issue on an intel-Mac.
>      >> Same issue when running under the R directly rather than Rstudio on a Mac.


From v|ncent@p|@gno| @end|ng |rom gm@||@com  Thu Oct 20 00:39:57 2022
From: v|ncent@p|@gno| @end|ng |rom gm@||@com (Vincent Plagnol)
Date: Wed, 19 Oct 2022 23:39:57 +0100
Subject: [R-pkg-devel] R package build- C compilation issue related to math.h
Message-ID: <CAJ0YOWiTFYMTb9DqAZ1bUggLH0LkiBbDXOKYFNCcZJqL2WjJSg@mail.gmail.com>

Dear all at R-package-devel,

I am struggling with a R package build.
It builds fine on my mac, which is my usual work environment. But when I
submit to CRAN, while the windows version is fine, the debian version fails
with a cryptic message:














** installing *source* package ?ExomeDepth? ...** using staged
installation** libsg++-12  -std=gnu++14 -I"/home/hornik/tmp/R/include"
-DNDEBUG   -I/usr/local/include -DUSE_TYPE_CHECKING_STRICT
-D_FORTIFY_SOURCE=2   -fpic  -g -O2 -Wall -pedantic -mtune=native  -c
CNV_estimate.cpp -o CNV_estimate.ogcc-12  -I"/home/hornik/tmp/R/include"
-DNDEBUG   -I/usr/local/include -DUSE_TYPE_CHECKING_STRICT
-D_FORTIFY_SOURCE=2   -fpic  -g -O2 -Wall -Wstrict-prototypes -pedantic
-mtune=native  -c ExomeDepth_init.c -o ExomeDepth_init.ogcc-12
 -I"/home/hornik/tmp/R/include" -DNDEBUG   -I/usr/local/include
-DUSE_TYPE_CHECKING_STRICT -D_FORTIFY_SOURCE=2   -fpic  -g -O2 -Wall
-Wstrict-prototypes -pedantic -mtune=native  -c VP_gamma.c -o VP_gamma.oIn
file included from gsl_math.h:22,                 from
VP_gamma.c:23:/usr/include/x86_64-linux-gnu/bits/mathcalls.h:85:1: error:
expected ?;? before ?extern?   85 | __MATHCALL_VEC (acosh,, (_Mdouble_
__x));      |
^~~~~~~~~~~~~~/usr/include/x86_64-linux-gnu/bits/mathcalls.h:87:1: error:
expected ?;? before ?extern?   87 | __MATHCALL_VEC (asinh,, (_Mdouble_
__x));      | ^~~~~~~~~~~~~~*


It is painful to debug because I don't have a debian machine. Furthermore
the issue seems to be in the file called at line 22 of gsl_math.sh which is
#include <math.h>
These are rather arcane (to me) building blocks of C and I don't get why it
would suddenly create some issue on Debian (but not on mac or windows).

My issue is perhaps that I copied substantial amount of the GSL library (as
opposed to using it as dependency) but it would be painful to do otherwise
now (this is an old package that has started to complain only recently).

Any and all advice is welcome to help me interpret what I see here.

Thanks,

Vincent

	[[alternative HTML version deleted]]


From @kw@|mmo @end|ng |rom gm@||@com  Thu Oct 20 02:03:34 2022
From: @kw@|mmo @end|ng |rom gm@||@com (Andrew Simmons)
Date: Wed, 19 Oct 2022 20:03:34 -0400
Subject: [R-pkg-devel] R package build- C compilation issue related to
 math.h
In-Reply-To: <CAJ0YOWiTFYMTb9DqAZ1bUggLH0LkiBbDXOKYFNCcZJqL2WjJSg@mail.gmail.com>
References: <CAJ0YOWiTFYMTb9DqAZ1bUggLH0LkiBbDXOKYFNCcZJqL2WjJSg@mail.gmail.com>
Message-ID: <CAPcHnpQnuivdJomDYk2quL0wpnmHGSb8QYTGeXOghQzudWrF2g@mail.gmail.com>

You could install VirtualBox if you wanted to test it yourself, or if you
have the tarball available online somewhere, I can try building it.

On Wed., Oct. 19, 2022, 19:57 Vincent Plagnol, <vincent.plagnol at gmail.com>
wrote:

> Dear all at R-package-devel,
>
> I am struggling with a R package build.
> It builds fine on my mac, which is my usual work environment. But when I
> submit to CRAN, while the windows version is fine, the debian version fails
> with a cryptic message:
>
>
>
>
>
>
>
>
>
>
>
>
>
>
> ** installing *source* package ?ExomeDepth? ...** using staged
> installation** libsg++-12  -std=gnu++14 -I"/home/hornik/tmp/R/include"
> -DNDEBUG   -I/usr/local/include -DUSE_TYPE_CHECKING_STRICT
> -D_FORTIFY_SOURCE=2   -fpic  -g -O2 -Wall -pedantic -mtune=native  -c
> CNV_estimate.cpp -o CNV_estimate.ogcc-12  -I"/home/hornik/tmp/R/include"
> -DNDEBUG   -I/usr/local/include -DUSE_TYPE_CHECKING_STRICT
> -D_FORTIFY_SOURCE=2   -fpic  -g -O2 -Wall -Wstrict-prototypes -pedantic
> -mtune=native  -c ExomeDepth_init.c -o ExomeDepth_init.ogcc-12
>  -I"/home/hornik/tmp/R/include" -DNDEBUG   -I/usr/local/include
> -DUSE_TYPE_CHECKING_STRICT -D_FORTIFY_SOURCE=2   -fpic  -g -O2 -Wall
> -Wstrict-prototypes -pedantic -mtune=native  -c VP_gamma.c -o VP_gamma.oIn
> file included from gsl_math.h:22,                 from
> VP_gamma.c:23:/usr/include/x86_64-linux-gnu/bits/mathcalls.h:85:1: error:
> expected ?;? before ?extern?   85 | __MATHCALL_VEC (acosh,, (_Mdouble_
> __x));      |
> ^~~~~~~~~~~~~~/usr/include/x86_64-linux-gnu/bits/mathcalls.h:87:1: error:
> expected ?;? before ?extern?   87 | __MATHCALL_VEC (asinh,, (_Mdouble_
> __x));      | ^~~~~~~~~~~~~~*
>
>
> It is painful to debug because I don't have a debian machine. Furthermore
> the issue seems to be in the file called at line 22 of gsl_math.sh which is
> #include <math.h>
> These are rather arcane (to me) building blocks of C and I don't get why it
> would suddenly create some issue on Debian (but not on mac or windows).
>
> My issue is perhaps that I copied substantial amount of the GSL library (as
> opposed to using it as dependency) but it would be painful to do otherwise
> now (this is an old package that has started to complain only recently).
>
> Any and all advice is welcome to help me interpret what I see here.
>
> Thanks,
>
> Vincent
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Thu Oct 20 10:35:38 2022
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Thu, 20 Oct 2022 11:35:38 +0300
Subject: [R-pkg-devel] R package build- C compilation issue related to
 math.h
In-Reply-To: <CAJ0YOWiTFYMTb9DqAZ1bUggLH0LkiBbDXOKYFNCcZJqL2WjJSg@mail.gmail.com>
References: <CAJ0YOWiTFYMTb9DqAZ1bUggLH0LkiBbDXOKYFNCcZJqL2WjJSg@mail.gmail.com>
Message-ID: <20221020113538.54edadb1@Tarkus>

On Wed, 19 Oct 2022 23:39:57 +0100
Vincent Plagnol <vincent.plagnol at gmail.com> wrote:

> gcc-12 -I"/home/hornik/tmp/R/include" -DNDEBUG   -I/usr/local/include
> -DUSE_TYPE_CHECKING_STRICT -D_FORTIFY_SOURCE=2   -fpic  -g -O2 -Wall
> -Wstrict-prototypes -pedantic -mtune=native  -c VP_gamma.c -o
> VP_gamma.o

> /usr/include/x86_64-linux-gnu/bits/mathcalls.h:85:1: error:
> expected ?;? before ?extern? 

> It is painful to debug because I don't have a debian machine.
> Furthermore the issue seems to be in the file called at line 22 of
> gsl_math.h which is #include <math.h>

For what it's worth, I couldn't reproduce the problem when compiling
VP_gamma.c from https://github.com/vplagnol/ExomeDepth on two of my
Debian machines with older GCC versions; you might actually need GCC 12
to see it.

I see that VP_gamma.c includes config.h before including gsl_math.h.
Typically, config.h should be automatically generated by the configure
script and may contain different definitions on different systems.
Somebody else has a similar problem, also in math.h, also with a file
that includes config.h before math.h:
https://github.com/vplagnol/ExomeDepth/issues/50

I think that config.h defines something in its /* Substitute gsl
functions for missing system functions */ section that confuses the
glibc math.h machinery. If you have to include config.h in a source
file, it might help to process the system headers first.

I had a related problem recently: MinGW was complaining about a
strftime call in bundled code that wasn't reachable from R anyway, so I
decided to patch it out using the preprocessor. The correct way to do
so is to #include the system header first, then re-#define the function
to nothing:
https://github.com/aitap/Ropj/commit/a7d6cec19d11d47d731fbadbf8735660e534efaa

Otherwise the re-definition affects the system header where the
function is declared and the result is syntactically invalid.

> 	[[alternative HTML version deleted]]

Sorry, the mailing list ate the HTML version of your e-mail, and the
plain text version automatically prepared by your mailer is not easy to
read: https://stat.ethz.ch/pipermail/r-package-devel/2022q4/008578.html

Please post in plain text.

-- 
Best regards,
Ivan


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Thu Oct 20 11:41:45 2022
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Thu, 20 Oct 2022 11:41:45 +0200
Subject: [R-pkg-devel] Error when install binary from CRAN but not if
 install from source - Macintosh, lme4, Matrix, buildmer
In-Reply-To: <c9086e98-79f6-27b2-748b-40bf98afe70d@gmail.com>
References: <CADtpigZfFG8oNO0NF2g6tku2whAFL2ycF_2JbWSL=AGkRf2F5w@mail.gmail.com>
 <485893d7-d898-0f04-957d-a81d5f6e5d03@gmail.com>
 <25423.43427.527855.288051@stat.math.ethz.ch>
 <c9086e98-79f6-27b2-748b-40bf98afe70d@gmail.com>
Message-ID: <25425.6105.697240.163902@stat.math.ethz.ch>

>>>>> Duncan Murdoch 
>>>>>     on Wed, 19 Oct 2022 14:55:24 -0400 writes:

    > It seems that this could be mostly avoided if instead of caching copies 
    > of Matrix methods when buildmer was installed, R would cache promises to 
    > get those methods.  Then if the method for some particular signature 
    > changed, on first use buildmer would retrieve the current version.

    > There would still be a problem if Matrix completely dropped a method or 
    > it migrated to a different package, but I think that's less frequent 
    > than a change to the internal implementation.

    > Has any thought been given to making this change for R 4.3.0?

    > Duncan Murdoch

Not that I know of.

It sounds like a very promising (pun! ;-) idea, that could solve
many subtle  inter-package installation/update  problems.

Note that the methods *and* classes  caching had been introduced
a longer while ago as part of a concerted effort to make the
loading of packages with (many) S4 methods and classes considerably faster.

Before that effort, all these class and method "tables"/"lists"
(environments effectively) were (re-)computed at package load
time which was quite costly [time consuming].
I was not very much involved in that effort and I don't know if
using promises instead had been considered at the time.

(I've added Michael and the other Martin M to the CC , hoping
 they will know / remember more )

Martin Maechler


    > On 19/10/2022 3:39 a.m., Martin Maechler wrote:
    >>>>>>> Duncan Murdoch
    >>>>>>> on Tue, 18 Oct 2022 15:17:33 -0400 writes:
    >> 
    >> > I see the same thing.  This sounds like a problem in the handling of
    >> > methods that has been discussed somewhat recently:
    >> 
    >> > https://stat.ethz.ch/pipermail/r-devel/2022-September/081971.html
    >> 
    >> > The problem is that when the binary is built, some code from other
    >> > packages is kept as part of it.  When that other package is updated, you
    >> > need a new source install of your own package (or a rebuild at CRAN to
    >> > replace the binary) to cache the new code.
    >> 
    >> > This can also be done explicitly by package startup code; I think this
    >> > thread
    >> 
    >> > https://stat.ethz.ch/pipermail/r-package-devel/2022q3/008481.html
    >> 
    >> > turned out to be a case where rstan was caching something, and an update
    >> > to ggplot2 didn't work with the cached data.  Given the error message,
    >> > your issue sounds more like the first one.
    >> 
    >> > I don't recall if there was a resolution.  Maybe you can ask the CRAN
    >> > maintainers to rebuild buildmer.
    >> 
    >> > Duncan Murdoch
    >> 
    >> Yes, thank you, Duncan!
    >> 
    >> The binary version of 'buildmer' (or also lme4 ?) must have been created
    >> with an older version of Matrix  (which did not have the
    >> dgeMatrix_getDiag C code)  and the respective maintainer of the
    >> binary builds (*) must rebuild the binary versions of those
    >> Matrix-reverse-dependant packages,
    >> ---
    >> *) in this case the macOS ones (both for Intel and ARM Macs)
    >> 
    >> Martin Maechler
    >> (maintainer of Matrix)
    >> 
    >> 
    >> 
    >> 
    >> 
    >> 
    >> 
    >> 
    >> > On 18/10/2022 2:51 p.m., Carl Schwarz wrote:
    >> >> I've run into a problem where if you install the lme4, Matrix, and buildmer
    >> >> packages using the binaries from CRAN on a Mac, I get an error message
    >> >> about a missing method, but if I install the same packages from SOURCE, the
    >> >> code runs fine.
    >> >>
    >> >> I would have thought that installing from source or using the binary
    >> >> should look the same.
    >> >>
    >> >> Any suggestions on how to proceed to resolve this issue?
    >> >>
    >> >> The maintainer of buildmer is also puzzled.
    >> >> You can follow the issue in more detail at:
    >> >> https://github.com/cvoeten/buildmer/issues/20
    >> >>
    >> >> This is way above my paygrade...
    >> >>
    >> >> Carl Schwarz
    >> >>
    >> >> ------------------------------------------------------
    >> >>
    >> >> Tried this on an intel-Mac and arm-Mac with the same result.
    >> >> Works fine on Windows machines under both scenarios.
    >> >>
    >> >> Here is a test example
    >> >>
    >> >> library(buildmer)
    >> >> library(lme4)
    >> >>
    >> >> nrow <- 100
    >> >>
    >> >> test <- data.frame(x01=runif(nrow),
    >> >> y=runif(nrow)<.1, block=as.factor(floor((1:nrow)/50)))
    >> >> head(test)
    >> >>
    >> >>
    >> >> fit.model <- lme4::glmer(y~x01 + (1|block), data=test,
    >> >> family=binomial(link="logit"))
    >> >> fit.model # this works
    >> >>
    >> >> class(fit.model)
    >> >>
    >> >> summary(fit.model)
    >> >> # gives the following error message
    >> >> Error in diag(from, names = FALSE) : object 'dgeMatrix_getDiag' not found
    >> >>
    >> >> A pdf document showing output is attached (shows the sessionInfo etc).
    >> >>
    >> >> When you install the buildmer and Matrix packages from SOURCE, it runs fine.
    >> >>
    >> >> I've tried all combinations of installing binary/source and only if both
    >> >> packages (Matrix and buidmer) are installed from source, does the code run.
    >> >>
    >> >> Same issue on an intel-Mac.
    >> >> Same issue when running under the R directly rather than Rstudio on a Mac.


From @r|e|92@nd @end|ng |rom gm@||@com  Thu Oct 20 12:43:30 2022
From: @r|e|92@nd @end|ng |rom gm@||@com (=?UTF-8?Q?Elys=C3=A9e_Aristide?=)
Date: Thu, 20 Oct 2022 12:43:30 +0200
Subject: [R-pkg-devel] How ton print in the console from Rcpp
Message-ID: <CALcKxsq1EYdsSh3i2MPLop8fxngVpAKfY8ZqMCmbG+k280VJoA@mail.gmail.com>

Greetings,

In my CDatanet package, I want to print texts and values during a numerical
optimization process. I saw in many posts that CRAN is not happy with
sd::cout and sd::endl. What I understood is that it is better to use Rcpp
functions. So I used:

Rcpp::Rcout << "beta: \n";
Rcpp::print(betacpp);
Rcpp::Rcout << "log-likelihood: " << llh << "\n";

Everything is fine with the check --as-cran with Linux and Windows.
However, there is a warning with Mac (
https://www.r-project.org/nosvn/R.check/r-release-macos-arm64/CDatanet-00check.html
)
checking compiled code ... WARNING
File ?CDatanet/libs/CDatanet.so?:
  Found ?___assert_rtn?, possibly from ?assert? (C)
    Objects: ?CDincomInfo.o?, ?CDincomInfo.rho.o?, ?Homophily.o?,
      ?RcppExports.o?, ?SARTIncomplet.o?

Compiled code should not call entry points which might terminate R nor
write to stdout/stderr instead of to the console, nor use Fortran I/O
nor system RNGs.

I think this is because I am printing from C++ functions. Am I wrong? If
not, what is the best way to print in the console from C++ functions?

Best regards,

Aristide Elys?e HOUNDETOUNGAN
*Assistant Professor of Economics*
*Website : *www.ahoundetoungan.com

	[[alternative HTML version deleted]]


From |uc@r @end|ng |rom |edor@project@org  Thu Oct 20 13:37:04 2022
From: |uc@r @end|ng |rom |edor@project@org (=?UTF-8?Q?I=C3=B1aki_Ucar?=)
Date: Thu, 20 Oct 2022 13:37:04 +0200
Subject: [R-pkg-devel] How ton print in the console from Rcpp
In-Reply-To: <CALcKxsq1EYdsSh3i2MPLop8fxngVpAKfY8ZqMCmbG+k280VJoA@mail.gmail.com>
References: <CALcKxsq1EYdsSh3i2MPLop8fxngVpAKfY8ZqMCmbG+k280VJoA@mail.gmail.com>
Message-ID: <CALEXWq3NJzwmh-oTMJdpa+8f=Qhhup8rrzZdX9y20bzgsmhF=A@mail.gmail.com>

Hi,

On Thu, 20 Oct 2022 at 12:42, Elys?e Aristide <ariel92and at gmail.com> wrote:
>
> Greetings,
>
> In my CDatanet package, I want to print texts and values during a numerical
> optimization process. I saw in many posts that CRAN is not happy with
> sd::cout and sd::endl. What I understood is that it is better to use Rcpp
> functions. So I used:
>
> Rcpp::Rcout << "beta: \n";
> Rcpp::print(betacpp);
> Rcpp::Rcout << "log-likelihood: " << llh << "\n";
>
> Everything is fine with the check --as-cran with Linux and Windows.
> However, there is a warning with Mac (
> https://www.r-project.org/nosvn/R.check/r-release-macos-arm64/CDatanet-00check.html
> )
> checking compiled code ... WARNING
> File ?CDatanet/libs/CDatanet.so?:
>   Found ?___assert_rtn?, possibly from ?assert? (C)
>     Objects: ?CDincomInfo.o?, ?CDincomInfo.rho.o?, ?Homophily.o?,
>       ?RcppExports.o?, ?SARTIncomplet.o?
>
> Compiled code should not call entry points which might terminate R nor
> write to stdout/stderr instead of to the console, nor use Fortran I/O
> nor system RNGs.
>
> I think this is because I am printing from C++ functions. Am I wrong? If
> not, what is the best way to print in the console from C++ functions?

No, this is not related to the use of printing functions. It seems to
be related to RcppEigen according to this:
https://stackoverflow.com/questions/70415854/helps-on-the-package-development

On Linux, I don't see ___assert_rtn being included in the final shared
library (this seems to happen only for macOS for some reason). What I
did find in the shared library is this:

(internal::UIntPtr(eigen_unaligned_array_assert_workaround_gcc47(array))
& (15)) == 0 && "this assertion is explained here: "
"http://eigen.tuxfamily.org/dox-devel/group__TopicUnalignedArrayAssert.html"
" **** READ THIS WEB PAGE !!! ****"

Not sure if this is related to the issue you see, but it seems likely.

-- 
I?aki ?car


From kry|ov@r00t @end|ng |rom gm@||@com  Thu Oct 20 13:46:44 2022
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Thu, 20 Oct 2022 14:46:44 +0300
Subject: [R-pkg-devel] How ton print in the console from Rcpp
In-Reply-To: <CALcKxsq1EYdsSh3i2MPLop8fxngVpAKfY8ZqMCmbG+k280VJoA@mail.gmail.com>
References: <CALcKxsq1EYdsSh3i2MPLop8fxngVpAKfY8ZqMCmbG+k280VJoA@mail.gmail.com>
Message-ID: <20221020144644.38d04ef0@arachnoid>

? Thu, 20 Oct 2022 12:43:30 +0200
Elys?e Aristide <ariel92and at gmail.com> ?????:

> What I understood is that it is better to use Rcpp functions. So I
> used:
> 
> Rcpp::Rcout << "beta: \n";
> Rcpp::print(betacpp);
> Rcpp::Rcout << "log-likelihood: " << llh << "\n";

This seems to be a right way of printing from Rcpp code.

> checking compiled code ... WARNING
> File ?CDatanet/libs/CDatanet.so?:
>   Found ?___assert_rtn?, possibly from ?assert? (C)
>     Objects: ?CDincomInfo.o?, ?CDincomInfo.rho.o?, ?Homophily.o?,
>       ?RcppExports.o?, ?SARTIncomplet.o?

Since you don't call assert() yourself (which, in theory, shouldn't
matter as R packages are compiled with #define NDEBUG), it must be one
of the C++ template classes you're using. They may contain calls to
assert() or an equivalent, which get inlined inside your binary during
compilation. It might be even inside the implementation of the C++
standard library, which would be completely outside your control.

I'm not sure, but it could be possible to explain this situation to
CRAN as a false-positive. In order to find out further, you'll need
someone with a macOS computer or experience in cross-platform
development to either disassemble the existing binary or take the
compilation pipeline apart in order to find out where the calls to
___assert_rtn originate.

-- 
Best regards,
Ivan


From edd @end|ng |rom deb|@n@org  Thu Oct 20 14:42:23 2022
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Thu, 20 Oct 2022 07:42:23 -0500
Subject: [R-pkg-devel] How ton print in the console from Rcpp
In-Reply-To: <20221020144644.38d04ef0@arachnoid>
References: <CALcKxsq1EYdsSh3i2MPLop8fxngVpAKfY8ZqMCmbG+k280VJoA@mail.gmail.com>
 <20221020144644.38d04ef0@arachnoid>
Message-ID: <25425.16943.184057.68532@rob.eddelbuettel.com>


On 20 October 2022 at 14:46, Ivan Krylov wrote:
| ? Thu, 20 Oct 2022 12:43:30 +0200
| Elys?e Aristide <ariel92and at gmail.com> ?????:
| 
| > What I understood is that it is better to use Rcpp functions. So I
| > used:
| > 
| > Rcpp::Rcout << "beta: \n";
| > Rcpp::print(betacpp);
| > Rcpp::Rcout << "log-likelihood: " << llh << "\n";
| 
| This seems to be a right way of printing from Rcpp code.

Yup!

And as stated that alone does not cause `__assert_rtn` or many of the now
almost 2600 Rcpp-using packages (that print this way) would have issues.

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From @r|e|92@nd @end|ng |rom gm@||@com  Thu Oct 20 15:16:13 2022
From: @r|e|92@nd @end|ng |rom gm@||@com (=?gb2312?B?RWx5c6imZSBBcmlzdGlkZQ==?=)
Date: Thu, 20 Oct 2022 13:16:13 +0000
Subject: [R-pkg-devel] How ton print in the console from Rcpp
In-Reply-To: <25425.16943.184057.68532@rob.eddelbuettel.com>
References: <CALcKxsq1EYdsSh3i2MPLop8fxngVpAKfY8ZqMCmbG+k280VJoA@mail.gmail.com>
 <20221020144644.38d04ef0@arachnoid>
 <25425.16943.184057.68532@rob.eddelbuettel.com>
Message-ID: <SJ0PR10MB5719CC02075B1218B23F2A1FFE2A9@SJ0PR10MB5719.namprd10.prod.outlook.com>

Thank you very much for your answers.

I finally noticed that the issue comes from the numerical optimization, in which I use the class MFuncGrad of the package RcppNumerical. Is there any problem in using this class? This is the only way I know to compute integrals of perform numerical optimizations in Rcpp. The other way might be: construct the function to be minimized in Rcpp and use the function optim in R. But this is not efficient.

Best,
Aristide
________________________________
From: Dirk Eddelbuettel <edd at debian.org>
Sent: Thursday, October 20, 2022 2:42:23 PM
To: Ivan Krylov <krylov.r00t at gmail.com>
Cc: Elys??e Aristide <ariel92and at gmail.com>; r-package-devel at r-project.org <r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] How ton print in the console from Rcpp


On 20 October 2022 at 14:46, Ivan Krylov wrote:
| ?? Thu, 20 Oct 2022 12:43:30 +0200
| Elys??e Aristide <ariel92and at gmail.com> ??????:
|
| > What I understood is that it is better to use Rcpp functions. So I
| > used:
| >
| > Rcpp::Rcout << "beta: \n";
| > Rcpp::print(betacpp);
| > Rcpp::Rcout << "log-likelihood: " << llh << "\n";
|
| This seems to be a right way of printing from Rcpp code.

Yup!

And as stated that alone does not cause `__assert_rtn` or many of the now
almost 2600 Rcpp-using packages (that print this way) would have issues.

Dirk

--
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org

	[[alternative HTML version deleted]]


From v|ncent@p|@gno| @end|ng |rom gm@||@com  Fri Oct 21 08:35:14 2022
From: v|ncent@p|@gno| @end|ng |rom gm@||@com (Vincent Plagnol)
Date: Fri, 21 Oct 2022 07:35:14 +0100
Subject: [R-pkg-devel] R package build- C compilation issue related to
 math.h
In-Reply-To: <20221020113538.54edadb1@Tarkus>
References: <CAJ0YOWiTFYMTb9DqAZ1bUggLH0LkiBbDXOKYFNCcZJqL2WjJSg@mail.gmail.com>
 <20221020113538.54edadb1@Tarkus>
Message-ID: <CAJ0YOWiAZeSFi7Hwb830tm3jQJxD_+vMwS8hHz176giSFkvE3A@mail.gmail.com>

Thank you Andrew for offering to help. The R-hub package sorted me out for
testing for various OSs.

And Ivan: thank you very much- you were spot on. Swapping the order of
config.h and system headers in all my C files made the compilation work in
my R-hub tests. Hopefully ExomeDepth is now about to show up in CRAN (I
just resubmitted). Amazingly insightful advice. I think it's fair to say
that I would never have worked that one out (or it would have taken me
absolutely forever). So thanks a lot for helping, I am really grateful.

And noted re replying in plain text. Gmail does HTML without really telling
that it does HTML but I'll try to stick to plain text in the future.



On Thu, Oct 20, 2022 at 9:35 AM Ivan Krylov <krylov.r00t at gmail.com> wrote:

> On Wed, 19 Oct 2022 23:39:57 +0100
> Vincent Plagnol <vincent.plagnol at gmail.com> wrote:
>
> > gcc-12 -I"/home/hornik/tmp/R/include" -DNDEBUG   -I/usr/local/include
> > -DUSE_TYPE_CHECKING_STRICT -D_FORTIFY_SOURCE=2   -fpic  -g -O2 -Wall
> > -Wstrict-prototypes -pedantic -mtune=native  -c VP_gamma.c -o
> > VP_gamma.o
>
> > /usr/include/x86_64-linux-gnu/bits/mathcalls.h:85:1: error:
> > expected ?;? before ?extern?
>
> > It is painful to debug because I don't have a debian machine.
> > Furthermore the issue seems to be in the file called at line 22 of
> > gsl_math.h which is #include <math.h>
>
> For what it's worth, I couldn't reproduce the problem when compiling
> VP_gamma.c from https://github.com/vplagnol/ExomeDepth on two of my
> Debian machines with older GCC versions; you might actually need GCC 12
> to see it.
>
> I see that VP_gamma.c includes config.h before including gsl_math.h.
> Typically, config.h should be automatically generated by the configure
> script and may contain different definitions on different systems.
> Somebody else has a similar problem, also in math.h, also with a file
> that includes config.h before math.h:
> https://github.com/vplagnol/ExomeDepth/issues/50
>
> I think that config.h defines something in its /* Substitute gsl
> functions for missing system functions */ section that confuses the
> glibc math.h machinery. If you have to include config.h in a source
> file, it might help to process the system headers first.
>
> I had a related problem recently: MinGW was complaining about a
> strftime call in bundled code that wasn't reachable from R anyway, so I
> decided to patch it out using the preprocessor. The correct way to do
> so is to #include the system header first, then re-#define the function
> to nothing:
>
> https://github.com/aitap/Ropj/commit/a7d6cec19d11d47d731fbadbf8735660e534efaa
>
> Otherwise the re-definition affects the system header where the
> function is declared and the result is syntactically invalid.
>
> >       [[alternative HTML version deleted]]
>
> Sorry, the mailing list ate the HTML version of your e-mail, and the
> plain text version automatically prepared by your mailer is not easy to
> read: https://stat.ethz.ch/pipermail/r-package-devel/2022q4/008578.html
>
> Please post in plain text.
>
> --
> Best regards,
> Ivan
>

	[[alternative HTML version deleted]]


From edd @end|ng |rom deb|@n@org  Sat Oct 22 16:22:36 2022
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Sat, 22 Oct 2022 09:22:36 -0500
Subject: [R-pkg-devel] How ton print in the console from Rcpp
In-Reply-To: <SJ0PR10MB5719CC02075B1218B23F2A1FFE2A9@SJ0PR10MB5719.namprd10.prod.outlook.com>
References: <CALcKxsq1EYdsSh3i2MPLop8fxngVpAKfY8ZqMCmbG+k280VJoA@mail.gmail.com>
 <20221020144644.38d04ef0@arachnoid>
 <25425.16943.184057.68532@rob.eddelbuettel.com>
 <SJ0PR10MB5719CC02075B1218B23F2A1FFE2A9@SJ0PR10MB5719.namprd10.prod.outlook.com>
Message-ID: <25427.64684.611479.503767@rob.eddelbuettel.com>


On 20 October 2022 at 13:16, Elys?e Aristide wrote:
| Thank you very much for your answers.
| 
| I finally noticed that the issue comes from the numerical optimization, in which I use the class MFuncGrad of the package RcppNumerical. Is there any problem in using this class? This is the only way I know to compute integrals of perform numerical optimizations in Rcpp. The other way might be: construct the function to be minimized in Rcpp and use the function optim in R. But this is not efficient.

That package is also used by others [1] and you should maybe study their code
and setup as it seems unlikely to me that your woes are due to
RcppNumerical. It likely is a simple inadvertent issue in your package.

Dirk

[1] https://cloud.r-project.org/web/packages/RcppNumerical/index.html shows
Reverse imports:
  BayesPPD, ccdf, glmdisc, MCPModPack, secr, teachingApps
Reverse linking to:
  apeglm, BayesPPD, BVSNLP, CDatanet, COMIX, fido, gbeta, glmdisc,
  MCPModPack, OwenQ, secr, teachingApps, vennLasso, ztpln 
which should give you plenty of examples.


-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From ||one| @end|ng |rom r@tud|o@com  Mon Oct 24 13:47:34 2022
From: ||one| @end|ng |rom r@tud|o@com (Lionel Henry)
Date: Mon, 24 Oct 2022 13:47:34 +0200
Subject: [R-pkg-devel] Frictionless alternative for `-Wstrict-prototypes`
Message-ID: <CAJf4E3pCqzbdpTaVWZyS1b9xntge+5nsQ0kS47UBwqjxUzNpqQ@mail.gmail.com>

Davis Vaughan and I were looking into the `-Wstrict-prototypes`
warnings for C code that were recently added to the R-devel checks. We
did a little research and found that these warnings are intended to
catch old-style definitions and declarations that were deprecated a
long time ago. This includes:

1. Unspecified types like `void fn(x, y);`
2. Unspecified parameter lists like `void fn();`.

We also found:

- That only unspecified types (case 1) will become defunct. For
  unspecified parameter lists (case 2), it was announced recently that
  the C standard committee has decided to simply change the meaning to
  "no arguments" in C23. This aligns with what most people think it
  means, and is what C++ does. See item 13 of page 130 in the C23
  working draft at https://open-std.org/JTC1/SC22/WG14/www/docs/n3054.pdf.

- The new `-Wdeprecated-non-prototype` option for clang-15 does not
  warn for empty parameter lists, allowing for a smooth transition
  that allows this widespread usage.

Since the no arguments case is both incredibly common and will become
fully legal C syntax in a close future, it seems it might not be worth
it to require all packages to update their code to an intermediary
form that reads less well, is not as intuitive to most people (and so
might crop up back in further updates), and will become standard in
the future anyway.

Perhaps a good course of action would be:

- Using `-Wno-strict-prototypes` to disable the stringent checks.

- Enabling the new `-Wdeprecated-non-prototype` in clang to catch
  old-style definitions and declarations.

This way CRAN would be able to catch deprecated syntax while allowing
the soon-to-be-legal syntax of empty parameter lists. We hope that
this would mean less code churn on CRAN, which means less work for the
CRAN maintainers as well as for the maintainers of CRAN packages.

Best,
Lionel & Davis


From c@chw@rz@t@t@|uc@ @end|ng |rom gm@||@com  Tue Oct 25 03:16:57 2022
From: c@chw@rz@t@t@|uc@ @end|ng |rom gm@||@com (Carl Schwarz)
Date: Mon, 24 Oct 2022 18:16:57 -0700
Subject: [R-pkg-devel] Error when install binary from CRAN but not if
 install from source - Macintoh, lme4, Matrix, buildmer
In-Reply-To: <485893d7-d898-0f04-957d-a81d5f6e5d03@gmail.com>
References: <CADtpigZfFG8oNO0NF2g6tku2whAFL2ycF_2JbWSL=AGkRf2F5w@mail.gmail.com>
 <485893d7-d898-0f04-957d-a81d5f6e5d03@gmail.com>
Message-ID: <CADtpigahOyDRHjtXZF=_L=bbSe9V1kwAqN=SJCKOV+ShEEP0BQ@mail.gmail.com>

Yes, the resubmission and re-building has fixed the problem with buildmer/
Matrix.
Carl

On Tue, Oct 18, 2022 at 12:17 PM Duncan Murdoch <murdoch.duncan at gmail.com>
wrote:

> I see the same thing.  This sounds like a problem in the handling of
> methods that has been discussed somewhat recently:
>
>    https://stat.ethz.ch/pipermail/r-devel/2022-September/081971.html
>
> The problem is that when the binary is built, some code from other
> packages is kept as part of it.  When that other package is updated, you
> need a new source install of your own package (or a rebuild at CRAN to
> replace the binary) to cache the new code.
>
> This can also be done explicitly by package startup code; I think this
> thread
>
>    https://stat.ethz.ch/pipermail/r-package-devel/2022q3/008481.html
>
> turned out to be a case where rstan was caching something, and an update
> to ggplot2 didn't work with the cached data.  Given the error message,
> your issue sounds more like the first one.
>
> I don't recall if there was a resolution.  Maybe you can ask the CRAN
> maintainers to rebuild buildmer.
>
> Duncan Murdoch
>
>
>
>
>
> On 18/10/2022 2:51 p.m., Carl Schwarz wrote:
> > I've run into a problem where if you install the lme4, Matrix, and
> buildmer
> > packages using the binaries from CRAN on a Mac, I get an error message
> > about a missing method, but if I install the same packages from SOURCE,
> the
> > code runs fine.
> >
> > I would have thought that installing from source or using the binary
> > should look the same.
> >
> > Any suggestions on how to proceed to resolve this issue?
> >
> > The maintainer of buildmer is also puzzled.
> > You can follow the issue in more detail at:
> >      https://github.com/cvoeten/buildmer/issues/20
> >
> > This is way above my paygrade...
> >
> > Carl Schwarz
> >
> > ------------------------------------------------------
> >
> > Tried this on an intel-Mac and arm-Mac with the same result.
> > Works fine on Windows machines under both scenarios.
> >
> > Here is a test example
> >
> > library(buildmer)
> > library(lme4)
> >
> > nrow <- 100
> >
> > test <- data.frame(x01=runif(nrow),
> >                     y=runif(nrow)<.1,
> block=as.factor(floor((1:nrow)/50)))
> > head(test)
> >
> >
> > fit.model <- lme4::glmer(y~x01 + (1|block), data=test,
> >                     family=binomial(link="logit"))
> > fit.model # this works
> >
> > class(fit.model)
> >
> > summary(fit.model)
> > # gives the following error message
> > Error in diag(from, names = FALSE) : object 'dgeMatrix_getDiag' not found
> >
> > A pdf document showing output is attached (shows the sessionInfo etc).
> >
> > When you install the buildmer and Matrix packages from SOURCE, it runs
> fine.
> >
> > I've tried all combinations of installing binary/source and only if both
> > packages (Matrix and buidmer) are installed from source, does the code
> run.
> >
> > Same issue on an intel-Mac.
> > Same issue when running under the R directly rather than Rstudio on a
> Mac.
> >
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>

	[[alternative HTML version deleted]]


From |@w@onj@|7net @end|ng |rom gm@||@com  Tue Oct 25 23:01:18 2022
From: |@w@onj@|7net @end|ng |rom gm@||@com (John Lawson)
Date: Tue, 25 Oct 2022 15:01:18 -0600
Subject: [R-pkg-devel] R Package AQLSchemes
Message-ID: <CAJiVmSCzHPR3+AP=7s-USjo2RG2OvP7cfhB=rTdMq3+prbjQXA@mail.gmail.com>

I published the R Package AQLSChemes on CRAN in May 2022. The book "An
Introduction to Acceptance Sampling and SPC with R" was published after
that, and included examples of the use of AQLSChemes package. Since then, I
have retired and was not aware that the AQLSChemes package was removed
from CRAN.  When I try to run code from the book  that requires the
AQLSChemes package, I get the message that the package doesn't exist.

My question is, How can I find out why the package AQLSChemes was removed
from CRAN, and what do I need to do to restore it to CRAN?

Sincerely
John Lawson
lawsonjsl7net at gmail.com

	[[alternative HTML version deleted]]


From roy@mende|@@ohn @end|ng |rom no@@@gov  Tue Oct 25 23:05:42 2022
From: roy@mende|@@ohn @end|ng |rom no@@@gov (Roy Mendelssohn - NOAA Federal)
Date: Tue, 25 Oct 2022 14:05:42 -0700
Subject: [R-pkg-devel] R Package AQLSchemes
In-Reply-To: <CAJiVmSCzHPR3+AP=7s-USjo2RG2OvP7cfhB=rTdMq3+prbjQXA@mail.gmail.com>
References: <CAJiVmSCzHPR3+AP=7s-USjo2RG2OvP7cfhB=rTdMq3+prbjQXA@mail.gmail.com>
Message-ID: <069B45F9-C8CC-47F5-8C80-22591D45E150@noaa.gov>

????

https://cran.r-project.org/web//packages/AQLSchemes/index.html

-Roy

> On Oct 25, 2022, at 2:01 PM, John Lawson <lawsonjsl7net at gmail.com> wrote:
> 
> AQLSChemes

**********************
"The contents of this message do not reflect any position of the U.S. Government or NOAA."
**********************
Roy Mendelssohn
Supervisory Operations Research Analyst
NOAA/NMFS
Environmental Research Division
Southwest Fisheries Science Center
***Note new street address***
110 McAllister Way
Santa Cruz, CA 95060
Phone: (831)-420-3666
Fax: (831) 420-3980
e-mail: Roy.Mendelssohn at noaa.gov www: https://www.pfeg.noaa.gov/

"Old age and treachery will overcome youth and skill."
"From those who have been given much, much will be expected" 
"the arc of the moral universe is long, but it bends toward justice" -MLK Jr.


From r@turner @end|ng |rom @uck|@nd@@c@nz  Tue Oct 25 23:42:54 2022
From: r@turner @end|ng |rom @uck|@nd@@c@nz (Rolf Turner)
Date: Wed, 26 Oct 2022 10:42:54 +1300
Subject: [R-pkg-devel] R Package AQLSchemes
In-Reply-To: <CAJiVmSCzHPR3+AP=7s-USjo2RG2OvP7cfhB=rTdMq3+prbjQXA@mail.gmail.com>
References: <CAJiVmSCzHPR3+AP=7s-USjo2RG2OvP7cfhB=rTdMq3+prbjQXA@mail.gmail.com>
Message-ID: <20221026104254.41a1a6cf@rolf-Latitude-E7470>


On Tue, 25 Oct 2022 15:01:18 -0600
John Lawson <lawsonjsl7net at gmail.com> wrote:

> I published the R Package AQLSChemes on CRAN in May 2022. The book "An
> Introduction to Acceptance Sampling and SPC with R" was published
> after that, and included examples of the use of AQLSChemes package.
> Since then, I have retired and was not aware that the AQLSChemes
> package was removed from CRAN.  When I try to run code from the book
> that requires the AQLSChemes package, I get the message that the
> package doesn't exist.
> 
> My question is, How can I find out why the package AQLSChemes was
> removed from CRAN, and what do I need to do to restore it to CRAN?

As Roy Mendelssohn has pointed out, AQLSChemes is there on CRAN.

Perhaps you need to re-install it on your machine.

cheers,

Rolf Turner

-- 
Honorary Research Fellow
Department of Statistics
University of Auckland
Phone: +64-9-373-7599 ext. 88276


From r@turner @end|ng |rom @uck|@nd@@c@nz  Tue Oct 25 23:47:27 2022
From: r@turner @end|ng |rom @uck|@nd@@c@nz (Rolf Turner)
Date: Wed, 26 Oct 2022 10:47:27 +1300
Subject: [R-pkg-devel] R Package AQLSchemes
In-Reply-To: <20221026104254.41a1a6cf@rolf-Latitude-E7470>
References: <CAJiVmSCzHPR3+AP=7s-USjo2RG2OvP7cfhB=rTdMq3+prbjQXA@mail.gmail.com>
 <20221026104254.41a1a6cf@rolf-Latitude-E7470>
Message-ID: <20221026104727.1c56a81a@rolf-Latitude-E7470>

On Wed, 26 Oct 2022 10:42:54 +1300
Rolf Turner <r.turner at auckland.ac.nz> wrote:

> On Tue, 25 Oct 2022 15:01:18 -0600
> John Lawson <lawsonjsl7net at gmail.com> wrote:
> 
> > I published the R Package AQLSChemes on CRAN in May 2022. The book
> > "An Introduction to Acceptance Sampling and SPC with R" was
> > published after that, and included examples of the use of
> > AQLSChemes package. Since then, I have retired and was not aware
> > that the AQLSChemes package was removed from CRAN.  When I try to
> > run code from the book that requires the AQLSChemes package, I get
> > the message that the package doesn't exist.
> > 
> > My question is, How can I find out why the package AQLSChemes was
> > removed from CRAN, and what do I need to do to restore it to CRAN?  
> 
> As Roy Mendelssohn has pointed out, AQLSChemes is there on CRAN.
> 
> Perhaps you need to re-install it on your machine.

Whoops!  I neglected to note the crucial fact that it's "AQLSchemes"
--- lower case "c".  Makes all the difference!

cheers,

Rolf Turner


-- 
Honorary Research Fellow
Department of Statistics
University of Auckland
Phone: +64-9-373-7599 ext. 88276


From @kw@|mmo @end|ng |rom gm@||@com  Wed Oct 26 01:48:40 2022
From: @kw@|mmo @end|ng |rom gm@||@com (Andrew Simmons)
Date: Tue, 25 Oct 2022 19:48:40 -0400
Subject: [R-pkg-devel] R Package AQLSchemes
In-Reply-To: <20221026104727.1c56a81a@rolf-Latitude-E7470>
References: <CAJiVmSCzHPR3+AP=7s-USjo2RG2OvP7cfhB=rTdMq3+prbjQXA@mail.gmail.com>
 <20221026104254.41a1a6cf@rolf-Latitude-E7470>
 <20221026104727.1c56a81a@rolf-Latitude-E7470>
Message-ID: <CAPcHnpRr+7TFRmdLHiQ8d8GGSqnj2PZ0NJEr+4JvfQWwj=qRsQ@mail.gmail.com>

The capital does not matter for CRAN, packages may not be published if an
existing package exists by the same name, regardless of case.

Plus, the package at https://CRAN.R-project.org/package=AQLSchemes says the
maintainer is John Lawson


On Tue, Oct 25, 2022, 17:53 Rolf Turner <r.turner at auckland.ac.nz> wrote:

> On Wed, 26 Oct 2022 10:42:54 +1300
> Rolf Turner <r.turner at auckland.ac.nz> wrote:
>
> > On Tue, 25 Oct 2022 15:01:18 -0600
> > John Lawson <lawsonjsl7net at gmail.com> wrote:
> >
> > > I published the R Package AQLSChemes on CRAN in May 2022. The book
> > > "An Introduction to Acceptance Sampling and SPC with R" was
> > > published after that, and included examples of the use of
> > > AQLSChemes package. Since then, I have retired and was not aware
> > > that the AQLSChemes package was removed from CRAN.  When I try to
> > > run code from the book that requires the AQLSChemes package, I get
> > > the message that the package doesn't exist.
> > >
> > > My question is, How can I find out why the package AQLSChemes was
> > > removed from CRAN, and what do I need to do to restore it to CRAN?
> >
> > As Roy Mendelssohn has pointed out, AQLSChemes is there on CRAN.
> >
> > Perhaps you need to re-install it on your machine.
>
> Whoops!  I neglected to note the crucial fact that it's "AQLSchemes"
> --- lower case "c".  Makes all the difference!
>
> cheers,
>
> Rolf Turner
>
>
> --
> Honorary Research Fellow
> Department of Statistics
> University of Auckland
> Phone: +64-9-373-7599 ext. 88276
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From y||4013 @end|ng |rom med@corne||@edu  Fri Oct 28 21:48:44 2022
From: y||4013 @end|ng |rom med@corne||@edu (Ying Li)
Date: Fri, 28 Oct 2022 19:48:44 +0000
Subject: [R-pkg-devel] Cannot submit package due to false-positive rejection
Message-ID: <PH0PR06MB71577805606D3A60DE43B7F2ED329@PH0PR06MB7157.namprd06.prod.outlook.com>

Hello all,

Our package did not pass the automagical checks when submitted to CRAN. We think the rejection is a false positive, so we ?reply-all to that message and explain? as following the official instruction. We provided explanation for all notes in that email (replied to cran-submissions at r-project.org<mailto:cran-submissions at r-project.org>) but did not receive any message after 9 days.

I am looking for suggestions on what to do in this case: should we continue waiting for CRAN team?s reply? Or is it necessary to eliminate those notes and then submit the package again?

Below are the notes from CRAN teams' auto-check service and our explanation send to CRAN team:

>Flavor: r-devel-linux-x86_64-debian-gcc, r-devel-windows-x86_64
>Check: CRAN incoming feasibility, Result: NOTE
> Maintainer: 'Arindam RoyChoudhury <arr2014 at med.cornell.edu<mailto:arr2014 at med.cornell.edu>>'

>  New submission

>  Possibly misspelled words in DESCRIPTION:
>    Peng (17:5)
>    Phylogenetics (17:32)
>   al (17:13)
>    et (17:10)

> Size of tarball: 14208488 bytes

Explain:  This is a new submission. These words are not misspelled.

>Flavor: r-devel-windows-x86_64
>Check: examples, Result: NOTE
>  Examples with CPU (user + system) or elapsed time > 10s
>       user system elapsed
>  RDM 40.05   0.89   40.94

Explain:  This is because a large dataset is used in the example. An example with large dataset is necessary, as this package is meant for analyzing large datasets.


>Flavor: r-devel-linux-x86_64-debian-gcc
>Check: examples, Result: NOTE
> Examples with CPU (user + system) or elapsed time > 5s
>      user system elapsed
>  RDM 24.399  0.888  25.289

Explain:  This is because a large dataset is used in the example. An example with large dataset is necessary, as this package is meant for analyzing large datasets.

Any suggestions or comments would be appreciated. Thank you in advance!

Best,
Ying



	[[alternative HTML version deleted]]


From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Sat Oct 29 00:02:58 2022
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Fri, 28 Oct 2022 15:02:58 -0700
Subject: [R-pkg-devel] 
 Cannot submit package due to false-positive rejection
In-Reply-To: <PH0PR06MB71577805606D3A60DE43B7F2ED329@PH0PR06MB7157.namprd06.prod.outlook.com>
References: <PH0PR06MB71577805606D3A60DE43B7F2ED329@PH0PR06MB7157.namprd06.prod.outlook.com>
Message-ID: <480EF90A-2748-4ECC-BEE6-BBED26B3F23B@dcn.davis.ca.us>

This is definitely not a false positive. Find a way to not run long calcs during the CRAN build. There is no alternative.

One way this can be done is by only running your examples when an environment variable of your choosing exists. Since CRAN machines won't configure that variable, you can get around this hard requirement.

On October 28, 2022 12:48:44 PM PDT, Ying Li via R-package-devel <r-package-devel at r-project.org> wrote:
>Hello all,
>
>Our package did not pass the automagical checks when submitted to CRAN. We think the rejection is a false positive, so we ?reply-all to that message and explain? as following the official instruction. We provided explanation for all notes in that email (replied to cran-submissions at r-project.org<mailto:cran-submissions at r-project.org>) but did not receive any message after 9 days.
>
>I am looking for suggestions on what to do in this case: should we continue waiting for CRAN team?s reply? Or is it necessary to eliminate those notes and then submit the package again?
>
>Below are the notes from CRAN teams' auto-check service and our explanation send to CRAN team:
>
>>Flavor: r-devel-linux-x86_64-debian-gcc, r-devel-windows-x86_64
>>Check: CRAN incoming feasibility, Result: NOTE
>> Maintainer: 'Arindam RoyChoudhury <arr2014 at med.cornell.edu<mailto:arr2014 at med.cornell.edu>>'
>
>>  New submission
>
>>  Possibly misspelled words in DESCRIPTION:
>>    Peng (17:5)
>>    Phylogenetics (17:32)
>>   al (17:13)
>>    et (17:10)
>
>> Size of tarball: 14208488 bytes
>
>Explain:  This is a new submission. These words are not misspelled.
>
>>Flavor: r-devel-windows-x86_64
>>Check: examples, Result: NOTE
>>  Examples with CPU (user + system) or elapsed time > 10s
>>       user system elapsed
>>  RDM 40.05   0.89   40.94
>
>Explain:  This is because a large dataset is used in the example. An example with large dataset is necessary, as this package is meant for analyzing large datasets.
>
>
>>Flavor: r-devel-linux-x86_64-debian-gcc
>>Check: examples, Result: NOTE
>> Examples with CPU (user + system) or elapsed time > 5s
>>      user system elapsed
>>  RDM 24.399  0.888  25.289
>
>Explain:  This is because a large dataset is used in the example. An example with large dataset is necessary, as this package is meant for analyzing large datasets.
>
>Any suggestions or comments would be appreciated. Thank you in advance!
>
>Best,
>Ying
>
>
>
>	[[alternative HTML version deleted]]
>

-- 
Sent from my phone. Please excuse my brevity.


From roy@mende|@@ohn @end|ng |rom no@@@gov  Sat Oct 29 00:21:50 2022
From: roy@mende|@@ohn @end|ng |rom no@@@gov (Roy Mendelssohn - NOAA Federal)
Date: Fri, 28 Oct 2022 15:21:50 -0700
Subject: [R-pkg-devel] 
 Cannot submit package due to false-positive rejection
In-Reply-To: <480EF90A-2748-4ECC-BEE6-BBED26B3F23B@dcn.davis.ca.us>
References: <PH0PR06MB71577805606D3A60DE43B7F2ED329@PH0PR06MB7157.namprd06.prod.outlook.com>
 <480EF90A-2748-4ECC-BEE6-BBED26B3F23B@dcn.davis.ca.us>
Message-ID: <BD9E5229-424B-44E1-A2B8-E018B5784732@noaa.gov>

I run into this all the time.  The trick is to find a minimal example that the package will work with that shows how to make a call,  and allows for CRAN, especially on new submissions,  to test to some extent that the function works.  For more real-life examples,  write a good vignette that uses the larger dataset,  but remember that the build of the vignette also has a time limit, I think it is 10 minutes but don't quote me on that.

I may mis-state this a little,  but I believe CRAN does a nightly build of the entire environment.  If things take too long,  the build would never finish.  I am certain there are several reasons for doing this,  but one reason is to attempt to insure that all packages work together so that they will work when you install them into your environment.  As compared to another,  unnamed language where even using the package manager I have had to trash the entire environment due to inconsistencies, so packages wouldn't load. Once even after a clean install and an "update all",  several major packages wouldn't load due to inconsistencies.  If that ever has happened in R I don't remember it,  and why I go to the trouble to get my packages into CRAN,  because a lot of users just want things to work when they install the package,  and CRAN helps with that.

HTH,

-Roy



> On Oct 28, 2022, at 3:02 PM, Jeff Newmiller <jdnewmil at dcn.davis.ca.us> wrote:
> 
> This is definitely not a false positive. Find a way to not run long calcs during the CRAN build. There is no alternative.
> 
> One way this can be done is by only running your examples when an environment variable of your choosing exists. Since CRAN machines won't configure that variable, you can get around this hard requirement.
> 
> On October 28, 2022 12:48:44 PM PDT, Ying Li via R-package-devel <r-package-devel at r-project.org> wrote:
>> Hello all,
>> 
>> Our package did not pass the automagical checks when submitted to CRAN. We think the rejection is a false positive, so we ?reply-all to that message and explain? as following the official instruction. We provided explanation for all notes in that email (replied to cran-submissions at r-project.org<mailto:cran-submissions at r-project.org>) but did not receive any message after 9 days.
>> 
>> I am looking for suggestions on what to do in this case: should we continue waiting for CRAN team?s reply? Or is it necessary to eliminate those notes and then submit the package again?
>> 
>> Below are the notes from CRAN teams' auto-check service and our explanation send to CRAN team:
>> 
>>> Flavor: r-devel-linux-x86_64-debian-gcc, r-devel-windows-x86_64
>>> Check: CRAN incoming feasibility, Result: NOTE
>>> Maintainer: 'Arindam RoyChoudhury <arr2014 at med.cornell.edu<mailto:arr2014 at med.cornell.edu>>'
>> 
>>> New submission
>> 
>>> Possibly misspelled words in DESCRIPTION:
>>>   Peng (17:5)
>>>   Phylogenetics (17:32)
>>>  al (17:13)
>>>   et (17:10)
>> 
>>> Size of tarball: 14208488 bytes
>> 
>> Explain:  This is a new submission. These words are not misspelled.
>> 
>>> Flavor: r-devel-windows-x86_64
>>> Check: examples, Result: NOTE
>>> Examples with CPU (user + system) or elapsed time > 10s
>>>      user system elapsed
>>> RDM 40.05   0.89   40.94
>> 
>> Explain:  This is because a large dataset is used in the example. An example with large dataset is necessary, as this package is meant for analyzing large datasets.
>> 
>> 
>>> Flavor: r-devel-linux-x86_64-debian-gcc
>>> Check: examples, Result: NOTE
>>> Examples with CPU (user + system) or elapsed time > 5s
>>>     user system elapsed
>>> RDM 24.399  0.888  25.289
>> 
>> Explain:  This is because a large dataset is used in the example. An example with large dataset is necessary, as this package is meant for analyzing large datasets.
>> 
>> Any suggestions or comments would be appreciated. Thank you in advance!
>> 
>> Best,
>> Ying
>> 
>> 
>> 
>> 	[[alternative HTML version deleted]]
>> 
> 
> -- 
> Sent from my phone. Please excuse my brevity.
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

**********************
"The contents of this message do not reflect any position of the U.S. Government or NOAA."
**********************
Roy Mendelssohn
Supervisory Operations Research Analyst
NOAA/NMFS
Environmental Research Division
Southwest Fisheries Science Center
***Note new street address***
110 McAllister Way
Santa Cruz, CA 95060
Phone: (831)-420-3666
Fax: (831) 420-3980
e-mail: Roy.Mendelssohn at noaa.gov www: https://www.pfeg.noaa.gov/

"Old age and treachery will overcome youth and skill."
"From those who have been given much, much will be expected" 
"the arc of the moral universe is long, but it bends toward justice" -MLK Jr.


From |ent|nj @end|ng |rom @hutt|ethre@d@com  Sat Oct 29 14:14:20 2022
From: |ent|nj @end|ng |rom @hutt|ethre@d@com (Jamie Lentin)
Date: Sat, 29 Oct 2022 13:14:20 +0100
Subject: [R-pkg-devel] 
 Cannot submit package due to false-positive rejection
In-Reply-To: <PH0PR06MB71577805606D3A60DE43B7F2ED329@PH0PR06MB7157.namprd06.prod.outlook.com>
References: <PH0PR06MB71577805606D3A60DE43B7F2ED329@PH0PR06MB7157.namprd06.prod.outlook.com>
Message-ID: <08dfc9afef2668f9016cd62509a0f046@shuttlethread.com>

On 2022-10-28 20:48, Ying Li via R-package-devel wrote:
>> Flavor: r-devel-windows-x86_64
>> Check: examples, Result: NOTE
>>  Examples with CPU (user + system) or elapsed time > 10s
>>       user system elapsed
>>  RDM 40.05   0.89   40.94
> 
> Explain:  This is because a large dataset is used in the example. An
> example with large dataset is necessary, as this package is meant for
> analyzing large datasets.

Wrapping with \donttest{} may help here. Despite the name, CMD check 
--as-cran *will* run these tests, but will not be subject to the same 
time restrictions.

On submission of your package, the examples will be run with and without 
\donttest{}. However, the periodic (daily?) checks that get run skip the 
\donttest{} checks, to keep the CPU time these require manageable, and 
this is what the NOTE is about.

Cheers,


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Sat Oct 29 15:19:08 2022
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Sat, 29 Oct 2022 15:19:08 +0200
Subject: [R-pkg-devel] 
 Cannot submit package due to false-positive rejection
In-Reply-To: <08dfc9afef2668f9016cd62509a0f046@shuttlethread.com>
References: <PH0PR06MB71577805606D3A60DE43B7F2ED329@PH0PR06MB7157.namprd06.prod.outlook.com>
 <08dfc9afef2668f9016cd62509a0f046@shuttlethread.com>
Message-ID: <25437.10316.973300.694494@stat.math.ethz.ch>

>>>>> Jamie Lentin 
>>>>>     on Sat, 29 Oct 2022 13:14:20 +0100 writes:

    > On 2022-10-28 20:48, Ying Li via R-package-devel wrote:
    >>> Flavor: r-devel-windows-x86_64 Check: examples, Result:
    >>> NOTE Examples with CPU (user + system) or elapsed time >
    >>> 10s user system elapsed RDM 40.05 0.89 40.94
    >> 
    >> Explain: This is because a large dataset is used in the
    >> example. An example with large dataset is necessary, as
    >> this package is meant for analyzing large datasets.

    > Wrapping with \donttest{} may help here. Despite the name,
    > CMD check --as-cran *will* run these tests, but will not
    > be subject to the same time restrictions.

    > On submission of your package, the examples will be run
    > with and without \donttest{}. However, the periodic
    > (daily?) checks that get run skip the \donttest{} checks,
    > to keep the CPU time these require manageable, and this is
    > what the NOTE is about.

    > Cheers,

Sorry to be blunt but I think only Roy's is good here:
Make a small data example even though the package is for large
data ... maybe adding a comment about the really large data
example, in a vignette or possibly simply commented out (or \donttest{..}).

Do - by all means - have examples in your code  which run --
also always on CRAN.
\donttest{} or some sneaky tricks to circumenvent CRAN checks
running the example are only cheap workarounds, but not really
good.

Reasons:
- Users new to your package may just want to try a new
  function  via   example(<your_function>)   {or nowadays also
  clicking "Run example" in some setups}

  I do tend to misttrust (or worse) packages which do nothing in
  a such case.

- When we, as R Core, consider tweaking / changing R we do
  sometimes in advance and the CRAN processes do very regularly
  run all the checks of all CRAN with "R-devel", the development
  version and hence potential "next version" of R.
  Your package's example will be run (if they are ..!) and you
  as package author may be notified well in advance should the
  examples stop running.


With regards,
Martin


From r m@iii@g oii @be@@@ch  Sun Oct 30 14:48:05 2022
From: r m@iii@g oii @be@@@ch (r m@iii@g oii @be@@@ch)
Date: Sun, 30 Oct 2022 14:48:05 +0100
Subject: [R-pkg-devel] Latex issue on CRAN: Package pdftex.def Error
Message-ID: <C6BE8AAE-92A0-4FD4-9224-C316E1D60314@nbenn.ch>

Dear list

Trying to push a fix to CRAN, I?m now running into a Latex issue. I can neither relate the issue I?m trying to resolve, nor my fix, to this new problem, so I?m a bit lost (and slightly frustrated).

I cannot reproduce this specific issue anywhere, neither locally (macOS), nor on win devel, r-hub and Github (there are some other issues on Gh and r-hub, but I don?t believe them to be relevant here).

All I have to go on is:

- A WARNING in ?checking PDF version of manual?: LaTeX errors found: ! Package pdftex.def Error: File `...' not found: using draft setting.
- An ERROR in ?checking PDF version of manual without index?
- A NOTE in ?checking for non-standard things in the check directory?: Found the following files/directories: ?...-manual.tex?

It seems like when building the PDF manual, an image that should be included is not found and then things fall apart, causing both the error and note. For all I know, the image should be there unter `man/figures/`.

The problem is showing up in the same way for both ?Windows? and ?Debian? (with slightly different notes due to intermediate files not being cleaned up properly).

Have there been and Latex-related changes to CRAN recently? Are others seeing similar problems? Any ideas what could be causing this?

For completeness: https://win-builder.r-project.org/incoming_pretest/ricu_0.5.4_20221030_131320/

Best,
Nicolas 


	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Sun Oct 30 15:00:05 2022
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Sun, 30 Oct 2022 17:00:05 +0300
Subject: [R-pkg-devel] Latex issue on CRAN: Package pdftex.def Error
In-Reply-To: <C6BE8AAE-92A0-4FD4-9224-C316E1D60314@nbenn.ch>
References: <C6BE8AAE-92A0-4FD4-9224-C316E1D60314@nbenn.ch>
Message-ID: <20221030170005.41ef0b2f@Tarkus>

? Sun, 30 Oct 2022 14:48:05 +0100
r at nbenn.ch ?????:

> It seems like when building the PDF manual, an image that should be
> included is not found and then things fall apart, causing both the
> error and note. For all I know, the image should be there unter
> `man/figures/`.

Is it the following change?

https://github.com/eth-mds/ricu/commit/b4ac31a2cc22da236e56ce9875b2d799ae172d46

The updated Rd file now says "\figure{man/figures/sofa-sep-3-1.png}".
According to WRE 2.7, paths to the figures should be specified relative
to man/figures. In other words, in order to reference
man/figures/sofa-sep-3-1.png, use \figure{sofa-sep-3-1.png}.

-- 
Best regards,
Ivan


From cont@ct @end|ng |rom @te|@n@ngr|ck@net  Sun Oct 30 08:56:03 2022
From: cont@ct @end|ng |rom @te|@n@ngr|ck@net (Stefan Angrick)
Date: Sun, 30 Oct 2022 16:56:03 +0900
Subject: [R-pkg-devel] Best way to restore an archived CRAN package
Message-ID: <d01a36ff-d779-41cc-b3b7-df2414d8cbaf@app.fastmail.com>

Hi,

I'm looking for advice on how to resurrect an archived R package.

I have a couple of scripts that rely on the CC0-licensed BIS package (https://cran.r-project.org/package=BIS) which downloads and parses data from the Bank for International Settlements. The package was archived in 2021, presumably because the format of the source data changed which I imagine caused examples to fail. Writing code to digest the new data format is straightforward, so I'd like to bring the package back. Unfortunately I'm unable to reach the original author, so I'm unsure how to proceed.

Does CRAN allow for people other than the original author to bring back a package? Or would it be preferable to create a new package with a new name? In either case, how would the original package author be acknowledged?

Thanks,
Stefan


From kry|ov@r00t @end|ng |rom gm@||@com  Sun Oct 30 15:58:03 2022
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Sun, 30 Oct 2022 17:58:03 +0300
Subject: [R-pkg-devel] Best way to restore an archived CRAN package
In-Reply-To: <d01a36ff-d779-41cc-b3b7-df2414d8cbaf@app.fastmail.com>
References: <d01a36ff-d779-41cc-b3b7-df2414d8cbaf@app.fastmail.com>
Message-ID: <20221030175803.4106533d@Tarkus>

? Sun, 30 Oct 2022 16:56:03 +0900
"Stefan Angrick" <contact at stefanangrick.net> ?????:

> Writing code to digest the new data format is straightforward, so I'd
> like to bring the package back. Unfortunately I'm unable to reach the
> original author, so I'm unsure how to proceed.
> 
> Does CRAN allow for people other than the original author to bring
> back a package?

According to the CRAN policy [*], it should be possible to submit the
fixed package under the original name with an explanation that the
previous maintainer is unavailable:

>> Explain any change in the maintainer?s email address and if possible
>> send confirmation from the previous address (by a separate email to
>> CRAN-submissions at R-project.org) or explain why it is not possible.

Disclaimer: I've never done this myself.

For the record, the author's GitHub and Twitter accounts are trivial to
find; there is a bit of activity in the former (only once in 2022), and
the last update in the latter was in 2020.

> In either case, how would the original package author be acknowledged?

Make sure to mention Eric Persson in the Authors: field of the
DESCRIPTION file as a full author, but not the maintainer.

You will also need to make sure that the examples never crash, even if
there's no connection to the Internet, which may have been part of the
original reason the package had been archived.

-- 
Best regards,
Ivan

[*] https://cran.r-project.org/web/packages/policies.html


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Mon Oct 31 16:59:24 2022
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Mon, 31 Oct 2022 16:59:24 +0100
Subject: [R-pkg-devel] 
 Cannot submit package due to false-positive rejection
In-Reply-To: <08dfc9afef2668f9016cd62509a0f046@shuttlethread.com>
References: <PH0PR06MB71577805606D3A60DE43B7F2ED329@PH0PR06MB7157.namprd06.prod.outlook.com>
 <08dfc9afef2668f9016cd62509a0f046@shuttlethread.com>
Message-ID: <55bab65a-62b9-6115-6a4d-0b35ece1e5fa@statistik.tu-dortmund.de>



On 29.10.2022 14:14, Jamie Lentin wrote:
> On 2022-10-28 20:48, Ying Li via R-package-devel wrote:
>>> Flavor: r-devel-windows-x86_64
>>> Check: examples, Result: NOTE
>>> ?Examples with CPU (user + system) or elapsed time > 10s
>>> ????? user system elapsed
>>> ?RDM 40.05?? 0.89?? 40.94
>>
>> Explain:? This is because a large dataset is used in the example. An
>> example with large dataset is necessary, as this package is meant for
>> analyzing large datasets.
> 
> Wrapping with \donttest{} may help here. Despite the name, CMD check 
> --as-cran *will* run these tests, but will not be subject to the same 
> time restrictions.

Well, we run these on CRAN from time to time, but R CMD check --as-cran 
does not run them.

I dom not believe you need a large data frame for the examples: The 
exanmples are intended to show users how you call the function and pass 
the arguments. You do not need to demonstrate that you can run it on 
huge data, as your users don't want to wait for hours in order to see 
the principles of the function call ....

Best,
Uwe Ligges


> 
> On submission of your package, the examples will be run with and without 
> \donttest{}. However, the periodic (daily?) checks that get run skip the 
> \donttest{} checks, to keep the CPU time these require manageable, and 
> this is what the NOTE is about.
> 
> Cheers,
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From @kw@|mmo @end|ng |rom gm@||@com  Fri Nov  4 02:09:42 2022
From: @kw@|mmo @end|ng |rom gm@||@com (Andrew Simmons)
Date: Thu, 3 Nov 2022 21:09:42 -0400
Subject: [R-pkg-devel] Compiled code should not call non-API entry points in
 R
Message-ID: <CAPcHnpTdWg4H8a0n3emLBJgdHVZQBVW+BPi75wV4iX-GnNfm8w@mail.gmail.com>

Hi everyone,


I had some R code for dealing with connections, and I was using
summary.connection(). I rewrote it in C, so I was doing something more
like:

#include <R_ext/Connections.h>

Rconnection Rcon = R_GetConnection(file);
Rcon->description or Rcon->class

but now, when checking my package, I get the following note:

* checking compiled code ... NOTE
File 'this.path/libs/x64/this.path.dll':
  Found non-API call to R: 'R_GetConnection'

Compiled code should not call non-API entry points in R.

See 'Writing portable packages' in the 'Writing R Extensions' manual.

This isn't surprising, <R_ext/Connections.h> (seen here:
https://github.com/wch/r-source/blob/50ff41b742a1ac655314be5e25897a12d3096661/src/include/R_ext/Connections.h#L21)
says that it is not part of the R API, and later on says that it is
subject to change without notice or backwards compatibility.

R_GetConnection was added in R 3.3.0, so I added "Depends: R (>=
3.3.0)" to my DESCRIPTION, then I added something like this to my
header:

#if !defined(R_CONNECTIONS_VERSION)
    #error why is R_CONNECTIONS_VERSION not defined????
#elif R_CONNECTIONS_VERSION == 1
    extern Rconnection R_GetConnection(SEXP sConn);
#else
    #error this.path is only implemented for R_CONNECTIONS_VERSION 1
#endif

but the NOTE still remains. I think I've taken all the precautions I
can, is there anything more I can do? Will I be unable to submit the
update for my package? Will the CRAN team ignore the NOTE if I explain
the precautions I added?


From edd @end|ng |rom deb|@n@org  Fri Nov  4 02:44:07 2022
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Thu, 3 Nov 2022 20:44:07 -0500
Subject: [R-pkg-devel] 
 Compiled code should not call non-API entry points in R
In-Reply-To: <CAPcHnpTdWg4H8a0n3emLBJgdHVZQBVW+BPi75wV4iX-GnNfm8w@mail.gmail.com>
References: <CAPcHnpTdWg4H8a0n3emLBJgdHVZQBVW+BPi75wV4iX-GnNfm8w@mail.gmail.com>
Message-ID: <25444.28263.410340.140167@rob.eddelbuettel.com>


On 3 November 2022 at 21:09, Andrew Simmons wrote:
| I had some R code for dealing with connections, and I was using
| summary.connection(). I rewrote it in C, so I was doing something more
| like:
| 
| #include <R_ext/Connections.h>
| 
| Rconnection Rcon = R_GetConnection(file);
| Rcon->description or Rcon->class
| 
| but now, when checking my package, I get the following note:
| 
| * checking compiled code ... NOTE
| File 'this.path/libs/x64/this.path.dll':
|   Found non-API call to R: 'R_GetConnection'
| 
| Compiled code should not call non-API entry points in R.
| 
| See 'Writing portable packages' in the 'Writing R Extensions' manual.
| 
| This isn't surprising, <R_ext/Connections.h> (seen here:
| https://github.com/wch/r-source/blob/50ff41b742a1ac655314be5e25897a12d3096661/src/include/R_ext/Connections.h#L21)
| says that it is not part of the R API, and later on says that it is
| subject to change without notice or backwards compatibility.
| 
| R_GetConnection was added in R 3.3.0, so I added "Depends: R (>=
| 3.3.0)" to my DESCRIPTION, then I added something like this to my
| header:
| 
| #if !defined(R_CONNECTIONS_VERSION)
|     #error why is R_CONNECTIONS_VERSION not defined????
| #elif R_CONNECTIONS_VERSION == 1
|     extern Rconnection R_GetConnection(SEXP sConn);
| #else
|     #error this.path is only implemented for R_CONNECTIONS_VERSION 1
| #endif
| 
| but the NOTE still remains. I think I've taken all the precautions I
| can, is there anything more I can do? Will I be unable to submit the
| update for my package? Will the CRAN team ignore the NOTE if I explain
| the precautions I added?

The R API is owned by R Core. So they can do as they please.

And so they do as they are acutely aware of the cost of maintaining an
'enlarged surface'. And they try to keep it small. Understandably so.

Some of us package developers have asked for more interfaces. Repeatedly so
for connections for what is (likely already, else soon) twenty years. Alas...

Then there is https://en.wikipedia.org/wiki/Fundamental_theorem_of_software_engineering
so eventually we run out of patience.

Hence, as both trial baloons as well as intial use case I published two packages
  RApiDatetime    exposing some unexported datetime conversion
  RApiSerialize   exposing some (basic) connections facilities

RApiSerialize really owes a Thank You! to RhpcBLASctl as Junji and Ei-ji
showed me the way of what one could do here.

Now, do I think these packages are the best answer? Far from it. Vendoring,
as done here, casts existing interfaces (and behavior) in conrete. It is less
than ideal. The code can atrophy. But it provides access when those who own
the access refuse to provide it (for what remain defensible reasons).

All told, not ideal either way. But venues for workarounds exist. So
sometimes they are taken. Because we can. Just look for the least-evil way.

Dirk
 

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From ||oruppr @end|ng |rom gm@||@com  Fri Nov  4 12:15:36 2022
From: ||oruppr @end|ng |rom gm@||@com (Florian Rupprecht)
Date: Fri, 4 Nov 2022 12:15:36 +0100
Subject: [R-pkg-devel] 
 Compiled code should not call non-API entry points in R
In-Reply-To: <CAPcHnpTdWg4H8a0n3emLBJgdHVZQBVW+BPi75wV4iX-GnNfm8w@mail.gmail.com>
References: <CAPcHnpTdWg4H8a0n3emLBJgdHVZQBVW+BPi75wV4iX-GnNfm8w@mail.gmail.com>
Message-ID: <CAHTZEhD1KFHvqtCrERQZbVPXWZ6B-=fAwrZ6hasc4N17M427-g@mail.gmail.com>

When a public C interface is missing you could always load and call the R
interface.

Definitely slower, but the API will be more stable than when vendoring (and
CRAN will be happier).

Best,
Florian



On Fri, Nov 4, 2022, 02:10 Andrew Simmons <akwsimmo at gmail.com> wrote:

> Hi everyone,
>
>
> I had some R code for dealing with connections, and I was using
> summary.connection(). I rewrote it in C, so I was doing something more
> like:
>
> #include <R_ext/Connections.h>
>
> Rconnection Rcon = R_GetConnection(file);
> Rcon->description or Rcon->class
>
> but now, when checking my package, I get the following note:
>
> * checking compiled code ... NOTE
> File 'this.path/libs/x64/this.path.dll':
>   Found non-API call to R: 'R_GetConnection'
>
> Compiled code should not call non-API entry points in R.
>
> See 'Writing portable packages' in the 'Writing R Extensions' manual.
>
> This isn't surprising, <R_ext/Connections.h> (seen here:
>
> https://github.com/wch/r-source/blob/50ff41b742a1ac655314be5e25897a12d3096661/src/include/R_ext/Connections.h#L21
> )
> says that it is not part of the R API, and later on says that it is
> subject to change without notice or backwards compatibility.
>
> R_GetConnection was added in R 3.3.0, so I added "Depends: R (>=
> 3.3.0)" to my DESCRIPTION, then I added something like this to my
> header:
>
> #if !defined(R_CONNECTIONS_VERSION)
>     #error why is R_CONNECTIONS_VERSION not defined????
> #elif R_CONNECTIONS_VERSION == 1
>     extern Rconnection R_GetConnection(SEXP sConn);
> #else
>     #error this.path is only implemented for R_CONNECTIONS_VERSION 1
> #endif
>
> but the NOTE still remains. I think I've taken all the precautions I
> can, is there anything more I can do? Will I be unable to submit the
> update for my package? Will the CRAN team ignore the NOTE if I explain
> the precautions I added?
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From jm@yu@n @end|ng |rom out|ook@com  Sat Nov  5 15:41:45 2022
From: jm@yu@n @end|ng |rom out|ook@com (Jiaming Yuan)
Date: Sat, 5 Nov 2022 22:41:45 +0800
Subject: [R-pkg-devel] Examples with CPU time is greater than elapsed time.
Message-ID: <OS3P286MB085027CB079AAE4DF4FE7FAAF63A9@OS3P286MB0850.JPNP286.PROD.OUTLOOK.COM>

Hi all,

I tried to submit an update to the xgboost package but didn't pass the 
pre-tests with the following note (solved the other one, but this one is 
a bit confusing):

```
Flavor: r-devel-linux-x86_64-debian-gcc
Check: examples, Result: NOTE
   Examples with CPU time > 2.5 times elapsed time
                        user system elapsed ratio
   cb.gblinear.history 1.454  0.017    0.49 3.002

```

I can't reproduce the note on win-builder: 
https://win-builder.r-project.org/ as it's running on Windows but the 
note appears on debian tests. I'm not able to reproduce it on my local 
machine either with Ubuntu 22.04. I'm wondering what the note is trying 
to tell me and how can I resolve it with confidence.


The full log is here: 
https://win-builder.r-project.org/incoming_pretest/xgboost_1.7.1.1_20221104_194252/Debian/00check.log 
.


Many thanks!

Jiaming


From henr|k@bengt@@on @end|ng |rom gm@||@com  Sat Nov  5 19:22:52 2022
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Sat, 5 Nov 2022 11:22:52 -0700
Subject: [R-pkg-devel] 
 Examples with CPU time is greater than elapsed time.
In-Reply-To: <OS3P286MB085027CB079AAE4DF4FE7FAAF63A9@OS3P286MB0850.JPNP286.PROD.OUTLOOK.COM>
References: <OS3P286MB085027CB079AAE4DF4FE7FAAF63A9@OS3P286MB0850.JPNP286.PROD.OUTLOOK.COM>
Message-ID: <CAFDcVCS2LHT9a9Q07E4tOqxE8TTGuXZ4NPpUv+S715gF2G6=ZQ@mail.gmail.com>

I think it's because it suggests that the package uses more than 250%
of CPU load on average, which suggests it runs in parallel with more
than two parallel workers, which is the upper limit in the CRAN
Policies (https://cran.r-project.org/web/packages/policies.html);

"If running a package uses multiple threads/cores it must never use
more than two simultaneously: the check farm is a shared resource and
will typically be running many checks simultaneously. "

>From the R Internals
(https://cran.r-project.org/doc/manuals/r-release/R-ints.html):

"_R_CHECK_EXAMPLE_TIMING_CPU_TO_ELAPSED_THRESHOLD_: For checks with
timings enabled, report examples where the ratio of CPU time to
elapsed time exceeds this threshold (and the CPU time is at least one
second). This can help detect the simultaneous use of multiple CPU
cores. Default: NA."

It looks like CRAN incoming sets
_R_CHECK_EXAMPLE_TIMING_CPU_TO_ELAPSED_THRESHOLD_=2.5.

If multi-threading is involved, I guess you need to make sure to limit
it to ~2 parallel threads.

/Henrik

On Sat, Nov 5, 2022 at 11:10 AM Jiaming Yuan <jm.yuan at outlook.com> wrote:
>
> Hi all,
>
> I tried to submit an update to the xgboost package but didn't pass the
> pre-tests with the following note (solved the other one, but this one is
> a bit confusing):
>
> ```
> Flavor: r-devel-linux-x86_64-debian-gcc
> Check: examples, Result: NOTE
>    Examples with CPU time > 2.5 times elapsed time
>                         user system elapsed ratio
>    cb.gblinear.history 1.454  0.017    0.49 3.002
>
> ```
>
> I can't reproduce the note on win-builder:
> https://win-builder.r-project.org/ as it's running on Windows but the
> note appears on debian tests. I'm not able to reproduce it on my local
> machine either with Ubuntu 22.04. I'm wondering what the note is trying
> to tell me and how can I resolve it with confidence.
>
>
> The full log is here:
> https://win-builder.r-project.org/incoming_pretest/xgboost_1.7.1.1_20221104_194252/Debian/00check.log
> .
>
>
> Many thanks!
>
> Jiaming
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From kry|ov@r00t @end|ng |rom gm@||@com  Sat Nov  5 19:30:28 2022
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Sat, 5 Nov 2022 21:30:28 +0300
Subject: [R-pkg-devel] 
 Examples with CPU time is greater than elapsed time.
In-Reply-To: <OS3P286MB085027CB079AAE4DF4FE7FAAF63A9@OS3P286MB0850.JPNP286.PROD.OUTLOOK.COM>
References: <OS3P286MB085027CB079AAE4DF4FE7FAAF63A9@OS3P286MB0850.JPNP286.PROD.OUTLOOK.COM>
Message-ID: <20221105213028.10861c68@Tarkus>

On Sat, 5 Nov 2022 22:41:45 +0800
Jiaming Yuan <jm.yuan at outlook.com> wrote:

>    Examples with CPU time > 2.5 times elapsed time

> I'm wondering what the note is trying to tell me and how can I
> resolve it with confidence.

Henrik Bengtsson already gave a good explanation of the problem.

Not sure what exactly is the right thing to do, but one way to get rid
of this warning could be to pass the argument nthread =
min(parallel::detectCores(), 2) to the xgb.cv invocation (if you
already use the parallel package anywhere) or maybe to hard-code the
use of only one thread in the example.

-- 
Best regards,
Ivan


From d@v|dhughjone@ @end|ng |rom gm@||@com  Sat Nov  5 20:32:29 2022
From: d@v|dhughjone@ @end|ng |rom gm@||@com (David Hugh-Jones)
Date: Sat, 5 Nov 2022 19:32:29 +0000
Subject: [R-pkg-devel] Writing to users config directory for CRAN package
Message-ID: <CAARY7kiaUcEpf3h3eCbA=cOZaDJCsY-s-YqWScz4DTALu9eC3Q@mail.gmail.com>

Hi,

I'm considering submitting the package onetime (
https://github.com/hughjonesd/onetime/) to CRAN.

Onetime has functions for showing a message or warning only once (ever per
user). It does this by writing to a file in the user's configuration
directory, as reported by rappdirs::user_config_dir().

I know that CRAN has rules about not writing to the user's file system
without permission. What would be an appropriate way to do this? For
example, the function onetime_message_confirm() prints a message and then
asks "Show this again?[yN]" Would a "no" count as permission to write the
file?

Cheers,
David

	[[alternative HTML version deleted]]


From edd @end|ng |rom deb|@n@org  Sat Nov  5 21:29:20 2022
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Sat, 5 Nov 2022 15:29:20 -0500
Subject: [R-pkg-devel] 
 Writing to users config directory for CRAN package
In-Reply-To: <CAARY7kiaUcEpf3h3eCbA=cOZaDJCsY-s-YqWScz4DTALu9eC3Q@mail.gmail.com>
References: <CAARY7kiaUcEpf3h3eCbA=cOZaDJCsY-s-YqWScz4DTALu9eC3Q@mail.gmail.com>
Message-ID: <25446.51104.360520.856815@rob.eddelbuettel.com>


On 5 November 2022 at 19:32, David Hugh-Jones wrote:
| I'm considering submitting the package onetime (
| https://github.com/hughjonesd/onetime/) to CRAN.
| 
| Onetime has functions for showing a message or warning only once (ever per
| user). It does this by writing to a file in the user's configuration
| directory, as reported by rappdirs::user_config_dir().

There is a base R function tools::R_user_dir() which I use in a few packages
along with packageName() to store config information across sessions. A quick
search at GitHub's 'cran' org mirroring CRAN finds 110 hits:

   https://github.com/search?q=org%3Acran+R_user_dir&type=code

You could keep a hashmap in that directory, and maybe (before it has been
written a first time) alert the user that you cannot write without (initial)
permission.  As I recall, the idea behind the (sensible) CRAN Policy is to
not litter user directories with random files with the user knowing.

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From jm@yu@n @end|ng |rom out|ook@com  Sat Nov  5 22:03:55 2022
From: jm@yu@n @end|ng |rom out|ook@com (Jiaming Yuan)
Date: Sun, 6 Nov 2022 05:03:55 +0800
Subject: [R-pkg-devel] 
 Examples with CPU time is greater than elapsed time.
In-Reply-To: <CAFDcVCS2LHT9a9Q07E4tOqxE8TTGuXZ4NPpUv+S715gF2G6=ZQ@mail.gmail.com>
References: <OS3P286MB085027CB079AAE4DF4FE7FAAF63A9@OS3P286MB0850.JPNP286.PROD.OUTLOOK.COM>
 <CAFDcVCS2LHT9a9Q07E4tOqxE8TTGuXZ4NPpUv+S715gF2G6=ZQ@mail.gmail.com>
Message-ID: <TYCP286MB08635B2EDE4411360B339052F63A9@TYCP286MB0863.JPNP286.PROD.OUTLOOK.COM>

Thank you for the detailed explanation, that's really helpful!

On 11/6/22 02:22, Henrik Bengtsson wrote:
> I think it's because it suggests that the package uses more than 250%
> of CPU load on average, which suggests it runs in parallel with more
> than two parallel workers, which is the upper limit in the CRAN
> Policies (https://cran.r-project.org/web/packages/policies.html);
>
> "If running a package uses multiple threads/cores it must never use
> more than two simultaneously: the check farm is a shared resource and
> will typically be running many checks simultaneously. "
>
>  From the R Internals
> (https://cran.r-project.org/doc/manuals/r-release/R-ints.html):
>
> "_R_CHECK_EXAMPLE_TIMING_CPU_TO_ELAPSED_THRESHOLD_: For checks with
> timings enabled, report examples where the ratio of CPU time to
> elapsed time exceeds this threshold (and the CPU time is at least one
> second). This can help detect the simultaneous use of multiple CPU
> cores. Default: NA."
>
> It looks like CRAN incoming sets
> _R_CHECK_EXAMPLE_TIMING_CPU_TO_ELAPSED_THRESHOLD_=2.5.
>
> If multi-threading is involved, I guess you need to make sure to limit
> it to ~2 parallel threads.
>
> /Henrik
>
> On Sat, Nov 5, 2022 at 11:10 AM Jiaming Yuan <jm.yuan at outlook.com> wrote:
>> Hi all,
>>
>> I tried to submit an update to the xgboost package but didn't pass the
>> pre-tests with the following note (solved the other one, but this one is
>> a bit confusing):
>>
>> ```
>> Flavor: r-devel-linux-x86_64-debian-gcc
>> Check: examples, Result: NOTE
>>     Examples with CPU time > 2.5 times elapsed time
>>                          user system elapsed ratio
>>     cb.gblinear.history 1.454  0.017    0.49 3.002
>>
>> ```
>>
>> I can't reproduce the note on win-builder:
>> https://win-builder.r-project.org/ as it's running on Windows but the
>> note appears on debian tests. I'm not able to reproduce it on my local
>> machine either with Ubuntu 22.04. I'm wondering what the note is trying
>> to tell me and how can I resolve it with confidence.
>>
>>
>> The full log is here:
>> https://win-builder.r-project.org/incoming_pretest/xgboost_1.7.1.1_20221104_194252/Debian/00check.log
>> .
>>
>>
>> Many thanks!
>>
>> Jiaming
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From jm@yu@n @end|ng |rom out|ook@com  Sat Nov  5 22:07:49 2022
From: jm@yu@n @end|ng |rom out|ook@com (Jiaming Yuan)
Date: Sun, 6 Nov 2022 05:07:49 +0800
Subject: [R-pkg-devel] 
 Examples with CPU time is greater than elapsed time.
In-Reply-To: <20221105213028.10861c68@Tarkus>
References: <OS3P286MB085027CB079AAE4DF4FE7FAAF63A9@OS3P286MB0850.JPNP286.PROD.OUTLOOK.COM>
 <20221105213028.10861c68@Tarkus>
Message-ID: <TYCP286MB0863F129E32B83DCC3C9AA3EF63A9@TYCP286MB0863.JPNP286.PROD.OUTLOOK.COM>

Thank you for the suggestions! I think I will hard-code the number of 
threads to 2 in that specific example.

On 11/6/22 02:30, Ivan Krylov wrote:
> On Sat, 5 Nov 2022 22:41:45 +0800
> Jiaming Yuan <jm.yuan at outlook.com> wrote:
>
>>     Examples with CPU time > 2.5 times elapsed time
>> I'm wondering what the note is trying to tell me and how can I
>> resolve it with confidence.
> Henrik Bengtsson already gave a good explanation of the problem.
>
> Not sure what exactly is the right thing to do, but one way to get rid
> of this warning could be to pass the argument nthread =
> min(parallel::detectCores(), 2) to the xgb.cv invocation (if you
> already use the parallel package anywhere) or maybe to hard-code the
> use of only one thread in the example.
>


From A@J@God|rey @end|ng |rom m@@@ey@@c@nz  Sun Nov  6 07:32:55 2022
From: A@J@God|rey @end|ng |rom m@@@ey@@c@nz (Jonathan Godfrey)
Date: Sun, 6 Nov 2022 06:32:55 +0000
Subject: [R-pkg-devel] FW: Writing to users config directory for CRAN package
In-Reply-To: <MEAPR01MB3829B8B0F7F587BB4BB2BF5E933D9@MEAPR01MB3829.ausprd01.prod.outlook.com>
References: <CAARY7kiaUcEpf3h3eCbA=cOZaDJCsY-s-YqWScz4DTALu9eC3Q@mail.gmail.com>
 <25446.51104.360520.856815@rob.eddelbuettel.com>
 <MEAPR01MB3829B8B0F7F587BB4BB2BF5E933D9@MEAPR01MB3829.ausprd01.prod.outlook.com>
Message-ID: <MEAPR01MB382908AB14EE517DF0FDC7AA933D9@MEAPR01MB3829.ausprd01.prod.outlook.com>


Further to Dirk's advice, my BrailleR package creates a folder (dumping ground). Users are asked if they want to use  one of my choosing, or a temporary one. If they choose temporary, they get asked again and again until they cave in to my wishes!


BrailleR also writes files to the current working directory, but these are done because the user has chosen to run a command that has the purpose of creating files. I put a warning in the documentation for such functions.

I'm not suggesting my solution is the gold standard, but it is working well enough to keep the CRAN checkers happy.

Jonathan


-----Original Message-----
From: R-package-devel <r-package-devel-bounces at r-project.org> On Behalf Of Dirk Eddelbuettel
Sent: Sunday, 6 November 2022 9:29 am
To: David Hugh-Jones <davidhughjones at gmail.com>
Cc: R package devel <r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] Writing to users config directory for CRAN package


On 5 November 2022 at 19:32, David Hugh-Jones wrote:
| I'm considering submitting the package onetime (
| https://apc01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fhughjonesd%2Fonetime%2F&amp;data=05%7C01%7Ca.j.godfrey%40massey.ac.nz%7C33d5f70186284052580908dabf6c7826%7C388728e1bbd0437898dcf8682e644300%7C1%7C0%7C638032769864581576%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=EbBh9XCyyKsRTACo7eLxASZW3pm%2BTrXxzKjjnxBa%2Fpo%3D&amp;reserved=0) to CRAN.
| 
| Onetime has functions for showing a message or warning only once (ever 
| per user). It does this by writing to a file in the user's 
| configuration directory, as reported by rappdirs::user_config_dir().

There is a base R function tools::R_user_dir() which I use in a few packages along with packageName() to store config information across sessions. A quick search at GitHub's 'cran' org mirroring CRAN finds 110 hits:

   https://apc01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fsearch%3Fq%3Dorg%253Acran%2BR_user_dir%26type%3Dcode&amp;data=05%7C01%7Ca.j.godfrey%40massey.ac.nz%7C33d5f70186284052580908dabf6c7826%7C388728e1bbd0437898dcf8682e644300%7C1%7C0%7C638032769864737810%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=Wlqbm0tZX0h25rm0veh%2F15IAwJ5mqP9VNPUovlaPhdY%3D&amp;reserved=0

You could keep a hashmap in that directory, and maybe (before it has been written a first time) alert the user that you cannot write without (initial) permission.  As I recall, the idea behind the (sensible) CRAN Policy is to not litter user directories with random files with the user knowing.

Dirk

--
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org

______________________________________________
R-package-devel at r-project.org mailing list
https://apc01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-package-devel&amp;data=05%7C01%7Ca.j.godfrey%40massey.ac.nz%7C33d5f70186284052580908dabf6c7826%7C388728e1bbd0437898dcf8682e644300%7C1%7C0%7C638032769864737810%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=kB8nHrtC5yGEm4tnOTZDOAGT%2FmtDViGblNvieFlZq7g%3D&amp;reserved=0


From d@v|dhughjone@ @end|ng |rom gm@||@com  Sun Nov  6 07:41:08 2022
From: d@v|dhughjone@ @end|ng |rom gm@||@com (David Hugh-Jones)
Date: Sun, 6 Nov 2022 06:41:08 +0000
Subject: [R-pkg-devel] FW: Writing to users config directory for CRAN
 package
In-Reply-To: <MEAPR01MB382908AB14EE517DF0FDC7AA933D9@MEAPR01MB3829.ausprd01.prod.outlook.com>
References: <CAARY7kiaUcEpf3h3eCbA=cOZaDJCsY-s-YqWScz4DTALu9eC3Q@mail.gmail.com>
 <25446.51104.360520.856815@rob.eddelbuettel.com>
 <MEAPR01MB3829B8B0F7F587BB4BB2BF5E933D9@MEAPR01MB3829.ausprd01.prod.outlook.com>
 <MEAPR01MB382908AB14EE517DF0FDC7AA933D9@MEAPR01MB3829.ausprd01.prod.outlook.com>
Message-ID: <CAARY7kjUR4y59_wrgZBgsKmJYhHaYxcK3A=sf=FnYkAhG_yuHQ@mail.gmail.com>

Thank you both. I guess the package can dog food itself by asking one time
whether it can store its files.
D



On Sun, 6 Nov 2022 at 06:33, Jonathan Godfrey <A.J.Godfrey at massey.ac.nz>
wrote:

>
> Further to Dirk's advice, my BrailleR package creates a folder (dumping
> ground). Users are asked if they want to use  one of my choosing, or a
> temporary one. If they choose temporary, they get asked again and again
> until they cave in to my wishes!
>
>
> BrailleR also writes files to the current working directory, but these are
> done because the user has chosen to run a command that has the purpose of
> creating files. I put a warning in the documentation for such functions.
>
> I'm not suggesting my solution is the gold standard, but it is working
> well enough to keep the CRAN checkers happy.
>
> Jonathan
>
>
> -----Original Message-----
> From: R-package-devel <r-package-devel-bounces at r-project.org> On Behalf
> Of Dirk Eddelbuettel
> Sent: Sunday, 6 November 2022 9:29 am
> To: David Hugh-Jones <davidhughjones at gmail.com>
> Cc: R package devel <r-package-devel at r-project.org>
> Subject: Re: [R-pkg-devel] Writing to users config directory for CRAN
> package
>
>
> On 5 November 2022 at 19:32, David Hugh-Jones wrote:
> | I'm considering submitting the package onetime (
> |
> https://apc01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fhughjonesd%2Fonetime%2F&amp;data=05%7C01%7Ca.j.godfrey%40massey.ac.nz%7C33d5f70186284052580908dabf6c7826%7C388728e1bbd0437898dcf8682e644300%7C1%7C0%7C638032769864581576%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=EbBh9XCyyKsRTACo7eLxASZW3pm%2BTrXxzKjjnxBa%2Fpo%3D&amp;reserved=0)
> to CRAN.
> |
> | Onetime has functions for showing a message or warning only once (ever
> | per user). It does this by writing to a file in the user's
> | configuration directory, as reported by rappdirs::user_config_dir().
>
> There is a base R function tools::R_user_dir() which I use in a few
> packages along with packageName() to store config information across
> sessions. A quick search at GitHub's 'cran' org mirroring CRAN finds 110
> hits:
>
>
> https://apc01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fsearch%3Fq%3Dorg%253Acran%2BR_user_dir%26type%3Dcode&amp;data=05%7C01%7Ca.j.godfrey%40massey.ac.nz%7C33d5f70186284052580908dabf6c7826%7C388728e1bbd0437898dcf8682e644300%7C1%7C0%7C638032769864737810%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=Wlqbm0tZX0h25rm0veh%2F15IAwJ5mqP9VNPUovlaPhdY%3D&amp;reserved=0
>
> You could keep a hashmap in that directory, and maybe (before it has been
> written a first time) alert the user that you cannot write without
> (initial) permission.  As I recall, the idea behind the (sensible) CRAN
> Policy is to not litter user directories with random files with the user
> knowing.
>
> Dirk
>
> --
> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
>
> https://apc01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-package-devel&amp;data=05%7C01%7Ca.j.godfrey%40massey.ac.nz%7C33d5f70186284052580908dabf6c7826%7C388728e1bbd0437898dcf8682e644300%7C1%7C0%7C638032769864737810%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=kB8nHrtC5yGEm4tnOTZDOAGT%2FmtDViGblNvieFlZq7g%3D&amp;reserved=0
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
-- 
Sent from Gmail Mobile

	[[alternative HTML version deleted]]


From hj@h@jee@h @end|ng |rom utm@@c@mu  Mon Nov  7 09:30:35 2022
From: hj@h@jee@h @end|ng |rom utm@@c@mu (Jahajeeah, Havisha)
Date: Mon, 7 Nov 2022 12:30:35 +0400
Subject: [R-pkg-devel] Error uploading file on CRAN
Message-ID: <CAKU6PFWwf4ejwFOxDuBTVnwkSwkdyCuVUy3KeO9hrKv9DugRLg@mail.gmail.com>

Dear CRAN team,

The package 'Greymodels' has just been published on CRAN. After loading the
package on CRAN, when I try to upload file (xlsx or xls)
the following error appears:

Error: cannot open the connection

What could be the problem? Is it because of the working directory?

Please advise on how to fix this.

Many thanks,
Havisha Jahajeeah

	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Mon Nov  7 11:13:02 2022
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Mon, 7 Nov 2022 13:13:02 +0300
Subject: [R-pkg-devel] Error uploading file on CRAN
In-Reply-To: <CAKU6PFWwf4ejwFOxDuBTVnwkSwkdyCuVUy3KeO9hrKv9DugRLg@mail.gmail.com>
References: <CAKU6PFWwf4ejwFOxDuBTVnwkSwkdyCuVUy3KeO9hrKv9DugRLg@mail.gmail.com>
Message-ID: <20221107131302.6faf0aa4@arachnoid>

? Mon, 7 Nov 2022 12:30:35 +0400
"Jahajeeah, Havisha" <hjahajeeah at utm.ac.mu> ?????:

> After loading the package on CRAN, when I try to upload file (xlsx or
> xls) the following error appears:
> 
> Error: cannot open the connection

Do you mean uploading files into your Shiny application, or somewhere
else?

Have you tried following this guide?
https://shiny.rstudio.com/articles/debugging.html

-- 
Best regards,
Ivan


From hj@h@jee@h @end|ng |rom utm@@c@mu  Mon Nov  7 11:55:06 2022
From: hj@h@jee@h @end|ng |rom utm@@c@mu (Jahajeeah, Havisha)
Date: Mon, 7 Nov 2022 14:55:06 +0400
Subject: [R-pkg-devel] Error uploading file on CRAN
In-Reply-To: <20221107131302.6faf0aa4@arachnoid>
References: <CAKU6PFWwf4ejwFOxDuBTVnwkSwkdyCuVUy3KeO9hrKv9DugRLg@mail.gmail.com>
 <20221107131302.6faf0aa4@arachnoid>
Message-ID: <CAKU6PFUE6CGW71dLa-88UK7e2kWNysuGhAUvLVOMPBBPy09EkQ@mail.gmail.com>

Thank you for the reply.

Yes, uploading files into the Shiny app.

The Greymodels package loads data from spreadsheets and each model accepts
a set of data and outputs the  values. However, the package is unable to do
that because of the error: cannot open connection.

Regards,
Havisha

On Mon, Nov 7, 2022 at 2:13 PM Ivan Krylov <krylov.r00t at gmail.com> wrote:

> ? Mon, 7 Nov 2022 12:30:35 +0400
> "Jahajeeah, Havisha" <hjahajeeah at utm.ac.mu> ?????:
>
> > After loading the package on CRAN, when I try to upload file (xlsx or
> > xls) the following error appears:
> >
> > Error: cannot open the connection
>
> Do you mean uploading files into your Shiny application, or somewhere
> else?
>
> Have you tried following this guide?
> https://shiny.rstudio.com/articles/debugging.html
>
> --
> Best regards,
> Ivan
>

	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Mon Nov  7 12:19:00 2022
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Mon, 7 Nov 2022 14:19:00 +0300
Subject: [R-pkg-devel] Error uploading file on CRAN
In-Reply-To: <CAKU6PFUE6CGW71dLa-88UK7e2kWNysuGhAUvLVOMPBBPy09EkQ@mail.gmail.com>
References: <CAKU6PFWwf4ejwFOxDuBTVnwkSwkdyCuVUy3KeO9hrKv9DugRLg@mail.gmail.com>
 <20221107131302.6faf0aa4@arachnoid>
 <CAKU6PFUE6CGW71dLa-88UK7e2kWNysuGhAUvLVOMPBBPy09EkQ@mail.gmail.com>
Message-ID: <20221107141900.2b0fcbba@arachnoid>

? Mon, 7 Nov 2022 14:55:06 +0400
"Jahajeeah, Havisha" <hjahajeeah at utm.ac.mu> ?????:

> The Greymodels package loads data from spreadsheets and each model
> accepts a set of data and outputs the  values. However, the package
> is unable to do that because of the error: cannot open connection.

Thank you for clarifying the problem!

The guide at https://shiny.rstudio.com/articles/debugging.html is full
of useful things to try when a Shiny app is misbehaving. I could try to
write an instruction for you to follow here, but it would end up being
a paraphrase of this guide. If you follow the guide, you should be able
to find out (1) which of your read_excel calls is failing, (2) what is
its argument and (3) what actually ends up at that path at the time of
the call. Once you know this information, the solution may become
obvious, or at least there may be something for us to give you more
pointers about.

While there is a chance that someone else will come along, run your
package on their machine and reproduce the problem, there's also a
significant chance that no one will do that. Meanwhile, these steps are
relatively simple and may help you solve the problem right away.

-- 
Best regards,
Ivan


From hj@h@jee@h @end|ng |rom utm@@c@mu  Mon Nov  7 12:33:13 2022
From: hj@h@jee@h @end|ng |rom utm@@c@mu (Jahajeeah, Havisha)
Date: Mon, 7 Nov 2022 15:33:13 +0400
Subject: [R-pkg-devel] Error uploading file on CRAN
In-Reply-To: <20221107141900.2b0fcbba@arachnoid>
References: <CAKU6PFWwf4ejwFOxDuBTVnwkSwkdyCuVUy3KeO9hrKv9DugRLg@mail.gmail.com>
 <20221107131302.6faf0aa4@arachnoid>
 <CAKU6PFUE6CGW71dLa-88UK7e2kWNysuGhAUvLVOMPBBPy09EkQ@mail.gmail.com>
 <20221107141900.2b0fcbba@arachnoid>
Message-ID: <CAKU6PFUDVt30O+MSOgsh1hdeersJuW7g=M480aC7gnDYu-F7_A@mail.gmail.com>

Thank you for your help.

I will go through the guide.

Many thanks,
Havisha

On Mon, Nov 7, 2022 at 3:19 PM Ivan Krylov <krylov.r00t at gmail.com> wrote:

> ? Mon, 7 Nov 2022 14:55:06 +0400
> "Jahajeeah, Havisha" <hjahajeeah at utm.ac.mu> ?????:
>
> > The Greymodels package loads data from spreadsheets and each model
> > accepts a set of data and outputs the  values. However, the package
> > is unable to do that because of the error: cannot open connection.
>
> Thank you for clarifying the problem!
>
> The guide at https://shiny.rstudio.com/articles/debugging.html is full
> of useful things to try when a Shiny app is misbehaving. I could try to
> write an instruction for you to follow here, but it would end up being
> a paraphrase of this guide. If you follow the guide, you should be able
> to find out (1) which of your read_excel calls is failing, (2) what is
> its argument and (3) what actually ends up at that path at the time of
> the call. Once you know this information, the solution may become
> obvious, or at least there may be something for us to give you more
> pointers about.
>
> While there is a chance that someone else will come along, run your
> package on their machine and reproduce the problem, there's also a
> significant chance that no one will do that. Meanwhile, these steps are
> relatively simple and may help you solve the problem right away.
>
> --
> Best regards,
> Ivan
>

	[[alternative HTML version deleted]]


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Mon Nov  7 15:55:58 2022
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Mon, 7 Nov 2022 15:55:58 +0100
Subject: [R-pkg-devel] 
 Examples with CPU time is greater than elapsed time.
In-Reply-To: <OS3P286MB085027CB079AAE4DF4FE7FAAF63A9@OS3P286MB0850.JPNP286.PROD.OUTLOOK.COM>
References: <OS3P286MB085027CB079AAE4DF4FE7FAAF63A9@OS3P286MB0850.JPNP286.PROD.OUTLOOK.COM>
Message-ID: <cbee6cfe-e3e5-efd8-bd70-28107495c235@statistik.tu-dortmund.de>



On 05.11.2022 15:41, Jiaming Yuan wrote:
> Hi all,
> 
> I tried to submit an update to the xgboost package but didn't pass the 
> pre-tests with the following note (solved the other one, but this one is 
> a bit confusing):
> 
> ```
> Flavor: r-devel-linux-x86_64-debian-gcc
> Check: examples, Result: NOTE
>  ? Examples with CPU time > 2.5 times elapsed time
>  ?????????????????????? user system elapsed ratio
>  ? cb.gblinear.history 1.454? 0.017??? 0.49 3.002
> 
> ```

as ratio is > 2.5 it looks like you are using multiple threads or 
processes. And CRAN only allows for two nodes when runnign parallel code.

Best,
Uwe Ligges


> I can't reproduce the note on win-builder: 
> https://win-builder.r-project.org/ as it's running on Windows but the 
> note appears on debian tests. I'm not able to reproduce it on my local 
> machine either with Ubuntu 22.04. I'm wondering what the note is trying 
> to tell me and how can I resolve it with confidence.
> 
> 
> The full log is here: 
> https://win-builder.r-project.org/incoming_pretest/xgboost_1.7.1.1_20221104_194252/Debian/00check.log .
> 
> 
> Many thanks!
> 
> Jiaming
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From peter@ruckde@che| @end|ng |rom web@de  Mon Nov  7 17:10:05 2022
From: peter@ruckde@che| @end|ng |rom web@de (Peter Ruckdeschel)
Date: Mon, 7 Nov 2022 17:10:05 +0100
Subject: [R-pkg-devel] cross-ref possible ext.pkg's --not mentioned in
 DESCRIPTION file-- in non-code sections in .Rd files
Message-ID: <4093b254-b157-3a90-9dfc-b28692ca0247@web.de>

Hi,

triggered by some new NOTEs uncovering infallacities in my packages on CRAN, I stumbled upon

Result: NOTE ????Undeclared packages ?distrMod?, ?RobAStBase? in Rd xrefs

which is issued in R-devel-linux-x86_64-fedora-clang (but not otherwise).

Digging into it, this comes from a text in a \seealso section where through something like

\code{\{link}[<ext.pkg>]{<generic>}

we want to link to a method provided in some extension package <ext.pkg> for a generic
<generic> documented in Rd-file of the current package.

In this case, we intentionally do not have <ext.pkg> in any of the entries "Depends", "Suggests",
"Imports", "Enhances" in the DESCRIPTION file, as <ext.pkg> is neither needed visible for the
user, nor for the code in the current package nor for testing code nor for example code and vignettes
of the current package, and because having it in "Suggests" would produce a circular dependence
as <ext.pkg> has the current package in its "Imports" section.

Of course, in "Writing R extesions" we find that

"Packages referred to by these ?other forms? should be declared in the DESCRIPTION file, in
 ? the ?Depends?, ?Imports?, ?Suggests? or ?Enhances? fields. "

so I am aware that this is my fault, as I use these 'other forms'? without declaration in the DESCRIPTION file.
Now I guess I could wrap my conditional cross-ref into some R-code, testing whether <ext.pkg> is available,
i.e., something like

\Sexpr[eval=TRUE,stage=render,results=text]{if("<ext.pkg>" %in% installed.packages()[,1] )
 ?cat("\\code{\\{link}[<ext.pkg>]{<generic>}") else cat("<generic> from package \\pkg{<ext.pkg>})

and so produce the link only if <ext.pkg> is installed at rendering time, but I would guess such a
conditional linkage would be something which could be of interest to a broader scope of R-package
developers and hence could and should be implemented in a less cumbersome, and more
efficient way.

Any suggestions welcome,
best, Peter

--
%******************************************************************
% Prof. Dr. Peter Ruckdeschel
% Institut fuer Mathematik, Fakultaet V - Mathematik und Naturwissenschaften
% Carl von Ossietzky Universitaet Oldenburg,
% Postfach 5634,  26111 Oldenburg
% Office: Wechloy W1 02-227 Tel: +49 (0)441 798-3240  Fax: +49 (0)441 798-193240
%peter.ruckdeschel at uni-oldenburg.de
%http://www.uni-oldenburg.de/peter-ruckdeschel
%******************************************************************

	[[alternative HTML version deleted]]


From j@g@nmn2 @end|ng |rom gm@||@com  Mon Nov  7 16:48:34 2022
From: j@g@nmn2 @end|ng |rom gm@||@com (Mikael Jagan)
Date: Mon, 7 Nov 2022 10:48:34 -0500
Subject: [R-pkg-devel] CRAN index replaces ampersand in BugReports URL with
 HTML entity
Message-ID: <19ef97af-5f05-26ee-8667-7c3f091543e0@gmail.com>

Hello,

It was raised on the Matrix bug tracker [1] that the BugReports URL
on the CRAN index [2] is broken.  The URL in our DESCRIPTION file [3]
is fine, but contains an ampersand, which is improperly replaced with
the corresponding HTML entity in the HTML sources of the index.

Hence this does not affect bug.report(package="Matrix"), but _does_
make our bug tracker inaccessible to people accustomed to visiting
the CRAN page for links.

Can this be repaired?

Mikael

[1] https://r-forge.r-project.org/tracker/?func=detail&aid=6787&group_id=61&atid=294
[2] https://cran.r-project.org/package=Matrix
[3] https://r-forge.r-project.org/tracker/?atid=294&group_id=61


From @kw@|mmo @end|ng |rom gm@||@com  Mon Nov  7 18:19:48 2022
From: @kw@|mmo @end|ng |rom gm@||@com (Andrew Simmons)
Date: Mon, 7 Nov 2022 12:19:48 -0500
Subject: [R-pkg-devel] cross-ref possible ext.pkg's --not mentioned in
 DESCRIPTION file-- in non-code sections in .Rd files
In-Reply-To: <4093b254-b157-3a90-9dfc-b28692ca0247@web.de>
References: <4093b254-b157-3a90-9dfc-b28692ca0247@web.de>
Message-ID: <CAPcHnpTnQrZ0ohB40geJuAaQhXxiRqJhKAmFQ5yUsmiDEO3R_w@mail.gmail.com>

Packages in Suggests and Enhances do not create a circular dependency, only
the packages in the Depends and Imports need to be installed at INSTALL and
loaded at load time. Packages in Suggests and Enhances are only needed at
check time, and even then it's more of a desire to be loaded than actually
needing to be loaded.

I would just put them in Suggests or Enhances

On Mon, Nov 7, 2022, 11:10 Peter Ruckdeschel <peter.ruckdeschel at web.de>
wrote:

> Hi,
>
> triggered by some new NOTEs uncovering infallacities in my packages on
> CRAN, I stumbled upon
>
> Result: NOTE     Undeclared packages ?distrMod?, ?RobAStBase? in Rd xrefs
>
> which is issued in R-devel-linux-x86_64-fedora-clang (but not otherwise).
>
> Digging into it, this comes from a text in a \seealso section where
> through something like
>
> \code{\{link}[<ext.pkg>]{<generic>}
>
> we want to link to a method provided in some extension package <ext.pkg>
> for a generic
> <generic> documented in Rd-file of the current package.
>
> In this case, we intentionally do not have <ext.pkg> in any of the entries
> "Depends", "Suggests",
> "Imports", "Enhances" in the DESCRIPTION file, as <ext.pkg> is neither
> needed visible for the
> user, nor for the code in the current package nor for testing code nor for
> example code and vignettes
> of the current package, and because having it in "Suggests" would produce
> a circular dependence
> as <ext.pkg> has the current package in its "Imports" section.
>
> Of course, in "Writing R extesions" we find that
>
> "Packages referred to by these ?other forms? should be declared in the
> DESCRIPTION file, in
>    the ?Depends?, ?Imports?, ?Suggests? or ?Enhances? fields. "
>
> so I am aware that this is my fault, as I use these 'other forms'  without
> declaration in the DESCRIPTION file.
> Now I guess I could wrap my conditional cross-ref into some R-code,
> testing whether <ext.pkg> is available,
> i.e., something like
>
> \Sexpr[eval=TRUE,stage=render,results=text]{if("<ext.pkg>" %in%
> installed.packages()[,1] )
>   cat("\\code{\\{link}[<ext.pkg>]{<generic>}") else cat("<generic> from
> package \\pkg{<ext.pkg>})
>
> and so produce the link only if <ext.pkg> is installed at rendering time,
> but I would guess such a
> conditional linkage would be something which could be of interest to a
> broader scope of R-package
> developers and hence could and should be implemented in a less cumbersome,
> and more
> efficient way.
>
> Any suggestions welcome,
> best, Peter
>
> --
> %******************************************************************
> % Prof. Dr. Peter Ruckdeschel
> % Institut fuer Mathematik, Fakultaet V - Mathematik und
> Naturwissenschaften
> % Carl von Ossietzky Universitaet Oldenburg,
> % Postfach 5634,  26111 Oldenburg
> % Office: Wechloy W1 02-227 Tel: +49 (0)441 798-3240  Fax: +49 (0)441
> 798-193240
> %peter.ruckdeschel at uni-oldenburg.de
> %http://www.uni-oldenburg.de/peter-ruckdeschel
> %******************************************************************
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


