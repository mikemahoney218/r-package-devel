From rhe|p @end|ng |rom eoo@@dd@@n|  Tue Oct  1 09:32:59 2024
From: rhe|p @end|ng |rom eoo@@dd@@n| (Jan van der Laan)
Date: Tue, 1 Oct 2024 09:32:59 +0200
Subject: [R-pkg-devel] Deprecating apparent S3 method, changing name
In-Reply-To: <SY4PR01MB56580A1C36102B5DB3462AE4AC6A2@SY4PR01MB5658.ausprd01.prod.outlook.com>
References: <SY4PR01MB56581D25A3BD15AC4CB3F882AC692@SY4PR01MB5658.ausprd01.prod.outlook.com>
 <20240926234842.286fed70@Tarkus>
 <SY4PR01MB56580A1C36102B5DB3462AE4AC6A2@SY4PR01MB5658.ausprd01.prod.outlook.com>
Message-ID: <ea61f7fb-b212-46ff-870e-4e82b3ba4e70@eoos.dds.nl>



On 9/26/24 23:48, Murray Efford via R-package-devel wrote:

> I am tossing up between (i) appealing to CRAN to allow the submission through with NOTEs until it feels safe to remove the functions with misleading names altogether, and (ii) removing them now and warning users about the new names in an  onLoad message.


A third solution would be to create a `esa.plot` method that redirects 
the user to `esaPlot` etc. So you create a function `esa.plot`. Its 
arguments should match those of the `esa` generic. If the `esaPlot` 
function has completely different arguments, you could have this 
`esa.plot` function give an error, redirecting the user to `esaPlot`.

You will still need to document the `esa.plot` function as a method to 
prevent warnings/notes:

\usage{
\method{esa}{plot}(..)
}

And you should export it:

export(esa.plot)

So that it can be called directly. To prevent that the `esa.plot` is 
called when a user passes a `plot` object to the `esa` generic, you 
could use the solution mentioned below:



> ________________________________
> From: Ivan Krylov <ikrylov at disroot.org>
> 
> Theoretically speaking, if there was a place in your package where you
> called the esa() generic with a user-supplied object, esa.plot() would
> be a reachable S3 method, because the user would be able to construct
> structure(list(), class = 'plot') and give it to your package code to
> call esa(plot_object) and have it dispatched to esa.plot(). (Which
> wouldn't be useful to the user, but that's how S3 works.)
>

In NAMESPACE you can do:

S3method(esa, plot, esaplotmethod)

To register `esaplotmethod` as the method that is called when using 
`esa` with an object of type `plot`. This would prevent this issue. 
However, this probably (can't test as the note doesn't happen on my 
system) doesn't resolve the issue with the NOTE.


Best,
Jan


From yuy@ng@@t@t @end|ng |rom gm@||@com  Tue Oct  1 03:30:44 2024
From: yuy@ng@@t@t @end|ng |rom gm@||@com (Yu Yang)
Date: Mon, 30 Sep 2024 21:30:44 -0400
Subject: [R-pkg-devel] Question about Debian installation error
Message-ID: <617BD822-1EE1-4928-AA9F-42CDFB069B84@gmail.com>

Hi R-package-devel team, 

  I have a question about installation error on Debian. 

  I recently updated my package ?glmtlp? to meet the ?_PACKAGE? requirement and to deal with the ?noRemap" requirement. I only modified the DESCRIPTION and glmtlp-package.R file and fixed a few typos. R CMD check showed no errors in my local machine (MacOS), but when I submitted to CRAN, it said installation error on Debian. 

  The log file is at: https://win-builder.r-project.org/incoming_pretest/glmtlp_2.0.2_20240930_002619/Debian/00install.out. 

  I also used devtools::use_github_action() to check and found the installation error occurred in ubuntu-latest (devel) but not the others, as shown below.
 ?

  My guess was that the Makevars file was not correctly written. I am not an expert in this and I tried different options, but none of them worked. Do you have any suggestions in handling this?

  Thank you so much for your time and help!

Best,
Yu

From |kry|ov @end|ng |rom d|@root@org  Tue Oct  1 12:39:21 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Tue, 1 Oct 2024 13:39:21 +0300
Subject: [R-pkg-devel] Question about Debian installation error
In-Reply-To: <617BD822-1EE1-4928-AA9F-42CDFB069B84@gmail.com>
References: <617BD822-1EE1-4928-AA9F-42CDFB069B84@gmail.com>
Message-ID: <20241001133921.3296a176@arachnoid>

Hi Yu and welcome to R-package-devel! You're now part of the team as
well.

? Mon, 30 Sep 2024 21:30:44 -0400
Yu Yang <yuyang.stat at gmail.com> ?????:

>   I recently updated my package ?glmtlp? to meet the ?_PACKAGE?
> requirement and to deal with the ?noRemap" requirement. I only
> modified the DESCRIPTION and glmtlp-package.R file and fixed a few
> typos. R CMD check showed no errors in my local machine (MacOS), but
> when I submitted to CRAN, it said installation error on Debian. 
> 
>   The log file is at:
> https://win-builder.r-project.org/incoming_pretest/glmtlp_2.0.2_20240930_002619/Debian/00install.out. 

Thank you for providing the link to the failing example. The
screenshot(?) didn't come through [1]; this mailing list only accepts
plain text messages and a restricted set of attachment types, so it's
best to compose in plain text as well.

The reason your package is failing is because your C++ code calls R API
functions by their short ("remapped") names, and this will no longer
work in the next version of R. This has been mentioned in the news for
R-devel [2,3]. The remapping is described in "Writing R Extensions",
chapter 6 [4] (and a bit more at the end, shortly before chapter 7).

In short, to reproduce the error outside of R-devel, you need to
#define R_NO_REMAP before #including R API (or provide the -DR_NO_REMAP
command-line switch to the compiler), and then fix it by finding every
remapped name in your code and replacing it by the full name (typically
by prepending Rf_ to it).

You're not the first package author to have problems with C++ code due
to R_NO_REMAP [5]. There's now an incomplete, unofficial set of
manpage-style API documentation (made possible by Luke Tierney's effort
to export a list of API functions programmatically via tools:::funAPI)
where you can find both full and remapped names for most of "ordinary"
R API and slightly less than a half of experimental R API [6]. Thanks
to Erez Shomron, there's also information about when a lot of the
functions had been introduced.

The reason we have remapping in the first place is that for historical
reasons, R API contained a lot of functions with "ordinary" names, such
as "length", which conflicted with other C functions named "length" in
the same namespace. This problem has been solved at the cost of
introducing a more manageable problem by remapping: the "real" names of
the conflicting functions now start with Rf_ (e.g. "Rf_length"), and to
avoid breaking all existing code (including R itself), R uses the C
preprocessor to replace the short names with the full names on the fly:
"#define length Rf_length" and so on.

Unfortunately, that still leads to conflicts when you need to use
something named "length" (e.g. [7]) in a source file that #includes the
R API. You type s.length(), and the preprocessor patches that to
s.Rf_length(), and everything breaks. Since C++ code is the most
affected by this, the R developers are now disabling it for all C++
code.

Hope this helps!

-- 
Best regards,
Ivan

[1]
https://stat.ethz.ch/pipermail/r-package-devel/2024q4/011121.html

[2]
https://developer.r-project.org/blosxom.cgi/R-devel/NEWS/2024/04/14#n2024-04-14

[3]
https://stat.ethz.ch/R-manual/R-devel/doc/html/NEWS.html

[4]
https://cran.r-project.org/doc/manuals/R-exts.html#The-R-API

[5]
https://stat.ethz.ch/pipermail/r-package-devel/2024q2/010913.html

[6]
https://aitap.codeberg.page/R-api/#nrows
https://aitap.codeberg.page/R-api/#XLENGTH
https://aitap.codeberg.page/R-api/#allocVector

[7]
https://en.cppreference.com/w/cpp/string/basic_string/size


From |kry|ov @end|ng |rom d|@root@org  Tue Oct  1 13:45:37 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Tue, 1 Oct 2024 14:45:37 +0300
Subject: [R-pkg-devel] Deprecating apparent S3 method, changing name
In-Reply-To: <38d9bf9a-6ab4-4e3a-9790-511159aab23c@dds.nl>
References: <SY4PR01MB56581D25A3BD15AC4CB3F882AC692@SY4PR01MB5658.ausprd01.prod.outlook.com>
 <20240926234842.286fed70@Tarkus>
 <SY4PR01MB56580A1C36102B5DB3462AE4AC6A2@SY4PR01MB5658.ausprd01.prod.outlook.com>
 <38d9bf9a-6ab4-4e3a-9790-511159aab23c@dds.nl>
Message-ID: <20241001144537.2bec7355@arachnoid>

? Tue, 1 Oct 2024 09:00:24 +0200
Jan van der Laan <eoos at dds.nl> ?????:

> S3method(esa, plot, esaplotmethod)
> 
> To register `esaplotmethod` as the method that is called when using 
> `esa` with an object of type `plot`. This would prevent this issue. 
> However, this probably (can't test as the note doesn't happen on my 
> system) doesn't resolve the issue with the NOTE.

Excellent idea, thank you! It does work for R CMD check as well:

Sys.setenv("_R_CHECK_S3_METHODS_SHOW_POSSIBLE_ISSUES_" = 'TRUE')
tools::checkS3methods(dir = '.') # used to show esa.plot as well
# Apparent methods for exported generics not registered:
#   fxi.contour fxi.mode

No need for extra bits or attributes on the esa.plot function, just
register a method for "esa" generic, "plot" class to prevent S3
dispatch from reaching the function in question.

-- 
Best regards,
Ivan


From murr@y@e||ord @end|ng |rom ot@go@@c@nz  Wed Oct  2 03:04:29 2024
From: murr@y@e||ord @end|ng |rom ot@go@@c@nz (Murray Efford)
Date: Wed, 2 Oct 2024 01:04:29 +0000
Subject: [R-pkg-devel] Deprecating apparent S3 method, changing name
In-Reply-To: <20241001144537.2bec7355@arachnoid>
References: <SY4PR01MB56581D25A3BD15AC4CB3F882AC692@SY4PR01MB5658.ausprd01.prod.outlook.com>
 <20240926234842.286fed70@Tarkus>
 <SY4PR01MB56580A1C36102B5DB3462AE4AC6A2@SY4PR01MB5658.ausprd01.prod.outlook.com>
 <38d9bf9a-6ab4-4e3a-9790-511159aab23c@dds.nl>
 <20241001144537.2bec7355@arachnoid>
Message-ID: <SY4PR01MB56586DA4A75D7199ED7D6DCDAC702@SY4PR01MB5658.ausprd01.prod.outlook.com>

Almost too good to be true: with this in my NAMESPACE

export (esa.plot)
S3method(esa,plot)

it seems I can deprecate esa.plot by the usual route (calling .Deprecated and passing call through to the new function esaPlot).

Thanks!
Murray
________________________________
From: Ivan Krylov <ikrylov at disroot.org>
Sent: Wednesday, 2 October 2024 00:45
To: Jan van der Laan <eoos at dds.nl>
Cc: Murray Efford <murray.efford at otago.ac.nz>; Murray Efford via R-package-devel <r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] Deprecating apparent S3 method, changing name

? Tue, 1 Oct 2024 09:00:24 +0200
Jan van der Laan <eoos at dds.nl> ?????:

> S3method(esa, plot, esaplotmethod)
>
> To register `esaplotmethod` as the method that is called when using
> `esa` with an object of type `plot`. This would prevent this issue.
> However, this probably (can't test as the note doesn't happen on my
> system) doesn't resolve the issue with the NOTE.

Excellent idea, thank you! It does work for R CMD check as well:

Sys.setenv("_R_CHECK_S3_METHODS_SHOW_POSSIBLE_ISSUES_" = 'TRUE')
tools::checkS3methods(dir = '.') # used to show esa.plot as well
# Apparent methods for exported generics not registered:
#   fxi.contour fxi.mode

No need for extra bits or attributes on the esa.plot function, just
register a method for "esa" generic, "plot" class to prevent S3
dispatch from reaching the function in question.

--
Best regards,
Ivan

	[[alternative HTML version deleted]]


From yuy@ng@@t@t @end|ng |rom gm@||@com  Wed Oct  2 03:05:03 2024
From: yuy@ng@@t@t @end|ng |rom gm@||@com (Yu Yang)
Date: Tue, 1 Oct 2024 21:05:03 -0400
Subject: [R-pkg-devel] Question about Debian installation error
In-Reply-To: <20241001133921.3296a176@arachnoid>
References: <617BD822-1EE1-4928-AA9F-42CDFB069B84@gmail.com>
 <20241001133921.3296a176@arachnoid>
Message-ID: <9389AB20-E775-41AF-A4B6-ABA18B32B652@gmail.com>

Hi Ivan, 

  Thank you so much for your help! I have fixed the issue following your advice!

  May you have a great day!

Best,
Yu


> On Oct 1, 2024, at 6:39?AM, Ivan Krylov <ikrylov at disroot.org> wrote:
> 
> Hi Yu and welcome to R-package-devel! You're now part of the team as
> well.
> 
> ? Mon, 30 Sep 2024 21:30:44 -0400
> Yu Yang <yuyang.stat at gmail.com> ?????:
> 
>>  I recently updated my package ?glmtlp? to meet the ?_PACKAGE?
>> requirement and to deal with the ?noRemap" requirement. I only
>> modified the DESCRIPTION and glmtlp-package.R file and fixed a few
>> typos. R CMD check showed no errors in my local machine (MacOS), but
>> when I submitted to CRAN, it said installation error on Debian. 
>> 
>>  The log file is at:
>> https://win-builder.r-project.org/incoming_pretest/glmtlp_2.0.2_20240930_002619/Debian/00install.out.
> 
> Thank you for providing the link to the failing example. The
> screenshot(?) didn't come through [1]; this mailing list only accepts
> plain text messages and a restricted set of attachment types, so it's
> best to compose in plain text as well.
> 
> The reason your package is failing is because your C++ code calls R API
> functions by their short ("remapped") names, and this will no longer
> work in the next version of R. This has been mentioned in the news for
> R-devel [2,3]. The remapping is described in "Writing R Extensions",
> chapter 6 [4] (and a bit more at the end, shortly before chapter 7).
> 
> In short, to reproduce the error outside of R-devel, you need to
> #define R_NO_REMAP before #including R API (or provide the -DR_NO_REMAP
> command-line switch to the compiler), and then fix it by finding every
> remapped name in your code and replacing it by the full name (typically
> by prepending Rf_ to it).
> 
> You're not the first package author to have problems with C++ code due
> to R_NO_REMAP [5]. There's now an incomplete, unofficial set of
> manpage-style API documentation (made possible by Luke Tierney's effort
> to export a list of API functions programmatically via tools:::funAPI)
> where you can find both full and remapped names for most of "ordinary"
> R API and slightly less than a half of experimental R API [6]. Thanks
> to Erez Shomron, there's also information about when a lot of the
> functions had been introduced.
> 
> The reason we have remapping in the first place is that for historical
> reasons, R API contained a lot of functions with "ordinary" names, such
> as "length", which conflicted with other C functions named "length" in
> the same namespace. This problem has been solved at the cost of
> introducing a more manageable problem by remapping: the "real" names of
> the conflicting functions now start with Rf_ (e.g. "Rf_length"), and to
> avoid breaking all existing code (including R itself), R uses the C
> preprocessor to replace the short names with the full names on the fly:
> "#define length Rf_length" and so on.
> 
> Unfortunately, that still leads to conflicts when you need to use
> something named "length" (e.g. [7]) in a source file that #includes the
> R API. You type s.length(), and the preprocessor patches that to
> s.Rf_length(), and everything breaks. Since C++ code is the most
> affected by this, the R developers are now disabling it for all C++
> code.
> 
> Hope this helps!
> 
> -- 
> Best regards,
> Ivan
> 
> [1]
> https://stat.ethz.ch/pipermail/r-package-devel/2024q4/011121.html
> 
> [2]
> https://developer.r-project.org/blosxom.cgi/R-devel/NEWS/2024/04/14#n2024-04-14
> 
> [3]
> https://stat.ethz.ch/R-manual/R-devel/doc/html/NEWS.html
> 
> [4]
> https://cran.r-project.org/doc/manuals/R-exts.html#The-R-API
> 
> [5]
> https://stat.ethz.ch/pipermail/r-package-devel/2024q2/010913.html
> 
> [6]
> https://aitap.codeberg.page/R-api/#nrows
> https://aitap.codeberg.page/R-api/#XLENGTH
> https://aitap.codeberg.page/R-api/#allocVector
> 
> [7]
> https://en.cppreference.com/w/cpp/string/basic_string/size


From m@||ory@||ynn @end|ng |rom @t@t@ubc@c@  Wed Oct  9 22:26:24 2024
From: m@||ory@||ynn @end|ng |rom @t@t@ubc@c@ (Mallory Flynn)
Date: Wed, 9 Oct 2024 13:26:24 -0700
Subject: [R-pkg-devel] Question about examples/tests run-time
Message-ID: <78E66F51-2437-43C6-B4CD-C6A43A8984E6@stat.ubc.ca>

Hello,

I am hoping this is the correct way to pose a question about my submission, which I can?t seem to fix 2 NOTES for.  They are related to run time:
Flavor: r-devel-windows-x86_64
Check: examples, Result: NOTE
Examples with CPU (user + system) or elapsed time > 10s
           user system elapsed
countTree 17.66   0.13   17.78
estTree   17.52   0.02   17.54
wmmTree   15.70   0.02   15.72

Flavor: r-devel-linux-x86_64-debian-gcc
Check: examples, Result: NOTE
Examples with CPU (user + system) or elapsed time > 5s
            user system elapsed
countTree 14.218  0.077  14.401
wmmTree   14.049  0.028  14.086
estTree   14.046  0.012  14.066

The package enables easy implementation of a sampling method for population size estimation on a highly correlated tree - since it?s sequentially sampled, it?s expected to run long compared to other functionality, even on smaller examples. 
I have added many layers to try to shorten examples and tests, including ?donttest?, ?dontrun?, ?if (interactive())?, and reducing toy examples to what I believe is the smallest they can be to still demonstrate utility.  I also included the ?skip_on_cran()? function in tests which run longer.

Does anyone else have any ideas on how I can eliminate these notes?

Any help is very much appreciated!!
Thank you!

From j@|me@@@|v@dor @end|ng |rom |de@@yb|t@@com  Wed Oct  9 22:42:24 2024
From: j@|me@@@|v@dor @end|ng |rom |de@@yb|t@@com (Jaime Salvador)
Date: Wed, 9 Oct 2024 20:42:24 +0000
Subject: [R-pkg-devel] Help with 2 NOTES
Message-ID: <em79af66bf-7e90-400c-88a2-733409da284a@d22f2075.com>

How I can solve this NOTES:


* checking CRAN incoming feasibility ... [3s/5s] NOTE
Maintainer: ?Jaime Salvador <
jaime.salvador at ideasybits.com<mailto:jaime.salvador at ideasybits.com>>?

New submission

Possibly misspelled words in DESCRIPTION:
  DICX (12:67)
  RXDB (12:59)
  Redatam (2:34, 12:40)



* checking for detritus in the temp directory ... NOTE

Found the following files/directories:
  ?redatam?



Thanks

-------------------------------------
Jaime Salvador
| Ideas&Bits
| mobile: +593 0987285748
| email: jaime.salvador at ideasybits.com<mailto:jaime.salvador at ideasybits.com>
| site: www.ideasybits.com<https://urldefense.com/v3/__http:/www.ideasybits.com__;!!C3eXzRIY6Mw!YcjWo_ljX1Mppy0kki8QDmz6mHQIrU1XSABeGK31GmB50zdsNenbNNyRCZvpmI0lgbWo$>



	[[alternative HTML version deleted]]


From ||u|@@rev|||@ @end|ng |rom gm@||@com  Thu Oct 10 00:00:48 2024
From: ||u|@@rev|||@ @end|ng |rom gm@||@com (=?UTF-8?Q?Llu=C3=ADs_Revilla?=)
Date: Thu, 10 Oct 2024 00:00:48 +0200
Subject: [R-pkg-devel] Question about examples/tests run-time
In-Reply-To: <78E66F51-2437-43C6-B4CD-C6A43A8984E6@stat.ubc.ca>
References: <78E66F51-2437-43C6-B4CD-C6A43A8984E6@stat.ubc.ca>
Message-ID: <CAN+W6_vmbnEX4BgcYoHoQJ4h-T9WnCyyYbcw38nuX3w_fMVQrQ@mail.gmail.com>

Dear Mallory,

It would help a little bit if we know the package and we can check the
examples and code.
Perhaps it can help this little explanation of when to use donttest,
dontrun and other options:
https://contributor.r-project.org/cran-cookbook/general_issues.html#structuring-of-examples
If it is still too long I would leave the representative example for a
vignette or demo (or an article if you use pkgdown) and show how to use the
different parameters of your functions in the examples.

Best,

On Wed, 9 Oct 2024 at 23:04, Mallory Flynn <mallory.flynn at stat.ubc.ca>
wrote:

> Hello,
>
> I am hoping this is the correct way to pose a question about my
> submission, which I can?t seem to fix 2 NOTES for.  They are related to run
> time:
> Flavor: r-devel-windows-x86_64
> Check: examples, Result: NOTE
> Examples with CPU (user + system) or elapsed time > 10s
>            user system elapsed
> countTree 17.66   0.13   17.78
> estTree   17.52   0.02   17.54
> wmmTree   15.70   0.02   15.72
>
> Flavor: r-devel-linux-x86_64-debian-gcc
> Check: examples, Result: NOTE
> Examples with CPU (user + system) or elapsed time > 5s
>             user system elapsed
> countTree 14.218  0.077  14.401
> wmmTree   14.049  0.028  14.086
> estTree   14.046  0.012  14.066
>
> The package enables easy implementation of a sampling method for
> population size estimation on a highly correlated tree - since it?s
> sequentially sampled, it?s expected to run long compared to other
> functionality, even on smaller examples.
> I have added many layers to try to shorten examples and tests, including
> ?donttest?, ?dontrun?, ?if (interactive())?, and reducing toy examples to
> what I believe is the smallest they can be to still demonstrate utility.  I
> also included the ?skip_on_cran()? function in tests which run longer.
>
> Does anyone else have any ideas on how I can eliminate these notes?
>
> Any help is very much appreciated!!
> Thank you!
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From |kry|ov @end|ng |rom d|@root@org  Thu Oct 10 10:30:18 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Thu, 10 Oct 2024 11:30:18 +0300
Subject: [R-pkg-devel] Help with 2 NOTES
In-Reply-To: <em79af66bf-7e90-400c-88a2-733409da284a@d22f2075.com>
References: <em79af66bf-7e90-400c-88a2-733409da284a@d22f2075.com>
Message-ID: <20241010113018.079bb0c9@Tarkus>

Dear Jaime Salvador,

Welcome to R-package-devel!

? Wed, 9 Oct 2024 20:42:24 +0000
Jaime Salvador <jaime.salvador at ideasybits.com> ?????:

> New submission

This one is expected for new packages.

> Possibly misspelled words in DESCRIPTION:
>   DICX (12:67)
>   RXDB (12:59)
>   Redatam (2:34, 12:40)

Wrap the abbreviations and software names into 'single quotes':
https://contributor.r-project.org/cran-cookbook/description_issues.html#formatting-software-names.
Some of the acronyms may need to be explained in the submission
comments in the CRAN web form.

I see you've tried to put the acronyms into the WORDLIST, but I think
the interface for spell-checking the package is different (see
?'aspell-utils') and involves saving vectors of words into .rds files
in .aspell and describing them in .aspell/defaults.R.

(If anything reads WORDLIST, why doesn't grep -r WORDLIST src on the R
source code show anything?)

> * checking for detritus in the temp directory ... NOTE
> 
> Found the following files/directories:
>   ?redatam?

Some code from your package that ran during R CMD check (it's usually
examples or tests) created the file named "redatam" in the temporary
directory and didn't remove it afterwards. I'm not seeing any R code do
this, so it must be something in the libredengine DLL. Can you make it
remove its temporary files during _redatam_redatam_destroy()?

There are more serious problems not flagged by R CMD check.

Your code downloads a binary DLL during the configuration stage. What
is the license under which it is shipped? Will it work on macOS? CRAN
policy recommends including sources or downloading (and compiling on
the fly) a fixed version rather than the latest one, although I know
of exceptions for some open-source libraries.

Almost all your examples are wrapped in \dontrun{}. Generally, this is
only allowed for code that absolutely has no chance of running as
written, for example, due to a missing API key:
https://contributor.r-project.org/cran-cookbook/general_issues.html#structuring-of-examples

Your NAMESPACE contains a lot of extraneous stuff. You intend for the
user to call functions redatam.open(), redatam.query(), and so on, but
roxygen2 misinterpreted those as S3 methods and registered them for the
S3 generic redatam, which doesn't do anything and isn't properly
documented. It's best to get rid of the S3 generic and only export the
functions by name (e.g. export(redatam.open, redatam.query)) instead of
resorting to exportPattern("^[[:alpha:]]+"). Maybe it's best to just
avoid dots in the function names altogether, lest something else
misinterprets them as S3 methods.

Your "Description:" field says "you need R (>=4.0)", which is better
expressed as a separate field, "Depends: R (>= 4.0)".

-- 
Best regards,
Ivan


From j@|me@@@|v@dor @end|ng |rom |de@@yb|t@@com  Thu Oct 10 15:10:39 2024
From: j@|me@@@|v@dor @end|ng |rom |de@@yb|t@@com (Jaime Salvador)
Date: Thu, 10 Oct 2024 13:10:39 +0000
Subject: [R-pkg-devel] Help with 2 NOTES
In-Reply-To: <20241010113018.079bb0c9@Tarkus>
References: <em79af66bf-7e90-400c-88a2-733409da284a@d22f2075.com>
 <20241010113018.079bb0c9@Tarkus>
Message-ID: <em629f01a5-d4de-4ffd-9986-b3808e6cec1f@7660d48a.com>

Hi Ivan,

Thanks for you reply, I appreciate your help.

Actually, with your help, I fixex the issues :


  *   I enclose between single quotes Redata, RXDB and DICX
  *   I fixed the version of binaries downloaded, for example redatamx-core-linux-20241010.zip
  *   The binary DLL/so library generate a LOG file in temp/redatam directory, so I remove the directory in .onUnload
  *   The \dontrun in examples. To run the examples, we need a database, the package doesn't include a sample database, so the code can't be run. I remove \dontrun in functions that can run without a database (for example redatam_version)
  *   All the exported functions, now have the name redatam_XXX (where XXX is open, close, etc.)

Regarding to the DLL downloading during the configurarion, REDATAM is not an open source software (the source code is controlled by CELADE-CEPAL), but the binary is freely  distributed, you can get a copy from https://redatam.org/es/aplicaciones (Redatam X version)

Thanks


-------------------------------------
Jaime Salvador
| Ideas&Bits
| mobile: +593 0987285748
| email: jaime.salvador at ideasybits.com<mailto:jaime.salvador at ideasybits.com>
| site: www.ideasybits.com<https://urldefense.com/v3/__http:/www.ideasybits.com__;!!C3eXzRIY6Mw!YcjWo_ljX1Mppy0kki8QDmz6mHQIrU1XSABeGK31GmB50zdsNenbNNyRCZvpmI0lgbWo$>



------ Mensaje original ------
De "Ivan Krylov" <ikrylov at disroot.org<mailto:ikrylov at disroot.org>>
Para "Jaime Salvador" <jaime.salvador at ideasybits.com<mailto:jaime.salvador at ideasybits.com>>
Cc "r-package-devel at r-project.org" <r-package-devel at r-project.org<mailto:r-package-devel at r-project.org>>
Fecha 10/10/2024 3:30:18
Asunto Re: [R-pkg-devel] Help with 2 NOTES

Dear Jaime Salvador,

Welcome to R-package-devel!

? Wed, 9 Oct 2024 20:42:24 +0000
Jaime Salvador <jaime.salvador at ideasybits.com<mailto:jaime.salvador at ideasybits.com>> ?????:

New submission

This one is expected for new packages.

Possibly misspelled words in DESCRIPTION:
DICX (12:67)
RXDB (12:59)
Redatam (2:34, 12:40)

Wrap the abbreviations and software names into 'single quotes':
https://contributor.r-project.org/cran-cookbook/description_issues.html#formatting-software-names.
Some of the acronyms may need to be explained in the submission
comments in the CRAN web form.

I see you've tried to put the acronyms into the WORDLIST, but I think
the interface for spell-checking the package is different (see
?'aspell-utils') and involves saving vectors of words into .rds files
in .aspell and describing them in .aspell/defaults.R.

(If anything reads WORDLIST, why doesn't grep -r WORDLIST src on the R
source code show anything?)

* checking for detritus in the temp directory ... NOTE

Found the following files/directories:
?redatam?

Some code from your package that ran during R CMD check (it's usually
examples or tests) created the file named "redatam" in the temporary
directory and didn't remove it afterwards. I'm not seeing any R code do
this, so it must be something in the libredengine DLL. Can you make it
remove its temporary files during _redatam_redatam_destroy()?

There are more serious problems not flagged by R CMD check.

Your code downloads a binary DLL during the configuration stage. What
is the license under which it is shipped? Will it work on macOS? CRAN
policy recommends including sources or downloading (and compiling on
the fly) a fixed version rather than the latest one, although I know
of exceptions for some open-source libraries.

Almost all your examples are wrapped in \dontrun{}. Generally, this is
only allowed for code that absolutely has no chance of running as
written, for example, due to a missing API key:
https://contributor.r-project.org/cran-cookbook/general_issues.html#structuring-of-examples

Your NAMESPACE contains a lot of extraneous stuff. You intend for the
user to call functions redatam.open(), redatam.query(), and so on, but
roxygen2 misinterpreted those as S3 methods and registered them for the
S3 generic redatam, which doesn't do anything and isn't properly
documented. It's best to get rid of the S3 generic and only export the
functions by name (e.g. export(redatam.open, redatam.query)) instead of
resorting to exportPattern("^[[:alpha:]]+"). Maybe it's best to just
avoid dots in the function names altogether, lest something else
misinterprets them as S3 methods.

Your "Description:" field says "you need R (>=4.0)", which is better
expressed as a separate field, "Depends: R (>= 4.0)".

--
Best regards,
Ivan

	[[alternative HTML version deleted]]


From |kry|ov @end|ng |rom d|@root@org  Thu Oct 10 15:29:17 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Thu, 10 Oct 2024 16:29:17 +0300
Subject: [R-pkg-devel] Help with 2 NOTES
In-Reply-To: <em629f01a5-d4de-4ffd-9986-b3808e6cec1f@7660d48a.com>
References: <em79af66bf-7e90-400c-88a2-733409da284a@d22f2075.com>
 <20241010113018.079bb0c9@Tarkus>
 <em629f01a5-d4de-4ffd-9986-b3808e6cec1f@7660d48a.com>
Message-ID: <20241010162917.214ee9af@arachnoid>

? Thu, 10 Oct 2024 13:10:39 +0000
Jaime Salvador <jaime.salvador at ideasybits.com> ?????:

>   *   The \dontrun in examples. To run the examples, we need a
> database, the package doesn't include a sample database, so the code
> can't be run. I remove \dontrun in functions that can run without a
> database (for example redatam_version)

That makes perfect sense. Can you provide a small example database as
part of the package? It's best to exercise as much of the code of
package as reasonably possible in tests and examples. If not, leaving
\dontrun{} in is indeed the right choice.

> Regarding to the DLL downloading during the configurarion, REDATAM is
> not an open source software (the source code is controlled by
> CELADE-CEPAL), but the binary is freely  distributed, you can get a
> copy from https://redatam.org/es/aplicaciones (Redatam X version)

Thank you for clarifying that. It may help to follow the example of the
'Rblpapi' package <https://CRAN.R-project.org/package=Rblpapi> in
specifying the license covering the package as a whole. In particular,
you need to ensure that CRAN has the right to redistribute Redatam DLLs
as part of the binary packages they compile. I'm not seeing a license
covering the downloads at https://redatam.org/es/aplicaciones or
https://redatam.org/en/software.

Good luck! For best results next time you have a question, please
provide a link to the latest version of the package source code.

-- 
Best regards,
Ivan


From d@v|d_j_z|mmerm@nn @end|ng |rom hotm@||@com  Wed Oct 16 19:38:27 2024
From: d@v|d_j_z|mmerm@nn @end|ng |rom hotm@||@com (D Z)
Date: Wed, 16 Oct 2024 17:38:27 +0000
Subject: [R-pkg-devel] Installation took CPU time elapsed time for
 rust-based package
Message-ID: <PAVPR03MB101039EE8E46028FAFFD96737D3452@PAVPR03MB10103.eurprd03.prod.outlook.com>

Hi all,
I have a new package that I submitted to CRAN, that uses rust (for reference, it's called rtiktoken and can be found here: https://github.com/DavZim/rtiktoken).
The submission failed as 1-2 NOTEs were found, most importantly: Installation took CPU time 7.2 times elapsed time.

In both my Makevars and Makevars.win files, I specify to use 2 cores for cargo build on CRAN machines (see below or here https://github.com/DavZim/rtiktoken/blob/master/src/Makevars#L21C2-L25C4) but I still get the NOTE. Furthermore, I only get this on Debian but not on Windows.

if [ -n "$_R_CHECK_LIMIT_CORES" ]; then \
? export BUILDFLAGS="-j 2 --offline"; \
else \
?export BUILDFLAGS="--offline"; \
fi
...
cargo build ${BUILDFLAGS} --lib --release --manifest-path=./rust/Cargo.toml --target-dir $(TARGET_DIR)

The check results are here

  *
Windows: https://win-builder.r-project.org/incoming_pretest/rtiktoken_0.0.3_20241016_135446/Windows/00check.log (1 NOTE about misspelled words and a URL not being available)
  *
Debian:https://win-builder.r-project.org/incoming_pretest/rtiktoken_0.0.3_20241016_135446/Debian/00check.log (2 NOTEs: installation time and misspelled words)

Now I am wondering if there is anything that I can do about this NOTE or if I should ignore it.
I did not find any reference to this in the "Using Rust in CRAN Packages" nor in other CRAN packages that use rust (eg gifski, string2path, arcpbf), but I might have missed something.

I found also the CARGO_BUILD_JOBS flag for rust (https://doc.rust-lang.org/cargo/reference/environment-variables.html) but as I can't reproduce the error locally (or on other GitHub Actions runners), I don't want to trial-and-test-it on CRAN servers.

Thanks, any help is appreciated!
David





	[[alternative HTML version deleted]]


From |kry|ov @end|ng |rom d|@root@org  Wed Oct 16 20:50:29 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Wed, 16 Oct 2024 21:50:29 +0300
Subject: [R-pkg-devel] Installation took CPU time elapsed time for
 rust-based package
In-Reply-To: <PAVPR03MB101039EE8E46028FAFFD96737D3452@PAVPR03MB10103.eurprd03.prod.outlook.com>
References: <PAVPR03MB101039EE8E46028FAFFD96737D3452@PAVPR03MB10103.eurprd03.prod.outlook.com>
Message-ID: <20241016215029.3694e8d0@Tarkus>

? Wed, 16 Oct 2024 17:38:27 +0000
D Z <david_j_zimmermann at hotmail.com> ?????:

> if [ -n "$_R_CHECK_LIMIT_CORES" ]; then \
> ? export BUILDFLAGS="-j 2 --offline"; \

This environment variable is spelled with an extra underscore:
https://cran.r-project.org/doc/manuals/r-devel/R-ints.html#index-_005fR_005fCHECK_005fLIMIT_005fCORES_005f

At least one of Josiah's packages instead relies on the user setting
the NOT_CRAN environment variable:
https://github.com/extendr/b64/blob/67ff753f71676870e3b04657909050ae10ec2145/src/Makevars#L10-L28

> Now I am wondering if there is anything that I can do about this NOTE
> or if I should ignore it.
> I did not find any reference to this in the "Using Rust in CRAN
> Packages"

"Not taking more than two parallel processes or threads during the CRAN
check" is a more general requirement for all packages, regardless of
whether they use Rust. A package that uses cmake -GNinja without
limiting the number of compiler processes or gives the -j$(nproc)
argument to a Make subprocess would have received this NOTE as well.

-- 
Best regards,
Ivan


From jo@|@h@p@rry @end|ng |rom gm@||@com  Wed Oct 16 21:30:54 2024
From: jo@|@h@p@rry @end|ng |rom gm@||@com (Josiah Parry)
Date: Wed, 16 Oct 2024 12:30:54 -0700
Subject: [R-pkg-devel] Installation took CPU time elapsed time for
 rust-based package
In-Reply-To: <20241016215029.3694e8d0@Tarkus>
References: <PAVPR03MB101039EE8E46028FAFFD96737D3452@PAVPR03MB10103.eurprd03.prod.outlook.com>
 <20241016215029.3694e8d0@Tarkus>
Message-ID: <CAL3ufUK9VLDvZVHGzHFzwzPfXzdDnqnSmniqrv9DtmXtO4KBWA@mail.gmail.com>

Thanks, Ivan! Yes, I would use the NOT_CRAN flag. But in the case of that
package, the CRAN_FLAGS are not set dynamically.
It would be a welcome PR to rextendr if anyone more comfortable with Make
would like to. The current
template Makevars is at
https://github.com/extendr/rextendr/blob/main/inst/templates/cran/Makevars.

David, it looks like you went about crafting your CRAN-compliance by
hand?hats off! If you want to be a little more
hands off in the future, you can check out the development version of
{rextendr} https://extendr.github.io/rextendr/dev/reference/cran.html
which provides Makevars and configure scripts that are CRAN compatible.

The general workflow for a new package would be something like:

usethis::create_package()
rextendr::use_extendr()
rextendr::use_cran_defaults()
rextendr::use_msrv("1.69") # or whatever MSRV you have
rextendr::vendor_pkgs()

If you, or anyone else for that matter, have additional questions, I
recommend joining the
extendr discord at https://discord.gg/Mt4Kauus.

For more "formal" questions a GitHub discussion or issue is also welcome
https://github.com/extendr/extendr/discussions


On Wed, Oct 16, 2024 at 11:50?AM Ivan Krylov via R-package-devel <
r-package-devel at r-project.org> wrote:

> ? Wed, 16 Oct 2024 17:38:27 +0000
> D Z <david_j_zimmermann at hotmail.com> ?????:
>
> > if [ -n "$_R_CHECK_LIMIT_CORES" ]; then \
> >  export BUILDFLAGS="-j 2 --offline"; \
>
> This environment variable is spelled with an extra underscore:
>
> https://cran.r-project.org/doc/manuals/r-devel/R-ints.html#index-_005fR_005fCHECK_005fLIMIT_005fCORES_005f
>
> At least one of Josiah's packages instead relies on the user setting
> the NOT_CRAN environment variable:
>
> https://github.com/extendr/b64/blob/67ff753f71676870e3b04657909050ae10ec2145/src/Makevars#L10-L28
>
> > Now I am wondering if there is anything that I can do about this NOTE
> > or if I should ignore it.
> > I did not find any reference to this in the "Using Rust in CRAN
> > Packages"
>
> "Not taking more than two parallel processes or threads during the CRAN
> check" is a more general requirement for all packages, regardless of
> whether they use Rust. A package that uses cmake -GNinja without
> limiting the number of compiler processes or gives the -j$(nproc)
> argument to a Make subprocess would have received this NOTE as well.
>
> --
> Best regards,
> Ivan
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From m|ch@e|@m@hony @end|ng |rom c@nt@b@net  Wed Oct 16 22:04:54 2024
From: m|ch@e|@m@hony @end|ng |rom c@nt@b@net (Michael Mahony)
Date: Wed, 16 Oct 2024 20:04:54 +0000
Subject: [R-pkg-devel] Installation error when submitting package to CRAN
Message-ID: <da2d74d2d92ee1231f083ff304f25d97@cantab.net>



Apologies in advance for not providing a reproducible example, but I am 
unsure how to reproduce the below error, as it did not occur on my 
machine.

I recently submitted a package to CRAN, after which I received an 
automated email from ligges at statistik.tu-dortmund.de, saying my package 
had failed the automated checks. I was advised to ask for help on this 
mailing list if I did not know how to resolve the error.

Details of the automated checks are provided here: 
https://win-builder.r-project.org/incoming_pretest/hhmR_0.0.1_20241015_235116/

Essentially, when trying to install the package for Windows, the 
following error was produced.

```
* installing *source* package 'hhmR' ...
** using staged installation
** R
** data
*** moving datasets to lazyload DB
** inst
** byte-compile and prepare package for lazy loading
Error in loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), 
versionCheck = vI[[j]]) :
   there is no package called 'farver'
Calls: <Anonymous> ... loadNamespace -> withRestarts -> withOneRestart 
-> doWithOneRestart
Execution halted
ERROR: lazy loading failed for package 'hhmR'
* removing 'd:/RCompile/CRANincoming/R-devel/lib/hhmR'
```

This error has never occurred before when testing the package using 
`devtools` or `rhub`. I imagine I probably need to add `library(farver)` 
somewhere in my package, but am unsure where.

If anyone has any advice about how to resolve this issue I would be very 
greatful.

Thank you in advance,

Michael
	[[alternative HTML version deleted]]


From @|mon@urb@nek @end|ng |rom R-project@org  Thu Oct 17 02:00:43 2024
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Thu, 17 Oct 2024 13:00:43 +1300
Subject: [R-pkg-devel] 
 Installation error when submitting package to CRAN
In-Reply-To: <da2d74d2d92ee1231f083ff304f25d97@cantab.net>
References: <da2d74d2d92ee1231f083ff304f25d97@cantab.net>
Message-ID: <D894D9F4-EF5F-4465-82A8-B55D96898232@R-project.org>

See the error - that looks like a temporary issue. I'd contact CRAN or resubmit.

Cheers,
Simon



> On Oct 17, 2024, at 09:04, Michael Mahony <michael.mahony at cantab.net> wrote:
> 
> 
> 
> Apologies in advance for not providing a reproducible example, but I am 
> unsure how to reproduce the below error, as it did not occur on my 
> machine.
> 
> I recently submitted a package to CRAN, after which I received an 
> automated email from ligges at statistik.tu-dortmund.de, saying my package 
> had failed the automated checks. I was advised to ask for help on this 
> mailing list if I did not know how to resolve the error.
> 
> Details of the automated checks are provided here: 
> https://win-builder.r-project.org/incoming_pretest/hhmR_0.0.1_20241015_235116/
> 
> Essentially, when trying to install the package for Windows, the 
> following error was produced.
> 
> ```
> * installing *source* package 'hhmR' ...
> ** using staged installation
> ** R
> ** data
> *** moving datasets to lazyload DB
> ** inst
> ** byte-compile and prepare package for lazy loading
> Error in loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), 
> versionCheck = vI[[j]]) :
>   there is no package called 'farver'
> Calls: <Anonymous> ... loadNamespace -> withRestarts -> withOneRestart 
> -> doWithOneRestart
> Execution halted
> ERROR: lazy loading failed for package 'hhmR'
> * removing 'd:/RCompile/CRANincoming/R-devel/lib/hhmR'
> ```
> 
> This error has never occurred before when testing the package using 
> `devtools` or `rhub`. I imagine I probably need to add `library(farver)` 
> somewhere in my package, but am unsure where.
> 
> If anyone has any advice about how to resolve this issue I would be very 
> greatful.
> 
> Thank you in advance,
> 
> Michael
> [[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 


From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Thu Oct 17 02:46:52 2024
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Wed, 16 Oct 2024 17:46:52 -0700
Subject: [R-pkg-devel] 
 Installation error when submitting package to CRAN
In-Reply-To: <da2d74d2d92ee1231f083ff304f25d97@cantab.net>
References: <da2d74d2d92ee1231f083ff304f25d97@cantab.net>
Message-ID: <A2D47FF5-6AFA-4A1C-8C36-57B44EDA31F5@dcn.davis.ca.us>

You should not use "library(anything)" in a package. You should rely on the Imports: field in the DESCRIPTION file along with importFrom() in your NAMESPACE file, or the Suggests: field in the DESCRIPTION file and if (requireNamespace("anypackage"))  {anypackage::somefun} else {# avoid using anypackage}. See WRE 1.1.3.1.

But in this particular case this might be a temporary glitch on the CRAN server.

On October 16, 2024 1:04:54 PM PDT, Michael Mahony <michael.mahony at cantab.net> wrote:
>
>
>Apologies in advance for not providing a reproducible example, but I am 
>unsure how to reproduce the below error, as it did not occur on my 
>machine.
>
>I recently submitted a package to CRAN, after which I received an 
>automated email from ligges at statistik.tu-dortmund.de, saying my package 
>had failed the automated checks. I was advised to ask for help on this 
>mailing list if I did not know how to resolve the error.
>
>Details of the automated checks are provided here: 
>https://win-builder.r-project.org/incoming_pretest/hhmR_0.0.1_20241015_235116/
>
>Essentially, when trying to install the package for Windows, the 
>following error was produced.
>
>```
>* installing *source* package 'hhmR' ...
>** using staged installation
>** R
>** data
>*** moving datasets to lazyload DB
>** inst
>** byte-compile and prepare package for lazy loading
>Error in loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), 
>versionCheck = vI[[j]]) :
>   there is no package called 'farver'
>Calls: <Anonymous> ... loadNamespace -> withRestarts -> withOneRestart 
>-> doWithOneRestart
>Execution halted
>ERROR: lazy loading failed for package 'hhmR'
>* removing 'd:/RCompile/CRANincoming/R-devel/lib/hhmR'
>```
>
>This error has never occurred before when testing the package using 
>`devtools` or `rhub`. I imagine I probably need to add `library(farver)` 
>somewhere in my package, but am unsure where.
>
>If anyone has any advice about how to resolve this issue I would be very 
>greatful.
>
>Thank you in advance,
>
>Michael
>	[[alternative HTML version deleted]]
>
>______________________________________________
>R-package-devel at r-project.org mailing list
>https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
Sent from my phone. Please excuse my brevity.


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Thu Oct 17 10:33:33 2024
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Thu, 17 Oct 2024 10:33:33 +0200
Subject: [R-pkg-devel] 
 Installation error when submitting package to CRAN
In-Reply-To: <A2D47FF5-6AFA-4A1C-8C36-57B44EDA31F5@dcn.davis.ca.us>
References: <da2d74d2d92ee1231f083ff304f25d97@cantab.net>
 <A2D47FF5-6AFA-4A1C-8C36-57B44EDA31F5@dcn.davis.ca.us>
Message-ID: <e9240ba7-4447-41a3-bc97-7350bcdd78ca@statistik.tu-dortmund.de>

1. I looked, and farver is not declared in your DESCRIPTION file as any 
dependency. Is it used by another package you depend on?


2. We also see:

Flavor: r-devel-linux-x86_64-debian-gcc
Check: DESCRIPTION meta-information, Result: NOTE
   License stub is invalid DCF.

and

   License components with restrictions and base license permitting such:
     MIT + file LICENSE
   File 'LICENSE':
     MIT License

     Copyright (c) 2024 sgmmahon

     Permission is ....

Please only ship the CRAN template for the MIT license.

3. In the Description field you have
"... (e.g. `dendextend`) ..."
Please use straight rather than directed quotes.

Please fix and resubmit.

Best,
Uwe Ligges






On 17.10.2024 02:46, Jeff Newmiller via R-package-devel wrote:
> You should not use "library(anything)" in a package. You should rely on the Imports: field in the DESCRIPTION file along with importFrom() in your NAMESPACE file, or the Suggests: field in the DESCRIPTION file and if (requireNamespace("anypackage"))  {anypackage::somefun} else {# avoid using anypackage}. See WRE 1.1.3.1.
> 
> But in this particular case this might be a temporary glitch on the CRAN server.
> 
> On October 16, 2024 1:04:54 PM PDT, Michael Mahony <michael.mahony at cantab.net> wrote:
>>
>>
>> Apologies in advance for not providing a reproducible example, but I am
>> unsure how to reproduce the below error, as it did not occur on my
>> machine.
>>
>> I recently submitted a package to CRAN, after which I received an
>> automated email from ligges at statistik.tu-dortmund.de, saying my package
>> had failed the automated checks. I was advised to ask for help on this
>> mailing list if I did not know how to resolve the error.
>>
>> Details of the automated checks are provided here:
>> https://win-builder.r-project.org/incoming_pretest/hhmR_0.0.1_20241015_235116/
>>
>> Essentially, when trying to install the package for Windows, the
>> following error was produced.
>>
>> ```
>> * installing *source* package 'hhmR' ...
>> ** using staged installation
>> ** R
>> ** data
>> *** moving datasets to lazyload DB
>> ** inst
>> ** byte-compile and prepare package for lazy loading
>> Error in loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()),
>> versionCheck = vI[[j]]) :
>>    there is no package called 'farver'
>> Calls: <Anonymous> ... loadNamespace -> withRestarts -> withOneRestart
>> -> doWithOneRestart
>> Execution halted
>> ERROR: lazy loading failed for package 'hhmR'
>> * removing 'd:/RCompile/CRANincoming/R-devel/lib/hhmR'
>> ```
>>
>> This error has never occurred before when testing the package using
>> `devtools` or `rhub`. I imagine I probably need to add `library(farver)`
>> somewhere in my package, but am unsure where.
>>
>> If anyone has any advice about how to resolve this issue I would be very
>> greatful.
>>
>> Thank you in advance,
>>
>> Michael
>> 	[[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 

From |kry|ov @end|ng |rom d|@root@org  Thu Oct 17 10:52:46 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Thu, 17 Oct 2024 11:52:46 +0300
Subject: [R-pkg-devel] 
 Installation error when submitting package to CRAN
In-Reply-To: <e9240ba7-4447-41a3-bc97-7350bcdd78ca@statistik.tu-dortmund.de>
References: <da2d74d2d92ee1231f083ff304f25d97@cantab.net>
 <A2D47FF5-6AFA-4A1C-8C36-57B44EDA31F5@dcn.davis.ca.us>
 <e9240ba7-4447-41a3-bc97-7350bcdd78ca@statistik.tu-dortmund.de>
Message-ID: <20241017115246.210db267@Tarkus>

On Thu, 17 Oct 2024 10:33:33 +0200
Uwe Ligges <ligges at statistik.tu-dortmund.de> wrote:

> I looked, and farver is not declared in your DESCRIPTION file as any 
> dependency. Is it used by another package you depend on?

It's a transitive dependency via hhmR's Imports: patchwork, which in
turn Imports: farver.

> Please only ship the CRAN template for the MIT license.

Michael: for more information, see RShowDoc("MIT") and
<https://contributor.r-project.org/cran-cookbook/description_issues.html#license-files>.

-- 
Best regards,
Ivan


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Thu Oct 17 10:55:25 2024
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Thu, 17 Oct 2024 10:55:25 +0200
Subject: [R-pkg-devel] 
 Installation error when submitting package to CRAN
In-Reply-To: <20241017115246.210db267@Tarkus>
References: <da2d74d2d92ee1231f083ff304f25d97@cantab.net>
 <A2D47FF5-6AFA-4A1C-8C36-57B44EDA31F5@dcn.davis.ca.us>
 <e9240ba7-4447-41a3-bc97-7350bcdd78ca@statistik.tu-dortmund.de>
 <20241017115246.210db267@Tarkus>
Message-ID: <f34fe95d-6898-45b2-af89-e0055fae7215@statistik.tu-dortmund.de>

Indeed, thank you, Ivan.
Then it was a temporary hicc up on the build server and should work for 
the resubmission of the fixed package.

Best,
Uwe

On 17.10.2024 10:52, Ivan Krylov wrote:
> On Thu, 17 Oct 2024 10:33:33 +0200
> Uwe Ligges <ligges at statistik.tu-dortmund.de> wrote:
> 
>> I looked, and farver is not declared in your DESCRIPTION file as any
>> dependency. Is it used by another package you depend on?
> 
> It's a transitive dependency via hhmR's Imports: patchwork, which in
> turn Imports: farver.
> 
>> Please only ship the CRAN template for the MIT license.
> 
> Michael: for more information, see RShowDoc("MIT") and
> <https://contributor.r-project.org/cran-cookbook/description_issues.html#license-files>.
> 

From no@h@gre||er @end|ng |rom gm@||@com  Thu Oct 24 18:55:32 2024
From: no@h@gre||er @end|ng |rom gm@||@com (Noah Greifer)
Date: Thu, 24 Oct 2024 12:55:32 -0400
Subject: [R-pkg-devel] check_equal() test fails on ATLAS
Message-ID: <CAPhhD8mY0FNaQJmdag+TFz4uQ+yYOdNZMjgy5B9GXkRvp5+2ng@mail.gmail.com>

Hello all,

My package *WeightIt* is failing
<https://cran.r-project.org/web/checks/check_results_WeightIt.html> the
CRAN test on ATLAS. The failure is due
<https://www.stats.ox.ac.uk/pub/bdr/Rblas/ATLAS/WeightIt.out> to a failed
*testthat* test comparing two covariance matrices using check_equal(). A
few things are confusing to me, so I'm not sure how to solve it.

First, the covariance matrices should be identical; there is no random
component in their computation and the the only difference in the calls
used to generate them are whether an argument is omitted or whether it is
explicitly set to its default (i.e., the purpose of the test is to ensure
the default argument corresponds to the supplied argument). I am willing to
accept that there is some non-deterministic process in ATLAS, e.g., where
convergence is measured based on time rather than number of iterations,
though I don't know if this is actually the case.

Second, the package tests have passed on previous CRAN checks (this is
weeks after this version was accepted to CRAN), on all other versions of R,
and in the rhub test
<https://github.com/ngreifer/WeightIt/actions/runs/11489721542/job/31979056981#step:6:124>
with ATLAS.

Does anyone have any advice on how to solve this? I know I can change the
tolerance argument to check_equal() but this is a case where the output
should be identical. I cannot reproduce the problem with rhub, so I can't
see where the problem is. Could this be a false alarm due to caching?
Thanks for any insights.

Noah

	[[alternative HTML version deleted]]


From ge|bjeremy22 @end|ng |rom gm@||@com  Sat Oct 26 18:18:07 2024
From: ge|bjeremy22 @end|ng |rom gm@||@com (=?UTF-8?B?asOpcsOpbXkgR2VsYg==?=)
Date: Sat, 26 Oct 2024 12:18:07 -0400
Subject: [R-pkg-devel] 
 *** caught segfault *** address (nil), cause 'unknown'
Message-ID: <CACSk52-bmXQzSBXwp+Q2jvK0ucw=_-XAt1iw3HVV=+-9PwGPRQ@mail.gmail.com>

Dear R packages developers,

I am the maintainer of the package spNetwork. It has been removed from CRAN
recently because of an issue with the new compiler clang19. The error came
from one of the dependencies: the package BH giving access to the boost c++
library (https://github.com/eddelbuettel/bh/issues/101).

The boost code has been updated since and I had no choice to include it
directly in my own package and remove the dependency to BH because its
maintainer does not plan a new release before december 2024.

However, there is a new error when I submit the package to CRAN (ubuntu
with clang19). The full report is here :
https://win-builder.r-project.org/incoming_pretest/spNetwork_0.4.4.4_20241026_034629/specialChecks/clang19/package/00install.out

The error occurred during the installation of the package, and the message
is not very helpful :

 *** caught segfault ***
address (nil), cause 'unknown'

It seems that the error is happening when loading a c++ module of my
package

Traceback:
 1: Module(module, mustStart = TRUE, where = env)
 2: doTryCatch(return(expr), name, parentenv, handler)
 3: tryCatchOne(expr, names, parentenv, handlers[[1L]])
 4: tryCatchList(expr, classes, parentenv, handlers)
 5: tryCatch(Module(module, mustStart = TRUE, where = env), error =
function(e) e)
 6: loadModule(module = "spatial_index_cpp", what = TRUE, env = ns,
 loadNow = TRUE)


It is rather strange because I have not edited this module since the last
version and the package is installing correctly on other platforms. I also
tried to validate it with rhub and it worked well even with ubuntu and
clang19 :
https://github.com/JeremyGelb/spNetwork/actions/runs/11527593888/job/32093568292

Does someone have an idea about what could be causing this error during the
installation ? Any help would be highly appreciated.

I have a specific branch in gihtub for this issue :
https://github.com/JeremyGelb/spNetwork/tree/refs/heads/CRAN-v4.

All the best
-- 

*J?r?my GELB*
Conseiller en gestion et analyse de donn?es ? l'ARTM
Docteur en ?tudes Urbaines

438 389 6398
gelbjeremy22 at gmail.com

	[[alternative HTML version deleted]]


From g|@nm@rco@|bert| @end|ng |rom gm@||@com  Sun Oct 27 11:03:41 2024
From: g|@nm@rco@|bert| @end|ng |rom gm@||@com (Gianmarco Alberti)
Date: Sun, 27 Oct 2024 11:03:41 +0100
Subject: [R-pkg-devel] DESCRIPTION file corrections for accepted package
Message-ID: <CAMQoV_oo3ry2ZAsLDRMRASM9LE9ciOOy8a9W-Ykj9269gh=Bgg@mail.gmail.com>

Dear R Package Developers,
I am seeking guidance regarding a situation with my package 'chisquare'
(version 1.1) on CRAN.

Current situation:

1. The package was submitted and (automatically) accepted to CRAN (version
1.1) after thorough local testing and complete devtools checks
(check_win_oldrelease(), check_win_release(), check_win_devel())

2. After acceptance, I received a request to make formatting changes to the
DESCRIPTION file by November 2, 2024:
-Remove version specifications for graphics and stats in Imports
-Update R version dependency format from R (>= 4.0.0) to R (>= 4.0)

3. Upon attempting to submit these formatting changes, I received a warning
about "Insufficient package version (submitted: 1.1, existing: 1.1)". I am
well aware that this warning typically indicates the need to increment the
version number for new submissions of existing packages, as per CRAN
policies.

This creates a procedural challenge:
-I need to make the requested DESCRIPTION file changes to retain the package
-The changes are purely formatting-related, not functional (all checks pass)
-I cannot submit without changing the version number
-However, incrementing the version number seems disproportionate for
formatting changes.

I would greatly appreciate guidance on the proper way to handle this
situation.
What is the recommended approach for submitting DESCRIPTION file formatting
corrections for an already-accepted package, given that incrementing the
version number might seem a bit disproportionate?

Thank you for your time and assistance.

	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Sun Oct 27 11:49:05 2024
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sun, 27 Oct 2024 06:49:05 -0400
Subject: [R-pkg-devel] DESCRIPTION file corrections for accepted package
In-Reply-To: <CAMQoV_oo3ry2ZAsLDRMRASM9LE9ciOOy8a9W-Ykj9269gh=Bgg@mail.gmail.com>
References: <CAMQoV_oo3ry2ZAsLDRMRASM9LE9ciOOy8a9W-Ykj9269gh=Bgg@mail.gmail.com>
Message-ID: <142292b0-f4e2-4a96-b77e-a337d287606a@gmail.com>

On 2024-10-27 6:03 a.m., Gianmarco Alberti wrote:
> Dear R Package Developers,
> I am seeking guidance regarding a situation with my package 'chisquare'
> (version 1.1) on CRAN.
> 
> Current situation:
> 
> 1. The package was submitted and (automatically) accepted to CRAN (version
> 1.1) after thorough local testing and complete devtools checks
> (check_win_oldrelease(), check_win_release(), check_win_devel())
> 
> 2. After acceptance, I received a request to make formatting changes to the
> DESCRIPTION file by November 2, 2024:
> -Remove version specifications for graphics and stats in Imports
> -Update R version dependency format from R (>= 4.0.0) to R (>= 4.0)
> 
> 3. Upon attempting to submit these formatting changes, I received a warning
> about "Insufficient package version (submitted: 1.1, existing: 1.1)". I am
> well aware that this warning typically indicates the need to increment the
> version number for new submissions of existing packages, as per CRAN
> policies.
> 
> This creates a procedural challenge:
> -I need to make the requested DESCRIPTION file changes to retain the package
> -The changes are purely formatting-related, not functional (all checks pass)
> -I cannot submit without changing the version number
> -However, incrementing the version number seems disproportionate for
> formatting changes.
> 
> I would greatly appreciate guidance on the proper way to handle this
> situation.
> What is the recommended approach for submitting DESCRIPTION file formatting
> corrections for an already-accepted package, given that incrementing the
> version number might seem a bit disproportionate?
> 
> Thank you for your time and assistance.

The simplest thing is to just update the version.  Use 1.1.1 if you 
don't want to go to 1.2.

Duncan Murdoch


From g|@nm@rco@|bert| @end|ng |rom gm@||@com  Sun Oct 27 12:48:28 2024
From: g|@nm@rco@|bert| @end|ng |rom gm@||@com (Gianmarco Alberti)
Date: Sun, 27 Oct 2024 12:48:28 +0100
Subject: [R-pkg-devel] DESCRIPTION file corrections for accepted package
In-Reply-To: <142292b0-f4e2-4a96-b77e-a337d287606a@gmail.com>
References: <CAMQoV_oo3ry2ZAsLDRMRASM9LE9ciOOy8a9W-Ykj9269gh=Bgg@mail.gmail.com>
 <142292b0-f4e2-4a96-b77e-a337d287606a@gmail.com>
Message-ID: <CAMQoV_qqOx8AGcosji0QrvV2Vc-nnXE0cC5xZjkrssCLC+K6pA@mail.gmail.com>

Dear Duncan,

Thank you for the straightforward guidance.

My initial query stemmed from a concern about versioning consistency - I
thought that once using three digits (1.1.1), I would need to maintain that
format (e.g., 1.2.0) in future updates. Your suggestion clarified that I
can use 1.1.1 for these formatting changes and still use 1.2 for future
substantial updates.

Best regards,

Gm

Il giorno dom 27 ott 2024 alle ore 11:49 Duncan Murdoch <
murdoch.duncan at gmail.com> ha scritto:

> On 2024-10-27 6:03 a.m., Gianmarco Alberti wrote:
> > Dear R Package Developers,
> > I am seeking guidance regarding a situation with my package 'chisquare'
> > (version 1.1) on CRAN.
> >
> > Current situation:
> >
> > 1. The package was submitted and (automatically) accepted to CRAN
> (version
> > 1.1) after thorough local testing and complete devtools checks
> > (check_win_oldrelease(), check_win_release(), check_win_devel())
> >
> > 2. After acceptance, I received a request to make formatting changes to
> the
> > DESCRIPTION file by November 2, 2024:
> > -Remove version specifications for graphics and stats in Imports
> > -Update R version dependency format from R (>= 4.0.0) to R (>= 4.0)
> >
> > 3. Upon attempting to submit these formatting changes, I received a
> warning
> > about "Insufficient package version (submitted: 1.1, existing: 1.1)". I
> am
> > well aware that this warning typically indicates the need to increment
> the
> > version number for new submissions of existing packages, as per CRAN
> > policies.
> >
> > This creates a procedural challenge:
> > -I need to make the requested DESCRIPTION file changes to retain the
> package
> > -The changes are purely formatting-related, not functional (all checks
> pass)
> > -I cannot submit without changing the version number
> > -However, incrementing the version number seems disproportionate for
> > formatting changes.
> >
> > I would greatly appreciate guidance on the proper way to handle this
> > situation.
> > What is the recommended approach for submitting DESCRIPTION file
> formatting
> > corrections for an already-accepted package, given that incrementing the
> > version number might seem a bit disproportionate?
> >
> > Thank you for your time and assistance.
>
> The simplest thing is to just update the version.  Use 1.1.1 if you
> don't want to go to 1.2.
>
> Duncan Murdoch
>
>

	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Sun Oct 27 14:16:36 2024
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sun, 27 Oct 2024 09:16:36 -0400
Subject: [R-pkg-devel] DESCRIPTION file corrections for accepted package
In-Reply-To: <CAMQoV_qqOx8AGcosji0QrvV2Vc-nnXE0cC5xZjkrssCLC+K6pA@mail.gmail.com>
References: <CAMQoV_oo3ry2ZAsLDRMRASM9LE9ciOOy8a9W-Ykj9269gh=Bgg@mail.gmail.com>
 <142292b0-f4e2-4a96-b77e-a337d287606a@gmail.com>
 <CAMQoV_qqOx8AGcosji0QrvV2Vc-nnXE0cC5xZjkrssCLC+K6pA@mail.gmail.com>
Message-ID: <49f94200-e26a-4d4d-9934-988b5ec82269@gmail.com>

I don't think R will enforce a 3 part version just because you used it 
once.  You might have other reasons to try to maintain versioning 
consistency.

Duncan Murdoch

On 2024-10-27 7:48 a.m., Gianmarco Alberti wrote:
> Dear Duncan,
> 
> Thank you for the straightforward guidance.
> 
> My initial query stemmed from a concern about versioning consistency - I 
> thought that once using three digits (1.1.1), I would need to maintain 
> that format (e.g., 1.2.0) in future updates. Your suggestion clarified 
> that I can use 1.1.1 for these formatting changes and still use 1.2 for 
> future substantial updates.
> 
> Best regards,
> 
> Gm
> 
> 
> Il giorno dom 27 ott 2024 alle ore 11:49 Duncan Murdoch 
> <murdoch.duncan at gmail.com <mailto:murdoch.duncan at gmail.com>> ha scritto:
> 
>     On 2024-10-27 6:03 a.m., Gianmarco Alberti wrote:
>      > Dear R Package Developers,
>      > I am seeking guidance regarding a situation with my package
>     'chisquare'
>      > (version 1.1) on CRAN.
>      >
>      > Current situation:
>      >
>      > 1. The package was submitted and (automatically) accepted to CRAN
>     (version
>      > 1.1) after thorough local testing and complete devtools checks
>      > (check_win_oldrelease(), check_win_release(), check_win_devel())
>      >
>      > 2. After acceptance, I received a request to make formatting
>     changes to the
>      > DESCRIPTION file by November 2, 2024:
>      > -Remove version specifications for graphics and stats in Imports
>      > -Update R version dependency format from R (>= 4.0.0) to R (>= 4.0)
>      >
>      > 3. Upon attempting to submit these formatting changes, I received
>     a warning
>      > about "Insufficient package version (submitted: 1.1, existing:
>     1.1)". I am
>      > well aware that this warning typically indicates the need to
>     increment the
>      > version number for new submissions of existing packages, as per CRAN
>      > policies.
>      >
>      > This creates a procedural challenge:
>      > -I need to make the requested DESCRIPTION file changes to retain
>     the package
>      > -The changes are purely formatting-related, not functional (all
>     checks pass)
>      > -I cannot submit without changing the version number
>      > -However, incrementing the version number seems disproportionate for
>      > formatting changes.
>      >
>      > I would greatly appreciate guidance on the proper way to handle this
>      > situation.
>      > What is the recommended approach for submitting DESCRIPTION file
>     formatting
>      > corrections for an already-accepted package, given that
>     incrementing the
>      > version number might seem a bit disproportionate?
>      >
>      > Thank you for your time and assistance.
> 
>     The simplest thing is to just update the version.? Use 1.1.1 if you
>     don't want to go to 1.2.
> 
>     Duncan Murdoch
>


From |kry|ov @end|ng |rom d|@root@org  Mon Oct 28 12:42:53 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Mon, 28 Oct 2024 14:42:53 +0300
Subject: [R-pkg-devel] 
 *** caught segfault *** address (nil), cause 'unknown'
In-Reply-To: <CACSk52-bmXQzSBXwp+Q2jvK0ucw=_-XAt1iw3HVV=+-9PwGPRQ@mail.gmail.com>
References: <CACSk52-bmXQzSBXwp+Q2jvK0ucw=_-XAt1iw3HVV=+-9PwGPRQ@mail.gmail.com>
Message-ID: <20241028144253.6e3c3988@arachnoid>

? Sat, 26 Oct 2024 12:18:07 -0400
j?r?my Gelb <gelbjeremy22 at gmail.com> ?????:

>  *** caught segfault ***
> address (nil), cause 'unknown'
> 
> It seems that the error is happening when loading a c++ module of my
> package
> 
> Traceback:
>  1: Module(module, mustStart = TRUE, where = env)
>  2: doTryCatch(return(expr), name, parentenv, handler)
>  3: tryCatchOne(expr, names, parentenv, handlers[[1L]])
>  4: tryCatchList(expr, classes, parentenv, handlers)
>  5: tryCatch(Module(module, mustStart = TRUE, where = env), error =
> function(e) e)
>  6: loadModule(module = "spatial_index_cpp", what = TRUE, env = ns,
>  loadNow = TRUE)
> 
> 
> It is rather strange because I have not edited this module since the
> last version and the package is installing correctly on other
> platforms

Perplexing. The method that usually works - starting a fresh Debian
trixie/sid virtual machine, installing clang-19 and R
build-dependencies, compiling R from source (with OR without
CXXFLAGS=-stdlib=libc++), installing fresh dependencies from CRAN
source packages and running R CMD check --as-cran - did not reproduce
the null pointer dereference and the crash.

The compiler versions did not exactly match (current Debian testing has
newer clang-19 than 19.1.0 that had compiled R or 19.1.1 that compiled
your package), but that looks very minor.

Although there was no crash on Windows, the Windows compilation log is
full of warnings about potential null pointer dereference:

https://win-builder.r-project.org/incoming_pretest/spNetwork_0.4.4.4_20241026_034629/Windows/00install.out

../inst/i/b/concept/detail/general.hpp:50:47: warning: 'this' pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
../inst/i/b/concept/usage.hpp:20:5: note: in a call to non-static member function 'boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::geometry::concepts::Box<boost::geometry::model::box<boost::geometry::model::point<double, 2, boost::geometry::cs::cartesian> > >]'
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^

I see that, for example,
boost::geometry::concepts::Box<boost::geometry::model::box>::dimension_checker::apply()
creates a null pointer boost::geometry::model::box * b = 0 and then
calls geometry::set<...>(*b, geometry::get<...>(*b)). This _could_ be a
red herring, but class boost::geometry::model::box has member
variables. Could a previous version of the clang-19 compiler have
failed to elide member variable access in this call for some reason?
(According to the standard, having a null `this` pointer is always
undefined behaviour, so the compiler would not be exactly wrong to make
the application crash if this code is ever reached.)

-- 
Best regards,
Ivan


From jo@h@m@u|r|ch @end|ng |rom gm@||@com  Mon Oct 28 16:41:07 2024
From: jo@h@m@u|r|ch @end|ng |rom gm@||@com (Joshua Ulrich)
Date: Mon, 28 Oct 2024 10:41:07 -0500
Subject: [R-pkg-devel] DESCRIPTION file corrections for accepted package
In-Reply-To: <49f94200-e26a-4d4d-9934-988b5ec82269@gmail.com>
References: <CAMQoV_oo3ry2ZAsLDRMRASM9LE9ciOOy8a9W-Ykj9269gh=Bgg@mail.gmail.com>
 <142292b0-f4e2-4a96-b77e-a337d287606a@gmail.com>
 <CAMQoV_qqOx8AGcosji0QrvV2Vc-nnXE0cC5xZjkrssCLC+K6pA@mail.gmail.com>
 <49f94200-e26a-4d4d-9934-988b5ec82269@gmail.com>
Message-ID: <CAPPM_gS21xVZ7Fyh+xwQ3nGjUx4KdQyp7MF9hQR1t8ea0hhkwA@mail.gmail.com>

`R CMD check` uses the `package_version()` function to check that the
submitted package version is > the version on CRAN. You can use it to
check Duncan's hypothesis:

R$ # current update with 3-part version
R$ package_version("1.1.1") > package_version("1.1")
[1] TRUE
R$ # next update with only a 2-part version
R$ package_version("1.2") > package_version("1.1.1")
[1] TRUE


On Sun, Oct 27, 2024 at 8:16?AM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>
> I don't think R will enforce a 3 part version just because you used it
> once.  You might have other reasons to try to maintain versioning
> consistency.
>
> Duncan Murdoch
>
> On 2024-10-27 7:48 a.m., Gianmarco Alberti wrote:
> > Dear Duncan,
> >
> > Thank you for the straightforward guidance.
> >
> > My initial query stemmed from a concern about versioning consistency - I
> > thought that once using three digits (1.1.1), I would need to maintain
> > that format (e.g., 1.2.0) in future updates. Your suggestion clarified
> > that I can use 1.1.1 for these formatting changes and still use 1.2 for
> > future substantial updates.
> >
> > Best regards,
> >
> > Gm
> >
> >
> > Il giorno dom 27 ott 2024 alle ore 11:49 Duncan Murdoch
> > <murdoch.duncan at gmail.com <mailto:murdoch.duncan at gmail.com>> ha scritto:
> >
> >     On 2024-10-27 6:03 a.m., Gianmarco Alberti wrote:
> >      > Dear R Package Developers,
> >      > I am seeking guidance regarding a situation with my package
> >     'chisquare'
> >      > (version 1.1) on CRAN.
> >      >
> >      > Current situation:
> >      >
> >      > 1. The package was submitted and (automatically) accepted to CRAN
> >     (version
> >      > 1.1) after thorough local testing and complete devtools checks
> >      > (check_win_oldrelease(), check_win_release(), check_win_devel())
> >      >
> >      > 2. After acceptance, I received a request to make formatting
> >     changes to the
> >      > DESCRIPTION file by November 2, 2024:
> >      > -Remove version specifications for graphics and stats in Imports
> >      > -Update R version dependency format from R (>= 4.0.0) to R (>= 4.0)
> >      >
> >      > 3. Upon attempting to submit these formatting changes, I received
> >     a warning
> >      > about "Insufficient package version (submitted: 1.1, existing:
> >     1.1)". I am
> >      > well aware that this warning typically indicates the need to
> >     increment the
> >      > version number for new submissions of existing packages, as per CRAN
> >      > policies.
> >      >
> >      > This creates a procedural challenge:
> >      > -I need to make the requested DESCRIPTION file changes to retain
> >     the package
> >      > -The changes are purely formatting-related, not functional (all
> >     checks pass)
> >      > -I cannot submit without changing the version number
> >      > -However, incrementing the version number seems disproportionate for
> >      > formatting changes.
> >      >
> >      > I would greatly appreciate guidance on the proper way to handle this
> >      > situation.
> >      > What is the recommended approach for submitting DESCRIPTION file
> >     formatting
> >      > corrections for an already-accepted package, given that
> >     incrementing the
> >      > version number might seem a bit disproportionate?
> >      >
> >      > Thank you for your time and assistance.
> >
> >     The simplest thing is to just update the version.  Use 1.1.1 if you
> >     don't want to go to 1.2.
> >
> >     Duncan Murdoch
> >
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel



-- 
Joshua Ulrich  |  about.me/joshuaulrich
FOSS Trading  |  www.fosstrading.com


From georg|@bo@hn@kov @end|ng |rom m@nche@ter@@c@uk  Mon Oct 28 17:56:17 2024
From: georg|@bo@hn@kov @end|ng |rom m@nche@ter@@c@uk (Georgi Boshnakov)
Date: Mon, 28 Oct 2024 16:56:17 +0000
Subject: [R-pkg-devel] DESCRIPTION file corrections for accepted package
In-Reply-To: <CAPPM_gS21xVZ7Fyh+xwQ3nGjUx4KdQyp7MF9hQR1t8ea0hhkwA@mail.gmail.com>
References: <CAMQoV_oo3ry2ZAsLDRMRASM9LE9ciOOy8a9W-Ykj9269gh=Bgg@mail.gmail.com>
 <142292b0-f4e2-4a96-b77e-a337d287606a@gmail.com>
 <CAMQoV_qqOx8AGcosji0QrvV2Vc-nnXE0cC5xZjkrssCLC+K6pA@mail.gmail.com>
 <49f94200-e26a-4d4d-9934-988b5ec82269@gmail.com>
 <CAPPM_gS21xVZ7Fyh+xwQ3nGjUx4KdQyp7MF9hQR1t8ea0hhkwA@mail.gmail.com>
Message-ID: <LO0P265MB6325B421A9C4EE0D7E3999ADAE4A2@LO0P265MB6325.GBRP265.PROD.OUTLOOK.COM>

Also, v1.1 = v1.1.0:

>  package_version("1.1.0") > package_version("1.1")
[1] FALSE
>  package_version("1.1.0") == package_version("1.1")
[1] TRUE

If you adopt the 2-digit versions but decide to keep the possibility for 3-letter ones for minor fixes (bugs; fixing CRAN NOTES, minor bugs etc.), always use the four-digit development versions, e.g. 1.1.0.9000 after release of 1.1, to keep the possibility for 1.2 or 1.1.1 for the following release.

Georgi Boshnakov

________________________________________
From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Joshua Ulrich <josh.m.ulrich at gmail.com>
Sent: 28 October 2024 15:41
To: Duncan Murdoch
Cc: R Package Development
Subject: Re: [R-pkg-devel] DESCRIPTION file corrections for accepted package

`R CMD check` uses the `package_version()` function to check that the submitted package version is > the version on CRAN. You can use it to check Duncan's hypothesis: R$ # current update with 3-part version R$ package_version("1.?1.?1") >
ZjQcmQRYFpfptBannerStart
This Message Is From a New External Sender
You have not previously corresponded with this sender. Please exercise caution when opening links or attachments included in this message.

ZjQcmQRYFpfptBannerEnd

`R CMD check` uses the `package_version()` function to check that the
submitted package version is > the version on CRAN. You can use it to
check Duncan's hypothesis:

R$ # current update with 3-part version
R$ package_version("1.1.1") > package_version("1.1")
[1] TRUE
R$ # next update with only a 2-part version
R$ package_version("1.2") > package_version("1.1.1")
[1] TRUE


On Sun, Oct 27, 2024 at 8:16?AM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>
> I don't think R will enforce a 3 part version just because you used it
> once.  You might have other reasons to try to maintain versioning
> consistency.
>
> Duncan Murdoch
>
> On 2024-10-27 7:48 a.m., Gianmarco Alberti wrote:
> > Dear Duncan,
> >
> > Thank you for the straightforward guidance.
> >
> > My initial query stemmed from a concern about versioning consistency - I
> > thought that once using three digits (1.1.1), I would need to maintain
> > that format (e.g., 1.2.0) in future updates. Your suggestion clarified
> > that I can use 1.1.1 for these formatting changes and still use 1.2 for
> > future substantial updates.
> >
> > Best regards,
> >
> > Gm
> >
> >
> > Il giorno dom 27 ott 2024 alle ore 11:49 Duncan Murdoch
> > <murdoch.duncan at gmail.com <mailto:murdoch.duncan at gmail.com>> ha scritto:
> >
> >     On 2024-10-27 6:03 a.m., Gianmarco Alberti wrote:
> >      > Dear R Package Developers,
> >      > I am seeking guidance regarding a situation with my package
> >     'chisquare'
> >      > (version 1.1) on CRAN.
> >      >
> >      > Current situation:
> >      >
> >      > 1. The package was submitted and (automatically) accepted to CRAN
> >     (version
> >      > 1.1) after thorough local testing and complete devtools checks
> >      > (check_win_oldrelease(), check_win_release(), check_win_devel())
> >      >
> >      > 2. After acceptance, I received a request to make formatting
> >     changes to the
> >      > DESCRIPTION file by November 2, 2024:
> >      > -Remove version specifications for graphics and stats in Imports
> >      > -Update R version dependency format from R (>= 4.0.0) to R (>= 4.0)
> >      >
> >      > 3. Upon attempting to submit these formatting changes, I received
> >     a warning
> >      > about "Insufficient package version (submitted: 1.1, existing:
> >     1.1)". I am
> >      > well aware that this warning typically indicates the need to
> >     increment the
> >      > version number for new submissions of existing packages, as per CRAN
> >      > policies.
> >      >
> >      > This creates a procedural challenge:
> >      > -I need to make the requested DESCRIPTION file changes to retain
> >     the package
> >      > -The changes are purely formatting-related, not functional (all
> >     checks pass)
> >      > -I cannot submit without changing the version number
> >      > -However, incrementing the version number seems disproportionate for
> >      > formatting changes.
> >      >
> >      > I would greatly appreciate guidance on the proper way to handle this
> >      > situation.
> >      > What is the recommended approach for submitting DESCRIPTION file
> >     formatting
> >      > corrections for an already-accepted package, given that
> >     incrementing the
> >      > version number might seem a bit disproportionate?
> >      >
> >      > Thank you for your time and assistance.
> >
> >     The simplest thing is to just update the version.  Use 1.1.1 if you
> >     don't want to go to 1.2.
> >
> >     Duncan Murdoch
> >
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://urldefense.com/v3/__https://stat.ethz.ch/mailman/listinfo/r-package-devel__;!!PDiH4ENfjr2_Jw!DCS7NzQVm5Q1FFruS86zOyiLNBS9_EZ46Qpjb7Ks8TvH80ChDrXf8l5x94KXWZtPgoOExpq8805sRyJ_Zz_aNn7qkCwbNu8XZ0yf$[stat[.]ethz[.]ch]



--
Joshua Ulrich  |  about.me/joshuaulrich
FOSS Trading  |  https://urldefense.com/v3/__http://www.fosstrading.com__;!!PDiH4ENfjr2_Jw!DCS7NzQVm5Q1FFruS86zOyiLNBS9_EZ46Qpjb7Ks8TvH80ChDrXf8l5x94KXWZtPgoOExpq8805sRyJ_Zz_aNn7qkCwbNgL0eU2t$[fosstrading[.]com]

______________________________________________
R-package-devel at r-project.org mailing list
https://urldefense.com/v3/__https://stat.ethz.ch/mailman/listinfo/r-package-devel__;!!PDiH4ENfjr2_Jw!DCS7NzQVm5Q1FFruS86zOyiLNBS9_EZ46Qpjb7Ks8TvH80ChDrXf8l5x94KXWZtPgoOExpq8805sRyJ_Zz_aNn7qkCwbNu8XZ0yf$[stat[.]ethz[.]ch]


From murdoch@dunc@n @end|ng |rom gm@||@com  Mon Oct 28 18:03:31 2024
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Mon, 28 Oct 2024 13:03:31 -0400
Subject: [R-pkg-devel] DESCRIPTION file corrections for accepted package
In-Reply-To: <LO0P265MB6325B421A9C4EE0D7E3999ADAE4A2@LO0P265MB6325.GBRP265.PROD.OUTLOOK.COM>
References: <CAMQoV_oo3ry2ZAsLDRMRASM9LE9ciOOy8a9W-Ykj9269gh=Bgg@mail.gmail.com>
 <142292b0-f4e2-4a96-b77e-a337d287606a@gmail.com>
 <CAMQoV_qqOx8AGcosji0QrvV2Vc-nnXE0cC5xZjkrssCLC+K6pA@mail.gmail.com>
 <49f94200-e26a-4d4d-9934-988b5ec82269@gmail.com>
 <CAPPM_gS21xVZ7Fyh+xwQ3nGjUx4KdQyp7MF9hQR1t8ea0hhkwA@mail.gmail.com>
 <LO0P265MB6325B421A9C4EE0D7E3999ADAE4A2@LO0P265MB6325.GBRP265.PROD.OUTLOOK.COM>
Message-ID: <aa5fa16b-194a-44af-81bb-8f7a173ad5f2@gmail.com>

On 2024-10-28 12:56 p.m., Georgi Boshnakov wrote:
> Also, v1.1 = v1.1.0:
> 
>>   package_version("1.1.0") > package_version("1.1")
> [1] FALSE
>>   package_version("1.1.0") == package_version("1.1")
> [1] TRUE
> 
> If you adopt the 2-digit versions but decide to keep the possibility for 3-letter ones for minor fixes (bugs; fixing CRAN NOTES, minor bugs etc.), always use the four-digit development versions, e.g. 1.1.0.9000 after release of 1.1, to keep the possibility for 1.2 or 1.1.1 for the following release.

That's one strategy, but it's not the one I use.  I generally increment 
the 3rd digit whenever I make a bug fix or minor change to the source. 
I won't necessarily release every one of those, but they'll be available 
on Github, and if I get a bug report that has been dealt with, I can say 
things like "that was fixed in version 1.2.12.  You can get 1.2.14 from 
Github using this code: ...., or wait a couple of months until a later 
version is released on CRAN".  I dislike Hadley's x.y.z.9000 scheme.

Duncan Murdoch


