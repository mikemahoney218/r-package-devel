From he|mut@@chuetz @end|ng |rom beb@c@@t  Thu Oct  1 12:52:46 2020
From: he|mut@@chuetz @end|ng |rom beb@c@@t (=?UTF-8?Q?Helmut_Sch=c3=bctz?=)
Date: Thu, 1 Oct 2020 12:52:46 +0200
Subject: [R-pkg-devel] CRAN badges in README
Message-ID: <4de8b5bd-7ae3-4339-2369-a88f86a49750@bebac.at>

Dear all,

we are using badges in README files of our packages on GitHub and CRAN. 
Recently wrong results are reported:

https://github.com/Helmut01/replicateBE#readme shows CRAN Error
https://cran.r-project.org/web/packages/replicateBE/readme/README.html 
shows CRAN Not OK
though OK at 
https://cran.r-project.org/web/checks/check_results_replicateBE.html

https://github.com/Detlew/Power2Stage#readme shows CRAN Not OK
though OK at 
https://cran.r-project.org/web/checks/check_results_Power2Stage.html

https://github.com/Detlew/PowerTOST#readme shows CRAN Error
https://cran.r-project.org/web/packages/PowerTOST/readme/README.html 
shows CRAN Not OK
though one NOTE at 
https://cran.r-project.org/web/checks/check_results_PowerTOST.html

All badges are linked with https://cranchecks.info/badges/worst/{package 
name}
I checked about 1 month ago and the first 2 showed CRAN OK and the last 
CRAN Note ? which was correct.

Any ideas?

Helmut

-- 
Ing. Helmut Sch?tz
BEBAC?? Consultancy Services for
Bioequivalence and Bioavailability Studies
Neubaugasse 36/11
1070 Vienna, Austria
E helmut.schuetz at bebac.at
W https://bebac.at/
F https://forum.bebac.at/


From georg|@bo@hn@kov @end|ng |rom m@nche@ter@@c@uk  Thu Oct  1 14:08:35 2020
From: georg|@bo@hn@kov @end|ng |rom m@nche@ter@@c@uk (Georgi Boshnakov)
Date: Thu, 1 Oct 2020 12:08:35 +0000
Subject: [R-pkg-devel] dependency fails checking a package on ASAN/UBSAN (on
 r-hub)
Message-ID: <AM0PR0102MB34434F9966EAA9062B3F13F1AE300@AM0PR0102MB3443.eurprd01.prod.exchangelabs.com>

Hi,

A package submitted on CRAN shows problems only on ASAN/UBSAN.
I  used 'r-hub' (rhub::check()) to check if my update has fixed that on that platform but
This is unsuccessful since a dependency fails to install.

The dependency in question is 'xml2'  so it surely can be installed one way or another but do I need to give additional parameters? The report from r-hub is at
HTML<https://builder.r-hub.io/status/rbibutils_1.3.tar.gz-74c7a41c4a1d4c36940fcc78b85e800b>


Georgi Boshnakov

	[[alternative HTML version deleted]]


From edd @end|ng |rom deb|@n@org  Thu Oct  1 14:14:48 2020
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Thu, 1 Oct 2020 07:14:48 -0500
Subject: [R-pkg-devel] CRAN Windows failure due to old pandoc ?
In-Reply-To: <24431.39310.24225.620883@rob.eddelbuettel.com>
References: <24431.16080.360859.499222@rob.eddelbuettel.com>
 <39defb0b-3e28-9276-502f-b545829d428b@gmail.com>
 <24431.29258.479690.841632@rob.eddelbuettel.com>
 <653d67db-c205-3d62-3164-7bbe889e39ca@gmail.com>
 <24431.39310.24225.620883@rob.eddelbuettel.com>
Message-ID: <24437.51256.710115.770873@rob.eddelbuettel.com>


On 26 September 2020 at 14:42, Dirk Eddelbuettel wrote:
| 
| On 26 September 2020 at 14:20, Duncan Murdoch wrote:
| | On 26/09/2020 12:54 p.m., Dirk Eddelbuettel wrote:
| | Hmmm, that's strange.  From what I can see you only get the --lua-filter 
| | if pandoc 2.0 is available:
| | 
| | https://github.com/rstudio/rmarkdown/blob/66d27e09befd5f0579f0f4e27c4b9325284b9b15/R/pandoc.R#L719
| | 
| | I think this is the current rmarkdown version.
| 
| I was using a different document driver which may not make that check.
| 
| In the meantime, I think I will just follow the usual advice 'stop doing that
| then' after complaining that it hurts and may just switch to a pdf vignette.

And with a little more, I convinced the maintainer of the markdown style in
question to adopt Duncan's suggested pandoc version fix offered by rmarkdown.

I never heard back from CRAN, neither via a direct message, nor here.

Dirk

-- 
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From c@@rd|@g@bor @end|ng |rom gm@||@com  Thu Oct  1 14:55:02 2020
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Thu, 1 Oct 2020 13:55:02 +0100
Subject: [R-pkg-devel] 
 dependency fails checking a package on ASAN/UBSAN (on r-hub)
In-Reply-To: <AM0PR0102MB34434F9966EAA9062B3F13F1AE300@AM0PR0102MB3443.eurprd01.prod.exchangelabs.com>
References: <AM0PR0102MB34434F9966EAA9062B3F13F1AE300@AM0PR0102MB3443.eurprd01.prod.exchangelabs.com>
Message-ID: <CABtg=KnfVw1jM32hj-0rixn=DgEAxKqRgZzKEWFzHcaJQCyGtA@mail.gmail.com>

It seems that Debian testing has a new version of libxml2, or maybe
the ICU is newer, and the xml package does not compile with this.

I am afraid that xml2 needs some fixes to solve this. It might be
enough to require C++11 support. If you don't want to wait for the
xml2 maintainer, then you can fork the repo, add C++11 support to your
fork, and then (temporarily) add a `Remotes` field to `DESCRIPTION`
that points to your fork.

Gabor

On Thu, Oct 1, 2020 at 1:08 PM Georgi Boshnakov
<georgi.boshnakov at manchester.ac.uk> wrote:
>
> Hi,
>
> A package submitted on CRAN shows problems only on ASAN/UBSAN.
> I  used 'r-hub' (rhub::check()) to check if my update has fixed that on that platform but
> This is unsuccessful since a dependency fails to install.
>
> The dependency in question is 'xml2'  so it surely can be installed one way or another but do I need to give additional parameters? The report from r-hub is at
> HTML<https://builder.r-hub.io/status/rbibutils_1.3.tar.gz-74c7a41c4a1d4c36940fcc78b85e800b>
>
>
> Georgi Boshnakov
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From zk@mv@r @end|ng |rom gm@||@com  Thu Oct  1 16:43:00 2020
From: zk@mv@r @end|ng |rom gm@||@com (Zhian N. Kamvar)
Date: Thu, 1 Oct 2020 07:43:00 -0700
Subject: [R-pkg-devel] CRAN badges in README
In-Reply-To: <4de8b5bd-7ae3-4339-2369-a88f86a49750@bebac.at>
References: <4de8b5bd-7ae3-4339-2369-a88f86a49750@bebac.at>
Message-ID: <9ee1575a-f3c8-0dbf-c9b9-5b3c2e556b57@gmail.com>

You might be having browser cache issues because I just looked and 
things are fine on this end. You can double check in another browser or 
clear the cache (usually via Preferences > Settings > Security).

FWIW, cran checks is an rhub/rOpenSci project: 
https://blog.r-hub.io/2019/06/10/cran-checks-api/, and not controlled by 
the CRAN team.

Best,

Zhian

On 10/1/20 3:52 AM, Helmut Sch?tz wrote:
> Dear all,
>
> we are using badges in README files of our packages on GitHub and 
> CRAN. Recently wrong results are reported:
>
> https://github.com/Helmut01/replicateBE#readme shows CRAN Error
> https://cran.r-project.org/web/packages/replicateBE/readme/README.html 
> shows CRAN Not OK
> though OK at 
> https://cran.r-project.org/web/checks/check_results_replicateBE.html
>
> https://github.com/Detlew/Power2Stage#readme shows CRAN Not OK
> though OK at 
> https://cran.r-project.org/web/checks/check_results_Power2Stage.html
>
> https://github.com/Detlew/PowerTOST#readme shows CRAN Error
> https://cran.r-project.org/web/packages/PowerTOST/readme/README.html 
> shows CRAN Not OK
> though one NOTE at 
> https://cran.r-project.org/web/checks/check_results_PowerTOST.html
>
> All badges are linked with 
> https://cranchecks.info/badges/worst/{package name}
> I checked about 1 month ago and the first 2 showed CRAN OK and the 
> last CRAN Note ? which was correct.
>
> Any ideas?
>
> Helmut
>


From he|mut@@chuetz @end|ng |rom beb@c@@t  Thu Oct  1 16:55:49 2020
From: he|mut@@chuetz @end|ng |rom beb@c@@t (=?UTF-8?Q?Helmut_Sch=c3=bctz?=)
Date: Thu, 1 Oct 2020 16:55:49 +0200
Subject: [R-pkg-devel] CRAN badges in README
In-Reply-To: <9ee1575a-f3c8-0dbf-c9b9-5b3c2e556b57@gmail.com>
References: <4de8b5bd-7ae3-4339-2369-a88f86a49750@bebac.at>
 <9ee1575a-f3c8-0dbf-c9b9-5b3c2e556b57@gmail.com>
Message-ID: <5d190a9c-f72b-23b7-f57f-49830e3a261d@bebac.at>

Dear Zhian,

Zhian N. Kamvar wrote on 2020-10-01 16:43:
> You might be having browser cache issues because I just looked and 
> things are fine on this end. You can double check in another browser 
> or clear the cache (usually via Preferences > Settings > Security).
>
> FWIW, cran checks is an rhub/rOpenSci project: 
> https://blog.r-hub.io/2019/06/10/cran-checks-api/, and not controlled 
> by the CRAN team.

Sorry, seems that rhub suffered from hiccups. All fine now without 
clearing the cache. Case closed.

All the best,
Helmut

-- 
Ing. Helmut Sch?tz
BEBAC?? Consultancy Services for
Bioequivalence and Bioavailability Studies
Neubaugasse 36/11
1070 Vienna, Austria
E helmut.schuetz at bebac.at
W https://bebac.at/
F https://forum.bebac.at/


From n|co|@@@bennett @end|ng |rom @t@t@m@th@ethz@ch  Thu Oct  1 20:46:50 2020
From: n|co|@@@bennett @end|ng |rom @t@t@m@th@ethz@ch (Bennett  Nicolas)
Date: Thu, 1 Oct 2020 18:46:50 +0000
Subject: [R-pkg-devel] Non-mainstream repository dependence for CRAN
 vignette building
Message-ID: <8E035DA3-66E3-4F03-B584-DAB0255F9BFD@stat.math.ethz.ch>

Dear list

I?m in the process of submitting a package to CRAN that uses a non-mainstream repository for several data packages that are too large for CRAN (~50 MB in total) and therefore live in a drat repository hosted by gh. Data from these packages is used during vignette building and unsurprisingly, CRAN checks throw a ?re-building of vignette? warning.

1. Is such a warning acceptable or is vignette re-build required to run through?
2. Is it allowed to create a set-up that essentially runs `install.packages()` during CRAN checks to make the non-mainstream repo packages available?
3. Are there any go-to solutions for such a scenario? I tried knitr caching, but was unsuccessful, to get that to work. What I?m currently doing is masking the package function that loads data and supplying the required data with the package. But this unnecessarily inflates package size (and adds complexity), as the data is already conveniently and separately available as an R package.

Best,
Nicolas

From M@x@Turgeon @end|ng |rom um@n|tob@@c@  Thu Oct  1 21:13:42 2020
From: M@x@Turgeon @end|ng |rom um@n|tob@@c@ (Max Turgeon)
Date: Thu, 1 Oct 2020 19:13:42 +0000
Subject: [R-pkg-devel] Non-mainstream repository dependence for CRAN
 vignette building
In-Reply-To: <8E035DA3-66E3-4F03-B584-DAB0255F9BFD@stat.math.ethz.ch>
References: <8E035DA3-66E3-4F03-B584-DAB0255F9BFD@stat.math.ethz.ch>
Message-ID: <YTXPR0101MB10696277C5552D04469634A09A300@YTXPR0101MB1069.CANPRD01.PROD.OUTLOOK.COM>

Hi Nicholas,

I see two potential solutions, maybe other people will suggest different ones:

  1. You can make the evaluation of the whole vignette dependent on the data packages being available. Here's an example from one of my packages: https://github.com/sahirbhatnagar/casebase/blob/3403e0451ba5f0bf122924729ba85a904cf16082/vignettes/smoothHazard.Rmd#L22-L27

  2. You create the vignette on your machine and add it to the package as a "static vignette". Here's a blog post on how to do it (it's also been discussed on this list before, have a look at the archive): http://www.markvanderloo.eu/yaRb/2019/01/11/add-a-static-pdf-vignette-to-an-r-package/

Each approach has its pros and cons. In the first solution, a potential issue is that the complete vignettes may rarely be available on a user's machine, unless they install the data package first and build from source. In the second solution, there's more maintenance for you.

Best,


Max Turgeon
Assistant Professor
Department of Statistics
Department of Computer Science
University of Manitoba
maxturgeon.ca<http://maxturgeon.ca>


________________________________
From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Bennett Nicolas <nicolas.bennett at stat.math.ethz.ch>
Sent: Thursday, October 1, 2020 1:46 PM
To: r-package-devel at r-project.org <r-package-devel at r-project.org>
Subject: [R-pkg-devel] Non-mainstream repository dependence for CRAN vignette building

********************************************************
Caution: This message was sent from outside the University of Manitoba.
********************************************************

Dear list

I?m in the process of submitting a package to CRAN that uses a non-mainstream repository for several data packages that are too large for CRAN (~50 MB in total) and therefore live in a drat repository hosted by gh. Data from these packages is used during vignette building and unsurprisingly, CRAN checks throw a ?re-building of vignette? warning.

1. Is such a warning acceptable or is vignette re-build required to run through?
2. Is it allowed to create a set-up that essentially runs `install.packages()` during CRAN checks to make the non-mainstream repo packages available?
3. Are there any go-to solutions for such a scenario? I tried knitr caching, but was unsuccessful, to get that to work. What I?m currently doing is masking the package function that loads data and supplying the required data with the package. But this unnecessarily inflates package size (and adds complexity), as the data is already conveniently and separately available as an R package.

Best,
Nicolas
______________________________________________
R-package-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel

	[[alternative HTML version deleted]]


From bbo|ker @end|ng |rom gm@||@com  Fri Oct  2 20:50:45 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Fri, 2 Oct 2020 14:50:45 -0400
Subject: [R-pkg-devel] best practices for handling a mixed-licensed package
Message-ID: <f20c4a70-0a64-9eeb-0ddc-95808d56c6c6@gmail.com>


   A collaborator is arguing that it's a good idea to license one small 
component of a package under the MIT license, while the rest of it 
remains GPL >=2.

   Suppose this is feasible.  How do I specify the license?  As far as I 
can tell from 
https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Licensing 
the DESCRIPTION file should have

License: file LICENSE
License_is_FOSS: yes
License_restricts_use: no

   But I can't figure out what should go in the LICENSE file. The one 
file that contains the MIT-licensed components contains the relevant 
license text in its body.

License: GPL (>=2) | MIT + file LICENSE

doesn't seem right, because these are not *alternative* licenses.  Would 
"GPL (>=2) + file LICENSE" be OK? We could explain the situation in 
LICENSE.note (WRE says "To include comments about the licensing rather 
than the body of a license, use a file named something like 
LICENSE.note. ")

   Could file LICENSE contain

The code in this package is licensed under GPL >=2 (see 
https://www.r-project.org/Licenses/GPL-2, 
https://www.r-project.org/Licenses/GPL-3, except for <FILE xxx>, which 
is under the MIT license (see <FILE xxx for details>).

?

  Happy for advice or pointers to other packages that have successfully 
done something similar.

Looks like igraphdata may have heterogeneous licensing? 
https://cran.r-project.org/web/packages/igraphdata/index.html


Related: 
https://stackoverflow.com/questions/4314708/if-an-r-packages-licence-x-is-do-all-the-content-in-that-package-have-to-be-li


From edd @end|ng |rom deb|@n@org  Fri Oct  2 21:21:57 2020
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Fri, 2 Oct 2020 14:21:57 -0500
Subject: [R-pkg-devel] Non-mainstream repository dependence for CRAN
 vignette building
In-Reply-To: <YTXPR0101MB10696277C5552D04469634A09A300@YTXPR0101MB1069.CANPRD01.PROD.OUTLOOK.COM>
References: <8E035DA3-66E3-4F03-B584-DAB0255F9BFD@stat.math.ethz.ch>
 <YTXPR0101MB10696277C5552D04469634A09A300@YTXPR0101MB1069.CANPRD01.PROD.OUTLOOK.COM>
Message-ID: <24439.32213.468460.302693@rob.eddelbuettel.com>


On 1 October 2020 at 19:13, Max Turgeon wrote:
| Hi Nicholas,
| 
| I see two potential solutions, maybe other people will suggest different ones:
| 
|   1. You can make the evaluation of the whole vignette dependent on the data packages being available. Here's an example from one of my packages: https://github.com/sahirbhatnagar/casebase/blob/3403e0451ba5f0bf122924729ba85a904cf16082/vignettes/smoothHazard.Rmd#L22-L27

For reference that is also outlined in the Anderson + Eddelbuettel, 2017, R
Journal article on 'hosting data packages via drat' which shows how to use
(optional) data packages via Additional_repositories.

https://journal.r-project.org/archive/2017/RJ-2017-026/index.html

Dirk

|   2. You create the vignette on your machine and add it to the package as a "static vignette". Here's a blog post on how to do it (it's also been discussed on this list before, have a look at the archive): http://www.markvanderloo.eu/yaRb/2019/01/11/add-a-static-pdf-vignette-to-an-r-package/
| 
| Each approach has its pros and cons. In the first solution, a potential issue is that the complete vignettes may rarely be available on a user's machine, unless they install the data package first and build from source. In the second solution, there's more maintenance for you.
| 
| Best,
| 
| 
| Max Turgeon
| Assistant Professor
| Department of Statistics
| Department of Computer Science
| University of Manitoba
| maxturgeon.ca<http://maxturgeon.ca>
| 
| 
| ________________________________
| From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Bennett Nicolas <nicolas.bennett at stat.math.ethz.ch>
| Sent: Thursday, October 1, 2020 1:46 PM
| To: r-package-devel at r-project.org <r-package-devel at r-project.org>
| Subject: [R-pkg-devel] Non-mainstream repository dependence for CRAN vignette building
| 
| ********************************************************
| Caution: This message was sent from outside the University of Manitoba.
| ********************************************************
| 
| Dear list
| 
| I?m in the process of submitting a package to CRAN that uses a non-mainstream repository for several data packages that are too large for CRAN (~50 MB in total) and therefore live in a drat repository hosted by gh. Data from these packages is used during vignette building and unsurprisingly, CRAN checks throw a ?re-building of vignette? warning.
| 
| 1. Is such a warning acceptable or is vignette re-build required to run through?
| 2. Is it allowed to create a set-up that essentially runs `install.packages()` during CRAN checks to make the non-mainstream repo packages available?
| 3. Are there any go-to solutions for such a scenario? I tried knitr caching, but was unsuccessful, to get that to work. What I?m currently doing is masking the package function that loads data and supplying the required data with the package. But this unnecessarily inflates package size (and adds complexity), as the data is already conveniently and separately available as an R package.
| 
| Best,
| Nicolas
| ______________________________________________
| R-package-devel at r-project.org mailing list
| https://stat.ethz.ch/mailman/listinfo/r-package-devel
| 
| 	[[alternative HTML version deleted]]
| 
| ______________________________________________
| R-package-devel at r-project.org mailing list
| https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From h@w|ckh@m @end|ng |rom gm@||@com  Fri Oct  2 22:16:36 2020
From: h@w|ckh@m @end|ng |rom gm@||@com (Hadley Wickham)
Date: Fri, 2 Oct 2020 15:16:36 -0500
Subject: [R-pkg-devel] 
 best practices for handling a mixed-licensed package
In-Reply-To: <f20c4a70-0a64-9eeb-0ddc-95808d56c6c6@gmail.com>
References: <f20c4a70-0a64-9eeb-0ddc-95808d56c6c6@gmail.com>
Message-ID: <CABdHhvGTDeUW8tUEhC0a0JKqLhS4=dHLdkEBRrOJgp-o1iOTPA@mail.gmail.com>

On Fri, Oct 2, 2020 at 1:51 PM Ben Bolker <bbolker at gmail.com> wrote:

>
>    A collaborator is arguing that it's a good idea to license one small
> component of a package under the MIT license, while the rest of it
> remains GPL >=2.
>
>    Suppose this is feasible.  How do I specify the license?  As far as I
> can tell from
> https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Licensing
> the DESCRIPTION file should have
>
> License: file LICENSE
> License_is_FOSS: yes
> License_restricts_use: no
>
>    But I can't figure out what should go in the LICENSE file. The one
> file that contains the MIT-licensed components contains the relevant
> license text in its body.
>
> License: GPL (>=2) | MIT + file LICENSE
>
> doesn't seem right, because these are not *alternative* licenses.  Would
> "GPL (>=2) + file LICENSE" be OK? We could explain the situation in
> LICENSE.note (WRE says "To include comments about the licensing rather
> than the body of a license, use a file named something like
> LICENSE.note. ")
>
>    Could file LICENSE contain
>
> The code in this package is licensed under GPL >=2 (see
> https://www.r-project.org/Licenses/GPL-2,
> https://www.r-project.org/Licenses/GPL-3, except for <FILE xxx>, which
> is under the MIT license (see <FILE xxx for details>).
> ?
>

I have some recommendations at
https://r-pkgs.org/license.html#code-you-bundle, but in brief use License:
GPL (>= 2) and then explain in LICENSE.note which components have more
liberal licenses.

Hadley

-- 
http://hadley.nz

	[[alternative HTML version deleted]]


From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Fri Oct  2 23:44:48 2020
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Fri, 02 Oct 2020 14:44:48 -0700
Subject: [R-pkg-devel] 
 best practices for handling a mixed-licensed package
In-Reply-To: <CABdHhvGTDeUW8tUEhC0a0JKqLhS4=dHLdkEBRrOJgp-o1iOTPA@mail.gmail.com>
References: <f20c4a70-0a64-9eeb-0ddc-95808d56c6c6@gmail.com>
 <CABdHhvGTDeUW8tUEhC0a0JKqLhS4=dHLdkEBRrOJgp-o1iOTPA@mail.gmail.com>
Message-ID: <ACB42248-F5E8-4338-AC6E-E258BE9A8698@dcn.davis.ca.us>

Hadley offers what you _can_ do, but if you want clarity in the minds of _users_ I would beg you to split the code into two packages. People will likely either be afraid of the GPL bogey man and refrain from utilizing your MIT code as permitted or fail to honor the GPL terms correctly if both are in the same package.

On October 2, 2020 1:16:36 PM PDT, Hadley Wickham <h.wickham at gmail.com> wrote:
>On Fri, Oct 2, 2020 at 1:51 PM Ben Bolker <bbolker at gmail.com> wrote:
>
>>
>>    A collaborator is arguing that it's a good idea to license one
>small
>> component of a package under the MIT license, while the rest of it
>> remains GPL >=2.
>>
>>    Suppose this is feasible.  How do I specify the license?  As far
>as I
>> can tell from
>>
>https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Licensing
>> the DESCRIPTION file should have
>>
>> License: file LICENSE
>> License_is_FOSS: yes
>> License_restricts_use: no
>>
>>    But I can't figure out what should go in the LICENSE file. The one
>> file that contains the MIT-licensed components contains the relevant
>> license text in its body.
>>
>> License: GPL (>=2) | MIT + file LICENSE
>>
>> doesn't seem right, because these are not *alternative* licenses. 
>Would
>> "GPL (>=2) + file LICENSE" be OK? We could explain the situation in
>> LICENSE.note (WRE says "To include comments about the licensing
>rather
>> than the body of a license, use a file named something like
>> LICENSE.note. ")
>>
>>    Could file LICENSE contain
>>
>> The code in this package is licensed under GPL >=2 (see
>> https://www.r-project.org/Licenses/GPL-2,
>> https://www.r-project.org/Licenses/GPL-3, except for <FILE xxx>,
>which
>> is under the MIT license (see <FILE xxx for details>).
>> ?
>>
>
>I have some recommendations at
>https://r-pkgs.org/license.html#code-you-bundle, but in brief use
>License:
>GPL (>= 2) and then explain in LICENSE.note which components have more
>liberal licenses.
>
>Hadley

-- 
Sent from my phone. Please excuse my brevity.


From edd @end|ng |rom deb|@n@org  Sat Oct  3 00:26:33 2020
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Fri, 2 Oct 2020 17:26:33 -0500
Subject: [R-pkg-devel] 
 best practices for handling a mixed-licensed package
In-Reply-To: <ACB42248-F5E8-4338-AC6E-E258BE9A8698@dcn.davis.ca.us>
References: <f20c4a70-0a64-9eeb-0ddc-95808d56c6c6@gmail.com>
 <CABdHhvGTDeUW8tUEhC0a0JKqLhS4=dHLdkEBRrOJgp-o1iOTPA@mail.gmail.com>
 <ACB42248-F5E8-4338-AC6E-E258BE9A8698@dcn.davis.ca.us>
Message-ID: <24439.43289.203562.58924@rob.eddelbuettel.com>


On 2 October 2020 at 14:44, Jeff Newmiller wrote:
| if you want clarity in the minds of _users_ I would beg you to split the code into two packages. People will likely either be afraid of the GPL bogey man and refrain from utilizing your MIT code as permitted or fail to honor the GPL terms correctly if both are in the same package.

Have you read R's own doc/COPYRIGHTS ?

   https://github.com/wch/r-source/blob/trunk/doc/COPYRIGHTS

In short the opposite of what you just suggest. 

Also, labels such as "more liberal" or "permissive" or "bogey man" are not
exactly unambiguous.  Different people can and do have different views here.
I would suggest using simpler terms such as "different". What matters is that
the licenses permit open source use while ensuring they are compatible which
is generally the case these days.

Dirk

-- 
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From h@w|ckh@m @end|ng |rom gm@||@com  Sat Oct  3 16:54:19 2020
From: h@w|ckh@m @end|ng |rom gm@||@com (Hadley Wickham)
Date: Sat, 3 Oct 2020 09:54:19 -0500
Subject: [R-pkg-devel] 
 best practices for handling a mixed-licensed package
In-Reply-To: <24439.43289.203562.58924@rob.eddelbuettel.com>
References: <f20c4a70-0a64-9eeb-0ddc-95808d56c6c6@gmail.com>
 <CABdHhvGTDeUW8tUEhC0a0JKqLhS4=dHLdkEBRrOJgp-o1iOTPA@mail.gmail.com>
 <ACB42248-F5E8-4338-AC6E-E258BE9A8698@dcn.davis.ca.us>
 <24439.43289.203562.58924@rob.eddelbuettel.com>
Message-ID: <CABdHhvHht9ooT+Stt8Mms5GfKJoix-rYV9whwE8fDJawe_NfHw@mail.gmail.com>

On Fri, Oct 2, 2020 at 5:26 PM Dirk Eddelbuettel <edd at debian.org> wrote:

>
> On 2 October 2020 at 14:44, Jeff Newmiller wrote:
> | if you want clarity in the minds of _users_ I would beg you to split the
> code into two packages. People will likely either be afraid of the GPL
> bogey man and refrain from utilizing your MIT code as permitted or fail to
> honor the GPL terms correctly if both are in the same package.
>
> Have you read R's own doc/COPYRIGHTS ?
>
>    https://github.com/wch/r-source/blob/trunk/doc/COPYRIGHTS
>
> In short the opposite of what you just suggest.
>
> Also, labels such as "more liberal" or "permissive" or "bogey man" are not
> exactly unambiguous.  Different people can and do have different views
> here.
> I would suggest using simpler terms such as "different". What matters is
> that
> the licenses permit open source use while ensuring they are compatible
> which
> is generally the case these days.
>

I think this is a bit of an oversimplification, especially given that
"compatibility" is not symmetric. For example, you can include MIT license
code in a GPL licensed package; you can not include GPL licensed code
inside an MIT licensed package. There are some rough guidelines at
https://r-pkgs.org/license.html#license-compatibility.

Hadley

-- 
http://hadley.nz

	[[alternative HTML version deleted]]


From edd @end|ng |rom deb|@n@org  Sat Oct  3 18:02:02 2020
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Sat, 3 Oct 2020 11:02:02 -0500
Subject: [R-pkg-devel] 
 best practices for handling a mixed-licensed package
In-Reply-To: <CABdHhvHht9ooT+Stt8Mms5GfKJoix-rYV9whwE8fDJawe_NfHw@mail.gmail.com>
References: <f20c4a70-0a64-9eeb-0ddc-95808d56c6c6@gmail.com>
 <CABdHhvGTDeUW8tUEhC0a0JKqLhS4=dHLdkEBRrOJgp-o1iOTPA@mail.gmail.com>
 <ACB42248-F5E8-4338-AC6E-E258BE9A8698@dcn.davis.ca.us>
 <24439.43289.203562.58924@rob.eddelbuettel.com>
 <CABdHhvHht9ooT+Stt8Mms5GfKJoix-rYV9whwE8fDJawe_NfHw@mail.gmail.com>
Message-ID: <24440.41082.779800.340676@rob.eddelbuettel.com>


On 3 October 2020 at 09:54, Hadley Wickham wrote:
| I think this is a bit of an oversimplification, especially given that
| "compatibility" is not symmetric. For example, you can include MIT license
| code in a GPL licensed package; you can not include GPL licensed code
| inside an MIT licensed package. There are some rough guidelines at
| https://r-pkgs.org/license.html#license-compatibility.

One approach for issues such as legal matters is to consult subject-matter
experts which is why I pointed (in a prior private message spawned by this
same thread) to sites such as

  https://tldrlegal.com/ 
  https://choosealicense.com/

Dirk

-- 
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Sat Oct  3 18:45:54 2020
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Sat, 03 Oct 2020 09:45:54 -0700
Subject: [R-pkg-devel] 
 best practices for handling a mixed-licensed package
In-Reply-To: <24440.41082.779800.340676@rob.eddelbuettel.com>
References: <f20c4a70-0a64-9eeb-0ddc-95808d56c6c6@gmail.com>
 <CABdHhvGTDeUW8tUEhC0a0JKqLhS4=dHLdkEBRrOJgp-o1iOTPA@mail.gmail.com>
 <ACB42248-F5E8-4338-AC6E-E258BE9A8698@dcn.davis.ca.us>
 <24439.43289.203562.58924@rob.eddelbuettel.com>
 <CABdHhvHht9ooT+Stt8Mms5GfKJoix-rYV9whwE8fDJawe_NfHw@mail.gmail.com>
 <24440.41082.779800.340676@rob.eddelbuettel.com>
Message-ID: <A29CA957-9BC0-434E-AD67-9CE557BD3C94@dcn.davis.ca.us>

You are addressing interpretation of "a license", while my concern is not with the licenses themselves but with the identification of which code goes with which license. Assuming that you will need to retain lawyers to decide how to handle a license in a particular use case may be reasonable, but assuming you will also use them to parse the files in the package  seems rather less reasonable IMO when you have such a clear alternative (packaging).

On October 3, 2020 9:02:02 AM PDT, Dirk Eddelbuettel <edd at debian.org> wrote:
>
>On 3 October 2020 at 09:54, Hadley Wickham wrote:
>| I think this is a bit of an oversimplification, especially given that
>| "compatibility" is not symmetric. For example, you can include MIT
>license
>| code in a GPL licensed package; you can not include GPL licensed code
>| inside an MIT licensed package. There are some rough guidelines at
>| https://r-pkgs.org/license.html#license-compatibility.
>
>One approach for issues such as legal matters is to consult
>subject-matter
>experts which is why I pointed (in a prior private message spawned by
>this
>same thread) to sites such as
>
>  https://tldrlegal.com/ 
>  https://choosealicense.com/
>
>Dirk

-- 
Sent from my phone. Please excuse my brevity.


From h@w|ckh@m @end|ng |rom gm@||@com  Sun Oct  4 01:44:15 2020
From: h@w|ckh@m @end|ng |rom gm@||@com (Hadley Wickham)
Date: Sat, 3 Oct 2020 18:44:15 -0500
Subject: [R-pkg-devel] 
 best practices for handling a mixed-licensed package
In-Reply-To: <A29CA957-9BC0-434E-AD67-9CE557BD3C94@dcn.davis.ca.us>
References: <f20c4a70-0a64-9eeb-0ddc-95808d56c6c6@gmail.com>
 <CABdHhvGTDeUW8tUEhC0a0JKqLhS4=dHLdkEBRrOJgp-o1iOTPA@mail.gmail.com>
 <ACB42248-F5E8-4338-AC6E-E258BE9A8698@dcn.davis.ca.us>
 <24439.43289.203562.58924@rob.eddelbuettel.com>
 <CABdHhvHht9ooT+Stt8Mms5GfKJoix-rYV9whwE8fDJawe_NfHw@mail.gmail.com>
 <24440.41082.779800.340676@rob.eddelbuettel.com>
 <A29CA957-9BC0-434E-AD67-9CE557BD3C94@dcn.davis.ca.us>
Message-ID: <CABdHhvHu286pwwZPTGbeSwFT1-Xdq+7dJ+EKZDnnqWSDnsVGWg@mail.gmail.com>

This is why I recommend that if you copy an entire directory of code you
include the LICENSE file for that directory; if you copy a single file,
make the license clear at the comment in a top of the file. This is
standard practice in most open source communities.

If you?re writing open source code, I don?t think it?s necessary to retain
a lawyer in order to handle these commonplace issues. (OTOH if you?re
building a business on top of open source code, hiring a lawyer is
absolutely essential).

Hadley

On Saturday, October 3, 2020, Jeff Newmiller <jdnewmil at dcn.davis.ca.us>
wrote:

> You are addressing interpretation of "a license", while my concern is not
> with the licenses themselves but with the identification of which code goes
> with which license. Assuming that you will need to retain lawyers to decide
> how to handle a license in a particular use case may be reasonable, but
> assuming you will also use them to parse the files in the package  seems
> rather less reasonable IMO when you have such a clear alternative
> (packaging).
>
> On October 3, 2020 9:02:02 AM PDT, Dirk Eddelbuettel <edd at debian.org>
> wrote:
> >
> >On 3 October 2020 at 09:54, Hadley Wickham wrote:
> >| I think this is a bit of an oversimplification, especially given that
> >| "compatibility" is not symmetric. For example, you can include MIT
> >license
> >| code in a GPL licensed package; you can not include GPL licensed code
> >| inside an MIT licensed package. There are some rough guidelines at
> >| https://r-pkgs.org/license.html#license-compatibility.
> >
> >One approach for issues such as legal matters is to consult
> >subject-matter
> >experts which is why I pointed (in a prior private message spawned by
> >this
> >same thread) to sites such as
> >
> >  https://tldrlegal.com/
> >  https://choosealicense.com/
> >
> >Dirk
>
> --
> Sent from my phone. Please excuse my brevity.
>


-- 
http://hadley.nz

	[[alternative HTML version deleted]]


From r@@y@|@14 @end|ng |rom |mper|@|@@c@uk  Sun Oct  4 15:48:44 2020
From: r@@y@|@14 @end|ng |rom |mper|@|@@c@uk (Ayala Hernandez, Rafael)
Date: Sun, 4 Oct 2020 13:48:44 +0000
Subject: [R-pkg-devel] Windows builds not using latest BiocStyle version
Message-ID: <DB7PR06MB5881A0200AE218D2019D5A65CC0F0@DB7PR06MB5881.eurprd06.prod.outlook.com>

Dear all,

I am writing because I recently found that my NutrienTrackeR package was having build errors, failing at building the vignette.

I could trace the error to a bug in BiocStyle caused by a recent change in knitr, which was also causing a large number of Bioconductor packages to fail building.

The Bioconductor team pushed a new version of BiocStyle which fixed the error in all platforms for all packages that used BiocStyle for vignette output.

The change has been reflected on the build report of NutrienTrackeR (https://cran.r-project.org/web/checks/check_results_NutrienTrackeR.html) for Linux and MacOS platforms, but not for any of the Windows builds. Having a look at the build report for R-devel in Windows, it seems the latest build was done with R Under development (2020-09-28 r79268).

I am wondering if it is possible the Windows builds for NutrienTrackeR are failing because they are not using still the most recent version of BiocStyle, or if on the contrary I should rather just remove BiocStyle output to fix the error?

Thanks a lot in advance!

Best wishes,

Rafa

	[[alternative HTML version deleted]]


From c@r@@e@| @end|ng |rom |b|me@upv@e@  Mon Oct  5 18:43:01 2020
From: c@r@@e@| @end|ng |rom |b|me@upv@e@ (=?iso-8859-1?Q?Carlos_S=E1ez?=)
Date: Mon, 5 Oct 2020 18:43:01 +0200
Subject: [R-pkg-devel] EHRtemporalVariability package check warning,
 cannot fix
Message-ID: <1a4301d69b36$973c0280$c5b40780$@ibime.upv.es>

Hi,

 

Some weeks ago we received the CRAN notification to update our
EHRtemporalVariability package in light of some Warnings found on the
vignette compilation.

 

We managed to solve most by including the ?webshot? package in the Suggests
list in DESCRIPTION, since the Vignette is rendered in .html including
dynamic Plotly plots.

 

However, we cannot manage to solve the last one, and thus we cannot update
the package in CRAN. Local checks show no Warnings (only a Note due to
having 5.1MB file). Even updated R to the latest ver 4.0.2 and R tools to
the latest 4, and all checks ok. But submitting on winbuilder the Warning is
still there.

 

The logs are here:

 <https://win-builder.r-project.org/9IvFwBBcgDlI>
https://win-builder.r-project.org/9IvFwBBcgDlI

 

This is the error:

 

        Error(s) in re-building vignettes:

--- re-building 'EHRtemporalVariability.Rmd' using rmarkdown

Quitting from lines 35-36 (EHRtemporalVariability.Rmd) 

Error: processing vignette 'EHRtemporalVariability.Rmd' failed with
diagnostics:

argument is of length zero

--- failed re-building 'EHRtemporalVariability.Rmd'

 

The package is exactly that found in
https://github.com/hms-dbmi/EHRtemporalVariability

 

Those lines 35-36 are the first chunk in the .Rmd vignette file:

```{r setup, include=FALSE}

knitr::opts_chunk$set(echo = TRUE, warning=FALSE)

```

Surprisingly, if removing this chunk and resubmitting, the same ?argument is
of length zero? error is present but in the following (now first) chunk of
code.

 

Any help would be really appreciated. We would kindly provide any additional
info that could help.

Best regards!

Carlos


	[[alternative HTML version deleted]]


From bbo|ker @end|ng |rom gm@||@com  Mon Oct  5 19:09:06 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Mon, 5 Oct 2020 13:09:06 -0400
Subject: [R-pkg-devel] is R CMD build --compact-vignettes working as
 expected?
Message-ID: <e34db7d9-28f0-36f3-0c8e-61e9586630d3@gmail.com>

   Am I confused, or doing something wrong, or ... ?

   I have qpdf installed, and am running R CMD build with 
--compact-vignettes, but the PDF in the tarball doesn't seem to be 
compressed despite the fact that the output messages say "compacting 
vignettes ..."


   $ R CMD build --compact-vignettes lme4
* checking for file ?lme4/DESCRIPTION? ... OK
* preparing ?lme4?:
* checking DESCRIPTION meta-information ... OK
* cleaning src
* installing the package to process help pages
* saving partial Rd database
* creating vignettes ... OK
Warning: ?inst/doc? files
     ?lmerperf.html?, ?lmer.pdf?, ?PLSvGLS.pdf?, ?Theory.pdf?
   ignored as vignettes have been rebuilt.
   Run R CMD build with --no-build-vignettes to prevent rebuilding.
* compacting vignettes and other PDF files
* cleaning src
* checking for LF line-endings in source and make files and shell scripts
* checking for empty or unneeded directories
* building ?lme4_1.1-24.tar.gz?

   The copy of lmer.pdf in the resulting tarball is 900K or so:

$ tar ztvf lme4_1.1-24.tar.gz lme4/inst/doc/lmer.pdf
-rw-r--r-- bolker/bolker 907022 2020-10-05 12:59 lme4/inst/doc/lmer.pdf

   The previously built (and manually compacted) version of lmer.pdf in 
the tarball is 500K:

$ ls -l lme4/inst/doc/lmer.pdf
-rw-r--r-- 1 bolker bolker 495199 Oct  3 22:15 lme4/inst/doc/lmer.pdf

    Is 'R CMD build' confused by the presence of a pre-built PDF in the 
inst/doc directory? Or am I somehow mistaken about how this is supposed 
to work?

    I would just use --no-build-vignettes and submit the tarball with 
the previously built/compressed PDF, but I'm trying to avoid a
"Package has a VignetteBuilder field but no prebuilt vignette index" 
NOTE, which I assume is missing because I built without building 
vignettes ... ?

   As always, enlightenment is welcome.

   cheers
     Ben Bolker


From r@@y@|@14 @end|ng |rom |mper|@|@@c@uk  Mon Oct  5 19:37:50 2020
From: r@@y@|@14 @end|ng |rom |mper|@|@@c@uk (Ayala Hernandez, Rafael)
Date: Mon, 5 Oct 2020 17:37:50 +0000
Subject: [R-pkg-devel] EHRtemporalVariability package check warning,
 cannot fix
In-Reply-To: <1a4301d69b36$973c0280$c5b40780$@ibime.upv.es>
References: <1a4301d69b36$973c0280$c5b40780$@ibime.upv.es>
Message-ID: <DB7PR06MB5881462F13DC9DB718974FA1CC0C0@DB7PR06MB5881.eurprd06.prod.outlook.com>

Hi Carlos,

Your package seems to use BiocStyle to output the vignette. I have encountered a similar error with my NutrienTrackeR package. The issue was triggered by the latest update to the knitr package, which caused knitting of vignettes in BiocStyle output to fail.

The issue was resolved by the Bioconductor team by pushing a new version of BiocStyle. This fixed all packages dependent on BiocStyle on Bioconductor, and seems to also have fixed the build reports for NutrienTrackeR for all linux and MacOS builds.

However, it has not fixed the error for the windows builds (https://cran.r-project.org/web/checks/check_results_NutrienTrackeR.html) . The error seems very similar to what you are getting, also being triggered by the first line of code in the vignette. If the issue is the same as what I was having, it will be triggered no matter how many chunks you remove, since it is the underlying combination of updated knitr and possibly not latest BiocStyle which triggers it.

Perhaps winbuilder and the machine building CRAN packages under windows are still not using the latest BiocStyle version for some reason?

Best wishes,

Rafa
________________________________
De: R-package-devel <r-package-devel-bounces at r-project.org> en nombre de Carlos S?ez <carsaesi at ibime.upv.es>
Enviado: lunes, 5 de octubre de 2020 18:43
Para: r-package-devel at r-project.org <r-package-devel at r-project.org>
Asunto: [R-pkg-devel] EHRtemporalVariability package check warning, cannot fix


*******************
This email originates from outside Imperial. Do not click on links and attachments unless you recognise the sender.
If you trust the sender, add them to your safe senders list https://spam.ic.ac.uk/SpamConsole/Senders.aspx to disable email stamping for this address.
*******************
Hi,



Some weeks ago we received the CRAN notification to update our
EHRtemporalVariability package in light of some Warnings found on the
vignette compilation.



We managed to solve most by including the ?webshot? package in the Suggests
list in DESCRIPTION, since the Vignette is rendered in .html including
dynamic Plotly plots.



However, we cannot manage to solve the last one, and thus we cannot update
the package in CRAN. Local checks show no Warnings (only a Note due to
having 5.1MB file). Even updated R to the latest ver 4.0.2 and R tools to
the latest 4, and all checks ok. But submitting on winbuilder the Warning is
still there.



The logs are here:

 <https://win-builder.r-project.org/9IvFwBBcgDlI>
https://win-builder.r-project.org/9IvFwBBcgDlI



This is the error:



        Error(s) in re-building vignettes:

--- re-building 'EHRtemporalVariability.Rmd' using rmarkdown

Quitting from lines 35-36 (EHRtemporalVariability.Rmd)

Error: processing vignette 'EHRtemporalVariability.Rmd' failed with
diagnostics:

argument is of length zero

--- failed re-building 'EHRtemporalVariability.Rmd'



The package is exactly that found in
https://github.com/hms-dbmi/EHRtemporalVariability



Those lines 35-36 are the first chunk in the .Rmd vignette file:

```{r setup, include=FALSE}

knitr::opts_chunk$set(echo = TRUE, warning=FALSE)

```

Surprisingly, if removing this chunk and resubmitting, the same ?argument is
of length zero? error is present but in the following (now first) chunk of
code.



Any help would be really appreciated. We would kindly provide any additional
info that could help.

Best regards!

Carlos


        [[alternative HTML version deleted]]


	[[alternative HTML version deleted]]


From j|ox @end|ng |rom mcm@@ter@c@  Wed Oct  7 22:10:41 2020
From: j|ox @end|ng |rom mcm@@ter@c@ (John Fox)
Date: Wed, 7 Oct 2020 16:10:41 -0400
Subject: [R-pkg-devel] is R CMD build --compact-vignettes working as
 expected?
In-Reply-To: <28318_1601917804_095H9vQf016745_e34db7d9-28f0-36f3-0c8e-61e9586630d3@gmail.com>
References: <28318_1601917804_095H9vQf016745_e34db7d9-28f0-36f3-0c8e-61e9586630d3@gmail.com>
Message-ID: <6ae4e85e-bec1-19fd-efe9-61c8939b2416@mcmaster.ca>

Dear Ben,

I was hoping that someone would pick up on this problem, because I've 
experienced the same issue of --compact-vignettes apparently ignored, 
e.g., with the Rcmdr package under R 4.0.2 on both macOS and Windows.

Best,
  John

John Fox, Professor Emeritus
McMaster University
Hamilton, Ontario, Canada
web: https://socialsciences.mcmaster.ca/jfox/

On 2020-10-05 1:09 p.m., Ben Bolker wrote:
>  ? Am I confused, or doing something wrong, or ... ?
> 
>  ? I have qpdf installed, and am running R CMD build with 
> --compact-vignettes, but the PDF in the tarball doesn't seem to be 
> compressed despite the fact that the output messages say "compacting 
> vignettes ..."
> 
> 
>  ? $ R CMD build --compact-vignettes lme4
> * checking for file ?lme4/DESCRIPTION? ... OK
> * preparing ?lme4?:
> * checking DESCRIPTION meta-information ... OK
> * cleaning src
> * installing the package to process help pages
> * saving partial Rd database
> * creating vignettes ... OK
> Warning: ?inst/doc? files
>  ??? ?lmerperf.html?, ?lmer.pdf?, ?PLSvGLS.pdf?, ?Theory.pdf?
>  ? ignored as vignettes have been rebuilt.
>  ? Run R CMD build with --no-build-vignettes to prevent rebuilding.
> * compacting vignettes and other PDF files
> * cleaning src
> * checking for LF line-endings in source and make files and shell scripts
> * checking for empty or unneeded directories
> * building ?lme4_1.1-24.tar.gz?
> 
>  ? The copy of lmer.pdf in the resulting tarball is 900K or so:
> 
> $ tar ztvf lme4_1.1-24.tar.gz lme4/inst/doc/lmer.pdf
> -rw-r--r-- bolker/bolker 907022 2020-10-05 12:59 lme4/inst/doc/lmer.pdf
> 
>  ? The previously built (and manually compacted) version of lmer.pdf in 
> the tarball is 500K:
> 
> $ ls -l lme4/inst/doc/lmer.pdf
> -rw-r--r-- 1 bolker bolker 495199 Oct? 3 22:15 lme4/inst/doc/lmer.pdf
> 
>  ?? Is 'R CMD build' confused by the presence of a pre-built PDF in the 
> inst/doc directory? Or am I somehow mistaken about how this is supposed 
> to work?
> 
>  ?? I would just use --no-build-vignettes and submit the tarball with 
> the previously built/compressed PDF, but I'm trying to avoid a
> "Package has a VignetteBuilder field but no prebuilt vignette index" 
> NOTE, which I assume is missing because I built without building 
> vignettes ... ?
> 
>  ? As always, enlightenment is welcome.
> 
>  ? cheers
>  ??? Ben Bolker
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From bbo|ker @end|ng |rom gm@||@com  Wed Oct  7 23:26:24 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Wed, 7 Oct 2020 17:26:24 -0400
Subject: [R-pkg-devel] is R CMD build --compact-vignettes working as
 expected?
In-Reply-To: <6ae4e85e-bec1-19fd-efe9-61c8939b2416@mcmaster.ca>
References: <28318_1601917804_095H9vQf016745_e34db7d9-28f0-36f3-0c8e-61e9586630d3@gmail.com>
 <6ae4e85e-bec1-19fd-efe9-61c8939b2416@mcmaster.ca>
Message-ID: <fd783fc0-7024-9599-b219-22814e1c532b@gmail.com>

   I hope so too. The (annoying) workaround is to compact the vignette 
yourself (using qpdf directly or using tools::compactPDF), then use 
no-build-vignettes.  The problem there is whatever's supposed to happen 
with building vignette indices.  The uuuuugly workaround, I guess, is to 
build the tarball, compact the vignettes oneself, then *replace* them in 
the tarball.  (Obviously I can automate that, but it seems as though it 
would be unnecessary if I knew what was going on ...)

   cheers
    Ben


On 10/7/20 4:10 PM, John Fox wrote:
> Dear Ben,
> 
> I was hoping that someone would pick up on this problem, because I've 
> experienced the same issue of --compact-vignettes apparently ignored, 
> e.g., with the Rcmdr package under R 4.0.2 on both macOS and Windows.
> 
> Best,
>  ?John
> 
> John Fox, Professor Emeritus
> McMaster University
> Hamilton, Ontario, Canada
> web: https://socialsciences.mcmaster.ca/jfox/
> 
> On 2020-10-05 1:09 p.m., Ben Bolker wrote:
>> ?? Am I confused, or doing something wrong, or ... ?
>>
>> ?? I have qpdf installed, and am running R CMD build with 
>> --compact-vignettes, but the PDF in the tarball doesn't seem to be 
>> compressed despite the fact that the output messages say "compacting 
>> vignettes ..."
>>
>>
>> ?? $ R CMD build --compact-vignettes lme4
>> * checking for file ?lme4/DESCRIPTION? ... OK
>> * preparing ?lme4?:
>> * checking DESCRIPTION meta-information ... OK
>> * cleaning src
>> * installing the package to process help pages
>> * saving partial Rd database
>> * creating vignettes ... OK
>> Warning: ?inst/doc? files
>> ???? ?lmerperf.html?, ?lmer.pdf?, ?PLSvGLS.pdf?, ?Theory.pdf?
>> ?? ignored as vignettes have been rebuilt.
>> ?? Run R CMD build with --no-build-vignettes to prevent rebuilding.
>> * compacting vignettes and other PDF files
>> * cleaning src
>> * checking for LF line-endings in source and make files and shell scripts
>> * checking for empty or unneeded directories
>> * building ?lme4_1.1-24.tar.gz?
>>
>> ?? The copy of lmer.pdf in the resulting tarball is 900K or so:
>>
>> $ tar ztvf lme4_1.1-24.tar.gz lme4/inst/doc/lmer.pdf
>> -rw-r--r-- bolker/bolker 907022 2020-10-05 12:59 lme4/inst/doc/lmer.pdf
>>
>> ?? The previously built (and manually compacted) version of lmer.pdf 
>> in the tarball is 500K:
>>
>> $ ls -l lme4/inst/doc/lmer.pdf
>> -rw-r--r-- 1 bolker bolker 495199 Oct? 3 22:15 lme4/inst/doc/lmer.pdf
>>
>> ??? Is 'R CMD build' confused by the presence of a pre-built PDF in 
>> the inst/doc directory? Or am I somehow mistaken about how this is 
>> supposed to work?
>>
>> ??? I would just use --no-build-vignettes and submit the tarball with 
>> the previously built/compressed PDF, but I'm trying to avoid a
>> "Package has a VignetteBuilder field but no prebuilt vignette index" 
>> NOTE, which I assume is missing because I built without building 
>> vignettes ... ?
>>
>> ?? As always, enlightenment is welcome.
>>
>> ?? cheers
>> ???? Ben Bolker
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From j|ox @end|ng |rom mcm@@ter@c@  Thu Oct  8 00:03:19 2020
From: j|ox @end|ng |rom mcm@@ter@c@ (John Fox)
Date: Wed, 7 Oct 2020 18:03:19 -0400
Subject: [R-pkg-devel] is R CMD build --compact-vignettes working as
 expected?
In-Reply-To: <fd783fc0-7024-9599-b219-22814e1c532b@gmail.com>
References: <28318_1601917804_095H9vQf016745_e34db7d9-28f0-36f3-0c8e-61e9586630d3@gmail.com>
 <6ae4e85e-bec1-19fd-efe9-61c8939b2416@mcmaster.ca>
 <fd783fc0-7024-9599-b219-22814e1c532b@gmail.com>
Message-ID: <7e2538a1-8c1e-dd38-0741-5ba79c591668@mcmaster.ca>

Dear Ben,

On 2020-10-07 5:26 p.m., Ben Bolker wrote:
>  ? I hope so too. The (annoying) workaround is to compact the vignette 
> yourself (using qpdf directly or using tools::compactPDF), then use 
> no-build-vignettes.? The problem there is whatever's supposed to happen 
> with building vignette indices.? The uuuuugly workaround, I guess, is to 
> build the tarball, compact the vignettes oneself, then *replace* them in 
> the tarball.? (Obviously I can automate that, but it seems as though it 
> would be unnecessary if I knew what was going on ...)

I've used both of these workarounds and agree that it would be nice to 
avoid them. After all, what is the --compact-vignettes argument for?

Best,
  John

> 
>  ? cheers
>  ?? Ben
> 
> 
> On 10/7/20 4:10 PM, John Fox wrote:
>> Dear Ben,
>>
>> I was hoping that someone would pick up on this problem, because I've 
>> experienced the same issue of --compact-vignettes apparently ignored, 
>> e.g., with the Rcmdr package under R 4.0.2 on both macOS and Windows.
>>
>> Best,
>> ??John
>>
>> John Fox, Professor Emeritus
>> McMaster University
>> Hamilton, Ontario, Canada
>> web: https://socialsciences.mcmaster.ca/jfox/
>>
>> On 2020-10-05 1:09 p.m., Ben Bolker wrote:
>>> ?? Am I confused, or doing something wrong, or ... ?
>>>
>>> ?? I have qpdf installed, and am running R CMD build with 
>>> --compact-vignettes, but the PDF in the tarball doesn't seem to be 
>>> compressed despite the fact that the output messages say "compacting 
>>> vignettes ..."
>>>
>>>
>>> ?? $ R CMD build --compact-vignettes lme4
>>> * checking for file ?lme4/DESCRIPTION? ... OK
>>> * preparing ?lme4?:
>>> * checking DESCRIPTION meta-information ... OK
>>> * cleaning src
>>> * installing the package to process help pages
>>> * saving partial Rd database
>>> * creating vignettes ... OK
>>> Warning: ?inst/doc? files
>>> ???? ?lmerperf.html?, ?lmer.pdf?, ?PLSvGLS.pdf?, ?Theory.pdf?
>>> ?? ignored as vignettes have been rebuilt.
>>> ?? Run R CMD build with --no-build-vignettes to prevent rebuilding.
>>> * compacting vignettes and other PDF files
>>> * cleaning src
>>> * checking for LF line-endings in source and make files and shell 
>>> scripts
>>> * checking for empty or unneeded directories
>>> * building ?lme4_1.1-24.tar.gz?
>>>
>>> ?? The copy of lmer.pdf in the resulting tarball is 900K or so:
>>>
>>> $ tar ztvf lme4_1.1-24.tar.gz lme4/inst/doc/lmer.pdf
>>> -rw-r--r-- bolker/bolker 907022 2020-10-05 12:59 lme4/inst/doc/lmer.pdf
>>>
>>> ?? The previously built (and manually compacted) version of lmer.pdf 
>>> in the tarball is 500K:
>>>
>>> $ ls -l lme4/inst/doc/lmer.pdf
>>> -rw-r--r-- 1 bolker bolker 495199 Oct? 3 22:15 lme4/inst/doc/lmer.pdf
>>>
>>> ??? Is 'R CMD build' confused by the presence of a pre-built PDF in 
>>> the inst/doc directory? Or am I somehow mistaken about how this is 
>>> supposed to work?
>>>
>>> ??? I would just use --no-build-vignettes and submit the tarball with 
>>> the previously built/compressed PDF, but I'm trying to avoid a
>>> "Package has a VignetteBuilder field but no prebuilt vignette index" 
>>> NOTE, which I assume is missing because I built without building 
>>> vignettes ... ?
>>>
>>> ?? As always, enlightenment is welcome.
>>>
>>> ?? cheers
>>> ???? Ben Bolker
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu Oct  8 02:31:56 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Wed, 7 Oct 2020 20:31:56 -0400
Subject: [R-pkg-devel] is R CMD build --compact-vignettes working as
 expected?
In-Reply-To: <7e2538a1-8c1e-dd38-0741-5ba79c591668@mcmaster.ca>
References: <28318_1601917804_095H9vQf016745_e34db7d9-28f0-36f3-0c8e-61e9586630d3@gmail.com>
 <6ae4e85e-bec1-19fd-efe9-61c8939b2416@mcmaster.ca>
 <fd783fc0-7024-9599-b219-22814e1c532b@gmail.com>
 <7e2538a1-8c1e-dd38-0741-5ba79c591668@mcmaster.ca>
Message-ID: <776a00fd-694b-d5b9-87cf-e25d78d30eab@gmail.com>

I don't know the answer to your question, but you can debug the 
--compact-vignettes option as follows.

debug(tools::compactPDF)
tools:::.build_packages(c("--compact-vignettes", "pkgdir"))

where "pkgdir" is the directory of the source of your package.  Add 
extra options to the build as separate elements of the argument to 
.build():  this function is called after args have been parsed.

When I do that, I see that it rejects the compaction, because none of 
mine benefit much from it:  it wants at least a 10% and 10K reduction. 
But Ben's example met those criteria.  When I trick it into accepting 
the compaction, it does put the compacted PDF into the tarball.

Duncan Murdoch

On 07/10/2020 6:03 p.m., John Fox wrote:
> Dear Ben,
> 
> On 2020-10-07 5:26 p.m., Ben Bolker wrote:
>>   ? I hope so too. The (annoying) workaround is to compact the vignette
>> yourself (using qpdf directly or using tools::compactPDF), then use
>> no-build-vignettes.? The problem there is whatever's supposed to happen
>> with building vignette indices.? The uuuuugly workaround, I guess, is to
>> build the tarball, compact the vignettes oneself, then *replace* them in
>> the tarball.? (Obviously I can automate that, but it seems as though it
>> would be unnecessary if I knew what was going on ...)
> 
> I've used both of these workarounds and agree that it would be nice to
> avoid them. After all, what is the --compact-vignettes argument for?
> 
> Best,
>    John
> 
>>
>>   ? cheers
>>   ?? Ben
>>
>>
>> On 10/7/20 4:10 PM, John Fox wrote:
>>> Dear Ben,
>>>
>>> I was hoping that someone would pick up on this problem, because I've
>>> experienced the same issue of --compact-vignettes apparently ignored,
>>> e.g., with the Rcmdr package under R 4.0.2 on both macOS and Windows.
>>>
>>> Best,
>>>  ??John
>>>
>>> John Fox, Professor Emeritus
>>> McMaster University
>>> Hamilton, Ontario, Canada
>>> web: https://socialsciences.mcmaster.ca/jfox/
>>>
>>> On 2020-10-05 1:09 p.m., Ben Bolker wrote:
>>>>  ?? Am I confused, or doing something wrong, or ... ?
>>>>
>>>>  ?? I have qpdf installed, and am running R CMD build with
>>>> --compact-vignettes, but the PDF in the tarball doesn't seem to be
>>>> compressed despite the fact that the output messages say "compacting
>>>> vignettes ..."
>>>>
>>>>
>>>>  ?? $ R CMD build --compact-vignettes lme4
>>>> * checking for file ?lme4/DESCRIPTION? ... OK
>>>> * preparing ?lme4?:
>>>> * checking DESCRIPTION meta-information ... OK
>>>> * cleaning src
>>>> * installing the package to process help pages
>>>> * saving partial Rd database
>>>> * creating vignettes ... OK
>>>> Warning: ?inst/doc? files
>>>>  ???? ?lmerperf.html?, ?lmer.pdf?, ?PLSvGLS.pdf?, ?Theory.pdf?
>>>>  ?? ignored as vignettes have been rebuilt.
>>>>  ?? Run R CMD build with --no-build-vignettes to prevent rebuilding.
>>>> * compacting vignettes and other PDF files
>>>> * cleaning src
>>>> * checking for LF line-endings in source and make files and shell
>>>> scripts
>>>> * checking for empty or unneeded directories
>>>> * building ?lme4_1.1-24.tar.gz?
>>>>
>>>>  ?? The copy of lmer.pdf in the resulting tarball is 900K or so:
>>>>
>>>> $ tar ztvf lme4_1.1-24.tar.gz lme4/inst/doc/lmer.pdf
>>>> -rw-r--r-- bolker/bolker 907022 2020-10-05 12:59 lme4/inst/doc/lmer.pdf
>>>>
>>>>  ?? The previously built (and manually compacted) version of lmer.pdf
>>>> in the tarball is 500K:
>>>>
>>>> $ ls -l lme4/inst/doc/lmer.pdf
>>>> -rw-r--r-- 1 bolker bolker 495199 Oct? 3 22:15 lme4/inst/doc/lmer.pdf
>>>>
>>>>  ??? Is 'R CMD build' confused by the presence of a pre-built PDF in
>>>> the inst/doc directory? Or am I somehow mistaken about how this is
>>>> supposed to work?
>>>>
>>>>  ??? I would just use --no-build-vignettes and submit the tarball with
>>>> the previously built/compressed PDF, but I'm trying to avoid a
>>>> "Package has a VignetteBuilder field but no prebuilt vignette index"
>>>> NOTE, which I assume is missing because I built without building
>>>> vignettes ... ?
>>>>
>>>>  ?? As always, enlightenment is welcome.
>>>>
>>>>  ?? cheers
>>>>  ???? Ben Bolker
>>>>
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From bbo|ker @end|ng |rom gm@||@com  Thu Oct  8 02:32:16 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Wed, 7 Oct 2020 20:32:16 -0400
Subject: [R-pkg-devel] is R CMD build --compact-vignettes working as
 expected?
In-Reply-To: <776a00fd-694b-d5b9-87cf-e25d78d30eab@gmail.com>
References: <28318_1601917804_095H9vQf016745_e34db7d9-28f0-36f3-0c8e-61e9586630d3@gmail.com>
 <6ae4e85e-bec1-19fd-efe9-61c8939b2416@mcmaster.ca>
 <fd783fc0-7024-9599-b219-22814e1c532b@gmail.com>
 <7e2538a1-8c1e-dd38-0741-5ba79c591668@mcmaster.ca>
 <776a00fd-694b-d5b9-87cf-e25d78d30eab@gmail.com>
Message-ID: <3d06af38-dd61-ff8c-872f-cee9f26f4e1d@gmail.com>

   Thanks for the tip, I'll take a look.

   Given that three relatively experienced package authors all seem to 
have experienced similar issues, it seems that maybe this is worth 
figuring out/maybe I'm not just doing something boneheaded.

   cheers
     Ben

On 10/7/20 8:31 PM, Duncan Murdoch wrote:
> I don't know the answer to your question, but you can debug the 
> --compact-vignettes option as follows.
> 
> debug(tools::compactPDF)
> tools:::.build_packages(c("--compact-vignettes", "pkgdir"))
> 
> where "pkgdir" is the directory of the source of your package.? Add 
> extra options to the build as separate elements of the argument to 
> .build():? this function is called after args have been parsed.
> 
> When I do that, I see that it rejects the compaction, because none of 
> mine benefit much from it:? it wants at least a 10% and 10K reduction. 
> But Ben's example met those criteria.? When I trick it into accepting 
> the compaction, it does put the compacted PDF into the tarball.
> 
> Duncan Murdoch
> 
> On 07/10/2020 6:03 p.m., John Fox wrote:
>> Dear Ben,
>>
>> On 2020-10-07 5:26 p.m., Ben Bolker wrote:
>>> ? ? I hope so too. The (annoying) workaround is to compact the vignette
>>> yourself (using qpdf directly or using tools::compactPDF), then use
>>> no-build-vignettes.? The problem there is whatever's supposed to happen
>>> with building vignette indices.? The uuuuugly workaround, I guess, is to
>>> build the tarball, compact the vignettes oneself, then *replace* them in
>>> the tarball.? (Obviously I can automate that, but it seems as though it
>>> would be unnecessary if I knew what was going on ...)
>>
>> I've used both of these workarounds and agree that it would be nice to
>> avoid them. After all, what is the --compact-vignettes argument for?
>>
>> Best,
>> ?? John
>>
>>>
>>> ? ? cheers
>>> ? ?? Ben
>>>
>>>
>>> On 10/7/20 4:10 PM, John Fox wrote:
>>>> Dear Ben,
>>>>
>>>> I was hoping that someone would pick up on this problem, because I've
>>>> experienced the same issue of --compact-vignettes apparently ignored,
>>>> e.g., with the Rcmdr package under R 4.0.2 on both macOS and Windows.
>>>>
>>>> Best,
>>>> ???John
>>>>
>>>> John Fox, Professor Emeritus
>>>> McMaster University
>>>> Hamilton, Ontario, Canada
>>>> web: https://socialsciences.mcmaster.ca/jfox/
>>>>
>>>> On 2020-10-05 1:09 p.m., Ben Bolker wrote:
>>>>> ??? Am I confused, or doing something wrong, or ... ?
>>>>>
>>>>> ??? I have qpdf installed, and am running R CMD build with
>>>>> --compact-vignettes, but the PDF in the tarball doesn't seem to be
>>>>> compressed despite the fact that the output messages say "compacting
>>>>> vignettes ..."
>>>>>
>>>>>
>>>>> ??? $ R CMD build --compact-vignettes lme4
>>>>> * checking for file ?lme4/DESCRIPTION? ... OK
>>>>> * preparing ?lme4?:
>>>>> * checking DESCRIPTION meta-information ... OK
>>>>> * cleaning src
>>>>> * installing the package to process help pages
>>>>> * saving partial Rd database
>>>>> * creating vignettes ... OK
>>>>> Warning: ?inst/doc? files
>>>>> ????? ?lmerperf.html?, ?lmer.pdf?, ?PLSvGLS.pdf?, ?Theory.pdf?
>>>>> ??? ignored as vignettes have been rebuilt.
>>>>> ??? Run R CMD build with --no-build-vignettes to prevent rebuilding.
>>>>> * compacting vignettes and other PDF files
>>>>> * cleaning src
>>>>> * checking for LF line-endings in source and make files and shell
>>>>> scripts
>>>>> * checking for empty or unneeded directories
>>>>> * building ?lme4_1.1-24.tar.gz?
>>>>>
>>>>> ??? The copy of lmer.pdf in the resulting tarball is 900K or so:
>>>>>
>>>>> $ tar ztvf lme4_1.1-24.tar.gz lme4/inst/doc/lmer.pdf
>>>>> -rw-r--r-- bolker/bolker 907022 2020-10-05 12:59 
>>>>> lme4/inst/doc/lmer.pdf
>>>>>
>>>>> ??? The previously built (and manually compacted) version of lmer.pdf
>>>>> in the tarball is 500K:
>>>>>
>>>>> $ ls -l lme4/inst/doc/lmer.pdf
>>>>> -rw-r--r-- 1 bolker bolker 495199 Oct? 3 22:15 lme4/inst/doc/lmer.pdf
>>>>>
>>>>> ???? Is 'R CMD build' confused by the presence of a pre-built PDF in
>>>>> the inst/doc directory? Or am I somehow mistaken about how this is
>>>>> supposed to work?
>>>>>
>>>>> ???? I would just use --no-build-vignettes and submit the tarball with
>>>>> the previously built/compressed PDF, but I'm trying to avoid a
>>>>> "Package has a VignetteBuilder field but no prebuilt vignette index"
>>>>> NOTE, which I assume is missing because I built without building
>>>>> vignettes ... ?
>>>>>
>>>>> ??? As always, enlightenment is welcome.
>>>>>
>>>>> ??? cheers
>>>>> ????? Ben Bolker
>>>>>
>>>>> ______________________________________________
>>>>> R-package-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu Oct  8 02:35:48 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Wed, 7 Oct 2020 20:35:48 -0400
Subject: [R-pkg-devel] is R CMD build --compact-vignettes working as
 expected?
In-Reply-To: <3d06af38-dd61-ff8c-872f-cee9f26f4e1d@gmail.com>
References: <28318_1601917804_095H9vQf016745_e34db7d9-28f0-36f3-0c8e-61e9586630d3@gmail.com>
 <6ae4e85e-bec1-19fd-efe9-61c8939b2416@mcmaster.ca>
 <fd783fc0-7024-9599-b219-22814e1c532b@gmail.com>
 <7e2538a1-8c1e-dd38-0741-5ba79c591668@mcmaster.ca>
 <776a00fd-694b-d5b9-87cf-e25d78d30eab@gmail.com>
 <3d06af38-dd61-ff8c-872f-cee9f26f4e1d@gmail.com>
Message-ID: <def42f5f-53b3-1be0-1a95-44971323ba6e@gmail.com>

On 07/10/2020 8:32 p.m., Ben Bolker wrote:
>     Thanks for the tip, I'll take a look.
> 
>     Given that three relatively experienced package authors all seem to
> have experienced similar issues, it seems that maybe this is worth
> figuring out/maybe I'm not just doing something boneheaded.

Just to clarify:  I've never noticed the problem you mention.  I just 
know how to debug R CMD build.

Duncan

> 
>     cheers
>       Ben
> 
> On 10/7/20 8:31 PM, Duncan Murdoch wrote:
>> I don't know the answer to your question, but you can debug the
>> --compact-vignettes option as follows.
>>
>> debug(tools::compactPDF)
>> tools:::.build_packages(c("--compact-vignettes", "pkgdir"))
>>
>> where "pkgdir" is the directory of the source of your package.? Add
>> extra options to the build as separate elements of the argument to
>> .build():? this function is called after args have been parsed.
>>
>> When I do that, I see that it rejects the compaction, because none of
>> mine benefit much from it:? it wants at least a 10% and 10K reduction.
>> But Ben's example met those criteria.? When I trick it into accepting
>> the compaction, it does put the compacted PDF into the tarball.
>>
>> Duncan Murdoch
>>
>> On 07/10/2020 6:03 p.m., John Fox wrote:
>>> Dear Ben,
>>>
>>> On 2020-10-07 5:26 p.m., Ben Bolker wrote:
>>>>  ? ? I hope so too. The (annoying) workaround is to compact the vignette
>>>> yourself (using qpdf directly or using tools::compactPDF), then use
>>>> no-build-vignettes.? The problem there is whatever's supposed to happen
>>>> with building vignette indices.? The uuuuugly workaround, I guess, is to
>>>> build the tarball, compact the vignettes oneself, then *replace* them in
>>>> the tarball.? (Obviously I can automate that, but it seems as though it
>>>> would be unnecessary if I knew what was going on ...)
>>>
>>> I've used both of these workarounds and agree that it would be nice to
>>> avoid them. After all, what is the --compact-vignettes argument for?
>>>
>>> Best,
>>>  ?? John
>>>
>>>>
>>>>  ? ? cheers
>>>>  ? ?? Ben
>>>>
>>>>
>>>> On 10/7/20 4:10 PM, John Fox wrote:
>>>>> Dear Ben,
>>>>>
>>>>> I was hoping that someone would pick up on this problem, because I've
>>>>> experienced the same issue of --compact-vignettes apparently ignored,
>>>>> e.g., with the Rcmdr package under R 4.0.2 on both macOS and Windows.
>>>>>
>>>>> Best,
>>>>>  ???John
>>>>>
>>>>> John Fox, Professor Emeritus
>>>>> McMaster University
>>>>> Hamilton, Ontario, Canada
>>>>> web: https://socialsciences.mcmaster.ca/jfox/
>>>>>
>>>>> On 2020-10-05 1:09 p.m., Ben Bolker wrote:
>>>>>>  ??? Am I confused, or doing something wrong, or ... ?
>>>>>>
>>>>>>  ??? I have qpdf installed, and am running R CMD build with
>>>>>> --compact-vignettes, but the PDF in the tarball doesn't seem to be
>>>>>> compressed despite the fact that the output messages say "compacting
>>>>>> vignettes ..."
>>>>>>
>>>>>>
>>>>>>  ??? $ R CMD build --compact-vignettes lme4
>>>>>> * checking for file ?lme4/DESCRIPTION? ... OK
>>>>>> * preparing ?lme4?:
>>>>>> * checking DESCRIPTION meta-information ... OK
>>>>>> * cleaning src
>>>>>> * installing the package to process help pages
>>>>>> * saving partial Rd database
>>>>>> * creating vignettes ... OK
>>>>>> Warning: ?inst/doc? files
>>>>>>  ????? ?lmerperf.html?, ?lmer.pdf?, ?PLSvGLS.pdf?, ?Theory.pdf?
>>>>>>  ??? ignored as vignettes have been rebuilt.
>>>>>>  ??? Run R CMD build with --no-build-vignettes to prevent rebuilding.
>>>>>> * compacting vignettes and other PDF files
>>>>>> * cleaning src
>>>>>> * checking for LF line-endings in source and make files and shell
>>>>>> scripts
>>>>>> * checking for empty or unneeded directories
>>>>>> * building ?lme4_1.1-24.tar.gz?
>>>>>>
>>>>>>  ??? The copy of lmer.pdf in the resulting tarball is 900K or so:
>>>>>>
>>>>>> $ tar ztvf lme4_1.1-24.tar.gz lme4/inst/doc/lmer.pdf
>>>>>> -rw-r--r-- bolker/bolker 907022 2020-10-05 12:59
>>>>>> lme4/inst/doc/lmer.pdf
>>>>>>
>>>>>>  ??? The previously built (and manually compacted) version of lmer.pdf
>>>>>> in the tarball is 500K:
>>>>>>
>>>>>> $ ls -l lme4/inst/doc/lmer.pdf
>>>>>> -rw-r--r-- 1 bolker bolker 495199 Oct? 3 22:15 lme4/inst/doc/lmer.pdf
>>>>>>
>>>>>>  ???? Is 'R CMD build' confused by the presence of a pre-built PDF in
>>>>>> the inst/doc directory? Or am I somehow mistaken about how this is
>>>>>> supposed to work?
>>>>>>
>>>>>>  ???? I would just use --no-build-vignettes and submit the tarball with
>>>>>> the previously built/compressed PDF, but I'm trying to avoid a
>>>>>> "Package has a VignetteBuilder field but no prebuilt vignette index"
>>>>>> NOTE, which I assume is missing because I built without building
>>>>>> vignettes ... ?
>>>>>>
>>>>>>  ??? As always, enlightenment is welcome.
>>>>>>
>>>>>>  ??? cheers
>>>>>>  ????? Ben Bolker
>>>>>>
>>>>>> ______________________________________________
>>>>>> R-package-devel at r-project.org mailing list
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>>


From bbo|ker @end|ng |rom gm@||@com  Thu Oct  8 02:42:08 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Wed, 7 Oct 2020 20:42:08 -0400
Subject: [R-pkg-devel] is R CMD build --compact-vignettes working as
 expected?
In-Reply-To: <def42f5f-53b3-1be0-1a95-44971323ba6e@gmail.com>
References: <28318_1601917804_095H9vQf016745_e34db7d9-28f0-36f3-0c8e-61e9586630d3@gmail.com>
 <6ae4e85e-bec1-19fd-efe9-61c8939b2416@mcmaster.ca>
 <fd783fc0-7024-9599-b219-22814e1c532b@gmail.com>
 <7e2538a1-8c1e-dd38-0741-5ba79c591668@mcmaster.ca>
 <776a00fd-694b-d5b9-87cf-e25d78d30eab@gmail.com>
 <3d06af38-dd61-ff8c-872f-cee9f26f4e1d@gmail.com>
 <def42f5f-53b3-1be0-1a95-44971323ba6e@gmail.com>
Message-ID: <7da46588-a58b-1a48-9e6c-22e8a2fdaaaa@gmail.com>



On 10/7/20 8:35 PM, Duncan Murdoch wrote:
> On 07/10/2020 8:32 p.m., Ben Bolker wrote:
>> ??? Thanks for the tip, I'll take a look.
>>
>> ??? Given that three relatively experienced package authors all seem to
>> have experienced similar issues, it seems that maybe this is worth
>> figuring out/maybe I'm not just doing something boneheaded.
> 
> Just to clarify:? I've never noticed the problem you mention.? I just 
> know how to debug R CMD build.

   I wasn't saying you had. My count of three was Bolker (me), Fox, Nash.

   cheers
     Ben

> 
> Duncan
> 
>>
>> ??? cheers
>> ????? Ben
>>
>> On 10/7/20 8:31 PM, Duncan Murdoch wrote:
>>> I don't know the answer to your question, but you can debug the
>>> --compact-vignettes option as follows.
>>>
>>> debug(tools::compactPDF)
>>> tools:::.build_packages(c("--compact-vignettes", "pkgdir"))
>>>
>>> where "pkgdir" is the directory of the source of your package.? Add
>>> extra options to the build as separate elements of the argument to
>>> .build():? this function is called after args have been parsed.
>>>
>>> When I do that, I see that it rejects the compaction, because none of
>>> mine benefit much from it:? it wants at least a 10% and 10K reduction.
>>> But Ben's example met those criteria.? When I trick it into accepting
>>> the compaction, it does put the compacted PDF into the tarball.
>>>
>>> Duncan Murdoch
>>>
>>> On 07/10/2020 6:03 p.m., John Fox wrote:
>>>> Dear Ben,
>>>>
>>>> On 2020-10-07 5:26 p.m., Ben Bolker wrote:
>>>>> ?? ? I hope so too. The (annoying) workaround is to compact the 
>>>>> vignette
>>>>> yourself (using qpdf directly or using tools::compactPDF), then use
>>>>> no-build-vignettes.? The problem there is whatever's supposed to 
>>>>> happen
>>>>> with building vignette indices.? The uuuuugly workaround, I guess, 
>>>>> is to
>>>>> build the tarball, compact the vignettes oneself, then *replace* 
>>>>> them in
>>>>> the tarball.? (Obviously I can automate that, but it seems as 
>>>>> though it
>>>>> would be unnecessary if I knew what was going on ...)
>>>>
>>>> I've used both of these workarounds and agree that it would be nice to
>>>> avoid them. After all, what is the --compact-vignettes argument for?
>>>>
>>>> Best,
>>>> ??? John
>>>>
>>>>>
>>>>> ?? ? cheers
>>>>> ?? ?? Ben
>>>>>
>>>>>
>>>>> On 10/7/20 4:10 PM, John Fox wrote:
>>>>>> Dear Ben,
>>>>>>
>>>>>> I was hoping that someone would pick up on this problem, because I've
>>>>>> experienced the same issue of --compact-vignettes apparently ignored,
>>>>>> e.g., with the Rcmdr package under R 4.0.2 on both macOS and Windows.
>>>>>>
>>>>>> Best,
>>>>>> ????John
>>>>>>
>>>>>> John Fox, Professor Emeritus
>>>>>> McMaster University
>>>>>> Hamilton, Ontario, Canada
>>>>>> web: https://socialsciences.mcmaster.ca/jfox/
>>>>>>
>>>>>> On 2020-10-05 1:09 p.m., Ben Bolker wrote:
>>>>>>> ???? Am I confused, or doing something wrong, or ... ?
>>>>>>>
>>>>>>> ???? I have qpdf installed, and am running R CMD build with
>>>>>>> --compact-vignettes, but the PDF in the tarball doesn't seem to be
>>>>>>> compressed despite the fact that the output messages say "compacting
>>>>>>> vignettes ..."
>>>>>>>
>>>>>>>
>>>>>>> ???? $ R CMD build --compact-vignettes lme4
>>>>>>> * checking for file ?lme4/DESCRIPTION? ... OK
>>>>>>> * preparing ?lme4?:
>>>>>>> * checking DESCRIPTION meta-information ... OK
>>>>>>> * cleaning src
>>>>>>> * installing the package to process help pages
>>>>>>> * saving partial Rd database
>>>>>>> * creating vignettes ... OK
>>>>>>> Warning: ?inst/doc? files
>>>>>>> ?????? ?lmerperf.html?, ?lmer.pdf?, ?PLSvGLS.pdf?, ?Theory.pdf?
>>>>>>> ???? ignored as vignettes have been rebuilt.
>>>>>>> ???? Run R CMD build with --no-build-vignettes to prevent 
>>>>>>> rebuilding.
>>>>>>> * compacting vignettes and other PDF files
>>>>>>> * cleaning src
>>>>>>> * checking for LF line-endings in source and make files and shell
>>>>>>> scripts
>>>>>>> * checking for empty or unneeded directories
>>>>>>> * building ?lme4_1.1-24.tar.gz?
>>>>>>>
>>>>>>> ???? The copy of lmer.pdf in the resulting tarball is 900K or so:
>>>>>>>
>>>>>>> $ tar ztvf lme4_1.1-24.tar.gz lme4/inst/doc/lmer.pdf
>>>>>>> -rw-r--r-- bolker/bolker 907022 2020-10-05 12:59
>>>>>>> lme4/inst/doc/lmer.pdf
>>>>>>>
>>>>>>> ???? The previously built (and manually compacted) version of 
>>>>>>> lmer.pdf
>>>>>>> in the tarball is 500K:
>>>>>>>
>>>>>>> $ ls -l lme4/inst/doc/lmer.pdf
>>>>>>> -rw-r--r-- 1 bolker bolker 495199 Oct? 3 22:15 
>>>>>>> lme4/inst/doc/lmer.pdf
>>>>>>>
>>>>>>> ????? Is 'R CMD build' confused by the presence of a pre-built 
>>>>>>> PDF in
>>>>>>> the inst/doc directory? Or am I somehow mistaken about how this is
>>>>>>> supposed to work?
>>>>>>>
>>>>>>> ????? I would just use --no-build-vignettes and submit the 
>>>>>>> tarball with
>>>>>>> the previously built/compressed PDF, but I'm trying to avoid a
>>>>>>> "Package has a VignetteBuilder field but no prebuilt vignette index"
>>>>>>> NOTE, which I assume is missing because I built without building
>>>>>>> vignettes ... ?
>>>>>>>
>>>>>>> ???? As always, enlightenment is welcome.
>>>>>>>
>>>>>>> ???? cheers
>>>>>>> ?????? Ben Bolker
>>>>>>>
>>>>>>> ______________________________________________
>>>>>>> R-package-devel at r-project.org mailing list
>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>
>>>
>


From bbo|ker @end|ng |rom gm@||@com  Thu Oct  8 04:06:13 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Wed, 7 Oct 2020 22:06:13 -0400
Subject: [R-pkg-devel] is R CMD build --compact-vignettes working as
 expected?
In-Reply-To: <def42f5f-53b3-1be0-1a95-44971323ba6e@gmail.com>
References: <28318_1601917804_095H9vQf016745_e34db7d9-28f0-36f3-0c8e-61e9586630d3@gmail.com>
 <6ae4e85e-bec1-19fd-efe9-61c8939b2416@mcmaster.ca>
 <fd783fc0-7024-9599-b219-22814e1c532b@gmail.com>
 <7e2538a1-8c1e-dd38-0741-5ba79c591668@mcmaster.ca>
 <776a00fd-694b-d5b9-87cf-e25d78d30eab@gmail.com>
 <3d06af38-dd61-ff8c-872f-cee9f26f4e1d@gmail.com>
 <def42f5f-53b3-1be0-1a95-44971323ba6e@gmail.com>
Message-ID: <a0cb727b-779b-ec51-1669-f9af455bfd8f@gmail.com>

   OK, I think I see the problem. tl;dr use --compact-vignettes="both" 
when building the vignettes.

   --compact-vignettes  by default only tries qpdf.

   when the R CMD check --as-cran is run, it tries both qpdf and gs. 
Since gs (apparently, in this case) compresses more aggressively than 
qpdf, it succeeds in compressing further, and the check complains.

 From R CMD build --help:

  --compact-vignettes=  try to compact PDF files under inst/doc:
                         "no" (default), "qpdf", "gs", "gs+qpdf", "both"
   --compact-vignettes   same as --compact-vignettes=qpdf


   I don't know if this is worth documenting somewhere, or modifying the 
behaviour to make "both" the default for --compact-vignettes ?


On 10/7/20 8:35 PM, Duncan Murdoch wrote:
> On 07/10/2020 8:32 p.m., Ben Bolker wrote:
>> ??? Thanks for the tip, I'll take a look.
>>
>> ??? Given that three relatively experienced package authors all seem to
>> have experienced similar issues, it seems that maybe this is worth
>> figuring out/maybe I'm not just doing something boneheaded.
> 
> Just to clarify:? I've never noticed the problem you mention.? I just 
> know how to debug R CMD build.
> 
> Duncan
> 
>>
>> ??? cheers
>> ????? Ben
>>
>> On 10/7/20 8:31 PM, Duncan Murdoch wrote:
>>> I don't know the answer to your question, but you can debug the
>>> --compact-vignettes option as follows.
>>>
>>> debug(tools::compactPDF)
>>> tools:::.build_packages(c("--compact-vignettes", "pkgdir"))
>>>
>>> where "pkgdir" is the directory of the source of your package.? Add
>>> extra options to the build as separate elements of the argument to
>>> .build():? this function is called after args have been parsed.
>>>
>>> When I do that, I see that it rejects the compaction, because none of
>>> mine benefit much from it:? it wants at least a 10% and 10K reduction.
>>> But Ben's example met those criteria.? When I trick it into accepting
>>> the compaction, it does put the compacted PDF into the tarball.
>>>
>>> Duncan Murdoch
>>>
>>> On 07/10/2020 6:03 p.m., John Fox wrote:
>>>> Dear Ben,
>>>>
>>>> On 2020-10-07 5:26 p.m., Ben Bolker wrote:
>>>>> ?? ? I hope so too. The (annoying) workaround is to compact the 
>>>>> vignette
>>>>> yourself (using qpdf directly or using tools::compactPDF), then use
>>>>> no-build-vignettes.? The problem there is whatever's supposed to 
>>>>> happen
>>>>> with building vignette indices.? The uuuuugly workaround, I guess, 
>>>>> is to
>>>>> build the tarball, compact the vignettes oneself, then *replace* 
>>>>> them in
>>>>> the tarball.? (Obviously I can automate that, but it seems as 
>>>>> though it
>>>>> would be unnecessary if I knew what was going on ...)
>>>>
>>>> I've used both of these workarounds and agree that it would be nice to
>>>> avoid them. After all, what is the --compact-vignettes argument for?
>>>>
>>>> Best,
>>>> ??? John
>>>>
>>>>>
>>>>> ?? ? cheers
>>>>> ?? ?? Ben
>>>>>
>>>>>
>>>>> On 10/7/20 4:10 PM, John Fox wrote:
>>>>>> Dear Ben,
>>>>>>
>>>>>> I was hoping that someone would pick up on this problem, because I've
>>>>>> experienced the same issue of --compact-vignettes apparently ignored,
>>>>>> e.g., with the Rcmdr package under R 4.0.2 on both macOS and Windows.
>>>>>>
>>>>>> Best,
>>>>>> ????John
>>>>>>
>>>>>> John Fox, Professor Emeritus
>>>>>> McMaster University
>>>>>> Hamilton, Ontario, Canada
>>>>>> web: https://socialsciences.mcmaster.ca/jfox/
>>>>>>
>>>>>> On 2020-10-05 1:09 p.m., Ben Bolker wrote:
>>>>>>> ???? Am I confused, or doing something wrong, or ... ?
>>>>>>>
>>>>>>> ???? I have qpdf installed, and am running R CMD build with
>>>>>>> --compact-vignettes, but the PDF in the tarball doesn't seem to be
>>>>>>> compressed despite the fact that the output messages say "compacting
>>>>>>> vignettes ..."
>>>>>>>
>>>>>>>
>>>>>>> ???? $ R CMD build --compact-vignettes lme4
>>>>>>> * checking for file ?lme4/DESCRIPTION? ... OK
>>>>>>> * preparing ?lme4?:
>>>>>>> * checking DESCRIPTION meta-information ... OK
>>>>>>> * cleaning src
>>>>>>> * installing the package to process help pages
>>>>>>> * saving partial Rd database
>>>>>>> * creating vignettes ... OK
>>>>>>> Warning: ?inst/doc? files
>>>>>>> ?????? ?lmerperf.html?, ?lmer.pdf?, ?PLSvGLS.pdf?, ?Theory.pdf?
>>>>>>> ???? ignored as vignettes have been rebuilt.
>>>>>>> ???? Run R CMD build with --no-build-vignettes to prevent 
>>>>>>> rebuilding.
>>>>>>> * compacting vignettes and other PDF files
>>>>>>> * cleaning src
>>>>>>> * checking for LF line-endings in source and make files and shell
>>>>>>> scripts
>>>>>>> * checking for empty or unneeded directories
>>>>>>> * building ?lme4_1.1-24.tar.gz?
>>>>>>>
>>>>>>> ???? The copy of lmer.pdf in the resulting tarball is 900K or so:
>>>>>>>
>>>>>>> $ tar ztvf lme4_1.1-24.tar.gz lme4/inst/doc/lmer.pdf
>>>>>>> -rw-r--r-- bolker/bolker 907022 2020-10-05 12:59
>>>>>>> lme4/inst/doc/lmer.pdf
>>>>>>>
>>>>>>> ???? The previously built (and manually compacted) version of 
>>>>>>> lmer.pdf
>>>>>>> in the tarball is 500K:
>>>>>>>
>>>>>>> $ ls -l lme4/inst/doc/lmer.pdf
>>>>>>> -rw-r--r-- 1 bolker bolker 495199 Oct? 3 22:15 
>>>>>>> lme4/inst/doc/lmer.pdf
>>>>>>>
>>>>>>> ????? Is 'R CMD build' confused by the presence of a pre-built 
>>>>>>> PDF in
>>>>>>> the inst/doc directory? Or am I somehow mistaken about how this is
>>>>>>> supposed to work?
>>>>>>>
>>>>>>> ????? I would just use --no-build-vignettes and submit the 
>>>>>>> tarball with
>>>>>>> the previously built/compressed PDF, but I'm trying to avoid a
>>>>>>> "Package has a VignetteBuilder field but no prebuilt vignette index"
>>>>>>> NOTE, which I assume is missing because I built without building
>>>>>>> vignettes ... ?
>>>>>>>
>>>>>>> ???? As always, enlightenment is welcome.
>>>>>>>
>>>>>>> ???? cheers
>>>>>>> ?????? Ben Bolker
>>>>>>>
>>>>>>> ______________________________________________
>>>>>>> R-package-devel at r-project.org mailing list
>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>
>>>
>


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Thu Oct  8 09:20:16 2020
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Thu, 8 Oct 2020 09:20:16 +0200
Subject: [R-pkg-devel] is R CMD build --compact-vignettes working as
 expected?
In-Reply-To: <7da46588-a58b-1a48-9e6c-22e8a2fdaaaa@gmail.com>
References: <28318_1601917804_095H9vQf016745_e34db7d9-28f0-36f3-0c8e-61e9586630d3@gmail.com>
 <6ae4e85e-bec1-19fd-efe9-61c8939b2416@mcmaster.ca>
 <fd783fc0-7024-9599-b219-22814e1c532b@gmail.com>
 <7e2538a1-8c1e-dd38-0741-5ba79c591668@mcmaster.ca>
 <776a00fd-694b-d5b9-87cf-e25d78d30eab@gmail.com>
 <3d06af38-dd61-ff8c-872f-cee9f26f4e1d@gmail.com>
 <def42f5f-53b3-1be0-1a95-44971323ba6e@gmail.com>
 <7da46588-a58b-1a48-9e6c-22e8a2fdaaaa@gmail.com>
Message-ID: <24446.48560.623988.234480@stat.math.ethz.ch>

>>>>> Ben Bolker 
>>>>>     on Wed, 7 Oct 2020 20:42:08 -0400 writes:

    > On 10/7/20 8:35 PM, Duncan Murdoch wrote:
    >> On 07/10/2020 8:32 p.m., Ben Bolker wrote:
    >>> ??? Thanks for the tip, I'll take a look.
    >>> 
    >>> ??? Given that three relatively experienced package
    >>> authors all seem to have experienced similar issues, it
    >>> seems that maybe this is worth figuring out/maybe I'm
    >>> not just doing something boneheaded.
    >> 
    >> Just to clarify:? I've never noticed the problem you
    >> mention.? I just know how to debug R CMD build.

    >    I wasn't saying you had. My count of three was Bolker
    > (me), Fox, Nash.

    >    cheers Ben

    >> 
    >> Duncan

Thank you,  Ben, John (2x), and Duncan.

I agree this should be investigated and fixed if/where needed.
My personal experience is that PDF compaction "has worked for
me" mostly, but not always; I think I never had looked closely
when it did not work, and yes, I know I also had used manual
compaction when I was unhappy with the automatic one.

Given that lme4 takes relatively long, and also given Duncan
Murdoch's precise instruction on how to debug,
could you try to find a  as small as "possible"  repr.example?
Of course it needs a vignette whose pdf is relatively large or
rather "well compactable", but otherwise could also be an
artificial package.

Martin

    >>> 
    >>> ??? cheers ????? Ben
    >>> 
    >>> On 10/7/20 8:31 PM, Duncan Murdoch wrote:
    >>>> I don't know the answer to your question, but you can
    >>>> debug the --compact-vignettes option as follows.
    >>>> 
    >>>> debug(tools::compactPDF)
    >>>> tools:::.build_packages(c("--compact-vignettes",
    >>>> "pkgdir"))
    >>>> 
    >>>> where "pkgdir" is the directory of the source of your
    >>>> package.? Add extra options to the build as separate
    >>>> elements of the argument to .build():? this function is
    >>>> called after args have been parsed.
    >>>> 
    >>>> When I do that, I see that it rejects the compaction,
    >>>> because none of mine benefit much from it:? it wants at
    >>>> least a 10% and 10K reduction.  But Ben's example met
    >>>> those criteria.? When I trick it into accepting the
    >>>> compaction, it does put the compacted PDF into the
    >>>> tarball.
    >>>> 
    >>>> Duncan Murdoch
    >>>> 
    >>>> On 07/10/2020 6:03 p.m., John Fox wrote:
    >>>>> Dear Ben,
    >>>>> 
    >>>>> On 2020-10-07 5:26 p.m., Ben Bolker wrote:
>>>>> ?? ? I hope so too. The (annoying) workaround is to
    >>>>> compact the
>>>>> vignette
>>>>> yourself (using qpdf directly or using tools::compactPDF),
    >>>>> then use
>>>>> no-build-vignettes.? The problem there is whatever's
    >>>>> supposed to
>>>>> happen
>>>>> with building vignette indices.? The uuuuugly workaround,
    >>>>> I guess,
>>>>> is to
>>>>> build the tarball, compact the vignettes oneself, then
    >>>>> *replace*
>>>>> them in
>>>>> the tarball.? (Obviously I can automate that, but it seems
    >>>>> as
>>>>> though it
>>>>> would be unnecessary if I knew what was going on ...)
    >>>>> 
    >>>>> I've used both of these workarounds and agree that it
    >>>>> would be nice to avoid them. After all, what is the
    >>>>> --compact-vignettes argument for?
    >>>>> 
    >>>>> Best, ??? John
    >>>>> 
    >>>>>> 
>>>>> ?? ? cheers
>>>>> ?? ?? Ben
    >>>>>> 
    >>>>>> 
>>>>> On 10/7/20 4:10 PM, John Fox wrote:
    >>>>>>> Dear Ben,
    >>>>>>> 
    >>>>>>> I was hoping that someone would pick up on this
    >>>>>>> problem, because I've experienced the same issue of
    >>>>>>> --compact-vignettes apparently ignored, e.g., with
    >>>>>>> the Rcmdr package under R 4.0.2 on both macOS and
    >>>>>>> Windows.
    >>>>>>> 
    >>>>>>> Best, ????John
    >>>>>>> 
    >>>>>>> John Fox, Professor Emeritus McMaster University
    >>>>>>> Hamilton, Ontario, Canada web:
    >>>>>>> https://socialsciences.mcmaster.ca/jfox/
    >>>>>>> 
    >>>>>>> On 2020-10-05 1:09 p.m., Ben Bolker wrote:
    >>>>>>>> ???? Am I confused, or doing something wrong, or
    >>>>>>>> ... ?
    >>>>>>>> 
    >>>>>>>> ???? I have qpdf installed, and am running R CMD
    >>>>>>>> build with --compact-vignettes, but the PDF in the
    >>>>>>>> tarball doesn't seem to be compressed despite the
    >>>>>>>> fact that the output messages say "compacting
    >>>>>>>> vignettes ..."
    >>>>>>>> 
    >>>>>>>> 
    >>>>>>>> ???? $ R CMD build --compact-vignettes lme4 *
    >>>>>>>> checking for file ?lme4/DESCRIPTION? ... OK *
    >>>>>>>> preparing ?lme4?: * checking DESCRIPTION
    >>>>>>>> meta-information ... OK * cleaning src * installing
    >>>>>>>> the package to process help pages * saving partial
    >>>>>>>> Rd database * creating vignettes ... OK Warning:
    >>>>>>>> ?inst/doc? files ?????? ?lmerperf.html?,
    >>>>>>>> ?lmer.pdf?, ?PLSvGLS.pdf?, ?Theory.pdf? ????
    >>>>>>>> ignored as vignettes have been rebuilt.  ???? Run R
    >>>>>>>> CMD build with --no-build-vignettes to prevent
    >>>>>>>> rebuilding.  * compacting vignettes and other PDF
    >>>>>>>> files * cleaning src * checking for LF line-endings
    >>>>>>>> in source and make files and shell scripts *
    >>>>>>>> checking for empty or unneeded directories *
    >>>>>>>> building ?lme4_1.1-24.tar.gz?
    >>>>>>>> 
    >>>>>>>> ???? The copy of lmer.pdf in the resulting tarball
    >>>>>>>> is 900K or so:
    >>>>>>>> 
    >>>>>>>> $ tar ztvf lme4_1.1-24.tar.gz
    >>>>>>>> lme4/inst/doc/lmer.pdf -rw-r--r-- bolker/bolker
    >>>>>>>> 907022 2020-10-05 12:59 lme4/inst/doc/lmer.pdf
    >>>>>>>> 
    >>>>>>>> ???? The previously built (and manually compacted)
    >>>>>>>> version of lmer.pdf in the tarball is 500K:
    >>>>>>>> 
    >>>>>>>> $ ls -l lme4/inst/doc/lmer.pdf -rw-r--r-- 1 bolker
    >>>>>>>> bolker 495199 Oct? 3 22:15 lme4/inst/doc/lmer.pdf
    >>>>>>>> 
    >>>>>>>> ????? Is 'R CMD build' confused by the presence of
    >>>>>>>> a pre-built PDF in the inst/doc directory? Or am I
    >>>>>>>> somehow mistaken about how this is supposed to
    >>>>>>>> work?
    >>>>>>>> 
    >>>>>>>> ????? I would just use --no-build-vignettes and
    >>>>>>>> submit the tarball with the previously
    >>>>>>>> built/compressed PDF, but I'm trying to avoid a
    >>>>>>>> "Package has a VignetteBuilder field but no
    >>>>>>>> prebuilt vignette index" NOTE, which I assume is
    >>>>>>>> missing because I built without building vignettes
    >>>>>>>> ... ?
    >>>>>>>> 
    >>>>>>>> ???? As always, enlightenment is welcome.
    >>>>>>>> 
    >>>>>>>> ???? cheers ?????? Ben Bolker
    >>>>>>>> 
    >>>>>>>> ______________________________________________
    >>>>>>>> R-package-devel at r-project.org mailing list
    >>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
    >>>>> 
    >>>>> ______________________________________________
    >>>>> R-package-devel at r-project.org mailing list
    >>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
    >>>>> 
    >>>> 
    >> 

    > ______________________________________________
    > R-package-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-package-devel


From j|ox @end|ng |rom mcm@@ter@c@  Thu Oct  8 17:10:30 2020
From: j|ox @end|ng |rom mcm@@ter@c@ (John Fox)
Date: Thu, 8 Oct 2020 11:10:30 -0400
Subject: [R-pkg-devel] is R CMD build --compact-vignettes working as
 expected?
In-Reply-To: <a0cb727b-779b-ec51-1669-f9af455bfd8f@gmail.com>
References: <28318_1601917804_095H9vQf016745_e34db7d9-28f0-36f3-0c8e-61e9586630d3@gmail.com>
 <6ae4e85e-bec1-19fd-efe9-61c8939b2416@mcmaster.ca>
 <fd783fc0-7024-9599-b219-22814e1c532b@gmail.com>
 <7e2538a1-8c1e-dd38-0741-5ba79c591668@mcmaster.ca>
 <776a00fd-694b-d5b9-87cf-e25d78d30eab@gmail.com>
 <3d06af38-dd61-ff8c-872f-cee9f26f4e1d@gmail.com>
 <def42f5f-53b3-1be0-1a95-44971323ba6e@gmail.com>
 <a0cb727b-779b-ec51-1669-f9af455bfd8f@gmail.com>
Message-ID: <cddbf8eb-e834-1eb7-1044-06ac0070c745@mcmaster.ca>

Dear Ben,

Actually, what I used was --compact-vignettes="both", with qpdf and gs 
installed on my Windows and Mac machines, and that apparently didn't 
work for me.

Best,
  John

On 2020-10-07 10:06 p.m., Ben Bolker wrote:
>  ? OK, I think I see the problem. tl;dr use --compact-vignettes="both" 
> when building the vignettes.
> 
>  ? --compact-vignettes? by default only tries qpdf.
> 
>  ? when the R CMD check --as-cran is run, it tries both qpdf and gs. 
> Since gs (apparently, in this case) compresses more aggressively than 
> qpdf, it succeeds in compressing further, and the check complains.
> 
>  From R CMD build --help:
> 
>  ?--compact-vignettes=? try to compact PDF files under inst/doc:
>  ??????????????????????? "no" (default), "qpdf", "gs", "gs+qpdf", "both"
>  ? --compact-vignettes?? same as --compact-vignettes=qpdf
> 
> 
>  ? I don't know if this is worth documenting somewhere, or modifying the 
> behaviour to make "both" the default for --compact-vignettes ?
> 
> 
> On 10/7/20 8:35 PM, Duncan Murdoch wrote:
>> On 07/10/2020 8:32 p.m., Ben Bolker wrote:
>>> ??? Thanks for the tip, I'll take a look.
>>>
>>> ??? Given that three relatively experienced package authors all seem to
>>> have experienced similar issues, it seems that maybe this is worth
>>> figuring out/maybe I'm not just doing something boneheaded.
>>
>> Just to clarify:? I've never noticed the problem you mention.? I just 
>> know how to debug R CMD build.
>>
>> Duncan
>>
>>>
>>> ??? cheers
>>> ????? Ben
>>>
>>> On 10/7/20 8:31 PM, Duncan Murdoch wrote:
>>>> I don't know the answer to your question, but you can debug the
>>>> --compact-vignettes option as follows.
>>>>
>>>> debug(tools::compactPDF)
>>>> tools:::.build_packages(c("--compact-vignettes", "pkgdir"))
>>>>
>>>> where "pkgdir" is the directory of the source of your package.? Add
>>>> extra options to the build as separate elements of the argument to
>>>> .build():? this function is called after args have been parsed.
>>>>
>>>> When I do that, I see that it rejects the compaction, because none of
>>>> mine benefit much from it:? it wants at least a 10% and 10K reduction.
>>>> But Ben's example met those criteria.? When I trick it into accepting
>>>> the compaction, it does put the compacted PDF into the tarball.
>>>>
>>>> Duncan Murdoch
>>>>
>>>> On 07/10/2020 6:03 p.m., John Fox wrote:
>>>>> Dear Ben,
>>>>>
>>>>> On 2020-10-07 5:26 p.m., Ben Bolker wrote:
>>>>>> ?? ? I hope so too. The (annoying) workaround is to compact the 
>>>>>> vignette
>>>>>> yourself (using qpdf directly or using tools::compactPDF), then use
>>>>>> no-build-vignettes.? The problem there is whatever's supposed to 
>>>>>> happen
>>>>>> with building vignette indices.? The uuuuugly workaround, I guess, 
>>>>>> is to
>>>>>> build the tarball, compact the vignettes oneself, then *replace* 
>>>>>> them in
>>>>>> the tarball.? (Obviously I can automate that, but it seems as 
>>>>>> though it
>>>>>> would be unnecessary if I knew what was going on ...)
>>>>>
>>>>> I've used both of these workarounds and agree that it would be nice to
>>>>> avoid them. After all, what is the --compact-vignettes argument for?
>>>>>
>>>>> Best,
>>>>> ??? John
>>>>>
>>>>>>
>>>>>> ?? ? cheers
>>>>>> ?? ?? Ben
>>>>>>
>>>>>>
>>>>>> On 10/7/20 4:10 PM, John Fox wrote:
>>>>>>> Dear Ben,
>>>>>>>
>>>>>>> I was hoping that someone would pick up on this problem, because 
>>>>>>> I've
>>>>>>> experienced the same issue of --compact-vignettes apparently 
>>>>>>> ignored,
>>>>>>> e.g., with the Rcmdr package under R 4.0.2 on both macOS and 
>>>>>>> Windows.
>>>>>>>
>>>>>>> Best,
>>>>>>> ????John
>>>>>>>
>>>>>>> John Fox, Professor Emeritus
>>>>>>> McMaster University
>>>>>>> Hamilton, Ontario, Canada
>>>>>>> web: https://socialsciences.mcmaster.ca/jfox/
>>>>>>>
>>>>>>> On 2020-10-05 1:09 p.m., Ben Bolker wrote:
>>>>>>>> ???? Am I confused, or doing something wrong, or ... ?
>>>>>>>>
>>>>>>>> ???? I have qpdf installed, and am running R CMD build with
>>>>>>>> --compact-vignettes, but the PDF in the tarball doesn't seem to be
>>>>>>>> compressed despite the fact that the output messages say 
>>>>>>>> "compacting
>>>>>>>> vignettes ..."
>>>>>>>>
>>>>>>>>
>>>>>>>> ???? $ R CMD build --compact-vignettes lme4
>>>>>>>> * checking for file ?lme4/DESCRIPTION? ... OK
>>>>>>>> * preparing ?lme4?:
>>>>>>>> * checking DESCRIPTION meta-information ... OK
>>>>>>>> * cleaning src
>>>>>>>> * installing the package to process help pages
>>>>>>>> * saving partial Rd database
>>>>>>>> * creating vignettes ... OK
>>>>>>>> Warning: ?inst/doc? files
>>>>>>>> ?????? ?lmerperf.html?, ?lmer.pdf?, ?PLSvGLS.pdf?, ?Theory.pdf?
>>>>>>>> ???? ignored as vignettes have been rebuilt.
>>>>>>>> ???? Run R CMD build with --no-build-vignettes to prevent 
>>>>>>>> rebuilding.
>>>>>>>> * compacting vignettes and other PDF files
>>>>>>>> * cleaning src
>>>>>>>> * checking for LF line-endings in source and make files and shell
>>>>>>>> scripts
>>>>>>>> * checking for empty or unneeded directories
>>>>>>>> * building ?lme4_1.1-24.tar.gz?
>>>>>>>>
>>>>>>>> ???? The copy of lmer.pdf in the resulting tarball is 900K or so:
>>>>>>>>
>>>>>>>> $ tar ztvf lme4_1.1-24.tar.gz lme4/inst/doc/lmer.pdf
>>>>>>>> -rw-r--r-- bolker/bolker 907022 2020-10-05 12:59
>>>>>>>> lme4/inst/doc/lmer.pdf
>>>>>>>>
>>>>>>>> ???? The previously built (and manually compacted) version of 
>>>>>>>> lmer.pdf
>>>>>>>> in the tarball is 500K:
>>>>>>>>
>>>>>>>> $ ls -l lme4/inst/doc/lmer.pdf
>>>>>>>> -rw-r--r-- 1 bolker bolker 495199 Oct? 3 22:15 
>>>>>>>> lme4/inst/doc/lmer.pdf
>>>>>>>>
>>>>>>>> ????? Is 'R CMD build' confused by the presence of a pre-built 
>>>>>>>> PDF in
>>>>>>>> the inst/doc directory? Or am I somehow mistaken about how this is
>>>>>>>> supposed to work?
>>>>>>>>
>>>>>>>> ????? I would just use --no-build-vignettes and submit the 
>>>>>>>> tarball with
>>>>>>>> the previously built/compressed PDF, but I'm trying to avoid a
>>>>>>>> "Package has a VignetteBuilder field but no prebuilt vignette 
>>>>>>>> index"
>>>>>>>> NOTE, which I assume is missing because I built without building
>>>>>>>> vignettes ... ?
>>>>>>>>
>>>>>>>> ???? As always, enlightenment is welcome.
>>>>>>>>
>>>>>>>> ???? cheers
>>>>>>>> ?????? Ben Bolker
>>>>>>>>
>>>>>>>> ______________________________________________
>>>>>>>> R-package-devel at r-project.org mailing list
>>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>>
>>>>> ______________________________________________
>>>>> R-package-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>>
>>>>
>>


From bbo|ker @end|ng |rom gm@||@com  Thu Oct  8 17:14:04 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Thu, 8 Oct 2020 11:14:04 -0400
Subject: [R-pkg-devel] is R CMD build --compact-vignettes working as
 expected?
In-Reply-To: <cddbf8eb-e834-1eb7-1044-06ac0070c745@mcmaster.ca>
References: <28318_1601917804_095H9vQf016745_e34db7d9-28f0-36f3-0c8e-61e9586630d3@gmail.com>
 <6ae4e85e-bec1-19fd-efe9-61c8939b2416@mcmaster.ca>
 <fd783fc0-7024-9599-b219-22814e1c532b@gmail.com>
 <7e2538a1-8c1e-dd38-0741-5ba79c591668@mcmaster.ca>
 <776a00fd-694b-d5b9-87cf-e25d78d30eab@gmail.com>
 <3d06af38-dd61-ff8c-872f-cee9f26f4e1d@gmail.com>
 <def42f5f-53b3-1be0-1a95-44971323ba6e@gmail.com>
 <a0cb727b-779b-ec51-1669-f9af455bfd8f@gmail.com>
 <cddbf8eb-e834-1eb7-1044-06ac0070c745@mcmaster.ca>
Message-ID: <2003a588-3b9c-4d0b-43e1-76d316ea60b7@gmail.com>

   Huh, weird. "both" worked for me.

   My debugging process involved instrumenting the compression function 
to report what it was doing (see below), rebuilding R, and running the 
build and check --as-cran processes again. (If the package you're 
experiencing problems with is public, feel free to point me to it and 
I'll try to take a look.)

   cheers
    Ben

Index: src/library/tools/R/admin.R
===================================================================
--- src/library/tools/R/admin.R	(revision 79311)
+++ src/library/tools/R/admin.R	(working copy)
@@ -1088,6 +1088,7 @@
          }
          if(!res && file.exists(tf)) {
              old <- file.size(p); new <-  file.size(tf)
+            cat(sprintf("compression: old=%f, new=%f, new/old=%f, 
old-new=%f",old, new, new/old,old-new),"\n")
              if(new/old < 0.9 && new < old - 1e4) {
                  file.copy(tf, p, overwrite = TRUE)
                  ans[p, ] <- c(old, new)


On 10/8/20 11:10 AM, John Fox wrote:
> Dear Ben,
> 
> Actually, what I used was --compact-vignettes="both", with qpdf and gs 
> installed on my Windows and Mac machines, and that apparently didn't 
> work for me.
> 
> Best,
>  ?John
> 
> On 2020-10-07 10:06 p.m., Ben Bolker wrote:
>> ?? OK, I think I see the problem. tl;dr use --compact-vignettes="both" 
>> when building the vignettes.
>>
>> ?? --compact-vignettes? by default only tries qpdf.
>>
>> ?? when the R CMD check --as-cran is run, it tries both qpdf and gs. 
>> Since gs (apparently, in this case) compresses more aggressively than 
>> qpdf, it succeeds in compressing further, and the check complains.
>>
>> ?From R CMD build --help:
>>
>> ??--compact-vignettes=? try to compact PDF files under inst/doc:
>> ???????????????????????? "no" (default), "qpdf", "gs", "gs+qpdf", "both"
>> ?? --compact-vignettes?? same as --compact-vignettes=qpdf
>>
>>
>> ?? I don't know if this is worth documenting somewhere, or modifying 
>> the behaviour to make "both" the default for --compact-vignettes ?
>>
>>
>> On 10/7/20 8:35 PM, Duncan Murdoch wrote:
>>> On 07/10/2020 8:32 p.m., Ben Bolker wrote:
>>>> ??? Thanks for the tip, I'll take a look.
>>>>
>>>> ??? Given that three relatively experienced package authors all seem to
>>>> have experienced similar issues, it seems that maybe this is worth
>>>> figuring out/maybe I'm not just doing something boneheaded.
>>>
>>> Just to clarify:? I've never noticed the problem you mention.? I just 
>>> know how to debug R CMD build.
>>>
>>> Duncan
>>>
>>>>
>>>> ??? cheers
>>>> ????? Ben
>>>>
>>>> On 10/7/20 8:31 PM, Duncan Murdoch wrote:
>>>>> I don't know the answer to your question, but you can debug the
>>>>> --compact-vignettes option as follows.
>>>>>
>>>>> debug(tools::compactPDF)
>>>>> tools:::.build_packages(c("--compact-vignettes", "pkgdir"))
>>>>>
>>>>> where "pkgdir" is the directory of the source of your package.? Add
>>>>> extra options to the build as separate elements of the argument to
>>>>> .build():? this function is called after args have been parsed.
>>>>>
>>>>> When I do that, I see that it rejects the compaction, because none of
>>>>> mine benefit much from it:? it wants at least a 10% and 10K reduction.
>>>>> But Ben's example met those criteria.? When I trick it into accepting
>>>>> the compaction, it does put the compacted PDF into the tarball.
>>>>>
>>>>> Duncan Murdoch
>>>>>
>>>>> On 07/10/2020 6:03 p.m., John Fox wrote:
>>>>>> Dear Ben,
>>>>>>
>>>>>> On 2020-10-07 5:26 p.m., Ben Bolker wrote:
>>>>>>> ?? ? I hope so too. The (annoying) workaround is to compact the 
>>>>>>> vignette
>>>>>>> yourself (using qpdf directly or using tools::compactPDF), then use
>>>>>>> no-build-vignettes.? The problem there is whatever's supposed to 
>>>>>>> happen
>>>>>>> with building vignette indices.? The uuuuugly workaround, I 
>>>>>>> guess, is to
>>>>>>> build the tarball, compact the vignettes oneself, then *replace* 
>>>>>>> them in
>>>>>>> the tarball.? (Obviously I can automate that, but it seems as 
>>>>>>> though it
>>>>>>> would be unnecessary if I knew what was going on ...)
>>>>>>
>>>>>> I've used both of these workarounds and agree that it would be 
>>>>>> nice to
>>>>>> avoid them. After all, what is the --compact-vignettes argument for?
>>>>>>
>>>>>> Best,
>>>>>> ??? John
>>>>>>
>>>>>>>
>>>>>>> ?? ? cheers
>>>>>>> ?? ?? Ben
>>>>>>>
>>>>>>>
>>>>>>> On 10/7/20 4:10 PM, John Fox wrote:
>>>>>>>> Dear Ben,
>>>>>>>>
>>>>>>>> I was hoping that someone would pick up on this problem, because 
>>>>>>>> I've
>>>>>>>> experienced the same issue of --compact-vignettes apparently 
>>>>>>>> ignored,
>>>>>>>> e.g., with the Rcmdr package under R 4.0.2 on both macOS and 
>>>>>>>> Windows.
>>>>>>>>
>>>>>>>> Best,
>>>>>>>> ????John
>>>>>>>>
>>>>>>>> John Fox, Professor Emeritus
>>>>>>>> McMaster University
>>>>>>>> Hamilton, Ontario, Canada
>>>>>>>> web: https://socialsciences.mcmaster.ca/jfox/
>>>>>>>>
>>>>>>>> On 2020-10-05 1:09 p.m., Ben Bolker wrote:
>>>>>>>>> ???? Am I confused, or doing something wrong, or ... ?
>>>>>>>>>
>>>>>>>>> ???? I have qpdf installed, and am running R CMD build with
>>>>>>>>> --compact-vignettes, but the PDF in the tarball doesn't seem to be
>>>>>>>>> compressed despite the fact that the output messages say 
>>>>>>>>> "compacting
>>>>>>>>> vignettes ..."
>>>>>>>>>
>>>>>>>>>
>>>>>>>>> ???? $ R CMD build --compact-vignettes lme4
>>>>>>>>> * checking for file ?lme4/DESCRIPTION? ... OK
>>>>>>>>> * preparing ?lme4?:
>>>>>>>>> * checking DESCRIPTION meta-information ... OK
>>>>>>>>> * cleaning src
>>>>>>>>> * installing the package to process help pages
>>>>>>>>> * saving partial Rd database
>>>>>>>>> * creating vignettes ... OK
>>>>>>>>> Warning: ?inst/doc? files
>>>>>>>>> ?????? ?lmerperf.html?, ?lmer.pdf?, ?PLSvGLS.pdf?, ?Theory.pdf?
>>>>>>>>> ???? ignored as vignettes have been rebuilt.
>>>>>>>>> ???? Run R CMD build with --no-build-vignettes to prevent 
>>>>>>>>> rebuilding.
>>>>>>>>> * compacting vignettes and other PDF files
>>>>>>>>> * cleaning src
>>>>>>>>> * checking for LF line-endings in source and make files and shell
>>>>>>>>> scripts
>>>>>>>>> * checking for empty or unneeded directories
>>>>>>>>> * building ?lme4_1.1-24.tar.gz?
>>>>>>>>>
>>>>>>>>> ???? The copy of lmer.pdf in the resulting tarball is 900K or so:
>>>>>>>>>
>>>>>>>>> $ tar ztvf lme4_1.1-24.tar.gz lme4/inst/doc/lmer.pdf
>>>>>>>>> -rw-r--r-- bolker/bolker 907022 2020-10-05 12:59
>>>>>>>>> lme4/inst/doc/lmer.pdf
>>>>>>>>>
>>>>>>>>> ???? The previously built (and manually compacted) version of 
>>>>>>>>> lmer.pdf
>>>>>>>>> in the tarball is 500K:
>>>>>>>>>
>>>>>>>>> $ ls -l lme4/inst/doc/lmer.pdf
>>>>>>>>> -rw-r--r-- 1 bolker bolker 495199 Oct? 3 22:15 
>>>>>>>>> lme4/inst/doc/lmer.pdf
>>>>>>>>>
>>>>>>>>> ????? Is 'R CMD build' confused by the presence of a pre-built 
>>>>>>>>> PDF in
>>>>>>>>> the inst/doc directory? Or am I somehow mistaken about how this is
>>>>>>>>> supposed to work?
>>>>>>>>>
>>>>>>>>> ????? I would just use --no-build-vignettes and submit the 
>>>>>>>>> tarball with
>>>>>>>>> the previously built/compressed PDF, but I'm trying to avoid a
>>>>>>>>> "Package has a VignetteBuilder field but no prebuilt vignette 
>>>>>>>>> index"
>>>>>>>>> NOTE, which I assume is missing because I built without building
>>>>>>>>> vignettes ... ?
>>>>>>>>>
>>>>>>>>> ???? As always, enlightenment is welcome.
>>>>>>>>>
>>>>>>>>> ???? cheers
>>>>>>>>> ?????? Ben Bolker
>>>>>>>>>
>>>>>>>>> ______________________________________________
>>>>>>>>> R-package-devel at r-project.org mailing list
>>>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>>>
>>>>>> ______________________________________________
>>>>>> R-package-devel at r-project.org mailing list
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>>>
>>>>>
>>>


From @|ngm@nn @end|ng |rom gm@||@com  Thu Oct  8 17:53:38 2020
From: @|ngm@nn @end|ng |rom gm@||@com (Henrik Singmann)
Date: Thu, 8 Oct 2020 17:53:38 +0200
Subject: [R-pkg-devel] is R CMD build --compact-vignettes working as
 expected?
In-Reply-To: <2003a588-3b9c-4d0b-43e1-76d316ea60b7@gmail.com>
References: <28318_1601917804_095H9vQf016745_e34db7d9-28f0-36f3-0c8e-61e9586630d3@gmail.com>
 <6ae4e85e-bec1-19fd-efe9-61c8939b2416@mcmaster.ca>
 <fd783fc0-7024-9599-b219-22814e1c532b@gmail.com>
 <7e2538a1-8c1e-dd38-0741-5ba79c591668@mcmaster.ca>
 <776a00fd-694b-d5b9-87cf-e25d78d30eab@gmail.com>
 <3d06af38-dd61-ff8c-872f-cee9f26f4e1d@gmail.com>
 <def42f5f-53b3-1be0-1a95-44971323ba6e@gmail.com>
 <a0cb727b-779b-ec51-1669-f9af455bfd8f@gmail.com>
 <cddbf8eb-e834-1eb7-1044-06ac0070c745@mcmaster.ca>
 <2003a588-3b9c-4d0b-43e1-76d316ea60b7@gmail.com>
Message-ID: <CA+rDMK+OtwagOh-rT1WiFHcLoQ0Jf-MJS_q4NbdmBf+nsGg9iw@mail.gmail.com>

Hi both,

I am not sure if this might be the issue here, but I think on both
Linux and Windows I need to use the both option without quotation
marks: --compact-vignettes=both

Best,
Henrik


Am Do., 8. Okt. 2020 um 17:21 Uhr schrieb Ben Bolker <bbolker at gmail.com>:
>
>    Huh, weird. "both" worked for me.
>
>    My debugging process involved instrumenting the compression function
> to report what it was doing (see below), rebuilding R, and running the
> build and check --as-cran processes again. (If the package you're
> experiencing problems with is public, feel free to point me to it and
> I'll try to take a look.)
>
>    cheers
>     Ben
>
> Index: src/library/tools/R/admin.R
> ===================================================================
> --- src/library/tools/R/admin.R (revision 79311)
> +++ src/library/tools/R/admin.R (working copy)
> @@ -1088,6 +1088,7 @@
>           }
>           if(!res && file.exists(tf)) {
>               old <- file.size(p); new <-  file.size(tf)
> +            cat(sprintf("compression: old=%f, new=%f, new/old=%f,
> old-new=%f",old, new, new/old,old-new),"\n")
>               if(new/old < 0.9 && new < old - 1e4) {
>                   file.copy(tf, p, overwrite = TRUE)
>                   ans[p, ] <- c(old, new)
>
>
> On 10/8/20 11:10 AM, John Fox wrote:
> > Dear Ben,
> >
> > Actually, what I used was --compact-vignettes="both", with qpdf and gs
> > installed on my Windows and Mac machines, and that apparently didn't
> > work for me.
> >
> > Best,
> >   John
> >
> > On 2020-10-07 10:06 p.m., Ben Bolker wrote:
> >>    OK, I think I see the problem. tl;dr use --compact-vignettes="both"
> >> when building the vignettes.
> >>
> >>    --compact-vignettes  by default only tries qpdf.
> >>
> >>    when the R CMD check --as-cran is run, it tries both qpdf and gs.
> >> Since gs (apparently, in this case) compresses more aggressively than
> >> qpdf, it succeeds in compressing further, and the check complains.
> >>
> >>  From R CMD build --help:
> >>
> >>   --compact-vignettes=  try to compact PDF files under inst/doc:
> >>                          "no" (default), "qpdf", "gs", "gs+qpdf", "both"
> >>    --compact-vignettes   same as --compact-vignettes=qpdf
> >>
> >>
> >>    I don't know if this is worth documenting somewhere, or modifying
> >> the behaviour to make "both" the default for --compact-vignettes ?
> >>
> >>
> >> On 10/7/20 8:35 PM, Duncan Murdoch wrote:
> >>> On 07/10/2020 8:32 p.m., Ben Bolker wrote:
> >>>>     Thanks for the tip, I'll take a look.
> >>>>
> >>>>     Given that three relatively experienced package authors all seem to
> >>>> have experienced similar issues, it seems that maybe this is worth
> >>>> figuring out/maybe I'm not just doing something boneheaded.
> >>>
> >>> Just to clarify:  I've never noticed the problem you mention.  I just
> >>> know how to debug R CMD build.
> >>>
> >>> Duncan
> >>>
> >>>>
> >>>>     cheers
> >>>>       Ben
> >>>>
> >>>> On 10/7/20 8:31 PM, Duncan Murdoch wrote:
> >>>>> I don't know the answer to your question, but you can debug the
> >>>>> --compact-vignettes option as follows.
> >>>>>
> >>>>> debug(tools::compactPDF)
> >>>>> tools:::.build_packages(c("--compact-vignettes", "pkgdir"))
> >>>>>
> >>>>> where "pkgdir" is the directory of the source of your package.  Add
> >>>>> extra options to the build as separate elements of the argument to
> >>>>> .build():  this function is called after args have been parsed.
> >>>>>
> >>>>> When I do that, I see that it rejects the compaction, because none of
> >>>>> mine benefit much from it:  it wants at least a 10% and 10K reduction.
> >>>>> But Ben's example met those criteria.  When I trick it into accepting
> >>>>> the compaction, it does put the compacted PDF into the tarball.
> >>>>>
> >>>>> Duncan Murdoch
> >>>>>
> >>>>> On 07/10/2020 6:03 p.m., John Fox wrote:
> >>>>>> Dear Ben,
> >>>>>>
> >>>>>> On 2020-10-07 5:26 p.m., Ben Bolker wrote:
> >>>>>>>      I hope so too. The (annoying) workaround is to compact the
> >>>>>>> vignette
> >>>>>>> yourself (using qpdf directly or using tools::compactPDF), then use
> >>>>>>> no-build-vignettes.  The problem there is whatever's supposed to
> >>>>>>> happen
> >>>>>>> with building vignette indices.  The uuuuugly workaround, I
> >>>>>>> guess, is to
> >>>>>>> build the tarball, compact the vignettes oneself, then *replace*
> >>>>>>> them in
> >>>>>>> the tarball.  (Obviously I can automate that, but it seems as
> >>>>>>> though it
> >>>>>>> would be unnecessary if I knew what was going on ...)
> >>>>>>
> >>>>>> I've used both of these workarounds and agree that it would be
> >>>>>> nice to
> >>>>>> avoid them. After all, what is the --compact-vignettes argument for?
> >>>>>>
> >>>>>> Best,
> >>>>>>     John
> >>>>>>
> >>>>>>>
> >>>>>>>      cheers
> >>>>>>>       Ben
> >>>>>>>
> >>>>>>>
> >>>>>>> On 10/7/20 4:10 PM, John Fox wrote:
> >>>>>>>> Dear Ben,
> >>>>>>>>
> >>>>>>>> I was hoping that someone would pick up on this problem, because
> >>>>>>>> I've
> >>>>>>>> experienced the same issue of --compact-vignettes apparently
> >>>>>>>> ignored,
> >>>>>>>> e.g., with the Rcmdr package under R 4.0.2 on both macOS and
> >>>>>>>> Windows.
> >>>>>>>>
> >>>>>>>> Best,
> >>>>>>>>     John
> >>>>>>>>
> >>>>>>>> John Fox, Professor Emeritus
> >>>>>>>> McMaster University
> >>>>>>>> Hamilton, Ontario, Canada
> >>>>>>>> web: https://socialsciences.mcmaster.ca/jfox/
> >>>>>>>>
> >>>>>>>> On 2020-10-05 1:09 p.m., Ben Bolker wrote:
> >>>>>>>>>      Am I confused, or doing something wrong, or ... ?
> >>>>>>>>>
> >>>>>>>>>      I have qpdf installed, and am running R CMD build with
> >>>>>>>>> --compact-vignettes, but the PDF in the tarball doesn't seem to be
> >>>>>>>>> compressed despite the fact that the output messages say
> >>>>>>>>> "compacting
> >>>>>>>>> vignettes ..."
> >>>>>>>>>
> >>>>>>>>>
> >>>>>>>>>      $ R CMD build --compact-vignettes lme4
> >>>>>>>>> * checking for file ?lme4/DESCRIPTION? ... OK
> >>>>>>>>> * preparing ?lme4?:
> >>>>>>>>> * checking DESCRIPTION meta-information ... OK
> >>>>>>>>> * cleaning src
> >>>>>>>>> * installing the package to process help pages
> >>>>>>>>> * saving partial Rd database
> >>>>>>>>> * creating vignettes ... OK
> >>>>>>>>> Warning: ?inst/doc? files
> >>>>>>>>>        ?lmerperf.html?, ?lmer.pdf?, ?PLSvGLS.pdf?, ?Theory.pdf?
> >>>>>>>>>      ignored as vignettes have been rebuilt.
> >>>>>>>>>      Run R CMD build with --no-build-vignettes to prevent
> >>>>>>>>> rebuilding.
> >>>>>>>>> * compacting vignettes and other PDF files
> >>>>>>>>> * cleaning src
> >>>>>>>>> * checking for LF line-endings in source and make files and shell
> >>>>>>>>> scripts
> >>>>>>>>> * checking for empty or unneeded directories
> >>>>>>>>> * building ?lme4_1.1-24.tar.gz?
> >>>>>>>>>
> >>>>>>>>>      The copy of lmer.pdf in the resulting tarball is 900K or so:
> >>>>>>>>>
> >>>>>>>>> $ tar ztvf lme4_1.1-24.tar.gz lme4/inst/doc/lmer.pdf
> >>>>>>>>> -rw-r--r-- bolker/bolker 907022 2020-10-05 12:59
> >>>>>>>>> lme4/inst/doc/lmer.pdf
> >>>>>>>>>
> >>>>>>>>>      The previously built (and manually compacted) version of
> >>>>>>>>> lmer.pdf
> >>>>>>>>> in the tarball is 500K:
> >>>>>>>>>
> >>>>>>>>> $ ls -l lme4/inst/doc/lmer.pdf
> >>>>>>>>> -rw-r--r-- 1 bolker bolker 495199 Oct  3 22:15
> >>>>>>>>> lme4/inst/doc/lmer.pdf
> >>>>>>>>>
> >>>>>>>>>       Is 'R CMD build' confused by the presence of a pre-built
> >>>>>>>>> PDF in
> >>>>>>>>> the inst/doc directory? Or am I somehow mistaken about how this is
> >>>>>>>>> supposed to work?
> >>>>>>>>>
> >>>>>>>>>       I would just use --no-build-vignettes and submit the
> >>>>>>>>> tarball with
> >>>>>>>>> the previously built/compressed PDF, but I'm trying to avoid a
> >>>>>>>>> "Package has a VignetteBuilder field but no prebuilt vignette
> >>>>>>>>> index"
> >>>>>>>>> NOTE, which I assume is missing because I built without building
> >>>>>>>>> vignettes ... ?
> >>>>>>>>>
> >>>>>>>>>      As always, enlightenment is welcome.
> >>>>>>>>>
> >>>>>>>>>      cheers
> >>>>>>>>>        Ben Bolker
> >>>>>>>>>
> >>>>>>>>> ______________________________________________
> >>>>>>>>> R-package-devel at r-project.org mailing list
> >>>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>>>>>
> >>>>>> ______________________________________________
> >>>>>> R-package-devel at r-project.org mailing list
> >>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>>>>>
> >>>>>
> >>>
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel



-- 
Dr. Henrik Singmann
Lecturer, Experimental Psychology
University College London (UCL), UK
http://singmann.org


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu Oct  8 18:06:12 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 8 Oct 2020 12:06:12 -0400
Subject: [R-pkg-devel] is R CMD build --compact-vignettes working as
 expected?
In-Reply-To: <cddbf8eb-e834-1eb7-1044-06ac0070c745@mcmaster.ca>
References: <28318_1601917804_095H9vQf016745_e34db7d9-28f0-36f3-0c8e-61e9586630d3@gmail.com>
 <6ae4e85e-bec1-19fd-efe9-61c8939b2416@mcmaster.ca>
 <fd783fc0-7024-9599-b219-22814e1c532b@gmail.com>
 <7e2538a1-8c1e-dd38-0741-5ba79c591668@mcmaster.ca>
 <776a00fd-694b-d5b9-87cf-e25d78d30eab@gmail.com>
 <3d06af38-dd61-ff8c-872f-cee9f26f4e1d@gmail.com>
 <def42f5f-53b3-1be0-1a95-44971323ba6e@gmail.com>
 <a0cb727b-779b-ec51-1669-f9af455bfd8f@gmail.com>
 <cddbf8eb-e834-1eb7-1044-06ac0070c745@mcmaster.ca>
Message-ID: <1229eef2-c765-3d9c-edb2-d6abeeaf900b@gmail.com>

When I tried that on MacOS, it did the gs compression with gs_quality 
set to "none", which does nothing.  I don't know what quality CRAN uses, 
but for me setting the environment variable GS_QUALITY=screen made a big 
difference.

Duncan Murdoch

On 08/10/2020 11:10 a.m., John Fox wrote:
> Dear Ben,
> 
> Actually, what I used was --compact-vignettes="both", with qpdf and gs
> installed on my Windows and Mac machines, and that apparently didn't
> work for me.
> 
> Best,
>    John
> 
> On 2020-10-07 10:06 p.m., Ben Bolker wrote:
>>   ? OK, I think I see the problem. tl;dr use --compact-vignettes="both"
>> when building the vignettes.
>>
>>   ? --compact-vignettes? by default only tries qpdf.
>>
>>   ? when the R CMD check --as-cran is run, it tries both qpdf and gs.
>> Since gs (apparently, in this case) compresses more aggressively than
>> qpdf, it succeeds in compressing further, and the check complains.
>>
>>   From R CMD build --help:
>>
>>   ?--compact-vignettes=? try to compact PDF files under inst/doc:
>>   ??????????????????????? "no" (default), "qpdf", "gs", "gs+qpdf", "both"
>>   ? --compact-vignettes?? same as --compact-vignettes=qpdf
>>
>>
>>   ? I don't know if this is worth documenting somewhere, or modifying the
>> behaviour to make "both" the default for --compact-vignettes ?
>>
>>
>> On 10/7/20 8:35 PM, Duncan Murdoch wrote:
>>> On 07/10/2020 8:32 p.m., Ben Bolker wrote:
>>>>  ??? Thanks for the tip, I'll take a look.
>>>>
>>>>  ??? Given that three relatively experienced package authors all seem to
>>>> have experienced similar issues, it seems that maybe this is worth
>>>> figuring out/maybe I'm not just doing something boneheaded.
>>>
>>> Just to clarify:? I've never noticed the problem you mention.? I just
>>> know how to debug R CMD build.
>>>
>>> Duncan
>>>
>>>>
>>>>  ??? cheers
>>>>  ????? Ben
>>>>
>>>> On 10/7/20 8:31 PM, Duncan Murdoch wrote:
>>>>> I don't know the answer to your question, but you can debug the
>>>>> --compact-vignettes option as follows.
>>>>>
>>>>> debug(tools::compactPDF)
>>>>> tools:::.build_packages(c("--compact-vignettes", "pkgdir"))
>>>>>
>>>>> where "pkgdir" is the directory of the source of your package.? Add
>>>>> extra options to the build as separate elements of the argument to
>>>>> .build():? this function is called after args have been parsed.
>>>>>
>>>>> When I do that, I see that it rejects the compaction, because none of
>>>>> mine benefit much from it:? it wants at least a 10% and 10K reduction.
>>>>> But Ben's example met those criteria.? When I trick it into accepting
>>>>> the compaction, it does put the compacted PDF into the tarball.
>>>>>
>>>>> Duncan Murdoch
>>>>>
>>>>> On 07/10/2020 6:03 p.m., John Fox wrote:
>>>>>> Dear Ben,
>>>>>>
>>>>>> On 2020-10-07 5:26 p.m., Ben Bolker wrote:
>>>>>>>  ?? ? I hope so too. The (annoying) workaround is to compact the
>>>>>>> vignette
>>>>>>> yourself (using qpdf directly or using tools::compactPDF), then use
>>>>>>> no-build-vignettes.? The problem there is whatever's supposed to
>>>>>>> happen
>>>>>>> with building vignette indices.? The uuuuugly workaround, I guess,
>>>>>>> is to
>>>>>>> build the tarball, compact the vignettes oneself, then *replace*
>>>>>>> them in
>>>>>>> the tarball.? (Obviously I can automate that, but it seems as
>>>>>>> though it
>>>>>>> would be unnecessary if I knew what was going on ...)
>>>>>>
>>>>>> I've used both of these workarounds and agree that it would be nice to
>>>>>> avoid them. After all, what is the --compact-vignettes argument for?
>>>>>>
>>>>>> Best,
>>>>>>  ??? John
>>>>>>
>>>>>>>
>>>>>>>  ?? ? cheers
>>>>>>>  ?? ?? Ben
>>>>>>>
>>>>>>>
>>>>>>> On 10/7/20 4:10 PM, John Fox wrote:
>>>>>>>> Dear Ben,
>>>>>>>>
>>>>>>>> I was hoping that someone would pick up on this problem, because
>>>>>>>> I've
>>>>>>>> experienced the same issue of --compact-vignettes apparently
>>>>>>>> ignored,
>>>>>>>> e.g., with the Rcmdr package under R 4.0.2 on both macOS and
>>>>>>>> Windows.
>>>>>>>>
>>>>>>>> Best,
>>>>>>>>  ????John
>>>>>>>>
>>>>>>>> John Fox, Professor Emeritus
>>>>>>>> McMaster University
>>>>>>>> Hamilton, Ontario, Canada
>>>>>>>> web: https://socialsciences.mcmaster.ca/jfox/
>>>>>>>>
>>>>>>>> On 2020-10-05 1:09 p.m., Ben Bolker wrote:
>>>>>>>>>  ???? Am I confused, or doing something wrong, or ... ?
>>>>>>>>>
>>>>>>>>>  ???? I have qpdf installed, and am running R CMD build with
>>>>>>>>> --compact-vignettes, but the PDF in the tarball doesn't seem to be
>>>>>>>>> compressed despite the fact that the output messages say
>>>>>>>>> "compacting
>>>>>>>>> vignettes ..."
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>  ???? $ R CMD build --compact-vignettes lme4
>>>>>>>>> * checking for file ?lme4/DESCRIPTION? ... OK
>>>>>>>>> * preparing ?lme4?:
>>>>>>>>> * checking DESCRIPTION meta-information ... OK
>>>>>>>>> * cleaning src
>>>>>>>>> * installing the package to process help pages
>>>>>>>>> * saving partial Rd database
>>>>>>>>> * creating vignettes ... OK
>>>>>>>>> Warning: ?inst/doc? files
>>>>>>>>>  ?????? ?lmerperf.html?, ?lmer.pdf?, ?PLSvGLS.pdf?, ?Theory.pdf?
>>>>>>>>>  ???? ignored as vignettes have been rebuilt.
>>>>>>>>>  ???? Run R CMD build with --no-build-vignettes to prevent
>>>>>>>>> rebuilding.
>>>>>>>>> * compacting vignettes and other PDF files
>>>>>>>>> * cleaning src
>>>>>>>>> * checking for LF line-endings in source and make files and shell
>>>>>>>>> scripts
>>>>>>>>> * checking for empty or unneeded directories
>>>>>>>>> * building ?lme4_1.1-24.tar.gz?
>>>>>>>>>
>>>>>>>>>  ???? The copy of lmer.pdf in the resulting tarball is 900K or so:
>>>>>>>>>
>>>>>>>>> $ tar ztvf lme4_1.1-24.tar.gz lme4/inst/doc/lmer.pdf
>>>>>>>>> -rw-r--r-- bolker/bolker 907022 2020-10-05 12:59
>>>>>>>>> lme4/inst/doc/lmer.pdf
>>>>>>>>>
>>>>>>>>>  ???? The previously built (and manually compacted) version of
>>>>>>>>> lmer.pdf
>>>>>>>>> in the tarball is 500K:
>>>>>>>>>
>>>>>>>>> $ ls -l lme4/inst/doc/lmer.pdf
>>>>>>>>> -rw-r--r-- 1 bolker bolker 495199 Oct? 3 22:15
>>>>>>>>> lme4/inst/doc/lmer.pdf
>>>>>>>>>
>>>>>>>>>  ????? Is 'R CMD build' confused by the presence of a pre-built
>>>>>>>>> PDF in
>>>>>>>>> the inst/doc directory? Or am I somehow mistaken about how this is
>>>>>>>>> supposed to work?
>>>>>>>>>
>>>>>>>>>  ????? I would just use --no-build-vignettes and submit the
>>>>>>>>> tarball with
>>>>>>>>> the previously built/compressed PDF, but I'm trying to avoid a
>>>>>>>>> "Package has a VignetteBuilder field but no prebuilt vignette
>>>>>>>>> index"
>>>>>>>>> NOTE, which I assume is missing because I built without building
>>>>>>>>> vignettes ... ?
>>>>>>>>>
>>>>>>>>>  ???? As always, enlightenment is welcome.
>>>>>>>>>
>>>>>>>>>  ???? cheers
>>>>>>>>>  ?????? Ben Bolker
>>>>>>>>>
>>>>>>>>> ______________________________________________
>>>>>>>>> R-package-devel at r-project.org mailing list
>>>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>>>
>>>>>> ______________________________________________
>>>>>> R-package-devel at r-project.org mailing list
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>>>
>>>>>
>>>


From j|ox @end|ng |rom mcm@@ter@c@  Thu Oct  8 19:21:15 2020
From: j|ox @end|ng |rom mcm@@ter@c@ (John Fox)
Date: Thu, 8 Oct 2020 13:21:15 -0400
Subject: [R-pkg-devel] is R CMD build --compact-vignettes working as
 expected?
In-Reply-To: <1229eef2-c765-3d9c-edb2-d6abeeaf900b@gmail.com>
References: <28318_1601917804_095H9vQf016745_e34db7d9-28f0-36f3-0c8e-61e9586630d3@gmail.com>
 <6ae4e85e-bec1-19fd-efe9-61c8939b2416@mcmaster.ca>
 <fd783fc0-7024-9599-b219-22814e1c532b@gmail.com>
 <7e2538a1-8c1e-dd38-0741-5ba79c591668@mcmaster.ca>
 <776a00fd-694b-d5b9-87cf-e25d78d30eab@gmail.com>
 <3d06af38-dd61-ff8c-872f-cee9f26f4e1d@gmail.com>
 <def42f5f-53b3-1be0-1a95-44971323ba6e@gmail.com>
 <a0cb727b-779b-ec51-1669-f9af455bfd8f@gmail.com>
 <cddbf8eb-e834-1eb7-1044-06ac0070c745@mcmaster.ca>
 <1229eef2-c765-3d9c-edb2-d6abeeaf900b@gmail.com>
Message-ID: <de1e7856-be5f-b6e1-315a-12a8c01037a5@mcmaster.ca>

Dear all,

First, thank you to everyone who responded.

Let me be more specific about what I did, focusing on macOS (since I did 
most of this on Windows too):

(1) I observed the problem with the Rcmdr package, including version 
2.7-1, which is newly on CRAN. Presumably, it wouldn't be hard to 
duplicate what I did.

(2) I previously tried both --compact-vignettes="both", 
--compact-vignettes=both, and also just --compact-vignettes. R CMD build 
says that it's "* compacting vignettes and other PDF files", and R CMD 
check --as-cran doesn't complain, reporting "* checking sizes of PDF 
files under ?inst/doc? ... OK."

(3) Nothing changes when, following Duncan's advice, I set GS_QUALITY=screen

In the tarball built by R CMD build, the vignette in 
inst/doc/Getting-Started-with-the-Rcmdr.pdf is 1.6 MB. When I compacted 
the vignette with Adobe Acrobat, it was reduced to 395 KB.

Putting all of this together, I suspect that Acrobat may just do a 
better job than gs and qpdf.

Best,
  John


On 2020-10-08 12:06 p.m., Duncan Murdoch wrote:
> When I tried that on MacOS, it did the gs compression with gs_quality 
> set to "none", which does nothing.? I don't know what quality CRAN uses, 
> but for me setting the environment variable GS_QUALITY=screen made a big 
> difference.
> 
> Duncan Murdoch
> 
> On 08/10/2020 11:10 a.m., John Fox wrote:
>> Dear Ben,
>>
>> Actually, what I used was --compact-vignettes="both", with qpdf and gs
>> installed on my Windows and Mac machines, and that apparently didn't
>> work for me.
>>
>> Best,
>> ?? John
>>
>> On 2020-10-07 10:06 p.m., Ben Bolker wrote:
>>> ? ? OK, I think I see the problem. tl;dr use --compact-vignettes="both"
>>> when building the vignettes.
>>>
>>> ? ? --compact-vignettes? by default only tries qpdf.
>>>
>>> ? ? when the R CMD check --as-cran is run, it tries both qpdf and gs.
>>> Since gs (apparently, in this case) compresses more aggressively than
>>> qpdf, it succeeds in compressing further, and the check complains.
>>>
>>> ? From R CMD build --help:
>>>
>>> ? ?--compact-vignettes=? try to compact PDF files under inst/doc:
>>> ? ??????????????????????? "no" (default), "qpdf", "gs", "gs+qpdf", 
>>> "both"
>>> ? ? --compact-vignettes?? same as --compact-vignettes=qpdf
>>>
>>>
>>> ? ? I don't know if this is worth documenting somewhere, or modifying 
>>> the
>>> behaviour to make "both" the default for --compact-vignettes ?
>>>
>>>
>>> On 10/7/20 8:35 PM, Duncan Murdoch wrote:
>>>> On 07/10/2020 8:32 p.m., Ben Bolker wrote:
>>>>> ???? Thanks for the tip, I'll take a look.
>>>>>
>>>>> ???? Given that three relatively experienced package authors all 
>>>>> seem to
>>>>> have experienced similar issues, it seems that maybe this is worth
>>>>> figuring out/maybe I'm not just doing something boneheaded.
>>>>
>>>> Just to clarify:? I've never noticed the problem you mention.? I just
>>>> know how to debug R CMD build.
>>>>
>>>> Duncan
>>>>
>>>>>
>>>>> ???? cheers
>>>>> ?????? Ben
>>>>>
>>>>> On 10/7/20 8:31 PM, Duncan Murdoch wrote:
>>>>>> I don't know the answer to your question, but you can debug the
>>>>>> --compact-vignettes option as follows.
>>>>>>
>>>>>> debug(tools::compactPDF)
>>>>>> tools:::.build_packages(c("--compact-vignettes", "pkgdir"))
>>>>>>
>>>>>> where "pkgdir" is the directory of the source of your package.? Add
>>>>>> extra options to the build as separate elements of the argument to
>>>>>> .build():? this function is called after args have been parsed.
>>>>>>
>>>>>> When I do that, I see that it rejects the compaction, because none of
>>>>>> mine benefit much from it:? it wants at least a 10% and 10K 
>>>>>> reduction.
>>>>>> But Ben's example met those criteria.? When I trick it into accepting
>>>>>> the compaction, it does put the compacted PDF into the tarball.
>>>>>>
>>>>>> Duncan Murdoch
>>>>>>
>>>>>> On 07/10/2020 6:03 p.m., John Fox wrote:
>>>>>>> Dear Ben,
>>>>>>>
>>>>>>> On 2020-10-07 5:26 p.m., Ben Bolker wrote:
>>>>>>>> ??? ? I hope so too. The (annoying) workaround is to compact the
>>>>>>>> vignette
>>>>>>>> yourself (using qpdf directly or using tools::compactPDF), then use
>>>>>>>> no-build-vignettes.? The problem there is whatever's supposed to
>>>>>>>> happen
>>>>>>>> with building vignette indices.? The uuuuugly workaround, I guess,
>>>>>>>> is to
>>>>>>>> build the tarball, compact the vignettes oneself, then *replace*
>>>>>>>> them in
>>>>>>>> the tarball.? (Obviously I can automate that, but it seems as
>>>>>>>> though it
>>>>>>>> would be unnecessary if I knew what was going on ...)
>>>>>>>
>>>>>>> I've used both of these workarounds and agree that it would be 
>>>>>>> nice to
>>>>>>> avoid them. After all, what is the --compact-vignettes argument for?
>>>>>>>
>>>>>>> Best,
>>>>>>> ???? John
>>>>>>>
>>>>>>>>
>>>>>>>> ??? ? cheers
>>>>>>>> ??? ?? Ben
>>>>>>>>
>>>>>>>>
>>>>>>>> On 10/7/20 4:10 PM, John Fox wrote:
>>>>>>>>> Dear Ben,
>>>>>>>>>
>>>>>>>>> I was hoping that someone would pick up on this problem, because
>>>>>>>>> I've
>>>>>>>>> experienced the same issue of --compact-vignettes apparently
>>>>>>>>> ignored,
>>>>>>>>> e.g., with the Rcmdr package under R 4.0.2 on both macOS and
>>>>>>>>> Windows.
>>>>>>>>>
>>>>>>>>> Best,
>>>>>>>>> ?????John
>>>>>>>>>
>>>>>>>>> John Fox, Professor Emeritus
>>>>>>>>> McMaster University
>>>>>>>>> Hamilton, Ontario, Canada
>>>>>>>>> web: https://socialsciences.mcmaster.ca/jfox/
>>>>>>>>>
>>>>>>>>> On 2020-10-05 1:09 p.m., Ben Bolker wrote:
>>>>>>>>>> ????? Am I confused, or doing something wrong, or ... ?
>>>>>>>>>>
>>>>>>>>>> ????? I have qpdf installed, and am running R CMD build with
>>>>>>>>>> --compact-vignettes, but the PDF in the tarball doesn't seem 
>>>>>>>>>> to be
>>>>>>>>>> compressed despite the fact that the output messages say
>>>>>>>>>> "compacting
>>>>>>>>>> vignettes ..."
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>> ????? $ R CMD build --compact-vignettes lme4
>>>>>>>>>> * checking for file ?lme4/DESCRIPTION? ... OK
>>>>>>>>>> * preparing ?lme4?:
>>>>>>>>>> * checking DESCRIPTION meta-information ... OK
>>>>>>>>>> * cleaning src
>>>>>>>>>> * installing the package to process help pages
>>>>>>>>>> * saving partial Rd database
>>>>>>>>>> * creating vignettes ... OK
>>>>>>>>>> Warning: ?inst/doc? files
>>>>>>>>>> ??????? ?lmerperf.html?, ?lmer.pdf?, ?PLSvGLS.pdf?, ?Theory.pdf?
>>>>>>>>>> ????? ignored as vignettes have been rebuilt.
>>>>>>>>>> ????? Run R CMD build with --no-build-vignettes to prevent
>>>>>>>>>> rebuilding.
>>>>>>>>>> * compacting vignettes and other PDF files
>>>>>>>>>> * cleaning src
>>>>>>>>>> * checking for LF line-endings in source and make files and shell
>>>>>>>>>> scripts
>>>>>>>>>> * checking for empty or unneeded directories
>>>>>>>>>> * building ?lme4_1.1-24.tar.gz?
>>>>>>>>>>
>>>>>>>>>> ????? The copy of lmer.pdf in the resulting tarball is 900K or 
>>>>>>>>>> so:
>>>>>>>>>>
>>>>>>>>>> $ tar ztvf lme4_1.1-24.tar.gz lme4/inst/doc/lmer.pdf
>>>>>>>>>> -rw-r--r-- bolker/bolker 907022 2020-10-05 12:59
>>>>>>>>>> lme4/inst/doc/lmer.pdf
>>>>>>>>>>
>>>>>>>>>> ????? The previously built (and manually compacted) version of
>>>>>>>>>> lmer.pdf
>>>>>>>>>> in the tarball is 500K:
>>>>>>>>>>
>>>>>>>>>> $ ls -l lme4/inst/doc/lmer.pdf
>>>>>>>>>> -rw-r--r-- 1 bolker bolker 495199 Oct? 3 22:15
>>>>>>>>>> lme4/inst/doc/lmer.pdf
>>>>>>>>>>
>>>>>>>>>> ?????? Is 'R CMD build' confused by the presence of a pre-built
>>>>>>>>>> PDF in
>>>>>>>>>> the inst/doc directory? Or am I somehow mistaken about how 
>>>>>>>>>> this is
>>>>>>>>>> supposed to work?
>>>>>>>>>>
>>>>>>>>>> ?????? I would just use --no-build-vignettes and submit the
>>>>>>>>>> tarball with
>>>>>>>>>> the previously built/compressed PDF, but I'm trying to avoid a
>>>>>>>>>> "Package has a VignetteBuilder field but no prebuilt vignette
>>>>>>>>>> index"
>>>>>>>>>> NOTE, which I assume is missing because I built without building
>>>>>>>>>> vignettes ... ?
>>>>>>>>>>
>>>>>>>>>> ????? As always, enlightenment is welcome.
>>>>>>>>>>
>>>>>>>>>> ????? cheers
>>>>>>>>>> ??????? Ben Bolker
>>>>>>>>>>
>>>>>>>>>> ______________________________________________
>>>>>>>>>> R-package-devel at r-project.org mailing list
>>>>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>>>>
>>>>>>> ______________________________________________
>>>>>>> R-package-devel at r-project.org mailing list
>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>>>>
>>>>>>
>>>>
> 

-- 
John Fox, Professor Emeritus
McMaster University
Hamilton, Ontario, Canada
web: https://socialsciences.mcmaster.ca/jfox/


From r@@y@|@14 @end|ng |rom |mper|@|@@c@uk  Fri Oct  9 14:05:46 2020
From: r@@y@|@14 @end|ng |rom |mper|@|@@c@uk (Ayala Hernandez, Rafael)
Date: Fri, 9 Oct 2020 12:05:46 +0000
Subject: [R-pkg-devel] rlang not available on Windows builder machine with
 R-devel
Message-ID: <DB7PR06MB5881E0129641C6E132B2CCD9CC080@DB7PR06MB5881.eurprd06.prod.outlook.com>

Dear all,

My NutrienTrackeR package has recently failed to install on the Windows builder machine with R-devel, with an error saying 'rlang' is not available (https://www.r-project.org/nosvn/R.check/r-devel-windows-ix86+x86_64/NutrienTrackeR-00install.html).

Is this something I could fix on my side, or is it just on the builder machine's side?

Thanks a lot in advance

Best wishes,

Rafa

	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Fri Oct  9 14:30:02 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Fri, 9 Oct 2020 08:30:02 -0400
Subject: [R-pkg-devel] 
 rlang not available on Windows builder machine with R-devel
In-Reply-To: <DB7PR06MB5881E0129641C6E132B2CCD9CC080@DB7PR06MB5881.eurprd06.prod.outlook.com>
References: <DB7PR06MB5881E0129641C6E132B2CCD9CC080@DB7PR06MB5881.eurprd06.prod.outlook.com>
Message-ID: <0e574b00-3cd1-8176-dce4-d1887ea4b67d@gmail.com>

On 09/10/2020 8:05 a.m., Ayala Hernandez, Rafael wrote:
> Dear all,
> 
> My NutrienTrackeR package has recently failed to install on the Windows builder machine with R-devel, with an error saying 'rlang' is not available (https://www.r-project.org/nosvn/R.check/r-devel-windows-ix86+x86_64/NutrienTrackeR-00install.html).
> 
> Is this something I could fix on my side, or is it just on the builder machine's side?

Looks to me like it's just the CRAN machine that had a glitch. I 
wouldn't worry about it unless CRAN asks you to do something, or you're 
submitting a new version.  In the latter case, mention the failure in 
your submission message and say that you're assuming it's a problem on 
their end.

Duncan Murdoch


From ju||@n@c@nd|@ @end|ng |rom n|h@gov  Sat Oct 10 18:53:15 2020
From: ju||@n@c@nd|@ @end|ng |rom n|h@gov (Candia, Julian (NIH/NCI) [E])
Date: Sat, 10 Oct 2020 16:53:15 +0000
Subject: [R-pkg-devel] Static vignettes / bibtex warning in Debian
Message-ID: <B9D3F189-2B96-4D03-A43A-AC3F31D596ED@contoso.com>

Hello,

I?m trying to include a static vignette by embedding a pdf document in latex. The procedure is very simple and is discussed here: http://www.markvanderloo.eu/yaRb/2019/01/11/add-a-static-pdf-vignette-to-an-r-package
It essentially boils down to creating a .Rnw file with the following content:

\documentclass{article}
\usepackage{pdfpages}
%\VignetteIndexEntry{author2019mypaper}

\begin{document}
\includepdf[pages=-, fitpaper=true]{mypaper.pdf}
\end{document}

I built and checked the package with no issues. However, upon uploading to CRAN, Debian generates 1 warning:

Flavor: r-devel-linux-x86_64-debian-gcc
Check: package dependencies, Result: WARNING
  Requires (indirectly) orphaned package: 'bibtex'

I don?t know how to go around this issue. Essentially: how to add a static (pdf) vignette to a package that will pass all CRAN checks?
Your advice is much appreciated.

Thanks,
Juli?n


	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Sun Oct 11 01:28:34 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sat, 10 Oct 2020 19:28:34 -0400
Subject: [R-pkg-devel] Static vignettes / bibtex warning in Debian
In-Reply-To: <B9D3F189-2B96-4D03-A43A-AC3F31D596ED@contoso.com>
References: <B9D3F189-2B96-4D03-A43A-AC3F31D596ED@contoso.com>
Message-ID: <90117472-91c0-d085-d67e-9647f40f1e4d@gmail.com>

That WARNING is unlikely to be related to the vignette.  The problem is 
that you have Depends/Imports/Suggests for some R package that does the 
same for the bibtex package (possibly with one ore more other indirect 
steps).

Since this is only on one platform, it's probably not something you need 
to worry about:  that other package has probably been updated to drop 
the bibtex dependence, but Debian hasn't got the update yet.

I don't know how you determine which is the "guilty" package.  Maybe 
there are more hints in the check log?

Duncan Murdoch

On 10/10/2020 12:53 p.m., Candia, Julian (NIH/NCI) [E] via 
R-package-devel wrote:
> Hello,
> 
> I?m trying to include a static vignette by embedding a pdf document in latex. The procedure is very simple and is discussed here: http://www.markvanderloo.eu/yaRb/2019/01/11/add-a-static-pdf-vignette-to-an-r-package
> It essentially boils down to creating a .Rnw file with the following content:
> 
> \documentclass{article}
> \usepackage{pdfpages}
> %\VignetteIndexEntry{author2019mypaper}
> 
> \begin{document}
> \includepdf[pages=-, fitpaper=true]{mypaper.pdf}
> \end{document}
> 
> I built and checked the package with no issues. However, upon uploading to CRAN, Debian generates 1 warning:
> 
> Flavor: r-devel-linux-x86_64-debian-gcc
> Check: package dependencies, Result: WARNING
>    Requires (indirectly) orphaned package: 'bibtex'
> 
> I don?t know how to go around this issue. Essentially: how to add a static (pdf) vignette to a package that will pass all CRAN checks?
> Your advice is much appreciated.
> 
> Thanks,
> Juli?n
> 
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org  Sun Oct 11 05:56:41 2020
From: @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org (Spencer Graves)
Date: Sat, 10 Oct 2020 22:56:41 -0500
Subject: [R-pkg-devel] How to remove rJava from Ecfun when it's not called
 directly or indirectly
Message-ID: <880055b4-85de-f314-c43f-ffc0b99289db@effectivedefense.org>

Hello, All:


	  "R CMD check Ecfun_0.2-4.tar.gz" fails under Windows 10 with "Error: 
package or namespace load failed for 'Ecfun': .onLoad failed in 
loadNamespace() for 'rJava'".


	  However, I cannot find where Ecfun calls rJava.  This is in:


https://github.com/sbgraves237/Ecfun

	
	  I get nothing from "grep 'rJava'" in the DESCRIPTION and NAMESPACE 
files plus in the man and R subdirectories.  I ran 
tools:package_dependencies recursively starting with Ecfun until I got 
all NULLs and could not find rJava anywhere.


	  Thanks,
	  Spencer Graves


00install.out


* installing *source* package 'Ecfun' ...
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
*** arch - i386
Error: package or namespace load failed for 'Ecfun':
  .onLoad failed in loadNamespace() for 'rJava', details:
   call: inDL(x, as.logical(local), as.logical(now), ...)
   error: unable to load shared object 'C:/Program 
Files/R/R-4.0.2/library/rJava/libs/i386/rJava.dll':
   LoadLibrary failure:  %1 is not a valid Win32 application.

Error: loading failed
Execution halted
*** arch - x64
ERROR: loading failed for 'i386'
* removing 'C:/Users/spenc/Documents/R/Ecfun/Ecfun.Rcheck/Ecfun'


00check.log


* using log directory 'C:/Users/spenc/Documents/R/Ecfun/Ecfun.Rcheck'
* using R version 4.0.2 (2020-06-22)
* using platform: x86_64-w64-mingw32 (64-bit)
* using session charset: ISO8859-1
* checking for file 'Ecfun/DESCRIPTION' ... OK
* this is package 'Ecfun' version '0.2-4'
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for executable files ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking whether package 'Ecfun' can be installed ... ERROR
Installation failed.
See 'C:/Users/spenc/Documents/R/Ecfun/Ecfun.Rcheck/00install.out' for 
details.
* DONE
Status: 1 ERROR


From jo@h@m@u|r|ch @end|ng |rom gm@||@com  Sun Oct 11 15:25:42 2020
From: jo@h@m@u|r|ch @end|ng |rom gm@||@com (Joshua Ulrich)
Date: Sun, 11 Oct 2020 08:25:42 -0500
Subject: [R-pkg-devel] 
 How to remove rJava from Ecfun when it's not called
 directly or indirectly
In-Reply-To: <880055b4-85de-f314-c43f-ffc0b99289db@effectivedefense.org>
References: <880055b4-85de-f314-c43f-ffc0b99289db@effectivedefense.org>
Message-ID: <CAPPM_gT+oG4Oz7m50rYBhz456XC8akA4HgEXUsZPKi=YNr3L+Q@mail.gmail.com>

On Sat, Oct 10, 2020 at 10:57 PM Spencer Graves
<spencer.graves at effectivedefense.org> wrote:
>
> Hello, All:
>
>
>           "R CMD check Ecfun_0.2-4.tar.gz" fails under Windows 10 with "Error:
> package or namespace load failed for 'Ecfun': .onLoad failed in
> loadNamespace() for 'rJava'".
>
>
>           However, I cannot find where Ecfun calls rJava.  This is in:
>
>
> https://github.com/sbgraves237/Ecfun
>
>
>           I get nothing from "grep 'rJava'" in the DESCRIPTION and NAMESPACE
> files plus in the man and R subdirectories.  I ran
> tools:package_dependencies recursively starting with Ecfun until I got
> all NULLs and could not find rJava anywhere.
>
You need to include suggested package dependencies in your search.

tools::package_dependencies("Ecfun",
  which = c("Depends", "Imports", "LinkingTo", "Suggests"),
  recursive = TRUE)

You will find rJava in that list of ~1650 dependencies.

>
>           Thanks,
>           Spencer Graves
>
>
> 00install.out
>
>
> * installing *source* package 'Ecfun' ...
> ** using staged installation
> ** R
> ** inst
> ** byte-compile and prepare package for lazy loading
> ** help
> *** installing help indices
> ** building package indices
> ** installing vignettes
> ** testing if installed package can be loaded from temporary location
> *** arch - i386
> Error: package or namespace load failed for 'Ecfun':
>   .onLoad failed in loadNamespace() for 'rJava', details:
>    call: inDL(x, as.logical(local), as.logical(now), ...)
>    error: unable to load shared object 'C:/Program
> Files/R/R-4.0.2/library/rJava/libs/i386/rJava.dll':
>    LoadLibrary failure:  %1 is not a valid Win32 application.
>
> Error: loading failed
> Execution halted
> *** arch - x64
> ERROR: loading failed for 'i386'
> * removing 'C:/Users/spenc/Documents/R/Ecfun/Ecfun.Rcheck/Ecfun'
>
>
> 00check.log
>
>
> * using log directory 'C:/Users/spenc/Documents/R/Ecfun/Ecfun.Rcheck'
> * using R version 4.0.2 (2020-06-22)
> * using platform: x86_64-w64-mingw32 (64-bit)
> * using session charset: ISO8859-1
> * checking for file 'Ecfun/DESCRIPTION' ... OK
> * this is package 'Ecfun' version '0.2-4'
> * checking package namespace information ... OK
> * checking package dependencies ... OK
> * checking if this is a source package ... OK
> * checking if there is a namespace ... OK
> * checking for executable files ... OK
> * checking for hidden files and directories ... OK
> * checking for portable file names ... OK
> * checking whether package 'Ecfun' can be installed ... ERROR
> Installation failed.
> See 'C:/Users/spenc/Documents/R/Ecfun/Ecfun.Rcheck/00install.out' for
> details.
> * DONE
> Status: 1 ERROR
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel



-- 
Joshua Ulrich  |  about.me/joshuaulrich
FOSS Trading  |  www.fosstrading.com


From @|@t @end|ng |rom d|@root@org  Sun Oct 11 16:20:01 2020
From: @|@t @end|ng |rom d|@root@org (Al T)
Date: Sun, 11 Oct 2020 16:20:01 +0200
Subject: [R-pkg-devel] Procedure for the transfer or an R package
 maintainership
Message-ID: <20201011142000.i5lh4ra27p4v6ndx@localhost.localdomain>

Dear R-devel-community!


The current maintainer of the 'nephro' R-package
(https://cran.r-project.org/web/packages/nephro/index.html), Cristian
Pattaro, asked me if I'm willing to take over this work.  I'm very
interested in stepping in but since I've never done something similar
before I'd like to ask for some advice.


I read on stackoverflow
(https://stackoverflow.com/questions/39223320/transferring-maintainership-of-an-r-package-on-cran)
that the standard procedure is (in the following order):

* a message from the old maintainers' email address stating the change
  in maintainership

* a change in the DESCRIPTION file with the address of the new
  maintainer information.


But I'm interested in the steps afterwards (see also
https://stackoverflow.com/questions/64299121/what-do-i-have-to-do-if-im-taking-over-the-maintenance-of-a-gnu-r-package-publi):

* How can I 'link' this package to a new repository on the version
  control platform of my choice (e.g. https://gitlab.com/ or
  https://github.com)?

* How do the package update procedures on CRAN work (e.g. if I want to
  create a new version of the package)?

* How does the update procedure for the repository on r-forge (in my
  case: https://r-forge.r-project.org/projects/nephro/) work?  Is this
  identical to the CRAN-package?


I looked into https://cran.r-project.org/web/packages/policies.html as
well https://cran.r-project.org/doc/manuals/R-exts.html but I couldn't
find an answer to my questions.


Best wishes, 

Alex



-- 

    *Al T* <al.t at disroot.org>
    GPG: E1F0 908F 0365 2215 189D  2319 F0AF 5A02 49EB DEF5


From e@ @end|ng |rom enr|co@chum@nn@net  Sun Oct 11 17:34:21 2020
From: e@ @end|ng |rom enr|co@chum@nn@net (Enrico Schumann)
Date: Sun, 11 Oct 2020 17:34:21 +0200
Subject: [R-pkg-devel] 
 How to remove rJava from Ecfun when it's not called
 directly or indirectly
In-Reply-To: <880055b4-85de-f314-c43f-ffc0b99289db@effectivedefense.org>
 (Spencer Graves's message of "Sat, 10 Oct 2020 22:56:41 -0500")
References: <880055b4-85de-f314-c43f-ffc0b99289db@effectivedefense.org>
Message-ID: <87ft6k3hfm.fsf@enricoschumann.net>

On Sat, 10 Oct 2020, Spencer Graves writes:

> Hello, All:
>
>
> 	  "R CMD check Ecfun_0.2-4.tar.gz" fails under
> Windows 10 with "Error: package or namespace load
> failed for 'Ecfun': .onLoad failed in loadNamespace()
> for 'rJava'".
>
>
> 	  However, I cannot find where Ecfun calls rJava.  This is in:
>
>
> https://github.com/sbgraves237/Ecfun
>
> 	
> 	  I get nothing from "grep 'rJava'" in the
> DESCRIPTION and NAMESPACE files plus in the man and R
> subdirectories.  I ran tools:package_dependencies
> recursively starting with Ecfun until I got all NULLs
> and could not find rJava anywhere.
>
>
> 	  Thanks,
> 	  Spencer Graves
>
>
> 00install.out
>
>
> * installing *source* package 'Ecfun' ...
> ** using staged installation
> ** R
> ** inst
> ** byte-compile and prepare package for lazy loading
> ** help
> *** installing help indices
> ** building package indices
> ** installing vignettes
> ** testing if installed package can be loaded from temporary location
> *** arch - i386
> Error: package or namespace load failed for 'Ecfun':
>  .onLoad failed in loadNamespace() for 'rJava', details:
>   call: inDL(x, as.logical(local), as.logical(now), ...)
>   error: unable to load shared object 'C:/Program
> Files/R/R-4.0.2/library/rJava/libs/i386/rJava.dll':
>   LoadLibrary failure:  %1 is not a valid Win32 application.
>
> Error: loading failed
> Execution halted
> *** arch - x64
> ERROR: loading failed for 'i386'
> * removing 'C:/Users/spenc/Documents/R/Ecfun/Ecfun.Rcheck/Ecfun'
>
>
> 00check.log
>
>
> * using log directory 'C:/Users/spenc/Documents/R/Ecfun/Ecfun.Rcheck'
> * using R version 4.0.2 (2020-06-22)
> * using platform: x86_64-w64-mingw32 (64-bit)
> * using session charset: ISO8859-1
> * checking for file 'Ecfun/DESCRIPTION' ... OK
> * this is package 'Ecfun' version '0.2-4'
> * checking package namespace information ... OK
> * checking package dependencies ... OK
> * checking if this is a source package ... OK
> * checking if there is a namespace ... OK
> * checking for executable files ... OK
> * checking for hidden files and directories ... OK
> * checking for portable file names ... OK
> * checking whether package 'Ecfun' can be installed ... ERROR
> Installation failed.
> See
> 'C:/Users/spenc/Documents/R/Ecfun/Ecfun.Rcheck/00install.out'
> for details.
> * DONE
> Status: 1 ERROR
>

Hello Spencer

Just a wild guess: the CRAN version of your package
does not list 'xlsx'; but your GitHub version does.
Now, 'xlsx' depends on 'rJava'.  So perhaps start there?

As I said, only a wild guess; but maybe it helps.

Kind regards
    Enrico

-- 
Enrico Schumann
Lucerne, Switzerland
http://enricoschumann.net


From murdoch@dunc@n @end|ng |rom gm@||@com  Sun Oct 11 19:08:26 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sun, 11 Oct 2020 13:08:26 -0400
Subject: [R-pkg-devel] Procedure for the transfer or an R package
 maintainership
In-Reply-To: <20201011142000.i5lh4ra27p4v6ndx@localhost.localdomain>
References: <20201011142000.i5lh4ra27p4v6ndx@localhost.localdomain>
Message-ID: <fef1875c-f171-04ac-e9ed-ae00af6408f3@gmail.com>

On 11/10/2020 10:20 a.m., Al T wrote:
> Dear R-devel-community!
> 
> 
> The current maintainer of the 'nephro' R-package
> (https://cran.r-project.org/web/packages/nephro/index.html), Cristian
> Pattaro, asked me if I'm willing to take over this work.  I'm very
> interested in stepping in but since I've never done something similar
> before I'd like to ask for some advice.
> 
> 
> I read on stackoverflow
> (https://stackoverflow.com/questions/39223320/transferring-maintainership-of-an-r-package-on-cran)
> that the standard procedure is (in the following order):
> 
> * a message from the old maintainers' email address stating the change
>    in maintainership
> 
> * a change in the DESCRIPTION file with the address of the new
>    maintainer information.
> 
> 
> But I'm interested in the steps afterwards (see also
> https://stackoverflow.com/questions/64299121/what-do-i-have-to-do-if-im-taking-over-the-maintenance-of-a-gnu-r-package-publi):
> 
> * How can I 'link' this package to a new repository on the version
>    control platform of my choice (e.g. https://gitlab.com/ or
>    https://github.com)?

Just change any documentation in the package that points to the wrong 
place.  In particular, this will include the URL: field in the 
DESCRIPTION file, but it may show up in help pages or vignettes as well.

> 
> * How do the package update procedures on CRAN work (e.g. if I want to
>    create a new version of the package)?

That's described quite clearly here:

https://cran.r-project.org/web/packages/policies.html

And you *must* create a new version of the package for the maintainer 
change to take effect.  Depending on how many other changes you are 
planning for it, you could make the minimal changes now, and bigger ones 
a month or two later, or wait until everything is ready.
> 
> * How does the update procedure for the repository on r-forge (in my
>    case: https://r-forge.r-project.org/projects/nephro/) work?  Is this
>    identical to the CRAN-package?

r-forge uses Subversion, so to update the package there, just change 
your working copy and commit the changes.  You'll need to be registered 
as a project member with sufficient privileges to do this; that 
registration needs to be done by someone with admin permissions.
> 
> 
> I looked into https://cran.r-project.org/web/packages/policies.html as
> well https://cran.r-project.org/doc/manuals/R-exts.html but I couldn't
> find an answer to my questions.

Hopefully I've added enough info for you.

Duncan Murdoch


From bbo|ker @end|ng |rom gm@||@com  Mon Oct 12 22:03:26 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Mon, 12 Oct 2020 16:03:26 -0400
Subject: [R-pkg-devel] puzzling CRAN rejection
Message-ID: <ec3246c1-17c2-c50c-19e7-158a0f95e9c1@gmail.com>

   Before I risk wasting the CRAN maintainers' time with a query, can 
anyone see what I'm missing here?  Everything I can see looks OK, with 
the possible exception of the 'NA' result for "CRAN incoming 
feasibility" on r-devel-windows-ix86+x86_64 (which surely isn't my fault???)

   Any help appreciated, as always.

   Ben Bolker




=====
Dear maintainer,

package lme4_1.1-24.tar.gz does not pass the incoming checks 
automatically, please see the following pre-tests:
Windows: 
<https://win-builder.r-project.org/incoming_pretest/lme4_1.1-24_20201012_210730/Windows/00check.log>
Status: OK
Debian: 
<https://win-builder.r-project.org/incoming_pretest/lme4_1.1-24_20201012_210730/Debian/00check.log>
Status: OK

Last released version's CRAN status: ERROR: 2, NOTE: 5, OK: 5
See: <https://CRAN.R-project.org/web/checks/check_results_lme4.html>

Last released version's additional issues:
   gcc-UBSAN <https://www.stats.ox.ac.uk/pub/bdr/memtests/gcc-UBSAN/lme4>

CRAN Web: <https://cran.r-project.org/package=lme4>

Please fix all problems and resubmit a fixed version via the webform.
If you are not sure how to fix the problems shown, please ask for help 
on the R-package-devel mailing list:
<https://stat.ethz.ch/mailman/listinfo/r-package-devel>
If you are fairly certain the rejection is a false positive, please 
reply-all to this message and explain.

More details are given in the directory:
<https://win-builder.r-project.org/incoming_pretest/lme4_1.1-24_20201012_210730/>
The files will be removed after roughly 7 days.

*** Strong rev. depends ***: afex agRee altmeta aods3 arm ARTool bapred 
bayesammi BayesLN BayesSenMC baystability BBRecapture BClustLonG BFpack 
blme blmeco blocksdesign BradleyTerry2 buildmer cAIC4 car carcass cgam 
chngpt ciTools clickR climwin CLME clusteredinterference clusterPower 
CMatching cpr cvms DClusterm dfmeta DHARMa diagmeta difR doremi 
eda4treeR EdSurvey effects embed epr ESTER ez faraway faux fence 
finalfit fishmethods fullfact gamm4 geex GHap glmertree glmmEP GLMMRR 
glmmsr glmmTMB GLMpack gorica groupedstats gtheory gvcR HelpersMG 
HeritSeq hmi iccbeta IDmeasurer IMTest inferference influence.ME 
intRvals isni jlctree joineRmeta joineRML JointModel jomo jstable 
JWileymisc KenSyn lefko3 lmem.qtler LMERConvenienceFunctions lmerTest 
lmSupport longpower LSAmitR macc MAGNAMWAR manymodelr MargCond marked 
mbest MDMR mediation MEMSS merDeriv merTools meta metamisc metan 
metaplus Metatron micemd MiRKAT misty mixAK MixedPsy MixMAP MixRF MLID 
mlma mlmRev mlVAR MMeM multiDimBio multil
  evelTools MultiRR MultisiteMediation mumm mvMISE MXM nanny omics 
OptimClassifier pamm panelr paramhetero PBImisc pbkrtest pcgen 
pedigreemm Phenotype phyr piecewiseSEM Plasmode PLmixed powerbydesign 
powerlmm predictmeans PrevMap prLogistic psfmi ptmixed qape r2mlm 
raincin Rcmdr refund reghelper regplot REndo reproducer rewie RLRsim 
robustBLME robustlmm rockchalk rosetta rpql rptR rr2 RRreg rsq rstanarm 
rstap rties RVAideMemoire RVFam sae semEff siland simr sjstats skpr 
SlaPMEG smicd SoyNAM SPCDAnalyze specr SPreFuGED squid stability 
standardize statgenGxE statgenSTA StroupGLMM structree Surrogate 
surrosurv swissMrP TcGSA themetagenomics tidygate tidyMicro tramME 
tukeytrend userfriendlyscience varTestnlme VCA VetResearchLMM warpMix 
WebPower welchADF WeMix

Best regards,
CRAN teams' auto-check service


Flavor: r-devel-windows-ix86+x86_64
Check: CRAN incoming feasibility, Result: NA
   Maintainer: 'Ben Bolker <bbolker+lme4 at gmail.com>'

Flavor: r-devel-windows-ix86+x86_64
Check: Overall checktime, Result: NOTE
   Overall checktime 23 min > 10 min

Flavor: r-devel-linux-x86_64-debian-gcc
Check: CRAN incoming feasibility, Result: Note_to_CRAN_maintainers
   Maintainer: 'Ben Bolker <bbolker+lme4 at gmail.com>'


From |uc@r @end|ng |rom |edor@project@org  Mon Oct 12 22:23:07 2020
From: |uc@r @end|ng |rom |edor@project@org (=?UTF-8?Q?I=C3=B1aki_Ucar?=)
Date: Mon, 12 Oct 2020 22:23:07 +0200
Subject: [R-pkg-devel] puzzling CRAN rejection
In-Reply-To: <ec3246c1-17c2-c50c-19e7-158a0f95e9c1@gmail.com>
References: <ec3246c1-17c2-c50c-19e7-158a0f95e9c1@gmail.com>
Message-ID: <CALEXWq3oDey1J9Zk6Vkf9jFxs4yvDmgt+vZvj-qfHgXHHbkGaA@mail.gmail.com>

On Mon, 12 Oct 2020 at 22:04, Ben Bolker <bbolker at gmail.com> wrote:
>
>    Before I risk wasting the CRAN maintainers' time with a query, can
> anyone see what I'm missing here?  Everything I can see looks OK, with
> the possible exception of the 'NA' result for "CRAN incoming
> feasibility" on r-devel-windows-ix86+x86_64 (which surely isn't my fault???)
>
>    Any help appreciated, as always.
>
>    Ben Bolker

There are UBSAN issues:

> Last released version's additional issues:
>    gcc-UBSAN <https://www.stats.ox.ac.uk/pub/bdr/memtests/gcc-UBSAN/lme4>

-- 
I?aki ?car


From bbo|ker @end|ng |rom gm@||@com  Mon Oct 12 22:25:37 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Mon, 12 Oct 2020 16:25:37 -0400
Subject: [R-pkg-devel] puzzling CRAN rejection
In-Reply-To: <CALEXWq3oDey1J9Zk6Vkf9jFxs4yvDmgt+vZvj-qfHgXHHbkGaA@mail.gmail.com>
References: <ec3246c1-17c2-c50c-19e7-158a0f95e9c1@gmail.com>
 <CALEXWq3oDey1J9Zk6Vkf9jFxs4yvDmgt+vZvj-qfHgXHHbkGaA@mail.gmail.com>
Message-ID: <69d85f65-1ded-863f-6ec1-81426e48a28f@gmail.com>

   Thanks, but I don't think that's the problem because:

    (1) Those are reported as being from the last released version, not 
this one.
    (2) As far as I can tell from my local tests, I'm pretty sure I've 
fixed these issues in the current release.
    (3) In my experience UBSAN tests don't generally get re-run for a 
while after the initial CRAN testing anyway ...

   cheers
     Ben


On 10/12/20 4:23 PM, I?aki Ucar wrote:
> On Mon, 12 Oct 2020 at 22:04, Ben Bolker <bbolker at gmail.com> wrote:
>>
>>     Before I risk wasting the CRAN maintainers' time with a query, can
>> anyone see what I'm missing here?  Everything I can see looks OK, with
>> the possible exception of the 'NA' result for "CRAN incoming
>> feasibility" on r-devel-windows-ix86+x86_64 (which surely isn't my fault???)
>>
>>     Any help appreciated, as always.
>>
>>     Ben Bolker
> 
> There are UBSAN issues:
> 
>> Last released version's additional issues:
>>     gcc-UBSAN <https://www.stats.ox.ac.uk/pub/bdr/memtests/gcc-UBSAN/lme4>
>


From |uc@r @end|ng |rom |edor@project@org  Mon Oct 12 22:34:44 2020
From: |uc@r @end|ng |rom |edor@project@org (=?UTF-8?Q?I=C3=B1aki_Ucar?=)
Date: Mon, 12 Oct 2020 22:34:44 +0200
Subject: [R-pkg-devel] puzzling CRAN rejection
In-Reply-To: <69d85f65-1ded-863f-6ec1-81426e48a28f@gmail.com>
References: <ec3246c1-17c2-c50c-19e7-158a0f95e9c1@gmail.com>
 <CALEXWq3oDey1J9Zk6Vkf9jFxs4yvDmgt+vZvj-qfHgXHHbkGaA@mail.gmail.com>
 <69d85f65-1ded-863f-6ec1-81426e48a28f@gmail.com>
Message-ID: <CALEXWq030H=ytjVHLHaTOZs8Y8GSVxf6vNRYQVK=ueKAiCZtuA@mail.gmail.com>

You are right. I was too fast and didn't read "last released version".
Then the only suspicious thing I see is:

Overall checktime 23 min > 10 min

On Mon, 12 Oct 2020 at 22:25, Ben Bolker <bbolker at gmail.com> wrote:
>
>    Thanks, but I don't think that's the problem because:
>
>     (1) Those are reported as being from the last released version, not
> this one.
>     (2) As far as I can tell from my local tests, I'm pretty sure I've
> fixed these issues in the current release.
>     (3) In my experience UBSAN tests don't generally get re-run for a
> while after the initial CRAN testing anyway ...
>
>    cheers
>      Ben
>
>
> On 10/12/20 4:23 PM, I?aki Ucar wrote:
> > On Mon, 12 Oct 2020 at 22:04, Ben Bolker <bbolker at gmail.com> wrote:
> >>
> >>     Before I risk wasting the CRAN maintainers' time with a query, can
> >> anyone see what I'm missing here?  Everything I can see looks OK, with
> >> the possible exception of the 'NA' result for "CRAN incoming
> >> feasibility" on r-devel-windows-ix86+x86_64 (which surely isn't my fault???)
> >>
> >>     Any help appreciated, as always.
> >>
> >>     Ben Bolker
> >
> > There are UBSAN issues:
> >
> >> Last released version's additional issues:
> >>     gcc-UBSAN <https://www.stats.ox.ac.uk/pub/bdr/memtests/gcc-UBSAN/lme4>
> >



-- 
I?aki ?car


From murdoch@dunc@n @end|ng |rom gm@||@com  Mon Oct 12 22:40:46 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Mon, 12 Oct 2020 16:40:46 -0400
Subject: [R-pkg-devel] puzzling CRAN rejection
In-Reply-To: <ec3246c1-17c2-c50c-19e7-158a0f95e9c1@gmail.com>
References: <ec3246c1-17c2-c50c-19e7-158a0f95e9c1@gmail.com>
Message-ID: <0cd4154b-5323-3936-09d1-292361932c43@gmail.com>

There's this one in 
https://win-builder.r-project.org/incoming_pretest/lme4_1.1-24_20201012_210730/Windows/00check.log:

   Comparing 'lmer-1.Rout' to 'lmer-1.Rout.save' ...428d427
< boundary (singular) fit: see ?isSingular
430d428
< boundary (singular) fit: see ?isSingular

Those messages about the singular fit show up in

https://win-builder.r-project.org/incoming_pretest/lme4_1.1-24_20201012_210730/Windows/examples_and_tests/tests_i386/lmer-1.Rout 


but not in

https://win-builder.r-project.org/incoming_pretest/lme4_1.1-24_20201012_210730/Windows/examples_and_tests/tests_i386/lmer-1.Rout.save

The difference also doesn't show up in the x64 versions of the files.

Duncan Murdoch

On 12/10/2020 4:03 p.m., Ben Bolker wrote:
>     Before I risk wasting the CRAN maintainers' time with a query, can
> anyone see what I'm missing here?  Everything I can see looks OK, with
> the possible exception of the 'NA' result for "CRAN incoming
> feasibility" on r-devel-windows-ix86+x86_64 (which surely isn't my fault???)
> 
>     Any help appreciated, as always.
> 
>     Ben Bolker
> 
> 
> 
> 
> =====
> Dear maintainer,
> 
> package lme4_1.1-24.tar.gz does not pass the incoming checks
> automatically, please see the following pre-tests:
> Windows:
> <https://win-builder.r-project.org/incoming_pretest/lme4_1.1-24_20201012_210730/Windows/00check.log>
> Status: OK
> Debian:
> <https://win-builder.r-project.org/incoming_pretest/lme4_1.1-24_20201012_210730/Debian/00check.log>
> Status: OK
> 
> Last released version's CRAN status: ERROR: 2, NOTE: 5, OK: 5
> See: <https://CRAN.R-project.org/web/checks/check_results_lme4.html>
> 
> Last released version's additional issues:
>     gcc-UBSAN <https://www.stats.ox.ac.uk/pub/bdr/memtests/gcc-UBSAN/lme4>
> 
> CRAN Web: <https://cran.r-project.org/package=lme4>
> 
> Please fix all problems and resubmit a fixed version via the webform.
> If you are not sure how to fix the problems shown, please ask for help
> on the R-package-devel mailing list:
> <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
> If you are fairly certain the rejection is a false positive, please
> reply-all to this message and explain.
> 
> More details are given in the directory:
> <https://win-builder.r-project.org/incoming_pretest/lme4_1.1-24_20201012_210730/>
> The files will be removed after roughly 7 days.
> 
> *** Strong rev. depends ***: afex agRee altmeta aods3 arm ARTool bapred
> bayesammi BayesLN BayesSenMC baystability BBRecapture BClustLonG BFpack
> blme blmeco blocksdesign BradleyTerry2 buildmer cAIC4 car carcass cgam
> chngpt ciTools clickR climwin CLME clusteredinterference clusterPower
> CMatching cpr cvms DClusterm dfmeta DHARMa diagmeta difR doremi
> eda4treeR EdSurvey effects embed epr ESTER ez faraway faux fence
> finalfit fishmethods fullfact gamm4 geex GHap glmertree glmmEP GLMMRR
> glmmsr glmmTMB GLMpack gorica groupedstats gtheory gvcR HelpersMG
> HeritSeq hmi iccbeta IDmeasurer IMTest inferference influence.ME
> intRvals isni jlctree joineRmeta joineRML JointModel jomo jstable
> JWileymisc KenSyn lefko3 lmem.qtler LMERConvenienceFunctions lmerTest
> lmSupport longpower LSAmitR macc MAGNAMWAR manymodelr MargCond marked
> mbest MDMR mediation MEMSS merDeriv merTools meta metamisc metan
> metaplus Metatron micemd MiRKAT misty mixAK MixedPsy MixMAP MixRF MLID
> mlma mlmRev mlVAR MMeM multiDimBio multil
>    evelTools MultiRR MultisiteMediation mumm mvMISE MXM nanny omics
> OptimClassifier pamm panelr paramhetero PBImisc pbkrtest pcgen
> pedigreemm Phenotype phyr piecewiseSEM Plasmode PLmixed powerbydesign
> powerlmm predictmeans PrevMap prLogistic psfmi ptmixed qape r2mlm
> raincin Rcmdr refund reghelper regplot REndo reproducer rewie RLRsim
> robustBLME robustlmm rockchalk rosetta rpql rptR rr2 RRreg rsq rstanarm
> rstap rties RVAideMemoire RVFam sae semEff siland simr sjstats skpr
> SlaPMEG smicd SoyNAM SPCDAnalyze specr SPreFuGED squid stability
> standardize statgenGxE statgenSTA StroupGLMM structree Surrogate
> surrosurv swissMrP TcGSA themetagenomics tidygate tidyMicro tramME
> tukeytrend userfriendlyscience varTestnlme VCA VetResearchLMM warpMix
> WebPower welchADF WeMix
> 
> Best regards,
> CRAN teams' auto-check service
> 
> 
> Flavor: r-devel-windows-ix86+x86_64
> Check: CRAN incoming feasibility, Result: NA
>     Maintainer: 'Ben Bolker <bbolker+lme4 at gmail.com>'
> 
> Flavor: r-devel-windows-ix86+x86_64
> Check: Overall checktime, Result: NOTE
>     Overall checktime 23 min > 10 min
> 
> Flavor: r-devel-linux-x86_64-debian-gcc
> Check: CRAN incoming feasibility, Result: Note_to_CRAN_maintainers
>     Maintainer: 'Ben Bolker <bbolker+lme4 at gmail.com>'
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From bbo|ker @end|ng |rom gm@||@com  Mon Oct 12 22:39:45 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Mon, 12 Oct 2020 16:39:45 -0400
Subject: [R-pkg-devel] puzzling CRAN rejection
In-Reply-To: <CALEXWq030H=ytjVHLHaTOZs8Y8GSVxf6vNRYQVK=ueKAiCZtuA@mail.gmail.com>
References: <ec3246c1-17c2-c50c-19e7-158a0f95e9c1@gmail.com>
 <CALEXWq3oDey1J9Zk6Vkf9jFxs4yvDmgt+vZvj-qfHgXHHbkGaA@mail.gmail.com>
 <69d85f65-1ded-863f-6ec1-81426e48a28f@gmail.com>
 <CALEXWq030H=ytjVHLHaTOZs8Y8GSVxf6vNRYQVK=ueKAiCZtuA@mail.gmail.com>
Message-ID: <3af5cc3b-3f05-19bb-ee7b-f9509f46f26e@gmail.com>



On 10/12/20 4:34 PM, I?aki Ucar wrote:
> You are right. I was too fast and didn't read "last released version".
> Then the only suspicious thing I see is:
> 
> Overall checktime 23 min > 10 min

   I agree that's unfortunate, but it doesn't seem grounds for summary 
rejection ... ?  (CRAN policy says "Checking the package should take as 
little CPU time as possible".)  You may be right: it does seem to be _de 
facto_ policy that any NOTE is grounds for rejection.  On the other 
hand, this package has had NOTEs about 'installed size is <large>" for a 
long time, which hasn't been grounds for rejection.

   cheers
    Ben Bolker


> 
> On Mon, 12 Oct 2020 at 22:25, Ben Bolker <bbolker at gmail.com> wrote:
>>
>>     Thanks, but I don't think that's the problem because:
>>
>>      (1) Those are reported as being from the last released version, not
>> this one.
>>      (2) As far as I can tell from my local tests, I'm pretty sure I've
>> fixed these issues in the current release.
>>      (3) In my experience UBSAN tests don't generally get re-run for a
>> while after the initial CRAN testing anyway ...
>>
>>     cheers
>>       Ben
>>
>>
>> On 10/12/20 4:23 PM, I?aki Ucar wrote:
>>> On Mon, 12 Oct 2020 at 22:04, Ben Bolker <bbolker at gmail.com> wrote:
>>>>
>>>>      Before I risk wasting the CRAN maintainers' time with a query, can
>>>> anyone see what I'm missing here?  Everything I can see looks OK, with
>>>> the possible exception of the 'NA' result for "CRAN incoming
>>>> feasibility" on r-devel-windows-ix86+x86_64 (which surely isn't my fault???)
>>>>
>>>>      Any help appreciated, as always.
>>>>
>>>>      Ben Bolker
>>>
>>> There are UBSAN issues:
>>>
>>>> Last released version's additional issues:
>>>>      gcc-UBSAN <https://www.stats.ox.ac.uk/pub/bdr/memtests/gcc-UBSAN/lme4>
>>>
> 
> 
>


From |uc@r @end|ng |rom |edor@project@org  Mon Oct 12 22:51:01 2020
From: |uc@r @end|ng |rom |edor@project@org (=?UTF-8?Q?I=C3=B1aki_Ucar?=)
Date: Mon, 12 Oct 2020 22:51:01 +0200
Subject: [R-pkg-devel] puzzling CRAN rejection
In-Reply-To: <3af5cc3b-3f05-19bb-ee7b-f9509f46f26e@gmail.com>
References: <ec3246c1-17c2-c50c-19e7-158a0f95e9c1@gmail.com>
 <CALEXWq3oDey1J9Zk6Vkf9jFxs4yvDmgt+vZvj-qfHgXHHbkGaA@mail.gmail.com>
 <69d85f65-1ded-863f-6ec1-81426e48a28f@gmail.com>
 <CALEXWq030H=ytjVHLHaTOZs8Y8GSVxf6vNRYQVK=ueKAiCZtuA@mail.gmail.com>
 <3af5cc3b-3f05-19bb-ee7b-f9509f46f26e@gmail.com>
Message-ID: <CALEXWq1q0eJHuasPYXp3FRWg+a6hkcQ7x39MJro99AmVhbpPYA@mail.gmail.com>

On Mon, 12 Oct 2020 at 22:40, Ben Bolker <bbolker at gmail.com> wrote:
>
> On 10/12/20 4:34 PM, I?aki Ucar wrote:
> > You are right. I was too fast and didn't read "last released version".
> > Then the only suspicious thing I see is:
> >
> > Overall checktime 23 min > 10 min
>
>    I agree that's unfortunate, but it doesn't seem grounds for summary
> rejection ... ?  (CRAN policy says "Checking the package should take as
> little CPU time as possible".)  You may be right: it does seem to be _de
> facto_ policy that any NOTE is grounds for rejection.  On the other
> hand, this package has had NOTEs about 'installed size is <large>" for a
> long time, which hasn't been grounds for rejection.

Large size due to libs. But if data or docs go beyond 5MB, it would
probably be rejected. Likewise, I believe checking time is another one
of those NOTEs that are really hard lines.

-- 
I?aki ?car


From bbo|ker @end|ng |rom gm@||@com  Mon Oct 12 23:17:58 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Mon, 12 Oct 2020 17:17:58 -0400
Subject: [R-pkg-devel] puzzling CRAN rejection
In-Reply-To: <0cd4154b-5323-3936-09d1-292361932c43@gmail.com>
References: <ec3246c1-17c2-c50c-19e7-158a0f95e9c1@gmail.com>
 <0cd4154b-5323-3936-09d1-292361932c43@gmail.com>
Message-ID: <12d678f3-8d91-2634-c916-050eb6d62882@gmail.com>



On 10/12/20 4:40 PM, Duncan Murdoch wrote:
> There's this one in 
> https://win-builder.r-project.org/incoming_pretest/lme4_1.1-24_20201012_210730/Windows/00check.log: 
> 
> 
>  ? Comparing 'lmer-1.Rout' to 'lmer-1.Rout.save' ...428d427
> < boundary (singular) fit: see ?isSingular
> 430d428
> < boundary (singular) fit: see ?isSingular
> 
> Those messages about the singular fit show up in
> 
> https://win-builder.r-project.org/incoming_pretest/lme4_1.1-24_20201012_210730/Windows/examples_and_tests/tests_i386/lmer-1.Rout 
> 
> 
> but not in
> 
> https://win-builder.r-project.org/incoming_pretest/lme4_1.1-24_20201012_210730/Windows/examples_and_tests/tests_i386/lmer-1.Rout.save 
> 
> 
> The difference also doesn't show up in the x64 versions of the files.

   OK, thanks.

   I did notice this in passing (I think), but I got confused by the 
format.  (Also, it doesn't even rise to the level of a NOTE ...)

   It took me a while to localize the problem (line numbers have to be 
computing _after_ throwing away the R header info, see source code of 
tools::Rdiff()).

    Having spent this long reading tea leaves, I think I'm going to 
write to the CRAN maintainers for clarification.

   * Refactoring all the tests to decrease the testing time 
significantly is certainly possible (at worst I can make a lot of stuff 
conditionally skipped on CRAN), but would be a nuisance that I'd rather 
save for the next release if possible.

   * Eliminating the two lines of variable output is easy, but it's 
mildly annoying to update the version number for this small a correction 
...

   Looks like from now on there will only be odd-numbered releases of 
lme4 on CRAN, since I seem guaranteed to make trivial errors with my 
first (odd-numbered) try each time and have to bump the version number 
when fixing them ...

    Ben Bolker


> 
> Duncan Murdoch
> 
> On 12/10/2020 4:03 p.m., Ben Bolker wrote:
>> ??? Before I risk wasting the CRAN maintainers' time with a query, can
>> anyone see what I'm missing here?? Everything I can see looks OK, with
>> the possible exception of the 'NA' result for "CRAN incoming
>> feasibility" on r-devel-windows-ix86+x86_64 (which surely isn't my 
>> fault???)
>>
>> ??? Any help appreciated, as always.
>>
>> ??? Ben Bolker
>>
>>
>>
>>
>> =====
>> Dear maintainer,
>>
>> package lme4_1.1-24.tar.gz does not pass the incoming checks
>> automatically, please see the following pre-tests:
>> Windows:
>> <https://win-builder.r-project.org/incoming_pretest/lme4_1.1-24_20201012_210730/Windows/00check.log> 
>>
>> Status: OK
>> Debian:
>> <https://win-builder.r-project.org/incoming_pretest/lme4_1.1-24_20201012_210730/Debian/00check.log> 
>>
>> Status: OK
>>
>> Last released version's CRAN status: ERROR: 2, NOTE: 5, OK: 5
>> See: <https://CRAN.R-project.org/web/checks/check_results_lme4.html>
>>
>> Last released version's additional issues:
>> ??? gcc-UBSAN 
>> <https://www.stats.ox.ac.uk/pub/bdr/memtests/gcc-UBSAN/lme4>
>>
>> CRAN Web: <https://cran.r-project.org/package=lme4>
>>
>> Please fix all problems and resubmit a fixed version via the webform.
>> If you are not sure how to fix the problems shown, please ask for help
>> on the R-package-devel mailing list:
>> <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
>> If you are fairly certain the rejection is a false positive, please
>> reply-all to this message and explain.
>>
>> More details are given in the directory:
>> <https://win-builder.r-project.org/incoming_pretest/lme4_1.1-24_20201012_210730/> 
>>
>> The files will be removed after roughly 7 days.
>>
>> *** Strong rev. depends ***: afex agRee altmeta aods3 arm ARTool bapred
>> bayesammi BayesLN BayesSenMC baystability BBRecapture BClustLonG BFpack
>> blme blmeco blocksdesign BradleyTerry2 buildmer cAIC4 car carcass cgam
>> chngpt ciTools clickR climwin CLME clusteredinterference clusterPower
>> CMatching cpr cvms DClusterm dfmeta DHARMa diagmeta difR doremi
>> eda4treeR EdSurvey effects embed epr ESTER ez faraway faux fence
>> finalfit fishmethods fullfact gamm4 geex GHap glmertree glmmEP GLMMRR
>> glmmsr glmmTMB GLMpack gorica groupedstats gtheory gvcR HelpersMG
>> HeritSeq hmi iccbeta IDmeasurer IMTest inferference influence.ME
>> intRvals isni jlctree joineRmeta joineRML JointModel jomo jstable
>> JWileymisc KenSyn lefko3 lmem.qtler LMERConvenienceFunctions lmerTest
>> lmSupport longpower LSAmitR macc MAGNAMWAR manymodelr MargCond marked
>> mbest MDMR mediation MEMSS merDeriv merTools meta metamisc metan
>> metaplus Metatron micemd MiRKAT misty mixAK MixedPsy MixMAP MixRF MLID
>> mlma mlmRev mlVAR MMeM multiDimBio multil
>> ?? evelTools MultiRR MultisiteMediation mumm mvMISE MXM nanny omics
>> OptimClassifier pamm panelr paramhetero PBImisc pbkrtest pcgen
>> pedigreemm Phenotype phyr piecewiseSEM Plasmode PLmixed powerbydesign
>> powerlmm predictmeans PrevMap prLogistic psfmi ptmixed qape r2mlm
>> raincin Rcmdr refund reghelper regplot REndo reproducer rewie RLRsim
>> robustBLME robustlmm rockchalk rosetta rpql rptR rr2 RRreg rsq rstanarm
>> rstap rties RVAideMemoire RVFam sae semEff siland simr sjstats skpr
>> SlaPMEG smicd SoyNAM SPCDAnalyze specr SPreFuGED squid stability
>> standardize statgenGxE statgenSTA StroupGLMM structree Surrogate
>> surrosurv swissMrP TcGSA themetagenomics tidygate tidyMicro tramME
>> tukeytrend userfriendlyscience varTestnlme VCA VetResearchLMM warpMix
>> WebPower welchADF WeMix
>>
>> Best regards,
>> CRAN teams' auto-check service
>>
>>
>> Flavor: r-devel-windows-ix86+x86_64
>> Check: CRAN incoming feasibility, Result: NA
>> ??? Maintainer: 'Ben Bolker <bbolker+lme4 at gmail.com>'
>>
>> Flavor: r-devel-windows-ix86+x86_64
>> Check: Overall checktime, Result: NOTE
>> ??? Overall checktime 23 min > 10 min
>>
>> Flavor: r-devel-linux-x86_64-debian-gcc
>> Check: CRAN incoming feasibility, Result: Note_to_CRAN_maintainers
>> ??? Maintainer: 'Ben Bolker <bbolker+lme4 at gmail.com>'
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Mon Oct 12 23:18:59 2020
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Mon, 12 Oct 2020 23:18:59 +0200
Subject: [R-pkg-devel] puzzling CRAN rejection
In-Reply-To: <69d85f65-1ded-863f-6ec1-81426e48a28f@gmail.com>
References: <ec3246c1-17c2-c50c-19e7-158a0f95e9c1@gmail.com>
 <CALEXWq3oDey1J9Zk6Vkf9jFxs4yvDmgt+vZvj-qfHgXHHbkGaA@mail.gmail.com>
 <69d85f65-1ded-863f-6ec1-81426e48a28f@gmail.com>
Message-ID: <865793e7-e492-2136-091b-c3eade2359ea@statistik.tu-dortmund.de>

Actually more than 23 minutes check time for a single package is really 
excessive, can you pls cut that down?

This comes from

** running tests for arch 'i386' ... [509s] OK
** running tests for arch 'x64' ... [501s] OK

so only tests take 1010 seconds already.

I see that lme4 is a really important package that may justify some 
extra check time, but this is really a lot.

Can you please reduce the check time in the tests? e.g. using toy data 
and few iterations? Or by running less important tests only 
conditionally if some environment variable is set that you only define 
on your machine?

Best,
Uwe Ligges

On 12.10.2020 22:25, Ben Bolker wrote:
>  ? Thanks, but I don't think that's the problem because:
> 
>  ?? (1) Those are reported as being from the last released version, not 
> this one.
>  ?? (2) As far as I can tell from my local tests, I'm pretty sure I've 
> fixed these issues in the current release.
>  ?? (3) In my experience UBSAN tests don't generally get re-run for a 
> while after the initial CRAN testing anyway ...
> 
>  ? cheers
>  ??? Ben
> 
> 
> On 10/12/20 4:23 PM, I?aki Ucar wrote:
>> On Mon, 12 Oct 2020 at 22:04, Ben Bolker <bbolker at gmail.com> wrote:
>>>
>>> ??? Before I risk wasting the CRAN maintainers' time with a query, can
>>> anyone see what I'm missing here?? Everything I can see looks OK, with
>>> the possible exception of the 'NA' result for "CRAN incoming
>>> feasibility" on r-devel-windows-ix86+x86_64 (which surely isn't my 
>>> fault???)
>>>
>>> ??? Any help appreciated, as always.
>>>
>>> ??? Ben Bolker
>>
>> There are UBSAN issues:
>>
>>> Last released version's additional issues:
>>> ??? gcc-UBSAN 
>>> <https://www.stats.ox.ac.uk/pub/bdr/memtests/gcc-UBSAN/lme4>
>>
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From bbo|ker @end|ng |rom gm@||@com  Mon Oct 12 23:29:10 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Mon, 12 Oct 2020 17:29:10 -0400
Subject: [R-pkg-devel] puzzling CRAN rejection
In-Reply-To: <865793e7-e492-2136-091b-c3eade2359ea@statistik.tu-dortmund.de>
References: <ec3246c1-17c2-c50c-19e7-158a0f95e9c1@gmail.com>
 <CALEXWq3oDey1J9Zk6Vkf9jFxs4yvDmgt+vZvj-qfHgXHHbkGaA@mail.gmail.com>
 <69d85f65-1ded-863f-6ec1-81426e48a28f@gmail.com>
 <865793e7-e492-2136-091b-c3eade2359ea@statistik.tu-dortmund.de>
Message-ID: <64d1294a-eef5-22c3-5547-df0bd32de00b@gmail.com>


   Sure.  I assume I should aim for <10 minutes since that's the 
threshold for a NOTE ...  (for what it's worth the tests take a bit less 
than 25% as long on my Linux laptop, since an individual test run is 
more than twice as fast and we only have to check one architecture ...)

   Do I interpret correctly that the advice is to address this problem, 
bump the version number, and re-submit?

   cheers
    Ben Bolker

On 10/12/20 5:18 PM, Uwe Ligges wrote:
> Actually more than 23 minutes check time for a single package is really 
> excessive, can you pls cut that down?
> 
> This comes from
> 
> ** running tests for arch 'i386' ... [509s] OK
> ** running tests for arch 'x64' ... [501s] OK
> 
> so only tests take 1010 seconds already.
> 
> I see that lme4 is a really important package that may justify some 
> extra check time, but this is really a lot.
> 
> Can you please reduce the check time in the tests? e.g. using toy data 
> and few iterations? Or by running less important tests only 
> conditionally if some environment variable is set that you only define 
> on your machine?
> 
> Best,
> Uwe Ligges
> 
> On 12.10.2020 22:25, Ben Bolker wrote:
>> ?? Thanks, but I don't think that's the problem because:
>>
>> ??? (1) Those are reported as being from the last released version, 
>> not this one.
>> ??? (2) As far as I can tell from my local tests, I'm pretty sure I've 
>> fixed these issues in the current release.
>> ??? (3) In my experience UBSAN tests don't generally get re-run for a 
>> while after the initial CRAN testing anyway ...
>>
>> ?? cheers
>> ???? Ben
>>
>>
>> On 10/12/20 4:23 PM, I?aki Ucar wrote:
>>> On Mon, 12 Oct 2020 at 22:04, Ben Bolker <bbolker at gmail.com> wrote:
>>>>
>>>> ??? Before I risk wasting the CRAN maintainers' time with a query, can
>>>> anyone see what I'm missing here?? Everything I can see looks OK, with
>>>> the possible exception of the 'NA' result for "CRAN incoming
>>>> feasibility" on r-devel-windows-ix86+x86_64 (which surely isn't my 
>>>> fault???)
>>>>
>>>> ??? Any help appreciated, as always.
>>>>
>>>> ??? Ben Bolker
>>>
>>> There are UBSAN issues:
>>>
>>>> Last released version's additional issues:
>>>> ??? gcc-UBSAN 
>>>> <https://www.stats.ox.ac.uk/pub/bdr/memtests/gcc-UBSAN/lme4>
>>>
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From murdoch@dunc@n @end|ng |rom gm@||@com  Mon Oct 12 23:53:01 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Mon, 12 Oct 2020 17:53:01 -0400
Subject: [R-pkg-devel] puzzling CRAN rejection
In-Reply-To: <12d678f3-8d91-2634-c916-050eb6d62882@gmail.com>
References: <ec3246c1-17c2-c50c-19e7-158a0f95e9c1@gmail.com>
 <0cd4154b-5323-3936-09d1-292361932c43@gmail.com>
 <12d678f3-8d91-2634-c916-050eb6d62882@gmail.com>
Message-ID: <85c26123-fddd-d1ea-09c9-9d6a8a00bb33@gmail.com>

On 12/10/2020 5:17 p.m., Ben Bolker wrote:
> 
> 
> On 10/12/20 4:40 PM, Duncan Murdoch wrote:
>> There's this one in
>> https://win-builder.r-project.org/incoming_pretest/lme4_1.1-24_20201012_210730/Windows/00check.log:
>>
>>
>>   ? Comparing 'lmer-1.Rout' to 'lmer-1.Rout.save' ...428d427
>> < boundary (singular) fit: see ?isSingular
>> 430d428
>> < boundary (singular) fit: see ?isSingular
>>
>> Those messages about the singular fit show up in
>>
>> https://win-builder.r-project.org/incoming_pretest/lme4_1.1-24_20201012_210730/Windows/examples_and_tests/tests_i386/lmer-1.Rout
>>
>>
>> but not in
>>
>> https://win-builder.r-project.org/incoming_pretest/lme4_1.1-24_20201012_210730/Windows/examples_and_tests/tests_i386/lmer-1.Rout.save
>>
>>
>> The difference also doesn't show up in the x64 versions of the files.
> 
>     OK, thanks.
> 
>     I did notice this in passing (I think), but I got confused by the
> format.  (Also, it doesn't even rise to the level of a NOTE ...)

Yes, failing to match saved test output should be a fatal error, but 
isn't marked as one.

> 
>     It took me a while to localize the problem (line numbers have to be
> computing _after_ throwing away the R header info, see source code of
> tools::Rdiff()).

One of my favourite programs back in the days when I used Windows was 
Beyond Compare (https://www.scootersoftware.com/).  They've had a Mac 
version for a while now; it works well too (though I kind of prefer the 
old Windows UI a bit for some reason).  It made it really easy to find 
this difference, once I figured out which files to compare.  I didn't 
even recognize the line numbers in the CRAN report as line numbers at first.

>      Having spent this long reading tea leaves, I think I'm going to
> write to the CRAN maintainers for clarification.
> 
>     * Refactoring all the tests to decrease the testing time
> significantly is certainly possible (at worst I can make a lot of stuff
> conditionally skipped on CRAN), but would be a nuisance that I'd rather
> save for the next release if possible.
> 
>     * Eliminating the two lines of variable output is easy, but it's
> mildly annoying to update the version number for this small a correction
> ...

I'd say a mismatch in saved output isn't a small problem, it's either a 
too-sensitive test or something serious.

Duncan Murdoch

> 
>     Looks like from now on there will only be odd-numbered releases of
> lme4 on CRAN, since I seem guaranteed to make trivial errors with my
> first (odd-numbered) try each time and have to bump the version number
> when fixing them ...
> 
>      Ben Bolker
> 
> 
>>
>> Duncan Murdoch
>>
>> On 12/10/2020 4:03 p.m., Ben Bolker wrote:
>>>  ??? Before I risk wasting the CRAN maintainers' time with a query, can
>>> anyone see what I'm missing here?? Everything I can see looks OK, with
>>> the possible exception of the 'NA' result for "CRAN incoming
>>> feasibility" on r-devel-windows-ix86+x86_64 (which surely isn't my
>>> fault???)
>>>
>>>  ??? Any help appreciated, as always.
>>>
>>>  ??? Ben Bolker
>>>
>>>
>>>
>>>
>>> =====
>>> Dear maintainer,
>>>
>>> package lme4_1.1-24.tar.gz does not pass the incoming checks
>>> automatically, please see the following pre-tests:
>>> Windows:
>>> <https://win-builder.r-project.org/incoming_pretest/lme4_1.1-24_20201012_210730/Windows/00check.log>
>>>
>>> Status: OK
>>> Debian:
>>> <https://win-builder.r-project.org/incoming_pretest/lme4_1.1-24_20201012_210730/Debian/00check.log>
>>>
>>> Status: OK
>>>
>>> Last released version's CRAN status: ERROR: 2, NOTE: 5, OK: 5
>>> See: <https://CRAN.R-project.org/web/checks/check_results_lme4.html>
>>>
>>> Last released version's additional issues:
>>>  ??? gcc-UBSAN
>>> <https://www.stats.ox.ac.uk/pub/bdr/memtests/gcc-UBSAN/lme4>
>>>
>>> CRAN Web: <https://cran.r-project.org/package=lme4>
>>>
>>> Please fix all problems and resubmit a fixed version via the webform.
>>> If you are not sure how to fix the problems shown, please ask for help
>>> on the R-package-devel mailing list:
>>> <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
>>> If you are fairly certain the rejection is a false positive, please
>>> reply-all to this message and explain.
>>>
>>> More details are given in the directory:
>>> <https://win-builder.r-project.org/incoming_pretest/lme4_1.1-24_20201012_210730/>
>>>
>>> The files will be removed after roughly 7 days.
>>>
>>> *** Strong rev. depends ***: afex agRee altmeta aods3 arm ARTool bapred
>>> bayesammi BayesLN BayesSenMC baystability BBRecapture BClustLonG BFpack
>>> blme blmeco blocksdesign BradleyTerry2 buildmer cAIC4 car carcass cgam
>>> chngpt ciTools clickR climwin CLME clusteredinterference clusterPower
>>> CMatching cpr cvms DClusterm dfmeta DHARMa diagmeta difR doremi
>>> eda4treeR EdSurvey effects embed epr ESTER ez faraway faux fence
>>> finalfit fishmethods fullfact gamm4 geex GHap glmertree glmmEP GLMMRR
>>> glmmsr glmmTMB GLMpack gorica groupedstats gtheory gvcR HelpersMG
>>> HeritSeq hmi iccbeta IDmeasurer IMTest inferference influence.ME
>>> intRvals isni jlctree joineRmeta joineRML JointModel jomo jstable
>>> JWileymisc KenSyn lefko3 lmem.qtler LMERConvenienceFunctions lmerTest
>>> lmSupport longpower LSAmitR macc MAGNAMWAR manymodelr MargCond marked
>>> mbest MDMR mediation MEMSS merDeriv merTools meta metamisc metan
>>> metaplus Metatron micemd MiRKAT misty mixAK MixedPsy MixMAP MixRF MLID
>>> mlma mlmRev mlVAR MMeM multiDimBio multil
>>>  ?? evelTools MultiRR MultisiteMediation mumm mvMISE MXM nanny omics
>>> OptimClassifier pamm panelr paramhetero PBImisc pbkrtest pcgen
>>> pedigreemm Phenotype phyr piecewiseSEM Plasmode PLmixed powerbydesign
>>> powerlmm predictmeans PrevMap prLogistic psfmi ptmixed qape r2mlm
>>> raincin Rcmdr refund reghelper regplot REndo reproducer rewie RLRsim
>>> robustBLME robustlmm rockchalk rosetta rpql rptR rr2 RRreg rsq rstanarm
>>> rstap rties RVAideMemoire RVFam sae semEff siland simr sjstats skpr
>>> SlaPMEG smicd SoyNAM SPCDAnalyze specr SPreFuGED squid stability
>>> standardize statgenGxE statgenSTA StroupGLMM structree Surrogate
>>> surrosurv swissMrP TcGSA themetagenomics tidygate tidyMicro tramME
>>> tukeytrend userfriendlyscience varTestnlme VCA VetResearchLMM warpMix
>>> WebPower welchADF WeMix
>>>
>>> Best regards,
>>> CRAN teams' auto-check service
>>>
>>>
>>> Flavor: r-devel-windows-ix86+x86_64
>>> Check: CRAN incoming feasibility, Result: NA
>>>  ??? Maintainer: 'Ben Bolker <bbolker+lme4 at gmail.com>'
>>>
>>> Flavor: r-devel-windows-ix86+x86_64
>>> Check: Overall checktime, Result: NOTE
>>>  ??? Overall checktime 23 min > 10 min
>>>
>>> Flavor: r-devel-linux-x86_64-debian-gcc
>>> Check: CRAN incoming feasibility, Result: Note_to_CRAN_maintainers
>>>  ??? Maintainer: 'Ben Bolker <bbolker+lme4 at gmail.com>'
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>>


From bbo|ker @end|ng |rom gm@||@com  Tue Oct 13 00:14:43 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Mon, 12 Oct 2020 18:14:43 -0400
Subject: [R-pkg-devel] puzzling CRAN rejection
In-Reply-To: <85c26123-fddd-d1ea-09c9-9d6a8a00bb33@gmail.com>
References: <ec3246c1-17c2-c50c-19e7-158a0f95e9c1@gmail.com>
 <0cd4154b-5323-3936-09d1-292361932c43@gmail.com>
 <12d678f3-8d91-2634-c916-050eb6d62882@gmail.com>
 <85c26123-fddd-d1ea-09c9-9d6a8a00bb33@gmail.com>
Message-ID: <c3593d1e-1ac0-21f5-cf94-0f45efcc60ef@gmail.com>



> 
> I'd say a mismatch in saved output isn't a small problem, it's either a 
> too-sensitive test or something serious.
> 
> Duncan Murdoch
> 

   That's fair enough, but it would be nice if (1) this were a NOTE and 
(2) it were made explicit in the CRAN policy that, *except by special 
exception*, an unresolved NOTE is grounds for rejection.  This is 
broadly understood by experienced package maintainers but must sometimes 
come as a shock to newbies ...

    cheers
     Ben


From murdoch@dunc@n @end|ng |rom gm@||@com  Tue Oct 13 00:36:32 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Mon, 12 Oct 2020 18:36:32 -0400
Subject: [R-pkg-devel] puzzling CRAN rejection
In-Reply-To: <c3593d1e-1ac0-21f5-cf94-0f45efcc60ef@gmail.com>
References: <ec3246c1-17c2-c50c-19e7-158a0f95e9c1@gmail.com>
 <0cd4154b-5323-3936-09d1-292361932c43@gmail.com>
 <12d678f3-8d91-2634-c916-050eb6d62882@gmail.com>
 <85c26123-fddd-d1ea-09c9-9d6a8a00bb33@gmail.com>
 <c3593d1e-1ac0-21f5-cf94-0f45efcc60ef@gmail.com>
Message-ID: <4fcadadc-c3fc-a9df-ebdf-31cccc0ead8d@gmail.com>

On 12/10/2020 6:14 p.m., Ben Bolker wrote:
> 
> 
>>
>> I'd say a mismatch in saved output isn't a small problem, it's either a
>> too-sensitive test or something serious.
>>
>> Duncan Murdoch
>>
> 
>     That's fair enough, but it would be nice if (1) this were a NOTE and

I don't think so.  As I said, I think it should be marked as an ERROR.

Duncan Murdoch

> (2) it were made explicit in the CRAN policy that, *except by special
> exception*, an unresolved NOTE is grounds for rejection.  This is
> broadly understood by experienced package maintainers but must sometimes
> come as a shock to newbies ...


From bbo|ker @end|ng |rom gm@||@com  Tue Oct 13 00:51:46 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Mon, 12 Oct 2020 18:51:46 -0400
Subject: [R-pkg-devel] puzzling CRAN rejection
In-Reply-To: <4fcadadc-c3fc-a9df-ebdf-31cccc0ead8d@gmail.com>
References: <ec3246c1-17c2-c50c-19e7-158a0f95e9c1@gmail.com>
 <0cd4154b-5323-3936-09d1-292361932c43@gmail.com>
 <12d678f3-8d91-2634-c916-050eb6d62882@gmail.com>
 <85c26123-fddd-d1ea-09c9-9d6a8a00bb33@gmail.com>
 <c3593d1e-1ac0-21f5-cf94-0f45efcc60ef@gmail.com>
 <4fcadadc-c3fc-a9df-ebdf-31cccc0ead8d@gmail.com>
Message-ID: <973d064b-6316-0e60-7f4a-a37543c5423e@gmail.com>



On 10/12/20 6:36 PM, Duncan Murdoch wrote:
> On 12/10/2020 6:14 p.m., Ben Bolker wrote:
>>
>>
>>>
>>> I'd say a mismatch in saved output isn't a small problem, it's either a
>>> too-sensitive test or something serious.
>>>
>>> Duncan Murdoch
>>>
>>
>> ??? That's fair enough, but it would be nice if (1) this were a NOTE and
> 
> I don't think so.? As I said, I think it should be marked as an ERROR.

   OK.  But it would probably be wise (if the CRAN maintainers actually 
wanted to do this) to crank it up from silent -> NOTE -> WARNING -> 
ERROR over the course of several releases so as not to have widespread 
test failures on CRAN right away ...


> 
> Duncan Murdoch
> 
>> (2) it were made explicit in the CRAN policy that, *except by special
>> exception*, an unresolved NOTE is grounds for rejection.? This is
>> broadly understood by experienced package maintainers but must sometimes
>> come as a shock to newbies ...
> 
>


From murdoch@dunc@n @end|ng |rom gm@||@com  Tue Oct 13 01:37:31 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Mon, 12 Oct 2020 19:37:31 -0400
Subject: [R-pkg-devel] puzzling CRAN rejection
In-Reply-To: <973d064b-6316-0e60-7f4a-a37543c5423e@gmail.com>
References: <ec3246c1-17c2-c50c-19e7-158a0f95e9c1@gmail.com>
 <0cd4154b-5323-3936-09d1-292361932c43@gmail.com>
 <12d678f3-8d91-2634-c916-050eb6d62882@gmail.com>
 <85c26123-fddd-d1ea-09c9-9d6a8a00bb33@gmail.com>
 <c3593d1e-1ac0-21f5-cf94-0f45efcc60ef@gmail.com>
 <4fcadadc-c3fc-a9df-ebdf-31cccc0ead8d@gmail.com>
 <973d064b-6316-0e60-7f4a-a37543c5423e@gmail.com>
Message-ID: <d5cb73ca-39be-f821-f375-2a76d2aa0b59@gmail.com>

On 12/10/2020 6:51 p.m., Ben Bolker wrote:
> 
> 
> On 10/12/20 6:36 PM, Duncan Murdoch wrote:
>> On 12/10/2020 6:14 p.m., Ben Bolker wrote:
>>>
>>>
>>>>
>>>> I'd say a mismatch in saved output isn't a small problem, it's either a
>>>> too-sensitive test or something serious.
>>>>
>>>> Duncan Murdoch
>>>>
>>>
>>>  ??? That's fair enough, but it would be nice if (1) this were a NOTE and
>>
>> I don't think so.? As I said, I think it should be marked as an ERROR.
> 
>     OK.  But it would probably be wise (if the CRAN maintainers actually
> wanted to do this) to crank it up from silent -> NOTE -> WARNING ->
> ERROR over the course of several releases so as not to have widespread
> test failures on CRAN right away ...

Do you think so?  Why would you put saved results into the package 
unless you want to test if they match?

Honestly, I thought this had always been a fatal error.

Duncan Murdoch


From bbo|ker @end|ng |rom gm@||@com  Tue Oct 13 01:47:21 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Mon, 12 Oct 2020 19:47:21 -0400
Subject: [R-pkg-devel] puzzling CRAN rejection
In-Reply-To: <d5cb73ca-39be-f821-f375-2a76d2aa0b59@gmail.com>
References: <ec3246c1-17c2-c50c-19e7-158a0f95e9c1@gmail.com>
 <0cd4154b-5323-3936-09d1-292361932c43@gmail.com>
 <12d678f3-8d91-2634-c916-050eb6d62882@gmail.com>
 <85c26123-fddd-d1ea-09c9-9d6a8a00bb33@gmail.com>
 <c3593d1e-1ac0-21f5-cf94-0f45efcc60ef@gmail.com>
 <4fcadadc-c3fc-a9df-ebdf-31cccc0ead8d@gmail.com>
 <973d064b-6316-0e60-7f4a-a37543c5423e@gmail.com>
 <d5cb73ca-39be-f821-f375-2a76d2aa0b59@gmail.com>
Message-ID: <fd450c3a-9b9c-a577-6868-cb02571fe6cb@gmail.com>



On 10/12/20 7:37 PM, Duncan Murdoch wrote:
> On 12/10/2020 6:51 p.m., Ben Bolker wrote:
>>
>>
>> On 10/12/20 6:36 PM, Duncan Murdoch wrote:
>>> On 12/10/2020 6:14 p.m., Ben Bolker wrote:
>>>>
>>>>
>>>>>
>>>>> I'd say a mismatch in saved output isn't a small problem, it's 
>>>>> either a
>>>>> too-sensitive test or something serious.
>>>>>
>>>>> Duncan Murdoch
>>>>>
>>>>
>>>> ???? That's fair enough, but it would be nice if (1) this were a 
>>>> NOTE and
>>>
>>> I don't think so.? As I said, I think it should be marked as an ERROR.
>>
>> ??? OK.? But it would probably be wise (if the CRAN maintainers actually
>> wanted to do this) to crank it up from silent -> NOTE -> WARNING ->
>> ERROR over the course of several releases so as not to have widespread
>> test failures on CRAN right away ...
> 
> Do you think so?? Why would you put saved results into the package 
> unless you want to test if they match?

   My point was just that it would be disruptive to switch the severity 
of such mismatches from 'message, no NOTE' to 'ERROR' in a single step - 
I'd imagine it could lead to a very large number of CRAN packages 
suddenly failing their tests.

   cheers
     Ben Bolker


> 
> Honestly, I thought this had always been a fatal error.
> 
> Duncan Murdoch


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Tue Oct 13 10:04:31 2020
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Tue, 13 Oct 2020 10:04:31 +0200
Subject: [R-pkg-devel] puzzling CRAN rejection
In-Reply-To: <64d1294a-eef5-22c3-5547-df0bd32de00b@gmail.com>
References: <ec3246c1-17c2-c50c-19e7-158a0f95e9c1@gmail.com>
 <CALEXWq3oDey1J9Zk6Vkf9jFxs4yvDmgt+vZvj-qfHgXHHbkGaA@mail.gmail.com>
 <69d85f65-1ded-863f-6ec1-81426e48a28f@gmail.com>
 <865793e7-e492-2136-091b-c3eade2359ea@statistik.tu-dortmund.de>
 <64d1294a-eef5-22c3-5547-df0bd32de00b@gmail.com>
Message-ID: <8b646c17-8123-4347-d462-8fef42950e0e@statistik.tu-dortmund.de>



On 12.10.2020 23:29, Ben Bolker wrote:
> 
>  ? Sure.? I assume I should aim for <10 minutes since that's the 
> threshold for a NOTE ...? (for what it's worth the tests take a bit less 
> than 25% as long on my Linux laptop, since an individual test run is 
> more than twice as fast and we only have to check one architecture ...)
> 
>  ? Do I interpret correctly that the advice is to address this problem, 
> bump the version number, and re-submit?

Yes, please.

Best,
Uwe

>  ? cheers
>  ?? Ben Bolker
> 
> On 10/12/20 5:18 PM, Uwe Ligges wrote:
>> Actually more than 23 minutes check time for a single package is 
>> really excessive, can you pls cut that down?
>>
>> This comes from
>>
>> ** running tests for arch 'i386' ... [509s] OK
>> ** running tests for arch 'x64' ... [501s] OK
>>
>> so only tests take 1010 seconds already.
>>
>> I see that lme4 is a really important package that may justify some 
>> extra check time, but this is really a lot.
>>
>> Can you please reduce the check time in the tests? e.g. using toy data 
>> and few iterations? Or by running less important tests only 
>> conditionally if some environment variable is set that you only define 
>> on your machine?
>>
>> Best,
>> Uwe Ligges
>>
>> On 12.10.2020 22:25, Ben Bolker wrote:
>>> ?? Thanks, but I don't think that's the problem because:
>>>
>>> ??? (1) Those are reported as being from the last released version, 
>>> not this one.
>>> ??? (2) As far as I can tell from my local tests, I'm pretty sure 
>>> I've fixed these issues in the current release.
>>> ??? (3) In my experience UBSAN tests don't generally get re-run for a 
>>> while after the initial CRAN testing anyway ...
>>>
>>> ?? cheers
>>> ???? Ben
>>>
>>>
>>> On 10/12/20 4:23 PM, I?aki Ucar wrote:
>>>> On Mon, 12 Oct 2020 at 22:04, Ben Bolker <bbolker at gmail.com> wrote:
>>>>>
>>>>> ??? Before I risk wasting the CRAN maintainers' time with a query, can
>>>>> anyone see what I'm missing here?? Everything I can see looks OK, with
>>>>> the possible exception of the 'NA' result for "CRAN incoming
>>>>> feasibility" on r-devel-windows-ix86+x86_64 (which surely isn't my 
>>>>> fault???)
>>>>>
>>>>> ??? Any help appreciated, as always.
>>>>>
>>>>> ??? Ben Bolker
>>>>
>>>> There are UBSAN issues:
>>>>
>>>>> Last released version's additional issues:
>>>>> ??? gcc-UBSAN 
>>>>> <https://www.stats.ox.ac.uk/pub/bdr/memtests/gcc-UBSAN/lme4>
>>>>
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From |uc@r @end|ng |rom |edor@project@org  Tue Oct 13 11:33:22 2020
From: |uc@r @end|ng |rom |edor@project@org (=?UTF-8?Q?I=C3=B1aki_Ucar?=)
Date: Tue, 13 Oct 2020 11:33:22 +0200
Subject: [R-pkg-devel] puzzling CRAN rejection
In-Reply-To: <fd450c3a-9b9c-a577-6868-cb02571fe6cb@gmail.com>
References: <ec3246c1-17c2-c50c-19e7-158a0f95e9c1@gmail.com>
 <0cd4154b-5323-3936-09d1-292361932c43@gmail.com>
 <12d678f3-8d91-2634-c916-050eb6d62882@gmail.com>
 <85c26123-fddd-d1ea-09c9-9d6a8a00bb33@gmail.com>
 <c3593d1e-1ac0-21f5-cf94-0f45efcc60ef@gmail.com>
 <4fcadadc-c3fc-a9df-ebdf-31cccc0ead8d@gmail.com>
 <973d064b-6316-0e60-7f4a-a37543c5423e@gmail.com>
 <d5cb73ca-39be-f821-f375-2a76d2aa0b59@gmail.com>
 <fd450c3a-9b9c-a577-6868-cb02571fe6cb@gmail.com>
Message-ID: <CALEXWq1dRC6er0aXrbDx0fZL8rquJY8_cLFkM5jfMe1_Eu2D8w@mail.gmail.com>

On Tue, 13 Oct 2020 at 01:47, Ben Bolker <bbolker at gmail.com> wrote:
>
>
>
> On 10/12/20 7:37 PM, Duncan Murdoch wrote:
> > On 12/10/2020 6:51 p.m., Ben Bolker wrote:
> >>
> >>
> >> On 10/12/20 6:36 PM, Duncan Murdoch wrote:
> >>> On 12/10/2020 6:14 p.m., Ben Bolker wrote:
> >>>>
> >>>>
> >>>>>
> >>>>> I'd say a mismatch in saved output isn't a small problem, it's
> >>>>> either a
> >>>>> too-sensitive test or something serious.
> >>>>>
> >>>>> Duncan Murdoch
> >>>>>
> >>>>
> >>>>      That's fair enough, but it would be nice if (1) this were a
> >>>> NOTE and
> >>>
> >>> I don't think so.  As I said, I think it should be marked as an ERROR.
> >>
> >>     OK.  But it would probably be wise (if the CRAN maintainers actually
> >> wanted to do this) to crank it up from silent -> NOTE -> WARNING ->
> >> ERROR over the course of several releases so as not to have widespread
> >> test failures on CRAN right away ...
> >
> > Do you think so?  Why would you put saved results into the package
> > unless you want to test if they match?
>
>    My point was just that it would be disruptive to switch the severity
> of such mismatches from 'message, no NOTE' to 'ERROR' in a single step -
> I'd imagine it could lead to a very large number of CRAN packages
> suddenly failing their tests.

Hold on, are we sure this is detected at all? The result of the tests
is reported as OK. The "singular fit" message goes to stderr, so my
guess is that it is not compared against the saved output at all.

-- 
I?aki ?car


From murdoch@dunc@n @end|ng |rom gm@||@com  Tue Oct 13 11:44:33 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Tue, 13 Oct 2020 05:44:33 -0400
Subject: [R-pkg-devel] puzzling CRAN rejection
In-Reply-To: <CALEXWq1dRC6er0aXrbDx0fZL8rquJY8_cLFkM5jfMe1_Eu2D8w@mail.gmail.com>
References: <ec3246c1-17c2-c50c-19e7-158a0f95e9c1@gmail.com>
 <0cd4154b-5323-3936-09d1-292361932c43@gmail.com>
 <12d678f3-8d91-2634-c916-050eb6d62882@gmail.com>
 <85c26123-fddd-d1ea-09c9-9d6a8a00bb33@gmail.com>
 <c3593d1e-1ac0-21f5-cf94-0f45efcc60ef@gmail.com>
 <4fcadadc-c3fc-a9df-ebdf-31cccc0ead8d@gmail.com>
 <973d064b-6316-0e60-7f4a-a37543c5423e@gmail.com>
 <d5cb73ca-39be-f821-f375-2a76d2aa0b59@gmail.com>
 <fd450c3a-9b9c-a577-6868-cb02571fe6cb@gmail.com>
 <CALEXWq1dRC6er0aXrbDx0fZL8rquJY8_cLFkM5jfMe1_Eu2D8w@mail.gmail.com>
Message-ID: <26767715-82a9-a753-cafd-5127da0d03de@gmail.com>

On 13/10/2020 5:33 a.m., I?aki Ucar wrote:
> On Tue, 13 Oct 2020 at 01:47, Ben Bolker <bbolker at gmail.com> wrote:
>>
>>
>>
>> On 10/12/20 7:37 PM, Duncan Murdoch wrote:
>>> On 12/10/2020 6:51 p.m., Ben Bolker wrote:
>>>>
>>>>
>>>> On 10/12/20 6:36 PM, Duncan Murdoch wrote:
>>>>> On 12/10/2020 6:14 p.m., Ben Bolker wrote:
>>>>>>
>>>>>>
>>>>>>>
>>>>>>> I'd say a mismatch in saved output isn't a small problem, it's
>>>>>>> either a
>>>>>>> too-sensitive test or something serious.
>>>>>>>
>>>>>>> Duncan Murdoch
>>>>>>>
>>>>>>
>>>>>>       That's fair enough, but it would be nice if (1) this were a
>>>>>> NOTE and
>>>>>
>>>>> I don't think so.  As I said, I think it should be marked as an ERROR.
>>>>
>>>>      OK.  But it would probably be wise (if the CRAN maintainers actually
>>>> wanted to do this) to crank it up from silent -> NOTE -> WARNING ->
>>>> ERROR over the course of several releases so as not to have widespread
>>>> test failures on CRAN right away ...
>>>
>>> Do you think so?  Why would you put saved results into the package
>>> unless you want to test if they match?
>>
>>     My point was just that it would be disruptive to switch the severity
>> of such mismatches from 'message, no NOTE' to 'ERROR' in a single step -
>> I'd imagine it could lead to a very large number of CRAN packages
>> suddenly failing their tests.
> 
> Hold on, are we sure this is detected at all? The result of the tests
> is reported as OK. The "singular fit" message goes to stderr, so my
> guess is that it is not compared against the saved output at all.
> 

It is reported in the 00check.log file; I gave the link to the report.

I think it's a bug in the check code that the check log reports OK at 
the end, when (what should be) a fatal error has been displayed.

Duncan Murdoch


From @erg|o@|b@rr@ @end|ng |rom u@p@br  Tue Oct 13 17:07:46 2020
From: @erg|o@|b@rr@ @end|ng |rom u@p@br (Sergio Ibarra-Espinosa)
Date: Tue, 13 Oct 2020 12:07:46 -0300
Subject: [R-pkg-devel] Fortran with OpenMP on MACOS
Message-ID: <CACB4+8oaLfgUs27qFYp6dc0eH8cs540Hy7RX6FqTJVM0d6jwCA@mail.gmail.com>

Dear List,

I have a package that was archived (
https://cran-archive.r-project.org/web/checks/2020/2020-10-07_check_results_vein.html
) because I could not solve an issue with OpenMP and Fortran on MACOS.

I have seen that packages with C add precompilation conditions, for
instance:

https://github.com/tesujimath/R-OpenMPController/blob/86bd047e8bfdf3c87877336ff8e2d3b69327fe03/src/omp_set_num_threads_ptr.c#L12

#ifdef _OPENMP
  omp_set_num_threads(*np);
#endif

So, I tried adding those lines in #ifdef _OPENMP #endif in
fortran, with the flag -cpp and the MACROS recommended by the R EXTS manual:

USE_FC_TO_LINK =
PKG_FFLAGS = $(SHLIB_OPENMP_FFLAGS) *-cpp*
PKG_LIBS = $(SHLIB_OPENMP_FFLAGS)

But with R CMD Check i got the message:

Non-portable flags in variable 'PKG_FFLAGS': -cpp

I would be very grateful if someone provides me some guidelines. Thank you
so much

Best, Sergio


*Sergio Ibarra Espinosa*
Postdoc in Atmospheric Sciences, Universidade de S?o Paulo

+  <++8617643016295>55 11 934 909 778  | +55 11 974 253 791
<+55+11+974+253+791> | sergio.ibarra at usp.br

www.sergioibarra.blogspot.com | *Skype*: sergio_ibarra1
<https://mail.google.com/mail/u/0/#SignatureSanitizer_SafeHtmlFilter_>
Rua do Mat?o, 1226 - Cidade Universit?ria S?o Paulo-SP - Brasil - 05508-090
<http://github.com/ibarraespinosa>
<https://zoom.us/j/6527509021?pwd=VmlXQWliR1JSZGtpS0tJR1A2dUZpZz09>

	[[alternative HTML version deleted]]


From er|nm@hodge@@ @end|ng |rom gm@||@com  Tue Oct 13 17:41:25 2020
From: er|nm@hodge@@ @end|ng |rom gm@||@com (Erin Hodgess)
Date: Tue, 13 Oct 2020 09:41:25 -0600
Subject: [R-pkg-devel] Fortran with OpenMP on MACOS
In-Reply-To: <CACB4+8oaLfgUs27qFYp6dc0eH8cs540Hy7RX6FqTJVM0d6jwCA@mail.gmail.com>
References: <CACB4+8oaLfgUs27qFYp6dc0eH8cs540Hy7RX6FqTJVM0d6jwCA@mail.gmail.com>
Message-ID: <CACxE24kyL4Vs5kKxUWaEpq8tb5rDgFQW7jni3yDEvgmr+AaNkA@mail.gmail.com>

I?m sure that you have done this, but did you set a compiler option of
-fopenmp, please?

Thanks

On Tue, Oct 13, 2020 at 9:35 AM Sergio Ibarra-Espinosa <sergio.ibarra at usp.br>
wrote:

> Dear List,
>
> I have a package that was archived (
>
> https://cran-archive.r-project.org/web/checks/2020/2020-10-07_check_results_vein.html
> ) because I could not solve an issue with OpenMP and Fortran on MACOS.
>
> I have seen that packages with C add precompilation conditions, for
> instance:
>
>
> https://github.com/tesujimath/R-OpenMPController/blob/86bd047e8bfdf3c87877336ff8e2d3b69327fe03/src/omp_set_num_threads_ptr.c#L12
>
> #ifdef _OPENMP
>   omp_set_num_threads(*np);
> #endif
>
> So, I tried adding those lines in #ifdef _OPENMP #endif in
> fortran, with the flag -cpp and the MACROS recommended by the R EXTS
> manual:
>
> USE_FC_TO_LINK =
> PKG_FFLAGS = $(SHLIB_OPENMP_FFLAGS) *-cpp*
> PKG_LIBS = $(SHLIB_OPENMP_FFLAGS)
>
> But with R CMD Check i got the message:
>
> Non-portable flags in variable 'PKG_FFLAGS': -cpp
>
> I would be very grateful if someone provides me some guidelines. Thank you
> so much
>
> Best, Sergio
>
>
> *Sergio Ibarra Espinosa*
> Postdoc in Atmospheric Sciences, Universidade de S?o Paulo
>
> +  <++8617643016295>55 11 934 909 778  | +55 11 974 253 791
> <+55+11+974+253+791> | sergio.ibarra at usp.br
>
> www.sergioibarra.blogspot.com | *Skype*: sergio_ibarra1
> <https://mail.google.com/mail/u/0/#SignatureSanitizer_SafeHtmlFilter_>
> Rua do Mat?o, 1226
> <https://www.google.com/maps/search/Rua+do+Mat%C3%A3o,+1226?entry=gmail&source=g>
> - Cidade Universit?ria S?o Paulo-SP - Brasil - 05508-090
> <http://github.com/ibarraespinosa>
> <https://zoom.us/j/6527509021?pwd=VmlXQWliR1JSZGtpS0tJR1A2dUZpZz09>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
-- 
Erin Hodgess, PhD
mailto: erinm.hodgess at gmail.com

	[[alternative HTML version deleted]]


From he|mut@@chuetz @end|ng |rom beb@c@@t  Tue Oct 13 17:54:58 2020
From: he|mut@@chuetz @end|ng |rom beb@c@@t (=?UTF-8?Q?Helmut_Sch=c3=bctz?=)
Date: Tue, 13 Oct 2020 17:54:58 +0200
Subject: [R-pkg-devel] rJava (broken installation?)
Message-ID: <df442db0-0a0e-c681-d5d6-8a1e673e9087@bebac.at>

Dear all,

in one of my packages I import from package xlsx, which itself imports 
rJava.
I have the current Java (jre1.8.0_261) installed:
  ? JAVA_VERSION="1.8.0_261"
  ? OS_NAME="Windows"
  ? OS_VERSION="5.2"
  ? OS_ARCH="amd64"

However:
  ? devtools::session_info("rJava")
  ? - Session info 
---------------------------------------------------------------
  ?? setting? value
  ?? version? R version 4.0.3 (2020-10-10)
  ?? os?????? Windows 7 x64 SP 1
  ?? system?? x86_64, mingw32
  ?? ui?????? Rgui
  ?? language EN
  ?? collate? German_Germany.1252
  ?? ctype??? German_Germany.1252
  ?? tz?????? Europe/Vienna
  ?? date???? 2020-10-13

  ? - Packages 
-------------------------------------------------------------------
  ?? ! package * version date?????? lib source
  ?? D rJava???? 0.9-13? 2020-07-06 [1] CRAN (R 4.0.2)

  ? [1] D:/Program Files/R/R-4.0.3/library

  ?? D -- DLL MD5 mismatch, broken installation.

I found only this: 
https://community.rstudio.com/t/error-dll-md5-mismatch-broken-installation/64141 
with no answer.

Deleted rJava from my library and made a new install, no avail.

The functions I need from xlsx work as intended but I'm worried a bit.

Helmut

-- 
Ing. Helmut Sch?tz
BEBAC?? Consultancy Services for
Bioequivalence and Bioavailability Studies
Neubaugasse 36/11
1070 Vienna, Austria
E helmut.schuetz at bebac.at
W https://bebac.at/
F https://forum.bebac.at/


From c@@rd|@g@bor @end|ng |rom gm@||@com  Tue Oct 13 18:01:21 2020
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Tue, 13 Oct 2020 17:01:21 +0100
Subject: [R-pkg-devel] rJava (broken installation?)
In-Reply-To: <df442db0-0a0e-c681-d5d6-8a1e673e9087@bebac.at>
References: <df442db0-0a0e-c681-d5d6-8a1e673e9087@bebac.at>
Message-ID: <CABtg=Kn-7eNR4QR+usVEmSza9cZ6wYJFtw_DXHf86jcvd8FV6w@mail.gmail.com>

Make sure you quit from all R sessions before you reinstall rJava, and
also that it is not loaded in the current session.

You can also run tools::checkMD5sums("rJava") to check the MD5 sums.

Gabor

On Tue, Oct 13, 2020 at 4:55 PM Helmut Sch?tz <helmut.schuetz at bebac.at> wrote:
>
> Dear all,
>
> in one of my packages I import from package xlsx, which itself imports
> rJava.
> I have the current Java (jre1.8.0_261) installed:
>     JAVA_VERSION="1.8.0_261"
>     OS_NAME="Windows"
>     OS_VERSION="5.2"
>     OS_ARCH="amd64"
>
> However:
>     devtools::session_info("rJava")
>     - Session info
> ---------------------------------------------------------------
>      setting  value
>      version  R version 4.0.3 (2020-10-10)
>      os       Windows 7 x64 SP 1
>      system   x86_64, mingw32
>      ui       Rgui
>      language EN
>      collate  German_Germany.1252
>      ctype    German_Germany.1252
>      tz       Europe/Vienna
>      date     2020-10-13
>
>     - Packages
> -------------------------------------------------------------------
>      ! package * version date       lib source
>      D rJava     0.9-13  2020-07-06 [1] CRAN (R 4.0.2)
>
>     [1] D:/Program Files/R/R-4.0.3/library
>
>      D -- DLL MD5 mismatch, broken installation.
>
> I found only this:
> https://community.rstudio.com/t/error-dll-md5-mismatch-broken-installation/64141
> with no answer.
>
> Deleted rJava from my library and made a new install, no avail.
>
> The functions I need from xlsx work as intended but I'm worried a bit.
>
> Helmut
>
> --
> Ing. Helmut Sch?tz
> BEBAC ? Consultancy Services for
> Bioequivalence and Bioavailability Studies
> Neubaugasse 36/11
> 1070 Vienna, Austria
> E helmut.schuetz at bebac.at
> W https://bebac.at/
> F https://forum.bebac.at/
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From edd @end|ng |rom deb|@n@org  Tue Oct 13 18:10:26 2020
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Tue, 13 Oct 2020 11:10:26 -0500
Subject: [R-pkg-devel] rJava (broken installation?)
In-Reply-To: <df442db0-0a0e-c681-d5d6-8a1e673e9087@bebac.at>
References: <df442db0-0a0e-c681-d5d6-8a1e673e9087@bebac.at>
Message-ID: <24453.53618.452090.751931@rob.eddelbuettel.com>


On 13 October 2020 at 17:54, Helmut Sch?tz wrote:
| in one of my packages I import from package xlsx, which itself imports 

In case you were unaware there is also openxlsx which may be sufficient for
your import/export needs, and which is does not need a Java toolchain.

Dirk

-- 
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From @erg|o@|b@rr@ @end|ng |rom u@p@br  Tue Oct 13 18:19:27 2020
From: @erg|o@|b@rr@ @end|ng |rom u@p@br (Sergio Ibarra-Espinosa)
Date: Tue, 13 Oct 2020 13:19:27 -0300
Subject: [R-pkg-devel] Fortran with OpenMP on MACOS
In-Reply-To: <CACxE24kyL4Vs5kKxUWaEpq8tb5rDgFQW7jni3yDEvgmr+AaNkA@mail.gmail.com>
References: <CACB4+8oaLfgUs27qFYp6dc0eH8cs540Hy7RX6FqTJVM0d6jwCA@mail.gmail.com>
 <CACxE24kyL4Vs5kKxUWaEpq8tb5rDgFQW7jni3yDEvgmr+AaNkA@mail.gmail.com>
Message-ID: <CACB4+8pzSaUY82ws9FHDeQJrPRJdLz4nMvemO-cFTiL1wpVxMw@mail.gmail.com>

I'm, sorry but I don't understand your question. To my understanding,
adding the mentioned MACROS should be enough to add the flag -fopenmp.
Actually, when I build the package, gfortran already uses the flag -fopenmp:

gfortran -fno-optimize-sibling-calls *-fopenmp* -fpic  -g -O2
-fdebug-prefix-map=/build/r-base-8T8CYO/r-base-4.0.3=.
-fstack-protector-strong  -c  get_threads.f90 -o get_threads.o




Em ter., 13 de out. de 2020 ?s 12:41, Erin Hodgess <erinm.hodgess at gmail.com>
escreveu:

>
> I?m sure that you have done this, but did you set a compiler option of
> -fopenmp, please?
>
> Thanks
>
> On Tue, Oct 13, 2020 at 9:35 AM Sergio Ibarra-Espinosa <
> sergio.ibarra at usp.br> wrote:
>
>> Dear List,
>>
>> I have a package that was archived (
>>
>> https://cran-archive.r-project.org/web/checks/2020/2020-10-07_check_results_vein.html
>> ) because I could not solve an issue with OpenMP and Fortran on MACOS.
>>
>> I have seen that packages with C add precompilation conditions, for
>> instance:
>>
>>
>> https://github.com/tesujimath/R-OpenMPController/blob/86bd047e8bfdf3c87877336ff8e2d3b69327fe03/src/omp_set_num_threads_ptr.c#L12
>>
>> #ifdef _OPENMP
>>   omp_set_num_threads(*np);
>> #endif
>>
>> So, I tried adding those lines in #ifdef _OPENMP #endif in
>> fortran, with the flag -cpp and the MACROS recommended by the R EXTS
>> manual:
>>
>> USE_FC_TO_LINK =
>> PKG_FFLAGS = $(SHLIB_OPENMP_FFLAGS) *-cpp*
>> PKG_LIBS = $(SHLIB_OPENMP_FFLAGS)
>>
>> But with R CMD Check i got the message:
>>
>> Non-portable flags in variable 'PKG_FFLAGS': -cpp
>>
>> I would be very grateful if someone provides me some guidelines. Thank you
>> so much
>>
>> Best, Sergio
>>
>>
>> *Sergio Ibarra Espinosa*
>> Postdoc in Atmospheric Sciences, Universidade de S?o Paulo
>>
>> +  <++8617643016295>55 11 934 909 778  | +55 11 974 253 791
>> <+55+11+974+253+791> | sergio.ibarra at usp.br
>>
>> www.sergioibarra.blogspot.com | *Skype*: sergio_ibarra1
>> <https://mail.google.com/mail/u/0/#SignatureSanitizer_SafeHtmlFilter_>
>> Rua do Mat?o, 1226
>> <https://www.google.com/maps/search/Rua+do+Mat%C3%A3o,+1226?entry=gmail&source=g>
>> - Cidade Universit?ria S?o Paulo-SP - Brasil - 05508-090
>> <http://github.com/ibarraespinosa>
>> <https://zoom.us/j/6527509021?pwd=VmlXQWliR1JSZGtpS0tJR1A2dUZpZz09>
>>
>>         [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
> --
> Erin Hodgess, PhD
> mailto: erinm.hodgess at gmail.com
>

	[[alternative HTML version deleted]]


From bbo|ker @end|ng |rom gm@||@com  Tue Oct 13 18:46:11 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Tue, 13 Oct 2020 12:46:11 -0400
Subject: [R-pkg-devel] checking windows timing?
Message-ID: <a9f3300c-ed86-7487-753f-416cb0fce7b7@gmail.com>


   Following up on my questions from yesterday:

   I've been advised to (drastically) reduce the checking time of my 
package on CRAN's Windows platform (currently at 23 min). I've gone 
through and added a lot of conditionals to skip tests on CRAN.  I could 
reduce it farther but I'm starting to encounter seriously diminishing 
returns, e.g.

  * do I condition out some particular test that takes 6 seconds? (e.g., 
a little slow, but not egregious)
  * do I put \dontrun{} around an example that takes 6 seconds [I'm a 
bit confused about this, but as I understand it CRAN checks with 
--run-donttest ? \dontrun{} also sometimes provokes complaints from 
CRAN, because "you should only use \dontrun{} for code that cannot be 
run by users" ...]

   I don't want to spend forever tweaking things, and I don't want to 
comment/condition out all of my tests, but I would really prefer to 
avoid bouncing from CRAN again. I don't know a *reliable* way to test 
whether CRAN-checking on Windows will take <10 mins or not ...

   I don't have a local Windows test platform.

   win-builder gives timings for long-running components, but not for 
the whole run.

   r-hub gives a time for the entire build (19 min in my case) - but 
this includes the time to set up the virtual machine, install all 
packages, etc..

   I can approximately predict that most examples and tests will take 
twice as long on CRAN's windows machines (and four times as long since 
tests, at least, are checked on both i386 and x86_64 architectures).

   Testing is currently taking 6 minutes on my local machine (newish 
Ubuntu 18.04 laptop), so I guess have more work to do, but I wonder if 
anyone has suggestions ...

   cheers
     Ben Bolker


From n@r@@ @end|ng |rom @t@n|ord@edu  Wed Oct 14 00:04:27 2020
From: n@r@@ @end|ng |rom @t@n|ord@edu (Balasubramanian Narasimhan)
Date: Tue, 13 Oct 2020 15:04:27 -0700
Subject: [R-pkg-devel] checking windows timing?
In-Reply-To: <a9f3300c-ed86-7487-753f-416cb0fce7b7@gmail.com>
References: <a9f3300c-ed86-7487-753f-416cb0fce7b7@gmail.com>
Message-ID: <08f09457-ecb8-b61c-3c5e-f214f709bdbe@stanford.edu>

FWIW, we dealt with the tests-taking-too-long problem for CVXR (which 
has a lot of tests) by mercilessly cutting out all tests on CRAN 
(testthat::skip_on_cran()) except for some fundamental ones on atoms, 
curvature, etc.? We then rely on Github actions (with NOT_CRAN = true) 
to run the full test suite on several platforms. Not perfect, but that's 
what worked for us.

-Naras

On 10/13/20 9:46 AM, Ben Bolker wrote:
>
> ? Following up on my questions from yesterday:
>
> ? I've been advised to (drastically) reduce the checking time of my 
> package on CRAN's Windows platform (currently at 23 min). I've gone 
> through and added a lot of conditionals to skip tests on CRAN.? I 
> could reduce it farther but I'm starting to encounter seriously 
> diminishing returns, e.g.
>
> ?* do I condition out some particular test that takes 6 seconds? 
> (e.g., a little slow, but not egregious)
> ?* do I put \dontrun{} around an example that takes 6 seconds [I'm a 
> bit confused about this, but as I understand it CRAN checks with 
> --run-donttest ? \dontrun{} also sometimes provokes complaints from 
> CRAN, because "you should only use \dontrun{} for code that cannot be 
> run by users" ...]
>
> ? I don't want to spend forever tweaking things, and I don't want to 
> comment/condition out all of my tests, but I would really prefer to 
> avoid bouncing from CRAN again. I don't know a *reliable* way to test 
> whether CRAN-checking on Windows will take <10 mins or not ...
>
> ? I don't have a local Windows test platform.
>
> ? win-builder gives timings for long-running components, but not for 
> the whole run.
>
> ? r-hub gives a time for the entire build (19 min in my case) - but 
> this includes the time to set up the virtual machine, install all 
> packages, etc..
>
> ? I can approximately predict that most examples and tests will take 
> twice as long on CRAN's windows machines (and four times as long since 
> tests, at least, are checked on both i386 and x86_64 architectures).
>
> ? Testing is currently taking 6 minutes on my local machine (newish 
> Ubuntu 18.04 laptop), so I guess have more work to do, but I wonder if 
> anyone has suggestions ...
>
> ? cheers
> ??? Ben Bolker
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Wed Oct 14 11:59:32 2020
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Wed, 14 Oct 2020 11:59:32 +0200
Subject: [R-pkg-devel] checking windows timing?
In-Reply-To: <a9f3300c-ed86-7487-753f-416cb0fce7b7@gmail.com>
References: <a9f3300c-ed86-7487-753f-416cb0fce7b7@gmail.com>
Message-ID: <24454.52228.64929.584708@stat.math.ethz.ch>

>>>>> Ben Bolker 
>>>>>     on Tue, 13 Oct 2020 12:46:11 -0400 writes:

    >    Following up on my questions from yesterday:

    >    I've been advised to (drastically) reduce the checking
    > time of my package on CRAN's Windows platform (currently
    > at 23 min). I've gone through and added a lot of
    > conditionals to skip tests on CRAN.  I could reduce it
    > farther but I'm starting to encounter seriously
    > diminishing returns, e.g.


    >   * do I condition out some particular test that takes 6
    > seconds? (e.g., a little slow, but not egregious) * do I
    > put \dontrun{} around an example that takes 6 seconds [I'm
    > a bit confused about this, but as I understand it CRAN
    > checks with --run-donttest ? \dontrun{} also sometimes
    > provokes complaints from CRAN, because "you should only
    > use \dontrun{} for code that cannot be run by users" ...]

Really don't use \dontrun{}.  You'll stop running those examples
even for the users of  your package who  do

     example(<some>)

Rather do use an environment variable - based setup (as Uwe
mentioned).

In several packages of mine, I use

if(<pkg>:::doExtras()) { 
  ...  ## longer running examples / tests
}

sometimes also using withAutoprint({ .... })  which is important
when the longer running code is producing output that I'd want
to continue showing.


In my 'robustbase' package, I have somewhere in robustbase/R/<foo>.R

## Not exported, and only used because CRAN checks must be faster
doExtras <- function() {
    interactive() || nzchar(Sys.getenv("R_robustbase_check_extra")) ||
        identical("true", unname(Sys.getenv("R_PKG_CHECKING_doExtras")))
}

so doExtras()  is true for me,  *either* if I set the

package-specific        R_robustbase_check_extra  variable to non-empty
*or* the more global    R_PKG_CHECKING_doExtras   variable to non-empty.

That way, I can have all these check running in my own checks
(say by default, but can turn them off by unsetting the env.var.)

and yes, I use  doExtras  extensively in the tests, but very
much on purpose also in examples, there sometimes  combined with

 if(interactive()) { ... }

which keeps help page examples running interactively, but not in
'R CMD check' ..

Martin

    >    I don't want to spend forever tweaking things, and I
    > don't want to comment/condition out all of my tests, but I
    > would really prefer to avoid bouncing from CRAN again. I
    > don't know a *reliable* way to test whether CRAN-checking
    > on Windows will take <10 mins or not ...

    >    I don't have a local Windows test platform.

    >    win-builder gives timings for long-running components,
    > but not for the whole run.

    >    r-hub gives a time for the entire build (19 min in my
    > case) - but this includes the time to set up the virtual
    > machine, install all packages, etc..

    >    I can approximately predict that most examples and
    > tests will take twice as long on CRAN's windows machines
    > (and four times as long since tests, at least, are checked
    > on both i386 and x86_64 architectures).

    >    Testing is currently taking 6 minutes on my local
    > machine (newish Ubuntu 18.04 laptop), so I guess have more
    > work to do, but I wonder if anyone has suggestions ...

    >    cheers Ben Bolker


From Jo@ephP@rk @end|ng |rom IEEE@org  Wed Oct 14 21:56:40 2020
From: Jo@ephP@rk @end|ng |rom IEEE@org (Joseph Park)
Date: Wed, 14 Oct 2020 15:56:40 -0400
Subject: [R-pkg-devel] C++ library USING_R
Message-ID: <16c3b09f-031b-5dce-643d-d292894481b5@IEEE.org>

Dear R-devel,

The Writing R Extensions manual states:

6.14 Platform and version information
The header files define USING_R, which can be used to test if the code 
is indeed being used with R.

I suppose this only applies to building R itself?? Or, perhaps when Rcpp 
is used for the interface, or if one includes R headers explicitly.

I have a C++ library that is built with no R-dependencies, then wrapped 
with an Rcpp interface. This same library is wrapped with pybind11 in 
the Python world, and directly used in C++ applications.

How can the C++ library code "know" that it's R building the library? Is 
there a platform-independent environment variable or macro?

Thanks.


From edd @end|ng |rom deb|@n@org  Thu Oct 15 03:40:45 2020
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Wed, 14 Oct 2020 20:40:45 -0500
Subject: [R-pkg-devel] C++ library USING_R
In-Reply-To: <16c3b09f-031b-5dce-643d-d292894481b5@IEEE.org>
References: <16c3b09f-031b-5dce-643d-d292894481b5@IEEE.org>
Message-ID: <24455.43165.512772.804445@rob.eddelbuettel.com>


On 14 October 2020 at 15:56, Joseph Park wrote:
| Dear R-devel,
| 
| The Writing R Extensions manual states:
| 
| 6.14 Platform and version information
| The header files define USING_R, which can be used to test if the code 
| is indeed being used with R.
| 
| I suppose this only applies to building R itself?? Or, perhaps when Rcpp 
| is used for the interface, or if one includes R headers explicitly.
| 
| I have a C++ library that is built with no R-dependencies, then wrapped 
| with an Rcpp interface. This same library is wrapped with pybind11 in 
| the Python world, and directly used in C++ applications.
| 
| How can the C++ library code "know" that it's R building the library? Is 
| there a platform-independent environment variable or macro?

So if I have this right you have

  - a library LIB using only standard C++ components

  - that you wrapped into a Python package via pybind11, and

  - that you want to build for R and 'let it know it used for R'

Well I think you would then use a (wrapper) R package R_LIB and could set up
a -DR_BUILD in the src/Makevars for R_LIB. This presume that you actually
recompile LIB as part of the build; if you were to link with a static or
shared build then you could not do this _for lack of a subsequent
compilation_ and can only rely on run-time information.

Hope this helps, and that I didn't misunderstand the question.

Dirk

-- 
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From Jo@ephP@rk @end|ng |rom IEEE@org  Thu Oct 15 16:36:10 2020
From: Jo@ephP@rk @end|ng |rom IEEE@org (Joseph Park)
Date: Thu, 15 Oct 2020 10:36:10 -0400
Subject: [R-pkg-devel] C++ library USING_R
In-Reply-To: <24456.15848.572119.263845@rob.eddelbuettel.com>
References: <16c3b09f-031b-5dce-643d-d292894481b5@IEEE.org>
 <24455.43165.512772.804445@rob.eddelbuettel.com>
 <d063cb10-e2a1-4c70-77ca-10ebddfc2e96@IEEE.org>
 <24456.13145.412066.906040@rob.eddelbuettel.com>
 <c5d15db9-8631-80e2-48f2-63653e7d3459@IEEE.org>
 <24456.15848.572119.263845@rob.eddelbuettel.com>
Message-ID: <2d7d2c5e-553f-8172-776e-5add0963504b@IEEE.org>

Apologies for the mis-directed reply, and, imprecise syntax/context re 
environment variable.

Just to close the loop, it seems that using a -D macro assignment inside 
the make command (macro?) is interpreted as a make option:

$(LIBEDM):
 ??? @(cd $(CPPEDM_SRC_PATH) && $(MAKE) clean && $(MAKE) \
 ??? CXX="$(CXX11) $(CXX11STD)" CXXFLAGS="$(CXX11FLAGS) $(CXX11PICFLAGS)" \
 ??? AR="$(AR)" RANLIB="$(RANLIB)" -DUSING_R=1)

...

 ?? make[1]: Entering directory 
'/tmp/RtmpxVmJkT/Rbuild1553f22c7484d/rEDM/src/cppEDM/src'
 ?? rm -f API.o CCM.o Common.o DateTime.o EDM.o EDM_Formatting.o 
EDM_Neighbors.o Eval.o Multiview.o Parameter.o Simplex.o SMap.o libEDM.a
 ?? make[1]: Leaving directory 
'/tmp/RtmpxVmJkT/Rbuild1553f22c7484d/rEDM/src/cppEDM/src'
 ?? make: invalid option -- 'D'

Hmm... since I use an R-specific makefile inside the C++ library 
directory anyway, adding -DUSING_R there seems like a decent solution.

Thanks a-million for the support & guidance to get me to the obvious 
solution!

J Park

On 10/15/20 8:17 AM, Dirk Eddelbuettel wrote:
> *Please* direct this back to the list if you have another follow-up. Private
> email is not efficient / has no second or third or ... set of eyes.
>
> On 15 October 2020 at 07:53, Joseph Park wrote:
> | Thanks for the clarification.
> |
> | One last caveat: the C++ code already has a hook presuming #define
> | USING_R. Does it seem reasonable/safe to use that as the variable passed
> | to the C++ library build instead of say R_BUILD?
>
> Hm, here I do not understand how you think that a _constant_ declaration can
> help you detect a _variable_ situation ("are we / are we not compiled for R").
>
> If you mainly wonder about the name of the variable: your code. You can do
> what you want. Nobody cares. No "defaults".
>   
> | Or, does defining USING_R as an environment variable (-D) have potential
>
> -D is not an envinronment variable.
>
> -D is a #define passed tot he compiler.
>
> | unintended consequences since the R headers already have defined it?? I
> | would think it's OK since the library/build is "independent" from R.
>
> A build triggered from src/Makevars is NOT independent of R.
>   
> | As a disciple of PEP20, I suppose (re)defining USING_R for specific
> | purposes is a bad idea...
>
> I have no idea what PEP20 is. I helped you from an R list. Do not assume I
> know (Python?) lingo.
>
> Dirk
>   
> | J Park
> |
> | On 10/15/20 7:32 AM, Dirk Eddelbuettel wrote:
> | > (Replies on-list preferred)
> | >
> | > On 15 October 2020 at 07:08, Joseph Park wrote:
> | > | Thank you.? It always stings a bit to miss the obvious solution as you
> | > | have suggested. :(
> | >
> | > No worries :)  R builds are "special" enough to warrant an iteration or two to
> | > get familiar with the pecularities.
> | >
> | > | Yes, the C++ library is built during the R package install.
> | > |
> | > | We have in Makevars:
> | > |
> | > | all : $(SHLIB)
> | > |
> | > | $(SHLIB): $(LIBEDM)
> | > |
> | > | $(LIBEDM):
> | > |  ??? @(cd $(CPPEDM_SRC_PATH) && $(MAKE) clean && $(MAKE) \
> | > |  ??? CXX="$(CXX11) $(CXX11STD)" CXXFLAGS="$(CXX11FLAGS) $(CXX11PICFLAGS)" \
> | > |  ??? AR="$(AR)" RANLIB="$(RANLIB)")
> | > |
> | > | The obvious solution is to add an environment variable in the LIBEDM
> | > | build command, ala:
> | > |
> | > | R_BUILD=1
> | > |
> | > | Then the C++ code can use #ifdef R_BUILD ...
> | > |
> | > | Is this tenable, or, is there another preferred approach?
> | >
> | > No, that is what I would do as a -D.... option to the compiler call ie
> | > directly add -DR_BUILD=1 here
> | >
> | > $(LIBEDM):
> | >    ??? @(cd $(CPPEDM_SRC_PATH) && $(MAKE) clean && $(MAKE) \
> | >    ??? CXX="$(CXX11) $(CXX11STD)" CXXFLAGS="$(CXX11FLAGS) $(CXX11PICFLAGS)" -DR_BUILD=1 \
> | >    ??? AR="$(AR)" RANLIB="$(RANLIB)")
> | >
> | > or expand CXX11FLAGS with a += but then CRAN does not like us to use GNU Make
> | > extensions so the above may be easiest.
> | >
> | > Dirk
> | >
> | > | Thanks!
> | > |
> | > | J Park
> | > |
> | > | On 10/14/20 9:40 PM, Dirk Eddelbuettel wrote:
> | > | > On 14 October 2020 at 15:56, Joseph Park wrote:
> | > | > | Dear R-devel,
> | > | > |
> | > | > | The Writing R Extensions manual states:
> | > | > |
> | > | > | 6.14 Platform and version information
> | > | > | The header files define USING_R, which can be used to test if the code
> | > | > | is indeed being used with R.
> | > | > |
> | > | > | I suppose this only applies to building R itself?? Or, perhaps when Rcpp
> | > | > | is used for the interface, or if one includes R headers explicitly.
> | > | > |
> | > | > | I have a C++ library that is built with no R-dependencies, then wrapped
> | > | > | with an Rcpp interface. This same library is wrapped with pybind11 in
> | > | > | the Python world, and directly used in C++ applications.
> | > | > |
> | > | > | How can the C++ library code "know" that it's R building the library? Is
> | > | > | there a platform-independent environment variable or macro?
> | > | >
> | > | > So if I have this right you have
> | > | >
> | > | >    - a library LIB using only standard C++ components
> | > | >
> | > | >    - that you wrapped into a Python package via pybind11, and
> | > | >
> | > | >    - that you want to build for R and 'let it know it used for R'
> | > | >
> | > | > Well I think you would then use a (wrapper) R package R_LIB and could set up
> | > | > a -DR_BUILD in the src/Makevars for R_LIB. This presume that you actually
> | > | > recompile LIB as part of the build; if you were to link with a static or
> | > | > shared build then you could not do this _for lack of a subsequent
> | > | > compilation_ and can only rely on run-time information.
> | > | >
> | > | > Hope this helps, and that I didn't misunderstand the question.
> | > | >
> | > | > Dirk
> | > | >
> | >
> |
>
-- 
Joseph Park <http://jpark.us/>, PhD, PE
U.S. Department of Interior <https://www.doi.gov/>, SFNRC 
<https://www.nps.gov/ever/learn/scienceresearch.htm>
Software Literacy Foundation <http://softwareliteracyfoundation.org/>
UCSD Sugihara Lab <https://deepeco.ucsd.edu/>

	[[alternative HTML version deleted]]


From edd @end|ng |rom deb|@n@org  Thu Oct 15 16:55:42 2020
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Thu, 15 Oct 2020 09:55:42 -0500
Subject: [R-pkg-devel] C++ library USING_R
In-Reply-To: <2d7d2c5e-553f-8172-776e-5add0963504b@IEEE.org>
References: <16c3b09f-031b-5dce-643d-d292894481b5@IEEE.org>
 <24455.43165.512772.804445@rob.eddelbuettel.com>
 <d063cb10-e2a1-4c70-77ca-10ebddfc2e96@IEEE.org>
 <24456.13145.412066.906040@rob.eddelbuettel.com>
 <c5d15db9-8631-80e2-48f2-63653e7d3459@IEEE.org>
 <24456.15848.572119.263845@rob.eddelbuettel.com>
 <2d7d2c5e-553f-8172-776e-5add0963504b@IEEE.org>
Message-ID: <24456.25326.539846.437599@rob.eddelbuettel.com>


On 15 October 2020 at 10:36, Joseph Park wrote:
| Apologies for the mis-directed reply, and, imprecise syntax/context re 
| environment variable.
| 
| Just to close the loop, it seems that using a -D macro assignment inside 
| the make command (macro?) is interpreted as a make option:

(I think 'make target' is a common expression.)
 
| $(LIBEDM):
|  ??? @(cd $(CPPEDM_SRC_PATH) && $(MAKE) clean && $(MAKE) \
|  ??? CXX="$(CXX11) $(CXX11STD)" CXXFLAGS="$(CXX11FLAGS) $(CXX11PICFLAGS)" \
|  ??? AR="$(AR)" RANLIB="$(RANLIB)" -DUSING_R=1)
| 
| ...
| 
|  ?? make[1]: Entering directory 
| '/tmp/RtmpxVmJkT/Rbuild1553f22c7484d/rEDM/src/cppEDM/src'
|  ?? rm -f API.o CCM.o Common.o DateTime.o EDM.o EDM_Formatting.o 
| EDM_Neighbors.o Eval.o Multiview.o Parameter.o Simplex.o SMap.o libEDM.a
|  ?? make[1]: Leaving directory 
| '/tmp/RtmpxVmJkT/Rbuild1553f22c7484d/rEDM/src/cppEDM/src'
|  ?? make: invalid option -- 'D'
| 
| Hmm... since I use an R-specific makefile inside the C++ library 
| directory anyway, adding -DUSING_R there seems like a decent solution.

Yes, exactly, that was my initial suggestion. It's been a while since I
needed this but when do I tend to just go back to simple examples to check I
am on the right track:

   edd at rob:/tmp$ g++ -o io io.cpp; ./io         # default: empty
   Hello boring world
   edd at rob:/tmp$ g++ -DFOO -o io io.cpp; ./io   # with a defined 
   We see foo
   edd at rob:/tmp$ cat io.cpp
   #include <iostream>
   
   int main() {
   #if defined(FOO)
     std::cout << "We see foo\n";
   #else
     std::cout << "Hello boring world\n";
   #endif
   }
   edd at rob:/tmp$ 
   
So setting -Dsomething is really equivalent to doing in the code via #define
but allows you to have it done conditional on when/where/how you compile.
   
| Thanks a-million for the support & guidance to get me to the obvious 
| solution!

No worries. Is your repo public?  Good _portable_ cross-language solutions
are rare, it would be good to have another one to look at / refer people to.

Dirk

-- 
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From hugh@p@r@on@ge @end|ng |rom gm@||@com  Fri Oct 16 02:59:11 2020
From: hugh@p@r@on@ge @end|ng |rom gm@||@com (Hugh Parsonage)
Date: Fri, 16 Oct 2020 11:59:11 +1100
Subject: [R-pkg-devel] Tracking down cause of UBSAN error
Message-ID: <CAJmOi+P+x9=1TS-STHccdO7Mibbt0ftNvDLwrz5fKt-=7i3aZA@mail.gmail.com>

Hello,

I am getting a UBSAN-clang failure on my package hutilscpp
(<https://github.com/HughParsonage/hutilscpp>). However I cannot
reproduce the error on rhub, nor can I see an obvious problem with the
code.  (Though obviously there is something wrong.)

The testthat.Rout log from CRAN reads (relevantly):

> test_check("hutilscpp")
/data/gannet/ripley/R/test-clang/Rcpp/include/Rcpp/internal/caster.h:30:25:
runtime error: nan is outside the range of representable values of
type 'long'
    #0 0x7f817412275e in long Rcpp::internal::caster<double,
long>(double) /data/gannet/ripley/R/test-clang/Rcpp/include/Rcpp/internal/caster.h:30:25
    #1 0x7f817412275e in long
Rcpp::internal::primitive_as<long>(SEXPREC*)
/data/gannet/ripley/R/test-clang/Rcpp/include/Rcpp/as.h:39:21
    #2 0x7f81740f9a50 in long Rcpp::internal::as<long>(SEXPREC*,
Rcpp::traits::r_type_primitive_tag)
/data/gannet/ripley/R/test-clang/Rcpp/include/Rcpp/as.h:44:20
    #3 0x7f81740f9a50 in long Rcpp::as<long>(SEXPREC*)
/data/gannet/ripley/R/test-clang/Rcpp/include/Rcpp/as.h:152:16
    #4 0x7f81740f9a50 in Rcpp::InputParameter<long>::operator long()
/data/gannet/ripley/R/test-clang/Rcpp/include/Rcpp/InputParameter.h:34:38
    #5 0x7f81740f9a50 in _hutilscpp_do_which_first__
/data/gannet/ripley/R/packages/tests-clang-SAN/hutilscpp/src/RcppExports.cpp:647:65
    #6 0x6e187d in R_doDotCall
/data/gannet/ripley/R/svn/R-devel/src/main/dotcode.c:629:17
    #7 0x844c13 in bcEval
/data/gannet/ripley/R/svn/R-devel/src/main/eval.c:7677:21
    #8 0x828ab9 in Rf_eval
/data/gannet/ripley/R/svn/R-devel/src/main/eval.c:727:8

The RcppExports.cpp 647:65 refers to the commented line starting
"rcpp_result_gen" below
// do_which_first__
R_xlen_t do_which_first__(SEXP x, int op, SEXP y, R_xlen_t nx,
R_xlen_t ny, int y1i, int y2i, double y1d, double y2d);
RcppExport SEXP _hutilscpp_do_which_first__(SEXP xSEXP, SEXP opSEXP,
SEXP ySEXP, SEXP nxSEXP, SEXP nySEXP, SEXP y1iSEXP, SEXP y2iSEXP, SEXP
y1dSEXP, SEXP y2dSEXP) {
BEGIN_RCPP
Rcpp::RObject rcpp_result_gen;
Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
Rcpp::traits::input_parameter< int >::type op(opSEXP);
Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
Rcpp::traits::input_parameter< R_xlen_t >::type nx(nxSEXP);
Rcpp::traits::input_parameter< R_xlen_t >::type ny(nySEXP);
Rcpp::traits::input_parameter< int >::type y1i(y1iSEXP);
Rcpp::traits::input_parameter< int >::type y2i(y2iSEXP);
Rcpp::traits::input_parameter< double >::type y1d(y1dSEXP);
Rcpp::traits::input_parameter< double >::type y2d(y2dSEXP);
rcpp_result_gen = Rcpp::wrap(do_which_first__(x, op, y, nx, ny, y1i,
y2i, y1d, y2d)); // line 647, column 65 is between nx and ny
return rcpp_result_gen;
END_RCPP
}

The ny R_xlen_t value is used in a switch statement in the C++ code.
My attempt to fix this code was to limit the values of ny to 1, 2, or
3 before being passed to do_which_first__().  However, since I was not
able to reproduce the UBSAN error on rhub I'm not sure if this fix is
successful.  I would prefer not to submit a package before being
completely sure the UBSAN error has been resolved.


Thank you for any help,


Hugh.


From edd @end|ng |rom deb|@n@org  Fri Oct 16 04:07:42 2020
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Thu, 15 Oct 2020 21:07:42 -0500
Subject: [R-pkg-devel] Tracking down cause of UBSAN error
In-Reply-To: <CAJmOi+P+x9=1TS-STHccdO7Mibbt0ftNvDLwrz5fKt-=7i3aZA@mail.gmail.com>
References: <CAJmOi+P+x9=1TS-STHccdO7Mibbt0ftNvDLwrz5fKt-=7i3aZA@mail.gmail.com>
Message-ID: <24457.110.197351.912336@rob.eddelbuettel.com>


Hugh,

The different SAN/ASAB/UBSAN/... analysers depend critically on _exactly how_
the instrumentation is setup.  That make the whole setup analysis a little
brittle, and it is a real shame that neither CRAN nor some of the entities
supposedly here in order to support R users and developers have managed to
produced _standardized_ environments (using, say, Docker) to make this
genuinely reproducible. So we all waste time chasing things over and over.

Five or so years ago I wrote a first container for this; I believe the RHub
one is a descendant of it. But I found reproducing errors so tricky that I
set up an entire package just to provide 'true positives' for such tests of
the testing framework:   http://cloud.r-project.org/package=sanitizers
It helps validate that the setup (container, say) catches what it is supposed
to catch--as this is (too) easy to get wrong.

These days I think the contains within the (very well done and complete)
"collection" of containers maintained by Winston might be your best bet:
  https://github.com/wch/r-debug
This is what I used last time I needed something like it.

Hth, Dirk

-- 
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From j@y|@mb20 @end|ng |rom gm@||@com  Fri Oct 16 06:57:09 2020
From: j@y|@mb20 @end|ng |rom gm@||@com (James Lamb)
Date: Thu, 15 Oct 2020 23:57:09 -0500
Subject: [R-pkg-devel] Tracking down cause of UBSAN error
In-Reply-To: <24457.110.197351.912336@rob.eddelbuettel.com>
References: <CAJmOi+P+x9=1TS-STHccdO7Mibbt0ftNvDLwrz5fKt-=7i3aZA@mail.gmail.com>
 <24457.110.197351.912336@rob.eddelbuettel.com>
Message-ID: <CADPubGTXaJof5aojOhUHXMJ=Wcij2o8fUvLUcEpLSq-jAJzpDQ@mail.gmail.com>

To add to Dirk's summary of the available options, you might find it useful
to borrow from the setup that we use to replicate CRAN's UBSAN checks on
GitHub Actions for {lightgbm}.

https://github.com/microsoft/LightGBM/blob/0c1c36cdbdf771a03c9ae0873eb28585e6c3d624/.github/workflows/r_package.yml#L162-L186

I was able to reproduce all of the specific issues in {lightgbm} that
showed up on CRAN's UBSAN checks with this setup, which uses the
rhub/rocker-gcc-san image. It should be easy enough to switch that to the
images from https://github.com/wch/r-debug if necessary.

Hope that it helps!

-James

On Thu, Oct 15, 2020 at 9:08 PM Dirk Eddelbuettel <edd at debian.org> wrote:

>
> Hugh,
>
> The different SAN/ASAB/UBSAN/... analysers depend critically on _exactly
> how_
> the instrumentation is setup.  That make the whole setup analysis a little
> brittle, and it is a real shame that neither CRAN nor some of the entities
> supposedly here in order to support R users and developers have managed to
> produced _standardized_ environments (using, say, Docker) to make this
> genuinely reproducible. So we all waste time chasing things over and over.
>
> Five or so years ago I wrote a first container for this; I believe the RHub
> one is a descendant of it. But I found reproducing errors so tricky that I
> set up an entire package just to provide 'true positives' for such tests of
> the testing framework:   http://cloud.r-project.org/package=sanitizers
> It helps validate that the setup (container, say) catches what it is
> supposed
> to catch--as this is (too) easy to get wrong.
>
> These days I think the contains within the (very well done and complete)
> "collection" of containers maintained by Winston might be your best bet:
>   https://github.com/wch/r-debug
> This is what I used last time I needed something like it.
>
> Hth, Dirk
>
> --
> https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


-- 
James Lamb
GitHub <https://github.com/jameslamb> | Twitter
<https://twitter.com/_jameslamb> | LinkedIn
<https://www.linkedin.com/in/jameslamb1/>

	[[alternative HTML version deleted]]


From jmount @end|ng |rom w|n-vector@com  Sat Oct 17 00:06:54 2020
From: jmount @end|ng |rom w|n-vector@com (John Mount)
Date: Fri, 16 Oct 2020 22:06:54 +0000
Subject: [R-pkg-devel] Check: for detritus in the temp directory,
 Result: NOTE
Message-ID: <38DD2D82-419D-41A2-BB09-0A1C9940CA8A@win-vector.com>


I am trying to move the wrapr package from RUnit to tinytest. All seemed well on my tests, but when I submitted to CRAN I got:

Flavor: r-devel-linux-x86_64-debian-gcc
Check: for detritus in the temp directory, Result: NOTE
  Found the following files/directories:
    'Rscript2be2.9jpLCF' 'Rscript2be3.i3ORSI' 'Rscript2bff.JJwTqS'
    'Rscript2c00.PBV2DW'

Does anybody know what this is a symptom of, or how to fix it?

Thanks,
  John


---------------
John Mount
http://www.win-vector.com/
Our book: Practical Data Science with R
http://practicaldatascience.com






	[[alternative HTML version deleted]]


From @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org  Sat Oct 17 06:12:32 2020
From: @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org (Spencer Graves)
Date: Fri, 16 Oct 2020 23:12:32 -0500
Subject: [R-pkg-devel] 
 How to remove rJava from Ecfun when it's not called
 directly or indirectly
In-Reply-To: <87ft6k3hfm.fsf@enricoschumann.net>
References: <880055b4-85de-f314-c43f-ffc0b99289db@effectivedefense.org>
 <87ft6k3hfm.fsf@enricoschumann.net>
Message-ID: <eae2c190-4c22-3608-0682-91c99fe353ff@effectivedefense.org>



On 2020-10-11 10:34, Enrico Schumann wrote:
> On Sat, 10 Oct 2020, Spencer Graves writes:
> 
>> Hello, All:
>>
>>
>> 	  "R CMD check Ecfun_0.2-4.tar.gz" fails under
>> Windows 10 with "Error: package or namespace load
>> failed for 'Ecfun': .onLoad failed in loadNamespace()
>> for 'rJava'".
>>
>>
>> 	  However, I cannot find where Ecfun calls rJava.  This is in:
>>
>>
>> https://github.com/sbgraves237/Ecfun
>>
>> 	
>> 	  I get nothing from "grep 'rJava'" in the
>> DESCRIPTION and NAMESPACE files plus in the man and R
>> subdirectories.  I ran tools:package_dependencies
>> recursively starting with Ecfun until I got all NULLs
>> and could not find rJava anywhere.
>>
>>
>> 	  Thanks,
>> 	  Spencer Graves
>>
>>
>> 00install.out
>>
>>
>> * installing *source* package 'Ecfun' ...
>> ** using staged installation
>> ** R
>> ** inst
>> ** byte-compile and prepare package for lazy loading
>> ** help
>> *** installing help indices
>> ** building package indices
>> ** installing vignettes
>> ** testing if installed package can be loaded from temporary location
>> *** arch - i386
>> Error: package or namespace load failed for 'Ecfun':
>>   .onLoad failed in loadNamespace() for 'rJava', details:
>>    call: inDL(x, as.logical(local), as.logical(now), ...)
>>    error: unable to load shared object 'C:/Program
>> Files/R/R-4.0.2/library/rJava/libs/i386/rJava.dll':
>>    LoadLibrary failure:  %1 is not a valid Win32 application.
>>
>> Error: loading failed
>> Execution halted
>> *** arch - x64
>> ERROR: loading failed for 'i386'
>> * removing 'C:/Users/spenc/Documents/R/Ecfun/Ecfun.Rcheck/Ecfun'
>>
>>
>> 00check.log
>>
>>
>> * using log directory 'C:/Users/spenc/Documents/R/Ecfun/Ecfun.Rcheck'
>> * using R version 4.0.2 (2020-06-22)
>> * using platform: x86_64-w64-mingw32 (64-bit)
>> * using session charset: ISO8859-1
>> * checking for file 'Ecfun/DESCRIPTION' ... OK
>> * this is package 'Ecfun' version '0.2-4'
>> * checking package namespace information ... OK
>> * checking package dependencies ... OK
>> * checking if this is a source package ... OK
>> * checking if there is a namespace ... OK
>> * checking for executable files ... OK
>> * checking for hidden files and directories ... OK
>> * checking for portable file names ... OK
>> * checking whether package 'Ecfun' can be installed ... ERROR
>> Installation failed.
>> See
>> 'C:/Users/spenc/Documents/R/Ecfun/Ecfun.Rcheck/00install.out'
>> for details.
>> * DONE
>> Status: 1 ERROR
>>
> 
> Hello Spencer
> 
> Just a wild guess: the CRAN version of your package
> does not list 'xlsx'; but your GitHub version does.
> Now, 'xlsx' depends on 'rJava'.  So perhaps start there?
> 
> As I said, only a wild guess; but maybe it helps.


Yes, it helps.  I removed that dependency, and the package now passes "R 
CMD check on my Mac;  it didn't before.


Thanks again, Spencer Graves

> 
> Kind regards
>      Enrico
>


From @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org  Sat Oct 17 06:36:11 2020
From: @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org (Spencer Graves)
Date: Fri, 16 Oct 2020 23:36:11 -0500
Subject: [R-pkg-devel] qpdf problems on Windows 10
Message-ID: <0c4304ba-da8d-1932-6ee1-6629374adcf2@effectivedefense.org>

Hello, All:


	  "R CMD check Ecfun_0.2-4.tar.gz" ends, <<qpdf.exe" --version' had 
status 123 Error: invalid version specification 'NA'>> on Windows 10 
under R 4.0.3;  see below.


	  I think I have a defective install of qpdf, but I can't find 
information on how to fix it.  I tried to install it, because "Writing R 
Extensions" seemed to recommend it.  Now I have this problem.


	  Suggestions?
	  Thanks,
	  Spencer Graves


00check.log manually extended by adding the crash information from 
Rterm, which was not in 00check.log:


* using log directory 'C:/Users/spenc/Documents/R/Ecfun/Ecfun.Rcheck'
* using R version 4.0.3 (2020-10-10)
* using platform: x86_64-w64-mingw32 (64-bit)
* using session charset: ISO8859-1
* checking for file 'Ecfun/DESCRIPTION' ... OK
* this is package 'Ecfun' version '0.2-4'
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for executable files ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking whether package 'Ecfun' can be installed ... OK
* checking installed package size ... OK
* checking package directory ... OK
* checking 'build' directory ... OK
* checking DESCRIPTION meta-information ... OK
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies 
... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking dependencies in R code ... OK
* checking S3 generic/method consistency ... OK
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... OK
* checking Rd files ... OK
* checking Rd metadata ... OK
* checking Rd cross-references ... OK
* checking for missing documentation entries ... OK
* checking for code/documentation mismatches ... OK
* checking Rd \usage sections ... OK
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking sizes of PDF files under 'inst/doc' ...  ...Warning in 
system2(qpdf, "--version", TRUE) :
   running command '"C:\Windows\System32\qpdf_bin\qpdf.exe" --version' 
had status 123
Error: invalid version specification 'NA'


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Sat Oct 17 08:59:06 2020
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Sat, 17 Oct 2020 08:59:06 +0200
Subject: [R-pkg-devel] Check: for detritus in the temp directory,
 Result: NOTE
In-Reply-To: <38DD2D82-419D-41A2-BB09-0A1C9940CA8A@win-vector.com>
References: <38DD2D82-419D-41A2-BB09-0A1C9940CA8A@win-vector.com>
Message-ID: <aa4cb2ca-1597-572b-21a5-d098767e0a96@gmail.com>

This is was a bug in R-devel, already fixed.
Sorry for the inconvenience,

Tomas

On 10/17/20 12:06 AM, John Mount wrote:
> I am trying to move the wrapr package from RUnit to tinytest. All seemed well on my tests, but when I submitted to CRAN I got:
>
> Flavor: r-devel-linux-x86_64-debian-gcc
> Check: for detritus in the temp directory, Result: NOTE
>    Found the following files/directories:
>      'Rscript2be2.9jpLCF' 'Rscript2be3.i3ORSI' 'Rscript2bff.JJwTqS'
>      'Rscript2c00.PBV2DW'
>
> Does anybody know what this is a symptom of, or how to fix it?
>
> Thanks,
>    John
>
>
> ---------------
> John Mount
> http://www.win-vector.com/
> Our book: Practical Data Science with R
> http://practicaldatascience.com
>
>
>
>
>
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From jmount @end|ng |rom w|n-vector@com  Sat Oct 17 14:46:35 2020
From: jmount @end|ng |rom w|n-vector@com (John Mount)
Date: Sat, 17 Oct 2020 12:46:35 +0000
Subject: [R-pkg-devel] Check: for detritus in the temp directory,
 Result: NOTE
In-Reply-To: <aa4cb2ca-1597-572b-21a5-d098767e0a96@gmail.com>
References: <38DD2D82-419D-41A2-BB09-0A1C9940CA8A@win-vector.com>
 <aa4cb2ca-1597-572b-21a5-d098767e0a96@gmail.com>
Message-ID: <3B84867A-4A3A-4758-ACB6-016AEAA0C8B3@win-vector.com>

Thanks, and sorry to have bothered everyone.  I'll try bumping the package version number and re-submitting.

> On Oct 16, 2020, at 11:59 PM, Tomas Kalibera <tomas.kalibera at gmail.com> wrote:
> 
> This is was a bug in R-devel, already fixed.
> Sorry for the inconvenience,
> 
> Tomas
> 
> On 10/17/20 12:06 AM, John Mount wrote:
>> I am trying to move the wrapr package from RUnit to tinytest. All seemed well on my tests, but when I submitted to CRAN I got:
>> 
>> Flavor: r-devel-linux-x86_64-debian-gcc
>> Check: for detritus in the temp directory, Result: NOTE
>>   Found the following files/directories:
>>     'Rscript2be2.9jpLCF' 'Rscript2be3.i3ORSI' 'Rscript2bff.JJwTqS'
>>     'Rscript2c00.PBV2DW'
>> 
>> Does anybody know what this is a symptom of, or how to fix it?
>> 
>> Thanks,
>>   John
>> 
>> 
>> ---------------
>> John Mount
>> http://www.win-vector.com/
>> Our book: Practical Data Science with R
>> http://practicaldatascience.com
>> 
>> 
>> 
>> 
>> 
>> 
>> 	[[alternative HTML version deleted]]
>> 
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> 


From r@|@@pere|r@@br @end|ng |rom gm@||@com  Mon Oct 19 01:56:02 2020
From: r@|@@pere|r@@br @end|ng |rom gm@||@com (Rafael H. M. Pereira)
Date: Sun, 18 Oct 2020 20:56:02 -0300
Subject: [R-pkg-devel] CRAN pending status , left up in the air
Message-ID: <CAA42DGkAA52UBFq5kZaE+k+PJH8Ga9ZKET2WXEd+gARhDbnccA@mail.gmail.com>

Hi all,

The CRAN incoming Dashboard indicates that the status of my package (r5r)
is "pending", which means 'the CRAN maintainers are waiting for an action
on your side. You should check your emails!'.

However, I haven't received any email with guidance on how to proceed. Is
there any CRAN webpage to check the latest check results and get a sense of
what I should be doing?

best,

Rafael Pereira

	[[alternative HTML version deleted]]


From m@rce|o@27 @end|ng |rom gm@||@com  Mon Oct 19 02:00:50 2020
From: m@rce|o@27 @end|ng |rom gm@||@com (Marcelo Araya Salas)
Date: Sun, 18 Oct 2020 18:00:50 -0600
Subject: [R-pkg-devel] (no subject)
Message-ID: <CABJVSXRcikJDaVqU8EVLG63j_qNJnM9LhMmo-G8Zv3=ngN=DsA@mail.gmail.com>

Hi all

Hi all,

I got this warning message when I run pkgdown::build_site()


Warning: Vignettes missing from index:  (all the vignette names here)

And then the vignettes are not included in the package website

This didn't happen before. Does anyone know how to avoid this?

Thanks!


Marcelo

	[[alternative HTML version deleted]]


From edd @end|ng |rom deb|@n@org  Mon Oct 19 02:18:09 2020
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Sun, 18 Oct 2020 19:18:09 -0500
Subject: [R-pkg-devel] CRAN pending status , left up in the air
In-Reply-To: <CAA42DGkAA52UBFq5kZaE+k+PJH8Ga9ZKET2WXEd+gARhDbnccA@mail.gmail.com>
References: <CAA42DGkAA52UBFq5kZaE+k+PJH8Ga9ZKET2WXEd+gARhDbnccA@mail.gmail.com>
Message-ID: <24460.56129.859597.594867@rob.eddelbuettel.com>


On 18 October 2020 at 20:56, Rafael H. M. Pereira wrote:
| The CRAN incoming Dashboard indicates that the status of my package (r5r)
| is "pending", which means 'the CRAN maintainers are waiting for an action
| on your side. You should check your emails!'.

AFAICT the text there is wrong: it corresponds to state 'waiting' as
'pending' means CRAN is pondering the state of the package.

Your package has only been there for three (mostly weekend) days which is
nothing. I have one 'waiting' for five days now and it is simply (AFAICT) a
false positive. Plus, it had already been delayed by a spurious compilation
error on their end before that so the total is well over a week now. Very
frustrating.  But there is exactly zero you or I can do about it.
 
| However, I haven't received any email with guidance on how to proceed. Is
| there any CRAN webpage to check the latest check results and get a sense of
| what I should be doing?

No.

I can only suggest to trust official documentation (Writing R Extensions,
CRAN Repository Policy) more. Asking here is also better than guessing.

Dirk

-- 
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From m@e||e@@@|mon @end|ng |rom y@hoo@@e  Mon Oct 19 12:37:11 2020
From: m@e||e@@@|mon @end|ng |rom y@hoo@@e (=?UTF-8?Q?Ma=C3=ABlle_SALMON?=)
Date: Mon, 19 Oct 2020 10:37:11 +0000 (UTC)
Subject: [R-pkg-devel] (no subject)
In-Reply-To: <CABJVSXRcikJDaVqU8EVLG63j_qNJnM9LhMmo-G8Zv3=ngN=DsA@mail.gmail.com>
References: <CABJVSXRcikJDaVqU8EVLG63j_qNJnM9LhMmo-G8Zv3=ngN=DsA@mail.gmail.com>
Message-ID: <1530360093.1449223.1603103831323@mail.yahoo.com>

Hello,

Usually such problems with pkgdown will come from your pkgdown configuration. I see (thanks to a search engine :-) and sorry if my search result is wrong ) that you actually write to exclude all articles

* your configuration https://github.com/maRce10/warbleR/blob/7c313bd4388c908df9055a952badca8605b75468/pkgdown/_pkgdown.yml#L4 (btw you also have a file called pkgdown.yml there, that is probably useless?)
* documentation of how to configure the articles index https://pkgdown.r-lib.org/reference/build_articles.html#index-and-navbar
So you'll need to either remove the "articles" field from your configuration (to use the default ordering etc.) or add more information to it, following the docs.

As to why this did not happen before, I'd assume it is the articles index was added fairly recently https://www.tidyverse.org/blog/2020/03/pkgdown-1-5-0/#articles

Best wishes

Ma?lle.

PS: For questions directly related to pkgdown I'd tend to rather post on https://community.rstudio.com/c/package-development/11


Den m?ndag 19 oktober 2020 02:06:38 CEST, Marcelo Araya Salas <marceloa27 at gmail.com> skrev: 





Hi all

Hi all,

I got this warning message when I run pkgdown::build_site()


Warning: Vignettes missing from index:? (all the vignette names here)

And then the vignettes are not included in the package website

This didn't happen before. Does anyone know how to avoid this?

Thanks!


Marcelo

??? [[alternative HTML version deleted]]

______________________________________________
R-package-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel


From hugo@gru@on+R @end|ng |rom norm@|e@up@org  Mon Oct 19 10:46:06 2020
From: hugo@gru@on+R @end|ng |rom norm@|e@up@org (Hugo Gruson)
Date: Mon, 19 Oct 2020 10:46:06 +0200
Subject: [R-pkg-devel] CRAN pending status , left up in the air
In-Reply-To: <24460.56129.859597.594867@rob.eddelbuettel.com>
References: <CAA42DGkAA52UBFq5kZaE+k+PJH8Ga9ZKET2WXEd+gARhDbnccA@mail.gmail.com>
 <24460.56129.859597.594867@rob.eddelbuettel.com>
Message-ID: <dff37798-c779-c9a7-cd92-b15f5556208a@normalesup.org>

Hi all,

this is a bit tricky since the documentation on the dashboard comes from 
an official, authoritative, source: the R journal [1].

"pending: if a decision is pending a response from the package 
maintainer: If an additional issue was present in the package that we 
cannot check for in the incoming checks (such as the BLAS issues 
mentioned in the section above), the maintainer is automatically asked 
whether these issues have been fixed. Same is true for change of 
maintainer (or maintainer's mail address) where the old maintainer (old 
address) is automatically asked to confirm the maintainer change. The 
answers have to be processed manually."

As Dirk explains and as reported in 
https://github.com/lockedata/cransays/issues/29, it is likely not true 
anymore but in the absence of further official information, it is 
difficult to issue a fix.

A later issue of the R journal [2] introduces the "waiting" and 
"newbies" categories but does not expand on the new role of "pending".

Best,

Hugo

[1]: https://journal.r-project.org/archive/2018-1/cran.pdf
[2]: https://journal.r-project.org/archive/2019-1/cran.pdf

On 19/10/2020 02:18, Dirk Eddelbuettel wrote:
> 
> On 18 October 2020 at 20:56, Rafael H. M. Pereira wrote:
> | The CRAN incoming Dashboard indicates that the status of my package (r5r)
> | is "pending", which means 'the CRAN maintainers are waiting for an action
> | on your side. You should check your emails!'.
> 
> AFAICT the text there is wrong: it corresponds to state 'waiting' as
> 'pending' means CRAN is pondering the state of the package.
> 
> Your package has only been there for three (mostly weekend) days which is
> nothing. I have one 'waiting' for five days now and it is simply (AFAICT) a
> false positive. Plus, it had already been delayed by a spurious compilation
> error on their end before that so the total is well over a week now. Very
> frustrating.  But there is exactly zero you or I can do about it.
>   
> | However, I haven't received any email with guidance on how to proceed. Is
> | there any CRAN webpage to check the latest check results and get a sense of
> | what I should be doing?
> 
> No.
> 
> I can only suggest to trust official documentation (Writing R Extensions,
> CRAN Repository Policy) more. Asking here is also better than guessing.
> 
> Dirk
>


From r@|@@pere|r@@br @end|ng |rom gm@||@com  Mon Oct 19 17:34:01 2020
From: r@|@@pere|r@@br @end|ng |rom gm@||@com (Rafael H. M. Pereira)
Date: Mon, 19 Oct 2020 12:34:01 -0300
Subject: [R-pkg-devel] CRAN pending status , left up in the air
In-Reply-To: <dff37798-c779-c9a7-cd92-b15f5556208a@normalesup.org>
References: <CAA42DGkAA52UBFq5kZaE+k+PJH8Ga9ZKET2WXEd+gARhDbnccA@mail.gmail.com>
 <24460.56129.859597.594867@rob.eddelbuettel.com>
 <dff37798-c779-c9a7-cd92-b15f5556208a@normalesup.org>
Message-ID: <CAA42DGkVCK6-=bApT7t+ZPaZa_bXZm_d9HZLPrnEjo9dt3FSFQ@mail.gmail.com>

Thank you  Dirk and Hugo for your responses. I guess I'll just have to be
patient and wait.

I can only imagine how the CRAN team is overwhelmed by the exponential
growth of package submissions. I wonder, though, whether the CRAN
maintainers and the R community more broadly are thinking about
alternatives to deal with such growing demand without compromising the
speed and consistency/quality of package development. Expanding the team of
CRAN maintainers would be the most obvious solution but I confess I'm not
familiar enough with the whole process to assess what would be the best
routes of action to tackle this bottleneck.

best

Rafael H M Pereira

On Mon, Oct 19, 2020 at 5:46 AM Hugo Gruson <hugo.gruson+R at normalesup.org>
wrote:

> Hi all,
>
> this is a bit tricky since the documentation on the dashboard comes from
> an official, authoritative, source: the R journal [1].
>
> "pending: if a decision is pending a response from the package
> maintainer: If an additional issue was present in the package that we
> cannot check for in the incoming checks (such as the BLAS issues
> mentioned in the section above), the maintainer is automatically asked
> whether these issues have been fixed. Same is true for change of
> maintainer (or maintainer's mail address) where the old maintainer (old
> address) is automatically asked to confirm the maintainer change. The
> answers have to be processed manually."
>
> As Dirk explains and as reported in
> https://github.com/lockedata/cransays/issues/29, it is likely not true
> anymore but in the absence of further official information, it is
> difficult to issue a fix.
>
> A later issue of the R journal [2] introduces the "waiting" and
> "newbies" categories but does not expand on the new role of "pending".
>
> Best,
>
> Hugo
>
> [1]: https://journal.r-project.org/archive/2018-1/cran.pdf
> [2]: https://journal.r-project.org/archive/2019-1/cran.pdf
>
> On 19/10/2020 02:18, Dirk Eddelbuettel wrote:
> >
> > On 18 October 2020 at 20:56, Rafael H. M. Pereira wrote:
> > | The CRAN incoming Dashboard indicates that the status of my package
> (r5r)
> > | is "pending", which means 'the CRAN maintainers are waiting for an
> action
> > | on your side. You should check your emails!'.
> >
> > AFAICT the text there is wrong: it corresponds to state 'waiting' as
> > 'pending' means CRAN is pondering the state of the package.
> >
> > Your package has only been there for three (mostly weekend) days which is
> > nothing. I have one 'waiting' for five days now and it is simply
> (AFAICT) a
> > false positive. Plus, it had already been delayed by a spurious
> compilation
> > error on their end before that so the total is well over a week now. Very
> > frustrating.  But there is exactly zero you or I can do about it.
> >
> > | However, I haven't received any email with guidance on how to proceed.
> Is
> > | there any CRAN webpage to check the latest check results and get a
> sense of
> > | what I should be doing?
> >
> > No.
> >
> > I can only suggest to trust official documentation (Writing R Extensions,
> > CRAN Repository Policy) more. Asking here is also better than guessing.
> >
> > Dirk
> >
>

	[[alternative HTML version deleted]]


From @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org  Mon Oct 19 19:05:21 2020
From: @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org (Spencer Graves)
Date: Mon, 19 Oct 2020 12:05:21 -0500
Subject: [R-pkg-devel] CRAN pending status , left up in the air
In-Reply-To: <CAA42DGkVCK6-=bApT7t+ZPaZa_bXZm_d9HZLPrnEjo9dt3FSFQ@mail.gmail.com>
References: <CAA42DGkAA52UBFq5kZaE+k+PJH8Ga9ZKET2WXEd+gARhDbnccA@mail.gmail.com>
 <24460.56129.859597.594867@rob.eddelbuettel.com>
 <dff37798-c779-c9a7-cd92-b15f5556208a@normalesup.org>
 <CAA42DGkVCK6-=bApT7t+ZPaZa_bXZm_d9HZLPrnEjo9dt3FSFQ@mail.gmail.com>
Message-ID: <03d3a5d3-5032-1e69-d83f-16f67d14e5a6@effectivedefense.org>



On 2020-10-19 10:34, Rafael H. M. Pereira wrote:
> Thank you  Dirk and Hugo for your responses. I guess I'll just have to be
> patient and wait.
> 
> I can only imagine how the CRAN team is overwhelmed by the exponential
> growth of package submissions. I wonder, though, whether the CRAN
> maintainers and the R community more broadly are thinking about
> alternatives to deal with such growing demand without compromising the
> speed and consistency/quality of package development. Expanding the team of
> CRAN maintainers would be the most obvious solution but I confess I'm not
> familiar enough with the whole process to assess what would be the best
> routes of action to tackle this bottleneck.


	  From my experience, it looks to me like their primary approach to 
handling the increased volume has been to improve automation.  In the 
spirit of brainstorming, I'd like to share other ideas on this:


MAKE IT EASY FOR A USER TO CHECK A DIFF FILE OF "Writing R Extensions" 
COMPARING THE CURRENT VERSION WITH ANY PREVIOUS ONE.


	  For example, every article on Wikipedia has a "View History" tab. 
That lists the dates of all the revisions with a terse summary of what 
was changed in each.  I can click on any two and then click "Compare" to 
see all the changes in that period.


	  I'm not going to reread every word of "Writing R Extensions" every 
time I submit something to CRAN.  However, I would be willing to review 
a diff file if it were easy for me to do that.  (And I'm NOT going to 
create my own private file copy of "Writing R Extensions" and manually 
create such a diff file.)


IMPROVE THE COLLABORATION BETWEEN THE CRAN TEAM AND OTHER DOCUMENTATION 
OF HOW TO PREPARE A PACKAGE FOR CRAN


	  I know two sources of information on that:


		    * Wickham and Bryan, R Packages (https://r-pkgs.org).  I created a 
"cran-comments.md" file based on their recommendations, and missed their 
comment that it should be in ".Rbuildignore".  My latest CRAN submission 
was rejected partly because of that.


		    * Colin Fay, "Preparing your package for a CRAN submission" 
(https://github.com/ThinkR-open/prepare-for-cran).  These instructions 
follow Wickham and Bryan in recommending "devtools::revdep_check()". 
Sadly, "revdep_check" is not currently in devtools but in a package 
called revdepcheck.  Worse, that package is not available on CRAN and 
appears twice on GitHub.  The original by bbolker has not been updated 
in 5 years.  The version that is currently maintained is 
"https://github.com/r-lib/revdepcheck".  Fortunately, Hadley Wickham is 
the leading contributor to the latter, so writing him may help correct 
that infelicity, but I should also write to Colin Fay.


CRAN REVIEW GROUPS:  There are now 41 different "CRAN Task Views".  We 
could ask the maintainer of each Task View to try to recruit a committee 
around each one to discuss coverage and integration.  Each committee 
could be asked to coordinate via email and in virtual meetings.  They 
could be asked to pick 3 standard times for their virtual meetings, so 
anyone in the world would not always be excluded from a meeting that was 
3 AM their time.  Each package maintainer would be asked to specify at 
least one "Task View" for each package and be willing to discuss 
overlap, etc., with others.  This might be a topic for the next useR 
conference.


	  Comments?
	  Best Wishes,
	  Spencer Graves


> best
> 
> Rafael H M Pereira
> 
> On Mon, Oct 19, 2020 at 5:46 AM Hugo Gruson <hugo.gruson+R at normalesup.org>
> wrote:
> 
>> Hi all,
>>
>> this is a bit tricky since the documentation on the dashboard comes from
>> an official, authoritative, source: the R journal [1].
>>
>> "pending: if a decision is pending a response from the package
>> maintainer: If an additional issue was present in the package that we
>> cannot check for in the incoming checks (such as the BLAS issues
>> mentioned in the section above), the maintainer is automatically asked
>> whether these issues have been fixed. Same is true for change of
>> maintainer (or maintainer's mail address) where the old maintainer (old
>> address) is automatically asked to confirm the maintainer change. The
>> answers have to be processed manually."
>>
>> As Dirk explains and as reported in
>> https://github.com/lockedata/cransays/issues/29, it is likely not true
>> anymore but in the absence of further official information, it is
>> difficult to issue a fix.
>>
>> A later issue of the R journal [2] introduces the "waiting" and
>> "newbies" categories but does not expand on the new role of "pending".
>>
>> Best,
>>
>> Hugo
>>
>> [1]: https://journal.r-project.org/archive/2018-1/cran.pdf
>> [2]: https://journal.r-project.org/archive/2019-1/cran.pdf
>>
>> On 19/10/2020 02:18, Dirk Eddelbuettel wrote:
>>>
>>> On 18 October 2020 at 20:56, Rafael H. M. Pereira wrote:
>>> | The CRAN incoming Dashboard indicates that the status of my package
>> (r5r)
>>> | is "pending", which means 'the CRAN maintainers are waiting for an
>> action
>>> | on your side. You should check your emails!'.
>>>
>>> AFAICT the text there is wrong: it corresponds to state 'waiting' as
>>> 'pending' means CRAN is pondering the state of the package.
>>>
>>> Your package has only been there for three (mostly weekend) days which is
>>> nothing. I have one 'waiting' for five days now and it is simply
>> (AFAICT) a
>>> false positive. Plus, it had already been delayed by a spurious
>> compilation
>>> error on their end before that so the total is well over a week now. Very
>>> frustrating.  But there is exactly zero you or I can do about it.
>>>
>>> | However, I haven't received any email with guidance on how to proceed.
>> Is
>>> | there any CRAN webpage to check the latest check results and get a
>> sense of
>>> | what I should be doing?
>>>
>>> No.
>>>
>>> I can only suggest to trust official documentation (Writing R Extensions,
>>> CRAN Repository Policy) more. Asking here is also better than guessing.
>>>
>>> Dirk
>>>
>>
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From bbo|ker @end|ng |rom gm@||@com  Mon Oct 19 19:17:44 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Mon, 19 Oct 2020 13:17:44 -0400
Subject: [R-pkg-devel] CRAN pending status , left up in the air
In-Reply-To: <03d3a5d3-5032-1e69-d83f-16f67d14e5a6@effectivedefense.org>
References: <CAA42DGkAA52UBFq5kZaE+k+PJH8Ga9ZKET2WXEd+gARhDbnccA@mail.gmail.com>
 <24460.56129.859597.594867@rob.eddelbuettel.com>
 <dff37798-c779-c9a7-cd92-b15f5556208a@normalesup.org>
 <CAA42DGkVCK6-=bApT7t+ZPaZa_bXZm_d9HZLPrnEjo9dt3FSFQ@mail.gmail.com>
 <03d3a5d3-5032-1e69-d83f-16f67d14e5a6@effectivedefense.org>
Message-ID: <de3e2f45-fdac-4c96-fd1b-c821110d5e68@gmail.com>

   My 'revdepcheck' is obsolete, superseded by r-lib/revdepcheck (which 
it does predate by about a year ...)

  Dirk Eddelbuettel maintains an automated system for diffs of the CRAN 
repository policy https://github.com/eddelbuettel/crp , or follow 
@CRANPolicyWatch -- similar to your idea about WRE diffs.

  You can view a history of WRE (with diffs) at 
https://github.com/wch/r-source/commits/trunk/doc/manual/R-exts.texi

   I believe CRAN has devoted some resources to hiring editorial 
assistants who handle some of the lower-level tasks ...





On 10/19/20 1:05 PM, Spencer Graves wrote:
> 
> 
> On 2020-10-19 10:34, Rafael H. M. Pereira wrote:
>> Thank you? Dirk and Hugo for your responses. I guess I'll just have to be
>> patient and wait.
>>
>> I can only imagine how the CRAN team is overwhelmed by the exponential
>> growth of package submissions. I wonder, though, whether the CRAN
>> maintainers and the R community more broadly are thinking about
>> alternatives to deal with such growing demand without compromising the
>> speed and consistency/quality of package development. Expanding the 
>> team of
>> CRAN maintainers would be the most obvious solution but I confess I'm not
>> familiar enough with the whole process to assess what would be the best
>> routes of action to tackle this bottleneck.
> 
> 
>  ????? From my experience, it looks to me like their primary approach to 
> handling the increased volume has been to improve automation.? In the 
> spirit of brainstorming, I'd like to share other ideas on this:
> 
> 
> MAKE IT EASY FOR A USER TO CHECK A DIFF FILE OF "Writing R Extensions" 
> COMPARING THE CURRENT VERSION WITH ANY PREVIOUS ONE.
> 
> 
>  ????? For example, every article on Wikipedia has a "View History" tab. 
> That lists the dates of all the revisions with a terse summary of what 
> was changed in each.? I can click on any two and then click "Compare" to 
> see all the changes in that period.
> 
> 
>  ????? I'm not going to reread every word of "Writing R Extensions" 
> every time I submit something to CRAN.? However, I would be willing to 
> review a diff file if it were easy for me to do that.? (And I'm NOT 
> going to create my own private file copy of "Writing R Extensions" and 
> manually create such a diff file.)
> 
> 
> IMPROVE THE COLLABORATION BETWEEN THE CRAN TEAM AND OTHER DOCUMENTATION 
> OF HOW TO PREPARE A PACKAGE FOR CRAN
> 
> 
>  ????? I know two sources of information on that:
> 
> 
>  ??????????? * Wickham and Bryan, R Packages (https://r-pkgs.org).? I 
> created a "cran-comments.md" file based on their recommendations, and 
> missed their comment that it should be in ".Rbuildignore".? My latest 
> CRAN submission was rejected partly because of that.
> 
> 
>  ??????????? * Colin Fay, "Preparing your package for a CRAN submission" 
> (https://github.com/ThinkR-open/prepare-for-cran).? These instructions 
> follow Wickham and Bryan in recommending "devtools::revdep_check()". 
> Sadly, "revdep_check" is not currently in devtools but in a package 
> called revdepcheck.? Worse, that package is not available on CRAN and 
> appears twice on GitHub.? The original by bbolker has not been updated 
> in 5 years.? The version that is currently maintained is 
> "https://github.com/r-lib/revdepcheck".? Fortunately, Hadley Wickham is 
> the leading contributor to the latter, so writing him may help correct 
> that infelicity, but I should also write to Colin Fay.
> 
> 
> CRAN REVIEW GROUPS:? There are now 41 different "CRAN Task Views".? We 
> could ask the maintainer of each Task View to try to recruit a committee 
> around each one to discuss coverage and integration.? Each committee 
> could be asked to coordinate via email and in virtual meetings.? They 
> could be asked to pick 3 standard times for their virtual meetings, so 
> anyone in the world would not always be excluded from a meeting that was 
> 3 AM their time.? Each package maintainer would be asked to specify at 
> least one "Task View" for each package and be willing to discuss 
> overlap, etc., with others.? This might be a topic for the next useR 
> conference.
> 
> 
>  ????? Comments?
>  ????? Best Wishes,
>  ????? Spencer Graves
> 
> 
>> best
>>
>> Rafael H M Pereira
>>
>> On Mon, Oct 19, 2020 at 5:46 AM Hugo Gruson 
>> <hugo.gruson+R at normalesup.org>
>> wrote:
>>
>>> Hi all,
>>>
>>> this is a bit tricky since the documentation on the dashboard comes from
>>> an official, authoritative, source: the R journal [1].
>>>
>>> "pending: if a decision is pending a response from the package
>>> maintainer: If an additional issue was present in the package that we
>>> cannot check for in the incoming checks (such as the BLAS issues
>>> mentioned in the section above), the maintainer is automatically asked
>>> whether these issues have been fixed. Same is true for change of
>>> maintainer (or maintainer's mail address) where the old maintainer (old
>>> address) is automatically asked to confirm the maintainer change. The
>>> answers have to be processed manually."
>>>
>>> As Dirk explains and as reported in
>>> https://github.com/lockedata/cransays/issues/29, it is likely not true
>>> anymore but in the absence of further official information, it is
>>> difficult to issue a fix.
>>>
>>> A later issue of the R journal [2] introduces the "waiting" and
>>> "newbies" categories but does not expand on the new role of "pending".
>>>
>>> Best,
>>>
>>> Hugo
>>>
>>> [1]: https://journal.r-project.org/archive/2018-1/cran.pdf
>>> [2]: https://journal.r-project.org/archive/2019-1/cran.pdf
>>>
>>> On 19/10/2020 02:18, Dirk Eddelbuettel wrote:
>>>>
>>>> On 18 October 2020 at 20:56, Rafael H. M. Pereira wrote:
>>>> | The CRAN incoming Dashboard indicates that the status of my package
>>> (r5r)
>>>> | is "pending", which means 'the CRAN maintainers are waiting for an
>>> action
>>>> | on your side. You should check your emails!'.
>>>>
>>>> AFAICT the text there is wrong: it corresponds to state 'waiting' as
>>>> 'pending' means CRAN is pondering the state of the package.
>>>>
>>>> Your package has only been there for three (mostly weekend) days 
>>>> which is
>>>> nothing. I have one 'waiting' for five days now and it is simply
>>> (AFAICT) a
>>>> false positive. Plus, it had already been delayed by a spurious
>>> compilation
>>>> error on their end before that so the total is well over a week now. 
>>>> Very
>>>> frustrating.? But there is exactly zero you or I can do about it.
>>>>
>>>> | However, I haven't received any email with guidance on how to 
>>>> proceed.
>>> Is
>>>> | there any CRAN webpage to check the latest check results and get a
>>> sense of
>>>> | what I should be doing?
>>>>
>>>> No.
>>>>
>>>> I can only suggest to trust official documentation (Writing R 
>>>> Extensions,
>>>> CRAN Repository Policy) more. Asking here is also better than guessing.
>>>>
>>>> Dirk
>>>>
>>>
>>
>> ????[[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From murdoch@dunc@n @end|ng |rom gm@||@com  Mon Oct 19 19:27:16 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Mon, 19 Oct 2020 13:27:16 -0400
Subject: [R-pkg-devel] CRAN pending status , left up in the air
In-Reply-To: <03d3a5d3-5032-1e69-d83f-16f67d14e5a6@effectivedefense.org>
References: <CAA42DGkAA52UBFq5kZaE+k+PJH8Ga9ZKET2WXEd+gARhDbnccA@mail.gmail.com>
 <24460.56129.859597.594867@rob.eddelbuettel.com>
 <dff37798-c779-c9a7-cd92-b15f5556208a@normalesup.org>
 <CAA42DGkVCK6-=bApT7t+ZPaZa_bXZm_d9HZLPrnEjo9dt3FSFQ@mail.gmail.com>
 <03d3a5d3-5032-1e69-d83f-16f67d14e5a6@effectivedefense.org>
Message-ID: <78ba36e5-1295-26aa-344a-b67f74f999d5@gmail.com>

On 19/10/2020 1:05 p.m., Spencer Graves wrote:
> 
> 
> On 2020-10-19 10:34, Rafael H. M. Pereira wrote:
>> Thank you  Dirk and Hugo for your responses. I guess I'll just have to be
>> patient and wait.
>>
>> I can only imagine how the CRAN team is overwhelmed by the exponential
>> growth of package submissions. I wonder, though, whether the CRAN
>> maintainers and the R community more broadly are thinking about
>> alternatives to deal with such growing demand without compromising the
>> speed and consistency/quality of package development. Expanding the team of
>> CRAN maintainers would be the most obvious solution but I confess I'm not
>> familiar enough with the whole process to assess what would be the best
>> routes of action to tackle this bottleneck.
> 
> 
> 	  From my experience, it looks to me like their primary approach to
> handling the increased volume has been to improve automation.  In the
> spirit of brainstorming, I'd like to share other ideas on this:
> 
> 
> MAKE IT EASY FOR A USER TO CHECK A DIFF FILE OF "Writing R Extensions"
> COMPARING THE CURRENT VERSION WITH ANY PREVIOUS ONE.

That's already pretty easy on the sources, using svn diff.  The user 
just needs to be comfortable using svn.

For example, assuming you have R-devel checked out, run this to see 
what's changed since Jan 1, 2020:

  svn diff -r {2020-01-01} doc/manual/R-exts.texi

You can do it without checking out a copy with some more typing:

  svn diff -r {2020-01-01} 
--old=https://svn.r-project.org/R/trunk/doc/manual/R-exts.texi

There are probably online web services that do this, but I do have it 
checked out, so I'm not very interested in them.

> 
> 	  For example, every article on Wikipedia has a "View History" tab.
> That lists the dates of all the revisions with a terse summary of what
> was changed in each.  I can click on any two and then click "Compare" to
> see all the changes in that period.
> 
> 
> 	  I'm not going to reread every word of "Writing R Extensions" every
> time I submit something to CRAN.  However, I would be willing to review
> a diff file if it were easy for me to do that.  (And I'm NOT going to
> create my own private file copy of "Writing R Extensions" and manually
> create such a diff file.)

Now you've got it.
> 
> 
> IMPROVE THE COLLABORATION BETWEEN THE CRAN TEAM AND OTHER DOCUMENTATION
> OF HOW TO PREPARE A PACKAGE FOR CRAN
> 
> 
> 	  I know two sources of information on that:
> 
> 
> 		    * Wickham and Bryan, R Packages (https://r-pkgs.org).  I created a
> "cran-comments.md" file based on their recommendations, and missed their
> comment that it should be in ".Rbuildignore".  My latest CRAN submission
> was rejected partly because of that.
> 
> 
> 		    * Colin Fay, "Preparing your package for a CRAN submission"
> (https://github.com/ThinkR-open/prepare-for-cran).  These instructions
> follow Wickham and Bryan in recommending "devtools::revdep_check()".
> Sadly, "revdep_check" is not currently in devtools but in a package
> called revdepcheck.  Worse, that package is not available on CRAN and
> appears twice on GitHub.  The original by bbolker has not been updated
> in 5 years.  The version that is currently maintained is
> "https://github.com/r-lib/revdepcheck".  Fortunately, Hadley Wickham is
> the leading contributor to the latter, so writing him may help correct
> that infelicity, but I should also write to Colin Fay.

Keeping documentation up to date is hard, and maintaining a productive 
collaboration is even harder.  I don't think even writing the suggestion 
in ALL CAPS is enough to bring this about ;-).


> CRAN REVIEW GROUPS:  There are now 41 different "CRAN Task Views".  We
> could ask the maintainer of each Task View to try to recruit a committee
> around each one to discuss coverage and integration.  Each committee
> could be asked to coordinate via email and in virtual meetings.  They
> could be asked to pick 3 standard times for their virtual meetings, so
> anyone in the world would not always be excluded from a meeting that was
> 3 AM their time.  Each package maintainer would be asked to specify at
> least one "Task View" for each package and be willing to discuss
> overlap, etc., with others.  This might be a topic for the next useR
> conference.

I would suggest a more modest goal:  pick one task view in which you 
have an interest, and work to improve it.  Then move on to the next one...

Most of the contributors to R are reasonable people, but they have their 
own priorities.  If you can make it easier for them to achieve their 
priorities, they'll appreciate it.  If you ask them to change their 
priorities, they might not.

Duncan Murdoch


From conver@eg @end|ng |rom gm@||@com  Tue Oct 20 16:45:58 2020
From: conver@eg @end|ng |rom gm@||@com (Geoff Converse)
Date: Tue, 20 Oct 2020 09:45:58 -0500
Subject: [R-pkg-devel] Python installation for automatic checks
Message-ID: <CAO2Ag_tDqn1yZYjH+a8Dto-m3Oyc=N=3DfjdMz+qcHMxLDpr-g@mail.gmail.com>

Hello,

I am trying to submit a package to CRAN, but it failed the auto checks at
win-builder.r-project.org with errors that I do not know how to fix. My
package uses Tensorflow for R, which in turn requires a Python installation
of Tensorflow. I am unsure of how to get R / reticulate to find the Python
installations on other machines automatically. Here are the two error
messages that I get:

*Debian*:

Error: Installation of TensorFlow not found.
Python environments searched for 'tensorflow' package:
 /usr/bin/python3.8
You can install TensorFlow using the install_tensorflow() function.

It seems best to avoid using the "install_tensorflow()" function, and I
have followed the instructions at
https://cran.r-project.org/web/packages/reticulate/vignettes/python_dependencies.html
including making changes to the DESCRIPTION file and .onLoad function, but
to no avail.

*Windows*:

Error in python_config(miniconda_python, NULL, miniconda_python) :
  Error 2 occurred running
C:/Users/ligges/AppData/Local/r-miniconda/envs/r-reticulate/python.exe

I am not familiar with reticulate, and do not know what "Error 2" refers
to. This error occurs every time a test tries to use "tensorflow::" or
"keras::". I would be very grateful if someone could help me solve this
issue.

Thank you!
Geoff Converse

	[[alternative HTML version deleted]]


From cr|@to|oro@@|monetto @end|ng |rom he|mho|tz-muenchen@de  Tue Oct 20 16:48:29 2020
From: cr|@to|oro@@|monetto @end|ng |rom he|mho|tz-muenchen@de (Cristoforo Simonetto)
Date: Tue, 20 Oct 2020 16:48:29 +0200
Subject: [R-pkg-devel] detritus in temp
Message-ID: <88585e3c-dacd-7643-abe5-387c658beba2@helmholtz-muenchen.de>

Dear all,

last week I tried to upload for the first time a package to CRAN but my 
submission was refused:

Flavor: r-devel-linux-x86_64-debian-gcc
Check: for detritus in the temp directory, Result: NOTE
 ? Found the following files/directories:
 ??? 'Rscript2a22.5sWrxM' 'Rscript2a30.B2JkNS'

On the Windows machine of CRAN this error did not occur, nor did it 
occur on my ubuntu PC, and I was also not able to reproduce it on R-hub. 
The CRAN output can be found at:

https://win-builder.r-project.org/incoming_pretest/msce_1.0.0_20201016_101418/ 


I have no idea about possible sources of this error. Could anybody 
please give me a hint?

Thanks

Cristoforo

Helmholtz Zentrum M?nchen

Helmholtz Zentrum M?nchen


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Tue Oct 20 16:55:43 2020
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Tue, 20 Oct 2020 16:55:43 +0200
Subject: [R-pkg-devel] detritus in temp
In-Reply-To: <88585e3c-dacd-7643-abe5-387c658beba2@helmholtz-muenchen.de>
References: <88585e3c-dacd-7643-abe5-387c658beba2@helmholtz-muenchen.de>
Message-ID: <de442c8b-b868-2ba8-2603-6dd991140f4d@gmail.com>

This was a bug in R-devel, already fixed.
(specific to Unix, and only 3 R-devel revisions)

Sorry for the inconvenience,
Tomas

On 10/20/20 4:48 PM, Cristoforo Simonetto wrote:
> Dear all,
>
> last week I tried to upload for the first time a package to CRAN but 
> my submission was refused:
>
> Flavor: r-devel-linux-x86_64-debian-gcc
> Check: for detritus in the temp directory, Result: NOTE
> ? Found the following files/directories:
> ??? 'Rscript2a22.5sWrxM' 'Rscript2a30.B2JkNS'
>
> On the Windows machine of CRAN this error did not occur, nor did it 
> occur on my ubuntu PC, and I was also not able to reproduce it on 
> R-hub. The CRAN output can be found at:
>
> https://win-builder.r-project.org/incoming_pretest/msce_1.0.0_20201016_101418/ 
>
>
> I have no idea about possible sources of this error. Could anybody 
> please give me a hint?
>
> Thanks
>
> Cristoforo
>
> Helmholtz Zentrum M?nchen
>
> Helmholtz Zentrum M?nchen
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From @ndy@teucher @end|ng |rom gm@||@com  Tue Oct 20 22:28:58 2020
From: @ndy@teucher @end|ng |rom gm@||@com (Andy Teucher)
Date: Tue, 20 Oct 2020 13:28:58 -0700
Subject: [R-pkg-devel] Usage of internet resources in examples
Message-ID: <67D95F17-1341-40A5-9DEA-EB3AB45EBE29@gmail.com>

Our package bcdata (https://cran.r-project.org/package=bcdata) retrieves public data from British Columbia data services, so the examples are dependent on successfully hitting web resources. When we initially submitted to CRAN the examples were wrapped in \dontrun{}, but we were asked to change them to use \donttest{}.

 
Now, CRAN is running checks with _R_CHECK_DONTTEST_EXAMPLES_=true, and one of the examples has failed due to a changed web resource. I got an email asking me to fix it and reminding me of the CRAN policy:
 

  'Packages which use Internet resources should fail gracefully with an informative message

 if the resource is not available or has changed (and not give a check warning nor error).'

  This needs correction whether or not the resource recovers.

 
I would prefer that in normal use, the function calling the internet resources fails with an error so that the user is properly alerted. I also agree that these failures shouldn't cause a check error. To demonstrate the use of these functions in examples, is there a preferred method of ensuring that failures will not cause a check warning or error? Should I try to revert back to using \dontrun{} and plead my case? Wrap in `if interactive())`?
 

Thanks very much,

Andy Teucher

 

From bbo|ker @end|ng |rom gm@||@com  Tue Oct 20 22:45:27 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Tue, 20 Oct 2020 16:45:27 -0400
Subject: [R-pkg-devel] Usage of internet resources in examples
In-Reply-To: <67D95F17-1341-40A5-9DEA-EB3AB45EBE29@gmail.com>
References: <67D95F17-1341-40A5-9DEA-EB3AB45EBE29@gmail.com>
Message-ID: <5aa5062e-77c5-695a-0881-99649897b1bc@gmail.com>

   Depending on what you want to do,

   if (interactive())

or

   try()  (in the examples, not in the function)

or

   if (testthat::skip_on_cran())

all seem like reasonable solutions.



On 10/20/20 4:28 PM, Andy Teucher wrote:
> Our package bcdata (https://cran.r-project.org/package=bcdata) retrieves public data from British Columbia data services, so the examples are dependent on successfully hitting web resources. When we initially submitted to CRAN the examples were wrapped in \dontrun{}, but we were asked to change them to use \donttest{}.
> 
>   
> Now, CRAN is running checks with _R_CHECK_DONTTEST_EXAMPLES_=true, and one of the examples has failed due to a changed web resource. I got an email asking me to fix it and reminding me of the CRAN policy:
>   
> 
>    'Packages which use Internet resources should fail gracefully with an informative message
> 
>   if the resource is not available or has changed (and not give a check warning nor error).'
> 
>    This needs correction whether or not the resource recovers.
> 
>   
> I would prefer that in normal use, the function calling the internet resources fails with an error so that the user is properly alerted. I also agree that these failures shouldn't cause a check error. To demonstrate the use of these functions in examples, is there a preferred method of ensuring that failures will not cause a check warning or error? Should I try to revert back to using \dontrun{} and plead my case? Wrap in `if interactive())`?
>   
> 
> Thanks very much,
> 
> Andy Teucher
> 
>   
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From c@@rd|@g@bor @end|ng |rom gm@||@com  Tue Oct 20 22:51:12 2020
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Tue, 20 Oct 2020 21:51:12 +0100
Subject: [R-pkg-devel] Usage of internet resources in examples
In-Reply-To: <5aa5062e-77c5-695a-0881-99649897b1bc@gmail.com>
References: <67D95F17-1341-40A5-9DEA-EB3AB45EBE29@gmail.com>
 <5aa5062e-77c5-695a-0881-99649897b1bc@gmail.com>
Message-ID: <CABtg=KmmCx_MBiqOAipjti63dx=FufnJQoOk=odYdPoRpEASbQ@mail.gmail.com>

On Tue, Oct 20, 2020 at 9:45 PM Ben Bolker <bbolker at gmail.com> wrote:
[...]
>    if (testthat::skip_on_cran())
>
> all seem like reasonable solutions.

I don't think you can use `testthat::skip_on_cran()` for this, it does
not return a logical flag:

? isTRUE(testthat::skip_on_cran())
Error: Reason: On CRAN

It only works in testthat tests.

Gabor

[...]


From bbo|ker @end|ng |rom gm@||@com  Tue Oct 20 23:07:10 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Tue, 20 Oct 2020 17:07:10 -0400
Subject: [R-pkg-devel] Usage of internet resources in examples
In-Reply-To: <CABtg=KmmCx_MBiqOAipjti63dx=FufnJQoOk=odYdPoRpEASbQ@mail.gmail.com>
References: <67D95F17-1341-40A5-9DEA-EB3AB45EBE29@gmail.com>
 <5aa5062e-77c5-695a-0881-99649897b1bc@gmail.com>
 <CABtg=KmmCx_MBiqOAipjti63dx=FufnJQoOk=odYdPoRpEASbQ@mail.gmail.com>
Message-ID: <ffd6533f-f81d-a247-b485-b20474207be5@gmail.com>



On 10/20/20 4:51 PM, G?bor Cs?rdi wrote:
> On Tue, Oct 20, 2020 at 9:45 PM Ben Bolker <bbolker at gmail.com> wrote:
> [...]
>>     if (testthat::skip_on_cran())
>>
>> all seem like reasonable solutions.
> 
> I don't think you can use `testthat::skip_on_cran()` for this, it does
> not return a logical flag:
> 
> ? isTRUE(testthat::skip_on_cran())
> Error: Reason: On CRAN
> 
> It only works in testthat tests.
> 
> Gabor
> 
> [...]
> 

   oh OK, sorry.  The guts of the function are (in testthat:::on_cran(), 
which can't be used because it's not exported)

!identical(Sys.getenv("NOT_CRAN"), "true")


From c@@rd|@g@bor @end|ng |rom gm@||@com  Tue Oct 20 23:10:24 2020
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Tue, 20 Oct 2020 22:10:24 +0100
Subject: [R-pkg-devel] Usage of internet resources in examples
In-Reply-To: <ffd6533f-f81d-a247-b485-b20474207be5@gmail.com>
References: <67D95F17-1341-40A5-9DEA-EB3AB45EBE29@gmail.com>
 <5aa5062e-77c5-695a-0881-99649897b1bc@gmail.com>
 <CABtg=KmmCx_MBiqOAipjti63dx=FufnJQoOk=odYdPoRpEASbQ@mail.gmail.com>
 <ffd6533f-f81d-a247-b485-b20474207be5@gmail.com>
Message-ID: <CABtg=K=0K5B3=xf-MJrjJtD4M1bTqTjzQb7ceHhWE4UPkN5QjA@mail.gmail.com>

On Tue, Oct 20, 2020 at 10:07 PM Ben Bolker <bbolker at gmail.com> wrote:
>
>
>
> On 10/20/20 4:51 PM, G?bor Cs?rdi wrote:
> > On Tue, Oct 20, 2020 at 9:45 PM Ben Bolker <bbolker at gmail.com> wrote:
> > [...]
> >>     if (testthat::skip_on_cran())
> >>
> >> all seem like reasonable solutions.
> >
> > I don't think you can use `testthat::skip_on_cran()` for this, it does
> > not return a logical flag:
> >
> > ? isTRUE(testthat::skip_on_cran())
> > Error: Reason: On CRAN
> >
> > It only works in testthat tests.
> >
> > Gabor
> >
> > [...]
> >
>
>    oh OK, sorry.  The guts of the function are (in testthat:::on_cran(),
> which can't be used because it's not exported)
>
> !identical(Sys.getenv("NOT_CRAN"), "true")

It is not really worth exporting this, because it just checks for an
environment variable, that's all it does. So all users would need to
set this environment variable to be able to run the examples. Which
does not seem like a great solution.

G.


From bbo|ker @end|ng |rom gm@||@com  Tue Oct 20 23:11:41 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Tue, 20 Oct 2020 17:11:41 -0400
Subject: [R-pkg-devel] Usage of internet resources in examples
In-Reply-To: <CABtg=K=0K5B3=xf-MJrjJtD4M1bTqTjzQb7ceHhWE4UPkN5QjA@mail.gmail.com>
References: <67D95F17-1341-40A5-9DEA-EB3AB45EBE29@gmail.com>
 <5aa5062e-77c5-695a-0881-99649897b1bc@gmail.com>
 <CABtg=KmmCx_MBiqOAipjti63dx=FufnJQoOk=odYdPoRpEASbQ@mail.gmail.com>
 <ffd6533f-f81d-a247-b485-b20474207be5@gmail.com>
 <CABtg=K=0K5B3=xf-MJrjJtD4M1bTqTjzQb7ceHhWE4UPkN5QjA@mail.gmail.com>
Message-ID: <a6885bd0-e738-8fdb-bc02-d68b77a3b819@gmail.com>



On 10/20/20 5:10 PM, G?bor Cs?rdi wrote:
> On Tue, Oct 20, 2020 at 10:07 PM Ben Bolker <bbolker at gmail.com> wrote:
>>
>>
>>
>> On 10/20/20 4:51 PM, G?bor Cs?rdi wrote:
>>> On Tue, Oct 20, 2020 at 9:45 PM Ben Bolker <bbolker at gmail.com> wrote:
>>> [...]
>>>>      if (testthat::skip_on_cran())
>>>>
>>>> all seem like reasonable solutions.
>>>
>>> I don't think you can use `testthat::skip_on_cran()` for this, it does
>>> not return a logical flag:
>>>
>>> ? isTRUE(testthat::skip_on_cran())
>>> Error: Reason: On CRAN
>>>
>>> It only works in testthat tests.
>>>
>>> Gabor
>>>
>>> [...]
>>>
>>
>>     oh OK, sorry.  The guts of the function are (in testthat:::on_cran(),
>> which can't be used because it's not exported)
>>
>> !identical(Sys.getenv("NOT_CRAN"), "true")
> 
> It is not really worth exporting this, because it just checks for an
> environment variable, that's all it does. So all users would need to
> set this environment variable to be able to run the examples. Which
> does not seem like a great solution.
> 
> G.
> 

     OK, fair enough.

   Ben B.


From hongoo| @end|ng |rom m|cro@o|t@com  Tue Oct 20 23:42:30 2020
From: hongoo| @end|ng |rom m|cro@o|t@com (Hong Ooi)
Date: Tue, 20 Oct 2020 21:42:30 +0000
Subject: [R-pkg-devel] 
 [EXTERNAL]  Usage of internet resources in examples
In-Reply-To: <67D95F17-1341-40A5-9DEA-EB3AB45EBE29@gmail.com>
References: <67D95F17-1341-40A5-9DEA-EB3AB45EBE29@gmail.com>
Message-ID: <SG2P153MB0190591039064EFD4E08F51EA61F0@SG2P153MB0190.APCP153.PROD.OUTLOOK.COM>

I set \dontrun{} on (most of) the examples in my Azure-related packages, for this very reason. They assume the user has an Azure subscription, and in any case, you don't want to be running code that could potentially cost lots of money just for kicks. The packages in question are basically all those on CRAN that start with "Azure".

I cleared this with Uwe Ligges some time back; although whenever I submit a new package, I tend to get emails from whoever did the review that \donttest() should be removed. I've been able to resolve this by replying and cc'ing Uwe, mentioning that it was approved previously.


-----Original Message-----
From: R-package-devel <r-package-devel-bounces at r-project.org> On Behalf Of Andy Teucher
Sent: Wednesday, 21 October 2020 7:29 AM
To: r-package-devel at r-project.org
Subject: [EXTERNAL] [R-pkg-devel] Usage of internet resources in examples

Our package bcdata (https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fcran.r-project.org%2Fpackage%3Dbcdata&amp;data=04%7C01%7Chongooi%40microsoft.com%7C3a5d0a6f36074ebfde8408d87536d145%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C637388226515752313%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000&amp;sdata=xxnnjkhi%2B40WOm6S9VBrAB8M4IPePX0MrvN3oosqYnA%3D&amp;reserved=0) retrieves public data from British Columbia data services, so the examples are dependent on successfully hitting web resources. When we initially submitted to CRAN the examples were wrapped in \dontrun{}, but we were asked to change them to use \donttest{}.

 
Now, CRAN is running checks with _R_CHECK_DONTTEST_EXAMPLES_=true, and one of the examples has failed due to a changed web resource. I got an email asking me to fix it and reminding me of the CRAN policy:
 

  'Packages which use Internet resources should fail gracefully with an informative message

 if the resource is not available or has changed (and not give a check warning nor error).'

  This needs correction whether or not the resource recovers.

 
I would prefer that in normal use, the function calling the internet resources fails with an error so that the user is properly alerted. I also agree that these failures shouldn't cause a check error. To demonstrate the use of these functions in examples, is there a preferred method of ensuring that failures will not cause a check warning or error? Should I try to revert back to using \dontrun{} and plead my case? Wrap in `if interactive())`?
 

Thanks very much,

Andy Teucher

 
______________________________________________
R-package-devel at r-project.org mailing list
https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-package-devel&amp;data=04%7C01%7Chongooi%40microsoft.com%7C3a5d0a6f36074ebfde8408d87536d145%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C637388226515752313%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000&amp;sdata=qzv9k50S770BrVY%2BAAsDE8i0w8C3zW3reZtxZOJdW9E%3D&amp;reserved=0


From @ndy@teucher @end|ng |rom gm@||@com  Tue Oct 20 23:50:20 2020
From: @ndy@teucher @end|ng |rom gm@||@com (Andy Teucher)
Date: Tue, 20 Oct 2020 14:50:20 -0700
Subject: [R-pkg-devel] 
 [EXTERNAL]  Usage of internet resources in examples
In-Reply-To: <SG2P153MB0190591039064EFD4E08F51EA61F0@SG2P153MB0190.APCP153.PROD.OUTLOOK.COM>
References: <67D95F17-1341-40A5-9DEA-EB3AB45EBE29@gmail.com>
 <SG2P153MB0190591039064EFD4E08F51EA61F0@SG2P153MB0190.APCP153.PROD.OUTLOOK.COM>
Message-ID: <40D5294B-B3B5-4C83-8CD0-4EDA69659E55@gmail.com>

Thanks everyone for the responses. I?m not sure why I didn?t think of wrapping the examples in try(), but I think that might be the best solution - allows the examples to be run, but won?t throw errors in R CMD check.

Hong Ooi - that?s a good point though I think your example does fall more squarely into the ?use dontrun? category as they require a subscription/API key. Our examples don?t, but they can fail if the internet connection fails, the resource url changes, or the server is down.

Cheers,
Andy

> On Oct 20, 2020, at 2:42 PM, Hong Ooi <hongooi at microsoft.com> wrote:
> 
> I set \dontrun{} on (most of) the examples in my Azure-related packages, for this very reason. They assume the user has an Azure subscription, and in any case, you don't want to be running code that could potentially cost lots of money just for kicks. The packages in question are basically all those on CRAN that start with "Azure".
> 
> I cleared this with Uwe Ligges some time back; although whenever I submit a new package, I tend to get emails from whoever did the review that \donttest() should be removed. I've been able to resolve this by replying and cc'ing Uwe, mentioning that it was approved previously.
> 
> 
> -----Original Message-----
> From: R-package-devel <r-package-devel-bounces at r-project.org <mailto:r-package-devel-bounces at r-project.org>> On Behalf Of Andy Teucher
> Sent: Wednesday, 21 October 2020 7:29 AM
> To: r-package-devel at r-project.org <mailto:r-package-devel at r-project.org>
> Subject: [EXTERNAL] [R-pkg-devel] Usage of internet resources in examples
> 
> Our package bcdata (https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fcran.r-project.org%2Fpackage%3Dbcdata&amp;data=04%7C01%7Chongooi%40microsoft.com%7C3a5d0a6f36074ebfde8408d87536d145%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C637388226515752313%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000&amp;sdata=xxnnjkhi%2B40WOm6S9VBrAB8M4IPePX0MrvN3oosqYnA%3D&amp;reserved=0 <https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fcran.r-project.org%2Fpackage%3Dbcdata&amp;data=04%7C01%7Chongooi%40microsoft.com%7C3a5d0a6f36074ebfde8408d87536d145%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C637388226515752313%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000&amp;sdata=xxnnjkhi%2B40WOm6S9VBrAB8M4IPePX0MrvN3oosqYnA%3D&amp;reserved=0>) retrieves public data from British Columbia data services, so the examples are dependent on successfully hitting web resources. When we initially submitted to CRAN the examples were wrapped in \dontrun{}, but we were asked to change them to use \donttest{}.
> 
> 
> Now, CRAN is running checks with _R_CHECK_DONTTEST_EXAMPLES_=true, and one of the examples has failed due to a changed web resource. I got an email asking me to fix it and reminding me of the CRAN policy:
> 
> 
>  'Packages which use Internet resources should fail gracefully with an informative message
> 
> if the resource is not available or has changed (and not give a check warning nor error).'
> 
>  This needs correction whether or not the resource recovers.
> 
> 
> I would prefer that in normal use, the function calling the internet resources fails with an error so that the user is properly alerted. I also agree that these failures shouldn't cause a check error. To demonstrate the use of these functions in examples, is there a preferred method of ensuring that failures will not cause a check warning or error? Should I try to revert back to using \dontrun{} and plead my case? Wrap in `if interactive())`?
> 
> 
> Thanks very much,
> 
> Andy Teucher
> 
> 
> ______________________________________________
> R-package-devel at r-project.org <mailto:R-package-devel at r-project.org> mailing list
> https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-package-devel&amp;data=04%7C01%7Chongooi%40microsoft.com%7C3a5d0a6f36074ebfde8408d87536d145%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C637388226515752313%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000&amp;sdata=qzv9k50S770BrVY%2BAAsDE8i0w8C3zW3reZtxZOJdW9E%3D&amp;reserved=0 <https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-package-devel&amp;data=04%7C01%7Chongooi%40microsoft.com%7C3a5d0a6f36074ebfde8408d87536d145%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C637388226515752313%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000&amp;sdata=qzv9k50S770BrVY%2BAAsDE8i0w8C3zW3reZtxZOJdW9E%3D&amp;reserved=0>

	[[alternative HTML version deleted]]


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Wed Oct 21 09:08:02 2020
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Wed, 21 Oct 2020 09:08:02 +0200
Subject: [R-pkg-devel] Usage of internet resources in examples
In-Reply-To: <ffd6533f-f81d-a247-b485-b20474207be5@gmail.com>
References: <67D95F17-1341-40A5-9DEA-EB3AB45EBE29@gmail.com>
 <5aa5062e-77c5-695a-0881-99649897b1bc@gmail.com>
 <CABtg=KmmCx_MBiqOAipjti63dx=FufnJQoOk=odYdPoRpEASbQ@mail.gmail.com>
 <ffd6533f-f81d-a247-b485-b20474207be5@gmail.com>
Message-ID: <24463.56914.51575.67429@stat.math.ethz.ch>

>>>>> Ben Bolker 
>>>>>     on Tue, 20 Oct 2020 17:07:10 -0400 writes:

    > On 10/20/20 4:51 PM, G?bor Cs?rdi wrote:
    >> On Tue, Oct 20, 2020 at 9:45 PM Ben Bolker <bbolker at gmail.com> wrote:
    >> [...]
    >>> if (testthat::skip_on_cran())
    >>> 
    >>> all seem like reasonable solutions.
    >> 
    >> I don't think you can use `testthat::skip_on_cran()` for this, it does
    >> not return a logical flag:
    >> 
    >> ? isTRUE(testthat::skip_on_cran())
    >> Error: Reason: On CRAN
    >> 
    >> It only works in testthat tests.
    >> 
    >> Gabor
    >> 
    >> [...]
    >> 

    > oh OK, sorry.  The guts of the function are (in testthat:::on_cran(), 
    > which can't be used because it's not exported)

    > !identical(Sys.getenv("NOT_CRAN"), "true")

I still disagree with that part of your recommendations, for this reason:
I think a "perfect" solution would keep the example(s) running
fine when the user calls

     example(<topic>)

(hence it is very good recommendation to  *not* misuse \dontrun{.} here)
*and* have the   example(.)  call  *not* stop on error, but (say)
produce a warning in the case the internet connection isn't
stable at the time the user calls   example(.),
e.g., myself in a train ride in the Swiss alps ..

Hence, your (Ben's) first two suggestions make more sense to me,
and I'd clearly favor

	try(.)

or possibly slightly more sophsticated versions such as

      if(inherits(try({
         .......
         }), "try-error"))  warning(....)

Or then your 2nd suggestion,  if(interactive())
in the case (as it seems here) where the package author
really wants the user to get an error when the internet
connection fails.


Martin


From @ndy@teucher @end|ng |rom gm@||@com  Wed Oct 21 19:38:55 2020
From: @ndy@teucher @end|ng |rom gm@||@com (Andy Teucher)
Date: Wed, 21 Oct 2020 10:38:55 -0700
Subject: [R-pkg-devel] Usage of internet resources in examples
In-Reply-To: <24463.56914.51575.67429@stat.math.ethz.ch>
References: <67D95F17-1341-40A5-9DEA-EB3AB45EBE29@gmail.com>
 <5aa5062e-77c5-695a-0881-99649897b1bc@gmail.com>
 <CABtg=KmmCx_MBiqOAipjti63dx=FufnJQoOk=odYdPoRpEASbQ@mail.gmail.com>
 <ffd6533f-f81d-a247-b485-b20474207be5@gmail.com>
 <24463.56914.51575.67429@stat.math.ethz.ch>
Message-ID: <47A81C6C-76B4-4CEF-BB33-54225A6083DC@gmail.com>

Thanks Martin,

I agree that the example should run for a user when calling example() - hence I am going with a simple try() around the function calls in the examples. I agree your more sophisticated version has better behaviour, but I don?t want to clutter the examples with code that might just confuse a user.

Andy

> On Oct 21, 2020, at 12:08 AM, Martin Maechler <maechler at stat.math.ethz.ch> wrote:
> 
>>>>>> Ben Bolker 
>>>>>>    on Tue, 20 Oct 2020 17:07:10 -0400 writes:
> 
>> On 10/20/20 4:51 PM, G?bor Cs?rdi wrote:
>>> On Tue, Oct 20, 2020 at 9:45 PM Ben Bolker <bbolker at gmail.com> wrote:
>>> [...]
>>>> if (testthat::skip_on_cran())
>>>> 
>>>> all seem like reasonable solutions.
>>> 
>>> I don't think you can use `testthat::skip_on_cran()` for this, it does
>>> not return a logical flag:
>>> 
>>> ? isTRUE(testthat::skip_on_cran())
>>> Error: Reason: On CRAN
>>> 
>>> It only works in testthat tests.
>>> 
>>> Gabor
>>> 
>>> [...]
>>> 
> 
>> oh OK, sorry.  The guts of the function are (in testthat:::on_cran(), 
>> which can't be used because it's not exported)
> 
>> !identical(Sys.getenv("NOT_CRAN"), "true")
> 
> I still disagree with that part of your recommendations, for this reason:
> I think a "perfect" solution would keep the example(s) running
> fine when the user calls
> 
>     example(<topic>)
> 
> (hence it is very good recommendation to  *not* misuse \dontrun{.} here)
> *and* have the   example(.)  call  *not* stop on error, but (say)
> produce a warning in the case the internet connection isn't
> stable at the time the user calls   example(.),
> e.g., myself in a train ride in the Swiss alps ..
> 
> Hence, your (Ben's) first two suggestions make more sense to me,
> and I'd clearly favor
> 
> 	try(.)
> 
> or possibly slightly more sophsticated versions such as
> 
>      if(inherits(try({
>         .......
>         }), "try-error"))  warning(....)
> 
> Or then your 2nd suggestion,  if(interactive())
> in the case (as it seems here) where the package author
> really wants the user to get an error when the internet
> connection fails.
> 
> 
> Martin
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From m@rc_@chw@rtz @end|ng |rom me@com  Wed Oct 21 20:08:04 2020
From: m@rc_@chw@rtz @end|ng |rom me@com (Marc Schwartz)
Date: Wed, 21 Oct 2020 14:08:04 -0400
Subject: [R-pkg-devel] Delays in CRAN Windows Binaries?
Message-ID: <5BADE9C6-684C-4A18-A1A3-6B29F891DD08@me.com>

Hi All,

Just thought that I would check to see if there are any known issues/delays for CRAN in creating R release and devel binaries for Windows for updated packages.

It has been four days since I submitted an update and the other binaries were created within a couple of days. The two Windows binaries are the only outstanding updates pending.

Thanks!

Marc Schwartz


From henr|k@bengt@@on @end|ng |rom gm@||@com  Wed Oct 21 21:47:28 2020
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Wed, 21 Oct 2020 12:47:28 -0700
Subject: [R-pkg-devel] Delays in CRAN Windows Binaries?
In-Reply-To: <5BADE9C6-684C-4A18-A1A3-6B29F891DD08@me.com>
References: <5BADE9C6-684C-4A18-A1A3-6B29F891DD08@me.com>
Message-ID: <CAFDcVCQOC9z1ib9-+NdSb9pyy-0nkiODkC3p0diKz1VgOgPvpA@mail.gmail.com>

Related to this:

It would be neat to have a dashboard that reports on the current
latency is on the different CRAN "queues" are, e.g. how long is the
average waiting time when submitting a new package ("newbies") until
you get a manual reply or it's on CRAN, submitting an update with all
OK before it hits CRAN, waiting time for building Windows or macOS
binaries, etc.  Some, but not all, of this information can already be
guestimated from the info on ftp://cran.r-project.org/incoming/, on
easier on https://lockedata.github.io/cransays/articles/dashboard.html.
I think this could be a great contributor project - it doesn't have to
be hosted by CRAN.

/Henrik

On Wed, Oct 21, 2020 at 11:08 AM Marc Schwartz <marc_schwartz at me.com> wrote:
>
> Hi All,
>
> Just thought that I would check to see if there are any known issues/delays for CRAN in creating R release and devel binaries for Windows for updated packages.
>
> It has been four days since I submitted an update and the other binaries were created within a couple of days. The two Windows binaries are the only outstanding updates pending.
>
> Thanks!
>
> Marc Schwartz
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From kev|n@r@coombe@ @end|ng |rom gm@||@com  Thu Oct 22 16:21:26 2020
From: kev|n@r@coombe@ @end|ng |rom gm@||@com (Kevin R. Coombes)
Date: Thu, 22 Oct 2020 10:21:26 -0400
Subject: [R-pkg-devel] Licenses
Message-ID: <0b394dc3-b931-d689-c64b-66ab5fbc9556@gmail.com>

Hi,

I am developing a package and getting a NOTE from R CMD check about 
licenses and ultimate dependencies on a restrictive license, which I 
can't figure out how to fix.

My package imports flowCore, which has an Artistic-2.0 license.
But flowCore imports cytolib, which has a license from the Fred 
Hutchinson Cancer Center that prohibits commercial use.

I tried using the same license as flowCore, but still get the NOTE. Does 
anyone know which licenses can be used to be compatible with the Fred 
Hutch license? Or can I just do what flowCore apparently does and ignore 
the NOTE?

Thanks,
 ? Kevin


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu Oct 22 17:05:46 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 22 Oct 2020 11:05:46 -0400
Subject: [R-pkg-devel] Licenses
In-Reply-To: <0b394dc3-b931-d689-c64b-66ab5fbc9556@gmail.com>
References: <0b394dc3-b931-d689-c64b-66ab5fbc9556@gmail.com>
Message-ID: <8afb8bac-4626-7093-14c9-e85e39d07623@gmail.com>

On 22/10/2020 10:21 a.m., Kevin R. Coombes wrote:
> Hi,
> 
> I am developing a package and getting a NOTE from R CMD check about
> licenses and ultimate dependencies on a restrictive license, which I
> can't figure out how to fix.
> 
> My package imports flowCore, which has an Artistic-2.0 license.
> But flowCore imports cytolib, which has a license from the Fred
> Hutchinson Cancer Center that prohibits commercial use.
> 
> I tried using the same license as flowCore, but still get the NOTE. Does
> anyone know which licenses can be used to be compatible with the Fred
> Hutch license? Or can I just do what flowCore apparently does and ignore
> the NOTE?

flowCore is a Bioconductor package, not on CRAN.  Are you intending to 
send yours there, or to CRAN?  I suspect Bioconductor is happy with the 
Hutch's license.

Duncan Murdoch


From m@rc_@chw@rtz @end|ng |rom me@com  Thu Oct 22 17:19:06 2020
From: m@rc_@chw@rtz @end|ng |rom me@com (Marc Schwartz)
Date: Thu, 22 Oct 2020 11:19:06 -0400
Subject: [R-pkg-devel] Licenses
In-Reply-To: <0b394dc3-b931-d689-c64b-66ab5fbc9556@gmail.com>
References: <0b394dc3-b931-d689-c64b-66ab5fbc9556@gmail.com>
Message-ID: <1CBF54FF-314B-4F73-8D91-9F3FEBE7623E@me.com>

On Oct 22, 2020, at 10:21 AM, Kevin R. Coombes <kevin.r.coombes at gmail.com> wrote:
> 
> Hi,
> 
> I am developing a package and getting a NOTE from R CMD check about licenses and ultimate dependencies on a restrictive license, which I can't figure out how to fix.
> 
> My package imports flowCore, which has an Artistic-2.0 license.
> But flowCore imports cytolib, which has a license from the Fred Hutchinson Cancer Center that prohibits commercial use.
> 
> I tried using the same license as flowCore, but still get the NOTE. Does anyone know which licenses can be used to be compatible with the Fred Hutch license? Or can I just do what flowCore apparently does and ignore the NOTE?
> 
> Thanks,
>   Kevin


Hi Kevin,

I have not looked at BioC's licensing requirements, but presumably, they are ok with the non-commercial use restrictions placed on users of cytolib, thus also on flowCore.

If you want your package to be on CRAN, those restrictions on users are not allowed by CRAN's policy:

https://cran.r-project.org/web/packages/policies.html

"Such packages are not permitted to require (e.g., by specifying in ?Depends?, ?Imports? or ?LinkingTo? fields) directly or indirectly a package or external software which restricts users or usage."


Thus, you would seem to need to make a decision on hosting your package on CRAN, but without the need to import from flowCore/cytolib, or consider hosting your package on BioC, with the attendant restrictions on commercial use.

Regards,

Marc Schwartz


From @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org  Thu Oct 22 17:32:31 2020
From: @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org (Spencer Graves)
Date: Thu, 22 Oct 2020 10:32:31 -0500
Subject: [R-pkg-devel] "--resave-data" doesn't work
In-Reply-To: <5f919fa5dd479_13fab2b6b5d1c16344b@travis-tasks-74c5cbb99f-vrw87.mail>
References: <5f919fa5dd479_13fab2b6b5d1c16344b@travis-tasks-74c5cbb99f-vrw87.mail>
Message-ID: <b1b633b1-adc8-6653-a2e1-b6c68628fb78@effectivedefense.org>

Hello:


	  With "R CMD check Ecdat_0.3-8.tar.gz" both locally (under macOS 
10.15.7 with R 4.0.3) and with Travis (below), I'm getting "Warning: 
large data files saved inefficiently: ...  significantly better 
compression could be obtained by using R CMD build --resave-data".  This 
is AFTER I do "R CMD build Ecdat --resave-data".


	  What do you suggest I do to get past this problem?


	  Thanks,
	  Spencer Graves


p.s.  My ".travis.yml" file ends with "r_build_args: --resave-data".  I 
had trouble with this a year ago, and I think it was fixed then, as 
documented in:


https://travis-ci.community/t/how-to-add-resave-date-to-r-cmd-build-in-travis/5708


-------- Forwarded Message --------
From: 	25 2020 <>
X-Mozilla-Status: 	0001
X-Mozilla-Status2: 	00000000
X-Mozilla-Keys: 	
Return-Path: 
<bounce-md_14313403.5f919fa6.v1-82380f70f1c14b3dafeaa89d7e4ed4d6 at mandrillapp.com>
Delivered-To: 	spencer.graves at effectivedefense.org
Received: 	from nake.garlic.com by nake.garlic.com with LMTP id 
mLAtEeOfkV/DJQAATeEoEw (envelope-from 
<bounce-md_14313403.5f919fa6.v1-82380f70f1c14b3dafeaa89d7e4ed4d6 at mandrillapp.com>) 
for <spencer.graves at effectivedefense.org>; Thu, 22 Oct 2020 08:06:11 -0700
Return-path: 
<bounce-md_14313403.5f919fa6.v1-82380f70f1c14b3dafeaa89d7e4ed4d6 at mandrillapp.com>
Envelope-to: 	spencer.graves at effectivedefense.org
Delivery-date: 	Thu, 22 Oct 2020 08:06:11 -0700
Received: 	from mail177-22.suw61.mandrillapp.com ([198.2.177.22]) by 
nake.garlic.com with esmtps (TLS1.2) tls 
TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 (Exim 4.94) (envelope-from 
<bounce-md_14313403.5f919fa6.v1-82380f70f1c14b3dafeaa89d7e4ed4d6 at mandrillapp.com>) 
id 1kVcAN-0002sc-2k for spencer.graves at effectivedefense.org; Thu, 22 Oct 
2020 08:06:11 -0700
DKIM-Signature: 	v=1; a=rsa-sha256; c=relaxed/relaxed; s=mandrill; 
d=travis-ci.org; 
h=From:Subject:To:Message-Id:In-Reply-To:Date:MIME-Version:Content-Type; 
i=builds at travis-ci.org; bh=A1xsPceiPwapN5fL2C59qv83kPF2ayTnuMt55i9bEM8=; 
b=RinD4JKeXoHPElEmqOQHNW/YkGKzCGnhHn1jXi24KZ4Xr4pNtPKuMTqXW9vuBS+uUTmKYKwftEQE 
AdNr6nsU6py67YxEZiqW2hz5/y6uUtOz/yppHj2D1KvFFXrVk/nIi43Rh+6Oyi9dlWls4BeJBS9b 
7ZGQA0p2ZwB61BSJxj8=
Received: 	from pmta06.mandrill.prod.suw01.rsglab.com (127.0.0.1) by 
mail177-22.suw61.mandrillapp.com id hi6fu622rtk0 for 
<spencer.graves at effectivedefense.org>; Thu, 22 Oct 2020 15:05:10 +0000 
(envelope-from 
<bounce-md_14313403.5f919fa6.v1-82380f70f1c14b3dafeaa89d7e4ed4d6 at mandrillapp.com>)
DKIM-Signature: 	v=1; a=rsa-sha256; c=relaxed/relaxed; 
d=mandrillapp.com; i=@mandrillapp.com; q=dns/txt; s=mandrill; 
t=1603379110; h=From : Subject : To : Message-Id : In-Reply-To : Date : 
MIME-Version : Content-Type : From : Subject : Date : X-Mandrill-User : 
List-Unsubscribe; bh=A1xsPceiPwapN5fL2C59qv83kPF2ayTnuMt55i9bEM8=; 
b=f4HUv/tBAJA/Uxju7GQd8GFRnx9WoCuLzm/DR88v+EQyh9Ji438Pw0joujjJLl9IIZ4u8L 
PdYEuWaMCXxYUaPmoenwAtrYhUFUWRl3CDhZZUSJ9MeHfvupmbiAsx9ozJTAxzdN++hL5slm 
1acTp/KFNEozh39+srRCEy3KQ8/BM=
From: 	Travis CI <builds at travis-ci.org>
Subject: 	Still Failing: sbgraves237/Ecdat#36 (master - 5f4fd9b)
Received: 	from [104.196.204.233] by mandrillapp.com id 
82380f70f1c14b3dafeaa89d7e4ed4d6; Thu, 22 Oct 2020 15:05:10 +0000
To: 	spencer.graves at effectivedefense.org
Message-Id: 
<5f919fa5dd479_13fab2b6b5d1c16344b at travis-tasks-74c5cbb99f-vrw87.mail>
In-Reply-To: 	<sbgraves237/Ecdat+738040367+still failing at travis-ci.org>
X-Report-Abuse: 	Please forward a copy of this message, including all 
headers, to abuse at mandrill.com
X-Report-Abuse: 	You can also report abuse here: 
http://mandrillapp.com/contact/abuse?id=14313403.82380f70f1c14b3dafeaa89d7e4ed4d6
X-Mandrill-User: 	md_14313403
Date: 	Thu, 22 Oct 2020 15:05:10 +0000
MIME-Version: 	1.0
Content-Type: 	multipart/alternative; boundary="_av-8UWih6jddJur5HgoxVzXYQ"



sbgraves237

/

Ecdat

<https://travis-ci.org/github/sbgraves237/Ecdat?utm_medium=notification&utm_source=email> 


branch iconmaster <https://github.com/sbgraves237/Ecdat/tree/master>

build has failed
Build #36 is still failing 
<https://travis-ci.org/github/sbgraves237/Ecdat/builds/738040367?utm_medium=notification&utm_source=email>
arrow to build time
clock icon5 mins and 15 secs

sbgraves237 avatarsbgraves237

5f4fd9b CHANGESET ? 
<https://github.com/sbgraves237/Ecdat/compare/39e45342df70...5f4fd9b4815b>

add blank NAMESPACE

Want to know about upcoming build environment updates?

Would you like to stay up-to-date with the upcoming Travis CI build 
environment updates? We set up a mailing list for you!

SIGN UP HERE <http://eepurl.com/9OCsP>

book icon

Documentation <https://docs.travis-ci.com/> about Travis CI

Have any questions? We're here to help. <mailto:support at travis-ci.com>
Unsubscribe 
<https://travis-ci.org/account/preferences/unsubscribe?repository=25157200&utm_medium=notification&utm_source=email> 
from build emails from the sbgraves237/Ecdat repository.
To unsubscribe from *all* build emails, please update your settings 
<https://travis-ci.org/account/preferences/unsubscribe?utm_medium=notification&utm_source=email>. 

black and white travis ci logo <https://travis-ci.com>

Travis CI GmbH, Rigaer Str. 8, 10427 Berlin, Germany | GF/CEO: Randy 
Jacops | Contact: contact at travis-ci.com <mailto:contact at travis-ci.com> | 
Amtsgericht Charlottenburg, Berlin, HRB 140133 B | Umsatzsteuer-ID gem?? 
?27 a Umsatzsteuergesetz: DE282002648


From m@rc_@chw@rtz @end|ng |rom me@com  Thu Oct 22 17:55:57 2020
From: m@rc_@chw@rtz @end|ng |rom me@com (Marc Schwartz)
Date: Thu, 22 Oct 2020 11:55:57 -0400
Subject: [R-pkg-devel] Licenses
In-Reply-To: <1CBF54FF-314B-4F73-8D91-9F3FEBE7623E@me.com>
References: <0b394dc3-b931-d689-c64b-66ab5fbc9556@gmail.com>
 <1CBF54FF-314B-4F73-8D91-9F3FEBE7623E@me.com>
Message-ID: <C795AF6F-DD80-497F-9602-F1C829AD70E0@me.com>



> On Oct 22, 2020, at 11:19 AM, Marc Schwartz <marc_schwartz at me.com> wrote:
> 
> On Oct 22, 2020, at 10:21 AM, Kevin R. Coombes <kevin.r.coombes at gmail.com> wrote:
>> 
>> Hi,
>> 
>> I am developing a package and getting a NOTE from R CMD check about licenses and ultimate dependencies on a restrictive license, which I can't figure out how to fix.
>> 
>> My package imports flowCore, which has an Artistic-2.0 license.
>> But flowCore imports cytolib, which has a license from the Fred Hutchinson Cancer Center that prohibits commercial use.
>> 
>> I tried using the same license as flowCore, but still get the NOTE. Does anyone know which licenses can be used to be compatible with the Fred Hutch license? Or can I just do what flowCore apparently does and ignore the NOTE?
>> 
>> Thanks,
>>  Kevin
> 
> 
> Hi Kevin,
> 
> I have not looked at BioC's licensing requirements, but presumably, they are ok with the non-commercial use restrictions placed on users of cytolib, thus also on flowCore.
> 
> If you want your package to be on CRAN, those restrictions on users are not allowed by CRAN's policy:
> 
> https://cran.r-project.org/web/packages/policies.html
> 
> "Such packages are not permitted to require (e.g., by specifying in ?Depends?, ?Imports? or ?LinkingTo? fields) directly or indirectly a package or external software which restricts users or usage."
> 
> 
> Thus, you would seem to need to make a decision on hosting your package on CRAN, but without the need to import from flowCore/cytolib, or consider hosting your package on BioC, with the attendant restrictions on commercial use.
> 
> Regards,
> 
> Marc Schwartz


Well....

Now that I look at:

  https://svn.r-project.org/R/trunk/share/licenses/license.db

there are a few licenses listed there that do place restrictions on commercial use.

These include some Creative Commons Non-Commercial use variants and the ACM license.

Is the license DB file out of date, or is there an apparent conflict with the CRAN policy that I quoted above?

Anyone with an ability to comment?

Regards,

Marc


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu Oct 22 18:12:25 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 22 Oct 2020 12:12:25 -0400
Subject: [R-pkg-devel] Licenses
In-Reply-To: <C795AF6F-DD80-497F-9602-F1C829AD70E0@me.com>
References: <0b394dc3-b931-d689-c64b-66ab5fbc9556@gmail.com>
 <1CBF54FF-314B-4F73-8D91-9F3FEBE7623E@me.com>
 <C795AF6F-DD80-497F-9602-F1C829AD70E0@me.com>
Message-ID: <0dbd354c-3c8d-6dc4-2131-0e2ac9142d86@gmail.com>

On 22/10/2020 11:55 a.m., Marc Schwartz wrote:
> 
> 
>> On Oct 22, 2020, at 11:19 AM, Marc Schwartz <marc_schwartz at me.com> wrote:
>>
>> On Oct 22, 2020, at 10:21 AM, Kevin R. Coombes <kevin.r.coombes at gmail.com> wrote:
>>>
>>> Hi,
>>>
>>> I am developing a package and getting a NOTE from R CMD check about licenses and ultimate dependencies on a restrictive license, which I can't figure out how to fix.
>>>
>>> My package imports flowCore, which has an Artistic-2.0 license.
>>> But flowCore imports cytolib, which has a license from the Fred Hutchinson Cancer Center that prohibits commercial use.
>>>
>>> I tried using the same license as flowCore, but still get the NOTE. Does anyone know which licenses can be used to be compatible with the Fred Hutch license? Or can I just do what flowCore apparently does and ignore the NOTE?
>>>
>>> Thanks,
>>>   Kevin
>>
>>
>> Hi Kevin,
>>
>> I have not looked at BioC's licensing requirements, but presumably, they are ok with the non-commercial use restrictions placed on users of cytolib, thus also on flowCore.
>>
>> If you want your package to be on CRAN, those restrictions on users are not allowed by CRAN's policy:
>>
>> https://cran.r-project.org/web/packages/policies.html
>>
>> "Such packages are not permitted to require (e.g., by specifying in ?Depends?, ?Imports? or ?LinkingTo? fields) directly or indirectly a package or external software which restricts users or usage."
>>
>>
>> Thus, you would seem to need to make a decision on hosting your package on CRAN, but without the need to import from flowCore/cytolib, or consider hosting your package on BioC, with the attendant restrictions on commercial use.
>>
>> Regards,
>>
>> Marc Schwartz
> 
> 
> Well....
> 
> Now that I look at:
> 
>    https://svn.r-project.org/R/trunk/share/licenses/license.db
> 
> there are a few licenses listed there that do place restrictions on commercial use.
> 
> These include some Creative Commons Non-Commercial use variants and the ACM license.
> 
> Is the license DB file out of date, or is there an apparent conflict with the CRAN policy that I quoted above?
> 
> Anyone with an ability to comment?

Presumably CRAN would not accept the non-FOSS licenses that are listed 
in license.db, but R could still do computations on them, as described 
in ?library in the "Licenses" section.

Duncan Murdoch


From m@rc_@chw@rtz @end|ng |rom me@com  Thu Oct 22 18:56:58 2020
From: m@rc_@chw@rtz @end|ng |rom me@com (Marc Schwartz)
Date: Thu, 22 Oct 2020 12:56:58 -0400
Subject: [R-pkg-devel] Licenses
In-Reply-To: <0dbd354c-3c8d-6dc4-2131-0e2ac9142d86@gmail.com>
References: <0b394dc3-b931-d689-c64b-66ab5fbc9556@gmail.com>
 <1CBF54FF-314B-4F73-8D91-9F3FEBE7623E@me.com>
 <C795AF6F-DD80-497F-9602-F1C829AD70E0@me.com>
 <0dbd354c-3c8d-6dc4-2131-0e2ac9142d86@gmail.com>
Message-ID: <7F4206F6-D88D-42DB-8053-2F25B2A99539@me.com>


> On Oct 22, 2020, at 12:12 PM, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> 
> On 22/10/2020 11:55 a.m., Marc Schwartz wrote:
>>> On Oct 22, 2020, at 11:19 AM, Marc Schwartz <marc_schwartz at me.com> wrote:
>>> 
>>> On Oct 22, 2020, at 10:21 AM, Kevin R. Coombes <kevin.r.coombes at gmail.com> wrote:
>>>> 
>>>> Hi,
>>>> 
>>>> I am developing a package and getting a NOTE from R CMD check about licenses and ultimate dependencies on a restrictive license, which I can't figure out how to fix.
>>>> 
>>>> My package imports flowCore, which has an Artistic-2.0 license.
>>>> But flowCore imports cytolib, which has a license from the Fred Hutchinson Cancer Center that prohibits commercial use.
>>>> 
>>>> I tried using the same license as flowCore, but still get the NOTE. Does anyone know which licenses can be used to be compatible with the Fred Hutch license? Or can I just do what flowCore apparently does and ignore the NOTE?
>>>> 
>>>> Thanks,
>>>>  Kevin
>>> 
>>> 
>>> Hi Kevin,
>>> 
>>> I have not looked at BioC's licensing requirements, but presumably, they are ok with the non-commercial use restrictions placed on users of cytolib, thus also on flowCore.
>>> 
>>> If you want your package to be on CRAN, those restrictions on users are not allowed by CRAN's policy:
>>> 
>>> https://cran.r-project.org/web/packages/policies.html
>>> 
>>> "Such packages are not permitted to require (e.g., by specifying in ?Depends?, ?Imports? or ?LinkingTo? fields) directly or indirectly a package or external software which restricts users or usage."
>>> 
>>> 
>>> Thus, you would seem to need to make a decision on hosting your package on CRAN, but without the need to import from flowCore/cytolib, or consider hosting your package on BioC, with the attendant restrictions on commercial use.
>>> 
>>> Regards,
>>> 
>>> Marc Schwartz
>> Well....
>> Now that I look at:
>>   https://svn.r-project.org/R/trunk/share/licenses/license.db
>> there are a few licenses listed there that do place restrictions on commercial use.
>> These include some Creative Commons Non-Commercial use variants and the ACM license.
>> Is the license DB file out of date, or is there an apparent conflict with the CRAN policy that I quoted above?
>> Anyone with an ability to comment?
> 
> Presumably CRAN would not accept the non-FOSS licenses that are listed in license.db, but R could still do computations on them, as described in ?library in the "Licenses" section.
> 
> Duncan Murdoch


Duncan,

That is a reasonable distinction.

However, upon searching CRAN with available.packages(), I came up with a list of packages that do include Non-Commercial restrictions, including CC BY-NC* and ACM licenses. There may be others that I missed visually scanning the output.

There also appear to be some conflicts/inconsistencies with the 'License_restricts_use' field entry and the 'License' field in some cases, where, for example, most that have "CC BY-NC-SA 4.0" as the license, have "NA" as the entry for restricted use, rather than "yes".

I am not going to list them here, as I don't want to pick on any particular package, but this does seem to point to an inconsistency between packages that are hosted on CRAN and the articulated policy...

Regards,

Marc


From hugh@p@r@on@ge @end|ng |rom gm@||@com  Thu Oct 22 19:30:21 2020
From: hugh@p@r@on@ge @end|ng |rom gm@||@com (Hugh Parsonage)
Date: Fri, 23 Oct 2020 04:30:21 +1100
Subject: [R-pkg-devel] Licenses
In-Reply-To: <0dbd354c-3c8d-6dc4-2131-0e2ac9142d86@gmail.com>
References: <0b394dc3-b931-d689-c64b-66ab5fbc9556@gmail.com>
 <1CBF54FF-314B-4F73-8D91-9F3FEBE7623E@me.com>
 <C795AF6F-DD80-497F-9602-F1C829AD70E0@me.com>
 <0dbd354c-3c8d-6dc4-2131-0e2ac9142d86@gmail.com>
Message-ID: <CAJmOi+N69VO56h42+21M93kGCtRbdue7d8ikGTYegbfPMsp-pQ@mail.gmail.com>

It?s necessary but not sufficient to use a licence from license.db

On Fri, 23 Oct 2020 at 3:12 am, Duncan Murdoch <murdoch.duncan at gmail.com>
wrote:

> On 22/10/2020 11:55 a.m., Marc Schwartz wrote:
> >
> >
> >> On Oct 22, 2020, at 11:19 AM, Marc Schwartz <marc_schwartz at me.com>
> wrote:
> >>
> >> On Oct 22, 2020, at 10:21 AM, Kevin R. Coombes <
> kevin.r.coombes at gmail.com> wrote:
> >>>
> >>> Hi,
> >>>
> >>> I am developing a package and getting a NOTE from R CMD check about
> licenses and ultimate dependencies on a restrictive license, which I can't
> figure out how to fix.
> >>>
> >>> My package imports flowCore, which has an Artistic-2.0 license.
> >>> But flowCore imports cytolib, which has a license from the Fred
> Hutchinson Cancer Center that prohibits commercial use.
> >>>
> >>> I tried using the same license as flowCore, but still get the NOTE.
> Does anyone know which licenses can be used to be compatible with the Fred
> Hutch license? Or can I just do what flowCore apparently does and ignore
> the NOTE?
> >>>
> >>> Thanks,
> >>>   Kevin
> >>
> >>
> >> Hi Kevin,
> >>
> >> I have not looked at BioC's licensing requirements, but presumably,
> they are ok with the non-commercial use restrictions placed on users of
> cytolib, thus also on flowCore.
> >>
> >> If you want your package to be on CRAN, those restrictions on users are
> not allowed by CRAN's policy:
> >>
> >> https://cran.r-project.org/web/packages/policies.html
> >>
> >> "Such packages are not permitted to require (e.g., by specifying in
> ?Depends?, ?Imports? or ?LinkingTo? fields) directly or indirectly a
> package or external software which restricts users or usage."
> >>
> >>
> >> Thus, you would seem to need to make a decision on hosting your package
> on CRAN, but without the need to import from flowCore/cytolib, or consider
> hosting your package on BioC, with the attendant restrictions on commercial
> use.
> >>
> >> Regards,
> >>
> >> Marc Schwartz
> >
> >
> > Well....
> >
> > Now that I look at:
> >
> >    https://svn.r-project.org/R/trunk/share/licenses/license.db
> >
> > there are a few licenses listed there that do place restrictions on
> commercial use.
> >
> > These include some Creative Commons Non-Commercial use variants and the
> ACM license.
> >
> > Is the license DB file out of date, or is there an apparent conflict
> with the CRAN policy that I quoted above?
> >
> > Anyone with an ability to comment?
>
> Presumably CRAN would not accept the non-FOSS licenses that are listed
> in license.db, but R could still do computations on them, as described
> in ?library in the "Licenses" section.
>
> Duncan Murdoch
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu Oct 22 21:47:13 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 22 Oct 2020 15:47:13 -0400
Subject: [R-pkg-devel] Licenses
In-Reply-To: <7F4206F6-D88D-42DB-8053-2F25B2A99539@me.com>
References: <0b394dc3-b931-d689-c64b-66ab5fbc9556@gmail.com>
 <1CBF54FF-314B-4F73-8D91-9F3FEBE7623E@me.com>
 <C795AF6F-DD80-497F-9602-F1C829AD70E0@me.com>
 <0dbd354c-3c8d-6dc4-2131-0e2ac9142d86@gmail.com>
 <7F4206F6-D88D-42DB-8053-2F25B2A99539@me.com>
Message-ID: <d6988579-8201-712b-9f48-f174c2ab61a0@gmail.com>

On 22/10/2020 12:56 p.m., Marc Schwartz wrote:
> 
>> On Oct 22, 2020, at 12:12 PM, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>>
>> On 22/10/2020 11:55 a.m., Marc Schwartz wrote:
>>>> On Oct 22, 2020, at 11:19 AM, Marc Schwartz <marc_schwartz at me.com> wrote:
>>>>
>>>> On Oct 22, 2020, at 10:21 AM, Kevin R. Coombes <kevin.r.coombes at gmail.com> wrote:
>>>>>
>>>>> Hi,
>>>>>
>>>>> I am developing a package and getting a NOTE from R CMD check about licenses and ultimate dependencies on a restrictive license, which I can't figure out how to fix.
>>>>>
>>>>> My package imports flowCore, which has an Artistic-2.0 license.
>>>>> But flowCore imports cytolib, which has a license from the Fred Hutchinson Cancer Center that prohibits commercial use.
>>>>>
>>>>> I tried using the same license as flowCore, but still get the NOTE. Does anyone know which licenses can be used to be compatible with the Fred Hutch license? Or can I just do what flowCore apparently does and ignore the NOTE?
>>>>>
>>>>> Thanks,
>>>>>   Kevin
>>>>
>>>>
>>>> Hi Kevin,
>>>>
>>>> I have not looked at BioC's licensing requirements, but presumably, they are ok with the non-commercial use restrictions placed on users of cytolib, thus also on flowCore.
>>>>
>>>> If you want your package to be on CRAN, those restrictions on users are not allowed by CRAN's policy:
>>>>
>>>> https://cran.r-project.org/web/packages/policies.html
>>>>
>>>> "Such packages are not permitted to require (e.g., by specifying in ?Depends?, ?Imports? or ?LinkingTo? fields) directly or indirectly a package or external software which restricts users or usage."
>>>>
>>>>
>>>> Thus, you would seem to need to make a decision on hosting your package on CRAN, but without the need to import from flowCore/cytolib, or consider hosting your package on BioC, with the attendant restrictions on commercial use.
>>>>
>>>> Regards,
>>>>
>>>> Marc Schwartz
>>> Well....
>>> Now that I look at:
>>>    https://svn.r-project.org/R/trunk/share/licenses/license.db
>>> there are a few licenses listed there that do place restrictions on commercial use.
>>> These include some Creative Commons Non-Commercial use variants and the ACM license.
>>> Is the license DB file out of date, or is there an apparent conflict with the CRAN policy that I quoted above?
>>> Anyone with an ability to comment?
>>
>> Presumably CRAN would not accept the non-FOSS licenses that are listed in license.db, but R could still do computations on them, as described in ?library in the "Licenses" section.
>>
>> Duncan Murdoch
> 
> 
> Duncan,
> 
> That is a reasonable distinction.
> 
> However, upon searching CRAN with available.packages(), I came up with a list of packages that do include Non-Commercial restrictions, including CC BY-NC* and ACM licenses. There may be others that I missed visually scanning the output.
> 
> There also appear to be some conflicts/inconsistencies with the 'License_restricts_use' field entry and the 'License' field in some cases, where, for example, most that have "CC BY-NC-SA 4.0" as the license, have "NA" as the entry for restricted use, rather than "yes".
> 
> I am not going to list them here, as I don't want to pick on any particular package, but this does seem to point to an inconsistency between packages that are hosted on CRAN and the articulated policy...
> 

Perhaps those packages were accepted before this became a policy, and 
now that others depend on them, it would be too disruptive to remove 
them, and users are warned via the 'License_restricts_use' field entry. 
Why does it sometimes contain errors?  That I don't know, other than 
blaming it on Murphy's Law.

Duncan Murdoch


From roy@mende|@@ohn @end|ng |rom no@@@gov  Thu Oct 22 23:15:49 2020
From: roy@mende|@@ohn @end|ng |rom no@@@gov (Roy Mendelssohn - NOAA Federal)
Date: Thu, 22 Oct 2020 14:15:49 -0700
Subject: [R-pkg-devel] URL Note
Message-ID: <F7011A67-2174-461F-BBF2-7EC024ECD1DC@noaa.gov>

Hi All:

I am working on a small bug fix in a package,  and on winbuilder_devel  (not on release) I get the following Note:

> Found the following (possibly) invalid URLs:
>   URL: https://erddap.marine.ie/erddap (moved to https://erddap.marine.ie/erddap/)
>     From: inst/doc/UsingrerddapXtracto.html
>     Status: 200
>     Message: OK
> 
The problem is https://erddap.marine.ie/erddap  is a valid URL, and is the proper one.  I know I can put something in my cran_comments,  but I would rather submit with no Notes.  Any suggestions for a fix that I can take?

Thanks,

-Roy



**********************
"The contents of this message do not reflect any position of the U.S. Government or NOAA."
**********************
Roy Mendelssohn
Supervisory Operations Research Analyst
NOAA/NMFS
Environmental Research Division
Southwest Fisheries Science Center
***Note new street address***
110 McAllister Way
Santa Cruz, CA 95060
Phone: (831)-420-3666
Fax: (831) 420-3980
e-mail: Roy.Mendelssohn at noaa.gov www: https://www.pfeg.noaa.gov/

"Old age and treachery will overcome youth and skill."
"From those who have been given much, much will be expected" 
"the arc of the moral universe is long, but it bends toward justice" -MLK Jr.


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Thu Oct 22 23:18:42 2020
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Thu, 22 Oct 2020 23:18:42 +0200
Subject: [R-pkg-devel] URL Note
In-Reply-To: <F7011A67-2174-461F-BBF2-7EC024ECD1DC@noaa.gov>
References: <F7011A67-2174-461F-BBF2-7EC024ECD1DC@noaa.gov>
Message-ID: <f1bf2c50-bf28-d091-a945-d1491893bf66@statistik.tu-dortmund.de>



On 22.10.2020 23:15, Roy Mendelssohn - NOAA Federal via R-package-devel 
wrote:
> Hi All:
> 
> I am working on a small bug fix in a package,  and on winbuilder_devel  (not on release) I get the following Note:
> 
>> Found the following (possibly) invalid URLs:
>>    URL: https://erddap.marine.ie/erddap (moved to https://erddap.marine.ie/erddap/)
>>      From: inst/doc/UsingrerddapXtracto.html
>>      Status: 200
>>      Message: OK
>>
> The problem is https://erddap.marine.ie/erddap  is a valid URL, and is the proper one.  I know I can put something in my cran_comments,  but I would rather submit with no Notes.  Any suggestions for a fix that I can take?

The server reported a permament move to the other URL given above, hence 
you simply need a trailinmg slash.

Best,
Uwe Ligges
> 
> Thanks,
> 
> -Roy
> 
> 
> 
> **********************
> "The contents of this message do not reflect any position of the U.S. Government or NOAA."
> **********************
> Roy Mendelssohn
> Supervisory Operations Research Analyst
> NOAA/NMFS
> Environmental Research Division
> Southwest Fisheries Science Center
> ***Note new street address***
> 110 McAllister Way
> Santa Cruz, CA 95060
> Phone: (831)-420-3666
> Fax: (831) 420-3980
> e-mail: Roy.Mendelssohn at noaa.gov www: https://www.pfeg.noaa.gov/
> 
> "Old age and treachery will overcome youth and skill."
> "From those who have been given much, much will be expected"
> "the arc of the moral universe is long, but it bends toward justice" -MLK Jr.
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From roy@mende|@@ohn @end|ng |rom no@@@gov  Thu Oct 22 23:22:33 2020
From: roy@mende|@@ohn @end|ng |rom no@@@gov (Roy Mendelssohn - NOAA Federal)
Date: Thu, 22 Oct 2020 14:22:33 -0700
Subject: [R-pkg-devel] URL Note
In-Reply-To: <f1bf2c50-bf28-d091-a945-d1491893bf66@statistik.tu-dortmund.de>
References: <F7011A67-2174-461F-BBF2-7EC024ECD1DC@noaa.gov>
 <f1bf2c50-bf28-d091-a945-d1491893bf66@statistik.tu-dortmund.de>
Message-ID: <4A70836F-7C47-4CAC-9F70-6ECC977D7AF7@noaa.gov>

Thanks.  I had checked for that but at first didn't find the one instance where this occurred.  Got it.

-Roy

> On Oct 22, 2020, at 2:18 PM, Uwe Ligges <ligges at statistik.tu-dortmund.de> wrote:
> 
> 
> 
> On 22.10.2020 23:15, Roy Mendelssohn - NOAA Federal via R-package-devel wrote:
>> Hi All:
>> I am working on a small bug fix in a package,  and on winbuilder_devel  (not on release) I get the following Note:
>>> Found the following (possibly) invalid URLs:
>>>   URL: https://erddap.marine.ie/erddap (moved to https://erddap.marine.ie/erddap/)
>>>     From: inst/doc/UsingrerddapXtracto.html
>>>     Status: 200
>>>     Message: OK
>>> 
>> The problem is https://erddap.marine.ie/erddap  is a valid URL, and is the proper one.  I know I can put something in my cran_comments,  but I would rather submit with no Notes.  Any suggestions for a fix that I can take?
> 
> The server reported a permament move to the other URL given above, hence you simply need a trailinmg slash.
> 
> Best,
> Uwe Ligges
>> Thanks,
>> -Roy
>> **********************
>> "The contents of this message do not reflect any position of the U.S. Government or NOAA."
>> **********************
>> Roy Mendelssohn
>> Supervisory Operations Research Analyst
>> NOAA/NMFS
>> Environmental Research Division
>> Southwest Fisheries Science Center
>> ***Note new street address***
>> 110 McAllister Way
>> Santa Cruz, CA 95060
>> Phone: (831)-420-3666
>> Fax: (831) 420-3980
>> e-mail: Roy.Mendelssohn at noaa.gov www: https://www.pfeg.noaa.gov/
>> "Old age and treachery will overcome youth and skill."
>> "From those who have been given much, much will be expected"
>> "the arc of the moral universe is long, but it bends toward justice" -MLK Jr.
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel

**********************
"The contents of this message do not reflect any position of the U.S. Government or NOAA."
**********************
Roy Mendelssohn
Supervisory Operations Research Analyst
NOAA/NMFS
Environmental Research Division
Southwest Fisheries Science Center
***Note new street address***
110 McAllister Way
Santa Cruz, CA 95060
Phone: (831)-420-3666
Fax: (831) 420-3980
e-mail: Roy.Mendelssohn at noaa.gov www: https://www.pfeg.noaa.gov/

"Old age and treachery will overcome youth and skill."
"From those who have been given much, much will be expected" 
"the arc of the moral universe is long, but it bends toward justice" -MLK Jr.


From m@rc_@chw@rtz @end|ng |rom me@com  Fri Oct 23 02:33:10 2020
From: m@rc_@chw@rtz @end|ng |rom me@com (Marc Schwartz)
Date: Thu, 22 Oct 2020 20:33:10 -0400
Subject: [R-pkg-devel] Licenses
In-Reply-To: <d6988579-8201-712b-9f48-f174c2ab61a0@gmail.com>
References: <0b394dc3-b931-d689-c64b-66ab5fbc9556@gmail.com>
 <1CBF54FF-314B-4F73-8D91-9F3FEBE7623E@me.com>
 <C795AF6F-DD80-497F-9602-F1C829AD70E0@me.com>
 <0dbd354c-3c8d-6dc4-2131-0e2ac9142d86@gmail.com>
 <7F4206F6-D88D-42DB-8053-2F25B2A99539@me.com>
 <d6988579-8201-712b-9f48-f174c2ab61a0@gmail.com>
Message-ID: <B637A606-7B38-42A7-8227-AA73DF7FD0A9@me.com>

On Oct 22, 2020, at 3:47 PM, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> 
> On 22/10/2020 12:56 p.m., Marc Schwartz wrote:
>>> On Oct 22, 2020, at 12:12 PM, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>>> 
>>> On 22/10/2020 11:55 a.m., Marc Schwartz wrote:
>>>>> On Oct 22, 2020, at 11:19 AM, Marc Schwartz <marc_schwartz at me.com> wrote:
>>>>> 
>>>>> On Oct 22, 2020, at 10:21 AM, Kevin R. Coombes <kevin.r.coombes at gmail.com> wrote:
>>>>>> 
>>>>>> Hi,
>>>>>> 
>>>>>> I am developing a package and getting a NOTE from R CMD check about licenses and ultimate dependencies on a restrictive license, which I can't figure out how to fix.
>>>>>> 
>>>>>> My package imports flowCore, which has an Artistic-2.0 license.
>>>>>> But flowCore imports cytolib, which has a license from the Fred Hutchinson Cancer Center that prohibits commercial use.
>>>>>> 
>>>>>> I tried using the same license as flowCore, but still get the NOTE. Does anyone know which licenses can be used to be compatible with the Fred Hutch license? Or can I just do what flowCore apparently does and ignore the NOTE?
>>>>>> 
>>>>>> Thanks,
>>>>>>  Kevin
>>>>> 
>>>>> 
>>>>> Hi Kevin,
>>>>> 
>>>>> I have not looked at BioC's licensing requirements, but presumably, they are ok with the non-commercial use restrictions placed on users of cytolib, thus also on flowCore.
>>>>> 
>>>>> If you want your package to be on CRAN, those restrictions on users are not allowed by CRAN's policy:
>>>>> 
>>>>> https://cran.r-project.org/web/packages/policies.html
>>>>> 
>>>>> "Such packages are not permitted to require (e.g., by specifying in ?Depends?, ?Imports? or ?LinkingTo? fields) directly or indirectly a package or external software which restricts users or usage."
>>>>> 
>>>>> 
>>>>> Thus, you would seem to need to make a decision on hosting your package on CRAN, but without the need to import from flowCore/cytolib, or consider hosting your package on BioC, with the attendant restrictions on commercial use.
>>>>> 
>>>>> Regards,
>>>>> 
>>>>> Marc Schwartz
>>>> Well....
>>>> Now that I look at:
>>>>   https://svn.r-project.org/R/trunk/share/licenses/license.db
>>>> there are a few licenses listed there that do place restrictions on commercial use.
>>>> These include some Creative Commons Non-Commercial use variants and the ACM license.
>>>> Is the license DB file out of date, or is there an apparent conflict with the CRAN policy that I quoted above?
>>>> Anyone with an ability to comment?
>>> 
>>> Presumably CRAN would not accept the non-FOSS licenses that are listed in license.db, but R could still do computations on them, as described in ?library in the "Licenses" section.
>>> 
>>> Duncan Murdoch
>> Duncan,
>> That is a reasonable distinction.
>> However, upon searching CRAN with available.packages(), I came up with a list of packages that do include Non-Commercial restrictions, including CC BY-NC* and ACM licenses. There may be others that I missed visually scanning the output.
>> There also appear to be some conflicts/inconsistencies with the 'License_restricts_use' field entry and the 'License' field in some cases, where, for example, most that have "CC BY-NC-SA 4.0" as the license, have "NA" as the entry for restricted use, rather than "yes".
>> I am not going to list them here, as I don't want to pick on any particular package, but this does seem to point to an inconsistency between packages that are hosted on CRAN and the articulated policy...
> 
> Perhaps those packages were accepted before this became a policy, and now that others depend on them, it would be too disruptive to remove them, and users are warned via the 'License_restricts_use' field entry. Why does it sometimes contain errors?  That I don't know, other than blaming it on Murphy's Law.
> 
> Duncan Murdoch


Hi Duncan,

That seems a reasonable scenario.

Right now, the interpretation, without further clarification from CRAN, would be, it is ok for a package to be on CRAN with license based usage restrictions included (e.g. for non-commercial use), but a package on CRAN, irrespective of it's own license, cannot "interact" with other packages that do have restrictions...which seems inconsistent.

Back to the original question by Kevin, this would now seem to be even more confusing...

Kevin, you may need to send an e-mail to CRAN-submissions at R-project.org <mailto:CRAN-submissions at R-project.org> on the issue with your package, to get clarification on the current policy and recommendations for resolution. You might even want to include this thread (but don't cc: this list), so that they are aware, if not already, of the issues raised here.

If you do, please post back with an update.

Regards,

Marc


	[[alternative HTML version deleted]]


From @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org  Fri Oct 23 07:47:53 2020
From: @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org (Spencer Graves)
Date: Fri, 23 Oct 2020 00:47:53 -0500
Subject: [R-pkg-devel] RMarkdown vignettes with Wikiversity?
Message-ID: <d25f0b94-e1ec-7d84-1a20-f4d35ef36cbd@effectivedefense.org>

Hello, All:


	  Two questions:


		    1.  Might anyone have any thoughts on posting an RMarkdown 
vignette like an appendix to an article on Wikiversity?


		    2.  In particular, might it be feasible to post a link to an 
online RStudio instance that could be provided with the RMarkdown source 
for a vignette that's posted to Wikiversity?


	  I've written Wikiversity articles for which the detailed statistical 
analysis is currently in vignettes in the Ecfun package.  However, that 
seems somewhat inconsistent with my understanding of the purpose of 
vignettes, and posting such directly like an appendix with the companion 
Wikiversity article seems to make more sense, anyway.


	  For comments about this by a Wikiversity "Bureaucrat", who is also a 
Professor of Computer Information Systems at Harper College in Palatine, 
Illinois, see:


https://en.wikiversity.org/wiki/User_talk:Dave_Braunschweig#RMarkdown_vignettes_with_Wikiversity?


	  Thanks,
	  Spencer Graves


From m@rc_@chw@rtz @end|ng |rom me@com  Fri Oct 23 14:05:58 2020
From: m@rc_@chw@rtz @end|ng |rom me@com (Marc Schwartz)
Date: Fri, 23 Oct 2020 08:05:58 -0400
Subject: [R-pkg-devel] Delays in CRAN Windows Binaries?
In-Reply-To: <5BADE9C6-684C-4A18-A1A3-6B29F891DD08@me.com>
References: <5BADE9C6-684C-4A18-A1A3-6B29F891DD08@me.com>
Message-ID: <F13CC244-AC7E-4686-9A4A-74DEA5EE5D4A@me.com>

Hi All,

Just a quick note to indicate that one of the two Windows binaries for the package appeared overnight (EDT). Not sure if this experience is representative for others, or just a temporary bump in the road.

Regards,

Marc


> On Oct 21, 2020, at 2:08 PM, Marc Schwartz <marc_schwartz at me.com> wrote:
> 
> Hi All,
> 
> Just thought that I would check to see if there are any known issues/delays for CRAN in creating R release and devel binaries for Windows for updated packages.
> 
> It has been four days since I submitted an update and the other binaries were created within a couple of days. The two Windows binaries are the only outstanding updates pending.
> 
> Thanks!
> 
> Marc Schwartz


From rub@k @end|ng |rom m@th@@@u@dk  Fri Oct 23 14:25:30 2020
From: rub@k @end|ng |rom m@th@@@u@dk (Ege Rubak)
Date: Fri, 23 Oct 2020 12:25:30 +0000
Subject: [R-pkg-devel] Licenses
In-Reply-To: <B637A606-7B38-42A7-8227-AA73DF7FD0A9@me.com>
References: <0b394dc3-b931-d689-c64b-66ab5fbc9556@gmail.com>
 <1CBF54FF-314B-4F73-8D91-9F3FEBE7623E@me.com>
 <C795AF6F-DD80-497F-9602-F1C829AD70E0@me.com>
 <0dbd354c-3c8d-6dc4-2131-0e2ac9142d86@gmail.com>
 <7F4206F6-D88D-42DB-8053-2F25B2A99539@me.com>
 <d6988579-8201-712b-9f48-f174c2ab61a0@gmail.com>
 <B637A606-7B38-42A7-8227-AA73DF7FD0A9@me.com>
Message-ID: <22ec498a4d401eee4791838662800d2a6c8a87d8.camel@math.aau.dk>

Hi all,

My two cents are below Marc's summary here:

On Thu, 2020-10-22 at 20:33 -0400, Marc Schwartz wrote:
> Right now, the interpretation, without further clarification from
> CRAN, would be, it is ok for a package to be on CRAN with license
> based usage restrictions included (e.g. for non-commercial use), but
> a package on CRAN, irrespective of it's own license, cannot
> "interact" with other packages that do have restrictions...which
> seems inconsistent.

It depends a bit what is meant by "interact". Years ago `spatstat` used
`gpclib` with a non-commercial license to do polygonal operations. The
solution was to list `gpclib` in `Suggests` and require the user to
make an active choice to use this piece of software with a warning
about non-commercial use. I find this to be an OK solution in lack of
completely free alternatives. These days `gpclib` is still on CRAN and
only has reverse `Suggests` and `Enhances`, so that seems fairly
consistent.

In the long run this was unsatisfatory and our specific problem was
solved by Adrian Baddeley by making the `polyclip` package.

Kind regards,
Ege


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Fri Oct 23 14:47:58 2020
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Fri, 23 Oct 2020 14:47:58 +0200
Subject: [R-pkg-devel] Delays in CRAN Windows Binaries?
In-Reply-To: <F13CC244-AC7E-4686-9A4A-74DEA5EE5D4A@me.com>
References: <5BADE9C6-684C-4A18-A1A3-6B29F891DD08@me.com>
 <F13CC244-AC7E-4686-9A4A-74DEA5EE5D4A@me.com>
Message-ID: <c2e82934-2ab3-a2a7-fb49-7717af41ee37@statistik.tu-dortmund.de>

Windows binaries may be delayed these days, but they are generated in a 
bunch R-flavour-wise. They typical delay after a source package 
publication should be less then 72 hours ideally.

Best,
Uwe

On 23.10.2020 14:05, Marc Schwartz wrote:
> Hi All,
> 
> Just a quick note to indicate that one of the two Windows binaries for the package appeared overnight (EDT). Not sure if this experience is representative for others, or just a temporary bump in the road.
> 
> Regards,
> 
> Marc
> 
> 
>> On Oct 21, 2020, at 2:08 PM, Marc Schwartz <marc_schwartz at me.com> wrote:
>>
>> Hi All,
>>
>> Just thought that I would check to see if there are any known issues/delays for CRAN in creating R release and devel binaries for Windows for updated packages.
>>
>> It has been four days since I submitted an update and the other binaries were created within a couple of days. The two Windows binaries are the only outstanding updates pending.
>>
>> Thanks!
>>
>> Marc Schwartz
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From m@rc_@chw@rtz @end|ng |rom me@com  Fri Oct 23 14:52:07 2020
From: m@rc_@chw@rtz @end|ng |rom me@com (Marc Schwartz)
Date: Fri, 23 Oct 2020 08:52:07 -0400
Subject: [R-pkg-devel] Delays in CRAN Windows Binaries?
In-Reply-To: <c2e82934-2ab3-a2a7-fb49-7717af41ee37@statistik.tu-dortmund.de>
References: <5BADE9C6-684C-4A18-A1A3-6B29F891DD08@me.com>
 <F13CC244-AC7E-4686-9A4A-74DEA5EE5D4A@me.com>
 <c2e82934-2ab3-a2a7-fb49-7717af41ee37@statistik.tu-dortmund.de>
Message-ID: <90D1D96D-E406-4B4D-A9F1-0D1ECD507623@me.com>

Hi Uwe,

Thanks for your reply.

I appreciate all of the efforts by the CRAN team here.

Regards,

Marc


> On Oct 23, 2020, at 8:47 AM, Uwe Ligges <ligges at statistik.tu-dortmund.de> wrote:
> 
> Windows binaries may be delayed these days, but they are generated in a bunch R-flavour-wise. They typical delay after a source package publication should be less then 72 hours ideally.
> 
> Best,
> Uwe
> 
> On 23.10.2020 14:05, Marc Schwartz wrote:
>> Hi All,
>> Just a quick note to indicate that one of the two Windows binaries for the package appeared overnight (EDT). Not sure if this experience is representative for others, or just a temporary bump in the road.
>> Regards,
>> Marc
>>> On Oct 21, 2020, at 2:08 PM, Marc Schwartz <marc_schwartz at me.com> wrote:
>>> 
>>> Hi All,
>>> 
>>> Just thought that I would check to see if there are any known issues/delays for CRAN in creating R release and devel binaries for Windows for updated packages.
>>> 
>>> It has been four days since I submitted an update and the other binaries were created within a couple of days. The two Windows binaries are the only outstanding updates pending.
>>> 
>>> Thanks!
>>> 
>>> Marc Schwartz
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Fri Oct 23 14:57:56 2020
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Fri, 23 Oct 2020 14:57:56 +0200
Subject: [R-pkg-devel] Licenses
In-Reply-To: <22ec498a4d401eee4791838662800d2a6c8a87d8.camel@math.aau.dk>
References: <0b394dc3-b931-d689-c64b-66ab5fbc9556@gmail.com>
 <1CBF54FF-314B-4F73-8D91-9F3FEBE7623E@me.com>
 <C795AF6F-DD80-497F-9602-F1C829AD70E0@me.com>
 <0dbd354c-3c8d-6dc4-2131-0e2ac9142d86@gmail.com>
 <7F4206F6-D88D-42DB-8053-2F25B2A99539@me.com>
 <d6988579-8201-712b-9f48-f174c2ab61a0@gmail.com>
 <B637A606-7B38-42A7-8227-AA73DF7FD0A9@me.com>
 <22ec498a4d401eee4791838662800d2a6c8a87d8.camel@math.aau.dk>
Message-ID: <cd71cda3-9c8f-5662-701d-d3f26bbed31c@statistik.tu-dortmund.de>

I do not want to make many general comments about licenses in public, as 
this is a very difficult matter and I am not a lawyer.

But let me cite from the CRAN policies:

"Packages with licenses not listed at 
https://svn.r-project.org/R/trunk/share/licenses/license.db will 
generally not be accepted. "

Further, I see in the discussions that you talked about depending on a 
software with a non-FOSS license. The CRAN team's point of view, for 
short, is:
A package with a FOSS license cannot strictly depend on a 
package/software that is non-FOSS. Obviously, the FOSS package cannot be 
used under its own license conditions in that case.

Best,
Uwe Ligges




On 23.10.2020 14:25, Ege Rubak wrote:
> Hi all,
> 
> My two cents are below Marc's summary here:
> 
> On Thu, 2020-10-22 at 20:33 -0400, Marc Schwartz wrote:
>> Right now, the interpretation, without further clarification from
>> CRAN, would be, it is ok for a package to be on CRAN with license
>> based usage restrictions included (e.g. for non-commercial use), but
>> a package on CRAN, irrespective of it's own license, cannot
>> "interact" with other packages that do have restrictions...which
>> seems inconsistent.
> 
> It depends a bit what is meant by "interact". Years ago `spatstat` used
> `gpclib` with a non-commercial license to do polygonal operations. The
> solution was to list `gpclib` in `Suggests` and require the user to
> make an active choice to use this piece of software with a warning
> about non-commercial use. I find this to be an OK solution in lack of
> completely free alternatives. These days `gpclib` is still on CRAN and
> only has reverse `Suggests` and `Enhances`, so that seems fairly
> consistent.
> 
> In the long run this was unsatisfatory and our specific problem was
> solved by Adrian Baddeley by making the `polyclip` package.
> 
> Kind regards,
> Ege
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From m@rc_@chw@rtz @end|ng |rom me@com  Fri Oct 23 15:02:48 2020
From: m@rc_@chw@rtz @end|ng |rom me@com (Marc Schwartz)
Date: Fri, 23 Oct 2020 09:02:48 -0400
Subject: [R-pkg-devel] Licenses
In-Reply-To: <22ec498a4d401eee4791838662800d2a6c8a87d8.camel@math.aau.dk>
References: <0b394dc3-b931-d689-c64b-66ab5fbc9556@gmail.com>
 <1CBF54FF-314B-4F73-8D91-9F3FEBE7623E@me.com>
 <C795AF6F-DD80-497F-9602-F1C829AD70E0@me.com>
 <0dbd354c-3c8d-6dc4-2131-0e2ac9142d86@gmail.com>
 <7F4206F6-D88D-42DB-8053-2F25B2A99539@me.com>
 <d6988579-8201-712b-9f48-f174c2ab61a0@gmail.com>
 <B637A606-7B38-42A7-8227-AA73DF7FD0A9@me.com>
 <22ec498a4d401eee4791838662800d2a6c8a87d8.camel@math.aau.dk>
Message-ID: <C8DECB29-EB68-46D8-B9B7-59D349433482@me.com>


> On Oct 23, 2020, at 8:25 AM, Ege Rubak <rubak at math.aau.dk> wrote:
> 
> Hi all,
> 
> My two cents are below Marc's summary here:
> 
> On Thu, 2020-10-22 at 20:33 -0400, Marc Schwartz wrote:
>> Right now, the interpretation, without further clarification from
>> CRAN, would be, it is ok for a package to be on CRAN with license
>> based usage restrictions included (e.g. for non-commercial use), but
>> a package on CRAN, irrespective of it's own license, cannot
>> "interact" with other packages that do have restrictions...which
>> seems inconsistent.
> 
> It depends a bit what is meant by "interact". Years ago `spatstat` used
> `gpclib` with a non-commercial license to do polygonal operations. The
> solution was to list `gpclib` in `Suggests` and require the user to
> make an active choice to use this piece of software with a warning
> about non-commercial use. I find this to be an OK solution in lack of
> completely free alternatives. These days `gpclib` is still on CRAN and
> only has reverse `Suggests` and `Enhances`, so that seems fairly
> consistent.
> 
> In the long run this was unsatisfatory and our specific problem was
> solved by Adrian Baddeley by making the `polyclip` package.
> 
> Kind regards,
> Ege


Hi Ege,

The use of "Suggests" may be the relevant difference here. My use of the word "interact" was focused on the text in the CRAN policy that I quoted in my initial reply:

"Such packages are not permitted to require (e.g., by specifying in ?Depends?, ?Imports? or ?LinkingTo? fields) directly or indirectly a package or external software which restricts users or usage."

As Duncan noted in his reply, there may be time based differences that are relevant here, if the CRAN policy had changed at some point, and there was, in effect, a grand-fathering of older packages that perhaps would not be accepted today under the current policy.

Regards,

Marc


From m@rc_@chw@rtz @end|ng |rom me@com  Fri Oct 23 15:31:34 2020
From: m@rc_@chw@rtz @end|ng |rom me@com (Marc Schwartz)
Date: Fri, 23 Oct 2020 09:31:34 -0400
Subject: [R-pkg-devel] Licenses
In-Reply-To: <cd71cda3-9c8f-5662-701d-d3f26bbed31c@statistik.tu-dortmund.de>
References: <0b394dc3-b931-d689-c64b-66ab5fbc9556@gmail.com>
 <1CBF54FF-314B-4F73-8D91-9F3FEBE7623E@me.com>
 <C795AF6F-DD80-497F-9602-F1C829AD70E0@me.com>
 <0dbd354c-3c8d-6dc4-2131-0e2ac9142d86@gmail.com>
 <7F4206F6-D88D-42DB-8053-2F25B2A99539@me.com>
 <d6988579-8201-712b-9f48-f174c2ab61a0@gmail.com>
 <B637A606-7B38-42A7-8227-AA73DF7FD0A9@me.com>
 <22ec498a4d401eee4791838662800d2a6c8a87d8.camel@math.aau.dk>
 <cd71cda3-9c8f-5662-701d-d3f26bbed31c@statistik.tu-dortmund.de>
Message-ID: <47838288-0F59-4169-970C-25EE506E85D4@me.com>

Hi Uwe,

Thanks for taking the time to reply.

Would you be willing to clarify/confirm the current situation regarding the hosting of non-FOSS packages on CRAN, such as those with ACM or Creative Commons license variants that have non-commercial use restrictions? 

These are presently included in the license.db file.

Are these on CRAN now because they are acceptable under the current policy, or are they on CRAN now, as Duncan posited, because they were acceptable under older policies and it would be disruptive to remove them now?

Thanks,

Marc


> On Oct 23, 2020, at 8:57 AM, Uwe Ligges <ligges at statistik.tu-dortmund.de> wrote:
> 
> I do not want to make many general comments about licenses in public, as this is a very difficult matter and I am not a lawyer.
> 
> But let me cite from the CRAN policies:
> 
> "Packages with licenses not listed at https://svn.r-project.org/R/trunk/share/licenses/license.db will generally not be accepted. "
> 
> Further, I see in the discussions that you talked about depending on a software with a non-FOSS license. The CRAN team's point of view, for short, is:
> A package with a FOSS license cannot strictly depend on a package/software that is non-FOSS. Obviously, the FOSS package cannot be used under its own license conditions in that case.
> 
> Best,
> Uwe Ligges
> 
> 
> 
> 
> On 23.10.2020 14:25, Ege Rubak wrote:
>> Hi all,
>> My two cents are below Marc's summary here:
>> On Thu, 2020-10-22 at 20:33 -0400, Marc Schwartz wrote:
>>> Right now, the interpretation, without further clarification from
>>> CRAN, would be, it is ok for a package to be on CRAN with license
>>> based usage restrictions included (e.g. for non-commercial use), but
>>> a package on CRAN, irrespective of it's own license, cannot
>>> "interact" with other packages that do have restrictions...which
>>> seems inconsistent.
>> It depends a bit what is meant by "interact". Years ago `spatstat` used
>> `gpclib` with a non-commercial license to do polygonal operations. The
>> solution was to list `gpclib` in `Suggests` and require the user to
>> make an active choice to use this piece of software with a warning
>> about non-commercial use. I find this to be an OK solution in lack of
>> completely free alternatives. These days `gpclib` is still on CRAN and
>> only has reverse `Suggests` and `Enhances`, so that seems fairly
>> consistent.
>> In the long run this was unsatisfatory and our specific problem was
>> solved by Adrian Baddeley by making the `polyclip` package.
>> Kind regards,
>> Ege
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> 
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From roy@mende|@@ohn @end|ng |rom no@@@gov  Fri Oct 23 17:18:58 2020
From: roy@mende|@@ohn @end|ng |rom no@@@gov (Roy Mendelssohn - NOAA Federal)
Date: Fri, 23 Oct 2020 08:18:58 -0700
Subject: [R-pkg-devel] Pre-test failure
Message-ID: <F45AF19F-9A85-4412-9313-440FCA0811E8@noaa.gov>

I test my packages very carefully before submission.  Earlier today I submitted a package that passed this morning on both winbuilder_release and winbuilder_devel.  The pre-test submission failed on rebuilding the vignette.  I just tried again on winbuilder_release and winbuilder_devel,  no problems.  There are no problems either on my Mac or a Fedora image. Moreover I tested the specific lines that were flagged,  and they work fine

So my questions are:

1.  Should I just resubmit assuming it was some kind of quirk?

2. Do I need to bump up the version to resubmit?

Thanks,

-Roy


**********************
"The contents of this message do not reflect any position of the U.S. Government or NOAA."
**********************
Roy Mendelssohn
Supervisory Operations Research Analyst
NOAA/NMFS
Environmental Research Division
Southwest Fisheries Science Center
***Note new street address***
110 McAllister Way
Santa Cruz, CA 95060
Phone: (831)-420-3666
Fax: (831) 420-3980
e-mail: Roy.Mendelssohn at noaa.gov www: https://www.pfeg.noaa.gov/

"Old age and treachery will overcome youth and skill."
"From those who have been given much, much will be expected" 
"the arc of the moral universe is long, but it bends toward justice" -MLK Jr.


From bbo|ker @end|ng |rom gm@||@com  Fri Oct 23 17:22:55 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Fri, 23 Oct 2020 11:22:55 -0400
Subject: [R-pkg-devel] Pre-test failure
In-Reply-To: <F45AF19F-9A85-4412-9313-440FCA0811E8@noaa.gov>
References: <F45AF19F-9A85-4412-9313-440FCA0811E8@noaa.gov>
Message-ID: <f4192499-63ae-e0ee-36a1-74f419b13b42@gmail.com>

    Can you share the links to the CRAN pre-test logs? Someone here 
might be able to guess what went wrong ...

    (FWIW I always *think* I'm testing very carefully, and I almost 
always get something wrong ...)

On 10/23/20 11:18 AM, Roy Mendelssohn - NOAA Federal via R-package-devel 
wrote:
> I test my packages very carefully before submission.  Earlier today I submitted a package that passed this morning on both winbuilder_release and winbuilder_devel.  The pre-test submission failed on rebuilding the vignette.  I just tried again on winbuilder_release and winbuilder_devel,  no problems.  There are no problems either on my Mac or a Fedora image. Moreover I tested the specific lines that were flagged,  and they work fine
> 
> So my questions are:
> 
> 1.  Should I just resubmit assuming it was some kind of quirk?
> 
> 2. Do I need to bump up the version to resubmit?
> 
> Thanks,
> 
> -Roy
> 
> 
> **********************
> "The contents of this message do not reflect any position of the U.S. Government or NOAA."
> **********************
> Roy Mendelssohn
> Supervisory Operations Research Analyst
> NOAA/NMFS
> Environmental Research Division
> Southwest Fisheries Science Center
> ***Note new street address***
> 110 McAllister Way
> Santa Cruz, CA 95060
> Phone: (831)-420-3666
> Fax: (831) 420-3980
> e-mail: Roy.Mendelssohn at noaa.gov www: https://www.pfeg.noaa.gov/
> 
> "Old age and treachery will overcome youth and skill."
> "From those who have been given much, much will be expected"
> "the arc of the moral universe is long, but it bends toward justice" -MLK Jr.
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From hongoo| @end|ng |rom m|cro@o|t@com  Fri Oct 23 17:26:52 2020
From: hongoo| @end|ng |rom m|cro@o|t@com (Hong Ooi)
Date: Fri, 23 Oct 2020 15:26:52 +0000
Subject: [R-pkg-devel] [EXTERNAL] Re:  Pre-test failure
In-Reply-To: <f4192499-63ae-e0ee-36a1-74f419b13b42@gmail.com>
References: <F45AF19F-9A85-4412-9313-440FCA0811E8@noaa.gov>
 <f4192499-63ae-e0ee-36a1-74f419b13b42@gmail.com>
Message-ID: <SG2P153MB0190EDDE81B433A878840728A61A0@SG2P153MB0190.APCP153.PROD.OUTLOOK.COM>

My personal opinion is that as long as a package doesn't actually make it on to CRAN, you don't need to bump the version. It's worked so far....

-----Original Message-----
From: R-package-devel <r-package-devel-bounces at r-project.org> On Behalf Of Ben Bolker
Sent: Saturday, 24 October 2020 2:23 AM
To: r-package-devel at r-project.org
Subject: [EXTERNAL] Re: [R-pkg-devel] Pre-test failure

    Can you share the links to the CRAN pre-test logs? Someone here 
might be able to guess what went wrong ...

    (FWIW I always *think* I'm testing very carefully, and I almost 
always get something wrong ...)

On 10/23/20 11:18 AM, Roy Mendelssohn - NOAA Federal via R-package-devel 
wrote:
> I test my packages very carefully before submission.  Earlier today I submitted a package that passed this morning on both winbuilder_release and winbuilder_devel.  The pre-test submission failed on rebuilding the vignette.  I just tried again on winbuilder_release and winbuilder_devel,  no problems.  There are no problems either on my Mac or a Fedora image. Moreover I tested the specific lines that were flagged,  and they work fine
> 
> So my questions are:
> 
> 1.  Should I just resubmit assuming it was some kind of quirk?
> 
> 2. Do I need to bump up the version to resubmit?
> 
> Thanks,
> 
> -Roy
> 
> 
> **********************
> "The contents of this message do not reflect any position of the U.S. Government or NOAA."
> **********************
> Roy Mendelssohn
> Supervisory Operations Research Analyst
> NOAA/NMFS
> Environmental Research Division
> Southwest Fisheries Science Center
> ***Note new street address***
> 110 McAllister Way
> Santa Cruz, CA 95060
> Phone: (831)-420-3666
> Fax: (831) 420-3980
> e-mail: Roy.Mendelssohn at noaa.gov www: https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwww.pfeg.noaa.gov%2F&amp;data=04%7C01%7Chongooi%40microsoft.com%7C05d6b3fb72074139cfd508d87767931b%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C637390634032310385%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&amp;sdata=ZhyBMECoZohEfOqkRqz%2BwV6PB560jUKurP3eXyyfugg%3D&amp;reserved=0
> 
> "Old age and treachery will overcome youth and skill."
> "From those who have been given much, much will be expected"
> "the arc of the moral universe is long, but it bends toward justice" -MLK Jr.
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-package-devel&amp;data=04%7C01%7Chongooi%40microsoft.com%7C05d6b3fb72074139cfd508d87767931b%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C637390634032310385%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&amp;sdata=CXtC%2FqbZ0B3znnxcTHQb2voADGKPFIhl1jfTrzGl%2Ft0%3D&amp;reserved=0
>

______________________________________________
R-package-devel at r-project.org mailing list
https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-package-devel&amp;data=04%7C01%7Chongooi%40microsoft.com%7C05d6b3fb72074139cfd508d87767931b%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C637390634032310385%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&amp;sdata=CXtC%2FqbZ0B3znnxcTHQb2voADGKPFIhl1jfTrzGl%2Ft0%3D&amp;reserved=0


From roy@mende|@@ohn @end|ng |rom no@@@gov  Fri Oct 23 17:27:04 2020
From: roy@mende|@@ohn @end|ng |rom no@@@gov (Roy Mendelssohn - NOAA Federal)
Date: Fri, 23 Oct 2020 08:27:04 -0700
Subject: [R-pkg-devel] Pre-test failure
In-Reply-To: <f4192499-63ae-e0ee-36a1-74f419b13b42@gmail.com>
References: <F45AF19F-9A85-4412-9313-440FCA0811E8@noaa.gov>
 <f4192499-63ae-e0ee-36a1-74f419b13b42@gmail.com>
Message-ID: <2BD7805B-298A-4E73-9F06-C8BBF8D719D0@noaa.gov>



https://win-builder.r-project.org/incoming_pretest/plotdap_0.0.8_20201023_155845/Windows/00check.log

my problem is I don't have Windows myself.  So I assume if I can pass both winbuilders I should be good.  Here is the link to winbuilder_release I just ran:

https://win-builder.r-project.org/exQtKk9TKIeP

As you can see,  that is ok and rebuilt the vignette just fine.  

Thanks,

-Roy


> On Oct 23, 2020, at 8:22 AM, Ben Bolker <bbolker at gmail.com> wrote:
> 
>   Can you share the links to the CRAN pre-test logs? Someone here might be able to guess what went wrong ...
> 
>   (FWIW I always *think* I'm testing very carefully, and I almost always get something wrong ...)
> 
> On 10/23/20 11:18 AM, Roy Mendelssohn - NOAA Federal via R-package-devel wrote:
>> I test my packages very carefully before submission.  Earlier today I submitted a package that passed this morning on both winbuilder_release and winbuilder_devel.  The pre-test submission failed on rebuilding the vignette.  I just tried again on winbuilder_release and winbuilder_devel,  no problems.  There are no problems either on my Mac or a Fedora image. Moreover I tested the specific lines that were flagged,  and they work fine
>> So my questions are:
>> 1.  Should I just resubmit assuming it was some kind of quirk?
>> 2. Do I need to bump up the version to resubmit?
>> Thanks,
>> -Roy
>> **********************
>> "The contents of this message do not reflect any position of the U.S. Government or NOAA."
>> **********************
>> Roy Mendelssohn
>> Supervisory Operations Research Analyst
>> NOAA/NMFS
>> Environmental Research Division
>> Southwest Fisheries Science Center
>> ***Note new street address***
>> 110 McAllister Way
>> Santa Cruz, CA 95060
>> Phone: (831)-420-3666
>> Fax: (831) 420-3980
>> e-mail: Roy.Mendelssohn at noaa.gov www: https://www.pfeg.noaa.gov/
>> "Old age and treachery will overcome youth and skill."
>> "From those who have been given much, much will be expected"
>> "the arc of the moral universe is long, but it bends toward justice" -MLK Jr.
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> 
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

**********************
"The contents of this message do not reflect any position of the U.S. Government or NOAA."
**********************
Roy Mendelssohn
Supervisory Operations Research Analyst
NOAA/NMFS
Environmental Research Division
Southwest Fisheries Science Center
***Note new street address***
110 McAllister Way
Santa Cruz, CA 95060
Phone: (831)-420-3666
Fax: (831) 420-3980
e-mail: Roy.Mendelssohn at noaa.gov www: https://www.pfeg.noaa.gov/

"Old age and treachery will overcome youth and skill."
"From those who have been given much, much will be expected" 
"the arc of the moral universe is long, but it bends toward justice" -MLK Jr.


From roy@mende|@@ohn @end|ng |rom no@@@gov  Fri Oct 23 19:17:36 2020
From: roy@mende|@@ohn @end|ng |rom no@@@gov (Roy Mendelssohn - NOAA Federal)
Date: Fri, 23 Oct 2020 10:17:36 -0700
Subject: [R-pkg-devel] pretest order
Message-ID: <53229445-86BC-4E9D-B28D-B61B56454641@noaa.gov>

Just out of curiousity,  how is pretest order determined?  I have a package that was submitted yesterday that is still waiting pretest,  while one I submitted today was just pretested.   Both are just bug fixes of existing packages,  not new packages. 

Thanks for the info and the work on CRAN,  Having to deal recently with package hell in Python, I appreciate these efforts.

-Roy

**********************
"The contents of this message do not reflect any position of the U.S. Government or NOAA."
**********************
Roy Mendelssohn
Supervisory Operations Research Analyst
NOAA/NMFS
Environmental Research Division
Southwest Fisheries Science Center
***Note new street address***
110 McAllister Way
Santa Cruz, CA 95060
Phone: (831)-420-3666
Fax: (831) 420-3980
e-mail: Roy.Mendelssohn at noaa.gov www: https://www.pfeg.noaa.gov/

"Old age and treachery will overcome youth and skill."
"From those who have been given much, much will be expected" 
"the arc of the moral universe is long, but it bends toward justice" -MLK Jr.


From t|m@t@y|or @end|ng |rom h|ddene|eph@nt@@co@uk  Fri Oct 23 12:28:28 2020
From: t|m@t@y|or @end|ng |rom h|ddene|eph@nt@@co@uk (Tim Taylor)
Date: Fri, 23 Oct 2020 11:28:28 +0100
Subject: [R-pkg-devel] Delays in CRAN Windows Binaries?
In-Reply-To: <CAFDcVCQOC9z1ib9-+NdSb9pyy-0nkiODkC3p0diKz1VgOgPvpA@mail.gmail.com>
References: <5BADE9C6-684C-4A18-A1A3-6B29F891DD08@me.com>
 <CAFDcVCQOC9z1ib9-+NdSb9pyy-0nkiODkC3p0diKz1VgOgPvpA@mail.gmail.com>
Message-ID: <CAFLvaCn-gqAK+pZf4pANVny8rbRiKA8nxugNs4Eq6G791+N5OA@mail.gmail.com>

I've made an example at https://github.com/tjtnew/newbies that uses
GitHub actions to monitor how many hours a package has been in the
"newbies" queue.  It updates hourly and saves to a csv in the repo.
It's not something I have time to develop more but if someone wants to
pick it up and take it further please do. Disclaimer - hacked together
quite quickly so code could well be a little iffy.
Best
Tim


On Wed, 21 Oct 2020 at 20:47, Henrik Bengtsson
<henrik.bengtsson at gmail.com> wrote:
>
> Related to this:
>
> It would be neat to have a dashboard that reports on the current
> latency is on the different CRAN "queues" are, e.g. how long is the
> average waiting time when submitting a new package ("newbies") until
> you get a manual reply or it's on CRAN, submitting an update with all
> OK before it hits CRAN, waiting time for building Windows or macOS
> binaries, etc.  Some, but not all, of this information can already be
> guestimated from the info on ftp://cran.r-project.org/incoming/, on
> easier on https://lockedata.github.io/cransays/articles/dashboard.html.
> I think this could be a great contributor project - it doesn't have to
> be hosted by CRAN.
>
> /Henrik
>
> On Wed, Oct 21, 2020 at 11:08 AM Marc Schwartz <marc_schwartz at me.com> wrote:
> >
> > Hi All,
> >
> > Just thought that I would check to see if there are any known issues/delays for CRAN in creating R release and devel binaries for Windows for updated packages.
> >
> > It has been four days since I submitted an update and the other binaries were created within a couple of days. The two Windows binaries are the only outstanding updates pending.
> >
> > Thanks!
> >
> > Marc Schwartz
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Fri Oct 23 23:43:27 2020
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Fri, 23 Oct 2020 23:43:27 +0200
Subject: [R-pkg-devel] pretest order
In-Reply-To: <53229445-86BC-4E9D-B28D-B61B56454641@noaa.gov>
References: <53229445-86BC-4E9D-B28D-B61B56454641@noaa.gov>
Message-ID: <1ac22bbc-a5a2-2329-ff4b-7811d7eca9b1@statistik.tu-dortmund.de>

Generally by submission time, but there is a series of packages 
unprocessed stuck in the queue, will clear that up shortly.


Best,
Uwe

On 23.10.2020 19:17, Roy Mendelssohn - NOAA Federal via R-package-devel 
wrote:
> Just out of curiousity,  how is pretest order determined?  I have a package that was submitted yesterday that is still waiting pretest,  while one I submitted today was just pretested.   Both are just bug fixes of existing packages,  not new packages.
> 
> Thanks for the info and the work on CRAN,  Having to deal recently with package hell in Python, I appreciate these efforts.
> 
> -Roy
> 
> **********************
> "The contents of this message do not reflect any position of the U.S. Government or NOAA."
> **********************
> Roy Mendelssohn
> Supervisory Operations Research Analyst
> NOAA/NMFS
> Environmental Research Division
> Southwest Fisheries Science Center
> ***Note new street address***
> 110 McAllister Way
> Santa Cruz, CA 95060
> Phone: (831)-420-3666
> Fax: (831) 420-3980
> e-mail: Roy.Mendelssohn at noaa.gov www: https://www.pfeg.noaa.gov/
> 
> "Old age and treachery will overcome youth and skill."
> "From those who have been given much, much will be expected"
> "the arc of the moral universe is long, but it bends toward justice" -MLK Jr.
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From roy@mende|@@ohn @end|ng |rom no@@@gov  Fri Oct 23 23:52:01 2020
From: roy@mende|@@ohn @end|ng |rom no@@@gov (Roy Mendelssohn - NOAA Federal)
Date: Fri, 23 Oct 2020 14:52:01 -0700
Subject: [R-pkg-devel] pretest order
In-Reply-To: <1ac22bbc-a5a2-2329-ff4b-7811d7eca9b1@statistik.tu-dortmund.de>
References: <53229445-86BC-4E9D-B28D-B61B56454641@noaa.gov>
 <1ac22bbc-a5a2-2329-ff4b-7811d7eca9b1@statistik.tu-dortmund.de>
Message-ID: <89B00FCF-3D1C-44C2-883C-95896CBA7717@noaa.gov>

Thanks.  I had a feeling that was the case from looking at the queue.  Does the clearing make them run or do they need to be resubmitted?

-Roy


> On Oct 23, 2020, at 2:43 PM, Uwe Ligges <ligges at statistik.tu-dortmund.de> wrote:
> 
> Generally by submission time, but there is a series of packages unprocessed stuck in the queue, will clear that up shortly.
> 
> 
> Best,
> Uwe
> 
> On 23.10.2020 19:17, Roy Mendelssohn - NOAA Federal via R-package-devel wrote:
>> Just out of curiousity,  how is pretest order determined?  I have a package that was submitted yesterday that is still waiting pretest,  while one I submitted today was just pretested.   Both are just bug fixes of existing packages,  not new packages.
>> Thanks for the info and the work on CRAN,  Having to deal recently with package hell in Python, I appreciate these efforts.
>> -Roy
>> **********************
>> "The contents of this message do not reflect any position of the U.S. Government or NOAA."
>> **********************
>> Roy Mendelssohn
>> Supervisory Operations Research Analyst
>> NOAA/NMFS
>> Environmental Research Division
>> Southwest Fisheries Science Center
>> ***Note new street address***
>> 110 McAllister Way
>> Santa Cruz, CA 95060
>> Phone: (831)-420-3666
>> Fax: (831) 420-3980
>> e-mail: Roy.Mendelssohn at noaa.gov www: https://www.pfeg.noaa.gov/
>> "Old age and treachery will overcome youth and skill."
>> "From those who have been given much, much will be expected"
>> "the arc of the moral universe is long, but it bends toward justice" -MLK Jr.
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel

**********************
"The contents of this message do not reflect any position of the U.S. Government or NOAA."
**********************
Roy Mendelssohn
Supervisory Operations Research Analyst
NOAA/NMFS
Environmental Research Division
Southwest Fisheries Science Center
***Note new street address***
110 McAllister Way
Santa Cruz, CA 95060
Phone: (831)-420-3666
Fax: (831) 420-3980
e-mail: Roy.Mendelssohn at noaa.gov www: https://www.pfeg.noaa.gov/

"Old age and treachery will overcome youth and skill."
"From those who have been given much, much will be expected" 
"the arc of the moral universe is long, but it bends toward justice" -MLK Jr.


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Sat Oct 24 00:07:31 2020
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Sat, 24 Oct 2020 00:07:31 +0200
Subject: [R-pkg-devel] pretest order
In-Reply-To: <89B00FCF-3D1C-44C2-883C-95896CBA7717@noaa.gov>
References: <53229445-86BC-4E9D-B28D-B61B56454641@noaa.gov>
 <1ac22bbc-a5a2-2329-ff4b-7811d7eca9b1@statistik.tu-dortmund.de>
 <89B00FCF-3D1C-44C2-883C-95896CBA7717@noaa.gov>
Message-ID: <9e94dc19-5103-b55e-b42d-f68a93bd602d@statistik.tu-dortmund.de>

It will make them run.

Best,
Uwe Ligges

On 23.10.2020 23:52, Roy Mendelssohn - NOAA Federal wrote:
> Thanks.  I had a feeling that was the case from looking at the queue.  Does the clearing make them run or do they need to be resubmitted?
> 
> -Roy
> 
> 
>> On Oct 23, 2020, at 2:43 PM, Uwe Ligges <ligges at statistik.tu-dortmund.de> wrote:
>>
>> Generally by submission time, but there is a series of packages unprocessed stuck in the queue, will clear that up shortly.
>>
>>
>> Best,
>> Uwe
>>
>> On 23.10.2020 19:17, Roy Mendelssohn - NOAA Federal via R-package-devel wrote:
>>> Just out of curiousity,  how is pretest order determined?  I have a package that was submitted yesterday that is still waiting pretest,  while one I submitted today was just pretested.   Both are just bug fixes of existing packages,  not new packages.
>>> Thanks for the info and the work on CRAN,  Having to deal recently with package hell in Python, I appreciate these efforts.
>>> -Roy
>>> **********************
>>> "The contents of this message do not reflect any position of the U.S. Government or NOAA."
>>> **********************
>>> Roy Mendelssohn
>>> Supervisory Operations Research Analyst
>>> NOAA/NMFS
>>> Environmental Research Division
>>> Southwest Fisheries Science Center
>>> ***Note new street address***
>>> 110 McAllister Way
>>> Santa Cruz, CA 95060
>>> Phone: (831)-420-3666
>>> Fax: (831) 420-3980
>>> e-mail: Roy.Mendelssohn at noaa.gov www: https://www.pfeg.noaa.gov/
>>> "Old age and treachery will overcome youth and skill."
>>> "From those who have been given much, much will be expected"
>>> "the arc of the moral universe is long, but it bends toward justice" -MLK Jr.
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> **********************
> "The contents of this message do not reflect any position of the U.S. Government or NOAA."
> **********************
> Roy Mendelssohn
> Supervisory Operations Research Analyst
> NOAA/NMFS
> Environmental Research Division
> Southwest Fisheries Science Center
> ***Note new street address***
> 110 McAllister Way
> Santa Cruz, CA 95060
> Phone: (831)-420-3666
> Fax: (831) 420-3980
> e-mail: Roy.Mendelssohn at noaa.gov www: https://www.pfeg.noaa.gov/
> 
> "Old age and treachery will overcome youth and skill."
> "From those who have been given much, much will be expected"
> "the arc of the moral universe is long, but it bends toward justice" -MLK Jr.
>


From j@goreck| @end|ng |rom w|t@edu@p|  Sun Oct 25 10:00:31 2020
From: j@goreck| @end|ng |rom w|t@edu@p| (Jan Gorecki)
Date: Sun, 25 Oct 2020 11:00:31 +0200
Subject: [R-pkg-devel] details of CRAN's r-devel-linux-x86_64-debian-clang
Message-ID: <CAOO9MKXrZt=5cdGRODcJF6OsB83AB3Qw1u5seraPbdohh5Qfcg@mail.gmail.com>

Dear community,

I am getting an error on CRAN on r-devel-linux-x86_64-debian-clang machine only:

  S3 method lookup found 'as.x.y' on search path

I know how to fix the error. I am interested to know how to reproduce
this error locally. I tried combination of
R_S3_METHOD_LOOKUP_BASEENV_AFTER_GLOBALENV_
and
_R_S3_METHOD_LOOKUP_REPORT_SEARCH_PATH_USES_
but didn't manage to reproduce the error.

What is the proper way to set up checks to detect these kinds of issues?

Moreover, I kindly request to provide "details" for other CRAN
machines in flavors page:
https://cran.r-project.org/web/checks/check_flavors.html
"Details" are currently provided only for 3 machines there. Having
"details" for r-devel-linux-x86_64-debian-clang would probably answer
my question without involving readers of this mailing list.

Best Regards,
Jan Gorecki


From hugh@p@r@on@ge @end|ng |rom gm@||@com  Sun Oct 25 10:14:28 2020
From: hugh@p@r@on@ge @end|ng |rom gm@||@com (Hugh Parsonage)
Date: Sun, 25 Oct 2020 20:14:28 +1100
Subject: [R-pkg-devel] 
 details of CRAN's r-devel-linux-x86_64-debian-clang
In-Reply-To: <CAOO9MKXrZt=5cdGRODcJF6OsB83AB3Qw1u5seraPbdohh5Qfcg@mail.gmail.com>
References: <CAOO9MKXrZt=5cdGRODcJF6OsB83AB3Qw1u5seraPbdohh5Qfcg@mail.gmail.com>
Message-ID: <CAJmOi+OoFiOTZxtPjOYebDZzwh_AFAkHBi8Ow0ATh2Zbc-L4Rg@mail.gmail.com>

_R_S3_METHOD_LOOKUP_BASEENV_AFTER_GLOBALENV_

not

 R_S3_METHOD_LOOKUP_BASEENV_AFTER_GLOBALENV_

(i.e. you seem to have dropped the initial underscore)?

On Sun, 25 Oct 2020 at 20:01, Jan Gorecki <j.gorecki at wit.edu.pl> wrote:
>
> Dear community,
>
> I am getting an error on CRAN on r-devel-linux-x86_64-debian-clang machine only:
>
>   S3 method lookup found 'as.x.y' on search path
>
> I know how to fix the error. I am interested to know how to reproduce
> this error locally. I tried combination of
> R_S3_METHOD_LOOKUP_BASEENV_AFTER_GLOBALENV_
> and
> _R_S3_METHOD_LOOKUP_REPORT_SEARCH_PATH_USES_
> but didn't manage to reproduce the error.
>
> What is the proper way to set up checks to detect these kinds of issues?
>
> Moreover, I kindly request to provide "details" for other CRAN
> machines in flavors page:
> https://cran.r-project.org/web/checks/check_flavors.html
> "Details" are currently provided only for 3 machines there. Having
> "details" for r-devel-linux-x86_64-debian-clang would probably answer
> my question without involving readers of this mailing list.
>
> Best Regards,
> Jan Gorecki
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From he|mut@@chuetz @end|ng |rom beb@c@@t  Sun Oct 25 11:10:19 2020
From: he|mut@@chuetz @end|ng |rom beb@c@@t (=?UTF-8?Q?Helmut_Sch=c3=bctz?=)
Date: Sun, 25 Oct 2020 11:10:19 +0100
Subject: [R-pkg-devel] Warning on r-oldrel-macos-x86_64
Message-ID: <4fdb5faa-d2f6-c6b3-e90d-00fe424ba572@bebac.at>

Dear all,

we faced a warning on r-oldrel-macos-x86_64:
https://cran.r-project.org/web/checks/check_results_PowerTOST.html
I'm not concerned about "Pandoc (>= 1.12.3) and/or pandoc-citeproc not 
available" in the first 5 vignettes since there were no problem in the 
previous releases.
However I found this on stackoverflow:
https://stackoverflow.com/questions/50789125/how-to-get-an-rmarkdown-vignette-for-r-package-to-escape-cran-warnings-on-solari
RolandAsc commented:
"In my understanding you can only see this warning if there is an error 
(either because warnings are being converted to errors or because there 
is another subsequent error), else it just doesn't come through. This is 
not an answer but maybe an explanation."
Seems to be correct. In my code a data.frame is assigned with a column 
"foo" and _without_ stringsAsFactors = FALSE. Later a function is called 
which requires "foo" as character.
The default stringsAsFactors was changed to FALSE in R4.0.0. Hence, my 
question: How "old" is the old releaseon CRAN's test machines/ macos? 
oldrel on windows is OK.

What shall we do?
Re-submit with the same release-number(either add stringsAsFactors = 
FALSE or call the function with as.character("foo")with an explanation?

Helmut

-- 
Ing. Helmut Sch?tz
BEBAC?? Consultancy Services for
Bioequivalence and Bioavailability Studies
Neubaugasse 36/11
1070 Vienna, Austria
E helmut.schuetz at bebac.at
W https://bebac.at/
F https://forum.bebac.at/


From j@goreck| @end|ng |rom w|t@edu@p|  Sun Oct 25 11:17:56 2020
From: j@goreck| @end|ng |rom w|t@edu@p| (Jan Gorecki)
Date: Sun, 25 Oct 2020 12:17:56 +0200
Subject: [R-pkg-devel] 
 details of CRAN's r-devel-linux-x86_64-debian-clang
In-Reply-To: <CAJmOi+OoFiOTZxtPjOYebDZzwh_AFAkHBi8Ow0ATh2Zbc-L4Rg@mail.gmail.com>
References: <CAOO9MKXrZt=5cdGRODcJF6OsB83AB3Qw1u5seraPbdohh5Qfcg@mail.gmail.com>
 <CAJmOi+OoFiOTZxtPjOYebDZzwh_AFAkHBi8Ow0ATh2Zbc-L4Rg@mail.gmail.com>
Message-ID: <CAOO9MKXoDcrDSu6=pK=FrVLQzTrexTPd5AoBL4jMRZyjFgkKeQ@mail.gmail.com>

Thanks Hugh,
I must have dropped it when pasting to email. I checked again and it
doesn't make any difference. So my question is still valid then.

On Sun, Oct 25, 2020 at 11:14 AM Hugh Parsonage
<hugh.parsonage at gmail.com> wrote:
>
> _R_S3_METHOD_LOOKUP_BASEENV_AFTER_GLOBALENV_
>
> not
>
>  R_S3_METHOD_LOOKUP_BASEENV_AFTER_GLOBALENV_
>
> (i.e. you seem to have dropped the initial underscore)?
>
> On Sun, 25 Oct 2020 at 20:01, Jan Gorecki <j.gorecki at wit.edu.pl> wrote:
> >
> > Dear community,
> >
> > I am getting an error on CRAN on r-devel-linux-x86_64-debian-clang machine only:
> >
> >   S3 method lookup found 'as.x.y' on search path
> >
> > I know how to fix the error. I am interested to know how to reproduce
> > this error locally. I tried combination of
> > R_S3_METHOD_LOOKUP_BASEENV_AFTER_GLOBALENV_
> > and
> > _R_S3_METHOD_LOOKUP_REPORT_SEARCH_PATH_USES_
> > but didn't manage to reproduce the error.
> >
> > What is the proper way to set up checks to detect these kinds of issues?
> >
> > Moreover, I kindly request to provide "details" for other CRAN
> > machines in flavors page:
> > https://cran.r-project.org/web/checks/check_flavors.html
> > "Details" are currently provided only for 3 machines there. Having
> > "details" for r-devel-linux-x86_64-debian-clang would probably answer
> > my question without involving readers of this mailing list.
> >
> > Best Regards,
> > Jan Gorecki
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel


From hugh@p@r@on@ge @end|ng |rom gm@||@com  Sun Oct 25 11:45:55 2020
From: hugh@p@r@on@ge @end|ng |rom gm@||@com (Hugh Parsonage)
Date: Sun, 25 Oct 2020 21:45:55 +1100
Subject: [R-pkg-devel] Warning on r-oldrel-macos-x86_64
In-Reply-To: <4fdb5faa-d2f6-c6b3-e90d-00fe424ba572@bebac.at>
References: <4fdb5faa-d2f6-c6b3-e90d-00fe424ba572@bebac.at>
Message-ID: <CAJmOi+Pvo_MUNGAQ0KCh_e5Uq+Asdkg8XDiGE6UDSnObVC0xzQ@mail.gmail.com>

If you click on WARN in the table on your check results page (i.e. if
you go to <https://www.r-project.org/nosvn/R.check/r-oldrel-macos-x86_64/PowerTOST-00check.html>
) you will see in the first line:

* using R version 3.6.2 (2019-12-12)

Hope that helps.

On Sun, 25 Oct 2020 at 21:10, Helmut Sch?tz <helmut.schuetz at bebac.at> wrote:
>
> Dear all,
>
> we faced a warning on r-oldrel-macos-x86_64:
> https://cran.r-project.org/web/checks/check_results_PowerTOST.html
> I'm not concerned about "Pandoc (>= 1.12.3) and/or pandoc-citeproc not
> available" in the first 5 vignettes since there were no problem in the
> previous releases.
> However I found this on stackoverflow:
> https://stackoverflow.com/questions/50789125/how-to-get-an-rmarkdown-vignette-for-r-package-to-escape-cran-warnings-on-solari
> RolandAsc commented:
> "In my understanding you can only see this warning if there is an error
> (either because warnings are being converted to errors or because there
> is another subsequent error), else it just doesn't come through. This is
> not an answer but maybe an explanation."
> Seems to be correct. In my code a data.frame is assigned with a column
> "foo" and _without_ stringsAsFactors = FALSE. Later a function is called
> which requires "foo" as character.
> The default stringsAsFactors was changed to FALSE in R4.0.0. Hence, my
> question: How "old" is the old releaseon CRAN's test machines/ macos?
> oldrel on windows is OK.
>
> What shall we do?
> Re-submit with the same release-number(either add stringsAsFactors =
> FALSE or call the function with as.character("foo")with an explanation?
>
> Helmut
>
> --
> Ing. Helmut Sch?tz
> BEBAC ? Consultancy Services for
> Bioequivalence and Bioavailability Studies
> Neubaugasse 36/11
> 1070 Vienna, Austria
> E helmut.schuetz at bebac.at
> W https://bebac.at/
> F https://forum.bebac.at/
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From he|mut@@chuetz @end|ng |rom beb@c@@t  Sun Oct 25 12:02:01 2020
From: he|mut@@chuetz @end|ng |rom beb@c@@t (=?UTF-8?Q?Helmut_Sch=c3=bctz?=)
Date: Sun, 25 Oct 2020 12:02:01 +0100
Subject: [R-pkg-devel] Warning on r-oldrel-macos-x86_64
In-Reply-To: <CAJmOi+Pvo_MUNGAQ0KCh_e5Uq+Asdkg8XDiGE6UDSnObVC0xzQ@mail.gmail.com>
References: <4fdb5faa-d2f6-c6b3-e90d-00fe424ba572@bebac.at>
 <CAJmOi+Pvo_MUNGAQ0KCh_e5Uq+Asdkg8XDiGE6UDSnObVC0xzQ@mail.gmail.com>
Message-ID: <71e780b9-139d-cdf0-14e0-7b9455a129a8@bebac.at>

Hi Hugh,

Hugh Parsonage wrote on 2020-10-25 11:45:
> If you click on WARN in the table on your check results page (i.e. if
> you go to <https://www.r-project.org/nosvn/R.check/r-oldrel-macos-x86_64/PowerTOST-00check.html>
> ) you will see in the first line:
>
> * using R version 3.6.2 (2019-12-12)

Oh, dear!

> Hope that helps.

I does. THX.
An opinions of the list-members about a re-submission?

Helmut


-- 
Ing. Helmut Sch?tz
BEBAC?? Consultancy Services for
Bioequivalence and Bioavailability Studies
Neubaugasse 36/11
1070 Vienna, Austria
E helmut.schuetz at bebac.at
W https://bebac.at/
F https://forum.bebac.at/


From berryboe@@enkoo| @end|ng |rom hotm@||@com  Sun Oct 25 12:53:02 2020
From: berryboe@@enkoo| @end|ng |rom hotm@||@com (Berry Boessenkool)
Date: Sun, 25 Oct 2020 11:53:02 +0000
Subject: [R-pkg-devel] Warning on r-oldrel-macos-x86_64
In-Reply-To: <71e780b9-139d-cdf0-14e0-7b9455a129a8@bebac.at>
References: <4fdb5faa-d2f6-c6b3-e90d-00fe424ba572@bebac.at>
 <CAJmOi+Pvo_MUNGAQ0KCh_e5Uq+Asdkg8XDiGE6UDSnObVC0xzQ@mail.gmail.com>,
 <71e780b9-139d-cdf0-14e0-7b9455a129a8@bebac.at>
Message-ID: <AM0PR01MB40333E619EFDDEAEE7C5F213D5180@AM0PR01MB4033.eurprd01.prod.exchangelabs.com>


> Seems to be correct. In my code a data.frame is assigned with a column
> "foo" and _without_ stringsAsFactors = FALSE. Later a function is called
> which requires "foo" as character.
> The default stringsAsFactors was changed to FALSE in R4.0.0. Hence, my
> question: How "old" is the old releaseon CRAN's test machines/ macos?
> oldrel on windows is OK.

> An opinions of the list-members about a re-submission?

My 2 cents:
in the vignette, explicitely include stringsAsFactors=FALSE.
Yes, R 4 has that as the default, but I feel it will be years before >95% of users reading your vignette have R >4.
Anyone with an older version would not be able to directly copy the code.

As I said, just my thoughts.
Hoping not to provoke the discussion "but we need to encourage users to have a current R" as I did offline recently...

Regards,
Berry


	[[alternative HTML version deleted]]


From ||@t@ @end|ng |rom dewey@myzen@co@uk  Sun Oct 25 12:54:30 2020
From: ||@t@ @end|ng |rom dewey@myzen@co@uk (Michael Dewey)
Date: Sun, 25 Oct 2020 11:54:30 +0000
Subject: [R-pkg-devel] Warning on r-oldrel-macos-x86_64
In-Reply-To: <71e780b9-139d-cdf0-14e0-7b9455a129a8@bebac.at>
References: <4fdb5faa-d2f6-c6b3-e90d-00fe424ba572@bebac.at>
 <CAJmOi+Pvo_MUNGAQ0KCh_e5Uq+Asdkg8XDiGE6UDSnObVC0xzQ@mail.gmail.com>
 <71e780b9-139d-cdf0-14e0-7b9455a129a8@bebac.at>
Message-ID: <ab8f3b33-5fae-6a70-c936-ff0cd08d349c@dewey.myzen.co.uk>

Dear Helmut

I think the protocol is to always bump the version number for a 
re-submission even when the first one did not get onto CRAN.

Michael

On 25/10/2020 11:02, Helmut Sch?tz wrote:
> Hi Hugh,
> 
> Hugh Parsonage wrote on 2020-10-25 11:45:
>> If you click on WARN in the table on your check results page (i.e. if
>> you go to 
>> <https://www.r-project.org/nosvn/R.check/r-oldrel-macos-x86_64/PowerTOST-00check.html> 
>>
>> ) you will see in the first line:
>>
>> * using R version 3.6.2 (2019-12-12)
> 
> Oh, dear!
> 
>> Hope that helps.
> 
> I does. THX.
> An opinions of the list-members about a re-submission?
> 
> Helmut
> 
> 

-- 
Michael
http://www.dewey.myzen.co.uk/home.html


From murdoch@dunc@n @end|ng |rom gm@||@com  Sun Oct 25 13:23:46 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sun, 25 Oct 2020 08:23:46 -0400
Subject: [R-pkg-devel] Warning on r-oldrel-macos-x86_64
In-Reply-To: <4fdb5faa-d2f6-c6b3-e90d-00fe424ba572@bebac.at>
References: <4fdb5faa-d2f6-c6b3-e90d-00fe424ba572@bebac.at>
Message-ID: <c60df1af-df00-3725-0a87-80a7cd8e9209@gmail.com>

On 25/10/2020 6:10 a.m., Helmut Sch?tz wrote:
> Dear all,
> 
> we faced a warning on r-oldrel-macos-x86_64:
> https://cran.r-project.org/web/checks/check_results_PowerTOST.html
> I'm not concerned about "Pandoc (>= 1.12.3) and/or pandoc-citeproc not
> available" in the first 5 vignettes since there were no problem in the
> previous releases.
> However I found this on stackoverflow:
> https://stackoverflow.com/questions/50789125/how-to-get-an-rmarkdown-vignette-for-r-package-to-escape-cran-warnings-on-solari
> RolandAsc commented:
> "In my understanding you can only see this warning if there is an error
> (either because warnings are being converted to errors or because there
> is another subsequent error), else it just doesn't come through. This is
> not an answer but maybe an explanation."
> Seems to be correct. In my code a data.frame is assigned with a column
> "foo" and _without_ stringsAsFactors = FALSE. Later a function is called
> which requires "foo" as character.
> The default stringsAsFactors was changed to FALSE in R4.0.0. Hence, my
> question: How "old" is the old releaseon CRAN's test machines/ macos?
> oldrel on windows is OK.
> 
> What shall we do?
> Re-submit with the same release-number(either add stringsAsFactors =
> FALSE or call the function with as.character("foo")with an explanation?

By not specifying stringsAsFactors = FALSE, your vignette depends on R 
 >= 4.0.0, so you should

  - state that dependency in the DESCRIPTION file, or

  - test for it in the vignette, or

  - remove the dependency by being explicit about stringsAsFactors = FALSE.

Duncan Murdoch


From he|mut@@chuetz @end|ng |rom beb@c@@t  Sun Oct 25 21:16:12 2020
From: he|mut@@chuetz @end|ng |rom beb@c@@t (=?UTF-8?Q?Helmut_Sch=c3=bctz?=)
Date: Sun, 25 Oct 2020 21:16:12 +0100
Subject: [R-pkg-devel] Warning on r-oldrel-macos-x86_64
In-Reply-To: <ab8f3b33-5fae-6a70-c936-ff0cd08d349c@dewey.myzen.co.uk>
References: <4fdb5faa-d2f6-c6b3-e90d-00fe424ba572@bebac.at>
 <CAJmOi+Pvo_MUNGAQ0KCh_e5Uq+Asdkg8XDiGE6UDSnObVC0xzQ@mail.gmail.com>
 <71e780b9-139d-cdf0-14e0-7b9455a129a8@bebac.at>
 <ab8f3b33-5fae-6a70-c936-ff0cd08d349c@dewey.myzen.co.uk>
Message-ID: <3c187d63-3295-7951-5e59-38a91a4cc746@bebac.at>

Hi Michael,

Michael Dewey wrote on 2020-10-25 12:54:
> Dear Helmut
>
> I think the protocol is to always bump the version number for a 
> re-submission even when the first one did not get onto CRAN.

Agree. But in this case it?s already on CRAN 
(https://cran.r-project.org/package=PowerTOST). Only this _one_ warning.
Shall I wait 28 days for a new submission with a new version number or 
try to re-submit with an explanation? For my taste a new version with 
only one line of code changed is a bit over the top.

You are right; maybe a lot of users are still behind R4.0.0. Though 
stringsAsFactors = FALSE is new default, I will add it for simplicity. 
Some call stating all defaults "good coding practice". ;-)

Helmut

-- 
Ing. Helmut Sch?tz
BEBAC?? Consultancy Services for
Bioequivalence and Bioavailability Studies
Neubaugasse 36/11
1070 Vienna, Austria
E helmut.schuetz at bebac.at
W https://bebac.at/
F https://forum.bebac.at/


From edd @end|ng |rom deb|@n@org  Sun Oct 25 22:24:44 2020
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Sun, 25 Oct 2020 16:24:44 -0500
Subject: [R-pkg-devel] Warning on r-oldrel-macos-x86_64
In-Reply-To: <ab8f3b33-5fae-6a70-c936-ff0cd08d349c@dewey.myzen.co.uk>
References: <4fdb5faa-d2f6-c6b3-e90d-00fe424ba572@bebac.at>
 <CAJmOi+Pvo_MUNGAQ0KCh_e5Uq+Asdkg8XDiGE6UDSnObVC0xzQ@mail.gmail.com>
 <71e780b9-139d-cdf0-14e0-7b9455a129a8@bebac.at>
 <ab8f3b33-5fae-6a70-c936-ff0cd08d349c@dewey.myzen.co.uk>
Message-ID: <24469.60700.579913.704647@rob.eddelbuettel.com>


On 25 October 2020 at 11:54, Michael Dewey wrote:
| I think the protocol is to always bump the version number for a 
| re-submission even when the first one did not get onto CRAN.

No, as Hong wrote two days ago here in another thread:

    My personal opinion is that as long as a package doesn't actually make it
    on to CRAN, you don't need to bump the version. It's worked so far....

which has worked me in exactly the same way.

Dirk

-- 
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From j@goreck| @end|ng |rom w|t@edu@p|  Tue Oct 27 10:28:38 2020
From: j@goreck| @end|ng |rom w|t@edu@p| (Jan Gorecki)
Date: Tue, 27 Oct 2020 11:28:38 +0200
Subject: [R-pkg-devel] 
 details of CRAN's r-devel-linux-x86_64-debian-clang
In-Reply-To: <CAOO9MKXoDcrDSu6=pK=FrVLQzTrexTPd5AoBL4jMRZyjFgkKeQ@mail.gmail.com>
References: <CAOO9MKXrZt=5cdGRODcJF6OsB83AB3Qw1u5seraPbdohh5Qfcg@mail.gmail.com>
 <CAJmOi+OoFiOTZxtPjOYebDZzwh_AFAkHBi8Ow0ATh2Zbc-L4Rg@mail.gmail.com>
 <CAOO9MKXoDcrDSu6=pK=FrVLQzTrexTPd5AoBL4jMRZyjFgkKeQ@mail.gmail.com>
Message-ID: <CAOO9MKWKE=66i3BRkgjbbh_ckQrTnCc8K7J-WxG1A2gUTk5bWA@mail.gmail.com>

Thanks to Kurt Hornik for confirming that following should be sufficient.
export _R_S3_METHOD_LOOKUP_BASEENV_AFTER_GLOBALENV_=false
export _R_S3_METHOD_LOOKUP_REPORT_SEARCH_PATH_USES_=true

I did more tests and found out that for the issue to manifest I had to
install xts, rather than just zoo (which registers generic method),
because a particular unit test required xts to be present.
Now I am able to reproduce the problem.

On Sun, Oct 25, 2020 at 12:17 PM Jan Gorecki <j.gorecki at wit.edu.pl> wrote:
>
> Thanks Hugh,
> I must have dropped it when pasting to email. I checked again and it
> doesn't make any difference. So my question is still valid then.
>
> On Sun, Oct 25, 2020 at 11:14 AM Hugh Parsonage
> <hugh.parsonage at gmail.com> wrote:
> >
> > _R_S3_METHOD_LOOKUP_BASEENV_AFTER_GLOBALENV_
> >
> > not
> >
> >  R_S3_METHOD_LOOKUP_BASEENV_AFTER_GLOBALENV_
> >
> > (i.e. you seem to have dropped the initial underscore)?
> >
> > On Sun, 25 Oct 2020 at 20:01, Jan Gorecki <j.gorecki at wit.edu.pl> wrote:
> > >
> > > Dear community,
> > >
> > > I am getting an error on CRAN on r-devel-linux-x86_64-debian-clang machine only:
> > >
> > >   S3 method lookup found 'as.x.y' on search path
> > >
> > > I know how to fix the error. I am interested to know how to reproduce
> > > this error locally. I tried combination of
> > > R_S3_METHOD_LOOKUP_BASEENV_AFTER_GLOBALENV_
> > > and
> > > _R_S3_METHOD_LOOKUP_REPORT_SEARCH_PATH_USES_
> > > but didn't manage to reproduce the error.
> > >
> > > What is the proper way to set up checks to detect these kinds of issues?
> > >
> > > Moreover, I kindly request to provide "details" for other CRAN
> > > machines in flavors page:
> > > https://cran.r-project.org/web/checks/check_flavors.html
> > > "Details" are currently provided only for 3 machines there. Having
> > > "details" for r-devel-linux-x86_64-debian-clang would probably answer
> > > my question without involving readers of this mailing list.
> > >
> > > Best Regards,
> > > Jan Gorecki
> > >
> > > ______________________________________________
> > > R-package-devel at r-project.org mailing list
> > > https://stat.ethz.ch/mailman/listinfo/r-package-devel


From he|mut@@chuetz @end|ng |rom beb@c@@t  Tue Oct 27 12:21:00 2020
From: he|mut@@chuetz @end|ng |rom beb@c@@t (=?UTF-8?Q?Helmut_Sch=c3=bctz?=)
Date: Tue, 27 Oct 2020 12:21:00 +0100
Subject: [R-pkg-devel] Run-times of examples in vignettes
Message-ID: <4c9074ca-10a9-33c9-4c48-666dd6d2a546@bebac.at>

Dear all,

is there somewhere an official statement about the maximum run-times of 
examples in vignettes?

Currently I got for our seven vignettes on my six-years old machine 7.9 
minutes. One of them (containing a lot of simulation code) take 7.1 
minutes. Hence, in the submission we asked for --no-vignettes (on 
Windows only). Interestingly on some flavours and operating systems this 
was also observed, whereas on others not. What I don't understand: Some 
zip-files (e.g. Windows r-oldrel) which state in the result-Flag 
--no-vignettes contain not only the *.Rmd (what I would expect) but also 
the *.R and *.html.
Since a while we submit the time-critical vignette pre-compiled, which 
should bring the total execution time below one minute. Is that fine for 
all flavours & OSs?

Helmut

-- 
Ing. Helmut Sch?tz
BEBAC?? Consultancy Services for
Bioequivalence and Bioavailability Studies
Neubaugasse 36/11
1070 Vienna, Austria
E helmut.schuetz at bebac.at
W https://bebac.at/
F https://forum.bebac.at/


From edd @end|ng |rom deb|@n@org  Tue Oct 27 13:32:34 2020
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Tue, 27 Oct 2020 07:32:34 -0500
Subject: [R-pkg-devel] Run-times of examples in vignettes
In-Reply-To: <4c9074ca-10a9-33c9-4c48-666dd6d2a546@bebac.at>
References: <4c9074ca-10a9-33c9-4c48-666dd6d2a546@bebac.at>
Message-ID: <24472.4962.444967.133058@rob.eddelbuettel.com>


On 27 October 2020 at 12:21, Helmut Sch?tz wrote:
| is there somewhere an official statement about the maximum run-times of 
| examples in vignettes?

Seven minutes is excessive. I have (long) gone by the rule of "about one
minute" each for tests and examples. Rcpp is slightly above [1], especially
on Windows. I also tone down tests when on CRAN (using a scheme devised
almost a decade ago and described a few times here and in other places) where
to the package, having an extra fourth digit in the microrelease such as the
.4 currently in 1.0.5.4 signals 'full tests' whereas a three-digit release
number (such as 1.0.5 on CRAN signals reduced tests).  Works for me and on
all CI instances, requires no user input and no magic environment variable.

Now, we have some (partial) empirics on this as my reverse depends checks for Rcpp time
the runs (and the success/failure) in a small SQLite db (all on GH) [2]. I
also explicitly skip some packages taking too much time. I should probably
automate looking at the times and updating the list of skipped packages
automatically...

Dirk

[1] https://cloud.r-project.org/web/checks/check_results_Rcpp.html

[2] This is from an machine that is loaded by the reverse depends running six
    tests in parallel over four cores. This would be quicker on a nicer machine
    but ... this what we have, and what we very much appreciate having access
    to. It is also 'total time' for 'R CMD check'.
    

    sqlite> select package, runtime/60 as timeInMins from results order by timeInMins desc limit 10;
    package     timeInMins      
    ----------  ----------------
    cbq         54.2629543542862
    rstanarm    51.9673245469729
    OpenMx      44.4183359424273
    survHE      40.4267136971156
    pcFactorSt  36.404546391964 
    metaBMA     35.6222194115321
    trialr      35.2238613526026
    emIRT       34.6994982639949
    bmgarch     34.3939555843671
    bsem        33.4894991954168
    sqlite>

    So the first four or five clearly are candidates for skipping.


-- 
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From @ch@r@@k@h|t @end|ng |rom gm@||@com  Tue Oct 27 13:50:38 2020
From: @ch@r@@k@h|t @end|ng |rom gm@||@com (Akshit Achara)
Date: Tue, 27 Oct 2020 18:20:38 +0530
Subject: [R-pkg-devel] How to set an environment variable during package
 installation?
Message-ID: <CAJ=u__N1iiEgLyK-XbYaDfRv1tW-GEydfW_yzjWaT_0HUDc5+Q@mail.gmail.com>

Hi everyone,

I have created an R package which depends on a third party library. I need
to set an environment variable whose value will be the argument provided by
the user during the package installation. Is there any way I can set the
environment variable using autotools?

Thanks,
Akshit Achara

	[[alternative HTML version deleted]]


From he|mut@@chuetz @end|ng |rom beb@c@@t  Tue Oct 27 13:53:14 2020
From: he|mut@@chuetz @end|ng |rom beb@c@@t (=?UTF-8?Q?Helmut_Sch=c3=bctz?=)
Date: Tue, 27 Oct 2020 13:53:14 +0100
Subject: [R-pkg-devel] Run-times of examples in vignettes
In-Reply-To: <24472.4962.444967.133058@rob.eddelbuettel.com>
References: <4c9074ca-10a9-33c9-4c48-666dd6d2a546@bebac.at>
 <24472.4962.444967.133058@rob.eddelbuettel.com>
Message-ID: <0c9d9af1-e3f9-844e-3d95-2e7be29c300d@bebac.at>

Hi Dirk,

Dirk Eddelbuettel wrote on 2020-10-27 13:32:
> | is there somewhere an official statement about the maximum run-times of
> | examples in vignettes?
>
> Seven minutes is excessive.

Sure. The one vignette contains simulation code which needs 1E5 to 1E6 
sims to get a stable result. Fewer sims are simply not meaningful.
Since we use a pre-complied vignette now the execution time is 
essentially zero.
The others take 45 seconds in total.
If we would pre-compile the second slowest as well, we would be down for 
the remaining four at 12 seconds.

> I have (long) gone by the rule of "about one minute" each for tests and examples.

OK. Do you know of any reference for this "rule"?

Helmut

-- 
Ing. Helmut Sch?tz
BEBAC?? Consultancy Services for
Bioequivalence and Bioavailability Studies
Neubaugasse 36/11
1070 Vienna, Austria
E helmut.schuetz at bebac.at
W https://bebac.at/
F https://forum.bebac.at/


From bbo|ker @end|ng |rom gm@||@com  Tue Oct 27 16:29:11 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Tue, 27 Oct 2020 11:29:11 -0400
Subject: [R-pkg-devel] Run-times of examples in vignettes
In-Reply-To: <0c9d9af1-e3f9-844e-3d95-2e7be29c300d@bebac.at>
References: <4c9074ca-10a9-33c9-4c48-666dd6d2a546@bebac.at>
 <24472.4962.444967.133058@rob.eddelbuettel.com>
 <0c9d9af1-e3f9-844e-3d95-2e7be29c300d@bebac.at>
Message-ID: <b8b1fd83-91c0-c7d7-7d9c-f00dc7ad1122@gmail.com>


   My general solution is to run time-consuming computations in advance 
and store the results in (e.g.) inst/vignette_data, whence they can be 
retrieved via system.file("vignette_data", "output.rda", 
package="my_pkg"). (I might also include the R script required to 
generate the file so that I could automatically re-make those outputs as 
required ...)


On 10/27/20 8:53 AM, Helmut Sch?tz wrote:
> Hi Dirk,
> 
> Dirk Eddelbuettel wrote on 2020-10-27 13:32:
>> | is there somewhere an official statement about the maximum run-times of
>> | examples in vignettes?
>>
>> Seven minutes is excessive.
> 
> Sure. The one vignette contains simulation code which needs 1E5 to 1E6 
> sims to get a stable result. Fewer sims are simply not meaningful.
> Since we use a pre-complied vignette now the execution time is 
> essentially zero.
> The others take 45 seconds in total.
> If we would pre-compile the second slowest as well, we would be down for 
> the remaining four at 12 seconds.
> 
>> I have (long) gone by the rule of "about one minute" each for tests 
>> and examples.
> 
> OK. Do you know of any reference for this "rule"?
> 
> Helmut
>


From th|erry@onke||nx @end|ng |rom |nbo@be  Tue Oct 27 18:50:10 2020
From: th|erry@onke||nx @end|ng |rom |nbo@be (Thierry Onkelinx)
Date: Tue, 27 Oct 2020 18:50:10 +0100
Subject: [R-pkg-devel] Run-times of examples in vignettes
In-Reply-To: <b8b1fd83-91c0-c7d7-7d9c-f00dc7ad1122@gmail.com>
References: <4c9074ca-10a9-33c9-4c48-666dd6d2a546@bebac.at>
 <24472.4962.444967.133058@rob.eddelbuettel.com>
 <0c9d9af1-e3f9-844e-3d95-2e7be29c300d@bebac.at>
 <b8b1fd83-91c0-c7d7-7d9c-f00dc7ad1122@gmail.com>
Message-ID: <CAJuCY5z6dTWqaZ0Gzu0pEwXVj8r8QKhv9VADk2LAXO2=_=bXNQ@mail.gmail.com>

My solution is similar to Ben's solution. Except that the code for creating
the data is in the vignette. The chunk only runs when the data is not
available. The trick is to pass code to the eval argument instead of a
fixed TRUE or FALSE. See
https://github.com/ropensci/git2rdata/blob/bad8a4cf42049faa72a04b202c5a4dfc233b4046/vignettes/efficiency.Rmd#L293
for an example.

ir. Thierry Onkelinx
Statisticus / Statistician

Vlaamse Overheid / Government of Flanders
INSTITUUT VOOR NATUUR- EN BOSONDERZOEK / RESEARCH INSTITUTE FOR NATURE AND
FOREST
Team Biometrie & Kwaliteitszorg / Team Biometrics & Quality Assurance
thierry.onkelinx at inbo.be
Havenlaan 88 bus 73, 1000 Brussel
www.inbo.be

///////////////////////////////////////////////////////////////////////////////////////////
To call in the statistician after the experiment is done may be no more
than asking him to perform a post-mortem examination: he may be able to say
what the experiment died of. ~ Sir Ronald Aylmer Fisher
The plural of anecdote is not data. ~ Roger Brinner
The combination of some data and an aching desire for an answer does not
ensure that a reasonable answer can be extracted from a given body of data.
~ John Tukey
///////////////////////////////////////////////////////////////////////////////////////////

<https://www.inbo.be>


Op di 27 okt. 2020 om 16:29 schreef Ben Bolker <bbolker at gmail.com>:

>
>    My general solution is to run time-consuming computations in advance
> and store the results in (e.g.) inst/vignette_data, whence they can be
> retrieved via system.file("vignette_data", "output.rda",
> package="my_pkg"). (I might also include the R script required to
> generate the file so that I could automatically re-make those outputs as
> required ...)
>
>
> On 10/27/20 8:53 AM, Helmut Sch?tz wrote:
> > Hi Dirk,
> >
> > Dirk Eddelbuettel wrote on 2020-10-27 13:32:
> >> | is there somewhere an official statement about the maximum run-times
> of
> >> | examples in vignettes?
> >>
> >> Seven minutes is excessive.
> >
> > Sure. The one vignette contains simulation code which needs 1E5 to 1E6
> > sims to get a stable result. Fewer sims are simply not meaningful.
> > Since we use a pre-complied vignette now the execution time is
> > essentially zero.
> > The others take 45 seconds in total.
> > If we would pre-compile the second slowest as well, we would be down for
> > the remaining four at 12 seconds.
> >
> >> I have (long) gone by the rule of "about one minute" each for tests
> >> and examples.
> >
> > OK. Do you know of any reference for this "rule"?
> >
> > Helmut
> >
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From roy@mende|@@ohn @end|ng |rom no@@@gov  Wed Oct 28 16:31:14 2020
From: roy@mende|@@ohn @end|ng |rom no@@@gov (Roy Mendelssohn - NOAA Federal)
Date: Wed, 28 Oct 2020 08:31:14 -0700
Subject: [R-pkg-devel] Number of days since last submission
Message-ID: <EBC0B0CE-794B-4821-8875-904770FAE6D8@noaa.gov>

Hi All:

A few days ago I put on CRAN a new version of a package.  Since then it has thrown some errors,  all do to the fact that sometimes on CRAN the rebuild of the Vignette fails. I received a notice about this from CRAN.  Now however,  when I test on winbuilder,  I get a Note because of the last time since a re-submissio.  Should I just submit the new version and not worry about the note?

Thanks,

-Roy



**********************
"The contents of this message do not reflect any position of the U.S. Government or NOAA."
**********************
Roy Mendelssohn
Supervisory Operations Research Analyst
NOAA/NMFS
Environmental Research Division
Southwest Fisheries Science Center
***Note new street address***
110 McAllister Way
Santa Cruz, CA 95060
Phone: (831)-420-3666
Fax: (831) 420-3980
e-mail: Roy.Mendelssohn at noaa.gov www: https://www.pfeg.noaa.gov/

"Old age and treachery will overcome youth and skill."
"From those who have been given much, much will be expected" 
"the arc of the moral universe is long, but it bends toward justice" -MLK Jr.


From zk@mv@r @end|ng |rom gm@||@com  Wed Oct 28 16:58:21 2020
From: zk@mv@r @end|ng |rom gm@||@com (Zhian N. Kamvar)
Date: Wed, 28 Oct 2020 08:58:21 -0700
Subject: [R-pkg-devel] Number of days since last submission
In-Reply-To: <EBC0B0CE-794B-4821-8875-904770FAE6D8@noaa.gov>
References: <EBC0B0CE-794B-4821-8875-904770FAE6D8@noaa.gov>
Message-ID: <4d5e08bf-1464-f256-92ee-31983a299f13@gmail.com>

Hi Roy,

 From my experience yours is not an uncommon situation so, yes, you 
should submit the new version and explain why you are submitting so soon 
after your last submission (to fix errors).

Best,

Zhian


On 10/28/20 8:31 AM, Roy Mendelssohn - NOAA Federal via R-package-devel 
wrote:
> Hi All:
>
> A few days ago I put on CRAN a new version of a package.  Since then it has thrown some errors,  all do to the fact that sometimes on CRAN the rebuild of the Vignette fails. I received a notice about this from CRAN.  Now however,  when I test on winbuilder,  I get a Note because of the last time since a re-submissio.  Should I just submit the new version and not worry about the note?
>
> Thanks,
>
> -Roy
>
>
>
> **********************
> "The contents of this message do not reflect any position of the U.S. Government or NOAA."
> **********************
> Roy Mendelssohn
> Supervisory Operations Research Analyst
> NOAA/NMFS
> Environmental Research Division
> Southwest Fisheries Science Center
> ***Note new street address***
> 110 McAllister Way
> Santa Cruz, CA 95060
> Phone: (831)-420-3666
> Fax: (831) 420-3980
> e-mail: Roy.Mendelssohn at noaa.gov www: https://www.pfeg.noaa.gov/
>
> "Old age and treachery will overcome youth and skill."
> "From those who have been given much, much will be expected"
> "the arc of the moral universe is long, but it bends toward justice" -MLK Jr.
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From @gqh@mmond @end|ng |rom gm@||@com  Thu Oct 29 15:34:26 2020
From: @gqh@mmond @end|ng |rom gm@||@com (Anthony Hammond)
Date: Thu, 29 Oct 2020 14:34:26 +0000
Subject: [R-pkg-devel] checking PDF version of manual without hyperrefs or
 index ... ERROR
Message-ID: <CAGX=S7wTz_i724Z3JFPuZ3GR_QfEOCSpNS82wgwAJbFUTrEuAA@mail.gmail.com>

Hello,
I'm attempting to upload a package to CRAN and although it passes the R CMD
checks that I run, it doesn't pass the CRAN check and the response I get is
pasted below. I've looked online and found numerous solutions; some made no
sense to me & others didn't work.
I tried downloading and putting upquote.sty and inconsolata.sty files into
the latex folder. I also tried typing --no-manual in the project options
under R CMD check options.
Still the CRAN submission email response provided the below error.
What can I do to make this go away and have my package accepted?
It probably doesn't help that I know next to nothing about LaTeX.
Incidentally I don't mind not having a pdf manual, so if there is a simple
way to avoid the check by requesting not to have one, that'll do.
Any assistance would be greatly appreciated.

Kind Regards
Anthony

* checking PDF version of manual ... WARNING
LaTeX errors when creating PDF version.
This typically indicates Rd problems.
LaTeX errors found:
! Package inputenc Error: Unicode char ? (U+FB02)
(inputenc)                not set up for use with LaTeX.

See the inputenc package documentation for explanation.
Type  H <return>  for immediate help.
* checking PDF version of manual without hyperrefs or index ... ERROR
* checking for detritus in the temp directory ... OK
* DONE
Status: 1 ERROR, 1 WARNING, 3 NOTEs

	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu Oct 29 17:17:03 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 29 Oct 2020 12:17:03 -0400
Subject: [R-pkg-devel] 
 checking PDF version of manual without hyperrefs or index ... ERROR
In-Reply-To: <CAGX=S7wTz_i724Z3JFPuZ3GR_QfEOCSpNS82wgwAJbFUTrEuAA@mail.gmail.com>
References: <CAGX=S7wTz_i724Z3JFPuZ3GR_QfEOCSpNS82wgwAJbFUTrEuAA@mail.gmail.com>
Message-ID: <70fef9f4-6b9b-51a7-6f93-0f3092d8aadd@gmail.com>

I don't know the best solution, but one workaround would be to replace 
"?" in your Rd files with "fl".

Duncan Murdoch

On 29/10/2020 10:34 a.m., Anthony Hammond wrote:
> Hello,
> I'm attempting to upload a package to CRAN and although it passes the R CMD
> checks that I run, it doesn't pass the CRAN check and the response I get is
> pasted below. I've looked online and found numerous solutions; some made no
> sense to me & others didn't work.
> I tried downloading and putting upquote.sty and inconsolata.sty files into
> the latex folder. I also tried typing --no-manual in the project options
> under R CMD check options.
> Still the CRAN submission email response provided the below error.
> What can I do to make this go away and have my package accepted?
> It probably doesn't help that I know next to nothing about LaTeX.
> Incidentally I don't mind not having a pdf manual, so if there is a simple
> way to avoid the check by requesting not to have one, that'll do.
> Any assistance would be greatly appreciated.
> 
> Kind Regards
> Anthony
> 
> * checking PDF version of manual ... WARNING
> LaTeX errors when creating PDF version.
> This typically indicates Rd problems.
> LaTeX errors found:
> ! Package inputenc Error: Unicode char ? (U+FB02)
> (inputenc)                not set up for use with LaTeX.
> 
> See the inputenc package documentation for explanation.
> Type  H <return>  for immediate help.
> * checking PDF version of manual without hyperrefs or index ... ERROR
> * checking for detritus in the temp directory ... OK
> * DONE
> Status: 1 ERROR, 1 WARNING, 3 NOTEs
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From georg|@bo@hn@kov @end|ng |rom m@nche@ter@@c@uk  Thu Oct 29 19:21:33 2020
From: georg|@bo@hn@kov @end|ng |rom m@nche@ter@@c@uk (Georgi Boshnakov)
Date: Thu, 29 Oct 2020 18:21:33 +0000
Subject: [R-pkg-devel] 
 checking PDF version of manual without hyperrefs or index ... ERROR
In-Reply-To: <CAGX=S7wTz_i724Z3JFPuZ3GR_QfEOCSpNS82wgwAJbFUTrEuAA@mail.gmail.com>
References: <CAGX=S7wTz_i724Z3JFPuZ3GR_QfEOCSpNS82wgwAJbFUTrEuAA@mail.gmail.com>
Message-ID: <AM0PR0102MB3443E3CDCBDF038A3CF86536AE140@AM0PR0102MB3443.eurprd01.prod.exchangelabs.com>

This seems to be  the code for "small latin capital fl". Such characters often occur when copying text from external programs 
(similar to the familiar problem with fancy quotes). If that is the case, Just changing the offending symbol to  the two letters 'f' and 'l' should suffice. 

Georgi Boshnakov

-----Original Message-----
From: R-package-devel <r-package-devel-bounces at r-project.org> On Behalf Of Anthony Hammond
Sent: 29 October 2020 14:34
To: r-package-devel at r-project.org
Subject: [R-pkg-devel] checking PDF version of manual without hyperrefs or index ... ERROR

Hello,
I'm attempting to upload a package to CRAN and although it passes the R CMD checks that I run, it doesn't pass the CRAN check and the response I get is pasted below. I've looked online and found numerous solutions; some made no sense to me & others didn't work.
I tried downloading and putting upquote.sty and inconsolata.sty files into the latex folder. I also tried typing --no-manual in the project options under R CMD check options.
Still the CRAN submission email response provided the below error.
What can I do to make this go away and have my package accepted?
It probably doesn't help that I know next to nothing about LaTeX.
Incidentally I don't mind not having a pdf manual, so if there is a simple way to avoid the check by requesting not to have one, that'll do.
Any assistance would be greatly appreciated.

Kind Regards
Anthony

* checking PDF version of manual ... WARNING LaTeX errors when creating PDF version.
This typically indicates Rd problems.
LaTeX errors found:
! Package inputenc Error: Unicode char ? (U+FB02)
(inputenc)                not set up for use with LaTeX.

See the inputenc package documentation for explanation.
Type  H <return>  for immediate help.
* checking PDF version of manual without hyperrefs or index ... ERROR
* checking for detritus in the temp directory ... OK
* DONE
Status: 1 ERROR, 1 WARNING, 3 NOTEs

	[[alternative HTML version deleted]]

______________________________________________
R-package-devel at r-project.org mailing list https://stat.ethz.ch/mailman/listinfo/r-package-devel

From ||u|@@rev|||@ @end|ng |rom gm@||@com  Fri Oct 30 00:08:14 2020
From: ||u|@@rev|||@ @end|ng |rom gm@||@com (=?UTF-8?Q?Llu=C3=ADs_Revilla?=)
Date: Fri, 30 Oct 2020 00:08:14 +0100
Subject: [R-pkg-devel] 
 checking PDF version of manual without hyperrefs or index ... ERROR
In-Reply-To: <CAGX=S7wTz_i724Z3JFPuZ3GR_QfEOCSpNS82wgwAJbFUTrEuAA@mail.gmail.com>
References: <CAGX=S7wTz_i724Z3JFPuZ3GR_QfEOCSpNS82wgwAJbFUTrEuAA@mail.gmail.com>
Message-ID: <CAN+W6_tZ133Jj4j_z7MRVMqF3jVirQhk7g4=-AXYXR46de_a4Q@mail.gmail.com>

Hi Anthony,

I stumbled with the same issue for a package I submitted recently, the
problem seems to be that LaTex doesn't know how to map this unicode
character to a typesetting.

My unicode character was \u2229 and I tried several ways to avoid this warning.
On the vignette built with knitr I declared the unicode character the
following way:
%\DeclareUnicodeCharacter{2229}{$\cap$}
On the man pages I had to use a bit of code to print the right symbol:
\ifelse{latex}{\out{$\cup$}}{\ifelse{html}{\out{&cup;}}{}}.}

This way it passes the CRAN checks on all the machines and I didn't
get any comment from the reviewer.
In your case a similar changing the symbol might work, if there isn't
any symbol you'll probably need to map the ligature in latex:
tex.stackexchange.com/a/230140/178206.
Not sure how to include that map with the package tho.

Hope this helps,

Llu?s

On Thu, 29 Oct 2020 at 15:35, Anthony Hammond <agqhammond at gmail.com> wrote:
>
> Hello,
> I'm attempting to upload a package to CRAN and although it passes the R CMD
> checks that I run, it doesn't pass the CRAN check and the response I get is
> pasted below. I've looked online and found numerous solutions; some made no
> sense to me & others didn't work.
> I tried downloading and putting upquote.sty and inconsolata.sty files into
> the latex folder. I also tried typing --no-manual in the project options
> under R CMD check options.
> Still the CRAN submission email response provided the below error.
> What can I do to make this go away and have my package accepted?
> It probably doesn't help that I know next to nothing about LaTeX.
> Incidentally I don't mind not having a pdf manual, so if there is a simple
> way to avoid the check by requesting not to have one, that'll do.
> Any assistance would be greatly appreciated.
>
> Kind Regards
> Anthony
>
> * checking PDF version of manual ... WARNING
> LaTeX errors when creating PDF version.
> This typically indicates Rd problems.
> LaTeX errors found:
> ! Package inputenc Error: Unicode char ? (U+FB02)
> (inputenc)                not set up for use with LaTeX.
>
> See the inputenc package documentation for explanation.
> Type  H <return>  for immediate help.
> * checking PDF version of manual without hyperrefs or index ... ERROR
> * checking for detritus in the temp directory ... OK
> * DONE
> Status: 1 ERROR, 1 WARNING, 3 NOTEs
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From gor@n@bro@trom @end|ng |rom umu@@e  Fri Oct 30 19:45:47 2020
From: gor@n@bro@trom @end|ng |rom umu@@e (=?UTF-8?Q?G=c3=b6ran_Brostr=c3=b6m?=)
Date: Fri, 30 Oct 2020 19:45:47 +0100
Subject: [R-pkg-devel] import with except(ion)
Message-ID: <9107c079-fde4-88c0-d6f7-cf2c5589062d@umu.se>

My CRAN package eha depends on the survival package, and that creates 
problems with innocent users: It is about the 'frailty' function 
(mainly). While (after 'library(eha)')

f1 <- coxph(Surv(time, status) ~ age + frailty(inst), data = lung)

produces what you would expect (a frailty survival analysis), the use of 
the coxreg function from eha

f2 <- coxreg(Surv(time, status) ~ age + frailty(inst), data = lung)

produces (almost) nonsense. That's because the survival::frailty 
function essentially returns its input and coxreg is happy with that, 
treats it as an ordinary numeric (or factor) covariate, and nonsense is 
produced, but some users think otherwise. (Maybe it would be better to 
introduce frailty in a separate argument?)

I want to prevent this to happen, but I do not understand how to do it 
in the best way. I tried to move survival from Depends: to Imports: and 
adding import(survival, except = c(frailty, cluster)) to NAMESPACE. This 
had the side effect that a user must qualify the Surv function by 
survival::Surv, not satisfactory (similarly for other popular functions 
in survival).

Another option I thought of was to define my own Surv function as
Surv <- survival::Surv in my package, but it doesn't feel right.
It seems to work, though.

As you may understand from this, I am not very familiar with these 
issues. I have used Depends: survival for a long time and been happy 
with that.

Any help on this is highly appreciated.

G?ran


From gor@n@bro@trom @end|ng |rom umu@@e  Sat Oct 31 12:09:18 2020
From: gor@n@bro@trom @end|ng |rom umu@@e (=?UTF-8?Q?G=c3=b6ran_Brostr=c3=b6m?=)
Date: Sat, 31 Oct 2020 12:09:18 +0100
Subject: [R-pkg-devel] import with except(ion)
In-Reply-To: <9107c079-fde4-88c0-d6f7-cf2c5589062d@umu.se>
References: <9107c079-fde4-88c0-d6f7-cf2c5589062d@umu.se>
Message-ID: <09517c64-cd9c-ab5f-438f-c9e13271d45d@umu.se>

I think I finally got it: I must involve the export business after 
importing, thus, in NAMESPACE:

importFrom(survival,Surv)
export(Surv)

That's all,

G,

On 2020-10-30 19:45, G?ran Brostr?m wrote:
> My CRAN package eha depends on the survival package, and that creates 
> problems with innocent users: It is about the 'frailty' function 
> (mainly). While (after 'library(eha)')
> 
> f1 <- coxph(Surv(time, status) ~ age + frailty(inst), data = lung)
> 
> produces what you would expect (a frailty survival analysis), the use of 
> the coxreg function from eha
> 
> f2 <- coxreg(Surv(time, status) ~ age + frailty(inst), data = lung)
> 
> produces (almost) nonsense. That's because the survival::frailty 
> function essentially returns its input and coxreg is happy with that, 
> treats it as an ordinary numeric (or factor) covariate, and nonsense is 
> produced, but some users think otherwise. (Maybe it would be better to 
> introduce frailty in a separate argument?)
> 
> I want to prevent this to happen, but I do not understand how to do it 
> in the best way. I tried to move survival from Depends: to Imports: and 
> adding import(survival, except = c(frailty, cluster)) to NAMESPACE. This 
> had the side effect that a user must qualify the Surv function by 
> survival::Surv, not satisfactory (similarly for other popular functions 
> in survival).
> 
> Another option I thought of was to define my own Surv function as
> Surv <- survival::Surv in my package, but it doesn't feel right.
> It seems to work, though.
> 
> As you may understand from this, I am not very familiar with these 
> issues. I have used Depends: survival for a long time and been happy 
> with that.
> 
> Any help on this is highly appreciated.
> 
> G?ran
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From gor@n@bro@trom @end|ng |rom umu@@e  Sat Oct 31 13:29:33 2020
From: gor@n@bro@trom @end|ng |rom umu@@e (=?UTF-8?Q?G=c3=b6ran_Brostr=c3=b6m?=)
Date: Sat, 31 Oct 2020 13:29:33 +0100
Subject: [R-pkg-devel] import with except(ion)
In-Reply-To: <09517c64-cd9c-ab5f-438f-c9e13271d45d@umu.se>
References: <9107c079-fde4-88c0-d6f7-cf2c5589062d@umu.se>
 <09517c64-cd9c-ab5f-438f-c9e13271d45d@umu.se>
Message-ID: <df87f610-bcee-6dc3-0036-c1c1951bad32@umu.se>



On 2020-10-31 12:09, G?ran Brostr?m wrote:
> I think I finally got it: I must involve the export business after 
> importing, thus, in NAMESPACE:
> 
> importFrom(survival,Surv)
> export(Surv)
> 
> That's all,

Not really:

* checking for missing documentation entries ... WARNING
Undocumented code objects:
   ?Surv? ?coxph? ?strata?
All user-level objects in a package should have documentation entries.

> 
> G,
> 
> On 2020-10-30 19:45, G?ran Brostr?m wrote:
>> My CRAN package eha depends on the survival package, and that creates 
>> problems with innocent users: It is about the 'frailty' function 
>> (mainly). While (after 'library(eha)')
>>
>> f1 <- coxph(Surv(time, status) ~ age + frailty(inst), data = lung)
>>
>> produces what you would expect (a frailty survival analysis), the use 
>> of the coxreg function from eha
>>
>> f2 <- coxreg(Surv(time, status) ~ age + frailty(inst), data = lung)
>>
>> produces (almost) nonsense. That's because the survival::frailty 
>> function essentially returns its input and coxreg is happy with that, 
>> treats it as an ordinary numeric (or factor) covariate, and nonsense 
>> is produced, but some users think otherwise. (Maybe it would be better 
>> to introduce frailty in a separate argument?)
>>
>> I want to prevent this to happen, but I do not understand how to do it 
>> in the best way. I tried to move survival from Depends: to Imports: 
>> and adding import(survival, except = c(frailty, cluster)) to 
>> NAMESPACE. This had the side effect that a user must qualify the Surv 
>> function by survival::Surv, not satisfactory (similarly for other 
>> popular functions in survival).
>>
>> Another option I thought of was to define my own Surv function as
>> Surv <- survival::Surv in my package, but it doesn't feel right.
>> It seems to work, though.
>>
>> As you may understand from this, I am not very familiar with these 
>> issues. I have used Depends: survival for a long time and been happy 
>> with that.
>>
>> Any help on this is highly appreciated.
>>
>> G?ran
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From murdoch@dunc@n @end|ng |rom gm@||@com  Sat Oct 31 13:49:10 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sat, 31 Oct 2020 08:49:10 -0400
Subject: [R-pkg-devel] import with except(ion)
In-Reply-To: <9107c079-fde4-88c0-d6f7-cf2c5589062d@umu.se>
References: <9107c079-fde4-88c0-d6f7-cf2c5589062d@umu.se>
Message-ID: <252ef9fc-c03c-b88c-7ab2-6b61568bb3cb@gmail.com>

On 30/10/2020 2:45 p.m., G?ran Brostr?m wrote:
> My CRAN package eha depends on the survival package, and that creates
> problems with innocent users: It is about the 'frailty' function
> (mainly). While (after 'library(eha)')
> 
> f1 <- coxph(Surv(time, status) ~ age + frailty(inst), data = lung)
> 
> produces what you would expect (a frailty survival analysis), the use of
> the coxreg function from eha
> 
> f2 <- coxreg(Surv(time, status) ~ age + frailty(inst), data = lung)
> 
> produces (almost) nonsense. That's because the survival::frailty
> function essentially returns its input and coxreg is happy with that,
> treats it as an ordinary numeric (or factor) covariate, and nonsense is
> produced, but some users think otherwise. (Maybe it would be better to
> introduce frailty in a separate argument?)
> 
> I want to prevent this to happen, but I do not understand how to do it
> in the best way. I tried to move survival from Depends: to Imports: and
> adding import(survival, except = c(frailty, cluster)) to NAMESPACE. This
> had the side effect that a user must qualify the Surv function by
> survival::Surv, not satisfactory (similarly for other popular functions
> in survival).
> 
> Another option I thought of was to define my own Surv function as
> Surv <- survival::Surv in my package, but it doesn't feel right.
> It seems to work, though.
> 
> As you may understand from this, I am not very familiar with these
> issues. I have used Depends: survival for a long time and been happy
> with that.
> 
> Any help on this is highly appreciated.

I don't know if you received any private replies, but I don't see any 
public ones.

It's not clear from your message what you would like to happen with 
expressions like

  f2 <- coxreg(Surv(time, status) ~ age + frailty(inst), data = lung)

For example, would you like to generate an error, because you don't 
support frailty in this context?  Could you clarify that?

Duncan Murdoch


From gor@n@bro@trom @end|ng |rom umu@@e  Sat Oct 31 14:16:54 2020
From: gor@n@bro@trom @end|ng |rom umu@@e (=?UTF-8?Q?G=c3=b6ran_Brostr=c3=b6m?=)
Date: Sat, 31 Oct 2020 14:16:54 +0100
Subject: [R-pkg-devel] import with except(ion)
In-Reply-To: <252ef9fc-c03c-b88c-7ab2-6b61568bb3cb@gmail.com>
References: <9107c079-fde4-88c0-d6f7-cf2c5589062d@umu.se>
 <252ef9fc-c03c-b88c-7ab2-6b61568bb3cb@gmail.com>
Message-ID: <5a1b1c47-9c1d-1f76-93f1-8525e9f87234@umu.se>



On 2020-10-31 13:49, Duncan Murdoch wrote:
> On 30/10/2020 2:45 p.m., G?ran Brostr?m wrote:
>> My CRAN package eha depends on the survival package, and that creates
>> problems with innocent users: It is about the 'frailty' function
>> (mainly). While (after 'library(eha)')
>>
>> f1 <- coxph(Surv(time, status) ~ age + frailty(inst), data = lung)
>>
>> produces what you would expect (a frailty survival analysis), the use of
>> the coxreg function from eha
>>
>> f2 <- coxreg(Surv(time, status) ~ age + frailty(inst), data = lung)
>>
>> produces (almost) nonsense. That's because the survival::frailty
>> function essentially returns its input and coxreg is happy with that,
>> treats it as an ordinary numeric (or factor) covariate, and nonsense is
>> produced, but some users think otherwise. (Maybe it would be better to
>> introduce frailty in a separate argument?)
>>
>> I want to prevent this to happen, but I do not understand how to do it
>> in the best way. I tried to move survival from Depends: to Imports: and
>> adding import(survival, except = c(frailty, cluster)) to NAMESPACE. This
>> had the side effect that a user must qualify the Surv function by
>> survival::Surv, not satisfactory (similarly for other popular functions
>> in survival).
>>
>> Another option I thought of was to define my own Surv function as
>> Surv <- survival::Surv in my package, but it doesn't feel right.
>> It seems to work, though.
>>
>> As you may understand from this, I am not very familiar with these
>> issues. I have used Depends: survival for a long time and been happy
>> with that.
>>
>> Any help on this is highly appreciated.
> 
> I don't know if you received any private replies, but I don't see any 
> public ones.

No replies so far.
> 
> It's not clear from your message what you would like to happen with 
> expressions like
> 
>  ?f2 <- coxreg(Surv(time, status) ~ age + frailty(inst), data = lung)
> 
> For example, would you like to generate an error, because you don't 
> support frailty in this context?? Could you clarify that?

Yes, this should generate an error. I think I have solved this problem 
by using importFrom(survival, ...), where I replace ... with all the 
functions I want from survival (not including frailty, cluster, ...)
and then export some of them. For now I have in NAMESPACE

importFrom(survival,Surv)
importFrom(survival,attrassign)
importFrom(survival,coxph)
importFrom(survival,strata)
importFrom(survival,untangle.specials)
...
export(Surv)
export(strata)

I also have to write documentation for Surv and strata.

Is this reasonable?

G?ran

> 
> Duncan Murdoch


From ggrothend|eck @end|ng |rom gm@||@com  Sat Oct 31 14:30:01 2020
From: ggrothend|eck @end|ng |rom gm@||@com (Gabor Grothendieck)
Date: Sat, 31 Oct 2020 09:30:01 -0400
Subject: [R-pkg-devel] import with except(ion)
In-Reply-To: <9107c079-fde4-88c0-d6f7-cf2c5589062d@umu.se>
References: <9107c079-fde4-88c0-d6f7-cf2c5589062d@umu.se>
Message-ID: <CAP01uR=B7WPs=Z5o6WduV41QCjZwJW8fSdYXe1GHz913wqzcnw@mail.gmail.com>

coxreg could search for frailty and issue a warning or error if found.  This
returns TRUE if frailty is used in the formula argument as a function but
not otherwise.  That would allow implementation of a nicer message than
if it were just reported as a missing function.

find_frailty <- function(e) {
    if (is.logical(e)) return(e)
    if (length(e) > 1) {
        if (identical(e[[1]], as.name("frailty"))) return(TRUE)
        for (i in 1:length(e)) if (isTRUE(Recall(e[[i]]))) return(TRUE)
    }
    FALSE
}
find_frailty(frailty ~ frailty)
## [1] FALSE
fo <- Surv(time, status) ~ age + frailty(inst)
find_frailty(fo)
## [1] TRUE

On Fri, Oct 30, 2020 at 2:46 PM G?ran Brostr?m <goran.brostrom at umu.se> wrote:
>
> My CRAN package eha depends on the survival package, and that creates
> problems with innocent users: It is about the 'frailty' function
> (mainly). While (after 'library(eha)')
>
> f1 <- coxph(Surv(time, status) ~ age + frailty(inst), data = lung)
>
> produces what you would expect (a frailty survival analysis), the use of
> the coxreg function from eha
>
> f2 <- coxreg(Surv(time, status) ~ age + frailty(inst), data = lung)
>
> produces (almost) nonsense. That's because the survival::frailty
> function essentially returns its input and coxreg is happy with that,
> treats it as an ordinary numeric (or factor) covariate, and nonsense is
> produced, but some users think otherwise. (Maybe it would be better to
> introduce frailty in a separate argument?)
>
> I want to prevent this to happen, but I do not understand how to do it
> in the best way. I tried to move survival from Depends: to Imports: and
> adding import(survival, except = c(frailty, cluster)) to NAMESPACE. This
> had the side effect that a user must qualify the Surv function by
> survival::Surv, not satisfactory (similarly for other popular functions
> in survival).
>
> Another option I thought of was to define my own Surv function as
> Surv <- survival::Surv in my package, but it doesn't feel right.
> It seems to work, though.
>
> As you may understand from this, I am not very familiar with these
> issues. I have used Depends: survival for a long time and been happy
> with that.
>
> Any help on this is highly appreciated.
>
> G?ran
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel



-- 
Statistics & Software Consulting
GKX Group, GKX Associates Inc.
tel: 1-877-GKX-GROUP
email: ggrothendieck at gmail.com


From gor@n@bro@trom @end|ng |rom umu@@e  Sat Oct 31 15:54:33 2020
From: gor@n@bro@trom @end|ng |rom umu@@e (=?UTF-8?Q?G=c3=b6ran_Brostr=c3=b6m?=)
Date: Sat, 31 Oct 2020 15:54:33 +0100
Subject: [R-pkg-devel] import with except(ion)
In-Reply-To: <CAP01uR=B7WPs=Z5o6WduV41QCjZwJW8fSdYXe1GHz913wqzcnw@mail.gmail.com>
References: <9107c079-fde4-88c0-d6f7-cf2c5589062d@umu.se>
 <CAP01uR=B7WPs=Z5o6WduV41QCjZwJW8fSdYXe1GHz913wqzcnw@mail.gmail.com>
Message-ID: <6213487b-fbc8-4c69-2e0b-e94ead105779@umu.se>



On 2020-10-31 14:30, Gabor Grothendieck wrote:
> coxreg could search for frailty and issue a warning or error if found.  This
> returns TRUE if frailty is used in the formula argument as a function but
> not otherwise.  That would allow implementation of a nicer message than
> if it were just reported as a missing function.
> 
> find_frailty <- function(e) {
>      if (is.logical(e)) return(e)
>      if (length(e) > 1) {
>          if (identical(e[[1]], as.name("frailty"))) return(TRUE)
>          for (i in 1:length(e)) if (isTRUE(Recall(e[[i]]))) return(TRUE)
>      }
>      FALSE
> }
> find_frailty(frailty ~ frailty)
> ## [1] FALSE
> fo <- Surv(time, status) ~ age + frailty(inst)
> find_frailty(fo)
> ## [1] TRUE

Thanks Gabor, I thought of checking for the use of the three coxph 
specials frailty, cluster, and tt in my functions coxreg, phreg, aftreg, 
tpchreg, gompreg, and weibreg. Your function would come in handy for this.

G?ran

> 
> On Fri, Oct 30, 2020 at 2:46 PM G?ran Brostr?m <goran.brostrom at umu.se> wrote:
>>
>> My CRAN package eha depends on the survival package, and that creates
>> problems with innocent users: It is about the 'frailty' function
>> (mainly). While (after 'library(eha)')
>>
>> f1 <- coxph(Surv(time, status) ~ age + frailty(inst), data = lung)
>>
>> produces what you would expect (a frailty survival analysis), the use of
>> the coxreg function from eha
>>
>> f2 <- coxreg(Surv(time, status) ~ age + frailty(inst), data = lung)
>>
>> produces (almost) nonsense. That's because the survival::frailty
>> function essentially returns its input and coxreg is happy with that,
>> treats it as an ordinary numeric (or factor) covariate, and nonsense is
>> produced, but some users think otherwise. (Maybe it would be better to
>> introduce frailty in a separate argument?)
>>
>> I want to prevent this to happen, but I do not understand how to do it
>> in the best way. I tried to move survival from Depends: to Imports: and
>> adding import(survival, except = c(frailty, cluster)) to NAMESPACE. This
>> had the side effect that a user must qualify the Surv function by
>> survival::Surv, not satisfactory (similarly for other popular functions
>> in survival).
>>
>> Another option I thought of was to define my own Surv function as
>> Surv <- survival::Surv in my package, but it doesn't feel right.
>> It seems to work, though.
>>
>> As you may understand from this, I am not very familiar with these
>> issues. I have used Depends: survival for a long time and been happy
>> with that.
>>
>> Any help on this is highly appreciated.
>>
>> G?ran
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> 
>


From @m@nd@@rehbe|n @end|ng |rom u@p@br  Sun Nov  1 21:28:14 2020
From: @m@nd@@rehbe|n @end|ng |rom u@p@br (Amanda Rehbein)
Date: Sun, 1 Nov 2020 17:28:14 -0300
Subject: [R-pkg-devel] URLencode at DESCRIPTION file and citation()
In-Reply-To: <CABcmpncL3nepbcb8E4aYNeiEYiF=akOSeU8KEiCHwLQk7riZqw@mail.gmail.com>
References: <CABcmpncL3nepbcb8E4aYNeiEYiF=akOSeU8KEiCHwLQk7riZqw@mail.gmail.com>
Message-ID: <CABcmpnfJkUiZukjis3jkWYkwuEcZOPkzR_hrnzNUm9GYKcf6fw@mail.gmail.com>

Dear R-Devs,

I was wondering if someone could please help me to with two errors when
submitting a package to CRAN.

1) At the DESCRIPTION file I added some DOI's with curled brackets "<>"
inside the "<>" (e.g. <doi:10.1175/1520-0469(1981)038<1179:TSLROA>2.0.CO;2>).
I tried URLencode() the string in R and copy/paste the output into
the DESCRIPTION file, like this:
<doi:10.1175/1520-0469(1981)038%3C1179:TSLROA%3E2.0.CO;2>. But when I load,
build, check, etc, and ?raytracing the DOI does not appear correctly.
Everything after the first "%" disappeared and obviously, the DOI doesn't
work anymore.


2) I have a CITATION file at the sub-directory ins. Its content is like
this:

citHeader("To cite raytracing in publications use one of below:")

citEntry(entry = "manual",
   title          = "Atmospheric Rossby waves identification and tracking
with a raytracing numerical model",
   author         = personList(c(person("Amanda", "Rehbein"),
                    person("Tercio", "Ambrizzi"),
                    person("Sergio", "Ibarra-Espinosa"),
                    person("Livia M. M.", "Dutra"))),
   year           = "2020",
   url            = "https://github.com/salvatirehbein/raytracing",

   textVersion  =
   paste0("Rehbein, A., Ambrizzi, T., Ibarra-Espinosa, S., Dutra, L. M. M.:
Atmospheric Rossby waves identification and tracking with a raytracing
numerical model ", packageVersion("raytracing"), ".
https://github.com/salvatirehbein/raytracing, 2020.")
)

It passes all checks and gives a-okay citation when I type
citation("raytracing"). However, it fails in the CRAN tests with the
following error message.

Reading CITATION file fails with
     there is no package called 'raytracing'
   when package is not installed.

I will be very thankful for any help with this! Best,
Amanda

	[[alternative HTML version deleted]]


From @eb@meyer @end|ng |rom |@u@de  Mon Nov  2 11:09:38 2020
From: @eb@meyer @end|ng |rom |@u@de (Sebastian Meyer)
Date: Mon, 2 Nov 2020 11:09:38 +0100
Subject: [R-pkg-devel] import with except(ion)
In-Reply-To: <CAP01uR=B7WPs=Z5o6WduV41QCjZwJW8fSdYXe1GHz913wqzcnw@mail.gmail.com>
References: <9107c079-fde4-88c0-d6f7-cf2c5589062d@umu.se>
 <CAP01uR=B7WPs=Z5o6WduV41QCjZwJW8fSdYXe1GHz913wqzcnw@mail.gmail.com>
Message-ID: <da0c8635-d6d2-0d97-1f48-c39a6da029ac@fau.de>

No need to reinvent the wheel. G?ran, you already use the "specials"
feature of terms.formula to find strata():

> specials: which functions in the formula should be marked as special in
>           the 'terms' object?  A character vector or 'NULL'.

I think you can do the same for frailty(), for example:

> formula <- Surv(time, status) ~ age + frailty(inst)
> 
> Terms <- terms(formula, specials = "frailty")
> frailties <- attr(Terms, "specials")$frailty
> if (length(frailties)) warning("frailty() is not supported by coxreg")


Best regards,

	Sebastian


Am 31.10.20 um 14:30 schrieb Gabor Grothendieck:
> coxreg could search for frailty and issue a warning or error if found.  This
> returns TRUE if frailty is used in the formula argument as a function but
> not otherwise.  That would allow implementation of a nicer message than
> if it were just reported as a missing function.
> 
> find_frailty <- function(e) {
>     if (is.logical(e)) return(e)
>     if (length(e) > 1) {
>         if (identical(e[[1]], as.name("frailty"))) return(TRUE)
>         for (i in 1:length(e)) if (isTRUE(Recall(e[[i]]))) return(TRUE)
>     }
>     FALSE
> }
> find_frailty(frailty ~ frailty)
> ## [1] FALSE
> fo <- Surv(time, status) ~ age + frailty(inst)
> find_frailty(fo)
> ## [1] TRUE
> 
> On Fri, Oct 30, 2020 at 2:46 PM G?ran Brostr?m <goran.brostrom at umu.se> wrote:
>>
>> My CRAN package eha depends on the survival package, and that creates
>> problems with innocent users: It is about the 'frailty' function
>> (mainly). While (after 'library(eha)')
>>
>> f1 <- coxph(Surv(time, status) ~ age + frailty(inst), data = lung)
>>
>> produces what you would expect (a frailty survival analysis), the use of
>> the coxreg function from eha
>>
>> f2 <- coxreg(Surv(time, status) ~ age + frailty(inst), data = lung)
>>
>> produces (almost) nonsense. That's because the survival::frailty
>> function essentially returns its input and coxreg is happy with that,
>> treats it as an ordinary numeric (or factor) covariate, and nonsense is
>> produced, but some users think otherwise. (Maybe it would be better to
>> introduce frailty in a separate argument?)
>>
>> I want to prevent this to happen, but I do not understand how to do it
>> in the best way. I tried to move survival from Depends: to Imports: and
>> adding import(survival, except = c(frailty, cluster)) to NAMESPACE. This
>> had the side effect that a user must qualify the Surv function by
>> survival::Surv, not satisfactory (similarly for other popular functions
>> in survival).
>>
>> Another option I thought of was to define my own Surv function as
>> Surv <- survival::Surv in my package, but it doesn't feel right.
>> It seems to work, though.
>>
>> As you may understand from this, I am not very familiar with these
>> issues. I have used Depends: survival for a long time and been happy
>> with that.
>>
>> Any help on this is highly appreciated.
>>
>> G?ran
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> 
>


From gor@n@bro@trom @end|ng |rom umu@@e  Mon Nov  2 11:15:05 2020
From: gor@n@bro@trom @end|ng |rom umu@@e (=?UTF-8?Q?G=c3=b6ran_Brostr=c3=b6m?=)
Date: Mon, 2 Nov 2020 11:15:05 +0100
Subject: [R-pkg-devel] import with except(ion)
In-Reply-To: <da0c8635-d6d2-0d97-1f48-c39a6da029ac@fau.de>
References: <9107c079-fde4-88c0-d6f7-cf2c5589062d@umu.se>
 <CAP01uR=B7WPs=Z5o6WduV41QCjZwJW8fSdYXe1GHz913wqzcnw@mail.gmail.com>
 <da0c8635-d6d2-0d97-1f48-c39a6da029ac@fau.de>
Message-ID: <43b27662-11f1-6404-5b6c-853fcc6d4c45@umu.se>

Thanks!

G?ran

On 2020-11-02 11:09, Sebastian Meyer wrote:
> No need to reinvent the wheel. G?ran, you already use the "specials"
> feature of terms.formula to find strata():
> 
>> specials: which functions in the formula should be marked as special in
>>            the 'terms' object?  A character vector or 'NULL'.
> 
> I think you can do the same for frailty(), for example:
> 
>> formula <- Surv(time, status) ~ age + frailty(inst)
>>
>> Terms <- terms(formula, specials = "frailty")
>> frailties <- attr(Terms, "specials")$frailty
>> if (length(frailties)) warning("frailty() is not supported by coxreg")
> 
> 
> Best regards,
> 
> 	Sebastian
> 
> 
> Am 31.10.20 um 14:30 schrieb Gabor Grothendieck:
>> coxreg could search for frailty and issue a warning or error if found.  This
>> returns TRUE if frailty is used in the formula argument as a function but
>> not otherwise.  That would allow implementation of a nicer message than
>> if it were just reported as a missing function.
>>
>> find_frailty <- function(e) {
>>      if (is.logical(e)) return(e)
>>      if (length(e) > 1) {
>>          if (identical(e[[1]], as.name("frailty"))) return(TRUE)
>>          for (i in 1:length(e)) if (isTRUE(Recall(e[[i]]))) return(TRUE)
>>      }
>>      FALSE
>> }
>> find_frailty(frailty ~ frailty)
>> ## [1] FALSE
>> fo <- Surv(time, status) ~ age + frailty(inst)
>> find_frailty(fo)
>> ## [1] TRUE
>>
>> On Fri, Oct 30, 2020 at 2:46 PM G?ran Brostr?m <goran.brostrom at umu.se> wrote:
>>>
>>> My CRAN package eha depends on the survival package, and that creates
>>> problems with innocent users: It is about the 'frailty' function
>>> (mainly). While (after 'library(eha)')
>>>
>>> f1 <- coxph(Surv(time, status) ~ age + frailty(inst), data = lung)
>>>
>>> produces what you would expect (a frailty survival analysis), the use of
>>> the coxreg function from eha
>>>
>>> f2 <- coxreg(Surv(time, status) ~ age + frailty(inst), data = lung)
>>>
>>> produces (almost) nonsense. That's because the survival::frailty
>>> function essentially returns its input and coxreg is happy with that,
>>> treats it as an ordinary numeric (or factor) covariate, and nonsense is
>>> produced, but some users think otherwise. (Maybe it would be better to
>>> introduce frailty in a separate argument?)
>>>
>>> I want to prevent this to happen, but I do not understand how to do it
>>> in the best way. I tried to move survival from Depends: to Imports: and
>>> adding import(survival, except = c(frailty, cluster)) to NAMESPACE. This
>>> had the side effect that a user must qualify the Surv function by
>>> survival::Surv, not satisfactory (similarly for other popular functions
>>> in survival).
>>>
>>> Another option I thought of was to define my own Surv function as
>>> Surv <- survival::Surv in my package, but it doesn't feel right.
>>> It seems to work, though.
>>>
>>> As you may understand from this, I am not very familiar with these
>>> issues. I have used Depends: survival for a long time and been happy
>>> with that.
>>>
>>> Any help on this is highly appreciated.
>>>
>>> G?ran
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>>
>>
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From gor@n@bro@trom @end|ng |rom umu@@e  Mon Nov  2 22:12:28 2020
From: gor@n@bro@trom @end|ng |rom umu@@e (=?UTF-8?Q?G=c3=b6ran_Brostr=c3=b6m?=)
Date: Mon, 2 Nov 2020 22:12:28 +0100
Subject: [R-pkg-devel] import with except(ion)
In-Reply-To: <43b27662-11f1-6404-5b6c-853fcc6d4c45@umu.se>
References: <9107c079-fde4-88c0-d6f7-cf2c5589062d@umu.se>
 <CAP01uR=B7WPs=Z5o6WduV41QCjZwJW8fSdYXe1GHz913wqzcnw@mail.gmail.com>
 <da0c8635-d6d2-0d97-1f48-c39a6da029ac@fau.de>
 <43b27662-11f1-6404-5b6c-853fcc6d4c45@umu.se>
Message-ID: <2c09fe05-885b-8794-3a64-c563a2f7957d@umu.se>

Just a final observation: This can happen to anybody

-------------------------------------------------
 > lm(weight ~ feed, data = chickwts)

Call:
lm(formula = weight ~ feed, data = chickwts)

Coefficients:
   (Intercept)  feedhorsebean    feedlinseed   feedmeatmeal 
feedsoybean  feedsunflower
       323.583       -163.383       -104.833        -46.674 
-77.155          5.333

 > lm(weight ~ frailty(feed), data = chickwts)
Error in frailty(feed) : could not find function "frailty"

 > library(survival)
 > lm(weight ~ frailty(feed), data = chickwts)

Call:
lm(formula = weight ~ frailty(feed), data = chickwts)

Coefficients:
   (Intercept)  frailty(feed)
       232.165          8.147
-------------------------------------------------------

G,

On 2020-11-02 11:15, G?ran Brostr?m wrote:
> Thanks!
> 
> G?ran
> 
> On 2020-11-02 11:09, Sebastian Meyer wrote:
>> No need to reinvent the wheel. G?ran, you already use the "specials"
>> feature of terms.formula to find strata():
>>
>>> specials: which functions in the formula should be marked as special in
>>> ?????????? the 'terms' object?? A character vector or 'NULL'.
>>
>> I think you can do the same for frailty(), for example:
>>
>>> formula <- Surv(time, status) ~ age + frailty(inst)
>>>
>>> Terms <- terms(formula, specials = "frailty")
>>> frailties <- attr(Terms, "specials")$frailty
>>> if (length(frailties)) warning("frailty() is not supported by coxreg")
>>
>>
>> Best regards,
>>
>> ????Sebastian
>>
>>
>> Am 31.10.20 um 14:30 schrieb Gabor Grothendieck:
>>> coxreg could search for frailty and issue a warning or error if 
>>> found.? This
>>> returns TRUE if frailty is used in the formula argument as a function 
>>> but
>>> not otherwise.? That would allow implementation of a nicer message than
>>> if it were just reported as a missing function.
>>>
>>> find_frailty <- function(e) {
>>> ???? if (is.logical(e)) return(e)
>>> ???? if (length(e) > 1) {
>>> ???????? if (identical(e[[1]], as.name("frailty"))) return(TRUE)
>>> ???????? for (i in 1:length(e)) if (isTRUE(Recall(e[[i]]))) return(TRUE)
>>> ???? }
>>> ???? FALSE
>>> }
>>> find_frailty(frailty ~ frailty)
>>> ## [1] FALSE
>>> fo <- Surv(time, status) ~ age + frailty(inst)
>>> find_frailty(fo)
>>> ## [1] TRUE
>>>
>>> On Fri, Oct 30, 2020 at 2:46 PM G?ran Brostr?m 
>>> <goran.brostrom at umu.se> wrote:
>>>>
>>>> My CRAN package eha depends on the survival package, and that creates
>>>> problems with innocent users: It is about the 'frailty' function
>>>> (mainly). While (after 'library(eha)')
>>>>
>>>> f1 <- coxph(Surv(time, status) ~ age + frailty(inst), data = lung)
>>>>
>>>> produces what you would expect (a frailty survival analysis), the 
>>>> use of
>>>> the coxreg function from eha
>>>>
>>>> f2 <- coxreg(Surv(time, status) ~ age + frailty(inst), data = lung)
>>>>
>>>> produces (almost) nonsense. That's because the survival::frailty
>>>> function essentially returns its input and coxreg is happy with that,
>>>> treats it as an ordinary numeric (or factor) covariate, and nonsense is
>>>> produced, but some users think otherwise. (Maybe it would be better to
>>>> introduce frailty in a separate argument?)
>>>>
>>>> I want to prevent this to happen, but I do not understand how to do it
>>>> in the best way. I tried to move survival from Depends: to Imports: and
>>>> adding import(survival, except = c(frailty, cluster)) to NAMESPACE. 
>>>> This
>>>> had the side effect that a user must qualify the Surv function by
>>>> survival::Surv, not satisfactory (similarly for other popular functions
>>>> in survival).
>>>>
>>>> Another option I thought of was to define my own Surv function as
>>>> Surv <- survival::Surv in my package, but it doesn't feel right.
>>>> It seems to work, though.
>>>>
>>>> As you may understand from this, I am not very familiar with these
>>>> issues. I have used Depends: survival for a long time and been happy
>>>> with that.
>>>>
>>>> Any help on this is highly appreciated.
>>>>
>>>> G?ran
>>>>
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>>>
>>>
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From m@e||e@@@|mon @end|ng |rom y@hoo@@e  Tue Nov  3 11:08:05 2020
From: m@e||e@@@|mon @end|ng |rom y@hoo@@e (=?UTF-8?Q?Ma=C3=ABlle_SALMON?=)
Date: Tue, 3 Nov 2020 10:08:05 +0000 (UTC)
Subject: [R-pkg-devel] URLencode at DESCRIPTION file and citation()
In-Reply-To: <CABcmpnfJkUiZukjis3jkWYkwuEcZOPkzR_hrnzNUm9GYKcf6fw@mail.gmail.com>
References: <CABcmpncL3nepbcb8E4aYNeiEYiF=akOSeU8KEiCHwLQk7riZqw@mail.gmail.com>
 <CABcmpnfJkUiZukjis3jkWYkwuEcZOPkzR_hrnzNUm9GYKcf6fw@mail.gmail.com>
Message-ID: <88786942.2811706.1604398085731@mail.yahoo.com>

Hello,

1) I found (via GitHub search for DOIs in DESCRIPTION files?https://github.com/search?q=org%3Acran+%3Cdoi+user%3Acran+filename%3ADESCRIPTION&type=Code&ref=advsearch&l=&l=) a package with an URL-encoded DOI see https://github.com/cran/clust.bin.pair/blob/e464ac7e5d094bffd25b7c4cbba67820b60f1cc1/DESCRIPTION and the resulting CRAN page https://cran.r-project.org/web/packages/clust.bin.pair/index.html So I think you are right to use URL encoding.

I can reproduce the problem you get with the roxygen2-generated package-level manual page. The problem is that when going from Rd to HTML, the parts after "%" are ignored indeed. I'm not sure at what level this should be fixed. I opened an issue in roxygen2 https://github.com/r-lib/roxygen2/issues/1164 I hope others will have more useful answers. :-)

2) For that aspect I looked into a CITATION file I knew https://github.com/ropensci/bomrang/blob/master/inst/CITATION

For finding the version it uses meta$Version. So your CITATION could e.g. become

citHeader("To cite raytracing in publications use at least the first, if not both:")

year <- sub("-.*", "", meta$Date)
note <- sprintf("R package version %s", meta$Version)

citEntry(entry = "manual",
?? title????????? = "raytracing: An R package for identification and tracking the atmospheric Rossby waves",
?? author???????? = personList(c(person("Amanda", "Rehbein"),
??????????????????? person("Tercio", "Ambrizzi"),
??????????????????? person("Sergio", "Ibarra-Espinosa"),
??????????????????? person("Livia M. M.", "Dutra"))),
?? year?????????? = year,
?? url??????????? = "https://github.com/salvatirehbein/raytracing",
?? note????????? = note,
?? textVersion? =
?? paste0("Rehbein, A., Ambrizzi, T., Ibarra-Espinosa, S., Dutra, L. M. M.: Rossby Wave Ray Tracing v", meta$Version, ". https://github.com/salvatirehbein/raytracing, ", year,".")
)

citation(auto = meta)

citFooter("Thanks")

Ma?lle.


Den s?ndag 1 november 2020 21:29:54 CET, Amanda Rehbein <amanda.rehbein at usp.br> skrev: 





Dear R-Devs,

I was wondering if someone could please help me to with two errors when
submitting a package to CRAN.

1) At the DESCRIPTION file I added some DOI's with curled brackets "<>"
inside the "<>" (e.g. <doi:10.1175/1520-0469(1981)038<1179:TSLROA>2.0.CO;2>).
I tried URLencode() the string in R and copy/paste the output into
the DESCRIPTION file, like this:
<doi:10.1175/1520-0469(1981)038%3C1179:TSLROA%3E2.0.CO;2>. But when I load,
build, check, etc, and ?raytracing the DOI does not appear correctly.
Everything after the first "%" disappeared and obviously, the DOI doesn't
work anymore.


2) I have a CITATION file at the sub-directory ins. Its content is like
this:

citHeader("To cite raytracing in publications use one of below:")

citEntry(entry = "manual",
? title? ? ? ? ? = "Atmospheric Rossby waves identification and tracking
with a raytracing numerical model",
? author? ? ? ? = personList(c(person("Amanda", "Rehbein"),
? ? ? ? ? ? ? ? ? ? person("Tercio", "Ambrizzi"),
? ? ? ? ? ? ? ? ? ? person("Sergio", "Ibarra-Espinosa"),
? ? ? ? ? ? ? ? ? ? person("Livia M. M.", "Dutra"))),
? year? ? ? ? ? = "2020",
? url? ? ? ? ? ? = "https://github.com/salvatirehbein/raytracing",

? textVersion? =
? paste0("Rehbein, A., Ambrizzi, T., Ibarra-Espinosa, S., Dutra, L. M. M.:
Atmospheric Rossby waves identification and tracking with a raytracing
numerical model ", packageVersion("raytracing"), ".
https://github.com/salvatirehbein/raytracing, 2020.")
)

It passes all checks and gives a-okay citation when I type
citation("raytracing"). However, it fails in the CRAN tests with the
following error message.

Reading CITATION file fails with
? ? there is no package called 'raytracing'
? when package is not installed.

I will be very thankful for any help with this! Best,
Amanda

??? [[alternative HTML version deleted]]

______________________________________________
R-package-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel


From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Tue Nov  3 14:10:15 2020
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Tue, 03 Nov 2020 05:10:15 -0800
Subject: [R-pkg-devel] URLencode at DESCRIPTION file and citation()
In-Reply-To: <88786942.2811706.1604398085731@mail.yahoo.com>
References: <CABcmpncL3nepbcb8E4aYNeiEYiF=akOSeU8KEiCHwLQk7riZqw@mail.gmail.com>
 <CABcmpnfJkUiZukjis3jkWYkwuEcZOPkzR_hrnzNUm9GYKcf6fw@mail.gmail.com>
 <88786942.2811706.1604398085731@mail.yahoo.com>
Message-ID: <94B1F0BB-CB89-4F5F-B7D4-32908CFA2792@dcn.davis.ca.us>

Section 2.1 of the Writing R Extensions manual points out that percent symbols must (practically) always be escaped in Rd files. This includes within URLs.

On November 3, 2020 2:08:05 AM PST, "Ma?lle SALMON via R-package-devel" <r-package-devel at r-project.org> wrote:
>Hello,
>
>1) I found (via GitHub search for DOIs in DESCRIPTION
>files?https://github.com/search?q=org%3Acran+%3Cdoi+user%3Acran+filename%3ADESCRIPTION&type=Code&ref=advsearch&l=&l=)
>a package with an URL-encoded DOI see
>https://github.com/cran/clust.bin.pair/blob/e464ac7e5d094bffd25b7c4cbba67820b60f1cc1/DESCRIPTION
>and the resulting CRAN page
>https://cran.r-project.org/web/packages/clust.bin.pair/index.html So I
>think you are right to use URL encoding.
>
>I can reproduce the problem you get with the roxygen2-generated
>package-level manual page. The problem is that when going from Rd to
>HTML, the parts after "%" are ignored indeed. I'm not sure at what
>level this should be fixed. I opened an issue in roxygen2
>https://github.com/r-lib/roxygen2/issues/1164 I hope others will have
>more useful answers. :-)
>
>2) For that aspect I looked into a CITATION file I knew
>https://github.com/ropensci/bomrang/blob/master/inst/CITATION
>
>For finding the version it uses meta$Version. So your CITATION could
>e.g. become
>
>citHeader("To cite raytracing in publications use at least the first,
>if not both:")
>
>year <- sub("-.*", "", meta$Date)
>note <- sprintf("R package version %s", meta$Version)
>
>citEntry(entry = "manual",
>?? title????????? = "raytracing: An R package for identification and
>tracking the atmospheric Rossby waves",
>?? author???????? = personList(c(person("Amanda", "Rehbein"),
>??????????????????? person("Tercio", "Ambrizzi"),
>??????????????????? person("Sergio", "Ibarra-Espinosa"),
>??????????????????? person("Livia M. M.", "Dutra"))),
>?? year?????????? = year,
>?? url??????????? = "https://github.com/salvatirehbein/raytracing",
>?? note????????? = note,
>?? textVersion? =
>?? paste0("Rehbein, A., Ambrizzi, T., Ibarra-Espinosa, S., Dutra, L. M.
>M.: Rossby Wave Ray Tracing v", meta$Version, ".
>https://github.com/salvatirehbein/raytracing, ", year,".")
>)
>
>citation(auto = meta)
>
>citFooter("Thanks")
>
>Ma?lle.
>
>
>Den s?ndag 1 november 2020 21:29:54 CET, Amanda Rehbein
><amanda.rehbein at usp.br> skrev: 
>
>
>
>
>
>Dear R-Devs,
>
>I was wondering if someone could please help me to with two errors when
>submitting a package to CRAN.
>
>1) At the DESCRIPTION file I added some DOI's with curled brackets "<>"
>inside the "<>" (e.g.
><doi:10.1175/1520-0469(1981)038<1179:TSLROA>2.0.CO;2>).
>I tried URLencode() the string in R and copy/paste the output into
>the DESCRIPTION file, like this:
><doi:10.1175/1520-0469(1981)038%3C1179:TSLROA%3E2.0.CO;2>. But when I
>load,
>build, check, etc, and ?raytracing the DOI does not appear correctly.
>Everything after the first "%" disappeared and obviously, the DOI
>doesn't
>work anymore.
>
>
>2) I have a CITATION file at the sub-directory ins. Its content is like
>this:
>
>citHeader("To cite raytracing in publications use one of below:")
>
>citEntry(entry = "manual",
>? title? ? ? ? ? = "Atmospheric Rossby waves identification and
>tracking
>with a raytracing numerical model",
>? author? ? ? ? = personList(c(person("Amanda", "Rehbein"),
>? ? ? ? ? ? ? ? ? ? person("Tercio", "Ambrizzi"),
>? ? ? ? ? ? ? ? ? ? person("Sergio", "Ibarra-Espinosa"),
>? ? ? ? ? ? ? ? ? ? person("Livia M. M.", "Dutra"))),
>? year? ? ? ? ? = "2020",
>? url? ? ? ? ? ? = "https://github.com/salvatirehbein/raytracing",
>
>? textVersion? =
>? paste0("Rehbein, A., Ambrizzi, T., Ibarra-Espinosa, S., Dutra, L. M.
>M.:
>Atmospheric Rossby waves identification and tracking with a raytracing
>numerical model ", packageVersion("raytracing"), ".
>https://github.com/salvatirehbein/raytracing, 2020.")
>)
>
>It passes all checks and gives a-okay citation when I type
>citation("raytracing"). However, it fails in the CRAN tests with the
>following error message.
>
>Reading CITATION file fails with
>? ? there is no package called 'raytracing'
>? when package is not installed.
>
>I will be very thankful for any help with this! Best,
>Amanda
>
>??? [[alternative HTML version deleted]]
>
>______________________________________________
>R-package-devel at r-project.org mailing list
>https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>______________________________________________
>R-package-devel at r-project.org mailing list
>https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
Sent from my phone. Please excuse my brevity.


From @m@nd@@rehbe|n @end|ng |rom u@p@br  Tue Nov  3 14:52:48 2020
From: @m@nd@@rehbe|n @end|ng |rom u@p@br (Amanda Rehbein)
Date: Tue, 3 Nov 2020 10:52:48 -0300
Subject: [R-pkg-devel] URLencode at DESCRIPTION file and citation()
In-Reply-To: <94B1F0BB-CB89-4F5F-B7D4-32908CFA2792@dcn.davis.ca.us>
References: <CABcmpncL3nepbcb8E4aYNeiEYiF=akOSeU8KEiCHwLQk7riZqw@mail.gmail.com>
 <CABcmpnfJkUiZukjis3jkWYkwuEcZOPkzR_hrnzNUm9GYKcf6fw@mail.gmail.com>
 <88786942.2811706.1604398085731@mail.yahoo.com>
 <94B1F0BB-CB89-4F5F-B7D4-32908CFA2792@dcn.davis.ca.us>
Message-ID: <CABcmpnfLHLJZ2zhNc=RnetRtKmSsCtV1-zF6Wtn0fdwTefUawA@mail.gmail.com>

Dear Ma?lle and Jeff,

Thank you so much!

Best,
Amanda

Em ter., 3 de nov. de 2020 ?s 10:10, Jeff Newmiller <
jdnewmil at dcn.davis.ca.us> escreveu:

> Section 2.1 of the Writing R Extensions manual points out that percent
> symbols must (practically) always be escaped in Rd files. This includes
> within URLs.
>
> On November 3, 2020 2:08:05 AM PST, "Ma?lle SALMON via R-package-devel" <
> r-package-devel at r-project.org> wrote:
> >Hello,
> >
> >1) I found (via GitHub search for DOIs in DESCRIPTION
> >files
> https://github.com/search?q=org%3Acran+%3Cdoi+user%3Acran+filename%3ADESCRIPTION&type=Code&ref=advsearch&l=&l=
> )
> >a package with an URL-encoded DOI see
> >
> https://github.com/cran/clust.bin.pair/blob/e464ac7e5d094bffd25b7c4cbba67820b60f1cc1/DESCRIPTION
> >and the resulting CRAN page
> >https://cran.r-project.org/web/packages/clust.bin.pair/index.html So I
> >think you are right to use URL encoding.
> >
> >I can reproduce the problem you get with the roxygen2-generated
> >package-level manual page. The problem is that when going from Rd to
> >HTML, the parts after "%" are ignored indeed. I'm not sure at what
> >level this should be fixed. I opened an issue in roxygen2
> >https://github.com/r-lib/roxygen2/issues/1164 I hope others will have
> >more useful answers. :-)
> >
> >2) For that aspect I looked into a CITATION file I knew
> >https://github.com/ropensci/bomrang/blob/master/inst/CITATION
> >
> >For finding the version it uses meta$Version. So your CITATION could
> >e.g. become
> >
> >citHeader("To cite raytracing in publications use at least the first,
> >if not both:")
> >
> >year <- sub("-.*", "", meta$Date)
> >note <- sprintf("R package version %s", meta$Version)
> >
> >citEntry(entry = "manual",
> >   title          = "raytracing: An R package for identification and
> >tracking the atmospheric Rossby waves",
> >   author         = personList(c(person("Amanda", "Rehbein"),
> >                    person("Tercio", "Ambrizzi"),
> >                    person("Sergio", "Ibarra-Espinosa"),
> >                    person("Livia M. M.", "Dutra"))),
> >   year           = year,
> >   url            = "https://github.com/salvatirehbein/raytracing",
> >   note          = note,
> >   textVersion  =
> >   paste0("Rehbein, A., Ambrizzi, T., Ibarra-Espinosa, S., Dutra, L. M.
> >M.: Rossby Wave Ray Tracing v", meta$Version, ".
> >https://github.com/salvatirehbein/raytracing, ", year,".")
> >)
> >
> >citation(auto = meta)
> >
> >citFooter("Thanks")
> >
> >Ma?lle.
> >
> >
> >Den s?ndag 1 november 2020 21:29:54 CET, Amanda Rehbein
> ><amanda.rehbein at usp.br> skrev:
> >
> >
> >
> >
> >
> >Dear R-Devs,
> >
> >I was wondering if someone could please help me to with two errors when
> >submitting a package to CRAN.
> >
> >1) At the DESCRIPTION file I added some DOI's with curled brackets "<>"
> >inside the "<>" (e.g.
> ><doi:10.1175/1520-0469(1981)038<1179:TSLROA>2.0.CO;2>).
> >I tried URLencode() the string in R and copy/paste the output into
> >the DESCRIPTION file, like this:
> ><doi:10.1175/1520-0469(1981)038%3C1179:TSLROA%3E2.0.CO;2>. But when I
> >load,
> >build, check, etc, and ?raytracing the DOI does not appear correctly.
> >Everything after the first "%" disappeared and obviously, the DOI
> >doesn't
> >work anymore.
> >
> >
> >2) I have a CITATION file at the sub-directory ins. Its content is like
> >this:
> >
> >citHeader("To cite raytracing in publications use one of below:")
> >
> >citEntry(entry = "manual",
> >  title          = "Atmospheric Rossby waves identification and
> >tracking
> >with a raytracing numerical model",
> >  author        = personList(c(person("Amanda", "Rehbein"),
> >                    person("Tercio", "Ambrizzi"),
> >                    person("Sergio", "Ibarra-Espinosa"),
> >                    person("Livia M. M.", "Dutra"))),
> >  year          = "2020",
> >  url            = "https://github.com/salvatirehbein/raytracing",
> >
> >  textVersion  =
> >  paste0("Rehbein, A., Ambrizzi, T., Ibarra-Espinosa, S., Dutra, L. M.
> >M.:
> >Atmospheric Rossby waves identification and tracking with a raytracing
> >numerical model ", packageVersion("raytracing"), ".
> >https://github.com/salvatirehbein/raytracing, 2020.")
> >)
> >
> >It passes all checks and gives a-okay citation when I type
> >citation("raytracing"). However, it fails in the CRAN tests with the
> >following error message.
> >
> >Reading CITATION file fails with
> >    there is no package called 'raytracing'
> >  when package is not installed.
> >
> >I will be very thankful for any help with this! Best,
> >Amanda
> >
> >    [[alternative HTML version deleted]]
> >
> >______________________________________________
> >R-package-devel at r-project.org mailing list
> >https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
> >______________________________________________
> >R-package-devel at r-project.org mailing list
> >https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
> --
> Sent from my phone. Please excuse my brevity.
>


-- 
*Amanda Rehbein*
MSc Atmospheric Sciences
Department of Atmospheric Sciences,
University of S?o Paulo
Group of Climate Studies (GrEC) | http://www.grec.iag.usp.br
Rua do Mat?o, 1226 - Cidade Universit?ria, S?o Paulo - SP - Brazil -
05508-090
Skype: amanda_rehbein1 | Phone: +55 11 3091-2852

	[[alternative HTML version deleted]]


From p|on@ec@ @end|ng |rom uogue|ph@c@  Thu Nov  5 16:55:03 2020
From: p|on@ec@ @end|ng |rom uogue|ph@c@ (Pablo Fonseca)
Date: Thu, 5 Nov 2020 15:55:03 +0000
Subject: [R-pkg-devel] Error during automatic check for vignette re-building
 - The magick package is required to crop
Message-ID: <YTBPR01MB30702D1254E7EF814054D56ECCEE0@YTBPR01MB3070.CANPRD01.PROD.OUTLOOK.COM>

Dear all,

Currently I am trying to update my package (GALLO) with some small edits in the code. However, the package is not passing in the automatic check. I am getting only two warnings:

The first one is a warning related with the maintainer email (my email in the case), which is correct. I really think that this is not the cause of the package failure during the automatic checking.

The second warning is a problem during the vignette rebuilding. The warning is "The magick package is required to crop". In my first submission I didn't experience this error. In the recent submissions for updates, I included the magick package as a dependency of the package. However, this didn't fixed the issue. Additionally, I can't reproduce the errors in my machines, even when running R CMD check --as-cran. The error seems to be related with the lines 465-495 from the vignette. I double checked the code and introduced some small changes (such as reducing the figure dimensions).

Have ever someone faced a similar issue? However, it seems ineffective. Is there any possibility to be a false negative?

I am sending bellow the links for the check logs.

package GALLO_1.0.tar.gz does not pass the incoming checks automatically, please see the following pre-tests:
Windows: <https://win-builder.r-project.org/incoming_pretest/GALLO_1.0_20201105_154946/Windows/00check.log>
Status: 2 WARNINGs
Debian: <https://win-builder.r-project.org/incoming_pretest/GALLO_1.0_20201105_154946/Debian/00check.log>
Status: 2 WARNINGs

Last released version's CRAN status: ERROR: 1, WARN: 11
See: <https://CRAN.R-project.org/web/checks/check_results_GALLO.html>


Kind regards.


Pablo Augusto de Souza Fonseca, Ph.D.
Postdoctoral Fellow at University of Guelph
Centre for Genetic Improvement of Livestock
E pfonseca at uoguelph.ca  <mailto:pfonseca at uoguelph.ca>
W http://animalbiosciences.uoguelph.ca/abscpeople/pfonseca  <http://animalbiosciences.uoguelph.ca/abscpeople/pfonseca>

	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu Nov  5 17:22:42 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 5 Nov 2020 11:22:42 -0500
Subject: [R-pkg-devel] 
 Error during automatic check for vignette re-building
 - The magick package is required to crop
In-Reply-To: <YTBPR01MB30702D1254E7EF814054D56ECCEE0@YTBPR01MB3070.CANPRD01.PROD.OUTLOOK.COM>
References: <YTBPR01MB30702D1254E7EF814054D56ECCEE0@YTBPR01MB3070.CANPRD01.PROD.OUTLOOK.COM>
Message-ID: <376dc5c4-95d1-11ae-0eaf-c43544e87d12@gmail.com>

On 05/11/2020 10:55 a.m., Pablo Fonseca wrote:
> Dear all,
> 
> Currently I am trying to update my package (GALLO) with some small edits in the code. However, the package is not passing in the automatic check. I am getting only two warnings:
> 
> The first one is a warning related with the maintainer email (my email in the case), which is correct. I really think that this is not the cause of the package failure during the automatic checking.

The first one is actually about your version number:  you called it 
version 1.0, but CRAN already has 1.0.  You need to increase the number.


> 
> The second warning is a problem during the vignette rebuilding. The warning is "The magick package is required to crop". In my first submission I didn't experience this error. In the recent submissions for updates, I included the magick package as a dependency of the package. However, this didn't fixed the issue. Additionally, I can't reproduce the errors in my machines, even when running R CMD check --as-cran. The error seems to be related with the lines 465-495 from the vignette. I double checked the code and introduced some small changes (such as reducing the figure dimensions).

I am not sure about this one; I'd need to look at the package to check. 
Is it on Github?

Duncan Murdoch

> 
> Have ever someone faced a similar issue? However, it seems ineffective. Is there any possibility to be a false negative?
> 
> I am sending bellow the links for the check logs.
> 
> package GALLO_1.0.tar.gz does not pass the incoming checks automatically, please see the following pre-tests:
> Windows: <https://win-builder.r-project.org/incoming_pretest/GALLO_1.0_20201105_154946/Windows/00check.log>
> Status: 2 WARNINGs
> Debian: <https://win-builder.r-project.org/incoming_pretest/GALLO_1.0_20201105_154946/Debian/00check.log>
> Status: 2 WARNINGs
> 
> Last released version's CRAN status: ERROR: 1, WARN: 11
> See: <https://CRAN.R-project.org/web/checks/check_results_GALLO.html>
> 
> 
> Kind regards.
> 
> 
> Pablo Augusto de Souza Fonseca, Ph.D.
> Postdoctoral Fellow at University of Guelph
> Centre for Genetic Improvement of Livestock
> E pfonseca at uoguelph.ca  <mailto:pfonseca at uoguelph.ca>
> W http://animalbiosciences.uoguelph.ca/abscpeople/pfonseca  <http://animalbiosciences.uoguelph.ca/abscpeople/pfonseca>
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From p|on@ec@ @end|ng |rom uogue|ph@c@  Thu Nov  5 17:27:46 2020
From: p|on@ec@ @end|ng |rom uogue|ph@c@ (Pablo Fonseca)
Date: Thu, 5 Nov 2020 16:27:46 +0000
Subject: [R-pkg-devel] 
 Error during automatic check for vignette re-building
 - The magick package is required to crop
In-Reply-To: <376dc5c4-95d1-11ae-0eaf-c43544e87d12@gmail.com>
References: <YTBPR01MB30702D1254E7EF814054D56ECCEE0@YTBPR01MB3070.CANPRD01.PROD.OUTLOOK.COM>,
 <376dc5c4-95d1-11ae-0eaf-c43544e87d12@gmail.com>
Message-ID: <YTBPR01MB30703BF6A4FB811699DFF43FCCEE0@YTBPR01MB3070.CANPRD01.PROD.OUTLOOK.COM>

Dear Duncan Murdoch,

Thank you for the quickly reply. Yes, the package is on Github. Any comment or suggestion will be very welcome.

https://github.com/pablobio/GALLO

Kind regards.

Pablo Augusto de Souza Fonseca, Ph.D.
Postdoctoral Fellow at University of Guelph
Centre for Genetic Improvement of Livestock
E pfonseca at uoguelph.ca  <mailto:pfonseca at uoguelph.ca>
W http://animalbiosciences.uoguelph.ca/abscpeople/pfonseca  <http://animalbiosciences.uoguelph.ca/abscpeople/pfonseca>
________________________________
From: Duncan Murdoch <murdoch.duncan at gmail.com>
Sent: Thursday, November 5, 2020 11:22 AM
To: Pablo Fonseca <pfonseca at uoguelph.ca>; r-package-devel at r-project.org <r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] Error during automatic check for vignette re-building - The magick package is required to crop

CAUTION: This email originated from outside of the University of Guelph. Do not click links or open attachments unless you recognize the sender and know the content is safe. If in doubt, forward suspicious emails to IThelp at uoguelph.ca


On 05/11/2020 10:55 a.m., Pablo Fonseca wrote:
> Dear all,
>
> Currently I am trying to update my package (GALLO) with some small edits in the code. However, the package is not passing in the automatic check. I am getting only two warnings:
>
> The first one is a warning related with the maintainer email (my email in the case), which is correct. I really think that this is not the cause of the package failure during the automatic checking.

The first one is actually about your version number:  you called it
version 1.0, but CRAN already has 1.0.  You need to increase the number.


>
> The second warning is a problem during the vignette rebuilding. The warning is "The magick package is required to crop". In my first submission I didn't experience this error. In the recent submissions for updates, I included the magick package as a dependency of the package. However, this didn't fixed the issue. Additionally, I can't reproduce the errors in my machines, even when running R CMD check --as-cran. The error seems to be related with the lines 465-495 from the vignette. I double checked the code and introduced some small changes (such as reducing the figure dimensions).

I am not sure about this one; I'd need to look at the package to check.
Is it on Github?

Duncan Murdoch

>
> Have ever someone faced a similar issue? However, it seems ineffective. Is there any possibility to be a false negative?
>
> I am sending bellow the links for the check logs.
>
> package GALLO_1.0.tar.gz does not pass the incoming checks automatically, please see the following pre-tests:
> Windows: <https://win-builder.r-project.org/incoming_pretest/GALLO_1.0_20201105_154946/Windows/00check.log>
> Status: 2 WARNINGs
> Debian: <https://win-builder.r-project.org/incoming_pretest/GALLO_1.0_20201105_154946/Debian/00check.log>
> Status: 2 WARNINGs
>
> Last released version's CRAN status: ERROR: 1, WARN: 11
> See: <https://CRAN.R-project.org/web/checks/check_results_GALLO.html>
>
>
> Kind regards.
>
>
> Pablo Augusto de Souza Fonseca, Ph.D.
> Postdoctoral Fellow at University of Guelph
> Centre for Genetic Improvement of Livestock
> E pfonseca at uoguelph.ca  <mailto:pfonseca at uoguelph.ca>
> W http://animalbiosciences.uoguelph.ca/abscpeople/pfonseca  <http://animalbiosciences.uoguelph.ca/abscpeople/pfonseca>
>
>        [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


	[[alternative HTML version deleted]]


From ||u|@@rev|||@ @end|ng |rom gm@||@com  Thu Nov  5 17:38:59 2020
From: ||u|@@rev|||@ @end|ng |rom gm@||@com (=?UTF-8?Q?Llu=C3=ADs_Revilla?=)
Date: Thu, 5 Nov 2020 17:38:59 +0100
Subject: [R-pkg-devel] 
 Error during automatic check for vignette re-building
 - The magick package is required to crop
In-Reply-To: <YTBPR01MB30703BF6A4FB811699DFF43FCCEE0@YTBPR01MB3070.CANPRD01.PROD.OUTLOOK.COM>
References: <YTBPR01MB30702D1254E7EF814054D56ECCEE0@YTBPR01MB3070.CANPRD01.PROD.OUTLOOK.COM>
 <376dc5c4-95d1-11ae-0eaf-c43544e87d12@gmail.com>
 <YTBPR01MB30703BF6A4FB811699DFF43FCCEE0@YTBPR01MB3070.CANPRD01.PROD.OUTLOOK.COM>
Message-ID: <CAN+W6_tA=xqcZ8js8Jri4AAUCh_TLzcV3EujHpd602JWXpRo1w@mail.gmail.com>

Hi Pablo,

"The magick package is required to crop"  is related to using
BiocStyle for your vignette. Not sure what causes it, but I reported
this error some time ago:
https://github.com/Bioconductor/BiocStyle/issues/77.
On related issues and on bioc-devel mailing list
(https://stat.ethz.ch/pipermail/bioc-devel/2020-April/016656.html) it
is mentioned to use knitr::opts_chunk$set(crop = NULL) to solve it.
If the package is intended for CRAN I would recommend not using
BiocStyle template, which would also solve this.

Best,

Llu?s

On Thu, 5 Nov 2020 at 17:28, Pablo Fonseca <pfonseca at uoguelph.ca> wrote:
>
> Dear Duncan Murdoch,
>
> Thank you for the quickly reply. Yes, the package is on Github. Any comment or suggestion will be very welcome.
>
> https://github.com/pablobio/GALLO
>
> Kind regards.
>
> Pablo Augusto de Souza Fonseca, Ph.D.
> Postdoctoral Fellow at University of Guelph
> Centre for Genetic Improvement of Livestock
> E pfonseca at uoguelph.ca  <mailto:pfonseca at uoguelph.ca>
> W http://animalbiosciences.uoguelph.ca/abscpeople/pfonseca  <http://animalbiosciences.uoguelph.ca/abscpeople/pfonseca>
> ________________________________
> From: Duncan Murdoch <murdoch.duncan at gmail.com>
> Sent: Thursday, November 5, 2020 11:22 AM
> To: Pablo Fonseca <pfonseca at uoguelph.ca>; r-package-devel at r-project.org <r-package-devel at r-project.org>
> Subject: Re: [R-pkg-devel] Error during automatic check for vignette re-building - The magick package is required to crop
>
> CAUTION: This email originated from outside of the University of Guelph. Do not click links or open attachments unless you recognize the sender and know the content is safe. If in doubt, forward suspicious emails to IThelp at uoguelph.ca
>
>
> On 05/11/2020 10:55 a.m., Pablo Fonseca wrote:
> > Dear all,
> >
> > Currently I am trying to update my package (GALLO) with some small edits in the code. However, the package is not passing in the automatic check. I am getting only two warnings:
> >
> > The first one is a warning related with the maintainer email (my email in the case), which is correct. I really think that this is not the cause of the package failure during the automatic checking.
>
> The first one is actually about your version number:  you called it
> version 1.0, but CRAN already has 1.0.  You need to increase the number.
>
>
> >
> > The second warning is a problem during the vignette rebuilding. The warning is "The magick package is required to crop". In my first submission I didn't experience this error. In the recent submissions for updates, I included the magick package as a dependency of the package. However, this didn't fixed the issue. Additionally, I can't reproduce the errors in my machines, even when running R CMD check --as-cran. The error seems to be related with the lines 465-495 from the vignette. I double checked the code and introduced some small changes (such as reducing the figure dimensions).
>
> I am not sure about this one; I'd need to look at the package to check.
> Is it on Github?
>
> Duncan Murdoch
>
> >
> > Have ever someone faced a similar issue? However, it seems ineffective. Is there any possibility to be a false negative?
> >
> > I am sending bellow the links for the check logs.
> >
> > package GALLO_1.0.tar.gz does not pass the incoming checks automatically, please see the following pre-tests:
> > Windows: <https://win-builder.r-project.org/incoming_pretest/GALLO_1.0_20201105_154946/Windows/00check.log>
> > Status: 2 WARNINGs
> > Debian: <https://win-builder.r-project.org/incoming_pretest/GALLO_1.0_20201105_154946/Debian/00check.log>
> > Status: 2 WARNINGs
> >
> > Last released version's CRAN status: ERROR: 1, WARN: 11
> > See: <https://CRAN.R-project.org/web/checks/check_results_GALLO.html>
> >
> >
> > Kind regards.
> >
> >
> > Pablo Augusto de Souza Fonseca, Ph.D.
> > Postdoctoral Fellow at University of Guelph
> > Centre for Genetic Improvement of Livestock
> > E pfonseca at uoguelph.ca  <mailto:pfonseca at uoguelph.ca>
> > W http://animalbiosciences.uoguelph.ca/abscpeople/pfonseca  <http://animalbiosciences.uoguelph.ca/abscpeople/pfonseca>
> >
> >        [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From p|on@ec@ @end|ng |rom uogue|ph@c@  Thu Nov  5 22:00:24 2020
From: p|on@ec@ @end|ng |rom uogue|ph@c@ (Pablo Fonseca)
Date: Thu, 5 Nov 2020 21:00:24 +0000
Subject: [R-pkg-devel] 
 Error during automatic check for vignette re-building
 - The magick package is required to crop
In-Reply-To: <CAN+W6_tA=xqcZ8js8Jri4AAUCh_TLzcV3EujHpd602JWXpRo1w@mail.gmail.com>
References: <YTBPR01MB30702D1254E7EF814054D56ECCEE0@YTBPR01MB3070.CANPRD01.PROD.OUTLOOK.COM>
 <376dc5c4-95d1-11ae-0eaf-c43544e87d12@gmail.com>
 <YTBPR01MB30703BF6A4FB811699DFF43FCCEE0@YTBPR01MB3070.CANPRD01.PROD.OUTLOOK.COM>,
 <CAN+W6_tA=xqcZ8js8Jri4AAUCh_TLzcV3EujHpd602JWXpRo1w@mail.gmail.com>
Message-ID: <YTBPR01MB3070E6E2368BA2BD252AE946CCEE0@YTBPR01MB3070.CANPRD01.PROD.OUTLOOK.COM>

Dear Llu?s Revilla,

Thank you very much for the comments and suggestions. I changed the vignette format from the BiocStyle to a regular html. However, I am still getting an error.  Now, the error is "Input vector too short" and it is related with the same code chunk lines 465-506.

I can't figure out a possible reason for this issue. Any comment or suggestion will be very welcome.

Kind regards.


Pablo Augusto de Souza Fonseca, Ph.D.
Postdoctoral Fellow at University of Guelph
Centre for Genetic Improvement of Livestock
E pfonseca at uoguelph.ca  <mailto:pfonseca at uoguelph.ca>
W http://animalbiosciences.uoguelph.ca/abscpeople/pfonseca  <http://animalbiosciences.uoguelph.ca/abscpeople/pfonseca>
________________________________
From: Llu?s Revilla <lluis.revilla at gmail.com>
Sent: Thursday, November 5, 2020 11:38 AM
To: Pablo Fonseca <pfonseca at uoguelph.ca>
Cc: Duncan Murdoch <murdoch.duncan at gmail.com>; r-package-devel at r-project.org <r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] Error during automatic check for vignette re-building - The magick package is required to crop

CAUTION: This email originated from outside of the University of Guelph. Do not click links or open attachments unless you recognize the sender and know the content is safe. If in doubt, forward suspicious emails to IThelp at uoguelph.ca


Hi Pablo,

"The magick package is required to crop"  is related to using
BiocStyle for your vignette. Not sure what causes it, but I reported
this error some time ago:
https://github.com/Bioconductor/BiocStyle/issues/77.
On related issues and on bioc-devel mailing list
(https://stat.ethz.ch/pipermail/bioc-devel/2020-April/016656.html) it
is mentioned to use knitr::opts_chunk$set(crop = NULL) to solve it.
If the package is intended for CRAN I would recommend not using
BiocStyle template, which would also solve this.

Best,

Llu?s

On Thu, 5 Nov 2020 at 17:28, Pablo Fonseca <pfonseca at uoguelph.ca> wrote:
>
> Dear Duncan Murdoch,
>
> Thank you for the quickly reply. Yes, the package is on Github. Any comment or suggestion will be very welcome.
>
> https://github.com/pablobio/GALLO
>
> Kind regards.
>
> Pablo Augusto de Souza Fonseca, Ph.D.
> Postdoctoral Fellow at University of Guelph
> Centre for Genetic Improvement of Livestock
> E pfonseca at uoguelph.ca  <mailto:pfonseca at uoguelph.ca>
> W http://animalbiosciences.uoguelph.ca/abscpeople/pfonseca  <http://animalbiosciences.uoguelph.ca/abscpeople/pfonseca>
> ________________________________
> From: Duncan Murdoch <murdoch.duncan at gmail.com>
> Sent: Thursday, November 5, 2020 11:22 AM
> To: Pablo Fonseca <pfonseca at uoguelph.ca>; r-package-devel at r-project.org <r-package-devel at r-project.org>
> Subject: Re: [R-pkg-devel] Error during automatic check for vignette re-building - The magick package is required to crop
>
> CAUTION: This email originated from outside of the University of Guelph. Do not click links or open attachments unless you recognize the sender and know the content is safe. If in doubt, forward suspicious emails to IThelp at uoguelph.ca
>
>
> On 05/11/2020 10:55 a.m., Pablo Fonseca wrote:
> > Dear all,
> >
> > Currently I am trying to update my package (GALLO) with some small edits in the code. However, the package is not passing in the automatic check. I am getting only two warnings:
> >
> > The first one is a warning related with the maintainer email (my email in the case), which is correct. I really think that this is not the cause of the package failure during the automatic checking.
>
> The first one is actually about your version number:  you called it
> version 1.0, but CRAN already has 1.0.  You need to increase the number.
>
>
> >
> > The second warning is a problem during the vignette rebuilding. The warning is "The magick package is required to crop". In my first submission I didn't experience this error. In the recent submissions for updates, I included the magick package as a dependency of the package. However, this didn't fixed the issue. Additionally, I can't reproduce the errors in my machines, even when running R CMD check --as-cran. The error seems to be related with the lines 465-495 from the vignette. I double checked the code and introduced some small changes (such as reducing the figure dimensions).
>
> I am not sure about this one; I'd need to look at the package to check.
> Is it on Github?
>
> Duncan Murdoch
>
> >
> > Have ever someone faced a similar issue? However, it seems ineffective. Is there any possibility to be a false negative?
> >
> > I am sending bellow the links for the check logs.
> >
> > package GALLO_1.0.tar.gz does not pass the incoming checks automatically, please see the following pre-tests:
> > Windows: <https://win-builder.r-project.org/incoming_pretest/GALLO_1.0_20201105_154946/Windows/00check.log>
> > Status: 2 WARNINGs
> > Debian: <https://win-builder.r-project.org/incoming_pretest/GALLO_1.0_20201105_154946/Debian/00check.log>
> > Status: 2 WARNINGs
> >
> > Last released version's CRAN status: ERROR: 1, WARN: 11
> > See: <https://CRAN.R-project.org/web/checks/check_results_GALLO.html>
> >
> >
> > Kind regards.
> >
> >
> > Pablo Augusto de Souza Fonseca, Ph.D.
> > Postdoctoral Fellow at University of Guelph
> > Centre for Genetic Improvement of Livestock
> > E pfonseca at uoguelph.ca  <mailto:pfonseca at uoguelph.ca>
> > W http://animalbiosciences.uoguelph.ca/abscpeople/pfonseca  <http://animalbiosciences.uoguelph.ca/abscpeople/pfonseca>
> >
> >        [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

	[[alternative HTML version deleted]]


From ||u|@@rev|||@ @end|ng |rom gm@||@com  Thu Nov  5 23:19:28 2020
From: ||u|@@rev|||@ @end|ng |rom gm@||@com (=?UTF-8?Q?Llu=C3=ADs_Revilla?=)
Date: Thu, 5 Nov 2020 23:19:28 +0100
Subject: [R-pkg-devel] 
 Error during automatic check for vignette re-building
 - The magick package is required to crop
In-Reply-To: <YTBPR01MB3070E6E2368BA2BD252AE946CCEE0@YTBPR01MB3070.CANPRD01.PROD.OUTLOOK.COM>
References: <YTBPR01MB30702D1254E7EF814054D56ECCEE0@YTBPR01MB3070.CANPRD01.PROD.OUTLOOK.COM>
 <376dc5c4-95d1-11ae-0eaf-c43544e87d12@gmail.com>
 <YTBPR01MB30703BF6A4FB811699DFF43FCCEE0@YTBPR01MB3070.CANPRD01.PROD.OUTLOOK.COM>
 <CAN+W6_tA=xqcZ8js8Jri4AAUCh_TLzcV3EujHpd602JWXpRo1w@mail.gmail.com>
 <YTBPR01MB3070E6E2368BA2BD252AE946CCEE0@YTBPR01MB3070.CANPRD01.PROD.OUTLOOK.COM>
Message-ID: <CAN+W6_uZ0PrfKT7Vs_QdYUJwZdHWeoAzvXBnCwRAEWtb9truew@mail.gmail.com>

Dear Pablo,

Sometimes when building a vignette the lines reported are a bit off (I
usually check the code above and below those lines).
I could reproduce the error on R 4.0.1, the error is triggered on
lines 515-519 on the following code:

relationship_plot(qtl_file=out.qtls.filtered, x="Abbrev", y="Ref_ID",
cex=1,gap=2.5,degree = 60,
canvas.xlim = c(-5, 5),
canvas.ylim = c(-3, 3),
grid.col = color.grid)

Hope you can solve it.

Cheers,

Llu?s


On Thu, 5 Nov 2020 at 22:00, Pablo Fonseca <pfonseca at uoguelph.ca> wrote:
>
> Dear Llu?s Revilla,
>
> Thank you very much for the comments and suggestions. I changed the vignette format from the BiocStyle to a regular html. However, I am still getting an error.  Now, the error is "Input vector too short" and it is related with the same code chunk lines 465-506.
>
> I can't figure out a possible reason for this issue. Any comment or suggestion will be very welcome.
>
> Kind regards.
>
>
> Pablo Augusto de Souza Fonseca, Ph.D.
> Postdoctoral Fellow at University of Guelph
> Centre for Genetic Improvement of Livestock
> E pfonseca at uoguelph.ca
> W http://animalbiosciences.uoguelph.ca/abscpeople/pfonseca
> ________________________________
> From: Llu?s Revilla <lluis.revilla at gmail.com>
> Sent: Thursday, November 5, 2020 11:38 AM
> To: Pablo Fonseca <pfonseca at uoguelph.ca>
> Cc: Duncan Murdoch <murdoch.duncan at gmail.com>; r-package-devel at r-project.org <r-package-devel at r-project.org>
> Subject: Re: [R-pkg-devel] Error during automatic check for vignette re-building - The magick package is required to crop
>
> CAUTION: This email originated from outside of the University of Guelph. Do not click links or open attachments unless you recognize the sender and know the content is safe. If in doubt, forward suspicious emails to IThelp at uoguelph.ca
>
>
> Hi Pablo,
>
> "The magick package is required to crop"  is related to using
> BiocStyle for your vignette. Not sure what causes it, but I reported
> this error some time ago:
> https://github.com/Bioconductor/BiocStyle/issues/77.
> On related issues and on bioc-devel mailing list
> (https://stat.ethz.ch/pipermail/bioc-devel/2020-April/016656.html) it
> is mentioned to use knitr::opts_chunk$set(crop = NULL) to solve it.
> If the package is intended for CRAN I would recommend not using
> BiocStyle template, which would also solve this.
>
> Best,
>
> Llu?s
>
> On Thu, 5 Nov 2020 at 17:28, Pablo Fonseca <pfonseca at uoguelph.ca> wrote:
> >
> > Dear Duncan Murdoch,
> >
> > Thank you for the quickly reply. Yes, the package is on Github. Any comment or suggestion will be very welcome.
> >
> > https://github.com/pablobio/GALLO
> >
> > Kind regards.
> >
> > Pablo Augusto de Souza Fonseca, Ph.D.
> > Postdoctoral Fellow at University of Guelph
> > Centre for Genetic Improvement of Livestock
> > E pfonseca at uoguelph.ca  <mailto:pfonseca at uoguelph.ca>
> > W http://animalbiosciences.uoguelph.ca/abscpeople/pfonseca  <http://animalbiosciences.uoguelph.ca/abscpeople/pfonseca>
> > ________________________________
> > From: Duncan Murdoch <murdoch.duncan at gmail.com>
> > Sent: Thursday, November 5, 2020 11:22 AM
> > To: Pablo Fonseca <pfonseca at uoguelph.ca>; r-package-devel at r-project.org <r-package-devel at r-project.org>
> > Subject: Re: [R-pkg-devel] Error during automatic check for vignette re-building - The magick package is required to crop
> >
> > CAUTION: This email originated from outside of the University of Guelph. Do not click links or open attachments unless you recognize the sender and know the content is safe. If in doubt, forward suspicious emails to IThelp at uoguelph.ca
> >
> >
> > On 05/11/2020 10:55 a.m., Pablo Fonseca wrote:
> > > Dear all,
> > >
> > > Currently I am trying to update my package (GALLO) with some small edits in the code. However, the package is not passing in the automatic check. I am getting only two warnings:
> > >
> > > The first one is a warning related with the maintainer email (my email in the case), which is correct. I really think that this is not the cause of the package failure during the automatic checking.
> >
> > The first one is actually about your version number:  you called it
> > version 1.0, but CRAN already has 1.0.  You need to increase the number.
> >
> >
> > >
> > > The second warning is a problem during the vignette rebuilding. The warning is "The magick package is required to crop". In my first submission I didn't experience this error. In the recent submissions for updates, I included the magick package as a dependency of the package. However, this didn't fixed the issue. Additionally, I can't reproduce the errors in my machines, even when running R CMD check --as-cran. The error seems to be related with the lines 465-495 from the vignette. I double checked the code and introduced some small changes (such as reducing the figure dimensions).
> >
> > I am not sure about this one; I'd need to look at the package to check.
> > Is it on Github?
> >
> > Duncan Murdoch
> >
> > >
> > > Have ever someone faced a similar issue? However, it seems ineffective. Is there any possibility to be a false negative?
> > >
> > > I am sending bellow the links for the check logs.
> > >
> > > package GALLO_1.0.tar.gz does not pass the incoming checks automatically, please see the following pre-tests:
> > > Windows: <https://win-builder.r-project.org/incoming_pretest/GALLO_1.0_20201105_154946/Windows/00check.log>
> > > Status: 2 WARNINGs
> > > Debian: <https://win-builder.r-project.org/incoming_pretest/GALLO_1.0_20201105_154946/Debian/00check.log>
> > > Status: 2 WARNINGs
> > >
> > > Last released version's CRAN status: ERROR: 1, WARN: 11
> > > See: <https://CRAN.R-project.org/web/checks/check_results_GALLO.html>
> > >
> > >
> > > Kind regards.
> > >
> > >
> > > Pablo Augusto de Souza Fonseca, Ph.D.
> > > Postdoctoral Fellow at University of Guelph
> > > Centre for Genetic Improvement of Livestock
> > > E pfonseca at uoguelph.ca  <mailto:pfonseca at uoguelph.ca>
> > > W http://animalbiosciences.uoguelph.ca/abscpeople/pfonseca  <http://animalbiosciences.uoguelph.ca/abscpeople/pfonseca>
> > >
> > >        [[alternative HTML version deleted]]
> > >
> > > ______________________________________________
> > > R-package-devel at r-project.org mailing list
> > > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> > >
> >
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel


From @ch@r@@k@h|t @end|ng |rom gm@||@com  Mon Nov  9 19:24:54 2020
From: @ch@r@@k@h|t @end|ng |rom gm@||@com (Akshit Achara)
Date: Mon, 9 Nov 2020 23:54:54 +0530
Subject: [R-pkg-devel] Package Submission to CRAN
Message-ID: <CAJ=u__O2KZ0iajdn4CO2m6MdhAe9pG9m-LJQkpwuDAMiZpaN-w@mail.gmail.com>

Hey everyone,

I have created a package rminizinc
<https://github.com/acharaakshit/RMiniZinc> that depends on a third party
C++ API
which is used in some of the Rcpp files. The third party header files need
to be present for their compilation or the package doesn't install.

I wish to submit the package to CRAN but the CRAN servers will not have
the third party library. Is there any way I can install the package without
having the third party library on my system?

Thanks,
Akshit Achara

	[[alternative HTML version deleted]]


From w@ngz1 @end|ng |rom uth@c@@@edu  Tue Nov 10 00:26:16 2020
From: w@ngz1 @end|ng |rom uth@c@@@edu (Wang, Zhu)
Date: Mon, 9 Nov 2020 23:26:16 +0000
Subject: [R-pkg-devel] Error(s) in re-building vignettes
Message-ID: <SN6PR10MB24321007D7B64F74BF5E67CC9FEA0@SN6PR10MB2432.namprd10.prod.outlook.com>

Hello,

I got an e-mail response with warnings on an R package submitted to CRAN.  So I made some changes to the package, after testing successfully with R CMD check -as-cran, then used r-hub for testing. On one of the systems, there were error/warnings on vignettes:

! LaTeX Error: File `framed.sty' not found. ! Emergency stop. <read *> Error: processing vignette 'ccsvmExample.Rmd' failed with diagnostics: LaTeX failed to compile /home/docker/mpath.Rcheck/vign_test/mpath/vignettes/ccsvmExample.tex. See https://yihui.org/tinytex/r/#debugging for debugging tips. See ccsvmExample.log for more info. --- failed re-building 'ccsvmExample.Rmd'

https://builder.r-hub.io/status/original/mpath_0.4-2.16.tar.gz-6dfdccd06155455db6054cd9e4e98ab0

Package mpath can be found below:

artifacts<https://artifacts.r-hub.io/mpath_0.4-2.16.tar.gz-6dfdccd06155455db6054cd9e4e98ab0>

Could somebody please help?

Thanks,
Zhu

	[[alternative HTML version deleted]]


From kev|n@r@coombe@ @end|ng |rom gm@||@com  Wed Nov 11 14:44:34 2020
From: kev|n@r@coombe@ @end|ng |rom gm@||@com (Kevin R. Coombes)
Date: Wed, 11 Nov 2020 08:44:34 -0500
Subject: [R-pkg-devel] Strange error from CRAN on package submission
Message-ID: <4e8f1ec8-d3a6-abb2-f81c-d33f8a708738@gmail.com>

Hi,

I am trying to figure out how to fix warnings from two of the CRAN 
machines on the submission of an update to a package. The only change to 
my package was to add a "show" method to one of the S4 classes, which 
was requested by a reviewer of the paper we submitted. The inability to 
get this updated package into CRAN? is the only thing holding up the 
revision (and probable acceptance) of the manuscript.

The same "warnings"s were found in the previous version. The package is 
called Mercator, and the CRAN check results from the? last version are here:
 ? https://cran.r-project.org/web/checks/check_results_Mercator.html

I get warnings from the two fedora machine instances (clang and gcc). 
They both report

> Check: whether package can be  installed.
> Result: WARN
>? ?? Found the following significant  warnings:
>? ?? Warning: namespace ?flexmix? is  not available and has been replaced
 >
 > Check: data for non-ASCII characters
> Result: WARN
>? ??? Warning: namespace 'flexmix'  is not available and has been replaced
>? ??? by .GlobalEnv when processing  object '<unknown>'

The relationships in the DESCRIPTION files are:

1. Mercator depends on Thresher
2. Thresher imports moVMF
3. moMVF suggests flexmix

On my Windows machine, the package builds and installs with no errors or 
warnings even if flexmix is not available (which I believe to be the 
correct behavior). On R-Forge, both the Windows and LINUX versions build 
and install with no errors or warnings. On R-Hub, tested on multiple 
LINUX versions, the package builds and installs with no errors or warnings.

And flexmix is still clearly available from CRAN:
 ? https://cran.r-project.org/web/packages/flexmix/index.html

In the latest attempt to get things to work, I added
 ? Suggests: flexmix
into the DESCRIPTION file for Mercator, but this didn't help fix the 
problem on CRAN.

Is there anything I can do to fix this problem (other than moan here on 
this list and hope that CRAN can just install flexmix on those machines)?

Thanks in advance for your help,
 ? Kevin

	[[alternative HTML version deleted]]


From r@@y@|@14 @end|ng |rom |mper|@|@@c@uk  Wed Nov 11 17:05:46 2020
From: r@@y@|@14 @end|ng |rom |mper|@|@@c@uk (Ayala Hernandez, Rafael)
Date: Wed, 11 Nov 2020 16:05:46 +0000
Subject: [R-pkg-devel] Function editGrob not found unless grid is in Depends
Message-ID: <PR3PR06MB7115E372412AA1AB4D11DAC5CCE80@PR3PR06MB7115.eurprd06.prod.outlook.com>

Dear all,

I have recently been trying to write a plotting function where a external PNG file is drawn onto a ggmap object.

I managed to achieve this by using ggmap::inset , inputting as a grob the result of applying grid::rasterGrob to the image rotated with magick::image_rotate .

I therefore added ggmap, ggplot2, grid and magick to Imports in DESCRIPTION, and added the corresponding imports in NAMESPACE

However, when running R CMD check, I got an error saying 'could not find function editGrob', when running the example code for the mentioned plotting function.
I confirmed the error also happens if I install and load the package in a fresh R session.

If I then load explicitly grid through library(grid), the error disappears.

I tried to add explicitly importFrom("grid", editGrob) to NAMESPACE, but that made no difference.

I have only been able to solve the problem by adding "grid" to Depends in DESCRIPTION instead of Imports.

The code for the problematic plotting function can be found at https://github.com/Rafael-Ayala/openSkies/blob/main/R/openSkies_plottingFunctions.R (lines 61 to 91)

I would greatly appreciate if anybody could clarify why "grid" needs to be added to Depends in this case, and why not even adding NAMESPACE importFrom("grid", editGrob) fixes the problem if "grid" is left in Imports!

Thanks a lot in advance

Best wishes,

Rafa



	[[alternative HTML version deleted]]


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Wed Nov 11 17:14:42 2020
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Wed, 11 Nov 2020 17:14:42 +0100
Subject: [R-pkg-devel] Strange error from CRAN on package submission
In-Reply-To: <4e8f1ec8-d3a6-abb2-f81c-d33f8a708738@gmail.com>
References: <4e8f1ec8-d3a6-abb2-f81c-d33f8a708738@gmail.com>
Message-ID: <efc285c8-29a5-cbc4-621a-0796ed50fd19@statistik.tu-dortmund.de>

You have to suggest flexmix.

Best,
Uwe Ligges

On 11.11.2020 14:44, Kevin R. Coombes wrote:
> Hi,
> 
> I am trying to figure out how to fix warnings from two of the CRAN
> machines on the submission of an update to a package. The only change to
> my package was to add a "show" method to one of the S4 classes, which
> was requested by a reviewer of the paper we submitted. The inability to
> get this updated package into CRAN? is the only thing holding up the
> revision (and probable acceptance) of the manuscript.
> 
> The same "warnings"s were found in the previous version. The package is
> called Mercator, and the CRAN check results from the? last version are here:
>   ? https://cran.r-project.org/web/checks/check_results_Mercator.html
> 
> I get warnings from the two fedora machine instances (clang and gcc).
> They both report
> 
>> Check: whether package can be  installed.
>> Result: WARN
>>  ? ?? Found the following significant  warnings:
>>  ? ?? Warning: namespace ?flexmix? is  not available and has been replaced
>   >
>   > Check: data for non-ASCII characters
>> Result: WARN
>>  ? ??? Warning: namespace 'flexmix'  is not available and has been replaced
>>  ? ??? by .GlobalEnv when processing  object '<unknown>'
> 
> The relationships in the DESCRIPTION files are:
> 
> 1. Mercator depends on Thresher
> 2. Thresher imports moVMF
> 3. moMVF suggests flexmix
> 
> On my Windows machine, the package builds and installs with no errors or
> warnings even if flexmix is not available (which I believe to be the
> correct behavior). On R-Forge, both the Windows and LINUX versions build
> and install with no errors or warnings. On R-Hub, tested on multiple
> LINUX versions, the package builds and installs with no errors or warnings.
> 
> And flexmix is still clearly available from CRAN:
>   ? https://cran.r-project.org/web/packages/flexmix/index.html
> 
> In the latest attempt to get things to work, I added
>   ? Suggests: flexmix
> into the DESCRIPTION file for Mercator, but this didn't help fix the
> problem on CRAN.
> 
> Is there anything I can do to fix this problem (other than moan here on
> this list and hope that CRAN can just install flexmix on those machines)?
> 
> Thanks in advance for your help,
>   ? Kevin
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From murdoch@dunc@n @end|ng |rom gm@||@com  Wed Nov 11 17:30:50 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Wed, 11 Nov 2020 11:30:50 -0500
Subject: [R-pkg-devel] Strange error from CRAN on package submission
In-Reply-To: <4e8f1ec8-d3a6-abb2-f81c-d33f8a708738@gmail.com>
References: <4e8f1ec8-d3a6-abb2-f81c-d33f8a708738@gmail.com>
Message-ID: <afc6e7c4-1b8d-0fa4-3100-8849c1bc231f@gmail.com>

Uwe suggested you suggest flexmix, but I see below you already tried that.

I'd like to take a look, but I can't find your package.  The existing 
version on CRAN gives the URL as http://oompa.r-forge.r-project.org/, 
but I can't see it mentioned there.

Duncan Murdoch

On 11/11/2020 8:44 a.m., Kevin R. Coombes wrote:
> Hi,
> 
> I am trying to figure out how to fix warnings from two of the CRAN
> machines on the submission of an update to a package. The only change to
> my package was to add a "show" method to one of the S4 classes, which
> was requested by a reviewer of the paper we submitted. The inability to
> get this updated package into CRAN? is the only thing holding up the
> revision (and probable acceptance) of the manuscript.
> 
> The same "warnings"s were found in the previous version. The package is
> called Mercator, and the CRAN check results from the? last version are here:
>   ? https://cran.r-project.org/web/checks/check_results_Mercator.html
> 
> I get warnings from the two fedora machine instances (clang and gcc).
> They both report
> 
>> Check: whether package can be  installed.
>> Result: WARN
>>  ? ?? Found the following significant  warnings:
>>  ? ?? Warning: namespace ?flexmix? is  not available and has been replaced
>   >
>   > Check: data for non-ASCII characters
>> Result: WARN
>>  ? ??? Warning: namespace 'flexmix'  is not available and has been replaced
>>  ? ??? by .GlobalEnv when processing  object '<unknown>'
> 
> The relationships in the DESCRIPTION files are:
> 
> 1. Mercator depends on Thresher
> 2. Thresher imports moVMF
> 3. moMVF suggests flexmix
> 
> On my Windows machine, the package builds and installs with no errors or
> warnings even if flexmix is not available (which I believe to be the
> correct behavior). On R-Forge, both the Windows and LINUX versions build
> and install with no errors or warnings. On R-Hub, tested on multiple
> LINUX versions, the package builds and installs with no errors or warnings.
> 
> And flexmix is still clearly available from CRAN:
>   ? https://cran.r-project.org/web/packages/flexmix/index.html
> 
> In the latest attempt to get things to work, I added
>   ? Suggests: flexmix
> into the DESCRIPTION file for Mercator, but this didn't help fix the
> problem on CRAN.
> 
> Is there anything I can do to fix this problem (other than moan here on
> this list and hope that CRAN can just install flexmix on those machines)?
> 
> Thanks in advance for your help,
>   ? Kevin
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From kev|n@r@coombe@ @end|ng |rom gm@||@com  Wed Nov 11 17:33:38 2020
From: kev|n@r@coombe@ @end|ng |rom gm@||@com (Kevin R. Coombes)
Date: Wed, 11 Nov 2020 11:33:38 -0500
Subject: [R-pkg-devel] Strange error from CRAN on package submission
In-Reply-To: <efc285c8-29a5-cbc4-621a-0796ed50fd19@statistik.tu-dortmund.de>
References: <4e8f1ec8-d3a6-abb2-f81c-d33f8a708738@gmail.com>
 <efc285c8-29a5-cbc4-621a-0796ed50fd19@statistik.tu-dortmund.de>
Message-ID: <498454c2-e1a3-5936-d49e-48bb7115e672@gmail.com>

Hi Uwe,

Thanks for the suggestion. I thought of that idea last night, and tried 
it with the latest submission of version 0.11.4 of Mercator. That 
version is still in the submission queue waiting for manual inspection, 
but it gave the same error message. (See 
https://win-builder.r-project.org/incoming_pretest/Mercator_0.11.4_20201111_014655/Debian/00check.log)

I think I may try to "Import" or "Depend" on flexmix to force it to be 
available.

Is there some reason why my program should even need to know that 
flexmix is suggested several layers down the dependency hierarchy? For 
building and installing the package (or running R CMD check ---as-cran), 
I tried on my machine when flexmix is not even installed, and got no 
errors or warnings.

There is clearly something I don't understand about namespaces, and I'd 
like to learn it to avoid this kind of situation in the future.

Best,
 ? Kevin

On 11/11/2020 11:14 AM, Uwe Ligges wrote:
> You have to suggest flexmix.
>
> Best,
> Uwe Ligges
>
> On 11.11.2020 14:44, Kevin R. Coombes wrote:
>> Hi,
>>
>> I am trying to figure out how to fix warnings from two of the CRAN
>> machines on the submission of an update to a package. The only change to
>> my package was to add a "show" method to one of the S4 classes, which
>> was requested by a reviewer of the paper we submitted. The inability to
>> get this updated package into CRAN? is the only thing holding up the
>> revision (and probable acceptance) of the manuscript.
>>
>> The same "warnings"s were found in the previous version. The package is
>> called Mercator, and the CRAN check results from the? last version 
>> are here:
>> https://cran.r-project.org/web/checks/check_results_Mercator.html
>>
>> I get warnings from the two fedora machine instances (clang and gcc).
>> They both report
>>
>>> Check: whether package can be installed.
>>> Result: WARN
>>> ?? ?? Found the following significant? warnings:
>>> ?? ?? Warning: namespace ?flexmix? is? not available and has been 
>>> replaced
>> ? >
>> ? > Check: data for non-ASCII characters
>>> Result: WARN
>>> ?? ??? Warning: namespace 'flexmix'? is not available and has been 
>>> replaced
>>> ?? ??? by .GlobalEnv when processing? object '<unknown>'
>>
>> The relationships in the DESCRIPTION files are:
>>
>> 1. Mercator depends on Thresher
>> 2. Thresher imports moVMF
>> 3. moMVF suggests flexmix
>>
>> On my Windows machine, the package builds and installs with no errors or
>> warnings even if flexmix is not available (which I believe to be the
>> correct behavior). On R-Forge, both the Windows and LINUX versions build
>> and install with no errors or warnings. On R-Hub, tested on multiple
>> LINUX versions, the package builds and installs with no errors or 
>> warnings.
>>
>> And flexmix is still clearly available from CRAN:
>> ? ? https://cran.r-project.org/web/packages/flexmix/index.html
>>
>> In the latest attempt to get things to work, I added
>> ? ? Suggests: flexmix
>> into the DESCRIPTION file for Mercator, but this didn't help fix the
>> problem on CRAN.
>>
>> Is there anything I can do to fix this problem (other than moan here on
>> this list and hope that CRAN can just install flexmix on those 
>> machines)?
>>
>> Thanks in advance for your help,
>> ? ? Kevin
>>
>> ????[[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Wed Nov 11 17:34:42 2020
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Wed, 11 Nov 2020 17:34:42 +0100
Subject: [R-pkg-devel] Strange error from CRAN on package submission
In-Reply-To: <afc6e7c4-1b8d-0fa4-3100-8849c1bc231f@gmail.com>
References: <4e8f1ec8-d3a6-abb2-f81c-d33f8a708738@gmail.com>
 <afc6e7c4-1b8d-0fa4-3100-8849c1bc231f@gmail.com>
Message-ID: <299644b7-9fd3-6e5b-ff80-eac6f9f54670@statistik.tu-dortmund.de>

Next guess is that you need more, because you may have an object that 
needs the flexmix, so likely something S4 related? I can take a closer look.

Best,
Uwe Ligges





On 11.11.2020 17:30, Duncan Murdoch wrote:
> Uwe suggested you suggest flexmix, but I see below you already tried that.
> 
> I'd like to take a look, but I can't find your package.? The existing 
> version on CRAN gives the URL as http://oompa.r-forge.r-project.org/, 
> but I can't see it mentioned there.
> 
> Duncan Murdoch
> 
> On 11/11/2020 8:44 a.m., Kevin R. Coombes wrote:
>> Hi,
>>
>> I am trying to figure out how to fix warnings from two of the CRAN
>> machines on the submission of an update to a package. The only change to
>> my package was to add a "show" method to one of the S4 classes, which
>> was requested by a reviewer of the paper we submitted. The inability to
>> get this updated package into CRAN? is the only thing holding up the
>> revision (and probable acceptance) of the manuscript.
>>
>> The same "warnings"s were found in the previous version. The package is
>> called Mercator, and the CRAN check results from the? last version are 
>> here:
>> ? ? https://cran.r-project.org/web/checks/check_results_Mercator.html
>>
>> I get warnings from the two fedora machine instances (clang and gcc).
>> They both report
>>
>>> Check: whether package can be? installed.
>>> Result: WARN
>>> ?? ?? Found the following significant? warnings:
>>> ?? ?? Warning: namespace ?flexmix? is? not available and has been 
>>> replaced
>> ? >
>> ? > Check: data for non-ASCII characters
>>> Result: WARN
>>> ?? ??? Warning: namespace 'flexmix'? is not available and has been 
>>> replaced
>>> ?? ??? by .GlobalEnv when processing? object '<unknown>'
>>
>> The relationships in the DESCRIPTION files are:
>>
>> 1. Mercator depends on Thresher
>> 2. Thresher imports moVMF
>> 3. moMVF suggests flexmix
>>
>> On my Windows machine, the package builds and installs with no errors or
>> warnings even if flexmix is not available (which I believe to be the
>> correct behavior). On R-Forge, both the Windows and LINUX versions build
>> and install with no errors or warnings. On R-Hub, tested on multiple
>> LINUX versions, the package builds and installs with no errors or 
>> warnings.
>>
>> And flexmix is still clearly available from CRAN:
>> ? ? https://cran.r-project.org/web/packages/flexmix/index.html
>>
>> In the latest attempt to get things to work, I added
>> ? ? Suggests: flexmix
>> into the DESCRIPTION file for Mercator, but this didn't help fix the
>> problem on CRAN.
>>
>> Is there anything I can do to fix this problem (other than moan here on
>> this list and hope that CRAN can just install flexmix on those machines)?
>>
>> Thanks in advance for your help,
>> ? ? Kevin
>>
>> ????[[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From kev|n@r@coombe@ @end|ng |rom gm@||@com  Wed Nov 11 18:03:11 2020
From: kev|n@r@coombe@ @end|ng |rom gm@||@com (Kevin R. Coombes)
Date: Wed, 11 Nov 2020 12:03:11 -0500
Subject: [R-pkg-devel] Strange error from CRAN on package submission
In-Reply-To: <afc6e7c4-1b8d-0fa4-3100-8849c1bc231f@gmail.com>
References: <4e8f1ec8-d3a6-abb2-f81c-d33f8a708738@gmail.com>
 <afc6e7c4-1b8d-0fa4-3100-8849c1bc231f@gmail.com>
Message-ID: <02152688-7180-d168-c339-82e7f7c1bb38@gmail.com>

Hi Duncan,

Oops; I didn't realize I had forgotten to push updates to the OOMPA web 
site.

The code for Mercator is contained as part of the Thresher project in 
the subversion repository on R-Forge. 
(https://r-forge.r-project.org/projects/thresher/) It's under 
pkg/Mercator below that URL

Thanks,
 ? Kevin

On 11/11/2020 11:30 AM, Duncan Murdoch wrote:
> Uwe suggested you suggest flexmix, but I see below you already tried 
> that.
>
> I'd like to take a look, but I can't find your package.? The existing 
> version on CRAN gives the URL as http://oompa.r-forge.r-project.org/, 
> but I can't see it mentioned there.
>
> Duncan Murdoch
>
> On 11/11/2020 8:44 a.m., Kevin R. Coombes wrote:
>> Hi,
>>
>> I am trying to figure out how to fix warnings from two of the CRAN
>> machines on the submission of an update to a package. The only change to
>> my package was to add a "show" method to one of the S4 classes, which
>> was requested by a reviewer of the paper we submitted. The inability to
>> get this updated package into CRAN? is the only thing holding up the
>> revision (and probable acceptance) of the manuscript.
>>
>> The same "warnings"s were found in the previous version. The package is
>> called Mercator, and the CRAN check results from the? last version 
>> are here:
>> https://cran.r-project.org/web/checks/check_results_Mercator.html
>>
>> I get warnings from the two fedora machine instances (clang and gcc).
>> They both report
>>
>>> Check: whether package can be installed.
>>> Result: WARN
>>> ?? ?? Found the following significant? warnings:
>>> ?? ?? Warning: namespace ?flexmix? is? not available and has been 
>>> replaced
>> ? >
>> ? > Check: data for non-ASCII characters
>>> Result: WARN
>>> ?? ??? Warning: namespace 'flexmix'? is not available and has been 
>>> replaced
>>> ?? ??? by .GlobalEnv when processing? object '<unknown>'
>>
>> The relationships in the DESCRIPTION files are:
>>
>> 1. Mercator depends on Thresher
>> 2. Thresher imports moVMF
>> 3. moMVF suggests flexmix
>>
>> On my Windows machine, the package builds and installs with no errors or
>> warnings even if flexmix is not available (which I believe to be the
>> correct behavior). On R-Forge, both the Windows and LINUX versions build
>> and install with no errors or warnings. On R-Hub, tested on multiple
>> LINUX versions, the package builds and installs with no errors or 
>> warnings.
>>
>> And flexmix is still clearly available from CRAN:
>> ? ? https://cran.r-project.org/web/packages/flexmix/index.html
>>
>> In the latest attempt to get things to work, I added
>> ? ? Suggests: flexmix
>> into the DESCRIPTION file for Mercator, but this didn't help fix the
>> problem on CRAN.
>>
>> Is there anything I can do to fix this problem (other than moan here on
>> this list and hope that CRAN can just install flexmix on those 
>> machines)?
>>
>> Thanks in advance for your help,
>> ? ? Kevin
>>
>> ????[[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>


From murdoch@dunc@n @end|ng |rom gm@||@com  Wed Nov 11 19:07:22 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Wed, 11 Nov 2020 13:07:22 -0500
Subject: [R-pkg-devel] Strange error from CRAN on package submission
In-Reply-To: <02152688-7180-d168-c339-82e7f7c1bb38@gmail.com>
References: <4e8f1ec8-d3a6-abb2-f81c-d33f8a708738@gmail.com>
 <afc6e7c4-1b8d-0fa4-3100-8849c1bc231f@gmail.com>
 <02152688-7180-d168-c339-82e7f7c1bb38@gmail.com>
Message-ID: <218a0f23-1696-3083-252b-dd74c749b771@gmail.com>

Okay, I've tried testing on my Mac with R 4.0.3 and R-devel for the new 
one, 4.0.3 for the CRAN version.

I'm not seeing any check error with the CRAN version.  I get an error 
trying to check 0.11.4 from R-forge because I don't have flexmix 
installed.  If I take flexmix out of the Suggests list, it checks with 
no error on 4.0.3, but I get the error you saw on R-devel when checked 
with --as-cran.

I tried debugging this, and narrowed it down a bit.  It happens when 
your package is installed, in particular in the do_install_source() 
function in src/library/tools/R/install.R.  But that function runs a new 
R instance, and I didn't get to debugging that.  I'll try again later 
today if nobody else figures it out.

Duncan Murdoch




On 11/11/2020 12:03 p.m., Kevin R. Coombes wrote:
> Hi Duncan,
> 
> Oops; I didn't realize I had forgotten to push updates to the OOMPA web
> site.
> 
> The code for Mercator is contained as part of the Thresher project in
> the subversion repository on R-Forge.
> (https://r-forge.r-project.org/projects/thresher/) It's under
> pkg/Mercator below that URL
> 
> Thanks,
>   ? Kevin
> 
> On 11/11/2020 11:30 AM, Duncan Murdoch wrote:
>> Uwe suggested you suggest flexmix, but I see below you already tried
>> that.
>>
>> I'd like to take a look, but I can't find your package.? The existing
>> version on CRAN gives the URL as http://oompa.r-forge.r-project.org/,
>> but I can't see it mentioned there.
>>
>> Duncan Murdoch
>>
>> On 11/11/2020 8:44 a.m., Kevin R. Coombes wrote:
>>> Hi,
>>>
>>> I am trying to figure out how to fix warnings from two of the CRAN
>>> machines on the submission of an update to a package. The only change to
>>> my package was to add a "show" method to one of the S4 classes, which
>>> was requested by a reviewer of the paper we submitted. The inability to
>>> get this updated package into CRAN? is the only thing holding up the
>>> revision (and probable acceptance) of the manuscript.
>>>
>>> The same "warnings"s were found in the previous version. The package is
>>> called Mercator, and the CRAN check results from the? last version
>>> are here:
>>> https://cran.r-project.org/web/checks/check_results_Mercator.html
>>>
>>> I get warnings from the two fedora machine instances (clang and gcc).
>>> They both report
>>>
>>>> Check: whether package can be installed.
>>>> Result: WARN
>>>>  ?? ?? Found the following significant? warnings:
>>>>  ?? ?? Warning: namespace ?flexmix? is? not available and has been
>>>> replaced
>>>  ? >
>>>  ? > Check: data for non-ASCII characters
>>>> Result: WARN
>>>>  ?? ??? Warning: namespace 'flexmix'? is not available and has been
>>>> replaced
>>>>  ?? ??? by .GlobalEnv when processing? object '<unknown>'
>>>
>>> The relationships in the DESCRIPTION files are:
>>>
>>> 1. Mercator depends on Thresher
>>> 2. Thresher imports moVMF
>>> 3. moMVF suggests flexmix
>>>
>>> On my Windows machine, the package builds and installs with no errors or
>>> warnings even if flexmix is not available (which I believe to be the
>>> correct behavior). On R-Forge, both the Windows and LINUX versions build
>>> and install with no errors or warnings. On R-Hub, tested on multiple
>>> LINUX versions, the package builds and installs with no errors or
>>> warnings.
>>>
>>> And flexmix is still clearly available from CRAN:
>>>  ? ? https://cran.r-project.org/web/packages/flexmix/index.html
>>>
>>> In the latest attempt to get things to work, I added
>>>  ? ? Suggests: flexmix
>>> into the DESCRIPTION file for Mercator, but this didn't help fix the
>>> problem on CRAN.
>>>
>>> Is there anything I can do to fix this problem (other than moan here on
>>> this list and hope that CRAN can just install flexmix on those
>>> machines)?
>>>
>>> Thanks in advance for your help,
>>>  ? ? Kevin
>>>
>>>  ????[[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>>
>


From kev|n@r@coombe@ @end|ng |rom gm@||@com  Wed Nov 11 19:34:54 2020
From: kev|n@r@coombe@ @end|ng |rom gm@||@com (Kevin R. Coombes)
Date: Wed, 11 Nov 2020 13:34:54 -0500
Subject: [R-pkg-devel] Strange error from CRAN on package submission
In-Reply-To: <299644b7-9fd3-6e5b-ff80-eac6f9f54670@statistik.tu-dortmund.de>
References: <4e8f1ec8-d3a6-abb2-f81c-d33f8a708738@gmail.com>
 <afc6e7c4-1b8d-0fa4-3100-8849c1bc231f@gmail.com>
 <299644b7-9fd3-6e5b-ff80-eac6f9f54670@statistik.tu-dortmund.de>
Message-ID: <e432b7d9-ba7d-c159-ea20-de9c0d81f69b@gmail.com>

HI Uwe,

That might be the key observation. The change to Mercator in this 
package was to add a "show" method to an S4 class. In its NAMESPACE, the 
flexmix package also exports a "show" method.

Both "flexmix" and "Mercator" have an
 ? import("methods")
directive in their NAMESPACE files, which is where the base method for 
"show" comes from. Also, if you just type show at the command prompt to 
see the definition, you get the parenthetical note that
"(This generic function excludes non-simple inheritance' see ?setIs.)"
I don't completely understand what this parenthetical remark? means, but 
I have a suspicion that it is highly relevant to my problem.

If I run
 ? library("Mercator")
 ? showMethods("show")
on a system where flexmix is installed, then the "show" method for 
flexmix (and related objects) is listed, because the flexmix NAMESPACE 
has been attached. If I run the same code on an R system where flexmix 
is not installed, then, of course, neither the NAMESPACE nor the method 
is available.

I suspect (but am by no means certain) that the combination of that 
parenthetical remark above and the existence of the "show" method in the 
suggested package is why I am getting errors on some systems.

But I don't really understand why. My package doesn't need the flexmix 
version of show. And (as Uwe said in an earlier comment), I thought that 
"Suggests" isn't supposed to be inherited. I don't want the flexmix 
NAMESPACE attached, since nothing in my package nor in the packages I 
directly want (Thresher by "Depends" and then moVMF by "Imports") 
actually requires it.

Why does the flexmix NAMESPACE get attached if some other package down 
the line merely suggests it? Is that supposed to happen? To me, it feels 
like a bug in the sense that it surprises the user (i.e., the package 
developer). And I guess is potentially a bug for the ultimate user of 
the package, since it adds a NAMESPACE that was not specifically 
requested by the top level package being loaded.

In any event, what's the best advice now on how to proceed?

Thanks again,
 ? Kevin

On 11/11/2020 11:34 AM, Uwe Ligges wrote:
> Next guess is that you need more, because you may have an object that 
> needs the flexmix, so likely something S4 related? I can take a closer 
> look.
>
> Best,
> Uwe Ligges
>
>
>
>
>
> On 11.11.2020 17:30, Duncan Murdoch wrote:
>> Uwe suggested you suggest flexmix, but I see below you already tried 
>> that.
>>
>> I'd like to take a look, but I can't find your package.? The existing 
>> version on CRAN gives the URL as http://oompa.r-forge.r-project.org/, 
>> but I can't see it mentioned there.
>>
>> Duncan Murdoch
>>
>> On 11/11/2020 8:44 a.m., Kevin R. Coombes wrote:
>>> Hi,
>>>
>>> I am trying to figure out how to fix warnings from two of the CRAN
>>> machines on the submission of an update to a package. The only 
>>> change to
>>> my package was to add a "show" method to one of the S4 classes, which
>>> was requested by a reviewer of the paper we submitted. The inability to
>>> get this updated package into CRAN? is the only thing holding up the
>>> revision (and probable acceptance) of the manuscript.
>>>
>>> The same "warnings"s were found in the previous version. The package is
>>> called Mercator, and the CRAN check results from the? last version 
>>> are here:
>>> https://cran.r-project.org/web/checks/check_results_Mercator.html
>>>
>>> I get warnings from the two fedora machine instances (clang and gcc).
>>> They both report
>>>
>>>> Check: whether package can be installed.
>>>> Result: WARN
>>>> ?? ?? Found the following significant? warnings:
>>>> ?? ?? Warning: namespace ?flexmix? is? not available and has been 
>>>> replaced
>>> ? >
>>> ? > Check: data for non-ASCII characters
>>>> Result: WARN
>>>> ?? ??? Warning: namespace 'flexmix'? is not available and has been 
>>>> replaced
>>>> ?? ??? by .GlobalEnv when processing? object '<unknown>'
>>>
>>> The relationships in the DESCRIPTION files are:
>>>
>>> 1. Mercator depends on Thresher
>>> 2. Thresher imports moVMF
>>> 3. moMVF suggests flexmix
>>>
>>> On my Windows machine, the package builds and installs with no 
>>> errors or
>>> warnings even if flexmix is not available (which I believe to be the
>>> correct behavior). On R-Forge, both the Windows and LINUX versions 
>>> build
>>> and install with no errors or warnings. On R-Hub, tested on multiple
>>> LINUX versions, the package builds and installs with no errors or 
>>> warnings.
>>>
>>> And flexmix is still clearly available from CRAN:
>>> ? ? https://cran.r-project.org/web/packages/flexmix/index.html
>>>
>>> In the latest attempt to get things to work, I added
>>> ? ? Suggests: flexmix
>>> into the DESCRIPTION file for Mercator, but this didn't help fix the
>>> problem on CRAN.
>>>
>>> Is there anything I can do to fix this problem (other than moan here on
>>> this list and hope that CRAN can just install flexmix on those 
>>> machines)?
>>>
>>> Thanks in advance for your help,
>>> ? ? Kevin
>>>
>>> ????[[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From kev|n@r@coombe@ @end|ng |rom gm@||@com  Wed Nov 11 19:39:36 2020
From: kev|n@r@coombe@ @end|ng |rom gm@||@com (Kevin R. Coombes)
Date: Wed, 11 Nov 2020 13:39:36 -0500
Subject: [R-pkg-devel] Strange error from CRAN on package submission
In-Reply-To: <218a0f23-1696-3083-252b-dd74c749b771@gmail.com>
References: <4e8f1ec8-d3a6-abb2-f81c-d33f8a708738@gmail.com>
 <afc6e7c4-1b8d-0fa4-3100-8849c1bc231f@gmail.com>
 <02152688-7180-d168-c339-82e7f7c1bb38@gmail.com>
 <218a0f23-1696-3083-252b-dd74c749b771@gmail.com>
Message-ID: <b92e40f4-ca30-d72c-0fcd-c22f765ab847@gmail.com>

Hi Duncan,

I just sent a longer version of this message, but it looks to me like 
the underlying issue is the fact that flexmix and Mercator both define 
and export "show" methods for their S4 classes.? What confuses me is why 
the NAMESPACE of a package that is merely Suggest'ed by something 
several layers down the hierarchy should get attached and cause an issue 
like this one. (The attached NAMESPACE happens in current versions of R.)

Thanks,
 ? Kevin

On 11/11/2020 1:07 PM, Duncan Murdoch wrote:
> Okay, I've tried testing on my Mac with R 4.0.3 and R-devel for the 
> new one, 4.0.3 for the CRAN version.
>
> I'm not seeing any check error with the CRAN version.? I get an error 
> trying to check 0.11.4 from R-forge because I don't have flexmix 
> installed.? If I take flexmix out of the Suggests list, it checks with 
> no error on 4.0.3, but I get the error you saw on R-devel when checked 
> with --as-cran.
>
> I tried debugging this, and narrowed it down a bit.? It happens when 
> your package is installed, in particular in the do_install_source() 
> function in src/library/tools/R/install.R. But that function runs a 
> new R instance, and I didn't get to debugging that.? I'll try again 
> later today if nobody else figures it out.
>
> Duncan Murdoch
>
>
>
>
> On 11/11/2020 12:03 p.m., Kevin R. Coombes wrote:
>> Hi Duncan,
>>
>> Oops; I didn't realize I had forgotten to push updates to the OOMPA web
>> site.
>>
>> The code for Mercator is contained as part of the Thresher project in
>> the subversion repository on R-Forge.
>> (https://r-forge.r-project.org/projects/thresher/) It's under
>> pkg/Mercator below that URL
>>
>> Thanks,
>> ? ? Kevin
>>
>> On 11/11/2020 11:30 AM, Duncan Murdoch wrote:
>>> Uwe suggested you suggest flexmix, but I see below you already tried
>>> that.
>>>
>>> I'd like to take a look, but I can't find your package.? The existing
>>> version on CRAN gives the URL as http://oompa.r-forge.r-project.org/,
>>> but I can't see it mentioned there.
>>>
>>> Duncan Murdoch
>>>
>>> On 11/11/2020 8:44 a.m., Kevin R. Coombes wrote:
>>>> Hi,
>>>>
>>>> I am trying to figure out how to fix warnings from two of the CRAN
>>>> machines on the submission of an update to a package. The only 
>>>> change to
>>>> my package was to add a "show" method to one of the S4 classes, which
>>>> was requested by a reviewer of the paper we submitted. The 
>>>> inability to
>>>> get this updated package into CRAN? is the only thing holding up the
>>>> revision (and probable acceptance) of the manuscript.
>>>>
>>>> The same "warnings"s were found in the previous version. The 
>>>> package is
>>>> called Mercator, and the CRAN check results from the? last version
>>>> are here:
>>>> https://cran.r-project.org/web/checks/check_results_Mercator.html
>>>>
>>>> I get warnings from the two fedora machine instances (clang and gcc).
>>>> They both report
>>>>
>>>>> Check: whether package can be installed.
>>>>> Result: WARN
>>>>> ??? ?? Found the following significant? warnings:
>>>>> ??? ?? Warning: namespace ?flexmix? is? not available and has been
>>>>> replaced
>>>> ?? >
>>>> ?? > Check: data for non-ASCII characters
>>>>> Result: WARN
>>>>> ??? ??? Warning: namespace 'flexmix'? is not available and has been
>>>>> replaced
>>>>> ??? ??? by .GlobalEnv when processing? object '<unknown>'
>>>>
>>>> The relationships in the DESCRIPTION files are:
>>>>
>>>> 1. Mercator depends on Thresher
>>>> 2. Thresher imports moVMF
>>>> 3. moMVF suggests flexmix
>>>>
>>>> On my Windows machine, the package builds and installs with no 
>>>> errors or
>>>> warnings even if flexmix is not available (which I believe to be the
>>>> correct behavior). On R-Forge, both the Windows and LINUX versions 
>>>> build
>>>> and install with no errors or warnings. On R-Hub, tested on multiple
>>>> LINUX versions, the package builds and installs with no errors or
>>>> warnings.
>>>>
>>>> And flexmix is still clearly available from CRAN:
>>>> https://cran.r-project.org/web/packages/flexmix/index.html
>>>>
>>>> In the latest attempt to get things to work, I added
>>>> ?? ? Suggests: flexmix
>>>> into the DESCRIPTION file for Mercator, but this didn't help fix the
>>>> problem on CRAN.
>>>>
>>>> Is there anything I can do to fix this problem (other than moan 
>>>> here on
>>>> this list and hope that CRAN can just install flexmix on those
>>>> machines)?
>>>>
>>>> Thanks in advance for your help,
>>>> ?? ? Kevin
>>>>
>>>> ?????[[alternative HTML version deleted]]
>>>>
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>
>>>
>>
>


From kev|n@r@coombe@ @end|ng |rom gm@||@com  Wed Nov 11 21:31:14 2020
From: kev|n@r@coombe@ @end|ng |rom gm@||@com (Kevin R. Coombes)
Date: Wed, 11 Nov 2020 15:31:14 -0500
Subject: [R-pkg-devel] Strange error from CRAN on package submission
In-Reply-To: <b92e40f4-ca30-d72c-0fcd-c22f765ab847@gmail.com>
References: <4e8f1ec8-d3a6-abb2-f81c-d33f8a708738@gmail.com>
 <afc6e7c4-1b8d-0fa4-3100-8849c1bc231f@gmail.com>
 <02152688-7180-d168-c339-82e7f7c1bb38@gmail.com>
 <218a0f23-1696-3083-252b-dd74c749b771@gmail.com>
 <b92e40f4-ca30-d72c-0fcd-c22f765ab847@gmail.com>
Message-ID: <2a720572-416d-d89a-066d-7230da613121@gmail.com>

Oh, I forgot to mention explicitly that checking (with --as-cran) on the 
development version of R on Windows also produces no errors or warnings.

On 11/11/2020 1:39 PM, Kevin R. Coombes wrote:
> Hi Duncan,
>
> I just sent a longer version of this message, but it looks to me like 
> the underlying issue is the fact that flexmix and Mercator both define 
> and export "show" methods for their S4 classes.? What confuses me is 
> why the NAMESPACE of a package that is merely Suggest'ed by something 
> several layers down the hierarchy should get attached and cause an 
> issue like this one. (The attached NAMESPACE happens in current 
> versions of R.)
>
> Thanks,
> ? Kevin
>
> On 11/11/2020 1:07 PM, Duncan Murdoch wrote:
>> Okay, I've tried testing on my Mac with R 4.0.3 and R-devel for the 
>> new one, 4.0.3 for the CRAN version.
>>
>> I'm not seeing any check error with the CRAN version.? I get an error 
>> trying to check 0.11.4 from R-forge because I don't have flexmix 
>> installed.? If I take flexmix out of the Suggests list, it checks 
>> with no error on 4.0.3, but I get the error you saw on R-devel when 
>> checked with --as-cran.
>>
>> I tried debugging this, and narrowed it down a bit.? It happens when 
>> your package is installed, in particular in the do_install_source() 
>> function in src/library/tools/R/install.R. But that function runs a 
>> new R instance, and I didn't get to debugging that.? I'll try again 
>> later today if nobody else figures it out.
>>
>> Duncan Murdoch
>>
>>
>>
>>
>> On 11/11/2020 12:03 p.m., Kevin R. Coombes wrote:
>>> Hi Duncan,
>>>
>>> Oops; I didn't realize I had forgotten to push updates to the OOMPA web
>>> site.
>>>
>>> The code for Mercator is contained as part of the Thresher project in
>>> the subversion repository on R-Forge.
>>> (https://r-forge.r-project.org/projects/thresher/) It's under
>>> pkg/Mercator below that URL
>>>
>>> Thanks,
>>> ? ? Kevin
>>>
>>> On 11/11/2020 11:30 AM, Duncan Murdoch wrote:
>>>> Uwe suggested you suggest flexmix, but I see below you already tried
>>>> that.
>>>>
>>>> I'd like to take a look, but I can't find your package.? The existing
>>>> version on CRAN gives the URL as http://oompa.r-forge.r-project.org/,
>>>> but I can't see it mentioned there.
>>>>
>>>> Duncan Murdoch
>>>>
>>>> On 11/11/2020 8:44 a.m., Kevin R. Coombes wrote:
>>>>> Hi,
>>>>>
>>>>> I am trying to figure out how to fix warnings from two of the CRAN
>>>>> machines on the submission of an update to a package. The only 
>>>>> change to
>>>>> my package was to add a "show" method to one of the S4 classes, which
>>>>> was requested by a reviewer of the paper we submitted. The 
>>>>> inability to
>>>>> get this updated package into CRAN? is the only thing holding up the
>>>>> revision (and probable acceptance) of the manuscript.
>>>>>
>>>>> The same "warnings"s were found in the previous version. The 
>>>>> package is
>>>>> called Mercator, and the CRAN check results from the? last version
>>>>> are here:
>>>>> https://cran.r-project.org/web/checks/check_results_Mercator.html
>>>>>
>>>>> I get warnings from the two fedora machine instances (clang and gcc).
>>>>> They both report
>>>>>
>>>>>> Check: whether package can be installed.
>>>>>> Result: WARN
>>>>>> ??? ?? Found the following significant? warnings:
>>>>>> ??? ?? Warning: namespace ?flexmix? is? not available and has been
>>>>>> replaced
>>>>> ?? >
>>>>> ?? > Check: data for non-ASCII characters
>>>>>> Result: WARN
>>>>>> ??? ??? Warning: namespace 'flexmix'? is not available and has been
>>>>>> replaced
>>>>>> ??? ??? by .GlobalEnv when processing? object '<unknown>'
>>>>>
>>>>> The relationships in the DESCRIPTION files are:
>>>>>
>>>>> 1. Mercator depends on Thresher
>>>>> 2. Thresher imports moVMF
>>>>> 3. moMVF suggests flexmix
>>>>>
>>>>> On my Windows machine, the package builds and installs with no 
>>>>> errors or
>>>>> warnings even if flexmix is not available (which I believe to be the
>>>>> correct behavior). On R-Forge, both the Windows and LINUX versions 
>>>>> build
>>>>> and install with no errors or warnings. On R-Hub, tested on multiple
>>>>> LINUX versions, the package builds and installs with no errors or
>>>>> warnings.
>>>>>
>>>>> And flexmix is still clearly available from CRAN:
>>>>> https://cran.r-project.org/web/packages/flexmix/index.html
>>>>>
>>>>> In the latest attempt to get things to work, I added
>>>>> ?? ? Suggests: flexmix
>>>>> into the DESCRIPTION file for Mercator, but this didn't help fix the
>>>>> problem on CRAN.
>>>>>
>>>>> Is there anything I can do to fix this problem (other than moan 
>>>>> here on
>>>>> this list and hope that CRAN can just install flexmix on those
>>>>> machines)?
>>>>>
>>>>> Thanks in advance for your help,
>>>>> ?? ? Kevin
>>>>>
>>>>> ?????[[alternative HTML version deleted]]
>>>>>
>>>>> ______________________________________________
>>>>> R-package-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>>
>>>>
>>>
>>
>


From murdoch@dunc@n @end|ng |rom gm@||@com  Wed Nov 11 22:44:09 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Wed, 11 Nov 2020 16:44:09 -0500
Subject: [R-pkg-devel] Strange error from CRAN on package submission
In-Reply-To: <2a720572-416d-d89a-066d-7230da613121@gmail.com>
References: <4e8f1ec8-d3a6-abb2-f81c-d33f8a708738@gmail.com>
 <afc6e7c4-1b8d-0fa4-3100-8849c1bc231f@gmail.com>
 <02152688-7180-d168-c339-82e7f7c1bb38@gmail.com>
 <218a0f23-1696-3083-252b-dd74c749b771@gmail.com>
 <b92e40f4-ca30-d72c-0fcd-c22f765ab847@gmail.com>
 <2a720572-416d-d89a-066d-7230da613121@gmail.com>
Message-ID: <de340c6f-648e-b74c-339a-10b8c731b4e7@gmail.com>

Here's what I think is happening.

In the movMF:::.onLoad function there's a test whether flexmix is 
installed.  If found, then it is loaded and some methods are set.  (I'm 
not sure what caused flexmix to be installed:  I didn't intentionally 
install it, but it ended up in there when I installed enough stuff to 
check Mercator.)

In the R-devel --as-cran checks, some checks are run with only strong 
dependencies of your package visible.  Somehow I think that .onLoad 
function sees flexmix and loads it, but then some other part of the 
check can't see it.

A workaround is to add flexmix to your Imports clause.  This is a strong 
enough dependency to make it visible, and the error goes away.

HOWEVER, to me this is pretty clearly an R-devel bug:  you have no 
control over methods set by packages that you don't even use, so you 
shouldn't have to change your dependency lists if one of them sets a 
method that you're using.

Duncan Murdoch

On 11/11/2020 3:31 p.m., Kevin R. Coombes wrote:
> Oh, I forgot to mention explicitly that checking (with --as-cran) on the
> development version of R on Windows also produces no errors or warnings.
> 
> On 11/11/2020 1:39 PM, Kevin R. Coombes wrote:
>> Hi Duncan,
>>
>> I just sent a longer version of this message, but it looks to me like
>> the underlying issue is the fact that flexmix and Mercator both define
>> and export "show" methods for their S4 classes.? What confuses me is
>> why the NAMESPACE of a package that is merely Suggest'ed by something
>> several layers down the hierarchy should get attached and cause an
>> issue like this one. (The attached NAMESPACE happens in current
>> versions of R.)
>>
>> Thanks,
>>  ? Kevin
>>
>> On 11/11/2020 1:07 PM, Duncan Murdoch wrote:
>>> Okay, I've tried testing on my Mac with R 4.0.3 and R-devel for the
>>> new one, 4.0.3 for the CRAN version.
>>>
>>> I'm not seeing any check error with the CRAN version.? I get an error
>>> trying to check 0.11.4 from R-forge because I don't have flexmix
>>> installed.? If I take flexmix out of the Suggests list, it checks
>>> with no error on 4.0.3, but I get the error you saw on R-devel when
>>> checked with --as-cran.
>>>
>>> I tried debugging this, and narrowed it down a bit.? It happens when
>>> your package is installed, in particular in the do_install_source()
>>> function in src/library/tools/R/install.R. But that function runs a
>>> new R instance, and I didn't get to debugging that.? I'll try again
>>> later today if nobody else figures it out.
>>>
>>> Duncan Murdoch
>>>
>>>
>>>
>>>
>>> On 11/11/2020 12:03 p.m., Kevin R. Coombes wrote:
>>>> Hi Duncan,
>>>>
>>>> Oops; I didn't realize I had forgotten to push updates to the OOMPA web
>>>> site.
>>>>
>>>> The code for Mercator is contained as part of the Thresher project in
>>>> the subversion repository on R-Forge.
>>>> (https://r-forge.r-project.org/projects/thresher/) It's under
>>>> pkg/Mercator below that URL
>>>>
>>>> Thanks,
>>>>  ? ? Kevin
>>>>
>>>> On 11/11/2020 11:30 AM, Duncan Murdoch wrote:
>>>>> Uwe suggested you suggest flexmix, but I see below you already tried
>>>>> that.
>>>>>
>>>>> I'd like to take a look, but I can't find your package.? The existing
>>>>> version on CRAN gives the URL as http://oompa.r-forge.r-project.org/,
>>>>> but I can't see it mentioned there.
>>>>>
>>>>> Duncan Murdoch
>>>>>
>>>>> On 11/11/2020 8:44 a.m., Kevin R. Coombes wrote:
>>>>>> Hi,
>>>>>>
>>>>>> I am trying to figure out how to fix warnings from two of the CRAN
>>>>>> machines on the submission of an update to a package. The only
>>>>>> change to
>>>>>> my package was to add a "show" method to one of the S4 classes, which
>>>>>> was requested by a reviewer of the paper we submitted. The
>>>>>> inability to
>>>>>> get this updated package into CRAN? is the only thing holding up the
>>>>>> revision (and probable acceptance) of the manuscript.
>>>>>>
>>>>>> The same "warnings"s were found in the previous version. The
>>>>>> package is
>>>>>> called Mercator, and the CRAN check results from the? last version
>>>>>> are here:
>>>>>> https://cran.r-project.org/web/checks/check_results_Mercator.html
>>>>>>
>>>>>> I get warnings from the two fedora machine instances (clang and gcc).
>>>>>> They both report
>>>>>>
>>>>>>> Check: whether package can be installed.
>>>>>>> Result: WARN
>>>>>>>  ??? ?? Found the following significant? warnings:
>>>>>>>  ??? ?? Warning: namespace ?flexmix? is? not available and has been
>>>>>>> replaced
>>>>>>  ?? >
>>>>>>  ?? > Check: data for non-ASCII characters
>>>>>>> Result: WARN
>>>>>>>  ??? ??? Warning: namespace 'flexmix'? is not available and has been
>>>>>>> replaced
>>>>>>>  ??? ??? by .GlobalEnv when processing? object '<unknown>'
>>>>>>
>>>>>> The relationships in the DESCRIPTION files are:
>>>>>>
>>>>>> 1. Mercator depends on Thresher
>>>>>> 2. Thresher imports moVMF
>>>>>> 3. moMVF suggests flexmix
>>>>>>
>>>>>> On my Windows machine, the package builds and installs with no
>>>>>> errors or
>>>>>> warnings even if flexmix is not available (which I believe to be the
>>>>>> correct behavior). On R-Forge, both the Windows and LINUX versions
>>>>>> build
>>>>>> and install with no errors or warnings. On R-Hub, tested on multiple
>>>>>> LINUX versions, the package builds and installs with no errors or
>>>>>> warnings.
>>>>>>
>>>>>> And flexmix is still clearly available from CRAN:
>>>>>> https://cran.r-project.org/web/packages/flexmix/index.html
>>>>>>
>>>>>> In the latest attempt to get things to work, I added
>>>>>>  ?? ? Suggests: flexmix
>>>>>> into the DESCRIPTION file for Mercator, but this didn't help fix the
>>>>>> problem on CRAN.
>>>>>>
>>>>>> Is there anything I can do to fix this problem (other than moan
>>>>>> here on
>>>>>> this list and hope that CRAN can just install flexmix on those
>>>>>> machines)?
>>>>>>
>>>>>> Thanks in advance for your help,
>>>>>>  ?? ? Kevin
>>>>>>
>>>>>>  ?????[[alternative HTML version deleted]]
>>>>>>
>>>>>> ______________________________________________
>>>>>> R-package-devel at r-project.org mailing list
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>>>
>>>>>
>>>>
>>>
>>
>


From kev|n@r@coombe@ @end|ng |rom gm@||@com  Wed Nov 11 23:31:21 2020
From: kev|n@r@coombe@ @end|ng |rom gm@||@com (Kevin R. Coombes)
Date: Wed, 11 Nov 2020 17:31:21 -0500
Subject: [R-pkg-devel] Strange error from CRAN on package submission
In-Reply-To: <de340c6f-648e-b74c-339a-10b8c731b4e7@gmail.com>
References: <4e8f1ec8-d3a6-abb2-f81c-d33f8a708738@gmail.com>
 <afc6e7c4-1b8d-0fa4-3100-8849c1bc231f@gmail.com>
 <02152688-7180-d168-c339-82e7f7c1bb38@gmail.com>
 <218a0f23-1696-3083-252b-dd74c749b771@gmail.com>
 <b92e40f4-ca30-d72c-0fcd-c22f765ab847@gmail.com>
 <2a720572-416d-d89a-066d-7230da613121@gmail.com>
 <de340c6f-648e-b74c-339a-10b8c731b4e7@gmail.com>
Message-ID: <386a0925-9b03-1472-4b9f-f1f303975d33@gmail.com>

Hi Duncan,

Thanks for the help. For now (since I want my package to get into CRAN 
so I can resubmit my paper), I'll add the "Import" clause, and write 
myself a note to try removing it later.

Best,
 ? Kevin

On 11/11/2020 4:44 PM, Duncan Murdoch wrote:
> Here's what I think is happening.
>
> In the movMF:::.onLoad function there's a test whether flexmix is 
> installed.? If found, then it is loaded and some methods are set. (I'm 
> not sure what caused flexmix to be installed:? I didn't intentionally 
> install it, but it ended up in there when I installed enough stuff to 
> check Mercator.)
>
> In the R-devel --as-cran checks, some checks are run with only strong 
> dependencies of your package visible.? Somehow I think that .onLoad 
> function sees flexmix and loads it, but then some other part of the 
> check can't see it.
>
> A workaround is to add flexmix to your Imports clause.? This is a 
> strong enough dependency to make it visible, and the error goes away.
>
> HOWEVER, to me this is pretty clearly an R-devel bug:? you have no 
> control over methods set by packages that you don't even use, so you 
> shouldn't have to change your dependency lists if one of them sets a 
> method that you're using.
>
> Duncan Murdoch
>
> On 11/11/2020 3:31 p.m., Kevin R. Coombes wrote:
>> Oh, I forgot to mention explicitly that checking (with --as-cran) on the
>> development version of R on Windows also produces no errors or warnings.
>>
>> On 11/11/2020 1:39 PM, Kevin R. Coombes wrote:
>>> Hi Duncan,
>>>
>>> I just sent a longer version of this message, but it looks to me like
>>> the underlying issue is the fact that flexmix and Mercator both define
>>> and export "show" methods for their S4 classes.? What confuses me is
>>> why the NAMESPACE of a package that is merely Suggest'ed by something
>>> several layers down the hierarchy should get attached and cause an
>>> issue like this one. (The attached NAMESPACE happens in current
>>> versions of R.)
>>>
>>> Thanks,
>>> ?? Kevin
>>>
>>> On 11/11/2020 1:07 PM, Duncan Murdoch wrote:
>>>> Okay, I've tried testing on my Mac with R 4.0.3 and R-devel for the
>>>> new one, 4.0.3 for the CRAN version.
>>>>
>>>> I'm not seeing any check error with the CRAN version.? I get an error
>>>> trying to check 0.11.4 from R-forge because I don't have flexmix
>>>> installed.? If I take flexmix out of the Suggests list, it checks
>>>> with no error on 4.0.3, but I get the error you saw on R-devel when
>>>> checked with --as-cran.
>>>>
>>>> I tried debugging this, and narrowed it down a bit.? It happens when
>>>> your package is installed, in particular in the do_install_source()
>>>> function in src/library/tools/R/install.R. But that function runs a
>>>> new R instance, and I didn't get to debugging that.? I'll try again
>>>> later today if nobody else figures it out.
>>>>
>>>> Duncan Murdoch
>>>>
>>>>
>>>>
>>>>
>>>> On 11/11/2020 12:03 p.m., Kevin R. Coombes wrote:
>>>>> Hi Duncan,
>>>>>
>>>>> Oops; I didn't realize I had forgotten to push updates to the 
>>>>> OOMPA web
>>>>> site.
>>>>>
>>>>> The code for Mercator is contained as part of the Thresher project in
>>>>> the subversion repository on R-Forge.
>>>>> (https://r-forge.r-project.org/projects/thresher/) It's under
>>>>> pkg/Mercator below that URL
>>>>>
>>>>> Thanks,
>>>>> ?? ? Kevin
>>>>>
>>>>> On 11/11/2020 11:30 AM, Duncan Murdoch wrote:
>>>>>> Uwe suggested you suggest flexmix, but I see below you already tried
>>>>>> that.
>>>>>>
>>>>>> I'd like to take a look, but I can't find your package. The existing
>>>>>> version on CRAN gives the URL as 
>>>>>> http://oompa.r-forge.r-project.org/,
>>>>>> but I can't see it mentioned there.
>>>>>>
>>>>>> Duncan Murdoch
>>>>>>
>>>>>> On 11/11/2020 8:44 a.m., Kevin R. Coombes wrote:
>>>>>>> Hi,
>>>>>>>
>>>>>>> I am trying to figure out how to fix warnings from two of the CRAN
>>>>>>> machines on the submission of an update to a package. The only
>>>>>>> change to
>>>>>>> my package was to add a "show" method to one of the S4 classes, 
>>>>>>> which
>>>>>>> was requested by a reviewer of the paper we submitted. The
>>>>>>> inability to
>>>>>>> get this updated package into CRAN? is the only thing holding up 
>>>>>>> the
>>>>>>> revision (and probable acceptance) of the manuscript.
>>>>>>>
>>>>>>> The same "warnings"s were found in the previous version. The
>>>>>>> package is
>>>>>>> called Mercator, and the CRAN check results from the last version
>>>>>>> are here:
>>>>>>> https://cran.r-project.org/web/checks/check_results_Mercator.html
>>>>>>>
>>>>>>> I get warnings from the two fedora machine instances (clang and 
>>>>>>> gcc).
>>>>>>> They both report
>>>>>>>
>>>>>>>> Check: whether package can be installed.
>>>>>>>> Result: WARN
>>>>>>>> ???? ?? Found the following significant? warnings:
>>>>>>>> ???? ?? Warning: namespace ?flexmix? is? not available and has 
>>>>>>>> been
>>>>>>>> replaced
>>>>>>> ??? >
>>>>>>> ??? > Check: data for non-ASCII characters
>>>>>>>> Result: WARN
>>>>>>>> ???? ??? Warning: namespace 'flexmix'? is not available and has 
>>>>>>>> been
>>>>>>>> replaced
>>>>>>>> ???? ??? by .GlobalEnv when processing? object '<unknown>'
>>>>>>>
>>>>>>> The relationships in the DESCRIPTION files are:
>>>>>>>
>>>>>>> 1. Mercator depends on Thresher
>>>>>>> 2. Thresher imports moVMF
>>>>>>> 3. moMVF suggests flexmix
>>>>>>>
>>>>>>> On my Windows machine, the package builds and installs with no
>>>>>>> errors or
>>>>>>> warnings even if flexmix is not available (which I believe to be 
>>>>>>> the
>>>>>>> correct behavior). On R-Forge, both the Windows and LINUX versions
>>>>>>> build
>>>>>>> and install with no errors or warnings. On R-Hub, tested on 
>>>>>>> multiple
>>>>>>> LINUX versions, the package builds and installs with no errors or
>>>>>>> warnings.
>>>>>>>
>>>>>>> And flexmix is still clearly available from CRAN:
>>>>>>> https://cran.r-project.org/web/packages/flexmix/index.html
>>>>>>>
>>>>>>> In the latest attempt to get things to work, I added
>>>>>>> ??? ? Suggests: flexmix
>>>>>>> into the DESCRIPTION file for Mercator, but this didn't help fix 
>>>>>>> the
>>>>>>> problem on CRAN.
>>>>>>>
>>>>>>> Is there anything I can do to fix this problem (other than moan
>>>>>>> here on
>>>>>>> this list and hope that CRAN can just install flexmix on those
>>>>>>> machines)?
>>>>>>>
>>>>>>> Thanks in advance for your help,
>>>>>>> ??? ? Kevin
>>>>>>>
>>>>>>> ??????[[alternative HTML version deleted]]
>>>>>>>
>>>>>>> ______________________________________________
>>>>>>> R-package-devel at r-project.org mailing list
>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>>>>
>>>>>>
>>>>>
>>>>
>>>
>>
>


From mtmorg@n@b|oc @end|ng |rom gm@||@com  Thu Nov 12 16:13:29 2020
From: mtmorg@n@b|oc @end|ng |rom gm@||@com (Martin Morgan)
Date: Thu, 12 Nov 2020 15:13:29 +0000
Subject: [R-pkg-devel] Strange error from CRAN on package submission
In-Reply-To: <de340c6f-648e-b74c-339a-10b8c731b4e7@gmail.com>
References: <4e8f1ec8-d3a6-abb2-f81c-d33f8a708738@gmail.com>
 <afc6e7c4-1b8d-0fa4-3100-8849c1bc231f@gmail.com>
 <02152688-7180-d168-c339-82e7f7c1bb38@gmail.com>
 <218a0f23-1696-3083-252b-dd74c749b771@gmail.com>
 <b92e40f4-ca30-d72c-0fcd-c22f765ab847@gmail.com>
 <2a720572-416d-d89a-066d-7230da613121@gmail.com>
 <de340c6f-648e-b74c-339a-10b8c731b4e7@gmail.com>
Message-ID: <BL0PR04MB660902EB49FBA8CD379548B1F9E70@BL0PR04MB6609.namprd04.prod.outlook.com>

This seems more like a problem with the CRAN test machine, with the movMF package installed with flexmix available but loaded with flexmix not available, maybe interacting with a caching mechanism used by the methods package to avoid re-computing methods tables? Otherwise how would movMF ever know to create the flexmix class / method?

It seems like this could cause problems for the user if they installed movMV with flexmix available, but removed flexmix. This seems like a subtler variation of 'I installed package A but then removed dependency B and now A doesn't work', which could be a bug in R's remove.packages() but....

I tried to emulate the scenario of installing movMF and then removing flexmix in an interactive session, and then looking for the warning reported below. I was not successful, but the build report with the error is no longer available so I don't know what I'm looking for...

Martin Morgan

?On 11/11/20, 4:44 PM, "R-package-devel on behalf of Duncan Murdoch" <r-package-devel-bounces at r-project.org on behalf of murdoch.duncan at gmail.com> wrote:

    Here's what I think is happening.

    In the movMF:::.onLoad function there's a test whether flexmix is 
    installed.  If found, then it is loaded and some methods are set.  (I'm 
    not sure what caused flexmix to be installed:  I didn't intentionally 
    install it, but it ended up in there when I installed enough stuff to 
    check Mercator.)

    In the R-devel --as-cran checks, some checks are run with only strong 
    dependencies of your package visible.  Somehow I think that .onLoad 
    function sees flexmix and loads it, but then some other part of the 
    check can't see it.

    A workaround is to add flexmix to your Imports clause.  This is a strong 
    enough dependency to make it visible, and the error goes away.

    HOWEVER, to me this is pretty clearly an R-devel bug:  you have no 
    control over methods set by packages that you don't even use, so you 
    shouldn't have to change your dependency lists if one of them sets a 
    method that you're using.

    Duncan Murdoch

    On 11/11/2020 3:31 p.m., Kevin R. Coombes wrote:
    > Oh, I forgot to mention explicitly that checking (with --as-cran) on the
    > development version of R on Windows also produces no errors or warnings.
    > 
    > On 11/11/2020 1:39 PM, Kevin R. Coombes wrote:
    >> Hi Duncan,
    >>
    >> I just sent a longer version of this message, but it looks to me like
    >> the underlying issue is the fact that flexmix and Mercator both define
    >> and export "show" methods for their S4 classes.  What confuses me is
    >> why the NAMESPACE of a package that is merely Suggest'ed by something
    >> several layers down the hierarchy should get attached and cause an
    >> issue like this one. (The attached NAMESPACE happens in current
    >> versions of R.)
    >>
    >> Thanks,
    >>    Kevin
    >>
    >> On 11/11/2020 1:07 PM, Duncan Murdoch wrote:
    >>> Okay, I've tried testing on my Mac with R 4.0.3 and R-devel for the
    >>> new one, 4.0.3 for the CRAN version.
    >>>
    >>> I'm not seeing any check error with the CRAN version.  I get an error
    >>> trying to check 0.11.4 from R-forge because I don't have flexmix
    >>> installed.  If I take flexmix out of the Suggests list, it checks
    >>> with no error on 4.0.3, but I get the error you saw on R-devel when
    >>> checked with --as-cran.
    >>>
    >>> I tried debugging this, and narrowed it down a bit.  It happens when
    >>> your package is installed, in particular in the do_install_source()
    >>> function in src/library/tools/R/install.R. But that function runs a
    >>> new R instance, and I didn't get to debugging that.  I'll try again
    >>> later today if nobody else figures it out.
    >>>
    >>> Duncan Murdoch
    >>>
    >>>
    >>>
    >>>
    >>> On 11/11/2020 12:03 p.m., Kevin R. Coombes wrote:
    >>>> Hi Duncan,
    >>>>
    >>>> Oops; I didn't realize I had forgotten to push updates to the OOMPA web
    >>>> site.
    >>>>
    >>>> The code for Mercator is contained as part of the Thresher project in
    >>>> the subversion repository on R-Forge.
    >>>> (https://r-forge.r-project.org/projects/thresher/) It's under
    >>>> pkg/Mercator below that URL
    >>>>
    >>>> Thanks,
    >>>>      Kevin
    >>>>
    >>>> On 11/11/2020 11:30 AM, Duncan Murdoch wrote:
    >>>>> Uwe suggested you suggest flexmix, but I see below you already tried
    >>>>> that.
    >>>>>
    >>>>> I'd like to take a look, but I can't find your package.  The existing
    >>>>> version on CRAN gives the URL as http://oompa.r-forge.r-project.org/,
    >>>>> but I can't see it mentioned there.
    >>>>>
    >>>>> Duncan Murdoch
    >>>>>
    >>>>> On 11/11/2020 8:44 a.m., Kevin R. Coombes wrote:
    >>>>>> Hi,
    >>>>>>
    >>>>>> I am trying to figure out how to fix warnings from two of the CRAN
    >>>>>> machines on the submission of an update to a package. The only
    >>>>>> change to
    >>>>>> my package was to add a "show" method to one of the S4 classes, which
    >>>>>> was requested by a reviewer of the paper we submitted. The
    >>>>>> inability to
    >>>>>> get this updated package into CRAN  is the only thing holding up the
    >>>>>> revision (and probable acceptance) of the manuscript.
    >>>>>>
    >>>>>> The same "warnings"s were found in the previous version. The
    >>>>>> package is
    >>>>>> called Mercator, and the CRAN check results from the  last version
    >>>>>> are here:
    >>>>>> https://cran.r-project.org/web/checks/check_results_Mercator.html
    >>>>>>
    >>>>>> I get warnings from the two fedora machine instances (clang and gcc).
    >>>>>> They both report
    >>>>>>
    >>>>>>> Check: whether package can be installed.
    >>>>>>> Result: WARN
    >>>>>>>         Found the following significant  warnings:
    >>>>>>>         Warning: namespace ?flexmix? is  not available and has been
    >>>>>>> replaced
    >>>>>>     >
    >>>>>>     > Check: data for non-ASCII characters
    >>>>>>> Result: WARN
    >>>>>>>          Warning: namespace 'flexmix'  is not available and has been
    >>>>>>> replaced
    >>>>>>>          by .GlobalEnv when processing  object '<unknown>'
    >>>>>>
    >>>>>> The relationships in the DESCRIPTION files are:
    >>>>>>
    >>>>>> 1. Mercator depends on Thresher
    >>>>>> 2. Thresher imports moVMF
    >>>>>> 3. moMVF suggests flexmix
    >>>>>>
    >>>>>> On my Windows machine, the package builds and installs with no
    >>>>>> errors or
    >>>>>> warnings even if flexmix is not available (which I believe to be the
    >>>>>> correct behavior). On R-Forge, both the Windows and LINUX versions
    >>>>>> build
    >>>>>> and install with no errors or warnings. On R-Hub, tested on multiple
    >>>>>> LINUX versions, the package builds and installs with no errors or
    >>>>>> warnings.
    >>>>>>
    >>>>>> And flexmix is still clearly available from CRAN:
    >>>>>> https://cran.r-project.org/web/packages/flexmix/index.html
    >>>>>>
    >>>>>> In the latest attempt to get things to work, I added
    >>>>>>       Suggests: flexmix
    >>>>>> into the DESCRIPTION file for Mercator, but this didn't help fix the
    >>>>>> problem on CRAN.
    >>>>>>
    >>>>>> Is there anything I can do to fix this problem (other than moan
    >>>>>> here on
    >>>>>> this list and hope that CRAN can just install flexmix on those
    >>>>>> machines)?
    >>>>>>
    >>>>>> Thanks in advance for your help,
    >>>>>>       Kevin
    >>>>>>
    >>>>>>       [[alternative HTML version deleted]]
    >>>>>>
    >>>>>> ______________________________________________
    >>>>>> R-package-devel at r-project.org mailing list
    >>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
    >>>>>>
    >>>>>
    >>>>
    >>>
    >>
    >

    ______________________________________________
    R-package-devel at r-project.org mailing list
    https://stat.ethz.ch/mailman/listinfo/r-package-devel

From kev|n@r@coombe@ @end|ng |rom gm@||@com  Thu Nov 12 17:39:09 2020
From: kev|n@r@coombe@ @end|ng |rom gm@||@com (Kevin R. Coombes)
Date: Thu, 12 Nov 2020 11:39:09 -0500
Subject: [R-pkg-devel] Strange error from CRAN on package submission
In-Reply-To: <BL0PR04MB660902EB49FBA8CD379548B1F9E70@BL0PR04MB6609.namprd04.prod.outlook.com>
References: <4e8f1ec8-d3a6-abb2-f81c-d33f8a708738@gmail.com>
 <afc6e7c4-1b8d-0fa4-3100-8849c1bc231f@gmail.com>
 <02152688-7180-d168-c339-82e7f7c1bb38@gmail.com>
 <218a0f23-1696-3083-252b-dd74c749b771@gmail.com>
 <b92e40f4-ca30-d72c-0fcd-c22f765ab847@gmail.com>
 <2a720572-416d-d89a-066d-7230da613121@gmail.com>
 <de340c6f-648e-b74c-339a-10b8c731b4e7@gmail.com>
 <BL0PR04MB660902EB49FBA8CD379548B1F9E70@BL0PR04MB6609.namprd04.prod.outlook.com>
Message-ID: <81364add-29ea-790d-3147-e2629652b5ec@gmail.com>

Hi Martin,

I think you may be right that it is something odd about the 
configuration on the test machine, since I haven't been able to 
reproduce it anywhere else. But Duncan did say he could reproduce it in 
R-devel but not R-4.0.3, so there's that.

The error message is buried deep in this thread, but it was:

Check: whether package can be installed.
Result: WARN
 ??? Found the following significant? warnings:
 ??? Warning: namespace ?flexmix? is? not available and has been replaced

Check: data for non-ASCII characters
Result: WARN
 ??? Warning: namespace 'flexmix'? is not available and has been replaced
 ??? by .GlobalEnv when processing? object '<unknown>'

Best,
 ? Kevin

On 11/12/2020 10:13 AM, Martin Morgan wrote:
> This seems more like a problem with the CRAN test machine, with the movMF package installed with flexmix available but loaded with flexmix not available, maybe interacting with a caching mechanism used by the methods package to avoid re-computing methods tables? Otherwise how would movMF ever know to create the flexmix class / method?
>
> It seems like this could cause problems for the user if they installed movMV with flexmix available, but removed flexmix. This seems like a subtler variation of 'I installed package A but then removed dependency B and now A doesn't work', which could be a bug in R's remove.packages() but....
>
> I tried to emulate the scenario of installing movMF and then removing flexmix in an interactive session, and then looking for the warning reported below. I was not successful, but the build report with the error is no longer available so I don't know what I'm looking for...
>
> Martin Morgan
>
> ?On 11/11/20, 4:44 PM, "R-package-devel on behalf of Duncan Murdoch" <r-package-devel-bounces at r-project.org on behalf of murdoch.duncan at gmail.com> wrote:
>
>      Here's what I think is happening.
>
>      In the movMF:::.onLoad function there's a test whether flexmix is
>      installed.  If found, then it is loaded and some methods are set.  (I'm
>      not sure what caused flexmix to be installed:  I didn't intentionally
>      install it, but it ended up in there when I installed enough stuff to
>      check Mercator.)
>
>      In the R-devel --as-cran checks, some checks are run with only strong
>      dependencies of your package visible.  Somehow I think that .onLoad
>      function sees flexmix and loads it, but then some other part of the
>      check can't see it.
>
>      A workaround is to add flexmix to your Imports clause.  This is a strong
>      enough dependency to make it visible, and the error goes away.
>
>      HOWEVER, to me this is pretty clearly an R-devel bug:  you have no
>      control over methods set by packages that you don't even use, so you
>      shouldn't have to change your dependency lists if one of them sets a
>      method that you're using.
>
>      Duncan Murdoch
>
>      On 11/11/2020 3:31 p.m., Kevin R. Coombes wrote:
>      > Oh, I forgot to mention explicitly that checking (with --as-cran) on the
>      > development version of R on Windows also produces no errors or warnings.
>      >
>      > On 11/11/2020 1:39 PM, Kevin R. Coombes wrote:
>      >> Hi Duncan,
>      >>
>      >> I just sent a longer version of this message, but it looks to me like
>      >> the underlying issue is the fact that flexmix and Mercator both define
>      >> and export "show" methods for their S4 classes.  What confuses me is
>      >> why the NAMESPACE of a package that is merely Suggest'ed by something
>      >> several layers down the hierarchy should get attached and cause an
>      >> issue like this one. (The attached NAMESPACE happens in current
>      >> versions of R.)
>      >>
>      >> Thanks,
>      >>    Kevin
>      >>
>      >> On 11/11/2020 1:07 PM, Duncan Murdoch wrote:
>      >>> Okay, I've tried testing on my Mac with R 4.0.3 and R-devel for the
>      >>> new one, 4.0.3 for the CRAN version.
>      >>>
>      >>> I'm not seeing any check error with the CRAN version.  I get an error
>      >>> trying to check 0.11.4 from R-forge because I don't have flexmix
>      >>> installed.  If I take flexmix out of the Suggests list, it checks
>      >>> with no error on 4.0.3, but I get the error you saw on R-devel when
>      >>> checked with --as-cran.
>      >>>
>      >>> I tried debugging this, and narrowed it down a bit.  It happens when
>      >>> your package is installed, in particular in the do_install_source()
>      >>> function in src/library/tools/R/install.R. But that function runs a
>      >>> new R instance, and I didn't get to debugging that.  I'll try again
>      >>> later today if nobody else figures it out.
>      >>>
>      >>> Duncan Murdoch
>      >>>
>      >>>
>      >>>
>      >>>
>      >>> On 11/11/2020 12:03 p.m., Kevin R. Coombes wrote:
>      >>>> Hi Duncan,
>      >>>>
>      >>>> Oops; I didn't realize I had forgotten to push updates to the OOMPA web
>      >>>> site.
>      >>>>
>      >>>> The code for Mercator is contained as part of the Thresher project in
>      >>>> the subversion repository on R-Forge.
>      >>>> (https://r-forge.r-project.org/projects/thresher/) It's under
>      >>>> pkg/Mercator below that URL
>      >>>>
>      >>>> Thanks,
>      >>>>      Kevin
>      >>>>
>      >>>> On 11/11/2020 11:30 AM, Duncan Murdoch wrote:
>      >>>>> Uwe suggested you suggest flexmix, but I see below you already tried
>      >>>>> that.
>      >>>>>
>      >>>>> I'd like to take a look, but I can't find your package.  The existing
>      >>>>> version on CRAN gives the URL as http://oompa.r-forge.r-project.org/,
>      >>>>> but I can't see it mentioned there.
>      >>>>>
>      >>>>> Duncan Murdoch
>      >>>>>
>      >>>>> On 11/11/2020 8:44 a.m., Kevin R. Coombes wrote:
>      >>>>>> Hi,
>      >>>>>>
>      >>>>>> I am trying to figure out how to fix warnings from two of the CRAN
>      >>>>>> machines on the submission of an update to a package. The only
>      >>>>>> change to
>      >>>>>> my package was to add a "show" method to one of the S4 classes, which
>      >>>>>> was requested by a reviewer of the paper we submitted. The
>      >>>>>> inability to
>      >>>>>> get this updated package into CRAN  is the only thing holding up the
>      >>>>>> revision (and probable acceptance) of the manuscript.
>      >>>>>>
>      >>>>>> The same "warnings"s were found in the previous version. The
>      >>>>>> package is
>      >>>>>> called Mercator, and the CRAN check results from the  last version
>      >>>>>> are here:
>      >>>>>> https://cran.r-project.org/web/checks/check_results_Mercator.html
>      >>>>>>
>      >>>>>> I get warnings from the two fedora machine instances (clang and gcc).
>      >>>>>> They both report
>      >>>>>>
>      >>>>>>> Check: whether package can be installed.
>      >>>>>>> Result: WARN
>      >>>>>>>         Found the following significant  warnings:
>      >>>>>>>         Warning: namespace ?flexmix? is  not available and has been
>      >>>>>>> replaced
>      >>>>>>     >
>      >>>>>>     > Check: data for non-ASCII characters
>      >>>>>>> Result: WARN
>      >>>>>>>          Warning: namespace 'flexmix'  is not available and has been
>      >>>>>>> replaced
>      >>>>>>>          by .GlobalEnv when processing  object '<unknown>'
>      >>>>>>
>      >>>>>> The relationships in the DESCRIPTION files are:
>      >>>>>>
>      >>>>>> 1. Mercator depends on Thresher
>      >>>>>> 2. Thresher imports moVMF
>      >>>>>> 3. moMVF suggests flexmix
>      >>>>>>
>      >>>>>> On my Windows machine, the package builds and installs with no
>      >>>>>> errors or
>      >>>>>> warnings even if flexmix is not available (which I believe to be the
>      >>>>>> correct behavior). On R-Forge, both the Windows and LINUX versions
>      >>>>>> build
>      >>>>>> and install with no errors or warnings. On R-Hub, tested on multiple
>      >>>>>> LINUX versions, the package builds and installs with no errors or
>      >>>>>> warnings.
>      >>>>>>
>      >>>>>> And flexmix is still clearly available from CRAN:
>      >>>>>> https://cran.r-project.org/web/packages/flexmix/index.html
>      >>>>>>
>      >>>>>> In the latest attempt to get things to work, I added
>      >>>>>>       Suggests: flexmix
>      >>>>>> into the DESCRIPTION file for Mercator, but this didn't help fix the
>      >>>>>> problem on CRAN.
>      >>>>>>
>      >>>>>> Is there anything I can do to fix this problem (other than moan
>      >>>>>> here on
>      >>>>>> this list and hope that CRAN can just install flexmix on those
>      >>>>>> machines)?
>      >>>>>>
>      >>>>>> Thanks in advance for your help,
>      >>>>>>       Kevin
>      >>>>>>
>      >>>>>>       [[alternative HTML version deleted]]
>      >>>>>>
>      >>>>>> ______________________________________________
>      >>>>>> R-package-devel at r-project.org mailing list
>      >>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>      >>>>>>
>      >>>>>
>      >>>>
>      >>>
>      >>
>      >
>
>      ______________________________________________
>      R-package-devel at r-project.org mailing list
>      https://stat.ethz.ch/mailman/listinfo/r-package-devel


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu Nov 12 22:18:26 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 12 Nov 2020 16:18:26 -0500
Subject: [R-pkg-devel] Strange error from CRAN on package submission
In-Reply-To: <BL0PR04MB660902EB49FBA8CD379548B1F9E70@BL0PR04MB6609.namprd04.prod.outlook.com>
References: <4e8f1ec8-d3a6-abb2-f81c-d33f8a708738@gmail.com>
 <afc6e7c4-1b8d-0fa4-3100-8849c1bc231f@gmail.com>
 <02152688-7180-d168-c339-82e7f7c1bb38@gmail.com>
 <218a0f23-1696-3083-252b-dd74c749b771@gmail.com>
 <b92e40f4-ca30-d72c-0fcd-c22f765ab847@gmail.com>
 <2a720572-416d-d89a-066d-7230da613121@gmail.com>
 <de340c6f-648e-b74c-339a-10b8c731b4e7@gmail.com>
 <BL0PR04MB660902EB49FBA8CD379548B1F9E70@BL0PR04MB6609.namprd04.prod.outlook.com>
Message-ID: <0dd751c2-0652-cbf0-8dbd-335413f300c0@gmail.com>

Actually I think it is a bug in the check code.  I've just posted about 
this on the R-devel list.

Duncan Murdoch

On 12/11/2020 10:13 a.m., Martin Morgan wrote:
> This seems more like a problem with the CRAN test machine, with the movMF package installed with flexmix available but loaded with flexmix not available, maybe interacting with a caching mechanism used by the methods package to avoid re-computing methods tables? Otherwise how would movMF ever know to create the flexmix class / method?
> 
> It seems like this could cause problems for the user if they installed movMV with flexmix available, but removed flexmix. This seems like a subtler variation of 'I installed package A but then removed dependency B and now A doesn't work', which could be a bug in R's remove.packages() but....
> 
> I tried to emulate the scenario of installing movMF and then removing flexmix in an interactive session, and then looking for the warning reported below. I was not successful, but the build report with the error is no longer available so I don't know what I'm looking for...
> 
> Martin Morgan
> 
> ?On 11/11/20, 4:44 PM, "R-package-devel on behalf of Duncan Murdoch" <r-package-devel-bounces at r-project.org on behalf of murdoch.duncan at gmail.com> wrote:
> 
>      Here's what I think is happening.
> 
>      In the movMF:::.onLoad function there's a test whether flexmix is
>      installed.  If found, then it is loaded and some methods are set.  (I'm
>      not sure what caused flexmix to be installed:  I didn't intentionally
>      install it, but it ended up in there when I installed enough stuff to
>      check Mercator.)
> 
>      In the R-devel --as-cran checks, some checks are run with only strong
>      dependencies of your package visible.  Somehow I think that .onLoad
>      function sees flexmix and loads it, but then some other part of the
>      check can't see it.
> 
>      A workaround is to add flexmix to your Imports clause.  This is a strong
>      enough dependency to make it visible, and the error goes away.
> 
>      HOWEVER, to me this is pretty clearly an R-devel bug:  you have no
>      control over methods set by packages that you don't even use, so you
>      shouldn't have to change your dependency lists if one of them sets a
>      method that you're using.
> 
>      Duncan Murdoch
> 
>      On 11/11/2020 3:31 p.m., Kevin R. Coombes wrote:
>      > Oh, I forgot to mention explicitly that checking (with --as-cran) on the
>      > development version of R on Windows also produces no errors or warnings.
>      >
>      > On 11/11/2020 1:39 PM, Kevin R. Coombes wrote:
>      >> Hi Duncan,
>      >>
>      >> I just sent a longer version of this message, but it looks to me like
>      >> the underlying issue is the fact that flexmix and Mercator both define
>      >> and export "show" methods for their S4 classes.  What confuses me is
>      >> why the NAMESPACE of a package that is merely Suggest'ed by something
>      >> several layers down the hierarchy should get attached and cause an
>      >> issue like this one. (The attached NAMESPACE happens in current
>      >> versions of R.)
>      >>
>      >> Thanks,
>      >>    Kevin
>      >>
>      >> On 11/11/2020 1:07 PM, Duncan Murdoch wrote:
>      >>> Okay, I've tried testing on my Mac with R 4.0.3 and R-devel for the
>      >>> new one, 4.0.3 for the CRAN version.
>      >>>
>      >>> I'm not seeing any check error with the CRAN version.  I get an error
>      >>> trying to check 0.11.4 from R-forge because I don't have flexmix
>      >>> installed.  If I take flexmix out of the Suggests list, it checks
>      >>> with no error on 4.0.3, but I get the error you saw on R-devel when
>      >>> checked with --as-cran.
>      >>>
>      >>> I tried debugging this, and narrowed it down a bit.  It happens when
>      >>> your package is installed, in particular in the do_install_source()
>      >>> function in src/library/tools/R/install.R. But that function runs a
>      >>> new R instance, and I didn't get to debugging that.  I'll try again
>      >>> later today if nobody else figures it out.
>      >>>
>      >>> Duncan Murdoch
>      >>>
>      >>>
>      >>>
>      >>>
>      >>> On 11/11/2020 12:03 p.m., Kevin R. Coombes wrote:
>      >>>> Hi Duncan,
>      >>>>
>      >>>> Oops; I didn't realize I had forgotten to push updates to the OOMPA web
>      >>>> site.
>      >>>>
>      >>>> The code for Mercator is contained as part of the Thresher project in
>      >>>> the subversion repository on R-Forge.
>      >>>> (https://r-forge.r-project.org/projects/thresher/) It's under
>      >>>> pkg/Mercator below that URL
>      >>>>
>      >>>> Thanks,
>      >>>>      Kevin
>      >>>>
>      >>>> On 11/11/2020 11:30 AM, Duncan Murdoch wrote:
>      >>>>> Uwe suggested you suggest flexmix, but I see below you already tried
>      >>>>> that.
>      >>>>>
>      >>>>> I'd like to take a look, but I can't find your package.  The existing
>      >>>>> version on CRAN gives the URL as http://oompa.r-forge.r-project.org/,
>      >>>>> but I can't see it mentioned there.
>      >>>>>
>      >>>>> Duncan Murdoch
>      >>>>>
>      >>>>> On 11/11/2020 8:44 a.m., Kevin R. Coombes wrote:
>      >>>>>> Hi,
>      >>>>>>
>      >>>>>> I am trying to figure out how to fix warnings from two of the CRAN
>      >>>>>> machines on the submission of an update to a package. The only
>      >>>>>> change to
>      >>>>>> my package was to add a "show" method to one of the S4 classes, which
>      >>>>>> was requested by a reviewer of the paper we submitted. The
>      >>>>>> inability to
>      >>>>>> get this updated package into CRAN  is the only thing holding up the
>      >>>>>> revision (and probable acceptance) of the manuscript.
>      >>>>>>
>      >>>>>> The same "warnings"s were found in the previous version. The
>      >>>>>> package is
>      >>>>>> called Mercator, and the CRAN check results from the  last version
>      >>>>>> are here:
>      >>>>>> https://cran.r-project.org/web/checks/check_results_Mercator.html
>      >>>>>>
>      >>>>>> I get warnings from the two fedora machine instances (clang and gcc).
>      >>>>>> They both report
>      >>>>>>
>      >>>>>>> Check: whether package can be installed.
>      >>>>>>> Result: WARN
>      >>>>>>>         Found the following significant  warnings:
>      >>>>>>>         Warning: namespace ?flexmix? is  not available and has been
>      >>>>>>> replaced
>      >>>>>>     >
>      >>>>>>     > Check: data for non-ASCII characters
>      >>>>>>> Result: WARN
>      >>>>>>>          Warning: namespace 'flexmix'  is not available and has been
>      >>>>>>> replaced
>      >>>>>>>          by .GlobalEnv when processing  object '<unknown>'
>      >>>>>>
>      >>>>>> The relationships in the DESCRIPTION files are:
>      >>>>>>
>      >>>>>> 1. Mercator depends on Thresher
>      >>>>>> 2. Thresher imports moVMF
>      >>>>>> 3. moMVF suggests flexmix
>      >>>>>>
>      >>>>>> On my Windows machine, the package builds and installs with no
>      >>>>>> errors or
>      >>>>>> warnings even if flexmix is not available (which I believe to be the
>      >>>>>> correct behavior). On R-Forge, both the Windows and LINUX versions
>      >>>>>> build
>      >>>>>> and install with no errors or warnings. On R-Hub, tested on multiple
>      >>>>>> LINUX versions, the package builds and installs with no errors or
>      >>>>>> warnings.
>      >>>>>>
>      >>>>>> And flexmix is still clearly available from CRAN:
>      >>>>>> https://cran.r-project.org/web/packages/flexmix/index.html
>      >>>>>>
>      >>>>>> In the latest attempt to get things to work, I added
>      >>>>>>       Suggests: flexmix
>      >>>>>> into the DESCRIPTION file for Mercator, but this didn't help fix the
>      >>>>>> problem on CRAN.
>      >>>>>>
>      >>>>>> Is there anything I can do to fix this problem (other than moan
>      >>>>>> here on
>      >>>>>> this list and hope that CRAN can just install flexmix on those
>      >>>>>> machines)?
>      >>>>>>
>      >>>>>> Thanks in advance for your help,
>      >>>>>>       Kevin
>      >>>>>>
>      >>>>>>       [[alternative HTML version deleted]]
>      >>>>>>
>      >>>>>> ______________________________________________
>      >>>>>> R-package-devel at r-project.org mailing list
>      >>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>      >>>>>>
>      >>>>>
>      >>>>
>      >>>
>      >>
>      >
> 
>      ______________________________________________
>      R-package-devel at r-project.org mailing list
>      https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From |uoc|3009 @end|ng |rom gm@||@com  Fri Nov 13 09:10:13 2020
From: |uoc|3009 @end|ng |rom gm@||@com (Jason Luo)
Date: Fri, 13 Nov 2020 03:10:13 -0500
Subject: [R-pkg-devel] Import package countreg that is not on CRAN
Message-ID: <CAA6Shk-acK8wgv2pATykvvbyn6jt7xLUktYY_0_LtQb_GpuwNg@mail.gmail.com>

Hi,

I'm submitting a new package (https://github.com/Penncil/pda/) to CRAN. It
relies on some function (zerotrunc and hurdle in R/ODAP.R) from countreg (
https://rdrr.io/rforge/countreg/) , which is not on CRAN. The submission
returns error as below

https://win-builder.r-project.org/incoming_pretest/pda_1.0_20201113_083442/Debian/00check.log

Seems the r-forge repo is identified in the DESCRIPTION
Additional_repositories, but countreg is still not available. I assume this
is not a rare problem but didn't find useful solutions online. Any
suggestions? Thanks!

Best,
Chongliang

	[[alternative HTML version deleted]]


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Fri Nov 13 12:08:56 2020
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Fri, 13 Nov 2020 12:08:56 +0100
Subject: [R-pkg-devel] Import package countreg that is not on CRAN
In-Reply-To: <CAA6Shk-acK8wgv2pATykvvbyn6jt7xLUktYY_0_LtQb_GpuwNg@mail.gmail.com>
References: <CAA6Shk-acK8wgv2pATykvvbyn6jt7xLUktYY_0_LtQb_GpuwNg@mail.gmail.com>
Message-ID: <43f014ac-86f7-cf3e-d94f-9f6c37be8637@statistik.tu-dortmund.de>

You cannot use strong dependencies to packages that are not in standard 
repositories such as CRAN or BioC.

Best,
Uwe Ligges



On 13.11.2020 09:10, Jason Luo wrote:
> Hi,
> 
> I'm submitting a new package (https://github.com/Penncil/pda/) to CRAN. It
> relies on some function (zerotrunc and hurdle in R/ODAP.R) from countreg (
> https://rdrr.io/rforge/countreg/) , which is not on CRAN. The submission
> returns error as below
> 
> https://win-builder.r-project.org/incoming_pretest/pda_1.0_20201113_083442/Debian/00check.log
> 
> Seems the r-forge repo is identified in the DESCRIPTION
> Additional_repositories, but countreg is still not available. I assume this
> is not a rare problem but didn't find useful solutions online. Any
> suggestions? Thanks!
> 
> Best,
> Chongliang
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From murdoch@dunc@n @end|ng |rom gm@||@com  Fri Nov 13 12:14:36 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Fri, 13 Nov 2020 06:14:36 -0500
Subject: [R-pkg-devel] Import package countreg that is not on CRAN
In-Reply-To: <CAA6Shk-acK8wgv2pATykvvbyn6jt7xLUktYY_0_LtQb_GpuwNg@mail.gmail.com>
References: <CAA6Shk-acK8wgv2pATykvvbyn6jt7xLUktYY_0_LtQb_GpuwNg@mail.gmail.com>
Message-ID: <971e8cb6-ce6c-bdf0-3a50-8eb3bf586693@gmail.com>

On 13/11/2020 3:10 a.m., Jason Luo wrote:
> Hi,
> 
> I'm submitting a new package (https://github.com/Penncil/pda/) to CRAN. It
> relies on some function (zerotrunc and hurdle in R/ODAP.R) from countreg (
> https://rdrr.io/rforge/countreg/) , which is not on CRAN. The submission
> returns error as below
> 
> https://win-builder.r-project.org/incoming_pretest/pda_1.0_20201113_083442/Debian/00check.log
> 
> Seems the r-forge repo is identified in the DESCRIPTION
> Additional_repositories, but countreg is still not available. I assume this
> is not a rare problem but didn't find useful solutions online. Any
> suggestions? Thanks!

If countreg is not in one of the mainstream repositories (CRAN or 
Bioconductor), then it may not have been subject to careful testing, so 
CRAN sees it as unreliable.  Since your package depends on it, yours is 
also unreliable, so CRAN won't publish it.

I don't know anything about the pda or countreg packages, so this is 
general advice on what you could do, and may not be applicable here:

   - you could take over maintenance of countreg (if its current 
maintainer agrees), and put in the work to get it on CRAN.
   - you could copy parts of countreg to your own package (if its 
license allows that), and drop your dependence on it.
   - you could substitute some other CRAN package that provides 
equivalent functionality and depend on that instead.
   - you could drop the parts of your package that need countreg, and 
submit a smaller package to CRAN without that dependency.
   - you could publicize that your package is on Github, and give up on 
publishing it on CRAN.

Duncan Murdoch


From Jo@ephP@rk @end|ng |rom IEEE@org  Fri Nov 13 14:23:44 2020
From: Jo@ephP@rk @end|ng |rom IEEE@org (Joseph Park)
Date: Fri, 13 Nov 2020 08:23:44 -0500
Subject: [R-pkg-devel] Error in loadNamespace(x) : there is no package
 called 'formatR'
Message-ID: <04de00c7-78fc-16d3-05fd-92e6e9030062@IEEE.org>

Dear r-package-devel,

The rEDM package is failing the automated check, as noted here:

https://win-builder.r-project.org/incoming_pretest/rEDM_1.7.0_20201113_131811/Windows/00check.log

When running rhub::check_for_cran(), disk file errors were reported.

The automated check seems to be failing with:

Error in loadNamespace(x) : there is no package called 'formatR'

This package does not explicitly use formatR:

Imports: methods, Rcpp (>= 1.0.1)
LinkingTo: Rcpp, RcppThread
Suggests: knitr, rmarkdown
VignetteBuilder: knitr

Could it be these errors (disk full, no formatR) are related?? If not, 
does formatR need to be listed as a dependency?

If the former (R server config/resource build errors), do I need to 
resubmit the package?

Thank you.

J Park


	[[alternative HTML version deleted]]


From c@@rd|@g@bor @end|ng |rom gm@||@com  Fri Nov 13 14:58:54 2020
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Fri, 13 Nov 2020 13:58:54 +0000
Subject: [R-pkg-devel] Error in loadNamespace(x) : there is no package
 called 'formatR'
In-Reply-To: <04de00c7-78fc-16d3-05fd-92e6e9030062@IEEE.org>
References: <04de00c7-78fc-16d3-05fd-92e6e9030062@IEEE.org>
Message-ID: <CABtg=KnfuU81to2oxGHM7O9hUS1o_P8drfPMGNCFvoB1Wvvuow@mail.gmail.com>

I think you need to Suggest the formatR package, because your
vignettes use it. From 'Writing R extensions':

"Many packages using knitr also need the package formatR which it
suggests and so the user package needs to do so too and include this
in ?VignetteBuilder?."

Gabor

On Fri, Nov 13, 2020 at 1:49 PM Joseph Park <JosephPark at ieee.org> wrote:
>
> Dear r-package-devel,
>
> The rEDM package is failing the automated check, as noted here:
>
> https://win-builder.r-project.org/incoming_pretest/rEDM_1.7.0_20201113_131811/Windows/00check.log
>
> When running rhub::check_for_cran(), disk file errors were reported.
>
> The automated check seems to be failing with:
>
> Error in loadNamespace(x) : there is no package called 'formatR'
>
> This package does not explicitly use formatR:
>
> Imports: methods, Rcpp (>= 1.0.1)
> LinkingTo: Rcpp, RcppThread
> Suggests: knitr, rmarkdown
> VignetteBuilder: knitr
>
> Could it be these errors (disk full, no formatR) are related?  If not,
> does formatR need to be listed as a dependency?
>
> If the former (R server config/resource build errors), do I need to
> resubmit the package?
>
> Thank you.
>
> J Park
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From henr|k@bengt@@on @end|ng |rom gm@||@com  Fri Nov 13 16:11:05 2020
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Fri, 13 Nov 2020 07:11:05 -0800
Subject: [R-pkg-devel] Import package countreg that is not on CRAN
In-Reply-To: <971e8cb6-ce6c-bdf0-3a50-8eb3bf586693@gmail.com>
References: <CAA6Shk-acK8wgv2pATykvvbyn6jt7xLUktYY_0_LtQb_GpuwNg@mail.gmail.com>
 <971e8cb6-ce6c-bdf0-3a50-8eb3bf586693@gmail.com>
Message-ID: <CAFDcVCRugrmn0VDEKghykbzYsRy6iAmQrAvsW5MjJ=kRZLk4-Q@mail.gmail.com>

You can change your package from using:

  Imports: countreg

to use:

  Suggests: countreg

For this to work, you'll have to update your code, package tests,
examples, and vignettes, to run conditionally on 'countreg' being
installed, e.g.

if (requireNamespace("countreg", quietly = TRUE)) {
  ...
}

Whether or not this makes sense depends on how central 'countreg' is
to your package.  If it is only needed optionally and for a small part
of your functionality, then it's doable but if it's a mission-critical
dependency, it might be too much of a hack.

This is in compliance with CRAN and in agreement with what Uwe says too.

I've used this myself in for instance
https://cran.r-project.org/web/package=aroma.core where small parts of
the functionality depend on packages not in the mainstream (= CRAN &
Bioconductor) repositories. This allows those who wish to use
alternative methods, if they want to go the extra mile to install
them.  Also, if they're popular enough it might nudge the maintainers
of those enough to submit to CRAN or Bioconductor - a process that
might take years, if at all.

/Henrik

On Fri, Nov 13, 2020 at 3:23 AM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>
> On 13/11/2020 3:10 a.m., Jason Luo wrote:
> > Hi,
> >
> > I'm submitting a new package (https://github.com/Penncil/pda/) to CRAN. It
> > relies on some function (zerotrunc and hurdle in R/ODAP.R) from countreg (
> > https://rdrr.io/rforge/countreg/) , which is not on CRAN. The submission
> > returns error as below
> >
> > https://win-builder.r-project.org/incoming_pretest/pda_1.0_20201113_083442/Debian/00check.log
> >
> > Seems the r-forge repo is identified in the DESCRIPTION
> > Additional_repositories, but countreg is still not available. I assume this
> > is not a rare problem but didn't find useful solutions online. Any
> > suggestions? Thanks!
>
> If countreg is not in one of the mainstream repositories (CRAN or
> Bioconductor), then it may not have been subject to careful testing, so
> CRAN sees it as unreliable.  Since your package depends on it, yours is
> also unreliable, so CRAN won't publish it.
>
> I don't know anything about the pda or countreg packages, so this is
> general advice on what you could do, and may not be applicable here:
>
>    - you could take over maintenance of countreg (if its current
> maintainer agrees), and put in the work to get it on CRAN.
>    - you could copy parts of countreg to your own package (if its
> license allows that), and drop your dependence on it.
>    - you could substitute some other CRAN package that provides
> equivalent functionality and depend on that instead.
>    - you could drop the parts of your package that need countreg, and
> submit a smaller package to CRAN without that dependency.
>    - you could publicize that your package is on Github, and give up on
> publishing it on CRAN.
>
> Duncan Murdoch
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From Jo@ephP@rk @end|ng |rom IEEE@org  Fri Nov 13 16:23:05 2020
From: Jo@ephP@rk @end|ng |rom IEEE@org (Joseph Park)
Date: Fri, 13 Nov 2020 10:23:05 -0500
Subject: [R-pkg-devel] Error in loadNamespace(x) : there is no package
 called 'formatR'
In-Reply-To: <CABtg=KnfuU81to2oxGHM7O9hUS1o_P8drfPMGNCFvoB1Wvvuow@mail.gmail.com>
References: <04de00c7-78fc-16d3-05fd-92e6e9030062@IEEE.org>
 <CABtg=KnfuU81to2oxGHM7O9hUS1o_P8drfPMGNCFvoB1Wvvuow@mail.gmail.com>
Message-ID: <39a06a48-fe0e-2054-970c-8810125424ac@IEEE.org>

Ah, yes... I see it now in Writing R Extensions.? Apologies for the 
oversight.

Regarding rmarkdown, is it redundant to include rmarkdown in 
VignetteBuilder if it is in Suggests, or is perhaps needed in the build 
config as a separate entity?

e.g:

Suggests: knitr, rmarkdown
VignetteBuilder: knitr, formatR

or

Suggests: knitr, rmarkdown
VignetteBuilder: knitr, rmarkdown, formatR

Thank you.

J Park

On 11/13/20 8:58 AM, G?bor Cs?rdi wrote:
> I think you need to Suggest the formatR package, because your
> vignettes use it. From 'Writing R extensions':
>
> "Many packages using knitr also need the package formatR which it
> suggests and so the user package needs to do so too and include this
> in ?VignetteBuilder?."
>
> Gabor
>
> On Fri, Nov 13, 2020 at 1:49 PM Joseph Park <JosephPark at ieee.org> wrote:
>> Dear r-package-devel,
>>
>> The rEDM package is failing the automated check, as noted here:
>>
>> https://win-builder.r-project.org/incoming_pretest/rEDM_1.7.0_20201113_131811/Windows/00check.log
>>
>> When running rhub::check_for_cran(), disk file errors were reported.
>>
>> The automated check seems to be failing with:
>>
>> Error in loadNamespace(x) : there is no package called 'formatR'
>>
>> This package does not explicitly use formatR:
>>
>> Imports: methods, Rcpp (>= 1.0.1)
>> LinkingTo: Rcpp, RcppThread
>> Suggests: knitr, rmarkdown
>> VignetteBuilder: knitr
>>
>> Could it be these errors (disk full, no formatR) are related?  If not,
>> does formatR need to be listed as a dependency?
>>
>> If the former (R server config/resource build errors), do I need to
>> resubmit the package?
>>
>> Thank you.
>>
>> J Park
>>
>>
>>          [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From c@@rd|@g@bor @end|ng |rom gm@||@com  Fri Nov 13 16:31:11 2020
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Fri, 13 Nov 2020 15:31:11 +0000
Subject: [R-pkg-devel] Error in loadNamespace(x) : there is no package
 called 'formatR'
In-Reply-To: <39a06a48-fe0e-2054-970c-8810125424ac@IEEE.org>
References: <04de00c7-78fc-16d3-05fd-92e6e9030062@IEEE.org>
 <CABtg=KnfuU81to2oxGHM7O9hUS1o_P8drfPMGNCFvoB1Wvvuow@mail.gmail.com>
 <39a06a48-fe0e-2054-970c-8810125424ac@IEEE.org>
Message-ID: <CABtg=KkuAqw0B4xXkjZpD9CeB4fDdNpuO7jF5iVxma4_7C7WrQ@mail.gmail.com>

>From WRE:

"Note that if, for example, a vignette has engine ?knitr::rmarkdown?,
then knitr provides the engine but both knitr and rmarkdown are needed
for using it, so both these packages need to be in the
?VignetteBuilder? field and at least suggested (as rmarkdown is only
suggested by knitr, and hence not available automatically along with
it). Many packages using knitr also need the package formatR which it
suggests and so the user package needs to do so too and include this
in ?VignetteBuilder?."

So I think you need

Suggests: knitr, rmarkdown, formatR
VignetteBuilder: knitr, rmarkdown, formatR

On Fri, Nov 13, 2020 at 3:23 PM Joseph Park <JosephPark at ieee.org> wrote:
>
> Ah, yes... I see it now in Writing R Extensions.  Apologies for the
> oversight.
>
> Regarding rmarkdown, is it redundant to include rmarkdown in
> VignetteBuilder if it is in Suggests, or is perhaps needed in the build
> config as a separate entity?
>
> e.g:
>
> Suggests: knitr, rmarkdown
> VignetteBuilder: knitr, formatR
>
> or
>
> Suggests: knitr, rmarkdown
> VignetteBuilder: knitr, rmarkdown, formatR
>
> Thank you.
>
> J Park
>
> On 11/13/20 8:58 AM, G?bor Cs?rdi wrote:
> > I think you need to Suggest the formatR package, because your
> > vignettes use it. From 'Writing R extensions':
> >
> > "Many packages using knitr also need the package formatR which it
> > suggests and so the user package needs to do so too and include this
> > in ?VignetteBuilder?."
> >
> > Gabor
> >
> > On Fri, Nov 13, 2020 at 1:49 PM Joseph Park <JosephPark at ieee.org> wrote:
> >> Dear r-package-devel,
> >>
> >> The rEDM package is failing the automated check, as noted here:
> >>
> >> https://win-builder.r-project.org/incoming_pretest/rEDM_1.7.0_20201113_131811/Windows/00check.log
> >>
> >> When running rhub::check_for_cran(), disk file errors were reported.
> >>
> >> The automated check seems to be failing with:
> >>
> >> Error in loadNamespace(x) : there is no package called 'formatR'
> >>
> >> This package does not explicitly use formatR:
> >>
> >> Imports: methods, Rcpp (>= 1.0.1)
> >> LinkingTo: Rcpp, RcppThread
> >> Suggests: knitr, rmarkdown
> >> VignetteBuilder: knitr
> >>
> >> Could it be these errors (disk full, no formatR) are related?  If not,
> >> does formatR need to be listed as a dependency?
> >>
> >> If the former (R server config/resource build errors), do I need to
> >> resubmit the package?
> >>
> >> Thank you.
> >>
> >> J Park
> >>
> >>
> >>          [[alternative HTML version deleted]]
> >>
> >> ______________________________________________
> >> R-package-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From murdoch@dunc@n @end|ng |rom gm@||@com  Fri Nov 13 16:44:42 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Fri, 13 Nov 2020 10:44:42 -0500
Subject: [R-pkg-devel] Import package countreg that is not on CRAN
In-Reply-To: <CAFDcVCRugrmn0VDEKghykbzYsRy6iAmQrAvsW5MjJ=kRZLk4-Q@mail.gmail.com>
References: <CAA6Shk-acK8wgv2pATykvvbyn6jt7xLUktYY_0_LtQb_GpuwNg@mail.gmail.com>
 <971e8cb6-ce6c-bdf0-3a50-8eb3bf586693@gmail.com>
 <CAFDcVCRugrmn0VDEKghykbzYsRy6iAmQrAvsW5MjJ=kRZLk4-Q@mail.gmail.com>
Message-ID: <9b22f484-ea68-559e-14f3-f862929f8602@gmail.com>

Yes, thanks, I missed that option.

On 13/11/2020 10:11 a.m., Henrik Bengtsson wrote:
> You can change your package from using:
> 
>    Imports: countreg
> 
> to use:
> 
>    Suggests: countreg
> 
> For this to work, you'll have to update your code, package tests,
> examples, and vignettes, to run conditionally on 'countreg' being
> installed, e.g.
> 
> if (requireNamespace("countreg", quietly = TRUE)) {
>    ...
> }
> 
> Whether or not this makes sense depends on how central 'countreg' is
> to your package.  If it is only needed optionally and for a small part
> of your functionality, then it's doable but if it's a mission-critical
> dependency, it might be too much of a hack.
> 
> This is in compliance with CRAN and in agreement with what Uwe says too.
> 
> I've used this myself in for instance
> https://cran.r-project.org/web/package=aroma.core where small parts of
> the functionality depend on packages not in the mainstream (= CRAN &
> Bioconductor) repositories. This allows those who wish to use
> alternative methods, if they want to go the extra mile to install
> them.  Also, if they're popular enough it might nudge the maintainers
> of those enough to submit to CRAN or Bioconductor - a process that
> might take years, if at all.
> 
> /Henrik
> 
> On Fri, Nov 13, 2020 at 3:23 AM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>>
>> On 13/11/2020 3:10 a.m., Jason Luo wrote:
>>> Hi,
>>>
>>> I'm submitting a new package (https://github.com/Penncil/pda/) to CRAN. It
>>> relies on some function (zerotrunc and hurdle in R/ODAP.R) from countreg (
>>> https://rdrr.io/rforge/countreg/) , which is not on CRAN. The submission
>>> returns error as below
>>>
>>> https://win-builder.r-project.org/incoming_pretest/pda_1.0_20201113_083442/Debian/00check.log
>>>
>>> Seems the r-forge repo is identified in the DESCRIPTION
>>> Additional_repositories, but countreg is still not available. I assume this
>>> is not a rare problem but didn't find useful solutions online. Any
>>> suggestions? Thanks!
>>
>> If countreg is not in one of the mainstream repositories (CRAN or
>> Bioconductor), then it may not have been subject to careful testing, so
>> CRAN sees it as unreliable.  Since your package depends on it, yours is
>> also unreliable, so CRAN won't publish it.
>>
>> I don't know anything about the pda or countreg packages, so this is
>> general advice on what you could do, and may not be applicable here:
>>
>>     - you could take over maintenance of countreg (if its current
>> maintainer agrees), and put in the work to get it on CRAN.
>>     - you could copy parts of countreg to your own package (if its
>> license allows that), and drop your dependence on it.
>>     - you could substitute some other CRAN package that provides
>> equivalent functionality and depend on that instead.
>>     - you could drop the parts of your package that need countreg, and
>> submit a smaller package to CRAN without that dependency.
>>     - you could publicize that your package is on Github, and give up on
>> publishing it on CRAN.
>>
>> Duncan Murdoch
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From Jo@ephP@rk @end|ng |rom IEEE@org  Fri Nov 13 16:47:18 2020
From: Jo@ephP@rk @end|ng |rom IEEE@org (Joseph Park)
Date: Fri, 13 Nov 2020 10:47:18 -0500
Subject: [R-pkg-devel] Error in loadNamespace(x) : there is no package
 called 'formatR'
In-Reply-To: <CABtg=KkuAqw0B4xXkjZpD9CeB4fDdNpuO7jF5iVxma4_7C7WrQ@mail.gmail.com>
References: <04de00c7-78fc-16d3-05fd-92e6e9030062@IEEE.org>
 <CABtg=KnfuU81to2oxGHM7O9hUS1o_P8drfPMGNCFvoB1Wvvuow@mail.gmail.com>
 <39a06a48-fe0e-2054-970c-8810125424ac@IEEE.org>
 <CABtg=KkuAqw0B4xXkjZpD9CeB4fDdNpuO7jF5iVxma4_7C7WrQ@mail.gmail.com>
Message-ID: <574f823a-61dd-b72b-d250-75d4e50d5ddf@IEEE.org>

Thank you.

On 11/13/20 10:31 AM, G?bor Cs?rdi wrote:
> >From WRE:
>
> "Note that if, for example, a vignette has engine ?knitr::rmarkdown?,
> then knitr provides the engine but both knitr and rmarkdown are needed
> for using it, so both these packages need to be in the
> ?VignetteBuilder? field and at least suggested (as rmarkdown is only
> suggested by knitr, and hence not available automatically along with
> it). Many packages using knitr also need the package formatR which it
> suggests and so the user package needs to do so too and include this
> in ?VignetteBuilder?."
>
> So I think you need
>
> Suggests: knitr, rmarkdown, formatR
> VignetteBuilder: knitr, rmarkdown, formatR
>
> On Fri, Nov 13, 2020 at 3:23 PM Joseph Park <JosephPark at ieee.org> wrote:
>> Ah, yes... I see it now in Writing R Extensions.  Apologies for the
>> oversight.
>>
>> Regarding rmarkdown, is it redundant to include rmarkdown in
>> VignetteBuilder if it is in Suggests, or is perhaps needed in the build
>> config as a separate entity?
>>
>> e.g:
>>
>> Suggests: knitr, rmarkdown
>> VignetteBuilder: knitr, formatR
>>
>> or
>>
>> Suggests: knitr, rmarkdown
>> VignetteBuilder: knitr, rmarkdown, formatR
>>
>> Thank you.
>>
>> J Park
>>
>> On 11/13/20 8:58 AM, G?bor Cs?rdi wrote:
>>> I think you need to Suggest the formatR package, because your
>>> vignettes use it. From 'Writing R extensions':
>>>
>>> "Many packages using knitr also need the package formatR which it
>>> suggests and so the user package needs to do so too and include this
>>> in ?VignetteBuilder?."
>>>
>>> Gabor
>>>
>>> On Fri, Nov 13, 2020 at 1:49 PM Joseph Park <JosephPark at ieee.org> wrote:
>>>> Dear r-package-devel,
>>>>
>>>> The rEDM package is failing the automated check, as noted here:
>>>>
>>>> https://win-builder.r-project.org/incoming_pretest/rEDM_1.7.0_20201113_131811/Windows/00check.log
>>>>
>>>> When running rhub::check_for_cran(), disk file errors were reported.
>>>>
>>>> The automated check seems to be failing with:
>>>>
>>>> Error in loadNamespace(x) : there is no package called 'formatR'
>>>>
>>>> This package does not explicitly use formatR:
>>>>
>>>> Imports: methods, Rcpp (>= 1.0.1)
>>>> LinkingTo: Rcpp, RcppThread
>>>> Suggests: knitr, rmarkdown
>>>> VignetteBuilder: knitr
>>>>
>>>> Could it be these errors (disk full, no formatR) are related?  If not,
>>>> does formatR need to be listed as a dependency?
>>>>
>>>> If the former (R server config/resource build errors), do I need to
>>>> resubmit the package?
>>>>
>>>> Thank you.
>>>>
>>>> J Park
>>>>
>>>>
>>>>           [[alternative HTML version deleted]]
>>>>
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
-- 
Joseph Park <http://jpark.us/>, PhD, PE
U.S. Department of Interior <https://www.doi.gov/>, SFNRC 
<https://www.nps.gov/ever/learn/scienceresearch.htm>
Software Literacy Foundation <http://softwareliteracyfoundation.org/>
UCSD Sugihara Lab <https://deepeco.ucsd.edu/>

	[[alternative HTML version deleted]]


From henr|k@bengt@@on @end|ng |rom gm@||@com  Fri Nov 13 19:09:32 2020
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Fri, 13 Nov 2020 10:09:32 -0800
Subject: [R-pkg-devel] Error in loadNamespace(x) : there is no package
 called 'formatR'
In-Reply-To: <574f823a-61dd-b72b-d250-75d4e50d5ddf@IEEE.org>
References: <04de00c7-78fc-16d3-05fd-92e6e9030062@IEEE.org>
 <CABtg=KnfuU81to2oxGHM7O9hUS1o_P8drfPMGNCFvoB1Wvvuow@mail.gmail.com>
 <39a06a48-fe0e-2054-970c-8810125424ac@IEEE.org>
 <CABtg=KkuAqw0B4xXkjZpD9CeB4fDdNpuO7jF5iVxma4_7C7WrQ@mail.gmail.com>
 <574f823a-61dd-b72b-d250-75d4e50d5ddf@IEEE.org>
Message-ID: <CAFDcVCRw7dn3FggSsY+=nbLrxm=DJzcchX9PC2vGd9eLKfjhXA@mail.gmail.com>

I'm quite sure you want to use the following:

Suggests: knitr, rmarkdown, formatR
VignetteBuilder: knitr

Here are the details.  For the 'VignetteBuilder' field, you want to
put all packages that provide the **vignette engines** you are using.
For example, if your package vignettes use either of

%\VignetteEngine{knitr::knitr}
%\VignetteEngine{knitr::rmarkdown}

your package is using a vignette engine from the 'knitr' package, so
you need to specify:

VignetteBuilder: knitr

Next, with 'knitr' listed in 'VignetteBuilder', you need to make sure
'knitr' is listed in either 'Depends' or 'Suggests' (or possibly
'Imports' - not sure).  If 'knitr' is only used for your vignettes, it
is sufficient to specify it under 'Suggests', which is also the most
common way to use it, i.e.

Suggests: knitr

The above settles the **vignette-engine package**.  Then your vignette
engine might depend on additional packages.  Your package needs to
depend on those too, typically also listed under 'Suggests'.  For
example, when you use %\VignetteEngine{knitr::rmarkdown}, that
vignette engine requires the 'rmarkdown' package (can be guessed from
them name but reading the docs is the only way to be sure - I think
there's work in 'tools' to improve on this).    So, this means you
need to use:

Suggests: knitr, rmarkdown

Finally, if your vignettes make use of additional, optional features
from other packages, you need to make sure your package depends on
those too.  Since you make use of 'formatR' features, you need to add
that to Suggests as well;

Suggests: knitr, rmarkdown, formatR

/Henrik

PS. Vignettes are a bit of special creatures. Their dependencies are
only needed during 'R CMD build' and 'R CMD check', which most
end-users never perform. I think it could be favorable if we could
declare vignette dependencies separate from install/run-time
dependencies, e.g.

VignetteBuilder: knitr
VignetteDepends: rmarkdown, formatR

It should make the above process a bit clearer.  It would also make it
clear to those who are only interested in viewing vignettes, but have
no interest in rebuilding vignettes, what packages they need to
install in order to access all of the package's functions.  Just an
idea.

On Fri, Nov 13, 2020 at 7:55 AM Joseph Park <JosephPark at ieee.org> wrote:
>
> Thank you.
>
> On 11/13/20 10:31 AM, G?bor Cs?rdi wrote:
> > >From WRE:
> >
> > "Note that if, for example, a vignette has engine ?knitr::rmarkdown?,
> > then knitr provides the engine but both knitr and rmarkdown are needed
> > for using it, so both these packages need to be in the
> > ?VignetteBuilder? field and at least suggested (as rmarkdown is only
> > suggested by knitr, and hence not available automatically along with
> > it). Many packages using knitr also need the package formatR which it
> > suggests and so the user package needs to do so too and include this
> > in ?VignetteBuilder?."
> >
> > So I think you need
> >
> > Suggests: knitr, rmarkdown, formatR
> > VignetteBuilder: knitr, rmarkdown, formatR
> >
> > On Fri, Nov 13, 2020 at 3:23 PM Joseph Park <JosephPark at ieee.org> wrote:
> >> Ah, yes... I see it now in Writing R Extensions.  Apologies for the
> >> oversight.
> >>
> >> Regarding rmarkdown, is it redundant to include rmarkdown in
> >> VignetteBuilder if it is in Suggests, or is perhaps needed in the build
> >> config as a separate entity?
> >>
> >> e.g:
> >>
> >> Suggests: knitr, rmarkdown
> >> VignetteBuilder: knitr, formatR
> >>
> >> or
> >>
> >> Suggests: knitr, rmarkdown
> >> VignetteBuilder: knitr, rmarkdown, formatR
> >>
> >> Thank you.
> >>
> >> J Park
> >>
> >> On 11/13/20 8:58 AM, G?bor Cs?rdi wrote:
> >>> I think you need to Suggest the formatR package, because your
> >>> vignettes use it. From 'Writing R extensions':
> >>>
> >>> "Many packages using knitr also need the package formatR which it
> >>> suggests and so the user package needs to do so too and include this
> >>> in ?VignetteBuilder?."
> >>>
> >>> Gabor
> >>>
> >>> On Fri, Nov 13, 2020 at 1:49 PM Joseph Park <JosephPark at ieee.org> wrote:
> >>>> Dear r-package-devel,
> >>>>
> >>>> The rEDM package is failing the automated check, as noted here:
> >>>>
> >>>> https://win-builder.r-project.org/incoming_pretest/rEDM_1.7.0_20201113_131811/Windows/00check.log
> >>>>
> >>>> When running rhub::check_for_cran(), disk file errors were reported.
> >>>>
> >>>> The automated check seems to be failing with:
> >>>>
> >>>> Error in loadNamespace(x) : there is no package called 'formatR'
> >>>>
> >>>> This package does not explicitly use formatR:
> >>>>
> >>>> Imports: methods, Rcpp (>= 1.0.1)
> >>>> LinkingTo: Rcpp, RcppThread
> >>>> Suggests: knitr, rmarkdown
> >>>> VignetteBuilder: knitr
> >>>>
> >>>> Could it be these errors (disk full, no formatR) are related?  If not,
> >>>> does formatR need to be listed as a dependency?
> >>>>
> >>>> If the former (R server config/resource build errors), do I need to
> >>>> resubmit the package?
> >>>>
> >>>> Thank you.
> >>>>
> >>>> J Park
> >>>>
> >>>>
> >>>>           [[alternative HTML version deleted]]
> >>>>
> >>>> ______________________________________________
> >>>> R-package-devel at r-project.org mailing list
> >>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >> ______________________________________________
> >> R-package-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> --
> Joseph Park <http://jpark.us/>, PhD, PE
> U.S. Department of Interior <https://www.doi.gov/>, SFNRC
> <https://www.nps.gov/ever/learn/scienceresearch.htm>
> Software Literacy Foundation <http://softwareliteracyfoundation.org/>
> UCSD Sugihara Lab <https://deepeco.ucsd.edu/>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From Jo@ephP@rk @end|ng |rom IEEE@org  Fri Nov 13 19:21:58 2020
From: Jo@ephP@rk @end|ng |rom IEEE@org (Joseph Park)
Date: Fri, 13 Nov 2020 13:21:58 -0500
Subject: [R-pkg-devel] Error in loadNamespace(x) : there is no package
 called 'formatR'
In-Reply-To: <CAFDcVCRw7dn3FggSsY+=nbLrxm=DJzcchX9PC2vGd9eLKfjhXA@mail.gmail.com>
References: <04de00c7-78fc-16d3-05fd-92e6e9030062@IEEE.org>
 <CABtg=KnfuU81to2oxGHM7O9hUS1o_P8drfPMGNCFvoB1Wvvuow@mail.gmail.com>
 <39a06a48-fe0e-2054-970c-8810125424ac@IEEE.org>
 <CABtg=KkuAqw0B4xXkjZpD9CeB4fDdNpuO7jF5iVxma4_7C7WrQ@mail.gmail.com>
 <574f823a-61dd-b72b-d250-75d4e50d5ddf@IEEE.org>
 <CAFDcVCRw7dn3FggSsY+=nbLrxm=DJzcchX9PC2vGd9eLKfjhXA@mail.gmail.com>
Message-ID: <152d897d-ecb7-5d7d-8509-eb350a69fc45@IEEE.org>

Thank you for the clarification.

J Park

On 11/13/20 1:09 PM, Henrik Bengtsson wrote:
> I'm quite sure you want to use the following:
>
> Suggests: knitr, rmarkdown, formatR
> VignetteBuilder: knitr
>
> Here are the details.  For the 'VignetteBuilder' field, you want to
> put all packages that provide the **vignette engines** you are using.
> For example, if your package vignettes use either of
>
> %\VignetteEngine{knitr::knitr}
> %\VignetteEngine{knitr::rmarkdown}
>
> your package is using a vignette engine from the 'knitr' package, so
> you need to specify:
>
> VignetteBuilder: knitr
>
> Next, with 'knitr' listed in 'VignetteBuilder', you need to make sure
> 'knitr' is listed in either 'Depends' or 'Suggests' (or possibly
> 'Imports' - not sure).  If 'knitr' is only used for your vignettes, it
> is sufficient to specify it under 'Suggests', which is also the most
> common way to use it, i.e.
>
> Suggests: knitr
>
> The above settles the **vignette-engine package**.  Then your vignette
> engine might depend on additional packages.  Your package needs to
> depend on those too, typically also listed under 'Suggests'.  For
> example, when you use %\VignetteEngine{knitr::rmarkdown}, that
> vignette engine requires the 'rmarkdown' package (can be guessed from
> them name but reading the docs is the only way to be sure - I think
> there's work in 'tools' to improve on this).    So, this means you
> need to use:
>
> Suggests: knitr, rmarkdown
>
> Finally, if your vignettes make use of additional, optional features
> from other packages, you need to make sure your package depends on
> those too.  Since you make use of 'formatR' features, you need to add
> that to Suggests as well;
>
> Suggests: knitr, rmarkdown, formatR
>
> /Henrik
>
> PS. Vignettes are a bit of special creatures. Their dependencies are
> only needed during 'R CMD build' and 'R CMD check', which most
> end-users never perform. I think it could be favorable if we could
> declare vignette dependencies separate from install/run-time
> dependencies, e.g.
>
> VignetteBuilder: knitr
> VignetteDepends: rmarkdown, formatR
>
> It should make the above process a bit clearer.  It would also make it
> clear to those who are only interested in viewing vignettes, but have
> no interest in rebuilding vignettes, what packages they need to
> install in order to access all of the package's functions.  Just an
> idea.
>
> On Fri, Nov 13, 2020 at 7:55 AM Joseph Park <JosephPark at ieee.org> wrote:
>> Thank you.
>>
>> On 11/13/20 10:31 AM, G?bor Cs?rdi wrote:
>>> >From WRE:
>>>
>>> "Note that if, for example, a vignette has engine ?knitr::rmarkdown?,
>>> then knitr provides the engine but both knitr and rmarkdown are needed
>>> for using it, so both these packages need to be in the
>>> ?VignetteBuilder? field and at least suggested (as rmarkdown is only
>>> suggested by knitr, and hence not available automatically along with
>>> it). Many packages using knitr also need the package formatR which it
>>> suggests and so the user package needs to do so too and include this
>>> in ?VignetteBuilder?."
>>>
>>> So I think you need
>>>
>>> Suggests: knitr, rmarkdown, formatR
>>> VignetteBuilder: knitr, rmarkdown, formatR
>>>
>>> On Fri, Nov 13, 2020 at 3:23 PM Joseph Park <JosephPark at ieee.org> wrote:
>>>> Ah, yes... I see it now in Writing R Extensions.  Apologies for the
>>>> oversight.
>>>>
>>>> Regarding rmarkdown, is it redundant to include rmarkdown in
>>>> VignetteBuilder if it is in Suggests, or is perhaps needed in the build
>>>> config as a separate entity?
>>>>
>>>> e.g:
>>>>
>>>> Suggests: knitr, rmarkdown
>>>> VignetteBuilder: knitr, formatR
>>>>
>>>> or
>>>>
>>>> Suggests: knitr, rmarkdown
>>>> VignetteBuilder: knitr, rmarkdown, formatR
>>>>
>>>> Thank you.
>>>>
>>>> J Park
>>>>
>>>> On 11/13/20 8:58 AM, G?bor Cs?rdi wrote:
>>>>> I think you need to Suggest the formatR package, because your
>>>>> vignettes use it. From 'Writing R extensions':
>>>>>
>>>>> "Many packages using knitr also need the package formatR which it
>>>>> suggests and so the user package needs to do so too and include this
>>>>> in ?VignetteBuilder?."
>>>>>
>>>>> Gabor
>>>>>
>>>>> On Fri, Nov 13, 2020 at 1:49 PM Joseph Park <JosephPark at ieee.org> wrote:
>>>>>> Dear r-package-devel,
>>>>>>
>>>>>> The rEDM package is failing the automated check, as noted here:
>>>>>>
>>>>>> https://win-builder.r-project.org/incoming_pretest/rEDM_1.7.0_20201113_131811/Windows/00check.log
>>>>>>
>>>>>> When running rhub::check_for_cran(), disk file errors were reported.
>>>>>>
>>>>>> The automated check seems to be failing with:
>>>>>>
>>>>>> Error in loadNamespace(x) : there is no package called 'formatR'
>>>>>>
>>>>>> This package does not explicitly use formatR:
>>>>>>
>>>>>> Imports: methods, Rcpp (>= 1.0.1)
>>>>>> LinkingTo: Rcpp, RcppThread
>>>>>> Suggests: knitr, rmarkdown
>>>>>> VignetteBuilder: knitr
>>>>>>
>>>>>> Could it be these errors (disk full, no formatR) are related?  If not,
>>>>>> does formatR need to be listed as a dependency?
>>>>>>
>>>>>> If the former (R server config/resource build errors), do I need to
>>>>>> resubmit the package?
>>>>>>
>>>>>> Thank you.
>>>>>>
>>>>>> J Park
>>>>>>
>>>>>>
>>>>>>            [[alternative HTML version deleted]]
>>>>>>
>>>>>> ______________________________________________
>>>>>> R-package-devel at r-project.org mailing list
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> --
>> Joseph Park <http://jpark.us/>, PhD, PE
>> U.S. Department of Interior <https://www.doi.gov/>, SFNRC
>> <https://www.nps.gov/ever/learn/scienceresearch.htm>
>> Software Literacy Foundation <http://softwareliteracyfoundation.org/>
>> UCSD Sugihara Lab <https://deepeco.ucsd.edu/>
>>
>>          [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
-- 
Joseph Park <http://jpark.us/>, PhD, PE
U.S. Department of Interior <https://www.doi.gov/>, SFNRC 
<https://www.nps.gov/ever/learn/scienceresearch.htm>
Software Literacy Foundation <http://softwareliteracyfoundation.org/>
UCSD Sugihara Lab <https://deepeco.ucsd.edu/>

	[[alternative HTML version deleted]]


From c@@rd|@g@bor @end|ng |rom gm@||@com  Fri Nov 13 19:48:27 2020
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Fri, 13 Nov 2020 18:48:27 +0000
Subject: [R-pkg-devel] Error in loadNamespace(x) : there is no package
 called 'formatR'
In-Reply-To: <CAFDcVCRw7dn3FggSsY+=nbLrxm=DJzcchX9PC2vGd9eLKfjhXA@mail.gmail.com>
References: <04de00c7-78fc-16d3-05fd-92e6e9030062@IEEE.org>
 <CABtg=KnfuU81to2oxGHM7O9hUS1o_P8drfPMGNCFvoB1Wvvuow@mail.gmail.com>
 <39a06a48-fe0e-2054-970c-8810125424ac@IEEE.org>
 <CABtg=KkuAqw0B4xXkjZpD9CeB4fDdNpuO7jF5iVxma4_7C7WrQ@mail.gmail.com>
 <574f823a-61dd-b72b-d250-75d4e50d5ddf@IEEE.org>
 <CAFDcVCRw7dn3FggSsY+=nbLrxm=DJzcchX9PC2vGd9eLKfjhXA@mail.gmail.com>
Message-ID: <CABtg=Kma-r8gxRipo=ce9GmgHaX5vMZ+suwFoRWGkqX4b_9SMg@mail.gmail.com>

On Fri, Nov 13, 2020 at 6:10 PM Henrik Bengtsson
<henrik.bengtsson at gmail.com> wrote:
>
> I'm quite sure you want to use the following:
>
> Suggests: knitr, rmarkdown, formatR
> VignetteBuilder: knitr

So this means that WRE is wrong? It says:

"Note that if, for example, a vignette has engine ?knitr::rmarkdown?,
then knitr provides the engine but both knitr and rmarkdown are needed
for using it, so both these packages need to be in the
?VignetteBuilder? field and at least suggested (as rmarkdown is only
suggested by knitr, and hence not available automatically along with
it). Many packages using knitr also need the package formatR which it
suggests and so the user package needs to do so too and include this
in ?VignetteBuilder?."

My understanding is that R CMD build (and possibly other
commands/functions as well) checks for the packages in
'VignetteBulider`, this is why you need to include rmarkdown and
formatR as well. See the source code in build.R and e.g.
https://bugs.r-project.org/bugzilla/show_bug.cgi?id=15775 etc.

G.

[...]


From murdoch@dunc@n @end|ng |rom gm@||@com  Fri Nov 13 22:02:35 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Fri, 13 Nov 2020 16:02:35 -0500
Subject: [R-pkg-devel] Error in loadNamespace(x) : there is no package
 called 'formatR'
In-Reply-To: <CABtg=Kma-r8gxRipo=ce9GmgHaX5vMZ+suwFoRWGkqX4b_9SMg@mail.gmail.com>
References: <04de00c7-78fc-16d3-05fd-92e6e9030062@IEEE.org>
 <CABtg=KnfuU81to2oxGHM7O9hUS1o_P8drfPMGNCFvoB1Wvvuow@mail.gmail.com>
 <39a06a48-fe0e-2054-970c-8810125424ac@IEEE.org>
 <CABtg=KkuAqw0B4xXkjZpD9CeB4fDdNpuO7jF5iVxma4_7C7WrQ@mail.gmail.com>
 <574f823a-61dd-b72b-d250-75d4e50d5ddf@IEEE.org>
 <CAFDcVCRw7dn3FggSsY+=nbLrxm=DJzcchX9PC2vGd9eLKfjhXA@mail.gmail.com>
 <CABtg=Kma-r8gxRipo=ce9GmgHaX5vMZ+suwFoRWGkqX4b_9SMg@mail.gmail.com>
Message-ID: <45e54a96-c782-f1e8-7dd0-cc994fa95ea0@gmail.com>

On 13/11/2020 1:48 p.m., G?bor Cs?rdi wrote:
> On Fri, Nov 13, 2020 at 6:10 PM Henrik Bengtsson
> <henrik.bengtsson at gmail.com> wrote:
>>
>> I'm quite sure you want to use the following:
>>
>> Suggests: knitr, rmarkdown, formatR
>> VignetteBuilder: knitr
> 
> So this means that WRE is wrong? It says:

 > "Note that if, for example, a vignette has engine ?knitr::rmarkdown?,
 > then knitr provides the engine but both knitr and rmarkdown are needed
 > for using it, so both these packages need to be in the
 > ?VignetteBuilder? field and at least suggested (as rmarkdown is only
 > suggested by knitr, and hence not available automatically along with
 > it). Many packages using knitr also need the package formatR which it
 > suggests and so the user package needs to do so too and include this
 > in ?VignetteBuilder?."

Things may have changed since Henrik and I wrote the code, but his 
description matches my understanding as well (and I think he's 
contributed more recently than I have).

The way non-Sweave vignettes work is that some packages register 
themselves to recognize vignette files in the vignettes directory.  The 
default one recognizes .Rnw files as vignettes (and a few other 
extensions too); the knitr::rmarkdown one recognizes .Rmd files and some 
others.  The only way for a package's registration code to be called is 
for it to be listed as a VignetteBuilder.  See ?tools::vignetteEngine 
for details of the engine.

The rmarkdown package doesn't register any vignette engines, so it 
doesn't need to be in VignetteBuilder.  Same for formatR.

It's fairly common to have a package only used in the vignette, so you 
list it in Suggests.  But that wouldn't apply only to rmarkdown and 
formatR, there are lots of other examples.  However, I'd guess it's 
pretty common to forget to include rmarkdown and formatR, since they may 
not be explicitly used.  Then putting them in the VignetteBuilder field 
will trigger an error if they are not also in Suggests.

Duncan Murdoch


> 
> My understanding is that R CMD build (and possibly other
> commands/functions as well) checks for the packages in
> 'VignetteBulider`, this is why you need to include rmarkdown and
> formatR as well. See the source code in build.R and e.g.
> https://bugs.r-project.org/bugzilla/show_bug.cgi?id=15775 etc.


From c@@rd|@g@bor @end|ng |rom gm@||@com  Fri Nov 13 22:32:42 2020
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Fri, 13 Nov 2020 21:32:42 +0000
Subject: [R-pkg-devel] Error in loadNamespace(x) : there is no package
 called 'formatR'
In-Reply-To: <45e54a96-c782-f1e8-7dd0-cc994fa95ea0@gmail.com>
References: <04de00c7-78fc-16d3-05fd-92e6e9030062@IEEE.org>
 <CABtg=KnfuU81to2oxGHM7O9hUS1o_P8drfPMGNCFvoB1Wvvuow@mail.gmail.com>
 <39a06a48-fe0e-2054-970c-8810125424ac@IEEE.org>
 <CABtg=KkuAqw0B4xXkjZpD9CeB4fDdNpuO7jF5iVxma4_7C7WrQ@mail.gmail.com>
 <574f823a-61dd-b72b-d250-75d4e50d5ddf@IEEE.org>
 <CAFDcVCRw7dn3FggSsY+=nbLrxm=DJzcchX9PC2vGd9eLKfjhXA@mail.gmail.com>
 <CABtg=Kma-r8gxRipo=ce9GmgHaX5vMZ+suwFoRWGkqX4b_9SMg@mail.gmail.com>
 <45e54a96-c782-f1e8-7dd0-cc994fa95ea0@gmail.com>
Message-ID: <CABtg=KnHjdZbiAJKs-gH=j3fVrx1_0hmDfGJ5j8fmRsrRM3_RA@mail.gmail.com>

On Fri, Nov 13, 2020 at 9:02 PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
[...]
> Things may have changed since Henrik and I wrote the code, but his
> description matches my understanding as well (and I think he's
> contributed more recently than I have).
>
> The way non-Sweave vignettes work is that some packages register
> themselves to recognize vignette files in the vignettes directory.  The
> default one recognizes .Rnw files as vignettes (and a few other
> extensions too); the knitr::rmarkdown one recognizes .Rmd files and some
> others.  The only way for a package's registration code to be called is
> for it to be listed as a VignetteBuilder.  See ?tools::vignetteEngine
> for details of the engine.

Can one of you please fix WRE then? The part that says

"...then knitr provides the engine but both knitr and rmarkdown are
needed for using it, so both these packages need to be in the
?VignetteBuilder? field..."

Thanks a lot!

Gabor

[...]


From murdoch@dunc@n @end|ng |rom gm@||@com  Fri Nov 13 23:45:44 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Fri, 13 Nov 2020 17:45:44 -0500
Subject: [R-pkg-devel] Error in loadNamespace(x) : there is no package
 called 'formatR'
In-Reply-To: <CABtg=KnHjdZbiAJKs-gH=j3fVrx1_0hmDfGJ5j8fmRsrRM3_RA@mail.gmail.com>
References: <04de00c7-78fc-16d3-05fd-92e6e9030062@IEEE.org>
 <CABtg=KnfuU81to2oxGHM7O9hUS1o_P8drfPMGNCFvoB1Wvvuow@mail.gmail.com>
 <39a06a48-fe0e-2054-970c-8810125424ac@IEEE.org>
 <CABtg=KkuAqw0B4xXkjZpD9CeB4fDdNpuO7jF5iVxma4_7C7WrQ@mail.gmail.com>
 <574f823a-61dd-b72b-d250-75d4e50d5ddf@IEEE.org>
 <CAFDcVCRw7dn3FggSsY+=nbLrxm=DJzcchX9PC2vGd9eLKfjhXA@mail.gmail.com>
 <CABtg=Kma-r8gxRipo=ce9GmgHaX5vMZ+suwFoRWGkqX4b_9SMg@mail.gmail.com>
 <45e54a96-c782-f1e8-7dd0-cc994fa95ea0@gmail.com>
 <CABtg=KnHjdZbiAJKs-gH=j3fVrx1_0hmDfGJ5j8fmRsrRM3_RA@mail.gmail.com>
Message-ID: <8ca05a9d-8394-8a2a-7a01-d9a87c3ca45b@gmail.com>

On 13/11/2020 4:32 p.m., G?bor Cs?rdi wrote:
> On Fri, Nov 13, 2020 at 9:02 PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> [...]
>> Things may have changed since Henrik and I wrote the code, but his
>> description matches my understanding as well (and I think he's
>> contributed more recently than I have).
>>
>> The way non-Sweave vignettes work is that some packages register
>> themselves to recognize vignette files in the vignettes directory.  The
>> default one recognizes .Rnw files as vignettes (and a few other
>> extensions too); the knitr::rmarkdown one recognizes .Rmd files and some
>> others.  The only way for a package's registration code to be called is
>> for it to be listed as a VignetteBuilder.  See ?tools::vignetteEngine
>> for details of the engine.
> 
> Can one of you please fix WRE then? The part that says
> 
> "...then knitr provides the engine but both knitr and rmarkdown are
> needed for using it, so both these packages need to be in the
> ?VignetteBuilder? field..."
> 

No, neither of us are members of R Core.  Only R Core can edit the manuals.

Duncan Murdoch


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Sat Nov 14 15:32:57 2020
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Sat, 14 Nov 2020 15:32:57 +0100
Subject: [R-pkg-devel] Package Submission to CRAN
In-Reply-To: <CAJ=u__O2KZ0iajdn4CO2m6MdhAe9pG9m-LJQkpwuDAMiZpaN-w@mail.gmail.com>
References: <CAJ=u__O2KZ0iajdn4CO2m6MdhAe9pG9m-LJQkpwuDAMiZpaN-w@mail.gmail.com>
Message-ID: <1cd14efb-f50b-2045-be08-75506a1edf7b@statistik.tu-dortmund.de>

Write to CRAN at R-project.org, explain how to install the third party 
software (availability and names of Debian packages etc.) and the CRAN 
team will decide whether the software will be isntalled on (a subset of) 
CRAN machines.

Best,
Uwe Ligges



On 09.11.2020 19:24, Akshit Achara wrote:
> Hey everyone,
> 
> I have created a package rminizinc
> <https://github.com/acharaakshit/RMiniZinc> that depends on a third party
> C++ API
> which is used in some of the Rcpp files. The third party header files need
> to be present for their compilation or the package doesn't install.
> 
> I wish to submit the package to CRAN but the CRAN servers will not have
> the third party library. Is there any way I can install the package without
> having the third party library on my system?
> 
> Thanks,
> Akshit Achara
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From k@m||@@t@chow@k| @end|ng |rom gm@||@com  Sat Nov 14 09:41:09 2020
From: k@m||@@t@chow@k| @end|ng |rom gm@||@com (Kamil Stachowski)
Date: Sat, 14 Nov 2020 09:41:09 +0100
Subject: [R-pkg-devel] Having shiny as an optional dependency
Message-ID: <CANMYCMwc9V+XNMN=G5=Wx4Fb7mEDEAQ6-7UK7E87CuVTRH=zmQ@mail.gmail.com>

I wrote a package that contains a graphical interface written with packages
"shiny" and "shinyjqui". My package can also be used from the CLI, so I
listed both "shiny" and "shinyjqui" as optional dependencies. I ran R CMD
check --as-cran on my computer in R 3.6.3 and devel, and both passed
without any errors or warnings. However, when I tried uploading the package
to CRAN, I got this error:

Error in loadNamespace(x) : there is no package called ?shiny?
Error: unable to load R code in package ?soundcorrs?
Execution halted
ERROR: lazy loading failed for package ?soundcorrs?

How can I fix this?

	[[alternative HTML version deleted]]


From c@@rd|@g@bor @end|ng |rom gm@||@com  Sat Nov 14 19:38:57 2020
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Sat, 14 Nov 2020 18:38:57 +0000
Subject: [R-pkg-devel] Having shiny as an optional dependency
In-Reply-To: <CANMYCMwc9V+XNMN=G5=Wx4Fb7mEDEAQ6-7UK7E87CuVTRH=zmQ@mail.gmail.com>
References: <CANMYCMwc9V+XNMN=G5=Wx4Fb7mEDEAQ6-7UK7E87CuVTRH=zmQ@mail.gmail.com>
Message-ID: <CABtg=KmaEGUB3gc4h5Xz-ihaAiMM0+RR291zhTEFJLL8Qk9LBQ@mail.gmail.com>

You probably import functions from shiny. Don't do that, refer to them
with the `::` operator instead.

Gabor

On Sat, Nov 14, 2020 at 6:12 PM Kamil Stachowski
<kamil.stachowski at gmail.com> wrote:
>
> I wrote a package that contains a graphical interface written with packages
> "shiny" and "shinyjqui". My package can also be used from the CLI, so I
> listed both "shiny" and "shinyjqui" as optional dependencies. I ran R CMD
> check --as-cran on my computer in R 3.6.3 and devel, and both passed
> without any errors or warnings. However, when I tried uploading the package
> to CRAN, I got this error:
>
> Error in loadNamespace(x) : there is no package called ?shiny?
> Error: unable to load R code in package ?soundcorrs?
> Execution halted
> ERROR: lazy loading failed for package ?soundcorrs?
>
> How can I fix this?
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From k@m||@@t@chow@k| @end|ng |rom gm@||@com  Sat Nov 14 19:53:04 2020
From: k@m||@@t@chow@k| @end|ng |rom gm@||@com (Kamil Stachowski)
Date: Sat, 14 Nov 2020 19:53:04 +0100
Subject: [R-pkg-devel] Having shiny as an optional dependency
In-Reply-To: <CABtg=KmaEGUB3gc4h5Xz-ihaAiMM0+RR291zhTEFJLL8Qk9LBQ@mail.gmail.com>
References: <CANMYCMwc9V+XNMN=G5=Wx4Fb7mEDEAQ6-7UK7E87CuVTRH=zmQ@mail.gmail.com>
 <CABtg=KmaEGUB3gc4h5Xz-ihaAiMM0+RR291zhTEFJLL8Qk9LBQ@mail.gmail.com>
Message-ID: <CANMYCMxz=joagJzS4-5-Ug-pXs6LvPAGfS4TL=SRS+fGKeffQA@mail.gmail.com>

This is actually what I do. Before you replied, I was told to write to CRAN
and explain, and they will decide whether the packages will be installed on
CRAN machines. Thank you for your help nonetheless.

Best,
Kamil

On Sat, 14 Nov 2020 at 19:39, G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:

> You probably import functions from shiny. Don't do that, refer to them
> with the `::` operator instead.
>
> Gabor
>
> On Sat, Nov 14, 2020 at 6:12 PM Kamil Stachowski
> <kamil.stachowski at gmail.com> wrote:
> >
> > I wrote a package that contains a graphical interface written with
> packages
> > "shiny" and "shinyjqui". My package can also be used from the CLI, so I
> > listed both "shiny" and "shinyjqui" as optional dependencies. I ran R CMD
> > check --as-cran on my computer in R 3.6.3 and devel, and both passed
> > without any errors or warnings. However, when I tried uploading the
> package
> > to CRAN, I got this error:
> >
> > Error in loadNamespace(x) : there is no package called ?shiny?
> > Error: unable to load R code in package ?soundcorrs?
> > Execution halted
> > ERROR: lazy loading failed for package ?soundcorrs?
> >
> > How can I fix this?
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


-- 
Kamil Stachowski, PhD
Chair of General and Indo-European Linguistics
Jagiellonian University, Cracow, Poland
http://info.filg.uj.edu.pl/zhjij/~stachowski.kamil/

	[[alternative HTML version deleted]]


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Mon Nov 16 00:56:06 2020
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Mon, 16 Nov 2020 00:56:06 +0100
Subject: [R-pkg-devel] Having shiny as an optional dependency
In-Reply-To: <CANMYCMxz=joagJzS4-5-Ug-pXs6LvPAGfS4TL=SRS+fGKeffQA@mail.gmail.com>
References: <CANMYCMwc9V+XNMN=G5=Wx4Fb7mEDEAQ6-7UK7E87CuVTRH=zmQ@mail.gmail.com>
 <CABtg=KmaEGUB3gc4h5Xz-ihaAiMM0+RR291zhTEFJLL8Qk9LBQ@mail.gmail.com>
 <CANMYCMxz=joagJzS4-5-Ug-pXs6LvPAGfS4TL=SRS+fGKeffQA@mail.gmail.com>
Message-ID: <5c44c6ab-4501-0e7c-c751-92fc5ec9dce5@statistik.tu-dortmund.de>

On 14.11.2020 19:53, Kamil Stachowski wrote:
> This is actually what I do. Before you replied, I was told to write to CRAN
> and explain, and they will decide whether the packages will be installed on
> CRAN machines. Thank you for your help nonetheless.

No, I told you about a "third party C++ API" you asked for, not about an 
R package. R packages  from BioC + CRAN should be availabe on CRAN, in 
that case it is a problem in your package.

Best,
Uwe Ligges


> 
> Best,
> Kamil
> 
> On Sat, 14 Nov 2020 at 19:39, G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:
> 
>> You probably import functions from shiny. Don't do that, refer to them
>> with the `::` operator instead.
>>
>> Gabor
>>
>> On Sat, Nov 14, 2020 at 6:12 PM Kamil Stachowski
>> <kamil.stachowski at gmail.com> wrote:
>>>
>>> I wrote a package that contains a graphical interface written with
>> packages
>>> "shiny" and "shinyjqui". My package can also be used from the CLI, so I
>>> listed both "shiny" and "shinyjqui" as optional dependencies. I ran R CMD
>>> check --as-cran on my computer in R 3.6.3 and devel, and both passed
>>> without any errors or warnings. However, when I tried uploading the
>> package
>>> to CRAN, I got this error:
>>>
>>> Error in loadNamespace(x) : there is no package called ?shiny?
>>> Error: unable to load R code in package ?soundcorrs?
>>> Execution halted
>>> ERROR: lazy loading failed for package ?soundcorrs?
>>>
>>> How can I fix this?
>>>
>>>          [[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
> 
>


From retep@me|@@ner @end|ng |rom gm@||@com  Mon Nov 16 10:47:47 2020
From: retep@me|@@ner @end|ng |rom gm@||@com (Peter Meissner)
Date: Mon, 16 Nov 2020 10:47:47 +0100
Subject: [R-pkg-devel] Publishing Java Wrappers The Right Way
Message-ID: <CAB-BFRrJ4H5_dpFsZNnH3YixEm-bK9_tNZL---br609ODzD00w@mail.gmail.com>

Hey Everyone,

I have an R-package that wraps some Java code.
The dependencies needed are around 10MB.

Thus I split the package into 2 packages. One providing only the
dependencies:

https://github.com/petermeissner/kafkaesquejars

... and one providing the actual code:

https://github.com/petermeissner/kafkaesque


I submitted the first package to CRAN and it came back stating that:
"Package has FOSS license, installs .class/.jar but has no 'java' directory.
"

Of course there is no java directory because the package does not contain
any code, just dependencies
and those are placed in ./inst/java.

Now what to do? In response I added  ./java/sources.md file and listed all
dependencies as well as URLs where
the source code of those dependencies can be downloaded.

Is this correct? Do I miss something else?


I really would appreciate some guidance on doing this right.

Best, Peter

	[[alternative HTML version deleted]]


From k@m||@@t@chow@k| @end|ng |rom gm@||@com  Mon Nov 16 10:55:14 2020
From: k@m||@@t@chow@k| @end|ng |rom gm@||@com (Kamil Stachowski)
Date: Mon, 16 Nov 2020 10:55:14 +0100
Subject: [R-pkg-devel] Having shiny as an optional dependency
In-Reply-To: <5c44c6ab-4501-0e7c-c751-92fc5ec9dce5@statistik.tu-dortmund.de>
References: <CANMYCMwc9V+XNMN=G5=Wx4Fb7mEDEAQ6-7UK7E87CuVTRH=zmQ@mail.gmail.com>
 <CABtg=KmaEGUB3gc4h5Xz-ihaAiMM0+RR291zhTEFJLL8Qk9LBQ@mail.gmail.com>
 <CANMYCMxz=joagJzS4-5-Ug-pXs6LvPAGfS4TL=SRS+fGKeffQA@mail.gmail.com>
 <5c44c6ab-4501-0e7c-c751-92fc5ec9dce5@statistik.tu-dortmund.de>
Message-ID: <CANMYCMya9aMimKZh+XA4LxQ0PLzm-q8ZR9LoHzfXKK1pTe7wjw@mail.gmail.com>

I did briefly wonder why your reply to me cited an email from Akshit Achara
who asked about third party C++ API. I assumed it was because the solution
to his problem and mine was the same.

In the meantime, I got a reply from Kurt Hornik who said I have a top-level
call

soundcorrsGUI <- shiny::shinyApp (ui, server)
>

so what I should really do is to move "shiny" from "Suggests" to "Imports".
I don't want to do this, however, because the GUI is just an addition, the
package is perfectly usable without it. I wrapped "soundcorrsGUI" in a
function:

soundcorrsGUI <- function () {
>
> if (!requireNamespace("shiny",quietly=T) ||
> !requireNamespace("shinyjqui",quietly=T))
> stop ("\"soundcorrsGUI\" requires packages \"shiny\" and \"shinyjqui\".")
>
> shiny::shinyApp (ui, server)
>
> }
>

and this seems to solve the problem with "shiny", but now I have a problem
with "shinyjqui". I actually only need one function from it: in the call to
"shinyApp" above,

ui <- shiny::navbarPage ([?] ui.soundchanges [?])
>

where

ui.soundchanges <- shiny::fluidPage ([?]
> shinyjqui::sortableCheckboxGroupInput [?])
>

I tried wrapping "ui.soundchanges" in a function in the same way as I did
with "soundcorrsGUI" but this doesn't help.

Is there a way to make it work without turning "shiny" and "shinyjqui" into
obligatory dependencies?

Best wishes,
Kamil Stachowski

On Mon, 16 Nov 2020, 00:55 Uwe Ligges, <ligges at statistik.tu-dortmund.de>
wrote:

> On 14.11.2020 19:53, Kamil Stachowski wrote:
> > This is actually what I do. Before you replied, I was told to write to
> CRAN
> > and explain, and they will decide whether the packages will be installed
> on
> > CRAN machines. Thank you for your help nonetheless.
>
> No, I told you about a "third party C++ API" you asked for, not about an
> R package. R packages  from BioC + CRAN should be availabe on CRAN, in
> that case it is a problem in your package.
>
> Best,
> Uwe Ligges
>
>
> >
> > Best,
> > Kamil
> >
> > On Sat, 14 Nov 2020 at 19:39, G?bor Cs?rdi <csardi.gabor at gmail.com>
> wrote:
> >
> >> You probably import functions from shiny. Don't do that, refer to them
> >> with the `::` operator instead.
> >>
> >> Gabor
> >>
> >> On Sat, Nov 14, 2020 at 6:12 PM Kamil Stachowski
> >> <kamil.stachowski at gmail.com> wrote:
> >>>
> >>> I wrote a package that contains a graphical interface written with
> >> packages
> >>> "shiny" and "shinyjqui". My package can also be used from the CLI, so I
> >>> listed both "shiny" and "shinyjqui" as optional dependencies. I ran R
> CMD
> >>> check --as-cran on my computer in R 3.6.3 and devel, and both passed
> >>> without any errors or warnings. However, when I tried uploading the
> >> package
> >>> to CRAN, I got this error:
> >>>
> >>> Error in loadNamespace(x) : there is no package called ?shiny?
> >>> Error: unable to load R code in package ?soundcorrs?
> >>> Execution halted
> >>> ERROR: lazy loading failed for package ?soundcorrs?
> >>>
> >>> How can I fix this?
> >>>
> >>>          [[alternative HTML version deleted]]
> >>>
> >>> ______________________________________________
> >>> R-package-devel at r-project.org mailing list
> >>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>
> >
> >
>

	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Mon Nov 16 11:53:14 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Mon, 16 Nov 2020 05:53:14 -0500
Subject: [R-pkg-devel] Having shiny as an optional dependency
In-Reply-To: <CANMYCMya9aMimKZh+XA4LxQ0PLzm-q8ZR9LoHzfXKK1pTe7wjw@mail.gmail.com>
References: <CANMYCMwc9V+XNMN=G5=Wx4Fb7mEDEAQ6-7UK7E87CuVTRH=zmQ@mail.gmail.com>
 <CABtg=KmaEGUB3gc4h5Xz-ihaAiMM0+RR291zhTEFJLL8Qk9LBQ@mail.gmail.com>
 <CANMYCMxz=joagJzS4-5-Ug-pXs6LvPAGfS4TL=SRS+fGKeffQA@mail.gmail.com>
 <5c44c6ab-4501-0e7c-c751-92fc5ec9dce5@statistik.tu-dortmund.de>
 <CANMYCMya9aMimKZh+XA4LxQ0PLzm-q8ZR9LoHzfXKK1pTe7wjw@mail.gmail.com>
Message-ID: <c92cfac1-5f54-8c89-f296-b8d276941ae1@gmail.com>

On 16/11/2020 4:55 a.m., Kamil Stachowski wrote:
> I did briefly wonder why your reply to me cited an email from Akshit Achara
> who asked about third party C++ API. I assumed it was because the solution
> to his problem and mine was the same.
> 
> In the meantime, I got a reply from Kurt Hornik who said I have a top-level
> call
> 
> soundcorrsGUI <- shiny::shinyApp (ui, server)
>>
> 
> so what I should really do is to move "shiny" from "Suggests" to "Imports".
> I don't want to do this, however, because the GUI is just an addition, the
> package is perfectly usable without it. I wrapped "soundcorrsGUI" in a
> function:
> 
> soundcorrsGUI <- function () {
>>
>> if (!requireNamespace("shiny",quietly=T) ||
>> !requireNamespace("shinyjqui",quietly=T))
>> stop ("\"soundcorrsGUI\" requires packages \"shiny\" and \"shinyjqui\".")
>>
>> shiny::shinyApp (ui, server)
>>
>> }
>>
> 
> and this seems to solve the problem with "shiny", but now I have a problem
> with "shinyjqui". I actually only need one function from it: in the call to
> "shinyApp" above,
> 
> ui <- shiny::navbarPage ([?] ui.soundchanges [?])
>>
> 
> where
> 
> ui.soundchanges <- shiny::fluidPage ([?]
>> shinyjqui::sortableCheckboxGroupInput [?])
>>
> 
> I tried wrapping "ui.soundchanges" in a function in the same way as I did
> with "soundcorrsGUI" but this doesn't help.
> 
> Is there a way to make it work without turning "shiny" and "shinyjqui" into
> obligatory dependencies?

If you never call shinyjqui::sortableCheckboxGroupInput except in that 
one place, then you should put that call within the requireNamespace 
test.  Things I'd change there:

  - Do not use T, use TRUE.

  - Wrap *everything* that requires those packages in the 
requireNamespace test.

  - Make sure your example code in help pages never calls that function 
unless shiny and shinyjqui are present, by a test similar to the above 
but a positive one:

if (requireNamespace("shiny") && requireNamespace("shinyjqui")) {

    # example code

}

Duncan Murdoch


> 
> Best wishes,
> Kamil Stachowski
> 
> On Mon, 16 Nov 2020, 00:55 Uwe Ligges, <ligges at statistik.tu-dortmund.de>
> wrote:
> 
>> On 14.11.2020 19:53, Kamil Stachowski wrote:
>>> This is actually what I do. Before you replied, I was told to write to
>> CRAN
>>> and explain, and they will decide whether the packages will be installed
>> on
>>> CRAN machines. Thank you for your help nonetheless.
>>
>> No, I told you about a "third party C++ API" you asked for, not about an
>> R package. R packages  from BioC + CRAN should be availabe on CRAN, in
>> that case it is a problem in your package.
>>
>> Best,
>> Uwe Ligges
>>
>>
>>>
>>> Best,
>>> Kamil
>>>
>>> On Sat, 14 Nov 2020 at 19:39, G?bor Cs?rdi <csardi.gabor at gmail.com>
>> wrote:
>>>
>>>> You probably import functions from shiny. Don't do that, refer to them
>>>> with the `::` operator instead.
>>>>
>>>> Gabor
>>>>
>>>> On Sat, Nov 14, 2020 at 6:12 PM Kamil Stachowski
>>>> <kamil.stachowski at gmail.com> wrote:
>>>>>
>>>>> I wrote a package that contains a graphical interface written with
>>>> packages
>>>>> "shiny" and "shinyjqui". My package can also be used from the CLI, so I
>>>>> listed both "shiny" and "shinyjqui" as optional dependencies. I ran R
>> CMD
>>>>> check --as-cran on my computer in R 3.6.3 and devel, and both passed
>>>>> without any errors or warnings. However, when I tried uploading the
>>>> package
>>>>> to CRAN, I got this error:
>>>>>
>>>>> Error in loadNamespace(x) : there is no package called ?shiny?
>>>>> Error: unable to load R code in package ?soundcorrs?
>>>>> Execution halted
>>>>> ERROR: lazy loading failed for package ?soundcorrs?
>>>>>
>>>>> How can I fix this?
>>>>>
>>>>>           [[alternative HTML version deleted]]
>>>>>
>>>>> ______________________________________________
>>>>> R-package-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>
>>>
>>>
>>
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From k@m||@@t@chow@k| @end|ng |rom gm@||@com  Mon Nov 16 15:00:45 2020
From: k@m||@@t@chow@k| @end|ng |rom gm@||@com (Kamil Stachowski)
Date: Mon, 16 Nov 2020 15:00:45 +0100
Subject: [R-pkg-devel] Having shiny as an optional dependency
In-Reply-To: <c92cfac1-5f54-8c89-f296-b8d276941ae1@gmail.com>
References: <CANMYCMwc9V+XNMN=G5=Wx4Fb7mEDEAQ6-7UK7E87CuVTRH=zmQ@mail.gmail.com>
 <CABtg=KmaEGUB3gc4h5Xz-ihaAiMM0+RR291zhTEFJLL8Qk9LBQ@mail.gmail.com>
 <CANMYCMxz=joagJzS4-5-Ug-pXs6LvPAGfS4TL=SRS+fGKeffQA@mail.gmail.com>
 <5c44c6ab-4501-0e7c-c751-92fc5ec9dce5@statistik.tu-dortmund.de>
 <CANMYCMya9aMimKZh+XA4LxQ0PLzm-q8ZR9LoHzfXKK1pTe7wjw@mail.gmail.com>
 <c92cfac1-5f54-8c89-f296-b8d276941ae1@gmail.com>
Message-ID: <CANMYCMxsumg0eEZPsw8jPpVJ9JFE98zasFHFjipOOuesDFRJ2A@mail.gmail.com>

It works! Thank you so much!

Best wishes,
Kamil Stachowski

On Mon, 16 Nov 2020 at 11:53, Duncan Murdoch <murdoch.duncan at gmail.com>
wrote:

> On 16/11/2020 4:55 a.m., Kamil Stachowski wrote:
> > I did briefly wonder why your reply to me cited an email from Akshit
> Achara
> > who asked about third party C++ API. I assumed it was because the
> solution
> > to his problem and mine was the same.
> >
> > In the meantime, I got a reply from Kurt Hornik who said I have a
> top-level
> > call
> >
> > soundcorrsGUI <- shiny::shinyApp (ui, server)
> >>
> >
> > so what I should really do is to move "shiny" from "Suggests" to
> "Imports".
> > I don't want to do this, however, because the GUI is just an addition,
> the
> > package is perfectly usable without it. I wrapped "soundcorrsGUI" in a
> > function:
> >
> > soundcorrsGUI <- function () {
> >>
> >> if (!requireNamespace("shiny",quietly=T) ||
> >> !requireNamespace("shinyjqui",quietly=T))
> >> stop ("\"soundcorrsGUI\" requires packages \"shiny\" and
> \"shinyjqui\".")
> >>
> >> shiny::shinyApp (ui, server)
> >>
> >> }
> >>
> >
> > and this seems to solve the problem with "shiny", but now I have a
> problem
> > with "shinyjqui". I actually only need one function from it: in the call
> to
> > "shinyApp" above,
> >
> > ui <- shiny::navbarPage ([?] ui.soundchanges [?])
> >>
> >
> > where
> >
> > ui.soundchanges <- shiny::fluidPage ([?]
> >> shinyjqui::sortableCheckboxGroupInput [?])
> >>
> >
> > I tried wrapping "ui.soundchanges" in a function in the same way as I did
> > with "soundcorrsGUI" but this doesn't help.
> >
> > Is there a way to make it work without turning "shiny" and "shinyjqui"
> into
> > obligatory dependencies?
>
> If you never call shinyjqui::sortableCheckboxGroupInput except in that
> one place, then you should put that call within the requireNamespace
> test.  Things I'd change there:
>
>   - Do not use T, use TRUE.
>
>   - Wrap *everything* that requires those packages in the
> requireNamespace test.
>
>   - Make sure your example code in help pages never calls that function
> unless shiny and shinyjqui are present, by a test similar to the above
> but a positive one:
>
> if (requireNamespace("shiny") && requireNamespace("shinyjqui")) {
>
>     # example code
>
> }
>
> Duncan Murdoch
>
>
> >
> > Best wishes,
> > Kamil Stachowski
> >
> > On Mon, 16 Nov 2020, 00:55 Uwe Ligges, <ligges at statistik.tu-dortmund.de>
> > wrote:
> >
> >> On 14.11.2020 19:53, Kamil Stachowski wrote:
> >>> This is actually what I do. Before you replied, I was told to write to
> >> CRAN
> >>> and explain, and they will decide whether the packages will be
> installed
> >> on
> >>> CRAN machines. Thank you for your help nonetheless.
> >>
> >> No, I told you about a "third party C++ API" you asked for, not about an
> >> R package. R packages  from BioC + CRAN should be availabe on CRAN, in
> >> that case it is a problem in your package.
> >>
> >> Best,
> >> Uwe Ligges
> >>
> >>
> >>>
> >>> Best,
> >>> Kamil
> >>>
> >>> On Sat, 14 Nov 2020 at 19:39, G?bor Cs?rdi <csardi.gabor at gmail.com>
> >> wrote:
> >>>
> >>>> You probably import functions from shiny. Don't do that, refer to them
> >>>> with the `::` operator instead.
> >>>>
> >>>> Gabor
> >>>>
> >>>> On Sat, Nov 14, 2020 at 6:12 PM Kamil Stachowski
> >>>> <kamil.stachowski at gmail.com> wrote:
> >>>>>
> >>>>> I wrote a package that contains a graphical interface written with
> >>>> packages
> >>>>> "shiny" and "shinyjqui". My package can also be used from the CLI,
> so I
> >>>>> listed both "shiny" and "shinyjqui" as optional dependencies. I ran R
> >> CMD
> >>>>> check --as-cran on my computer in R 3.6.3 and devel, and both passed
> >>>>> without any errors or warnings. However, when I tried uploading the
> >>>> package
> >>>>> to CRAN, I got this error:
> >>>>>
> >>>>> Error in loadNamespace(x) : there is no package called ?shiny?
> >>>>> Error: unable to load R code in package ?soundcorrs?
> >>>>> Execution halted
> >>>>> ERROR: lazy loading failed for package ?soundcorrs?
> >>>>>
> >>>>> How can I fix this?
> >>>>>
> >>>>>           [[alternative HTML version deleted]]
> >>>>>
> >>>>> ______________________________________________
> >>>>> R-package-devel at r-project.org mailing list
> >>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>>>
> >>>
> >>>
> >>
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
>
>

-- 
Kamil Stachowski, PhD
Chair of General and Indo-European Linguistics
Jagiellonian University, Cracow, Poland
http://info.filg.uj.edu.pl/zhjij/~stachowski.kamil/

	[[alternative HTML version deleted]]


From jond@v|d@on47 @end|ng |rom gm@||@com  Mon Nov 16 19:27:03 2020
From: jond@v|d@on47 @end|ng |rom gm@||@com (Jon Davidson)
Date: Mon, 16 Nov 2020 12:27:03 -0600
Subject: [R-pkg-devel] Debugging library.dynam to include a manual shared
 object
Message-ID: <CAN5kahznUn1Dj_UfpUsH=voNkvptjUdDvbtEprHYRjD_WuCsJg@mail.gmail.com>

Hello,

I am trying to build an R package with a manually compiled .so file. To do
so, I have included a call to useDynLib() in my NAMESPACE file.

Building this works fine in RStudio with devtools::load_all('.'), but when
I try to run R CMD INSTALL, I get the error: package or namespace load
failed in library.dynam(lib, package, package.lib): shared object
'filename.so' not found.

Is there any way I can debug library.dynam to see where it's looking for my
.so and why it can't find it? Thanks for your help!

Best,
Jon

	[[alternative HTML version deleted]]


From @ch@r@@k@h|t @end|ng |rom gm@||@com  Tue Nov 17 10:50:24 2020
From: @ch@r@@k@h|t @end|ng |rom gm@||@com (Akshit Achara)
Date: Tue, 17 Nov 2020 15:20:24 +0530
Subject: [R-pkg-devel] Package Submission to CRAN
In-Reply-To: <1cd14efb-f50b-2045-be08-75506a1edf7b@statistik.tu-dortmund.de>
References: <CAJ=u__O2KZ0iajdn4CO2m6MdhAe9pG9m-LJQkpwuDAMiZpaN-w@mail.gmail.com>
 <1cd14efb-f50b-2045-be08-75506a1edf7b@statistik.tu-dortmund.de>
Message-ID: <CAJ=u__OCZt0wVUOzsL2PBMb+WXzZUDx2Z5mx=Y23HK0XGQ_gdA@mail.gmail.com>

Dear Uwe,

Thanks for the suggestions, I was able to install my package without the
header files or library on the system.

Thanks,
Akshit Achara



On Sat, Nov 14, 2020 at 8:02 PM Uwe Ligges <ligges at statistik.tu-dortmund.de>
wrote:

> Write to CRAN at R-project.org, explain how to install the third party
> software (availability and names of Debian packages etc.) and the CRAN
> team will decide whether the software will be isntalled on (a subset of)
> CRAN machines.
>
> Best,
> Uwe Ligges
>
>
>
> On 09.11.2020 19:24, Akshit Achara wrote:
> > Hey everyone,
> >
> > I have created a package rminizinc
> > <https://github.com/acharaakshit/RMiniZinc> that depends on a third
> party
> > C++ API
> > which is used in some of the Rcpp files. The third party header files
> need
> > to be present for their compilation or the package doesn't install.
> >
> > I wish to submit the package to CRAN but the CRAN servers will not have
> > the third party library. Is there any way I can install the package
> without
> > having the third party library on my system?
> >
> > Thanks,
> > Akshit Achara
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
>

	[[alternative HTML version deleted]]


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Wed Nov 18 09:51:44 2020
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Wed, 18 Nov 2020 09:51:44 +0100
Subject: [R-pkg-devel] Error in loadNamespace(x) : there is no package
 called 'formatR'
In-Reply-To: <8ca05a9d-8394-8a2a-7a01-d9a87c3ca45b@gmail.com>
References: <04de00c7-78fc-16d3-05fd-92e6e9030062@IEEE.org>
 <CABtg=KnfuU81to2oxGHM7O9hUS1o_P8drfPMGNCFvoB1Wvvuow@mail.gmail.com>
 <39a06a48-fe0e-2054-970c-8810125424ac@IEEE.org>
 <CABtg=KkuAqw0B4xXkjZpD9CeB4fDdNpuO7jF5iVxma4_7C7WrQ@mail.gmail.com>
 <574f823a-61dd-b72b-d250-75d4e50d5ddf@IEEE.org>
 <CAFDcVCRw7dn3FggSsY+=nbLrxm=DJzcchX9PC2vGd9eLKfjhXA@mail.gmail.com>
 <CABtg=Kma-r8gxRipo=ce9GmgHaX5vMZ+suwFoRWGkqX4b_9SMg@mail.gmail.com>
 <45e54a96-c782-f1e8-7dd0-cc994fa95ea0@gmail.com>
 <CABtg=KnHjdZbiAJKs-gH=j3fVrx1_0hmDfGJ5j8fmRsrRM3_RA@mail.gmail.com>
 <8ca05a9d-8394-8a2a-7a01-d9a87c3ca45b@gmail.com>
Message-ID: <24500.57504.959818.975047@stat.math.ethz.ch>

>>>>> Duncan Murdoch 
>>>>>     on Fri, 13 Nov 2020 17:45:44 -0500 writes:

    > On 13/11/2020 4:32 p.m., G?bor Cs?rdi wrote:
    >> On Fri, Nov 13, 2020 at 9:02 PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
    >> [...]
    >>> Things may have changed since Henrik and I wrote the code, but his
    >>> description matches my understanding as well (and I think he's
    >>> contributed more recently than I have).
    >>> 
    >>> The way non-Sweave vignettes work is that some packages register
    >>> themselves to recognize vignette files in the vignettes directory.  The
    >>> default one recognizes .Rnw files as vignettes (and a few other
    >>> extensions too); the knitr::rmarkdown one recognizes .Rmd files and some
    >>> others.  The only way for a package's registration code to be called is
    >>> for it to be listed as a VignetteBuilder.  See ?tools::vignetteEngine
    >>> for details of the engine.
    >> 
    >> Can one of you please fix WRE then? The part that says
    >> 
    >> "...then knitr provides the engine but both knitr and rmarkdown are
    >> needed for using it, so both these packages need to be in the
    >> ?VignetteBuilder? field..."
    >> 

    > No, neither of us are members of R Core.  Only R Core can edit the manuals.

    > Duncan Murdoch

I've (finaly) followed this thread to here  ((too many e-mails, too many ...)).

I think I have understood what you wrote and why R Core should
change WRE in this part.

Notably as I have not written it, there needs to be consultation
--> Forwarding to R-core  ((i.e., a very rare cross-post !))

Thank you, very much for the discussion, G?bor, Henrik and Duncan!
Martin

--
Martin Maechler
ETH Zurich  and  R Core team


From wo||g@ng@|enh@rd @end|ng |rom un|-wuerzburg@de  Wed Nov 18 11:44:49 2020
From: wo||g@ng@|enh@rd @end|ng |rom un|-wuerzburg@de (Wolfgang Lenhard)
Date: Wed, 18 Nov 2020 11:44:49 +0100
Subject: [R-pkg-devel] Best practise in including third party code
Message-ID: <8f84d204-35fe-ab0d-85e6-dbec11a02682@uni-wuerzburg.de>

Dear R developer list,
in general, if functionality from other packages are used in one's own 
package, it is of course the best way to declare the other package as an 
import. What is the straight forward way for only minor functions or 
functionality, especially when the other package comes with a lot 
dependencies itself? Is it advisable or ok to only use the according 
third party source code snippet and cite the other package (of course if 
the license of the package allows it; own package is AGPL, third package 
is GPL)? Or should the third party package always be installed as a 
dependency? I want to avoid bloating the installation process but it is 
very important for me not to violate academic standards, intellectual 
properties and best practise.

Thanks,
Wolfgang


From edd @end|ng |rom deb|@n@org  Wed Nov 18 13:57:28 2020
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Wed, 18 Nov 2020 06:57:28 -0600
Subject: [R-pkg-devel] 
 Debugging library.dynam to include a manual shared object
In-Reply-To: <CAN5kahznUn1Dj_UfpUsH=voNkvptjUdDvbtEprHYRjD_WuCsJg@mail.gmail.com>
References: <CAN5kahznUn1Dj_UfpUsH=voNkvptjUdDvbtEprHYRjD_WuCsJg@mail.gmail.com>
Message-ID: <24501.6712.631819.498251@rob.eddelbuettel.com>


Jon,

On 16 November 2020 at 12:27, Jon Davidson wrote:
| I am trying to build an R package with a manually compiled .so file. To do
| so, I have included a call to useDynLib() in my NAMESPACE file.

In general you would not need to do that, or do that:

 - A package knows how to turn files in src/* into a .so (and a .dylib and a
   .dll none of which you need to explicitly, a huge win for you)

 - A package knows how to load a dynamic library declared in NAMESPACE
 
| Building this works fine in RStudio with devtools::load_all('.'), but when
| I try to run R CMD INSTALL, I get the error: package or namespace load
| failed in library.dynam(lib, package, package.lib): shared object
| 'filename.so' not found.

Only `R CMD INSTALL` matters here for (scripted) CRAN operations. If that
fails you have a problem, no matter how helpful the optional tools are.

| Is there any way I can debug library.dynam to see where it's looking for my
| .so and why it can't find it? Thanks for your help!

As said, R knows where to find a package's shared library file. For the rest,
it is (on Linux) ld.so and its documentation but you (as far as I can
remember) cannot set LD_LIBRARY_PATH from within a running R session.

It might help if you described your problem in more detail with a
reproducible example.

Regards,  Dirk

-- 
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From georg|@bo@hn@kov @end|ng |rom m@nche@ter@@c@uk  Wed Nov 18 14:05:03 2020
From: georg|@bo@hn@kov @end|ng |rom m@nche@ter@@c@uk (Georgi Boshnakov)
Date: Wed, 18 Nov 2020 13:05:03 +0000
Subject: [R-pkg-devel] 
 Debugging library.dynam to include a manual shared object
In-Reply-To: <24501.6712.631819.498251@rob.eddelbuettel.com>
References: <CAN5kahznUn1Dj_UfpUsH=voNkvptjUdDvbtEprHYRjD_WuCsJg@mail.gmail.com>
 <24501.6712.631819.498251@rob.eddelbuettel.com>
Message-ID: <AM0PR0102MB3443EBF7DC57D129DD4D1753AEE10@AM0PR0102MB3443.eurprd01.prod.exchangelabs.com>

> Building this works fine in RStudio with devtools::load_all('.'), but 
> | when I try to run R CMD INSTALL,...

Note that the devtools equivalents of 'R CMD build/check/install' are devtools::build(), devtools::check(), devtools::install().
devtools::load_all() has a different purpose. 

Georgi Boshnakov


-----Original Message-----
From: R-package-devel <r-package-devel-bounces at r-project.org> On Behalf Of Dirk Eddelbuettel
Sent: 18 November 2020 12:57
To: Jon Davidson <jondavidson47 at gmail.com>
Cc: r-package-devel at r-project.org
Subject: Re: [R-pkg-devel] Debugging library.dynam to include a manual shared object


Jon,

On 16 November 2020 at 12:27, Jon Davidson wrote:
| I am trying to build an R package with a manually compiled .so file. 
| To do so, I have included a call to useDynLib() in my NAMESPACE file.

In general you would not need to do that, or do that:

 - A package knows how to turn files in src/* into a .so (and a .dylib and a
   .dll none of which you need to explicitly, a huge win for you)

 - A package knows how to load a dynamic library declared in NAMESPACE
 
| Building this works fine in RStudio with devtools::load_all('.'), but 
| when I try to run R CMD INSTALL, I get the error: package or namespace 
| load failed in library.dynam(lib, package, package.lib): shared object 
| 'filename.so' not found.

Only `R CMD INSTALL` matters here for (scripted) CRAN operations. If that fails you have a problem, no matter how helpful the optional tools are.

| Is there any way I can debug library.dynam to see where it's looking 
| for my .so and why it can't find it? Thanks for your help!

As said, R knows where to find a package's shared library file. For the rest, it is (on Linux) ld.so and its documentation but you (as far as I can
remember) cannot set LD_LIBRARY_PATH from within a running R session.

It might help if you described your problem in more detail with a reproducible example.

Regards,  Dirk

--
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org

______________________________________________
R-package-devel at r-project.org mailing list https://stat.ethz.ch/mailman/listinfo/r-package-devel


From bbo|ker @end|ng |rom gm@||@com  Wed Nov 18 15:57:00 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Wed, 18 Nov 2020 09:57:00 -0500
Subject: [R-pkg-devel] Best practise in including third party code
In-Reply-To: <8f84d204-35fe-ab0d-85e6-dbec11a02682@uni-wuerzburg.de>
References: <8f84d204-35fe-ab0d-85e6-dbec11a02682@uni-wuerzburg.de>
Message-ID: <CABghstRfkG6Fy6ZbE3CFZEA_2xfjRxdqOcMNaCuGRmW9sLENbQ@mail.gmail.com>

   I would recommend copying the snippet/minor function into your own
code, with attribution/citation (and, as a courtesy, e-mailing the
maintainer of the package to let them know).
   The only disadvantage I can think of in this approach is that you
won't automatically benefit from bug fixes or other improvements in
the upstream code.

  cheers
    Ben Bolker

On Wed, Nov 18, 2020 at 5:45 AM Wolfgang Lenhard
<wolfgang.lenhard at uni-wuerzburg.de> wrote:
>
> Dear R developer list,
> in general, if functionality from other packages are used in one's own
> package, it is of course the best way to declare the other package as an
> import. What is the straight forward way for only minor functions or
> functionality, especially when the other package comes with a lot
> dependencies itself? Is it advisable or ok to only use the according
> third party source code snippet and cite the other package (of course if
> the license of the package allows it; own package is AGPL, third package
> is GPL)? Or should the third party package always be installed as a
> dependency? I want to avoid bloating the installation process but it is
> very important for me not to violate academic standards, intellectual
> properties and best practise.
>
> Thanks,
> Wolfgang
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From djz @end|ng |rom @hmonk@com  Sun Nov 22 01:59:14 2020
From: djz @end|ng |rom @hmonk@com (Dan Zigmond)
Date: Sat, 21 Nov 2020 16:59:14 -0800
Subject: [R-pkg-devel] warning: binary constants are a C++14 feature or GCC
 extension
Message-ID: <CAJbAZz4-0tuNcGh9LRGObU9uF+CDq2-81ZN5qe5RSrCDQtMiKA@mail.gmail.com>

Hi, all. In re-submitting a package to CRAN, I'm getting the following
warnings in the Debian pre-test:

Found the following significant warnings:
  sort.cpp:12:28: warning: binary constants are a C++14 feature or GCC extension
  sort.cpp:12:43: warning: binary constants are a C++14 feature or GCC extension

I added some C++ code to speed up the package and the warnings refer to
this line of C++:

   while ((s[p + length] & 0b11000000) == 0b10000000) {

The line has to do with parsing UTF-8 strings by figuring out how many
bytes are used in each character. Is the 0b... notation not allowed in
CRAN? I could substitute decimal constants, but that will be a bit more
obtuse. The other platforms seems to allow this; only the Debian check
failed.

     Dan

.
--------------------------
Dan Zigmond
djz at shmonk.com

	[[alternative HTML version deleted]]


From d@v|d@kepp||nger @end|ng |rom gm@||@com  Sun Nov 22 02:14:23 2020
From: d@v|d@kepp||nger @end|ng |rom gm@||@com (David Kepplinger)
Date: Sat, 21 Nov 2020 17:14:23 -0800
Subject: [R-pkg-devel] 
 warning: binary constants are a C++14 feature or GCC extension
In-Reply-To: <CAJbAZz4-0tuNcGh9LRGObU9uF+CDq2-81ZN5qe5RSrCDQtMiKA@mail.gmail.com>
References: <CAJbAZz4-0tuNcGh9LRGObU9uF+CDq2-81ZN5qe5RSrCDQtMiKA@mail.gmail.com>
Message-ID: <CAGmyFCFfadqNDMk8omRoPCYsCPjGc_9acTXX=Fs_QvTCb8ZXsA@mail.gmail.com>

Dear Dan,

As the warning says, the binary notation you use is only valid with
C++14 and onwards. You can either add SystemRequirements: C++14 to
your DESCRIPTION file, or use decimal (or hex) notation.

In my opinion it's even better to name your constants to convey their
meaning to the reader of the code. Then it wouldn't be a big issue if
you use binary, decimal, or hex notation.

Best,
David

On Sat, Nov 21, 2020 at 4:59 PM Dan Zigmond <djz at shmonk.com> wrote:
>
> Hi, all. In re-submitting a package to CRAN, I'm getting the following
> warnings in the Debian pre-test:
>
> Found the following significant warnings:
>   sort.cpp:12:28: warning: binary constants are a C++14 feature or GCC extension
>   sort.cpp:12:43: warning: binary constants are a C++14 feature or GCC extension
>
> I added some C++ code to speed up the package and the warnings refer to
> this line of C++:
>
>    while ((s[p + length] & 0b11000000) == 0b10000000) {
>
> The line has to do with parsing UTF-8 strings by figuring out how many
> bytes are used in each character. Is the 0b... notation not allowed in
> CRAN? I could substitute decimal constants, but that will be a bit more
> obtuse. The other platforms seems to allow this; only the Debian check
> failed.
>
>      Dan
>
> .
> --------------------------
> Dan Zigmond
> djz at shmonk.com
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel



-- 
David Kepplinger, PhD
https://www.dkepplinger.org


From djz @end|ng |rom @hmonk@com  Sun Nov 22 06:41:07 2020
From: djz @end|ng |rom @hmonk@com (Dan Zigmond)
Date: Sat, 21 Nov 2020 21:41:07 -0800
Subject: [R-pkg-devel] 
 warning: binary constants are a C++14 feature or GCC extension
In-Reply-To: <CAGmyFCFfadqNDMk8omRoPCYsCPjGc_9acTXX=Fs_QvTCb8ZXsA@mail.gmail.com>
References: <CAJbAZz4-0tuNcGh9LRGObU9uF+CDq2-81ZN5qe5RSrCDQtMiKA@mail.gmail.com>
 <CAGmyFCFfadqNDMk8omRoPCYsCPjGc_9acTXX=Fs_QvTCb8ZXsA@mail.gmail.com>
Message-ID: <CAJbAZz7_iGm_WmJRtSyvf1oSNQFeRLEV396iV2wYqPDM3m9VEA@mail.gmail.com>

Thank you! That's very helpful.

     Dan

.
--------------------------
Dan Zigmond
djz at shmonk.com



On Sat, Nov 21, 2020 at 5:14 PM David Kepplinger <david.kepplinger at gmail.com>
wrote:

> Dear Dan,
>
> As the warning says, the binary notation you use is only valid with
> C++14 and onwards. You can either add SystemRequirements: C++14 to
> your DESCRIPTION file, or use decimal (or hex) notation.
>
> In my opinion it's even better to name your constants to convey their
> meaning to the reader of the code. Then it wouldn't be a big issue if
> you use binary, decimal, or hex notation.
>
> Best,
> David
>
> On Sat, Nov 21, 2020 at 4:59 PM Dan Zigmond <djz at shmonk.com> wrote:
> >
> > Hi, all. In re-submitting a package to CRAN, I'm getting the following
> > warnings in the Debian pre-test:
> >
> > Found the following significant warnings:
> >   sort.cpp:12:28: warning: binary constants are a C++14 feature or GCC
> extension
> >   sort.cpp:12:43: warning: binary constants are a C++14 feature or GCC
> extension
> >
> > I added some C++ code to speed up the package and the warnings refer to
> > this line of C++:
> >
> >    while ((s[p + length] & 0b11000000) == 0b10000000) {
> >
> > The line has to do with parsing UTF-8 strings by figuring out how many
> > bytes are used in each character. Is the 0b... notation not allowed in
> > CRAN? I could substitute decimal constants, but that will be a bit more
> > obtuse. The other platforms seems to allow this; only the Debian check
> > failed.
> >
> >      Dan
> >
> > .
> > --------------------------
> > Dan Zigmond
> > djz at shmonk.com
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>
>
> --
> David Kepplinger, PhD
> https://www.dkepplinger.org
>

	[[alternative HTML version deleted]]


From djz @end|ng |rom @hmonk@com  Sun Nov 22 06:46:14 2020
From: djz @end|ng |rom @hmonk@com (Dan Zigmond)
Date: Sat, 21 Nov 2020 21:46:14 -0800
Subject: [R-pkg-devel] 'stringi' package on Windows
Message-ID: <CAJbAZz43-GXyep9fpQvJ0Q05FqocBKymayXE7EJo2454QPEQGw@mail.gmail.com>

I've run into another issue re-submitting my package to CRAN:

Flavor: r-devel-windows-ix86+x86_64
Check: package dependencies, Result: ERROR
  Package required but not available: 'stringi'

Everything seems to run fine on the other platformd and I used the stringi
package in the previous iteration of the package without issue, but it
seems perhaps there is some issue with stringi under Windows right now?

     Dan

.
--------------------------
Dan Zigmond
djz at shmonk.com

	[[alternative HTML version deleted]]


From bbo|ker @end|ng |rom gm@||@com  Sun Nov 22 19:44:47 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Sun, 22 Nov 2020 13:44:47 -0500
Subject: [R-pkg-devel] help interpreting a response from CRAN
Message-ID: <20734968-31c7-4559-9169-a83e138240f4@gmail.com>

   My submission from auto-check, and I'm not sure why because Windows and Debian checks both list "OK" and there are no unresolved problems on the CRAN status ...

   My current guess is that the problem is with the too-long check time on Windows (NOTE: "Overall checktime 18 min > 10 min")

  I guess I have to get busy setting more tests and examples to skip-on-CRAN (kind of a pain as there's no low-hanging fruit - other than the 'testthat' tests, none of the individual test files take longer than 15sec, although this is doubled because they have to be run on 386 and x64 ...)

  An alternative is that this is a confusingly worded message indicating that there are strong rev dependencies so the package needs to be further checked? (That seems unlikely as it explicitly asks me to resubmit)

   Can anyone confirm/support those guesses?

   cheers
     Ben Bolker
   

=====
Dear maintainer,
  
package lme4_1.1-26.tar.gz does not pass the incoming checks automatically, please see the following pre-tests:
Windows:<https://win-builder.r-project.org/incoming_pretest/lme4_1.1-26_20201122_184744/Windows/00check.log>
Status: OK
Debian:<https://win-builder.r-project.org/incoming_pretest/lme4_1.1-26_20201122_184744/Debian/00check.log>
Status: OK
  
Last released version's CRAN status: NOTE: 7, OK: 5
See:<https://CRAN.R-project.org/web/checks/check_results_lme4.html>
  
CRAN Web:<https://cran.r-project.org/package=lme4>
  
Please fix all problems and resubmit a fixed version via the webform.
If you are not sure how to fix the problems shown, please ask for help on the R-package-devel mailing list:
<https://stat.ethz.ch/mailman/listinfo/r-package-devel>
If you are fairly certain the rejection is a false positive, please reply-all to this message and explain.
  
More details are given in the directory:
<https://win-builder.r-project.org/incoming_pretest/lme4_1.1-26_20201122_184744/>
The files will be removed after roughly 7 days.
  
*** Strong rev. depends ***: afex agRee altmeta aods3 arm ARTool bapred bayesammi BayesLN BayesSenMC baystability BBRecapture BClustLonG BFpack blme blmeco BradleyTerry2 brokenstick buildmer cAIC4 car carcass cgam chngpt ciTools clickR climwin CLME clusteredinterference clusterPower CMatching cpr cvms DClusterm dfmeta DHARMa diagmeta difR doremi eda4treeR EdSurvey eefAnalytics effects eirm embed epr ESTER ez faraway faux fence finalfit fishmethods fullfact gamm4 geex GHap glmertree glmmEP GLMMRR glmmsr glmmTMB GLMpack gorica groupedstats gtheory gvcR HelpersMG HeritSeq hmi iccbeta IDmeasurer IMTest inferference influence.ME inti intRvals isni jlctree joineRmeta joineRML JointModel jomo jstable JWileymisc KenSyn latrend lefko3 lmem.qtler LMERConvenienceFunctions lmerTest lmSupport longpower LSAmitR macc MAGNAMWAR manymodelr MargCond marked mbest MDMR mediation MEMSS merDeriv merTools meta metamicrobiomeR metamisc metan metaplus Metatron micemd MiRKAT misty mixAK MixedPsy MixMAP MixRF
  MLID mlma mlmRev mlVAR MMeM multiDimBio multilevelTools MultiRR MultisiteMediation mumm mvMISE MXM nanny omics OptimClassifier packDAMipd pamm paramhetero PBImisc pbkrtest pcgen pedigreemm Phenotype phyr piecewiseSEM Plasmode PLmixed powerbydesign powerlmm predictmeans PrevMap prLogistic projpred psfmi ptmixed qape r2mlm raincin rbenvo Rcmdr refund reghelper regplot REndo reproducer rewie RLRsim robustBLME robustlmm rockchalk rosetta rpql rptR rr2 RRreg rsq rstanarm rstap rties RVAideMemoire RVFam sae semEff siland simr sjstats skpr SlaPMEG smicd SoyNAM SPCDAnalyze specr SPreFuGED squid stability standardize statgenGxE statgenSTA StroupGLMM structree supernova Surrogate surrosurv swissMrP TcGSA themetagenomics tidyBF tidygate tidyMicro tramME tukeytrend userfriendlyscience varTestnlme VCA VetResearchLMM warpMix WebPower welchADF WeMix
  
Best regards,
CRAN teams' auto-check service


Flavor: r-devel-windows-ix86+x86_64
Check: CRAN incoming feasibility, Result: NA
   Maintainer: 'Ben Bolker<bbolker+lme4 at gmail.com>'

Flavor: r-devel-windows-ix86+x86_64
Check: Overall checktime, Result: NOTE
   Overall checktime 18 min > 10 min

Flavor: r-devel-linux-x86_64-debian-gcc
Check: CRAN incoming feasibility, Result: Note_to_CRAN_maintainers
   Maintainer: 'Ben Bolker<bbolker+lme4 at gmail.com>'


From edd @end|ng |rom deb|@n@org  Sun Nov 22 20:36:51 2020
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Sun, 22 Nov 2020 13:36:51 -0600
Subject: [R-pkg-devel] help interpreting a response from CRAN
In-Reply-To: <20734968-31c7-4559-9169-a83e138240f4@gmail.com>
References: <20734968-31c7-4559-9169-a83e138240f4@gmail.com>
Message-ID: <24506.48595.907131.986353@rob.eddelbuettel.com>


On 22 November 2020 at 13:44, Ben Bolker wrote:
|    My current guess is that the problem is with the too-long check time on Windows (NOTE: "Overall checktime 18 min > 10 min")

Yes.
 
|   I guess I have to get busy setting more tests and examples to skip-on-CRAN (kind of a pain as there's no low-hanging fruit - other than the 'testthat' tests, none of the individual test files take longer than 15sec, although this is doubled because they have to be run on 386 and x64 ...)

It's under your control. You can detect 'are we on Windows' and branch or, as
I do with test runner I use, exit_file("...") based on such conditions.

|   An alternative is that this is a confusingly worded message indicating that there are strong rev dependencies so the package needs to be further checked? (That seems unlikely as it explicitly asks me to resubmit)

No. If there were any (even false positive ones) they'd be listed there.

Hth, Dirk

-- 
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Sun Nov 22 22:06:42 2020
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Sun, 22 Nov 2020 22:06:42 +0100
Subject: [R-pkg-devel] help interpreting a response from CRAN
In-Reply-To: <24506.48595.907131.986353@rob.eddelbuettel.com>
References: <20734968-31c7-4559-9169-a83e138240f4@gmail.com>
 <24506.48595.907131.986353@rob.eddelbuettel.com>
Message-ID: <abcf86e6-04fe-aac7-7656-c3031bd1fa30@statistik.tu-dortmund.de>

Thanks Dirk. Yes, for lme4 the tests for each archiecture take longer 
than 5 min, so the overall check time exceeds 10 min.

So one can follow Dirk's advise.

As a general remark for others who will read this in the future:
tests should test the software, but it is generally not important to 
have real world examples. Small data and few iterations are typically 
sufficient for tests.
It is also possible to run less important tests only conditionally if 
some environment variable is set that you only define on your machine.

Best,
Uwe Ligges







On 22.11.2020 20:36, Dirk Eddelbuettel wrote:
> 
> On 22 November 2020 at 13:44, Ben Bolker wrote:
> |    My current guess is that the problem is with the too-long check time on Windows (NOTE: "Overall checktime 18 min > 10 min")
> 
> Yes.
>   
> |   I guess I have to get busy setting more tests and examples to skip-on-CRAN (kind of a pain as there's no low-hanging fruit - other than the 'testthat' tests, none of the individual test files take longer than 15sec, although this is doubled because they have to be run on 386 and x64 ...)
> 
> It's under your control. You can detect 'are we on Windows' and branch or, as
> I do with test runner I use, exit_file("...") based on such conditions.
> 
> |   An alternative is that this is a confusingly worded message indicating that there are strong rev dependencies so the package needs to be further checked? (That seems unlikely as it explicitly asks me to resubmit)
> 
> No. If there were any (even false positive ones) they'd be listed there.
> 
> Hth, Dirk
>


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Sun Nov 22 22:08:00 2020
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Sun, 22 Nov 2020 22:08:00 +0100
Subject: [R-pkg-devel] 'stringi' package on Windows
In-Reply-To: <CAJbAZz43-GXyep9fpQvJ0Q05FqocBKymayXE7EJo2454QPEQGw@mail.gmail.com>
References: <CAJbAZz43-GXyep9fpQvJ0Q05FqocBKymayXE7EJo2454QPEQGw@mail.gmail.com>
Message-ID: <e2cb5c86-8780-c78d-9071-2ab33376fad1@statistik.tu-dortmund.de>



On 22.11.2020 06:46, Dan Zigmond wrote:
> I've run into another issue re-submitting my package to CRAN:
> 
> Flavor: r-devel-windows-ix86+x86_64
> Check: package dependencies, Result: ERROR
>    Package required but not available: 'stringi'
> 
> Everything seems to run fine on the other platformd and I used the stringi
> package in the previous iteration of the package without issue, but it
> seems perhaps there is some issue with stringi under Windows right now?
> 

No, it was being reinstalled while your package got checked. SO we havbe 
to trigger new checks (I hope we did so, but I cannot know as you do not 
mention the package name).

Best,
Uwe Ligges


        Dan
> 
> .
> --------------------------
> Dan Zigmond
> djz at shmonk.com
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From bbo|ker @end|ng |rom gm@||@com  Mon Nov 23 02:00:49 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Sun, 22 Nov 2020 20:00:49 -0500
Subject: [R-pkg-devel] help interpreting a response from CRAN
In-Reply-To: <abcf86e6-04fe-aac7-7656-c3031bd1fa30@statistik.tu-dortmund.de>
References: <20734968-31c7-4559-9169-a83e138240f4@gmail.com>
 <24506.48595.907131.986353@rob.eddelbuettel.com>
 <abcf86e6-04fe-aac7-7656-c3031bd1fa30@statistik.tu-dortmund.de>
Message-ID: <9c62dfd6-bbb2-ccce-ade7-7c3d464a4fcd@gmail.com>

    Thanks all for the help.  The reward (as usual) is another dumb 
question.

If I add up the elapsed times listed in

https://win-builder.r-project.org/incoming_pretest/lme4_1.1-26_20201122_184744/Windows/examples_and_tests/examples_x64/lme4-Ex.timings

   I get 21.43 seconds.  But the output in

https://win-builder.r-project.org/incoming_pretest/lme4_1.1-26_20201122_184744/Windows/00check.log

says

** running examples for arch 'x64' ... [41s] OK

  The values for i386 have a similar discrepancy (20.6 vs 36s).  I can 
appreciate that would be a bit of overhead (and rounding error), but ... 
? (there are a total of 61 examples)

   I wouldn't normally worry about the discrepancy, but I'm doing my 
best to shave seconds where I can ...  can anyone see any obvious thinkos?

   I might as well add (in my partial defense, in response to Uwe's 
point about not needing real-world/big examples for tests); many of 
lme4's tests are regression tests of edge cases that came up in the real 
world with moderately sized data sets.  *In principle* it might be 
possible to find a way to reduce those medium-sized problems to small, 
fast problems that still demonstrated the same numerical problems, but 
it's hard and time-consuming (at least for me) ...

   cheers
     Ben Bolker





On 11/22/20 4:06 PM, Uwe Ligges wrote:
> Thanks Dirk. Yes, for lme4 the tests for each archiecture take longer 
> than 5 min, so the overall check time exceeds 10 min.
> 
> So one can follow Dirk's advise.
> 
> As a general remark for others who will read this in the future:
> tests should test the software, but it is generally not important to 
> have real world examples. Small data and few iterations are typically 
> sufficient for tests.
> It is also possible to run less important tests only conditionally if 
> some environment variable is set that you only define on your machine.
> 
> Best,
> Uwe Ligges
> 
> 
> 
> 
> 
> 
> 
> On 22.11.2020 20:36, Dirk Eddelbuettel wrote:
>>
>> On 22 November 2020 at 13:44, Ben Bolker wrote:
>> |??? My current guess is that the problem is with the too-long check 
>> time on Windows (NOTE: "Overall checktime 18 min > 10 min")
>>
>> Yes.
>> |?? I guess I have to get busy setting more tests and examples to 
>> skip-on-CRAN (kind of a pain as there's no low-hanging fruit - other 
>> than the 'testthat' tests, none of the individual test files take 
>> longer than 15sec, although this is doubled because they have to be 
>> run on 386 and x64 ...)
>>
>> It's under your control. You can detect 'are we on Windows' and branch 
>> or, as
>> I do with test runner I use, exit_file("...") based on such conditions.
>>
>> |?? An alternative is that this is a confusingly worded message 
>> indicating that there are strong rev dependencies so the package needs 
>> to be further checked? (That seems unlikely as it explicitly asks me 
>> to resubmit)
>>
>> No. If there were any (even false positive ones) they'd be listed there.
>>
>> Hth, Dirk
>>


From bbo|ker @end|ng |rom gm@||@com  Mon Nov 23 02:15:40 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Sun, 22 Nov 2020 20:15:40 -0500
Subject: [R-pkg-devel] help interpreting a response from CRAN
In-Reply-To: <abcf86e6-04fe-aac7-7656-c3031bd1fa30@statistik.tu-dortmund.de>
References: <20734968-31c7-4559-9169-a83e138240f4@gmail.com>
 <24506.48595.907131.986353@rob.eddelbuettel.com>
 <abcf86e6-04fe-aac7-7656-c3031bd1fa30@statistik.tu-dortmund.de>
Message-ID: <73212e94-dd97-6c38-7df1-1b02aab6725a@gmail.com>

   And one more (last for a while): presumably there is no way to check 
CRAN windows timing without submitting to CRAN ... ?  (I will obviously 
do my best by doing arithmetic on the tests that I set to be skipped, 
but it would be nice to be able to double-check without wasting 
everyone's time ... I guess if I knew that CRAN submissions would 
*always automatically* be rejected with Windows test times>10 min, I 
could use CRAN submission itself as my test ... but maybe that's a bad 
idea?)

On 11/22/20 4:06 PM, Uwe Ligges wrote:
> Thanks Dirk. Yes, for lme4 the tests for each archiecture take longer 
> than 5 min, so the overall check time exceeds 10 min.
> 
> So one can follow Dirk's advise.
> 
> As a general remark for others who will read this in the future:
> tests should test the software, but it is generally not important to 
> have real world examples. Small data and few iterations are typically 
> sufficient for tests.
> It is also possible to run less important tests only conditionally if 
> some environment variable is set that you only define on your machine.
> 
> Best,
> Uwe Ligges
> 
> 
> 
> 
> 
> 
> 
> On 22.11.2020 20:36, Dirk Eddelbuettel wrote:
>>
>> On 22 November 2020 at 13:44, Ben Bolker wrote:
>> |??? My current guess is that the problem is with the too-long check 
>> time on Windows (NOTE: "Overall checktime 18 min > 10 min")
>>
>> Yes.
>> |?? I guess I have to get busy setting more tests and examples to 
>> skip-on-CRAN (kind of a pain as there's no low-hanging fruit - other 
>> than the 'testthat' tests, none of the individual test files take 
>> longer than 15sec, although this is doubled because they have to be 
>> run on 386 and x64 ...)
>>
>> It's under your control. You can detect 'are we on Windows' and branch 
>> or, as
>> I do with test runner I use, exit_file("...") based on such conditions.
>>
>> |?? An alternative is that this is a confusingly worded message 
>> indicating that there are strong rev dependencies so the package needs 
>> to be further checked? (That seems unlikely as it explicitly asks me 
>> to resubmit)
>>
>> No. If there were any (even false positive ones) they'd be listed there.
>>
>> Hth, Dirk
>>


From roy@mende|@@ohn @end|ng |rom no@@@gov  Mon Nov 23 04:13:45 2020
From: roy@mende|@@ohn @end|ng |rom no@@@gov (Roy Mendelssohn - NOAA Federal)
Date: Sun, 22 Nov 2020 19:13:45 -0800
Subject: [R-pkg-devel] help interpreting a response from CRAN
In-Reply-To: <73212e94-dd97-6c38-7df1-1b02aab6725a@gmail.com>
References: <20734968-31c7-4559-9169-a83e138240f4@gmail.com>
 <24506.48595.907131.986353@rob.eddelbuettel.com>
 <abcf86e6-04fe-aac7-7656-c3031bd1fa30@statistik.tu-dortmund.de>
 <73212e94-dd97-6c38-7df1-1b02aab6725a@gmail.com>
Message-ID: <D3B94AAA-AED5-41C6-8A13-AE12706596D7@noaa.gov>

I have found win-builder timings come close,  but only close.  My experience is that the CRAN timings were uniformly slower than those on win-builder.  But I also find that I can get quite significant differences between win-builder-release and win-builder-devel.  So I also take the slowest that I can find as a basis,  and assume the actual times will be slower than that.

HTH,

-Roy

> On Nov 22, 2020, at 5:15 PM, Ben Bolker <bbolker at gmail.com> wrote:
> 
>  And one more (last for a while): presumably there is no way to check CRAN windows timing without submitting to CRAN ... ?  (I will obviously do my best by doing arithmetic on the tests that I set to be skipped, but it would be nice to be able to double-check without wasting everyone's time ... I guess if I knew that CRAN submissions would *always automatically* be rejected with Windows test times>10 min, I could use CRAN submission itself as my test ... but maybe that's a bad idea?)
> 
> On 11/22/20 4:06 PM, Uwe Ligges wrote:
>> Thanks Dirk. Yes, for lme4 the tests for each archiecture take longer than 5 min, so the overall check time exceeds 10 min.
>> So one can follow Dirk's advise.
>> As a general remark for others who will read this in the future:
>> tests should test the software, but it is generally not important to have real world examples. Small data and few iterations are typically sufficient for tests.
>> It is also possible to run less important tests only conditionally if some environment variable is set that you only define on your machine.
>> Best,
>> Uwe Ligges
>> On 22.11.2020 20:36, Dirk Eddelbuettel wrote:
>>> 
>>> On 22 November 2020 at 13:44, Ben Bolker wrote:
>>> |    My current guess is that the problem is with the too-long check time on Windows (NOTE: "Overall checktime 18 min > 10 min")
>>> 
>>> Yes.
>>> |   I guess I have to get busy setting more tests and examples to skip-on-CRAN (kind of a pain as there's no low-hanging fruit - other than the 'testthat' tests, none of the individual test files take longer than 15sec, although this is doubled because they have to be run on 386 and x64 ...)
>>> 
>>> It's under your control. You can detect 'are we on Windows' and branch or, as
>>> I do with test runner I use, exit_file("...") based on such conditions.
>>> 
>>> |   An alternative is that this is a confusingly worded message indicating that there are strong rev dependencies so the package needs to be further checked? (That seems unlikely as it explicitly asks me to resubmit)
>>> 
>>> No. If there were any (even false positive ones) they'd be listed there.
>>> 
>>> Hth, Dirk
>>> 
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

**********************
"The contents of this message do not reflect any position of the U.S. Government or NOAA."
**********************
Roy Mendelssohn
Supervisory Operations Research Analyst
NOAA/NMFS
Environmental Research Division
Southwest Fisheries Science Center
***Note new street address***
110 McAllister Way
Santa Cruz, CA 95060
Phone: (831)-420-3666
Fax: (831) 420-3980
e-mail: Roy.Mendelssohn at noaa.gov www: https://www.pfeg.noaa.gov/

"Old age and treachery will overcome youth and skill."
"From those who have been given much, much will be expected" 
"the arc of the moral universe is long, but it bends toward justice" -MLK Jr.


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Mon Nov 23 08:30:21 2020
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Mon, 23 Nov 2020 08:30:21 +0100
Subject: [R-pkg-devel] help interpreting a response from CRAN
In-Reply-To: <D3B94AAA-AED5-41C6-8A13-AE12706596D7@noaa.gov>
References: <20734968-31c7-4559-9169-a83e138240f4@gmail.com>
 <24506.48595.907131.986353@rob.eddelbuettel.com>
 <abcf86e6-04fe-aac7-7656-c3031bd1fa30@statistik.tu-dortmund.de>
 <73212e94-dd97-6c38-7df1-1b02aab6725a@gmail.com>
 <D3B94AAA-AED5-41C6-8A13-AE12706596D7@noaa.gov>
Message-ID: <aba1bbc9-92f1-ed27-cd6f-b7b0122bf837@statistik.tu-dortmund.de>



On 23.11.2020 04:13, Roy Mendelssohn - NOAA Federal wrote:
> I have found win-builder timings come close,  but only close.  My experience is that the CRAN timings were uniformly slower than those on win-builder.  But I also find that I can get quite significant differences between win-builder-release and win-builder-devel.  So I also take the slowest that I can find as a basis,  and assume the actual times will be slower than that.

winbuilder and the WIndows check machione for the regul?ar checks are 
actually identical.

Best,
Uwe Ligges




> HTH,
> 
> -Roy
> 
>> On Nov 22, 2020, at 5:15 PM, Ben Bolker <bbolker at gmail.com> wrote:
>>
>>   And one more (last for a while): presumably there is no way to check CRAN windows timing without submitting to CRAN ... ?  (I will obviously do my best by doing arithmetic on the tests that I set to be skipped, but it would be nice to be able to double-check without wasting everyone's time ... I guess if I knew that CRAN submissions would *always automatically* be rejected with Windows test times>10 min, I could use CRAN submission itself as my test ... but maybe that's a bad idea?)
>>
>> On 11/22/20 4:06 PM, Uwe Ligges wrote:
>>> Thanks Dirk. Yes, for lme4 the tests for each archiecture take longer than 5 min, so the overall check time exceeds 10 min.
>>> So one can follow Dirk's advise.
>>> As a general remark for others who will read this in the future:
>>> tests should test the software, but it is generally not important to have real world examples. Small data and few iterations are typically sufficient for tests.
>>> It is also possible to run less important tests only conditionally if some environment variable is set that you only define on your machine.
>>> Best,
>>> Uwe Ligges
>>> On 22.11.2020 20:36, Dirk Eddelbuettel wrote:
>>>>
>>>> On 22 November 2020 at 13:44, Ben Bolker wrote:
>>>> |    My current guess is that the problem is with the too-long check time on Windows (NOTE: "Overall checktime 18 min > 10 min")
>>>>
>>>> Yes.
>>>> |   I guess I have to get busy setting more tests and examples to skip-on-CRAN (kind of a pain as there's no low-hanging fruit - other than the 'testthat' tests, none of the individual test files take longer than 15sec, although this is doubled because they have to be run on 386 and x64 ...)
>>>>
>>>> It's under your control. You can detect 'are we on Windows' and branch or, as
>>>> I do with test runner I use, exit_file("...") based on such conditions.
>>>>
>>>> |   An alternative is that this is a confusingly worded message indicating that there are strong rev dependencies so the package needs to be further checked? (That seems unlikely as it explicitly asks me to resubmit)
>>>>
>>>> No. If there were any (even false positive ones) they'd be listed there.
>>>>
>>>> Hth, Dirk
>>>>
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> **********************
> "The contents of this message do not reflect any position of the U.S. Government or NOAA."
> **********************
> Roy Mendelssohn
> Supervisory Operations Research Analyst
> NOAA/NMFS
> Environmental Research Division
> Southwest Fisheries Science Center
> ***Note new street address***
> 110 McAllister Way
> Santa Cruz, CA 95060
> Phone: (831)-420-3666
> Fax: (831) 420-3980
> e-mail: Roy.Mendelssohn at noaa.gov www: https://www.pfeg.noaa.gov/
> 
> "Old age and treachery will overcome youth and skill."
> "From those who have been given much, much will be expected"
> "the arc of the moral universe is long, but it bends toward justice" -MLK Jr.
>


From |v@|rcu @end|ng |rom m@||box@org  Mon Nov 23 13:07:49 2020
From: |v@|rcu @end|ng |rom m@||box@org (Andreas Dominik Cullmann)
Date: Mon, 23 Nov 2020 13:07:49 +0100
Subject: [R-pkg-devel] Failing vignette engine for package rasciidoc on
 solaris
Message-ID: <20201123120749.GA18150@h6.fooboz>

Dear List,
one of my packages, rasciidoc (a simple wrapper to 'knitr' and 'asciidoc'),
includes a minimal vigentte engine.
When submitting the package with a vignette using that engine, the vignette is
re-built on all platforms except for r-patched-solaris-x86:
https://cran.r-project.org/web/checks/check_results_rasciidoc.html
https://www.r-project.org/nosvn/R.check/r-patched-solaris-x86/rasciidoc-00check.html

Maybe rasciidoc's vignette engine is somewhat superfluous, but since it works
for all platforms except solaris, I kind of would like to use it. 

I cannot reproduce the error using rhub:
  ## Test environments
  - R-hub solaris-x86-patched-ods (r-release)
  
  ## R CMD check results
  ? On solaris-x86-patched-ods (r-release)
    checking CRAN incoming feasibility ... WARNING
    Maintainer: ?Andreas Dominik Cullmann <fvafrcu at mailbox.org>?
    
    Insufficient package version (submitted: 2.2.1, existing: 2.2.1)
    
    Days since last update: 5
  
  ? On solaris-x86-patched-ods (r-release)
    checking top-level files ... NOTE
    Files ?README.md? or ?NEWS.md? cannot be checked without ?pandoc? being installed.
  
  ? On solaris-x86-patched-ods (r-release)
    checking examples ... NOTE
    Examples with CPU (user + system) or elapsed time > 5s
               user system elapsed
    rasciidoc 2.724  0.352   48.75
  
  0 errors ? | 1 warning ? | 2 notes ?


And I happen to have no solaris box at hand for testing. 
Does anybody have any suggestion on how I could tackle this?
Thanks and best regards,
Dominik


From murdoch@dunc@n @end|ng |rom gm@||@com  Mon Nov 23 14:17:17 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Mon, 23 Nov 2020 08:17:17 -0500
Subject: [R-pkg-devel] Failing vignette engine for package rasciidoc on
 solaris
In-Reply-To: <20201123120749.GA18150@h6.fooboz>
References: <20201123120749.GA18150@h6.fooboz>
Message-ID: <77a7b874-2b8a-861b-8e9a-4226921ade36@gmail.com>

On 23/11/2020 7:07 a.m., Andreas Dominik Cullmann via R-package-devel wrote:
> Dear List,
> one of my packages, rasciidoc (a simple wrapper to 'knitr' and 'asciidoc'),
> includes a minimal vigentte engine.
> When submitting the package with a vignette using that engine, the vignette is
> re-built on all platforms except for r-patched-solaris-x86:
> https://cran.r-project.org/web/checks/check_results_rasciidoc.html
> https://www.r-project.org/nosvn/R.check/r-patched-solaris-x86/rasciidoc-00check.html
> 
> Maybe rasciidoc's vignette engine is somewhat superfluous, but since it works
> for all platforms except solaris, I kind of would like to use it.
> 
> I cannot reproduce the error using rhub:
>    ## Test environments
>    - R-hub solaris-x86-patched-ods (r-release)
>    
>    ## R CMD check results
>    ? On solaris-x86-patched-ods (r-release)
>      checking CRAN incoming feasibility ... WARNING
>      Maintainer: ?Andreas Dominik Cullmann <fvafrcu at mailbox.org>?
>      
>      Insufficient package version (submitted: 2.2.1, existing: 2.2.1)
>      
>      Days since last update: 5
>    
>    ? On solaris-x86-patched-ods (r-release)
>      checking top-level files ... NOTE
>      Files ?README.md? or ?NEWS.md? cannot be checked without ?pandoc? being installed.
>    
>    ? On solaris-x86-patched-ods (r-release)
>      checking examples ... NOTE
>      Examples with CPU (user + system) or elapsed time > 5s
>                 user system elapsed
>      rasciidoc 2.724  0.352   48.75
>    
>    0 errors ? | 1 warning ? | 2 notes ?
> 
> 
> And I happen to have no solaris box at hand for testing.
> Does anybody have any suggestion on how I could tackle this?

The error message says:   "Can't find program `source-highlight`. Please 
install first (http://www.gnu.org/software/src-highlite/)."  You have 
listed this in SystemRequirements as "recommended", but even if you had 
listed it as required, your build shouldn't fail if it is not found:  it 
should test for that program, and continue on if it is not there.  For 
example, it could output a vignette containing nothing except the 
warning message that source-highlight is needed to build the vignette. 
This is described in Section 1.6, "Writing portable packages", of 
Writing R Extensions.

Duncan Murdoch


From gkr@emer @end|ng |rom bgc-jen@@mpg@de  Wed Nov 25 14:50:46 2020
From: gkr@emer @end|ng |rom bgc-jen@@mpg@de (Guido Kraemer)
Date: Wed, 25 Nov 2020 14:50:46 +0100
Subject: [R-pkg-devel] Conditional Makevars MacOS
Message-ID: <94715dad-91ef-cd8e-95c5-6254d97fa73b@bgc-jena.mpg.de>

I need to set up different compile flags for MacOS, Linux, and Windows. 
For Windows I can just use `Makevars.win` but I cannot figure out how to 
do the same for MacOS.

Cheers,

Guido


From mthrun @end|ng |rom M@them@t|k@Un|-M@rburg@de  Wed Nov 25 14:53:55 2020
From: mthrun @end|ng |rom M@them@t|k@Un|-M@rburg@de (Dr. rer. nat. Michael Thrun)
Date: Wed, 25 Nov 2020 14:53:55 +0100
Subject: [R-pkg-devel] Conditional Makevars MacOS
In-Reply-To: <94715dad-91ef-cd8e-95c5-6254d97fa73b@bgc-jena.mpg.de>
References: <94715dad-91ef-cd8e-95c5-6254d97fa73b@bgc-jena.mpg.de>
Message-ID: <B250D8E6-8F39-4D08-B6F9-C56E2CEAA7E4@mathematik.uni-marburg.de>

Dear Guido,
i wrote an Makevars.win <http://makevars.win/> and separately an Makevars file, in the Makevars file I set the following
PKG_LIBS = $(LAPACK_LIBS) $(BLAS_LIBS) $(FLIBS)
CXX_STD = CXX11

which works for me on MacOs well. Dont know if this answer helps you.

Best Regards

Michael Thrun
Postdoctoral Scholar
Databionics AG,
Mathematics and Computer Science

Philipps-Universit?t Marburg
Hans-Meerwein-Stra?e 6, 04A28
D-35032 Marburg

> On 25. Nov 2020, at 14:50, Guido Kraemer <gkraemer at bgc-jena.mpg.de> wrote:
> 
> I need to set up different compile flags for MacOS, Linux, and Windows. For Windows I can just use `Makevars.win` but I cannot figure out how to do the same for MacOS.
> 
> Cheers,
> 
> Guido
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


	[[alternative HTML version deleted]]


From gkr@emer @end|ng |rom bgc-jen@@mpg@de  Wed Nov 25 22:01:25 2020
From: gkr@emer @end|ng |rom bgc-jen@@mpg@de (Guido Kraemer)
Date: Wed, 25 Nov 2020 22:01:25 +0100
Subject: [R-pkg-devel] Conditional Makevars MacOS
In-Reply-To: <94715dad-91ef-cd8e-95c5-6254d97fa73b@bgc-jena.mpg.de>
References: <94715dad-91ef-cd8e-95c5-6254d97fa73b@bgc-jena.mpg.de>
Message-ID: <5e72e1fd-0343-ccbb-2056-8bd33502cb94@bgc-jena.mpg.de>

I have solved it for now using:

UNAME_S := $(shell uname -s)
ifeq ($(UNAME_S),Linux)
 ??? PKG_CPPFLAGS=...
 ??? PKG_LIBS=...
else
 ??? PKG_CPPFLAGS=...
 ??? PKG_LIBS=...
endif

But R CMD check now complains about GNU extensions.

Best,

Guido


On 11/25/20 2:50 PM, Guido Kraemer wrote:
> I need to set up different compile flags for MacOS, Linux, and 
> Windows. For Windows I can just use `Makevars.win` but I cannot figure 
> out how to do the same for MacOS.
>
> Cheers,
>
> Guido
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From c@@rd|@g@bor @end|ng |rom gm@||@com  Wed Nov 25 22:22:59 2020
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Wed, 25 Nov 2020 21:22:59 +0000
Subject: [R-pkg-devel] Conditional Makevars MacOS
In-Reply-To: <5e72e1fd-0343-ccbb-2056-8bd33502cb94@bgc-jena.mpg.de>
References: <94715dad-91ef-cd8e-95c5-6254d97fa73b@bgc-jena.mpg.de>
 <5e72e1fd-0343-ccbb-2056-8bd33502cb94@bgc-jena.mpg.de>
Message-ID: <CABtg=KnLF7HNGJoU9qG_BOm-sJd4XMLk1Dv6-HO7Hx2B0_Dqqw@mail.gmail.com>

I am not sure if you can solve this without a configure file, which
can be a simple shell script. Here is an example, that detects a bunch
of OSes and then creates an OS-dependent Makevars file:
https://github.com/r-lib/ps/blob/master/configure

You'll probably also need configure.win if you have configure, but it
can just call configure in this case:
https://github.com/r-lib/ps/blob/master/configure.win

Gabor

On Wed, Nov 25, 2020 at 9:01 PM Guido Kraemer <gkraemer at bgc-jena.mpg.de> wrote:
>
> I have solved it for now using:
>
> UNAME_S := $(shell uname -s)
> ifeq ($(UNAME_S),Linux)
>      PKG_CPPFLAGS=...
>      PKG_LIBS=...
> else
>      PKG_CPPFLAGS=...
>      PKG_LIBS=...
> endif
>
> But R CMD check now complains about GNU extensions.
>
> Best,
>
> Guido
>
>
> On 11/25/20 2:50 PM, Guido Kraemer wrote:
> > I need to set up different compile flags for MacOS, Linux, and
> > Windows. For Windows I can just use `Makevars.win` but I cannot figure
> > out how to do the same for MacOS.
> >
> > Cheers,
> >
> > Guido
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org  Thu Nov 26 20:50:21 2020
From: @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org (Spencer Graves)
Date: Thu, 26 Nov 2020 13:50:21 -0600
Subject: [R-pkg-devel] devtools::release() does not release
Message-ID: <40d3a92e-2179-53b6-6ca0-efe9178fb6fa@effectivedefense.org>

Hi folks,


	  devtools::release() gave the following errors:


...
Ready to submit fda (5.1.7) to CRAN?
1: Not yet
2: Absolutely
3: Uhhhh... Maybe?

Selection: 2
Uploading package & comments
Confirming submission
Error in if (new_url$query$submit == "1") { : argument is of length zero
In addition: Warning messages:
1: In charToRaw(enc2utf8(val)) :
  argument should be a character vector of length 1
all but the first element will be ignored
2: In charToRaw(enc2utf8(val)) :
  argument should be a character vector of length 1
all but the first element will be ignored


	  Jim Ramsay got this after setwd to what seemed to be the appropriate 
working directory and then running devtools::release(), as noted above. 
As near as both of us can determine, we've followed essentially the same 
protocol here as with other package submissions.


	  In case you want the entire devtools::release() transcript, it 
appears below running under Big Sur on a Mac.


	  Suggestions?
	  Thanks,
	  Spencer Graves & Jim Ramsay


> ??????????????????
>
> devtools::release()
>
> Have you checked for spelling errors (with `spell_check()`)?
> 1: Not yet
> 2: Nope
> 3: Absolutely
>
> Selection: 3
> Have you run `R CMD check` locally?
> 1: Yes
> 2: I forget
> 3: No
>
> Selection: 1
> ?? Running additional devtools checks for fda ????????????????????????
> Checking version number has three components... OK
> Checking dependencies don't rely on dev versions... OK
> Checking DESCRIPTION doesn't have Remotes field... OK
> ??????????????????????????????????????????????????????????????????????
> Were devtool's checks successful?
> 1: I forget
> 2: No
> 3: Absolutely
>
> Selection: 3
> Have you fixed all existing problems at
> https://cran.rstudio.com//web/checks/check_results_fda.html ?
> 1: Yes
> 2: Not yet
> 3: No
>
> Selection: 1
> Have you checked on R-hub (with `check_rhub()`)?
> 1: Not yet
> 2: I forget
> 3: Definitely
>
> Selection: 3
> Have you checked on win-builder (with `check_win_devel()`)?
> 1: No
> 2: Nope
> 3: Absolutely
>
> Selection: 3
> Have you checked the 67 reverse dependencies (with the revdepcheck 
package)?
> 1: Definitely
> 2: No
> 3: Uhhhh... Maybe?
>
> Selection: 1
> Have you updated `NEWS.md` file?
> 1: Uhhhh... Maybe?
> 2: No
> 3: Yeah
>
> Selection: 3
> Have you updated `DESCRIPTION`?
> 1: Yup
> 2: Nope
> 3: I forget
>
> Selection: 1
> Have you updated `cran-comments.md?`
> 1: Nope
> 2: Not yet
> 3: Yeah
>
> Selection: 3
> ?? Running Git checks for fda ????????????????????????????????????????
> Current branch: master
> Checking uncommitted files...
> WARNING: All files should be tracked and committed before release. 
Please add and commit.
> Checking synchronisation with remote branch...
> ERROR: Error in 'git2r_remote_fetch': unsupported URL protocol
>
> ??????????????????????????????????????????????????????????????????????
> Were Git checks successful?
> 1: Not yet
> 2: Nope
> 3: Yup
>
> Selection: 3
> Is your email address ramsay at psych.mcgill.ca?
> 1: Yup
> 2: I forget
> 3: Uhhhh... Maybe?
>
> Selection: 1
> Building
> ?  checking for file 
?/Users/jamesramsay/Documents/R/fda_work/fda/DESCRIPTION? (437ms)
> ?  preparing ?fda?: (5.8s)
> ?  checking DESCRIPTION meta-information ...
> ?  checking for LF line-endings in source and make files and shell 
scripts (1.6s)
> ?  checking for empty or unneeded directories
> ?  building ?fda_5.1.7.tar.gz?
>
> Submitting file: 
/var/folders/sc/6zzfzqbs5w7dl8q5g18tlqfc0000gn/T//RtmpbcSyMD/fda_5.1.7.tar.gz
> File size: 102.9 Mb
> Ready to submit fda (5.1.7) to CRAN?
> 1: Not yet
> 2: Absolutely
> 3: Uhhhh... Maybe?
>
> Selection: 2
> Uploading package & comments
> Confirming submission
> Error in if (new_url$query$submit == "1") { : argument is of length zero
> In addition: Warning messages:
> 1: In charToRaw(enc2utf8(val)) :
>  argument should be a character vector of length 1
> all but the first element will be ignored
> 2: In charToRaw(enc2utf8(val)) :
>  argument should be a character vector of length 1
> all but the first element will be ignored
>
>


From c@@rd|@g@bor @end|ng |rom gm@||@com  Thu Nov 26 20:57:12 2020
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Thu, 26 Nov 2020 19:57:12 +0000
Subject: [R-pkg-devel] devtools::release() does not release
In-Reply-To: <40d3a92e-2179-53b6-6ca0-efe9178fb6fa@effectivedefense.org>
References: <40d3a92e-2179-53b6-6ca0-efe9178fb6fa@effectivedefense.org>
Message-ID: <CABtg=KnkM5DxjbLqBAQo4yE6fiS=W2toLCCx5R6n8p28GmGzTg@mail.gmail.com>

Why not submit a bug report at the devtools repository?

? packageDescription("devtools")$BugReports
[1] "https://github.com/r-lib/devtools/issues"

Gabor

On Thu, Nov 26, 2020 at 7:50 PM Spencer Graves
<spencer.graves at effectivedefense.org> wrote:
>
> Hi folks,
>
>
>           devtools::release() gave the following errors:
>
>
> ...
> Ready to submit fda (5.1.7) to CRAN?
> 1: Not yet
> 2: Absolutely
> 3: Uhhhh... Maybe?
>
> Selection: 2
> Uploading package & comments
> Confirming submission
> Error in if (new_url$query$submit == "1") { : argument is of length zero
> In addition: Warning messages:
> 1: In charToRaw(enc2utf8(val)) :
>   argument should be a character vector of length 1
> all but the first element will be ignored
> 2: In charToRaw(enc2utf8(val)) :
>   argument should be a character vector of length 1
> all but the first element will be ignored
>
>
>           Jim Ramsay got this after setwd to what seemed to be the appropriate
> working directory and then running devtools::release(), as noted above.
> As near as both of us can determine, we've followed essentially the same
> protocol here as with other package submissions.
>
>
>           In case you want the entire devtools::release() transcript, it
> appears below running under Big Sur on a Mac.
>
>
>           Suggestions?
>           Thanks,
>           Spencer Graves & Jim Ramsay
>
>
> > ??????????????????
> >
> > devtools::release()
> >
> > Have you checked for spelling errors (with `spell_check()`)?
> > 1: Not yet
> > 2: Nope
> > 3: Absolutely
> >
> > Selection: 3
> > Have you run `R CMD check` locally?
> > 1: Yes
> > 2: I forget
> > 3: No
> >
> > Selection: 1
> > ?? Running additional devtools checks for fda ????????????????????????
> > Checking version number has three components... OK
> > Checking dependencies don't rely on dev versions... OK
> > Checking DESCRIPTION doesn't have Remotes field... OK
> > ??????????????????????????????????????????????????????????????????????
> > Were devtool's checks successful?
> > 1: I forget
> > 2: No
> > 3: Absolutely
> >
> > Selection: 3
> > Have you fixed all existing problems at
> > https://cran.rstudio.com//web/checks/check_results_fda.html ?
> > 1: Yes
> > 2: Not yet
> > 3: No
> >
> > Selection: 1
> > Have you checked on R-hub (with `check_rhub()`)?
> > 1: Not yet
> > 2: I forget
> > 3: Definitely
> >
> > Selection: 3
> > Have you checked on win-builder (with `check_win_devel()`)?
> > 1: No
> > 2: Nope
> > 3: Absolutely
> >
> > Selection: 3
> > Have you checked the 67 reverse dependencies (with the revdepcheck
> package)?
> > 1: Definitely
> > 2: No
> > 3: Uhhhh... Maybe?
> >
> > Selection: 1
> > Have you updated `NEWS.md` file?
> > 1: Uhhhh... Maybe?
> > 2: No
> > 3: Yeah
> >
> > Selection: 3
> > Have you updated `DESCRIPTION`?
> > 1: Yup
> > 2: Nope
> > 3: I forget
> >
> > Selection: 1
> > Have you updated `cran-comments.md?`
> > 1: Nope
> > 2: Not yet
> > 3: Yeah
> >
> > Selection: 3
> > ?? Running Git checks for fda ????????????????????????????????????????
> > Current branch: master
> > Checking uncommitted files...
> > WARNING: All files should be tracked and committed before release.
> Please add and commit.
> > Checking synchronisation with remote branch...
> > ERROR: Error in 'git2r_remote_fetch': unsupported URL protocol
> >
> > ??????????????????????????????????????????????????????????????????????
> > Were Git checks successful?
> > 1: Not yet
> > 2: Nope
> > 3: Yup
> >
> > Selection: 3
> > Is your email address ramsay at psych.mcgill.ca?
> > 1: Yup
> > 2: I forget
> > 3: Uhhhh... Maybe?
> >
> > Selection: 1
> > Building
> > ?  checking for file
> ?/Users/jamesramsay/Documents/R/fda_work/fda/DESCRIPTION? (437ms)
> > ?  preparing ?fda?: (5.8s)
> > ?  checking DESCRIPTION meta-information ...
> > ?  checking for LF line-endings in source and make files and shell
> scripts (1.6s)
> > ?  checking for empty or unneeded directories
> > ?  building ?fda_5.1.7.tar.gz?
> >
> > Submitting file:
> /var/folders/sc/6zzfzqbs5w7dl8q5g18tlqfc0000gn/T//RtmpbcSyMD/fda_5.1.7.tar.gz
> > File size: 102.9 Mb
> > Ready to submit fda (5.1.7) to CRAN?
> > 1: Not yet
> > 2: Absolutely
> > 3: Uhhhh... Maybe?
> >
> > Selection: 2
> > Uploading package & comments
> > Confirming submission
> > Error in if (new_url$query$submit == "1") { : argument is of length zero
> > In addition: Warning messages:
> > 1: In charToRaw(enc2utf8(val)) :
> >  argument should be a character vector of length 1
> > all but the first element will be ignored
> > 2: In charToRaw(enc2utf8(val)) :
> >  argument should be a character vector of length 1
> > all but the first element will be ignored
> >
> >
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu Nov 26 23:52:42 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 26 Nov 2020 17:52:42 -0500
Subject: [R-pkg-devel] devtools::release() does not release
In-Reply-To: <CABtg=KnkM5DxjbLqBAQo4yE6fiS=W2toLCCx5R6n8p28GmGzTg@mail.gmail.com>
References: <40d3a92e-2179-53b6-6ca0-efe9178fb6fa@effectivedefense.org>
 <CABtg=KnkM5DxjbLqBAQo4yE6fiS=W2toLCCx5R6n8p28GmGzTg@mail.gmail.com>
Message-ID: <22f838dd-07ca-407e-a2d1-27de2833750c@gmail.com>

Why not use the CRAN submission web page, as documented here: 
https://cran.r-project.org/web/packages/policies.html#Submission?

Duncan Murdoch

On 26/11/2020 2:57 p.m., G?bor Cs?rdi wrote:
> Why not submit a bug report at the devtools repository?
> 
> ? packageDescription("devtools")$BugReports
> [1] "https://github.com/r-lib/devtools/issues"
> 
> Gabor
> 
> On Thu, Nov 26, 2020 at 7:50 PM Spencer Graves
> <spencer.graves at effectivedefense.org> wrote:
>>
>> Hi folks,
>>
>>
>>            devtools::release() gave the following errors:
>>
>>
>> ...
>> Ready to submit fda (5.1.7) to CRAN?
>> 1: Not yet
>> 2: Absolutely
>> 3: Uhhhh... Maybe?
>>
>> Selection: 2
>> Uploading package & comments
>> Confirming submission
>> Error in if (new_url$query$submit == "1") { : argument is of length zero
>> In addition: Warning messages:
>> 1: In charToRaw(enc2utf8(val)) :
>>    argument should be a character vector of length 1
>> all but the first element will be ignored
>> 2: In charToRaw(enc2utf8(val)) :
>>    argument should be a character vector of length 1
>> all but the first element will be ignored
>>
>>
>>            Jim Ramsay got this after setwd to what seemed to be the appropriate
>> working directory and then running devtools::release(), as noted above.
>> As near as both of us can determine, we've followed essentially the same
>> protocol here as with other package submissions.
>>
>>
>>            In case you want the entire devtools::release() transcript, it
>> appears below running under Big Sur on a Mac.
>>
>>
>>            Suggestions?
>>            Thanks,
>>            Spencer Graves & Jim Ramsay
>>
>>
>>> ??????????????????
>>>
>>> devtools::release()
>>>
>>> Have you checked for spelling errors (with `spell_check()`)?
>>> 1: Not yet
>>> 2: Nope
>>> 3: Absolutely
>>>
>>> Selection: 3
>>> Have you run `R CMD check` locally?
>>> 1: Yes
>>> 2: I forget
>>> 3: No
>>>
>>> Selection: 1
>>> ?? Running additional devtools checks for fda ????????????????????????
>>> Checking version number has three components... OK
>>> Checking dependencies don't rely on dev versions... OK
>>> Checking DESCRIPTION doesn't have Remotes field... OK
>>> ??????????????????????????????????????????????????????????????????????
>>> Were devtool's checks successful?
>>> 1: I forget
>>> 2: No
>>> 3: Absolutely
>>>
>>> Selection: 3
>>> Have you fixed all existing problems at
>>> https://cran.rstudio.com//web/checks/check_results_fda.html ?
>>> 1: Yes
>>> 2: Not yet
>>> 3: No
>>>
>>> Selection: 1
>>> Have you checked on R-hub (with `check_rhub()`)?
>>> 1: Not yet
>>> 2: I forget
>>> 3: Definitely
>>>
>>> Selection: 3
>>> Have you checked on win-builder (with `check_win_devel()`)?
>>> 1: No
>>> 2: Nope
>>> 3: Absolutely
>>>
>>> Selection: 3
>>> Have you checked the 67 reverse dependencies (with the revdepcheck
>> package)?
>>> 1: Definitely
>>> 2: No
>>> 3: Uhhhh... Maybe?
>>>
>>> Selection: 1
>>> Have you updated `NEWS.md` file?
>>> 1: Uhhhh... Maybe?
>>> 2: No
>>> 3: Yeah
>>>
>>> Selection: 3
>>> Have you updated `DESCRIPTION`?
>>> 1: Yup
>>> 2: Nope
>>> 3: I forget
>>>
>>> Selection: 1
>>> Have you updated `cran-comments.md?`
>>> 1: Nope
>>> 2: Not yet
>>> 3: Yeah
>>>
>>> Selection: 3
>>> ?? Running Git checks for fda ????????????????????????????????????????
>>> Current branch: master
>>> Checking uncommitted files...
>>> WARNING: All files should be tracked and committed before release.
>> Please add and commit.
>>> Checking synchronisation with remote branch...
>>> ERROR: Error in 'git2r_remote_fetch': unsupported URL protocol
>>>
>>> ??????????????????????????????????????????????????????????????????????
>>> Were Git checks successful?
>>> 1: Not yet
>>> 2: Nope
>>> 3: Yup
>>>
>>> Selection: 3
>>> Is your email address ramsay at psych.mcgill.ca?
>>> 1: Yup
>>> 2: I forget
>>> 3: Uhhhh... Maybe?
>>>
>>> Selection: 1
>>> Building
>>> ?  checking for file
>> ?/Users/jamesramsay/Documents/R/fda_work/fda/DESCRIPTION? (437ms)
>>> ?  preparing ?fda?: (5.8s)
>>> ?  checking DESCRIPTION meta-information ...
>>> ?  checking for LF line-endings in source and make files and shell
>> scripts (1.6s)
>>> ?  checking for empty or unneeded directories
>>> ?  building ?fda_5.1.7.tar.gz?
>>>
>>> Submitting file:
>> /var/folders/sc/6zzfzqbs5w7dl8q5g18tlqfc0000gn/T//RtmpbcSyMD/fda_5.1.7.tar.gz
>>> File size: 102.9 Mb
>>> Ready to submit fda (5.1.7) to CRAN?
>>> 1: Not yet
>>> 2: Absolutely
>>> 3: Uhhhh... Maybe?
>>>
>>> Selection: 2
>>> Uploading package & comments
>>> Confirming submission
>>> Error in if (new_url$query$submit == "1") { : argument is of length zero
>>> In addition: Warning messages:
>>> 1: In charToRaw(enc2utf8(val)) :
>>>   argument should be a character vector of length 1
>>> all but the first element will be ignored
>>> 2: In charToRaw(enc2utf8(val)) :
>>>   argument should be a character vector of length 1
>>> all but the first element will be ignored
>>>
>>>
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From bbo|ker @end|ng |rom gm@||@com  Fri Nov 27 00:30:30 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Thu, 26 Nov 2020 18:30:30 -0500
Subject: [R-pkg-devel] devtools::release() does not release
In-Reply-To: <22f838dd-07ca-407e-a2d1-27de2833750c@gmail.com>
References: <40d3a92e-2179-53b6-6ca0-efe9178fb6fa@effectivedefense.org>
 <CABtg=KnkM5DxjbLqBAQo4yE6fiS=W2toLCCx5R6n8p28GmGzTg@mail.gmail.com>
 <22f838dd-07ca-407e-a2d1-27de2833750c@gmail.com>
Message-ID: <c377a769-4546-507e-9156-925e7aa9785a@gmail.com>


   Maybe off-topic, but I see that the tarball is 100+Mb ... won't that 
raise flags upon CRAN submission?  (The current CRAN tarball is <1 Mb ...)

 From the CRAN policies, there's no explicit limit given but ...

=====
Packages should be of the minimum necessary size. Reasonable compression 
should be used for data (not just .rda files) and PDF documentation: 
CRAN will if necessary pass the latter through qpdf.

As a general rule, neither data nor documentation should exceed 5MB 
(which covers several books). A CRAN package is not an appropriate way 
to distribute course notes, and authors will be asked to trim their 
documentation to a maximum of 5MB.

Where a large amount of data is required (even after compression), 
consideration should be given to a separate data-only package which can 
be updated only rarely (since older versions of packages are archived in 
perpetuity).

Similar considerations apply to other forms of ?data?, e.g., .jar files.
====


On 11/26/20 5:52 PM, Duncan Murdoch wrote:
> Why not use the CRAN submission web page, as documented here: 
> https://cran.r-project.org/web/packages/policies.html#Submission?
> 
> Duncan Murdoch
> 
> On 26/11/2020 2:57 p.m., G?bor Cs?rdi wrote:
>> Why not submit a bug report at the devtools repository?
>>
>> ? packageDescription("devtools")$BugReports
>> [1] "https://github.com/r-lib/devtools/issues"
>>
>> Gabor
>>
>> On Thu, Nov 26, 2020 at 7:50 PM Spencer Graves
>> <spencer.graves at effectivedefense.org> wrote:
>>>
>>> Hi folks,
>>>
>>>
>>> ?????????? devtools::release() gave the following errors:
>>>
>>>
>>> ...
>>> Ready to submit fda (5.1.7) to CRAN?
>>> 1: Not yet
>>> 2: Absolutely
>>> 3: Uhhhh... Maybe?
>>>
>>> Selection: 2
>>> Uploading package & comments
>>> Confirming submission
>>> Error in if (new_url$query$submit == "1") { : argument is of length zero
>>> In addition: Warning messages:
>>> 1: In charToRaw(enc2utf8(val)) :
>>> ?? argument should be a character vector of length 1
>>> all but the first element will be ignored
>>> 2: In charToRaw(enc2utf8(val)) :
>>> ?? argument should be a character vector of length 1
>>> all but the first element will be ignored
>>>
>>>
>>> ?????????? Jim Ramsay got this after setwd to what seemed to be the 
>>> appropriate
>>> working directory and then running devtools::release(), as noted above.
>>> As near as both of us can determine, we've followed essentially the same
>>> protocol here as with other package submissions.
>>>
>>>
>>> ?????????? In case you want the entire devtools::release() 
>>> transcript, it
>>> appears below running under Big Sur on a Mac.
>>>
>>>
>>> ?????????? Suggestions?
>>> ?????????? Thanks,
>>> ?????????? Spencer Graves & Jim Ramsay
>>>
>>>
>>>> ??????????????????
>>>>
>>>> devtools::release()
>>>>
>>>> Have you checked for spelling errors (with `spell_check()`)?
>>>> 1: Not yet
>>>> 2: Nope
>>>> 3: Absolutely
>>>>
>>>> Selection: 3
>>>> Have you run `R CMD check` locally?
>>>> 1: Yes
>>>> 2: I forget
>>>> 3: No
>>>>
>>>> Selection: 1
>>>> ?? Running additional devtools checks for fda ????????????????????????
>>>> Checking version number has three components... OK
>>>> Checking dependencies don't rely on dev versions... OK
>>>> Checking DESCRIPTION doesn't have Remotes field... OK
>>>> ??????????????????????????????????????????????????????????????????????
>>>> Were devtool's checks successful?
>>>> 1: I forget
>>>> 2: No
>>>> 3: Absolutely
>>>>
>>>> Selection: 3
>>>> Have you fixed all existing problems at
>>>> https://cran.rstudio.com//web/checks/check_results_fda.html ?
>>>> 1: Yes
>>>> 2: Not yet
>>>> 3: No
>>>>
>>>> Selection: 1
>>>> Have you checked on R-hub (with `check_rhub()`)?
>>>> 1: Not yet
>>>> 2: I forget
>>>> 3: Definitely
>>>>
>>>> Selection: 3
>>>> Have you checked on win-builder (with `check_win_devel()`)?
>>>> 1: No
>>>> 2: Nope
>>>> 3: Absolutely
>>>>
>>>> Selection: 3
>>>> Have you checked the 67 reverse dependencies (with the revdepcheck
>>> package)?
>>>> 1: Definitely
>>>> 2: No
>>>> 3: Uhhhh... Maybe?
>>>>
>>>> Selection: 1
>>>> Have you updated `NEWS.md` file?
>>>> 1: Uhhhh... Maybe?
>>>> 2: No
>>>> 3: Yeah
>>>>
>>>> Selection: 3
>>>> Have you updated `DESCRIPTION`?
>>>> 1: Yup
>>>> 2: Nope
>>>> 3: I forget
>>>>
>>>> Selection: 1
>>>> Have you updated `cran-comments.md?`
>>>> 1: Nope
>>>> 2: Not yet
>>>> 3: Yeah
>>>>
>>>> Selection: 3
>>>> ?? Running Git checks for fda ????????????????????????????????????????
>>>> Current branch: master
>>>> Checking uncommitted files...
>>>> WARNING: All files should be tracked and committed before release.
>>> Please add and commit.
>>>> Checking synchronisation with remote branch...
>>>> ERROR: Error in 'git2r_remote_fetch': unsupported URL protocol
>>>>
>>>> ??????????????????????????????????????????????????????????????????????
>>>> Were Git checks successful?
>>>> 1: Not yet
>>>> 2: Nope
>>>> 3: Yup
>>>>
>>>> Selection: 3
>>>> Is your email address ramsay at psych.mcgill.ca?
>>>> 1: Yup
>>>> 2: I forget
>>>> 3: Uhhhh... Maybe?
>>>>
>>>> Selection: 1
>>>> Building
>>>> ?? checking for file
>>> ?/Users/jamesramsay/Documents/R/fda_work/fda/DESCRIPTION? (437ms)
>>>> ?? preparing ?fda?: (5.8s)
>>>> ?? checking DESCRIPTION meta-information ...
>>>> ?? checking for LF line-endings in source and make files and shell
>>> scripts (1.6s)
>>>> ?? checking for empty or unneeded directories
>>>> ?? building ?fda_5.1.7.tar.gz?
>>>>
>>>> Submitting file:
>>> /var/folders/sc/6zzfzqbs5w7dl8q5g18tlqfc0000gn/T//RtmpbcSyMD/fda_5.1.7.tar.gz 
>>>
>>>> File size: 102.9 Mb
>>>> Ready to submit fda (5.1.7) to CRAN?
>>>> 1: Not yet
>>>> 2: Absolutely
>>>> 3: Uhhhh... Maybe?
>>>>
>>>> Selection: 2
>>>> Uploading package & comments
>>>> Confirming submission
>>>> Error in if (new_url$query$submit == "1") { : argument is of length 
>>>> zero
>>>> In addition: Warning messages:
>>>> 1: In charToRaw(enc2utf8(val)) :
>>>> ? argument should be a character vector of length 1
>>>> all but the first element will be ignored
>>>> 2: In charToRaw(enc2utf8(val)) :
>>>> ? argument should be a character vector of length 1
>>>> all but the first element will be ignored
>>>>
>>>>
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From b@becker @end|ng |rom |qb@hu-ber||n@de  Fri Nov 27 12:05:30 2020
From: b@becker @end|ng |rom |qb@hu-ber||n@de (Benjamin Becker)
Date: Fri, 27 Nov 2020 12:05:30 +0100
Subject: [R-pkg-devel] Rglpk on Linux
Message-ID: <07d42848-fb01-9033-1d18-2acb015d54d5@iqb.hu-berlin.de>

Dear R developer list,

I want to add 'Rglpk' as a dependency to a package. On windows and MacOS 
everything works fine, but there seem to be installation issues with the 
underlying optimization software 'GLPK' on Linux systems. The problem 
occurs when testing on Rhub and on Travis (I don't have a local Linux 
machine available):

https://builder.r-hub.io/status/eatATA_0.9.0.tar.gz-bbf79f5120bc435d89eb4ea3f5b62918

https://travis-ci.org/github/beckerbenj/eatATA/jobs/743971533

with the error message:

* installing *source* package ?Rglpk? ...

** package ?Rglpk? successfully unpacked and MD5 sums checked

** using staged installation

** libs

/bin/bash: line 0: cd: GLPK: No such file or directory

Makevars:10: recipe for target 'GLPK.ts' failed

make: *** [GLPK.ts] Error 1

ERROR: compilation failed for package ?Rglpk?
I am aware that there are other/similar reports of Rglpk installation 
problems on Linux (e.g. 
https://stackoverflow.com/questions/25114771/glpk-no-such-file-or-directory-error-when-trying-to-install-r-package) 
But other reverse dependencies of Rglpk on CRAN do not appear to have 
these issues (e.g. mknapsack, MSCMT, npbr ...)? Thanks, Benjamin


	[[alternative HTML version deleted]]


From c@@rd|@g@bor @end|ng |rom gm@||@com  Fri Nov 27 14:48:13 2020
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Fri, 27 Nov 2020 13:48:13 +0000
Subject: [R-pkg-devel] Rglpk on Linux
In-Reply-To: <07d42848-fb01-9033-1d18-2acb015d54d5@iqb.hu-berlin.de>
References: <07d42848-fb01-9033-1d18-2acb015d54d5@iqb.hu-berlin.de>
Message-ID: <CABtg=K=n5oVat9ykof=Dzzdpf=X1O8BsvJ_XgR3vPw+-DZZdiA@mail.gmail.com>

Hi,

on R-hub's Linux builders it is automatically installed if needed,
except that it wasn't on Fedora, because of a bug. Please try again,
and if it does not work report an issue on R-hub.

On Travis, you'll need to install the required packages yourself in
the `.travis.yml` file.

On CRAN's machines it should be installed, so nothing to worry about there.

If you don't have a Linux machine, but you have a fairly recent macOS
or Windows computer, then you can run Linux in Docker. If you ever
need to debug issues on Linux.

Gabor

On Fri, Nov 27, 2020 at 1:33 PM Benjamin Becker
<b.becker at iqb.hu-berlin.de> wrote:
>
> Dear R developer list,
>
> I want to add 'Rglpk' as a dependency to a package. On windows and MacOS
> everything works fine, but there seem to be installation issues with the
> underlying optimization software 'GLPK' on Linux systems. The problem
> occurs when testing on Rhub and on Travis (I don't have a local Linux
> machine available):
>
> https://builder.r-hub.io/status/eatATA_0.9.0.tar.gz-bbf79f5120bc435d89eb4ea3f5b62918
>
> https://travis-ci.org/github/beckerbenj/eatATA/jobs/743971533
>
> with the error message:
>
> * installing *source* package ?Rglpk? ...
>
> ** package ?Rglpk? successfully unpacked and MD5 sums checked
>
> ** using staged installation
>
> ** libs
>
> /bin/bash: line 0: cd: GLPK: No such file or directory
>
> Makevars:10: recipe for target 'GLPK.ts' failed
>
> make: *** [GLPK.ts] Error 1
>
> ERROR: compilation failed for package ?Rglpk?
> I am aware that there are other/similar reports of Rglpk installation
> problems on Linux (e.g.
> https://stackoverflow.com/questions/25114771/glpk-no-such-file-or-directory-error-when-trying-to-install-r-package)
> But other reverse dependencies of Rglpk on CRAN do not appear to have
> these issues (e.g. mknapsack, MSCMT, npbr ...)? Thanks, Benjamin
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From edd @end|ng |rom deb|@n@org  Fri Nov 27 15:12:23 2020
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Fri, 27 Nov 2020 08:12:23 -0600
Subject: [R-pkg-devel] Rglpk on Linux
In-Reply-To: <07d42848-fb01-9033-1d18-2acb015d54d5@iqb.hu-berlin.de>
References: <07d42848-fb01-9033-1d18-2acb015d54d5@iqb.hu-berlin.de>
Message-ID: <24513.2375.203337.898279@rob.eddelbuettel.com>


On 27 November 2020 at 12:05, Benjamin Becker wrote:
| I want to add 'Rglpk' as a dependency to a package. On windows and MacOS 
| everything works fine, but there seem to be installation issues with the 
| underlying optimization software 'GLPK' on Linux systems. The problem 
| occurs when testing on Rhub and on Travis (I don't have a local Linux 
| machine available):
| 
| https://builder.r-hub.io/status/eatATA_0.9.0.tar.gz-bbf79f5120bc435d89eb4ea3f5b62918
| 
| https://travis-ci.org/github/beckerbenj/eatATA/jobs/743971533
| 
| with the error message:
| 
| * installing *source* package ?Rglpk? ...
| 
| ** package ?Rglpk? successfully unpacked and MD5 sums checked
| 
| ** using staged installation
| 
| ** libs
| 
| /bin/bash: line 0: cd: GLPK: No such file or directory
| 
| Makevars:10: recipe for target 'GLPK.ts' failed
| 
| make: *** [GLPK.ts] Error 1
| 
| ERROR: compilation failed for package ?Rglpk?
| I am aware that there are other/similar reports of Rglpk installation 
| problems on Linux (e.g. 
| https://stackoverflow.com/questions/25114771/glpk-no-such-file-or-directory-error-when-trying-to-install-r-package) 
| But other reverse dependencies of Rglpk on CRAN do not appear to have 
| these issues (e.g. mknapsack, MSCMT, npbr ...)? Thanks, Benjamin

Make sure you have Ubuntu package

   libglpk-dev

installed (which can typically control at your CI level though not at
RHub). It will pull the runtime package libglpk40 in.

Or, better still, enable the Rutter PPAs, or the RSPM, for your CI runs
because then you can just install Rglpk premade.

I like bspm for this; below you can see the full command log just running
'install.packages("Rglpk")' on a bspm-enabled system backed by the PPA (and I
have written some more at my blog about all this, follow the URL below to
blog and scroll, or google-search). It also install package slam premade and
whatever is needed. (It's Docker demo, so once the install concludes it ends
the demo.)

Hth,  Dirk


edd at rob:~$ docker run --rm -ti rocker/r-bspm:20.04 Rscript -e 'install.packages("Rglpk")'
Loading required package: utils                                                        
Tracing function "install.packages" in package "utils"   
Install system packages as root...                                                   
Reading package lists... Done                                                           
Building dependency tree                                                                                 
Reading state information... Done                                                   
Get:1 http://ppa.launchpad.net/c2d4u.team/c2d4u4.0+/ubuntu focal InRelease [18.1 kB]  
Get:2 http://security.ubuntu.com/ubuntu focal-security InRelease [109 kB]         
Hit http://archive.ubuntu.com/ubuntu focal InRelease 
Get:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB] 
Hit http://ppa.launchpad.net/edd/r-4.0/ubuntu focal InRelease           
Get:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease [101 kB] 
Hit http://ppa.launchpad.net/marutter/rrutter4.0/ubuntu focal InRelease   
Get:5 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [643 kB]     
Get:6 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [30.4 kB]                                                                                                                          
Get:7 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [126 kB]                                                                                                                           
Get:8 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [466 kB]                                                                                                                               
Get:9 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [871 kB]                                                                                                                             
Get:10 http://ppa.launchpad.net/c2d4u.team/c2d4u4.0+/ubuntu focal/main Sources [1745 kB]                                                                                                                          
Get:11 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [850 kB]                                                                                                                                
Get:12 http://archive.ubuntu.com/ubuntu focal-backports/universe amd64 Packages [4248 B]                                                                                                                          
Get:13 http://ppa.launchpad.net/c2d4u.team/c2d4u4.0+/ubuntu focal/main amd64 Packages [837 kB]          
Fetched 5913 kB in 0s (0 B/s)                                                                                                                                                                                     
Reading package lists... Done    
Building dependency tree          
Reading state information... Done
Get:1 http://archive.ubuntu.com/ubuntu focal/main amd64 libsuitesparseconfig5 amd64 1:5.7.1+dfsg-2 [9736 B]                                                                                                       
Get:2 http://ppa.launchpad.net/c2d4u.team/c2d4u4.0+/ubuntu focal/main amd64 r-cran-slam amd64 0.1-47-2.1~ubuntu20.04.1~ppa1 [183 kB]                                                                              
Get:3 http://archive.ubuntu.com/ubuntu focal/main amd64 libamd2 amd64 1:5.7.1+dfsg-2 [20.0 kB]                                                                                                                    
Get:4 http://archive.ubuntu.com/ubuntu focal/main amd64 libcolamd2 amd64 1:5.7.1+dfsg-2 [17.0 kB]                                                                                                                 
Get:5 http://archive.ubuntu.com/ubuntu focal/main amd64 libltdl7 amd64 2.4.6-14 [38.5 kB]                                                                                                                         
Get:6 http://archive.ubuntu.com/ubuntu focal/universe amd64 libglpk40 amd64 4.65-2 [378 kB]                                                                                                                       
Get:7 http://ppa.launchpad.net/c2d4u.team/c2d4u4.0+/ubuntu focal/main amd64 r-cran-rglpk amd64 0.6-4-1.1~ubuntu20.04.1~ppa1 [58.1 kB]                                                                             
Fetched 705 kB in 0s (0 B/s)                                                                                                                                                                                      
Selecting previously unselected package libsuitesparseconfig5:amd64.
(Reading database ... 20576 files and directories currently installed.)
Preparing to unpack .../0-libsuitesparseconfig5_1%3a5.7.1+dfsg-2_amd64.deb ...
Unpacking libsuitesparseconfig5:amd64 (1:5.7.1+dfsg-2) ...
Selecting previously unselected package libamd2:amd64.
Preparing to unpack .../1-libamd2_1%3a5.7.1+dfsg-2_amd64.deb ...
Unpacking libamd2:amd64 (1:5.7.1+dfsg-2) ...
Selecting previously unselected package libcolamd2:amd64.
Preparing to unpack .../2-libcolamd2_1%3a5.7.1+dfsg-2_amd64.deb ...
Unpacking libcolamd2:amd64 (1:5.7.1+dfsg-2) ...
Selecting previously unselected package libltdl7:amd64.
Preparing to unpack .../3-libltdl7_2.4.6-14_amd64.deb ...
Unpacking libltdl7:amd64 (2.4.6-14) ...
Selecting previously unselected package libglpk40:amd64.
Preparing to unpack .../4-libglpk40_4.65-2_amd64.deb ...
Unpacking libglpk40:amd64 (4.65-2) ...
Selecting previously unselected package r-cran-slam.
Preparing to unpack .../5-r-cran-slam_0.1-47-2.1~ubuntu20.04.1~ppa1_amd64.deb ...
Unpacking r-cran-slam (0.1-47-2.1~ubuntu20.04.1~ppa1) ...
Selecting previously unselected package r-cran-rglpk.
Preparing to unpack .../6-r-cran-rglpk_0.6-4-1.1~ubuntu20.04.1~ppa1_amd64.deb ...
Unpacking r-cran-rglpk (0.6-4-1.1~ubuntu20.04.1~ppa1) ...
Setting up r-cran-slam (0.1-47-2.1~ubuntu20.04.1~ppa1) ...
Setting up libltdl7:amd64 (2.4.6-14) ...
Setting up libsuitesparseconfig5:amd64 (1:5.7.1+dfsg-2) ...
Setting up libamd2:amd64 (1:5.7.1+dfsg-2) ...
Setting up libcolamd2:amd64 (1:5.7.1+dfsg-2) ...
Setting up libglpk40:amd64 (4.65-2) ...
Setting up r-cran-rglpk (0.6-4-1.1~ubuntu20.04.1~ppa1) ...
Processing triggers for libc-bin (2.31-0ubuntu9.1) ...
edd at rob:~$ 








-- 
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From ge|bjeremy22 @end|ng |rom gm@||@com  Fri Nov 27 17:18:50 2020
From: ge|bjeremy22 @end|ng |rom gm@||@com (=?UTF-8?B?asOpcsOpbXkgR2VsYg==?=)
Date: Fri, 27 Nov 2020 11:18:50 -0500
Subject: [R-pkg-devel] submitting two packages simultaneously
Message-ID: <CACSk52_dR03kFC0z3jBtwgXbM=7EgpkVT+v3sCWo332MyOe2Nw@mail.gmail.com>

Dear All,

I plan to submit a package I created called spNetwork. The package
uses both Rcpp and parallelization to ensure reasonable calculation
time. However, it is currently not possible to pass a compiled
function to a child process. The recommended workaround is to store
compiled functions in an existing package. So I put the worker
functions using Rcpp in a separate package called spNetworkCpp and
everything works like a charm (all tests and checks passed). To submit
spNetwork to CRAN, how should I proceed? Should I submit spNetworkCpp
first, then spNetwork?

Thank you in advance
All the best,

Jeremy Gelb


From |uc@r @end|ng |rom |edor@project@org  Fri Nov 27 17:30:38 2020
From: |uc@r @end|ng |rom |edor@project@org (=?UTF-8?Q?I=C3=B1aki_Ucar?=)
Date: Fri, 27 Nov 2020 17:30:38 +0100
Subject: [R-pkg-devel] submitting two packages simultaneously
In-Reply-To: <CACSk52_dR03kFC0z3jBtwgXbM=7EgpkVT+v3sCWo332MyOe2Nw@mail.gmail.com>
References: <CACSk52_dR03kFC0z3jBtwgXbM=7EgpkVT+v3sCWo332MyOe2Nw@mail.gmail.com>
Message-ID: <CALEXWq3t08RFFHMSakiWy2rt-Xi5hLf4=mHahjbGKKr6e=XODw@mail.gmail.com>

On Fri, 27 Nov 2020 at 17:20, j?r?my Gelb <gelbjeremy22 at gmail.com> wrote:
>
> Dear All,
>
> I plan to submit a package I created called spNetwork. The package
> uses both Rcpp and parallelization to ensure reasonable calculation
> time. However, it is currently not possible to pass a compiled
> function to a child process. The recommended workaround is to store
> compiled functions in an existing package. So I put the worker
> functions using Rcpp in a separate package called spNetworkCpp and
> everything works like a charm (all tests and checks passed).

Probably I'm missing something, but why do you need the functions in a
separate package?

> To submit
> spNetwork to CRAN, how should I proceed? Should I submit spNetworkCpp
> first, then spNetwork?

Yes, this is the way (pun intended).

I?aki

>
> Thank you in advance
> All the best,
>
> Jeremy Gelb
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel



-- 
I?aki ?car


From edd @end|ng |rom deb|@n@org  Fri Nov 27 17:36:53 2020
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Fri, 27 Nov 2020 10:36:53 -0600
Subject: [R-pkg-devel] submitting two packages simultaneously
In-Reply-To: <CACSk52_dR03kFC0z3jBtwgXbM=7EgpkVT+v3sCWo332MyOe2Nw@mail.gmail.com>
References: <CACSk52_dR03kFC0z3jBtwgXbM=7EgpkVT+v3sCWo332MyOe2Nw@mail.gmail.com>
Message-ID: <24513.11045.943261.71696@rob.eddelbuettel.com>


On 27 November 2020 at 11:18, j?r?my Gelb wrote:
| I plan to submit a package I created called spNetwork. The package
| uses both Rcpp and parallelization to ensure reasonable calculation
| time. However, it is currently not possible to pass a compiled
| function to a child process. The recommended workaround is to store
| compiled functions in an existing package. 

Yes, that is the usual recommendation. Beats recompiling the function on each
worker node.

| So I put the worker
| functions using Rcpp in a separate package called spNetworkCpp and
| everything works like a charm (all tests and checks passed). To submit
| spNetwork to CRAN, how should I proceed? Should I submit spNetworkCpp
| first, then spNetwork?

Sounds good to me. And if the former is a dependency of the later you need to
sequence it that way.

Unless maybe you would want to keep it simpler and keep everything in _one_
package so that the child processes would load the same package.  That way
you also avoid possible 'version skew' if the main packages and the client
package are not aligned.

Dirk

-- 
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From m@rk@c|ement@ @end|ng |rom k|@@e  Mon Nov 30 17:06:04 2020
From: m@rk@c|ement@ @end|ng |rom k|@@e (Mark Clements)
Date: Mon, 30 Nov 2020 17:06:04 +0100
Subject: [R-pkg-devel] C++11 requirements for package dependencies
Message-ID: <330ba8bd-4013-1273-9ae4-92fa0482484d@ki.se>

[Apologies for cross-posting]

A colleague uses a package I maintain (rstpm2) as a dependency in their
package (rsimsum) with testing using GitHub Actions. They found that
testing failed against R versions 3.3, 3.4 and 3.5 because recent
versions of RcppArmadillo (which is a dependency in rstpm2) require
C++11. As a dependency diagram:

rsimsum --> rstpm2 --> RcppArmadillo

Should I update rstpm2 to include "CXX_STD = CXX11" in the Makevars and
Makevars.win files and add "SystemRequirements: C++11" to the
DESCRIPTION, or is there a simple way in GitHub Actions to use C++11 for
older versions of R?

Moreover, as a principle, should a package need to change the Makevars
and DESCRIPTION files to suit the most recent updates of their
dependencies? I would have thought that such a need would break many
packages.

Sincerely, Mark.



N?r du skickar e-post till Karolinska Institutet (KI) inneb?r detta att KI kommer att behandla dina personuppgifter. H?r finns information om hur KI behandlar personuppgifter<https://ki.se/medarbetare/integritetsskyddspolicy>.


Sending email to Karolinska Institutet (KI) will result in KI processing your personal data. You can read more about KI?s processing of personal data here<https://ki.se/en/staff/data-protection-policy>.


From murdoch@dunc@n @end|ng |rom gm@||@com  Mon Nov 30 17:27:34 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Mon, 30 Nov 2020 11:27:34 -0500
Subject: [R-pkg-devel] C++11 requirements for package dependencies
In-Reply-To: <330ba8bd-4013-1273-9ae4-92fa0482484d@ki.se>
References: <330ba8bd-4013-1273-9ae4-92fa0482484d@ki.se>
Message-ID: <96b348cb-8b66-f985-71e3-8c52cfb6ccde@gmail.com>

I think that C++11 isn't a requirement of RcppArmadillo, it's an option 
that is used if available.  (Assuming you are using the CRAN version, 
not an experimental/devel version.)  A user of the header file can include

#define ARMA_USE_CXX11

which would make it a system requirement of whatever package did that, 
even though it isn't a system requirement for RcppArmadillo.

But I could be wrong about this...

Duncan Murdoch

On 30/11/2020 11:06 a.m., Mark Clements wrote:
> [Apologies for cross-posting]
> 
> A colleague uses a package I maintain (rstpm2) as a dependency in their
> package (rsimsum) with testing using GitHub Actions. They found that
> testing failed against R versions 3.3, 3.4 and 3.5 because recent
> versions of RcppArmadillo (which is a dependency in rstpm2) require
> C++11. As a dependency diagram:
> 
> rsimsum --> rstpm2 --> RcppArmadillo
> 
> Should I update rstpm2 to include "CXX_STD = CXX11" in the Makevars and
> Makevars.win files and add "SystemRequirements: C++11" to the
> DESCRIPTION, or is there a simple way in GitHub Actions to use C++11 for
> older versions of R?
> 
> Moreover, as a principle, should a package need to change the Makevars
> and DESCRIPTION files to suit the most recent updates of their
> dependencies? I would have thought that such a need would break many
> packages.
> 
> Sincerely, Mark.
> 
> 
> 
> N?r du skickar e-post till Karolinska Institutet (KI) inneb?r detta att KI kommer att behandla dina personuppgifter. H?r finns information om hur KI behandlar personuppgifter<https://ki.se/medarbetare/integritetsskyddspolicy>.
> 
> 
> Sending email to Karolinska Institutet (KI) will result in KI processing your personal data. You can read more about KI?s processing of personal data here<https://ki.se/en/staff/data-protection-policy>.
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From edd @end|ng |rom deb|@n@org  Mon Nov 30 17:30:49 2020
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Mon, 30 Nov 2020 10:30:49 -0600
Subject: [R-pkg-devel] C++11 requirements for package dependencies
In-Reply-To: <330ba8bd-4013-1273-9ae4-92fa0482484d@ki.se>
References: <330ba8bd-4013-1273-9ae4-92fa0482484d@ki.se>
Message-ID: <24517.7737.84177.452956@rob.eddelbuettel.com>


On 30 November 2020 at 17:06, Mark Clements wrote:
| [Apologies for cross-posting]
| 
| A colleague uses a package I maintain (rstpm2) as a dependency in their
| package (rsimsum) with testing using GitHub Actions. They found that
| testing failed against R versions 3.3, 3.4 and 3.5 because recent
| versions of RcppArmadillo (which is a dependency in rstpm2) require
| C++11. As a dependency diagram:
| 
| rsimsum --> rstpm2 --> RcppArmadillo
| 
| Should I update rstpm2 to include "CXX_STD = CXX11" in the Makevars and
| Makevars.win files and add "SystemRequirements: C++11" to the
| DESCRIPTION, or is there a simple way in GitHub Actions to use C++11 for
| older versions of R?

Yes.  Writing R Extension has the goods, as usual:

-----------------------------------------------------------------------------

1.2.4 Using C++11 code
----------------------

R can be built without a C++ compiler although one is available (but not
necessarily installed) on all known R platforms.  As from R 4.0.0 a C++
compiler will be selected only if it conforms to the 2011 standard
('C++11').  A minor update(1) ('C++14') was published in December 2014.
A revision ('C++17') was published in December 2017, and a further
revision ('C++20', with many new features) is scheduled for publication
in May 2020.

   What standard a C++ compiler aims to support can be hard to
determine: the value(2) of '__cplusplus' may help but some compilers use
it to denote a standard which is partially supported and some the latest
standard which is (almost) fully supported.

   The webpage <http://en.cppreference.com/w/cpp/compiler_support> gives
some information on which compilers are known to support recent C++
features.  'g++' claims full C++11 support from version 4.8.1.

   As from version 3.6.2(3), R selects a default C++ compiler with
options that conform as far as possible(4) to C++11.  Packages which do
not specify 'R (>= 4.0)' in their 'DESCRIPTION' files need to explicitly
require C++11, hence the rest of this section.

   In order to specify C++11 code in a package to be used with R
versions from 3.1.0 but before 3.6.2, the package's 'Makevars' file (or
'Makevars.win' on Windows) should include the line

     CXX_STD = CXX11
Compilation and linking will then be done with the C++11 compiler (if
any).

   Packages without a 'src/Makevars' or 'src/Makefile' file may specify
that they require C++11 for code in the 'src' directory by including
'C++11' in the 'SystemRequirements' field of the 'DESCRIPTION' file,
e.g.

     SystemRequirements: C++11

   If a package does have a 'src/Makevars[.win]' file then setting the
make variable 'CXX_STD' is preferred, as it allows 'R CMD SHLIB' to work
correctly in the package's 'src' directory.

[... rest omitted ...]

-----------------------------------------------------------------------------
 
| Moreover, as a principle, should a package need to change the Makevars
| and DESCRIPTION files to suit the most recent updates of their
| dependencies? I would have thought that such a need would break many
| packages.

I don't understand what you are trying to say.  R, as shown in the quote,
supports C++11 and even defaults to it.  What would break anywhere?

Dirk

-- 
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From edd @end|ng |rom deb|@n@org  Mon Nov 30 17:31:33 2020
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Mon, 30 Nov 2020 10:31:33 -0600
Subject: [R-pkg-devel] C++11 requirements for package dependencies
In-Reply-To: <96b348cb-8b66-f985-71e3-8c52cfb6ccde@gmail.com>
References: <330ba8bd-4013-1273-9ae4-92fa0482484d@ki.se>
 <96b348cb-8b66-f985-71e3-8c52cfb6ccde@gmail.com>
Message-ID: <24517.7781.225701.936183@rob.eddelbuettel.com>


On 30 November 2020 at 11:27, Duncan Murdoch wrote:
| I think that C++11 isn't a requirement of RcppArmadillo, it's an option 

It is as of the 10.* series of Armadillo and hence RcppArmadillo 0.10.*

Dirk

-- 
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From murdoch@dunc@n @end|ng |rom gm@||@com  Mon Nov 30 17:54:00 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Mon, 30 Nov 2020 11:54:00 -0500
Subject: [R-pkg-devel] C++11 requirements for package dependencies
In-Reply-To: <24517.7781.225701.936183@rob.eddelbuettel.com>
References: <330ba8bd-4013-1273-9ae4-92fa0482484d@ki.se>
 <96b348cb-8b66-f985-71e3-8c52cfb6ccde@gmail.com>
 <24517.7781.225701.936183@rob.eddelbuettel.com>
Message-ID: <19118004-a99e-fd92-b2ef-dd405bc2a3ab@gmail.com>

On 30/11/2020 11:31 a.m., Dirk Eddelbuettel wrote:
> 
> On 30 November 2020 at 11:27, Duncan Murdoch wrote:
> | I think that C++11 isn't a requirement of RcppArmadillo, it's an option
> 
> It is as of the 10.* series of Armadillo and hence RcppArmadillo 0.10.*

I was going to complain that you should include SystemRequirements: 
C++11, but on reading more closely, your Makevars.in specifies this in a 
different way.  So I guess the issue is with the Github Actions setup, 
which didn't spot the requirement.

Sorry for the noise...

Duncan Murdoch


From edd @end|ng |rom deb|@n@org  Mon Nov 30 18:13:37 2020
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Mon, 30 Nov 2020 11:13:37 -0600
Subject: [R-pkg-devel] C++11 requirements for package dependencies
In-Reply-To: <19118004-a99e-fd92-b2ef-dd405bc2a3ab@gmail.com>
References: <330ba8bd-4013-1273-9ae4-92fa0482484d@ki.se>
 <96b348cb-8b66-f985-71e3-8c52cfb6ccde@gmail.com>
 <24517.7781.225701.936183@rob.eddelbuettel.com>
 <19118004-a99e-fd92-b2ef-dd405bc2a3ab@gmail.com>
Message-ID: <24517.10305.908789.655331@rob.eddelbuettel.com>


On 30 November 2020 at 11:54, Duncan Murdoch wrote:
| On 30/11/2020 11:31 a.m., Dirk Eddelbuettel wrote:
| > 
| > On 30 November 2020 at 11:27, Duncan Murdoch wrote:
| > | I think that C++11 isn't a requirement of RcppArmadillo, it's an option
| > 
| > It is as of the 10.* series of Armadillo and hence RcppArmadillo 0.10.*
| 
| I was going to complain that you should include SystemRequirements: 
| C++11, but on reading more closely, your Makevars.in specifies this in a 
| different way.  So I guess the issue is with the Github Actions setup, 
| which didn't spot the requirement.

Correct!  These are two different, and distinct, issues.

- CRAN checks for and uses _current_ packages with r-release and r-devel.
  C++11 is already a standard. Hence no change.

- OP had a problem because of a CI system that turns on older R versions for
  him. RcppArmadillo is a depends. And while RcppArmadillo has long allowed
  C++11, the (newer) dependency does not bubble up backwards from a dependee
  to the compiling package.  Hence the need to do it just as WRE describes.
 
| Sorry for the noise...

No worries.

Dirk

-- 
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From r@@y@|@14 @end|ng |rom |mper|@|@@c@uk  Mon Nov 30 19:45:01 2020
From: r@@y@|@14 @end|ng |rom |mper|@|@@c@uk (Ayala Hernandez, Rafael)
Date: Mon, 30 Nov 2020 18:45:01 +0000
Subject: [R-pkg-devel] Conditional timeout for httr request when running R
 CMD check
Message-ID: <AM0PR06MB44359B3DE79CA8D9EB054DE5CCF50@AM0PR06MB4435.eurprd06.prod.outlook.com>

Dear all,

My package openSkies includes a set of functions to retrieve information from the OpenSky API.

The examples for these functions can, on rare occassions, take anomously longer times to complete than usually because of issues on the API side.

I have already included a timeout parameter to prevent endless attempts to retrieve the result when, for example, the API is down for maintenance.

I have recently been asked by CRAN to reduce the execution time of each example to below 5 s. In order to do this, I can set the timeout parameter to something below 5s, and return NULL and a message indicating the resource is not currently available. However, I think this might not be the best option for examples that demonstrate important functionalities to users.

Therefore, I was wondering if there is anyway to set up the timeout parameter to a different value than usual based on the condition that examples are being run as part of R CMD check?

Thanks a lot in advance

Best wishes,

Rafa

	[[alternative HTML version deleted]]


From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Mon Nov 30 20:08:43 2020
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Mon, 30 Nov 2020 11:08:43 -0800
Subject: [R-pkg-devel] 
 Conditional timeout for httr request when running R CMD check
In-Reply-To: <AM0PR06MB44359B3DE79CA8D9EB054DE5CCF50@AM0PR06MB4435.eurprd06.prod.outlook.com>
References: <AM0PR06MB44359B3DE79CA8D9EB054DE5CCF50@AM0PR06MB4435.eurprd06.prod.outlook.com>
Message-ID: <D232AB1B-0FAC-47FE-A4CA-D52015867631@dcn.davis.ca.us>

Don't test against a live website for most of your testing... use recorded or simulated input. If your package functional interface doesn't allow for that, then re-factor it so it does.

For those tests that actually have to interact with the live website, only run them if you know you are not on CRAN. The testthat package has support for this if you don't want to roll your own.

On November 30, 2020 10:45:01 AM PST, "Ayala Hernandez, Rafael" <r.ayala14 at imperial.ac.uk> wrote:
>Dear all,
>
>My package openSkies includes a set of functions to retrieve
>information from the OpenSky API.
>
>The examples for these functions can, on rare occassions, take
>anomously longer times to complete than usually because of issues on
>the API side.
>
>I have already included a timeout parameter to prevent endless attempts
>to retrieve the result when, for example, the API is down for
>maintenance.
>
>I have recently been asked by CRAN to reduce the execution time of each
>example to below 5 s. In order to do this, I can set the timeout
>parameter to something below 5s, and return NULL and a message
>indicating the resource is not currently available. However, I think
>this might not be the best option for examples that demonstrate
>important functionalities to users.
>
>Therefore, I was wondering if there is anyway to set up the timeout
>parameter to a different value than usual based on the condition that
>examples are being run as part of R CMD check?
>
>Thanks a lot in advance
>
>Best wishes,
>
>Rafa
>
>	[[alternative HTML version deleted]]
>
>______________________________________________
>R-package-devel at r-project.org mailing list
>https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
Sent from my phone. Please excuse my brevity.


From ||oruppr @end|ng |rom gm@||@com  Mon Nov 30 19:47:33 2020
From: ||oruppr @end|ng |rom gm@||@com (Florian Rupprecht)
Date: Mon, 30 Nov 2020 19:47:33 +0100
Subject: [R-pkg-devel] Windows R CMD check warning using Boost Beast
Message-ID: <CAHTZEhBkMLrmQtyqE=SPpjGwRkmGo=QHNgfAKT9dZ+Mu2hesQg@mail.gmail.com>

Dear package development mailing list,

I am trying to publish my package httpgd (https://github.com/nx10/httpgd)
which includes Boost Beast to CRAN but I am struggling to solve a CMD check
warning:

* checking whether package 'httpgd' can be installed ... WARNING
Found the following significant warnings:
  lib/boost/beast/core/detail/char_buffer.hpp:39:21: warning: 'void*
memmove(void*, const void*, size_t)' forming offset
[-9223372036854771705, 4105] is out of the bounds [0, 4104] of object
'buf' with type 'boost::beast::detail::char_buffer<4096>'
[-Warray-bounds]


The warning is only shown under windows and deep inside the Boost Beast.

Thank you for any help you can provide,
Florian

	[[alternative HTML version deleted]]


From henr|k@bengt@@on @end|ng |rom gm@||@com  Mon Nov 30 20:48:23 2020
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Mon, 30 Nov 2020 11:48:23 -0800
Subject: [R-pkg-devel] 
 Conditional timeout for httr request when running R CMD check
In-Reply-To: <D232AB1B-0FAC-47FE-A4CA-D52015867631@dcn.davis.ca.us>
References: <AM0PR06MB44359B3DE79CA8D9EB054DE5CCF50@AM0PR06MB4435.eurprd06.prod.outlook.com>
 <D232AB1B-0FAC-47FE-A4CA-D52015867631@dcn.davis.ca.us>
Message-ID: <CAFDcVCRTbRBfC9+W4z474RwpPpdWS7C6epKMkR+eqK-JjGe82A@mail.gmail.com>

The problem here was regarding user facing example():s, not package tests.

In order to keep a neat example for the user to play with, I'd
probably wrap the example code in a \donttest{} statement.  Though, I
don't remember if CRAN tests with R CMD check --run-dontest, or not.
There's also \dontrun{}.

My $.02

/Henrik

On Mon, Nov 30, 2020 at 11:09 AM Jeff Newmiller
<jdnewmil at dcn.davis.ca.us> wrote:
>
> Don't test against a live website for most of your testing... use recorded or simulated input. If your package functional interface doesn't allow for that, then re-factor it so it does.
>
> For those tests that actually have to interact with the live website, only run them if you know you are not on CRAN. The testthat package has support for this if you don't want to roll your own.
>
> On November 30, 2020 10:45:01 AM PST, "Ayala Hernandez, Rafael" <r.ayala14 at imperial.ac.uk> wrote:
> >Dear all,
> >
> >My package openSkies includes a set of functions to retrieve
> >information from the OpenSky API.
> >
> >The examples for these functions can, on rare occassions, take
> >anomously longer times to complete than usually because of issues on
> >the API side.
> >
> >I have already included a timeout parameter to prevent endless attempts
> >to retrieve the result when, for example, the API is down for
> >maintenance.
> >
> >I have recently been asked by CRAN to reduce the execution time of each
> >example to below 5 s. In order to do this, I can set the timeout
> >parameter to something below 5s, and return NULL and a message
> >indicating the resource is not currently available. However, I think
> >this might not be the best option for examples that demonstrate
> >important functionalities to users.
> >
> >Therefore, I was wondering if there is anyway to set up the timeout
> >parameter to a different value than usual based on the condition that
> >examples are being run as part of R CMD check?
> >
> >Thanks a lot in advance
> >
> >Best wishes,
> >
> >Rafa
> >
> >       [[alternative HTML version deleted]]
> >
> >______________________________________________
> >R-package-devel at r-project.org mailing list
> >https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
> --
> Sent from my phone. Please excuse my brevity.
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From bbo|ker @end|ng |rom gm@||@com  Mon Nov 30 20:59:26 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Mon, 30 Nov 2020 14:59:26 -0500
Subject: [R-pkg-devel] 
 Conditional timeout for httr request when running R CMD check
In-Reply-To: <CAFDcVCRTbRBfC9+W4z474RwpPpdWS7C6epKMkR+eqK-JjGe82A@mail.gmail.com>
References: <AM0PR06MB44359B3DE79CA8D9EB054DE5CCF50@AM0PR06MB4435.eurprd06.prod.outlook.com>
 <D232AB1B-0FAC-47FE-A4CA-D52015867631@dcn.davis.ca.us>
 <CAFDcVCRTbRBfC9+W4z474RwpPpdWS7C6epKMkR+eqK-JjGe82A@mail.gmail.com>
Message-ID: <bb019772-b7fc-aa08-fe9b-049a46557036@gmail.com>

 ? as pointed out to me the last time I was struggling with similar 
issues, if (interactive()) { ... } is another potential solution

On 11/30/20 2:48 PM, Henrik Bengtsson wrote:
> The problem here was regarding user facing example():s, not package tests.
>
> In order to keep a neat example for the user to play with, I'd
> probably wrap the example code in a \donttest{} statement.  Though, I
> don't remember if CRAN tests with R CMD check --run-dontest, or not.
> There's also \dontrun{}.
>
> My $.02
>
> /Henrik
>
> On Mon, Nov 30, 2020 at 11:09 AM Jeff Newmiller
> <jdnewmil at dcn.davis.ca.us> wrote:
>> Don't test against a live website for most of your testing... use recorded or simulated input. If your package functional interface doesn't allow for that, then re-factor it so it does.
>>
>> For those tests that actually have to interact with the live website, only run them if you know you are not on CRAN. The testthat package has support for this if you don't want to roll your own.
>>
>> On November 30, 2020 10:45:01 AM PST, "Ayala Hernandez, Rafael" <r.ayala14 at imperial.ac.uk> wrote:
>>> Dear all,
>>>
>>> My package openSkies includes a set of functions to retrieve
>>> information from the OpenSky API.
>>>
>>> The examples for these functions can, on rare occassions, take
>>> anomously longer times to complete than usually because of issues on
>>> the API side.
>>>
>>> I have already included a timeout parameter to prevent endless attempts
>>> to retrieve the result when, for example, the API is down for
>>> maintenance.
>>>
>>> I have recently been asked by CRAN to reduce the execution time of each
>>> example to below 5 s. In order to do this, I can set the timeout
>>> parameter to something below 5s, and return NULL and a message
>>> indicating the resource is not currently available. However, I think
>>> this might not be the best option for examples that demonstrate
>>> important functionalities to users.
>>>
>>> Therefore, I was wondering if there is anyway to set up the timeout
>>> parameter to a different value than usual based on the condition that
>>> examples are being run as part of R CMD check?
>>>
>>> Thanks a lot in advance
>>>
>>> Best wishes,
>>>
>>> Rafa
>>>
>>>        [[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> --
>> Sent from my phone. Please excuse my brevity.
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From murdoch@dunc@n @end|ng |rom gm@||@com  Mon Nov 30 22:17:55 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Mon, 30 Nov 2020 16:17:55 -0500
Subject: [R-pkg-devel] C++11 requirements for package dependencies
In-Reply-To: <19118004-a99e-fd92-b2ef-dd405bc2a3ab@gmail.com>
References: <330ba8bd-4013-1273-9ae4-92fa0482484d@ki.se>
 <96b348cb-8b66-f985-71e3-8c52cfb6ccde@gmail.com>
 <24517.7781.225701.936183@rob.eddelbuettel.com>
 <19118004-a99e-fd92-b2ef-dd405bc2a3ab@gmail.com>
Message-ID: <afc0b3f7-fca4-f120-f1a1-46800b69a0c4@gmail.com>

On 30/11/2020 11:54 a.m., Duncan Murdoch wrote:
> On 30/11/2020 11:31 a.m., Dirk Eddelbuettel wrote:
>>
>> On 30 November 2020 at 11:27, Duncan Murdoch wrote:
>> | I think that C++11 isn't a requirement of RcppArmadillo, it's an option
>>
>> It is as of the 10.* series of Armadillo and hence RcppArmadillo 0.10.*
> 
> I was going to complain that you should include SystemRequirements:
> C++11, but on reading more closely, your Makevars.in specifies this in a
> different way.  So I guess the issue is with the Github Actions setup,
> which didn't spot the requirement.
> 
> Sorry for the noise...

I think the remotes::system_requirements() function is used in setting 
up the Github Action files; it doesn't appear to recognize the need of 
RcppArmadillo for C++11.  I've posted this as an issue on Github. 
Hopefully I'm not wrong about this too...

Duncan Murdoch


From r@@y@|@14 @end|ng |rom |mper|@|@@c@uk  Tue Dec  1 17:56:54 2020
From: r@@y@|@14 @end|ng |rom |mper|@|@@c@uk (Ayala Hernandez, Rafael)
Date: Tue, 1 Dec 2020 16:56:54 +0000
Subject: [R-pkg-devel] 
 Conditional timeout for httr request when running R CMD check
In-Reply-To: <~B5fc5512c0002.5fc5afb0000c.000f.mml.3907057639@gmail.com>
References: <AM0PR06MB44359B3DE79CA8D9EB054DE5CCF50@AM0PR06MB4435.eurprd06.prod.outlook.com>
 <D232AB1B-0FAC-47FE-A4CA-D52015867631@dcn.davis.ca.us>
 <CAFDcVCRTbRBfC9+W4z474RwpPpdWS7C6epKMkR+eqK-JjGe82A@mail.gmail.com>,
 <~B5fc5512c0002.5fc5afb0000c.000f.mml.3907057639@gmail.com>
Message-ID: <AM0PR06MB4435268900AEC6A440E7C793CCF40@AM0PR06MB4435.eurprd06.prod.outlook.com>

Dear all,

Thanks a lot for your replies. These have been really helpful for solving the issue with the examples run time.

I am also becoming interested in applying a similar solution for package tests.

I currently run tests with RUnit. Looking at testthat, I have seen tests can be skipped with skip_on_cran,
which seems to determine if tests are run on CRAN through the value of environment variable "NOT_CRAN"

Can I safely assume that NOT_CRAN will be "false" on CRAN machines?

Thanks a lot in advance

Best wishes,

Rafa
________________________________
De: R-package-devel <r-package-devel-bounces at r-project.org> en nombre de Ben Bolker <bbolker at gmail.com>
Enviado: lunes, 30 de noviembre de 2020 20:59
Para: r-package-devel at r-project.org <r-package-devel at r-project.org>
Asunto: Re: [R-pkg-devel] Conditional timeout for httr request when running R CMD check


*******************
This email originates from outside Imperial. Do not click on links and attachments unless you recognise the sender.
If you trust the sender, add them to your safe senders list https://spam.ic.ac.uk/SpamConsole/Senders.aspx to disable email stamping for this address.
*******************
   as pointed out to me the last time I was struggling with similar
issues, if (interactive()) { ... } is another potential solution

On 11/30/20 2:48 PM, Henrik Bengtsson wrote:
> The problem here was regarding user facing example():s, not package tests.
>
> In order to keep a neat example for the user to play with, I'd
> probably wrap the example code in a \donttest{} statement.  Though, I
> don't remember if CRAN tests with R CMD check --run-dontest, or not.
> There's also \dontrun{}.
>
> My $.02
>
> /Henrik
>
> On Mon, Nov 30, 2020 at 11:09 AM Jeff Newmiller
> <jdnewmil at dcn.davis.ca.us> wrote:
>> Don't test against a live website for most of your testing... use recorded or simulated input. If your package functional interface doesn't allow for that, then re-factor it so it does.
>>
>> For those tests that actually have to interact with the live website, only run them if you know you are not on CRAN. The testthat package has support for this if you don't want to roll your own.
>>
>> On November 30, 2020 10:45:01 AM PST, "Ayala Hernandez, Rafael" <r.ayala14 at imperial.ac.uk> wrote:
>>> Dear all,
>>>
>>> My package openSkies includes a set of functions to retrieve
>>> information from the OpenSky API.
>>>
>>> The examples for these functions can, on rare occassions, take
>>> anomously longer times to complete than usually because of issues on
>>> the API side.
>>>
>>> I have already included a timeout parameter to prevent endless attempts
>>> to retrieve the result when, for example, the API is down for
>>> maintenance.
>>>
>>> I have recently been asked by CRAN to reduce the execution time of each
>>> example to below 5 s. In order to do this, I can set the timeout
>>> parameter to something below 5s, and return NULL and a message
>>> indicating the resource is not currently available. However, I think
>>> this might not be the best option for examples that demonstrate
>>> important functionalities to users.
>>>
>>> Therefore, I was wondering if there is anyway to set up the timeout
>>> parameter to a different value than usual based on the condition that
>>> examples are being run as part of R CMD check?
>>>
>>> Thanks a lot in advance
>>>
>>> Best wishes,
>>>
>>> Rafa
>>>
>>>        [[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> --
>> Sent from my phone. Please excuse my brevity.
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

______________________________________________
R-package-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel

	[[alternative HTML version deleted]]


From konr@d@rudo|ph @end|ng |rom gm@||@com  Wed Dec  2 18:57:14 2020
From: konr@d@rudo|ph @end|ng |rom gm@||@com (Konrad Rudolph)
Date: Wed, 2 Dec 2020 17:57:14 +0000
Subject: [R-pkg-devel] How to avoid R CMD check warning for documentation of
 non-package functions?
Message-ID: <CAM2gKPa-VmoXvi1mGct5y1Y5Donk9-B4M+t8RHUGPawaOFqRsQ@mail.gmail.com>

My package provides infrastructure support for callback functions
defined in special environments in user code. They are conceptually
similar (in fact, almost identical) to the `.onLoad` etc. ?hooks for
namespace events? in base R [1]. Now I?m adding documentation for
these functions, via the following Rd code (or the equivalent roxygen2
code annotating a `NULL` value):

```
\name{topicname}
\alias{topicname}
\alias{onload}
\title{Hooks for environment events}
\usage{
onload(env)
}
\arguments{
\item{env}{the environment}
}
\description{
Short description
}
```

Unfortunately, this causes an `R CMD check` warning:

>  Functions or methods with usage in documentation object 'topicname' but not in code:
>     ?onload?

Right: this function does not exist in my package, and it *should not*
exist in the package. Yet I do need to document it for users. What is
the recommended way for doing so? In fact, from my reading of the R
source, the base R documentation of ?ns-hooks? doesn?t seem to do
anything special, and would presumably also cause this warning.

I?m open to doing this differently, but I?d strongly prefer if these
functions had their own help topic, with their own ?usage? section. I
don?t just want to add them as a custom section to the package
documentation topic if this is at all avoidable.

[1]: https://stat.ethz.ch/R-manual/R-devel/library/base/html/ns-hooks.html

PS: A note on API design, I considered doing this differently: rather
than define hooks via ?special names?, users would define them by
passing callbacks to a call to a package function; e.g.
`mypkg::define_onload(function (env) { ? })`. This would be
conceptually similar to R?s `setHook` [2]. However, from the user?s
point of view there?s no advantage to doing it this way, and it?s more
verbose. Defining callbacks via special names has ample precedence,
both in R and in other languages. And I don?t think `R CMD check`
warnings should dictate API design in this manner.

[2] https://stat.ethz.ch/R-manual/R-devel/library/base/html/userhooks.html

-- 
Konrad Rudolph // @klmr


From murdoch@dunc@n @end|ng |rom gm@||@com  Wed Dec  2 20:44:44 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Wed, 2 Dec 2020 14:44:44 -0500
Subject: [R-pkg-devel] 
 How to avoid R CMD check warning for documentation of
 non-package functions?
In-Reply-To: <CAM2gKPa-VmoXvi1mGct5y1Y5Donk9-B4M+t8RHUGPawaOFqRsQ@mail.gmail.com>
References: <CAM2gKPa-VmoXvi1mGct5y1Y5Donk9-B4M+t8RHUGPawaOFqRsQ@mail.gmail.com>
Message-ID: <fdfccb3b-0a3f-61a4-2ae5-bcce56e915b1@gmail.com>

On 02/12/2020 12:57 p.m., Konrad Rudolph wrote:
> My package provides infrastructure support for callback functions
> defined in special environments in user code. They are conceptually
> similar (in fact, almost identical) to the `.onLoad` etc. ?hooks for
> namespace events? in base R [1]. Now I?m adding documentation for
> these functions, via the following Rd code (or the equivalent roxygen2
> code annotating a `NULL` value):
> 
> ```
> \name{topicname}
> \alias{topicname}
> \alias{onload}
> \title{Hooks for environment events}
> \usage{
> onload(env)
> }
> \arguments{
> \item{env}{the environment}
> }
> \description{
> Short description
> }
> ```
> 
> Unfortunately, this causes an `R CMD check` warning:
> 
>>   Functions or methods with usage in documentation object 'topicname' but not in code:
>>      ?onload?
> 
> Right: this function does not exist in my package, and it *should not*
> exist in the package. Yet I do need to document it for users. What is
> the recommended way for doing so? In fact, from my reading of the R
> source, the base R documentation of ?ns-hooks? doesn?t seem to do
> anything special, and would presumably also cause this warning.
> 
> I?m open to doing this differently, but I?d strongly prefer if these
> functions had their own help topic, with their own ?usage? section. I
> don?t just want to add them as a custom section to the package
> documentation topic if this is at all avoidable.

I haven't tried this, but I believe if you define functions with the 
right name and header in your package but don't export them the warning 
will go away.

If that doesn't work (or defining those causes other issues), a more 
involved workaround would be to change the \docType{} declaration for 
the help page.  \docType{package} is the most free-form, but you might 
get warned if you have two of them.  \docType{data} might be flexible 
enough.  If you do this, you won't use \usage{} or \arguments{}, you'll 
put together your own sections using \section{Usage}{ ... } and 
\section{Arguments}{ ... } and try to get the formatting right.

Duncan Murdoch

> 
> [1]: https://stat.ethz.ch/R-manual/R-devel/library/base/html/ns-hooks.html
> 
> PS: A note on API design, I considered doing this differently: rather
> than define hooks via ?special names?, users would define them by
> passing callbacks to a call to a package function; e.g.
> `mypkg::define_onload(function (env) { ? })`. This would be
> conceptually similar to R?s `setHook` [2]. However, from the user?s
> point of view there?s no advantage to doing it this way, and it?s more
> verbose. Defining callbacks via special names has ample precedence,
> both in R and in other languages. And I don?t think `R CMD check`
> warnings should dictate API design in this manner.
> 
> [2] https://stat.ethz.ch/R-manual/R-devel/library/base/html/userhooks.html
>


From konr@d@rudo|ph @end|ng |rom gm@||@com  Thu Dec  3 11:48:23 2020
From: konr@d@rudo|ph @end|ng |rom gm@||@com (Konrad Rudolph)
Date: Thu, 3 Dec 2020 10:48:23 +0000
Subject: [R-pkg-devel] 
 How to avoid R CMD check warning for documentation of
 non-package functions?
In-Reply-To: <fdfccb3b-0a3f-61a4-2ae5-bcce56e915b1@gmail.com>
References: <CAM2gKPa-VmoXvi1mGct5y1Y5Donk9-B4M+t8RHUGPawaOFqRsQ@mail.gmail.com>
 <fdfccb3b-0a3f-61a4-2ae5-bcce56e915b1@gmail.com>
Message-ID: <CAM2gKPbMjRoYv_1yhX_PhkdJ67wm0Jk+-LD-1Fbe0nZ7bZRqyg@mail.gmail.com>

On Wed, Dec 2, 2020 at 7:44 PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> I haven't tried this, but I believe if you define functions with the
> right name and header in your package but don't export them the warning
> will go away.

Thanks, works like a charm.

> If that doesn't work (or defining those causes other issues), a more
> involved workaround would be to change the \docType{} declaration for
> the help page.  \docType{package} is the most free-form, but you might
> get warned if you have two of them.  \docType{data} might be flexible
> enough.  If you do this, you won't use \usage{} or \arguments{}, you'll
> put together your own sections using \section{Usage}{ ... } and
> \section{Arguments}{ ... } and try to get the formatting right.

I?ll keep this in mind! It might come handy.

-- 
Konrad Rudolph // @klmr


From |v@|rcu @end|ng |rom m@||box@org  Thu Dec  3 20:27:23 2020
From: |v@|rcu @end|ng |rom m@||box@org (Andreas Dominik Cullmann)
Date: Thu, 3 Dec 2020 20:27:23 +0100
Subject: [R-pkg-devel] Failing vignette engine for package rasciidoc on
 solaris
In-Reply-To: <77a7b874-2b8a-861b-8e9a-4226921ade36@gmail.com>
References: <20201123120749.GA18150@h6.fooboz>
 <77a7b874-2b8a-861b-8e9a-4226921ade36@gmail.com>
Message-ID: <20201203192450.GD4361@h6.fooboz>

Dear Duncan,
thank you very much, saved my day!
Best,
Dominik
On Mon, Nov 23, 2020 08:17:17, Duncan Murdoch wrote:
> On 23/11/2020 7:07 a.m., Andreas Dominik Cullmann via R-package-devel wrote:
> > Dear List,
> > one of my packages, rasciidoc (a simple wrapper to 'knitr' and 'asciidoc'),
> > includes a minimal vigentte engine.
> > When submitting the package with a vignette using that engine, the vignette is
> > re-built on all platforms except for r-patched-solaris-x86:
> > https://cran.r-project.org/web/checks/check_results_rasciidoc.html
> > https://www.r-project.org/nosvn/R.check/r-patched-solaris-x86/rasciidoc-00check.html
> > 
> > Maybe rasciidoc's vignette engine is somewhat superfluous, but since it works
> > for all platforms except solaris, I kind of would like to use it.
> > 
> > I cannot reproduce the error using rhub:
> >    ## Test environments
> >    - R-hub solaris-x86-patched-ods (r-release)
> >    ## R CMD check results
> >    ? On solaris-x86-patched-ods (r-release)
> >      checking CRAN incoming feasibility ... WARNING
> >      Maintainer: ?Andreas Dominik Cullmann <fvafrcu at mailbox.org>?
> >      Insufficient package version (submitted: 2.2.1, existing: 2.2.1)
> >      Days since last update: 5
> >    ? On solaris-x86-patched-ods (r-release)
> >      checking top-level files ... NOTE
> >      Files ?README.md? or ?NEWS.md? cannot be checked without ?pandoc? being installed.
> >    ? On solaris-x86-patched-ods (r-release)
> >      checking examples ... NOTE
> >      Examples with CPU (user + system) or elapsed time > 5s
> >                 user system elapsed
> >      rasciidoc 2.724  0.352   48.75
> >    0 errors ? | 1 warning ? | 2 notes ?
> > 
> > 
> > And I happen to have no solaris box at hand for testing.
> > Does anybody have any suggestion on how I could tackle this?
> 
> The error message says:   "Can't find program `source-highlight`. Please
> install first (http://www.gnu.org/software/src-highlite/)."  You have listed
> this in SystemRequirements as "recommended", but even if you had listed it
> as required, your build shouldn't fail if it is not found:  it should test
> for that program, and continue on if it is not there.  For example, it could
> output a vignette containing nothing except the warning message that
> source-highlight is needed to build the vignette. This is described in
> Section 1.6, "Writing portable packages", of Writing R Extensions.
> 
> Duncan Murdoch

-- 
https://www.globalplanetauthority.com/


From neon|r@ @end|ng |rom gm@||@com  Tue Dec  8 10:24:48 2020
From: neon|r@ @end|ng |rom gm@||@com (neonira Arinoem)
Date: Tue, 8 Dec 2020 10:24:48 +0100
Subject: [R-pkg-devel] ggplot2 axis title with various size fonts
Message-ID: <CAN--Dz38zG7jh52eE2FsUEZLM74JVM2GHAMg5VSRu9+HQFJBDw@mail.gmail.com>

Is it possible to compose a string to be used as axis title in ggplot2,
with the main part being drawn using one given font and font size, and the
last part being drawn with another font and font size. See below for an
example

*my axis title **(units)*

Currently struggling to achieve this.
Thanks in advance for suggestions.

	[[alternative HTML version deleted]]


From ||@t@ @end|ng |rom dewey@myzen@co@uk  Tue Dec  8 13:28:27 2020
From: ||@t@ @end|ng |rom dewey@myzen@co@uk (Michael Dewey)
Date: Tue, 8 Dec 2020 12:28:27 +0000
Subject: [R-pkg-devel] ggplot2 axis title with various size fonts
In-Reply-To: <CAN--Dz38zG7jh52eE2FsUEZLM74JVM2GHAMg5VSRu9+HQFJBDw@mail.gmail.com>
References: <CAN--Dz38zG7jh52eE2FsUEZLM74JVM2GHAMg5VSRu9+HQFJBDw@mail.gmail.com>
Message-ID: <ce127506-04a5-4ffc-881b-ea16982e5c5c@dewey.myzen.co.uk>

I think you have found your way onto the wrong list as R-help seems more 
appropriate.

When you do re-post please set your mailer to work in plain text not HTML.

Michael

On 08/12/2020 09:24, neonira Arinoem wrote:
> Is it possible to compose a string to be used as axis title in ggplot2,
> with the main part being drawn using one given font and font size, and the
> last part being drawn with another font and font size. See below for an
> example
> 
> *my axis title **(units)*
> 
> Currently struggling to achieve this.
> Thanks in advance for suggestions.
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 

-- 
Michael
http://www.dewey.myzen.co.uk/home.html


From c@@rd|@g@bor @end|ng |rom gm@||@com  Tue Dec  8 13:33:52 2020
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Tue, 8 Dec 2020 12:33:52 +0000
Subject: [R-pkg-devel] ggplot2 axis title with various size fonts
In-Reply-To: <CAN--Dz38zG7jh52eE2FsUEZLM74JVM2GHAMg5VSRu9+HQFJBDw@mail.gmail.com>
References: <CAN--Dz38zG7jh52eE2FsUEZLM74JVM2GHAMg5VSRu9+HQFJBDw@mail.gmail.com>
Message-ID: <CABtg=K=2Upg5bqe_1TJSr_N6BMgp0UakVqqxPMP_bnUP=QAriw@mail.gmail.com>

The best place for ggplot2 related questions is https://community.rstudio.com/

Make sure you use the ggplot2 tag for your question.

Gabor

On Tue, Dec 8, 2020 at 9:25 AM neonira Arinoem <neonira at gmail.com> wrote:
>
> Is it possible to compose a string to be used as axis title in ggplot2,
> with the main part being drawn using one given font and font size, and the
> last part being drawn with another font and font size. See below for an
> example
>
> *my axis title **(units)*
>
> Currently struggling to achieve this.
> Thanks in advance for suggestions.
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From neon|r@ @end|ng |rom gm@||@com  Tue Dec  8 21:07:42 2020
From: neon|r@ @end|ng |rom gm@||@com (neonira Arinoem)
Date: Tue, 8 Dec 2020 21:07:42 +0100
Subject: [R-pkg-devel] ggplot2 axis title with various size fonts
In-Reply-To: <CABtg=K=2Upg5bqe_1TJSr_N6BMgp0UakVqqxPMP_bnUP=QAriw@mail.gmail.com>
References: <CAN--Dz38zG7jh52eE2FsUEZLM74JVM2GHAMg5VSRu9+HQFJBDw@mail.gmail.com>
 <CABtg=K=2Upg5bqe_1TJSr_N6BMgp0UakVqqxPMP_bnUP=QAriw@mail.gmail.com>
Message-ID: <CAN--Dz1RCJ4iCg0jb1dCnrOofhZLhFc_AXkPaQYZi5yw=pC9OQ@mail.gmail.com>

OK. I'll post it to rstudio.

Thanks i deed for suggestions

Le mar. 8 d?c. 2020 ? 13:34, G?bor Cs?rdi <csardi.gabor at gmail.com> a ?crit :

> The best place for ggplot2 related questions is
> https://community.rstudio.com/
>
> Make sure you use the ggplot2 tag for your question.
>
> Gabor
>
> On Tue, Dec 8, 2020 at 9:25 AM neonira Arinoem <neonira at gmail.com> wrote:
> >
> > Is it possible to compose a string to be used as axis title in ggplot2,
> > with the main part being drawn using one given font and font size, and
> the
> > last part being drawn with another font and font size. See below for an
> > example
> >
> > *my axis title **(units)*
> >
> > Currently struggling to achieve this.
> > Thanks in advance for suggestions.
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From t|m@t@y|or @end|ng |rom h|ddene|eph@nt@@co@uk  Thu Dec 10 10:39:41 2020
From: t|m@t@y|or @end|ng |rom h|ddene|eph@nt@@co@uk (Tim Taylor)
Date: Thu, 10 Dec 2020 09:39:41 +0000
Subject: [R-pkg-devel] Test errors occurring on win-builder only
Message-ID: <CAFLvaCmj4dfzeUDPVA-gp5wTLJ+o7GvbZuAiqNM_vggJoBZXbQ@mail.gmail.com>

Morning all

What's the best way to narrow down test errors that are occurring on
win-builder only?  I've tried checking the package on local installs
of r-devel (both 32 bit and 64bit), and on the Windows installs on
rhub and through GitHub actions.  On all of these systems the checks
pass without issue.

Is there anyway to match the configuration of the CRAN / win-builder machine?


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Thu Dec 10 11:02:11 2020
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Thu, 10 Dec 2020 11:02:11 +0100
Subject: [R-pkg-devel] Test errors occurring on win-builder only
In-Reply-To: <CAFLvaCmj4dfzeUDPVA-gp5wTLJ+o7GvbZuAiqNM_vggJoBZXbQ@mail.gmail.com>
References: <CAFLvaCmj4dfzeUDPVA-gp5wTLJ+o7GvbZuAiqNM_vggJoBZXbQ@mail.gmail.com>
Message-ID: <8e831fcf-0978-43cb-c54c-46e1e3c55c5a@statistik.tu-dortmund.de>

WHich package? Where are the logs?

Best,
Uwe Ligges


On 10.12.2020 10:39, Tim Taylor wrote:
> Morning all
> 
> What's the best way to narrow down test errors that are occurring on
> win-builder only?  I've tried checking the package on local installs
> of r-devel (both 32 bit and 64bit), and on the Windows installs on
> rhub and through GitHub actions.  On all of these systems the checks
> pass without issue.
> 
> Is there anyway to match the configuration of the CRAN / win-builder machine?
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From t|m@t@y|or @end|ng |rom h|ddene|eph@nt@@co@uk  Thu Dec 10 11:04:54 2020
From: t|m@t@y|or @end|ng |rom h|ddene|eph@nt@@co@uk (Tim Taylor)
Date: Thu, 10 Dec 2020 10:04:54 +0000
Subject: [R-pkg-devel] Test errors occurring on win-builder only
In-Reply-To: <8e831fcf-0978-43cb-c54c-46e1e3c55c5a@statistik.tu-dortmund.de>
References: <CAFLvaCmj4dfzeUDPVA-gp5wTLJ+o7GvbZuAiqNM_vggJoBZXbQ@mail.gmail.com>
 <8e831fcf-0978-43cb-c54c-46e1e3c55c5a@statistik.tu-dortmund.de>
Message-ID: <CAFLvaC=OA3SdsTaL+ot-8QiO5tDkF+3Q6HgeBAC=_P0jGs41Jg@mail.gmail.com>

Hi Uwe,

here's the response from win-builder:
*************************************************************************************************************
Your package reportfactory_0.0.7.tar.gz has been built (if working)
and checked for Windows.
Please check the log files and (if working) the binary package at:
https://win-builder.r-project.org/21kwCPDaCbxn
The files will be removed after roughly 72 hours.
Installation time in seconds: 6
Check time in seconds: 110
Status: 2 ERRORs, 1 NOTE
R Under development (unstable) (2020-12-09 r79601)
**************************************************************************************************************

Cheers

On Thu, 10 Dec 2020 at 10:02, Uwe Ligges
<ligges at statistik.tu-dortmund.de> wrote:
>
> WHich package? Where are the logs?
>
> Best,
> Uwe Ligges
>
>
> On 10.12.2020 10:39, Tim Taylor wrote:
> > Morning all
> >
> > What's the best way to narrow down test errors that are occurring on
> > win-builder only?  I've tried checking the package on local installs
> > of r-devel (both 32 bit and 64bit), and on the Windows installs on
> > rhub and through GitHub actions.  On all of these systems the checks
> > pass without issue.
> >
> > Is there anyway to match the configuration of the CRAN / win-builder machine?
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >


From t|@goo||voto @end|ng |rom gm@||@com  Fri Dec 11 18:32:14 2020
From: t|@goo||voto @end|ng |rom gm@||@com (Tiago Olivoto)
Date: Fri, 11 Dec 2020 14:32:14 -0300
Subject: [R-pkg-devel] Assigning a variable to global environment
Message-ID: <CAMyz+tWQS=uOHL2miX=jj1JO-kDmWD6KR8AQkaZ-WcEVDK19ug@mail.gmail.com>

Hi everyone,
This can be a very simple question, but I really have the following doubt.

CRAN Policies says that 'Packages should not modify the global environment
(user?s workspace)'. So, may I or may I not create a function that will
call internally the following code? (a simple example)

assign("name", 1, envir = .GlobalEnv)

Cheers
Tiago

	[[alternative HTML version deleted]]


From md @end|ng |rom @und@ku@dk  Fri Dec 11 19:20:41 2020
From: md @end|ng |rom @und@ku@dk (Matt Denwood)
Date: Fri, 11 Dec 2020 18:20:41 +0000
Subject: [R-pkg-devel] Assigning a variable to global environment
In-Reply-To: <CAMyz+tWQS=uOHL2miX=jj1JO-kDmWD6KR8AQkaZ-WcEVDK19ug@mail.gmail.com>
References: <CAMyz+tWQS=uOHL2miX=jj1JO-kDmWD6KR8AQkaZ-WcEVDK19ug@mail.gmail.com>
Message-ID: <650CF57B-4F6E-4DD1-A348-C4DB74DEBD1D@sund.ku.dk>


> On 11 Dec 2020, at 18:32, Tiago Olivoto <tiagoolivoto at gmail.com> wrote:
> 
> Hi everyone,
> This can be a very simple question, but I really have the following doubt.
> 
> CRAN Policies says that 'Packages should not modify the global environment
> (user?s workspace)'. So, may I or may I not create a function that will
> call internally the following code? (a simple example)
> 
> assign("name", 1, envir = .GlobalEnv)

You may not - and for good reason, as the user may have an existing variable called ?name? that will be destroyed by such an action.  If you run "R CMD check ?as-cran" on a package containing this code you will get a warning (or maybe a note, I can?t remember), and the package would most likely be refused if you tried to submit it to CRAN.

Cheers,

Matt


> 
> Cheers
> Tiago
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://eur02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-package-devel&amp;data=04%7C01%7Cmd%40sund.ku.dk%7C42392098d3324de389b008d89dfad39d%7Ca3927f91cda14696af898c9f1ceffa91%7C0%7C0%7C637433048371869663%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C2000&amp;sdata=NFTbsJDlZNQWajN%2F%2BeftuclrkJSGtTnM9kEtobn9VLs%3D&amp;reserved=0


From t|@goo||voto @end|ng |rom gm@||@com  Fri Dec 11 19:52:33 2020
From: t|@goo||voto @end|ng |rom gm@||@com (Tiago Olivoto)
Date: Fri, 11 Dec 2020 15:52:33 -0300
Subject: [R-pkg-devel] Assigning a variable to global environment
In-Reply-To: <650CF57B-4F6E-4DD1-A348-C4DB74DEBD1D@sund.ku.dk>
References: <CAMyz+tWQS=uOHL2miX=jj1JO-kDmWD6KR8AQkaZ-WcEVDK19ug@mail.gmail.com>
 <650CF57B-4F6E-4DD1-A348-C4DB74DEBD1D@sund.ku.dk>
Message-ID: <CAMyz+tXBb29WSh-1TQVLu=+a9g9-ToarCf91-wPQmtT_rgG0KA@mail.gmail.com>

Thank Matt for your response.
Would be an acceptable solution to check if the variable exists first and
creating the new variable with a suffix? Please, see the following example

    var_name <-  "name"
    var_name <- ifelse(exists(var_name),
                         paste(var_name, "_vct", sep = ""),
                         var_name)
and then

assign(var_name, 1, envir = .GlobalEnv)

Cheers,
Tiago

Em sex., 11 de dez. de 2020 ?s 15:20, Matt Denwood <md at sund.ku.dk> escreveu:

>
> > On 11 Dec 2020, at 18:32, Tiago Olivoto <tiagoolivoto at gmail.com> wrote:
> >
> > Hi everyone,
> > This can be a very simple question, but I really have the following
> doubt.
> >
> > CRAN Policies says that 'Packages should not modify the global
> environment
> > (user?s workspace)'. So, may I or may I not create a function that will
> > call internally the following code? (a simple example)
> >
> > assign("name", 1, envir = .GlobalEnv)
>
> You may not - and for good reason, as the user may have an existing
> variable called ?name? that will be destroyed by such an action.  If you
> run "R CMD check ?as-cran" on a package containing this code you will get a
> warning (or maybe a note, I can?t remember), and the package would most
> likely be refused if you tried to submit it to CRAN.
>
> Cheers,
>
> Matt
>
>
> >
> > Cheers
> > Tiago
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> >
> https://eur02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-package-devel&amp;data=04%7C01%7Cmd%40sund.ku.dk%7C42392098d3324de389b008d89dfad39d%7Ca3927f91cda14696af898c9f1ceffa91%7C0%7C0%7C637433048371869663%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C2000&amp;sdata=NFTbsJDlZNQWajN%2F%2BeftuclrkJSGtTnM9kEtobn9VLs%3D&amp;reserved=0
>
>

	[[alternative HTML version deleted]]


From bbo|ker @end|ng |rom gm@||@com  Fri Dec 11 19:57:09 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Fri, 11 Dec 2020 13:57:09 -0500
Subject: [R-pkg-devel] Assigning a variable to global environment
In-Reply-To: <CAMyz+tXBb29WSh-1TQVLu=+a9g9-ToarCf91-wPQmtT_rgG0KA@mail.gmail.com>
References: <CAMyz+tWQS=uOHL2miX=jj1JO-kDmWD6KR8AQkaZ-WcEVDK19ug@mail.gmail.com>
 <650CF57B-4F6E-4DD1-A348-C4DB74DEBD1D@sund.ku.dk>
 <CAMyz+tXBb29WSh-1TQVLu=+a9g9-ToarCf91-wPQmtT_rgG0KA@mail.gmail.com>
Message-ID: <dd8ad4cb-5b5c-9d32-8aab-5dcb480881ab@gmail.com>

   I think this solution will *not* be acceptable to CRAN. (The policy 
doesn't say "don't modify the global workspace unless you're careful", 
it says "don't modify the global workspace".)  You can ask for an 
exception, but your chances of success are very low.

    It would be best to find a way to solve your problem without 
assigning to the global workspace.  Can you assign to an environment 
that is contained within your package, which all of the functions in 
your package will also have access to?

   cheers
     Ben Bolker

On 12/11/20 1:52 PM, Tiago Olivoto wrote:
> Thank Matt for your response.
> Would be an acceptable solution to check if the variable exists first and
> creating the new variable with a suffix? Please, see the following example
> 
>      var_name <-  "name"
>      var_name <- ifelse(exists(var_name),
>                           paste(var_name, "_vct", sep = ""),
>                           var_name)
> and then
> 
> assign(var_name, 1, envir = .GlobalEnv)
> 
> Cheers,
> Tiago
> 
> Em sex., 11 de dez. de 2020 ?s 15:20, Matt Denwood <md at sund.ku.dk> escreveu:
> 
>>
>>> On 11 Dec 2020, at 18:32, Tiago Olivoto <tiagoolivoto at gmail.com> wrote:
>>>
>>> Hi everyone,
>>> This can be a very simple question, but I really have the following
>> doubt.
>>>
>>> CRAN Policies says that 'Packages should not modify the global
>> environment
>>> (user?s workspace)'. So, may I or may I not create a function that will
>>> call internally the following code? (a simple example)
>>>
>>> assign("name", 1, envir = .GlobalEnv)
>>
>> You may not - and for good reason, as the user may have an existing
>> variable called ?name? that will be destroyed by such an action.  If you
>> run "R CMD check ?as-cran" on a package containing this code you will get a
>> warning (or maybe a note, I can?t remember), and the package would most
>> likely be refused if you tried to submit it to CRAN.
>>
>> Cheers,
>>
>> Matt
>>
>>
>>>
>>> Cheers
>>> Tiago
>>>
>>>        [[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>>
>> https://eur02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-package-devel&amp;data=04%7C01%7Cmd%40sund.ku.dk%7C42392098d3324de389b008d89dfad39d%7Ca3927f91cda14696af898c9f1ceffa91%7C0%7C0%7C637433048371869663%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C2000&amp;sdata=NFTbsJDlZNQWajN%2F%2BeftuclrkJSGtTnM9kEtobn9VLs%3D&amp;reserved=0
>>
>>
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From t|@goo||voto @end|ng |rom gm@||@com  Fri Dec 11 20:12:26 2020
From: t|@goo||voto @end|ng |rom gm@||@com (Tiago Olivoto)
Date: Fri, 11 Dec 2020 16:12:26 -0300
Subject: [R-pkg-devel] Assigning a variable to global environment
In-Reply-To: <dd8ad4cb-5b5c-9d32-8aab-5dcb480881ab@gmail.com>
References: <CAMyz+tWQS=uOHL2miX=jj1JO-kDmWD6KR8AQkaZ-WcEVDK19ug@mail.gmail.com>
 <650CF57B-4F6E-4DD1-A348-C4DB74DEBD1D@sund.ku.dk>
 <CAMyz+tXBb29WSh-1TQVLu=+a9g9-ToarCf91-wPQmtT_rgG0KA@mail.gmail.com>
 <dd8ad4cb-5b5c-9d32-8aab-5dcb480881ab@gmail.com>
Message-ID: <CAMyz+tUAFCd_=0pceW6GD=iHx6ZZxw-_heJ5+xXKogX_=v8d5Q@mail.gmail.com>

Thanks, everyone,

Following Mark suggestion:

The problem I'm trying to solve is:
Users of my package metan (https://CRAN.R-project.org/package=metan),
sometimes need to extract 2-3 variables from a given data.frame and put
them as vectors in the global environment to use in other package's
functions.
Given that df has the columns, ENV, GEN, REP, I would need to run the
following codes
ENV <- df$ENV
GEN <- df$GEN
REP <- df$GEN
I'm looking for a more efficient way to do that and just finished the
following function

as_vector <- function(.data, ...){
  if(missing(...)){
    df <- select(.data, everything())
  } else{
    df <- select(.data, ...)
  }
  for(i in 1:ncol(df)){
    var_name <- names(df[i])
    var_name <- ifelse(exists(var_name, envir = .GlobalEnv),
                         paste(var_name, "_vct", sep = ""),
                         var_name)
    assign(var_name, as.vector(df[[i]]), envir = .GlobalEnv)
  }
}

Then, users could simply run as_vector(df) or  as_vector(df, GEN, ENV)
But I'm not sure if this fits with the CRAN policies.
Cherss,
Tiago

Em sex., 11 de dez. de 2020 ?s 16:03, Ben Bolker <bbolker at gmail.com>
escreveu:

>    I think this solution will *not* be acceptable to CRAN. (The policy
> doesn't say "don't modify the global workspace unless you're careful",
> it says "don't modify the global workspace".)  You can ask for an
> exception, but your chances of success are very low.
>
>     It would be best to find a way to solve your problem without
> assigning to the global workspace.  Can you assign to an environment
> that is contained within your package, which all of the functions in
> your package will also have access to?
>
>    cheers
>      Ben Bolker
>
> On 12/11/20 1:52 PM, Tiago Olivoto wrote:
> > Thank Matt for your response.
> > Would be an acceptable solution to check if the variable exists first and
> > creating the new variable with a suffix? Please, see the following
> example
> >
> >      var_name <-  "name"
> >      var_name <- ifelse(exists(var_name),
> >                           paste(var_name, "_vct", sep = ""),
> >                           var_name)
> > and then
> >
> > assign(var_name, 1, envir = .GlobalEnv)
> >
> > Cheers,
> > Tiago
> >
> > Em sex., 11 de dez. de 2020 ?s 15:20, Matt Denwood <md at sund.ku.dk>
> escreveu:
> >
> >>
> >>> On 11 Dec 2020, at 18:32, Tiago Olivoto <tiagoolivoto at gmail.com>
> wrote:
> >>>
> >>> Hi everyone,
> >>> This can be a very simple question, but I really have the following
> >> doubt.
> >>>
> >>> CRAN Policies says that 'Packages should not modify the global
> >> environment
> >>> (user?s workspace)'. So, may I or may I not create a function that will
> >>> call internally the following code? (a simple example)
> >>>
> >>> assign("name", 1, envir = .GlobalEnv)
> >>
> >> You may not - and for good reason, as the user may have an existing
> >> variable called ?name? that will be destroyed by such an action.  If you
> >> run "R CMD check ?as-cran" on a package containing this code you will
> get a
> >> warning (or maybe a note, I can?t remember), and the package would most
> >> likely be refused if you tried to submit it to CRAN.
> >>
> >> Cheers,
> >>
> >> Matt
> >>
> >>
> >>>
> >>> Cheers
> >>> Tiago
> >>>
> >>>        [[alternative HTML version deleted]]
> >>>
> >>> ______________________________________________
> >>> R-package-devel at r-project.org mailing list
> >>>
> >>
> https://eur02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-package-devel&amp;data=04%7C01%7Cmd%40sund.ku.dk%7C42392098d3324de389b008d89dfad39d%7Ca3927f91cda14696af898c9f1ceffa91%7C0%7C0%7C637433048371869663%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C2000&amp;sdata=NFTbsJDlZNQWajN%2F%2BeftuclrkJSGtTnM9kEtobn9VLs%3D&amp;reserved=0
> >>
> >>
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From m@rk@rom@n@m|||er @end|ng |rom gm@||@com  Fri Dec 11 19:56:00 2020
From: m@rk@rom@n@m|||er @end|ng |rom gm@||@com (Mark Miller)
Date: Fri, 11 Dec 2020 10:56:00 -0800
Subject: [R-pkg-devel] Assigning a variable to global environment
In-Reply-To: <CAMyz+tXBb29WSh-1TQVLu=+a9g9-ToarCf91-wPQmtT_rgG0KA@mail.gmail.com>
References: <CAMyz+tWQS=uOHL2miX=jj1JO-kDmWD6KR8AQkaZ-WcEVDK19ug@mail.gmail.com>
 <650CF57B-4F6E-4DD1-A348-C4DB74DEBD1D@sund.ku.dk>
 <CAMyz+tXBb29WSh-1TQVLu=+a9g9-ToarCf91-wPQmtT_rgG0KA@mail.gmail.com>
Message-ID: <CAAUVYJjzJK9YMvte1J=-JZOcZ0Af2tah+huGc7g-u2qNbdeEdw@mail.gmail.com>

I think it would be helpful to describe more deeply what you're trying to
do by this. There's a fair chance there's a better way to do what you're
trying to do.

Mark

On Fri, Dec 11, 2020 at 10:53 AM Tiago Olivoto <tiagoolivoto at gmail.com>
wrote:

> Thank Matt for your response.
> Would be an acceptable solution to check if the variable exists first and
> creating the new variable with a suffix? Please, see the following example
>
>     var_name <-  "name"
>     var_name <- ifelse(exists(var_name),
>                          paste(var_name, "_vct", sep = ""),
>                          var_name)
> and then
>
> assign(var_name, 1, envir = .GlobalEnv)
>
> Cheers,
> Tiago
>
> Em sex., 11 de dez. de 2020 ?s 15:20, Matt Denwood <md at sund.ku.dk>
> escreveu:
>
> >
> > > On 11 Dec 2020, at 18:32, Tiago Olivoto <tiagoolivoto at gmail.com>
> wrote:
> > >
> > > Hi everyone,
> > > This can be a very simple question, but I really have the following
> > doubt.
> > >
> > > CRAN Policies says that 'Packages should not modify the global
> > environment
> > > (user?s workspace)'. So, may I or may I not create a function that will
> > > call internally the following code? (a simple example)
> > >
> > > assign("name", 1, envir = .GlobalEnv)
> >
> > You may not - and for good reason, as the user may have an existing
> > variable called ?name? that will be destroyed by such an action.  If you
> > run "R CMD check ?as-cran" on a package containing this code you will
> get a
> > warning (or maybe a note, I can?t remember), and the package would most
> > likely be refused if you tried to submit it to CRAN.
> >
> > Cheers,
> >
> > Matt
> >
> >
> > >
> > > Cheers
> > > Tiago
> > >
> > >       [[alternative HTML version deleted]]
> > >
> > > ______________________________________________
> > > R-package-devel at r-project.org mailing list
> > >
> >
> https://eur02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-package-devel&amp;data=04%7C01%7Cmd%40sund.ku.dk%7C42392098d3324de389b008d89dfad39d%7Ca3927f91cda14696af898c9f1ceffa91%7C0%7C0%7C637433048371869663%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C2000&amp;sdata=NFTbsJDlZNQWajN%2F%2BeftuclrkJSGtTnM9kEtobn9VLs%3D&amp;reserved=0
> >
> >
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From m@rk@rom@n@m|||er @end|ng |rom gm@||@com  Fri Dec 11 20:22:14 2020
From: m@rk@rom@n@m|||er @end|ng |rom gm@||@com (Mark Miller)
Date: Fri, 11 Dec 2020 11:22:14 -0800
Subject: [R-pkg-devel] Assigning a variable to global environment
In-Reply-To: <CAMyz+tUAFCd_=0pceW6GD=iHx6ZZxw-_heJ5+xXKogX_=v8d5Q@mail.gmail.com>
References: <CAMyz+tWQS=uOHL2miX=jj1JO-kDmWD6KR8AQkaZ-WcEVDK19ug@mail.gmail.com>
 <650CF57B-4F6E-4DD1-A348-C4DB74DEBD1D@sund.ku.dk>
 <CAMyz+tXBb29WSh-1TQVLu=+a9g9-ToarCf91-wPQmtT_rgG0KA@mail.gmail.com>
 <dd8ad4cb-5b5c-9d32-8aab-5dcb480881ab@gmail.com>
 <CAMyz+tUAFCd_=0pceW6GD=iHx6ZZxw-_heJ5+xXKogX_=v8d5Q@mail.gmail.com>
Message-ID: <CAAUVYJi+ud9=262yE+jcDDhGXdPwSFzBeEV2o0=bJfJ5AjNqZA@mail.gmail.com>

Correct me if I'm wrong, but this seems to be the purpose of the function
`with`?

https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/with

If that's the feature you're looking for, it would be the case of informing
your users to use that function when they want to refer to the columns
without the $.

On Fri, Dec 11, 2020 at 11:13 AM Tiago Olivoto <tiagoolivoto at gmail.com>
wrote:

> Thanks, everyone,
>
> Following Mark suggestion:
>
> The problem I'm trying to solve is:
> Users of my package metan (https://CRAN.R-project.org/package=metan),
> sometimes need to extract 2-3 variables from a given data.frame and put
> them as vectors in the global environment to use in other package's
> functions.
> Given that df has the columns, ENV, GEN, REP, I would need to run the
> following codes
> ENV <- df$ENV
> GEN <- df$GEN
> REP <- df$GEN
> I'm looking for a more efficient way to do that and just finished the
> following function
>
> as_vector <- function(.data, ...){
>   if(missing(...)){
>     df <- select(.data, everything())
>   } else{
>     df <- select(.data, ...)
>   }
>   for(i in 1:ncol(df)){
>     var_name <- names(df[i])
>     var_name <- ifelse(exists(var_name, envir = .GlobalEnv),
>                          paste(var_name, "_vct", sep = ""),
>                          var_name)
>     assign(var_name, as.vector(df[[i]]), envir = .GlobalEnv)
>   }
> }
>
> Then, users could simply run as_vector(df) or  as_vector(df, GEN, ENV)
> But I'm not sure if this fits with the CRAN policies.
> Cherss,
> Tiago
>
> Em sex., 11 de dez. de 2020 ?s 16:03, Ben Bolker <bbolker at gmail.com>
> escreveu:
>
> >    I think this solution will *not* be acceptable to CRAN. (The policy
> > doesn't say "don't modify the global workspace unless you're careful",
> > it says "don't modify the global workspace".)  You can ask for an
> > exception, but your chances of success are very low.
> >
> >     It would be best to find a way to solve your problem without
> > assigning to the global workspace.  Can you assign to an environment
> > that is contained within your package, which all of the functions in
> > your package will also have access to?
> >
> >    cheers
> >      Ben Bolker
> >
> > On 12/11/20 1:52 PM, Tiago Olivoto wrote:
> > > Thank Matt for your response.
> > > Would be an acceptable solution to check if the variable exists first
> and
> > > creating the new variable with a suffix? Please, see the following
> > example
> > >
> > >      var_name <-  "name"
> > >      var_name <- ifelse(exists(var_name),
> > >                           paste(var_name, "_vct", sep = ""),
> > >                           var_name)
> > > and then
> > >
> > > assign(var_name, 1, envir = .GlobalEnv)
> > >
> > > Cheers,
> > > Tiago
> > >
> > > Em sex., 11 de dez. de 2020 ?s 15:20, Matt Denwood <md at sund.ku.dk>
> > escreveu:
> > >
> > >>
> > >>> On 11 Dec 2020, at 18:32, Tiago Olivoto <tiagoolivoto at gmail.com>
> > wrote:
> > >>>
> > >>> Hi everyone,
> > >>> This can be a very simple question, but I really have the following
> > >> doubt.
> > >>>
> > >>> CRAN Policies says that 'Packages should not modify the global
> > >> environment
> > >>> (user?s workspace)'. So, may I or may I not create a function that
> will
> > >>> call internally the following code? (a simple example)
> > >>>
> > >>> assign("name", 1, envir = .GlobalEnv)
> > >>
> > >> You may not - and for good reason, as the user may have an existing
> > >> variable called ?name? that will be destroyed by such an action.  If
> you
> > >> run "R CMD check ?as-cran" on a package containing this code you will
> > get a
> > >> warning (or maybe a note, I can?t remember), and the package would
> most
> > >> likely be refused if you tried to submit it to CRAN.
> > >>
> > >> Cheers,
> > >>
> > >> Matt
> > >>
> > >>
> > >>>
> > >>> Cheers
> > >>> Tiago
> > >>>
> > >>>        [[alternative HTML version deleted]]
> > >>>
> > >>> ______________________________________________
> > >>> R-package-devel at r-project.org mailing list
> > >>>
> > >>
> >
> https://eur02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-package-devel&amp;data=04%7C01%7Cmd%40sund.ku.dk%7C42392098d3324de389b008d89dfad39d%7Ca3927f91cda14696af898c9f1ceffa91%7C0%7C0%7C637433048371869663%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C2000&amp;sdata=NFTbsJDlZNQWajN%2F%2BeftuclrkJSGtTnM9kEtobn9VLs%3D&amp;reserved=0
> > >>
> > >>
> > >
> > >       [[alternative HTML version deleted]]
> > >
> > > ______________________________________________
> > > R-package-devel at r-project.org mailing list
> > > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> > >
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From @v|gro@@ @end|ng |rom ver|zon@net  Fri Dec 11 21:02:40 2020
From: @v|gro@@ @end|ng |rom ver|zon@net (Avi Gross)
Date: Fri, 11 Dec 2020 15:02:40 -0500
Subject: [R-pkg-devel] Assigning a variable to global environment
In-Reply-To: <CAMyz+tUAFCd_=0pceW6GD=iHx6ZZxw-_heJ5+xXKogX_=v8d5Q@mail.gmail.com>
References: <CAMyz+tWQS=uOHL2miX=jj1JO-kDmWD6KR8AQkaZ-WcEVDK19ug@mail.gmail.com>
 <650CF57B-4F6E-4DD1-A348-C4DB74DEBD1D@sund.ku.dk>
 <CAMyz+tXBb29WSh-1TQVLu=+a9g9-ToarCf91-wPQmtT_rgG0KA@mail.gmail.com>
 <dd8ad4cb-5b5c-9d32-8aab-5dcb480881ab@gmail.com>
 <CAMyz+tUAFCd_=0pceW6GD=iHx6ZZxw-_heJ5+xXKogX_=v8d5Q@mail.gmail.com>
Message-ID: <090a01d6cff8$950637a0$bf12a6e0$@verizon.net>

Tiago, this may be a dumb question but what you are trying to do (below) sounds very similar to an existing function called attach() which many suggest has some dangers in use as you can overwrite or hide user variables or it can be eclipsed by later code:

https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/attach

Your version does try to use a secondary name if there is a clash but note if it is called repeatedly, it will make a tertiary and quaternary and beyond name by appending multiple copies of "_vct" one after another. I have seen people do this when making a unique tmp file.

And you do not show if these variable stuffed into an environment are eventually removed. Consider the variant described here:

https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/with

For clarity, you would use attach or with using a subset the columns of your data.frame that had just the variables you want.

A simple question is what the purpose of your change is. You want other functions run later to see these variables in their environment. Must they be global or can they be in an environment high enough in their search path. Some methods can make the change temporary and will unwind them. Some may keep the change permanent till the end of the session. 

I find that although it is tempting in base R to shorten use of names like $df$var_name to just var_name, use of a tidyverse package gets around it in a more limited way that does not so much impact what other functions see in the environment.

-----Original Message-----
From: R-package-devel <r-package-devel-bounces at r-project.org> On Behalf Of Tiago Olivoto
Sent: Friday, December 11, 2020 2:12 PM
To: Ben Bolker <bbolker at gmail.com>
Cc: R Package Devel <r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] Assigning a variable to global environment

Thanks, everyone,

Following Mark suggestion:

The problem I'm trying to solve is:
Users of my package metan (https://CRAN.R-project.org/package=metan),
sometimes need to extract 2-3 variables from a given data.frame and put them as vectors in the global environment to use in other package's functions.
Given that df has the columns, ENV, GEN, REP, I would need to run the following codes ENV <- df$ENV GEN <- df$GEN REP <- df$GEN I'm looking for a more efficient way to do that and just finished the following function

as_vector <- function(.data, ...){
  if(missing(...)){
    df <- select(.data, everything())
  } else{
    df <- select(.data, ...)
  }
  for(i in 1:ncol(df)){
    var_name <- names(df[i])
    var_name <- ifelse(exists(var_name, envir = .GlobalEnv),
                         paste(var_name, "_vct", sep = ""),
                         var_name)
    assign(var_name, as.vector(df[[i]]), envir = .GlobalEnv)
  }
}

Then, users could simply run as_vector(df) or  as_vector(df, GEN, ENV) But I'm not sure if this fits with the CRAN policies.
Cherss,
Tiago

Em sex., 11 de dez. de 2020 ?s 16:03, Ben Bolker <bbolker at gmail.com>
escreveu:

>    I think this solution will *not* be acceptable to CRAN. (The policy 
> doesn't say "don't modify the global workspace unless you're careful", 
> it says "don't modify the global workspace".)  You can ask for an 
> exception, but your chances of success are very low.
>
>     It would be best to find a way to solve your problem without 
> assigning to the global workspace.  Can you assign to an environment 
> that is contained within your package, which all of the functions in 
> your package will also have access to?
>
>    cheers
>      Ben Bolker
>
> On 12/11/20 1:52 PM, Tiago Olivoto wrote:
> > Thank Matt for your response.
> > Would be an acceptable solution to check if the variable exists 
> > first and creating the new variable with a suffix? Please, see the 
> > following
> example
> >
> >      var_name <-  "name"
> >      var_name <- ifelse(exists(var_name),
> >                           paste(var_name, "_vct", sep = ""),
> >                           var_name)
> > and then
> >
> > assign(var_name, 1, envir = .GlobalEnv)
> >
> > Cheers,
> > Tiago
> >
> > Em sex., 11 de dez. de 2020 ?s 15:20, Matt Denwood <md at sund.ku.dk>
> escreveu:
> >
> >>
> >>> On 11 Dec 2020, at 18:32, Tiago Olivoto <tiagoolivoto at gmail.com>
> wrote:
> >>>
> >>> Hi everyone,
> >>> This can be a very simple question, but I really have the 
> >>> following
> >> doubt.
> >>>
> >>> CRAN Policies says that 'Packages should not modify the global
> >> environment
> >>> (user?s workspace)'. So, may I or may I not create a function that 
> >>> will call internally the following code? (a simple example)
> >>>
> >>> assign("name", 1, envir = .GlobalEnv)
> >>
> >> You may not - and for good reason, as the user may have an existing 
> >> variable called ?name? that will be destroyed by such an action.  
> >> If you run "R CMD check ?as-cran" on a package containing this code 
> >> you will
> get a
> >> warning (or maybe a note, I can?t remember), and the package would 
> >> most likely be refused if you tried to submit it to CRAN.
> >>
> >> Cheers,
> >>
> >> Matt
> >>
> >>
> >>>
> >>> Cheers
> >>> Tiago
> >>>
> >>>        [[alternative HTML version deleted]]
> >>>
> >>> ______________________________________________
> >>> R-package-devel at r-project.org mailing list
> >>>
> >>
> https://eur02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat
> .ethz.ch%2Fmailman%2Flistinfo%2Fr-package-devel&amp;data=04%7C01%7Cmd%
> 40sund.ku.dk%7C42392098d3324de389b008d89dfad39d%7Ca3927f91cda14696af89
> 8c9f1ceffa91%7C0%7C0%7C637433048371869663%7CUnknown%7CTWFpbGZsb3d8eyJW
> IjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C2000&
> amp;sdata=NFTbsJDlZNQWajN%2F%2BeftuclrkJSGtTnM9kEtobn9VLs%3D&amp;reser
> ved=0
> >>
> >>
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list 
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
>
> ______________________________________________
> R-package-devel at r-project.org mailing list 
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]

______________________________________________
R-package-devel at r-project.org mailing list https://stat.ethz.ch/mailman/listinfo/r-package-devel


Scanned by McAfee and confirmed virus-free.	
Find out more here: https://bit.ly/2zCJMrO


From |r|end|y @end|ng |rom yorku@c@  Sat Dec 12 17:24:50 2020
From: |r|end|y @end|ng |rom yorku@c@ (Michael L Friendly)
Date: Sat, 12 Dec 2020 16:24:50 +0000
Subject: [R-pkg-devel] 
 CRAN packages suggesting other packages but not using
 them conditionally
Message-ID: <QB1PR01MB32663713573A71E5ECA661DEABC90@QB1PR01MB3266.CANPRD01.PROD.OUTLOOK.COM>

I got the email below concerning 3 of my packages but wonder if they are false alarms or
if not, how to locate & fix the problem.

    This concerns packages: ...

    Suggested packages should be used conditionally: see ?1.1.3.1 of 'Writing R Extensions'.  Some of these are hard to install on a platform without X11 such as M1 Macs: see the logs at https://www.stats.ox.ac.uk/pub/bdr/M1mac/.

    You can check all of the suggested packages by setting environment variable _R_CHECK_DEPENDS_ONLY_=true  -- see https://cran.r-project.org/doc/manuals/r-devel/R-ints.html#Tools .

Is this a false alarm?

In each case, the outfile contains:

    * checking package namespace information ... OK
    * checking package dependencies ... NOTE
    Package suggested but not available for checking: 'rgl'

indicating that rgl is not avaiable on the testing machine.  Then, when checking examples an error is triggered
when an example calls something that requires rgl.

    >
    > heplot3d(Adopted.mod, hypotheses=list("Reg"=c("AMED", "BMIQ")),
    +         col = c("red", "blue", "black", "gray"), wire=FALSE)
    Loading required namespace: rgl
    Failed with error:  'there is no package called 'rgl''
    Error in heplot3d.mlm(Adopted.mod, hypotheses = list(Reg = c("AMED", "BMIQ")),  :
      rgl package is required.
    Calls: heplot3d -> heplot3d.mlm
    Execution halted

Yet, heplot3d seems to contain the required way to refer to the suggested rgl package:

                if (!requireNamespace("rgl")) stop("rgl package is required.")

So, I'm mystified.  Can anyone help?



Michael Friendly     Email: friendly AT yorku DOT ca
Professor, Psychology Dept. & Former Chair, ASA Statistical Graphics Section
York University      Voice: 416 736-2100 x66249
4700 Keele Street    Web: http://www.datavis.ca | @datavisFriendly
Toronto, ONT  M3J 1P3 CANADA


	[[alternative HTML version deleted]]


From |ng||mo @end|ng |rom gm@||@com  Sat Dec 12 18:04:49 2020
From: |ng||mo @end|ng |rom gm@||@com (Filippo Monari)
Date: Sat, 12 Dec 2020 18:04:49 +0100
Subject: [R-pkg-devel] First time CRAN package submission
Message-ID: <CAG0gC1dV0U2sdhb43v7rST3FEcRAqLWhFnvqDAtdEv3gzQFw4w@mail.gmail.com>

Hi all,
I am trying to submit my first CRAN package, but I am having problems to
reproduce and correct all the issues that have been been reported by the
first failed attempt.
The package has quite a significant amount of Fortran 2003 code, and few
lines of C to link with R.
I hope some of you might give me some insight on how to correct them. I
will list the errors here below.

Relatively to the Windows test it has been reported to the following.

* installing *source* package 'modello' ...
> ** using staged installation
> ** libs *** arch - i386
> d:/Compiler/rtools40/mingw32/bin/gcc -I"D:/RCompile/recent/R/include"
> -DNDEBUG -I"d:/Compiler/gcc-4.9.3/local330/include" -pedantic -O2 -Wall
> -std=gnu99 -mfpmath=sse -msse2 -mstackrealign -c Rfuns.c -o Rfuns.o
> Rfuns.c: In function 'r__gamma':
> Rfuns.c:87:9: warning: implicit declaration of function 'gamma'
> [-Wimplicit-function-declaration]
> return(gamma(a[0]));
> ^~~~~
> Rfuns.c:87:9: warning: incompatible implicit declaration of built-in
> function 'gamma'
> d:/Compiler/rtools40/mingw32/bin/gcc -I"D:/RCompile/recent/R/include"
> -DNDEBUG -I"d:/Compiler/gcc-4.9.3/local330/include" -pedantic -O2 -Wall
> -std=gnu99 -mfpmath=sse -msse2 -mstackrealign -c Rinterfaces.c -o
> Rinterfaces.o
> d:/Compiler/rtools40/mingw32/bin/gfortran -fno-optimize-sibling-calls
> -fopenmp -L"D:/RCompile/recent/R/bin/i386" -lRlapack
> -L"D:/RCompile/recent/R/bin/i386" -lRblas -lgfortran -lm -lquadmath
> -pedantic -O2 -mfpmath=sse -msse2 -mstackrealign -c dataio.f95 -o dataio.o
> dataio.f95:2:6: use env
> 1
> Fatal Error: Can't open module file 'env.mod' for reading at (1): No such
> file or directory
> compilation terminated.
> make: *** [D:/RCompile/recent/R/etc/i386/Makeconf:263: dataio.o] Error 1
> ERROR: compilation failed for package 'modello'
> * removing 'd:/RCompile/CRANincoming/R-devel/lib/modello'

The warning "implicit declaration of function 'gamma'
[-Wimplicit-function-declaration]", refers to the fact that I am
calling the "gamma" function from Rmath.h in the following code block.

#include <R.h>
> #include <Rmath.h>
> ...
> //** Gamma function
> double r__gamma (double *a) {
> /*
> * DOC
> * Wrapper to rhe R function gamma, calculationg the gamma function of a
> real number.
> * VARIABLES
> * in/out
> * a: a real number
> */
> //_MAIN_
> return(gamma(a[0]));
> }

The fatal error, refers to the fact the compiler cannot find the
env.mod module, but the Makefile is correctly defined.

Relatively to the Debian test, the following warning is what is making
to fail the submission.

* checking whether package ?modello? can be installed ... [32s/32s] WARNING
> Found the following significant warnings:
>   Warning: Type specified for intrinsic function ?size? at (1) is ignored [-Wsurprising]
>   Warning: ?__var_1_fcn.offset? is used uninitialized in this function [-Wuninitialized]
>   Warning: ?__var_2_fcn.offset? is used uninitialized in this function [-Wuninitialized]

I have fixed the two warning due to uninitialized variables. However I
cannot reproduce the  warning "Type specified for intrinsic function
?size? at (1) is ignored [-Wsurprising]" and I do not know how to fix
it. Googling a bit I understand it could be false positive (e.g.
https://www.mail-archive.com/gcc-bugs at gcc.gnu.org/msg537501.html)

I would be very glad if anyone could give me advice on how to fix
these issues. Thanks in advance.

Regards,

Filippo

	[[alternative HTML version deleted]]


From edd @end|ng |rom deb|@n@org  Sat Dec 12 18:45:38 2020
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Sat, 12 Dec 2020 11:45:38 -0600
Subject: [R-pkg-devel] 
 CRAN packages suggesting other packages but not using
 them conditionally
In-Reply-To: <QB1PR01MB32663713573A71E5ECA661DEABC90@QB1PR01MB3266.CANPRD01.PROD.OUTLOOK.COM>
References: <QB1PR01MB32663713573A71E5ECA661DEABC90@QB1PR01MB3266.CANPRD01.PROD.OUTLOOK.COM>
Message-ID: <24533.450.671012.648956@rob.eddelbuettel.com>


On 12 December 2020 at 16:24, Michael L Friendly wrote:
| I got the email below concerning 3 of my packages but wonder if they are false alarms or
| if not, how to locate & fix the problem.
| 
|     This concerns packages: ...
| 
|     Suggested packages should be used conditionally: see ?1.1.3.1 of 'Writing R Extensions'.  Some of these are hard to install on a platform without X11 such as M1 Macs: see the logs at https://www.stats.ox.ac.uk/pub/bdr/M1mac/.
| 
|     You can check all of the suggested packages by setting environment variable _R_CHECK_DEPENDS_ONLY_=true  -- see https://cran.r-project.org/doc/manuals/r-devel/R-ints.html#Tools .
| 
| Is this a false alarm?
| 
| In each case, the outfile contains:
| 
|     * checking package namespace information ... OK
|     * checking package dependencies ... NOTE
|     Package suggested but not available for checking: 'rgl'
| 
| indicating that rgl is not avaiable on the testing machine.  Then, when checking examples an error is triggered
| when an example calls something that requires rgl.
| 
|     >
|     > heplot3d(Adopted.mod, hypotheses=list("Reg"=c("AMED", "BMIQ")),
|     +         col = c("red", "blue", "black", "gray"), wire=FALSE)
|     Loading required namespace: rgl
|     Failed with error:  'there is no package called 'rgl''
|     Error in heplot3d.mlm(Adopted.mod, hypotheses = list(Reg = c("AMED", "BMIQ")),  :
|       rgl package is required.
|     Calls: heplot3d -> heplot3d.mlm
|     Execution halted
| 
| Yet, heplot3d seems to contain the required way to refer to the suggested rgl package:
| 
|                 if (!requireNamespace("rgl")) stop("rgl package is required.")
| 
| So, I'm mystified.  Can anyone help?

This is not conditional use in the sense of my reading of WRE.

What you have here is essentially an "assert()" and equivalent to
  stopifnot(requireNamespace("rgl"))
which, in turn, is equivalent to a strong Depends or Imports as your package
will experience a _critical error_ triggered by `stop()` if rgl is missing.

The idea of a conditional use is to, well, be conditional. Below I make use
of Rcpp if is present, but it is only a suggests:

  ## see the source files in the snippets/ directory of the package
  ## check for (optional, only in Suggests:) Rcpp, and also wrapped in a
  ## dontrun as it takes 10s at CRAN (yet only 3.5 here) yielding a NOTE
  if (requireNamespace("Rcpp", quietly=TRUE)) {
      Rcpp::sourceCpp(system.file("snippets", "convolveExample.cpp", package="tidyCpp"))
  }

If the _suggested_ package is present, it is used. If not we quietly move on. 
(It's not the full story as the compilation occassionally takes longer,
Windows complained so all this is now in a \dontrun{} block too. But the idea
is generic and there are many more examples to be found.)

Hope this helps,  Dirk

-- 
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Sat Dec 12 18:48:21 2020
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Sat, 12 Dec 2020 09:48:21 -0800
Subject: [R-pkg-devel] 
 CRAN packages suggesting other packages but not using
 them conditionally
In-Reply-To: <QB1PR01MB32663713573A71E5ECA661DEABC90@QB1PR01MB3266.CANPRD01.PROD.OUTLOOK.COM>
References: <QB1PR01MB32663713573A71E5ECA661DEABC90@QB1PR01MB3266.CANPRD01.PROD.OUTLOOK.COM>
Message-ID: <85993824-69E7-4BAA-A1DD-00620A4E3171@dcn.davis.ca.us>

Examples should use dontrun to avoid calling functions that call stop.

On December 12, 2020 8:24:50 AM PST, Michael L Friendly <friendly at yorku.ca> wrote:
>I got the email below concerning 3 of my packages but wonder if they
>are false alarms or
>if not, how to locate & fix the problem.
>
>    This concerns packages: ...
>
>Suggested packages should be used conditionally: see ?1.1.3.1 of
>'Writing R Extensions'.  Some of these are hard to install on a
>platform without X11 such as M1 Macs: see the logs at
>https://www.stats.ox.ac.uk/pub/bdr/M1mac/.
>
>You can check all of the suggested packages by setting environment
>variable _R_CHECK_DEPENDS_ONLY_=true  -- see
>https://cran.r-project.org/doc/manuals/r-devel/R-ints.html#Tools .
>
>Is this a false alarm?
>
>In each case, the outfile contains:
>
>    * checking package namespace information ... OK
>    * checking package dependencies ... NOTE
>    Package suggested but not available for checking: 'rgl'
>
>indicating that rgl is not avaiable on the testing machine.  Then, when
>checking examples an error is triggered
>when an example calls something that requires rgl.
>
>    >
>    > heplot3d(Adopted.mod, hypotheses=list("Reg"=c("AMED", "BMIQ")),
>    +         col = c("red", "blue", "black", "gray"), wire=FALSE)
>    Loading required namespace: rgl
>    Failed with error:  'there is no package called 'rgl''
>Error in heplot3d.mlm(Adopted.mod, hypotheses = list(Reg = c("AMED",
>"BMIQ")),  :
>      rgl package is required.
>    Calls: heplot3d -> heplot3d.mlm
>    Execution halted
>
>Yet, heplot3d seems to contain the required way to refer to the
>suggested rgl package:
>
>         if (!requireNamespace("rgl")) stop("rgl package is required.")
>
>So, I'm mystified.  Can anyone help?
>
>
>
>Michael Friendly     Email: friendly AT yorku DOT ca
>Professor, Psychology Dept. & Former Chair, ASA Statistical Graphics
>Section
>York University      Voice: 416 736-2100 x66249
>4700 Keele Street    Web: http://www.datavis.ca | @datavisFriendly
>Toronto, ONT  M3J 1P3 CANADA
>
>
>	[[alternative HTML version deleted]]

-- 
Sent from my phone. Please excuse my brevity.


From bbo|ker @end|ng |rom gm@||@com  Sat Dec 12 18:58:16 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Sat, 12 Dec 2020 12:58:16 -0500
Subject: [R-pkg-devel] 
 CRAN packages suggesting other packages but not using
 them conditionally
In-Reply-To: <QB1PR01MB32663713573A71E5ECA661DEABC90@QB1PR01MB3266.CANPRD01.PROD.OUTLOOK.COM>
References: <QB1PR01MB32663713573A71E5ECA661DEABC90@QB1PR01MB3266.CANPRD01.PROD.OUTLOOK.COM>
Message-ID: <7e651cfd-f01b-672b-32f1-2b9e1f7c0d2a@gmail.com>

   I think you're supposed to skip the example (throwing a warning, if 
you like ...) if rgl isn't available, rather than throwing an error ... ?

On 12/12/20 11:24 AM, Michael L Friendly wrote:
> I got the email below concerning 3 of my packages but wonder if they are false alarms or
> if not, how to locate & fix the problem.
> 
>      This concerns packages: ...
> 
>      Suggested packages should be used conditionally: see ?1.1.3.1 of 'Writing R Extensions'.  Some of these are hard to install on a platform without X11 such as M1 Macs: see the logs at https://www.stats.ox.ac.uk/pub/bdr/M1mac/.
> 
>      You can check all of the suggested packages by setting environment variable _R_CHECK_DEPENDS_ONLY_=true  -- see https://cran.r-project.org/doc/manuals/r-devel/R-ints.html#Tools .
> 
> Is this a false alarm?
> 
> In each case, the outfile contains:
> 
>      * checking package namespace information ... OK
>      * checking package dependencies ... NOTE
>      Package suggested but not available for checking: 'rgl'
> 
> indicating that rgl is not avaiable on the testing machine.  Then, when checking examples an error is triggered
> when an example calls something that requires rgl.
> 
>      >
>      > heplot3d(Adopted.mod, hypotheses=list("Reg"=c("AMED", "BMIQ")),
>      +         col = c("red", "blue", "black", "gray"), wire=FALSE)
>      Loading required namespace: rgl
>      Failed with error:  'there is no package called 'rgl''
>      Error in heplot3d.mlm(Adopted.mod, hypotheses = list(Reg = c("AMED", "BMIQ")),  :
>        rgl package is required.
>      Calls: heplot3d -> heplot3d.mlm
>      Execution halted
> 
> Yet, heplot3d seems to contain the required way to refer to the suggested rgl package:
> 
>                  if (!requireNamespace("rgl")) stop("rgl package is required.")
> 
> So, I'm mystified.  Can anyone help?
> 
> 
> 
> Michael Friendly     Email: friendly AT yorku DOT ca
> Professor, Psychology Dept. & Former Chair, ASA Statistical Graphics Section
> York University      Voice: 416 736-2100 x66249
> 4700 Keele Street    Web: http://www.datavis.ca | @datavisFriendly
> Toronto, ONT  M3J 1P3 CANADA
> 
> 
> 	[[alternative HTML version deleted]]
> 
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From |r|end|y @end|ng |rom yorku@c@  Sat Dec 12 19:40:41 2020
From: |r|end|y @end|ng |rom yorku@c@ (Michael L Friendly)
Date: Sat, 12 Dec 2020 18:40:41 +0000
Subject: [R-pkg-devel] 
 CRAN packages suggesting other packages but not using
 them conditionally
In-Reply-To: <24533.450.671012.648956@rob.eddelbuettel.com>
References: <QB1PR01MB32663713573A71E5ECA661DEABC90@QB1PR01MB3266.CANPRD01.PROD.OUTLOOK.COM>
 <24533.450.671012.648956@rob.eddelbuettel.com>
Message-ID: <QB1PR01MB326671959ADBE3740D320D9FABC90@QB1PR01MB3266.CANPRD01.PROD.OUTLOOK.COM>

Thanks, Dirk

Just to clarify--
In my packages, candisc, heplots, vcdExtra I have mostly 2D graphic methods, but some 3D methods that use
rgl.  I therefore put rgl into Suggests:

Could I solve this by making rgl a Depends: ?

-Michael


-----Original Message-----
From: Dirk Eddelbuettel <edd at debian.org> 
Sent: Saturday, December 12, 2020 12:46 PM
To: Michael L Friendly <friendly at yorku.ca>
Cc: r-package-devel at R-project.org; Prof Brian Ripley <ripley at stats.ox.ac.uk>
Subject: Re: [R-pkg-devel] CRAN packages suggesting other packages but not using them conditionally


On 12 December 2020 at 16:24, Michael L Friendly wrote:
| I got the email below concerning 3 of my packages but wonder if they 
| are false alarms or if not, how to locate & fix the problem.
| 
|     This concerns packages: ...
| 
|     Suggested packages should be used conditionally: see  1.1.3.1 of 'Writing R Extensions'.  Some of these are hard to install on a platform without X11 such as M1 Macs: see the logs at https://www.stats.ox.ac.uk/pub/bdr/M1mac/.
| 
|     You can check all of the suggested packages by setting environment variable _R_CHECK_DEPENDS_ONLY_=true  -- see https://cran.r-project.org/doc/manuals/r-devel/R-ints.html#Tools .
| 
| Is this a false alarm?
| 
| In each case, the outfile contains:
| 
|     * checking package namespace information ... OK
|     * checking package dependencies ... NOTE
|     Package suggested but not available for checking: 'rgl'
| 
| indicating that rgl is not avaiable on the testing machine.  Then, 
| when checking examples an error is triggered when an example calls something that requires rgl.
| 
|     >
|     > heplot3d(Adopted.mod, hypotheses=list("Reg"=c("AMED", "BMIQ")),
|     +         col = c("red", "blue", "black", "gray"), wire=FALSE)
|     Loading required namespace: rgl
|     Failed with error:  'there is no package called 'rgl''
|     Error in heplot3d.mlm(Adopted.mod, hypotheses = list(Reg = c("AMED", "BMIQ")),  :
|       rgl package is required.
|     Calls: heplot3d -> heplot3d.mlm
|     Execution halted
| 
| Yet, heplot3d seems to contain the required way to refer to the suggested rgl package:
| 
|                 if (!requireNamespace("rgl")) stop("rgl package is 
| required.")
| 
| So, I'm mystified.  Can anyone help?

This is not conditional use in the sense of my reading of WRE.

What you have here is essentially an "assert()" and equivalent to
  stopifnot(requireNamespace("rgl"))
which, in turn, is equivalent to a strong Depends or Imports as your package will experience a _critical error_ triggered by `stop()` if rgl is missing.

The idea of a conditional use is to, well, be conditional. Below I make use of Rcpp if is present, but it is only a suggests:

  ## see the source files in the snippets/ directory of the package
  ## check for (optional, only in Suggests:) Rcpp, and also wrapped in a
  ## dontrun as it takes 10s at CRAN (yet only 3.5 here) yielding a NOTE
  if (requireNamespace("Rcpp", quietly=TRUE)) {
      Rcpp::sourceCpp(system.file("snippets", "convolveExample.cpp", package="tidyCpp"))
  }

If the _suggested_ package is present, it is used. If not we quietly move on. 
(It's not the full story as the compilation occassionally takes longer, Windows complained so all this is now in a \dontrun{} block too. But the idea is generic and there are many more examples to be found.)

Hope this helps,  Dirk

--
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org

From @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org  Sat Dec 12 20:19:24 2020
From: @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org (Spencer Graves)
Date: Sat, 12 Dec 2020 13:19:24 -0600
Subject: [R-pkg-devel] 
 CRAN packages suggesting other packages but not using
 them conditionally
In-Reply-To: <QB1PR01MB326671959ADBE3740D320D9FABC90@QB1PR01MB3266.CANPRD01.PROD.OUTLOOK.COM>
References: <QB1PR01MB32663713573A71E5ECA661DEABC90@QB1PR01MB3266.CANPRD01.PROD.OUTLOOK.COM>
 <24533.450.671012.648956@rob.eddelbuettel.com>
 <QB1PR01MB326671959ADBE3740D320D9FABC90@QB1PR01MB3266.CANPRD01.PROD.OUTLOOK.COM>
Message-ID: <9119b1df-801c-108b-c3da-bed72efc3d51@effectivedefense.org>

	  I have tests in my code to detect when something like that is not 
available.


	  I also have code in "\examples" to skip tests that would encounter 
that.


	  Hadley's "testthhat:skip_on_cran" is supposed to suppress tests like 
that on CRAN.  I have so far failed to understand how to use this 
function that Hadley wrote.  Instead, I use things like the following:


if(!fda::CRAN()){
# Code that I want to run everyplace that's NOT CRAN


}


	  When I wrote "fda::CRAN", I was told that I shouldn't do it, but I 
didn't see a better option, and I've been using it for several years now 
without being given a reason to discontinue using it or (better?) being 
given an alternative that seems better to me.


	  Spencer


On 2020-12-12 12:40, Michael L Friendly wrote:
> Thanks, Dirk
> 
> Just to clarify--
> In my packages, candisc, heplots, vcdExtra I have mostly 2D graphic methods, but some 3D methods that use
> rgl.  I therefore put rgl into Suggests:
> 
> Could I solve this by making rgl a Depends: ?
> 
> -Michael
> 
> 
> -----Original Message-----
> From: Dirk Eddelbuettel <edd at debian.org>
> Sent: Saturday, December 12, 2020 12:46 PM
> To: Michael L Friendly <friendly at yorku.ca>
> Cc: r-package-devel at R-project.org; Prof Brian Ripley <ripley at stats.ox.ac.uk>
> Subject: Re: [R-pkg-devel] CRAN packages suggesting other packages but not using them conditionally
> 
> 
> On 12 December 2020 at 16:24, Michael L Friendly wrote:
> | I got the email below concerning 3 of my packages but wonder if they
> | are false alarms or if not, how to locate & fix the problem.
> |
> |     This concerns packages: ...
> |
> |     Suggested packages should be used conditionally: see  1.1.3.1 of 'Writing R Extensions'.  Some of these are hard to install on a platform without X11 such as M1 Macs: see the logs at https://www.stats.ox.ac.uk/pub/bdr/M1mac/.
> |
> |     You can check all of the suggested packages by setting environment variable _R_CHECK_DEPENDS_ONLY_=true  -- see https://cran.r-project.org/doc/manuals/r-devel/R-ints.html#Tools .
> |
> | Is this a false alarm?
> |
> | In each case, the outfile contains:
> |
> |     * checking package namespace information ... OK
> |     * checking package dependencies ... NOTE
> |     Package suggested but not available for checking: 'rgl'
> |
> | indicating that rgl is not avaiable on the testing machine.  Then,
> | when checking examples an error is triggered when an example calls something that requires rgl.
> |
> |     >
> |     > heplot3d(Adopted.mod, hypotheses=list("Reg"=c("AMED", "BMIQ")),
> |     +         col = c("red", "blue", "black", "gray"), wire=FALSE)
> |     Loading required namespace: rgl
> |     Failed with error:  'there is no package called 'rgl''
> |     Error in heplot3d.mlm(Adopted.mod, hypotheses = list(Reg = c("AMED", "BMIQ")),  :
> |       rgl package is required.
> |     Calls: heplot3d -> heplot3d.mlm
> |     Execution halted
> |
> | Yet, heplot3d seems to contain the required way to refer to the suggested rgl package:
> |
> |                 if (!requireNamespace("rgl")) stop("rgl package is
> | required.")
> |
> | So, I'm mystified.  Can anyone help?
> 
> This is not conditional use in the sense of my reading of WRE.
> 
> What you have here is essentially an "assert()" and equivalent to
>    stopifnot(requireNamespace("rgl"))
> which, in turn, is equivalent to a strong Depends or Imports as your package will experience a _critical error_ triggered by `stop()` if rgl is missing.
> 
> The idea of a conditional use is to, well, be conditional. Below I make use of Rcpp if is present, but it is only a suggests:
> 
>    ## see the source files in the snippets/ directory of the package
>    ## check for (optional, only in Suggests:) Rcpp, and also wrapped in a
>    ## dontrun as it takes 10s at CRAN (yet only 3.5 here) yielding a NOTE
>    if (requireNamespace("Rcpp", quietly=TRUE)) {
>        Rcpp::sourceCpp(system.file("snippets", "convolveExample.cpp", package="tidyCpp"))
>    }
> 
> If the _suggested_ package is present, it is used. If not we quietly move on.
> (It's not the full story as the compilation occassionally takes longer, Windows complained so all this is now in a \dontrun{} block too. But the idea is generic and there are many more examples to be found.)
> 
> Hope this helps,  Dirk
> 
> --
> https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From j|ox @end|ng |rom mcm@@ter@c@  Sat Dec 12 20:39:36 2020
From: j|ox @end|ng |rom mcm@@ter@c@ (John Fox)
Date: Sat, 12 Dec 2020 14:39:36 -0500
Subject: [R-pkg-devel] 
 CRAN packages suggesting other packages but not using
 them conditionally
In-Reply-To: <21387_1607798717_0BCIjEAn007194_QB1PR01MB326671959ADBE3740D320D9FABC90@QB1PR01MB3266.CANPRD01.PROD.OUTLOOK.COM>
References: <QB1PR01MB32663713573A71E5ECA661DEABC90@QB1PR01MB3266.CANPRD01.PROD.OUTLOOK.COM>
 <24533.450.671012.648956@rob.eddelbuettel.com>
 <21387_1607798717_0BCIjEAn007194_QB1PR01MB326671959ADBE3740D320D9FABC90@QB1PR01MB3266.CANPRD01.PROD.OUTLOOK.COM>
Message-ID: <b852611a-103a-9398-50e1-28bdbcd541d8@mcmaster.ca>

Hi Michael,

It should be fine to have rgl in Suggests, and to have the 3D graphics 
functions that use rgl throw an error if rgl is absent. What's not fine 
is having these errors triggered in the absence of rgl when examples are 
run or vignettes are compiled.

Putting rgl into Depends rather than Suggests would make the problem 
worse, because you couldn't then load your package without rgl.

So, as I believe a couple of others have suggested, wrap the problematic 
examples in, e.g., if(requireNamespace("rgl")){}, and do something 
similar in the vignettes.

I hope this helps,
  John

John Fox, Professor Emeritus
McMaster University
Hamilton, Ontario, Canada
web: https://socialsciences.mcmaster.ca/jfox/

On 2020-12-12 1:40 p.m., Michael L Friendly wrote:
> Thanks, Dirk
> 
> Just to clarify--
> In my packages, candisc, heplots, vcdExtra I have mostly 2D graphic methods, but some 3D methods that use
> rgl.  I therefore put rgl into Suggests:
> 
> Could I solve this by making rgl a Depends: ?
> 
> -Michael
> 
> 
> -----Original Message-----
> From: Dirk Eddelbuettel <edd at debian.org>
> Sent: Saturday, December 12, 2020 12:46 PM
> To: Michael L Friendly <friendly at yorku.ca>
> Cc: r-package-devel at R-project.org; Prof Brian Ripley <ripley at stats.ox.ac.uk>
> Subject: Re: [R-pkg-devel] CRAN packages suggesting other packages but not using them conditionally
> 
> 
> On 12 December 2020 at 16:24, Michael L Friendly wrote:
> | I got the email below concerning 3 of my packages but wonder if they
> | are false alarms or if not, how to locate & fix the problem.
> |
> |     This concerns packages: ...
> |
> |     Suggested packages should be used conditionally: see  1.1.3.1 of 'Writing R Extensions'.  Some of these are hard to install on a platform without X11 such as M1 Macs: see the logs at https://www.stats.ox.ac.uk/pub/bdr/M1mac/.
> |
> |     You can check all of the suggested packages by setting environment variable _R_CHECK_DEPENDS_ONLY_=true  -- see https://cran.r-project.org/doc/manuals/r-devel/R-ints.html#Tools .
> |
> | Is this a false alarm?
> |
> | In each case, the outfile contains:
> |
> |     * checking package namespace information ... OK
> |     * checking package dependencies ... NOTE
> |     Package suggested but not available for checking: 'rgl'
> |
> | indicating that rgl is not avaiable on the testing machine.  Then,
> | when checking examples an error is triggered when an example calls something that requires rgl.
> |
> |     >
> |     > heplot3d(Adopted.mod, hypotheses=list("Reg"=c("AMED", "BMIQ")),
> |     +         col = c("red", "blue", "black", "gray"), wire=FALSE)
> |     Loading required namespace: rgl
> |     Failed with error:  'there is no package called 'rgl''
> |     Error in heplot3d.mlm(Adopted.mod, hypotheses = list(Reg = c("AMED", "BMIQ")),  :
> |       rgl package is required.
> |     Calls: heplot3d -> heplot3d.mlm
> |     Execution halted
> |
> | Yet, heplot3d seems to contain the required way to refer to the suggested rgl package:
> |
> |                 if (!requireNamespace("rgl")) stop("rgl package is
> | required.")
> |
> | So, I'm mystified.  Can anyone help?
> 
> This is not conditional use in the sense of my reading of WRE.
> 
> What you have here is essentially an "assert()" and equivalent to
>    stopifnot(requireNamespace("rgl"))
> which, in turn, is equivalent to a strong Depends or Imports as your package will experience a _critical error_ triggered by `stop()` if rgl is missing.
> 
> The idea of a conditional use is to, well, be conditional. Below I make use of Rcpp if is present, but it is only a suggests:
> 
>    ## see the source files in the snippets/ directory of the package
>    ## check for (optional, only in Suggests:) Rcpp, and also wrapped in a
>    ## dontrun as it takes 10s at CRAN (yet only 3.5 here) yielding a NOTE
>    if (requireNamespace("Rcpp", quietly=TRUE)) {
>        Rcpp::sourceCpp(system.file("snippets", "convolveExample.cpp", package="tidyCpp"))
>    }
> 
> If the _suggested_ package is present, it is used. If not we quietly move on.
> (It's not the full story as the compilation occassionally takes longer, Windows complained so all this is now in a \dontrun{} block too. But the idea is generic and there are many more examples to be found.)
> 
> Hope this helps,  Dirk
> 
> --
> https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From bbo|ker @end|ng |rom gm@||@com  Sat Dec 12 20:43:24 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Sat, 12 Dec 2020 14:43:24 -0500
Subject: [R-pkg-devel] 
 CRAN packages suggesting other packages but not using
 them conditionally
In-Reply-To: <9119b1df-801c-108b-c3da-bed72efc3d51@effectivedefense.org>
References: <QB1PR01MB32663713573A71E5ECA661DEABC90@QB1PR01MB3266.CANPRD01.PROD.OUTLOOK.COM>
 <24533.450.671012.648956@rob.eddelbuettel.com>
 <QB1PR01MB326671959ADBE3740D320D9FABC90@QB1PR01MB3266.CANPRD01.PROD.OUTLOOK.COM>
 <9119b1df-801c-108b-c3da-bed72efc3d51@effectivedefense.org>
Message-ID: <5115866d-3033-32ec-a042-0b4d1eca0a52@gmail.com>

   Apologies if I'm telling you something you already know:

   By default, fda::CRAN() uses the presence of environment variables 
matched by the regexp "^_R_" as a heuristic to decide whether it's being 
running on CRAN.

   testthat::skip_on_cran()  calls testthat::on_cran() to look for an 
environment variable called NOT_CRAN equal to "true". The 
devtools::check() machinery automatically sets this variable.


   So: fda::CRAN() depends on breakable assumptions, defaults to FALSE 
in an empty environment.  skip_on_cran() defaults to TRUE in an empty 
environment (but defaults to FALSE in a devtools::check() environment).


On 12/12/20 2:19 PM, Spencer Graves wrote:
>  ????? I have tests in my code to detect when something like that is not 
> available.
> 
> 
>  ????? I also have code in "\examples" to skip tests that would 
> encounter that.
> 
> 
>  ????? Hadley's "testthhat:skip_on_cran" is supposed to suppress tests 
> like that on CRAN.? I have so far failed to understand how to use this 
> function that Hadley wrote.? Instead, I use things like the following:
> 
> 
> if(!fda::CRAN()){
> # Code that I want to run everyplace that's NOT CRAN
> 
> 
> }
> 
> 
>  ????? When I wrote "fda::CRAN", I was told that I shouldn't do it, but 
> I didn't see a better option, and I've been using it for several years 
> now without being given a reason to discontinue using it or (better?) 
> being given an alternative that seems better to me.
> 
> 
>  ????? Spencer
> 
> 
> On 2020-12-12 12:40, Michael L Friendly wrote:
>> Thanks, Dirk
>>
>> Just to clarify--
>> In my packages, candisc, heplots, vcdExtra I have mostly 2D graphic 
>> methods, but some 3D methods that use
>> rgl.? I therefore put rgl into Suggests:
>>
>> Could I solve this by making rgl a Depends: ?
>>
>> -Michael
>>
>>
>> -----Original Message-----
>> From: Dirk Eddelbuettel <edd at debian.org>
>> Sent: Saturday, December 12, 2020 12:46 PM
>> To: Michael L Friendly <friendly at yorku.ca>
>> Cc: r-package-devel at R-project.org; Prof Brian Ripley 
>> <ripley at stats.ox.ac.uk>
>> Subject: Re: [R-pkg-devel] CRAN packages suggesting other packages but 
>> not using them conditionally
>>
>>
>> On 12 December 2020 at 16:24, Michael L Friendly wrote:
>> | I got the email below concerning 3 of my packages but wonder if they
>> | are false alarms or if not, how to locate & fix the problem.
>> |
>> |???? This concerns packages: ...
>> |
>> |???? Suggested packages should be used conditionally: see? 1.1.3.1 of 
>> 'Writing R Extensions'.? Some of these are hard to install on a 
>> platform without X11 such as M1 Macs: see the logs at 
>> https://www.stats.ox.ac.uk/pub/bdr/M1mac/.
>> |
>> |???? You can check all of the suggested packages by setting 
>> environment variable _R_CHECK_DEPENDS_ONLY_=true? -- see 
>> https://cran.r-project.org/doc/manuals/r-devel/R-ints.html#Tools .
>> |
>> | Is this a false alarm?
>> |
>> | In each case, the outfile contains:
>> |
>> |???? * checking package namespace information ... OK
>> |???? * checking package dependencies ... NOTE
>> |???? Package suggested but not available for checking: 'rgl'
>> |
>> | indicating that rgl is not avaiable on the testing machine.? Then,
>> | when checking examples an error is triggered when an example calls 
>> something that requires rgl.
>> |
>> |???? >
>> |???? > heplot3d(Adopted.mod, hypotheses=list("Reg"=c("AMED", "BMIQ")),
>> |???? +???????? col = c("red", "blue", "black", "gray"), wire=FALSE)
>> |???? Loading required namespace: rgl
>> |???? Failed with error:? 'there is no package called 'rgl''
>> |???? Error in heplot3d.mlm(Adopted.mod, hypotheses = list(Reg = 
>> c("AMED", "BMIQ")),? :
>> |?????? rgl package is required.
>> |???? Calls: heplot3d -> heplot3d.mlm
>> |???? Execution halted
>> |
>> | Yet, heplot3d seems to contain the required way to refer to the 
>> suggested rgl package:
>> |
>> |???????????????? if (!requireNamespace("rgl")) stop("rgl package is
>> | required.")
>> |
>> | So, I'm mystified.? Can anyone help?
>>
>> This is not conditional use in the sense of my reading of WRE.
>>
>> What you have here is essentially an "assert()" and equivalent to
>> ?? stopifnot(requireNamespace("rgl"))
>> which, in turn, is equivalent to a strong Depends or Imports as your 
>> package will experience a _critical error_ triggered by `stop()` if 
>> rgl is missing.
>>
>> The idea of a conditional use is to, well, be conditional. Below I 
>> make use of Rcpp if is present, but it is only a suggests:
>>
>> ?? ## see the source files in the snippets/ directory of the package
>> ?? ## check for (optional, only in Suggests:) Rcpp, and also wrapped in a
>> ?? ## dontrun as it takes 10s at CRAN (yet only 3.5 here) yielding a NOTE
>> ?? if (requireNamespace("Rcpp", quietly=TRUE)) {
>> ?????? Rcpp::sourceCpp(system.file("snippets", "convolveExample.cpp", 
>> package="tidyCpp"))
>> ?? }
>>
>> If the _suggested_ package is present, it is used. If not we quietly 
>> move on.
>> (It's not the full story as the compilation occassionally takes 
>> longer, Windows complained so all this is now in a \dontrun{} block 
>> too. But the idea is generic and there are many more examples to be 
>> found.)
>>
>> Hope this helps,? Dirk
>>
>> -- 
>> https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org  Sat Dec 12 22:08:04 2020
From: @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org (Spencer Graves)
Date: Sat, 12 Dec 2020 15:08:04 -0600
Subject: [R-pkg-devel] 
 CRAN packages suggesting other packages but not using
 them conditionally
In-Reply-To: <5115866d-3033-32ec-a042-0b4d1eca0a52@gmail.com>
References: <QB1PR01MB32663713573A71E5ECA661DEABC90@QB1PR01MB3266.CANPRD01.PROD.OUTLOOK.COM>
 <24533.450.671012.648956@rob.eddelbuettel.com>
 <QB1PR01MB326671959ADBE3740D320D9FABC90@QB1PR01MB3266.CANPRD01.PROD.OUTLOOK.COM>
 <9119b1df-801c-108b-c3da-bed72efc3d51@effectivedefense.org>
 <5115866d-3033-32ec-a042-0b4d1eca0a52@gmail.com>
Message-ID: <1a0c0888-d92d-d2a0-6eb7-69e5657a48cb@effectivedefense.org>

Hi, Ben et al.:


On 2020-12-12 13:43, Ben Bolker wrote:
>  ? Apologies if I'm telling you something you already know:
> 
>  ? By default, fda::CRAN() uses the presence of environment variables 
> matched by the regexp "^_R_" as a heuristic to decide whether it's being 
> running on CRAN.
> 
>  ? testthat::skip_on_cran()? calls testthat::on_cran() to look for an 
> environment variable called NOT_CRAN equal to "true". The 
> devtools::check() machinery automatically sets this variable.


 > testthat::on_cran
Error: 'on_cran' is not an exported object from 'namespace:testthat'


	  Besides, on my Mac, I get:


 > testthat:::on_cran()
[1] TRUE


	  My Mac is NOT CRAN, and I don't want that function to return TRUE on 
my computer unless I explicitly run "R CMD check --on-cran".


>  ? So: fda::CRAN() depends on breakable assumptions, defaults to FALSE 
> in an empty environment.? skip_on_cran() defaults to TRUE in an empty 
> environment (but defaults to FALSE in a devtools::check() environment).

	  If future changes break fda::CRAN, I will have to deal with it then.


	  I'd be happier if the CRAN maintainers would develop a procedure to 
make it easier for package maintainers do two things:


		    * Include tests in their package that run longer than the time 
limit permitted on CRAN.


		    * Give error messages that the package maintainer wants to see but 
that should be suppressed on CRAN or when the user decides to run "R CMD 
check --as-cran".


	  In any event, I hope that I'll be able to continue using fda::CRAN as 
I have been.  If not, I will be forced to reduce the coverage of test 
suites everywhere I use fda::CRAN.  That in turn will make the code 
harder to maintain and more easily broken in ways that I can no longer 
easily test.


	  Spencer

> On 12/12/20 2:19 PM, Spencer Graves wrote:
>> ?????? I have tests in my code to detect when something like that is 
>> not available.
>>
>>
>> ?????? I also have code in "\examples" to skip tests that would 
>> encounter that.
>>
>>
>> ?????? Hadley's "testthhat:skip_on_cran" is supposed to suppress tests 
>> like that on CRAN.? I have so far failed to understand how to use this 
>> function that Hadley wrote.? Instead, I use things like the following:
>>
>>
>> if(!fda::CRAN()){
>> # Code that I want to run everyplace that's NOT CRAN
>>
>>
>> }
>>
>>
>> ?????? When I wrote "fda::CRAN", I was told that I shouldn't do it, 
>> but I didn't see a better option, and I've been using it for several 
>> years now without being given a reason to discontinue using it or 
>> (better?) being given an alternative that seems better to me.
>>
>>
>> ?????? Spencer
>>
>>
>> On 2020-12-12 12:40, Michael L Friendly wrote:
>>> Thanks, Dirk
>>>
>>> Just to clarify--
>>> In my packages, candisc, heplots, vcdExtra I have mostly 2D graphic 
>>> methods, but some 3D methods that use
>>> rgl.? I therefore put rgl into Suggests:
>>>
>>> Could I solve this by making rgl a Depends: ?
>>>
>>> -Michael
>>>
>>>
>>> -----Original Message-----
>>> From: Dirk Eddelbuettel <edd at debian.org>
>>> Sent: Saturday, December 12, 2020 12:46 PM
>>> To: Michael L Friendly <friendly at yorku.ca>
>>> Cc: r-package-devel at R-project.org; Prof Brian Ripley 
>>> <ripley at stats.ox.ac.uk>
>>> Subject: Re: [R-pkg-devel] CRAN packages suggesting other packages 
>>> but not using them conditionally
>>>
>>>
>>> On 12 December 2020 at 16:24, Michael L Friendly wrote:
>>> | I got the email below concerning 3 of my packages but wonder if they
>>> | are false alarms or if not, how to locate & fix the problem.
>>> |
>>> |???? This concerns packages: ...
>>> |
>>> |???? Suggested packages should be used conditionally: see? 1.1.3.1 
>>> of 'Writing R Extensions'.? Some of these are hard to install on a 
>>> platform without X11 such as M1 Macs: see the logs at 
>>> https://www.stats.ox.ac.uk/pub/bdr/M1mac/.
>>> |
>>> |???? You can check all of the suggested packages by setting 
>>> environment variable _R_CHECK_DEPENDS_ONLY_=true? -- see 
>>> https://cran.r-project.org/doc/manuals/r-devel/R-ints.html#Tools .
>>> |
>>> | Is this a false alarm?
>>> |
>>> | In each case, the outfile contains:
>>> |
>>> |???? * checking package namespace information ... OK
>>> |???? * checking package dependencies ... NOTE
>>> |???? Package suggested but not available for checking: 'rgl'
>>> |
>>> | indicating that rgl is not avaiable on the testing machine.? Then,
>>> | when checking examples an error is triggered when an example calls 
>>> something that requires rgl.
>>> |
>>> |???? >
>>> |???? > heplot3d(Adopted.mod, hypotheses=list("Reg"=c("AMED", "BMIQ")),
>>> |???? +???????? col = c("red", "blue", "black", "gray"), wire=FALSE)
>>> |???? Loading required namespace: rgl
>>> |???? Failed with error:? 'there is no package called 'rgl''
>>> |???? Error in heplot3d.mlm(Adopted.mod, hypotheses = list(Reg = 
>>> c("AMED", "BMIQ")),? :
>>> |?????? rgl package is required.
>>> |???? Calls: heplot3d -> heplot3d.mlm
>>> |???? Execution halted
>>> |
>>> | Yet, heplot3d seems to contain the required way to refer to the 
>>> suggested rgl package:
>>> |
>>> |???????????????? if (!requireNamespace("rgl")) stop("rgl package is
>>> | required.")
>>> |
>>> | So, I'm mystified.? Can anyone help?
>>>
>>> This is not conditional use in the sense of my reading of WRE.
>>>
>>> What you have here is essentially an "assert()" and equivalent to
>>> ?? stopifnot(requireNamespace("rgl"))
>>> which, in turn, is equivalent to a strong Depends or Imports as your 
>>> package will experience a _critical error_ triggered by `stop()` if 
>>> rgl is missing.
>>>
>>> The idea of a conditional use is to, well, be conditional. Below I 
>>> make use of Rcpp if is present, but it is only a suggests:
>>>
>>> ?? ## see the source files in the snippets/ directory of the package
>>> ?? ## check for (optional, only in Suggests:) Rcpp, and also wrapped 
>>> in a
>>> ?? ## dontrun as it takes 10s at CRAN (yet only 3.5 here) yielding a 
>>> NOTE
>>> ?? if (requireNamespace("Rcpp", quietly=TRUE)) {
>>> ?????? Rcpp::sourceCpp(system.file("snippets", "convolveExample.cpp", 
>>> package="tidyCpp"))
>>> ?? }
>>>
>>> If the _suggested_ package is present, it is used. If not we quietly 
>>> move on.
>>> (It's not the full story as the compilation occassionally takes 
>>> longer, Windows complained so all this is now in a \dontrun{} block 
>>> too. But the idea is generic and there are many more examples to be 
>>> found.)
>>>
>>> Hope this helps,? Dirk
>>>
>>> -- 
>>> https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From bbo|ker @end|ng |rom gm@||@com  Sat Dec 12 22:41:47 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Sat, 12 Dec 2020 16:41:47 -0500
Subject: [R-pkg-devel] 
 CRAN packages suggesting other packages but not using
 them conditionally
In-Reply-To: <1a0c0888-d92d-d2a0-6eb7-69e5657a48cb@effectivedefense.org>
References: <QB1PR01MB32663713573A71E5ECA661DEABC90@QB1PR01MB3266.CANPRD01.PROD.OUTLOOK.COM>
 <24533.450.671012.648956@rob.eddelbuettel.com>
 <QB1PR01MB326671959ADBE3740D320D9FABC90@QB1PR01MB3266.CANPRD01.PROD.OUTLOOK.COM>
 <9119b1df-801c-108b-c3da-bed72efc3d51@effectivedefense.org>
 <5115866d-3033-32ec-a042-0b4d1eca0a52@gmail.com>
 <1a0c0888-d92d-d2a0-6eb7-69e5657a48cb@effectivedefense.org>
Message-ID: <32cbf7a9-3f6b-6170-cb4a-49b40200e062@gmail.com>



On 12/12/20 4:08 PM, Spencer Graves wrote:
> Hi, Ben et al.:
> 
> 
> On 2020-12-12 13:43, Ben Bolker wrote:
>> ?? Apologies if I'm telling you something you already know:
>>
>> ?? By default, fda::CRAN() uses the presence of environment variables 
>> matched by the regexp "^_R_" as a heuristic to decide whether it's 
>> being running on CRAN.
>>
>> ?? testthat::skip_on_cran()? calls testthat::on_cran() to look for an 
>> environment variable called NOT_CRAN equal to "true". The 
>> devtools::check() machinery automatically sets this variable.
> 
> 
>  > testthat::on_cran
> Error: 'on_cran' is not an exported object from 'namespace:testthat'

      on_cran() is intended to be used via testthat::skip_on_cran() 
(which is exported, unlike on_cran()).
> 
> 
>  ????? Besides, on my Mac, I get:
> 
> 
>  > testthat:::on_cran()
> [1] TRUE
> 
> 
>  ????? My Mac is NOT CRAN, and I don't want that function to return TRUE 
> on my computer unless I explicitly run "R CMD check --on-cran".

   The assumption of testthat is that it's going to be deployed via 
devtools::check(), which automatically sets the environment variable 
NOT_CRAN equal to 'true'. For testing on your machine, you could use

Sys.setenv(NOT_CRAN="true"); testthat:::on_cran()

or you could put

export NOT_CRAN=true

in the shell/in your testing pipeline.


> 
> 
>> ?? So: fda::CRAN() depends on breakable assumptions, defaults to FALSE 
>> in an empty environment.? skip_on_cran() defaults to TRUE in an empty 
>> environment (but defaults to FALSE in a devtools::check() environment).
> 
>  ????? If future changes break fda::CRAN, I will have to deal with it then.
> 
> 
>  ????? I'd be happier if the CRAN maintainers would develop a procedure 
> to make it easier for package maintainers do two things:
> 
> 
>  ??????????? * Include tests in their package that run longer than the 
> time limit permitted on CRAN.
> 
> 
>  ??????????? * Give error messages that the package maintainer wants to 
> see but that should be suppressed on CRAN or when the user decides to 
> run "R CMD check --as-cran".

  I agree that this would be nice.

   A simple mechanism would be to set an official/sanctioned/stable 
environment variable such as _R_ON_CRAN in all CRAN testing pipelines.

> 
> 
>  ????? In any event, I hope that I'll be able to continue using 
> fda::CRAN as I have been.? If not, I will be forced to reduce the 
> coverage of test suites everywhere I use fda::CRAN.? That in turn will 
> make the code harder to maintain and more easily broken in ways that I 
> can no longer easily test.
> 
> 
>  ????? Spencer
> 
>> On 12/12/20 2:19 PM, Spencer Graves wrote:
>>> ?????? I have tests in my code to detect when something like that is 
>>> not available.
>>>
>>>
>>> ?????? I also have code in "\examples" to skip tests that would 
>>> encounter that.
>>>
>>>
>>> ?????? Hadley's "testthhat:skip_on_cran" is supposed to suppress 
>>> tests like that on CRAN.? I have so far failed to understand how to 
>>> use this function that Hadley wrote.? Instead, I use things like the 
>>> following:
>>>
>>>
>>> if(!fda::CRAN()){
>>> # Code that I want to run everyplace that's NOT CRAN
>>>
>>>
>>> }
>>>
>>>
>>> ?????? When I wrote "fda::CRAN", I was told that I shouldn't do it, 
>>> but I didn't see a better option, and I've been using it for several 
>>> years now without being given a reason to discontinue using it or 
>>> (better?) being given an alternative that seems better to me.
>>>
>>>
>>> ?????? Spencer
>>>
>>>
>>> On 2020-12-12 12:40, Michael L Friendly wrote:
>>>> Thanks, Dirk
>>>>
>>>> Just to clarify--
>>>> In my packages, candisc, heplots, vcdExtra I have mostly 2D graphic 
>>>> methods, but some 3D methods that use
>>>> rgl.? I therefore put rgl into Suggests:
>>>>
>>>> Could I solve this by making rgl a Depends: ?
>>>>
>>>> -Michael
>>>>
>>>>
>>>> -----Original Message-----
>>>> From: Dirk Eddelbuettel <edd at debian.org>
>>>> Sent: Saturday, December 12, 2020 12:46 PM
>>>> To: Michael L Friendly <friendly at yorku.ca>
>>>> Cc: r-package-devel at R-project.org; Prof Brian Ripley 
>>>> <ripley at stats.ox.ac.uk>
>>>> Subject: Re: [R-pkg-devel] CRAN packages suggesting other packages 
>>>> but not using them conditionally
>>>>
>>>>
>>>> On 12 December 2020 at 16:24, Michael L Friendly wrote:
>>>> | I got the email below concerning 3 of my packages but wonder if they
>>>> | are false alarms or if not, how to locate & fix the problem.
>>>> |
>>>> |???? This concerns packages: ...
>>>> |
>>>> |???? Suggested packages should be used conditionally: see? 1.1.3.1 
>>>> of 'Writing R Extensions'.? Some of these are hard to install on a 
>>>> platform without X11 such as M1 Macs: see the logs at 
>>>> https://www.stats.ox.ac.uk/pub/bdr/M1mac/.
>>>> |
>>>> |???? You can check all of the suggested packages by setting 
>>>> environment variable _R_CHECK_DEPENDS_ONLY_=true? -- see 
>>>> https://cran.r-project.org/doc/manuals/r-devel/R-ints.html#Tools .
>>>> |
>>>> | Is this a false alarm?
>>>> |
>>>> | In each case, the outfile contains:
>>>> |
>>>> |???? * checking package namespace information ... OK
>>>> |???? * checking package dependencies ... NOTE
>>>> |???? Package suggested but not available for checking: 'rgl'
>>>> |
>>>> | indicating that rgl is not avaiable on the testing machine.? Then,
>>>> | when checking examples an error is triggered when an example calls 
>>>> something that requires rgl.
>>>> |
>>>> |???? >
>>>> |???? > heplot3d(Adopted.mod, hypotheses=list("Reg"=c("AMED", "BMIQ")),
>>>> |???? +???????? col = c("red", "blue", "black", "gray"), wire=FALSE)
>>>> |???? Loading required namespace: rgl
>>>> |???? Failed with error:? 'there is no package called 'rgl''
>>>> |???? Error in heplot3d.mlm(Adopted.mod, hypotheses = list(Reg = 
>>>> c("AMED", "BMIQ")),? :
>>>> |?????? rgl package is required.
>>>> |???? Calls: heplot3d -> heplot3d.mlm
>>>> |???? Execution halted
>>>> |
>>>> | Yet, heplot3d seems to contain the required way to refer to the 
>>>> suggested rgl package:
>>>> |
>>>> |???????????????? if (!requireNamespace("rgl")) stop("rgl package is
>>>> | required.")
>>>> |
>>>> | So, I'm mystified.? Can anyone help?
>>>>
>>>> This is not conditional use in the sense of my reading of WRE.
>>>>
>>>> What you have here is essentially an "assert()" and equivalent to
>>>> ?? stopifnot(requireNamespace("rgl"))
>>>> which, in turn, is equivalent to a strong Depends or Imports as your 
>>>> package will experience a _critical error_ triggered by `stop()` if 
>>>> rgl is missing.
>>>>
>>>> The idea of a conditional use is to, well, be conditional. Below I 
>>>> make use of Rcpp if is present, but it is only a suggests:
>>>>
>>>> ?? ## see the source files in the snippets/ directory of the package
>>>> ?? ## check for (optional, only in Suggests:) Rcpp, and also wrapped 
>>>> in a
>>>> ?? ## dontrun as it takes 10s at CRAN (yet only 3.5 here) yielding a 
>>>> NOTE
>>>> ?? if (requireNamespace("Rcpp", quietly=TRUE)) {
>>>> ?????? Rcpp::sourceCpp(system.file("snippets", 
>>>> "convolveExample.cpp", package="tidyCpp"))
>>>> ?? }
>>>>
>>>> If the _suggested_ package is present, it is used. If not we quietly 
>>>> move on.
>>>> (It's not the full story as the compilation occassionally takes 
>>>> longer, Windows complained so all this is now in a \dontrun{} block 
>>>> too. But the idea is generic and there are many more examples to be 
>>>> found.)
>>>>
>>>> Hope this helps,? Dirk
>>>>
>>>> -- 
>>>> https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From murdoch@dunc@n @end|ng |rom gm@||@com  Sat Dec 12 23:50:51 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sat, 12 Dec 2020 17:50:51 -0500
Subject: [R-pkg-devel] 
 CRAN packages suggesting other packages but not using
 them conditionally
In-Reply-To: <1a0c0888-d92d-d2a0-6eb7-69e5657a48cb@effectivedefense.org>
References: <QB1PR01MB32663713573A71E5ECA661DEABC90@QB1PR01MB3266.CANPRD01.PROD.OUTLOOK.COM>
 <24533.450.671012.648956@rob.eddelbuettel.com>
 <QB1PR01MB326671959ADBE3740D320D9FABC90@QB1PR01MB3266.CANPRD01.PROD.OUTLOOK.COM>
 <9119b1df-801c-108b-c3da-bed72efc3d51@effectivedefense.org>
 <5115866d-3033-32ec-a042-0b4d1eca0a52@gmail.com>
 <1a0c0888-d92d-d2a0-6eb7-69e5657a48cb@effectivedefense.org>
Message-ID: <dd2cc331-8cc5-db40-eb0c-1f32ef20ffe0@gmail.com>

On 12/12/2020 4:08 p.m., Spencer Graves wrote:
> Hi, Ben et al.:
> 
> 
> On 2020-12-12 13:43, Ben Bolker wrote:
>>   ? Apologies if I'm telling you something you already know:
>>
>>   ? By default, fda::CRAN() uses the presence of environment variables
>> matched by the regexp "^_R_" as a heuristic to decide whether it's being
>> running on CRAN.
>>
>>   ? testthat::skip_on_cran()? calls testthat::on_cran() to look for an
>> environment variable called NOT_CRAN equal to "true". The
>> devtools::check() machinery automatically sets this variable.
> 
> 
>   > testthat::on_cran
> Error: 'on_cran' is not an exported object from 'namespace:testthat'
> 
> 
> 	  Besides, on my Mac, I get:
> 
> 
>   > testthat:::on_cran()
> [1] TRUE
> 
> 
> 	  My Mac is NOT CRAN, and I don't want that function to return TRUE on
> my computer unless I explicitly run "R CMD check --on-cran".
> 
> 
>>   ? So: fda::CRAN() depends on breakable assumptions, defaults to FALSE
>> in an empty environment.? skip_on_cran() defaults to TRUE in an empty
>> environment (but defaults to FALSE in a devtools::check() environment).
> 
> 	  If future changes break fda::CRAN, I will have to deal with it then.
> 
> 
> 	  I'd be happier if the CRAN maintainers would develop a procedure to
> make it easier for package maintainers do two things:
> 
> 
> 		    * Include tests in their package that run longer than the time
> limit permitted on CRAN.

That's very easy now.  Just put them in a "slowtests" directory, and 
tell R CMD check to use that.  How could it be easier?

Duncan Murdoch


From murdoch@dunc@n @end|ng |rom gm@||@com  Sat Dec 12 23:53:41 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sat, 12 Dec 2020 17:53:41 -0500
Subject: [R-pkg-devel] 
 CRAN packages suggesting other packages but not using
 them conditionally
In-Reply-To: <32cbf7a9-3f6b-6170-cb4a-49b40200e062@gmail.com>
References: <QB1PR01MB32663713573A71E5ECA661DEABC90@QB1PR01MB3266.CANPRD01.PROD.OUTLOOK.COM>
 <24533.450.671012.648956@rob.eddelbuettel.com>
 <QB1PR01MB326671959ADBE3740D320D9FABC90@QB1PR01MB3266.CANPRD01.PROD.OUTLOOK.COM>
 <9119b1df-801c-108b-c3da-bed72efc3d51@effectivedefense.org>
 <5115866d-3033-32ec-a042-0b4d1eca0a52@gmail.com>
 <1a0c0888-d92d-d2a0-6eb7-69e5657a48cb@effectivedefense.org>
 <32cbf7a9-3f6b-6170-cb4a-49b40200e062@gmail.com>
Message-ID: <870aada9-2ed4-03df-4e05-9fd7fa530c86@gmail.com>

On 12/12/2020 4:41 p.m., Ben Bolker wrote:
> 
> 
> On 12/12/20 4:08 PM, Spencer Graves wrote:
>> Hi, Ben et al.:
>>
>>
>> On 2020-12-12 13:43, Ben Bolker wrote:
>>>  ?? Apologies if I'm telling you something you already know:
>>>
>>>  ?? By default, fda::CRAN() uses the presence of environment variables
>>> matched by the regexp "^_R_" as a heuristic to decide whether it's
>>> being running on CRAN.
>>>
>>>  ?? testthat::skip_on_cran()? calls testthat::on_cran() to look for an
>>> environment variable called NOT_CRAN equal to "true". The
>>> devtools::check() machinery automatically sets this variable.
>>
>>
>>   > testthat::on_cran
>> Error: 'on_cran' is not an exported object from 'namespace:testthat'
> 
>        on_cran() is intended to be used via testthat::skip_on_cran()
> (which is exported, unlike on_cran()).
>>
>>
>>   ????? Besides, on my Mac, I get:
>>
>>
>>   > testthat:::on_cran()
>> [1] TRUE
>>
>>
>>   ????? My Mac is NOT CRAN, and I don't want that function to return TRUE
>> on my computer unless I explicitly run "R CMD check --on-cran".
> 
>     The assumption of testthat is that it's going to be deployed via
> devtools::check(), which automatically sets the environment variable
> NOT_CRAN equal to 'true'. For testing on your machine, you could use
> 
> Sys.setenv(NOT_CRAN="true"); testthat:::on_cran()
> 
> or you could put
> 
> export NOT_CRAN=true
> 
> in the shell/in your testing pipeline.
> 
> 
>>
>>
>>>  ?? So: fda::CRAN() depends on breakable assumptions, defaults to FALSE
>>> in an empty environment.? skip_on_cran() defaults to TRUE in an empty
>>> environment (but defaults to FALSE in a devtools::check() environment).
>>
>>   ????? If future changes break fda::CRAN, I will have to deal with it then.
>>
>>
>>   ????? I'd be happier if the CRAN maintainers would develop a procedure
>> to make it easier for package maintainers do two things:
>>
>>
>>   ??????????? * Include tests in their package that run longer than the
>> time limit permitted on CRAN.
>>
>>
>>   ??????????? * Give error messages that the package maintainer wants to
>> see but that should be suppressed on CRAN or when the user decides to
>> run "R CMD check --as-cran".
> 
>    I agree that this would be nice.
> 
>     A simple mechanism would be to set an official/sanctioned/stable
> environment variable such as _R_ON_CRAN in all CRAN testing pipelines.

What's wrong with users setting NOT_CRAN on all non-CRAN testing pipelines?

Most people want the same tests in both places.  Those who like writing 
lots of time consuming tests are the ones who shouldn't mind a small 
step to control them.

Duncan Murdoch


From bbo|ker @end|ng |rom gm@||@com  Sun Dec 13 00:01:56 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Sat, 12 Dec 2020 18:01:56 -0500
Subject: [R-pkg-devel] 
 CRAN packages suggesting other packages but not using
 them conditionally
In-Reply-To: <dd2cc331-8cc5-db40-eb0c-1f32ef20ffe0@gmail.com>
References: <QB1PR01MB32663713573A71E5ECA661DEABC90@QB1PR01MB3266.CANPRD01.PROD.OUTLOOK.COM>
 <24533.450.671012.648956@rob.eddelbuettel.com>
 <QB1PR01MB326671959ADBE3740D320D9FABC90@QB1PR01MB3266.CANPRD01.PROD.OUTLOOK.COM>
 <9119b1df-801c-108b-c3da-bed72efc3d51@effectivedefense.org>
 <5115866d-3033-32ec-a042-0b4d1eca0a52@gmail.com>
 <1a0c0888-d92d-d2a0-6eb7-69e5657a48cb@effectivedefense.org>
 <dd2cc331-8cc5-db40-eb0c-1f32ef20ffe0@gmail.com>
Message-ID: <4f9860f3-250e-b6e2-b79b-99dcf68c6e69@gmail.com>



On 12/12/20 5:50 PM, Duncan Murdoch wrote:
> On 12/12/2020 4:08 p.m., Spencer Graves wrote:
>> Hi, Ben et al.:
>>
>>
>> On 2020-12-12 13:43, Ben Bolker wrote:
>>> ? ? Apologies if I'm telling you something you already know:
>>>
>>> ? ? By default, fda::CRAN() uses the presence of environment variables
>>> matched by the regexp "^_R_" as a heuristic to decide whether it's being
>>> running on CRAN.
>>>
>>> ? ? testthat::skip_on_cran()? calls testthat::on_cran() to look for an
>>> environment variable called NOT_CRAN equal to "true". The
>>> devtools::check() machinery automatically sets this variable.
>>
>>
>> ? > testthat::on_cran
>> Error: 'on_cran' is not an exported object from 'namespace:testthat'
>>
>>
>> ????? Besides, on my Mac, I get:
>>
>>
>> ? > testthat:::on_cran()
>> [1] TRUE
>>
>>
>> ????? My Mac is NOT CRAN, and I don't want that function to return 
>> TRUE on
>> my computer unless I explicitly run "R CMD check --on-cran".
>>
>>
>>> ? ? So: fda::CRAN() depends on breakable assumptions, defaults to FALSE
>>> in an empty environment.? skip_on_cran() defaults to TRUE in an empty
>>> environment (but defaults to FALSE in a devtools::check() environment).
>>
>> ????? If future changes break fda::CRAN, I will have to deal with it 
>> then.
>>
>>
>> ????? I'd be happier if the CRAN maintainers would develop a procedure to
>> make it easier for package maintainers do two things:
>>
>>
>> ??????????? * Include tests in their package that run longer than the 
>> time
>> limit permitted on CRAN.
> 
> That's very easy now.? Just put them in a "slowtests" directory, and 
> tell R CMD check to use that.? How could it be easier?

    How would you do that?  In "R CMD check --help" I see that one can 
use --test-dir= to specify the test directory, but I don't see a way to 
specify _additional_ test directories; short of setting a tests/ 
directory with CRAN-specific tests and a slowtests/ directory with 
*both* CRAN-specific and CRAN-excluded tests (thus duplicating files, 
which seems clunky), I don't see how to do this within a standard R CMD 
check framework (without testing a CRAN-indicating environment variable, 
which gets us back where we started ...)  Or would you run R CMD check 
twice, once without and once with --test-dir=slowtests ?

   There doesn't seem to be very much in "Writing R Extensions" about 
testing - a little bit in
https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Package-subdirectories

   What am I missing?

  Just to clarify, the ideal would be to be able to designate a separate 
set of tests that were *not* run on CRAN, and to be able to run them in 
the same "R CMD check" pass as the CRAN-specific tests.  There are a 
bunch of ways to achieve this, but I think Spencer is saying (and I 
agree) that it would be nice if it were there an official mechanism that 
made this easier (and it seems pretty easy if the CRAN maintainers were 
agreeable to the idea ...)

> 
> Duncan Murdoch
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From bbo|ker @end|ng |rom gm@||@com  Sun Dec 13 00:20:34 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Sat, 12 Dec 2020 18:20:34 -0500
Subject: [R-pkg-devel] 
 CRAN packages suggesting other packages but not using
 them conditionally
In-Reply-To: <870aada9-2ed4-03df-4e05-9fd7fa530c86@gmail.com>
References: <QB1PR01MB32663713573A71E5ECA661DEABC90@QB1PR01MB3266.CANPRD01.PROD.OUTLOOK.COM>
 <24533.450.671012.648956@rob.eddelbuettel.com>
 <QB1PR01MB326671959ADBE3740D320D9FABC90@QB1PR01MB3266.CANPRD01.PROD.OUTLOOK.COM>
 <9119b1df-801c-108b-c3da-bed72efc3d51@effectivedefense.org>
 <5115866d-3033-32ec-a042-0b4d1eca0a52@gmail.com>
 <1a0c0888-d92d-d2a0-6eb7-69e5657a48cb@effectivedefense.org>
 <32cbf7a9-3f6b-6170-cb4a-49b40200e062@gmail.com>
 <870aada9-2ed4-03df-4e05-9fd7fa530c86@gmail.com>
Message-ID: <866135b8-f5d5-69db-528b-c48d808818e4@gmail.com>



On 12/12/20 5:53 PM, Duncan Murdoch wrote:
> On 12/12/2020 4:41 p.m., Ben Bolker wrote:
>>
>>
>> On 12/12/20 4:08 PM, Spencer Graves wrote:
>>> Hi, Ben et al.:
>>>
>>>
>>> On 2020-12-12 13:43, Ben Bolker wrote:
>>>> ??? Apologies if I'm telling you something you already know:
>>>>
>>>> ??? By default, fda::CRAN() uses the presence of environment variables
>>>> matched by the regexp "^_R_" as a heuristic to decide whether it's
>>>> being running on CRAN.
>>>>
>>>> ??? testthat::skip_on_cran()? calls testthat::on_cran() to look for an
>>>> environment variable called NOT_CRAN equal to "true". The
>>>> devtools::check() machinery automatically sets this variable.
>>>
>>>
>>> ? > testthat::on_cran
>>> Error: 'on_cran' is not an exported object from 'namespace:testthat'
>>
>> ?????? on_cran() is intended to be used via testthat::skip_on_cran()
>> (which is exported, unlike on_cran()).
>>>
>>>
>>> ? ????? Besides, on my Mac, I get:
>>>
>>>
>>> ? > testthat:::on_cran()
>>> [1] TRUE
>>>
>>>
>>> ? ????? My Mac is NOT CRAN, and I don't want that function to return 
>>> TRUE
>>> on my computer unless I explicitly run "R CMD check --on-cran".
>>
>> ??? The assumption of testthat is that it's going to be deployed via
>> devtools::check(), which automatically sets the environment variable
>> NOT_CRAN equal to 'true'. For testing on your machine, you could use
>>
>> Sys.setenv(NOT_CRAN="true"); testthat:::on_cran()
>>
>> or you could put
>>
>> export NOT_CRAN=true
>>
>> in the shell/in your testing pipeline.
>>
>>
>>>
>>>
>>>> ??? So: fda::CRAN() depends on breakable assumptions, defaults to FALSE
>>>> in an empty environment.? skip_on_cran() defaults to TRUE in an empty
>>>> environment (but defaults to FALSE in a devtools::check() environment).
>>>
>>> ? ????? If future changes break fda::CRAN, I will have to deal with 
>>> it then.
>>>
>>>
>>> ? ????? I'd be happier if the CRAN maintainers would develop a procedure
>>> to make it easier for package maintainers do two things:
>>>
>>>
>>> ? ??????????? * Include tests in their package that run longer than the
>>> time limit permitted on CRAN.
>>>
>>>
>>> ? ??????????? * Give error messages that the package maintainer wants to
>>> see but that should be suppressed on CRAN or when the user decides to
>>> run "R CMD check --as-cran".
>>
>> ?? I agree that this would be nice.
>>
>> ??? A simple mechanism would be to set an official/sanctioned/stable
>> environment variable such as _R_ON_CRAN in all CRAN testing pipelines.
> 
> What's wrong with users setting NOT_CRAN on all non-CRAN testing pipelines?

   This is where we started. Nothing's wrong with it, but setting 
_R_CRAN=true on CRAN testing pipelines and providing an on_cran() 
function in the utils package would also seem almost trivially easy for 
R-core/CRAN maintainers, and would simplify the process for R package 
developers who are less familiar with shell/scripting/etc. (although I 
admit that (wanting_to_skip_tests && not_familiar_with_env_vars && 
not_working_in_devtoolsverse) could be a small intersection ...)

> Most people want the same tests in both places.? Those who like writing 
> lots of time consuming tests are the ones who shouldn't mind a small 
> step to control them.

   True. It doesn't take that much to exceed 10 minutes on the CRAN 
windows pipeline any more, though.  I have 56 separate test files in 
lme4; on the Windows pipeline it takes 3 seconds just to *load* the lme4 
package, and every file gets tested on ix386 and x86_64, so I would use 
up about 6 minutes of my 10-minute checking budget before I even got 
started ...

    (Yes, I know I could combine the files so that I have to load the 
package less often during the testing phase, or possibly eliminate the 
library() calls - I don't remember whether test files have to run in a 
standalone R session, although it certainly seems like best practice).

> 
> Duncan Murdoch
> 
>


From murdoch@dunc@n @end|ng |rom gm@||@com  Sun Dec 13 02:50:14 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sat, 12 Dec 2020 20:50:14 -0500
Subject: [R-pkg-devel] 
 CRAN packages suggesting other packages but not using
 them conditionally
In-Reply-To: <4f9860f3-250e-b6e2-b79b-99dcf68c6e69@gmail.com>
References: <QB1PR01MB32663713573A71E5ECA661DEABC90@QB1PR01MB3266.CANPRD01.PROD.OUTLOOK.COM>
 <24533.450.671012.648956@rob.eddelbuettel.com>
 <QB1PR01MB326671959ADBE3740D320D9FABC90@QB1PR01MB3266.CANPRD01.PROD.OUTLOOK.COM>
 <9119b1df-801c-108b-c3da-bed72efc3d51@effectivedefense.org>
 <5115866d-3033-32ec-a042-0b4d1eca0a52@gmail.com>
 <1a0c0888-d92d-d2a0-6eb7-69e5657a48cb@effectivedefense.org>
 <dd2cc331-8cc5-db40-eb0c-1f32ef20ffe0@gmail.com>
 <4f9860f3-250e-b6e2-b79b-99dcf68c6e69@gmail.com>
Message-ID: <b6a65369-1598-92d6-d196-94bf5d20edc0@gmail.com>

On 12/12/2020 6:01 p.m., Ben Bolker wrote:
> 
> 
> On 12/12/20 5:50 PM, Duncan Murdoch wrote:
>> On 12/12/2020 4:08 p.m., Spencer Graves wrote:
>>> Hi, Ben et al.:
>>>
>>>
>>> On 2020-12-12 13:43, Ben Bolker wrote:
>>>>  ? ? Apologies if I'm telling you something you already know:
>>>>
>>>>  ? ? By default, fda::CRAN() uses the presence of environment variables
>>>> matched by the regexp "^_R_" as a heuristic to decide whether it's being
>>>> running on CRAN.
>>>>
>>>>  ? ? testthat::skip_on_cran()? calls testthat::on_cran() to look for an
>>>> environment variable called NOT_CRAN equal to "true". The
>>>> devtools::check() machinery automatically sets this variable.
>>>
>>>
>>>  ? > testthat::on_cran
>>> Error: 'on_cran' is not an exported object from 'namespace:testthat'
>>>
>>>
>>>  ????? Besides, on my Mac, I get:
>>>
>>>
>>>  ? > testthat:::on_cran()
>>> [1] TRUE
>>>
>>>
>>>  ????? My Mac is NOT CRAN, and I don't want that function to return
>>> TRUE on
>>> my computer unless I explicitly run "R CMD check --on-cran".
>>>
>>>
>>>>  ? ? So: fda::CRAN() depends on breakable assumptions, defaults to FALSE
>>>> in an empty environment.? skip_on_cran() defaults to TRUE in an empty
>>>> environment (but defaults to FALSE in a devtools::check() environment).
>>>
>>>  ????? If future changes break fda::CRAN, I will have to deal with it
>>> then.
>>>
>>>
>>>  ????? I'd be happier if the CRAN maintainers would develop a procedure to
>>> make it easier for package maintainers do two things:
>>>
>>>
>>>  ??????????? * Include tests in their package that run longer than the
>>> time
>>> limit permitted on CRAN.
>>
>> That's very easy now.? Just put them in a "slowtests" directory, and
>> tell R CMD check to use that.? How could it be easier?
> 
>      How would you do that?  In "R CMD check --help" I see that one can
> use --test-dir= to specify the test directory, but I don't see a way to
> specify _additional_ test directories; short of setting a tests/
> directory with CRAN-specific tests and a slowtests/ directory with
> *both* CRAN-specific and CRAN-excluded tests (thus duplicating files,
> which seems clunky), I don't see how to do this within a standard R CMD
> check framework (without testing a CRAN-indicating environment variable,
> which gets us back where we started ...)  Or would you run R CMD check
> twice, once without and once with --test-dir=slowtests ?

What I would do is have the slowtests run the regular tests.  So if I 
want both, I run slowtests.  If I want just the fast ones, I don't 
specify.  I can't think why I wouldn't want to run the slow ones without 
the fast ones, but if I did, it's not too hard to figure out a scheme 
that runs fast by default, slow when requested, and both if you request 
that instead.

> 
>     There doesn't seem to be very much in "Writing R Extensions" about
> testing - a little bit in
> https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Package-subdirectories
> 
>     What am I missing?
> 
>    Just to clarify, the ideal would be to be able to designate a separate
> set of tests that were *not* run on CRAN, and to be able to run them in
> the same "R CMD check" pass as the CRAN-specific tests.  

Yes, do that as described above.

There are a
> bunch of ways to achieve this, but I think Spencer is saying (and I
> agree) that it would be nice if it were there an official mechanism that
> made this easier (and it seems pretty easy if the CRAN maintainers were
> agreeable to the idea ...

There is such a mechanism, and I've just described it (and not for the 
first time; it's also described in WRE).  I think the problem is that 
you and Spencer are looking for something that's more complicated.  It 
doesn't need to be complicated.

Duncan Murdoch


From @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org  Sun Dec 13 05:28:31 2020
From: @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org (Spencer Graves)
Date: Sat, 12 Dec 2020 22:28:31 -0600
Subject: [R-pkg-devel] 
 CRAN packages suggesting other packages but not using
 them conditionally
In-Reply-To: <b6a65369-1598-92d6-d196-94bf5d20edc0@gmail.com>
References: <QB1PR01MB32663713573A71E5ECA661DEABC90@QB1PR01MB3266.CANPRD01.PROD.OUTLOOK.COM>
 <24533.450.671012.648956@rob.eddelbuettel.com>
 <QB1PR01MB326671959ADBE3740D320D9FABC90@QB1PR01MB3266.CANPRD01.PROD.OUTLOOK.COM>
 <9119b1df-801c-108b-c3da-bed72efc3d51@effectivedefense.org>
 <5115866d-3033-32ec-a042-0b4d1eca0a52@gmail.com>
 <1a0c0888-d92d-d2a0-6eb7-69e5657a48cb@effectivedefense.org>
 <dd2cc331-8cc5-db40-eb0c-1f32ef20ffe0@gmail.com>
 <4f9860f3-250e-b6e2-b79b-99dcf68c6e69@gmail.com>
 <b6a65369-1598-92d6-d196-94bf5d20edc0@gmail.com>
Message-ID: <c594ac14-616c-5bf3-afea-5d389d2e5de8@effectivedefense.org>



On 2020-12-12 19:50, Duncan Murdoch wrote:
> On 12/12/2020 6:01 p.m., Ben Bolker wrote:
>>
>>
>> On 12/12/20 5:50 PM, Duncan Murdoch wrote:
>>> On 12/12/2020 4:08 p.m., Spencer Graves wrote:
>>>> Hi, Ben et al.:
>>>>
>>>>
>>>> On 2020-12-12 13:43, Ben Bolker wrote:
>>>>> ?? ? Apologies if I'm telling you something you already know:
>>>>>
>>>>> ?? ? By default, fda::CRAN() uses the presence of environment 
>>>>> variables
>>>>> matched by the regexp "^_R_" as a heuristic to decide whether it's 
>>>>> being
>>>>> running on CRAN.
>>>>>
>>>>> ?? ? testthat::skip_on_cran()? calls testthat::on_cran() to look 
>>>>> for an
>>>>> environment variable called NOT_CRAN equal to "true". The
>>>>> devtools::check() machinery automatically sets this variable.
>>>>
>>>>
>>>> ?? > testthat::on_cran
>>>> Error: 'on_cran' is not an exported object from 'namespace:testthat'
>>>>
>>>>
>>>> ?????? Besides, on my Mac, I get:
>>>>
>>>>
>>>> ?? > testthat:::on_cran()
>>>> [1] TRUE
>>>>
>>>>
>>>> ?????? My Mac is NOT CRAN, and I don't want that function to return
>>>> TRUE on
>>>> my computer unless I explicitly run "R CMD check --on-cran".
>>>>
>>>>
>>>>> ?? ? So: fda::CRAN() depends on breakable assumptions, defaults to 
>>>>> FALSE
>>>>> in an empty environment.? skip_on_cran() defaults to TRUE in an empty
>>>>> environment (but defaults to FALSE in a devtools::check() 
>>>>> environment).
>>>>
>>>> ?????? If future changes break fda::CRAN, I will have to deal with it
>>>> then.
>>>>
>>>>
>>>> ?????? I'd be happier if the CRAN maintainers would develop a 
>>>> procedure to
>>>> make it easier for package maintainers do two things:
>>>>
>>>>
>>>> ???????????? * Include tests in their package that run longer than the
>>>> time
>>>> limit permitted on CRAN.
>>>
>>> That's very easy now.? Just put them in a "slowtests" directory, and
>>> tell R CMD check to use that.? How could it be easier?
>>
>> ???? How would you do that?? In "R CMD check --help" I see that one can
>> use --test-dir= to specify the test directory, but I don't see a way to
>> specify _additional_ test directories; short of setting a tests/
>> directory with CRAN-specific tests and a slowtests/ directory with
>> *both* CRAN-specific and CRAN-excluded tests (thus duplicating files,
>> which seems clunky), I don't see how to do this within a standard R CMD
>> check framework (without testing a CRAN-indicating environment variable,
>> which gets us back where we started ...)? Or would you run R CMD check
>> twice, once without and once with --test-dir=slowtests ?
> 
> What I would do is have the slowtests run the regular tests.? So if I 
> want both, I run slowtests.? If I want just the fast ones, I don't 
> specify.? I can't think why I wouldn't want to run the slow ones without 
> the fast ones, but if I did, it's not too hard to figure out a scheme 
> that runs fast by default, slow when requested, and both if you request 
> that instead.
> 
>>
>> ??? There doesn't seem to be very much in "Writing R Extensions" about
>> testing - a little bit in
>> https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Package-subdirectories 
>>
>>
>> ??? What am I missing?
>>
>> ?? Just to clarify, the ideal would be to be able to designate a separate
>> set of tests that were *not* run on CRAN, and to be able to run them in
>> the same "R CMD check" pass as the CRAN-specific tests. 
> 
> Yes, do that as described above.
> 
> There are a
>> bunch of ways to achieve this, but I think Spencer is saying (and I
>> agree) that it would be nice if it were there an official mechanism that
>> made this easier (and it seems pretty easy if the CRAN maintainers were
>> agreeable to the idea ...
> 
> There is such a mechanism, and I've just described it (and not for the 
> first time; it's also described in WRE).? I think the problem is that 
> you and Spencer are looking for something that's more complicated.? It 
> doesn't need to be complicated.


	  I want to put all the tests of a particular function in the 
"\examples" section.  If some things are too pedantic to show to a user, 
I can put them in "\dontshow".  If they run too long for CRAN, I wrap 
them in "if(!fda::CRAN()){...}", as I previously noted.


	  Putting slow tests in a "slowtest" directory to me violates a 
sensible rule of documentation, because it makes it harder to think 
about how complete a test suite is.


	  I probably should not broaden this discussion to include "\dontrun", 
but I will:  I think any example in "\dontrun" should be made to work 
and wrapped in something like "if(!fda::CRAN()){...}" if you don't want 
it to be run on CRAN, where you don't care if it breaks or not.  I've 
read too many books with examples that didn't work!  The "fda" package 
has 76 reverse dependencies.  I think most of those are attributable to 
the quality of the fundamental ideas, but I'd like to think that some of 
them are because I insisted in included decent unit tests in the 
"\examples" -- AND because I insisted on make sure all but a couple of 
the examples in the book actually worked!


	  Thanks very much to everyone who has contributed to this thread.  I 
don't think we've reached a consensus, but we've had a good discussion 
and may eventually help improve package documentation and testing 
practices in the future.


	  Spencer


> Duncan Murdoch
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From |ng||mo @end|ng |rom gm@||@com  Sun Dec 13 16:49:17 2020
From: |ng||mo @end|ng |rom gm@||@com (Filippo Monari)
Date: Sun, 13 Dec 2020 16:49:17 +0100
Subject: [R-pkg-devel] First time CRAN submission
Message-ID: <CAG0gC1fhxFe=cNCpLWS6SuxaNBbAr_S7E1N3pF+WCuBOTR8kJA@mail.gmail.com>

Hi All,
I am trying to submit my first package to CRAN. I already went through few
iterations and corrected most of the problems (I believe). However I still
getting two issues that I cannot figure out hoe to fix. I will list them
here below, hoping for some help. You can find the package that I am trying
to submit at https://gitlab.com/ingfimo/modello.

With respect to the Windows test this is the output that has been returned
to me:

> * using log directory 'd:/RCompile/CRANincoming/R-devel/modello.Rcheck'
> * using R Under development (unstable) (2020-12-09 r79601)
> * using platform: x86_64-w64-mingw32 (64-bit)
> * using session charset: ISO8859-1
> * checking for file 'modello/DESCRIPTION' ... OK
> * this is package 'modello' version '0.1'
> * checking CRAN incoming feasibility ... NOTE
> Maintainer: 'Filippo Monari <ingfimo at gmail.com>'
>
> New submission
>
> Possibly mis-spelled words in DESCRIPTION:
>   Modello (2:8, 12:27, 13:22, 18:55)
>   openMP (13:98)
>
> The Title field starts with the package name.
> The Title field should be in title case. Current version is:
> 'Modello: a homemade Deep Learning library'
> In title case that is:
> 'Modello: a Homemade Deep Learning Library'
> * checking package namespace information ... OK
> * checking package dependencies ... OK
> * checking if this is a source package ... OK
> * checking if there is a namespace ... OK
> * checking for hidden files and directories ... OK
> * checking for portable file names ... OK
> * checking serialization versions ... OK
> * checking whether package 'modello' can be installed ... OK
> * checking installed package size ... OK
> * checking package directory ... OK
> * checking for future file timestamps ... OK
> * checking DESCRIPTION meta-information ... OK
> * checking top-level files ... OK
> * checking for left-over files ... OK
> * checking index information ... OK
> * checking package subdirectories ... OK
> * checking R files for non-ASCII characters ... OK
> * checking R files for syntax errors ... OK
> * loading checks for arch 'i386'
> ** checking whether the package can be loaded ... ERROR
> Loading this package had a fatal error status code 1
> Loading log:
> Error: package 'modello' is not installed for 'arch = i386'
> Execution halted
> ** DONE
> Status: 1 ERROR, 1 NOTE
>
>   In particular the package compiles correctly but I stil get the error
"package 'modello' is not installed for 'arch = i386'"

With respect to the Debian test the warning that makes the submission to
fail is the following:

> * checking whether package ?modello? can be installed ... [33s/32s] WARNING
> Found the following significant warnings:
> Warning: Type specified for intrinsic function ?size? at (1) is ignored
> [-Wsurprising]
> See ?/srv/hornik/tmp/CRAN/modello.Rcheck/00install.out? for details.

which relates to few workings of the fololwing kind:

> Warning: Type specified for intrinsic function ?size? at (1) is ignored
> [-Wsurprising]

and

> Warning: ?ss.dim[1].stride? may be used uninitialized in this function
> [-Wmaybe-uninitialized]

I cannot reproduce these warnings on my environments, even by using -Wall
and -Wextra during the compilation. Googling the topic I found that it
could be bug in an old version of gcc (
https://gcc.gnu.org/bugzilla/show_bug.cgi?id=77504).

Any advice on how to further proceed with the submission are welcome.

Regards,
Filippo

	[[alternative HTML version deleted]]


From gor@n@bro@trom @end|ng |rom umu@@e  Sun Dec 13 18:33:08 2020
From: gor@n@bro@trom @end|ng |rom umu@@e (=?UTF-8?Q?G=c3=b6ran_Brostr=c3=b6m?=)
Date: Sun, 13 Dec 2020 18:33:08 +0100
Subject: [R-pkg-devel] Vignette fonts problem
Message-ID: <6c897957-cbeb-21fa-3960-2841f457331b@umu.se>

I have built and checked eha_2.8.2 with R-4.0.3 and everything is OK.

However, checking with the current (2020-12-12) R-devel, I get:

--- re-building ?tpchreg.Rmd? using rmarkdown
Quitting from lines 103-108 (tpchreg.Rmd)
Error: processing vignette 'tpchreg.Rmd' failed with diagnostics:
X11 font -adobe-helvetica-%s-%s-*-*-%d-*-*-*-*-*-*-*, face 1 at size 12 
could not be loaded
--- failed re-building ?tpchreg.Rmd?

In 'tpchreg.Rmd' I have:

---
title: "Proportional hazards regression with tabular data"
author: "G?ran Brostr?m"
package: eha
date: "`r Sys.Date()`"
slug: eha
link-citations: yes
output:
     bookdown::html_document2:
         toc: yes
         toc_depth: 2
pkgdown:
     as_is: true
bibliography: mybib.bib
vignette: >
   %\VignetteIndexEntry{Proportional hazards regression with tabular data}
   %\VignetteEngine{knitr::rmarkdown}
   %\VignetteEncoding{UTF-8}
   \usepackage[utf8]{inputenc}
---

and the lines 103-108 are:

```{r glmbasefig,  fig.cap = "Age-specific mortality, Sweden 1968-2019. 
Poisson regression."}
oldpar <- par(las = 1, lwd = 1.5, mfrow = c(1, 2))
plot(0:(n-1), haz, type = "s", main = "log(hazards)",
      xlab = "Age", ylab = "", log = "y")
plot(0:(n-1), haz, type = "s", main = "hazards",
      xlab = "Age", ylab = "Deaths / Year")
```

So, why do I get the fonts error now (and not earlier) and where can I 
find the fonts? (Ubuntu 20.04). And will it help, so the package is 
accepted by CRAN?

Thanks, G?ran


From gor@n@bro@trom @end|ng |rom umu@@e  Sun Dec 13 21:55:41 2020
From: gor@n@bro@trom @end|ng |rom umu@@e (=?UTF-8?Q?G=c3=b6ran_Brostr=c3=b6m?=)
Date: Sun, 13 Dec 2020 21:55:41 +0100
Subject: [R-pkg-devel] Vignette fonts problem
In-Reply-To: <6c897957-cbeb-21fa-3960-2841f457331b@umu.se>
References: <6c897957-cbeb-21fa-3960-2841f457331b@umu.se>
Message-ID: <22e91ccc-9d1a-fb33-f4aa-6d9b123093de@umu.se>

Update: I tried this on another machine with the same setup (I thought), 
and no problem with the R-devel check!

Must find those fonts ...

On CRAN soon!

G?ran

On 2020-12-13 18:33, G?ran Brostr?m wrote:
> I have built and checked eha_2.8.2 with R-4.0.3 and everything is OK.
> 
> However, checking with the current (2020-12-12) R-devel, I get:
> 
> --- re-building ?tpchreg.Rmd? using rmarkdown
> Quitting from lines 103-108 (tpchreg.Rmd)
> Error: processing vignette 'tpchreg.Rmd' failed with diagnostics:
> X11 font -adobe-helvetica-%s-%s-*-*-%d-*-*-*-*-*-*-*, face 1 at size 12 
> could not be loaded
> --- failed re-building ?tpchreg.Rmd?
> 
> In 'tpchreg.Rmd' I have:
> 
> ---
> title: "Proportional hazards regression with tabular data"
> author: "G?ran Brostr?m"
> package: eha
> date: "`r Sys.Date()`"
> slug: eha
> link-citations: yes
> output:
>  ??? bookdown::html_document2:
>  ??????? toc: yes
>  ??????? toc_depth: 2
> pkgdown:
>  ??? as_is: true
> bibliography: mybib.bib
> vignette: >
>  ? %\VignetteIndexEntry{Proportional hazards regression with tabular data}
>  ? %\VignetteEngine{knitr::rmarkdown}
>  ? %\VignetteEncoding{UTF-8}
>  ? \usepackage[utf8]{inputenc}
> ---
> 
> and the lines 103-108 are:
> 
> ```{r glmbasefig,? fig.cap = "Age-specific mortality, Sweden 1968-2019. 
> Poisson regression."}
> oldpar <- par(las = 1, lwd = 1.5, mfrow = c(1, 2))
> plot(0:(n-1), haz, type = "s", main = "log(hazards)",
>  ???? xlab = "Age", ylab = "", log = "y")
> plot(0:(n-1), haz, type = "s", main = "hazards",
>  ???? xlab = "Age", ylab = "Deaths / Year")
> ```
> 
> So, why do I get the fonts error now (and not earlier) and where can I 
> find the fonts? (Ubuntu 20.04). And will it help, so the package is 
> accepted by CRAN?
> 
> Thanks, G?ran
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From b@rt-j@n@v@nro@@um @end|ng |rom wur@n|  Mon Dec 14 15:02:54 2020
From: b@rt-j@n@v@nro@@um @end|ng |rom wur@n| (Rossum, Bart-Jan van)
Date: Mon, 14 Dec 2020 14:02:54 +0000
Subject: [R-pkg-devel] unexpected CRAN pretest failure
Message-ID: <DB7PR01MB54019424C464EDD4DF63101BB9C70@DB7PR01MB5401.eurprd01.prod.exchangelabs.com>

Dear community,

When trying to update my CRAN (https://cran.r-project.org/web/packages/statgenGxE/index.html) package in ran into unexpected error on Windows.
I had tested before submission on R-hub, which went fine, but CRAN complained, and this was confirmed on Winbuilder.
I noticed a slight difference in R-version used on CRAN/Winbuilder and R-hub.
However, the error itself seems to come from an lme4 function. 
I'm quite clueless on how to debug/fix this. 

CRAN and Winbuilder:
R Under development (unstable) (2020-12-13 r79623)
https://eur03.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwin-builder.r-project.org%2FnK0OMOQ378SI&amp;data=04%7C01%7Cbart-jan.vanrossum%40wur.nl%7C0bf8357a13b84c807ad708d8a0308e40%7C27d137e5761f4dc1af88d26430abb18f%7C0%7C0%7C637435477692513415%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&amp;sdata=HqExR7SELQ7U32H67xF3ufPKxyTZm3162ZiGb6YetI8%3D&amp;reserved=0

R-hub:
R Under development (unstable) (2020-11-30 r79529)
https://eur03.safelinks.protection.outlook.com/?url=https%3A%2F%2Fbuilder.r-hub.io%2Fstatus%2FstatgenGxE_1.0.4.tar.gz-fcc1e205a5fb4fd09559d301ee3502c9&data=04%7C01%7Cbart-jan.vanrossum%40wur.nl%7Cce0d271db460494b5a6908d8a0248bc0%7C27d137e5761f4dc1af88d26430abb18f%7C0%7C0%7C637435426112472834%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=j2RrXotL3qz5r1O6gcfXxb1VH8WuM2UaWaYQ5SnQFz0%3D&reserved=0

Any pointers are appreciated,
Bart-Jan


From |@|@ye @end|ng |rom un@w@edu@@u  Tue Dec 15 07:56:26 2020
From: |@|@ye @end|ng |rom un@w@edu@@u (Pierre Lafaye de Micheaux)
Date: Tue, 15 Dec 2020 06:56:26 +0000
Subject: [R-pkg-devel] 
 =?utf-8?b?d2FybmluZzogdHlwZSBvZiDigJh6aHBldnhf4oCZ?=
 =?utf-8?q?_does_not_match_original_declaration_=5B-Wlto-type-mismatch=5D?=
In-Reply-To: <5bbb8f87-6ad1-4d3a-69cc-255d452c4023@gmail.com>
References: <SYCPR01MB527838C6205A60D005883DE6936D0@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <20200706231157.22ed7b92@trisector>
 <SYCPR01MB5278FB70F4C750AE223EDE4093690@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <CAF8bMcYVziRkSZzdo4T2Bt3TeT4ohjpwjDJiutKFXNHDMVve1A@mail.gmail.com>
 <SYCPR01MB5278AD57988A1ED4AD0D24FC93690@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <CAF8bMcY-519pgq0JfjMjgz-Uy6FJx9zeLxrh0ygH=B==DueP+Q@mail.gmail.com>
 <SYCPR01MB5278ACC7379B3608D084B0CD93660@SYCPR01MB5278.ausprd01.prod.outlook.com>,
 <5bbb8f87-6ad1-4d3a-69cc-255d452c4023@gmail.com>
Message-ID: <SYCPR01MB5278B1DAB3818B36E561CADD93C60@SYCPR01MB5278.ausprd01.prod.outlook.com>

Dear Tomas,

Apologies for the very long delay.

I was able to create a minimal version of the package (attached) that gives the same exact warnings:

myzhpevx.cpp:22:16: warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
           void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
                ^
zhpevx.f:232:14: note: type mismatch in parameter 20
       SUBROUTINE zhpevx(JOBZ, RANGE, UPLO, N, AP, VL, VU, IL, IU,
              ^
zhpevx.f:232:14: note: type ?long int? should match type ?size_t?
zhpevx.f:232:14: note: ?zhpevx? was previously declared here
zhpevx.f:232:14: note: code may be misoptimized unless -fno-strict-aliasing is used

I am under the impression that I am following quite closely what is written here: https://cran.csiro.au/doc/manuals/r-patched/R-exts.html#Fortran-character-strings

I tried many different things but I always end up with the same main warning (i.e., type of ?zhpevx_? does not match original declaration ).

My version of fortran: GNU Fortran (Debian 8.3.0-6) 8.3.0 under Debian 10.

Thank you very much for any further help you could provide so that I could have my package back to the CRAN.

Kind regards,
Pierre L.


________________________________
From: Tomas Kalibera <tomas.kalibera at gmail.com>
Sent: Tuesday, 7 July 2020 15:43
To: Pierre Lafaye de Micheaux <lafaye at unsw.edu.au>
Cc: r-package-devel at r-project.org <r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]

My recommendation would be to try to minimize the example (package) as much as possible so that it still has the problem, and then try to investigate why exactly/where is the type mismatch. This is what helped me debug similar issues - sometimes it was hard to tell from the Fortran warnings where exactly the mismatched declarations were and why they were mismatched.

This process of minimization can already reveal the true source of the problem, and if not, others may try to debug for you using the minimal example. A useful tool is the Fortran option -fc-prototypes-external (see WRE for more details) and I've also used dumps of the compiler tree before (-fdump-tree-all, more in GCC documentation).

Best
Tomas

On 7/7/20 5:00 AM, Pierre Lafaye de Micheaux wrote:

My file myzhpevx.cpp starts with:

<quote>
#define USE_FC_LEN_T
#include <R.h>
#include "Rmath.h"

#ifdef FC_LEN_T
extern "C" {

  void zhpevxC(char **jobz, char **range, char **uplo, int *n, Rcomplex *ap,
     double *vl, double *vu, int *il, int *iu, double *abstol, int *m,
     double *w, Rcomplex *z, int *ldz, Rcomplex *work, double *rwork,
     int *iwork, int *ifail, int *info) {

          void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
      const int *n, Rcomplex *ap, const double *vl,
      const double *vu, const int *il, const int *iu,
      const double *abstol, int *m, double *w,
      Rcomplex *z, const int *ldz, Rcomplex *work, double *rwork,
      int *iwork, int *ifail, int *info,
      FC_LEN_T jobz_len,  FC_LEN_T range_len,  FC_LEN_T uplo_len);
</quote>

So if I understand correctly what you are saying, you suggest that FC_LEN_T was not correctly defined by the CRAN team?

Should I just write something like (adding the middle instruction below to my existing code above)?:

<quote>
#ifdef FC_LEN_T
typedef long long int FC_LEN_T;
extern "C" {
</quote>

Thank you
Pierre
________________________________
From: William Dunlap <wdunlap at tibco.com><mailto:wdunlap at tibco.com>
Sent: Tuesday, 7 July 2020 11:46
To: Pierre Lafaye de Micheaux <lafaye at unsw.edu.au><mailto:lafaye at unsw.edu.au>
Cc: Ivan Krylov <krylov.r00t at gmail.com><mailto:krylov.r00t at gmail.com>; r-package-devel at r-project.org<mailto:r-package-devel at r-project.org> <r-package-devel at r-project.org><mailto:r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]

With gcc 8.3.0, gfortran 8.3.0, and ld 2.33.1 from the mingw64 part of
rtools40 on Windows, if I misdefine the typedef FC_LEN_T and use the
-flto flag I get the sort of error messages that you report.

c:\tmp\fortran>cat main.c
#include <string.h>
#include <stdio.h>

#ifdef USE_INT
typedef int FC_LEN_T;
#endif
#ifdef USE_LONG
typedef long int FC_LEN_T;
#endif
#ifdef USE_LONG_LONG
typedef long long int FC_LEN_T;
#endif

extern void sub_(char* word, double *ret, FC_LEN_T word_len);

int main(int argc, char* argv[])
{
    if (argc == 2) {
        double ret = 3. ;
        FC_LEN_T word_len = strlen(argv[1]);
        sub_(argv[1], &ret, word_len);
        printf("sizeof(FC_LEN_T)=%d, ret=%g\n", (int)(sizeof(FC_LEN_T)), ret);
        return 0;
    } else {
        return -1;
    }
}

c:\tmp\fortran>gcc  -flto -DUSE_INT main.c sub.f -lgfortran
main.c:14:13: warning: type of 'sub_' does not match original
declaration [-Wlto-type-mismatch]
 extern void sub_(char* word, double *ret, FC_LEN_T word_len);
             ^
sub.f:1:1: note: type mismatch in parameter 3
       subroutine sub(word, ret)
 ^
sub.f:1:1: note: type 'long long int' should match type 'FC_LEN_T'
sub.f:1:1: note: 'sub' was previously declared here
sub.f:1:1: note: code may be misoptimized unless -fno-strict-aliasing is used

c:\tmp\fortran>gcc  -flto -DUSE_LONG main.c sub.f -lgfortran
main.c:14:13: warning: type of 'sub_' does not match original
declaration [-Wlto-type-mismatch]
 extern void sub_(char* word, double *ret, FC_LEN_T word_len);
             ^
sub.f:1:1: note: type mismatch in parameter 3
       subroutine sub(word, ret)
 ^
sub.f:1:1: note: type 'long long int' should match type 'FC_LEN_T'
sub.f:1:1: note: 'sub' was previously declared here
sub.f:1:1: note: code may be misoptimized unless -fno-strict-aliasing is used

c:\tmp\fortran>gcc  -flto -DUSE_LONG_LONG main.c sub.f -lgfortran
<no warnings or notes>

Bill Dunlap
TIBCO Software
wdunlap tibco.com

On Mon, Jul 6, 2020 at 4:39 PM Pierre Lafaye de Micheaux
<lafaye at unsw.edu.au><mailto:lafaye at unsw.edu.au> wrote:



Hello Bill,

Thank you for your insight.

First, my impression, is that the problem comes from how I declare the type of the function itself (and not its parameters), since the first (and only warning they seen on the CRAN) message is:

<quote>
myzhpevx.cpp:13:16: warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
           void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
</quote>

What I did is the following:

<quote>
void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
      const int *n, Rcomplex *ap, const double *vl,
      const double *vu, const int *il, const int *iu,
      const double *abstol, int *m, double *w,
      Rcomplex *z, const int *ldz, Rcomplex *work, double *rwork,
      int *iwork, int *ifail, int *info,
      FC_LEN_T jobz_len,  FC_LEN_T range_len,  FC_LEN_T uplo_len);

 char cjobz[2];
 strncpy(cjobz, jobz[0], 1);
 cjobz[1] = '\0';
 char crange[2];
 strncpy(crange, range[0], 1);
 crange[1] = '\0';
 char cuplo[2];
 strncpy(cuplo, uplo[0], 1);
 cuplo[1] = '\0';

 F77_CALL(zhpevx)(cjobz, crange, cuplo, &n[0], ap, &vl[0], &vu[0], &il[0], &iu[0], &abstol[0], &m[0],
  w, z, &ldz[0], work, rwork, iwork, ifail, &info[0], strlen(cjobz), strlen(crange), strlen(cuplo));
</quote>

Do you see anything wrong with the above?

Thank you

Best
Pierre

________________________________
From: William Dunlap <wdunlap at tibco.com><mailto:wdunlap at tibco.com>
Sent: Tuesday, 7 July 2020 08:36
To: Pierre Lafaye de Micheaux <lafaye at unsw.edu.au><mailto:lafaye at unsw.edu.au>
Cc: Ivan Krylov <krylov.r00t at gmail.com><mailto:krylov.r00t at gmail.com>; r-package-devel at r-project.org<mailto:r-package-devel at r-project.org> <r-package-devel at r-project.org><mailto:r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]

Have you tried what is recommended in
https://gcc.gnu.org/onlinedocs/gfortran/Argument-passing-conventions.html
?

<quote>
For arguments of CHARACTER type, the character length is passed as a
hidden argument at the end of the argument list. For deferred-length
strings, the value is passed by reference, otherwise by value. The
character length has the C type size_t (or INTEGER(kind=C_SIZE_T) in
Fortran). Note that this is different to older versions of the GNU
Fortran compiler, where the type of the hidden character length
argument was a C int. In order to retain compatibility with older
versions, one can e.g. for the following Fortran procedure

subroutine fstrlen (s, a)
   character(len=*) :: s
   integer :: a
   print*, len(s)
end subroutine fstrlen

define the corresponding C prototype as follows:

#if __GNUC__ > 7
typedef size_t fortran_charlen_t;
#else
typedef int fortran_charlen_t;
#endif

void fstrlen_ (char*, int*, fortran_charlen_t);

In order to avoid such compiler-specific details, for new code it is
instead recommended to use the ISO_C_BINDING feature.

Note with C binding, CHARACTER(len=1) result variables are returned
according to the platform ABI and no hidden length argument is used
for dummy arguments; with VALUE, those variables are passed by value.
</quote>

Bill Dunlap
TIBCO Software
wdunlap tibco.com

Bill Dunlap
TIBCO Software
wdunlap tibco.com


On Mon, Jul 6, 2020 at 3:13 PM Pierre Lafaye de Micheaux
<lafaye at unsw.edu.au><mailto:lafaye at unsw.edu.au> wrote:



Dear Ivan,

Thank you very much for your response.

I do not have more information than the one I gave in my previous email. (And on top of that, the computer I was using with Debian SID, a recent version of gfortran and the last version of R-devel, just broke.)

My problem is that the CRAN team won't accept to publish my package until this WARNING problem is solved. And because I am unable to observe the warning on my side (I could not with the desktop that just broke, and I still can't with my current laptop with Debian 10), I have no clue on how to suppress this warning.

Thank you in advance for any other advice.

Best regards,
Pierre
________________________________
From: Ivan Krylov <krylov.r00t at gmail.com><mailto:krylov.r00t at gmail.com>
Sent: Tuesday, 7 July 2020 06:11
To: Pierre Lafaye de Micheaux <lafaye at unsw.edu.au><mailto:lafaye at unsw.edu.au>
Cc: r-package-devel at r-project.org<mailto:r-package-devel at r-project.org> <r-package-devel at r-project.org><mailto:r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]

On Fri, 3 Jul 2020 00:15:27 +0000
Pierre Lafaye de Micheaux <lafaye at unsw.edu.au><mailto:lafaye at unsw.edu.au> wrote:



Found the following significant warnings:
   myzhpevx.cpp:13:23: warning: type of _zhpevx__ does not match
original declaration [-Wlto-type-mismatch]



I managed to reproduce the warning on R-devel r78607 built with
--enable-lto using gcc version 6.3.0 20170516 (Debian 6.3.0-18+deb9u1):

myzhpevx.cpp:13:16: warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
           void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
                ^
zhpevx.f:232:7: note: type mismatch in parameter 20
       SUBROUTINE zhpevx( JOBZ, RANGE, UPLO, N, AP, VL, VU, IL, IU,
       ^
zhpevx.f:232:7: note: type ?int? should match type ?size_t?
/usr/lib/gcc/x86_64-linux-gnu/6/include/stddef.h:216:23: note: the incompatible type is defined here
 typedef __SIZE_TYPE__ size_t;
                       ^
zhpevx.f:232:7: note: ?zhpevx? was previously declared here
       SUBROUTINE zhpevx( JOBZ, RANGE, UPLO, N, AP, VL, VU, IL, IU,
       ^

Do you have access to the notes produced by the compiler in addition
to the warnings? Do they spell the same difference?

If yes, the warning is likely to be safe to ignore. m4/R.m4 notes that,
while gfortran < 8 uses int instead of size_t for hidden size arguments,
it doesn't make a practical difference.

--
Best regards,
Ivan

        [[alternative HTML version deleted]]

______________________________________________
R-package-devel at r-project.org<mailto:R-package-devel at r-project.org> mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel



        [[alternative HTML version deleted]]





______________________________________________
R-package-devel at r-project.org<mailto:R-package-devel at r-project.org> mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel



-------------- next part --------------
A non-text attachment was scrubbed...
Name: minimalIndependenceTests_0.5.tar.gz
Type: application/gzip
Size: 5821 bytes
Desc: minimalIndependenceTests_0.5.tar.gz
URL: <https://stat.ethz.ch/pipermail/r-package-devel/attachments/20201215/0d21a322/attachment.gz>

From tom@@@k@||ber@ @end|ng |rom gm@||@com  Tue Dec 15 13:01:25 2020
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Tue, 15 Dec 2020 13:01:25 +0100
Subject: [R-pkg-devel] 
 =?utf-8?b?d2FybmluZzogdHlwZSBvZiDigJh6aHBldnhf4oCZ?=
 =?utf-8?q?_does_not_match_original_declaration_=5B-Wlto-type-mismatch=5D?=
In-Reply-To: <SYCPR01MB5278B1DAB3818B36E561CADD93C60@SYCPR01MB5278.ausprd01.prod.outlook.com>
References: <SYCPR01MB527838C6205A60D005883DE6936D0@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <20200706231157.22ed7b92@trisector>
 <SYCPR01MB5278FB70F4C750AE223EDE4093690@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <CAF8bMcYVziRkSZzdo4T2Bt3TeT4ohjpwjDJiutKFXNHDMVve1A@mail.gmail.com>
 <SYCPR01MB5278AD57988A1ED4AD0D24FC93690@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <CAF8bMcY-519pgq0JfjMjgz-Uy6FJx9zeLxrh0ygH=B==DueP+Q@mail.gmail.com>
 <SYCPR01MB5278ACC7379B3608D084B0CD93660@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <5bbb8f87-6ad1-4d3a-69cc-255d452c4023@gmail.com>
 <SYCPR01MB5278B1DAB3818B36E561CADD93C60@SYCPR01MB5278.ausprd01.prod.outlook.com>
Message-ID: <edf96e6f-def6-c4a5-6de1-854f917f84a0@gmail.com>

Dear Pierre,

your code checks fine on my Ubuntu 20.04 (gcc/gfortran 9.3), but I can 
reproduce what you are seeing on Debian 10 with gcc 8.3.

There seem to be two problems.

The first one is that the hidden character length arguments are signed, 
they are of type "long int" (not "size_t"). This is compiler specific 
and can (and does) change between Fortran compiler versions and I think 
you can just ignore it. R assumes the type is "size_t", which happens to 
be correct for newer compilers. The signedness mismatch in this case is 
benign. FC_LEN_T is defined in R, so if anywhere, this would have to be 
fixed in R, but we cannot realistically know what the type is for each 
compiler.

The second problem is that gcc/LTO is complaining about incompatibility 
between Rcomplex and "COMPLEX*16" types. This was rather tedious to 
find, I had to minimize the example for that a bit more (remove the 
Fortran code, just left the subroutine taking the same args, and then 
removing the args one by one - this is what I meant by minimizing the 
example). I don't know why the mismatch is reported. Gcc 9.3 is happy.

I would recommend to use a newer compiler, at least for these checks. 
The warnings have improved (become more informative), you can use 
-fc-prototypes-external to see what the types should be exactly for your 
compiler, and perhaps some of the warnings were false positives and have 
been fixed since.

If you want to stick to the FC_LEN_T and similar macros, I would 
recommend to check how R does it so that the code compiles also when the 
extra hidden length arguments are not used by the compiler. Still, a 
portable way to solve these issues would be via iso_c_binding, with 
FC_LEN_T we are relying on undocumented/not-standardized behavior of the 
compiler.

Best,
Tomas





On 12/15/20 7:56 AM, Pierre Lafaye de Micheaux wrote:
> Dear Tomas,
>
> Apologies for the very long delay.
>
> I was able to create a minimal version of the package (attached) that 
> gives the same exact warnings:
>
> myzhpevx.cpp:22:16: warning: type of ?zhpevx_? does not match original 
> declaration [-Wlto-type-mismatch]
> ? ? ? ? ? ?void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
> ? ? ? ? ? ? ? ? ^
> zhpevx.f:232:14: note: type mismatch in parameter 20
> ? ? ? ?SUBROUTINE zhpevx(JOBZ, RANGE, UPLO, N, AP, VL, VU, IL, IU,
> ? ? ? ? ? ? ? ^
> zhpevx.f:232:14: note: type ?long int? should match type ?size_t?
> zhpevx.f:232:14: note: ?zhpevx? was previously declared here
> zhpevx.f:232:14: note: code may be misoptimized unless 
> -fno-strict-aliasing is used
>
> I am under the impression that I am following quite closely what is 
> written here: 
> https://cran.csiro.au/doc/manuals/r-patched/R-exts.html#Fortran-character-strings
>
> I tried many different things but I always end up with the same main 
> warning (i.e., type of ?zhpevx_? does not match original declaration?).
>
> My version of fortran:?GNU Fortran (Debian 8.3.0-6) 8.3.0 under Debian 10.
>
> Thank you very much for any further help you could provide so that I 
> could have my package back to the CRAN.
>
> Kind regards,
> Pierre L.
>
>
> ------------------------------------------------------------------------
> *From:* Tomas Kalibera <tomas.kalibera at gmail.com>
> *Sent:* Tuesday, 7 July 2020 15:43
> *To:* Pierre Lafaye de Micheaux <lafaye at unsw.edu.au>
> *Cc:* r-package-devel at r-project.org <r-package-devel at r-project.org>
> *Subject:* Re: [R-pkg-devel] warning: type of ?zhpevx_? does not match 
> original declaration [-Wlto-type-mismatch]
> My recommendation would be to try to minimize the example (package) as 
> much as possible so that it still has the problem, and then try to 
> investigate why exactly/where is the type mismatch. This is what 
> helped me debug similar issues - sometimes it was hard to tell from 
> the Fortran warnings where exactly the mismatched declarations were 
> and why they were mismatched.
>
> This process of minimization can already reveal the true source of the 
> problem, and if not, others may try to debug for you using the minimal 
> example. A useful tool is the Fortran option -fc-prototypes-external 
> (see WRE for more details) and I've also used dumps of the compiler 
> tree before (-fdump-tree-all, more in GCC documentation).
>
> Best
> Tomas
>
> On 7/7/20 5:00 AM, Pierre Lafaye de Micheaux wrote:
>> My file myzhpevx.cpp starts with:
>>
>> <quote>
>> #define USE_FC_LEN_T
>> #include <R.h>
>> #include "Rmath.h"
>>
>> #ifdef FC_LEN_T
>> extern "C" {
>>
>>    void zhpevxC(char **jobz, char **range, char **uplo, int *n, Rcomplex *ap,
>>       double *vl, double *vu, int *il, int *iu, double *abstol, int *m,
>>       double *w, Rcomplex *z, int *ldz, Rcomplex *work, double *rwork,
>>       int *iwork, int *ifail, int *info) {
>>
>>            void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
>>        const int *n, Rcomplex *ap, const double *vl,
>>        const double *vu, const int *il, const int *iu,
>>        const double *abstol, int *m, double *w,
>>        Rcomplex *z, const int *ldz, Rcomplex *work, double *rwork,
>>        int *iwork, int *ifail, int *info,
>>        FC_LEN_T jobz_len,  FC_LEN_T range_len,  FC_LEN_T uplo_len);
>> </quote>
>>
>> So if I understand correctly what you are saying, you suggest that FC_LEN_T was not correctly defined by the CRAN team?
>>
>> Should I just write something like (adding the middle instruction below to my existing code above)?:
>>
>> <quote>
>> #ifdef FC_LEN_T
>> typedef long long int FC_LEN_T;
>> extern "C" {
>> </quote>
>>
>> Thank you
>> Pierre
>> ________________________________
>> From: William Dunlap<wdunlap at tibco.com>  <mailto:wdunlap at tibco.com>
>> Sent: Tuesday, 7 July 2020 11:46
>> To: Pierre Lafaye de Micheaux<lafaye at unsw.edu.au>  <mailto:lafaye at unsw.edu.au>
>> Cc: Ivan Krylov<krylov.r00t at gmail.com>  <mailto:krylov.r00t at gmail.com>;r-package-devel at r-project.org  <mailto:r-package-devel at r-project.org>  <r-package-devel at r-project.org>  <mailto:r-package-devel at r-project.org>
>> Subject: Re: [R-pkg-devel] warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
>>
>> With gcc 8.3.0, gfortran 8.3.0, and ld 2.33.1 from the mingw64 part of
>> rtools40 on Windows, if I misdefine the typedef FC_LEN_T and use the
>> -flto flag I get the sort of error messages that you report.
>>
>> c:\tmp\fortran>cat main.c
>> #include <string.h>
>> #include <stdio.h>
>>
>> #ifdef USE_INT
>> typedef int FC_LEN_T;
>> #endif
>> #ifdef USE_LONG
>> typedef long int FC_LEN_T;
>> #endif
>> #ifdef USE_LONG_LONG
>> typedef long long int FC_LEN_T;
>> #endif
>>
>> extern void sub_(char* word, double *ret, FC_LEN_T word_len);
>>
>> int main(int argc, char* argv[])
>> {
>>      if (argc == 2) {
>>          double ret = 3. ;
>>          FC_LEN_T word_len = strlen(argv[1]);
>>          sub_(argv[1], &ret, word_len);
>>          printf("sizeof(FC_LEN_T)=%d, ret=%g\n", (int)(sizeof(FC_LEN_T)), ret);
>>          return 0;
>>      } else {
>>          return -1;
>>      }
>> }
>>
>> c:\tmp\fortran>gcc  -flto -DUSE_INT main.c sub.f -lgfortran
>> main.c:14:13: warning: type of 'sub_' does not match original
>> declaration [-Wlto-type-mismatch]
>>   extern void sub_(char* word, double *ret, FC_LEN_T word_len);
>>               ^
>> sub.f:1:1: note: type mismatch in parameter 3
>>         subroutine sub(word, ret)
>>   ^
>> sub.f:1:1: note: type 'long long int' should match type 'FC_LEN_T'
>> sub.f:1:1: note: 'sub' was previously declared here
>> sub.f:1:1: note: code may be misoptimized unless -fno-strict-aliasing is used
>>
>> c:\tmp\fortran>gcc  -flto -DUSE_LONG main.c sub.f -lgfortran
>> main.c:14:13: warning: type of 'sub_' does not match original
>> declaration [-Wlto-type-mismatch]
>>   extern void sub_(char* word, double *ret, FC_LEN_T word_len);
>>               ^
>> sub.f:1:1: note: type mismatch in parameter 3
>>         subroutine sub(word, ret)
>>   ^
>> sub.f:1:1: note: type 'long long int' should match type 'FC_LEN_T'
>> sub.f:1:1: note: 'sub' was previously declared here
>> sub.f:1:1: note: code may be misoptimized unless -fno-strict-aliasing is used
>>
>> c:\tmp\fortran>gcc  -flto -DUSE_LONG_LONG main.c sub.f -lgfortran
>> <no warnings or notes>
>>
>> Bill Dunlap
>> TIBCO Software
>> wdunlap tibco.com
>>
>> On Mon, Jul 6, 2020 at 4:39 PM Pierre Lafaye de Micheaux
>> <lafaye at unsw.edu.au>  <mailto:lafaye at unsw.edu.au>  wrote:
>>> Hello Bill,
>>>
>>> Thank you for your insight.
>>>
>>> First, my impression, is that the problem comes from how I declare the type of the function itself (and not its parameters), since the first (and only warning they seen on the CRAN) message is:
>>>
>>> <quote>
>>> myzhpevx.cpp:13:16: warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
>>>             void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
>>> </quote>
>>>
>>> What I did is the following:
>>>
>>> <quote>
>>> void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
>>>        const int *n, Rcomplex *ap, const double *vl,
>>>        const double *vu, const int *il, const int *iu,
>>>        const double *abstol, int *m, double *w,
>>>        Rcomplex *z, const int *ldz, Rcomplex *work, double *rwork,
>>>        int *iwork, int *ifail, int *info,
>>>        FC_LEN_T jobz_len,  FC_LEN_T range_len,  FC_LEN_T uplo_len);
>>>
>>>   char cjobz[2];
>>>   strncpy(cjobz, jobz[0], 1);
>>>   cjobz[1] = '\0';
>>>   char crange[2];
>>>   strncpy(crange, range[0], 1);
>>>   crange[1] = '\0';
>>>   char cuplo[2];
>>>   strncpy(cuplo, uplo[0], 1);
>>>   cuplo[1] = '\0';
>>>
>>>   F77_CALL(zhpevx)(cjobz, crange, cuplo, &n[0], ap, &vl[0], &vu[0], &il[0], &iu[0], &abstol[0], &m[0],
>>>    w, z, &ldz[0], work, rwork, iwork, ifail, &info[0], strlen(cjobz), strlen(crange), strlen(cuplo));
>>> </quote>
>>>
>>> Do you see anything wrong with the above?
>>>
>>> Thank you
>>>
>>> Best
>>> Pierre
>>>
>>> ________________________________
>>> From: William Dunlap<wdunlap at tibco.com>  <mailto:wdunlap at tibco.com>
>>> Sent: Tuesday, 7 July 2020 08:36
>>> To: Pierre Lafaye de Micheaux<lafaye at unsw.edu.au>  <mailto:lafaye at unsw.edu.au>
>>> Cc: Ivan Krylov<krylov.r00t at gmail.com>  <mailto:krylov.r00t at gmail.com>;r-package-devel at r-project.org  <mailto:r-package-devel at r-project.org>  <r-package-devel at r-project.org>  <mailto:r-package-devel at r-project.org>
>>> Subject: Re: [R-pkg-devel] warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
>>>
>>> Have you tried what is recommended in
>>> https://gcc.gnu.org/onlinedocs/gfortran/Argument-passing-conventions.html
>>> ?
>>>
>>> <quote>
>>> For arguments of CHARACTER type, the character length is passed as a
>>> hidden argument at the end of the argument list. For deferred-length
>>> strings, the value is passed by reference, otherwise by value. The
>>> character length has the C type size_t (or INTEGER(kind=C_SIZE_T) in
>>> Fortran). Note that this is different to older versions of the GNU
>>> Fortran compiler, where the type of the hidden character length
>>> argument was a C int. In order to retain compatibility with older
>>> versions, one can e.g. for the following Fortran procedure
>>>
>>> subroutine fstrlen (s, a)
>>>     character(len=*) :: s
>>>     integer :: a
>>>     print*, len(s)
>>> end subroutine fstrlen
>>>
>>> define the corresponding C prototype as follows:
>>>
>>> #if __GNUC__ > 7
>>> typedef size_t fortran_charlen_t;
>>> #else
>>> typedef int fortran_charlen_t;
>>> #endif
>>>
>>> void fstrlen_ (char*, int*, fortran_charlen_t);
>>>
>>> In order to avoid such compiler-specific details, for new code it is
>>> instead recommended to use the ISO_C_BINDING feature.
>>>
>>> Note with C binding, CHARACTER(len=1) result variables are returned
>>> according to the platform ABI and no hidden length argument is used
>>> for dummy arguments; with VALUE, those variables are passed by value.
>>> </quote>
>>>
>>> Bill Dunlap
>>> TIBCO Software
>>> wdunlap tibco.com
>>>
>>> Bill Dunlap
>>> TIBCO Software
>>> wdunlap tibco.com
>>>
>>>
>>> On Mon, Jul 6, 2020 at 3:13 PM Pierre Lafaye de Micheaux
>>> <lafaye at unsw.edu.au>  <mailto:lafaye at unsw.edu.au>  wrote:
>>>> Dear Ivan,
>>>>
>>>> Thank you very much for your response.
>>>>
>>>> I do not have more information than the one I gave in my previous email. (And on top of that, the computer I was using with Debian SID, a recent version of gfortran and the last version of R-devel, just broke.)
>>>>
>>>> My problem is that the CRAN team won't accept to publish my package until this WARNING problem is solved. And because I am unable to observe the warning on my side (I could not with the desktop that just broke, and I still can't with my current laptop with Debian 10), I have no clue on how to suppress this warning.
>>>>
>>>> Thank you in advance for any other advice.
>>>>
>>>> Best regards,
>>>> Pierre
>>>> ________________________________
>>>> From: Ivan Krylov<krylov.r00t at gmail.com>  <mailto:krylov.r00t at gmail.com>
>>>> Sent: Tuesday, 7 July 2020 06:11
>>>> To: Pierre Lafaye de Micheaux<lafaye at unsw.edu.au>  <mailto:lafaye at unsw.edu.au>
>>>> Cc:r-package-devel at r-project.org  <mailto:r-package-devel at r-project.org>  <r-package-devel at r-project.org>  <mailto:r-package-devel at r-project.org>
>>>> Subject: Re: [R-pkg-devel] warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
>>>>
>>>> On Fri, 3 Jul 2020 00:15:27 +0000
>>>> Pierre Lafaye de Micheaux<lafaye at unsw.edu.au>  <mailto:lafaye at unsw.edu.au>  wrote:
>>>>
>>>>> Found the following significant warnings:
>>>>>     myzhpevx.cpp:13:23: warning: type of _zhpevx__ does not match
>>>>> original declaration [-Wlto-type-mismatch]
>>>> I managed to reproduce the warning on R-devel r78607 built with
>>>> --enable-lto using gcc version 6.3.0 20170516 (Debian 6.3.0-18+deb9u1):
>>>>
>>>> myzhpevx.cpp:13:16: warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
>>>>             void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
>>>>                  ^
>>>> zhpevx.f:232:7: note: type mismatch in parameter 20
>>>>         SUBROUTINE zhpevx( JOBZ, RANGE, UPLO, N, AP, VL, VU, IL, IU,
>>>>         ^
>>>> zhpevx.f:232:7: note: type ?int? should match type ?size_t?
>>>> /usr/lib/gcc/x86_64-linux-gnu/6/include/stddef.h:216:23: note: the incompatible type is defined here
>>>>   typedef __SIZE_TYPE__ size_t;
>>>>                         ^
>>>> zhpevx.f:232:7: note: ?zhpevx? was previously declared here
>>>>         SUBROUTINE zhpevx( JOBZ, RANGE, UPLO, N, AP, VL, VU, IL, IU,
>>>>         ^
>>>>
>>>> Do you have access to the notes produced by the compiler in addition
>>>> to the warnings? Do they spell the same difference?
>>>>
>>>> If yes, the warning is likely to be safe to ignore. m4/R.m4 notes that,
>>>> while gfortran < 8 uses int instead of size_t for hidden size arguments,
>>>> it doesn't make a practical difference.
>>>>
>>>> --
>>>> Best regards,
>>>> Ivan
>>>>
>>>>          [[alternative HTML version deleted]]
>>>>
>>>> ______________________________________________
>>>> R-package-devel at r-project.org  <mailto:R-package-devel at r-project.org>  mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> 	[[alternative HTML version deleted]]
>>
>>
>> ______________________________________________
>> R-package-devel at r-project.org  <mailto:R-package-devel at r-project.org>  mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>


	[[alternative HTML version deleted]]


From rhe|p @end|ng |rom krueger-|@m||y@de  Tue Dec 15 14:02:03 2020
From: rhe|p @end|ng |rom krueger-|@m||y@de (Knut Krueger)
Date: Tue, 15 Dec 2020 14:02:03 +0100
Subject: [R-pkg-devel] Used package not updated - needs java < V 11
Message-ID: <d49373a8-6df6-7d41-e8b3-5269d0039452@krueger-family.de>

I am using in my Package XlConnect. If the Computer is using Java < 11 
all is working. But if not, the package can not be used.


inside teh functions tehre is an ' @importFrom XLConnect createSheet 
writeWorksheet saveWorkbook

but only used for additional comfort to use excel sheets

The package is usable without XlConnect if I change

Imports:  igraph,chron,gdata, XLConnect
to
Imports:
     igraph,chron,gdata
Suggests:XLConnect

but then I get the error

checking package dependencies ... ERROR
   Namespace dependency not required: ?XLConnect?

Just now the new version is on my private repository and working with or 
without Xlconnect depending on the java version


How can I submit the package to cran  until XlConnect is working with 
java > 11

REgards Knut


From murdoch@dunc@n @end|ng |rom gm@||@com  Tue Dec 15 14:37:29 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Tue, 15 Dec 2020 08:37:29 -0500
Subject: [R-pkg-devel] Used package not updated - needs java < V 11
In-Reply-To: <d49373a8-6df6-7d41-e8b3-5269d0039452@krueger-family.de>
References: <d49373a8-6df6-7d41-e8b3-5269d0039452@krueger-family.de>
Message-ID: <f0a84729-f10c-49ae-3872-efe502faa623@gmail.com>

On 15/12/2020 8:02 a.m., Knut Krueger wrote:
> I am using in my Package XlConnect. If the Computer is using Java < 11
> all is working. But if not, the package can not be used.
> 
> 
> inside teh functions tehre is an ' @importFrom XLConnect createSheet
> writeWorksheet saveWorkbook
> 
> but only used for additional comfort to use excel sheets
> 
> The package is usable without XlConnect if I change
> 
> Imports:  igraph,chron,gdata, XLConnect
> to
> Imports:
>       igraph,chron,gdata
> Suggests:XLConnect
> 
> but then I get the error
> 
> checking package dependencies ... ERROR
>     Namespace dependency not required: ?XLConnect?
> 
> Just now the new version is on my private repository and working with or
> without Xlconnect depending on the java version
> 
> 
> How can I submit the package to cran  until XlConnect is working with
> java > 11

You should not have

@importFrom XLConnect createSheet writeWorksheet saveWorkbook

in your ROxygen comments; that results in an unconditional import. 
Instead, you should use fully qualified calls each time, i.e.

XLConnect::createSheet, XLConnect::writeWorksheet, XLConnect::saveWorkbook

in your code.  You should also wrap every use of those functions in 
checks like

if (requireNamespace("XLConnect")) {
   run code
} else {
   report that you can't run that code
}

and make sure none of your examples or vignettes fail if XLConnect is 
not present.

Duncan Murdoch


From @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org  Tue Dec 15 15:43:51 2020
From: @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org (Spencer Graves)
Date: Tue, 15 Dec 2020 08:43:51 -0600
Subject: [R-pkg-devel] Used package not updated - needs java < V 11
In-Reply-To: <f0a84729-f10c-49ae-3872-efe502faa623@gmail.com>
References: <d49373a8-6df6-7d41-e8b3-5269d0039452@krueger-family.de>
 <f0a84729-f10c-49ae-3872-efe502faa623@gmail.com>
Message-ID: <2649764f-4682-ace1-9d4d-2b860eb738d4@effectivedefense.org>

	 I suggest NOT using "XLConnect".  "sos" now uses WriteXLS.  "Ecfun" 
now uses "openxlsx".


	  Also, I received an email from CRAN maintainers months ago saying 
that "gdata" was being obsoleted.  It's still on CRAN with a date of 
2017-06-06 and a huge number of reverse dependencies.  The CRAN 
maintainers may have gotten someone to agree to take it over who just 
hasn't finished fixing whatever deficiencies it has.  However, you might 
see how difficult it might be to do without "gdata" as well.


	  Spencer Graves


On 2020-12-15 07:37, Duncan Murdoch wrote:
> On 15/12/2020 8:02 a.m., Knut Krueger wrote:
>> I am using in my Package XlConnect. If the Computer is using Java < 11
>> all is working. But if not, the package can not be used.
>>
>>
>> inside teh functions tehre is an ' @importFrom XLConnect createSheet
>> writeWorksheet saveWorkbook
>>
>> but only used for additional comfort to use excel sheets
>>
>> The package is usable without XlConnect if I change
>>
>> Imports:? igraph,chron,gdata, XLConnect
>> to
>> Imports:
>> ????? igraph,chron,gdata
>> Suggests:XLConnect
>>
>> but then I get the error
>>
>> checking package dependencies ... ERROR
>> ??? Namespace dependency not required: ?XLConnect?
>>
>> Just now the new version is on my private repository and working with or
>> without Xlconnect depending on the java version
>>
>>
>> How can I submit the package to cran? until XlConnect is working with
>> java > 11
> 
> You should not have
> 
> @importFrom XLConnect createSheet writeWorksheet saveWorkbook
> 
> in your ROxygen comments; that results in an unconditional import. 
> Instead, you should use fully qualified calls each time, i.e.
> 
> XLConnect::createSheet, XLConnect::writeWorksheet, XLConnect::saveWorkbook
> 
> in your code.? You should also wrap every use of those functions in 
> checks like
> 
> if (requireNamespace("XLConnect")) {
>  ? run code
> } else {
>  ? report that you can't run that code
> }
> 
> and make sure none of your examples or vignettes fail if XLConnect is 
> not present.
> 
> Duncan Murdoch
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From @ch@r@@k@h|t @end|ng |rom gm@||@com  Tue Dec 15 22:37:33 2020
From: @ch@r@@k@h|t @end|ng |rom gm@||@com (Akshit Achara)
Date: Wed, 16 Dec 2020 03:07:33 +0530
Subject: [R-pkg-devel] R CMD check warning on Solaris
Message-ID: <CAJ=u__OHf1hk0xAY18x6mEiPa6YcJm3zfdSLz0NPF4TuVPMcHA@mail.gmail.com>

Hey everyone,

I have created a package rminizinc
<https://cran.r-project.org/package=rminizinc> which is available on CRAN.
I had issues in
my configure script as it was only supporting Linux, OSX and Windows and not
other Unix like OS. I was able to resolve that issue.

I tested my package on R-hub on Oracle Solaris 10, x86, 32 bit, R-release,
Oracle Developer Studio 12.6
and got this warning :

#> Error(s) in re-building vignettes:

#> --- re-building ?R_MiniZinc.Rmd? using rmarkdown

#> Warning in engine$weave(file, quiet = quiet, encoding = enc) :

#> Pandoc (>= 1.12.3) and/or pandoc-citeproc not available. Falling back to
R Markdown v1.

#> *** caught segfault ***

#> address 0, cause 'memory not mapped'

#> Traceback:

#> 1: rminizinc:::mzn_parse(mzn_path = mzn_path)

#> 2: eval(expr, envir, enclos)

#> 3: eval(expr, envir, enclos)

#> 4: withVisible(eval(expr, envir, enclos))

#> 5: withCallingHandlers(withVisible(eval(expr, envir, enclos)), warning =
wHandler, error = eHandler, message = mHandler)

#> 6: doTryCatch(return(expr), name, parentenv, handler)

#> 7: tryCatchOne(expr, names, parentenv, handlers[[1L]])

#> 8: tryCatchList(expr, classes, parentenv, handlers)

#> 9: tryCatch(expr, error = function(e) { call <- conditionCall(e) if
(!is.null(call)) { if (identical(call[[1L]], quote(doTryCatch))) call <-
sys.call(-4L) dcall <- deparse(call)[1L] prefix <- paste("Error in", dcall,
": ") LONG <- 75L sm <- strsplit(conditionMessage(e), "\n")[[1L]] w <- 14L
+ nchar(dcall, type = "w") + nchar(sm[1L], type = "w") if (is.na(w)) w <-
14L + nchar(dcall, type = "b") + nchar(sm[1L], type = "b") if (w > LONG)
prefix <- paste0(prefix, "\n ") } else prefix <- "Error : " msg <-
paste0(prefix, conditionMessage(e), "\n") .Internal(seterrmessage(msg[1L]))
if (!silent && isTRUE(getOption("show.error.messages"))) { cat(msg, file =
outFile) .Internal(printDeferredWarnings()) } invisible(structure(msg,
class = "try-error", condition = e))})

#> 10: try(f, silent = TRUE)

#> 11: handle(ev <- withCallingHandlers(withVisible(eval(expr, envir,
enclos)), warning = wHandler, error = eHandler, message = mHandler))

#> 12: timing_fn(handle(ev <- withCallingHandlers(withVisible(eval(expr,
envir, enclos)), warning = wHandler, error = eHandler, message = mHandler)))

#> 13: evaluate_call(expr, parsed$src[[i]], envir = envir, enclos = enclos,
debug = debug, last = i == length(out), use_try = stop_on_error != 2L,
keep_warning = keep_warning, keep_message = keep_message, output_handler =
output_handler, include_timing = include_timing)

#> 14: evaluate::evaluate(...)

#> 15: evaluate(code, envir = env, new_device = FALSE, keep_warning =
!isFALSE(options$warning), keep_message = !isFALSE(options$message),
stop_on_error = if (options$error && options$include) 0L else 2L,
output_handler = knit_handlers(options$render, options))

#> 16: in_dir(input_dir(), evaluate(code, envir = env, new_device = FALSE,
keep_warning = !isFALSE(options$warning), keep_message =
!isFALSE(options$message), stop_on_error = if (options$error &&
options$include) 0L else 2L, output_handler = knit_handlers(options$render,
options)))

#> 17: block_exec(params)

#> 18: call_block(x)

#> 19: process_group.block(group)

#> 20: process_group(group)

#> 21: withCallingHandlers(if (tangle) process_tangle(group) else
process_group(group), error = function(e) { setwd(wd) cat(res, sep = "\n",
file = output %n% "") message("Quitting from lines ",
paste(current_lines(i), collapse = "-"), " (", knit_concord$get("infile"),
") ") })

#> 22: process_file(text, output)

#> 23: knit(input, text = text, envir = envir, quiet = quiet)

#> 24: knit2html(..., force_v1 = TRUE)

#> 25: (if (grepl("\\.[Rr]md$", file)) knit2html_v1 else if
(grepl("\\.[Rr]rst$", file)) knit2pandoc else knit)(file, encoding =
encoding, quiet = quiet, envir = globalenv(), ...)

#> 26: vweave(...)

#> 27: engine$weave(file, quiet = quiet, encoding = enc)

#> 28: doTryCatch(return(expr), name, parentenv, handler)

#> 29: tryCatchOne(expr, names, parentenv, handlers[[1L]])

#> 30: tryCatchList(expr, classes, parentenv, handlers)

#> 31: tryCatch({ engine$weave(file, quiet = quiet, encoding = enc)
setwd(startdir) output <- find_vignette_product(name, by = "weave", engine
= engine) if (!have.makefile && vignette_is_tex(output)) { texi2pdf(file =
output, clean = FALSE, quiet = quiet) output <- find_vignette_product(name,
by = "texi2pdf", engine = engine) } outputs <- c(outputs, output)}, error =
function(e) { thisOK <<- FALSE fails <<- c(fails, file)
message(gettextf("Error: processing vignette '%s' failed with
diagnostics:\n%s", file, conditionMessage(e)))})

#> 32: tools:::buildVignettes(dir =
"/export/home/XvmX59V/rminizinc.Rcheck/vign_test/rminizinc", ser_elibs =
"/export/home/XvmX59V/Rtemp/RtmpFgaaxZ/file66b85b0113ad.rds")

#> An irrecoverable exception occurred. R is aborting now ...


I think this warning is coming because of the compiler 'Oracle Developer
Studio 12.6' and I
was not getting this warning on other operating systems (including the
Oracle Solaris 10, x86, 32 bit, R-release).

It would be great if you could please give suggestions on how to resolve
this warning. It will
help me to resubmit the package.

Thanks,
Akshit Achara

	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Tue Dec 15 23:47:39 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Tue, 15 Dec 2020 17:47:39 -0500
Subject: [R-pkg-devel] R CMD check warning on Solaris
In-Reply-To: <CAJ=u__OHf1hk0xAY18x6mEiPa6YcJm3zfdSLz0NPF4TuVPMcHA@mail.gmail.com>
References: <CAJ=u__OHf1hk0xAY18x6mEiPa6YcJm3zfdSLz0NPF4TuVPMcHA@mail.gmail.com>
Message-ID: <abca27f1-9894-f80e-8482-a7a52cbff7af@gmail.com>

On 15/12/2020 4:37 p.m., Akshit Achara wrote:
> Hey everyone,
> 
> I have created a package rminizinc
> <https://cran.r-project.org/package=rminizinc> which is available on CRAN.
> I had issues in
> my configure script as it was only supporting Linux, OSX and Windows and not
> other Unix like OS. I was able to resolve that issue.
> 
> I tested my package on R-hub on Oracle Solaris 10, x86, 32 bit, R-release,
> Oracle Developer Studio 12.6
> and got this warning :
> 
> #> Error(s) in re-building vignettes:
> 
> #> --- re-building ?R_MiniZinc.Rmd? using rmarkdown
> 
> #> Warning in engine$weave(file, quiet = quiet, encoding = enc) :
> 
> #> Pandoc (>= 1.12.3) and/or pandoc-citeproc not available. Falling back to
> R Markdown v1.
> 
> #> *** caught segfault ***
> 
> #> address 0, cause 'memory not mapped'
> 
> #> Traceback:
> 
> #> 1: rminizinc:::mzn_parse(mzn_path = mzn_path)
> 
> #> 2: eval(expr, envir, enclos)
> 
> #> 3: eval(expr, envir, enclos)
> 
> #> 4: withVisible(eval(expr, envir, enclos))
> 
> #> 5: withCallingHandlers(withVisible(eval(expr, envir, enclos)), warning =
> wHandler, error = eHandler, message = mHandler)
> 
> #> 6: doTryCatch(return(expr), name, parentenv, handler)
> 
> #> 7: tryCatchOne(expr, names, parentenv, handlers[[1L]])
> 
> #> 8: tryCatchList(expr, classes, parentenv, handlers)
> 
> #> 9: tryCatch(expr, error = function(e) { call <- conditionCall(e) if
> (!is.null(call)) { if (identical(call[[1L]], quote(doTryCatch))) call <-
> sys.call(-4L) dcall <- deparse(call)[1L] prefix <- paste("Error in", dcall,
> ": ") LONG <- 75L sm <- strsplit(conditionMessage(e), "\n")[[1L]] w <- 14L
> + nchar(dcall, type = "w") + nchar(sm[1L], type = "w") if (is.na(w)) w <-
> 14L + nchar(dcall, type = "b") + nchar(sm[1L], type = "b") if (w > LONG)
> prefix <- paste0(prefix, "\n ") } else prefix <- "Error : " msg <-
> paste0(prefix, conditionMessage(e), "\n") .Internal(seterrmessage(msg[1L]))
> if (!silent && isTRUE(getOption("show.error.messages"))) { cat(msg, file =
> outFile) .Internal(printDeferredWarnings()) } invisible(structure(msg,
> class = "try-error", condition = e))})
> 
> #> 10: try(f, silent = TRUE)
> 
> #> 11: handle(ev <- withCallingHandlers(withVisible(eval(expr, envir,
> enclos)), warning = wHandler, error = eHandler, message = mHandler))
> 
> #> 12: timing_fn(handle(ev <- withCallingHandlers(withVisible(eval(expr,
> envir, enclos)), warning = wHandler, error = eHandler, message = mHandler)))
> 
> #> 13: evaluate_call(expr, parsed$src[[i]], envir = envir, enclos = enclos,
> debug = debug, last = i == length(out), use_try = stop_on_error != 2L,
> keep_warning = keep_warning, keep_message = keep_message, output_handler =
> output_handler, include_timing = include_timing)
> 
> #> 14: evaluate::evaluate(...)
> 
> #> 15: evaluate(code, envir = env, new_device = FALSE, keep_warning =
> !isFALSE(options$warning), keep_message = !isFALSE(options$message),
> stop_on_error = if (options$error && options$include) 0L else 2L,
> output_handler = knit_handlers(options$render, options))
> 
> #> 16: in_dir(input_dir(), evaluate(code, envir = env, new_device = FALSE,
> keep_warning = !isFALSE(options$warning), keep_message =
> !isFALSE(options$message), stop_on_error = if (options$error &&
> options$include) 0L else 2L, output_handler = knit_handlers(options$render,
> options)))
> 
> #> 17: block_exec(params)
> 
> #> 18: call_block(x)
> 
> #> 19: process_group.block(group)
> 
> #> 20: process_group(group)
> 
> #> 21: withCallingHandlers(if (tangle) process_tangle(group) else
> process_group(group), error = function(e) { setwd(wd) cat(res, sep = "\n",
> file = output %n% "") message("Quitting from lines ",
> paste(current_lines(i), collapse = "-"), " (", knit_concord$get("infile"),
> ") ") })
> 
> #> 22: process_file(text, output)
> 
> #> 23: knit(input, text = text, envir = envir, quiet = quiet)
> 
> #> 24: knit2html(..., force_v1 = TRUE)
> 
> #> 25: (if (grepl("\\.[Rr]md$", file)) knit2html_v1 else if
> (grepl("\\.[Rr]rst$", file)) knit2pandoc else knit)(file, encoding =
> encoding, quiet = quiet, envir = globalenv(), ...)
> 
> #> 26: vweave(...)
> 
> #> 27: engine$weave(file, quiet = quiet, encoding = enc)
> 
> #> 28: doTryCatch(return(expr), name, parentenv, handler)
> 
> #> 29: tryCatchOne(expr, names, parentenv, handlers[[1L]])
> 
> #> 30: tryCatchList(expr, classes, parentenv, handlers)
> 
> #> 31: tryCatch({ engine$weave(file, quiet = quiet, encoding = enc)
> setwd(startdir) output <- find_vignette_product(name, by = "weave", engine
> = engine) if (!have.makefile && vignette_is_tex(output)) { texi2pdf(file =
> output, clean = FALSE, quiet = quiet) output <- find_vignette_product(name,
> by = "texi2pdf", engine = engine) } outputs <- c(outputs, output)}, error =
> function(e) { thisOK <<- FALSE fails <<- c(fails, file)
> message(gettextf("Error: processing vignette '%s' failed with
> diagnostics:\n%s", file, conditionMessage(e)))})
> 
> #> 32: tools:::buildVignettes(dir =
> "/export/home/XvmX59V/rminizinc.Rcheck/vign_test/rminizinc", ser_elibs =
> "/export/home/XvmX59V/Rtemp/RtmpFgaaxZ/file66b85b0113ad.rds")
> 
> #> An irrecoverable exception occurred. R is aborting now ...
> 
> 
> I think this warning is coming because of the compiler 'Oracle Developer
> Studio 12.6' and I
> was not getting this warning on other operating systems (including the
> Oracle Solaris 10, x86, 32 bit, R-release).
> 
> It would be great if you could please give suggestions on how to resolve
> this warning. It will
> help me to resubmit the package.

Add a test to see whether Pandoc (of a sufficient version) is available. 
  If it isn't, your vignettes shouldn't try to execute any code.  Here's 
the test I use in rgl:

   if (!requireNamespace("rmarkdown") || 
!rmarkdown::pandoc_available("1.14")) {
     warning(call. = FALSE, "These vignettes assume rmarkdown and pandoc 
version 1.14.  These were not found. Older versions will not work.")
     knitr::knit_exit()
   }

This results in very short vignettes on systems that can't produce them, 
but since tar.gz files include the vignettes produced on my system, this 
shouldn't be a big problem.

You should also list the Pandoc requirement as a system requirement in 
your Description file, e.g.

   SystemRequirements: pandoc (>=1.14, needed for vignettes)

You may have other errors; the Pandoc issue probably wouldn't cause a 
segfault.  But if the wrong version of rmarkdown isn't used, all bets 
are off.

Duncan Murdoch


From Kr|@t|n@P||kk| @end|ng |rom @|u@@e  Wed Dec 16 08:12:04 2020
From: Kr|@t|n@P||kk| @end|ng |rom @|u@@e (Kristin Piikki)
Date: Wed, 16 Dec 2020 07:12:04 +0000
Subject: [R-pkg-devel] FW: [CRAN-pretest-archived] CRAN submission
 valmetrics 1.0.0
References: <20201215145420.0FEAA162EA5@xmpalantir.wu.ac.at>
 <01d6d2f5$Blat.v3.2.16$d8388bd3$3dfbfc319@mail.statistik.tu-dortmund.de>  
Message-ID: <06327abf2d2f4dfa8bbb8995cd225765@EXCH2-1.slu.se>

Dear R package developers,
I have been trying a lot but I do not seem to find a solution to the problems with this new package (please see below and attached). It seems related to the building of the vignette. I would be very grateful if anyone could provide some advice.
Kind regards,
Kristin

-----Original Message-----
From: ligges at statistik.tu-dortmund.de <ligges at statistik.tu-dortmund.de>
Sent: den 15 december 2020 16:21
To: Kristin Piikki <Kristin.Piikki at slu.se>
Cc: CRAN-submissions at R-project.org
Subject: [CRAN-pretest-archived] CRAN submission valmetrics 1.0.0

Dear maintainer,

package valmetrics_1.0.0.tar.gz does not pass the incoming checks automatically, please see the following pre-tests:
Windows: <https://win-builder.r-project.org/incoming_pretest/valmetrics_1.0.0_20201215_155420/Windows/00check.log>
Status: 1 ERROR, 1 WARNING, 1 NOTE
Debian: <https://win-builder.r-project.org/incoming_pretest/valmetrics_1.0.0_20201215_155420/Debian/00check.log>
Status: 1 NOTE



Please fix all problems and resubmit a fixed version via the webform.
If you are not sure how to fix the problems shown, please ask for help on the R-package-devel mailing list:
<https://stat.ethz.ch/mailman/listinfo/r-package-devel>
If you are fairly certain the rejection is a false positive, please reply-all to this message and explain.

More details are given in the directory:
<https://win-builder.r-project.org/incoming_pretest/valmetrics_1.0.0_20201215_155420/>
The files will be removed after roughly 7 days.

No strong reverse dependencies to be checked.

Best regards,
CRAN teams' auto-check service
---
N?r du skickar e-post till SLU s? inneb?r detta att SLU behandlar dina personuppgifter. F?r att l?sa mer om hur detta g?r till, klicka h?r <https://www.slu.se/om-slu/kontakta-slu/personuppgifter/>
E-mailing SLU will result in SLU processing your personal data. For more information on how this is done, click here <https://www.slu.se/en/about-slu/contact-slu/personal-data/>

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: 00details.log
URL: <https://stat.ethz.ch/pipermail/r-package-devel/attachments/20201216/c47c5a23/attachment.log>

From kry|ov@r00t @end|ng |rom gm@||@com  Wed Dec 16 09:56:56 2020
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Wed, 16 Dec 2020 11:56:56 +0300
Subject: [R-pkg-devel] FW: [CRAN-pretest-archived] CRAN submission
 valmetrics 1.0.0
In-Reply-To: <06327abf2d2f4dfa8bbb8995cd225765@EXCH2-1.slu.se>
References: <20201215145420.0FEAA162EA5@xmpalantir.wu.ac.at>
 <01d6d2f5$Blat.v3.2.16$d8388bd3$3dfbfc319@mail.statistik.tu-dortmund.de>
 <06327abf2d2f4dfa8bbb8995cd225765@EXCH2-1.slu.se>
Message-ID: <20201216115656.39181559@Tarkus>

On Wed, 16 Dec 2020 07:12:04 +0000
Kristin Piikki <Kristin.Piikki at slu.se> wrote:

> Check: PDF version of manual, Result: WARNING
>   LaTeX errors when creating PDF version.
>   This typically indicates Rd problems.
>   LaTeX errors found:
>   ! Package inputenc Error: Unicode char ??? (U+2010)
>   (inputenc)                not set up for use with LaTeX.

This means that some of your man/*.Rd files contain UTF-8 characters
that LaTeX isn't ready to accept. Use tools::showNonASCIIfile on those
files to find out where the non-ASCII hyphen is hiding.

Does https://win-builder.r-project.org/ catch this problem when you
submit your package there, too?

-- 
Best regards,
Ivan


From @ch@r@@k@h|t @end|ng |rom gm@||@com  Wed Dec 16 13:53:38 2020
From: @ch@r@@k@h|t @end|ng |rom gm@||@com (Akshit Achara)
Date: Wed, 16 Dec 2020 18:23:38 +0530
Subject: [R-pkg-devel] R CMD check warning on Solaris
Message-ID: <CAJ=u__POhzaeLW+eZ65cLMVv5LEqom9mz91mMGM_oBPdibDaQg@mail.gmail.com>

Dear Duncan,

Thanks for your detailed answer.

Adding a test for checking the pandoc version resolves
the issues. That was precisely what I needed.

I have also added it to the SystemRequirements field,
thanks for the suggestion.

Thanks,
Akshit Achara

	[[alternative HTML version deleted]]


From @eb@meyer @end|ng |rom |@u@de  Wed Dec 16 15:38:39 2020
From: @eb@meyer @end|ng |rom |@u@de (Sebastian Meyer)
Date: Wed, 16 Dec 2020 15:38:39 +0100
Subject: [R-pkg-devel] FW: [CRAN-pretest-archived] CRAN submission
 valmetrics 1.0.0
In-Reply-To: <06327abf2d2f4dfa8bbb8995cd225765@EXCH2-1.slu.se>
References: <20201215145420.0FEAA162EA5@xmpalantir.wu.ac.at>
 <01d6d2f5$Blat.v3.2.16$d8388bd3$3dfbfc319@mail.statistik.tu-dortmund.de>
 <06327abf2d2f4dfa8bbb8995cd225765@EXCH2-1.slu.se>
Message-ID: <5c51e13f-d522-f0c6-c8e1-faae5912eb8b@fau.de>

In the check log, I see

> * package encoding: UTF-8
> [...]
> * checking PDF version of manual ... WARNING
> LaTeX errors when creating PDF version.
> This typically indicates Rd problems.
> LaTeX errors found:
> ! Package inputenc Error: Unicode char ? (U+2010)
> (inputenc)                not set up for use with LaTeX.

I can reproduce this warning with a minimal test package with an Rd file
containing the Unicode hyphen "?" (U+2010), which is different from
ASCII-compatible hyphen-minus "-" (U+002D), though not visibly ...
>From Wikipedia (https://en.wikipedia.org/wiki/Hyphen):

> In Unicode, the hyphen-minus is encoded as U+002D - so that Unicode remains compatible with ASCII. Unicode also encodes the hyphen and minus separately, as U+2010 ? and U+2212 ? respectively.

The problematic hyphen probably arose from copy-pasting text from the
browser (which I just did for testing) or an office application into the
package documentation.

You can find non-ASCII characters in your Rd files using, e.g.,
tools::showNonASCIIfile("file.Rd"). For my test file, this gives:

> tools::showNonASCIIfile("test.Rd")
7: \description{test <e2><80><90> test}

In many text editors, the character between "test" and "test" is
displayed just like a standard ASCII hyphen-minus. In my Emacs it is
shown in red, though, and in RStudio it looks slightly different than
the ASCII minus (but hard to recognize if you don't know).

You could apply the above function to all of "man" using, e.g.,

lapply(list.files("man", full.names=TRUE), tools::showNonASCIIfile)

at the root of your package and look for "<e2><80><90>" in the result.

Hope this helps.
Best regards,

	Sebastian Meyer


Am 16.12.20 um 08:12 schrieb Kristin Piikki:
> Dear R package developers,
> I have been trying a lot but I do not seem to find a solution to the problems with this new package (please see below and attached). It seems related to the building of the vignette. I would be very grateful if anyone could provide some advice.
> Kind regards,
> Kristin
> 
> -----Original Message-----
> From: ligges at statistik.tu-dortmund.de <ligges at statistik.tu-dortmund.de>
> Sent: den 15 december 2020 16:21
> To: Kristin Piikki <Kristin.Piikki at slu.se>
> Cc: CRAN-submissions at R-project.org
> Subject: [CRAN-pretest-archived] CRAN submission valmetrics 1.0.0
> 
> Dear maintainer,
> 
> package valmetrics_1.0.0.tar.gz does not pass the incoming checks automatically, please see the following pre-tests:
> Windows: <https://win-builder.r-project.org/incoming_pretest/valmetrics_1.0.0_20201215_155420/Windows/00check.log>
> Status: 1 ERROR, 1 WARNING, 1 NOTE
> Debian: <https://win-builder.r-project.org/incoming_pretest/valmetrics_1.0.0_20201215_155420/Debian/00check.log>
> Status: 1 NOTE
> 
> 
> 
> Please fix all problems and resubmit a fixed version via the webform.
> If you are not sure how to fix the problems shown, please ask for help on the R-package-devel mailing list:
> <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
> If you are fairly certain the rejection is a false positive, please reply-all to this message and explain.
> 
> More details are given in the directory:
> <https://win-builder.r-project.org/incoming_pretest/valmetrics_1.0.0_20201215_155420/>
> The files will be removed after roughly 7 days.
> 
> No strong reverse dependencies to be checked.
> 
> Best regards,
> CRAN teams' auto-check service
> ---
> N?r du skickar e-post till SLU s? inneb?r detta att SLU behandlar dina personuppgifter. F?r att l?sa mer om hur detta g?r till, klicka h?r <https://www.slu.se/om-slu/kontakta-slu/personuppgifter/>
> E-mailing SLU will result in SLU processing your personal data. For more information on how this is done, click here <https://www.slu.se/en/about-slu/contact-slu/personal-data/>
> 
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From rhe|p @end|ng |rom krueger-|@m||y@de  Wed Dec 16 16:15:42 2020
From: rhe|p @end|ng |rom krueger-|@m||y@de (Knut Krueger)
Date: Wed, 16 Dec 2020 16:15:42 +0100
Subject: [R-pkg-devel] Used package not updated - needs java < V 11
In-Reply-To: <2649764f-4682-ace1-9d4d-2b860eb738d4@effectivedefense.org>
References: <d49373a8-6df6-7d41-e8b3-5269d0039452@krueger-family.de>
 <f0a84729-f10c-49ae-3872-efe502faa623@gmail.com>
 <2649764f-4682-ace1-9d4d-2b860eb738d4@effectivedefense.org>
Message-ID: <ecf1a61d-8504-7645-4f42-26efe6a76ee2@krueger-family.de>

Thank you for your answer,

I tested  WriteXLS and openxlsx ... but it is perl based and most of the 
Windows user do not have perl installed.
Therefore I would change the missing XlConnect with missing Perl 
library. And that is more complicated, because the user has to add 
something on operating system level. No chance f.e on University cip 
pools and users unfamiliar with operating systems at all

-> gdata - I will check how to change it

Thank you Knut

Am 15.12.20 um 15:43 schrieb Spencer Graves:
>  ???? I suggest NOT using "XLConnect".? "sos" now uses WriteXLS.  
> "Ecfun" now uses "openxlsx".
> 
> 
>  ????? Also, I received an email from CRAN maintainers months ago saying 
> that "gdata" was being obsoleted.? It's still on CRAN with a date of 
> 2017-06-06 and a huge number of reverse dependencies.? The CRAN 
> maintainers may have gotten someone to agree to take it over who just 
> hasn't finished fixing whatever deficiencies it has.? However, you might 
> see how difficult it might be to do without "gdata" as well.
> 
> 
>  ????? Spencer Graves
> 
>


From rhe|p @end|ng |rom krueger-|@m||y@de  Wed Dec 16 16:21:10 2020
From: rhe|p @end|ng |rom krueger-|@m||y@de (Knut Krueger)
Date: Wed, 16 Dec 2020 16:21:10 +0100
Subject: [R-pkg-devel] Used package not updated - needs java < V 11
In-Reply-To: <f0a84729-f10c-49ae-3872-efe502faa623@gmail.com>
References: <d49373a8-6df6-7d41-e8b3-5269d0039452@krueger-family.de>
 <f0a84729-f10c-49ae-3872-efe502faa623@gmail.com>
Message-ID: <0e5d1ba5-290c-cd17-2f94-408e053270fe@krueger-family.de>

Am 15.12.20 um 14:37 schrieb Duncan Murdoch:

thank you for your answer

> You should not have
> 
> @importFrom XLConnect createSheet writeWorksheet saveWorkbook
> 
> in your ROxygen comments; that results in an unconditional import. 
> Instead, you should use fully qualified calls each time, i.e.
> 
> XLConnect::createSheet, XLConnect::writeWorksheet, XLConnect::saveWorkbook
> 

#' @importFrom XLConnect::createSheet, XLConnect::writeWorksheet, 
XLConnect::saveWorkbook

This causes the error "there is no package called ?XLConnect::createSheet,?"

Regards Knut


From murdoch@dunc@n @end|ng |rom gm@||@com  Wed Dec 16 16:57:40 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Wed, 16 Dec 2020 10:57:40 -0500
Subject: [R-pkg-devel] Used package not updated - needs java < V 11
In-Reply-To: <0e5d1ba5-290c-cd17-2f94-408e053270fe@krueger-family.de>
References: <d49373a8-6df6-7d41-e8b3-5269d0039452@krueger-family.de>
 <f0a84729-f10c-49ae-3872-efe502faa623@gmail.com>
 <0e5d1ba5-290c-cd17-2f94-408e053270fe@krueger-family.de>
Message-ID: <56b20173-4056-2d83-2512-33ee65ff238f@gmail.com>

On 16/12/2020 10:21 a.m., Knut Krueger wrote:
> Am 15.12.20 um 14:37 schrieb Duncan Murdoch:
> 
> thank you for your answer
> 
>> You should not have
>>
>> @importFrom XLConnect createSheet writeWorksheet saveWorkbook
>>
>> in your ROxygen comments; that results in an unconditional import.
>> Instead, you should use fully qualified calls each time, i.e.
>>
>> XLConnect::createSheet, XLConnect::writeWorksheet, XLConnect::saveWorkbook
>>
> 
> #' @importFrom XLConnect::createSheet, XLConnect::writeWorksheet,
> XLConnect::saveWorkbook
> 
> This causes the error "there is no package called ?XLConnect::createSheet,?"

No, you should drop the @importFrom comment completely, and in your R 
code use those fully qualified forms.

Duncan Murdoch


From c@g|||e@p|e @end|ng |rom gm@||@com  Wed Dec 16 17:28:15 2020
From: c@g|||e@p|e @end|ng |rom gm@||@com (Colin Gillespie)
Date: Wed, 16 Dec 2020 16:28:15 +0000
Subject: [R-pkg-devel] Accessing features in R4.0.
Message-ID: <CADbDLZmZBF0VWp4VyAxmoKRgBfKeCjyKdrM3YipCLE49E-7NHg@mail.gmail.com>

Hi,

I'm planning on using the tools::R_user_dir function in a package. But
for obvious reasons, I don't want to set the dependency on R 4.

My code is basically

if (as.numeric(R.version$major) < 4) # do something
else tools::R_user_dir("oysteR", which = "cache")

When checking on win-builder R3.6 I get the note

* checking dependencies in R code ... NOTE
Missing or unexported object: 'tools::R_user_dir'

## Question

Is my code correct and can I ignore this note?

Thanks

Colin


Dr Colin Gillespie
http://www.mas.ncl.ac.uk/~ncsg3/


From brod|e@g@@|@m @end|ng |rom y@hoo@com  Wed Dec 16 17:39:20 2020
From: brod|e@g@@|@m @end|ng |rom y@hoo@com (brodie gaslam)
Date: Wed, 16 Dec 2020 16:39:20 +0000 (UTC)
Subject: [R-pkg-devel] Accessing features in R4.0.
In-Reply-To: <CADbDLZmZBF0VWp4VyAxmoKRgBfKeCjyKdrM3YipCLE49E-7NHg@mail.gmail.com>
References: <CADbDLZmZBF0VWp4VyAxmoKRgBfKeCjyKdrM3YipCLE49E-7NHg@mail.gmail.com>
Message-ID: <1684052322.1406571.1608136760276@mail.yahoo.com>

I don't know if this will work in your case (or even if it is a good
or bad thing to do), but backports conditionally exports the function
in question, e.g.:

https://github.com/r-lib/backports/blob/master/R/lengths.R

So in that example their implementation of a function not available
in R < 3.2.0 is presumably only exported for those versions of R.
You could try something similar, although I make no guarantees
on whether this is considered proper or not.? It _seems_ like
a clean solution to me, but I have no experience putting any
logic in the namespace file.

WRE does show something very similar, so this might be okay:

https://cran.r-project.org/doc/manuals/R-exts.html#Registering-S3-methods

Best,

B.



On Wednesday, December 16, 2020, 11:29:08 AM EST, Colin Gillespie <csgillespie at gmail.com> wrote: 





Hi,

I'm planning on using the tools::R_user_dir function in a package. But
for obvious reasons, I don't want to set the dependency on R 4.

My code is basically

if (as.numeric(R.version$major) < 4) # do something
else tools::R_user_dir("oysteR", which = "cache")

When checking on win-builder R3.6 I get the note

* checking dependencies in R code ... NOTE
Missing or unexported object: 'tools::R_user_dir'

## Question

Is my code correct and can I ignore this note?

Thanks

Colin


Dr Colin Gillespie
http://www.mas.ncl.ac.uk/~ncsg3/

______________________________________________
R-package-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel


From n|u|tz @end|ng |rom gm@||@com  Wed Dec 16 18:00:26 2020
From: n|u|tz @end|ng |rom gm@||@com (Neal Fultz)
Date: Wed, 16 Dec 2020 09:00:26 -0800
Subject: [R-pkg-devel] Accessing features in R4.0.
In-Reply-To: <CADbDLZmZBF0VWp4VyAxmoKRgBfKeCjyKdrM3YipCLE49E-7NHg@mail.gmail.com>
References: <CADbDLZmZBF0VWp4VyAxmoKRgBfKeCjyKdrM3YipCLE49E-7NHg@mail.gmail.com>
Message-ID: <CAL9B2vd1FozSqJeAO5AKzLoBDRk=iBgm+Zz6ayEV9DLx_gxbDw@mail.gmail.com>

IIRC some packages use get() instead of double-colon to suppress the NOTE.

I would probably ignore it myself.

On Wed, Dec 16, 2020 at 8:29 AM Colin Gillespie <csgillespie at gmail.com> wrote:
>
> Hi,
>
> I'm planning on using the tools::R_user_dir function in a package. But
> for obvious reasons, I don't want to set the dependency on R 4.
>
> My code is basically
>
> if (as.numeric(R.version$major) < 4) # do something
> else tools::R_user_dir("oysteR", which = "cache")
>
> When checking on win-builder R3.6 I get the note
>
> * checking dependencies in R code ... NOTE
> Missing or unexported object: 'tools::R_user_dir'
>
> ## Question
>
> Is my code correct and can I ignore this note?
>
> Thanks
>
> Colin
>
>
> Dr Colin Gillespie
> http://www.mas.ncl.ac.uk/~ncsg3/
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From @eb@meyer @end|ng |rom |@u@de  Wed Dec 16 19:07:23 2020
From: @eb@meyer @end|ng |rom |@u@de (Sebastian Meyer)
Date: Wed, 16 Dec 2020 19:07:23 +0100
Subject: [R-pkg-devel] Accessing features in R4.0.
In-Reply-To: <CAL9B2vd1FozSqJeAO5AKzLoBDRk=iBgm+Zz6ayEV9DLx_gxbDw@mail.gmail.com>
References: <CADbDLZmZBF0VWp4VyAxmoKRgBfKeCjyKdrM3YipCLE49E-7NHg@mail.gmail.com>
 <CAL9B2vd1FozSqJeAO5AKzLoBDRk=iBgm+Zz6ayEV9DLx_gxbDw@mail.gmail.com>
Message-ID: <b1c56918-df92-aa9e-6693-915356d7713d@fau.de>

Am 16.12.20 um 18:00 schrieb Neal Fultz:
> IIRC some packages use get() instead of double-colon to suppress the NOTE.

I'd discourage from using get() because you could (accidentally) access
even unexported objects from another namespace. There is

getExportedValue(ns, name)

to avoid that. However, its help page describes it as an internal
function, so I'm not sure if that would be any better. "::" access is
also faster, especially as of the next version of R.

Of course, such workarounds should be used with great care as these
checks are usually very valuable to guard against coding errors or warn
about potential changes in the other package's API.

> I would probably ignore it myself.

Yes. FWIW, conditional use of tools::R_user_dir() is allowed according
to the CRAN repository policy:

> For R version 4.0 or later (hence a version dependency is required or only conditional use is possible), packages may store user-specific data, configuration and cache files in their respective user directories obtained from tools::R_user_dir(), provided that by default sizes are kept as small as possible and the contents are actively managed (including removing outdated material). 

Best regards,

	Sebastian Meyer


> 
> On Wed, Dec 16, 2020 at 8:29 AM Colin Gillespie <csgillespie at gmail.com> wrote:
>>
>> Hi,
>>
>> I'm planning on using the tools::R_user_dir function in a package. But
>> for obvious reasons, I don't want to set the dependency on R 4.
>>
>> My code is basically
>>
>> if (as.numeric(R.version$major) < 4) # do something
>> else tools::R_user_dir("oysteR", which = "cache")
>>
>> When checking on win-builder R3.6 I get the note
>>
>> * checking dependencies in R code ... NOTE
>> Missing or unexported object: 'tools::R_user_dir'
>>
>> ## Question
>>
>> Is my code correct and can I ignore this note?
>>
>> Thanks
>>
>> Colin
>>
>>
>> Dr Colin Gillespie
>> http://www.mas.ncl.ac.uk/~ncsg3/
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From joris m@iii@g oii jorisgoose@@@i  Wed Dec 16 19:49:13 2020
From: joris m@iii@g oii jorisgoose@@@i (joris m@iii@g oii jorisgoose@@@i)
Date: Wed, 16 Dec 2020 19:49:13 +0100
Subject: [R-pkg-devel] Package Encoding and Literal Strings
Message-ID: <CANfj7vJTwLmkfO0sq4c1ws+Gn+Lji7LhEqvOcWJGfuVGCk+L5w@mail.gmail.com>

Hello All,

Some context, I am one of the programmers of a software pkg (
https://jasp-stats.org/) that uses an embedded instance of R to do
statistics. And make that a bit easier for people who are intimidated by R
or like to have something more GUI oriented.


We have been working on translating the interface but ran into several
problems related to encoding of strings. We prefer to use UTF-8 for
everything and this works wonderful on unix systems, as is to be expected.

Windows however is a different matter. Currently I am working on some local
changes to "do_gettext" and some related internal functions of R to be able
to get UTF-8 encoded output from there.

But I ran into a bit of a problem and I think this mailinglist is probably
the best place to start.

It seems that if I have an R package that specifies "Encoding: UTF-8" in
DESCRIPTION the literal strings inside the package are converted to the
local codeset/codepage regardless of what I want.

Is it possible to keep the strings in UTF-8 internally in such a pkg
somehow?

Best regards,
Joris Goosen
University of Amsterdam

	[[alternative HTML version deleted]]


From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Wed Dec 16 20:03:15 2020
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Wed, 16 Dec 2020 11:03:15 -0800
Subject: [R-pkg-devel] Accessing features in R4.0.
In-Reply-To: <CADbDLZmZBF0VWp4VyAxmoKRgBfKeCjyKdrM3YipCLE49E-7NHg@mail.gmail.com>
References: <CADbDLZmZBF0VWp4VyAxmoKRgBfKeCjyKdrM3YipCLE49E-7NHg@mail.gmail.com>
Message-ID: <7DED9D79-B874-4FC6-9643-7C6FC1DB9971@dcn.davis.ca.us>

For "obvious" reasons? I don't see this kind of avoidance as "obviously" correct at all. You have a dependency... it should be declared. There are various ways to proceed, with Imports or Depends or Suggests or pulling the code into your package... but trying to subvert the dependency management is counterproductive.

On December 16, 2020 8:28:15 AM PST, Colin Gillespie <csgillespie at gmail.com> wrote:
>Hi,
>
>I'm planning on using the tools::R_user_dir function in a package. But
>for obvious reasons, I don't want to set the dependency on R 4.
>
>My code is basically
>
>if (as.numeric(R.version$major) < 4) # do something
>else tools::R_user_dir("oysteR", which = "cache")
>
>When checking on win-builder R3.6 I get the note
>
>* checking dependencies in R code ... NOTE
>Missing or unexported object: 'tools::R_user_dir'
>
>## Question
>
>Is my code correct and can I ignore this note?
>
>Thanks
>
>Colin
>
>
>Dr Colin Gillespie
>http://www.mas.ncl.ac.uk/~ncsg3/
>
>______________________________________________
>R-package-devel at r-project.org mailing list
>https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
Sent from my phone. Please excuse my brevity.


From henr|k@bengt@@on @end|ng |rom gm@||@com  Wed Dec 16 21:27:53 2020
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Wed, 16 Dec 2020 12:27:53 -0800
Subject: [R-pkg-devel] Accessing features in R4.0.
In-Reply-To: <7DED9D79-B874-4FC6-9643-7C6FC1DB9971@dcn.davis.ca.us>
References: <CADbDLZmZBF0VWp4VyAxmoKRgBfKeCjyKdrM3YipCLE49E-7NHg@mail.gmail.com>
 <7DED9D79-B874-4FC6-9643-7C6FC1DB9971@dcn.davis.ca.us>
Message-ID: <CAFDcVCRJSDRKmVjiuX4NhNE2-+-w-wY7p-sR8upYYcrUqsBAJQ@mail.gmail.com>

Colin, you can do:

Imports: tools

NAMESPACE:
if (getRversion() >= 4) importFrom(tools,R_user_dir)


R/000.namespace.R:
## Create a dummy R_user_dir() for R (< 4.0.0)
## to please R CMD check
if (getRversion() < 4) {
  R_user_dir <- function(...) NULL
}

and then use:

if (getRversion() < 4) {
  # do something
} else {
  R_user_dir("oysteR", which = "cache")
}

An advantage of this approach is that it's clear from Imports: and the
NAMESPACE file what you're importing and when.  When using Suggests:
and pkg::fcn() you can't peek at NAMESPACE to see what's actually
used.


Finally, if '#do something' is basically trying to do the same as
tools::R_user_dir(), you could of course also consider writing your
own forward-compatible wrapper for R (< 4.0.0), e.g.

if (getRversion() < 4) {
  R_user_dir <- function(...) {
    # do something
   }
}

and then use R_user_dir() as if you're running R (>= 4.0.0).  That's
the cleanest version.

Hope this helps,

Henrik


On Wed, Dec 16, 2020 at 11:12 AM Jeff Newmiller
<jdnewmil at dcn.davis.ca.us> wrote:
>
> For "obvious" reasons? I don't see this kind of avoidance as "obviously" correct at all. You have a dependency... it should be declared. There are various ways to proceed, with Imports or Depends or Suggests or pulling the code into your package... but trying to subvert the dependency management is counterproductive.
>
> On December 16, 2020 8:28:15 AM PST, Colin Gillespie <csgillespie at gmail.com> wrote:
> >Hi,
> >
> >I'm planning on using the tools::R_user_dir function in a package. But
> >for obvious reasons, I don't want to set the dependency on R 4.
> >
> >My code is basically
> >
> >if (as.numeric(R.version$major) < 4) # do something
> >else tools::R_user_dir("oysteR", which = "cache")
> >
> >When checking on win-builder R3.6 I get the note
> >
> >* checking dependencies in R code ... NOTE
> >Missing or unexported object: 'tools::R_user_dir'
> >
> >## Question
> >
> >Is my code correct and can I ignore this note?
> >
> >Thanks
> >
> >Colin
> >
> >
> >Dr Colin Gillespie
> >http://www.mas.ncl.ac.uk/~ncsg3/
> >
> >______________________________________________
> >R-package-devel at r-project.org mailing list
> >https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
> --
> Sent from my phone. Please excuse my brevity.
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From henr|k@bengt@@on @end|ng |rom gm@||@com  Wed Dec 16 21:38:59 2020
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Wed, 16 Dec 2020 12:38:59 -0800
Subject: [R-pkg-devel] Accessing features in R4.0.
In-Reply-To: <CAFDcVCRJSDRKmVjiuX4NhNE2-+-w-wY7p-sR8upYYcrUqsBAJQ@mail.gmail.com>
References: <CADbDLZmZBF0VWp4VyAxmoKRgBfKeCjyKdrM3YipCLE49E-7NHg@mail.gmail.com>
 <7DED9D79-B874-4FC6-9643-7C6FC1DB9971@dcn.davis.ca.us>
 <CAFDcVCRJSDRKmVjiuX4NhNE2-+-w-wY7p-sR8upYYcrUqsBAJQ@mail.gmail.com>
Message-ID: <CAFDcVCRWeZNd3X+NkOdeX+MXNSBU-RWZh1jg6=OWU3VcUgN+kw@mail.gmail.com>

BTW, 'backports' provides a backport for tools::R_user_dir() also for
R (< 4.0.0), so an alternative solution in this case is:

Imports: backports

and

importFrom(backports, R_user_dir)

The 'backports' package takes the same approach as I did in my previous message.

Henrik

On Wed, Dec 16, 2020 at 12:27 PM Henrik Bengtsson
<henrik.bengtsson at gmail.com> wrote:
>
> Colin, you can do:
>
> Imports: tools
>
> NAMESPACE:
> if (getRversion() >= 4) importFrom(tools,R_user_dir)
>
>
> R/000.namespace.R:
> ## Create a dummy R_user_dir() for R (< 4.0.0)
> ## to please R CMD check
> if (getRversion() < 4) {
>   R_user_dir <- function(...) NULL
> }
>
> and then use:
>
> if (getRversion() < 4) {
>   # do something
> } else {
>   R_user_dir("oysteR", which = "cache")
> }
>
> An advantage of this approach is that it's clear from Imports: and the
> NAMESPACE file what you're importing and when.  When using Suggests:
> and pkg::fcn() you can't peek at NAMESPACE to see what's actually
> used.
>
>
> Finally, if '#do something' is basically trying to do the same as
> tools::R_user_dir(), you could of course also consider writing your
> own forward-compatible wrapper for R (< 4.0.0), e.g.
>
> if (getRversion() < 4) {
>   R_user_dir <- function(...) {
>     # do something
>    }
> }
>
> and then use R_user_dir() as if you're running R (>= 4.0.0).  That's
> the cleanest version.
>
> Hope this helps,
>
> Henrik
>
>
> On Wed, Dec 16, 2020 at 11:12 AM Jeff Newmiller
> <jdnewmil at dcn.davis.ca.us> wrote:
> >
> > For "obvious" reasons? I don't see this kind of avoidance as "obviously" correct at all. You have a dependency... it should be declared. There are various ways to proceed, with Imports or Depends or Suggests or pulling the code into your package... but trying to subvert the dependency management is counterproductive.
> >
> > On December 16, 2020 8:28:15 AM PST, Colin Gillespie <csgillespie at gmail.com> wrote:
> > >Hi,
> > >
> > >I'm planning on using the tools::R_user_dir function in a package. But
> > >for obvious reasons, I don't want to set the dependency on R 4.
> > >
> > >My code is basically
> > >
> > >if (as.numeric(R.version$major) < 4) # do something
> > >else tools::R_user_dir("oysteR", which = "cache")
> > >
> > >When checking on win-builder R3.6 I get the note
> > >
> > >* checking dependencies in R code ... NOTE
> > >Missing or unexported object: 'tools::R_user_dir'
> > >
> > >## Question
> > >
> > >Is my code correct and can I ignore this note?
> > >
> > >Thanks
> > >
> > >Colin
> > >
> > >
> > >Dr Colin Gillespie
> > >http://www.mas.ncl.ac.uk/~ncsg3/
> > >
> > >______________________________________________
> > >R-package-devel at r-project.org mailing list
> > >https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
> > --
> > Sent from my phone. Please excuse my brevity.
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel


From c@@rd|@g@bor @end|ng |rom gm@||@com  Wed Dec 16 21:49:05 2020
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Wed, 16 Dec 2020 20:49:05 +0000
Subject: [R-pkg-devel] Accessing features in R4.0.
In-Reply-To: <CAFDcVCRWeZNd3X+NkOdeX+MXNSBU-RWZh1jg6=OWU3VcUgN+kw@mail.gmail.com>
References: <CADbDLZmZBF0VWp4VyAxmoKRgBfKeCjyKdrM3YipCLE49E-7NHg@mail.gmail.com>
 <7DED9D79-B874-4FC6-9643-7C6FC1DB9971@dcn.davis.ca.us>
 <CAFDcVCRJSDRKmVjiuX4NhNE2-+-w-wY7p-sR8upYYcrUqsBAJQ@mail.gmail.com>
 <CAFDcVCRWeZNd3X+NkOdeX+MXNSBU-RWZh1jg6=OWU3VcUgN+kw@mail.gmail.com>
Message-ID: <CABtg=KkthykPbkCfR1nBsYSU3qQxXxU3Mw_K4ZSrKttaT52UJw@mail.gmail.com>

On Wed, Dec 16, 2020 at 8:39 PM Henrik Bengtsson
<henrik.bengtsson at gmail.com> wrote:
>
> BTW, 'backports' provides a backport for tools::R_user_dir() also for
> R (< 4.0.0), so an alternative solution in this case is:
>
> Imports: backports
>
> and
>
> importFrom(backports, R_user_dir)
>
> The 'backports' package takes the same approach as I did in my previous message.

FWIW, the backports README actually suggests a different approach:
https://github.com/r-lib/backports#in-packages

G.

[...]


From joris m@iii@g oii jorisgoose@@@i  Wed Dec 16 23:07:20 2020
From: joris m@iii@g oii jorisgoose@@@i (joris m@iii@g oii jorisgoose@@@i)
Date: Wed, 16 Dec 2020 23:07:20 +0100
Subject: [R-pkg-devel] Package Encoding and Literal Strings
In-Reply-To: <E626F78F-2B8F-4AE8-9261-7C82B42738D2@hxcore.ol>
References: <CANfj7vJTwLmkfO0sq4c1ws+Gn+Lji7LhEqvOcWJGfuVGCk+L5w@mail.gmail.com>
 <E626F78F-2B8F-4AE8-9261-7C82B42738D2@hxcore.ol>
Message-ID: <CANfj7v+QiZGMyWEK3g-HP+Rox0Wmck91UwjMmpn0Cm7yCkNL7w@mail.gmail.com>

David,

Thanks for the response!

So the problem is a bit worse then just setting `encoding="UTF-8"` on
functions like readLines.
I'll describe our setup a bit:
So we run R embedded in a separate executable and through a whole bunch of
C(++) magic get that to the main executable that runs the actual interface.
All the code that isn't R basically uses UTF-8. This works good and we've
made sure that all of our source code is encoded properly and I've verified
that for this particular problem at least my source file is definitely
encoded in UTF-8 (Ive checked a hexdump).

The simplest solution, that we initially took, to get R+Windows to
cooperate with everything is to simply set the locale to "C" before
starting R. That way R simply assumes UTF-8 is native and everything worked
splendidly. Until of course a file needs to be opened in R that contains
some non-ASCII characters. I noticed the problem because a korean user had
hangul in his username and that broke everything. This because R was trying
to convert to a different locale than Windows was using.

The solution I've now been working on is:
I took the sourcecode of R 4.0.3 and changed the backend of "gettext" to
add an `encoding="something something"` option. And a bit of extra stuff
like `bind_textdomain_codeset` in case I need to tweak the codeset/charset
that gettext uses.
I think I've got that working properly now and once I solve the problem of
the encoding in a pkg I will open a bugreport/feature-request and I'll add
a patch that implements it.

The problem I'm stuck with now is simply this:
I have an R pkg here that I want to test the translations with and the code
is definitely saved as UTF-8, the package has "Encoding: UTF-8" in the
DESCRIPTION and it all loads and works. The particular problem I have is
that the R code contains literally: `mathotString <- "Math?t!"`
The actual file contains the hexadecimal representation of ? as proper
utf-8: "0xC3 0xB4" but R turns it into: "0xf4".
Seemingly on loading the package, because I haven't done anything with it
except put it in my debug c-function to print its contents as
hexadecimals...

The only thing I want to achieve here is that when R loads the package it
keeps those strings in their original UTF-8 encoding, without converting it
to "native" or the strange unicode codepoint it seemingly placed in there
instead. Because otherwise I cannot get gettext to work fully in UTF-8 mode.

Is this already possible in R?

Cheers,
Joris


On Wed, 16 Dec 2020 at 20:15, David Bosak <dbosak01 at gmail.com> wrote:

> Joris:
>
>
>
> I?ve fought with encoding problems on Windows a lot.  Here are some
> general suggestions.
>
>
>
>    1. Put ?@encoding UTF-8? on any Roxygen comments.
>    2. Put ?encoding = ?UTF-8? on any functions like writeLines or
>    readLines that read/write to a text file.
>    3. This post:
>    https://kevinushey.github.io/blog/2018/02/21/string-encoding-and-r/
>
>
>
> If you have a more specific problem, please describe and we can try to
> help.
>
>
>
> David
>
>
>
> Sent from Mail <https://go.microsoft.com/fwlink/?LinkId=550986> for
> Windows 10
>
>
>
> *From: *joris at jorisgoosen.nl
> *Sent: *Wednesday, December 16, 2020 1:52 PM
> *To: *r-package-devel at r-project.org
> *Subject: *[R-pkg-devel] Package Encoding and Literal Strings
>
>
>
> Hello All,
>
>
>
> Some context, I am one of the programmers of a software pkg (
>
> https://jasp-stats.org/) that uses an embedded instance of R to do
>
> statistics. And make that a bit easier for people who are intimidated by R
>
> or like to have something more GUI oriented.
>
>
>
>
>
> We have been working on translating the interface but ran into several
>
> problems related to encoding of strings. We prefer to use UTF-8 for
>
> everything and this works wonderful on unix systems, as is to be expected.
>
>
>
> Windows however is a different matter. Currently I am working on some local
>
> changes to "do_gettext" and some related internal functions of R to be able
>
> to get UTF-8 encoded output from there.
>
>
>
> But I ran into a bit of a problem and I think this mailinglist is probably
>
> the best place to start.
>
>
>
> It seems that if I have an R package that specifies "Encoding: UTF-8" in
>
> DESCRIPTION the literal strings inside the package are converted to the
>
> local codeset/codepage regardless of what I want.
>
>
>
> Is it possible to keep the strings in UTF-8 internally in such a pkg
>
> somehow?
>
>
>
> Best regards,
>
> Joris Goosen
>
> University of Amsterdam
>
>
>
>                 [[alternative HTML version deleted]]
>
>
>
> ______________________________________________
>
> R-package-devel at r-project.org mailing list
>
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>
>

	[[alternative HTML version deleted]]


From @ch@r@@k@h|t @end|ng |rom gm@||@com  Thu Dec 17 10:26:45 2020
From: @ch@r@@k@h|t @end|ng |rom gm@||@com (Akshit Achara)
Date: Thu, 17 Dec 2020 14:56:45 +0530
Subject: [R-pkg-devel] R CMD check error on Windows
Message-ID: <CAJ=u__NbP24uLAKWVxez8QvyyvQyciQnk1GnDVEtNQOag_zA0w@mail.gmail.com>

Dear Sir,

I got this error on rminizinc cran checks
<https://cran.r-project.org/web/checks/check_results_rminizinc.html> for
r-oldrel-windows-ix86+x86_64:
(The package needs to run ./configure.win during installation)

exec: /cygdrive/c/Program: not found

Warning in system("sh ./configure.win") : Exit code was 127

ERROR: configuration failed for package 'rminizinc'


I know that the error occurred because sh command didn't work. I am
not getting any errors for other Windows flavors (devel and release).

I wanted to ask if there is any solution for this error that can be
implemented from my end or should I add anything in the
SystemRequirements and resubmit to CRAN.

Thanks,
Akshit Achara

	[[alternative HTML version deleted]]


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Thu Dec 17 10:31:32 2020
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Thu, 17 Dec 2020 10:31:32 +0100
Subject: [R-pkg-devel] R CMD check error on Windows
In-Reply-To: <CAJ=u__NbP24uLAKWVxez8QvyyvQyciQnk1GnDVEtNQOag_zA0w@mail.gmail.com>
References: <CAJ=u__NbP24uLAKWVxez8QvyyvQyciQnk1GnDVEtNQOag_zA0w@mail.gmail.com>
Message-ID: <047e0cc5-3ed4-b0d7-12b9-db9a78118730@statistik.tu-dortmund.de>



On 17.12.2020 10:26, Akshit Achara wrote:
> Dear Sir,
> 
> I got this error on rminizinc cran checks
> <https://cran.r-project.org/web/checks/check_results_rminizinc.html> for
> r-oldrel-windows-ix86+x86_64:
> (The package needs to run ./configure.win during installation)
> 
> exec: /cygdrive/c/Program: not found

Sounds like quoting issues as certainly /cygdrive/c/Program Files   is 
meant here.

Best,
Uwe Ligges

> 
> Warning in system("sh ./configure.win") : Exit code was 127
> 
> ERROR: configuration failed for package 'rminizinc'
> 
> 
> I know that the error occurred because sh command didn't work. I am
> not getting any errors for other Windows flavors (devel and release).
> 
> I wanted to ask if there is any solution for this error that can be
> implemented from my end or should I add anything in the
> SystemRequirements and resubmit to CRAN.
> 
> Thanks,
> Akshit Achara
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From @ch@r@@k@h|t @end|ng |rom gm@||@com  Thu Dec 17 10:39:01 2020
From: @ch@r@@k@h|t @end|ng |rom gm@||@com (Akshit Achara)
Date: Thu, 17 Dec 2020 15:09:01 +0530
Subject: [R-pkg-devel] R CMD check error on Windows
In-Reply-To: <047e0cc5-3ed4-b0d7-12b9-db9a78118730@statistik.tu-dortmund.de>
References: <CAJ=u__NbP24uLAKWVxez8QvyyvQyciQnk1GnDVEtNQOag_zA0w@mail.gmail.com>
 <047e0cc5-3ed4-b0d7-12b9-db9a78118730@statistik.tu-dortmund.de>
Message-ID: <CAJ=u__NJ0B5h5PnPqv3oB8V2Me-Z=Dv96RdAQXMkorGBFBHqyw@mail.gmail.com>

Dear Uwe,

Can you please elaborate?

I generated the configure script from configure.ac on Linux
and copied it's contents to configure.win (changed ~! /bin/sh
to #! /bin/bash). Does it cause any quoting issues?

Thanks,
Akshit Achara



On Thu, Dec 17, 2020 at 3:01 PM Uwe Ligges <ligges at statistik.tu-dortmund.de>
wrote:

>
>
> On 17.12.2020 10:26, Akshit Achara wrote:
> > Dear Sir,
> >
> > I got this error on rminizinc cran checks
> > <https://cran.r-project.org/web/checks/check_results_rminizinc.html> for
> > r-oldrel-windows-ix86+x86_64:
> > (The package needs to run ./configure.win during installation)
> >
> > exec: /cygdrive/c/Program: not found
>
> Sounds like quoting issues as certainly /cygdrive/c/Program Files   is
> meant here.
>
> Best,
> Uwe Ligges
>
> >
> > Warning in system("sh ./configure.win") : Exit code was 127
> >
> > ERROR: configuration failed for package 'rminizinc'
> >
> >
> > I know that the error occurred because sh command didn't work. I am
> > not getting any errors for other Windows flavors (devel and release).
> >
> > I wanted to ask if there is any solution for this error that can be
> > implemented from my end or should I add anything in the
> > SystemRequirements and resubmit to CRAN.
> >
> > Thanks,
> > Akshit Achara
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
>

	[[alternative HTML version deleted]]


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Thu Dec 17 10:46:49 2020
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Thu, 17 Dec 2020 10:46:49 +0100
Subject: [R-pkg-devel] Package Encoding and Literal Strings
In-Reply-To: <CANfj7v+QiZGMyWEK3g-HP+Rox0Wmck91UwjMmpn0Cm7yCkNL7w@mail.gmail.com>
References: <CANfj7vJTwLmkfO0sq4c1ws+Gn+Lji7LhEqvOcWJGfuVGCk+L5w@mail.gmail.com>
 <E626F78F-2B8F-4AE8-9261-7C82B42738D2@hxcore.ol>
 <CANfj7v+QiZGMyWEK3g-HP+Rox0Wmck91UwjMmpn0Cm7yCkNL7w@mail.gmail.com>
Message-ID: <cd8b321e-759e-e9a1-5b57-ced4e2720a26@gmail.com>

On 12/16/20 11:07 PM, joris at jorisgoosen.nl wrote:
> David,
>
> Thanks for the response!
>
> So the problem is a bit worse then just setting `encoding="UTF-8"` on
> functions like readLines.
> I'll describe our setup a bit:
> So we run R embedded in a separate executable and through a whole bunch of
> C(++) magic get that to the main executable that runs the actual interface.
> All the code that isn't R basically uses UTF-8. This works good and we've
> made sure that all of our source code is encoded properly and I've verified
> that for this particular problem at least my source file is definitely
> encoded in UTF-8 (Ive checked a hexdump).
>
> The simplest solution, that we initially took, to get R+Windows to
> cooperate with everything is to simply set the locale to "C" before
> starting R. That way R simply assumes UTF-8 is native and everything worked
> splendidly. Until of course a file needs to be opened in R that contains
> some non-ASCII characters. I noticed the problem because a korean user had
> hangul in his username and that broke everything. This because R was trying
> to convert to a different locale than Windows was using.

Setting locale to "C" does not make R assume UTF-8 is the native 
encoding, there is no way to make UTF-8 the current native encoding in R 
on the current builds of R on Windows. This is an old limitation of 
Windows, only recently fixed by Microsoft in recent Windows 10 and with 
UCRT Windows runtime (see my blog post [1] for more - to make R support 
this we need a new toolchain to build R).

If you set the locale to C encoding, you are telling R the native 
encoding is C/POSIX (essentially ASCII), not UTF-8. Encoding-sensitive 
operations, including conversions, including those conversions that 
happen without user control e.g. for interacting with Windows, will 
produce incorrect results (garbage) or in better case errors, warnings, 
omitted, substituted or transliterated characters.

In principle setting the encoding via locale is dangerous on Windows, 
because Windows has two current encodings, not just one. By setting 
locale you set the one used in the C runtime, but not the other one used 
by the system calls. If all code (in R, packages, external libraries) 
was perfect, this would still work as long as all strings used were 
representable in both encodings. For other strings it won't work, and 
then code is not perfect in this regard, it is usually written assuming 
there is one current encoding, which common sense dictates should be the 
case. With the recent UTF-8 support ([1]), one can switch both of these 
to UTF-8.

> The solution I've now been working on is:
> I took the sourcecode of R 4.0.3 and changed the backend of "gettext" to
> add an `encoding="something something"` option. And a bit of extra stuff
> like `bind_textdomain_codeset` in case I need to tweak the codeset/charset
> that gettext uses.
> I think I've got that working properly now and once I solve the problem of
> the encoding in a pkg I will open a bugreport/feature-request and I'll add
> a patch that implements it.

A number of similar "shortcuts" have been added to R in the past, but 
they may the code more complex, harder to maintain and use, and can't 
realistically solve all of these problems, anyway. Strings will 
eventually be assumed to be in what is the current native encoding by 
the C library. In R, any external code R uses, or code R packages use. 
Now that Microsoft finally is supporting UTF-8, the way to get out of 
this is switching to UTF-8. This needs only small changes to R source 
code compared to those "shortcuts" (or to using UTF-16LE). I'd be 
against polluting the code with any more "shortcuts".

> The problem I'm stuck with now is simply this:
> I have an R pkg here that I want to test the translations with and the code
> is definitely saved as UTF-8, the package has "Encoding: UTF-8" in the
> DESCRIPTION and it all loads and works. The particular problem I have is
> that the R code contains literally: `mathotString <- "Math?t!"`
> The actual file contains the hexadecimal representation of ? as proper
> utf-8: "0xC3 0xB4" but R turns it into: "0xf4".
> Seemingly on loading the package, because I haven't done anything with it
> except put it in my debug c-function to print its contents as
> hexadecimals...
>
> The only thing I want to achieve here is that when R loads the package it
> keeps those strings in their original UTF-8 encoding, without converting it
> to "native" or the strange unicode codepoint it seemingly placed in there
> instead. Because otherwise I cannot get gettext to work fully in UTF-8 mode.
>
> Is this already possible in R?

In principle, working with strings not representable in the current 
encoding is not reliable (and never will be). It can still work in some 
specific cases and uses. Parsing a UTF-8 string literal from a file, 
with correctly declared encoding as documented in WRE, should work at 
least in single-byte encodings. But what happens after that string is 
parsed is another thing. The parsing is based internally on using these 
"shortcuts", that is lying to a part of the parser about the encoding, 
and telling the rest of the parser that it is really something else (not 
native, but UTF-8). The part that is being "lied to" may get confused or 
not. It would not when the real native encoding is say latin1, a common 
case in the past for which the hack was created, but it might when it is 
a double-byte encoding that conflicts with the text being parsed in 
dangerous ways. This is also why this hack only makes sense for string 
literals (and comments), and still only to a limit as the strings may be 
misinterpreted later after parsing.

So a really short summary is: you can only reliably use strings 
representable in the current encoding in R, and that encoding cannot be 
UTF-8 on Windows in released versions of R. There is an experimental 
version, see [1], if you could experiment with that and see whether that 
might work for your applications, could try to find and report bugs 
there (e.g. to me directly), that would be useful.

If you find behavior re encodings in released versions of R that 
contradicts the current documentation, please report with a minimal 
reproducible example, such cases should be fixed (even though sometimes 
the "fix" would be just changing the documentation, the effort really 
should be now for supporting UTF-8 for real). Specifically with 
"mathotString", you might try creating? an example that does not include 
any package (just calls to parse with encoding options set), only then 
gradually adding more of package loading if that does not reproduce. It 
would be important to know the current encoding (sessionInfo, l10n_info).

Best,
Tomas

[1] 
https://developer.r-project.org/Blog/public/2020/07/30/windows/utf-8-build-of-r-and-cran-packages/index.html

>
> Cheers,
> Joris

>
>
> On Wed, 16 Dec 2020 at 20:15, David Bosak <dbosak01 at gmail.com> wrote:
>
>> Joris:
>>
>>
>>
>> I?ve fought with encoding problems on Windows a lot.  Here are some
>> general suggestions.
>>
>>
>>
>>     1. Put ?@encoding UTF-8? on any Roxygen comments.
>>     2. Put ?encoding = ?UTF-8? on any functions like writeLines or
>>     readLines that read/write to a text file.
>>     3. This post:
>>     https://kevinushey.github.io/blog/2018/02/21/string-encoding-and-r/
>>
>>
>>
>> If you have a more specific problem, please describe and we can try to
>> help.
>>
>>
>>
>> David
>>
>>
>>
>> Sent from Mail <https://go.microsoft.com/fwlink/?LinkId=550986> for
>> Windows 10
>>
>>
>>
>> *From: *joris at jorisgoosen.nl
>> *Sent: *Wednesday, December 16, 2020 1:52 PM
>> *To: *r-package-devel at r-project.org
>> *Subject: *[R-pkg-devel] Package Encoding and Literal Strings
>>
>>
>>
>> Hello All,
>>
>>
>>
>> Some context, I am one of the programmers of a software pkg (
>>
>> https://jasp-stats.org/) that uses an embedded instance of R to do
>>
>> statistics. And make that a bit easier for people who are intimidated by R
>>
>> or like to have something more GUI oriented.
>>
>>
>>
>>
>>
>> We have been working on translating the interface but ran into several
>>
>> problems related to encoding of strings. We prefer to use UTF-8 for
>>
>> everything and this works wonderful on unix systems, as is to be expected.
>>
>>
>>
>> Windows however is a different matter. Currently I am working on some local
>>
>> changes to "do_gettext" and some related internal functions of R to be able
>>
>> to get UTF-8 encoded output from there.
>>
>>
>>
>> But I ran into a bit of a problem and I think this mailinglist is probably
>>
>> the best place to start.
>>
>>
>>
>> It seems that if I have an R package that specifies "Encoding: UTF-8" in
>>
>> DESCRIPTION the literal strings inside the package are converted to the
>>
>> local codeset/codepage regardless of what I want.
>>
>>
>>
>> Is it possible to keep the strings in UTF-8 internally in such a pkg
>>
>> somehow?
>>
>>
>>
>> Best regards,
>>
>> Joris Goosen
>>
>> University of Amsterdam
>>
>>
>>
>>                  [[alternative HTML version deleted]]
>>
>>
>>
>> ______________________________________________
>>
>> R-package-devel at r-project.org mailing list
>>
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>>
>>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Thu Dec 17 11:02:11 2020
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Thu, 17 Dec 2020 11:02:11 +0100
Subject: [R-pkg-devel] R CMD check error on Windows
In-Reply-To: <CAJ=u__NJ0B5h5PnPqv3oB8V2Me-Z=Dv96RdAQXMkorGBFBHqyw@mail.gmail.com>
References: <CAJ=u__NbP24uLAKWVxez8QvyyvQyciQnk1GnDVEtNQOag_zA0w@mail.gmail.com>
 <047e0cc5-3ed4-b0d7-12b9-db9a78118730@statistik.tu-dortmund.de>
 <CAJ=u__NJ0B5h5PnPqv3oB8V2Me-Z=Dv96RdAQXMkorGBFBHqyw@mail.gmail.com>
Message-ID: <ffb0839e-75df-724b-2797-c584db1f4367@statistik.tu-dortmund.de>



On 17.12.2020 10:39, Akshit Achara wrote:
> Dear Uwe,
> 
> Can you please elaborate?
> 
> I generated the configure script from configure.ac <http://configure.ac> 
> on Linux
> and copied it's contents to configure.win (changed ~! /bin/sh
> to #! /bin/bash). Does it cause any quoting issues?

Well,  R > 4.0.0 uses a different toolchain on Windows, so likely the 
reason is the change in the toolchain.

I would not worry too much, as it works for the new toolchain and frm R 
 >= 4.0.0.

Best,
Uwe Ligges



> Thanks,
> Akshit Achara
> 
> 
> 
> On Thu, Dec 17, 2020 at 3:01 PM Uwe Ligges 
> <ligges at statistik.tu-dortmund.de 
> <mailto:ligges at statistik.tu-dortmund.de>> wrote:
> 
> 
> 
>     On 17.12.2020 10:26, Akshit Achara wrote:
>      > Dear Sir,
>      >
>      > I got this error on rminizinc cran checks
>      >
>     <https://cran.r-project.org/web/checks/check_results_rminizinc.html> for
>      > r-oldrel-windows-ix86+x86_64:
>      > (The package needs to run ./configure.win during installation)
>      >
>      > exec: /cygdrive/c/Program: not found
> 
>     Sounds like quoting issues as certainly /cygdrive/c/Program Files? ?is
>     meant here.
> 
>     Best,
>     Uwe Ligges
> 
>      >
>      > Warning in system("sh ./configure.win") : Exit code was 127
>      >
>      > ERROR: configuration failed for package 'rminizinc'
>      >
>      >
>      > I know that the error occurred because sh command didn't work. I am
>      > not getting any errors for other Windows flavors (devel and release).
>      >
>      > I wanted to ask if there is any solution for this error that can be
>      > implemented from my end or should I add anything in the
>      > SystemRequirements and resubmit to CRAN.
>      >
>      > Thanks,
>      > Akshit Achara
>      >
>      >? ? ? ?[[alternative HTML version deleted]]
>      >
>      > ______________________________________________
>      > R-package-devel at r-project.org
>     <mailto:R-package-devel at r-project.org> mailing list
>      > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>      >
>


From @ch@r@@k@h|t @end|ng |rom gm@||@com  Thu Dec 17 11:40:45 2020
From: @ch@r@@k@h|t @end|ng |rom gm@||@com (Akshit Achara)
Date: Thu, 17 Dec 2020 16:10:45 +0530
Subject: [R-pkg-devel] R CMD check error on Windows
In-Reply-To: <ffb0839e-75df-724b-2797-c584db1f4367@statistik.tu-dortmund.de>
References: <CAJ=u__NbP24uLAKWVxez8QvyyvQyciQnk1GnDVEtNQOag_zA0w@mail.gmail.com>
 <047e0cc5-3ed4-b0d7-12b9-db9a78118730@statistik.tu-dortmund.de>
 <CAJ=u__NJ0B5h5PnPqv3oB8V2Me-Z=Dv96RdAQXMkorGBFBHqyw@mail.gmail.com>
 <ffb0839e-75df-724b-2797-c584db1f4367@statistik.tu-dortmund.de>
Message-ID: <CAJ=u__MrYXAqoh9n_bV15=XuBtaXsibYcsOwdt78HW6kXGAg1w@mail.gmail.com>

Dear Uwe,

Thank you very much for the explanation.

Regards,
Akshit Achara



On Thu, Dec 17, 2020 at 3:32 PM Uwe Ligges <ligges at statistik.tu-dortmund.de>
wrote:

>
>
> On 17.12.2020 10:39, Akshit Achara wrote:
> > Dear Uwe,
> >
> > Can you please elaborate?
> >
> > I generated the configure script from configure.ac <http://configure.ac>
>
> > on Linux
> > and copied it's contents to configure.win (changed ~! /bin/sh
> > to #! /bin/bash). Does it cause any quoting issues?
>
> Well,  R > 4.0.0 uses a different toolchain on Windows, so likely the
> reason is the change in the toolchain.
>
> I would not worry too much, as it works for the new toolchain and frm R
>  >= 4.0.0.
>
> Best,
> Uwe Ligges
>
>
>
> > Thanks,
> > Akshit Achara
> >
> >
> >
> > On Thu, Dec 17, 2020 at 3:01 PM Uwe Ligges
> > <ligges at statistik.tu-dortmund.de
> > <mailto:ligges at statistik.tu-dortmund.de>> wrote:
> >
> >
> >
> >     On 17.12.2020 10:26, Akshit Achara wrote:
> >      > Dear Sir,
> >      >
> >      > I got this error on rminizinc cran checks
> >      >
> >     <https://cran.r-project.org/web/checks/check_results_rminizinc.html>
> for
> >      > r-oldrel-windows-ix86+x86_64:
> >      > (The package needs to run ./configure.win during installation)
> >      >
> >      > exec: /cygdrive/c/Program: not found
> >
> >     Sounds like quoting issues as certainly /cygdrive/c/Program Files
>  is
> >     meant here.
> >
> >     Best,
> >     Uwe Ligges
> >
> >      >
> >      > Warning in system("sh ./configure.win") : Exit code was 127
> >      >
> >      > ERROR: configuration failed for package 'rminizinc'
> >      >
> >      >
> >      > I know that the error occurred because sh command didn't work. I
> am
> >      > not getting any errors for other Windows flavors (devel and
> release).
> >      >
> >      > I wanted to ask if there is any solution for this error that can
> be
> >      > implemented from my end or should I add anything in the
> >      > SystemRequirements and resubmit to CRAN.
> >      >
> >      > Thanks,
> >      > Akshit Achara
> >      >
> >      >       [[alternative HTML version deleted]]
> >      >
> >      > ______________________________________________
> >      > R-package-devel at r-project.org
> >     <mailto:R-package-devel at r-project.org> mailing list
> >      > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >      >
> >
>

	[[alternative HTML version deleted]]


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Thu Dec 17 13:28:47 2020
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Thu, 17 Dec 2020 13:28:47 +0100
Subject: [R-pkg-devel] unexpected CRAN pretest failure
In-Reply-To: <DB7PR01MB54019424C464EDD4DF63101BB9C70@DB7PR01MB5401.eurprd01.prod.exchangelabs.com>
References: <DB7PR01MB54019424C464EDD4DF63101BB9C70@DB7PR01MB5401.eurprd01.prod.exchangelabs.com>
Message-ID: <df2f6c8b-f697-5059-735e-e063e7bdb23e@statistik.tu-dortmund.de>

This is form a change in R-devel.
Use a more recent R-devel to reproduce the issue.

Best,
Uwe Ligges

On 14.12.2020 15:02, Rossum, Bart-Jan van wrote:
> Dear community,
> 
> When trying to update my CRAN (https://cran.r-project.org/web/packages/statgenGxE/index.html) package in ran into unexpected error on Windows.
> I had tested before submission on R-hub, which went fine, but CRAN complained, and this was confirmed on Winbuilder.
> I noticed a slight difference in R-version used on CRAN/Winbuilder and R-hub.
> However, the error itself seems to come from an lme4 function.
> I'm quite clueless on how to debug/fix this.
> 
> CRAN and Winbuilder:
> R Under development (unstable) (2020-12-13 r79623)
> https://eur03.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwin-builder.r-project.org%2FnK0OMOQ378SI&amp;data=04%7C01%7Cbart-jan.vanrossum%40wur.nl%7C0bf8357a13b84c807ad708d8a0308e40%7C27d137e5761f4dc1af88d26430abb18f%7C0%7C0%7C637435477692513415%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&amp;sdata=HqExR7SELQ7U32H67xF3ufPKxyTZm3162ZiGb6YetI8%3D&amp;reserved=0
> 
> R-hub:
> R Under development (unstable) (2020-11-30 r79529)
> https://eur03.safelinks.protection.outlook.com/?url=https%3A%2F%2Fbuilder.r-hub.io%2Fstatus%2FstatgenGxE_1.0.4.tar.gz-fcc1e205a5fb4fd09559d301ee3502c9&data=04%7C01%7Cbart-jan.vanrossum%40wur.nl%7Cce0d271db460494b5a6908d8a0248bc0%7C27d137e5761f4dc1af88d26430abb18f%7C0%7C0%7C637435426112472834%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=j2RrXotL3qz5r1O6gcfXxb1VH8WuM2UaWaYQ5SnQFz0%3D&reserved=0
> 
> Any pointers are appreciated,
> Bart-Jan
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From b@rt-j@n@v@nro@@um @end|ng |rom wur@n|  Thu Dec 17 14:25:23 2020
From: b@rt-j@n@v@nro@@um @end|ng |rom wur@n| (Rossum, Bart-Jan van)
Date: Thu, 17 Dec 2020 13:25:23 +0000
Subject: [R-pkg-devel] unexpected CRAN pretest failure
In-Reply-To: <df2f6c8b-f697-5059-735e-e063e7bdb23e@statistik.tu-dortmund.de>
References: <DB7PR01MB54019424C464EDD4DF63101BB9C70@DB7PR01MB5401.eurprd01.prod.exchangelabs.com>
 <df2f6c8b-f697-5059-735e-e063e7bdb23e@statistik.tu-dortmund.de>
Message-ID: <DB7PR01MB54015DD797D2F01EB99399B3B9C40@DB7PR01MB5401.eurprd01.prod.exchangelabs.com>

Dear Uwe,

Thanks for your reaction.
I installed the latest available R-devel version (2020-12-15 r79633) on my own windows pc, but even then the checks pas cleanly.
So, unfortunately I'm not able to reproduce the issue.

To be sure, I also retried on Winbuilder, which has a slightly different version (r79643), but there the issue is still present. 

Could there be something else I need to do to be able to reproduce this locally?

Regards,
Bart-Jan

-----Original Message-----
From: Uwe Ligges <ligges at statistik.tu-dortmund.de> 
Sent: Thursday, December 17, 2020 13:29
To: Rossum, Bart-Jan van <bart-jan.vanrossum at wur.nl>; r-package-devel at r-project.org
Subject: Re: [R-pkg-devel] unexpected CRAN pretest failure

This is form a change in R-devel.
Use a more recent R-devel to reproduce the issue.

Best,
Uwe Ligges

On 14.12.2020 15:02, Rossum, Bart-Jan van wrote:
> Dear community,
> 
> When trying to update my CRAN (https://eur03.safelinks.protection.outlook.com/?url=https%3A%2F%2Fcran.r-project.org%2Fweb%2Fpackages%2FstatgenGxE%2Findex.html&amp;data=04%7C01%7Cbart-jan.vanrossum%40wur.nl%7C7cee644adb0a4aebb06008d8a28746e3%7C27d137e5761f4dc1af88d26430abb18f%7C0%7C0%7C637438049192516675%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&amp;sdata=XsyDDtwJk%2FXlDxxWxx2ylcx9RX%2BVOb9XWSZruwo42HY%3D&amp;reserved=0) package in ran into unexpected error on Windows.
> I had tested before submission on R-hub, which went fine, but CRAN complained, and this was confirmed on Winbuilder.
> I noticed a slight difference in R-version used on CRAN/Winbuilder and R-hub.
> However, the error itself seems to come from an lme4 function.
> I'm quite clueless on how to debug/fix this.
> 
> CRAN and Winbuilder:
> R Under development (unstable) (2020-12-13 r79623)
> https://eur03.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwin-builder.r-project.org%2FnK0OMOQ378SI&amp;data=04%7C01%7Cbart-jan.vanrossum%40wur.nl%7C7cee644adb0a4aebb06008d8a28746e3%7C27d137e5761f4dc1af88d26430abb18f%7C0%7C0%7C637438049192516675%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&amp;sdata=WpzlD%2B7%2BsggCPKJUrjvV4ZchNF12tXAXfrVMjRlh10c%3D&amp;reserved=0
> 
> R-hub:
> R Under development (unstable) (2020-11-30 r79529)
> https://eur03.safelinks.protection.outlook.com/?url=https%3A%2F%2Fbuilder.r-hub.io%2Fstatus%2FstatgenGxE_1.0.4.tar.gz-fcc1e205a5fb4fd09559d301ee3502c9&amp;data=04%7C01%7Cbart-jan.vanrossum%40wur.nl%7C7cee644adb0a4aebb06008d8a28746e3%7C27d137e5761f4dc1af88d26430abb18f%7C0%7C0%7C637438049192516675%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&amp;sdata=aWev8qrAGU5yO%2FP%2FGqqb3EVqdYYkGq%2FYrUf0b2ZqrDw%3D&amp;reserved=0
> 
> Any pointers are appreciated,
> Bart-Jan
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://eur03.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-package-devel&amp;data=04%7C01%7Cbart-jan.vanrossum%40wur.nl%7C7cee644adb0a4aebb06008d8a28746e3%7C27d137e5761f4dc1af88d26430abb18f%7C0%7C0%7C637438049192516675%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&amp;sdata=VA%2BpMcbmLDsLsjeZj5ucESwPHfgylxG59HHYkr9MOiw%3D&amp;reserved=0
> 


From joris m@iii@g oii jorisgoose@@@i  Thu Dec 17 17:17:33 2020
From: joris m@iii@g oii jorisgoose@@@i (joris m@iii@g oii jorisgoose@@@i)
Date: Thu, 17 Dec 2020 17:17:33 +0100
Subject: [R-pkg-devel] Package Encoding and Literal Strings
In-Reply-To: <cd8b321e-759e-e9a1-5b57-ced4e2720a26@gmail.com>
References: <CANfj7vJTwLmkfO0sq4c1ws+Gn+Lji7LhEqvOcWJGfuVGCk+L5w@mail.gmail.com>
 <E626F78F-2B8F-4AE8-9261-7C82B42738D2@hxcore.ol>
 <CANfj7v+QiZGMyWEK3g-HP+Rox0Wmck91UwjMmpn0Cm7yCkNL7w@mail.gmail.com>
 <cd8b321e-759e-e9a1-5b57-ced4e2720a26@gmail.com>
Message-ID: <CANfj7v+dnyiX0E5RtJ8kherbXNddh=MeWua4qMg13rjQNULQcw@mail.gmail.com>

On Thu, 17 Dec 2020 at 10:46, Tomas Kalibera <tomas.kalibera at gmail.com>
wrote:

> On 12/16/20 11:07 PM, joris at jorisgoosen.nl wrote:
> > David,
> >
> > Thanks for the response!
> >
> > So the problem is a bit worse then just setting `encoding="UTF-8"` on
> > functions like readLines.
> > I'll describe our setup a bit:
> > So we run R embedded in a separate executable and through a whole bunch
> of
> > C(++) magic get that to the main executable that runs the actual
> interface.
> > All the code that isn't R basically uses UTF-8. This works good and we've
> > made sure that all of our source code is encoded properly and I've
> verified
> > that for this particular problem at least my source file is definitely
> > encoded in UTF-8 (Ive checked a hexdump).
> >
> > The simplest solution, that we initially took, to get R+Windows to
> > cooperate with everything is to simply set the locale to "C" before
> > starting R. That way R simply assumes UTF-8 is native and everything
> worked
> > splendidly. Until of course a file needs to be opened in R that contains
> > some non-ASCII characters. I noticed the problem because a korean user
> had
> > hangul in his username and that broke everything. This because R was
> trying
> > to convert to a different locale than Windows was using.
>
> Setting locale to "C" does not make R assume UTF-8 is the native
> encoding, there is no way to make UTF-8 the current native encoding in R
> on the current builds of R on Windows. This is an old limitation of
> Windows, only recently fixed by Microsoft in recent Windows 10 and with
> UCRT Windows runtime (see my blog post [1] for more - to make R support
> this we need a new toolchain to build R).
>
> If you set the locale to C encoding, you are telling R the native
> encoding is C/POSIX (essentially ASCII), not UTF-8. Encoding-sensitive
> operations, including conversions, including those conversions that
> happen without user control e.g. for interacting with Windows, will
> produce incorrect results (garbage) or in better case errors, warnings,
> omitted, substituted or transliterated characters.
>
> In principle setting the encoding via locale is dangerous on Windows,
> because Windows has two current encodings, not just one. By setting
> locale you set the one used in the C runtime, but not the other one used
> by the system calls. If all code (in R, packages, external libraries)
> was perfect, this would still work as long as all strings used were
> representable in both encodings. For other strings it won't work, and
> then code is not perfect in this regard, it is usually written assuming
> there is one current encoding, which common sense dictates should be the
> case. With the recent UTF-8 support ([1]), one can switch both of these
> to UTF-8.
>

Well, this is exactly why I want to get rid of the situation. But this
messes up the output because everything else expects UTF-8 which is why I'm
looking for some kind of solution.



> > The solution I've now been working on is:
> > I took the sourcecode of R 4.0.3 and changed the backend of "gettext" to
> > add an `encoding="something something"` option. And a bit of extra stuff
> > like `bind_textdomain_codeset` in case I need to tweak the
> codeset/charset
> > that gettext uses.
> > I think I've got that working properly now and once I solve the problem
> of
> > the encoding in a pkg I will open a bugreport/feature-request and I'll
> add
> > a patch that implements it.
>
> A number of similar "shortcuts" have been added to R in the past, but
> they may the code more complex, harder to maintain and use, and can't
> realistically solve all of these problems, anyway. Strings will
> eventually be assumed to be in what is the current native encoding by
> the C library. In R, any external code R uses, or code R packages use.
> Now that Microsoft finally is supporting UTF-8, the way to get out of
> this is switching to UTF-8. This needs only small changes to R source
> code compared to those "shortcuts" (or to using UTF-16LE). I'd be
> against polluting the code with any more "shortcuts".
>

I think the addition of " bind_textdomain_codeset" is not strictly
necessary and can be left out. Because I think setting an environment
variable as "OUTPUT_CHARSET=UTF-8" gives the same result for us.
The addition of the "encoding" option to the internal "do_gettext" is just
a few lines of code and I also undid some duplication between do_gettext
and do_ngettext. Which should make it easier to maintain. But all of that
is moot if there is no way to keep the literal strings from sources in
UTF-8 anyhow.

Before starting on this I did actually read your blogpost about UTF-8
several times and it seems like the best way forward. Not to mention it
would make my life easier and me happier when I can stop worrying about
Windows/Dos codepages!
Thank you for your work on it indeed!

But my problem with that is that a number of people still use an older
version of windows and your solution won't work there. Which would mean
that we either drop support for them or they would have to live with either
weirdlooking translations. Or I have to go back to the suboptimal solution
of the "C" locale which I really do want to avoid. Because as you said it
breaks other stuff in unpredictable ways.


> > The problem I'm stuck with now is simply this:
> > I have an R pkg here that I want to test the translations with and the
> code
> > is definitely saved as UTF-8, the package has "Encoding: UTF-8" in the
> > DESCRIPTION and it all loads and works. The particular problem I have is
> > that the R code contains literally: `mathotString <- "Math?t!"`
> > The actual file contains the hexadecimal representation of ? as proper
> > utf-8: "0xC3 0xB4" but R turns it into: "0xf4".
> > Seemingly on loading the package, because I haven't done anything with it
> > except put it in my debug c-function to print its contents as
> > hexadecimals...
> >
> > The only thing I want to achieve here is that when R loads the package it
> > keeps those strings in their original UTF-8 encoding, without converting
> it
> > to "native" or the strange unicode codepoint it seemingly placed in there
> > instead. Because otherwise I cannot get gettext to work fully in UTF-8
> mode.
> >
> > Is this already possible in R?
>
> In principle, working with strings not representable in the current
> encoding is not reliable (and never will be). It can still work in some
> specific cases and uses. Parsing a UTF-8 string literal from a file,
> with correctly declared encoding as documented in WRE, should work at
> least in single-byte encodings. But what happens after that string is
> parsed is another thing. The parsing is based internally on using these
> "shortcuts", that is lying to a part of the parser about the encoding,
> and telling the rest of the parser that it is really something else (not
> native, but UTF-8).


So the reason the string literals are turned into the local encoding is
because setting the "Encoding" on a package is essentially a hack?


> The part that is being "lied to" may get confused or
> not. It would not when the real native encoding is say latin1, a common
> case in the past for which the hack was created, but it might when it is
> a double-byte encoding that conflicts with the text being parsed in
> dangerous ways. This is also why this hack only makes sense for string
> literals (and comments), and still only to a limit as the strings may be
> misinterpreted later after parsing.
>

Well our case is entirely limited to string literals that are presented to
the user through an all-utf-8 interface.
So I would assume not of the edge-cases would come into play.
Any systempaths and things like that would still be in local encoding.


> So a really short summary is: you can only reliably use strings
> representable in the current encoding in R, and that encoding cannot be
> UTF-8 on Windows in released versions of R. There is an experimental
> version, see [1], if you could experiment with that and see whether that
> might work for your applications, could try to find and report bugs
> there (e.g. to me directly), that would be useful.
>

So when I read in certain R documentation that string can have an "UTF-8"
encoding in R this is not true?
As in, when I read documentation such as
https://stat.ethz.ch/R-manual/R-devel/library/base/html/Encoding.html it
really seems to indicate to me that UTF-8 is in fact supported in R on
windows.
My assumption was that R uses `translateChar` internally to make sure it is
in the right encoding before interfacing with the OS and other places where
this might matter.


> If you find behavior re encodings in released versions of R that
> contradicts the current documentation, please report with a minimal
> reproducible example, such cases should be fixed (even though sometimes
> the "fix" would be just changing the documentation, the effort really
> should be now for supporting UTF-8 for real). Specifically with
> "mathotString", you might try creating  an example that does not include
> any package (just calls to parse with encoding options set), only then
> gradually adding more of package loading if that does not reproduce. It
> would be important to know the current encoding (sessionInfo, l10n_info).
>

Well, the reason I mailed the mailing list was because I couldn't for the
life of me find any documentation that told me anything in particular about
how literal strings are supposed to be stored in memory. But it just seems
logical to me that if R already supports parsing and loading a package
encoded with UTF-8 and it supports having UTF-8 strings in memory next to
strings in native encoding the most straightforward way of loading this
literal strings would be in UTF-8.

I would love to use the new version of R that supports properly interfacing
with windows 10.
And given that the only other supported version of Windows is 8.1 and
barely anyone uses it. So it might be worth dropping support for that.
I just hoped I could find a workable solution without such a step.

Cheers,
Joris


>
> Best,
> Tomas
>
> [1]
>
> https://developer.r-project.org/Blog/public/2020/07/30/windows/utf-8-build-of-r-and-cran-packages/index.html
>
> >
> > Cheers,
> > Joris
>
> >
> >
> > On Wed, 16 Dec 2020 at 20:15, David Bosak <dbosak01 at gmail.com> wrote:
> >
> >> Joris:
> >>
> >>
> >>
> >> I?ve fought with encoding problems on Windows a lot.  Here are some
> >> general suggestions.
> >>
> >>
> >>
> >>     1. Put ?@encoding UTF-8? on any Roxygen comments.
> >>     2. Put ?encoding = ?UTF-8? on any functions like writeLines or
> >>     readLines that read/write to a text file.
> >>     3. This post:
> >>     https://kevinushey.github.io/blog/2018/02/21/string-encoding-and-r/
> >>
> >>
> >>
> >> If you have a more specific problem, please describe and we can try to
> >> help.
> >>
> >>
> >>
> >> David
> >>
> >>
> >>
> >> Sent from Mail <https://go.microsoft.com/fwlink/?LinkId=550986> for
> >> Windows 10
> >>
> >>
> >>
> >> *From: *joris at jorisgoosen.nl
> >> *Sent: *Wednesday, December 16, 2020 1:52 PM
> >> *To: *r-package-devel at r-project.org
> >> *Subject: *[R-pkg-devel] Package Encoding and Literal Strings
> >>
> >>
> >>
> >> Hello All,
> >>
> >>
> >>
> >> Some context, I am one of the programmers of a software pkg (
> >>
> >> https://jasp-stats.org/) that uses an embedded instance of R to do
> >>
> >> statistics. And make that a bit easier for people who are intimidated
> by R
> >>
> >> or like to have something more GUI oriented.
> >>
> >>
> >>
> >>
> >>
> >> We have been working on translating the interface but ran into several
> >>
> >> problems related to encoding of strings. We prefer to use UTF-8 for
> >>
> >> everything and this works wonderful on unix systems, as is to be
> expected.
> >>
> >>
> >>
> >> Windows however is a different matter. Currently I am working on some
> local
> >>
> >> changes to "do_gettext" and some related internal functions of R to be
> able
> >>
> >> to get UTF-8 encoded output from there.
> >>
> >>
> >>
> >> But I ran into a bit of a problem and I think this mailinglist is
> probably
> >>
> >> the best place to start.
> >>
> >>
> >>
> >> It seems that if I have an R package that specifies "Encoding: UTF-8" in
> >>
> >> DESCRIPTION the literal strings inside the package are converted to the
> >>
> >> local codeset/codepage regardless of what I want.
> >>
> >>
> >>
> >> Is it possible to keep the strings in UTF-8 internally in such a pkg
> >>
> >> somehow?
> >>
> >>
> >>
> >> Best regards,
> >>
> >> Joris Goosen
> >>
> >> University of Amsterdam
> >>
> >>
> >>
> >>                  [[alternative HTML version deleted]]
> >>
> >>
> >>
> >> ______________________________________________
> >>
> >> R-package-devel at r-project.org mailing list
> >>
> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>
> >>
> >>
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>
>

	[[alternative HTML version deleted]]


From jo@h@m@u|r|ch @end|ng |rom gm@||@com  Thu Dec 17 18:07:12 2020
From: jo@h@m@u|r|ch @end|ng |rom gm@||@com (Joshua Ulrich)
Date: Thu, 17 Dec 2020 11:07:12 -0600
Subject: [R-pkg-devel] unexpected CRAN pretest failure
In-Reply-To: <DB7PR01MB54015DD797D2F01EB99399B3B9C40@DB7PR01MB5401.eurprd01.prod.exchangelabs.com>
References: <DB7PR01MB54019424C464EDD4DF63101BB9C70@DB7PR01MB5401.eurprd01.prod.exchangelabs.com>
 <df2f6c8b-f697-5059-735e-e063e7bdb23e@statistik.tu-dortmund.de>
 <DB7PR01MB54015DD797D2F01EB99399B3B9C40@DB7PR01MB5401.eurprd01.prod.exchangelabs.com>
Message-ID: <CAPPM_gRRjHKEwo4P74Wt-_v8v-yPhLLe2GF7zFMrUsz5QrgMsQ@mail.gmail.com>

On Thu, Dec 17, 2020 at 7:25 AM Rossum, Bart-Jan van
<bart-jan.vanrossum at wur.nl> wrote:
>
> Dear Uwe,
>
> Thanks for your reaction.
> I installed the latest available R-devel version (2020-12-15 r79633) on my own windows pc, but even then the checks pas cleanly.
> So, unfortunately I'm not able to reproduce the issue.
>
> To be sure, I also retried on Winbuilder, which has a slightly different version (r79643), but there the issue is still present.
>
> Could there be something else I need to do to be able to reproduce this locally?
>
I assume you used the pre-compiled version here:
https://cran.r-project.org/bin/windows/base/rdevel.html

That version probably lags behind the subversion repo for about a day.
So you need to build the latest R-devel from the latest source in the
subversion repo. It always has the latest version. Rocker and r-hub
help make this much easier than setting everything up locally on your
machine.

That said, it looks like the pre-compiled version is at r79643 now, so
you should be able to use it to reproduce the issue.

Best,
Josh


> Regards,
> Bart-Jan
>
> -----Original Message-----
> From: Uwe Ligges <ligges at statistik.tu-dortmund.de>
> Sent: Thursday, December 17, 2020 13:29
> To: Rossum, Bart-Jan van <bart-jan.vanrossum at wur.nl>; r-package-devel at r-project.org
> Subject: Re: [R-pkg-devel] unexpected CRAN pretest failure
>
> This is form a change in R-devel.
> Use a more recent R-devel to reproduce the issue.
>
> Best,
> Uwe Ligges
>
> On 14.12.2020 15:02, Rossum, Bart-Jan van wrote:
> > Dear community,
> >
> > When trying to update my CRAN (https://eur03.safelinks.protection.outlook.com/?url=https%3A%2F%2Fcran.r-project.org%2Fweb%2Fpackages%2FstatgenGxE%2Findex.html&amp;data=04%7C01%7Cbart-jan.vanrossum%40wur.nl%7C7cee644adb0a4aebb06008d8a28746e3%7C27d137e5761f4dc1af88d26430abb18f%7C0%7C0%7C637438049192516675%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&amp;sdata=XsyDDtwJk%2FXlDxxWxx2ylcx9RX%2BVOb9XWSZruwo42HY%3D&amp;reserved=0) package in ran into unexpected error on Windows.
> > I had tested before submission on R-hub, which went fine, but CRAN complained, and this was confirmed on Winbuilder.
> > I noticed a slight difference in R-version used on CRAN/Winbuilder and R-hub.
> > However, the error itself seems to come from an lme4 function.
> > I'm quite clueless on how to debug/fix this.
> >
> > CRAN and Winbuilder:
> > R Under development (unstable) (2020-12-13 r79623)
> > https://eur03.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwin-builder.r-project.org%2FnK0OMOQ378SI&amp;data=04%7C01%7Cbart-jan.vanrossum%40wur.nl%7C7cee644adb0a4aebb06008d8a28746e3%7C27d137e5761f4dc1af88d26430abb18f%7C0%7C0%7C637438049192516675%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&amp;sdata=WpzlD%2B7%2BsggCPKJUrjvV4ZchNF12tXAXfrVMjRlh10c%3D&amp;reserved=0
> >
> > R-hub:
> > R Under development (unstable) (2020-11-30 r79529)
> > https://eur03.safelinks.protection.outlook.com/?url=https%3A%2F%2Fbuilder.r-hub.io%2Fstatus%2FstatgenGxE_1.0.4.tar.gz-fcc1e205a5fb4fd09559d301ee3502c9&amp;data=04%7C01%7Cbart-jan.vanrossum%40wur.nl%7C7cee644adb0a4aebb06008d8a28746e3%7C27d137e5761f4dc1af88d26430abb18f%7C0%7C0%7C637438049192516675%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&amp;sdata=aWev8qrAGU5yO%2FP%2FGqqb3EVqdYYkGq%2FYrUf0b2ZqrDw%3D&amp;reserved=0
> >
> > Any pointers are appreciated,
> > Bart-Jan
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://eur03.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-package-devel&amp;data=04%7C01%7Cbart-jan.vanrossum%40wur.nl%7C7cee644adb0a4aebb06008d8a28746e3%7C27d137e5761f4dc1af88d26430abb18f%7C0%7C0%7C637438049192516675%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&amp;sdata=VA%2BpMcbmLDsLsjeZj5ucESwPHfgylxG59HHYkr9MOiw%3D&amp;reserved=0
> >
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel



--
Joshua Ulrich  |  about.me/joshuaulrich
FOSS Trading  |  www.fosstrading.com


From joris m@iii@g oii jorisgoose@@@i  Thu Dec 17 18:21:31 2020
From: joris m@iii@g oii jorisgoose@@@i (joris m@iii@g oii jorisgoose@@@i)
Date: Thu, 17 Dec 2020 18:21:31 +0100
Subject: [R-pkg-devel] Package Encoding and Literal Strings
In-Reply-To: <CANfj7v+dnyiX0E5RtJ8kherbXNddh=MeWua4qMg13rjQNULQcw@mail.gmail.com>
References: <CANfj7vJTwLmkfO0sq4c1ws+Gn+Lji7LhEqvOcWJGfuVGCk+L5w@mail.gmail.com>
 <E626F78F-2B8F-4AE8-9261-7C82B42738D2@hxcore.ol>
 <CANfj7v+QiZGMyWEK3g-HP+Rox0Wmck91UwjMmpn0Cm7yCkNL7w@mail.gmail.com>
 <cd8b321e-759e-e9a1-5b57-ced4e2720a26@gmail.com>
 <CANfj7v+dnyiX0E5RtJ8kherbXNddh=MeWua4qMg13rjQNULQcw@mail.gmail.com>
Message-ID: <CANfj7v+PK1qQRTGU_hUkPrmGDT+n1HQhW2vMssNTLvU=ZLRATg@mail.gmail.com>

Ps. I will try to have a go at using your experimental version to see if
that could help us out. If I run into trouble I will mail you personally.

On Thu, 17 Dec 2020 at 17:17, joris at jorisgoosen.nl <joris at jorisgoosen.nl>
wrote:

>
>
> On Thu, 17 Dec 2020 at 10:46, Tomas Kalibera <tomas.kalibera at gmail.com>
> wrote:
>
>> On 12/16/20 11:07 PM, joris at jorisgoosen.nl wrote:
>> > David,
>> >
>> > Thanks for the response!
>> >
>> > So the problem is a bit worse then just setting `encoding="UTF-8"` on
>> > functions like readLines.
>> > I'll describe our setup a bit:
>> > So we run R embedded in a separate executable and through a whole bunch
>> of
>> > C(++) magic get that to the main executable that runs the actual
>> interface.
>> > All the code that isn't R basically uses UTF-8. This works good and
>> we've
>> > made sure that all of our source code is encoded properly and I've
>> verified
>> > that for this particular problem at least my source file is definitely
>> > encoded in UTF-8 (Ive checked a hexdump).
>> >
>> > The simplest solution, that we initially took, to get R+Windows to
>> > cooperate with everything is to simply set the locale to "C" before
>> > starting R. That way R simply assumes UTF-8 is native and everything
>> worked
>> > splendidly. Until of course a file needs to be opened in R that contains
>> > some non-ASCII characters. I noticed the problem because a korean user
>> had
>> > hangul in his username and that broke everything. This because R was
>> trying
>> > to convert to a different locale than Windows was using.
>>
>> Setting locale to "C" does not make R assume UTF-8 is the native
>> encoding, there is no way to make UTF-8 the current native encoding in R
>> on the current builds of R on Windows. This is an old limitation of
>> Windows, only recently fixed by Microsoft in recent Windows 10 and with
>> UCRT Windows runtime (see my blog post [1] for more - to make R support
>> this we need a new toolchain to build R).
>>
>> If you set the locale to C encoding, you are telling R the native
>> encoding is C/POSIX (essentially ASCII), not UTF-8. Encoding-sensitive
>> operations, including conversions, including those conversions that
>> happen without user control e.g. for interacting with Windows, will
>> produce incorrect results (garbage) or in better case errors, warnings,
>> omitted, substituted or transliterated characters.
>>
>> In principle setting the encoding via locale is dangerous on Windows,
>> because Windows has two current encodings, not just one. By setting
>> locale you set the one used in the C runtime, but not the other one used
>> by the system calls. If all code (in R, packages, external libraries)
>> was perfect, this would still work as long as all strings used were
>> representable in both encodings. For other strings it won't work, and
>> then code is not perfect in this regard, it is usually written assuming
>> there is one current encoding, which common sense dictates should be the
>> case. With the recent UTF-8 support ([1]), one can switch both of these
>> to UTF-8.
>>
>
> Well, this is exactly why I want to get rid of the situation. But this
> messes up the output because everything else expects UTF-8 which is why I'm
> looking for some kind of solution.
>
>
>
>> > The solution I've now been working on is:
>> > I took the sourcecode of R 4.0.3 and changed the backend of "gettext" to
>> > add an `encoding="something something"` option. And a bit of extra stuff
>> > like `bind_textdomain_codeset` in case I need to tweak the
>> codeset/charset
>> > that gettext uses.
>> > I think I've got that working properly now and once I solve the problem
>> of
>> > the encoding in a pkg I will open a bugreport/feature-request and I'll
>> add
>> > a patch that implements it.
>>
>> A number of similar "shortcuts" have been added to R in the past, but
>> they may the code more complex, harder to maintain and use, and can't
>> realistically solve all of these problems, anyway. Strings will
>> eventually be assumed to be in what is the current native encoding by
>> the C library. In R, any external code R uses, or code R packages use.
>> Now that Microsoft finally is supporting UTF-8, the way to get out of
>> this is switching to UTF-8. This needs only small changes to R source
>> code compared to those "shortcuts" (or to using UTF-16LE). I'd be
>> against polluting the code with any more "shortcuts".
>>
>
> I think the addition of " bind_textdomain_codeset" is not strictly
> necessary and can be left out. Because I think setting an environment
> variable as "OUTPUT_CHARSET=UTF-8" gives the same result for us.
> The addition of the "encoding" option to the internal "do_gettext" is just
> a few lines of code and I also undid some duplication between do_gettext
> and do_ngettext. Which should make it easier to maintain. But all of that
> is moot if there is no way to keep the literal strings from sources in
> UTF-8 anyhow.
>
> Before starting on this I did actually read your blogpost about UTF-8
> several times and it seems like the best way forward. Not to mention it
> would make my life easier and me happier when I can stop worrying about
> Windows/Dos codepages!
> Thank you for your work on it indeed!
>
> But my problem with that is that a number of people still use an older
> version of windows and your solution won't work there. Which would mean
> that we either drop support for them or they would have to live with either
> weirdlooking translations. Or I have to go back to the suboptimal solution
> of the "C" locale which I really do want to avoid. Because as you said it
> breaks other stuff in unpredictable ways.
>
>
>> > The problem I'm stuck with now is simply this:
>> > I have an R pkg here that I want to test the translations with and the
>> code
>> > is definitely saved as UTF-8, the package has "Encoding: UTF-8" in the
>> > DESCRIPTION and it all loads and works. The particular problem I have is
>> > that the R code contains literally: `mathotString <- "Math?t!"`
>> > The actual file contains the hexadecimal representation of ? as proper
>> > utf-8: "0xC3 0xB4" but R turns it into: "0xf4".
>> > Seemingly on loading the package, because I haven't done anything with
>> it
>> > except put it in my debug c-function to print its contents as
>> > hexadecimals...
>> >
>> > The only thing I want to achieve here is that when R loads the package
>> it
>> > keeps those strings in their original UTF-8 encoding, without
>> converting it
>> > to "native" or the strange unicode codepoint it seemingly placed in
>> there
>> > instead. Because otherwise I cannot get gettext to work fully in UTF-8
>> mode.
>> >
>> > Is this already possible in R?
>>
>> In principle, working with strings not representable in the current
>> encoding is not reliable (and never will be). It can still work in some
>> specific cases and uses. Parsing a UTF-8 string literal from a file,
>> with correctly declared encoding as documented in WRE, should work at
>> least in single-byte encodings. But what happens after that string is
>> parsed is another thing. The parsing is based internally on using these
>> "shortcuts", that is lying to a part of the parser about the encoding,
>> and telling the rest of the parser that it is really something else (not
>> native, but UTF-8).
>
>
> So the reason the string literals are turned into the local encoding is
> because setting the "Encoding" on a package is essentially a hack?
>
>
>> The part that is being "lied to" may get confused or
>> not. It would not when the real native encoding is say latin1, a common
>> case in the past for which the hack was created, but it might when it is
>> a double-byte encoding that conflicts with the text being parsed in
>> dangerous ways. This is also why this hack only makes sense for string
>> literals (and comments), and still only to a limit as the strings may be
>> misinterpreted later after parsing.
>>
>
> Well our case is entirely limited to string literals that are presented to
> the user through an all-utf-8 interface.
> So I would assume not of the edge-cases would come into play.
> Any systempaths and things like that would still be in local encoding.
>
>
>> So a really short summary is: you can only reliably use strings
>> representable in the current encoding in R, and that encoding cannot be
>> UTF-8 on Windows in released versions of R. There is an experimental
>> version, see [1], if you could experiment with that and see whether that
>> might work for your applications, could try to find and report bugs
>> there (e.g. to me directly), that would be useful.
>>
>
> So when I read in certain R documentation that string can have an "UTF-8"
> encoding in R this is not true?
> As in, when I read documentation such as
> https://stat.ethz.ch/R-manual/R-devel/library/base/html/Encoding.html it
> really seems to indicate to me that UTF-8 is in fact supported in R on
> windows.
> My assumption was that R uses `translateChar` internally to make sure it
> is in the right encoding before interfacing with the OS and other places
> where this might matter.
>
>
>> If you find behavior re encodings in released versions of R that
>> contradicts the current documentation, please report with a minimal
>> reproducible example, such cases should be fixed (even though sometimes
>> the "fix" would be just changing the documentation, the effort really
>> should be now for supporting UTF-8 for real). Specifically with
>> "mathotString", you might try creating  an example that does not include
>> any package (just calls to parse with encoding options set), only then
>> gradually adding more of package loading if that does not reproduce. It
>> would be important to know the current encoding (sessionInfo, l10n_info).
>>
>
> Well, the reason I mailed the mailing list was because I couldn't for the
> life of me find any documentation that told me anything in particular about
> how literal strings are supposed to be stored in memory. But it just seems
> logical to me that if R already supports parsing and loading a package
> encoded with UTF-8 and it supports having UTF-8 strings in memory next to
> strings in native encoding the most straightforward way of loading this
> literal strings would be in UTF-8.
>
> I would love to use the new version of R that supports properly
> interfacing with windows 10.
> And given that the only other supported version of Windows is 8.1 and
> barely anyone uses it. So it might be worth dropping support for that.
> I just hoped I could find a workable solution without such a step.
>
> Cheers,
> Joris
>
>
>>
>> Best,
>> Tomas
>>
>> [1]
>>
>> https://developer.r-project.org/Blog/public/2020/07/30/windows/utf-8-build-of-r-and-cran-packages/index.html
>>
>> >
>> > Cheers,
>> > Joris
>>
>> >
>> >
>> > On Wed, 16 Dec 2020 at 20:15, David Bosak <dbosak01 at gmail.com> wrote:
>> >
>> >> Joris:
>> >>
>> >>
>> >>
>> >> I?ve fought with encoding problems on Windows a lot.  Here are some
>> >> general suggestions.
>> >>
>> >>
>> >>
>> >>     1. Put ?@encoding UTF-8? on any Roxygen comments.
>> >>     2. Put ?encoding = ?UTF-8? on any functions like writeLines or
>> >>     readLines that read/write to a text file.
>> >>     3. This post:
>> >>
>> https://kevinushey.github.io/blog/2018/02/21/string-encoding-and-r/
>> >>
>> >>
>> >>
>> >> If you have a more specific problem, please describe and we can try to
>> >> help.
>> >>
>> >>
>> >>
>> >> David
>> >>
>> >>
>> >>
>> >> Sent from Mail <https://go.microsoft.com/fwlink/?LinkId=550986> for
>> >> Windows 10
>> >>
>> >>
>> >>
>> >> *From: *joris at jorisgoosen.nl
>> >> *Sent: *Wednesday, December 16, 2020 1:52 PM
>> >> *To: *r-package-devel at r-project.org
>> >> *Subject: *[R-pkg-devel] Package Encoding and Literal Strings
>> >>
>> >>
>> >>
>> >> Hello All,
>> >>
>> >>
>> >>
>> >> Some context, I am one of the programmers of a software pkg (
>> >>
>> >> https://jasp-stats.org/) that uses an embedded instance of R to do
>> >>
>> >> statistics. And make that a bit easier for people who are intimidated
>> by R
>> >>
>> >> or like to have something more GUI oriented.
>> >>
>> >>
>> >>
>> >>
>> >>
>> >> We have been working on translating the interface but ran into several
>> >>
>> >> problems related to encoding of strings. We prefer to use UTF-8 for
>> >>
>> >> everything and this works wonderful on unix systems, as is to be
>> expected.
>> >>
>> >>
>> >>
>> >> Windows however is a different matter. Currently I am working on some
>> local
>> >>
>> >> changes to "do_gettext" and some related internal functions of R to be
>> able
>> >>
>> >> to get UTF-8 encoded output from there.
>> >>
>> >>
>> >>
>> >> But I ran into a bit of a problem and I think this mailinglist is
>> probably
>> >>
>> >> the best place to start.
>> >>
>> >>
>> >>
>> >> It seems that if I have an R package that specifies "Encoding: UTF-8"
>> in
>> >>
>> >> DESCRIPTION the literal strings inside the package are converted to the
>> >>
>> >> local codeset/codepage regardless of what I want.
>> >>
>> >>
>> >>
>> >> Is it possible to keep the strings in UTF-8 internally in such a pkg
>> >>
>> >> somehow?
>> >>
>> >>
>> >>
>> >> Best regards,
>> >>
>> >> Joris Goosen
>> >>
>> >> University of Amsterdam
>> >>
>> >>
>> >>
>> >>                  [[alternative HTML version deleted]]
>> >>
>> >>
>> >>
>> >> ______________________________________________
>> >>
>> >> R-package-devel at r-project.org mailing list
>> >>
>> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> >>
>> >>
>> >>
>> >       [[alternative HTML version deleted]]
>> >
>> > ______________________________________________
>> > R-package-devel at r-project.org mailing list
>> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>>
>>

	[[alternative HTML version deleted]]


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Thu Dec 17 18:22:27 2020
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Thu, 17 Dec 2020 18:22:27 +0100
Subject: [R-pkg-devel] Package Encoding and Literal Strings
In-Reply-To: <CANfj7v+dnyiX0E5RtJ8kherbXNddh=MeWua4qMg13rjQNULQcw@mail.gmail.com>
References: <CANfj7vJTwLmkfO0sq4c1ws+Gn+Lji7LhEqvOcWJGfuVGCk+L5w@mail.gmail.com>
 <E626F78F-2B8F-4AE8-9261-7C82B42738D2@hxcore.ol>
 <CANfj7v+QiZGMyWEK3g-HP+Rox0Wmck91UwjMmpn0Cm7yCkNL7w@mail.gmail.com>
 <cd8b321e-759e-e9a1-5b57-ced4e2720a26@gmail.com>
 <CANfj7v+dnyiX0E5RtJ8kherbXNddh=MeWua4qMg13rjQNULQcw@mail.gmail.com>
Message-ID: <dee044d0-fdf4-875d-24d6-63b9aa7f6d4f@gmail.com>

On 12/17/20 5:17 PM, joris at jorisgoosen.nl wrote:
>
>
> On Thu, 17 Dec 2020 at 10:46, Tomas Kalibera <tomas.kalibera at gmail.com 
> <mailto:tomas.kalibera at gmail.com>> wrote:
>
>     On 12/16/20 11:07 PM, joris at jorisgoosen.nl
>     <mailto:joris at jorisgoosen.nl> wrote:
>     > David,
>     >
>     > Thanks for the response!
>     >
>     > So the problem is a bit worse then just setting
>     `encoding="UTF-8"` on
>     > functions like readLines.
>     > I'll describe our setup a bit:
>     > So we run R embedded in a separate executable and through a
>     whole bunch of
>     > C(++) magic get that to the main executable that runs the actual
>     interface.
>     > All the code that isn't R basically uses UTF-8. This works good
>     and we've
>     > made sure that all of our source code is encoded properly and
>     I've verified
>     > that for this particular problem at least my source file is
>     definitely
>     > encoded in UTF-8 (Ive checked a hexdump).
>     >
>     > The simplest solution, that we initially took, to get R+Windows to
>     > cooperate with everything is to simply set the locale to "C" before
>     > starting R. That way R simply assumes UTF-8 is native and
>     everything worked
>     > splendidly. Until of course a file needs to be opened in R that
>     contains
>     > some non-ASCII characters. I noticed the problem because a
>     korean user had
>     > hangul in his username and that broke everything. This because R
>     was trying
>     > to convert to a different locale than Windows was using.
>
>     Setting locale to "C" does not make R assume UTF-8 is the native
>     encoding, there is no way to make UTF-8 the current native
>     encoding in R
>     on the current builds of R on Windows. This is an old limitation of
>     Windows, only recently fixed by Microsoft in recent Windows 10 and
>     with
>     UCRT Windows runtime (see my blog post [1] for more - to make R
>     support
>     this we need a new toolchain to build R).
>
>     If you set the locale to C encoding, you are telling R the native
>     encoding is C/POSIX (essentially ASCII), not UTF-8.
>     Encoding-sensitive
>     operations, including conversions, including those conversions that
>     happen without user control e.g. for interacting with Windows, will
>     produce incorrect results (garbage) or in better case errors,
>     warnings,
>     omitted, substituted or transliterated characters.
>
>     In principle setting the encoding via locale is dangerous on Windows,
>     because Windows has two current encodings, not just one. By setting
>     locale you set the one used in the C runtime, but not the other
>     one used
>     by the system calls. If all code (in R, packages, external libraries)
>     was perfect, this would still work as long as all strings used were
>     representable in both encodings. For other strings it won't work, and
>     then code is not perfect in this regard, it is usually written
>     assuming
>     there is one current encoding, which common sense dictates should
>     be the
>     case. With the recent UTF-8 support ([1]), one can switch both of
>     these
>     to UTF-8.
>
>
> Well, this is exactly why I want to get rid of the situation. But this 
> messes up the output because everything else expects UTF-8 which is 
> why I'm looking for some kind of solution.
>
>     > The solution I've now been working on is:
>     > I took the sourcecode of R 4.0.3 and changed the backend of
>     "gettext" to
>     > add an `encoding="something something"` option. And a bit of
>     extra stuff
>     > like `bind_textdomain_codeset` in case I need to tweak the
>     codeset/charset
>     > that gettext uses.
>     > I think I've got that working properly now and once I solve the
>     problem of
>     > the encoding in a pkg I will open a bugreport/feature-request
>     and I'll add
>     > a patch that implements it.
>
>     A number of similar "shortcuts" have been added to R in the past, but
>     they may the code more complex, harder to maintain and use, and can't
>     realistically solve all of these problems, anyway. Strings will
>     eventually be assumed to be in what is the current native encoding by
>     the C library. In R, any external code R uses, or code R packages
>     use.
>     Now that Microsoft finally is supporting UTF-8, the way to get out of
>     this is switching to UTF-8. This needs only small changes to R source
>     code compared to those "shortcuts" (or to using UTF-16LE). I'd be
>     against polluting the code with any more "shortcuts".
>
>
> I think the addition of " bind_textdomain_codeset" is not strictly 
> necessary and can be left out. Because I think setting an environment 
> variable as "OUTPUT_CHARSET=UTF-8" gives the same result for us.
> The addition of the "encoding" option to the internal "do_gettext" is 
> just a few lines of code and I also undid some duplication between 
> do_gettext and do_ngettext. Which should make it easier to maintain. 
> But all of that is moot if there is no way to keep the literal strings 
> from sources in UTF-8 anyhow.
>
> Before starting on this I did actually read your blogpost about UTF-8 
> several times and it seems like the best way forward. Not to mention 
> it would make my life easier and me happier when I can stop worrying 
> about Windows/Dos codepages!
> Thank you for your work on it indeed!
>
> But my problem with that is that a number of people still use an older 
> version of windows and your solution won't work there. Which would 
> mean that we either drop support for them or they would have to live 
> with either weirdlooking translations. Or I have to go back to the 
> suboptimal solution of the "C" locale which I really do want to avoid. 
> Because as you said it breaks other stuff in unpredictable ways.

The number of people using too old version of Windows should be small 
when this could become ready for production. Windows 8.1. is still 
supported, but there is the free upgrade to Windows 10 (also from no 
longer supported Windows 7), so this should not be a problem for desktop 
machines. It will be a problem for servers.

>
>     > The problem I'm stuck with now is simply this:
>     > I have an R pkg here that I want to test the translations with
>     and the code
>     > is definitely saved as UTF-8, the package has "Encoding: UTF-8"
>     in the
>     > DESCRIPTION and it all loads and works. The particular problem I
>     have is
>     > that the R code contains literally: `mathotString <- "Math?t!"`
>     > The actual file contains the hexadecimal representation of ? as
>     proper
>     > utf-8: "0xC3 0xB4" but R turns it into: "0xf4".
>     > Seemingly on loading the package, because I haven't done
>     anything with it
>     > except put it in my debug c-function to print its contents as
>     > hexadecimals...
>     >
>     > The only thing I want to achieve here is that when R loads the
>     package it
>     > keeps those strings in their original UTF-8 encoding, without
>     converting it
>     > to "native" or the strange unicode codepoint it seemingly placed
>     in there
>     > instead. Because otherwise I cannot get gettext to work fully in
>     UTF-8 mode.
>     >
>     > Is this already possible in R?
>
>     In principle, working with strings not representable in the current
>     encoding is not reliable (and never will be). It can still work in
>     some
>     specific cases and uses. Parsing a UTF-8 string literal from a file,
>     with correctly declared encoding as documented in WRE, should work at
>     least in single-byte encodings. But what happens after that string is
>     parsed is another thing. The parsing is based internally on using
>     these
>     "shortcuts", that is lying to a part of the parser about the
>     encoding,
>     and telling the rest of the parser that it is really something
>     else (not
>     native, but UTF-8).
>
>
> So the reason the string literals are turned into the local encoding 
> is because setting the "Encoding" on a package is essentially a hack?

String literals may be turned into local encoding because that is how 
R/packages/external software is written - it needs native encoding. 
Hacks here come when such code is given a string not in the local 
encoding, assuming that under some conditions such code will work. This 
includes a part of the parser and a hack to implement argument 
"encoding" of "parse()", which allows to parse (non-representable) UTF-8 
strings when running in a single-byte locale such as latin 1 (see ?parse).

>     The part that is being "lied to" may get confused or
>     not. It would not when the real native encoding is say latin1, a
>     common
>     case in the past for which the hack was created, but it might when
>     it is
>     a double-byte encoding that conflicts with the text being parsed in
>     dangerous ways. This is also why this hack only makes sense for
>     string
>     literals (and comments), and still only to a limit as the strings
>     may be
>     misinterpreted later after parsing.
>
>
> Well our case is entirely limited to string literals that are 
> presented to the user through an all-utf-8 interface.
> So I would assume not of the edge-cases would come into play.
> Any systempaths and things like that would still be in local encoding.

>
>
>     So a really short summary is: you can only reliably use strings
>     representable in the current encoding in R, and that encoding
>     cannot be
>     UTF-8 on Windows in released versions of R. There is an experimental
>     version, see [1], if you could experiment with that and see
>     whether that
>     might work for your applications, could try to find and report bugs
>     there (e.g. to me directly), that would be useful.
>
>
> So when I read in certain R documentation that string can have an 
> "UTF-8" encoding in R this is not true?
> As in, when I read documentation such as 
> https://stat.ethz.ch/R-manual/R-devel/library/base/html/Encoding.html 
> it really seems to indicate to me that UTF-8 is in fact supported in R 
> on windows.
> My assumption was that R uses `translateChar` internally to make sure 
> it is in the right encoding before interfacing with the OS and other 
> places where this might matter.

UTF-8 is supported in R on Windows in many ways, as documented. As long 
as you are using UTF-8 strings representable in the current encoding, so 
that they can be converted to native encoding and back without problems, 
you are fine, R will do the conversions as needed. The troubles come 
when such conversion is not possible. In the example of the parser, 
without the "encoding=" argument to "parse()", the parser will just work 
on any text you give to it, even when the text is in UTF-8: it will work 
by first converting to native encoding and then doing the parsing, no 
hacks involved. When interacting with external software, you'd just tell 
R to provide the strings in the encoding needed by that external 
software, so possibly UTF-8, so possibly convert, but all would work 
fine. The problem are characters not representable in the native encoding.

>     If you find behavior re encodings in released versions of R that
>     contradicts the current documentation, please report with a minimal
>     reproducible example, such cases should be fixed (even though
>     sometimes
>     the "fix" would be just changing the documentation, the effort really
>     should be now for supporting UTF-8 for real). Specifically with
>     "mathotString", you might try creating? an example that does not
>     include
>     any package (just calls to parse with encoding options set), only
>     then
>     gradually adding more of package loading if that does not
>     reproduce. It
>     would be important to know the current encoding (sessionInfo,
>     l10n_info).
>
>
> Well, the reason I mailed the mailing list was because I couldn't for 
> the life of me find any documentation that told me anything in 
> particular about how literal strings are supposed to be stored in 
> memory. But it just seems logical to me that if R already supports 
> parsing and loading a package encoded with UTF-8 and it supports 
> having UTF-8 strings in memory next to strings in native encoding the 
> most straightforward way of loading this literal strings would be in 
> UTF-8.

You mean the memory representation? For that there would be R Internals 
and the sources, essentially there are CHARSXP objects which include an 
encoding tag (UTF-8, Latin-1 or native) and the raw bytes. But you would 
not access these objects directly, instead use translateChar() if you 
needed strings them in native encoding or translateCharUTF8() if in 
UTF-8, and this is documented in Writing R Extensions.

I think it would be really good if you could provide a complete, minimal 
reproducible example of your problem. It may be there is some 
misunderstanding, especially if you are working with characters 
representable in the current encoding, there should be no problem.

> I would love to use the new version of R that supports properly 
> interfacing with windows 10.
> And given that the only other supported version of Windows is 8.1 and 
> barely anyone uses it. So it might be worth dropping support for that.
> I just hoped I could find a workable solution without such a step.

I understand, also it may take a bit of time before this would become 
stable.

Best
Tomas


> Cheers,
> Joris
>
>
>     Best,
>     Tomas
>
>     [1]
>     https://developer.r-project.org/Blog/public/2020/07/30/windows/utf-8-build-of-r-and-cran-packages/index.html
>
>     >
>     > Cheers,
>     > Joris
>
>     >
>     >
>     > On Wed, 16 Dec 2020 at 20:15, David Bosak <dbosak01 at gmail.com
>     <mailto:dbosak01 at gmail.com>> wrote:
>     >
>     >> Joris:
>     >>
>     >>
>     >>
>     >> I?ve fought with encoding problems on Windows a lot.? Here are some
>     >> general suggestions.
>     >>
>     >>
>     >>
>     >>? ? ?1. Put ?@encoding UTF-8? on any Roxygen comments.
>     >>? ? ?2. Put ?encoding = ?UTF-8? on any functions like writeLines or
>     >>? ? ?readLines that read/write to a text file.
>     >>? ? ?3. This post:
>     >> https://kevinushey.github.io/blog/2018/02/21/string-encoding-and-r/
>     >>
>     >>
>     >>
>     >> If you have a more specific problem, please describe and we can
>     try to
>     >> help.
>     >>
>     >>
>     >>
>     >> David
>     >>
>     >>
>     >>
>     >> Sent from Mail <https://go.microsoft.com/fwlink/?LinkId=550986> for
>     >> Windows 10
>     >>
>     >>
>     >>
>     >> *From: *joris at jorisgoosen.nl <mailto:joris at jorisgoosen.nl>
>     >> *Sent: *Wednesday, December 16, 2020 1:52 PM
>     >> *To: *r-package-devel at r-project.org
>     <mailto:r-package-devel at r-project.org>
>     >> *Subject: *[R-pkg-devel] Package Encoding and Literal Strings
>     >>
>     >>
>     >>
>     >> Hello All,
>     >>
>     >>
>     >>
>     >> Some context, I am one of the programmers of a software pkg (
>     >>
>     >> https://jasp-stats.org/) that uses an embedded instance of R to do
>     >>
>     >> statistics. And make that a bit easier for people who are
>     intimidated by R
>     >>
>     >> or like to have something more GUI oriented.
>     >>
>     >>
>     >>
>     >>
>     >>
>     >> We have been working on translating the interface but ran into
>     several
>     >>
>     >> problems related to encoding of strings. We prefer to use UTF-8 for
>     >>
>     >> everything and this works wonderful on unix systems, as is to
>     be expected.
>     >>
>     >>
>     >>
>     >> Windows however is a different matter. Currently I am working
>     on some local
>     >>
>     >> changes to "do_gettext" and some related internal functions of
>     R to be able
>     >>
>     >> to get UTF-8 encoded output from there.
>     >>
>     >>
>     >>
>     >> But I ran into a bit of a problem and I think this mailinglist
>     is probably
>     >>
>     >> the best place to start.
>     >>
>     >>
>     >>
>     >> It seems that if I have an R package that specifies "Encoding:
>     UTF-8" in
>     >>
>     >> DESCRIPTION the literal strings inside the package are
>     converted to the
>     >>
>     >> local codeset/codepage regardless of what I want.
>     >>
>     >>
>     >>
>     >> Is it possible to keep the strings in UTF-8 internally in such
>     a pkg
>     >>
>     >> somehow?
>     >>
>     >>
>     >>
>     >> Best regards,
>     >>
>     >> Joris Goosen
>     >>
>     >> University of Amsterdam
>     >>
>     >>
>     >>
>     >>? ? ? ? ? ? ? ? ? [[alternative HTML version deleted]]
>     >>
>     >>
>     >>
>     >> ______________________________________________
>     >>
>     >> R-package-devel at r-project.org
>     <mailto:R-package-devel at r-project.org> mailing list
>     >>
>     >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>     >>
>     >>
>     >>
>     >? ? ? ?[[alternative HTML version deleted]]
>     >
>     > ______________________________________________
>     > R-package-devel at r-project.org
>     <mailto:R-package-devel at r-project.org> mailing list
>     > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>


	[[alternative HTML version deleted]]


From joris m@iii@g oii jorisgoose@@@i  Thu Dec 17 18:43:08 2020
From: joris m@iii@g oii jorisgoose@@@i (joris m@iii@g oii jorisgoose@@@i)
Date: Thu, 17 Dec 2020 18:43:08 +0100
Subject: [R-pkg-devel] Package Encoding and Literal Strings
In-Reply-To: <dee044d0-fdf4-875d-24d6-63b9aa7f6d4f@gmail.com>
References: <CANfj7vJTwLmkfO0sq4c1ws+Gn+Lji7LhEqvOcWJGfuVGCk+L5w@mail.gmail.com>
 <E626F78F-2B8F-4AE8-9261-7C82B42738D2@hxcore.ol>
 <CANfj7v+QiZGMyWEK3g-HP+Rox0Wmck91UwjMmpn0Cm7yCkNL7w@mail.gmail.com>
 <cd8b321e-759e-e9a1-5b57-ced4e2720a26@gmail.com>
 <CANfj7v+dnyiX0E5RtJ8kherbXNddh=MeWua4qMg13rjQNULQcw@mail.gmail.com>
 <dee044d0-fdf4-875d-24d6-63b9aa7f6d4f@gmail.com>
Message-ID: <CANfj7vLL89Cp762TUVzLYBnQXP-yi5b6KvCjc+z1sZ4OfmW=Jw@mail.gmail.com>

On Thu, 17 Dec 2020 at 18:22, Tomas Kalibera <tomas.kalibera at gmail.com>
wrote:

> On 12/17/20 5:17 PM, joris at jorisgoosen.nl wrote:
>
>
>
> On Thu, 17 Dec 2020 at 10:46, Tomas Kalibera <tomas.kalibera at gmail.com>
> wrote:
>
>> On 12/16/20 11:07 PM, joris at jorisgoosen.nl wrote:
>> > David,
>> >
>> > Thanks for the response!
>> >
>> > So the problem is a bit worse then just setting `encoding="UTF-8"` on
>> > functions like readLines.
>> > I'll describe our setup a bit:
>> > So we run R embedded in a separate executable and through a whole bunch
>> of
>> > C(++) magic get that to the main executable that runs the actual
>> interface.
>> > All the code that isn't R basically uses UTF-8. This works good and
>> we've
>> > made sure that all of our source code is encoded properly and I've
>> verified
>> > that for this particular problem at least my source file is definitely
>> > encoded in UTF-8 (Ive checked a hexdump).
>> >
>> > The simplest solution, that we initially took, to get R+Windows to
>> > cooperate with everything is to simply set the locale to "C" before
>> > starting R. That way R simply assumes UTF-8 is native and everything
>> worked
>> > splendidly. Until of course a file needs to be opened in R that contains
>> > some non-ASCII characters. I noticed the problem because a korean user
>> had
>> > hangul in his username and that broke everything. This because R was
>> trying
>> > to convert to a different locale than Windows was using.
>>
>> Setting locale to "C" does not make R assume UTF-8 is the native
>> encoding, there is no way to make UTF-8 the current native encoding in R
>> on the current builds of R on Windows. This is an old limitation of
>> Windows, only recently fixed by Microsoft in recent Windows 10 and with
>> UCRT Windows runtime (see my blog post [1] for more - to make R support
>> this we need a new toolchain to build R).
>>
>> If you set the locale to C encoding, you are telling R the native
>> encoding is C/POSIX (essentially ASCII), not UTF-8. Encoding-sensitive
>> operations, including conversions, including those conversions that
>> happen without user control e.g. for interacting with Windows, will
>> produce incorrect results (garbage) or in better case errors, warnings,
>> omitted, substituted or transliterated characters.
>>
>> In principle setting the encoding via locale is dangerous on Windows,
>> because Windows has two current encodings, not just one. By setting
>> locale you set the one used in the C runtime, but not the other one used
>> by the system calls. If all code (in R, packages, external libraries)
>> was perfect, this would still work as long as all strings used were
>> representable in both encodings. For other strings it won't work, and
>> then code is not perfect in this regard, it is usually written assuming
>> there is one current encoding, which common sense dictates should be the
>> case. With the recent UTF-8 support ([1]), one can switch both of these
>> to UTF-8.
>>
>
> Well, this is exactly why I want to get rid of the situation. But this
> messes up the output because everything else expects UTF-8 which is why I'm
> looking for some kind of solution.
>
>
>
>> > The solution I've now been working on is:
>> > I took the sourcecode of R 4.0.3 and changed the backend of "gettext" to
>> > add an `encoding="something something"` option. And a bit of extra stuff
>> > like `bind_textdomain_codeset` in case I need to tweak the
>> codeset/charset
>> > that gettext uses.
>> > I think I've got that working properly now and once I solve the problem
>> of
>> > the encoding in a pkg I will open a bugreport/feature-request and I'll
>> add
>> > a patch that implements it.
>>
>> A number of similar "shortcuts" have been added to R in the past, but
>> they may the code more complex, harder to maintain and use, and can't
>> realistically solve all of these problems, anyway. Strings will
>> eventually be assumed to be in what is the current native encoding by
>> the C library. In R, any external code R uses, or code R packages use.
>> Now that Microsoft finally is supporting UTF-8, the way to get out of
>> this is switching to UTF-8. This needs only small changes to R source
>> code compared to those "shortcuts" (or to using UTF-16LE). I'd be
>> against polluting the code with any more "shortcuts".
>>
>
> I think the addition of " bind_textdomain_codeset" is not strictly
> necessary and can be left out. Because I think setting an environment
> variable as "OUTPUT_CHARSET=UTF-8" gives the same result for us.
> The addition of the "encoding" option to the internal "do_gettext" is just
> a few lines of code and I also undid some duplication between do_gettext
> and do_ngettext. Which should make it easier to maintain. But all of that
> is moot if there is no way to keep the literal strings from sources in
> UTF-8 anyhow.
>
> Before starting on this I did actually read your blogpost about UTF-8
> several times and it seems like the best way forward. Not to mention it
> would make my life easier and me happier when I can stop worrying about
> Windows/Dos codepages!
> Thank you for your work on it indeed!
>
> But my problem with that is that a number of people still use an older
> version of windows and your solution won't work there. Which would mean
> that we either drop support for them or they would have to live with either
> weirdlooking translations. Or I have to go back to the suboptimal solution
> of the "C" locale which I really do want to avoid. Because as you said it
> breaks other stuff in unpredictable ways.
>
> The number of people using too old version of Windows should be small when
> this could become ready for production. Windows 8.1. is still supported,
> but there is the free upgrade to Windows 10 (also from no longer supported
> Windows 7), so this should not be a problem for desktop machines. It will
> be a problem for servers.
>
Well, I would not expect anyone to use a GUI-heavy application meant for
researchers on a server anyway so that would be fine.

>
>
>> > The problem I'm stuck with now is simply this:
>> > I have an R pkg here that I want to test the translations with and the
>> code
>> > is definitely saved as UTF-8, the package has "Encoding: UTF-8" in the
>> > DESCRIPTION and it all loads and works. The particular problem I have is
>> > that the R code contains literally: `mathotString <- "Math?t!"`
>> > The actual file contains the hexadecimal representation of ? as proper
>> > utf-8: "0xC3 0xB4" but R turns it into: "0xf4".
>> > Seemingly on loading the package, because I haven't done anything with
>> it
>> > except put it in my debug c-function to print its contents as
>> > hexadecimals...
>> >
>> > The only thing I want to achieve here is that when R loads the package
>> it
>> > keeps those strings in their original UTF-8 encoding, without
>> converting it
>> > to "native" or the strange unicode codepoint it seemingly placed in
>> there
>> > instead. Because otherwise I cannot get gettext to work fully in UTF-8
>> mode.
>> >
>> > Is this already possible in R?
>>
>> In principle, working with strings not representable in the current
>> encoding is not reliable (and never will be). It can still work in some
>> specific cases and uses. Parsing a UTF-8 string literal from a file,
>> with correctly declared encoding as documented in WRE, should work at
>> least in single-byte encodings. But what happens after that string is
>> parsed is another thing. The parsing is based internally on using these
>> "shortcuts", that is lying to a part of the parser about the encoding,
>> and telling the rest of the parser that it is really something else (not
>> native, but UTF-8).
>
>
> So the reason the string literals are turned into the local encoding is
> because setting the "Encoding" on a package is essentially a hack?
>
> String literals may be turned into local encoding because that is how
> R/packages/external software is written - it needs native encoding. Hacks
> here come when such code is given a string not in the local encoding,
> assuming that under some conditions such code will work. This includes a
> part of the parser and a hack to implement argument "encoding" of
> "parse()", which allows to parse (non-representable) UTF-8 strings when
> running in a single-byte locale such as latin 1 (see ?parse).
>
So the same `parse` function is used for loading a package?
Because in that case I wonder if the "Encoding" option in "DESCRIPTION" is
handled the same as `encoding=` in parse.

?parse states:
> Character strings in the result will have a declared encoding if encoding
is "latin1" or "UTF-8", or if text is supplied with every element of known
encoding in a Latin-1 or UTF-8 locale.

The sentence is a bit hard for me personally to parse but I interpret that
first part to mean that if "encoding" is specified as "UTF-8" all the
character string in the result will also have that encoding.
Is that a correct interpretation?
Because if so I do believe I found a problem and I will try to make a
minimal reproducable example.


>
>
>> The part that is being "lied to" may get confused or
>> not. It would not when the real native encoding is say latin1, a common
>> case in the past for which the hack was created, but it might when it is
>> a double-byte encoding that conflicts with the text being parsed in
>> dangerous ways. This is also why this hack only makes sense for string
>> literals (and comments), and still only to a limit as the strings may be
>> misinterpreted later after parsing.
>>
>
> Well our case is entirely limited to string literals that are presented to
> the user through an all-utf-8 interface.
> So I would assume not of the edge-cases would come into play.
> Any systempaths and things like that would still be in local encoding.
>
>
>
>
>> So a really short summary is: you can only reliably use strings
>> representable in the current encoding in R, and that encoding cannot be
>> UTF-8 on Windows in released versions of R. There is an experimental
>> version, see [1], if you could experiment with that and see whether that
>> might work for your applications, could try to find and report bugs
>> there (e.g. to me directly), that would be useful.
>>
>
> So when I read in certain R documentation that string can have an "UTF-8"
> encoding in R this is not true?
> As in, when I read documentation such as
> https://stat.ethz.ch/R-manual/R-devel/library/base/html/Encoding.html it
> really seems to indicate to me that UTF-8 is in fact supported in R on
> windows.
> My assumption was that R uses `translateChar` internally to make sure it
> is in the right encoding before interfacing with the OS and other places
> where this might matter.
>
> UTF-8 is supported in R on Windows in many ways, as documented. As long as
> you are using UTF-8 strings representable in the current encoding, so that
> they can be converted to native encoding and back without problems, you are
> fine, R will do the conversions as needed. The troubles come when such
> conversion is not possible. In the example of the parser, without the
> "encoding=" argument to "parse()", the parser will just work on any text
> you give to it, even when the text is in UTF-8: it will work by first
> converting to native encoding and then doing the parsing, no hacks
> involved. When interacting with external software, you'd just tell R to
> provide the strings in the encoding needed by that external software, so
> possibly UTF-8, so possibly convert, but all would work fine. The problem
> are characters not representable in the native encoding.
>
Exactly, I want to be able to support chinese etc as well while running in
a west-european locale.
This is also what mislead me, because I thought it was actually reading it
like that but the character is part of my local locale so I didn't notice
it. Especially as it was being printed correctly. I only noticed after
printing the literal values.


>
>
>> If you find behavior re encodings in released versions of R that
>> contradicts the current documentation, please report with a minimal
>> reproducible example, such cases should be fixed (even though sometimes
>> the "fix" would be just changing the documentation, the effort really
>> should be now for supporting UTF-8 for real). Specifically with
>> "mathotString", you might try creating  an example that does not include
>> any package (just calls to parse with encoding options set), only then
>> gradually adding more of package loading if that does not reproduce. It
>> would be important to know the current encoding (sessionInfo, l10n_info).
>>
>
> Well, the reason I mailed the mailing list was because I couldn't for the
> life of me find any documentation that told me anything in particular about
> how literal strings are supposed to be stored in memory. But it just seems
> logical to me that if R already supports parsing and loading a package
> encoded with UTF-8 and it supports having UTF-8 strings in memory next to
> strings in native encoding the most straightforward way of loading this
> literal strings would be in UTF-8.
>
> You mean the memory representation? For that there would be R Internals
> and the sources, essentially there are CHARSXP objects which include an
> encoding tag (UTF-8, Latin-1 or native) and the raw bytes. But you would
> not access these objects directly, instead use translateChar() if you
> needed strings them in native encoding or translateCharUTF8() if in UTF-8,
> and this is documented in Writing R Extensions.
>
Exactly, because gettext operates in C and the source files for that are
also in utf-8 the actual memory representation of the string in R needs to
be identical, otherwise it won't work.

> I think it would be really good if you could provide a complete, minimal
> reproducible example of your problem. It may be there is some
> misunderstanding, especially if you are working with characters
> representable in the current encoding, there should be no problem.
>
It depends on if I now understand ?parse correctly in that it should have
the strings in a package that is parsed with the specified encoding in that
encoding or not. As I wondered above.

> I would love to use the new version of R that supports properly
> interfacing with windows 10.
> And given that the only other supported version of Windows is 8.1 and
> barely anyone uses it. So it might be worth dropping support for that.
> I just hoped I could find a workable solution without such a step.
>
> I understand, also it may take a bit of time before this would become
> stable.
>
Of course.
Hopefully I can still use my current workaround for the time being and then
switch over to the UTF-8 ready version if it becomes production-ready at
some point.

Cheers,
Joris

Best
> Tomas
>
>
> Cheers,
> Joris
>
>
>>
>> Best,
>> Tomas
>>
>> [1]
>>
>> https://developer.r-project.org/Blog/public/2020/07/30/windows/utf-8-build-of-r-and-cran-packages/index.html
>>
>> >
>> > Cheers,
>> > Joris
>>
>> >
>> >
>> > On Wed, 16 Dec 2020 at 20:15, David Bosak <dbosak01 at gmail.com> wrote:
>> >
>> >> Joris:
>> >>
>> >>
>> >>
>> >> I?ve fought with encoding problems on Windows a lot.  Here are some
>> >> general suggestions.
>> >>
>> >>
>> >>
>> >>     1. Put ?@encoding UTF-8? on any Roxygen comments.
>> >>     2. Put ?encoding = ?UTF-8? on any functions like writeLines or
>> >>     readLines that read/write to a text file.
>> >>     3. This post:
>> >>
>> https://kevinushey.github.io/blog/2018/02/21/string-encoding-and-r/
>> >>
>> >>
>> >>
>> >> If you have a more specific problem, please describe and we can try to
>> >> help.
>> >>
>> >>
>> >>
>> >> David
>> >>
>> >>
>> >>
>> >> Sent from Mail <https://go.microsoft.com/fwlink/?LinkId=550986> for
>> >> Windows 10
>> >>
>> >>
>> >>
>> >> *From: *joris at jorisgoosen.nl
>> >> *Sent: *Wednesday, December 16, 2020 1:52 PM
>> >> *To: *r-package-devel at r-project.org
>> >> *Subject: *[R-pkg-devel] Package Encoding and Literal Strings
>> >>
>> >>
>> >>
>> >> Hello All,
>> >>
>> >>
>> >>
>> >> Some context, I am one of the programmers of a software pkg (
>> >>
>> >> https://jasp-stats.org/) that uses an embedded instance of R to do
>> >>
>> >> statistics. And make that a bit easier for people who are intimidated
>> by R
>> >>
>> >> or like to have something more GUI oriented.
>> >>
>> >>
>> >>
>> >>
>> >>
>> >> We have been working on translating the interface but ran into several
>> >>
>> >> problems related to encoding of strings. We prefer to use UTF-8 for
>> >>
>> >> everything and this works wonderful on unix systems, as is to be
>> expected.
>> >>
>> >>
>> >>
>> >> Windows however is a different matter. Currently I am working on some
>> local
>> >>
>> >> changes to "do_gettext" and some related internal functions of R to be
>> able
>> >>
>> >> to get UTF-8 encoded output from there.
>> >>
>> >>
>> >>
>> >> But I ran into a bit of a problem and I think this mailinglist is
>> probably
>> >>
>> >> the best place to start.
>> >>
>> >>
>> >>
>> >> It seems that if I have an R package that specifies "Encoding: UTF-8"
>> in
>> >>
>> >> DESCRIPTION the literal strings inside the package are converted to the
>> >>
>> >> local codeset/codepage regardless of what I want.
>> >>
>> >>
>> >>
>> >> Is it possible to keep the strings in UTF-8 internally in such a pkg
>> >>
>> >> somehow?
>> >>
>> >>
>> >>
>> >> Best regards,
>> >>
>> >> Joris Goosen
>> >>
>> >> University of Amsterdam
>> >>
>> >>
>> >>
>> >>                  [[alternative HTML version deleted]]
>> >>
>> >>
>> >>
>> >> ______________________________________________
>> >>
>> >> R-package-devel at r-project.org mailing list
>> >>
>> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> >>
>> >>
>> >>
>> >       [[alternative HTML version deleted]]
>> >
>> > ______________________________________________
>> > R-package-devel at r-project.org mailing list
>> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>>
>>
>

	[[alternative HTML version deleted]]


From rhe|p @end|ng |rom krueger-|@m||y@de  Thu Dec 17 19:22:35 2020
From: rhe|p @end|ng |rom krueger-|@m||y@de (Knut Krueger)
Date: Thu, 17 Dec 2020 19:22:35 +0100
Subject: [R-pkg-devel] Used package not updated - needs java < V 11
In-Reply-To: <2649764f-4682-ace1-9d4d-2b860eb738d4@effectivedefense.org>
References: <d49373a8-6df6-7d41-e8b3-5269d0039452@krueger-family.de>
 <f0a84729-f10c-49ae-3872-efe502faa623@gmail.com>
 <2649764f-4682-ace1-9d4d-2b860eb738d4@effectivedefense.org>
Message-ID: <7eb3e13f-44fa-6205-45e9-c25c76075169@krueger-family.de>


> 
>  ????? Also, I received an email from CRAN maintainers months ago saying 
> that "gdata" was being obsoleted.? It's still on CRAN with a date of 
> 2017-06-06 and a huge number of reverse dependencies.? The CRAN 
> maintainers may have gotten someone to agree to take it over who just 
> hasn't finished fixing whatever deficiencies it has.? However, you might 
> see how difficult it might be to do without "gdata" as well.
> 
> 
>  ????? Spencer Graves
> 

    Is it permissible to copy the code from rename.vars (gdata) inside 
my package with an hint:

"  Function rename.vars Source code from gdata as gdata is unmaintained 
since 2017-06-06 Rename variables in a dataframe
Author(s)
Don MacQueen (package gdata), macq\@llnl.gov."

it is the only function I am using from gdata.


Knut


From rhe|p @end|ng |rom krueger-|@m||y@de  Thu Dec 17 19:24:00 2020
From: rhe|p @end|ng |rom krueger-|@m||y@de (Knut Krueger)
Date: Thu, 17 Dec 2020 19:24:00 +0100
Subject: [R-pkg-devel] Used package not updated - needs java < V 11
In-Reply-To: <2649764f-4682-ace1-9d4d-2b860eb738d4@effectivedefense.org>
References: <d49373a8-6df6-7d41-e8b3-5269d0039452@krueger-family.de>
 <f0a84729-f10c-49ae-3872-efe502faa623@gmail.com>
 <2649764f-4682-ace1-9d4d-2b860eb738d4@effectivedefense.org>
Message-ID: <2d2d94e6-2545-8959-79c6-ae7b4d5a1888@krueger-family.de>

Am 16.12.20 um 16:57 schrieb Duncan Murdoch:

 > No, you should drop the @importFrom comment completely, and in your R
 > code use those fully qualified forms.
 >
 > Duncan Murdoch
Sorry I did not read carefully

Knut


From @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org  Thu Dec 17 19:50:08 2020
From: @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org (Spencer Graves)
Date: Thu, 17 Dec 2020 12:50:08 -0600
Subject: [R-pkg-devel] Used package not updated - needs java < V 11
In-Reply-To: <7eb3e13f-44fa-6205-45e9-c25c76075169@krueger-family.de>
References: <d49373a8-6df6-7d41-e8b3-5269d0039452@krueger-family.de>
 <f0a84729-f10c-49ae-3872-efe502faa623@gmail.com>
 <2649764f-4682-ace1-9d4d-2b860eb738d4@effectivedefense.org>
 <7eb3e13f-44fa-6205-45e9-c25c76075169@krueger-family.de>
Message-ID: <1c252edc-b0e2-759d-ec3f-1bd36efd57a1@effectivedefense.org>



On 2020-12-17 12:22, Knut Krueger wrote:
> 
>>
>> ?????? Also, I received an email from CRAN maintainers months ago 
>> saying that "gdata" was being obsoleted.? It's still on CRAN with a 
>> date of 2017-06-06 and a huge number of reverse dependencies.? The 
>> CRAN maintainers may have gotten someone to agree to take it over who 
>> just hasn't finished fixing whatever deficiencies it has.? However, 
>> you might see how difficult it might be to do without "gdata" as well.
>>
>>
>> ?????? Spencer Graves
>>
> 
>  ?? Is it permissible to copy the code from rename.vars (gdata) inside 
> my package with an hint:
> 
> "? Function rename.vars Source code from gdata as gdata is unmaintained 
> since 2017-06-06 Rename variables in a dataframe
> Author(s)
> Don MacQueen (package gdata), macq\@llnl.gov."
> 
> it is the only function I am using from gdata.


	  That's definitely consistent with the GPL-2 license it carries as 
long as you aren't trying to charge royalties for use of your package. 
See:


https://CRAN.R-project.org/package=gdata


	  And the tarball is available at this link to make it easy for you to 
do that.


	  Regarding my earlier comment about to gdata being potentially 
obsoleted, I don't see evidence of that now:  There is only one "Note" 
in the "CRAN checks", and that would seem to be a problem more with that 
platform than with the gdata package.  The problem that Brian Ripley 
mentioned in his email about this 2020-09-11 may have been with 
something else that gdata used that has since been fixed.


	  I would normally prefer to let the gdata maintainers continue to 
maintain a function like this.  However, you seem to have a compelling 
reason for copying that function and only citing the original for the 
source of where you got the code.  You might include, e.g., 
\code{\link[gdata]{rename.vars}}.


	  CAVEAT:  Please ignore the above if contradicted by someone more 
knowledgeable than I am about CRAN and R policies and recommendations.


	  Spencer


> Knut
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From |@|@ye @end|ng |rom un@w@edu@@u  Fri Dec 18 06:15:09 2020
From: |@|@ye @end|ng |rom un@w@edu@@u (Pierre Lafaye de Micheaux)
Date: Fri, 18 Dec 2020 05:15:09 +0000
Subject: [R-pkg-devel] =?utf-8?b?W1JlXSAgd2FybmluZzogdHlwZSBvZiDigJh6aHBl?=
 =?utf-8?q?vx=5F=E2=80=99_does_not_match_original_declaration_=5B-Wlto-typ?=
 =?utf-8?q?e-mismatch=5D?=
In-Reply-To: <SYCPR01MB5278EFD16F3D18608132A9B793C30@SYCPR01MB5278.ausprd01.prod.outlook.com>
References: <SYCPR01MB527838C6205A60D005883DE6936D0@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <20200706231157.22ed7b92@trisector>
 <SYCPR01MB5278FB70F4C750AE223EDE4093690@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <CAF8bMcYVziRkSZzdo4T2Bt3TeT4ohjpwjDJiutKFXNHDMVve1A@mail.gmail.com>
 <SYCPR01MB5278AD57988A1ED4AD0D24FC93690@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <CAF8bMcY-519pgq0JfjMjgz-Uy6FJx9zeLxrh0ygH=B==DueP+Q@mail.gmail.com>
 <SYCPR01MB5278ACC7379B3608D084B0CD93660@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <5bbb8f87-6ad1-4d3a-69cc-255d452c4023@gmail.com>
 <SYCPR01MB5278B1DAB3818B36E561CADD93C60@SYCPR01MB5278.ausprd01.prod.outlook.com>,
 <edf96e6f-def6-c4a5-6de1-854f917f84a0@gmail.com>,
 <SYCPR01MB5278EFD16F3D18608132A9B793C30@SYCPR01MB5278.ausprd01.prod.outlook.com>
Message-ID: <SYCPR01MB52781673AD39398A2C42015D93C30@SYCPR01MB5278.ausprd01.prod.outlook.com>

Dear Tomas,

Thank you very much for your feedback. This was really helpful and helped me to find a solution. Even if it is not entirely satisfactory to me (in the sense that I now create new extra pointers which will take unnecessary space in memory), at least the LTO errors are not displayed anymore with Gfortran 8.3.0. Hopefully the CRAN team will find it sufficient to allow me to put my package back on the CRAN.

I explain below what I did in case someone else faces the same problem.

First originally, I could not display these LTO errors on my system (Debian 10 Buster, with Gfortran 8.3.0). I thus modified the file /etc/R/Makeconf by adding -flto after every -fpic I could find.

Second, I was confused by the warning message below:
myzhpevx.cpp:22:16: warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
           void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
Indeed, I thought that the problem was with the type of the function itself, not with the type of one of its arguments. Following your approach of creating a minimalist code (and playing with the arguments one by one), I convinced myself otherwise.

My new code is pasted below for convenience. I used this instruction:

    double _Complex *Cap;
    memcpy(&ap, &Cap, sizeof(ap));

and then in F77_NAME(zhpevx) I replaced
Rcomplex *ap
with
__complex__ double *Cap
and of course, I used Cap instead of ap in F77_CALL(zhpevx).

This trick removes the LTO warning (at the expense of three extra pointers; I had to do it for the three complex pointers ap, z and work).

Thank you once again for your precious help.

Kind regards,
Pierre L.

PS: I CC Professor B. Ripley since he was the one that originally contacted me about this problem, and in case this might trigger the need for a modification of something in R core or in its documentation (though probably this is just the result of my limited knowledge in Fortran and/or C).


#define USE_FC_LEN_T
#include <R.h>
#include "Rmath.h"


#ifdef FC_LEN_T

extern "C" {

  void zhpevxC(char **jobz, char **range, char **uplo, int *n, Rcomplex *ap,
      double *vl, double *vu, int *il, int *iu, double *abstol, int *m,
      double *w, Rcomplex *z, int *ldz, Rcomplex *work, double *rwork,
      int *iwork, int *ifail, int *info) {


    char cjobz[2];
    strncpy(cjobz, jobz[0], 1);
    cjobz[1] = '\0';
    char crange[2];
    strncpy(crange, range[0], 1);
    crange[1] = '\0';
    char cuplo[2];
    strncpy(cuplo, uplo[0], 1);
    cuplo[1] = '\0';

    double _Complex *Cap;
    memcpy(&ap, &Cap, sizeof(ap));
    double _Complex *Cz;
    memcpy(&z, &Cz, sizeof(z));
    double _Complex *Cwork;
    memcpy(&work, &Cwork, sizeof(work));


    void F77_NAME(zhpevx)(const char *jobz, const char *range, const char *uplo,
 const int *n, __complex__ double *Cap, const double *vl,
 const double *vu, const int *il, const int *iu,
 const double *abstol, int *m, double *w,
 __complex__ double *Cz, const int *ldz, __complex__ double *Cwork, double *rwork,
 int *iwork, int *ifail, int *info,
 FC_LEN_T jobz_len,  FC_LEN_T range_len,  FC_LEN_T uplo_len);



    F77_CALL(zhpevx)(cjobz, crange, cuplo, &n[0], Cap, &vl[0], &vu[0], &il[0], &iu[0], &abstol[0], &m[0],
    w, Cz, &ldz[0], Cwork, rwork, iwork, ifail, &info[0], strlen(cjobz), strlen(crange), strlen(cuplo));


    delete[] Cap;
    delete[] Cz;
    delete[] Cwork;

  }

}
#else
extern "C" {

  void zhpevxC(char **jobz, char **range, char **uplo, int *n, Rcomplex *ap,
      double *vl, double *vu, int *il, int *iu, double *abstol, int *m,
      double *w, Rcomplex *z, int *ldz, Rcomplex *work, double *rwork,
      int *iwork, int *ifail, int *info) {

    extern void F77_NAME(zhpevx)(const char *jobz, const char *range, const char *uplo,
const int *n, __complex__ double *Cap, const double *vl,
const double *vu, const int *il, const int *iu,
const double *abstol, int *m, double *w,
__complex__ double *Cz, const int *ldz, __complex__ double *Cwork, double *rwork,
int *iwork, int *ifail, int *info);

    const char *JOBZ = jobz[0];
    const char *RANGE = range[0];
    const char *UPLO = uplo[0];

    double _Complex *Cap;
    memcpy(&ap, &Cap, sizeof(ap));
    double _Complex *Cz;
    memcpy(&z, &Cz, sizeof(z));
    double _Complex *Cwork;
    memcpy(&work, &Cwork, sizeof(work));

    F77_CALL(zhpevx)(JOBZ, RANGE, UPLO, &n[0], Cap, &vl[0], &vu[0], &il[0], &iu[0], &abstol[0], &m[0],
    w, Cz, &ldz[0], Cwork, rwork, iwork, ifail, &info[0]);

    delete[] JOBZ;
    delete[] RANGE;
    delete[] UPLO;

    delete[] Cap;
    delete[] Cz;
    delete[] Cwork;
  }

}
#endif


________________________________
From: Tomas Kalibera <tomas.kalibera at gmail.com>
Sent: Tuesday, 15 December 2020 23:01
To: Pierre Lafaye de Micheaux <lafaye at unsw.edu.au>
Cc: r-package-devel at r-project.org <r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]

Dear Pierre,

your code checks fine on my Ubuntu 20.04 (gcc/gfortran 9.3), but I can reproduce what you are seeing on Debian 10 with gcc 8.3.

There seem to be two problems.

The first one is that the hidden character length arguments are signed, they are of type "long int" (not "size_t"). This is compiler specific and can (and does) change between Fortran compiler versions and I think you can just ignore it. R assumes the type is "size_t", which happens to be correct for newer compilers. The signedness mismatch in this case is benign. FC_LEN_T is defined in R, so if anywhere, this would have to be fixed in R, but we cannot realistically know what the type is for each compiler.

The second problem is that gcc/LTO is complaining about incompatibility between Rcomplex and "COMPLEX*16" types. This was rather tedious to find, I had to minimize the example for that a bit more (remove the Fortran code, just left the subroutine taking the same args, and then removing the args one by one - this is what I meant by minimizing the example). I don't know why the mismatch is reported. Gcc 9.3 is happy.

I would recommend to use a newer compiler, at least for these checks. The warnings have improved (become more informative), you can use -fc-prototypes-external to see what the types should be exactly for your compiler, and perhaps some of the warnings were false positives and have been fixed since.

If you want to stick to the FC_LEN_T and similar macros, I would recommend to check how R does it so that the code compiles also when the extra hidden length arguments are not used by the compiler. Still, a portable way to solve these issues would be via iso_c_binding, with FC_LEN_T we are relying on undocumented/not-standardized behavior of the compiler.

Best,
Tomas





On 12/15/20 7:56 AM, Pierre Lafaye de Micheaux wrote:
Dear Tomas,

Apologies for the very long delay.

I was able to create a minimal version of the package (attached) that gives the same exact warnings:

myzhpevx.cpp:22:16: warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
           void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
                ^
zhpevx.f:232:14: note: type mismatch in parameter 20
       SUBROUTINE zhpevx(JOBZ, RANGE, UPLO, N, AP, VL, VU, IL, IU,
              ^
zhpevx.f:232:14: note: type ?long int? should match type ?size_t?
zhpevx.f:232:14: note: ?zhpevx? was previously declared here
zhpevx.f:232:14: note: code may be misoptimized unless -fno-strict-aliasing is used

I am under the impression that I am following quite closely what is written here: https://cran.csiro.au/doc/manuals/r-patched/R-exts.html#Fortran-character-strings

I tried many different things but I always end up with the same main warning (i.e., type of ?zhpevx_? does not match original declaration ).

My version of fortran: GNU Fortran (Debian 8.3.0-6) 8.3.0 under Debian 10.

Thank you very much for any further help you could provide so that I could have my package back to the CRAN.

Kind regards,
Pierre L.


________________________________
From: Tomas Kalibera <tomas.kalibera at gmail.com><mailto:tomas.kalibera at gmail.com>
Sent: Tuesday, 7 July 2020 15:43
To: Pierre Lafaye de Micheaux <lafaye at unsw.edu.au><mailto:lafaye at unsw.edu.au>
Cc: r-package-devel at r-project.org<mailto:r-package-devel at r-project.org> <r-package-devel at r-project.org><mailto:r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]

My recommendation would be to try to minimize the example (package) as much as possible so that it still has the problem, and then try to investigate why exactly/where is the type mismatch. This is what helped me debug similar issues - sometimes it was hard to tell from the Fortran warnings where exactly the mismatched declarations were and why they were mismatched.

This process of minimization can already reveal the true source of the problem, and if not, others may try to debug for you using the minimal example. A useful tool is the Fortran option -fc-prototypes-external (see WRE for more details) and I've also used dumps of the compiler tree before (-fdump-tree-all, more in GCC documentation).

Best
Tomas

On 7/7/20 5:00 AM, Pierre Lafaye de Micheaux wrote:

My file myzhpevx.cpp starts with:

<quote>
#define USE_FC_LEN_T
#include <R.h>
#include "Rmath.h"

#ifdef FC_LEN_T
extern "C" {

  void zhpevxC(char **jobz, char **range, char **uplo, int *n, Rcomplex *ap,
     double *vl, double *vu, int *il, int *iu, double *abstol, int *m,
     double *w, Rcomplex *z, int *ldz, Rcomplex *work, double *rwork,
     int *iwork, int *ifail, int *info) {

          void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
      const int *n, Rcomplex *ap, const double *vl,
      const double *vu, const int *il, const int *iu,
      const double *abstol, int *m, double *w,
      Rcomplex *z, const int *ldz, Rcomplex *work, double *rwork,
      int *iwork, int *ifail, int *info,
      FC_LEN_T jobz_len,  FC_LEN_T range_len,  FC_LEN_T uplo_len);
</quote>

So if I understand correctly what you are saying, you suggest that FC_LEN_T was not correctly defined by the CRAN team?

Should I just write something like (adding the middle instruction below to my existing code above)?:

<quote>
#ifdef FC_LEN_T
typedef long long int FC_LEN_T;
extern "C" {
</quote>

Thank you
Pierre
________________________________
From: William Dunlap <wdunlap at tibco.com><mailto:wdunlap at tibco.com>
Sent: Tuesday, 7 July 2020 11:46
To: Pierre Lafaye de Micheaux <lafaye at unsw.edu.au><mailto:lafaye at unsw.edu.au>
Cc: Ivan Krylov <krylov.r00t at gmail.com><mailto:krylov.r00t at gmail.com>; r-package-devel at r-project.org<mailto:r-package-devel at r-project.org> <r-package-devel at r-project.org><mailto:r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]

With gcc 8.3.0, gfortran 8.3.0, and ld 2.33.1 from the mingw64 part of
rtools40 on Windows, if I misdefine the typedef FC_LEN_T and use the
-flto flag I get the sort of error messages that you report.

c:\tmp\fortran>cat main.c
#include <string.h>
#include <stdio.h>

#ifdef USE_INT
typedef int FC_LEN_T;
#endif
#ifdef USE_LONG
typedef long int FC_LEN_T;
#endif
#ifdef USE_LONG_LONG
typedef long long int FC_LEN_T;
#endif

extern void sub_(char* word, double *ret, FC_LEN_T word_len);

int main(int argc, char* argv[])
{
    if (argc == 2) {
        double ret = 3. ;
        FC_LEN_T word_len = strlen(argv[1]);
        sub_(argv[1], &ret, word_len);
        printf("sizeof(FC_LEN_T)=%d, ret=%g\n", (int)(sizeof(FC_LEN_T)), ret);
        return 0;
    } else {
        return -1;
    }
}

c:\tmp\fortran>gcc  -flto -DUSE_INT main.c sub.f -lgfortran
main.c:14:13: warning: type of 'sub_' does not match original
declaration [-Wlto-type-mismatch]
 extern void sub_(char* word, double *ret, FC_LEN_T word_len);
             ^
sub.f:1:1: note: type mismatch in parameter 3
       subroutine sub(word, ret)
 ^
sub.f:1:1: note: type 'long long int' should match type 'FC_LEN_T'
sub.f:1:1: note: 'sub' was previously declared here
sub.f:1:1: note: code may be misoptimized unless -fno-strict-aliasing is used

c:\tmp\fortran>gcc  -flto -DUSE_LONG main.c sub.f -lgfortran
main.c:14:13: warning: type of 'sub_' does not match original
declaration [-Wlto-type-mismatch]
 extern void sub_(char* word, double *ret, FC_LEN_T word_len);
             ^
sub.f:1:1: note: type mismatch in parameter 3
       subroutine sub(word, ret)
 ^
sub.f:1:1: note: type 'long long int' should match type 'FC_LEN_T'
sub.f:1:1: note: 'sub' was previously declared here
sub.f:1:1: note: code may be misoptimized unless -fno-strict-aliasing is used

c:\tmp\fortran>gcc  -flto -DUSE_LONG_LONG main.c sub.f -lgfortran
<no warnings or notes>

Bill Dunlap
TIBCO Software
wdunlap tibco.com

On Mon, Jul 6, 2020 at 4:39 PM Pierre Lafaye de Micheaux
<lafaye at unsw.edu.au><mailto:lafaye at unsw.edu.au> wrote:


Hello Bill,

Thank you for your insight.

First, my impression, is that the problem comes from how I declare the type of the function itself (and not its parameters), since the first (and only warning they seen on the CRAN) message is:

<quote>
myzhpevx.cpp:13:16: warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
           void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
</quote>

What I did is the following:

<quote>
void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
      const int *n, Rcomplex *ap, const double *vl,
      const double *vu, const int *il, const int *iu,
      const double *abstol, int *m, double *w,
      Rcomplex *z, const int *ldz, Rcomplex *work, double *rwork,
      int *iwork, int *ifail, int *info,
      FC_LEN_T jobz_len,  FC_LEN_T range_len,  FC_LEN_T uplo_len);

 char cjobz[2];
 strncpy(cjobz, jobz[0], 1);
 cjobz[1] = '\0';
 char crange[2];
 strncpy(crange, range[0], 1);
 crange[1] = '\0';
 char cuplo[2];
 strncpy(cuplo, uplo[0], 1);
 cuplo[1] = '\0';

 F77_CALL(zhpevx)(cjobz, crange, cuplo, &n[0], ap, &vl[0], &vu[0], &il[0], &iu[0], &abstol[0], &m[0],
  w, z, &ldz[0], work, rwork, iwork, ifail, &info[0], strlen(cjobz), strlen(crange), strlen(cuplo));
</quote>

Do you see anything wrong with the above?

Thank you

Best
Pierre

________________________________
From: William Dunlap <wdunlap at tibco.com><mailto:wdunlap at tibco.com>
Sent: Tuesday, 7 July 2020 08:36
To: Pierre Lafaye de Micheaux <lafaye at unsw.edu.au><mailto:lafaye at unsw.edu.au>
Cc: Ivan Krylov <krylov.r00t at gmail.com><mailto:krylov.r00t at gmail.com>; r-package-devel at r-project.org<mailto:r-package-devel at r-project.org> <r-package-devel at r-project.org><mailto:r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]

Have you tried what is recommended in
https://gcc.gnu.org/onlinedocs/gfortran/Argument-passing-conventions.html
?

<quote>
For arguments of CHARACTER type, the character length is passed as a
hidden argument at the end of the argument list. For deferred-length
strings, the value is passed by reference, otherwise by value. The
character length has the C type size_t (or INTEGER(kind=C_SIZE_T) in
Fortran). Note that this is different to older versions of the GNU
Fortran compiler, where the type of the hidden character length
argument was a C int. In order to retain compatibility with older
versions, one can e.g. for the following Fortran procedure

subroutine fstrlen (s, a)
   character(len=*) :: s
   integer :: a
   print*, len(s)
end subroutine fstrlen

define the corresponding C prototype as follows:

#if __GNUC__ > 7
typedef size_t fortran_charlen_t;
#else
typedef int fortran_charlen_t;
#endif

void fstrlen_ (char*, int*, fortran_charlen_t);

In order to avoid such compiler-specific details, for new code it is
instead recommended to use the ISO_C_BINDING feature.

Note with C binding, CHARACTER(len=1) result variables are returned
according to the platform ABI and no hidden length argument is used
for dummy arguments; with VALUE, those variables are passed by value.
</quote>

Bill Dunlap
TIBCO Software
wdunlap tibco.com

Bill Dunlap
TIBCO Software
wdunlap tibco.com


On Mon, Jul 6, 2020 at 3:13 PM Pierre Lafaye de Micheaux
<lafaye at unsw.edu.au><mailto:lafaye at unsw.edu.au> wrote:


Dear Ivan,

Thank you very much for your response.

I do not have more information than the one I gave in my previous email. (And on top of that, the computer I was using with Debian SID, a recent version of gfortran and the last version of R-devel, just broke.)

My problem is that the CRAN team won't accept to publish my package until this WARNING problem is solved. And because I am unable to observe the warning on my side (I could not with the desktop that just broke, and I still can't with my current laptop with Debian 10), I have no clue on how to suppress this warning.

Thank you in advance for any other advice.

Best regards,
Pierre
________________________________
From: Ivan Krylov <krylov.r00t at gmail.com><mailto:krylov.r00t at gmail.com>
Sent: Tuesday, 7 July 2020 06:11
To: Pierre Lafaye de Micheaux <lafaye at unsw.edu.au><mailto:lafaye at unsw.edu.au>
Cc: r-package-devel at r-project.org<mailto:r-package-devel at r-project.org> <r-package-devel at r-project.org><mailto:r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]

On Fri, 3 Jul 2020 00:15:27 +0000
Pierre Lafaye de Micheaux <lafaye at unsw.edu.au><mailto:lafaye at unsw.edu.au> wrote:



Found the following significant warnings:
   myzhpevx.cpp:13:23: warning: type of _zhpevx__ does not match
original declaration [-Wlto-type-mismatch]


I managed to reproduce the warning on R-devel r78607 built with
--enable-lto using gcc version 6.3.0 20170516 (Debian 6.3.0-18+deb9u1):

myzhpevx.cpp:13:16: warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
           void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
                ^
zhpevx.f:232:7: note: type mismatch in parameter 20
       SUBROUTINE zhpevx( JOBZ, RANGE, UPLO, N, AP, VL, VU, IL, IU,
       ^
zhpevx.f:232:7: note: type ?int? should match type ?size_t?
/usr/lib/gcc/x86_64-linux-gnu/6/include/stddef.h:216:23: note: the incompatible type is defined here
 typedef __SIZE_TYPE__ size_t;
                       ^
zhpevx.f:232:7: note: ?zhpevx? was previously declared here
       SUBROUTINE zhpevx( JOBZ, RANGE, UPLO, N, AP, VL, VU, IL, IU,
       ^

Do you have access to the notes produced by the compiler in addition
to the warnings? Do they spell the same difference?

If yes, the warning is likely to be safe to ignore. m4/R.m4 notes that,
while gfortran < 8 uses int instead of size_t for hidden size arguments,
it doesn't make a practical difference.

--
Best regards,
Ivan

        [[alternative HTML version deleted]]

______________________________________________
R-package-devel at r-project.org<mailto:R-package-devel at r-project.org> mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel


        [[alternative HTML version deleted]]





______________________________________________
R-package-devel at r-project.org<mailto:R-package-devel at r-project.org> mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel




	[[alternative HTML version deleted]]


From |@|@ye @end|ng |rom un@w@edu@@u  Fri Dec 18 08:02:57 2020
From: |@|@ye @end|ng |rom un@w@edu@@u (Pierre Lafaye de Micheaux)
Date: Fri, 18 Dec 2020 07:02:57 +0000
Subject: [R-pkg-devel] 
 =?utf-8?b?W1JlXSAgd2FybmluZzogdHlwZSBvZiDigJh6aHBl?=
 =?utf-8?q?vx=5F=E2=80=99_does_not_match_original_declaration_=5B-Wlto-typ?=
 =?utf-8?q?e-mismatch=5D?=
In-Reply-To: <SYCPR01MB52781673AD39398A2C42015D93C30@SYCPR01MB5278.ausprd01.prod.outlook.com>
References: <SYCPR01MB527838C6205A60D005883DE6936D0@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <20200706231157.22ed7b92@trisector>
 <SYCPR01MB5278FB70F4C750AE223EDE4093690@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <CAF8bMcYVziRkSZzdo4T2Bt3TeT4ohjpwjDJiutKFXNHDMVve1A@mail.gmail.com>
 <SYCPR01MB5278AD57988A1ED4AD0D24FC93690@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <CAF8bMcY-519pgq0JfjMjgz-Uy6FJx9zeLxrh0ygH=B==DueP+Q@mail.gmail.com>
 <SYCPR01MB5278ACC7379B3608D084B0CD93660@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <5bbb8f87-6ad1-4d3a-69cc-255d452c4023@gmail.com>
 <SYCPR01MB5278B1DAB3818B36E561CADD93C60@SYCPR01MB5278.ausprd01.prod.outlook.com>,
 <edf96e6f-def6-c4a5-6de1-854f917f84a0@gmail.com>,
 <SYCPR01MB5278EFD16F3D18608132A9B793C30@SYCPR01MB5278.ausprd01.prod.outlook.com>,
 <SYCPR01MB52781673AD39398A2C42015D93C30@SYCPR01MB5278.ausprd01.prod.outlook.com>
Message-ID: <SYCPR01MB5278631E18E826E0CBC662C993C30@SYCPR01MB5278.ausprd01.prod.outlook.com>

Of course, I meant:

    double _Complex *Cap;
    memcpy(&Cap, &ap, sizeof(ap));

and not

    double _Complex *Cap;
    memcpy(&ap, &Cap, sizeof(ap));

Best regards,
Pierre
________________________________
From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Pierre Lafaye de Micheaux <lafaye at unsw.edu.au>
Sent: Friday, 18 December 2020 16:15
To: Tomas Kalibera <tomas.kalibera at gmail.com>
Cc: Prof Brian Ripley <ripley at stats.ox.ac.uk>; R Package Devel <r-package-devel at r-project.org>
Subject: [R-pkg-devel] [Re] warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]

Dear Tomas,

Thank you very much for your feedback. This was really helpful and helped me to find a solution. Even if it is not entirely satisfactory to me (in the sense that I now create new extra pointers which will take unnecessary space in memory), at least the LTO errors are not displayed anymore with Gfortran 8.3.0. Hopefully the CRAN team will find it sufficient to allow me to put my package back on the CRAN.

I explain below what I did in case someone else faces the same problem.

First originally, I could not display these LTO errors on my system (Debian 10 Buster, with Gfortran 8.3.0). I thus modified the file /etc/R/Makeconf by adding -flto after every -fpic I could find.

Second, I was confused by the warning message below:
myzhpevx.cpp:22:16: warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
           void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
Indeed, I thought that the problem was with the type of the function itself, not with the type of one of its arguments. Following your approach of creating a minimalist code (and playing with the arguments one by one), I convinced myself otherwise.

My new code is pasted below for convenience. I used this instruction:

    double _Complex *Cap;
    memcpy(&ap, &Cap, sizeof(ap));

and then in F77_NAME(zhpevx) I replaced
Rcomplex *ap
with
__complex__ double *Cap
and of course, I used Cap instead of ap in F77_CALL(zhpevx).

This trick removes the LTO warning (at the expense of three extra pointers; I had to do it for the three complex pointers ap, z and work).

Thank you once again for your precious help.

Kind regards,
Pierre L.

PS: I CC Professor B. Ripley since he was the one that originally contacted me about this problem, and in case this might trigger the need for a modification of something in R core or in its documentation (though probably this is just the result of my limited knowledge in Fortran and/or C).


#define USE_FC_LEN_T
#include <R.h>
#include "Rmath.h"


#ifdef FC_LEN_T

extern "C" {

  void zhpevxC(char **jobz, char **range, char **uplo, int *n, Rcomplex *ap,
      double *vl, double *vu, int *il, int *iu, double *abstol, int *m,
      double *w, Rcomplex *z, int *ldz, Rcomplex *work, double *rwork,
      int *iwork, int *ifail, int *info) {


    char cjobz[2];
    strncpy(cjobz, jobz[0], 1);
    cjobz[1] = '\0';
    char crange[2];
    strncpy(crange, range[0], 1);
    crange[1] = '\0';
    char cuplo[2];
    strncpy(cuplo, uplo[0], 1);
    cuplo[1] = '\0';

    double _Complex *Cap;
    memcpy(&ap, &Cap, sizeof(ap));
    double _Complex *Cz;
    memcpy(&z, &Cz, sizeof(z));
    double _Complex *Cwork;
    memcpy(&work, &Cwork, sizeof(work));


    void F77_NAME(zhpevx)(const char *jobz, const char *range, const char *uplo,
 const int *n, __complex__ double *Cap, const double *vl,
 const double *vu, const int *il, const int *iu,
 const double *abstol, int *m, double *w,
 __complex__ double *Cz, const int *ldz, __complex__ double *Cwork, double *rwork,
 int *iwork, int *ifail, int *info,
 FC_LEN_T jobz_len,  FC_LEN_T range_len,  FC_LEN_T uplo_len);



    F77_CALL(zhpevx)(cjobz, crange, cuplo, &n[0], Cap, &vl[0], &vu[0], &il[0], &iu[0], &abstol[0], &m[0],
    w, Cz, &ldz[0], Cwork, rwork, iwork, ifail, &info[0], strlen(cjobz), strlen(crange), strlen(cuplo));


    delete[] Cap;
    delete[] Cz;
    delete[] Cwork;

  }

}
#else
extern "C" {

  void zhpevxC(char **jobz, char **range, char **uplo, int *n, Rcomplex *ap,
      double *vl, double *vu, int *il, int *iu, double *abstol, int *m,
      double *w, Rcomplex *z, int *ldz, Rcomplex *work, double *rwork,
      int *iwork, int *ifail, int *info) {

    extern void F77_NAME(zhpevx)(const char *jobz, const char *range, const char *uplo,
const int *n, __complex__ double *Cap, const double *vl,
const double *vu, const int *il, const int *iu,
const double *abstol, int *m, double *w,
__complex__ double *Cz, const int *ldz, __complex__ double *Cwork, double *rwork,
int *iwork, int *ifail, int *info);

    const char *JOBZ = jobz[0];
    const char *RANGE = range[0];
    const char *UPLO = uplo[0];

    double _Complex *Cap;
    memcpy(&ap, &Cap, sizeof(ap));
    double _Complex *Cz;
    memcpy(&z, &Cz, sizeof(z));
    double _Complex *Cwork;
    memcpy(&work, &Cwork, sizeof(work));

    F77_CALL(zhpevx)(JOBZ, RANGE, UPLO, &n[0], Cap, &vl[0], &vu[0], &il[0], &iu[0], &abstol[0], &m[0],
    w, Cz, &ldz[0], Cwork, rwork, iwork, ifail, &info[0]);

    delete[] JOBZ;
    delete[] RANGE;
    delete[] UPLO;

    delete[] Cap;
    delete[] Cz;
    delete[] Cwork;
  }

}
#endif


________________________________
From: Tomas Kalibera <tomas.kalibera at gmail.com>
Sent: Tuesday, 15 December 2020 23:01
To: Pierre Lafaye de Micheaux <lafaye at unsw.edu.au>
Cc: r-package-devel at r-project.org <r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]

Dear Pierre,

your code checks fine on my Ubuntu 20.04 (gcc/gfortran 9.3), but I can reproduce what you are seeing on Debian 10 with gcc 8.3.

There seem to be two problems.

The first one is that the hidden character length arguments are signed, they are of type "long int" (not "size_t"). This is compiler specific and can (and does) change between Fortran compiler versions and I think you can just ignore it. R assumes the type is "size_t", which happens to be correct for newer compilers. The signedness mismatch in this case is benign. FC_LEN_T is defined in R, so if anywhere, this would have to be fixed in R, but we cannot realistically know what the type is for each compiler.

The second problem is that gcc/LTO is complaining about incompatibility between Rcomplex and "COMPLEX*16" types. This was rather tedious to find, I had to minimize the example for that a bit more (remove the Fortran code, just left the subroutine taking the same args, and then removing the args one by one - this is what I meant by minimizing the example). I don't know why the mismatch is reported. Gcc 9.3 is happy.

I would recommend to use a newer compiler, at least for these checks. The warnings have improved (become more informative), you can use -fc-prototypes-external to see what the types should be exactly for your compiler, and perhaps some of the warnings were false positives and have been fixed since.

If you want to stick to the FC_LEN_T and similar macros, I would recommend to check how R does it so that the code compiles also when the extra hidden length arguments are not used by the compiler. Still, a portable way to solve these issues would be via iso_c_binding, with FC_LEN_T we are relying on undocumented/not-standardized behavior of the compiler.

Best,
Tomas





On 12/15/20 7:56 AM, Pierre Lafaye de Micheaux wrote:
Dear Tomas,

Apologies for the very long delay.

I was able to create a minimal version of the package (attached) that gives the same exact warnings:

myzhpevx.cpp:22:16: warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
           void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
                ^
zhpevx.f:232:14: note: type mismatch in parameter 20
       SUBROUTINE zhpevx(JOBZ, RANGE, UPLO, N, AP, VL, VU, IL, IU,
              ^
zhpevx.f:232:14: note: type ?long int? should match type ?size_t?
zhpevx.f:232:14: note: ?zhpevx? was previously declared here
zhpevx.f:232:14: note: code may be misoptimized unless -fno-strict-aliasing is used

I am under the impression that I am following quite closely what is written here: https://cran.csiro.au/doc/manuals/r-patched/R-exts.html#Fortran-character-strings

I tried many different things but I always end up with the same main warning (i.e., type of ?zhpevx_? does not match original declaration ).

My version of fortran: GNU Fortran (Debian 8.3.0-6) 8.3.0 under Debian 10.

Thank you very much for any further help you could provide so that I could have my package back to the CRAN.

Kind regards,
Pierre L.


________________________________
From: Tomas Kalibera <tomas.kalibera at gmail.com><mailto:tomas.kalibera at gmail.com>
Sent: Tuesday, 7 July 2020 15:43
To: Pierre Lafaye de Micheaux <lafaye at unsw.edu.au><mailto:lafaye at unsw.edu.au>
Cc: r-package-devel at r-project.org<mailto:r-package-devel at r-project.org> <r-package-devel at r-project.org><mailto:r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]

My recommendation would be to try to minimize the example (package) as much as possible so that it still has the problem, and then try to investigate why exactly/where is the type mismatch. This is what helped me debug similar issues - sometimes it was hard to tell from the Fortran warnings where exactly the mismatched declarations were and why they were mismatched.

This process of minimization can already reveal the true source of the problem, and if not, others may try to debug for you using the minimal example. A useful tool is the Fortran option -fc-prototypes-external (see WRE for more details) and I've also used dumps of the compiler tree before (-fdump-tree-all, more in GCC documentation).

Best
Tomas

On 7/7/20 5:00 AM, Pierre Lafaye de Micheaux wrote:

My file myzhpevx.cpp starts with:

<quote>
#define USE_FC_LEN_T
#include <R.h>
#include "Rmath.h"

#ifdef FC_LEN_T
extern "C" {

  void zhpevxC(char **jobz, char **range, char **uplo, int *n, Rcomplex *ap,
     double *vl, double *vu, int *il, int *iu, double *abstol, int *m,
     double *w, Rcomplex *z, int *ldz, Rcomplex *work, double *rwork,
     int *iwork, int *ifail, int *info) {

          void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
      const int *n, Rcomplex *ap, const double *vl,
      const double *vu, const int *il, const int *iu,
      const double *abstol, int *m, double *w,
      Rcomplex *z, const int *ldz, Rcomplex *work, double *rwork,
      int *iwork, int *ifail, int *info,
      FC_LEN_T jobz_len,  FC_LEN_T range_len,  FC_LEN_T uplo_len);
</quote>

So if I understand correctly what you are saying, you suggest that FC_LEN_T was not correctly defined by the CRAN team?

Should I just write something like (adding the middle instruction below to my existing code above)?:

<quote>
#ifdef FC_LEN_T
typedef long long int FC_LEN_T;
extern "C" {
</quote>

Thank you
Pierre
________________________________
From: William Dunlap <wdunlap at tibco.com><mailto:wdunlap at tibco.com>
Sent: Tuesday, 7 July 2020 11:46
To: Pierre Lafaye de Micheaux <lafaye at unsw.edu.au><mailto:lafaye at unsw.edu.au>
Cc: Ivan Krylov <krylov.r00t at gmail.com><mailto:krylov.r00t at gmail.com>; r-package-devel at r-project.org<mailto:r-package-devel at r-project.org> <r-package-devel at r-project.org><mailto:r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]

With gcc 8.3.0, gfortran 8.3.0, and ld 2.33.1 from the mingw64 part of
rtools40 on Windows, if I misdefine the typedef FC_LEN_T and use the
-flto flag I get the sort of error messages that you report.

c:\tmp\fortran>cat main.c
#include <string.h>
#include <stdio.h>

#ifdef USE_INT
typedef int FC_LEN_T;
#endif
#ifdef USE_LONG
typedef long int FC_LEN_T;
#endif
#ifdef USE_LONG_LONG
typedef long long int FC_LEN_T;
#endif

extern void sub_(char* word, double *ret, FC_LEN_T word_len);

int main(int argc, char* argv[])
{
    if (argc == 2) {
        double ret = 3. ;
        FC_LEN_T word_len = strlen(argv[1]);
        sub_(argv[1], &ret, word_len);
        printf("sizeof(FC_LEN_T)=%d, ret=%g\n", (int)(sizeof(FC_LEN_T)), ret);
        return 0;
    } else {
        return -1;
    }
}

c:\tmp\fortran>gcc  -flto -DUSE_INT main.c sub.f -lgfortran
main.c:14:13: warning: type of 'sub_' does not match original
declaration [-Wlto-type-mismatch]
 extern void sub_(char* word, double *ret, FC_LEN_T word_len);
             ^
sub.f:1:1: note: type mismatch in parameter 3
       subroutine sub(word, ret)
 ^
sub.f:1:1: note: type 'long long int' should match type 'FC_LEN_T'
sub.f:1:1: note: 'sub' was previously declared here
sub.f:1:1: note: code may be misoptimized unless -fno-strict-aliasing is used

c:\tmp\fortran>gcc  -flto -DUSE_LONG main.c sub.f -lgfortran
main.c:14:13: warning: type of 'sub_' does not match original
declaration [-Wlto-type-mismatch]
 extern void sub_(char* word, double *ret, FC_LEN_T word_len);
             ^
sub.f:1:1: note: type mismatch in parameter 3
       subroutine sub(word, ret)
 ^
sub.f:1:1: note: type 'long long int' should match type 'FC_LEN_T'
sub.f:1:1: note: 'sub' was previously declared here
sub.f:1:1: note: code may be misoptimized unless -fno-strict-aliasing is used

c:\tmp\fortran>gcc  -flto -DUSE_LONG_LONG main.c sub.f -lgfortran
<no warnings or notes>

Bill Dunlap
TIBCO Software
wdunlap tibco.com

On Mon, Jul 6, 2020 at 4:39 PM Pierre Lafaye de Micheaux
<lafaye at unsw.edu.au><mailto:lafaye at unsw.edu.au> wrote:


Hello Bill,

Thank you for your insight.

First, my impression, is that the problem comes from how I declare the type of the function itself (and not its parameters), since the first (and only warning they seen on the CRAN) message is:

<quote>
myzhpevx.cpp:13:16: warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
           void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
</quote>

What I did is the following:

<quote>
void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
      const int *n, Rcomplex *ap, const double *vl,
      const double *vu, const int *il, const int *iu,
      const double *abstol, int *m, double *w,
      Rcomplex *z, const int *ldz, Rcomplex *work, double *rwork,
      int *iwork, int *ifail, int *info,
      FC_LEN_T jobz_len,  FC_LEN_T range_len,  FC_LEN_T uplo_len);

 char cjobz[2];
 strncpy(cjobz, jobz[0], 1);
 cjobz[1] = '\0';
 char crange[2];
 strncpy(crange, range[0], 1);
 crange[1] = '\0';
 char cuplo[2];
 strncpy(cuplo, uplo[0], 1);
 cuplo[1] = '\0';

 F77_CALL(zhpevx)(cjobz, crange, cuplo, &n[0], ap, &vl[0], &vu[0], &il[0], &iu[0], &abstol[0], &m[0],
  w, z, &ldz[0], work, rwork, iwork, ifail, &info[0], strlen(cjobz), strlen(crange), strlen(cuplo));
</quote>

Do you see anything wrong with the above?

Thank you

Best
Pierre

________________________________
From: William Dunlap <wdunlap at tibco.com><mailto:wdunlap at tibco.com>
Sent: Tuesday, 7 July 2020 08:36
To: Pierre Lafaye de Micheaux <lafaye at unsw.edu.au><mailto:lafaye at unsw.edu.au>
Cc: Ivan Krylov <krylov.r00t at gmail.com><mailto:krylov.r00t at gmail.com>; r-package-devel at r-project.org<mailto:r-package-devel at r-project.org> <r-package-devel at r-project.org><mailto:r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]

Have you tried what is recommended in
https://gcc.gnu.org/onlinedocs/gfortran/Argument-passing-conventions.html
?

<quote>
For arguments of CHARACTER type, the character length is passed as a
hidden argument at the end of the argument list. For deferred-length
strings, the value is passed by reference, otherwise by value. The
character length has the C type size_t (or INTEGER(kind=C_SIZE_T) in
Fortran). Note that this is different to older versions of the GNU
Fortran compiler, where the type of the hidden character length
argument was a C int. In order to retain compatibility with older
versions, one can e.g. for the following Fortran procedure

subroutine fstrlen (s, a)
   character(len=*) :: s
   integer :: a
   print*, len(s)
end subroutine fstrlen

define the corresponding C prototype as follows:

#if __GNUC__ > 7
typedef size_t fortran_charlen_t;
#else
typedef int fortran_charlen_t;
#endif

void fstrlen_ (char*, int*, fortran_charlen_t);

In order to avoid such compiler-specific details, for new code it is
instead recommended to use the ISO_C_BINDING feature.

Note with C binding, CHARACTER(len=1) result variables are returned
according to the platform ABI and no hidden length argument is used
for dummy arguments; with VALUE, those variables are passed by value.
</quote>

Bill Dunlap
TIBCO Software
wdunlap tibco.com

Bill Dunlap
TIBCO Software
wdunlap tibco.com


On Mon, Jul 6, 2020 at 3:13 PM Pierre Lafaye de Micheaux
<lafaye at unsw.edu.au><mailto:lafaye at unsw.edu.au> wrote:


Dear Ivan,

Thank you very much for your response.

I do not have more information than the one I gave in my previous email. (And on top of that, the computer I was using with Debian SID, a recent version of gfortran and the last version of R-devel, just broke.)

My problem is that the CRAN team won't accept to publish my package until this WARNING problem is solved. And because I am unable to observe the warning on my side (I could not with the desktop that just broke, and I still can't with my current laptop with Debian 10), I have no clue on how to suppress this warning.

Thank you in advance for any other advice.

Best regards,
Pierre
________________________________
From: Ivan Krylov <krylov.r00t at gmail.com><mailto:krylov.r00t at gmail.com>
Sent: Tuesday, 7 July 2020 06:11
To: Pierre Lafaye de Micheaux <lafaye at unsw.edu.au><mailto:lafaye at unsw.edu.au>
Cc: r-package-devel at r-project.org<mailto:r-package-devel at r-project.org> <r-package-devel at r-project.org><mailto:r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]

On Fri, 3 Jul 2020 00:15:27 +0000
Pierre Lafaye de Micheaux <lafaye at unsw.edu.au><mailto:lafaye at unsw.edu.au> wrote:



Found the following significant warnings:
   myzhpevx.cpp:13:23: warning: type of _zhpevx__ does not match
original declaration [-Wlto-type-mismatch]


I managed to reproduce the warning on R-devel r78607 built with
--enable-lto using gcc version 6.3.0 20170516 (Debian 6.3.0-18+deb9u1):

myzhpevx.cpp:13:16: warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
           void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
                ^
zhpevx.f:232:7: note: type mismatch in parameter 20
       SUBROUTINE zhpevx( JOBZ, RANGE, UPLO, N, AP, VL, VU, IL, IU,
       ^
zhpevx.f:232:7: note: type ?int? should match type ?size_t?
/usr/lib/gcc/x86_64-linux-gnu/6/include/stddef.h:216:23: note: the incompatible type is defined here
 typedef __SIZE_TYPE__ size_t;
                       ^
zhpevx.f:232:7: note: ?zhpevx? was previously declared here
       SUBROUTINE zhpevx( JOBZ, RANGE, UPLO, N, AP, VL, VU, IL, IU,
       ^

Do you have access to the notes produced by the compiler in addition
to the warnings? Do they spell the same difference?

If yes, the warning is likely to be safe to ignore. m4/R.m4 notes that,
while gfortran < 8 uses int instead of size_t for hidden size arguments,
it doesn't make a practical difference.

--
Best regards,
Ivan

        [[alternative HTML version deleted]]

______________________________________________
R-package-devel at r-project.org<mailto:R-package-devel at r-project.org> mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel


        [[alternative HTML version deleted]]





______________________________________________
R-package-devel at r-project.org<mailto:R-package-devel at r-project.org> mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel




        [[alternative HTML version deleted]]

______________________________________________
R-package-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel

	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Fri Dec 18 08:16:02 2020
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Fri, 18 Dec 2020 10:16:02 +0300
Subject: [R-pkg-devel] 
 =?utf-8?b?W1JlXSAgd2FybmluZzogdHlwZSBvZiDigJh6aHBl?=
 =?utf-8?q?vx=5F=E2=80=99_does_not_match_original_declaration_=5B-Wlto-typ?=
 =?utf-8?q?e-mismatch=5D?=
In-Reply-To: <SYCPR01MB52781673AD39398A2C42015D93C30@SYCPR01MB5278.ausprd01.prod.outlook.com>
References: <SYCPR01MB527838C6205A60D005883DE6936D0@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <20200706231157.22ed7b92@trisector>
 <SYCPR01MB5278FB70F4C750AE223EDE4093690@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <CAF8bMcYVziRkSZzdo4T2Bt3TeT4ohjpwjDJiutKFXNHDMVve1A@mail.gmail.com>
 <SYCPR01MB5278AD57988A1ED4AD0D24FC93690@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <CAF8bMcY-519pgq0JfjMjgz-Uy6FJx9zeLxrh0ygH=B==DueP+Q@mail.gmail.com>
 <SYCPR01MB5278ACC7379B3608D084B0CD93660@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <5bbb8f87-6ad1-4d3a-69cc-255d452c4023@gmail.com>
 <SYCPR01MB5278B1DAB3818B36E561CADD93C60@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <edf96e6f-def6-c4a5-6de1-854f917f84a0@gmail.com>
 <SYCPR01MB5278EFD16F3D18608132A9B793C30@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <SYCPR01MB52781673AD39398A2C42015D93C30@SYCPR01MB5278.ausprd01.prod.outlook.com>
Message-ID: <20201218101602.49525822@Tarkus>

Dear Pierre L.,

I think that the zhpevxC wrapper, as written, may result in undefined
behaviour:

>    const char *JOBZ = jobz[0];

>    delete[] JOBZ;

>    delete[] Cap;

This could work okay, depending on how the rest of the package is
written, but in general, it is considered a bad idea for linear algebra
routines to deallocate memory they didn't allocate. ("Pointer
ownership is usually retained by the calling code.")

May I suggest once again the idea of writing a Fortran 2003 wrapper
zhpevxC instead of C++? Subroutines defined using iso_c_binding are
guaranteed to follow the C calling convention, and, this being Fortran,
call zhpevx(...) is guaranteed to match the Fortran calling convention,
bringing you the best of both worlds:

https://stat.ethz.ch/pipermail/r-package-devel/2020q3/005710.html

No need to allocate or deallocate memory or provide different
definitions depending on the availability of FC_LEN_T, just make sure
that both prototypes mean the same thing. By the way,
std::complex<double> is guaranteed to match the memory layout of C type
double _Complex and Fortran type complex(kind = c_double_complex) by
the respective standards.

-- 
Best regards,
Ivan


From |@|@ye @end|ng |rom un@w@edu@@u  Fri Dec 18 08:25:35 2020
From: |@|@ye @end|ng |rom un@w@edu@@u (Pierre Lafaye de Micheaux)
Date: Fri, 18 Dec 2020 07:25:35 +0000
Subject: [R-pkg-devel] 
 =?windows-1252?q?=5BRe=5D__warning=3A_type_of_=91z?=
 =?windows-1252?q?hpevx=5F=92_does_not_match_original_declaration_=5B-Wlto?=
 =?windows-1252?q?-type-mismatch=5D?=
In-Reply-To: <20201218101602.49525822@Tarkus>
References: <SYCPR01MB527838C6205A60D005883DE6936D0@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <20200706231157.22ed7b92@trisector>
 <SYCPR01MB5278FB70F4C750AE223EDE4093690@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <CAF8bMcYVziRkSZzdo4T2Bt3TeT4ohjpwjDJiutKFXNHDMVve1A@mail.gmail.com>
 <SYCPR01MB5278AD57988A1ED4AD0D24FC93690@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <CAF8bMcY-519pgq0JfjMjgz-Uy6FJx9zeLxrh0ygH=B==DueP+Q@mail.gmail.com>
 <SYCPR01MB5278ACC7379B3608D084B0CD93660@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <5bbb8f87-6ad1-4d3a-69cc-255d452c4023@gmail.com>
 <SYCPR01MB5278B1DAB3818B36E561CADD93C60@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <edf96e6f-def6-c4a5-6de1-854f917f84a0@gmail.com>
 <SYCPR01MB5278EFD16F3D18608132A9B793C30@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <SYCPR01MB52781673AD39398A2C42015D93C30@SYCPR01MB5278.ausprd01.prod.outlook.com>,
 <20201218101602.49525822@Tarkus>
Message-ID: <SYCPR01MB5278E3E4AAB8494A3300FE4F93C30@SYCPR01MB5278.ausprd01.prod.outlook.com>

Dear Ivan,

Thank you for your comment. And also for the previous one.

I indeed made a mistake with JOBZ, RANGE and UPLO, now changed to:

    const char *CJOBZ = jobz[0];
    const char *CRANGE = range[0];
    const char *CUPLO = uplo[0];
...
    delete[] CJOBZ;
    delete[] CRANGE;
    delete[] CUPLO;

I did a bit of F77 programming almost 20 years ago when I did my Ph.D. thesis, but I never programmed in Fortran 2003. I remember having tried a few months back to use the iso_c_binding approach (before your previous email) with no success. I will give it a try to see if I can make it work.

Have a nice day.

Kind regards,
Pierre
________________________________
From: Ivan Krylov <krylov.r00t at gmail.com>
Sent: Friday, 18 December 2020 18:16
To: Pierre Lafaye de Micheaux <lafaye at unsw.edu.au>
Cc: Tomas Kalibera <tomas.kalibera at gmail.com>; Prof Brian Ripley <ripley at stats.ox.ac.uk>; R Package Devel <r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] [Re] warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]

Dear Pierre L.,

I think that the zhpevxC wrapper, as written, may result in undefined
behaviour:

>    const char *JOBZ = jobz[0];

>    delete[] JOBZ;

>    delete[] Cap;

This could work okay, depending on how the rest of the package is
written, but in general, it is considered a bad idea for linear algebra
routines to deallocate memory they didn't allocate. ("Pointer
ownership is usually retained by the calling code.")

May I suggest once again the idea of writing a Fortran 2003 wrapper
zhpevxC instead of C++? Subroutines defined using iso_c_binding are
guaranteed to follow the C calling convention, and, this being Fortran,
call zhpevx(...) is guaranteed to match the Fortran calling convention,
bringing you the best of both worlds:

https://stat.ethz.ch/pipermail/r-package-devel/2020q3/005710.html

No need to allocate or deallocate memory or provide different
definitions depending on the availability of FC_LEN_T, just make sure
that both prototypes mean the same thing. By the way,
std::complex<double> is guaranteed to match the memory layout of C type
double _Complex and Fortran type complex(kind = c_double_complex) by
the respective standards.

--
Best regards,
Ivan

	[[alternative HTML version deleted]]


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Fri Dec 18 09:14:36 2020
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Fri, 18 Dec 2020 09:14:36 +0100
Subject: [R-pkg-devel] 
 =?utf-8?b?W1JlXSB3YXJuaW5nOiB0eXBlIG9mIOKAmHpocGV2?=
 =?utf-8?q?x=5F=E2=80=99_does_not_match_original_declaration_=5B-Wlto-type?=
 =?utf-8?q?-mismatch=5D?=
In-Reply-To: <SYCPR01MB5278E3E4AAB8494A3300FE4F93C30@SYCPR01MB5278.ausprd01.prod.outlook.com>
References: <SYCPR01MB527838C6205A60D005883DE6936D0@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <20200706231157.22ed7b92@trisector>
 <SYCPR01MB5278FB70F4C750AE223EDE4093690@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <CAF8bMcYVziRkSZzdo4T2Bt3TeT4ohjpwjDJiutKFXNHDMVve1A@mail.gmail.com>
 <SYCPR01MB5278AD57988A1ED4AD0D24FC93690@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <CAF8bMcY-519pgq0JfjMjgz-Uy6FJx9zeLxrh0ygH=B==DueP+Q@mail.gmail.com>
 <SYCPR01MB5278ACC7379B3608D084B0CD93660@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <5bbb8f87-6ad1-4d3a-69cc-255d452c4023@gmail.com>
 <SYCPR01MB5278B1DAB3818B36E561CADD93C60@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <edf96e6f-def6-c4a5-6de1-854f917f84a0@gmail.com>
 <SYCPR01MB5278EFD16F3D18608132A9B793C30@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <SYCPR01MB52781673AD39398A2C42015D93C30@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <20201218101602.49525822@Tarkus>
 <SYCPR01MB5278E3E4AAB8494A3300FE4F93C30@SYCPR01MB5278.ausprd01.prod.outlook.com>
Message-ID: <dec71a75-940b-78e7-da9f-606b742d6239@gmail.com>

On 12/18/20 8:25 AM, Pierre Lafaye de Micheaux wrote:
> Dear Ivan,
>
> Thank you for your comment. And also for the previous one.
>
> I indeed made a mistake with JOBZ, RANGE and UPLO, now changed to:
>
> ? ? const char *CJOBZ = jobz[0];
> ? ? const char *CRANGE = range[0];
> ? ? const char *CUPLO = uplo[0];
> ...
> ? ? delete[] CJOBZ;
> ? ? delete[] CRANGE;
> ? ? delete[] CUPLO;

Dear Pierre,


this unfortunately still does not look right. You are calling "delete[]" 
on something you have not allocated with "new". This code will not work 
(or if so, only by coincidence only sometimes, but crash other times or 
produce incorrect results) and you should be seeing a number of compiler 
warnings if not errors. "jobz" is a "char *" (unless something changed 
from you previous example), so jobz[0] is a "char", so not a pointer at all.


>
> I did a bit of F77 programming almost 20 years ago when I did my Ph.D. 
> thesis, but I never programmed in Fortran 2003. I remember having 
> tried a few months back to use the iso_c_binding approach (before your 
> previous email) with no success. I will give it a try to see if I can 
> make it work.

That would be best, but I would certainly advise against doing runtime 
tricks (such as copying the memory, etc) to silence benign compiler 
warnings. The version I was looking at seemed ok to me, and a recent 
compiler would not emit warnings - perhaps you could just upgrade your 
OS?? If you just extended the use of the FC_ macros there to make that 
work also when the hidden character arguments were not used, that would 
be good enough for now I think. For the iso_c_binding, there is an 
example in Writing R Extensions (but does not include the complex type).


Best,

Tomas

>
> Have a nice day.
>
> Kind regards,
> Pierre
> ------------------------------------------------------------------------
> *From:* Ivan Krylov <krylov.r00t at gmail.com>
> *Sent:* Friday, 18 December 2020 18:16
> *To:* Pierre Lafaye de Micheaux <lafaye at unsw.edu.au>
> *Cc:* Tomas Kalibera <tomas.kalibera at gmail.com>; Prof Brian Ripley 
> <ripley at stats.ox.ac.uk>; R Package Devel <r-package-devel at r-project.org>
> *Subject:* Re: [R-pkg-devel] [Re] warning: type of ?zhpevx_? does not 
> match original declaration [-Wlto-type-mismatch]
> Dear Pierre L.,
>
> I think that the zhpevxC wrapper, as written, may result in undefined
> behaviour:
>
> >??? const char *JOBZ = jobz[0];
>
> >??? delete[] JOBZ;
>
> >??? delete[] Cap;
>
> This could work okay, depending on how the rest of the package is
> written, but in general, it is considered a bad idea for linear algebra
> routines to deallocate memory they didn't allocate. ("Pointer
> ownership is usually retained by the calling code.")
>
> May I suggest once again the idea of writing a Fortran 2003 wrapper
> zhpevxC instead of C++? Subroutines defined using iso_c_binding are
> guaranteed to follow the C calling convention, and, this being Fortran,
> call zhpevx(...) is guaranteed to match the Fortran calling convention,
> bringing you the best of both worlds:
>
> https://stat.ethz.ch/pipermail/r-package-devel/2020q3/005710.html
>
> No need to allocate or deallocate memory or provide different
> definitions depending on the availability of FC_LEN_T, just make sure
> that both prototypes mean the same thing. By the way,
> std::complex<double> is guaranteed to match the memory layout of C type
> double _Complex and Fortran type complex(kind = c_double_complex) by
> the respective standards.
>
> -- 
> Best regards,
> Ivan



	[[alternative HTML version deleted]]


From b@rt-j@n@v@nro@@um @end|ng |rom wur@n|  Fri Dec 18 09:52:37 2020
From: b@rt-j@n@v@nro@@um @end|ng |rom wur@n| (Rossum, Bart-Jan van)
Date: Fri, 18 Dec 2020 08:52:37 +0000
Subject: [R-pkg-devel] unexpected CRAN pretest failure
In-Reply-To: <CAPPM_gRRjHKEwo4P74Wt-_v8v-yPhLLe2GF7zFMrUsz5QrgMsQ@mail.gmail.com>
References: <DB7PR01MB54019424C464EDD4DF63101BB9C70@DB7PR01MB5401.eurprd01.prod.exchangelabs.com>
 <df2f6c8b-f697-5059-735e-e063e7bdb23e@statistik.tu-dortmund.de>
 <DB7PR01MB54015DD797D2F01EB99399B3B9C40@DB7PR01MB5401.eurprd01.prod.exchangelabs.com>
 <CAPPM_gRRjHKEwo4P74Wt-_v8v-yPhLLe2GF7zFMrUsz5QrgMsQ@mail.gmail.com>
Message-ID: <DB7PR01MB540197866F14655BCD59E979B9C30@DB7PR01MB5401.eurprd01.prod.exchangelabs.com>

I used that pre-compiled version indeed. I tried the latest version again this morning, it is now at r79645, and still all checks pass cleanly.

I also reran the r-hub and winbuilder checks this morning.
r-hub is at now at version r79633, the version where I first noted the issue with CRAN/winbuilder and it passes there as well.
However the issue is still present on winbuilder (r79643)

So still not able to reproduce the issue.

Best, Bart-Jan

-----Original Message-----
From: Joshua Ulrich <josh.m.ulrich at gmail.com> 
Sent: Thursday, December 17, 2020 18:07
To: Rossum, Bart-Jan van <bart-jan.vanrossum at wur.nl>
Cc: Uwe Ligges <ligges at statistik.tu-dortmund.de>; r-package-devel at r-project.org
Subject: Re: [R-pkg-devel] unexpected CRAN pretest failure

On Thu, Dec 17, 2020 at 7:25 AM Rossum, Bart-Jan van <bart-jan.vanrossum at wur.nl> wrote:
>
> Dear Uwe,
>
> Thanks for your reaction.
> I installed the latest available R-devel version (2020-12-15 r79633) on my own windows pc, but even then the checks pas cleanly.
> So, unfortunately I'm not able to reproduce the issue.
>
> To be sure, I also retried on Winbuilder, which has a slightly different version (r79643), but there the issue is still present.
>
> Could there be something else I need to do to be able to reproduce this locally?
>
I assume you used the pre-compiled version here:
https://eur03.safelinks.protection.outlook.com/?url=https%3A%2F%2Fcran.r-project.org%2Fbin%2Fwindows%2Fbase%2Frdevel.html&amp;data=04%7C01%7Cbart-jan.vanrossum%40wur.nl%7Ccd5c0ba9587e4dcf87ce08d8a2ae3c33%7C27d137e5761f4dc1af88d26430abb18f%7C0%7C0%7C637438216965842718%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000&amp;sdata=JhNcdzrAauc3%2FyB84lVtVD4ySNXD4jEPhys9X2W%2Bb7k%3D&amp;reserved=0

That version probably lags behind the subversion repo for about a day.
So you need to build the latest R-devel from the latest source in the subversion repo. It always has the latest version. Rocker and r-hub help make this much easier than setting everything up locally on your machine.

That said, it looks like the pre-compiled version is at r79643 now, so you should be able to use it to reproduce the issue.

Best,
Josh


> Regards,
> Bart-Jan
>
> -----Original Message-----
> From: Uwe Ligges <ligges at statistik.tu-dortmund.de>
> Sent: Thursday, December 17, 2020 13:29
> To: Rossum, Bart-Jan van <bart-jan.vanrossum at wur.nl>; 
> r-package-devel at r-project.org
> Subject: Re: [R-pkg-devel] unexpected CRAN pretest failure
>
> This is form a change in R-devel.
> Use a more recent R-devel to reproduce the issue.
>
> Best,
> Uwe Ligges
>
> On 14.12.2020 15:02, Rossum, Bart-Jan van wrote:
> > Dear community,
> >
> > When trying to update my CRAN (https://eur03.safelinks.protection.outlook.com/?url=https%3A%2F%2Fcran.r-project.org%2Fweb%2Fpackages%2FstatgenGxE%2Findex.html&amp;data=04%7C01%7Cbart-jan.vanrossum%40wur.nl%7Ccd5c0ba9587e4dcf87ce08d8a2ae3c33%7C27d137e5761f4dc1af88d26430abb18f%7C0%7C0%7C637438216965842718%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000&amp;sdata=Ghvfz1vcqlGLz1mYUg3aITU6hqUqECpJArPe7z1gdFE%3D&amp;reserved=0) package in ran into unexpected error on Windows.
> > I had tested before submission on R-hub, which went fine, but CRAN complained, and this was confirmed on Winbuilder.
> > I noticed a slight difference in R-version used on CRAN/Winbuilder and R-hub.
> > However, the error itself seems to come from an lme4 function.
> > I'm quite clueless on how to debug/fix this.
> >
> > CRAN and Winbuilder:
> > R Under development (unstable) (2020-12-13 r79623)
> > https://eur03.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwi
> > n-builder.r-project.org%2FnK0OMOQ378SI&amp;data=04%7C01%7Cbart-jan.v
> > anrossum%40wur.nl%7Ccd5c0ba9587e4dcf87ce08d8a2ae3c33%7C27d137e5761f4
> > dc1af88d26430abb18f%7C0%7C0%7C637438216965842718%7CUnknown%7CTWFpbGZ
> > sb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0
> > %3D%7C3000&amp;sdata=6gACwrgvakWrWl%2FqJ75sROVGJfA6TFn4iZvQ3usnW9A%3
> > D&amp;reserved=0
> >
> > R-hub:
> > R Under development (unstable) (2020-11-30 r79529)
> > https://eur03.safelinks.protection.outlook.com/?url=https%3A%2F%2Fbu
> > ilder.r-hub.io%2Fstatus%2FstatgenGxE_1.0.4.tar.gz-fcc1e205a5fb4fd095
> > 59d301ee3502c9&amp;data=04%7C01%7Cbart-jan.vanrossum%40wur.nl%7Ccd5c
> > 0ba9587e4dcf87ce08d8a2ae3c33%7C27d137e5761f4dc1af88d26430abb18f%7C0%
> > 7C0%7C637438216965852712%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDA
> > iLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000&amp;sdata=g0d
> > kXzaG%2BE03rh5uJc2baxPQYxTbVt3i0mmxCMF9FqI%3D&amp;reserved=0
> >
> > Any pointers are appreciated,
> > Bart-Jan
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://eur03.safelinks.protection.outlook.com/?url=https%3A%2F%2Fst
> > at.ethz.ch%2Fmailman%2Flistinfo%2Fr-package-devel&amp;data=04%7C01%7
> > Cbart-jan.vanrossum%40wur.nl%7Ccd5c0ba9587e4dcf87ce08d8a2ae3c33%7C27
> > d137e5761f4dc1af88d26430abb18f%7C0%7C0%7C637438216965852712%7CUnknow
> > n%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwi
> > LCJXVCI6Mn0%3D%7C3000&amp;sdata=IJF%2BSoj3X3or30rGpqUAVjYbc39U76qe98
> > ouOH00a10%3D&amp;reserved=0
> >
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://eur03.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat
> .ethz.ch%2Fmailman%2Flistinfo%2Fr-package-devel&amp;data=04%7C01%7Cbar
> t-jan.vanrossum%40wur.nl%7Ccd5c0ba9587e4dcf87ce08d8a2ae3c33%7C27d137e5
> 761f4dc1af88d26430abb18f%7C0%7C0%7C637438216965852712%7CUnknown%7CTWFp
> bGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn
> 0%3D%7C3000&amp;sdata=IJF%2BSoj3X3or30rGpqUAVjYbc39U76qe98ouOH00a10%3D
> &amp;reserved=0



--
Joshua Ulrich  |  about.me/joshuaulrich
FOSS Trading  |  https://eur03.safelinks.protection.outlook.com/?url=http%3A%2F%2Fwww.fosstrading.com%2F&amp;data=04%7C01%7Cbart-jan.vanrossum%40wur.nl%7Ccd5c0ba9587e4dcf87ce08d8a2ae3c33%7C27d137e5761f4dc1af88d26430abb18f%7C0%7C0%7C637438216965852712%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000&amp;sdata=qVVHtq9MBbGBaEDMAIEf1AYv4tcboS2KEzmCc2ocmoE%3D&amp;reserved=0


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Fri Dec 18 11:48:34 2020
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Fri, 18 Dec 2020 11:48:34 +0100
Subject: [R-pkg-devel] Package Encoding and Literal Strings
In-Reply-To: <CANfj7vLL89Cp762TUVzLYBnQXP-yi5b6KvCjc+z1sZ4OfmW=Jw@mail.gmail.com>
References: <CANfj7vJTwLmkfO0sq4c1ws+Gn+Lji7LhEqvOcWJGfuVGCk+L5w@mail.gmail.com>
 <E626F78F-2B8F-4AE8-9261-7C82B42738D2@hxcore.ol>
 <CANfj7v+QiZGMyWEK3g-HP+Rox0Wmck91UwjMmpn0Cm7yCkNL7w@mail.gmail.com>
 <cd8b321e-759e-e9a1-5b57-ced4e2720a26@gmail.com>
 <CANfj7v+dnyiX0E5RtJ8kherbXNddh=MeWua4qMg13rjQNULQcw@mail.gmail.com>
 <dee044d0-fdf4-875d-24d6-63b9aa7f6d4f@gmail.com>
 <CANfj7vLL89Cp762TUVzLYBnQXP-yi5b6KvCjc+z1sZ4OfmW=Jw@mail.gmail.com>
Message-ID: <d18dc361-0b42-e6b2-1efd-b1526ac7e2d1@gmail.com>

On 12/17/20 6:43 PM, joris at jorisgoosen.nl wrote:
>
>
> On Thu, 17 Dec 2020 at 18:22, Tomas Kalibera <tomas.kalibera at gmail.com 
> <mailto:tomas.kalibera at gmail.com>> wrote:
>
>     On 12/17/20 5:17 PM, joris at jorisgoosen.nl
>     <mailto:joris at jorisgoosen.nl> wrote:
>>
>>
>>     On Thu, 17 Dec 2020 at 10:46, Tomas Kalibera
>>     <tomas.kalibera at gmail.com <mailto:tomas.kalibera at gmail.com>> wrote:
>>
>>         On 12/16/20 11:07 PM, joris at jorisgoosen.nl
>>         <mailto:joris at jorisgoosen.nl> wrote:
>>         > David,
>>         >
>>         > Thanks for the response!
>>         >
>>         > So the problem is a bit worse then just setting
>>         `encoding="UTF-8"` on
>>         > functions like readLines.
>>         > I'll describe our setup a bit:
>>         > So we run R embedded in a separate executable and through a
>>         whole bunch of
>>         > C(++) magic get that to the main executable that runs the
>>         actual interface.
>>         > All the code that isn't R basically uses UTF-8. This works
>>         good and we've
>>         > made sure that all of our source code is encoded properly
>>         and I've verified
>>         > that for this particular problem at least my source file is
>>         definitely
>>         > encoded in UTF-8 (Ive checked a hexdump).
>>         >
>>         > The simplest solution, that we initially took, to get
>>         R+Windows to
>>         > cooperate with everything is to simply set the locale to
>>         "C" before
>>         > starting R. That way R simply assumes UTF-8 is native and
>>         everything worked
>>         > splendidly. Until of course a file needs to be opened in R
>>         that contains
>>         > some non-ASCII characters. I noticed the problem because a
>>         korean user had
>>         > hangul in his username and that broke everything. This
>>         because R was trying
>>         > to convert to a different locale than Windows was using.
>>
>>         Setting locale to "C" does not make R assume UTF-8 is the native
>>         encoding, there is no way to make UTF-8 the current native
>>         encoding in R
>>         on the current builds of R on Windows. This is an old
>>         limitation of
>>         Windows, only recently fixed by Microsoft in recent Windows
>>         10 and with
>>         UCRT Windows runtime (see my blog post [1] for more - to make
>>         R support
>>         this we need a new toolchain to build R).
>>
>>         If you set the locale to C encoding, you are telling R the
>>         native
>>         encoding is C/POSIX (essentially ASCII), not UTF-8.
>>         Encoding-sensitive
>>         operations, including conversions, including those
>>         conversions that
>>         happen without user control e.g. for interacting with
>>         Windows, will
>>         produce incorrect results (garbage) or in better case errors,
>>         warnings,
>>         omitted, substituted or transliterated characters.
>>
>>         In principle setting the encoding via locale is dangerous on
>>         Windows,
>>         because Windows has two current encodings, not just one. By
>>         setting
>>         locale you set the one used in the C runtime, but not the
>>         other one used
>>         by the system calls. If all code (in R, packages, external
>>         libraries)
>>         was perfect, this would still work as long as all strings
>>         used were
>>         representable in both encodings. For other strings it won't
>>         work, and
>>         then code is not perfect in this regard, it is usually
>>         written assuming
>>         there is one current encoding, which common sense dictates
>>         should be the
>>         case. With the recent UTF-8 support ([1]), one can switch
>>         both of these
>>         to UTF-8.
>>
>>
>>     Well, this is exactly why I want to get rid of the situation. But
>>     this messes up the output because everything else expects UTF-8
>>     which is why I'm looking for some kind of solution.
>>
>>         > The solution I've now been working on is:
>>         > I took the sourcecode of R 4.0.3 and changed the backend of
>>         "gettext" to
>>         > add an `encoding="something something"` option. And a bit
>>         of extra stuff
>>         > like `bind_textdomain_codeset` in case I need to tweak the
>>         codeset/charset
>>         > that gettext uses.
>>         > I think I've got that working properly now and once I solve
>>         the problem of
>>         > the encoding in a pkg I will open a
>>         bugreport/feature-request and I'll add
>>         > a patch that implements it.
>>
>>         A number of similar "shortcuts" have been added to R in the
>>         past, but
>>         they may the code more complex, harder to maintain and use,
>>         and can't
>>         realistically solve all of these problems, anyway. Strings will
>>         eventually be assumed to be in what is the current native
>>         encoding by
>>         the C library. In R, any external code R uses, or code R
>>         packages use.
>>         Now that Microsoft finally is supporting UTF-8, the way to
>>         get out of
>>         this is switching to UTF-8. This needs only small changes to
>>         R source
>>         code compared to those "shortcuts" (or to using UTF-16LE).
>>         I'd be
>>         against polluting the code with any more "shortcuts".
>>
>>
>>     I think the addition of " bind_textdomain_codeset" is not
>>     strictly necessary and can be left out. Because I think setting
>>     an environment variable as "OUTPUT_CHARSET=UTF-8" gives the same
>>     result for us.
>>     The addition of the "encoding" option to the internal
>>     "do_gettext" is just a few lines of code and I also undid some
>>     duplication between do_gettext and do_ngettext. Which should make
>>     it easier to maintain. But all of that is moot if there is no way
>>     to keep the literal strings from sources in UTF-8 anyhow.
>>
>>     Before starting on this I did actually read your blogpost about
>>     UTF-8 several times and it seems like the best way forward. Not
>>     to mention it would make my life easier and me happier when I can
>>     stop worrying about Windows/Dos codepages!
>>     Thank you for your work on it indeed!
>>
>>     But my problem with that is that a number of people still use an
>>     older version of windows and your solution won't work there.
>>     Which would mean that we either drop support for them or they
>>     would have to live with either weirdlooking translations. Or I
>>     have to go back to the suboptimal solution of the "C" locale
>>     which I really do want to avoid. Because as you said it breaks
>>     other stuff in unpredictable ways.
>
>     The number of people using too old version of Windows should be
>     small when this could become ready for production. Windows 8.1. is
>     still supported, but there is the free upgrade to Windows 10 (also
>     from no longer supported Windows 7), so this should not be a
>     problem for desktop machines. It will be a problem for servers.
>
> Well, I would not expect anyone to use a GUI-heavy application meant 
> for researchers on a server anyway so that would be fine.
>
>>
>>         > The problem I'm stuck with now is simply this:
>>         > I have an R pkg here that I want to test the translations
>>         with and the code
>>         > is definitely saved as UTF-8, the package has "Encoding:
>>         UTF-8" in the
>>         > DESCRIPTION and it all loads and works. The particular
>>         problem I have is
>>         > that the R code contains literally: `mathotString <- "Math?t!"`
>>         > The actual file contains the hexadecimal representation of
>>         ? as proper
>>         > utf-8: "0xC3 0xB4" but R turns it into: "0xf4".
>>         > Seemingly on loading the package, because I haven't done
>>         anything with it
>>         > except put it in my debug c-function to print its contents as
>>         > hexadecimals...
>>         >
>>         > The only thing I want to achieve here is that when R loads
>>         the package it
>>         > keeps those strings in their original UTF-8 encoding,
>>         without converting it
>>         > to "native" or the strange unicode codepoint it seemingly
>>         placed in there
>>         > instead. Because otherwise I cannot get gettext to work
>>         fully in UTF-8 mode.
>>         >
>>         > Is this already possible in R?
>>
>>         In principle, working with strings not representable in the
>>         current
>>         encoding is not reliable (and never will be). It can still
>>         work in some
>>         specific cases and uses. Parsing a UTF-8 string literal from
>>         a file,
>>         with correctly declared encoding as documented in WRE, should
>>         work at
>>         least in single-byte encodings. But what happens after that
>>         string is
>>         parsed is another thing. The parsing is based internally on
>>         using these
>>         "shortcuts", that is lying to a part of the parser about the
>>         encoding,
>>         and telling the rest of the parser that it is really
>>         something else (not
>>         native, but UTF-8).
>>
>>
>>     So the reason the string literals are turned into the local
>>     encoding is because setting the "Encoding" on a package is
>>     essentially a hack?
>
>     String literals may be turned into local encoding because that is
>     how R/packages/external software is written - it needs native
>     encoding. Hacks here come when such code is given a string not in
>     the local encoding, assuming that under some conditions such code
>     will work. This includes a part of the parser and a hack to
>     implement argument "encoding" of "parse()", which allows to parse
>     (non-representable) UTF-8 strings when running in a single-byte
>     locale such as latin 1 (see ?parse).
>
> So the same `parse` function is used for loading a package?

Parsing for usual packages is done at build time, when they are 
serialized ("prepared for lazy loading"). I would have to look for the 
details in the code, but either way, if the input is in UTF-8 but the 
native encoding is different, either the input has to be converted to 
native encoding for the parser, or that hack when part of the parser is 
being lied to about the encoding (either via "parse()" or other way). If 
you have a minimal reproducible example, I can help you find out whether 
the behavior seen is expected/documented/bug.

> Because in that case I wonder if the "Encoding" option in 
> "DESCRIPTION" is handled the same as `encoding=` in parse.
>
> ?parse states:
> > Character strings in the result will have a declared encoding if 
> |encoding| is |"latin1"| or |"UTF-8"|, or if |text| is supplied with 
> every element of known encoding in a Latin-1 or UTF-8 locale.
>
> The sentence is a bit hard for me personally to parse but I interpret 
> that first part to mean that if "encoding" is specified as "UTF-8" all 
> the character string in the result will also have that encoding.
> Is that a correct interpretation?
> Because if so I do believe I found a problem and I will try to make a 
> minimal reproducable example.

Please look first at this part of "?parse":

"encoding: encoding to be assumed for input strings.? If the value is 
?"latin1"? or ?"UTF-8"? it is used to mark character strings as known to 
be in Latin-1 or UTF-8: it is not used to re-encode the input.? To do 
the latter, specify the encoding as part of the connection ?con? or 
_via_ ?options(encoding=)?: see the example under ?file?. Arguments 
?encoding = "latin1"? and ?encoding = "UTF-8"? are ignored with a 
warning when running in a MBCS locale."

Together with the one you cite:

"Character strings in the result will have a declared encoding if 
?encoding? is ?"latin1"? or ?"UTF-8"?, or if ?text? is supplied with 
every element of known encoding in a Latin-1 or UTF-8 locale."

There are two things: which encoding strings are really encoded in, and 
which encoding they are declared to be in. Normally this should always 
be the same encoding (UTF-8, latin-1, or the concrete known native 
encoding), but the "encoding=" argument allows to play with this. 
Strings declared to be in "native" encoding for a while are treated as 
(single-byte) unknown encoding and eventually they are declared to be of 
the encoding from the "encoding=" argument. This only applies to strings 
declared as "native". When strings are declared as UTF-8 or latin-1, 
they must be in that encoding, and believed to be in that, the 
"encoding=" argument does not affect those.

So, when your inputs are declared as UTF-8, the "encoding=" hack should 
not apply to them. Also note that ASCII strings are never declared to be 
UTF-8 nor latin-1, they are always as "native" (and ASCII is assumed a 
subset of all encodings). But your inputs probably are not declared to 
be in UTF-8 (note this is "declared" wrt to Encoding() R function, the 
encoding flag that character objects in R have), because you are 
probably parsing from a file. I'd really need a reproducible example to 
be able to explain what you are seeing.

Best
Tomas


>>         The part that is being "lied to" may get confused or
>>         not. It would not when the real native encoding is say
>>         latin1, a common
>>         case in the past for which the hack was created, but it might
>>         when it is
>>         a double-byte encoding that conflicts with the text being
>>         parsed in
>>         dangerous ways. This is also why this hack only makes sense
>>         for string
>>         literals (and comments), and still only to a limit as the
>>         strings may be
>>         misinterpreted later after parsing.
>>
>>
>>     Well our case is entirely limited to string literals that are
>>     presented to the user through an all-utf-8 interface.
>>     So I would assume not of the edge-cases would come into play.
>>     Any systempaths and things like that would still be in local
>>     encoding.
>
>>
>>
>>         So a really short summary is: you can only reliably use strings
>>         representable in the current encoding in R, and that encoding
>>         cannot be
>>         UTF-8 on Windows in released versions of R. There is an
>>         experimental
>>         version, see [1], if you could experiment with that and see
>>         whether that
>>         might work for your applications, could try to find and
>>         report bugs
>>         there (e.g. to me directly), that would be useful.
>>
>>
>>     So when I read in certain R documentation that string can have an
>>     "UTF-8" encoding in R this is not true?
>>     As in, when I read documentation such as
>>     https://stat.ethz.ch/R-manual/R-devel/library/base/html/Encoding.html
>>     it really seems to indicate to me that UTF-8 is in fact supported
>>     in R on windows.
>>     My assumption was that R uses `translateChar` internally to make
>>     sure it is in the right encoding before interfacing with the OS
>>     and other places where this might matter.
>
>     UTF-8 is supported in R on Windows in many ways, as documented. As
>     long as you are using UTF-8 strings representable in the current
>     encoding, so that they can be converted to native encoding and
>     back without problems, you are fine, R will do the conversions as
>     needed. The troubles come when such conversion is not possible. In
>     the example of the parser, without the "encoding=" argument to
>     "parse()", the parser will just work on any text you give to it,
>     even when the text is in UTF-8: it will work by first converting
>     to native encoding and then doing the parsing, no hacks involved.
>     When interacting with external software, you'd just tell R to
>     provide the strings in the encoding needed by that external
>     software, so possibly UTF-8, so possibly convert, but all would
>     work fine. The problem are characters not representable in the
>     native encoding.
>
> Exactly, I want to be able to support chinese etc as well while 
> running in a west-european locale.
> This is also what mislead me, because I thought it was actually 
> reading it like that but the character is part of my local locale so I 
> didn't notice it. Especially as it was being printed correctly. I only 
> noticed after printing the literal values.
>
>>         If you find behavior re encodings in released versions of R that
>>         contradicts the current documentation, please report with a
>>         minimal
>>         reproducible example, such cases should be fixed (even though
>>         sometimes
>>         the "fix" would be just changing the documentation, the
>>         effort really
>>         should be now for supporting UTF-8 for real). Specifically with
>>         "mathotString", you might try creating? an example that does
>>         not include
>>         any package (just calls to parse with encoding options set),
>>         only then
>>         gradually adding more of package loading if that does not
>>         reproduce. It
>>         would be important to know the current encoding (sessionInfo,
>>         l10n_info).
>>
>>
>>     Well, the reason I mailed the mailing list was because I couldn't
>>     for the life of me find any documentation that told me anything
>>     in particular about how literal strings are supposed to be stored
>>     in memory. But it just seems logical to me that if R already
>>     supports parsing and loading a package encoded with UTF-8 and it
>>     supports having UTF-8 strings in memory next to strings in native
>>     encoding the most straightforward way of loading this literal
>>     strings would be in UTF-8.
>
>     You mean the memory representation? For that there would be R
>     Internals and the sources, essentially there are CHARSXP objects
>     which include an encoding tag (UTF-8, Latin-1 or native) and the
>     raw bytes. But you would not access these objects directly,
>     instead use translateChar() if you needed strings them in native
>     encoding or translateCharUTF8() if in UTF-8, and this is
>     documented in Writing R Extensions.
>
> Exactly, because gettext operates in C and the source files for that 
> are also in utf-8 the actual memory representation of the string in R 
> needs to be identical, otherwise it won't work.
>
>     I think it would be really good if you could provide a complete,
>     minimal reproducible example of your problem. It may be there is
>     some misunderstanding, especially if you are working with
>     characters representable in the current encoding, there should be
>     no problem.
>
> It depends on if I now understand ?parse correctly in that it should 
> have the strings in a package that is parsed with the specified 
> encoding in that encoding or not. As I wondered above.
>
>>     I would love to use the new version of R that supports properly
>>     interfacing with windows 10.
>>     And given that the only other supported version of Windows is 8.1
>>     and barely anyone uses it. So it might be worth dropping support
>>     for that.
>>     I just hoped I could find a workable solution without such a step.
>
>     I understand, also it may take a bit of time before this would
>     become stable.
>
> Of course.
> Hopefully I can still use my current workaround for the time being and 
> then switch over to the UTF-8 ready version if it becomes 
> production-ready at some point.
>
> Cheers,
> Joris
>
>     Best
>     Tomas
>
>
>>     Cheers,
>>     Joris
>>
>>
>>         Best,
>>         Tomas
>>
>>         [1]
>>         https://developer.r-project.org/Blog/public/2020/07/30/windows/utf-8-build-of-r-and-cran-packages/index.html
>>
>>         >
>>         > Cheers,
>>         > Joris
>>
>>         >
>>         >
>>         > On Wed, 16 Dec 2020 at 20:15, David Bosak
>>         <dbosak01 at gmail.com <mailto:dbosak01 at gmail.com>> wrote:
>>         >
>>         >> Joris:
>>         >>
>>         >>
>>         >>
>>         >> I?ve fought with encoding problems on Windows a lot.? Here
>>         are some
>>         >> general suggestions.
>>         >>
>>         >>
>>         >>
>>         >>? ? ?1. Put ?@encoding UTF-8? on any Roxygen comments.
>>         >>? ? ?2. Put ?encoding = ?UTF-8? on any functions like
>>         writeLines or
>>         >>? ? ?readLines that read/write to a text file.
>>         >>? ? ?3. This post:
>>         >>
>>         https://kevinushey.github.io/blog/2018/02/21/string-encoding-and-r/
>>         >>
>>         >>
>>         >>
>>         >> If you have a more specific problem, please describe and
>>         we can try to
>>         >> help.
>>         >>
>>         >>
>>         >>
>>         >> David
>>         >>
>>         >>
>>         >>
>>         >> Sent from Mail
>>         <https://go.microsoft.com/fwlink/?LinkId=550986> for
>>         >> Windows 10
>>         >>
>>         >>
>>         >>
>>         >> *From: *joris at jorisgoosen.nl <mailto:joris at jorisgoosen.nl>
>>         >> *Sent: *Wednesday, December 16, 2020 1:52 PM
>>         >> *To: *r-package-devel at r-project.org
>>         <mailto:r-package-devel at r-project.org>
>>         >> *Subject: *[R-pkg-devel] Package Encoding and Literal Strings
>>         >>
>>         >>
>>         >>
>>         >> Hello All,
>>         >>
>>         >>
>>         >>
>>         >> Some context, I am one of the programmers of a software pkg (
>>         >>
>>         >> https://jasp-stats.org/) that uses an embedded instance of
>>         R to do
>>         >>
>>         >> statistics. And make that a bit easier for people who are
>>         intimidated by R
>>         >>
>>         >> or like to have something more GUI oriented.
>>         >>
>>         >>
>>         >>
>>         >>
>>         >>
>>         >> We have been working on translating the interface but ran
>>         into several
>>         >>
>>         >> problems related to encoding of strings. We prefer to use
>>         UTF-8 for
>>         >>
>>         >> everything and this works wonderful on unix systems, as is
>>         to be expected.
>>         >>
>>         >>
>>         >>
>>         >> Windows however is a different matter. Currently I am
>>         working on some local
>>         >>
>>         >> changes to "do_gettext" and some related internal
>>         functions of R to be able
>>         >>
>>         >> to get UTF-8 encoded output from there.
>>         >>
>>         >>
>>         >>
>>         >> But I ran into a bit of a problem and I think this
>>         mailinglist is probably
>>         >>
>>         >> the best place to start.
>>         >>
>>         >>
>>         >>
>>         >> It seems that if I have an R package that specifies
>>         "Encoding: UTF-8" in
>>         >>
>>         >> DESCRIPTION the literal strings inside the package are
>>         converted to the
>>         >>
>>         >> local codeset/codepage regardless of what I want.
>>         >>
>>         >>
>>         >>
>>         >> Is it possible to keep the strings in UTF-8 internally in
>>         such a pkg
>>         >>
>>         >> somehow?
>>         >>
>>         >>
>>         >>
>>         >> Best regards,
>>         >>
>>         >> Joris Goosen
>>         >>
>>         >> University of Amsterdam
>>         >>
>>         >>
>>         >>
>>         >>? ? ? ? ? ? ? ? ? [[alternative HTML version deleted]]
>>         >>
>>         >>
>>         >>
>>         >> ______________________________________________
>>         >>
>>         >> R-package-devel at r-project.org
>>         <mailto:R-package-devel at r-project.org> mailing list
>>         >>
>>         >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>         >>
>>         >>
>>         >>
>>         >? ? ? ?[[alternative HTML version deleted]]
>>         >
>>         > ______________________________________________
>>         > R-package-devel at r-project.org
>>         <mailto:R-package-devel at r-project.org> mailing list
>>         > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>>
>


	[[alternative HTML version deleted]]


From joris m@iii@g oii jorisgoose@@@i  Fri Dec 18 13:53:25 2020
From: joris m@iii@g oii jorisgoose@@@i (joris m@iii@g oii jorisgoose@@@i)
Date: Fri, 18 Dec 2020 13:53:25 +0100
Subject: [R-pkg-devel] Package Encoding and Literal Strings
In-Reply-To: <d18dc361-0b42-e6b2-1efd-b1526ac7e2d1@gmail.com>
References: <CANfj7vJTwLmkfO0sq4c1ws+Gn+Lji7LhEqvOcWJGfuVGCk+L5w@mail.gmail.com>
 <E626F78F-2B8F-4AE8-9261-7C82B42738D2@hxcore.ol>
 <CANfj7v+QiZGMyWEK3g-HP+Rox0Wmck91UwjMmpn0Cm7yCkNL7w@mail.gmail.com>
 <cd8b321e-759e-e9a1-5b57-ced4e2720a26@gmail.com>
 <CANfj7v+dnyiX0E5RtJ8kherbXNddh=MeWua4qMg13rjQNULQcw@mail.gmail.com>
 <dee044d0-fdf4-875d-24d6-63b9aa7f6d4f@gmail.com>
 <CANfj7vLL89Cp762TUVzLYBnQXP-yi5b6KvCjc+z1sZ4OfmW=Jw@mail.gmail.com>
 <d18dc361-0b42-e6b2-1efd-b1526ac7e2d1@gmail.com>
Message-ID: <CANfj7vLrbsoN+SUbNpKrpDhJoQFj3EmJ00O4yEE9P=no4q1uRw@mail.gmail.com>

Hello Tomas,

I have made a minimal example that demonstrates my problem:
https://github.com/JorisGoosen/utf8StringsPkg

This package is encoded in UTF-8 as is Test.R. There is a little Rcpp
function in there I wrote that displays the bytes straight from R's CHAR to
be sure no conversion is happening.
I would expect that the mathotString had "C3 B4" for "?" but instead it
gets "F4". As you can see when you run
`utf8StringsPkg::testutf8_in_locale()`.

Cheers,
Joris



On Fri, 18 Dec 2020 at 11:48, Tomas Kalibera <tomas.kalibera at gmail.com>
wrote:

> On 12/17/20 6:43 PM, joris at jorisgoosen.nl wrote:
>
>
>
> On Thu, 17 Dec 2020 at 18:22, Tomas Kalibera <tomas.kalibera at gmail.com>
> wrote:
>
>> On 12/17/20 5:17 PM, joris at jorisgoosen.nl wrote:
>>
>>
>>
>> On Thu, 17 Dec 2020 at 10:46, Tomas Kalibera <tomas.kalibera at gmail.com>
>> wrote:
>>
>>> On 12/16/20 11:07 PM, joris at jorisgoosen.nl wrote:
>>> > David,
>>> >
>>> > Thanks for the response!
>>> >
>>> > So the problem is a bit worse then just setting `encoding="UTF-8"` on
>>> > functions like readLines.
>>> > I'll describe our setup a bit:
>>> > So we run R embedded in a separate executable and through a whole
>>> bunch of
>>> > C(++) magic get that to the main executable that runs the actual
>>> interface.
>>> > All the code that isn't R basically uses UTF-8. This works good and
>>> we've
>>> > made sure that all of our source code is encoded properly and I've
>>> verified
>>> > that for this particular problem at least my source file is definitely
>>> > encoded in UTF-8 (Ive checked a hexdump).
>>> >
>>> > The simplest solution, that we initially took, to get R+Windows to
>>> > cooperate with everything is to simply set the locale to "C" before
>>> > starting R. That way R simply assumes UTF-8 is native and everything
>>> worked
>>> > splendidly. Until of course a file needs to be opened in R that
>>> contains
>>> > some non-ASCII characters. I noticed the problem because a korean user
>>> had
>>> > hangul in his username and that broke everything. This because R was
>>> trying
>>> > to convert to a different locale than Windows was using.
>>>
>>> Setting locale to "C" does not make R assume UTF-8 is the native
>>> encoding, there is no way to make UTF-8 the current native encoding in R
>>> on the current builds of R on Windows. This is an old limitation of
>>> Windows, only recently fixed by Microsoft in recent Windows 10 and with
>>> UCRT Windows runtime (see my blog post [1] for more - to make R support
>>> this we need a new toolchain to build R).
>>>
>>> If you set the locale to C encoding, you are telling R the native
>>> encoding is C/POSIX (essentially ASCII), not UTF-8. Encoding-sensitive
>>> operations, including conversions, including those conversions that
>>> happen without user control e.g. for interacting with Windows, will
>>> produce incorrect results (garbage) or in better case errors, warnings,
>>> omitted, substituted or transliterated characters.
>>>
>>> In principle setting the encoding via locale is dangerous on Windows,
>>> because Windows has two current encodings, not just one. By setting
>>> locale you set the one used in the C runtime, but not the other one used
>>> by the system calls. If all code (in R, packages, external libraries)
>>> was perfect, this would still work as long as all strings used were
>>> representable in both encodings. For other strings it won't work, and
>>> then code is not perfect in this regard, it is usually written assuming
>>> there is one current encoding, which common sense dictates should be the
>>> case. With the recent UTF-8 support ([1]), one can switch both of these
>>> to UTF-8.
>>>
>>
>> Well, this is exactly why I want to get rid of the situation. But this
>> messes up the output because everything else expects UTF-8 which is why I'm
>> looking for some kind of solution.
>>
>>
>>
>>> > The solution I've now been working on is:
>>> > I took the sourcecode of R 4.0.3 and changed the backend of "gettext"
>>> to
>>> > add an `encoding="something something"` option. And a bit of extra
>>> stuff
>>> > like `bind_textdomain_codeset` in case I need to tweak the
>>> codeset/charset
>>> > that gettext uses.
>>> > I think I've got that working properly now and once I solve the
>>> problem of
>>> > the encoding in a pkg I will open a bugreport/feature-request and I'll
>>> add
>>> > a patch that implements it.
>>>
>>> A number of similar "shortcuts" have been added to R in the past, but
>>> they may the code more complex, harder to maintain and use, and can't
>>> realistically solve all of these problems, anyway. Strings will
>>> eventually be assumed to be in what is the current native encoding by
>>> the C library. In R, any external code R uses, or code R packages use.
>>> Now that Microsoft finally is supporting UTF-8, the way to get out of
>>> this is switching to UTF-8. This needs only small changes to R source
>>> code compared to those "shortcuts" (or to using UTF-16LE). I'd be
>>> against polluting the code with any more "shortcuts".
>>>
>>
>> I think the addition of " bind_textdomain_codeset" is not strictly
>> necessary and can be left out. Because I think setting an environment
>> variable as "OUTPUT_CHARSET=UTF-8" gives the same result for us.
>> The addition of the "encoding" option to the internal "do_gettext" is
>> just a few lines of code and I also undid some duplication between
>> do_gettext and do_ngettext. Which should make it easier to maintain. But
>> all of that is moot if there is no way to keep the literal strings from
>> sources in UTF-8 anyhow.
>>
>> Before starting on this I did actually read your blogpost about UTF-8
>> several times and it seems like the best way forward. Not to mention it
>> would make my life easier and me happier when I can stop worrying about
>> Windows/Dos codepages!
>> Thank you for your work on it indeed!
>>
>> But my problem with that is that a number of people still use an older
>> version of windows and your solution won't work there. Which would mean
>> that we either drop support for them or they would have to live with either
>> weirdlooking translations. Or I have to go back to the suboptimal solution
>> of the "C" locale which I really do want to avoid. Because as you said it
>> breaks other stuff in unpredictable ways.
>>
>> The number of people using too old version of Windows should be small
>> when this could become ready for production. Windows 8.1. is still
>> supported, but there is the free upgrade to Windows 10 (also from no longer
>> supported Windows 7), so this should not be a problem for desktop machines.
>> It will be a problem for servers.
>>
> Well, I would not expect anyone to use a GUI-heavy application meant for
> researchers on a server anyway so that would be fine.
>
>>
>>
>>> > The problem I'm stuck with now is simply this:
>>> > I have an R pkg here that I want to test the translations with and the
>>> code
>>> > is definitely saved as UTF-8, the package has "Encoding: UTF-8" in the
>>> > DESCRIPTION and it all loads and works. The particular problem I have
>>> is
>>> > that the R code contains literally: `mathotString <- "Math?t!"`
>>> > The actual file contains the hexadecimal representation of ? as proper
>>> > utf-8: "0xC3 0xB4" but R turns it into: "0xf4".
>>> > Seemingly on loading the package, because I haven't done anything with
>>> it
>>> > except put it in my debug c-function to print its contents as
>>> > hexadecimals...
>>> >
>>> > The only thing I want to achieve here is that when R loads the package
>>> it
>>> > keeps those strings in their original UTF-8 encoding, without
>>> converting it
>>> > to "native" or the strange unicode codepoint it seemingly placed in
>>> there
>>> > instead. Because otherwise I cannot get gettext to work fully in UTF-8
>>> mode.
>>> >
>>> > Is this already possible in R?
>>>
>>> In principle, working with strings not representable in the current
>>> encoding is not reliable (and never will be). It can still work in some
>>> specific cases and uses. Parsing a UTF-8 string literal from a file,
>>> with correctly declared encoding as documented in WRE, should work at
>>> least in single-byte encodings. But what happens after that string is
>>> parsed is another thing. The parsing is based internally on using these
>>> "shortcuts", that is lying to a part of the parser about the encoding,
>>> and telling the rest of the parser that it is really something else (not
>>> native, but UTF-8).
>>
>>
>> So the reason the string literals are turned into the local encoding is
>> because setting the "Encoding" on a package is essentially a hack?
>>
>> String literals may be turned into local encoding because that is how
>> R/packages/external software is written - it needs native encoding. Hacks
>> here come when such code is given a string not in the local encoding,
>> assuming that under some conditions such code will work. This includes a
>> part of the parser and a hack to implement argument "encoding" of
>> "parse()", which allows to parse (non-representable) UTF-8 strings when
>> running in a single-byte locale such as latin 1 (see ?parse).
>>
> So the same `parse` function is used for loading a package?
>
> Parsing for usual packages is done at build time, when they are serialized
> ("prepared for lazy loading"). I would have to look for the details in the
> code, but either way, if the input is in UTF-8 but the native encoding is
> different, either the input has to be converted to native encoding for the
> parser, or that hack when part of the parser is being lied to about the
> encoding (either via "parse()" or other way). If you have a minimal
> reproducible example, I can help you find out whether the behavior seen is
> expected/documented/bug.
>
> Because in that case I wonder if the "Encoding" option in "DESCRIPTION" is
> handled the same as `encoding=` in parse.
>
> ?parse states:
> > Character strings in the result will have a declared encoding if
> encoding is "latin1" or "UTF-8", or if text is supplied with every
> element of known encoding in a Latin-1 or UTF-8 locale.
>
> The sentence is a bit hard for me personally to parse but I interpret that
> first part to mean that if "encoding" is specified as "UTF-8" all the
> character string in the result will also have that encoding.
> Is that a correct interpretation?
> Because if so I do believe I found a problem and I will try to make a
> minimal reproducable example.
>
> Please look first at this part of "?parse":
>
> "encoding: encoding to be assumed for input strings.  If the value is
> ?"latin1"? or ?"UTF-8"? it is used to mark character strings as known to be
> in Latin-1 or UTF-8: it is not used to re-encode the input.  To do the
> latter, specify the encoding as part of the connection ?con? or _via_
> ?options(encoding=)?: see the example under ?file?. Arguments ?encoding =
> "latin1"? and ?encoding = "UTF-8"? are ignored with a warning when running
> in a MBCS locale."
>
> Together with the one you cite:
>
> "Character strings in the result will have a declared encoding if
> ?encoding? is ?"latin1"? or ?"UTF-8"?, or if ?text? is supplied with every
> element of known encoding in a Latin-1 or UTF-8 locale."
>
> There are two things: which encoding strings are really encoded in, and
> which encoding they are declared to be in. Normally this should always be
> the same encoding (UTF-8, latin-1, or the concrete known native encoding),
> but the "encoding=" argument allows to play with this. Strings declared to
> be in "native" encoding for a while are treated as (single-byte) unknown
> encoding and eventually they are declared to be of the encoding from the
> "encoding=" argument. This only applies to strings declared as "native".
> When strings are declared as UTF-8 or latin-1, they must be in that
> encoding, and believed to be in that, the "encoding=" argument does not
> affect those.
>
> So, when your inputs are declared as UTF-8, the "encoding=" hack should
> not apply to them. Also note that ASCII strings are never declared to be
> UTF-8 nor latin-1, they are always as "native" (and ASCII is assumed a
> subset of all encodings). But your inputs probably are not declared to be
> in UTF-8 (note this is "declared" wrt to Encoding() R function, the
> encoding flag that character objects in R have), because you are probably
> parsing from a file. I'd really need a reproducible example to be able to
> explain what you are seeing.
>
> Best
> Tomas
>
>
>
>>
>>
>>> The part that is being "lied to" may get confused or
>>> not. It would not when the real native encoding is say latin1, a common
>>> case in the past for which the hack was created, but it might when it is
>>> a double-byte encoding that conflicts with the text being parsed in
>>> dangerous ways. This is also why this hack only makes sense for string
>>> literals (and comments), and still only to a limit as the strings may be
>>> misinterpreted later after parsing.
>>>
>>
>> Well our case is entirely limited to string literals that are presented
>> to the user through an all-utf-8 interface.
>> So I would assume not of the edge-cases would come into play.
>> Any systempaths and things like that would still be in local encoding.
>>
>>
>>
>>
>>> So a really short summary is: you can only reliably use strings
>>> representable in the current encoding in R, and that encoding cannot be
>>> UTF-8 on Windows in released versions of R. There is an experimental
>>> version, see [1], if you could experiment with that and see whether that
>>> might work for your applications, could try to find and report bugs
>>> there (e.g. to me directly), that would be useful.
>>>
>>
>> So when I read in certain R documentation that string can have an "UTF-8"
>> encoding in R this is not true?
>> As in, when I read documentation such as
>> https://stat.ethz.ch/R-manual/R-devel/library/base/html/Encoding.html it
>> really seems to indicate to me that UTF-8 is in fact supported in R on
>> windows.
>> My assumption was that R uses `translateChar` internally to make sure it
>> is in the right encoding before interfacing with the OS and other places
>> where this might matter.
>>
>> UTF-8 is supported in R on Windows in many ways, as documented. As long
>> as you are using UTF-8 strings representable in the current encoding, so
>> that they can be converted to native encoding and back without problems,
>> you are fine, R will do the conversions as needed. The troubles come when
>> such conversion is not possible. In the example of the parser, without the
>> "encoding=" argument to "parse()", the parser will just work on any text
>> you give to it, even when the text is in UTF-8: it will work by first
>> converting to native encoding and then doing the parsing, no hacks
>> involved. When interacting with external software, you'd just tell R to
>> provide the strings in the encoding needed by that external software, so
>> possibly UTF-8, so possibly convert, but all would work fine. The problem
>> are characters not representable in the native encoding.
>>
> Exactly, I want to be able to support chinese etc as well while running in
> a west-european locale.
> This is also what mislead me, because I thought it was actually reading it
> like that but the character is part of my local locale so I didn't notice
> it. Especially as it was being printed correctly. I only noticed after
> printing the literal values.
>
>
>>
>>
>>> If you find behavior re encodings in released versions of R that
>>> contradicts the current documentation, please report with a minimal
>>> reproducible example, such cases should be fixed (even though sometimes
>>> the "fix" would be just changing the documentation, the effort really
>>> should be now for supporting UTF-8 for real). Specifically with
>>> "mathotString", you might try creating  an example that does not include
>>> any package (just calls to parse with encoding options set), only then
>>> gradually adding more of package loading if that does not reproduce. It
>>> would be important to know the current encoding (sessionInfo, l10n_info).
>>>
>>
>> Well, the reason I mailed the mailing list was because I couldn't for the
>> life of me find any documentation that told me anything in particular about
>> how literal strings are supposed to be stored in memory. But it just seems
>> logical to me that if R already supports parsing and loading a package
>> encoded with UTF-8 and it supports having UTF-8 strings in memory next to
>> strings in native encoding the most straightforward way of loading this
>> literal strings would be in UTF-8.
>>
>> You mean the memory representation? For that there would be R Internals
>> and the sources, essentially there are CHARSXP objects which include an
>> encoding tag (UTF-8, Latin-1 or native) and the raw bytes. But you would
>> not access these objects directly, instead use translateChar() if you
>> needed strings them in native encoding or translateCharUTF8() if in UTF-8,
>> and this is documented in Writing R Extensions.
>>
> Exactly, because gettext operates in C and the source files for that are
> also in utf-8 the actual memory representation of the string in R needs to
> be identical, otherwise it won't work.
>
>> I think it would be really good if you could provide a complete, minimal
>> reproducible example of your problem. It may be there is some
>> misunderstanding, especially if you are working with characters
>> representable in the current encoding, there should be no problem.
>>
> It depends on if I now understand ?parse correctly in that it should have
> the strings in a package that is parsed with the specified encoding in that
> encoding or not. As I wondered above.
>
>> I would love to use the new version of R that supports properly
>> interfacing with windows 10.
>> And given that the only other supported version of Windows is 8.1 and
>> barely anyone uses it. So it might be worth dropping support for that.
>> I just hoped I could find a workable solution without such a step.
>>
>> I understand, also it may take a bit of time before this would become
>> stable.
>>
> Of course.
> Hopefully I can still use my current workaround for the time being and
> then switch over to the UTF-8 ready version if it becomes production-ready
> at some point.
>
> Cheers,
> Joris
>
> Best
>> Tomas
>>
>>
>> Cheers,
>> Joris
>>
>>
>>>
>>> Best,
>>> Tomas
>>>
>>> [1]
>>>
>>> https://developer.r-project.org/Blog/public/2020/07/30/windows/utf-8-build-of-r-and-cran-packages/index.html
>>>
>>> >
>>> > Cheers,
>>> > Joris
>>>
>>> >
>>> >
>>> > On Wed, 16 Dec 2020 at 20:15, David Bosak <dbosak01 at gmail.com> wrote:
>>> >
>>> >> Joris:
>>> >>
>>> >>
>>> >>
>>> >> I?ve fought with encoding problems on Windows a lot.  Here are some
>>> >> general suggestions.
>>> >>
>>> >>
>>> >>
>>> >>     1. Put ?@encoding UTF-8? on any Roxygen comments.
>>> >>     2. Put ?encoding = ?UTF-8? on any functions like writeLines or
>>> >>     readLines that read/write to a text file.
>>> >>     3. This post:
>>> >>
>>> https://kevinushey.github.io/blog/2018/02/21/string-encoding-and-r/
>>> >>
>>> >>
>>> >>
>>> >> If you have a more specific problem, please describe and we can try to
>>> >> help.
>>> >>
>>> >>
>>> >>
>>> >> David
>>> >>
>>> >>
>>> >>
>>> >> Sent from Mail <https://go.microsoft.com/fwlink/?LinkId=550986> for
>>> >> Windows 10
>>> >>
>>> >>
>>> >>
>>> >> *From: *joris at jorisgoosen.nl
>>> >> *Sent: *Wednesday, December 16, 2020 1:52 PM
>>> >> *To: *r-package-devel at r-project.org
>>> >> *Subject: *[R-pkg-devel] Package Encoding and Literal Strings
>>> >>
>>> >>
>>> >>
>>> >> Hello All,
>>> >>
>>> >>
>>> >>
>>> >> Some context, I am one of the programmers of a software pkg (
>>> >>
>>> >> https://jasp-stats.org/) that uses an embedded instance of R to do
>>> >>
>>> >> statistics. And make that a bit easier for people who are intimidated
>>> by R
>>> >>
>>> >> or like to have something more GUI oriented.
>>> >>
>>> >>
>>> >>
>>> >>
>>> >>
>>> >> We have been working on translating the interface but ran into several
>>> >>
>>> >> problems related to encoding of strings. We prefer to use UTF-8 for
>>> >>
>>> >> everything and this works wonderful on unix systems, as is to be
>>> expected.
>>> >>
>>> >>
>>> >>
>>> >> Windows however is a different matter. Currently I am working on some
>>> local
>>> >>
>>> >> changes to "do_gettext" and some related internal functions of R to
>>> be able
>>> >>
>>> >> to get UTF-8 encoded output from there.
>>> >>
>>> >>
>>> >>
>>> >> But I ran into a bit of a problem and I think this mailinglist is
>>> probably
>>> >>
>>> >> the best place to start.
>>> >>
>>> >>
>>> >>
>>> >> It seems that if I have an R package that specifies "Encoding: UTF-8"
>>> in
>>> >>
>>> >> DESCRIPTION the literal strings inside the package are converted to
>>> the
>>> >>
>>> >> local codeset/codepage regardless of what I want.
>>> >>
>>> >>
>>> >>
>>> >> Is it possible to keep the strings in UTF-8 internally in such a pkg
>>> >>
>>> >> somehow?
>>> >>
>>> >>
>>> >>
>>> >> Best regards,
>>> >>
>>> >> Joris Goosen
>>> >>
>>> >> University of Amsterdam
>>> >>
>>> >>
>>> >>
>>> >>                  [[alternative HTML version deleted]]
>>> >>
>>> >>
>>> >>
>>> >> ______________________________________________
>>> >>
>>> >> R-package-devel at r-project.org mailing list
>>> >>
>>> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>> >>
>>> >>
>>> >>
>>> >       [[alternative HTML version deleted]]
>>> >
>>> > ______________________________________________
>>> > R-package-devel at r-project.org mailing list
>>> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>>>
>>>
>>
>

	[[alternative HTML version deleted]]


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Fri Dec 18 18:05:29 2020
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Fri, 18 Dec 2020 18:05:29 +0100
Subject: [R-pkg-devel] Package Encoding and Literal Strings
In-Reply-To: <CANfj7vLrbsoN+SUbNpKrpDhJoQFj3EmJ00O4yEE9P=no4q1uRw@mail.gmail.com>
References: <CANfj7vJTwLmkfO0sq4c1ws+Gn+Lji7LhEqvOcWJGfuVGCk+L5w@mail.gmail.com>
 <E626F78F-2B8F-4AE8-9261-7C82B42738D2@hxcore.ol>
 <CANfj7v+QiZGMyWEK3g-HP+Rox0Wmck91UwjMmpn0Cm7yCkNL7w@mail.gmail.com>
 <cd8b321e-759e-e9a1-5b57-ced4e2720a26@gmail.com>
 <CANfj7v+dnyiX0E5RtJ8kherbXNddh=MeWua4qMg13rjQNULQcw@mail.gmail.com>
 <dee044d0-fdf4-875d-24d6-63b9aa7f6d4f@gmail.com>
 <CANfj7vLL89Cp762TUVzLYBnQXP-yi5b6KvCjc+z1sZ4OfmW=Jw@mail.gmail.com>
 <d18dc361-0b42-e6b2-1efd-b1526ac7e2d1@gmail.com>
 <CANfj7vLrbsoN+SUbNpKrpDhJoQFj3EmJ00O4yEE9P=no4q1uRw@mail.gmail.com>
Message-ID: <610387fb-f330-071d-6969-096fedc67045@gmail.com>

Hi Joris,

thanks for the example. You can actually simply have Test.R assign the 
two variables and then run

Encoding(utf8StringsPkg1::mathotString)
charToRaw(utf8StringsPkg1::mathotString)
Encoding(utf8StringsPkg1::tao)
charToRaw(utf8StringsPkg1::tao)

I tried on Linux, Windows/UTF-8 (the experimental version) and 
Windows/latin-1 (released version). In all cases, both strings are 
converted to native encoding. The mathotString is converted to latin-1 
fine, because it is representable there. The tao string when running in 
latin-1 locale gets the escapes <xx>:

"<e9><99><b6><e5><be><b7><e5><ba><86>"

Btw, the parse(,encoding="UTF-8") hack works, when you parse the 
modified Test.R file (with the two assignments), and eval the output, 
you will get those strings in UTF-8. But when you don't eval and print 
the parse tree in Rgui, it will not be printed correctly (again a 
limitation of these hacks, they could only do so much).

When accessing strings from C, you should always be prepared for any 
encoding in a CHARSXP, so when you want UTF-8, use "translateCharUTF8()" 
instead of "CHAR()". That will work fine on representable strings like 
mathotString, and that is conceptually the correct way to access them.

Strings that cannot be represented in the native encoding like tao will 
get the escapes, and so cannot be converted back to UTF-8. This is not 
great, but I? see it was the case already in 3.6 (so not a recent 
regression) and I don't think it would be worth the time trying to fix 
that - as discussed earlier, only switching to UTF-8 would fix all of 
these translations, not just one. Btw, the example works fine on the 
experimentation UTF-8 build on Windows.

I am sorry there is not a simple fix for non-representable characters.

Best
Tomas



On 12/18/20 1:53 PM, joris at jorisgoosen.nl wrote:
> Hello Tomas,
>
> I have made a minimal example that demonstrates my problem:
> https://github.com/JorisGoosen/utf8StringsPkg
>
> This package is encoded in UTF-8 as is Test.R. There is a little Rcpp 
> function in there I wrote that displays the bytes straight from R's 
> CHAR to be sure no conversion is happening.
> I would expect that the mathotString had "C3 B4" for "?" but instead 
> it gets "F4". As you can see when you run 
> `utf8StringsPkg::testutf8_in_locale()`.
>
> Cheers,
> Joris
>
>
>
> On Fri, 18 Dec 2020 at 11:48, Tomas Kalibera <tomas.kalibera at gmail.com 
> <mailto:tomas.kalibera at gmail.com>> wrote:
>
>     On 12/17/20 6:43 PM, joris at jorisgoosen.nl
>     <mailto:joris at jorisgoosen.nl> wrote:
>>
>>
>>     On Thu, 17 Dec 2020 at 18:22, Tomas Kalibera
>>     <tomas.kalibera at gmail.com <mailto:tomas.kalibera at gmail.com>> wrote:
>>
>>         On 12/17/20 5:17 PM, joris at jorisgoosen.nl
>>         <mailto:joris at jorisgoosen.nl> wrote:
>>>
>>>
>>>         On Thu, 17 Dec 2020 at 10:46, Tomas Kalibera
>>>         <tomas.kalibera at gmail.com <mailto:tomas.kalibera at gmail.com>>
>>>         wrote:
>>>
>>>             On 12/16/20 11:07 PM, joris at jorisgoosen.nl
>>>             <mailto:joris at jorisgoosen.nl> wrote:
>>>             > David,
>>>             >
>>>             > Thanks for the response!
>>>             >
>>>             > So the problem is a bit worse then just setting
>>>             `encoding="UTF-8"` on
>>>             > functions like readLines.
>>>             > I'll describe our setup a bit:
>>>             > So we run R embedded in a separate executable and
>>>             through a whole bunch of
>>>             > C(++) magic get that to the main executable that runs
>>>             the actual interface.
>>>             > All the code that isn't R basically uses UTF-8. This
>>>             works good and we've
>>>             > made sure that all of our source code is encoded
>>>             properly and I've verified
>>>             > that for this particular problem at least my source
>>>             file is definitely
>>>             > encoded in UTF-8 (Ive checked a hexdump).
>>>             >
>>>             > The simplest solution, that we initially took, to get
>>>             R+Windows to
>>>             > cooperate with everything is to simply set the locale
>>>             to "C" before
>>>             > starting R. That way R simply assumes UTF-8 is native
>>>             and everything worked
>>>             > splendidly. Until of course a file needs to be opened
>>>             in R that contains
>>>             > some non-ASCII characters. I noticed the problem
>>>             because a korean user had
>>>             > hangul in his username and that broke everything. This
>>>             because R was trying
>>>             > to convert to a different locale than Windows was using.
>>>
>>>             Setting locale to "C" does not make R assume UTF-8 is
>>>             the native
>>>             encoding, there is no way to make UTF-8 the current
>>>             native encoding in R
>>>             on the current builds of R on Windows. This is an old
>>>             limitation of
>>>             Windows, only recently fixed by Microsoft in recent
>>>             Windows 10 and with
>>>             UCRT Windows runtime (see my blog post [1] for more - to
>>>             make R support
>>>             this we need a new toolchain to build R).
>>>
>>>             If you set the locale to C encoding, you are telling R
>>>             the native
>>>             encoding is C/POSIX (essentially ASCII), not UTF-8.
>>>             Encoding-sensitive
>>>             operations, including conversions, including those
>>>             conversions that
>>>             happen without user control e.g. for interacting with
>>>             Windows, will
>>>             produce incorrect results (garbage) or in better case
>>>             errors, warnings,
>>>             omitted, substituted or transliterated characters.
>>>
>>>             In principle setting the encoding via locale is
>>>             dangerous on Windows,
>>>             because Windows has two current encodings, not just one.
>>>             By setting
>>>             locale you set the one used in the C runtime, but not
>>>             the other one used
>>>             by the system calls. If all code (in R, packages,
>>>             external libraries)
>>>             was perfect, this would still work as long as all
>>>             strings used were
>>>             representable in both encodings. For other strings it
>>>             won't work, and
>>>             then code is not perfect in this regard, it is usually
>>>             written assuming
>>>             there is one current encoding, which common sense
>>>             dictates should be the
>>>             case. With the recent UTF-8 support ([1]), one can
>>>             switch both of these
>>>             to UTF-8.
>>>
>>>
>>>         Well, this is exactly why I want to get rid of the
>>>         situation. But this messes up the output because everything
>>>         else expects UTF-8 which is why I'm looking for some kind of
>>>         solution.
>>>
>>>             > The solution I've now been working on is:
>>>             > I took the sourcecode of R 4.0.3 and changed the
>>>             backend of "gettext" to
>>>             > add an `encoding="something something"` option. And a
>>>             bit of extra stuff
>>>             > like `bind_textdomain_codeset` in case I need to tweak
>>>             the codeset/charset
>>>             > that gettext uses.
>>>             > I think I've got that working properly now and once I
>>>             solve the problem of
>>>             > the encoding in a pkg I will open a
>>>             bugreport/feature-request and I'll add
>>>             > a patch that implements it.
>>>
>>>             A number of similar "shortcuts" have been added to R in
>>>             the past, but
>>>             they may the code more complex, harder to maintain and
>>>             use, and can't
>>>             realistically solve all of these problems, anyway.
>>>             Strings will
>>>             eventually be assumed to be in what is the current
>>>             native encoding by
>>>             the C library. In R, any external code R uses, or code R
>>>             packages use.
>>>             Now that Microsoft finally is supporting UTF-8, the way
>>>             to get out of
>>>             this is switching to UTF-8. This needs only small
>>>             changes to R source
>>>             code compared to those "shortcuts" (or to using
>>>             UTF-16LE). I'd be
>>>             against polluting the code with any more "shortcuts".
>>>
>>>
>>>         I think the addition of " bind_textdomain_codeset" is not
>>>         strictly necessary and can be left out. Because I think
>>>         setting an environment variable as "OUTPUT_CHARSET=UTF-8"
>>>         gives the same result for us.
>>>         The addition of the "encoding" option to the internal
>>>         "do_gettext" is just a few lines of code and I also undid
>>>         some duplication between do_gettext and do_ngettext. Which
>>>         should make it easier to maintain. But all of that is moot
>>>         if there is no way to keep the literal strings from sources
>>>         in UTF-8 anyhow.
>>>
>>>         Before starting on this I did actually read your blogpost
>>>         about UTF-8 several times and it seems like the best way
>>>         forward. Not to mention it would make my life easier and me
>>>         happier when I can stop worrying about Windows/Dos codepages!
>>>         Thank you for your work on it indeed!
>>>
>>>         But my problem with that is that a number of people still
>>>         use an older version of windows and your solution won't work
>>>         there. Which would mean that we either drop support for them
>>>         or they would have to live with either weirdlooking
>>>         translations. Or I have to go back to the suboptimal
>>>         solution of the "C" locale which I really do want to avoid.
>>>         Because as you said it breaks other stuff in unpredictable ways.
>>
>>         The number of people using too old version of Windows should
>>         be small when this could become ready for production. Windows
>>         8.1. is still supported, but there is the free upgrade to
>>         Windows 10 (also from no longer supported Windows 7), so this
>>         should not be a problem for desktop machines. It will be a
>>         problem for servers.
>>
>>     Well, I would not expect anyone to use a GUI-heavy application
>>     meant for researchers on a server anyway so that would be fine.
>>
>>>
>>>             > The problem I'm stuck with now is simply this:
>>>             > I have an R pkg here that I want to test the
>>>             translations with and the code
>>>             > is definitely saved as UTF-8, the package has
>>>             "Encoding: UTF-8" in the
>>>             > DESCRIPTION and it all loads and works. The particular
>>>             problem I have is
>>>             > that the R code contains literally: `mathotString <-
>>>             "Math?t!"`
>>>             > The actual file contains the hexadecimal
>>>             representation of ? as proper
>>>             > utf-8: "0xC3 0xB4" but R turns it into: "0xf4".
>>>             > Seemingly on loading the package, because I haven't
>>>             done anything with it
>>>             > except put it in my debug c-function to print its
>>>             contents as
>>>             > hexadecimals...
>>>             >
>>>             > The only thing I want to achieve here is that when R
>>>             loads the package it
>>>             > keeps those strings in their original UTF-8 encoding,
>>>             without converting it
>>>             > to "native" or the strange unicode codepoint it
>>>             seemingly placed in there
>>>             > instead. Because otherwise I cannot get gettext to
>>>             work fully in UTF-8 mode.
>>>             >
>>>             > Is this already possible in R?
>>>
>>>             In principle, working with strings not representable in
>>>             the current
>>>             encoding is not reliable (and never will be). It can
>>>             still work in some
>>>             specific cases and uses. Parsing a UTF-8 string literal
>>>             from a file,
>>>             with correctly declared encoding as documented in WRE,
>>>             should work at
>>>             least in single-byte encodings. But what happens after
>>>             that string is
>>>             parsed is another thing. The parsing is based internally
>>>             on using these
>>>             "shortcuts", that is lying to a part of the parser about
>>>             the encoding,
>>>             and telling the rest of the parser that it is really
>>>             something else (not
>>>             native, but UTF-8).
>>>
>>>
>>>         So the reason the string literals are turned into the local
>>>         encoding is because setting the "Encoding" on a package is
>>>         essentially a hack?
>>
>>         String literals may be turned into local encoding because
>>         that is how R/packages/external software is written - it
>>         needs native encoding. Hacks here come when such code is
>>         given a string not in the local encoding, assuming that under
>>         some conditions such code will work. This includes a part of
>>         the parser and a hack to implement argument "encoding" of
>>         "parse()", which allows to parse (non-representable) UTF-8
>>         strings when running in a single-byte locale such as latin 1
>>         (see ?parse).
>>
>>     So the same `parse` function is used for loading a package?
>
>     Parsing for usual packages is done at build time, when they are
>     serialized ("prepared for lazy loading"). I would have to look for
>     the details in the code, but either way, if the input is in UTF-8
>     but the native encoding is different, either the input has to be
>     converted to native encoding for the parser, or that hack when
>     part of the parser is being lied to about the encoding (either via
>     "parse()" or other way). If you have a minimal reproducible
>     example, I can help you find out whether the behavior seen is
>     expected/documented/bug.
>
>>     Because in that case I wonder if the "Encoding" option in
>>     "DESCRIPTION" is handled the same as `encoding=` in parse.
>>
>>     ?parse states:
>>     > Character strings in the result will have a declared encoding
>>     if |encoding| is |"latin1"| or |"UTF-8"|, or if |text| is
>>     supplied with every element of known encoding in a Latin-1 or
>>     UTF-8 locale.
>>
>>     The sentence is a bit hard for me personally to parse but I
>>     interpret that first part to mean that if "encoding" is specified
>>     as "UTF-8" all the character string in the result will also have
>>     that encoding.
>>     Is that a correct interpretation?
>>     Because if so I do believe I found a problem and I will try to
>>     make a minimal reproducable example.
>
>     Please look first at this part of "?parse":
>
>     "encoding: encoding to be assumed for input strings.? If the value
>     is ?"latin1"? or ?"UTF-8"? it is used to mark character strings as
>     known to be in Latin-1 or UTF-8: it is not used to re-encode the
>     input.? To do the latter, specify the encoding as part of the
>     connection ?con? or _via_ ?options(encoding=)?: see the example
>     under ?file?. Arguments ?encoding = "latin1"? and ?encoding =
>     "UTF-8"? are ignored with a warning when running in a MBCS locale."
>
>     Together with the one you cite:
>
>     "Character strings in the result will have a declared encoding if
>     ?encoding? is ?"latin1"? or ?"UTF-8"?, or if ?text? is supplied
>     with every element of known encoding in a Latin-1 or UTF-8 locale."
>
>     There are two things: which encoding strings are really encoded
>     in, and which encoding they are declared to be in. Normally this
>     should always be the same encoding (UTF-8, latin-1, or the
>     concrete known native encoding), but the "encoding=" argument
>     allows to play with this. Strings declared to be in "native"
>     encoding for a while are treated as (single-byte) unknown encoding
>     and eventually they are declared to be of the encoding from the
>     "encoding=" argument. This only applies to strings declared as
>     "native". When strings are declared as UTF-8 or latin-1, they must
>     be in that encoding, and believed to be in that, the "encoding="
>     argument does not affect those.
>
>     So, when your inputs are declared as UTF-8, the "encoding=" hack
>     should not apply to them. Also note that ASCII strings are never
>     declared to be UTF-8 nor latin-1, they are always as "native" (and
>     ASCII is assumed a subset of all encodings). But your inputs
>     probably are not declared to be in UTF-8 (note this is "declared"
>     wrt to Encoding() R function, the encoding flag that character
>     objects in R have), because you are probably parsing from a file.
>     I'd really need a reproducible example to be able to explain what
>     you are seeing.
>
>     Best
>     Tomas
>
>
>>>             The part that is being "lied to" may get confused or
>>>             not. It would not when the real native encoding is say
>>>             latin1, a common
>>>             case in the past for which the hack was created, but it
>>>             might when it is
>>>             a double-byte encoding that conflicts with the text
>>>             being parsed in
>>>             dangerous ways. This is also why this hack only makes
>>>             sense for string
>>>             literals (and comments), and still only to a limit as
>>>             the strings may be
>>>             misinterpreted later after parsing.
>>>
>>>
>>>         Well our case is entirely limited to string literals that
>>>         are presented to the user through an all-utf-8 interface.
>>>         So I would assume not of the edge-cases would come into play.
>>>         Any systempaths and things like that would still be in local
>>>         encoding.
>>
>>>
>>>
>>>             So a really short summary is: you can only reliably use
>>>             strings
>>>             representable in the current encoding in R, and that
>>>             encoding cannot be
>>>             UTF-8 on Windows in released versions of R. There is an
>>>             experimental
>>>             version, see [1], if you could experiment with that and
>>>             see whether that
>>>             might work for your applications, could try to find and
>>>             report bugs
>>>             there (e.g. to me directly), that would be useful.
>>>
>>>
>>>         So when I read in certain R documentation that string can
>>>         have an "UTF-8" encoding in R this is not true?
>>>         As in, when I read documentation such as
>>>         https://stat.ethz.ch/R-manual/R-devel/library/base/html/Encoding.html
>>>         it really seems to indicate to me that UTF-8 is in fact
>>>         supported in R on windows.
>>>         My assumption was that R uses `translateChar` internally to
>>>         make sure it is in the right encoding before interfacing
>>>         with the OS and other places where this might matter.
>>
>>         UTF-8 is supported in R on Windows in many ways, as
>>         documented. As long as you are using UTF-8 strings
>>         representable in the current encoding, so that they can be
>>         converted to native encoding and back without problems, you
>>         are fine, R will do the conversions as needed. The troubles
>>         come when such conversion is not possible. In the example of
>>         the parser, without the "encoding=" argument to "parse()",
>>         the parser will just work on any text you give to it, even
>>         when the text is in UTF-8: it will work by first converting
>>         to native encoding and then doing the parsing, no hacks
>>         involved. When interacting with external software, you'd just
>>         tell R to provide the strings in the encoding needed by that
>>         external software, so possibly UTF-8, so possibly convert,
>>         but all would work fine. The problem are characters not
>>         representable in the native encoding.
>>
>>     Exactly, I want to be able to support chinese etc as well while
>>     running in a west-european locale.
>>     This is also what mislead me, because I thought it was actually
>>     reading it like that but the character is part of my local locale
>>     so I didn't notice it. Especially as it was being printed
>>     correctly. I only noticed after printing the literal values.
>>
>>>             If you find behavior re encodings in released versions
>>>             of R that
>>>             contradicts the current documentation, please report
>>>             with a minimal
>>>             reproducible example, such cases should be fixed (even
>>>             though sometimes
>>>             the "fix" would be just changing the documentation, the
>>>             effort really
>>>             should be now for supporting UTF-8 for real).
>>>             Specifically with
>>>             "mathotString", you might try creating? an example that
>>>             does not include
>>>             any package (just calls to parse with encoding options
>>>             set), only then
>>>             gradually adding more of package loading if that does
>>>             not reproduce. It
>>>             would be important to know the current encoding
>>>             (sessionInfo, l10n_info).
>>>
>>>
>>>         Well, the reason I mailed the mailing list was because I
>>>         couldn't for the life of me find any documentation that told
>>>         me anything in particular about how literal strings are
>>>         supposed to be stored in memory. But it just seems logical
>>>         to me that if R already supports parsing and loading a
>>>         package encoded with UTF-8 and it supports having UTF-8
>>>         strings in memory next to strings in native encoding the
>>>         most straightforward way of loading this literal strings
>>>         would be in UTF-8.
>>
>>         You mean the memory representation? For that there would be R
>>         Internals and the sources, essentially there are CHARSXP
>>         objects which include an encoding tag (UTF-8, Latin-1 or
>>         native) and the raw bytes. But you would not access these
>>         objects directly, instead use translateChar() if you needed
>>         strings them in native encoding or translateCharUTF8() if in
>>         UTF-8, and this is documented in Writing R Extensions.
>>
>>     Exactly, because gettext operates in C and the source files for
>>     that are also in utf-8 the actual memory representation of the
>>     string in R needs to be identical, otherwise it won't work.
>>
>>         I think it would be really good if you could provide a
>>         complete, minimal reproducible example of your problem. It
>>         may be there is some misunderstanding, especially if you are
>>         working with characters representable in the current
>>         encoding, there should be no problem.
>>
>>     It depends on if I now understand ?parse correctly in that it
>>     should have the strings in a package that is parsed with the
>>     specified encoding in that encoding or not. As I wondered above.
>>
>>>         I would love to use the new version of R that supports
>>>         properly interfacing with windows 10.
>>>         And given that the only other supported version of Windows
>>>         is 8.1 and barely anyone uses it. So it might be worth
>>>         dropping support for that.
>>>         I just hoped I could find a workable solution without such a
>>>         step.
>>
>>         I understand, also it may take a bit of time before this
>>         would become stable.
>>
>>     Of course.
>>     Hopefully I can still use my current workaround for the time
>>     being and then switch over to the UTF-8 ready version if it
>>     becomes production-ready at some point.
>>
>>     Cheers,
>>     Joris
>>
>>         Best
>>         Tomas
>>
>>
>>>         Cheers,
>>>         Joris
>>>
>>>
>>>             Best,
>>>             Tomas
>>>
>>>             [1]
>>>             https://developer.r-project.org/Blog/public/2020/07/30/windows/utf-8-build-of-r-and-cran-packages/index.html
>>>
>>>             >
>>>             > Cheers,
>>>             > Joris
>>>
>>>             >
>>>             >
>>>             > On Wed, 16 Dec 2020 at 20:15, David Bosak
>>>             <dbosak01 at gmail.com <mailto:dbosak01 at gmail.com>> wrote:
>>>             >
>>>             >> Joris:
>>>             >>
>>>             >>
>>>             >>
>>>             >> I?ve fought with encoding problems on Windows a lot.?
>>>             Here are some
>>>             >> general suggestions.
>>>             >>
>>>             >>
>>>             >>
>>>             >>? ? ?1. Put ?@encoding UTF-8? on any Roxygen comments.
>>>             >>? ? ?2. Put ?encoding = ?UTF-8? on any functions like
>>>             writeLines or
>>>             >>? ? ?readLines that read/write to a text file.
>>>             >>? ? ?3. This post:
>>>             >>
>>>             https://kevinushey.github.io/blog/2018/02/21/string-encoding-and-r/
>>>             >>
>>>             >>
>>>             >>
>>>             >> If you have a more specific problem, please describe
>>>             and we can try to
>>>             >> help.
>>>             >>
>>>             >>
>>>             >>
>>>             >> David
>>>             >>
>>>             >>
>>>             >>
>>>             >> Sent from Mail
>>>             <https://go.microsoft.com/fwlink/?LinkId=550986> for
>>>             >> Windows 10
>>>             >>
>>>             >>
>>>             >>
>>>             >> *From: *joris at jorisgoosen.nl
>>>             <mailto:joris at jorisgoosen.nl>
>>>             >> *Sent: *Wednesday, December 16, 2020 1:52 PM
>>>             >> *To: *r-package-devel at r-project.org
>>>             <mailto:r-package-devel at r-project.org>
>>>             >> *Subject: *[R-pkg-devel] Package Encoding and Literal
>>>             Strings
>>>             >>
>>>             >>
>>>             >>
>>>             >> Hello All,
>>>             >>
>>>             >>
>>>             >>
>>>             >> Some context, I am one of the programmers of a
>>>             software pkg (
>>>             >>
>>>             >> https://jasp-stats.org/) that uses an embedded
>>>             instance of R to do
>>>             >>
>>>             >> statistics. And make that a bit easier for people who
>>>             are intimidated by R
>>>             >>
>>>             >> or like to have something more GUI oriented.
>>>             >>
>>>             >>
>>>             >>
>>>             >>
>>>             >>
>>>             >> We have been working on translating the interface but
>>>             ran into several
>>>             >>
>>>             >> problems related to encoding of strings. We prefer to
>>>             use UTF-8 for
>>>             >>
>>>             >> everything and this works wonderful on unix systems,
>>>             as is to be expected.
>>>             >>
>>>             >>
>>>             >>
>>>             >> Windows however is a different matter. Currently I am
>>>             working on some local
>>>             >>
>>>             >> changes to "do_gettext" and some related internal
>>>             functions of R to be able
>>>             >>
>>>             >> to get UTF-8 encoded output from there.
>>>             >>
>>>             >>
>>>             >>
>>>             >> But I ran into a bit of a problem and I think this
>>>             mailinglist is probably
>>>             >>
>>>             >> the best place to start.
>>>             >>
>>>             >>
>>>             >>
>>>             >> It seems that if I have an R package that specifies
>>>             "Encoding: UTF-8" in
>>>             >>
>>>             >> DESCRIPTION the literal strings inside the package
>>>             are converted to the
>>>             >>
>>>             >> local codeset/codepage regardless of what I want.
>>>             >>
>>>             >>
>>>             >>
>>>             >> Is it possible to keep the strings in UTF-8
>>>             internally in such a pkg
>>>             >>
>>>             >> somehow?
>>>             >>
>>>             >>
>>>             >>
>>>             >> Best regards,
>>>             >>
>>>             >> Joris Goosen
>>>             >>
>>>             >> University of Amsterdam
>>>             >>
>>>             >>
>>>             >>
>>>             >>? ? ? ? ? ? ? ? ? [[alternative HTML version deleted]]
>>>             >>
>>>             >>
>>>             >>
>>>             >> ______________________________________________
>>>             >>
>>>             >> R-package-devel at r-project.org
>>>             <mailto:R-package-devel at r-project.org> mailing list
>>>             >>
>>>             >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>             >>
>>>             >>
>>>             >>
>>>             >? ? ? ?[[alternative HTML version deleted]]
>>>             >
>>>             > ______________________________________________
>>>             > R-package-devel at r-project.org
>>>             <mailto:R-package-devel at r-project.org> mailing list
>>>             > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>>>
>>
>


	[[alternative HTML version deleted]]


From |@|@ye @end|ng |rom un@w@edu@@u  Sat Dec 19 00:57:42 2020
From: |@|@ye @end|ng |rom un@w@edu@@u (Pierre Lafaye de Micheaux)
Date: Fri, 18 Dec 2020 23:57:42 +0000
Subject: [R-pkg-devel] 
 =?windows-1252?q?=5BRe=5D_warning=3A_type_of_=91zh?=
 =?windows-1252?q?pevx=5F=92_does_not_match_original_declaration_=5B-Wlto-?=
 =?windows-1252?q?type-mismatch=5D?=
In-Reply-To: <dec71a75-940b-78e7-da9f-606b742d6239@gmail.com>
References: <SYCPR01MB527838C6205A60D005883DE6936D0@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <20200706231157.22ed7b92@trisector>
 <SYCPR01MB5278FB70F4C750AE223EDE4093690@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <CAF8bMcYVziRkSZzdo4T2Bt3TeT4ohjpwjDJiutKFXNHDMVve1A@mail.gmail.com>
 <SYCPR01MB5278AD57988A1ED4AD0D24FC93690@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <CAF8bMcY-519pgq0JfjMjgz-Uy6FJx9zeLxrh0ygH=B==DueP+Q@mail.gmail.com>
 <SYCPR01MB5278ACC7379B3608D084B0CD93660@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <5bbb8f87-6ad1-4d3a-69cc-255d452c4023@gmail.com>
 <SYCPR01MB5278B1DAB3818B36E561CADD93C60@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <edf96e6f-def6-c4a5-6de1-854f917f84a0@gmail.com>
 <SYCPR01MB5278EFD16F3D18608132A9B793C30@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <SYCPR01MB52781673AD39398A2C42015D93C30@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <20201218101602.49525822@Tarkus>
 <SYCPR01MB5278E3E4AAB8494A3300FE4F93C30@SYCPR01MB5278.ausprd01.prod.outlook.com>,
 <dec71a75-940b-78e7-da9f-606b742d6239@gmail.com>
Message-ID: <SYCPR01MB5278BD0CE2537C92D88B023993C30@SYCPR01MB5278.ausprd01.prod.outlook.com>

Thank you Tomas,

For those interested, here is (attached file) how I modified the Cpp file following the (last?) advice I received from Tomas. I plan to investigate the iso_c_binding approach suggested by Ivan in a future version of the package, but I just wanted to give it a try with this approach given all the time I spent trying to make it work. Maybe this will be useful to others as well who plan to use complex numbers.

On a side note, my intention was not to do "runtime tricks (such as copying the memory, etc) to silence benign compiler warnings" but only to remove all warnings that prevent the CRAN from accepting my package (I'm sure they have good reasons to do so). I believe these warnings should not appear with gcc/gfortran 8.3.0 which is the standard version on Debian Buster (the current stable version of Debian which I am sure is installed on many production servers).

Thank you again all for sharing your precious time.

Kind regards,
Pierre L.
________________________________
From: Tomas Kalibera <tomas.kalibera at gmail.com>
Sent: Friday, 18 December 2020 19:14
To: Pierre Lafaye de Micheaux <lafaye at unsw.edu.au>; Ivan Krylov <krylov.r00t at gmail.com>
Cc: R Package Devel <r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] [Re] warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]

On 12/18/20 8:25 AM, Pierre Lafaye de Micheaux wrote:
Dear Ivan,

Thank you for your comment. And also for the previous one.

I indeed made a mistake with JOBZ, RANGE and UPLO, now changed to:

    const char *CJOBZ = jobz[0];
    const char *CRANGE = range[0];
    const char *CUPLO = uplo[0];
...
    delete[] CJOBZ;
    delete[] CRANGE;
    delete[] CUPLO;

Dear Pierre,


this unfortunately still does not look right. You are calling "delete[]" on something you have not allocated with "new". This code will not work (or if so, only by coincidence only sometimes, but crash other times or produce incorrect results) and you should be seeing a number of compiler warnings if not errors. "jobz" is a "char *" (unless something changed from you previous example), so jobz[0] is a "char", so not a pointer at all.


I did a bit of F77 programming almost 20 years ago when I did my Ph.D. thesis, but I never programmed in Fortran 2003. I remember having tried a few months back to use the iso_c_binding approach (before your previous email) with no success. I will give it a try to see if I can make it work.

That would be best, but I would certainly advise against doing runtime tricks (such as copying the memory, etc) to silence benign compiler warnings. The version I was looking at seemed ok to me, and a recent compiler would not emit warnings - perhaps you could just upgrade your OS?  If you just extended the use of the FC_ macros there to make that work also when the hidden character arguments were not used, that would be good enough for now I think. For the iso_c_binding, there is an example in Writing R Extensions (but does not include the complex type).


Best,

Tomas

Have a nice day.

Kind regards,
Pierre
________________________________
From: Ivan Krylov <krylov.r00t at gmail.com><mailto:krylov.r00t at gmail.com>
Sent: Friday, 18 December 2020 18:16
To: Pierre Lafaye de Micheaux <lafaye at unsw.edu.au><mailto:lafaye at unsw.edu.au>
Cc: Tomas Kalibera <tomas.kalibera at gmail.com><mailto:tomas.kalibera at gmail.com>; Prof Brian Ripley <ripley at stats.ox.ac.uk><mailto:ripley at stats.ox.ac.uk>; R Package Devel <r-package-devel at r-project.org><mailto:r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] [Re] warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]

Dear Pierre L.,

I think that the zhpevxC wrapper, as written, may result in undefined
behaviour:

>    const char *JOBZ = jobz[0];

>    delete[] JOBZ;

>    delete[] Cap;

This could work okay, depending on how the rest of the package is
written, but in general, it is considered a bad idea for linear algebra
routines to deallocate memory they didn't allocate. ("Pointer
ownership is usually retained by the calling code.")

May I suggest once again the idea of writing a Fortran 2003 wrapper
zhpevxC instead of C++? Subroutines defined using iso_c_binding are
guaranteed to follow the C calling convention, and, this being Fortran,
call zhpevx(...) is guaranteed to match the Fortran calling convention,
bringing you the best of both worlds:

https://stat.ethz.ch/pipermail/r-package-devel/2020q3/005710.html

No need to allocate or deallocate memory or provide different
definitions depending on the availability of FC_LEN_T, just make sure
that both prototypes mean the same thing. By the way,
std::complex<double> is guaranteed to match the memory layout of C type
double _Complex and Fortran type complex(kind = c_double_complex) by
the respective standards.

--
Best regards,
Ivan


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Mon Dec 21 13:49:08 2020
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Mon, 21 Dec 2020 13:49:08 +0100
Subject: [R-pkg-devel] 
 =?utf-8?b?W1JlXSB3YXJuaW5nOiB0eXBlIG9mIOKAmHpocGV2?=
 =?utf-8?q?x=5F=E2=80=99_does_not_match_original_declaration_=5B-Wlto-type?=
 =?utf-8?q?-mismatch=5D?=
In-Reply-To: <SYCPR01MB5278BD0CE2537C92D88B023993C30@SYCPR01MB5278.ausprd01.prod.outlook.com>
References: <SYCPR01MB527838C6205A60D005883DE6936D0@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <CAF8bMcYVziRkSZzdo4T2Bt3TeT4ohjpwjDJiutKFXNHDMVve1A@mail.gmail.com>
 <SYCPR01MB5278AD57988A1ED4AD0D24FC93690@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <CAF8bMcY-519pgq0JfjMjgz-Uy6FJx9zeLxrh0ygH=B==DueP+Q@mail.gmail.com>
 <SYCPR01MB5278ACC7379B3608D084B0CD93660@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <5bbb8f87-6ad1-4d3a-69cc-255d452c4023@gmail.com>
 <SYCPR01MB5278B1DAB3818B36E561CADD93C60@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <edf96e6f-def6-c4a5-6de1-854f917f84a0@gmail.com>
 <SYCPR01MB5278EFD16F3D18608132A9B793C30@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <SYCPR01MB52781673AD39398A2C42015D93C30@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <20201218101602.49525822@Tarkus>
 <SYCPR01MB5278E3E4AAB8494A3300FE4F93C30@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <dec71a75-940b-78e7-da9f-606b742d6239@gmail.com>
 <SYCPR01MB5278BD0CE2537C92D88B023993C30@SYCPR01MB5278.ausprd01.prod.outlook.com>
Message-ID: <788f22a9-3e5d-626e-3510-2f04bbfa9214@gmail.com>

On 12/19/20 12:57 AM, Pierre Lafaye de Micheaux wrote:
> Thank you Tomas,
>
> For those interested, here is (attached file) how I modified the Cpp 
> file following the (last?) advice I received from Tomas. I plan to 
> investigate the iso_c_binding approach suggested by Ivan in a future 
> version of the package, but I just wanted to give it a try with this 
> approach given all the time I spent trying to make it work. Maybe this 
> will be useful to others as well who plan to use complex numbers.


Dear Pierre,


I meant rather something like this (in plain C, there is no need to use 
C++ for this):


---------------


#include <stddef.h>??????? /* for size_t (FC_LEN_T) */

#include <Rconfig.h>?????? /* for FC_LEN_T, FCONE */
#include <R_ext/BLAS.h>??? /* for FCONE */
#include <R_ext/RS.h>????? /* for F77_... */
#include <R_ext/Complex.h> /* for Rcomplex */

void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
 ????????????????????? const int *n, Rcomplex *ap, const double *vl,
 ????????????????????? const double *vu, const int *il, const int *iu,
 ????????????????????? const double *abstol, int *m, double *w,
 ????????????????????? Rcomplex *z, const int *ldz, Rcomplex *work, 
double *rwork,
 ????????????????????? int *iwork, int *ifail, int *info,
#ifdef FC_LEN_T
 ????????????????????? FC_LEN_T jobz_len, FC_LEN_T range_len, FC_LEN_T 
uplo_len
#endif
 ????????????????????? );

void zhpevxC(char **jobz, char **range, char **uplo, int *n, Rcomplex *ap,
 ???????????? double *vl, double *vu, int *il, int *iu, double *abstol, 
int *m,
 ???????????? double *w, Rcomplex *z, int *ldz, Rcomplex *work, double 
*rwork,
 ???????????? int *iwork, int *ifail, int *info) {

 ??? F77_CALL(zhpevx)(*jobz, *range, *uplo, n, ap, vl, vu, il, iu, 
abstol, m, w,
 ???????????????????? z, ldz, work, rwork, iwork, ifail, info FCONE 
FCONE FCONE);
}

-----------------


with gfortran 8.3, you still get the warnings due to size_t vs "long 
int", and due to the complex type (the compiler complains between the 
difference between _Complex and Rcomplex). With newer gfortran (9.3) 
there are no warnings.


>
> On a side note, my intention was not to do "runtime tricks (such as 
> copying the memory, etc) to silence benign compiler warnings" but only 
> to remove all warnings that prevent the CRAN from accepting my package 
> (I'm sure they have good reasons to do so). I believe these warnings 
> should not appear with gcc/gfortran 8.3.0 which is the standard 
> version on Debian Buster (the current stable version of Debian which I 
> am sure is installed on many production servers).

When you are copying the memory from Rcomplex array to _Complex array, 
you are still assuming the memory layout is compatible. But in addition, 
you have more code, use more memory, spend execution time copying 
(that's what I meant by runtime tricks). In case the memory layouts were 
actually different, there would still be a problem and it would be 
harder to find, because you have silenced the warning. I think it is 
strictly better to use a version that is not hiding this potential 
problem, along the lines I've written above. Also there should be no 
need to copy the incoming characters as in the original version. And, 
one can just write "n" instead of "&n[0]".


A portable version that would work for older and newer compilers (and 
other compilers) could only be created using iso_c_binding.


If you just wanted to silence the warnings (but, really, I think that 
would not be a good thing to do), you in principle still do that by 
redefining FC_LEN_T and Rcomplex, without any runtime overhead, but that 
would be hiding potential problems as well.


Best
Tomas

>
> Thank you again all for sharing your precious time.
>
> Kind regards,
> Pierre L.
> ------------------------------------------------------------------------
> *From:* Tomas Kalibera <tomas.kalibera at gmail.com>
> *Sent:* Friday, 18 December 2020 19:14
> *To:* Pierre Lafaye de Micheaux <lafaye at unsw.edu.au>; Ivan Krylov 
> <krylov.r00t at gmail.com>
> *Cc:* R Package Devel <r-package-devel at r-project.org>
> *Subject:* Re: [R-pkg-devel] [Re] warning: type of ?zhpevx_? does not 
> match original declaration [-Wlto-type-mismatch]
> On 12/18/20 8:25 AM, Pierre Lafaye de Micheaux wrote:
>> Dear Ivan,
>>
>> Thank you for your comment. And also for the previous one.
>>
>> I indeed made a mistake with JOBZ, RANGE and UPLO, now changed to:
>>
>> ? ? const char *CJOBZ = jobz[0];
>> ? ? const char *CRANGE = range[0];
>> ? ? const char *CUPLO = uplo[0];
>> ...
>> ? ? delete[] CJOBZ;
>> ? ? delete[] CRANGE;
>> ? ? delete[] CUPLO;
>
> Dear Pierre,
>
>
> this unfortunately still does not look right. You are calling 
> "delete[]" on something you have not allocated with "new". This code 
> will not work (or if so, only by coincidence only sometimes, but crash 
> other times or produce incorrect results) and you should be seeing a 
> number of compiler warnings if not errors. "jobz" is a "char *" 
> (unless something changed from you previous example), so jobz[0] is a 
> "char", so not a pointer at all.
>
>
>>
>> I did a bit of F77 programming almost 20 years ago when I did my 
>> Ph.D. thesis, but I never programmed in Fortran 2003. I remember 
>> having tried a few months back to use the iso_c_binding approach 
>> (before your previous email) with no success. I will give it a try to 
>> see if I can make it work.
>
> That would be best, but I would certainly advise against doing runtime 
> tricks (such as copying the memory, etc) to silence benign compiler 
> warnings. The version I was looking at seemed ok to me, and a recent 
> compiler would not emit warnings - perhaps you could just upgrade your 
> OS?? If you just extended the use of the FC_ macros there to make that 
> work also when the hidden character arguments were not used, that 
> would be good enough for now I think. For the iso_c_binding, there is 
> an example in Writing R Extensions (but does not include the complex 
> type).
>
>
> Best,
>
> Tomas
>
>>
>> Have a nice day.
>>
>> Kind regards,
>> Pierre
>> ------------------------------------------------------------------------
>> *From:* Ivan Krylov <krylov.r00t at gmail.com> 
>> <mailto:krylov.r00t at gmail.com>
>> *Sent:* Friday, 18 December 2020 18:16
>> *To:* Pierre Lafaye de Micheaux <lafaye at unsw.edu.au> 
>> <mailto:lafaye at unsw.edu.au>
>> *Cc:* Tomas Kalibera <tomas.kalibera at gmail.com> 
>> <mailto:tomas.kalibera at gmail.com>; Prof Brian Ripley 
>> <ripley at stats.ox.ac.uk> <mailto:ripley at stats.ox.ac.uk>; R Package 
>> Devel <r-package-devel at r-project.org> 
>> <mailto:r-package-devel at r-project.org>
>> *Subject:* Re: [R-pkg-devel] [Re] warning: type of ?zhpevx_? does not 
>> match original declaration [-Wlto-type-mismatch]
>> Dear Pierre L.,
>>
>> I think that the zhpevxC wrapper, as written, may result in undefined
>> behaviour:
>>
>> >??? const char *JOBZ = jobz[0];
>>
>> >??? delete[] JOBZ;
>>
>> >??? delete[] Cap;
>>
>> This could work okay, depending on how the rest of the package is
>> written, but in general, it is considered a bad idea for linear algebra
>> routines to deallocate memory they didn't allocate. ("Pointer
>> ownership is usually retained by the calling code.")
>>
>> May I suggest once again the idea of writing a Fortran 2003 wrapper
>> zhpevxC instead of C++? Subroutines defined using iso_c_binding are
>> guaranteed to follow the C calling convention, and, this being Fortran,
>> call zhpevx(...) is guaranteed to match the Fortran calling convention,
>> bringing you the best of both worlds:
>>
>> https://stat.ethz.ch/pipermail/r-package-devel/2020q3/005710.html
>>
>> No need to allocate or deallocate memory or provide different
>> definitions depending on the availability of FC_LEN_T, just make sure
>> that both prototypes mean the same thing. By the way,
>> std::complex<double> is guaranteed to match the memory layout of C type
>> double _Complex and Fortran type complex(kind = c_double_complex) by
>> the respective standards.
>>
>> -- 
>> Best regards,
>> Ivan
>
>


	[[alternative HTML version deleted]]


From joris m@iii@g oii jorisgoose@@@i  Mon Dec 21 19:33:56 2020
From: joris m@iii@g oii jorisgoose@@@i (joris m@iii@g oii jorisgoose@@@i)
Date: Mon, 21 Dec 2020 19:33:56 +0100
Subject: [R-pkg-devel] Package Encoding and Literal Strings
In-Reply-To: <610387fb-f330-071d-6969-096fedc67045@gmail.com>
References: <CANfj7vJTwLmkfO0sq4c1ws+Gn+Lji7LhEqvOcWJGfuVGCk+L5w@mail.gmail.com>
 <E626F78F-2B8F-4AE8-9261-7C82B42738D2@hxcore.ol>
 <CANfj7v+QiZGMyWEK3g-HP+Rox0Wmck91UwjMmpn0Cm7yCkNL7w@mail.gmail.com>
 <cd8b321e-759e-e9a1-5b57-ced4e2720a26@gmail.com>
 <CANfj7v+dnyiX0E5RtJ8kherbXNddh=MeWua4qMg13rjQNULQcw@mail.gmail.com>
 <dee044d0-fdf4-875d-24d6-63b9aa7f6d4f@gmail.com>
 <CANfj7vLL89Cp762TUVzLYBnQXP-yi5b6KvCjc+z1sZ4OfmW=Jw@mail.gmail.com>
 <d18dc361-0b42-e6b2-1efd-b1526ac7e2d1@gmail.com>
 <CANfj7vLrbsoN+SUbNpKrpDhJoQFj3EmJ00O4yEE9P=no4q1uRw@mail.gmail.com>
 <610387fb-f330-071d-6969-096fedc67045@gmail.com>
Message-ID: <CANfj7v+0q5civaDC1a83Tj9M7ToMVZU9mM_pT9ys1jAtAjuGpQ@mail.gmail.com>

Hello Tomas,

Thank you for the feedback and your summary of how things now work and what
goes wrong for the tao- and mathot-string confirms all of my suspicions.
And it also describes my exact problem fairly well.

It seems it does come down to R not keeping the UTF-8 encoding of the
literal strings on Windows with a "typical codepage" when loading a
package.
This despite reading it from file in that particular encoding and also
specifying the same in DESCRIPTION.
While `eval(parse(..., encoding="UTF-8"))` *does* keep the encoding on the
literal strings. Which means there is some discrepancy between the two.
That means the way a package is loaded it uses a different path then when
using `eval(parse(..., encoding="UTF-8"))`?

You mention:
> Strings that cannot be represented in the native encoding like tao will
get the escapes, and so cannot be converted back to UTF-8. This is not
great, but I  see it was the case already in 3.6 (so not a recent
regression) and I don't think it would be worth the time trying to fix that
- as discussed earlier, only switching to UTF-8 would fix all of these
translations, not just one.

Not a recent regression means it used to work the same for both and keeping
the UTF-8 encoding?
I've tried R 3 and it already doesnt work there, I also tried 2.8 but
couldnt get my testpkg (simplified to use "charToRaw" instead of a C-call)
to install there.
However, having this work would already be quite useful as our custom GUI
on top of R is fully UTF-8 anyhow.

And I would certainly be up for figuring out how to fix the regression so
that we can use this until your work on the UTF-8 version with UCRT is
released.
On the other hand, maybe this would not be the wisest investment of my
time.

I've tried using the installer and toolchain you linked to in
https://developer.r-project.org/Blog/public/2020/07/30/windows/utf-8-build-of-r-and-cran-packages/index.html
and use that to compile our software.
This normally works with the Rtools toolchain, but it seems that "make" is
missing from your toolchain. When I build (our project with Riniside in it)
using your toolchain in the beginning of PATH and using mingw32-make from
rtools40 I run into problems of a missing "cc1plus".

If I read https://mxe.cc/ it seems it is meant for cross-compiling, not
locally on Windows?
Maybe that is what is going wrong.
But despite trying for quite a bit I couldn't get our software to compile
in such a way it could link with R.
Which means I couldn't test if it solves our problem...

Cheers,
Joris


On Fri, 18 Dec 2020 at 18:05, Tomas Kalibera <tomas.kalibera at gmail.com>
wrote:

> Hi Joris,
>
> thanks for the example. You can actually simply have Test.R assign the two
> variables and then run
>
> Encoding(utf8StringsPkg1::mathotString)
> charToRaw(utf8StringsPkg1::mathotString)
> Encoding(utf8StringsPkg1::tao)
> charToRaw(utf8StringsPkg1::tao)
>
> I tried on Linux, Windows/UTF-8 (the experimental version) and
> Windows/latin-1 (released version). In all cases, both strings are
> converted to native encoding. The mathotString is converted to latin-1
> fine, because it is representable there. The tao string when running in
> latin-1 locale gets the escapes <xx>:
>
> "<e9><99><b6><e5><be><b7><e5><ba><86>"
>
> Btw, the parse(,encoding="UTF-8") hack works, when you parse the modified
> Test.R file (with the two assignments), and eval the output, you will get
> those strings in UTF-8. But when you don't eval and print the parse tree in
> Rgui, it will not be printed correctly (again a limitation of these hacks,
> they could only do so much).
>
> When accessing strings from C, you should always be prepared for any
> encoding in a CHARSXP, so when you want UTF-8, use "translateCharUTF8()"
> instead of "CHAR()". That will work fine on representable strings like
> mathotString, and that is conceptually the correct way to access them.
>
> Strings that cannot be represented in the native encoding like tao will
> get the escapes, and so cannot be converted back to UTF-8. This is not
> great, but I  see it was the case already in 3.6 (so not a recent
> regression) and I don't think it would be worth the time trying to fix that
> - as discussed earlier, only switching to UTF-8 would fix all of these
> translations, not just one. Btw, the example works fine on the
> experimentation UTF-8 build on Windows.
>
> I am sorry there is not a simple fix for non-representable characters.
>
> Best
> Tomas
>
>
>
> On 12/18/20 1:53 PM, joris at jorisgoosen.nl wrote:
>
> Hello Tomas,
>
> I have made a minimal example that demonstrates my problem:
> https://github.com/JorisGoosen/utf8StringsPkg
>
> This package is encoded in UTF-8 as is Test.R. There is a little Rcpp
> function in there I wrote that displays the bytes straight from R's CHAR to
> be sure no conversion is happening.
> I would expect that the mathotString had "C3 B4" for "?" but instead it
> gets "F4". As you can see when you run
> `utf8StringsPkg::testutf8_in_locale()`.
>
> Cheers,
> Joris
>
>
>
> On Fri, 18 Dec 2020 at 11:48, Tomas Kalibera <tomas.kalibera at gmail.com>
> wrote:
>
>> On 12/17/20 6:43 PM, joris at jorisgoosen.nl wrote:
>>
>>
>>
>> On Thu, 17 Dec 2020 at 18:22, Tomas Kalibera <tomas.kalibera at gmail.com>
>> wrote:
>>
>>> On 12/17/20 5:17 PM, joris at jorisgoosen.nl wrote:
>>>
>>>
>>>
>>> On Thu, 17 Dec 2020 at 10:46, Tomas Kalibera <tomas.kalibera at gmail.com>
>>> wrote:
>>>
>>>> On 12/16/20 11:07 PM, joris at jorisgoosen.nl wrote:
>>>> > David,
>>>> >
>>>> > Thanks for the response!
>>>> >
>>>> > So the problem is a bit worse then just setting `encoding="UTF-8"` on
>>>> > functions like readLines.
>>>> > I'll describe our setup a bit:
>>>> > So we run R embedded in a separate executable and through a whole
>>>> bunch of
>>>> > C(++) magic get that to the main executable that runs the actual
>>>> interface.
>>>> > All the code that isn't R basically uses UTF-8. This works good and
>>>> we've
>>>> > made sure that all of our source code is encoded properly and I've
>>>> verified
>>>> > that for this particular problem at least my source file is definitely
>>>> > encoded in UTF-8 (Ive checked a hexdump).
>>>> >
>>>> > The simplest solution, that we initially took, to get R+Windows to
>>>> > cooperate with everything is to simply set the locale to "C" before
>>>> > starting R. That way R simply assumes UTF-8 is native and everything
>>>> worked
>>>> > splendidly. Until of course a file needs to be opened in R that
>>>> contains
>>>> > some non-ASCII characters. I noticed the problem because a korean
>>>> user had
>>>> > hangul in his username and that broke everything. This because R was
>>>> trying
>>>> > to convert to a different locale than Windows was using.
>>>>
>>>> Setting locale to "C" does not make R assume UTF-8 is the native
>>>> encoding, there is no way to make UTF-8 the current native encoding in
>>>> R
>>>> on the current builds of R on Windows. This is an old limitation of
>>>> Windows, only recently fixed by Microsoft in recent Windows 10 and with
>>>> UCRT Windows runtime (see my blog post [1] for more - to make R support
>>>> this we need a new toolchain to build R).
>>>>
>>>> If you set the locale to C encoding, you are telling R the native
>>>> encoding is C/POSIX (essentially ASCII), not UTF-8. Encoding-sensitive
>>>> operations, including conversions, including those conversions that
>>>> happen without user control e.g. for interacting with Windows, will
>>>> produce incorrect results (garbage) or in better case errors, warnings,
>>>> omitted, substituted or transliterated characters.
>>>>
>>>> In principle setting the encoding via locale is dangerous on Windows,
>>>> because Windows has two current encodings, not just one. By setting
>>>> locale you set the one used in the C runtime, but not the other one
>>>> used
>>>> by the system calls. If all code (in R, packages, external libraries)
>>>> was perfect, this would still work as long as all strings used were
>>>> representable in both encodings. For other strings it won't work, and
>>>> then code is not perfect in this regard, it is usually written assuming
>>>> there is one current encoding, which common sense dictates should be
>>>> the
>>>> case. With the recent UTF-8 support ([1]), one can switch both of these
>>>> to UTF-8.
>>>>
>>>
>>> Well, this is exactly why I want to get rid of the situation. But this
>>> messes up the output because everything else expects UTF-8 which is why I'm
>>> looking for some kind of solution.
>>>
>>>
>>>
>>>> > The solution I've now been working on is:
>>>> > I took the sourcecode of R 4.0.3 and changed the backend of "gettext"
>>>> to
>>>> > add an `encoding="something something"` option. And a bit of extra
>>>> stuff
>>>> > like `bind_textdomain_codeset` in case I need to tweak the
>>>> codeset/charset
>>>> > that gettext uses.
>>>> > I think I've got that working properly now and once I solve the
>>>> problem of
>>>> > the encoding in a pkg I will open a bugreport/feature-request and
>>>> I'll add
>>>> > a patch that implements it.
>>>>
>>>> A number of similar "shortcuts" have been added to R in the past, but
>>>> they may the code more complex, harder to maintain and use, and can't
>>>> realistically solve all of these problems, anyway. Strings will
>>>> eventually be assumed to be in what is the current native encoding by
>>>> the C library. In R, any external code R uses, or code R packages use.
>>>> Now that Microsoft finally is supporting UTF-8, the way to get out of
>>>> this is switching to UTF-8. This needs only small changes to R source
>>>> code compared to those "shortcuts" (or to using UTF-16LE). I'd be
>>>> against polluting the code with any more "shortcuts".
>>>>
>>>
>>> I think the addition of " bind_textdomain_codeset" is not strictly
>>> necessary and can be left out. Because I think setting an environment
>>> variable as "OUTPUT_CHARSET=UTF-8" gives the same result for us.
>>> The addition of the "encoding" option to the internal "do_gettext" is
>>> just a few lines of code and I also undid some duplication between
>>> do_gettext and do_ngettext. Which should make it easier to maintain. But
>>> all of that is moot if there is no way to keep the literal strings from
>>> sources in UTF-8 anyhow.
>>>
>>> Before starting on this I did actually read your blogpost about UTF-8
>>> several times and it seems like the best way forward. Not to mention it
>>> would make my life easier and me happier when I can stop worrying about
>>> Windows/Dos codepages!
>>> Thank you for your work on it indeed!
>>>
>>> But my problem with that is that a number of people still use an older
>>> version of windows and your solution won't work there. Which would mean
>>> that we either drop support for them or they would have to live with either
>>> weirdlooking translations. Or I have to go back to the suboptimal solution
>>> of the "C" locale which I really do want to avoid. Because as you said it
>>> breaks other stuff in unpredictable ways.
>>>
>>> The number of people using too old version of Windows should be small
>>> when this could become ready for production. Windows 8.1. is still
>>> supported, but there is the free upgrade to Windows 10 (also from no longer
>>> supported Windows 7), so this should not be a problem for desktop machines.
>>> It will be a problem for servers.
>>>
>> Well, I would not expect anyone to use a GUI-heavy application meant for
>> researchers on a server anyway so that would be fine.
>>
>>>
>>>
>>>> > The problem I'm stuck with now is simply this:
>>>> > I have an R pkg here that I want to test the translations with and
>>>> the code
>>>> > is definitely saved as UTF-8, the package has "Encoding: UTF-8" in the
>>>> > DESCRIPTION and it all loads and works. The particular problem I have
>>>> is
>>>> > that the R code contains literally: `mathotString <- "Math?t!"`
>>>> > The actual file contains the hexadecimal representation of ? as proper
>>>> > utf-8: "0xC3 0xB4" but R turns it into: "0xf4".
>>>> > Seemingly on loading the package, because I haven't done anything
>>>> with it
>>>> > except put it in my debug c-function to print its contents as
>>>> > hexadecimals...
>>>> >
>>>> > The only thing I want to achieve here is that when R loads the
>>>> package it
>>>> > keeps those strings in their original UTF-8 encoding, without
>>>> converting it
>>>> > to "native" or the strange unicode codepoint it seemingly placed in
>>>> there
>>>> > instead. Because otherwise I cannot get gettext to work fully in
>>>> UTF-8 mode.
>>>> >
>>>> > Is this already possible in R?
>>>>
>>>> In principle, working with strings not representable in the current
>>>> encoding is not reliable (and never will be). It can still work in some
>>>> specific cases and uses. Parsing a UTF-8 string literal from a file,
>>>> with correctly declared encoding as documented in WRE, should work at
>>>> least in single-byte encodings. But what happens after that string is
>>>> parsed is another thing. The parsing is based internally on using these
>>>> "shortcuts", that is lying to a part of the parser about the encoding,
>>>> and telling the rest of the parser that it is really something else
>>>> (not
>>>> native, but UTF-8).
>>>
>>>
>>> So the reason the string literals are turned into the local encoding is
>>> because setting the "Encoding" on a package is essentially a hack?
>>>
>>> String literals may be turned into local encoding because that is how
>>> R/packages/external software is written - it needs native encoding. Hacks
>>> here come when such code is given a string not in the local encoding,
>>> assuming that under some conditions such code will work. This includes a
>>> part of the parser and a hack to implement argument "encoding" of
>>> "parse()", which allows to parse (non-representable) UTF-8 strings when
>>> running in a single-byte locale such as latin 1 (see ?parse).
>>>
>> So the same `parse` function is used for loading a package?
>>
>> Parsing for usual packages is done at build time, when they are
>> serialized ("prepared for lazy loading"). I would have to look for the
>> details in the code, but either way, if the input is in UTF-8 but the
>> native encoding is different, either the input has to be converted to
>> native encoding for the parser, or that hack when part of the parser is
>> being lied to about the encoding (either via "parse()" or other way). If
>> you have a minimal reproducible example, I can help you find out whether
>> the behavior seen is expected/documented/bug.
>>
>> Because in that case I wonder if the "Encoding" option in "DESCRIPTION"
>> is handled the same as `encoding=` in parse.
>>
>> ?parse states:
>> > Character strings in the result will have a declared encoding if
>> encoding is "latin1" or "UTF-8", or if text is supplied with every
>> element of known encoding in a Latin-1 or UTF-8 locale.
>>
>> The sentence is a bit hard for me personally to parse but I interpret
>> that first part to mean that if "encoding" is specified as "UTF-8" all the
>> character string in the result will also have that encoding.
>> Is that a correct interpretation?
>> Because if so I do believe I found a problem and I will try to make a
>> minimal reproducable example.
>>
>> Please look first at this part of "?parse":
>>
>> "encoding: encoding to be assumed for input strings.  If the value is
>> ?"latin1"? or ?"UTF-8"? it is used to mark character strings as known to be
>> in Latin-1 or UTF-8: it is not used to re-encode the input.  To do the
>> latter, specify the encoding as part of the connection ?con? or _via_
>> ?options(encoding=)?: see the example under ?file?. Arguments ?encoding =
>> "latin1"? and ?encoding = "UTF-8"? are ignored with a warning when running
>> in a MBCS locale."
>>
>> Together with the one you cite:
>>
>> "Character strings in the result will have a declared encoding if
>> ?encoding? is ?"latin1"? or ?"UTF-8"?, or if ?text? is supplied with every
>> element of known encoding in a Latin-1 or UTF-8 locale."
>>
>> There are two things: which encoding strings are really encoded in, and
>> which encoding they are declared to be in. Normally this should always be
>> the same encoding (UTF-8, latin-1, or the concrete known native encoding),
>> but the "encoding=" argument allows to play with this. Strings declared to
>> be in "native" encoding for a while are treated as (single-byte) unknown
>> encoding and eventually they are declared to be of the encoding from the
>> "encoding=" argument. This only applies to strings declared as "native".
>> When strings are declared as UTF-8 or latin-1, they must be in that
>> encoding, and believed to be in that, the "encoding=" argument does not
>> affect those.
>>
>> So, when your inputs are declared as UTF-8, the "encoding=" hack should
>> not apply to them. Also note that ASCII strings are never declared to be
>> UTF-8 nor latin-1, they are always as "native" (and ASCII is assumed a
>> subset of all encodings). But your inputs probably are not declared to be
>> in UTF-8 (note this is "declared" wrt to Encoding() R function, the
>> encoding flag that character objects in R have), because you are probably
>> parsing from a file. I'd really need a reproducible example to be able to
>> explain what you are seeing.
>>
>> Best
>> Tomas
>>
>>
>>
>>>
>>>
>>>> The part that is being "lied to" may get confused or
>>>> not. It would not when the real native encoding is say latin1, a common
>>>> case in the past for which the hack was created, but it might when it
>>>> is
>>>> a double-byte encoding that conflicts with the text being parsed in
>>>> dangerous ways. This is also why this hack only makes sense for string
>>>> literals (and comments), and still only to a limit as the strings may
>>>> be
>>>> misinterpreted later after parsing.
>>>>
>>>
>>> Well our case is entirely limited to string literals that are presented
>>> to the user through an all-utf-8 interface.
>>> So I would assume not of the edge-cases would come into play.
>>> Any systempaths and things like that would still be in local encoding.
>>>
>>>
>>>
>>>
>>>> So a really short summary is: you can only reliably use strings
>>>> representable in the current encoding in R, and that encoding cannot be
>>>> UTF-8 on Windows in released versions of R. There is an experimental
>>>> version, see [1], if you could experiment with that and see whether
>>>> that
>>>> might work for your applications, could try to find and report bugs
>>>> there (e.g. to me directly), that would be useful.
>>>>
>>>
>>> So when I read in certain R documentation that string can have an
>>> "UTF-8" encoding in R this is not true?
>>> As in, when I read documentation such as
>>> https://stat.ethz.ch/R-manual/R-devel/library/base/html/Encoding.html
>>> it really seems to indicate to me that UTF-8 is in fact supported in R on
>>> windows.
>>> My assumption was that R uses `translateChar` internally to make sure it
>>> is in the right encoding before interfacing with the OS and other places
>>> where this might matter.
>>>
>>> UTF-8 is supported in R on Windows in many ways, as documented. As long
>>> as you are using UTF-8 strings representable in the current encoding, so
>>> that they can be converted to native encoding and back without problems,
>>> you are fine, R will do the conversions as needed. The troubles come when
>>> such conversion is not possible. In the example of the parser, without the
>>> "encoding=" argument to "parse()", the parser will just work on any text
>>> you give to it, even when the text is in UTF-8: it will work by first
>>> converting to native encoding and then doing the parsing, no hacks
>>> involved. When interacting with external software, you'd just tell R to
>>> provide the strings in the encoding needed by that external software, so
>>> possibly UTF-8, so possibly convert, but all would work fine. The problem
>>> are characters not representable in the native encoding.
>>>
>> Exactly, I want to be able to support chinese etc as well while running
>> in a west-european locale.
>> This is also what mislead me, because I thought it was actually reading
>> it like that but the character is part of my local locale so I didn't
>> notice it. Especially as it was being printed correctly. I only noticed
>> after printing the literal values.
>>
>>
>>>
>>>
>>>> If you find behavior re encodings in released versions of R that
>>>> contradicts the current documentation, please report with a minimal
>>>> reproducible example, such cases should be fixed (even though sometimes
>>>> the "fix" would be just changing the documentation, the effort really
>>>> should be now for supporting UTF-8 for real). Specifically with
>>>> "mathotString", you might try creating  an example that does not
>>>> include
>>>> any package (just calls to parse with encoding options set), only then
>>>> gradually adding more of package loading if that does not reproduce. It
>>>> would be important to know the current encoding (sessionInfo,
>>>> l10n_info).
>>>>
>>>
>>> Well, the reason I mailed the mailing list was because I couldn't for
>>> the life of me find any documentation that told me anything in particular
>>> about how literal strings are supposed to be stored in memory. But it just
>>> seems logical to me that if R already supports parsing and loading a
>>> package encoded with UTF-8 and it supports having UTF-8 strings in memory
>>> next to strings in native encoding the most straightforward way of loading
>>> this literal strings would be in UTF-8.
>>>
>>> You mean the memory representation? For that there would be R Internals
>>> and the sources, essentially there are CHARSXP objects which include an
>>> encoding tag (UTF-8, Latin-1 or native) and the raw bytes. But you would
>>> not access these objects directly, instead use translateChar() if you
>>> needed strings them in native encoding or translateCharUTF8() if in UTF-8,
>>> and this is documented in Writing R Extensions.
>>>
>> Exactly, because gettext operates in C and the source files for that are
>> also in utf-8 the actual memory representation of the string in R needs to
>> be identical, otherwise it won't work.
>>
>>> I think it would be really good if you could provide a complete, minimal
>>> reproducible example of your problem. It may be there is some
>>> misunderstanding, especially if you are working with characters
>>> representable in the current encoding, there should be no problem.
>>>
>> It depends on if I now understand ?parse correctly in that it should have
>> the strings in a package that is parsed with the specified encoding in that
>> encoding or not. As I wondered above.
>>
>>> I would love to use the new version of R that supports properly
>>> interfacing with windows 10.
>>> And given that the only other supported version of Windows is 8.1 and
>>> barely anyone uses it. So it might be worth dropping support for that.
>>> I just hoped I could find a workable solution without such a step.
>>>
>>> I understand, also it may take a bit of time before this would become
>>> stable.
>>>
>> Of course.
>> Hopefully I can still use my current workaround for the time being and
>> then switch over to the UTF-8 ready version if it becomes production-ready
>> at some point.
>>
>> Cheers,
>> Joris
>>
>> Best
>>> Tomas
>>>
>>>
>>> Cheers,
>>> Joris
>>>
>>>
>>>>
>>>> Best,
>>>> Tomas
>>>>
>>>> [1]
>>>>
>>>> https://developer.r-project.org/Blog/public/2020/07/30/windows/utf-8-build-of-r-and-cran-packages/index.html
>>>>
>>>> >
>>>> > Cheers,
>>>> > Joris
>>>>
>>>> >
>>>> >
>>>> > On Wed, 16 Dec 2020 at 20:15, David Bosak <dbosak01 at gmail.com> wrote:
>>>> >
>>>> >> Joris:
>>>> >>
>>>> >>
>>>> >>
>>>> >> I?ve fought with encoding problems on Windows a lot.  Here are some
>>>> >> general suggestions.
>>>> >>
>>>> >>
>>>> >>
>>>> >>     1. Put ?@encoding UTF-8? on any Roxygen comments.
>>>> >>     2. Put ?encoding = ?UTF-8? on any functions like writeLines or
>>>> >>     readLines that read/write to a text file.
>>>> >>     3. This post:
>>>> >>
>>>> https://kevinushey.github.io/blog/2018/02/21/string-encoding-and-r/
>>>> >>
>>>> >>
>>>> >>
>>>> >> If you have a more specific problem, please describe and we can try
>>>> to
>>>> >> help.
>>>> >>
>>>> >>
>>>> >>
>>>> >> David
>>>> >>
>>>> >>
>>>> >>
>>>> >> Sent from Mail <https://go.microsoft.com/fwlink/?LinkId=550986> for
>>>> >> Windows 10
>>>> >>
>>>> >>
>>>> >>
>>>> >> *From: *joris at jorisgoosen.nl
>>>> >> *Sent: *Wednesday, December 16, 2020 1:52 PM
>>>> >> *To: *r-package-devel at r-project.org
>>>> >> *Subject: *[R-pkg-devel] Package Encoding and Literal Strings
>>>> >>
>>>> >>
>>>> >>
>>>> >> Hello All,
>>>> >>
>>>> >>
>>>> >>
>>>> >> Some context, I am one of the programmers of a software pkg (
>>>> >>
>>>> >> https://jasp-stats.org/) that uses an embedded instance of R to do
>>>> >>
>>>> >> statistics. And make that a bit easier for people who are
>>>> intimidated by R
>>>> >>
>>>> >> or like to have something more GUI oriented.
>>>> >>
>>>> >>
>>>> >>
>>>> >>
>>>> >>
>>>> >> We have been working on translating the interface but ran into
>>>> several
>>>> >>
>>>> >> problems related to encoding of strings. We prefer to use UTF-8 for
>>>> >>
>>>> >> everything and this works wonderful on unix systems, as is to be
>>>> expected.
>>>> >>
>>>> >>
>>>> >>
>>>> >> Windows however is a different matter. Currently I am working on
>>>> some local
>>>> >>
>>>> >> changes to "do_gettext" and some related internal functions of R to
>>>> be able
>>>> >>
>>>> >> to get UTF-8 encoded output from there.
>>>> >>
>>>> >>
>>>> >>
>>>> >> But I ran into a bit of a problem and I think this mailinglist is
>>>> probably
>>>> >>
>>>> >> the best place to start.
>>>> >>
>>>> >>
>>>> >>
>>>> >> It seems that if I have an R package that specifies "Encoding:
>>>> UTF-8" in
>>>> >>
>>>> >> DESCRIPTION the literal strings inside the package are converted to
>>>> the
>>>> >>
>>>> >> local codeset/codepage regardless of what I want.
>>>> >>
>>>> >>
>>>> >>
>>>> >> Is it possible to keep the strings in UTF-8 internally in such a pkg
>>>> >>
>>>> >> somehow?
>>>> >>
>>>> >>
>>>> >>
>>>> >> Best regards,
>>>> >>
>>>> >> Joris Goosen
>>>> >>
>>>> >> University of Amsterdam
>>>> >>
>>>> >>
>>>> >>
>>>> >>                  [[alternative HTML version deleted]]
>>>> >>
>>>> >>
>>>> >>
>>>> >> ______________________________________________
>>>> >>
>>>> >> R-package-devel at r-project.org mailing list
>>>> >>
>>>> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>> >>
>>>> >>
>>>> >>
>>>> >       [[alternative HTML version deleted]]
>>>> >
>>>> > ______________________________________________
>>>> > R-package-devel at r-project.org mailing list
>>>> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>
>>>>
>>>>
>>>
>>
>

	[[alternative HTML version deleted]]


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Mon Dec 21 21:21:38 2020
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Mon, 21 Dec 2020 21:21:38 +0100
Subject: [R-pkg-devel] Package Encoding and Literal Strings
In-Reply-To: <CANfj7v+0q5civaDC1a83Tj9M7ToMVZU9mM_pT9ys1jAtAjuGpQ@mail.gmail.com>
References: <CANfj7vJTwLmkfO0sq4c1ws+Gn+Lji7LhEqvOcWJGfuVGCk+L5w@mail.gmail.com>
 <E626F78F-2B8F-4AE8-9261-7C82B42738D2@hxcore.ol>
 <CANfj7v+QiZGMyWEK3g-HP+Rox0Wmck91UwjMmpn0Cm7yCkNL7w@mail.gmail.com>
 <cd8b321e-759e-e9a1-5b57-ced4e2720a26@gmail.com>
 <CANfj7v+dnyiX0E5RtJ8kherbXNddh=MeWua4qMg13rjQNULQcw@mail.gmail.com>
 <dee044d0-fdf4-875d-24d6-63b9aa7f6d4f@gmail.com>
 <CANfj7vLL89Cp762TUVzLYBnQXP-yi5b6KvCjc+z1sZ4OfmW=Jw@mail.gmail.com>
 <d18dc361-0b42-e6b2-1efd-b1526ac7e2d1@gmail.com>
 <CANfj7vLrbsoN+SUbNpKrpDhJoQFj3EmJ00O4yEE9P=no4q1uRw@mail.gmail.com>
 <610387fb-f330-071d-6969-096fedc67045@gmail.com>
 <CANfj7v+0q5civaDC1a83Tj9M7ToMVZU9mM_pT9ys1jAtAjuGpQ@mail.gmail.com>
Message-ID: <ac8ddd28-ab80-59e6-e474-9021e9a149ae@gmail.com>

Hi Joris,

On 12/21/20 7:33 PM, joris at jorisgoosen.nl wrote:
> Hello Tomas,
>
> Thank you for the feedback and your summary of how things now work and 
> what goes wrong for the tao- and mathot-string confirms all of my 
> suspicions. And it also describes my exact problem fairly well.
>
> It seems it does come down to R not keeping the UTF-8 encoding of the 
> literal strings on Windows with a "typical codepage" when loading a 
> package.
> This despite reading it from file in that particular encoding and also 
> specifying the same in DESCRIPTION.
> While `eval(parse(..., encoding="UTF-8"))` *does* keep the encoding on 
> the literal strings. Which means there is some discrepancy between the 
> two.
> That means the way a package is loaded it uses a different path then 
> when using `eval(parse(..., encoding="UTF-8"))`?

Yes, it must be a different path. The DESCRIPTION field defines what 
encoding is the input in, so that R can read it. It does not tell R how 
it should represent the strings internally. The behavior is ok, well 
except for non-representable characters.

> You mention:
> > Strings that cannot be represented in the native encoding like tao 
> will get the escapes, and so cannot be converted back to UTF-8. This 
> is not great, but I? see it was the case already in 3.6 (so not a 
> recent regression) and I don't think it would be worth the time trying 
> to fix that - as discussed earlier, only switching to UTF-8 would fix 
> all of these translations, not just one.
>
> Not a recent regression means it used to work the same for both and 
> keeping the UTF-8 encoding?
> I've tried R 3 and it already doesnt work there, I also tried 2.8 but 
> couldnt get my testpkg (simplified to use "charToRaw" instead of a 
> C-call) to install there.
> However, having this work would already be quite useful as our custom 
> GUI on top of R is fully UTF-8 anyhow.
By "not a recent regression" I meant it wasn't broken recently. It 
probably never worked the way you (and me and probably everyone else) 
would like it to work, that is it probably always translated to native 
encoding, because that was the only option except rewriting all of our 
code, packages, external libraries to use UTF-16LE (as discussed before).
> And I would certainly be up for figuring out how to fix the regression 
> so that we can use this until your work on the UTF-8 version with UCRT 
> is released.
> On the other hand, maybe this would not be the wisest investment of my 
> time.

I bet your applications do more than just load a package and then access 
string literals in the code. And as soon as you do anything with those 
strings, R may translate them to native encoding (well unless we 
document this does not happen, typically some code around connections, 
file paths, etc). So, providing a shortcut for this case I am afraid 
wouldn't help you much. If the problem was just parsing, you could also 
use "\u" escapes as workaround in the literals. Remember, the 
parse(,encoding="UTF-8") only could work in single-byte encodings.

> I've tried using the installer and toolchain you linked to in 
> https://developer.r-project.org/Blog/public/2020/07/30/windows/utf-8-build-of-r-and-cran-packages/index.html 
> and use that to compile our software.
> This normally works with the Rtools toolchain, but it seems that 
> "make" is missing from your toolchain. When I build (our project with 
> Riniside in it) using your toolchain in the beginning of PATH and 
> using mingw32-make from rtools40 I run into problems of a missing 
> "cc1plus".

Sorry, building native code is still involved with that demo. You would 
have to set PATHs and well maybe alter the installation or build from 
source, as described in
https://svn.r-project.org/R-dev-web/trunk/WindowsBuilds/winutf8/winutf8.html

What might be actually easier, you could try a current development 
version, I will send you a link.

> If I read https://mxe.cc/ it seems it is meant for cross-compiling, 
> not locally on Windows?
> Maybe that is what is going wrong.
> But despite trying for quite a bit I couldn't get our software to 
> compile in such a way it could link with R.
> Which means I couldn't test if it solves our problem...

You can compile native code locally on Windows, the toolchain includes a 
native compiler and I build R packages natively as well. 
Cross-compilation is used to build the compiler toolchain and external 
libraries for packages.

Cheers
Tomas

>
> Cheers,
> Joris
>
>
> On Fri, 18 Dec 2020 at 18:05, Tomas Kalibera <tomas.kalibera at gmail.com 
> <mailto:tomas.kalibera at gmail.com>> wrote:
>
>     Hi Joris,
>
>     thanks for the example. You can actually simply have Test.R assign
>     the two variables and then run
>
>     Encoding(utf8StringsPkg1::mathotString)
>     charToRaw(utf8StringsPkg1::mathotString)
>     Encoding(utf8StringsPkg1::tao)
>     charToRaw(utf8StringsPkg1::tao)
>
>     I tried on Linux, Windows/UTF-8 (the experimental version) and
>     Windows/latin-1 (released version). In all cases, both strings are
>     converted to native encoding. The mathotString is converted to
>     latin-1 fine, because it is representable there. The tao string
>     when running in latin-1 locale gets the escapes <xx>:
>
>     "<e9><99><b6><e5><be><b7><e5><ba><86>"
>
>     Btw, the parse(,encoding="UTF-8") hack works, when you parse the
>     modified Test.R file (with the two assignments), and eval the
>     output, you will get those strings in UTF-8. But when you don't
>     eval and print the parse tree in Rgui, it will not be printed
>     correctly (again a limitation of these hacks, they could only do
>     so much).
>
>     When accessing strings from C, you should always be prepared for
>     any encoding in a CHARSXP, so when you want UTF-8, use
>     "translateCharUTF8()" instead of "CHAR()". That will work fine on
>     representable strings like mathotString, and that is conceptually
>     the correct way to access them.
>
>     Strings that cannot be represented in the native encoding like tao
>     will get the escapes, and so cannot be converted back to UTF-8.
>     This is not great, but I? see it was the case already in 3.6 (so
>     not a recent regression) and I don't think it would be worth the
>     time trying to fix that - as discussed earlier, only switching to
>     UTF-8 would fix all of these translations, not just one. Btw, the
>     example works fine on the experimentation UTF-8 build on Windows.
>
>     I am sorry there is not a simple fix for non-representable characters.
>
>     Best
>     Tomas
>
>
>
>     On 12/18/20 1:53 PM, joris at jorisgoosen.nl
>     <mailto:joris at jorisgoosen.nl> wrote:
>>     Hello Tomas,
>>
>>     I have made a minimal example that demonstrates my problem:
>>     https://github.com/JorisGoosen/utf8StringsPkg
>>
>>     This package is encoded in UTF-8 as is Test.R. There is a little
>>     Rcpp function in there I wrote that displays the bytes straight
>>     from R's CHAR to be sure no conversion is happening.
>>     I would expect that the mathotString had "C3 B4" for "?" but
>>     instead it gets "F4". As you can see when you run
>>     `utf8StringsPkg::testutf8_in_locale()`.
>>
>>     Cheers,
>>     Joris
>>
>>
>>
>>     On Fri, 18 Dec 2020 at 11:48, Tomas Kalibera
>>     <tomas.kalibera at gmail.com <mailto:tomas.kalibera at gmail.com>> wrote:
>>
>>         On 12/17/20 6:43 PM, joris at jorisgoosen.nl
>>         <mailto:joris at jorisgoosen.nl> wrote:
>>>
>>>
>>>         On Thu, 17 Dec 2020 at 18:22, Tomas Kalibera
>>>         <tomas.kalibera at gmail.com <mailto:tomas.kalibera at gmail.com>>
>>>         wrote:
>>>
>>>             On 12/17/20 5:17 PM, joris at jorisgoosen.nl
>>>             <mailto:joris at jorisgoosen.nl> wrote:
>>>>
>>>>
>>>>             On Thu, 17 Dec 2020 at 10:46, Tomas Kalibera
>>>>             <tomas.kalibera at gmail.com
>>>>             <mailto:tomas.kalibera at gmail.com>> wrote:
>>>>
>>>>                 On 12/16/20 11:07 PM, joris at jorisgoosen.nl
>>>>                 <mailto:joris at jorisgoosen.nl> wrote:
>>>>                 > David,
>>>>                 >
>>>>                 > Thanks for the response!
>>>>                 >
>>>>                 > So the problem is a bit worse then just setting
>>>>                 `encoding="UTF-8"` on
>>>>                 > functions like readLines.
>>>>                 > I'll describe our setup a bit:
>>>>                 > So we run R embedded in a separate executable and
>>>>                 through a whole bunch of
>>>>                 > C(++) magic get that to the main executable that
>>>>                 runs the actual interface.
>>>>                 > All the code that isn't R basically uses UTF-8.
>>>>                 This works good and we've
>>>>                 > made sure that all of our source code is encoded
>>>>                 properly and I've verified
>>>>                 > that for this particular problem at least my
>>>>                 source file is definitely
>>>>                 > encoded in UTF-8 (Ive checked a hexdump).
>>>>                 >
>>>>                 > The simplest solution, that we initially took, to
>>>>                 get R+Windows to
>>>>                 > cooperate with everything is to simply set the
>>>>                 locale to "C" before
>>>>                 > starting R. That way R simply assumes UTF-8 is
>>>>                 native and everything worked
>>>>                 > splendidly. Until of course a file needs to be
>>>>                 opened in R that contains
>>>>                 > some non-ASCII characters. I noticed the problem
>>>>                 because a korean user had
>>>>                 > hangul in his username and that broke everything.
>>>>                 This because R was trying
>>>>                 > to convert to a different locale than Windows was
>>>>                 using.
>>>>
>>>>                 Setting locale to "C" does not make R assume UTF-8
>>>>                 is the native
>>>>                 encoding, there is no way to make UTF-8 the current
>>>>                 native encoding in R
>>>>                 on the current builds of R on Windows. This is an
>>>>                 old limitation of
>>>>                 Windows, only recently fixed by Microsoft in recent
>>>>                 Windows 10 and with
>>>>                 UCRT Windows runtime (see my blog post [1] for more
>>>>                 - to make R support
>>>>                 this we need a new toolchain to build R).
>>>>
>>>>                 If you set the locale to C encoding, you are
>>>>                 telling R the native
>>>>                 encoding is C/POSIX (essentially ASCII), not UTF-8.
>>>>                 Encoding-sensitive
>>>>                 operations, including conversions, including those
>>>>                 conversions that
>>>>                 happen without user control e.g. for interacting
>>>>                 with Windows, will
>>>>                 produce incorrect results (garbage) or in better
>>>>                 case errors, warnings,
>>>>                 omitted, substituted or transliterated characters.
>>>>
>>>>                 In principle setting the encoding via locale is
>>>>                 dangerous on Windows,
>>>>                 because Windows has two current encodings, not just
>>>>                 one. By setting
>>>>                 locale you set the one used in the C runtime, but
>>>>                 not the other one used
>>>>                 by the system calls. If all code (in R, packages,
>>>>                 external libraries)
>>>>                 was perfect, this would still work as long as all
>>>>                 strings used were
>>>>                 representable in both encodings. For other strings
>>>>                 it won't work, and
>>>>                 then code is not perfect in this regard, it is
>>>>                 usually written assuming
>>>>                 there is one current encoding, which common sense
>>>>                 dictates should be the
>>>>                 case. With the recent UTF-8 support ([1]), one can
>>>>                 switch both of these
>>>>                 to UTF-8.
>>>>
>>>>
>>>>             Well, this is exactly why I want to get rid of the
>>>>             situation. But this messes up the output because
>>>>             everything else expects UTF-8 which is why I'm looking
>>>>             for some kind of solution.
>>>>
>>>>                 > The solution I've now been working on is:
>>>>                 > I took the sourcecode of R 4.0.3 and changed the
>>>>                 backend of "gettext" to
>>>>                 > add an `encoding="something something"` option.
>>>>                 And a bit of extra stuff
>>>>                 > like `bind_textdomain_codeset` in case I need to
>>>>                 tweak the codeset/charset
>>>>                 > that gettext uses.
>>>>                 > I think I've got that working properly now and
>>>>                 once I solve the problem of
>>>>                 > the encoding in a pkg I will open a
>>>>                 bugreport/feature-request and I'll add
>>>>                 > a patch that implements it.
>>>>
>>>>                 A number of similar "shortcuts" have been added to
>>>>                 R in the past, but
>>>>                 they may the code more complex, harder to maintain
>>>>                 and use, and can't
>>>>                 realistically solve all of these problems, anyway.
>>>>                 Strings will
>>>>                 eventually be assumed to be in what is the current
>>>>                 native encoding by
>>>>                 the C library. In R, any external code R uses, or
>>>>                 code R packages use.
>>>>                 Now that Microsoft finally is supporting UTF-8, the
>>>>                 way to get out of
>>>>                 this is switching to UTF-8. This needs only small
>>>>                 changes to R source
>>>>                 code compared to those "shortcuts" (or to using
>>>>                 UTF-16LE). I'd be
>>>>                 against polluting the code with any more "shortcuts".
>>>>
>>>>
>>>>             I think the addition of " bind_textdomain_codeset" is
>>>>             not strictly necessary and can be left out. Because I
>>>>             think setting an environment variable as
>>>>             "OUTPUT_CHARSET=UTF-8" gives the same result for us.
>>>>             The addition of the "encoding" option to the internal
>>>>             "do_gettext" is just a few lines of code and I also
>>>>             undid some duplication between do_gettext and
>>>>             do_ngettext. Which should make it easier to maintain.
>>>>             But all of that is moot if there is no way to keep the
>>>>             literal strings from sources in UTF-8 anyhow.
>>>>
>>>>             Before starting on this I did actually read your
>>>>             blogpost about UTF-8 several times and it seems like
>>>>             the best way forward. Not to mention it would make my
>>>>             life easier and me happier when I can stop worrying
>>>>             about Windows/Dos codepages!
>>>>             Thank you for your work on it indeed!
>>>>
>>>>             But my problem with that is that a number of people
>>>>             still use an older version of windows and your solution
>>>>             won't work there. Which would mean that we either drop
>>>>             support for them or they would have to live with either
>>>>             weirdlooking translations. Or I have to go back to the
>>>>             suboptimal solution of the "C" locale which I really do
>>>>             want to avoid. Because as you said it breaks other
>>>>             stuff in unpredictable ways.
>>>
>>>             The number of people using too old version of Windows
>>>             should be small when this could become ready for
>>>             production. Windows 8.1. is still supported, but there
>>>             is the free upgrade to Windows 10 (also from no longer
>>>             supported Windows 7), so this should not be a problem
>>>             for desktop machines. It will be a problem for servers.
>>>
>>>         Well, I would not expect anyone to use a GUI-heavy
>>>         application meant for researchers on a server anyway so that
>>>         would be fine.
>>>
>>>>
>>>>                 > The problem I'm stuck with now is simply this:
>>>>                 > I have an R pkg here that I want to test the
>>>>                 translations with and the code
>>>>                 > is definitely saved as UTF-8, the package has
>>>>                 "Encoding: UTF-8" in the
>>>>                 > DESCRIPTION and it all loads and works. The
>>>>                 particular problem I have is
>>>>                 > that the R code contains literally: `mathotString
>>>>                 <- "Math?t!"`
>>>>                 > The actual file contains the hexadecimal
>>>>                 representation of ? as proper
>>>>                 > utf-8: "0xC3 0xB4" but R turns it into: "0xf4".
>>>>                 > Seemingly on loading the package, because I
>>>>                 haven't done anything with it
>>>>                 > except put it in my debug c-function to print its
>>>>                 contents as
>>>>                 > hexadecimals...
>>>>                 >
>>>>                 > The only thing I want to achieve here is that
>>>>                 when R loads the package it
>>>>                 > keeps those strings in their original UTF-8
>>>>                 encoding, without converting it
>>>>                 > to "native" or the strange unicode codepoint it
>>>>                 seemingly placed in there
>>>>                 > instead. Because otherwise I cannot get gettext
>>>>                 to work fully in UTF-8 mode.
>>>>                 >
>>>>                 > Is this already possible in R?
>>>>
>>>>                 In principle, working with strings not
>>>>                 representable in the current
>>>>                 encoding is not reliable (and never will be). It
>>>>                 can still work in some
>>>>                 specific cases and uses. Parsing a UTF-8 string
>>>>                 literal from a file,
>>>>                 with correctly declared encoding as documented in
>>>>                 WRE, should work at
>>>>                 least in single-byte encodings. But what happens
>>>>                 after that string is
>>>>                 parsed is another thing. The parsing is based
>>>>                 internally on using these
>>>>                 "shortcuts", that is lying to a part of the parser
>>>>                 about the encoding,
>>>>                 and telling the rest of the parser that it is
>>>>                 really something else (not
>>>>                 native, but UTF-8).
>>>>
>>>>
>>>>             So the reason the string literals are turned into the
>>>>             local encoding is because setting the "Encoding" on a
>>>>             package is essentially a hack?
>>>
>>>             String literals may be turned into local encoding
>>>             because that is how R/packages/external software is
>>>             written - it needs native encoding. Hacks here come when
>>>             such code is given a string not in the local encoding,
>>>             assuming that under some conditions such code will work.
>>>             This includes a part of the parser and a hack to
>>>             implement argument "encoding" of "parse()", which allows
>>>             to parse (non-representable) UTF-8 strings when running
>>>             in a single-byte locale such as latin 1 (see ?parse).
>>>
>>>         So the same `parse` function is used for loading a package?
>>
>>         Parsing for usual packages is done at build time, when they
>>         are serialized ("prepared for lazy loading"). I would have to
>>         look for the details in the code, but either way, if the
>>         input is in UTF-8 but the native encoding is different,
>>         either the input has to be converted to native encoding for
>>         the parser, or that hack when part of the parser is being
>>         lied to about the encoding (either via "parse()" or other
>>         way). If you have a minimal reproducible example, I can help
>>         you find out whether the behavior seen is
>>         expected/documented/bug.
>>
>>>         Because in that case I wonder if the "Encoding" option in
>>>         "DESCRIPTION" is handled the same as `encoding=` in parse.
>>>
>>>         ?parse states:
>>>         > Character strings in the result will have a declared
>>>         encoding if |encoding| is |"latin1"| or |"UTF-8"|, or if
>>>         |text| is supplied with every element of known encoding in a
>>>         Latin-1 or UTF-8 locale.
>>>
>>>         The sentence is a bit hard for me personally to parse but I
>>>         interpret that first part to mean that if "encoding" is
>>>         specified as "UTF-8" all the character string in the result
>>>         will also have that encoding.
>>>         Is that a correct interpretation?
>>>         Because if so I do believe I found a problem and I will try
>>>         to make a minimal reproducable example.
>>
>>         Please look first at this part of "?parse":
>>
>>         "encoding: encoding to be assumed for input strings.? If the
>>         value is ?"latin1"? or ?"UTF-8"? it is used to mark character
>>         strings as known to be in Latin-1 or UTF-8: it is not used to
>>         re-encode the input.? To do the latter, specify the encoding
>>         as part of the connection ?con? or _via_
>>         ?options(encoding=)?: see the example under ?file?. Arguments
>>         ?encoding = "latin1"? and ?encoding = "UTF-8"? are ignored
>>         with a warning when running in a MBCS locale."
>>
>>         Together with the one you cite:
>>
>>         "Character strings in the result will have a declared
>>         encoding if ?encoding? is ?"latin1"? or ?"UTF-8"?, or if
>>         ?text? is supplied with every element of known encoding in a
>>         Latin-1 or UTF-8 locale."
>>
>>         There are two things: which encoding strings are really
>>         encoded in, and which encoding they are declared to be in.
>>         Normally this should always be the same encoding (UTF-8,
>>         latin-1, or the concrete known native encoding), but the
>>         "encoding=" argument allows to play with this. Strings
>>         declared to be in "native" encoding for a while are treated
>>         as (single-byte) unknown encoding and eventually they are
>>         declared to be of the encoding from the "encoding=" argument.
>>         This only applies to strings declared as "native". When
>>         strings are declared as UTF-8 or latin-1, they must be in
>>         that encoding, and believed to be in that, the "encoding="
>>         argument does not affect those.
>>
>>         So, when your inputs are declared as UTF-8, the "encoding="
>>         hack should not apply to them. Also note that ASCII strings
>>         are never declared to be UTF-8 nor latin-1, they are always
>>         as "native" (and ASCII is assumed a subset of all encodings).
>>         But your inputs probably are not declared to be in UTF-8
>>         (note this is "declared" wrt to Encoding() R function, the
>>         encoding flag that character objects in R have), because you
>>         are probably parsing from a file. I'd really need a
>>         reproducible example to be able to explain what you are seeing.
>>
>>         Best
>>         Tomas
>>
>>
>>>>                 The part that is being "lied to" may get confused or
>>>>                 not. It would not when the real native encoding is
>>>>                 say latin1, a common
>>>>                 case in the past for which the hack was created,
>>>>                 but it might when it is
>>>>                 a double-byte encoding that conflicts with the text
>>>>                 being parsed in
>>>>                 dangerous ways. This is also why this hack only
>>>>                 makes sense for string
>>>>                 literals (and comments), and still only to a limit
>>>>                 as the strings may be
>>>>                 misinterpreted later after parsing.
>>>>
>>>>
>>>>             Well our case is entirely limited to string literals
>>>>             that are presented to the user through an all-utf-8
>>>>             interface.
>>>>             So I would assume not of the edge-cases would come into
>>>>             play.
>>>>             Any systempaths and things like that would still be in
>>>>             local encoding.
>>>
>>>>
>>>>
>>>>                 So a really short summary is: you can only reliably
>>>>                 use strings
>>>>                 representable in the current encoding in R, and
>>>>                 that encoding cannot be
>>>>                 UTF-8 on Windows in released versions of R. There
>>>>                 is an experimental
>>>>                 version, see [1], if you could experiment with that
>>>>                 and see whether that
>>>>                 might work for your applications, could try to find
>>>>                 and report bugs
>>>>                 there (e.g. to me directly), that would be useful.
>>>>
>>>>
>>>>             So when I read in certain R documentation that string
>>>>             can have an "UTF-8" encoding in R this is not true?
>>>>             As in, when I read documentation such as
>>>>             https://stat.ethz.ch/R-manual/R-devel/library/base/html/Encoding.html
>>>>             it really seems to indicate to me that UTF-8 is in fact
>>>>             supported in R on windows.
>>>>             My assumption was that R uses `translateChar`
>>>>             internally to make sure it is in the right encoding
>>>>             before interfacing with the OS and other places where
>>>>             this might matter.
>>>
>>>             UTF-8 is supported in R on Windows in many ways, as
>>>             documented. As long as you are using UTF-8 strings
>>>             representable in the current encoding, so that they can
>>>             be converted to native encoding and back without
>>>             problems, you are fine, R will do the conversions as
>>>             needed. The troubles come when such conversion is not
>>>             possible. In the example of the parser, without the
>>>             "encoding=" argument to "parse()", the parser will just
>>>             work on any text you give to it, even when the text is
>>>             in UTF-8: it will work by first converting to native
>>>             encoding and then doing the parsing, no hacks involved.
>>>             When interacting with external software, you'd just tell
>>>             R to provide the strings in the encoding needed by that
>>>             external software, so possibly UTF-8, so possibly
>>>             convert, but all would work fine. The problem are
>>>             characters not representable in the native encoding.
>>>
>>>         Exactly, I want to be able to support chinese etc as well
>>>         while running in a west-european locale.
>>>         This is also what mislead me, because I thought it was
>>>         actually reading it like that but the character is part of
>>>         my local locale so I didn't notice it. Especially as it was
>>>         being printed correctly. I only noticed after printing the
>>>         literal values.
>>>
>>>>                 If you find behavior re encodings in released
>>>>                 versions of R that
>>>>                 contradicts the current documentation, please
>>>>                 report with a minimal
>>>>                 reproducible example, such cases should be fixed
>>>>                 (even though sometimes
>>>>                 the "fix" would be just changing the documentation,
>>>>                 the effort really
>>>>                 should be now for supporting UTF-8 for real).
>>>>                 Specifically with
>>>>                 "mathotString", you might try creating? an example
>>>>                 that does not include
>>>>                 any package (just calls to parse with encoding
>>>>                 options set), only then
>>>>                 gradually adding more of package loading if that
>>>>                 does not reproduce. It
>>>>                 would be important to know the current encoding
>>>>                 (sessionInfo, l10n_info).
>>>>
>>>>
>>>>             Well, the reason I mailed the mailing list was because
>>>>             I couldn't for the life of me find any documentation
>>>>             that told me anything in particular about how literal
>>>>             strings are supposed to be stored in memory. But it
>>>>             just seems logical to me that if R already supports
>>>>             parsing and loading a package encoded with UTF-8 and it
>>>>             supports having UTF-8 strings in memory next to strings
>>>>             in native encoding the most straightforward way of
>>>>             loading this literal strings would be in UTF-8.
>>>
>>>             You mean the memory representation? For that there would
>>>             be R Internals and the sources, essentially there are
>>>             CHARSXP objects which include an encoding tag (UTF-8,
>>>             Latin-1 or native) and the raw bytes. But you would not
>>>             access these objects directly, instead use
>>>             translateChar() if you needed strings them in native
>>>             encoding or translateCharUTF8() if in UTF-8, and this is
>>>             documented in Writing R Extensions.
>>>
>>>         Exactly, because gettext operates in C and the source files
>>>         for that are also in utf-8 the actual memory representation
>>>         of the string in R needs to be identical, otherwise it won't
>>>         work.
>>>
>>>             I think it would be really good if you could provide a
>>>             complete, minimal reproducible example of your problem.
>>>             It may be there is some misunderstanding, especially if
>>>             you are working with characters representable in the
>>>             current encoding, there should be no problem.
>>>
>>>         It depends on if I now understand ?parse correctly in that
>>>         it should have the strings in a package that is parsed with
>>>         the specified encoding in that encoding or not. As I
>>>         wondered above.
>>>
>>>>             I would love to use the new version of R that supports
>>>>             properly interfacing with windows 10.
>>>>             And given that the only other supported version of
>>>>             Windows is 8.1 and barely anyone uses it. So it might
>>>>             be worth dropping support for that.
>>>>             I just hoped I could find a workable solution without
>>>>             such a step.
>>>
>>>             I understand, also it may take a bit of time before this
>>>             would become stable.
>>>
>>>         Of course.
>>>         Hopefully I can still use my current workaround for the time
>>>         being and then switch over to the UTF-8 ready version if it
>>>         becomes production-ready at some point.
>>>
>>>         Cheers,
>>>         Joris
>>>
>>>             Best
>>>             Tomas
>>>
>>>
>>>>             Cheers,
>>>>             Joris
>>>>
>>>>
>>>>                 Best,
>>>>                 Tomas
>>>>
>>>>                 [1]
>>>>                 https://developer.r-project.org/Blog/public/2020/07/30/windows/utf-8-build-of-r-and-cran-packages/index.html
>>>>
>>>>                 >
>>>>                 > Cheers,
>>>>                 > Joris
>>>>
>>>>                 >
>>>>                 >
>>>>                 > On Wed, 16 Dec 2020 at 20:15, David Bosak
>>>>                 <dbosak01 at gmail.com <mailto:dbosak01 at gmail.com>> wrote:
>>>>                 >
>>>>                 >> Joris:
>>>>                 >>
>>>>                 >>
>>>>                 >>
>>>>                 >> I?ve fought with encoding problems on Windows a
>>>>                 lot.? Here are some
>>>>                 >> general suggestions.
>>>>                 >>
>>>>                 >>
>>>>                 >>
>>>>                 >>? ? ?1. Put ?@encoding UTF-8? on any Roxygen
>>>>                 comments.
>>>>                 >>? ? ?2. Put ?encoding = ?UTF-8? on any functions
>>>>                 like writeLines or
>>>>                 >>? ? ?readLines that read/write to a text file.
>>>>                 >>? ? ?3. This post:
>>>>                 >>
>>>>                 https://kevinushey.github.io/blog/2018/02/21/string-encoding-and-r/
>>>>                 >>
>>>>                 >>
>>>>                 >>
>>>>                 >> If you have a more specific problem, please
>>>>                 describe and we can try to
>>>>                 >> help.
>>>>                 >>
>>>>                 >>
>>>>                 >>
>>>>                 >> David
>>>>                 >>
>>>>                 >>
>>>>                 >>
>>>>                 >> Sent from Mail
>>>>                 <https://go.microsoft.com/fwlink/?LinkId=550986> for
>>>>                 >> Windows 10
>>>>                 >>
>>>>                 >>
>>>>                 >>
>>>>                 >> *From: *joris at jorisgoosen.nl
>>>>                 <mailto:joris at jorisgoosen.nl>
>>>>                 >> *Sent: *Wednesday, December 16, 2020 1:52 PM
>>>>                 >> *To: *r-package-devel at r-project.org
>>>>                 <mailto:r-package-devel at r-project.org>
>>>>                 >> *Subject: *[R-pkg-devel] Package Encoding and
>>>>                 Literal Strings
>>>>                 >>
>>>>                 >>
>>>>                 >>
>>>>                 >> Hello All,
>>>>                 >>
>>>>                 >>
>>>>                 >>
>>>>                 >> Some context, I am one of the programmers of a
>>>>                 software pkg (
>>>>                 >>
>>>>                 >> https://jasp-stats.org/) that uses an embedded
>>>>                 instance of R to do
>>>>                 >>
>>>>                 >> statistics. And make that a bit easier for
>>>>                 people who are intimidated by R
>>>>                 >>
>>>>                 >> or like to have something more GUI oriented.
>>>>                 >>
>>>>                 >>
>>>>                 >>
>>>>                 >>
>>>>                 >>
>>>>                 >> We have been working on translating the
>>>>                 interface but ran into several
>>>>                 >>
>>>>                 >> problems related to encoding of strings. We
>>>>                 prefer to use UTF-8 for
>>>>                 >>
>>>>                 >> everything and this works wonderful on unix
>>>>                 systems, as is to be expected.
>>>>                 >>
>>>>                 >>
>>>>                 >>
>>>>                 >> Windows however is a different matter. Currently
>>>>                 I am working on some local
>>>>                 >>
>>>>                 >> changes to "do_gettext" and some related
>>>>                 internal functions of R to be able
>>>>                 >>
>>>>                 >> to get UTF-8 encoded output from there.
>>>>                 >>
>>>>                 >>
>>>>                 >>
>>>>                 >> But I ran into a bit of a problem and I think
>>>>                 this mailinglist is probably
>>>>                 >>
>>>>                 >> the best place to start.
>>>>                 >>
>>>>                 >>
>>>>                 >>
>>>>                 >> It seems that if I have an R package that
>>>>                 specifies "Encoding: UTF-8" in
>>>>                 >>
>>>>                 >> DESCRIPTION the literal strings inside the
>>>>                 package are converted to the
>>>>                 >>
>>>>                 >> local codeset/codepage regardless of what I want.
>>>>                 >>
>>>>                 >>
>>>>                 >>
>>>>                 >> Is it possible to keep the strings in UTF-8
>>>>                 internally in such a pkg
>>>>                 >>
>>>>                 >> somehow?
>>>>                 >>
>>>>                 >>
>>>>                 >>
>>>>                 >> Best regards,
>>>>                 >>
>>>>                 >> Joris Goosen
>>>>                 >>
>>>>                 >> University of Amsterdam
>>>>                 >>
>>>>                 >>
>>>>                 >>
>>>>                 >> [[alternative HTML version deleted]]
>>>>                 >>
>>>>                 >>
>>>>                 >>
>>>>                 >> ______________________________________________
>>>>                 >>
>>>>                 >> R-package-devel at r-project.org
>>>>                 <mailto:R-package-devel at r-project.org> mailing list
>>>>                 >>
>>>>                 >>
>>>>                 https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>                 >>
>>>>                 >>
>>>>                 >>
>>>>                 >? ? ? ?[[alternative HTML version deleted]]
>>>>                 >
>>>>                 > ______________________________________________
>>>>                 > R-package-devel at r-project.org
>>>>                 <mailto:R-package-devel at r-project.org> mailing list
>>>>                 > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>
>>>>
>>>
>>
>


	[[alternative HTML version deleted]]


From t@jendoub|14 @end|ng |rom |mper|@|@@c@uk  Tue Dec 22 05:24:04 2020
From: t@jendoub|14 @end|ng |rom |mper|@|@@c@uk (Jendoubi Bedhiafi, Takoua)
Date: Tue, 22 Dec 2020 04:24:04 +0000
Subject: [R-pkg-devel] 9e5d
In-Reply-To: <C74C6D6C-909D-452D-9F80-A90631344BDF@noaa.gov>
References: <554FEDA2-2FE2-42B9-915D-09CD6AD5D3E2@noaa.gov>
 <23947.20791.857032.86226@rob.eddelbuettel.com>
 <C74C6D6C-909D-452D-9F80-A90631344BDF@noaa.gov>
Message-ID: <2FBE4D66-3284-4CA1-B93F-4BE99A1C7A94@ic.ac.uk>

I am out of office with occasional email access until the new year.

On 25 Sep 2019, at 15:39, Roy Mendelssohn - NOAA Federal via R-package-devel <r-package-devel at r-project.org> wrote:

Thanks all.  I asked because I don't want to unnecessarily overburden the CRAN maintainers.  In this case,  it wasn't a minor bug.

-Roy

On Sep 25, 2019, at 4:36 AM, Dirk Eddelbuettel <edd at debian.org> wrote:


On 24 September 2019 at 11:43, Roy Mendelssohn - NOAA Federal via R-package-devel wrote:
| A few days ago I  had to resubmit because an external URL I was using in my vignette changed and the nightly builds were issuing warnings.  This morning a user reported a bug.  I have the fix and a new version,  but the test machines,  and I suppose it will also be true of CRAN,  are unhappy about the interval since last submit.  Should I just submit the new version anyway with a note in cram-comments that this is a bug fix.

Yes: AFAICT these are recommendations to not overburden CRAN.

And I have hit two distinct types:

- more than six uploads in six months (which happened when an upstream
 package was hyperactive) which lead me to space uploads out a little more
 as "one a month should be plenty" indeed

- less than seven days since the last upload (which lead me to just wait two
 days on a very recent "better bug fix to a bug fix" upload I made, and
 then got me the very automated processing)

You can look in the R sources for what the cutoffs are (which is how I
confirmed it was 7) and act accordingly.  So yes, in sum, explain what you do
to CRAN -- and some human will generally do the Right Thing.

(And big thanks and kudos to CRAN for the increased automation documented in
the short update at the end of the most recent R Journal issue. Very
impressive, and very well done.)

Dirk

--
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org

**********************
"The contents of this message do not reflect any position of the U.S. Government or NOAA."
**********************
Roy Mendelssohn
Supervisory Operations Research Analyst
NOAA/NMFS
Environmental Research Division
Southwest Fisheries Science Center
***Note new street address***
110 McAllister Way
Santa Cruz, CA 95060
Phone: (831)-420-3666
Fax: (831) 420-3980
e-mail: Roy.Mendelssohn at noaa.gov www: https://www.pfeg.noaa.gov/

"Old age and treachery will overcome youth and skill."
"From those who have been given much, much will be expected"
"the arc of the moral universe is long, but it bends toward justice" -MLK Jr.

______________________________________________
R-package-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel

	[[alternative HTML version deleted]]


From t@jendoub|14 @end|ng |rom |mper|@|@@c@uk  Tue Dec 22 05:24:19 2020
From: t@jendoub|14 @end|ng |rom |mper|@|@@c@uk (Jendoubi Bedhiafi, Takoua)
Date: Tue, 22 Dec 2020 04:24:19 +0000
Subject: [R-pkg-devel] 9e5d
In-Reply-To: <554FEDA2-2FE2-42B9-915D-09CD6AD5D3E2@noaa.gov>
References: <554FEDA2-2FE2-42B9-915D-09CD6AD5D3E2@noaa.gov>
Message-ID: <12FC140B-1C02-44CC-86B8-63593A39B57D@ic.ac.uk>

I am out of office with occasional email access until the new year.

On 24 Sep 2019, at 19:43, Roy Mendelssohn - NOAA Federal via R-package-devel <r-package-devel at r-project.org> wrote:

Hi All:

A few days ago I  had to resubmit because an external URL I was using in my vignette changed and the nightly builds were issuing warnings.  This morning a user reported a bug.  I have the fix and a new version,  but the test machines,  and I suppose it will also be true of CRAN,  are unhappy about the interval since last submit.  Should I just submit the new version anyway with a note in cram-comments that this is a bug fix.

Thanks,

-Roy

**********************
"The contents of this message do not reflect any position of the U.S. Government or NOAA."
**********************
Roy Mendelssohn
Supervisory Operations Research Analyst
NOAA/NMFS
Environmental Research Division
Southwest Fisheries Science Center
***Note new street address***
110 McAllister Way
Santa Cruz, CA 95060
Phone: (831)-420-3666
Fax: (831) 420-3980
e-mail: Roy.Mendelssohn at noaa.gov www: https://www.pfeg.noaa.gov/

"Old age and treachery will overcome youth and skill."
"From those who have been given much, much will be expected"
"the arc of the moral universe is long, but it bends toward justice" -MLK Jr.

______________________________________________
R-package-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel

	[[alternative HTML version deleted]]


From t@jendoub|14 @end|ng |rom |mper|@|@@c@uk  Tue Dec 22 05:42:15 2020
From: t@jendoub|14 @end|ng |rom |mper|@|@@c@uk (Jendoubi Bedhiafi, Takoua)
Date: Tue, 22 Dec 2020 04:42:15 +0000
Subject: [R-pkg-devel] 3097
In-Reply-To: <EBE9A772-1437-46EC-8457-B910CB5C409E@noaa.gov>
References: <B2DDC8E6-0373-466D-BADA-EA50DED4448B@noaa.gov>
 <4b01d47c-32c1-28d8-e167-aae35224d630@gmail.com>
 <3757D26A-61EE-4312-8E48-F495E2B354C0@noaa.gov>
 <EBE9A772-1437-46EC-8457-B910CB5C409E@noaa.gov>
Message-ID: <B8674D96-0B13-4F67-A3B2-A7412D4AC953@ic.ac.uk>

I am out of office with occasional email access until the new year.

On 5 Aug 2019, at 18:48, Roy Mendelssohn - NOAA Federal via R-package-devel <r-package-devel at r-project.org> wrote:

Using tools:::.check_package_datasets() produces the error,  but doesn't give out any more information.  I don't know enough about some fo the write() function.  If I write to csv of some sort,  will this information be preserved?

Thanks,

-Roy


On Aug 5, 2019, at 8:57 AM, Roy Mendelssohn - NOAA Federal <roy.mendelssohn at noaa.gov> wrote:

Thanks.  What is surprising me is I can't reproduce the error either directly on my Mac or on rhub::windows and I am waiting for the result of win-builder  (I can't check most rhub::linux  because it fails to correctly build a number of required packages,  something I have reported but still persists - like rgdal,  rerddap, crul,  ncdf4).

-Roy
-
On Aug 5, 2019, at 8:50 AM, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:

On 05/08/2019 10:51 a.m., Roy Mendelssohn - NOAA Federal via R-package-devel wrote:
Hi All:
The recent nighty CRAN checks on one of my packages reports:
Check: data for non-ASCII characters
Result: NOTE
   Note: found 1 marked UTF-8 string
When  originally submitted this was not the case.  All my data files are .RData files,  and even more so most are binary data.  If they were text files I could readily scan for UTF,  is there a way once I read the data into R to do a similar scan from within R.  I just ran the most recent  (Github) version of devtools::check() and it doesn't report an error.  Or is there a way I can get more specific information from the CRAN nightly build or Rhub or the like?

That message comes when the tools:::.check_package_datasets function detects a string containing a UTF-8 encoding.  You can run it directly and you might get a more informative message.  If not, I suppose you could fix() it and add some extra debugging messages....

It's argument is "pkgDir"; I think that is the directory holding the files after untarring the .tar.gz file.

Duncan Murdoch

**********************
"The contents of this message do not reflect any position of the U.S. Government or NOAA."
**********************
Roy Mendelssohn
Supervisory Operations Research Analyst
NOAA/NMFS
Environmental Research Division
Southwest Fisheries Science Center
***Note new street address***
110 McAllister Way
Santa Cruz, CA 95060
Phone: (831)-420-3666
Fax: (831) 420-3980
e-mail: Roy.Mendelssohn at noaa.gov www: http://www.pfeg.noaa.gov/

"Old age and treachery will overcome youth and skill."
"From those who have been given much, much will be expected"
"the arc of the moral universe is long, but it bends toward justice" -MLK Jr.


**********************
"The contents of this message do not reflect any position of the U.S. Government or NOAA."
**********************
Roy Mendelssohn
Supervisory Operations Research Analyst
NOAA/NMFS
Environmental Research Division
Southwest Fisheries Science Center
***Note new street address***
110 McAllister Way
Santa Cruz, CA 95060
Phone: (831)-420-3666
Fax: (831) 420-3980
e-mail: Roy.Mendelssohn at noaa.gov www: http://www.pfeg.noaa.gov/

"Old age and treachery will overcome youth and skill."
"From those who have been given much, much will be expected"
"the arc of the moral universe is long, but it bends toward justice" -MLK Jr.

______________________________________________
R-package-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel

	[[alternative HTML version deleted]]


From t@jendoub|14 @end|ng |rom |mper|@|@@c@uk  Tue Dec 22 05:42:16 2020
From: t@jendoub|14 @end|ng |rom |mper|@|@@c@uk (Jendoubi Bedhiafi, Takoua)
Date: Tue, 22 Dec 2020 04:42:16 +0000
Subject: [R-pkg-devel] 3097
In-Reply-To: <3757D26A-61EE-4312-8E48-F495E2B354C0@noaa.gov>
References: <B2DDC8E6-0373-466D-BADA-EA50DED4448B@noaa.gov>
 <4b01d47c-32c1-28d8-e167-aae35224d630@gmail.com>
 <3757D26A-61EE-4312-8E48-F495E2B354C0@noaa.gov>
Message-ID: <5F6B4549-4527-4994-B452-D44DE2A7C8CB@ic.ac.uk>

I am out of office with occasional email access until the new year.

On 5 Aug 2019, at 16:57, Roy Mendelssohn - NOAA Federal via R-package-devel <r-package-devel at r-project.org> wrote:

Thanks.  What is surprising me is I can't reproduce the error either directly on my Mac or on rhub::windows and I am waiting for the result of win-builder  (I can't check most rhub::linux  because it fails to correctly build a number of required packages,  something I have reported but still persists - like rgdal,  rerddap, crul,  ncdf4).

-Roy
-
On Aug 5, 2019, at 8:50 AM, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:

On 05/08/2019 10:51 a.m., Roy Mendelssohn - NOAA Federal via R-package-devel wrote:
Hi All:
The recent nighty CRAN checks on one of my packages reports:
Check: data for non-ASCII characters
Result: NOTE
    Note: found 1 marked UTF-8 string
When  originally submitted this was not the case.  All my data files are .RData files,  and even more so most are binary data.  If they were text files I could readily scan for UTF,  is there a way once I read the data into R to do a similar scan from within R.  I just ran the most recent  (Github) version of devtools::check() and it doesn't report an error.  Or is there a way I can get more specific information from the CRAN nightly build or Rhub or the like?

That message comes when the tools:::.check_package_datasets function detects a string containing a UTF-8 encoding.  You can run it directly and you might get a more informative message.  If not, I suppose you could fix() it and add some extra debugging messages....

It's argument is "pkgDir"; I think that is the directory holding the files after untarring the .tar.gz file.

Duncan Murdoch

**********************
"The contents of this message do not reflect any position of the U.S. Government or NOAA."
**********************
Roy Mendelssohn
Supervisory Operations Research Analyst
NOAA/NMFS
Environmental Research Division
Southwest Fisheries Science Center
***Note new street address***
110 McAllister Way
Santa Cruz, CA 95060
Phone: (831)-420-3666
Fax: (831) 420-3980
e-mail: Roy.Mendelssohn at noaa.gov www: http://www.pfeg.noaa.gov/

"Old age and treachery will overcome youth and skill."
"From those who have been given much, much will be expected"
"the arc of the moral universe is long, but it bends toward justice" -MLK Jr.

______________________________________________
R-package-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel

	[[alternative HTML version deleted]]


From t@jendoub|14 @end|ng |rom |mper|@|@@c@uk  Tue Dec 22 05:42:15 2020
From: t@jendoub|14 @end|ng |rom |mper|@|@@c@uk (Jendoubi Bedhiafi, Takoua)
Date: Tue, 22 Dec 2020 04:42:15 +0000
Subject: [R-pkg-devel] 3097
In-Reply-To: <149F75C2-DD42-44B3-BF65-AD2A1E557EF8@noaa.gov>
References: <B2DDC8E6-0373-466D-BADA-EA50DED4448B@noaa.gov>
 <4b01d47c-32c1-28d8-e167-aae35224d630@gmail.com>
 <3757D26A-61EE-4312-8E48-F495E2B354C0@noaa.gov>
 <EBE9A772-1437-46EC-8457-B910CB5C409E@noaa.gov>
 <149F75C2-DD42-44B3-BF65-AD2A1E557EF8@noaa.gov>
Message-ID: <5BC9BB4A-CB72-487B-8CBE-E2B1D0FF5858@ic.ac.uk>

I am out of office with occasional email access until the new year.

On 5 Aug 2019, at 19:13, Roy Mendelssohn - NOAA Federal via R-package-devel <r-package-devel at r-project.org> wrote:

Okay I found it.  I looked at the code for  tools:::.check_package_datasets(),  took out the core part,  ran every string  I had in every dataset,  it came out.  A degree symbol.

Thanks for telling me about the function.  Still surprised that the test machines don't flag it.  Or is this a new test on CRAN?

-Roy


On Aug 5, 2019, at 10:48 AM, Roy Mendelssohn - NOAA Federal <roy.mendelssohn at noaa.gov> wrote:

Using tools:::.check_package_datasets() produces the error,  but doesn't give out any more information.  I don't know enough about some fo the write() function.  If I write to csv of some sort,  will this information be preserved?

Thanks,

-Roy


On Aug 5, 2019, at 8:57 AM, Roy Mendelssohn - NOAA Federal <roy.mendelssohn at noaa.gov> wrote:

Thanks.  What is surprising me is I can't reproduce the error either directly on my Mac or on rhub::windows and I am waiting for the result of win-builder  (I can't check most rhub::linux  because it fails to correctly build a number of required packages,  something I have reported but still persists - like rgdal,  rerddap, crul,  ncdf4).

-Roy
-
On Aug 5, 2019, at 8:50 AM, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:

On 05/08/2019 10:51 a.m., Roy Mendelssohn - NOAA Federal via R-package-devel wrote:
Hi All:
The recent nighty CRAN checks on one of my packages reports:
Check: data for non-ASCII characters
Result: NOTE
  Note: found 1 marked UTF-8 string
When  originally submitted this was not the case.  All my data files are .RData files,  and even more so most are binary data.  If they were text files I could readily scan for UTF,  is there a way once I read the data into R to do a similar scan from within R.  I just ran the most recent  (Github) version of devtools::check() and it doesn't report an error.  Or is there a way I can get more specific information from the CRAN nightly build or Rhub or the like?

That message comes when the tools:::.check_package_datasets function detects a string containing a UTF-8 encoding.  You can run it directly and you might get a more informative message.  If not, I suppose you could fix() it and add some extra debugging messages....

It's argument is "pkgDir"; I think that is the directory holding the files after untarring the .tar.gz file.

Duncan Murdoch

**********************
"The contents of this message do not reflect any position of the U.S. Government or NOAA."
**********************
Roy Mendelssohn
Supervisory Operations Research Analyst
NOAA/NMFS
Environmental Research Division
Southwest Fisheries Science Center
***Note new street address***
110 McAllister Way
Santa Cruz, CA 95060
Phone: (831)-420-3666
Fax: (831) 420-3980
e-mail: Roy.Mendelssohn at noaa.gov www: http://www.pfeg.noaa.gov/

"Old age and treachery will overcome youth and skill."
"From those who have been given much, much will be expected"
"the arc of the moral universe is long, but it bends toward justice" -MLK Jr.


**********************
"The contents of this message do not reflect any position of the U.S. Government or NOAA."
**********************
Roy Mendelssohn
Supervisory Operations Research Analyst
NOAA/NMFS
Environmental Research Division
Southwest Fisheries Science Center
***Note new street address***
110 McAllister Way
Santa Cruz, CA 95060
Phone: (831)-420-3666
Fax: (831) 420-3980
e-mail: Roy.Mendelssohn at noaa.gov www: http://www.pfeg.noaa.gov/

"Old age and treachery will overcome youth and skill."
"From those who have been given much, much will be expected"
"the arc of the moral universe is long, but it bends toward justice" -MLK Jr.


**********************
"The contents of this message do not reflect any position of the U.S. Government or NOAA."
**********************
Roy Mendelssohn
Supervisory Operations Research Analyst
NOAA/NMFS
Environmental Research Division
Southwest Fisheries Science Center
***Note new street address***
110 McAllister Way
Santa Cruz, CA 95060
Phone: (831)-420-3666
Fax: (831) 420-3980
e-mail: Roy.Mendelssohn at noaa.gov www: http://www.pfeg.noaa.gov/

"Old age and treachery will overcome youth and skill."
"From those who have been given much, much will be expected"
"the arc of the moral universe is long, but it bends toward justice" -MLK Jr.

______________________________________________
R-package-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel

	[[alternative HTML version deleted]]


From t@jendoub|14 @end|ng |rom |mper|@|@@c@uk  Tue Dec 22 05:42:17 2020
From: t@jendoub|14 @end|ng |rom |mper|@|@@c@uk (Jendoubi Bedhiafi, Takoua)
Date: Tue, 22 Dec 2020 04:42:17 +0000
Subject: [R-pkg-devel] 5dff
In-Reply-To: <B2DDC8E6-0373-466D-BADA-EA50DED4448B@noaa.gov>
References: <B2DDC8E6-0373-466D-BADA-EA50DED4448B@noaa.gov>
Message-ID: <C2889AD3-E0A8-4F89-91D6-EBA143D15292@ic.ac.uk>

I am out of office with occasional email access until the new year.

On 5 Aug 2019, at 15:51, Roy Mendelssohn - NOAA Federal via R-package-devel <r-package-devel at r-project.org> wrote:

Hi All:

The recent nighty CRAN checks on one of my packages reports:

Check: data for non-ASCII characters
Result: NOTE
    Note: found 1 marked UTF-8 string

When  originally submitted this was not the case.  All my data files are .RData files,  and even more so most are binary data.  If they were text files I could readily scan for UTF,  is there a way once I read the data into R to do a similar scan from within R.  I just ran the most recent  (Github) version of devtools::check() and it doesn't report an error.  Or is there a way I can get more specific information from the CRAN nightly build or Rhub or the like?

Thanks,

-ROy

**********************
"The contents of this message do not reflect any position of the U.S. Government or NOAA."
**********************
Roy Mendelssohn
Supervisory Operations Research Analyst
NOAA/NMFS
Environmental Research Division
Southwest Fisheries Science Center
***Note new street address***
110 McAllister Way
Santa Cruz, CA 95060
Phone: (831)-420-3666
Fax: (831) 420-3980
e-mail: Roy.Mendelssohn at noaa.gov www: http://www.pfeg.noaa.gov/

"Old age and treachery will overcome youth and skill."
"From those who have been given much, much will be expected"
"the arc of the moral universe is long, but it bends toward justice" -MLK Jr.

______________________________________________
R-package-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel

	[[alternative HTML version deleted]]


From t@jendoub|14 @end|ng |rom |mper|@|@@c@uk  Tue Dec 22 05:45:39 2020
From: t@jendoub|14 @end|ng |rom |mper|@|@@c@uk (Jendoubi Bedhiafi, Takoua)
Date: Tue, 22 Dec 2020 04:45:39 +0000
Subject: [R-pkg-devel] f319
In-Reply-To: <9C847A71-8074-4F69-8F90-BB40B09FE26F@noaa.gov>
References: <016B78F5-EFED-4DC9-BED2-031D55C8656C@noaa.gov>
 <d7af87bb-569d-bf71-42bc-3afec1693ab5@gmail.com>
 <8FC316AA-0229-48A2-AC54-7CAAE39331F8@noaa.gov>
 <fe17c627-61a5-c2d5-3f17-fd81b707688f@gmail.com>
 <9C847A71-8074-4F69-8F90-BB40B09FE26F@noaa.gov>
Message-ID: <757C78EE-394C-469A-B5F6-7D75AF5BCD5B@ic.ac.uk>

I am out of office with occasional email access until the new year.

On 25 Jul 2019, at 21:49, Roy Mendelssohn - NOAA Federal via R-package-devel <r-package-devel at r-project.org> wrote:

Thanks,  actually have similar code for some other packages that must have been causing similar problems  (that part was from the original author,  I am now the maintainer).  Now I understand why he had something similar in the code.  There is a comment about Namespaces not being handled properly in those packages.

Will try that.  I actually have rgdal and rgeos in Imports,  they were getting flagged in the CRAN nightly builds.  If I have them in that one statement,  that should take care of both issues I believe.

But it would be nice to figure out why this is happening,  and only on Windows.  Sort of frustrating when you follow the guidelines but get failures,  but what also what is good about things like CRAN,  for whatever reason this will insure I work across platforms.

-Roy


On Jul 25, 2019, at 12:56 PM, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:

On 25/07/2019 3:47 p.m., Roy Mendelssohn - NOAA Federal wrote:
Okay I added rgeos but now it can't find rgdal.  as in:
Error: processing vignette 'using_plotdap.Rmd' failed with diagnostics:
package 'rgdal' is not available
--- failed re-building 'using_plotdap.Rmd'

A question I asked before is if there is anyway to check that 'rgdal' and 'rgeos' are properly installed on the winbuider servers, as well as 'sf' and 'sp'?  'devtools::check()' on my mac produces no errors,  same with  'rhub' using Fedora,  but I get the same errors on 'rhub' using Windows.    So it appears to be a problem with Windows,  and again I am not calling these packages directly so I should not need to Import them.

You're right, you shouldn't need to import them if you don't call them directly.  However, if some package that you do need requires them, then your build or checks will fail without them.

It's probably getting tedious, but you could work around this as well, by figuring out what part of using_plotdap.Rmd needs rgdal, and wrapping that code in something like

if (requireNamespace("rgdal")) {
# code that needs it
}

I think this will mean you need to add rgdal to the Suggests list for your package to avoid other warnings.

Duncan Murdoch

Thanks,
-Roy
On Jul 25, 2019, at 12:38 PM, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:

On 25/07/2019 3:21 p.m., Roy Mendelssohn - NOAA Federal via R-package-devel wrote:
I have been testing a package for resubmission with bug fixes.  On the present CRAN builds I get:
Result: NOTE
   Namespaces in Imports field not imported from:
    ?mapdata? ?maptools? ?plot3D? ?rgdal? ?rgeos?
    All declared Imports should be used.
However,  if I remove rgeos from the imports I get from win builder:
Error in st_as_sfc.SpatialPolygons(sp::geometry(x), ...) :
    package rgeos required for finding out which hole belongs to which exterior ring
Note that I am not calling 'rgeos',  either 'sf' or 'sp' is,  but does not appear to be properly importing all the need namespaces.
Best way  to proceed?  Include rgeos in Import and get the Note,  or ????

A simple workaround would be to add a function that calls something from rgeos just to satisfy the check, e.g.

# Just to satisfy the checks...
dummy <- function() rgeos::getScale()

I don't think there are warnings if dummy is never used or exported, but if there are, I think that's a pretty harmless call to make.

Duncan Murdoch
**********************
"The contents of this message do not reflect any position of the U.S. Government or NOAA."
**********************
Roy Mendelssohn
Supervisory Operations Research Analyst
NOAA/NMFS
Environmental Research Division
Southwest Fisheries Science Center
***Note new street address***
110 McAllister Way
Santa Cruz, CA 95060
Phone: (831)-420-3666
Fax: (831) 420-3980
e-mail: Roy.Mendelssohn at noaa.gov www: http://www.pfeg.noaa.gov/
"Old age and treachery will overcome youth and skill."
"From those who have been given much, much will be expected"
"the arc of the moral universe is long, but it bends toward justice" -MLK Jr.


**********************
"The contents of this message do not reflect any position of the U.S. Government or NOAA."
**********************
Roy Mendelssohn
Supervisory Operations Research Analyst
NOAA/NMFS
Environmental Research Division
Southwest Fisheries Science Center
***Note new street address***
110 McAllister Way
Santa Cruz, CA 95060
Phone: (831)-420-3666
Fax: (831) 420-3980
e-mail: Roy.Mendelssohn at noaa.gov www: http://www.pfeg.noaa.gov/

"Old age and treachery will overcome youth and skill."
"From those who have been given much, much will be expected"
"the arc of the moral universe is long, but it bends toward justice" -MLK Jr.

______________________________________________
R-package-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel

	[[alternative HTML version deleted]]


From t@jendoub|14 @end|ng |rom |mper|@|@@c@uk  Tue Dec 22 05:45:39 2020
From: t@jendoub|14 @end|ng |rom |mper|@|@@c@uk (Jendoubi Bedhiafi, Takoua)
Date: Tue, 22 Dec 2020 04:45:39 +0000
Subject: [R-pkg-devel] f319
In-Reply-To: <8FC316AA-0229-48A2-AC54-7CAAE39331F8@noaa.gov>
References: <016B78F5-EFED-4DC9-BED2-031D55C8656C@noaa.gov>
 <d7af87bb-569d-bf71-42bc-3afec1693ab5@gmail.com>
 <8FC316AA-0229-48A2-AC54-7CAAE39331F8@noaa.gov>
Message-ID: <AD04CC4E-0E80-4ED4-AEA8-77DA43BA8EC1@ic.ac.uk>

I am out of office with occasional email access until the new year.

On 25 Jul 2019, at 20:47, Roy Mendelssohn - NOAA Federal via R-package-devel <r-package-devel at r-project.org> wrote:

Okay I added rgeos but now it can't find rgdal.  as in:

Error: processing vignette 'using_plotdap.Rmd' failed with diagnostics:
package 'rgdal' is not available
--- failed re-building 'using_plotdap.Rmd'


A question I asked before is if there is anyway to check that 'rgdal' and 'rgeos' are properly installed on the winbuider servers, as well as 'sf' and 'sp'?  'devtools::check()' on my mac produces no errors,  same with  'rhub' using Fedora,  but I get the same errors on 'rhub' using Windows.    So it appears to be a problem with Windows,  and again I am not calling these packages directly so I should not need to Import them.

Thanks,

-Roy


On Jul 25, 2019, at 12:38 PM, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:

On 25/07/2019 3:21 p.m., Roy Mendelssohn - NOAA Federal via R-package-devel wrote:
I have been testing a package for resubmission with bug fixes.  On the present CRAN builds I get:
Result: NOTE
   Namespaces in Imports field not imported from:
    ?mapdata? ?maptools? ?plot3D? ?rgdal? ?rgeos?
    All declared Imports should be used.
However,  if I remove rgeos from the imports I get from win builder:
Error in st_as_sfc.SpatialPolygons(sp::geometry(x), ...) :
    package rgeos required for finding out which hole belongs to which exterior ring
Note that I am not calling 'rgeos',  either 'sf' or 'sp' is,  but does not appear to be properly importing all the need namespaces.
Best way  to proceed?  Include rgeos in Import and get the Note,  or ????

A simple workaround would be to add a function that calls something from rgeos just to satisfy the check, e.g.

# Just to satisfy the checks...
dummy <- function() rgeos::getScale()

I don't think there are warnings if dummy is never used or exported, but if there are, I think that's a pretty harmless call to make.

Duncan Murdoch

**********************
"The contents of this message do not reflect any position of the U.S. Government or NOAA."
**********************
Roy Mendelssohn
Supervisory Operations Research Analyst
NOAA/NMFS
Environmental Research Division
Southwest Fisheries Science Center
***Note new street address***
110 McAllister Way
Santa Cruz, CA 95060
Phone: (831)-420-3666
Fax: (831) 420-3980
e-mail: Roy.Mendelssohn at noaa.gov www: http://www.pfeg.noaa.gov/

"Old age and treachery will overcome youth and skill."
"From those who have been given much, much will be expected"
"the arc of the moral universe is long, but it bends toward justice" -MLK Jr.

______________________________________________
R-package-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel

	[[alternative HTML version deleted]]


From t@jendoub|14 @end|ng |rom |mper|@|@@c@uk  Tue Dec 22 05:45:40 2020
From: t@jendoub|14 @end|ng |rom |mper|@|@@c@uk (Jendoubi Bedhiafi, Takoua)
Date: Tue, 22 Dec 2020 04:45:40 +0000
Subject: [R-pkg-devel] f319
In-Reply-To: <016B78F5-EFED-4DC9-BED2-031D55C8656C@noaa.gov>
References: <016B78F5-EFED-4DC9-BED2-031D55C8656C@noaa.gov>
Message-ID: <B3254F49-7458-4900-BDD4-04C8D2AB14B4@ic.ac.uk>

I am out of office with occasional email access until the new year.

On 25 Jul 2019, at 20:21, Roy Mendelssohn - NOAA Federal via R-package-devel <r-package-devel at r-project.org> wrote:

I have been testing a package for resubmission with bug fixes.  On the present CRAN builds I get:

Result: NOTE
   Namespaces in Imports field not imported from:
    ?mapdata? ?maptools? ?plot3D? ?rgdal? ?rgeos?
    All declared Imports should be used.

However,  if I remove rgeos from the imports I get from win builder:

Error in st_as_sfc.SpatialPolygons(sp::geometry(x), ...) :
    package rgeos required for finding out which hole belongs to which exterior ring

Note that I am not calling 'rgeos',  either 'sf' or 'sp' is,  but does not appear to be properly importing all the need namespaces.

Best way  to proceed?  Include rgeos in Import and get the Note,  or ????

Thanks,

-Roy


**********************
"The contents of this message do not reflect any position of the U.S. Government or NOAA."
**********************
Roy Mendelssohn
Supervisory Operations Research Analyst
NOAA/NMFS
Environmental Research Division
Southwest Fisheries Science Center
***Note new street address***
110 McAllister Way
Santa Cruz, CA 95060
Phone: (831)-420-3666
Fax: (831) 420-3980
e-mail: Roy.Mendelssohn at noaa.gov www: http://www.pfeg.noaa.gov/

"Old age and treachery will overcome youth and skill."
"From those who have been given much, much will be expected"
"the arc of the moral universe is long, but it bends toward justice" -MLK Jr.

______________________________________________
R-package-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel

	[[alternative HTML version deleted]]


From t@jendoub|14 @end|ng |rom |mper|@|@@c@uk  Tue Dec 22 05:46:20 2020
From: t@jendoub|14 @end|ng |rom |mper|@|@@c@uk (Jendoubi Bedhiafi, Takoua)
Date: Tue, 22 Dec 2020 04:46:20 +0000
Subject: [R-pkg-devel] c18c
In-Reply-To: <F2065F18-7452-42EF-B5F3-04A72E4D39A3@noaa.gov>
References: <DA2BDABB-8789-4746-87BE-99BBB207A024@noaa.gov>
 <01cb2544-6217-9ab4-b882-5d37742a93ef@gmail.com>
 <F2065F18-7452-42EF-B5F3-04A72E4D39A3@noaa.gov>
Message-ID: <28584BC0-8560-4E4B-B139-CFE04C566256@ic.ac.uk>

I am out of office with occasional email access until the new year.

On 24 Jul 2019, at 02:44, Roy Mendelssohn - NOAA Federal via R-package-devel <r-package-devel at r-project.org> wrote:

Thanks,  I was looking at the raw files,  not the .Rd files.  There are \keyword arguments in those file,  will have to search to see why they are getting generated.

-Roy


On Jul 23, 2019, at 6:02 PM, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:

On 23/07/2019 8:26 p.m., Roy Mendelssohn - NOAA Federal via R-package-devel wrote:
Hi All:
I am in the process of testing in order to submit a new version of a package to CRAN,  and I am getting clean results on everything but winbuilder_develop.  There I am getting 1 Note:
Found the following \keyword or \concept entries with Rd markup:
 File 'checkBounds.Rd':
   \keyword{\code{checkBounds}}
 File 'getfileCoords.Rd':
   \keyword{\code{getFileCoords}}
 File 'make180.Rd':
   \keyword{\code{make180}}
 File 'make360.Rd':
   \keyword{\code{make360}}
Found the following \keyword or \concept entries
which likely give several index terms:
 File 'checkBounds.Rd':
   \keyword{latitude,}
   \keyword{longitude,}
 File 'make180.Rd':
   \keyword{(-180,180)}
   \keyword{(0,360)}
 File 'make360.Rd':
   \keyword{(-180,180)}
   \keyword{(0,360)}

I am not clear what this is calling for me to do, particularly since I doubt (-180, 180) or (0, 360) are keywords.
Guidance appreciated.

Can't you just look at those files (i.e. .../man/checkBounds.Rd, etc.) to see whether or not those declarations are contained in them?  If not, then there's clearly something weird happening at winbuilder_develop.

Duncan Murdoch

**********************
"The contents of this message do not reflect any position of the U.S. Government or NOAA."
**********************
Roy Mendelssohn
Supervisory Operations Research Analyst
NOAA/NMFS
Environmental Research Division
Southwest Fisheries Science Center
***Note new street address***
110 McAllister Way
Santa Cruz, CA 95060
Phone: (831)-420-3666
Fax: (831) 420-3980
e-mail: Roy.Mendelssohn at noaa.gov www: http://www.pfeg.noaa.gov/

"Old age and treachery will overcome youth and skill."
"From those who have been given much, much will be expected"
"the arc of the moral universe is long, but it bends toward justice" -MLK Jr.

______________________________________________
R-package-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel

	[[alternative HTML version deleted]]


From t@jendoub|14 @end|ng |rom |mper|@|@@c@uk  Tue Dec 22 05:46:21 2020
From: t@jendoub|14 @end|ng |rom |mper|@|@@c@uk (Jendoubi Bedhiafi, Takoua)
Date: Tue, 22 Dec 2020 04:46:21 +0000
Subject: [R-pkg-devel] c18c
In-Reply-To: <DA2BDABB-8789-4746-87BE-99BBB207A024@noaa.gov>
References: <DA2BDABB-8789-4746-87BE-99BBB207A024@noaa.gov>
Message-ID: <9ADA3B7E-976E-4A37-9D8B-BD5BA85289A7@ic.ac.uk>

I am out of office with occasional email access until the new year.

On 24 Jul 2019, at 01:26, Roy Mendelssohn - NOAA Federal via R-package-devel <r-package-devel at r-project.org> wrote:

Hi All:

I am in the process of testing in order to submit a new version of a package to CRAN,  and I am getting clean results on everything but winbuilder_develop.  There I am getting 1 Note:

Found the following \keyword or \concept entries with Rd markup:
 File 'checkBounds.Rd':
   \keyword{\code{checkBounds}}
 File 'getfileCoords.Rd':
   \keyword{\code{getFileCoords}}
 File 'make180.Rd':
   \keyword{\code{make180}}
 File 'make360.Rd':
   \keyword{\code{make360}}
Found the following \keyword or \concept entries
which likely give several index terms:
 File 'checkBounds.Rd':
   \keyword{latitude,}
   \keyword{longitude,}
 File 'make180.Rd':
   \keyword{(-180,180)}
   \keyword{(0,360)}
 File 'make360.Rd':
   \keyword{(-180,180)}
   \keyword{(0,360)}


I am not clear what this is calling for me to do, particularly since I doubt (-180, 180) or (0, 360) are keywords.

Guidance appreciated.

-Roy


**********************
"The contents of this message do not reflect any position of the U.S. Government or NOAA."
**********************
Roy Mendelssohn
Supervisory Operations Research Analyst
NOAA/NMFS
Environmental Research Division
Southwest Fisheries Science Center
***Note new street address***
110 McAllister Way
Santa Cruz, CA 95060
Phone: (831)-420-3666
Fax: (831) 420-3980
e-mail: Roy.Mendelssohn at noaa.gov www: http://www.pfeg.noaa.gov/

"Old age and treachery will overcome youth and skill."
"From those who have been given much, much will be expected"
"the arc of the moral universe is long, but it bends toward justice" -MLK Jr.

______________________________________________
R-package-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel

	[[alternative HTML version deleted]]


From joris m@iii@g oii jorisgoose@@@i  Tue Dec 22 11:31:47 2020
From: joris m@iii@g oii jorisgoose@@@i (joris m@iii@g oii jorisgoose@@@i)
Date: Tue, 22 Dec 2020 11:31:47 +0100
Subject: [R-pkg-devel] Package Encoding and Literal Strings
In-Reply-To: <ac8ddd28-ab80-59e6-e474-9021e9a149ae@gmail.com>
References: <CANfj7vJTwLmkfO0sq4c1ws+Gn+Lji7LhEqvOcWJGfuVGCk+L5w@mail.gmail.com>
 <E626F78F-2B8F-4AE8-9261-7C82B42738D2@hxcore.ol>
 <CANfj7v+QiZGMyWEK3g-HP+Rox0Wmck91UwjMmpn0Cm7yCkNL7w@mail.gmail.com>
 <cd8b321e-759e-e9a1-5b57-ced4e2720a26@gmail.com>
 <CANfj7v+dnyiX0E5RtJ8kherbXNddh=MeWua4qMg13rjQNULQcw@mail.gmail.com>
 <dee044d0-fdf4-875d-24d6-63b9aa7f6d4f@gmail.com>
 <CANfj7vLL89Cp762TUVzLYBnQXP-yi5b6KvCjc+z1sZ4OfmW=Jw@mail.gmail.com>
 <d18dc361-0b42-e6b2-1efd-b1526ac7e2d1@gmail.com>
 <CANfj7vLrbsoN+SUbNpKrpDhJoQFj3EmJ00O4yEE9P=no4q1uRw@mail.gmail.com>
 <610387fb-f330-071d-6969-096fedc67045@gmail.com>
 <CANfj7v+0q5civaDC1a83Tj9M7ToMVZU9mM_pT9ys1jAtAjuGpQ@mail.gmail.com>
 <ac8ddd28-ab80-59e6-e474-9021e9a149ae@gmail.com>
Message-ID: <CANfj7vKXxUgqXipM2Zfy5d6B0ttXzapZnuWX7BbheOZFEcE1ug@mail.gmail.com>

Hello Tomas,

On Mon, 21 Dec 2020 at 21:21, Tomas Kalibera <tomas.kalibera at gmail.com>
wrote:

> Hi Joris,
>
> On 12/21/20 7:33 PM, joris at jorisgoosen.nl wrote:
>
> Hello Tomas,
>
> Thank you for the feedback and your summary of how things now work and
> what goes wrong for the tao- and mathot-string confirms all of my
> suspicions. And it also describes my exact problem fairly well.
>
> It seems it does come down to R not keeping the UTF-8 encoding of the
> literal strings on Windows with a "typical codepage" when loading a
> package.
> This despite reading it from file in that particular encoding and also
> specifying the same in DESCRIPTION.
> While `eval(parse(..., encoding="UTF-8"))` *does* keep the encoding on the
> literal strings. Which means there is some discrepancy between the two.
> That means the way a package is loaded it uses a different path then when
> using `eval(parse(..., encoding="UTF-8"))`?
>
> Yes, it must be a different path. The DESCRIPTION field defines what
> encoding is the input in, so that R can read it. It does not tell R how it
> should represent the strings internally. The behavior is ok, well except
> for non-representable characters.
>
> You mention:
> > Strings that cannot be represented in the native encoding like tao will
> get the escapes, and so cannot be converted back to UTF-8. This is not
> great, but I  see it was the case already in 3.6 (so not a recent
> regression) and I don't think it would be worth the time trying to fix that
> - as discussed earlier, only switching to UTF-8 would fix all of these
> translations, not just one.
>
> Not a recent regression means it used to work the same for both and
> keeping the UTF-8 encoding?
> I've tried R 3 and it already doesnt work there, I also tried 2.8 but
> couldnt get my testpkg (simplified to use "charToRaw" instead of a C-call)
> to install there.
> However, having this work would already be quite useful as our custom GUI
> on top of R is fully UTF-8 anyhow.
>
> By "not a recent regression" I meant it wasn't broken recently. It
> probably never worked the way you (and me and probably everyone else) would
> like it to work, that is it probably always translated to native encoding,
> because that was the only option except rewriting all of our code,
> packages, external libraries to use UTF-16LE (as discussed before).
>

Too bad, but that was what I was afraid of in the first place.

> And I would certainly be up for figuring out how to fix the regression so
> that we can use this until your work on the UTF-8 version with UCRT is
> released.
> On the other hand, maybe this would not be the wisest investment of my
> time.
>
> I bet your applications do more than just load a package and then access
> string literals in the code. And as soon as you do anything with those
> strings, R may translate them to native encoding (well unless we document
> this does not happen, typically some code around connections, file paths,
> etc). So, providing a shortcut for this case I am afraid wouldn't help you
> much. If the problem was just parsing, you could also use "\u" escapes as
> workaround in the literals. Remember, the parse(,encoding="UTF-8") only
> could work in single-byte encodings.
>
Ah yeah, the original problem with that was that the `xgettext`
parsingscript doesn't know how to handle those escapes. But that means we
will just have to fix that then.

> I've tried using the installer and toolchain you linked to in
> https://developer.r-project.org/Blog/public/2020/07/30/windows/utf-8-build-of-r-and-cran-packages/index.html
> and use that to compile our software.
> This normally works with the Rtools toolchain, but it seems that "make" is
> missing from your toolchain. When I build (our project with Riniside in it)
> using your toolchain in the beginning of PATH and using mingw32-make from
> rtools40 I run into problems of a missing "cc1plus".
>
> Sorry, building native code is still involved with that demo. You would
> have to set PATHs and well maybe alter the installation or build from
> source, as described in
>
> https://svn.r-project.org/R-dev-web/trunk/WindowsBuilds/winutf8/winutf8.html
>
> What might be actually easier, you could try a current development
> version, I will send you a link.
>

Cheers,
Joris

I got the link and will have a go at that and reply there with any remarks
or questions.

> If I read https://mxe.cc/ it seems it is meant for cross-compiling, not
> locally on Windows?
> Maybe that is what is going wrong.
> But despite trying for quite a bit I couldn't get our software to compile
> in such a way it could link with R.
> Which means I couldn't test if it solves our problem...
>
> You can compile native code locally on Windows, the toolchain includes a
> native compiler and I build R packages natively as well. Cross-compilation
> is used to build the compiler toolchain and external libraries for
> packages.Cheers
> Tomas
>

> Cheers,
> Joris
>
>
> On Fri, 18 Dec 2020 at 18:05, Tomas Kalibera <tomas.kalibera at gmail.com>
> wrote:
>
>> Hi Joris,
>>
>> thanks for the example. You can actually simply have Test.R assign the
>> two variables and then run
>>
>> Encoding(utf8StringsPkg1::mathotString)
>> charToRaw(utf8StringsPkg1::mathotString)
>> Encoding(utf8StringsPkg1::tao)
>> charToRaw(utf8StringsPkg1::tao)
>>
>> I tried on Linux, Windows/UTF-8 (the experimental version) and
>> Windows/latin-1 (released version). In all cases, both strings are
>> converted to native encoding. The mathotString is converted to latin-1
>> fine, because it is representable there. The tao string when running in
>> latin-1 locale gets the escapes <xx>:
>>
>> "<e9><99><b6><e5><be><b7><e5><ba><86>"
>>
>> Btw, the parse(,encoding="UTF-8") hack works, when you parse the modified
>> Test.R file (with the two assignments), and eval the output, you will get
>> those strings in UTF-8. But when you don't eval and print the parse tree in
>> Rgui, it will not be printed correctly (again a limitation of these hacks,
>> they could only do so much).
>>
>> When accessing strings from C, you should always be prepared for any
>> encoding in a CHARSXP, so when you want UTF-8, use "translateCharUTF8()"
>> instead of "CHAR()". That will work fine on representable strings like
>> mathotString, and that is conceptually the correct way to access them.
>>
>> Strings that cannot be represented in the native encoding like tao will
>> get the escapes, and so cannot be converted back to UTF-8. This is not
>> great, but I  see it was the case already in 3.6 (so not a recent
>> regression) and I don't think it would be worth the time trying to fix that
>> - as discussed earlier, only switching to UTF-8 would fix all of these
>> translations, not just one. Btw, the example works fine on the
>> experimentation UTF-8 build on Windows.
>>
>> I am sorry there is not a simple fix for non-representable characters.
>>
>> Best
>> Tomas
>>
>>
>>
>> On 12/18/20 1:53 PM, joris at jorisgoosen.nl wrote:
>>
>> Hello Tomas,
>>
>> I have made a minimal example that demonstrates my problem:
>> https://github.com/JorisGoosen/utf8StringsPkg
>>
>> This package is encoded in UTF-8 as is Test.R. There is a little Rcpp
>> function in there I wrote that displays the bytes straight from R's CHAR to
>> be sure no conversion is happening.
>> I would expect that the mathotString had "C3 B4" for "?" but instead it
>> gets "F4". As you can see when you run
>> `utf8StringsPkg::testutf8_in_locale()`.
>>
>> Cheers,
>> Joris
>>
>>
>>
>> On Fri, 18 Dec 2020 at 11:48, Tomas Kalibera <tomas.kalibera at gmail.com>
>> wrote:
>>
>>> On 12/17/20 6:43 PM, joris at jorisgoosen.nl wrote:
>>>
>>>
>>>
>>> On Thu, 17 Dec 2020 at 18:22, Tomas Kalibera <tomas.kalibera at gmail.com>
>>> wrote:
>>>
>>>> On 12/17/20 5:17 PM, joris at jorisgoosen.nl wrote:
>>>>
>>>>
>>>>
>>>> On Thu, 17 Dec 2020 at 10:46, Tomas Kalibera <tomas.kalibera at gmail.com>
>>>> wrote:
>>>>
>>>>> On 12/16/20 11:07 PM, joris at jorisgoosen.nl wrote:
>>>>> > David,
>>>>> >
>>>>> > Thanks for the response!
>>>>> >
>>>>> > So the problem is a bit worse then just setting `encoding="UTF-8"` on
>>>>> > functions like readLines.
>>>>> > I'll describe our setup a bit:
>>>>> > So we run R embedded in a separate executable and through a whole
>>>>> bunch of
>>>>> > C(++) magic get that to the main executable that runs the actual
>>>>> interface.
>>>>> > All the code that isn't R basically uses UTF-8. This works good and
>>>>> we've
>>>>> > made sure that all of our source code is encoded properly and I've
>>>>> verified
>>>>> > that for this particular problem at least my source file is
>>>>> definitely
>>>>> > encoded in UTF-8 (Ive checked a hexdump).
>>>>> >
>>>>> > The simplest solution, that we initially took, to get R+Windows to
>>>>> > cooperate with everything is to simply set the locale to "C" before
>>>>> > starting R. That way R simply assumes UTF-8 is native and everything
>>>>> worked
>>>>> > splendidly. Until of course a file needs to be opened in R that
>>>>> contains
>>>>> > some non-ASCII characters. I noticed the problem because a korean
>>>>> user had
>>>>> > hangul in his username and that broke everything. This because R was
>>>>> trying
>>>>> > to convert to a different locale than Windows was using.
>>>>>
>>>>> Setting locale to "C" does not make R assume UTF-8 is the native
>>>>> encoding, there is no way to make UTF-8 the current native encoding in
>>>>> R
>>>>> on the current builds of R on Windows. This is an old limitation of
>>>>> Windows, only recently fixed by Microsoft in recent Windows 10 and
>>>>> with
>>>>> UCRT Windows runtime (see my blog post [1] for more - to make R
>>>>> support
>>>>> this we need a new toolchain to build R).
>>>>>
>>>>> If you set the locale to C encoding, you are telling R the native
>>>>> encoding is C/POSIX (essentially ASCII), not UTF-8. Encoding-sensitive
>>>>> operations, including conversions, including those conversions that
>>>>> happen without user control e.g. for interacting with Windows, will
>>>>> produce incorrect results (garbage) or in better case errors,
>>>>> warnings,
>>>>> omitted, substituted or transliterated characters.
>>>>>
>>>>> In principle setting the encoding via locale is dangerous on Windows,
>>>>> because Windows has two current encodings, not just one. By setting
>>>>> locale you set the one used in the C runtime, but not the other one
>>>>> used
>>>>> by the system calls. If all code (in R, packages, external libraries)
>>>>> was perfect, this would still work as long as all strings used were
>>>>> representable in both encodings. For other strings it won't work, and
>>>>> then code is not perfect in this regard, it is usually written
>>>>> assuming
>>>>> there is one current encoding, which common sense dictates should be
>>>>> the
>>>>> case. With the recent UTF-8 support ([1]), one can switch both of
>>>>> these
>>>>> to UTF-8.
>>>>>
>>>>
>>>> Well, this is exactly why I want to get rid of the situation. But this
>>>> messes up the output because everything else expects UTF-8 which is why I'm
>>>> looking for some kind of solution.
>>>>
>>>>
>>>>
>>>>> > The solution I've now been working on is:
>>>>> > I took the sourcecode of R 4.0.3 and changed the backend of
>>>>> "gettext" to
>>>>> > add an `encoding="something something"` option. And a bit of extra
>>>>> stuff
>>>>> > like `bind_textdomain_codeset` in case I need to tweak the
>>>>> codeset/charset
>>>>> > that gettext uses.
>>>>> > I think I've got that working properly now and once I solve the
>>>>> problem of
>>>>> > the encoding in a pkg I will open a bugreport/feature-request and
>>>>> I'll add
>>>>> > a patch that implements it.
>>>>>
>>>>> A number of similar "shortcuts" have been added to R in the past, but
>>>>> they may the code more complex, harder to maintain and use, and can't
>>>>> realistically solve all of these problems, anyway. Strings will
>>>>> eventually be assumed to be in what is the current native encoding by
>>>>> the C library. In R, any external code R uses, or code R packages use.
>>>>> Now that Microsoft finally is supporting UTF-8, the way to get out of
>>>>> this is switching to UTF-8. This needs only small changes to R source
>>>>> code compared to those "shortcuts" (or to using UTF-16LE). I'd be
>>>>> against polluting the code with any more "shortcuts".
>>>>>
>>>>
>>>> I think the addition of " bind_textdomain_codeset" is not strictly
>>>> necessary and can be left out. Because I think setting an environment
>>>> variable as "OUTPUT_CHARSET=UTF-8" gives the same result for us.
>>>> The addition of the "encoding" option to the internal "do_gettext" is
>>>> just a few lines of code and I also undid some duplication between
>>>> do_gettext and do_ngettext. Which should make it easier to maintain. But
>>>> all of that is moot if there is no way to keep the literal strings from
>>>> sources in UTF-8 anyhow.
>>>>
>>>> Before starting on this I did actually read your blogpost about UTF-8
>>>> several times and it seems like the best way forward. Not to mention it
>>>> would make my life easier and me happier when I can stop worrying about
>>>> Windows/Dos codepages!
>>>> Thank you for your work on it indeed!
>>>>
>>>> But my problem with that is that a number of people still use an older
>>>> version of windows and your solution won't work there. Which would mean
>>>> that we either drop support for them or they would have to live with either
>>>> weirdlooking translations. Or I have to go back to the suboptimal solution
>>>> of the "C" locale which I really do want to avoid. Because as you said it
>>>> breaks other stuff in unpredictable ways.
>>>>
>>>> The number of people using too old version of Windows should be small
>>>> when this could become ready for production. Windows 8.1. is still
>>>> supported, but there is the free upgrade to Windows 10 (also from no longer
>>>> supported Windows 7), so this should not be a problem for desktop machines.
>>>> It will be a problem for servers.
>>>>
>>> Well, I would not expect anyone to use a GUI-heavy application meant for
>>> researchers on a server anyway so that would be fine.
>>>
>>>>
>>>>
>>>>> > The problem I'm stuck with now is simply this:
>>>>> > I have an R pkg here that I want to test the translations with and
>>>>> the code
>>>>> > is definitely saved as UTF-8, the package has "Encoding: UTF-8" in
>>>>> the
>>>>> > DESCRIPTION and it all loads and works. The particular problem I
>>>>> have is
>>>>> > that the R code contains literally: `mathotString <- "Math?t!"`
>>>>> > The actual file contains the hexadecimal representation of ? as
>>>>> proper
>>>>> > utf-8: "0xC3 0xB4" but R turns it into: "0xf4".
>>>>> > Seemingly on loading the package, because I haven't done anything
>>>>> with it
>>>>> > except put it in my debug c-function to print its contents as
>>>>> > hexadecimals...
>>>>> >
>>>>> > The only thing I want to achieve here is that when R loads the
>>>>> package it
>>>>> > keeps those strings in their original UTF-8 encoding, without
>>>>> converting it
>>>>> > to "native" or the strange unicode codepoint it seemingly placed in
>>>>> there
>>>>> > instead. Because otherwise I cannot get gettext to work fully in
>>>>> UTF-8 mode.
>>>>> >
>>>>> > Is this already possible in R?
>>>>>
>>>>> In principle, working with strings not representable in the current
>>>>> encoding is not reliable (and never will be). It can still work in
>>>>> some
>>>>> specific cases and uses. Parsing a UTF-8 string literal from a file,
>>>>> with correctly declared encoding as documented in WRE, should work at
>>>>> least in single-byte encodings. But what happens after that string is
>>>>> parsed is another thing. The parsing is based internally on using
>>>>> these
>>>>> "shortcuts", that is lying to a part of the parser about the encoding,
>>>>> and telling the rest of the parser that it is really something else
>>>>> (not
>>>>> native, but UTF-8).
>>>>
>>>>
>>>> So the reason the string literals are turned into the local encoding is
>>>> because setting the "Encoding" on a package is essentially a hack?
>>>>
>>>> String literals may be turned into local encoding because that is how
>>>> R/packages/external software is written - it needs native encoding. Hacks
>>>> here come when such code is given a string not in the local encoding,
>>>> assuming that under some conditions such code will work. This includes a
>>>> part of the parser and a hack to implement argument "encoding" of
>>>> "parse()", which allows to parse (non-representable) UTF-8 strings when
>>>> running in a single-byte locale such as latin 1 (see ?parse).
>>>>
>>> So the same `parse` function is used for loading a package?
>>>
>>> Parsing for usual packages is done at build time, when they are
>>> serialized ("prepared for lazy loading"). I would have to look for the
>>> details in the code, but either way, if the input is in UTF-8 but the
>>> native encoding is different, either the input has to be converted to
>>> native encoding for the parser, or that hack when part of the parser is
>>> being lied to about the encoding (either via "parse()" or other way). If
>>> you have a minimal reproducible example, I can help you find out whether
>>> the behavior seen is expected/documented/bug.
>>>
>>> Because in that case I wonder if the "Encoding" option in "DESCRIPTION"
>>> is handled the same as `encoding=` in parse.
>>>
>>> ?parse states:
>>> > Character strings in the result will have a declared encoding if
>>> encoding is "latin1" or "UTF-8", or if text is supplied with every
>>> element of known encoding in a Latin-1 or UTF-8 locale.
>>>
>>> The sentence is a bit hard for me personally to parse but I interpret
>>> that first part to mean that if "encoding" is specified as "UTF-8" all the
>>> character string in the result will also have that encoding.
>>> Is that a correct interpretation?
>>> Because if so I do believe I found a problem and I will try to make a
>>> minimal reproducable example.
>>>
>>> Please look first at this part of "?parse":
>>>
>>> "encoding: encoding to be assumed for input strings.  If the value is
>>> ?"latin1"? or ?"UTF-8"? it is used to mark character strings as known to be
>>> in Latin-1 or UTF-8: it is not used to re-encode the input.  To do the
>>> latter, specify the encoding as part of the connection ?con? or _via_
>>> ?options(encoding=)?: see the example under ?file?. Arguments ?encoding =
>>> "latin1"? and ?encoding = "UTF-8"? are ignored with a warning when running
>>> in a MBCS locale."
>>>
>>> Together with the one you cite:
>>>
>>> "Character strings in the result will have a declared encoding if
>>> ?encoding? is ?"latin1"? or ?"UTF-8"?, or if ?text? is supplied with every
>>> element of known encoding in a Latin-1 or UTF-8 locale."
>>>
>>> There are two things: which encoding strings are really encoded in, and
>>> which encoding they are declared to be in. Normally this should always be
>>> the same encoding (UTF-8, latin-1, or the concrete known native encoding),
>>> but the "encoding=" argument allows to play with this. Strings declared to
>>> be in "native" encoding for a while are treated as (single-byte) unknown
>>> encoding and eventually they are declared to be of the encoding from the
>>> "encoding=" argument. This only applies to strings declared as "native".
>>> When strings are declared as UTF-8 or latin-1, they must be in that
>>> encoding, and believed to be in that, the "encoding=" argument does not
>>> affect those.
>>>
>>> So, when your inputs are declared as UTF-8, the "encoding=" hack should
>>> not apply to them. Also note that ASCII strings are never declared to be
>>> UTF-8 nor latin-1, they are always as "native" (and ASCII is assumed a
>>> subset of all encodings). But your inputs probably are not declared to be
>>> in UTF-8 (note this is "declared" wrt to Encoding() R function, the
>>> encoding flag that character objects in R have), because you are probably
>>> parsing from a file. I'd really need a reproducible example to be able to
>>> explain what you are seeing.
>>>
>>> Best
>>> Tomas
>>>
>>>
>>>
>>>>
>>>>
>>>>> The part that is being "lied to" may get confused or
>>>>> not. It would not when the real native encoding is say latin1, a
>>>>> common
>>>>> case in the past for which the hack was created, but it might when it
>>>>> is
>>>>> a double-byte encoding that conflicts with the text being parsed in
>>>>> dangerous ways. This is also why this hack only makes sense for string
>>>>> literals (and comments), and still only to a limit as the strings may
>>>>> be
>>>>> misinterpreted later after parsing.
>>>>>
>>>>
>>>> Well our case is entirely limited to string literals that are presented
>>>> to the user through an all-utf-8 interface.
>>>> So I would assume not of the edge-cases would come into play.
>>>> Any systempaths and things like that would still be in local encoding.
>>>>
>>>>
>>>>
>>>>
>>>>> So a really short summary is: you can only reliably use strings
>>>>> representable in the current encoding in R, and that encoding cannot
>>>>> be
>>>>> UTF-8 on Windows in released versions of R. There is an experimental
>>>>> version, see [1], if you could experiment with that and see whether
>>>>> that
>>>>> might work for your applications, could try to find and report bugs
>>>>> there (e.g. to me directly), that would be useful.
>>>>>
>>>>
>>>> So when I read in certain R documentation that string can have an
>>>> "UTF-8" encoding in R this is not true?
>>>> As in, when I read documentation such as
>>>> https://stat.ethz.ch/R-manual/R-devel/library/base/html/Encoding.html
>>>> it really seems to indicate to me that UTF-8 is in fact supported in R on
>>>> windows.
>>>> My assumption was that R uses `translateChar` internally to make sure
>>>> it is in the right encoding before interfacing with the OS and other places
>>>> where this might matter.
>>>>
>>>> UTF-8 is supported in R on Windows in many ways, as documented. As long
>>>> as you are using UTF-8 strings representable in the current encoding, so
>>>> that they can be converted to native encoding and back without problems,
>>>> you are fine, R will do the conversions as needed. The troubles come when
>>>> such conversion is not possible. In the example of the parser, without the
>>>> "encoding=" argument to "parse()", the parser will just work on any text
>>>> you give to it, even when the text is in UTF-8: it will work by first
>>>> converting to native encoding and then doing the parsing, no hacks
>>>> involved. When interacting with external software, you'd just tell R to
>>>> provide the strings in the encoding needed by that external software, so
>>>> possibly UTF-8, so possibly convert, but all would work fine. The problem
>>>> are characters not representable in the native encoding.
>>>>
>>> Exactly, I want to be able to support chinese etc as well while running
>>> in a west-european locale.
>>> This is also what mislead me, because I thought it was actually reading
>>> it like that but the character is part of my local locale so I didn't
>>> notice it. Especially as it was being printed correctly. I only noticed
>>> after printing the literal values.
>>>
>>>
>>>>
>>>>
>>>>> If you find behavior re encodings in released versions of R that
>>>>> contradicts the current documentation, please report with a minimal
>>>>> reproducible example, such cases should be fixed (even though
>>>>> sometimes
>>>>> the "fix" would be just changing the documentation, the effort really
>>>>> should be now for supporting UTF-8 for real). Specifically with
>>>>> "mathotString", you might try creating  an example that does not
>>>>> include
>>>>> any package (just calls to parse with encoding options set), only then
>>>>> gradually adding more of package loading if that does not reproduce.
>>>>> It
>>>>> would be important to know the current encoding (sessionInfo,
>>>>> l10n_info).
>>>>>
>>>>
>>>> Well, the reason I mailed the mailing list was because I couldn't for
>>>> the life of me find any documentation that told me anything in particular
>>>> about how literal strings are supposed to be stored in memory. But it just
>>>> seems logical to me that if R already supports parsing and loading a
>>>> package encoded with UTF-8 and it supports having UTF-8 strings in memory
>>>> next to strings in native encoding the most straightforward way of loading
>>>> this literal strings would be in UTF-8.
>>>>
>>>> You mean the memory representation? For that there would be R Internals
>>>> and the sources, essentially there are CHARSXP objects which include an
>>>> encoding tag (UTF-8, Latin-1 or native) and the raw bytes. But you would
>>>> not access these objects directly, instead use translateChar() if you
>>>> needed strings them in native encoding or translateCharUTF8() if in UTF-8,
>>>> and this is documented in Writing R Extensions.
>>>>
>>> Exactly, because gettext operates in C and the source files for that are
>>> also in utf-8 the actual memory representation of the string in R needs to
>>> be identical, otherwise it won't work.
>>>
>>>> I think it would be really good if you could provide a complete,
>>>> minimal reproducible example of your problem. It may be there is some
>>>> misunderstanding, especially if you are working with characters
>>>> representable in the current encoding, there should be no problem.
>>>>
>>> It depends on if I now understand ?parse correctly in that it should
>>> have the strings in a package that is parsed with the specified encoding in
>>> that encoding or not. As I wondered above.
>>>
>>>> I would love to use the new version of R that supports properly
>>>> interfacing with windows 10.
>>>> And given that the only other supported version of Windows is 8.1 and
>>>> barely anyone uses it. So it might be worth dropping support for that.
>>>> I just hoped I could find a workable solution without such a step.
>>>>
>>>> I understand, also it may take a bit of time before this would become
>>>> stable.
>>>>
>>> Of course.
>>> Hopefully I can still use my current workaround for the time being and
>>> then switch over to the UTF-8 ready version if it becomes production-ready
>>> at some point.
>>>
>>> Cheers,
>>> Joris
>>>
>>> Best
>>>> Tomas
>>>>
>>>>
>>>> Cheers,
>>>> Joris
>>>>
>>>>
>>>>>
>>>>> Best,
>>>>> Tomas
>>>>>
>>>>> [1]
>>>>>
>>>>> https://developer.r-project.org/Blog/public/2020/07/30/windows/utf-8-build-of-r-and-cran-packages/index.html
>>>>>
>>>>> >
>>>>> > Cheers,
>>>>> > Joris
>>>>>
>>>>> >
>>>>> >
>>>>> > On Wed, 16 Dec 2020 at 20:15, David Bosak <dbosak01 at gmail.com>
>>>>> wrote:
>>>>> >
>>>>> >> Joris:
>>>>> >>
>>>>> >>
>>>>> >>
>>>>> >> I?ve fought with encoding problems on Windows a lot.  Here are some
>>>>> >> general suggestions.
>>>>> >>
>>>>> >>
>>>>> >>
>>>>> >>     1. Put ?@encoding UTF-8? on any Roxygen comments.
>>>>> >>     2. Put ?encoding = ?UTF-8? on any functions like writeLines or
>>>>> >>     readLines that read/write to a text file.
>>>>> >>     3. This post:
>>>>> >>
>>>>> https://kevinushey.github.io/blog/2018/02/21/string-encoding-and-r/
>>>>> >>
>>>>> >>
>>>>> >>
>>>>> >> If you have a more specific problem, please describe and we can try
>>>>> to
>>>>> >> help.
>>>>> >>
>>>>> >>
>>>>> >>
>>>>> >> David
>>>>> >>
>>>>> >>
>>>>> >>
>>>>> >> Sent from Mail <https://go.microsoft.com/fwlink/?LinkId=550986> for
>>>>> >> Windows 10
>>>>> >>
>>>>> >>
>>>>> >>
>>>>> >> *From: *joris at jorisgoosen.nl
>>>>> >> *Sent: *Wednesday, December 16, 2020 1:52 PM
>>>>> >> *To: *r-package-devel at r-project.org
>>>>> >> *Subject: *[R-pkg-devel] Package Encoding and Literal Strings
>>>>> >>
>>>>> >>
>>>>> >>
>>>>> >> Hello All,
>>>>> >>
>>>>> >>
>>>>> >>
>>>>> >> Some context, I am one of the programmers of a software pkg (
>>>>> >>
>>>>> >> https://jasp-stats.org/) that uses an embedded instance of R to do
>>>>> >>
>>>>> >> statistics. And make that a bit easier for people who are
>>>>> intimidated by R
>>>>> >>
>>>>> >> or like to have something more GUI oriented.
>>>>> >>
>>>>> >>
>>>>> >>
>>>>> >>
>>>>> >>
>>>>> >> We have been working on translating the interface but ran into
>>>>> several
>>>>> >>
>>>>> >> problems related to encoding of strings. We prefer to use UTF-8 for
>>>>> >>
>>>>> >> everything and this works wonderful on unix systems, as is to be
>>>>> expected.
>>>>> >>
>>>>> >>
>>>>> >>
>>>>> >> Windows however is a different matter. Currently I am working on
>>>>> some local
>>>>> >>
>>>>> >> changes to "do_gettext" and some related internal functions of R to
>>>>> be able
>>>>> >>
>>>>> >> to get UTF-8 encoded output from there.
>>>>> >>
>>>>> >>
>>>>> >>
>>>>> >> But I ran into a bit of a problem and I think this mailinglist is
>>>>> probably
>>>>> >>
>>>>> >> the best place to start.
>>>>> >>
>>>>> >>
>>>>> >>
>>>>> >> It seems that if I have an R package that specifies "Encoding:
>>>>> UTF-8" in
>>>>> >>
>>>>> >> DESCRIPTION the literal strings inside the package are converted to
>>>>> the
>>>>> >>
>>>>> >> local codeset/codepage regardless of what I want.
>>>>> >>
>>>>> >>
>>>>> >>
>>>>> >> Is it possible to keep the strings in UTF-8 internally in such a pkg
>>>>> >>
>>>>> >> somehow?
>>>>> >>
>>>>> >>
>>>>> >>
>>>>> >> Best regards,
>>>>> >>
>>>>> >> Joris Goosen
>>>>> >>
>>>>> >> University of Amsterdam
>>>>> >>
>>>>> >>
>>>>> >>
>>>>> >>                  [[alternative HTML version deleted]]
>>>>> >>
>>>>> >>
>>>>> >>
>>>>> >> ______________________________________________
>>>>> >>
>>>>> >> R-package-devel at r-project.org mailing list
>>>>> >>
>>>>> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>> >>
>>>>> >>
>>>>> >>
>>>>> >       [[alternative HTML version deleted]]
>>>>> >
>>>>> > ______________________________________________
>>>>> > R-package-devel at r-project.org mailing list
>>>>> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>>
>>>>>
>>>>>
>>>>
>>>
>>
>

	[[alternative HTML version deleted]]


From Seb@@t|en@B|hore| @end|ng |rom cogn|gencorp@com  Wed Dec 23 02:09:06 2020
From: Seb@@t|en@B|hore| @end|ng |rom cogn|gencorp@com (Sebastien Bihorel)
Date: Wed, 23 Dec 2020 01:09:06 +0000
Subject: [R-pkg-devel] Question about package dependency
Message-ID: <MN2PR19MB41104444FB71ED41E1285EA492DF0@MN2PR19MB4110.namprd19.prod.outlook.com>

Hi

I am working on modifying a package originally developed for use within my company, with the intent to distribute it to users external to our company.
The package currently depends on ROracle to extract data from an Oracle database. The modifications I am implementing would allow the package to operate under 2 modes of data extraction: from this database for internal users or from locally stored data files for external users. Beyond the data extraction step, the package would provide functionality to manipulate the data which is independent of their origin.

I was wondering if and how I could set up my package code and DESCRIPTION file so that external users don't have to install ROracle to install and use my package (since they would operate only in the 2nd mode of data extraction described above).

Thank in advance for your suggestions.


	[[alternative HTML version deleted]]


From n|u|tz @end|ng |rom gm@||@com  Wed Dec 23 02:34:03 2020
From: n|u|tz @end|ng |rom gm@||@com (Neal Fultz)
Date: Tue, 22 Dec 2020 17:34:03 -0800
Subject: [R-pkg-devel] Question about package dependency
In-Reply-To: <MN2PR19MB41104444FB71ED41E1285EA492DF0@MN2PR19MB4110.namprd19.prod.outlook.com>
References: <MN2PR19MB41104444FB71ED41E1285EA492DF0@MN2PR19MB4110.namprd19.prod.outlook.com>
Message-ID: <CAL9B2vdLp4CpxEsXYcgPWN721_u-oUX-G17SCohHyPPkGEmCdg@mail.gmail.com>

Unless there is something Oracle-specific for your database code, I'd
recommend using the DBI interface instead - "enterprise" users can
provide an Oracle object to your functions, and other people could use
their own particular databases.

DBI itself could be a Suggests dependency if it isn't strictly required.


On Tue, Dec 22, 2020 at 5:09 PM Sebastien Bihorel
<Sebastien.Bihorel at cognigencorp.com> wrote:
>
> Hi
>
> I am working on modifying a package originally developed for use within my company, with the intent to distribute it to users external to our company.
> The package currently depends on ROracle to extract data from an Oracle database. The modifications I am implementing would allow the package to operate under 2 modes of data extraction: from this database for internal users or from locally stored data files for external users. Beyond the data extraction step, the package would provide functionality to manipulate the data which is independent of their origin.
>
> I was wondering if and how I could set up my package code and DESCRIPTION file so that external users don't have to install ROracle to install and use my package (since they would operate only in the 2nd mode of data extraction described above).
>
> Thank in advance for your suggestions.
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From Seb@@t|en@B|hore| @end|ng |rom cogn|gencorp@com  Wed Dec 23 02:42:10 2020
From: Seb@@t|en@B|hore| @end|ng |rom cogn|gencorp@com (Sebastien Bihorel)
Date: Wed, 23 Dec 2020 01:42:10 +0000
Subject: [R-pkg-devel] Question about package dependency
In-Reply-To: <F778BA93-5705-4327-9537-334B98E7FA40@hxcore.ol>
References: <MN2PR19MB41104444FB71ED41E1285EA492DF0@MN2PR19MB4110.namprd19.prod.outlook.com>,
 <F778BA93-5705-4327-9537-334B98E7FA40@hxcore.ol>
Message-ID: <MN2PR19MB411056818AD8DBEB3DEEC01792DE0@MN2PR19MB4110.namprd19.prod.outlook.com>

Thanks David,

I will look into your suggestion more.

Sebastien

________________________________
From: David Bosak <dbosak01 at gmail.com>
Sent: Tuesday, December 22, 2020 20:27
To: Sebastien Bihorel <Sebastien.Bihorel at cognigencorp.com>; r-package-devel at r-project.org <r-package-devel at r-project.org>
Subject: RE: [R-pkg-devel] Question about package dependency


Hi Sebastian:



What you describe sounds like it could be handled by the ?suggests? section of the Description file.   Then you can conditionally require it for your different user groups, perhaps based on a configuration setting.  See if this helps:  https://r-pkgs.org/description.html



David





Sent from Mail<https://go.microsoft.com/fwlink/?LinkId=550986> for Windows 10



From: Sebastien Bihorel<mailto:Sebastien.Bihorel at cognigencorp.com>
Sent: Tuesday, December 22, 2020 8:09 PM
To: r-package-devel at r-project.org<mailto:r-package-devel at r-project.org>
Subject: [R-pkg-devel] Question about package dependency



Hi



I am working on modifying a package originally developed for use within my company, with the intent to distribute it to users external to our company.

The package currently depends on ROracle to extract data from an Oracle database. The modifications I am implementing would allow the package to operate under 2 modes of data extraction: from this database for internal users or from locally stored data files for external users. Beyond the data extraction step, the package would provide functionality to manipulate the data which is independent of their origin.



I was wondering if and how I could set up my package code and DESCRIPTION file so that external users don't have to install ROracle to install and use my package (since they would operate only in the 2nd mode of data extraction described above).



Thank in advance for your suggestions.





                [[alternative HTML version deleted]]



______________________________________________

R-package-devel at r-project.org mailing list

https://stat.ethz.ch/mailman/listinfo/r-package-devel



	[[alternative HTML version deleted]]


From Seb@@t|en@B|hore| @end|ng |rom cogn|gencorp@com  Wed Dec 23 02:43:45 2020
From: Seb@@t|en@B|hore| @end|ng |rom cogn|gencorp@com (Sebastien Bihorel)
Date: Wed, 23 Dec 2020 01:43:45 +0000
Subject: [R-pkg-devel] Question about package dependency
In-Reply-To: <CAL9B2vdLp4CpxEsXYcgPWN721_u-oUX-G17SCohHyPPkGEmCdg@mail.gmail.com>
References: <MN2PR19MB41104444FB71ED41E1285EA492DF0@MN2PR19MB4110.namprd19.prod.outlook.com>,
 <CAL9B2vdLp4CpxEsXYcgPWN721_u-oUX-G17SCohHyPPkGEmCdg@mail.gmail.com>
Message-ID: <MN2PR19MB411006A139BBDBF9D61F16AB92DE0@MN2PR19MB4110.namprd19.prod.outlook.com>

Hi Neal,

The database is beyond specific in our case and for internal use only. External users should not be able to interact with it.

I will look into the Suggests approach.

Thanks

________________________________
From: Neal Fultz <nfultz at gmail.com>
Sent: Tuesday, December 22, 2020 20:34
To: Sebastien Bihorel <Sebastien.Bihorel at cognigencorp.com>
Cc: r-package-devel at r-project.org <r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] Question about package dependency

Unless there is something Oracle-specific for your database code, I'd
recommend using the DBI interface instead - "enterprise" users can
provide an Oracle object to your functions, and other people could use
their own particular databases.

DBI itself could be a Suggests dependency if it isn't strictly required.


On Tue, Dec 22, 2020 at 5:09 PM Sebastien Bihorel
<Sebastien.Bihorel at cognigencorp.com> wrote:
>
> Hi
>
> I am working on modifying a package originally developed for use within my company, with the intent to distribute it to users external to our company.
> The package currently depends on ROracle to extract data from an Oracle database. The modifications I am implementing would allow the package to operate under 2 modes of data extraction: from this database for internal users or from locally stored data files for external users. Beyond the data extraction step, the package would provide functionality to manipulate the data which is independent of their origin.
>
> I was wondering if and how I could set up my package code and DESCRIPTION file so that external users don't have to install ROracle to install and use my package (since they would operate only in the 2nd mode of data extraction described above).
>
> Thank in advance for your suggestions.
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

	[[alternative HTML version deleted]]


From bbo|ker @end|ng |rom gm@||@com  Thu Dec 24 01:46:25 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Wed, 23 Dec 2020 19:46:25 -0500
Subject: [R-pkg-devel] GitHub actions incantation for package living in a
 subdirectory?
Message-ID: <6a1609a5-6936-76d3-ce2b-65273f6c3dd1@gmail.com>

   Hi folks,

   Attempting to transition a package (glmmTMB/glmmTMB on GitHub) from 
Travis-CI to GIthub Actions.

   Setting this up with usethis::use_github_actions() seems fairly 
straightforward, ... but ... this project has the R package living, not 
in the root directory of the repository, but in the 'glmmTMB' 
subdirectory.  In principle, "all" I have to do is add 
"working-directory: ./glmmTMB" in the right place in the 
.github/workflows/R-CMD-check.yaml file, but I don't seem to have 
succeeded so far. The results have either been very rapid failure due to 
syntax errors (https://github.com/glmmTMB/glmmTMB/actions), *or* 
apparently nothing (browsing around, it seems as though one doesn't 
generally see GH actions results until the run is completed?)

    Does anyone have suggestions (or, ideally, an example of a package 
with this repository configuration with a working GH actions setup)?

Recent attempts: https://github.com/glmmTMB/glmmTMB/commits/github_actions

Most recent attempt: 
https://github.com/glmmTMB/glmmTMB/commit/d1a08058636df0a4835f897d1e43909510f9c652

     happy holidays to all ...

      Ben Bolker


From c@@rd|@g@bor @end|ng |rom gm@||@com  Thu Dec 24 11:21:25 2020
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Thu, 24 Dec 2020 10:21:25 +0000
Subject: [R-pkg-devel] 
 GitHub actions incantation for package living in a subdirectory?
In-Reply-To: <6a1609a5-6936-76d3-ce2b-65273f6c3dd1@gmail.com>
References: <6a1609a5-6936-76d3-ce2b-65273f6c3dd1@gmail.com>
Message-ID: <CABtg=K=VoDr3m9dEVhUYxAqF=aE20JebrKXyNjAwYmu2bAYy5A@mail.gmail.com>

You can try to add some `setwd()` calls at the beginning of each step
that calls some R command.

This is not great of course, much of the GitHub-R tooling just assumes
that a repo contains a single package, at the root of the repo.
Converting your repos to this structure is painful, but can be still
better in the long run.

Gabor

On Thu, Dec 24, 2020 at 12:46 AM Ben Bolker <bbolker at gmail.com> wrote:
>
>    Hi folks,
>
>    Attempting to transition a package (glmmTMB/glmmTMB on GitHub) from
> Travis-CI to GIthub Actions.
>
>    Setting this up with usethis::use_github_actions() seems fairly
> straightforward, ... but ... this project has the R package living, not
> in the root directory of the repository, but in the 'glmmTMB'
> subdirectory.  In principle, "all" I have to do is add
> "working-directory: ./glmmTMB" in the right place in the
> .github/workflows/R-CMD-check.yaml file, but I don't seem to have
> succeeded so far. The results have either been very rapid failure due to
> syntax errors (https://github.com/glmmTMB/glmmTMB/actions), *or*
> apparently nothing (browsing around, it seems as though one doesn't
> generally see GH actions results until the run is completed?)
>
>     Does anyone have suggestions (or, ideally, an example of a package
> with this repository configuration with a working GH actions setup)?
>
> Recent attempts: https://github.com/glmmTMB/glmmTMB/commits/github_actions
>
> Most recent attempt:
> https://github.com/glmmTMB/glmmTMB/commit/d1a08058636df0a4835f897d1e43909510f9c652
>
>      happy holidays to all ...
>
>       Ben Bolker
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From petr|d|@h @end|ng |rom gm@||@com  Thu Dec 24 06:57:44 2020
From: petr|d|@h @end|ng |rom gm@||@com (Bryce Mecum)
Date: Wed, 23 Dec 2020 20:57:44 -0900
Subject: [R-pkg-devel] 
 GitHub actions incantation for package living in a subdirectory?
In-Reply-To: <6a1609a5-6936-76d3-ce2b-65273f6c3dd1@gmail.com>
References: <6a1609a5-6936-76d3-ce2b-65273f6c3dd1@gmail.com>
Message-ID: <CAKvA_=pCSDFZHoz_GrJ6e2W+0dn=x7p+rGkqGnnSGm_6bPnBVA@mail.gmail.com>

Hi Ben,

I took a look at the action you've got set up for your repo and I think the
core issues are that some steps in your Action should be run with the root
as their working directory, others should have the package root (subfolder)
as their working directory, and some arguments to steps need to be tweaked
to respect this layout.

I tested this out in a fork of your repo and have sent in a pull request
[1] with my changes. I'll note that check does run but fails with various
issues that look legitimate and not related to GitHub Actions. Hopefully
you find it a useful starting point.

[1] https://github.com/glmmTMB/glmmTMB/pull/656

	[[alternative HTML version deleted]]


