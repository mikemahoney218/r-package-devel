From kev|n@r@coombe@ @end|ng |rom gm@||@com  Tue Jul  2 00:04:40 2024
From: kev|n@r@coombe@ @end|ng |rom gm@||@com (Kevin R. Coombes)
Date: Mon, 1 Jul 2024 18:04:40 -0400
Subject: [R-pkg-devel] Is R-Forge dead?
Message-ID: <88ae6edf-13ca-42d8-80fa-fc729124682e@gmail.com>

Hi,

I have been maintaining packages in R-Forge for many tears. Last week I 
sent an email to r-forge at r-project.org to report problems with the build 
process. It appears that any changes I have pushed to R-Forge over 
approximately the last two months have resulted in the package remaining 
in the "Building" state, even though the logs suggest that the package 
built successfully on both LINUX and Windows. (Also, four of the six 
affected packages only included changes to the man pages to clean up 
NOTEs from the R cmd checks on old versions at CRAN, where the new 
versions now happily reside.) I have received no response nor 
acknowledgement to my email to R-Forge.

Assuming that R-Forge has finally succumbed to the ravages of entropy, 
does anyone have advice on creating a git project that contains multiple 
R packages? (I really don't want to have to create 20+ new git projects, 
one per package).

Best,
 ?? Kevin


From br|@n @end|ng |rom br@verock@com  Tue Jul  2 00:16:44 2024
From: br|@n @end|ng |rom br@verock@com (Brian G. Peterson)
Date: Mon, 01 Jul 2024 17:16:44 -0500
Subject: [R-pkg-devel] Is R-Forge dead?
In-Reply-To: <88ae6edf-13ca-42d8-80fa-fc729124682e@gmail.com>
References: <88ae6edf-13ca-42d8-80fa-fc729124682e@gmail.com>
Message-ID: <78417260a1adcd0b30ed8702a6545d7b878d17bc.camel@braverock.com>

Kevin,

I can't speak to whether R-Forge is dead, we migrated our projects to
github a long time ago.

The most straightforward answer for R packages in git repositories is
to use separate git projects.  we were even able to import the entire
SVN history and r-forge issue history to github for each of our r-forge
projects when we migrated. The only major complexity that I recall was
creating a table mapping svn contributors to github users (where
available).

If you want to do it all in one git repository, I strongly suggest that
you *still* import all the svn history, but that you do it in one
directory per project, since this is required by `R CMD build`.  We
sometimes use this 'one package per directory' approach in some of our
private repositories at work.  In this case, if you use an IDE like
RStudio, you'll still create separate *RStudio* projects in each
directory, so that you can build, install, test, etc each package from
the IDE, but you can use a single repository for all of it.

Your future self will thank you for having full version control history
of all the "Olde" (tm) versions.

Best of luck.  - Brian

see reference below about importing an svn repo to git:


Ref:
https://docs.github.com/en/migrations/importing-source-code/using-the-command-line-to-import-source-code/importing-a-subversion-repository

-- 
Brian G. Peterson
ph: +1.773.459.4973
im: bgpbraverock

On Mon, 2024-07-01 at 18:04 -0400, Kevin R. Coombes wrote:
> Hi,
> 
> I have been maintaining packages in R-Forge for many tears. Last week
> I 
> sent an email to r-forge at r-project.org?to report problems with the
> build 
> process. It appears that any changes I have pushed to R-Forge over 
> approximately the last two months have resulted in the package
> remaining 
> in the "Building" state, even though the logs suggest that the
> package 
> built successfully on both LINUX and Windows. (Also, four of the six 
> affected packages only included changes to the man pages to clean up 
> NOTEs from the R cmd checks on old versions at CRAN, where the new 
> versions now happily reside.) I have received no response nor 
> acknowledgement to my email to R-Forge.
> 
> Assuming that R-Forge has finally succumbed to the ravages of
> entropy, 
> does anyone have advice on creating a git project that contains
> multiple 
> R packages? (I really don't want to have to create 20+ new git
> projects, 
> one per package).
> 
> Best,
> ??? Kevin
> 
> ______________________________________________
> R-package-devel at r-project.org?mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From bbo|ker @end|ng |rom gm@||@com  Tue Jul  2 00:17:45 2024
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Mon, 1 Jul 2024 18:17:45 -0400
Subject: [R-pkg-devel] Is R-Forge dead?
In-Reply-To: <88ae6edf-13ca-42d8-80fa-fc729124682e@gmail.com>
References: <88ae6edf-13ca-42d8-80fa-fc729124682e@gmail.com>
Message-ID: <d8aa8eb2-42e7-452a-b570-b205a910b798@gmail.com>

   I don't know about R-forge, but it's perfectly workable to put 
multiple packages within a single repo, with each package in its own 
subdirectory.  You'll run into some headaches occasionally with (e.g.) 
CI machinery that assumes that the head of a git repo is also the 
primary package directory (e.g. 
https://github.com/r-hub/rhub/issues/584) ...

On 2024-07-01 6:04 p.m., Kevin R. Coombes wrote:
> Hi,
> 
> I have been maintaining packages in R-Forge for many tears. Last week I 
> sent an email to r-forge at r-project.org to report problems with the build 
> process. It appears that any changes I have pushed to R-Forge over 
> approximately the last two months have resulted in the package remaining 
> in the "Building" state, even though the logs suggest that the package 
> built successfully on both LINUX and Windows. (Also, four of the six 
> affected packages only included changes to the man pages to clean up 
> NOTEs from the R cmd checks on old versions at CRAN, where the new 
> versions now happily reside.) I have received no response nor 
> acknowledgement to my email to R-Forge.
> 
> Assuming that R-Forge has finally succumbed to the ravages of entropy, 
> does anyone have advice on creating a git project that contains multiple 
> R packages? (I really don't want to have to create 20+ new git projects, 
> one per package).
> 
> Best,
>  ?? Kevin
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From murdoch@dunc@n @end|ng |rom gm@||@com  Tue Jul  2 00:43:23 2024
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Mon, 1 Jul 2024 18:43:23 -0400
Subject: [R-pkg-devel] Is R-Forge dead?
In-Reply-To: <88ae6edf-13ca-42d8-80fa-fc729124682e@gmail.com>
References: <88ae6edf-13ca-42d8-80fa-fc729124682e@gmail.com>
Message-ID: <ef288e3f-fa4c-4b91-8357-e72531183cb4@gmail.com>

While you can put multiple packages in one Git repository, I'd suggest 
that you don't do that.  Most packages are in their own repository, and 
that means that users who want to contribute to your packages are 
familiar with that setup.  If they have to fork 20 packages at once to 
make a contribution to one of them, they are less likely to want to do it.

Duncan Murdoch

On 2024-07-01 6:04 p.m., Kevin R. Coombes wrote:
> Hi,
> 
> I have been maintaining packages in R-Forge for many tears. Last week I
> sent an email to r-forge at r-project.org to report problems with the build
> process. It appears that any changes I have pushed to R-Forge over
> approximately the last two months have resulted in the package remaining
> in the "Building" state, even though the logs suggest that the package
> built successfully on both LINUX and Windows. (Also, four of the six
> affected packages only included changes to the man pages to clean up
> NOTEs from the R cmd checks on old versions at CRAN, where the new
> versions now happily reside.) I have received no response nor
> acknowledgement to my email to R-Forge.
> 
> Assuming that R-Forge has finally succumbed to the ravages of entropy,
> does anyone have advice on creating a git project that contains multiple
> R packages? (I really don't want to have to create 20+ new git projects,
> one per package).
> 
> Best,
>   ?? Kevin
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From Ach|m@Ze||e|@ @end|ng |rom R-project@org  Tue Jul  2 01:05:07 2024
From: Ach|m@Ze||e|@ @end|ng |rom R-project@org (Achim Zeileis)
Date: Tue, 2 Jul 2024 01:05:07 +0200 (CEST)
Subject: [R-pkg-devel] Is R-Forge dead?
Message-ID: <df3965ea-336f-6460-e0cf-7b41d9cfeb14@R-project.org>

Kevin,

R-Forge is still alive but there are problems with the build queue as you 
noticed. The problems occurred after R-Forge upgraded to R 4.4.0 - just as 
there was a switch in the maintenance team at WU Wien.

The problem is with the Windows build/check tools which work fine when run 
manually but either fail (if there is compiled code in the package) or stall 
when run in batch mode.

Jorge, the new member in the admin team at WU, has been going through all the 
scripts with Uwe (Ligges) but they haven't spotted the problem so far. I think 
that the next step will be to migrate the Windows build/check processes to the 
Win-Builder machine.

I hope that they will succeed in doing so in the next weeks. Apologies for the 
inconvenience.

Best wishes,
Achim


On Tue, 2 Jul 2024, Kevin R. Coombes wrote:

> Hi,
> 
> I have been maintaining packages in R-Forge for many tears. Last week I sent 
> an email to r-forge at r-project.org to report problems with the build process. 
> It appears that any changes I have pushed to R-Forge over approximately the 
> last two months have resulted in the package remaining in the "Building" 
> state, even though the logs suggest that the package built successfully on 
> both LINUX and Windows. (Also, four of the six affected packages only 
> included changes to the man pages to clean up NOTEs from the R cmd checks on 
> old versions at CRAN, where the new versions now happily reside.) I have 
> received no response nor acknowledgement to my email to R-Forge.
> 
> Assuming that R-Forge has finally succumbed to the ravages of entropy, does 
> anyone have advice on creating a git project that contains multiple R 
> packages? (I really don't want to have to create 20+ new git projects, one 
> per package).
> 
> Best,
> ?? Kevin
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Tue Jul  2 01:08:10 2024
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Mon, 01 Jul 2024 16:08:10 -0700
Subject: [R-pkg-devel] Is R-Forge dead?
In-Reply-To: <88ae6edf-13ca-42d8-80fa-fc729124682e@gmail.com>
References: <88ae6edf-13ca-42d8-80fa-fc729124682e@gmail.com>
Message-ID: <D9D0E2E3-CD88-400E-87B5-A99CED291FF1@dcn.davis.ca.us>

I cannot/will not to help you do this, but there are people out there who disagree with me who put considerable effort into doing this... the search term you would need in order to find them is "monorepo". But please reconsider...  the whole point of putting code into separate packages is to isolate their internals to make them less interdependent... putting all of them into a monorepo can lead you to forget that users experience them as distinct units.

On July 1, 2024 3:04:40 PM PDT, "Kevin R. Coombes" <kevin.r.coombes at gmail.com> wrote:
>Hi,
>
>I have been maintaining packages in R-Forge for many tears. Last week I sent an email to r-forge at r-project.org to report problems with the build process. It appears that any changes I have pushed to R-Forge over approximately the last two months have resulted in the package remaining in the "Building" state, even though the logs suggest that the package built successfully on both LINUX and Windows. (Also, four of the six affected packages only included changes to the man pages to clean up NOTEs from the R cmd checks on old versions at CRAN, where the new versions now happily reside.) I have received no response nor acknowledgement to my email to R-Forge.
>
>Assuming that R-Forge has finally succumbed to the ravages of entropy, does anyone have advice on creating a git project that contains multiple R packages? (I really don't want to have to create 20+ new git projects, one per package).
>
>Best,
>?? Kevin
>
>______________________________________________
>R-package-devel at r-project.org mailing list
>https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
Sent from my phone. Please excuse my brevity.


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Tue Jul  2 10:59:24 2024
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Tue, 2 Jul 2024 10:59:24 +0200
Subject: [R-pkg-devel] Is R-Forge dead?
In-Reply-To: <df3965ea-336f-6460-e0cf-7b41d9cfeb14@R-project.org>
References: <df3965ea-336f-6460-e0cf-7b41d9cfeb14@R-project.org>
Message-ID: <26243.49516.105400.498057@stat.math.ethz.ch>

>>>>> Achim Zeileis 
>>>>>     on Tue, 2 Jul 2024 01:05:07 +0200 (CEST) writes:

    > Kevin, R-Forge is still alive but there are problems with
    > the build queue as you noticed. The problems occurred
    > after R-Forge upgraded to R 4.4.0 - just as there was a
    > switch in the maintenance team at WU Wien.

    > The problem is with the Windows build/check tools which
    > work fine when run manually but either fail (if there is
    > compiled code in the package) or stall when run in batch
    > mode.

    > Jorge, the new member in the admin team at WU, has been
    > going through all the scripts with Uwe (Ligges) but they
    > haven't spotted the problem so far. I think that the next
    > step will be to migrate the Windows build/check processes
    > to the Win-Builder machine.

    > I hope that they will succeed in doing so in the next
    > weeks. Apologies for the inconvenience.

    > Best wishes, Achim

Thanks a lot, Achim,
for the update and explanation!

I maintain quite a few packages on R-forge,
enjoying the simplicity of svn (subversion) on the way.

For automatic building and checking,  some of you may be aware
that the R-OpenSci organization has hosted and sponsored the
"R-Universe" project https://ropensci.org/r-universe/,
implemented and made quite successful I think primarily by
Jeroen Ooms.   A main goal (I think) has been to *be* as
universal as possible, and provide a "portal" for "all" publicly
hosted R packages and not only foster to private company-owned
platforms such as github, but rather work with more general
"organizations" such as CRAN and BioC (each via their 'Meta
CRAN'), then also R-forge and many many more, see
    https://r-universe.dev/organizations/

Consequently, the R-forge packages are also all mirrored and
presented there, *and* also built and checked,
   --> https://r-forge.r-universe.dev/
... sometimes (somewhat confusingly to us, in one case) checking
against non-released versions of CRAN packages (instead of the stable
CRAN version)  which of course may be useful ((and I think is
similar to how R-forge works;  if there are released and
unreleased version of packages around, it's not easily
determinable *which* version should be used for tests of other
packages)).

Anyway, I was glad in one case that R-universe provided a built
version of the development version of one of my packages other
users could easily install.

Martin

PS:  I have not been a fan of r-universe, notably originally, as
it diverts attention away from R-project and CRAN, but then did
notice how useful it can be to the R users community, and how
well it has been maintained, hence these kudos!


    > On Tue, 2 Jul 2024, Kevin R. Coombes wrote:

    >> Hi,
    >> 
    >> I have been maintaining packages in R-Forge for many
    >> tears. Last week I sent an email to r-forge at r-project.org
    >> to report problems with the build process.  It appears
    >> that any changes I have pushed to R-Forge over
    >> approximately the last two months have resulted in the
    >> package remaining in the "Building" state, even though
    >> the logs suggest that the package built successfully on
    >> both LINUX and Windows. (Also, four of the six affected
    >> packages only included changes to the man pages to clean
    >> up NOTEs from the R cmd checks on old versions at CRAN,
    >> where the new versions now happily reside.) I have
    >> received no response nor acknowledgement to my email to
    >> R-Forge.
    >> 
    >> Assuming that R-Forge has finally succumbed to the
    >> ravages of entropy, does anyone have advice on creating a
    >> git project that contains multiple R packages? (I really
    >> don't want to have to create 20+ new git projects, one
    >> per package).
    >> 
    >> Best, ?? Kevin
    >> 
    >> ______________________________________________
    >> R-package-devel at r-project.org mailing list
    >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
    >> 
    > ______________________________________________
    > R-package-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-package-devel


From Ach|m@Ze||e|@ @end|ng |rom R-project@org  Tue Jul  2 11:50:26 2024
From: Ach|m@Ze||e|@ @end|ng |rom R-project@org (Achim Zeileis)
Date: Tue, 2 Jul 2024 11:50:26 +0200 (CEST)
Subject: [R-pkg-devel] Is R-Forge dead?
In-Reply-To: <26243.49516.105400.498057@stat.math.ethz.ch>
References: <df3965ea-336f-6460-e0cf-7b41d9cfeb14@R-project.org>
 <26243.49516.105400.498057@stat.math.ethz.ch>
Message-ID: <3aa469bc-0305-a347-b05e-d6cbcd7fd032@R-project.org>

On Tue, 2 Jul 2024, Martin Maechler wrote:

>>>>>> Achim Zeileis
>>>>>>     on Tue, 2 Jul 2024 01:05:07 +0200 (CEST) writes:
>
>    > Kevin, R-Forge is still alive but there are problems with
>    > the build queue as you noticed. The problems occurred
>    > after R-Forge upgraded to R 4.4.0 - just as there was a
>    > switch in the maintenance team at WU Wien.
>
>    > The problem is with the Windows build/check tools which
>    > work fine when run manually but either fail (if there is
>    > compiled code in the package) or stall when run in batch
>    > mode.
>
>    > Jorge, the new member in the admin team at WU, has been
>    > going through all the scripts with Uwe (Ligges) but they
>    > haven't spotted the problem so far. I think that the next
>    > step will be to migrate the Windows build/check processes
>    > to the Win-Builder machine.
>
>    > I hope that they will succeed in doing so in the next
>    > weeks. Apologies for the inconvenience.
>
>    > Best wishes, Achim
>
> Thanks a lot, Achim,
> for the update and explanation!
>
> I maintain quite a few packages on R-forge,
> enjoying the simplicity of svn (subversion) on the way.
>
> For automatic building and checking,  some of you may be aware
> that the R-OpenSci organization has hosted and sponsored the
> "R-Universe" project https://ropensci.org/r-universe/,
> implemented and made quite successful I think primarily by
> Jeroen Ooms.   A main goal (I think) has been to *be* as
> universal as possible, and provide a "portal" for "all" publicly
> hosted R packages and not only foster to private company-owned
> platforms such as github, but rather work with more general
> "organizations" such as CRAN and BioC (each via their 'Meta
> CRAN'), then also R-forge and many many more, see
>    https://r-universe.dev/organizations/
>
> Consequently, the R-forge packages are also all mirrored and
> presented there, *and* also built and checked,
>   --> https://r-forge.r-universe.dev/
> ... sometimes (somewhat confusingly to us, in one case) checking
> against non-released versions of CRAN packages (instead of the stable
> CRAN version)  which of course may be useful ((and I think is
> similar to how R-forge works;  if there are released and
> unreleased version of packages around, it's not easily
> determinable *which* version should be used for tests of other
> packages)).
>
> Anyway, I was glad in one case that R-universe provided a built
> version of the development version of one of my packages other
> users could easily install.
>
> Martin
>
> PS:  I have not been a fan of r-universe, notably originally, as
> it diverts attention away from R-project and CRAN, but then did
> notice how useful it can be to the R users community, and how
> well it has been maintained, hence these kudos!

+1 Thanks for pointing to R-universe, Martin, indeed an excellent service!

An additional detail about the packages at:

https://R-Forge.R-universe.dev/

This are the development versions of the R-Forge packages that are already 
released on CRAN.

If anyone has R-Forge packages that are not (yet) released on CRAN and you 
want to deploy them via R-universe, then you can do so by setting up your 
own universe. I'm using that for many of my R-Forge packages, see

https://zeileis.R-universe.dev/

and

https://github.com/zeileis/zeileis.r-universe.dev

for the underlying configuration.

Best wishes,
Achim


>
>    > On Tue, 2 Jul 2024, Kevin R. Coombes wrote:
>
>    >> Hi,
>    >>
>    >> I have been maintaining packages in R-Forge for many
>    >> tears. Last week I sent an email to r-forge at r-project.org
>    >> to report problems with the build process.  It appears
>    >> that any changes I have pushed to R-Forge over
>    >> approximately the last two months have resulted in the
>    >> package remaining in the "Building" state, even though
>    >> the logs suggest that the package built successfully on
>    >> both LINUX and Windows. (Also, four of the six affected
>    >> packages only included changes to the man pages to clean
>    >> up NOTEs from the R cmd checks on old versions at CRAN,
>    >> where the new versions now happily reside.) I have
>    >> received no response nor acknowledgement to my email to
>    >> R-Forge.
>    >>
>    >> Assuming that R-Forge has finally succumbed to the
>    >> ravages of entropy, does anyone have advice on creating a
>    >> git project that contains multiple R packages? (I really
>    >> don't want to have to create 20+ new git projects, one
>    >> per package).
>    >>
>    >> Best, ?? Kevin
>    >>
>    >> ______________________________________________
>    >> R-package-devel at r-project.org mailing list
>    >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>    >>
>    > ______________________________________________
>    > R-package-devel at r-project.org mailing list
>    > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>

From ||@t@ @end|ng |rom dewey@myzen@co@uk  Mon Jul  8 16:04:44 2024
From: ||@t@ @end|ng |rom dewey@myzen@co@uk (Michael Dewey)
Date: Mon, 8 Jul 2024 15:04:44 +0100
Subject: [R-pkg-devel] NOTE about lack of prebuilt manual
Message-ID: <d8c9018d-6225-ebd3-9fc5-254c64b20f5c@dewey.myzen.co.uk>

Short version

I have recently tried to update two of my CRAN packages and I am getting 
the NOTE from R CMD check --as-cran

Package has help file(s) containing install/render-stage \Sexpr{} 
expressions but no prebuilt PDF manual.

(It comes on one line in the check.log)

What am I doing wrong?

===================

More details

Both packages have lived successfuly on CRAN for some time but my recent 
attempts to update lead to the NOTE shown above. I notice that the 
version currently on CRAN do have in the tarball a directory called 
build which amongst other thing does contain the package manual. However 
when I build the updated versions the tarball still contains a build 
directory but without the manual.

I am using 4.4.1 under Windows 10. I open a command line and do 
everything from there with R CMD, I do not use any helper package. The 
help files do not explicitly contain any instance of \Sexpr{} but they 
do contain macros. Both of them use mathjaxr and Rdpack and one also has 
some macros written by me. They have been like that for some while. The 
Rd files are hand-written, I do not use any package to generate 
documentation.

I notice that R CMD build has an option to turn off the manual but I do 
not set that and there does not seem to be a turn on option. I have 
looked at the NEWS for R4.4.0 and 4.4.1 but withou enlightenment. The 
versions on CRAN were probably generated with R 4.3.3 judgin by the date 
when I made them.

I know it is only a NOTE but I would like to know why it is happening.

I hope that is enough detail to be helpful but I can expand on any 
unclear areas.

-- 
Michael


From |kw@|mmo @end|ng |rom gm@||@com  Mon Jul  8 16:08:34 2024
From: |kw@|mmo @end|ng |rom gm@||@com (Iris Simmons)
Date: Mon, 8 Jul 2024 10:08:34 -0400
Subject: [R-pkg-devel] NOTE about lack of prebuilt manual
In-Reply-To: <d8c9018d-6225-ebd3-9fc5-254c64b20f5c@dewey.myzen.co.uk>
References: <d8c9018d-6225-ebd3-9fc5-254c64b20f5c@dewey.myzen.co.uk>
Message-ID: <CADNULg-t_C0F_MVSNJR0=R3qRZgPVenMo2s5-GACtmUA05cyng@mail.gmail.com>

This is something I'd run into recently as well.

The R devs changed the default from building the manual to not building the
manual. Now if you want (or need) to build the manual, you should add

BuildManual: TRUE

to your DESCRIPTION.

On Mon, Jul 8, 2024, 10:05 Michael Dewey <lists at dewey.myzen.co.uk> wrote:

> Short version
>
> I have recently tried to update two of my CRAN packages and I am getting
> the NOTE from R CMD check --as-cran
>
> Package has help file(s) containing install/render-stage \Sexpr{}
> expressions but no prebuilt PDF manual.
>
> (It comes on one line in the check.log)
>
> What am I doing wrong?
>
> ===================
>
> More details
>
> Both packages have lived successfuly on CRAN for some time but my recent
> attempts to update lead to the NOTE shown above. I notice that the
> version currently on CRAN do have in the tarball a directory called
> build which amongst other thing does contain the package manual. However
> when I build the updated versions the tarball still contains a build
> directory but without the manual.
>
> I am using 4.4.1 under Windows 10. I open a command line and do
> everything from there with R CMD, I do not use any helper package. The
> help files do not explicitly contain any instance of \Sexpr{} but they
> do contain macros. Both of them use mathjaxr and Rdpack and one also has
> some macros written by me. They have been like that for some while. The
> Rd files are hand-written, I do not use any package to generate
> documentation.
>
> I notice that R CMD build has an option to turn off the manual but I do
> not set that and there does not seem to be a turn on option. I have
> looked at the NEWS for R4.4.0 and 4.4.1 but withou enlightenment. The
> versions on CRAN were probably generated with R 4.3.3 judgin by the date
> when I made them.
>
> I know it is only a NOTE but I would like to know why it is happening.
>
> I hope that is enough detail to be helpful but I can expand on any
> unclear areas.
>
> --
> Michael
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From m@rk@p@dgh@m @end|ng |rom em@||@com  Mon Jul  8 16:24:50 2024
From: m@rk@p@dgh@m @end|ng |rom em@||@com (Mark Padgham)
Date: Mon, 8 Jul 2024 16:24:50 +0200
Subject: [R-pkg-devel] cpp11 and "non-API calls to R"
Message-ID: <b73ddb20-bc88-48aa-97a1-266e9db4d4da@email.com>

Dear R-pkg-dev folk,

The cpp11 package, which was developed yet is no longer maintained by
Jim Hester, now triggers warnings on some CRAN pre-submit checks for
"non-API calls to R" via "SETLENGTH", "SET_TRUELENGTH", and others. The
relevant issue is https://github.com/r-lib/cpp11/issues/355, with a pull
request to resolve at https://github.com/r-lib/cpp11/pull/358. Problem
is the package is now largely inactive, with the PR hanging there for a
month or so unattended. I presume this warning means I can not resubmit
any package depending on cpp11 until this is resolved. But then there
are currently 75 packages potentially affected by this which would then
also be unable to be resubmitted. (Follow the links from the main GitHub
issue for a glimpse of the scale of this problem.)

Any suggestions? In particular, it would be helpful, in this arguably
unusual and quite prominent case, to hear any views from CRAN folk as to
whether everybody dependent on cpp11 will have to wait for resolution
before they'll be able to resubmit? Alternatively, any indication from
anybody in a position to opine on cpp11 status and future maintenance
plans would be great!

Thanks,

Mark


From bbo|ker @end|ng |rom gm@||@com  Mon Jul  8 16:37:15 2024
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Mon, 8 Jul 2024 10:37:15 -0400
Subject: [R-pkg-devel] cpp11 and "non-API calls to R"
In-Reply-To: <b73ddb20-bc88-48aa-97a1-266e9db4d4da@email.com>
References: <b73ddb20-bc88-48aa-97a1-266e9db4d4da@email.com>
Message-ID: <ce18fa43-5d13-4b1c-8e00-e69275276bae@gmail.com>

   Have you contacted the maintainer directly (i.e. by e-mail)?  (Yes, 
they should be paying attention to Github, but trying another channel 
never hurts.)

   My personal experience is that I was succeeded in submitting a 
package update to CRAN even though there were NOTEs of this sort (in 
that case SET_TYPEOF) arising from an upstream package 
<https://github.com/RcppCore/Rcpp/issues/1312>; I explained the issue in 
my cover letter.

   It may take a while to sort out all of the fallout from the 
tightening of the API rules; I think the CRAN maintainers are aware of this.

   cheers
    Ben Bolker


On 2024-07-08 10:24 a.m., Mark Padgham wrote:
> Dear R-pkg-dev folk,
> 
> The cpp11 package, which was developed yet is no longer maintained by
> Jim Hester, now triggers warnings on some CRAN pre-submit checks for
> "non-API calls to R" via "SETLENGTH", "SET_TRUELENGTH", and others. The
> relevant issue is https://github.com/r-lib/cpp11/issues/355, with a pull
> request to resolve at https://github.com/r-lib/cpp11/pull/358. Problem
> is the package is now largely inactive, with the PR hanging there for a
> month or so unattended. I presume this warning means I can not resubmit
> any package depending on cpp11 until this is resolved. But then there
> are currently 75 packages potentially affected by this which would then
> also be unable to be resubmitted. (Follow the links from the main GitHub
> issue for a glimpse of the scale of this problem.)
> 
> Any suggestions? In particular, it would be helpful, in this arguably
> unusual and quite prominent case, to hear any views from CRAN folk as to
> whether everybody dependent on cpp11 will have to wait for resolution
> before they'll be able to resubmit? Alternatively, any indication from
> anybody in a position to opine on cpp11 status and future maintenance
> plans would be great!
> 
> Thanks,
> 
> Mark
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
Dr. Benjamin Bolker
Professor, Mathematics & Statistics and Biology, McMaster University
Director, School of Computational Science and Engineering
(Acting) Graduate chair, Mathematics & Statistics
 > E-mail is sent at my convenience; I don't expect replies outside of 
working hours.


From jo@|@h@p@rry @end|ng |rom gm@||@com  Mon Jul  8 16:39:11 2024
From: jo@|@h@p@rry @end|ng |rom gm@||@com (Josiah Parry)
Date: Mon, 8 Jul 2024 10:39:11 -0400
Subject: [R-pkg-devel] cpp11 and "non-API calls to R"
In-Reply-To: <b73ddb20-bc88-48aa-97a1-266e9db4d4da@email.com>
References: <b73ddb20-bc88-48aa-97a1-266e9db4d4da@email.com>
Message-ID: <CAL3ufUJt8=eGcb8cSibK2baBTQYgJ2sJm6m2gNs=Lb+Jr3=OcQ@mail.gmail.com>

Hi Mark,

As someone else affected by this issue, it is actually quite tough to
resolve. This is because quite literally every other day, the list of what
is and is not non-API is changing. It is particularly challenging since
this is in R-devel and not any stable R release.

If there were a stable list of non-API and a stable release of R that this
is associated with it is my guess that the PR would?ve been merged by now.

On Mon, Jul 8, 2024 at 10:25 Mark Padgham <mark.padgham at email.com> wrote:

> Dear R-pkg-dev folk,
>
> The cpp11 package, which was developed yet is no longer maintained by
> Jim Hester, now triggers warnings on some CRAN pre-submit checks for
> "non-API calls to R" via "SETLENGTH", "SET_TRUELENGTH", and others. The
> relevant issue is https://github.com/r-lib/cpp11/issues/355, with a pull
> request to resolve at https://github.com/r-lib/cpp11/pull/358. Problem
> is the package is now largely inactive, with the PR hanging there for a
> month or so unattended. I presume this warning means I can not resubmit
> any package depending on cpp11 until this is resolved. But then there
> are currently 75 packages potentially affected by this which would then
> also be unable to be resubmitted. (Follow the links from the main GitHub
> issue for a glimpse of the scale of this problem.)
>
> Any suggestions? In particular, it would be helpful, in this arguably
> unusual and quite prominent case, to hear any views from CRAN folk as to
> whether everybody dependent on cpp11 will have to wait for resolution
> before they'll be able to resubmit? Alternatively, any indication from
> anybody in a position to opine on cpp11 status and future maintenance
> plans would be great!
>
> Thanks,
>
> Mark
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Mon Jul  8 16:40:24 2024
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Mon, 8 Jul 2024 16:40:24 +0200
Subject: [R-pkg-devel] NOTE about lack of prebuilt manual
In-Reply-To: <CADNULg-t_C0F_MVSNJR0=R3qRZgPVenMo2s5-GACtmUA05cyng@mail.gmail.com>
References: <d8c9018d-6225-ebd3-9fc5-254c64b20f5c@dewey.myzen.co.uk>
 <CADNULg-t_C0F_MVSNJR0=R3qRZgPVenMo2s5-GACtmUA05cyng@mail.gmail.com>
Message-ID: <d1edd1b3-4c28-492d-bf30-877f5d024b8d@statistik.tu-dortmund.de>



On 08.07.2024 16:08, Iris Simmons wrote:
> This is something I'd run into recently as well.
> 
> The R devs changed the default from building the manual to not building the
> manual. Now if you want (or need) to build the manual, you should add


Well, not really, we still build manuals unless file(s) containing 
install/render-stage \Sexpr{}  are present (as in this case).

Best,
Uwe Ligges



> BuildManual: TRUE
> 
> to your DESCRIPTION.
> 
> On Mon, Jul 8, 2024, 10:05 Michael Dewey <lists at dewey.myzen.co.uk> wrote:
> 
>> Short version
>>
>> I have recently tried to update two of my CRAN packages and I am getting
>> the NOTE from R CMD check --as-cran
>>
>> Package has help file(s) containing install/render-stage \Sexpr{}
>> expressions but no prebuilt PDF manual.
>>
>> (It comes on one line in the check.log)
>>
>> What am I doing wrong?
>>
>> ===================
>>
>> More details
>>
>> Both packages have lived successfuly on CRAN for some time but my recent
>> attempts to update lead to the NOTE shown above. I notice that the
>> version currently on CRAN do have in the tarball a directory called
>> build which amongst other thing does contain the package manual. However
>> when I build the updated versions the tarball still contains a build
>> directory but without the manual.
>>
>> I am using 4.4.1 under Windows 10. I open a command line and do
>> everything from there with R CMD, I do not use any helper package. The
>> help files do not explicitly contain any instance of \Sexpr{} but they
>> do contain macros. Both of them use mathjaxr and Rdpack and one also has
>> some macros written by me. They have been like that for some while. The
>> Rd files are hand-written, I do not use any package to generate
>> documentation.
>>
>> I notice that R CMD build has an option to turn off the manual but I do
>> not set that and there does not seem to be a turn on option. I have
>> looked at the NEWS for R4.4.0 and 4.4.1 but withou enlightenment. The
>> versions on CRAN were probably generated with R 4.3.3 judgin by the date
>> when I made them.
>>
>> I know it is only a NOTE but I would like to know why it is happening.
>>
>> I hope that is enough detail to be helpful but I can expand on any
>> unclear areas.
>>
>> --
>> Michael
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

From d@n|e|@c|@borne @end|ng |rom pnn|@gov  Tue Jul  9 00:46:32 2024
From: d@n|e|@c|@borne @end|ng |rom pnn|@gov (Claborne, Daniel)
Date: Mon, 8 Jul 2024 22:46:32 +0000
Subject: [R-pkg-devel] Segfaults on R-devel
Message-ID: <CO6PR09MB8597FE4D0E145AA6B5C61DF789DA2@CO6PR09MB8597.namprd09.prod.outlook.com>

Seemingly starting with the most recent builds of R-devel, I?ve been getting segfaults related to a piece of cpp code that indexes a zero-size NumericVector.  Essentially the same as this dummy example:

```
library(Rcpp)

sourceCpp(
  code = '
  #include<Rcpp.h>
  using namespace Rcpp;

  // [[Rcpp::export]]
  NumericVector zeroindex() {
    NumericVector zerosize(0);

    Rcout << zerosize[0] << std::endl;

    return zerosize;
  }
  '
)

zeroindex()
```

On R-release and on previous builds, this returns something like:

```
6.92674e-310
numeric(0)
```

But on current R-devel containers:

```

 *** caught segfault ***

address 0x1, cause 'memory not mapped'



Traceback:

 1: .Call(<pointer: 0x7fa9369c7930>)

 2: zeroindex()



Possible actions:

1: abort (with core dump, if enabled)

2: normal R exit

3: exit R without saving workspace

4: exit R saving workspace
```

It was easy enough to write a catch for the zero-size vector, however I?m wondering why the discrepancy between R-devel and previous versions?

Best,
-DMC

	[[alternative HTML version deleted]]


From bbo|ker @end|ng |rom gm@||@com  Tue Jul  9 00:59:51 2024
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Mon, 8 Jul 2024 18:59:51 -0400
Subject: [R-pkg-devel] Segfaults on R-devel
In-Reply-To: <CO6PR09MB8597FE4D0E145AA6B5C61DF789DA2@CO6PR09MB8597.namprd09.prod.outlook.com>
References: <CO6PR09MB8597FE4D0E145AA6B5C61DF789DA2@CO6PR09MB8597.namprd09.prod.outlook.com>
Message-ID: <06aae608-16a0-4b26-af09-dfa7fe9fa9d4@gmail.com>

   I'm pretty sure this is from this R-devel commit:

https://github.com/r-devel/r-svn/commit/92c1d5de23c93576f55062e26d446feface07250

  This turns on stricter boundary checking, specifically see 
https://github.com/lme4/lme4/issues/794#issuecomment-2154948145

   Arguably, accessing an element of a zero-length vector is at least 
undefined behaviour, so you shouldn't be doing it ...



On 2024-07-08 6:46 p.m., Claborne, Daniel via R-package-devel wrote:
> Seemingly starting with the most recent builds of R-devel, I?ve been getting segfaults related to a piece of cpp code that indexes a zero-size NumericVector.  Essentially the same as this dummy example:
> 
> ```
> library(Rcpp)
> 
> sourceCpp(
>    code = '
>    #include<Rcpp.h>
>    using namespace Rcpp;
> 
>    // [[Rcpp::export]]
>    NumericVector zeroindex() {
>      NumericVector zerosize(0);
> 
>      Rcout << zerosize[0] << std::endl;
> 
>      return zerosize;
>    }
>    '
> )
> 
> zeroindex()
> ```
> 
> On R-release and on previous builds, this returns something like:
> 
> ```
> 6.92674e-310
> numeric(0)
> ```
> 
> But on current R-devel containers:
> 
> ```
> 
>   *** caught segfault ***
> 
> address 0x1, cause 'memory not mapped'
> 
> 
> 
> Traceback:
> 
>   1: .Call(<pointer: 0x7fa9369c7930>)
> 
>   2: zeroindex()
> 
> 
> 
> Possible actions:
> 
> 1: abort (with core dump, if enabled)
> 
> 2: normal R exit
> 
> 3: exit R without saving workspace
> 
> 4: exit R saving workspace
> ```
> 
> It was easy enough to write a catch for the zero-size vector, however I?m wondering why the discrepancy between R-devel and previous versions?
> 
> Best,
> -DMC
> 
> 	[[alternative HTML version deleted]]
> 
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
Dr. Benjamin Bolker
Professor, Mathematics & Statistics and Biology, McMaster University
Director, School of Computational Science and Engineering
(Acting) Graduate chair, Mathematics & Statistics
 > E-mail is sent at my convenience; I don't expect replies outside of 
working hours.


From mhn@yem@cu@@t@t @end|ng |rom gm@||@com  Mon Jul  8 12:09:35 2024
From: mhn@yem@cu@@t@t @end|ng |rom gm@||@com (Mahadi Hassan)
Date: Mon, 8 Jul 2024 16:09:35 +0600
Subject: [R-pkg-devel] Notes while a new R package submission
Message-ID: <CAGdCjn4u-oHjk09F4737+uAUi+i52pq4k2LkVNWt5MVoTE2kmw@mail.gmail.com>

Hello everyone
I need your attention. I have developed a new R package and submitted it to
CRAN. In return main i got two notes they are:

* using log directory 'd:/RCompile/CRANincoming/R-devel/drglm.Rcheck'
* using R Under development (unstable) (2024-07-05 r86875 ucrt)
* using platform: x86_64-w64-mingw32
* R was compiled by
    gcc.exe (GCC) 13.2.0
    GNU Fortran (GCC) 13.2.0
* running under: Windows Server 2022 x64 (build 20348)
* using session charset: UTF-8
* checking for file 'drglm/DESCRIPTION' ... OK
* checking extension type ... Package
* this is package 'drglm' version '1.0.1'
* package encoding: UTF-8
* checking CRAN incoming feasibility ... NOTE
Maintainer: 'MHNayem <mhnayem.cu.stat at outlook.com>'

New submission
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking whether package 'drglm' can be installed ... OK
* checking installed package size ... OK
* checking package directory ... OK
* checking for future file timestamps ... OK
* checking 'build' directory ... OK
* checking DESCRIPTION meta-information ... OK
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking code files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies ... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking loading without being on the library search path ... OK
* checking use of S3 registration ... OK
* checking dependencies in R code ... OK
* checking S3 generic/method consistency ... OK
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... OK
* checking Rd files ... OK
* checking Rd metadata ... OK
* checking Rd line widths ... OK
* checking Rd cross-references ... OK
* checking for missing documentation entries ... OK
* checking for code/documentation mismatches ... OK
* checking Rd \usage sections ... OK
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking installed files from 'inst/doc' ... OK
* checking files in 'vignettes' ... OK
* checking examples ... [257s] NOTE
Examples with CPU (user + system) or elapsed time > 10s
                user system elapsed
drglm          93.50  14.34  107.82
drglm.multinom 78.65  13.28   91.89
big.drglm      26.61   1.75   28.36
make.data      25.07   1.78   26.84
* checking for unstated dependencies in 'tests' ... OK
* checking tests ... OK
  Running 'testthat.R'
* checking for unstated dependencies in vignettes ... OK
* checking package vignettes ... OK
* checking re-building of vignette outputs ... [241s] OK
* checking PDF version of manual ... [13s] OK
* checking HTML version of manual ... OK
* DONE
Status: 2 NOTEs



And my submission got cancelled automatically.  Can you tell me how to
solve such notes and how can i resubmit it to CRAN?

	[[alternative HTML version deleted]]


From m@te|@te|em@n @end|ng |rom un||@ch  Mon Jul  8 17:12:24 2024
From: m@te|@te|em@n @end|ng |rom un||@ch (Matei Teleman)
Date: Mon, 8 Jul 2024 15:12:24 +0000
Subject: [R-pkg-devel] Help for understanding CRAN rejection
References: <9DE1C4C5-3A88-4F75-87CD-7A5CE0F7EAA7@unil.ch>
Message-ID: <D21E7C8B-9BA7-4F31-8F43-9E9F654E5118@unil.ch>

Hello everyone,

I hope this email finds you well.

I?m sorry to bother you, it?s the very first time I?m submitting a package to CRAN.

Recently my submission got rejected with the following feedback:
Non-FOSS package license (file LICENSE)

   Suggests or Enhances not in mainstream repositories:
     velocyto.R

   Found the following (possibly) invalid URLs:
     URL: https://cran.r-project.org/web/packages/Seurat/index.html
       From: inst/doc/a_SuperCell.html
       Status: 200
       Message: OK
       CRAN URL not in canonical form

   The canonical URL of the CRAN page for a package is
     https://CRAN.R-project.org/package=pkgname<https://cran.r-project.org/package=pkgname>


   Size of tarball: 9076436 bytes


Flavor: r-devel-linux-x86_64-debian-gcc, r-devel-windows-x86_64
Check: package dependencies, Result: NOTE
   Package suggested but not available for checking: ?velocyto.R'


The license we?re using is the standard CC BY-NC-ND 4.0 and is listed among the accepted licenses for CRAN.

I fixed the URL issue but how can I make CRAN accept the package ?

Thank you advance for your time and your help !

Have a nice day.

Best Regards,

Matei Teleman

	[[alternative HTML version deleted]]


From bbo|ker @end|ng |rom gm@||@com  Tue Jul  9 01:51:02 2024
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Mon, 8 Jul 2024 19:51:02 -0400
Subject: [R-pkg-devel] Notes while a new R package submission
In-Reply-To: <CAGdCjn4u-oHjk09F4737+uAUi+i52pq4k2LkVNWt5MVoTE2kmw@mail.gmail.com>
References: <CAGdCjn4u-oHjk09F4737+uAUi+i52pq4k2LkVNWt5MVoTE2kmw@mail.gmail.com>
Message-ID: <979f65d6-9dea-4500-a447-483c0c49cd66@gmail.com>

   The first NOTE is irrelevant.  The second NOTE says that you must 
reduce the running time of your examples (so that the longest of them 
takes <10 seconds on the *slowest* CRAN testing platform). This thread 
might be useful: 
https://stat.ethz.ch/pipermail/r-package-devel/2021q4/007521.html

   cheers
    Ben Bolker


On 2024-07-08 6:09 a.m., Mahadi Hassan wrote:
> Hello everyone
> I need your attention. I have developed a new R package and submitted it to
> CRAN. In return main i got two notes they are:
> 
> * using log directory 'd:/RCompile/CRANincoming/R-devel/drglm.Rcheck'
> * using R Under development (unstable) (2024-07-05 r86875 ucrt)
> * using platform: x86_64-w64-mingw32
> * R was compiled by
>      gcc.exe (GCC) 13.2.0
>      GNU Fortran (GCC) 13.2.0
> * running under: Windows Server 2022 x64 (build 20348)
> * using session charset: UTF-8
> * checking for file 'drglm/DESCRIPTION' ... OK
> * checking extension type ... Package
> * this is package 'drglm' version '1.0.1'
> * package encoding: UTF-8
> * checking CRAN incoming feasibility ... NOTE
> Maintainer: 'MHNayem <mhnayem.cu.stat at outlook.com>'
> 
> New submission
> * checking package namespace information ... OK
> * checking package dependencies ... OK
> * checking if this is a source package ... OK
> * checking if there is a namespace ... OK
> * checking for hidden files and directories ... OK
> * checking for portable file names ... OK
> * checking whether package 'drglm' can be installed ... OK
> * checking installed package size ... OK
> * checking package directory ... OK
> * checking for future file timestamps ... OK
> * checking 'build' directory ... OK
> * checking DESCRIPTION meta-information ... OK
> * checking top-level files ... OK
> * checking for left-over files ... OK
> * checking index information ... OK
> * checking package subdirectories ... OK
> * checking code files for non-ASCII characters ... OK
> * checking R files for syntax errors ... OK
> * checking whether the package can be loaded ... OK
> * checking whether the package can be loaded with stated dependencies ... OK
> * checking whether the package can be unloaded cleanly ... OK
> * checking whether the namespace can be loaded with stated dependencies ... OK
> * checking whether the namespace can be unloaded cleanly ... OK
> * checking loading without being on the library search path ... OK
> * checking use of S3 registration ... OK
> * checking dependencies in R code ... OK
> * checking S3 generic/method consistency ... OK
> * checking replacement functions ... OK
> * checking foreign function calls ... OK
> * checking R code for possible problems ... OK
> * checking Rd files ... OK
> * checking Rd metadata ... OK
> * checking Rd line widths ... OK
> * checking Rd cross-references ... OK
> * checking for missing documentation entries ... OK
> * checking for code/documentation mismatches ... OK
> * checking Rd \usage sections ... OK
> * checking Rd contents ... OK
> * checking for unstated dependencies in examples ... OK
> * checking installed files from 'inst/doc' ... OK
> * checking files in 'vignettes' ... OK
> * checking examples ... [257s] NOTE
> Examples with CPU (user + system) or elapsed time > 10s
>                  user system elapsed
> drglm          93.50  14.34  107.82
> drglm.multinom 78.65  13.28   91.89
> big.drglm      26.61   1.75   28.36
> make.data      25.07   1.78   26.84
> * checking for unstated dependencies in 'tests' ... OK
> * checking tests ... OK
>    Running 'testthat.R'
> * checking for unstated dependencies in vignettes ... OK
> * checking package vignettes ... OK
> * checking re-building of vignette outputs ... [241s] OK
> * checking PDF version of manual ... [13s] OK
> * checking HTML version of manual ... OK
> * DONE
> Status: 2 NOTEs
> 
> 
> 
> And my submission got cancelled automatically.  Can you tell me how to
> solve such notes and how can i resubmit it to CRAN?
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
Dr. Benjamin Bolker
Professor, Mathematics & Statistics and Biology, McMaster University
Director, School of Computational Science and Engineering
(Acting) Graduate chair, Mathematics & Statistics
 > E-mail is sent at my convenience; I don't expect replies outside of 
working hours.


From |kry|ov @end|ng |rom d|@root@org  Tue Jul  9 09:11:33 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Tue, 9 Jul 2024 10:11:33 +0300
Subject: [R-pkg-devel] Help for understanding CRAN rejection
In-Reply-To: <D21E7C8B-9BA7-4F31-8F43-9E9F654E5118@unil.ch>
References: <9DE1C4C5-3A88-4F75-87CD-7A5CE0F7EAA7@unil.ch>
 <D21E7C8B-9BA7-4F31-8F43-9E9F654E5118@unil.ch>
Message-ID: <20240709101133.395178d6@Tarkus>

? Mon, 8 Jul 2024 15:12:24 +0000
Matei Teleman <matei.teleman at unil.ch> ?????:

> Non-FOSS package license (file LICENSE)

> The license we?re using is the standard CC BY-NC-ND 4.0 and is listed
> among the accepted licenses for CRAN

Instead of putting the license text in a file inside the package (that
would have to match byte by byte in order to be recognised
automatically, or may be subtly different from the original with
potentially drastic legal consequences), use the name of the license
listed at [1]:

License: CC BY-NC-ND 4.0

If you want to keep the full text of the license in your source code
repository, put it in a file that you exclude from the source package
using .Rbuildignore.

I'm assuming you've already seen the CC FAQ [2] that recommends against
using CC licenses for software and chose it because it offers
restrictions for commercial use and distribution of derivatives. Too
bad none of the other licenses at [1] offer the same kind of
restrictions.

>    Suggests or Enhances not in mainstream repositories:
>      velocyto.R

Just making sure: have you provided the instructions for obtaining
velocyto.R in the 'Description' field of the DESCRIPTION file?

-- 
Best regards,
Ivan

[1]
https://svn.r-project.org/R/trunk/share/licenses/license.db

[2]
https://creativecommons.org/faq/#can-i-apply-a-creative-commons-license-to-software


From wo||g@ng@v|echtb@uer @end|ng |rom m@@@tr|chtun|ver@|ty@n|  Tue Jul  9 10:54:22 2024
From: wo||g@ng@v|echtb@uer @end|ng |rom m@@@tr|chtun|ver@|ty@n| (Viechtbauer, Wolfgang (NP))
Date: Tue, 9 Jul 2024 08:54:22 +0000
Subject: [R-pkg-devel] NOTE about lack of prebuilt manual
In-Reply-To: <d1edd1b3-4c28-492d-bf30-877f5d024b8d@statistik.tu-dortmund.de>
References: <d8c9018d-6225-ebd3-9fc5-254c64b20f5c@dewey.myzen.co.uk>
 <CADNULg-t_C0F_MVSNJR0=R3qRZgPVenMo2s5-GACtmUA05cyng@mail.gmail.com>
 <d1edd1b3-4c28-492d-bf30-877f5d024b8d@statistik.tu-dortmund.de>
Message-ID: <AS8PR08MB9193350221722AE50DCA005B8BDB2@AS8PR08MB9193.eurprd08.prod.outlook.com>

Hi Michael,

I assume you are getting this note because you are using mathjaxr. I am also getting this and others have reported the same:

https://github.com/wviechtb/mathjaxr/issues/15

(my response on the forum was a bit premature, since this note eventually did show up for me as well).

This appears to be related to this change (https://cran.r-project.org/doc/manuals/r-devel/NEWS.html):

- tools::checkRd() (used by R CMD check) detects more problems with ?\Sexpr?-based dynamic content, including bad nesting of ?\Sexpr?s and invalid arguments.

which was made in R version 4.4.0. I have submitted an updated metafor version in the meantime despite this note and it was accepted without any problems. Also, while I am getting this note locally, this note does not show up on the CRAN check results:

https://cran.r-project.org/web/checks/check_results_metafor.html

The manual is also available on the CRAN website:

https://cran.r-project.org/package=metafor

and also in the build directory of the tarball (https://cran.r-project.org/src/contrib/metafor_4.6-0.tar.gz).

So, unless CRAN states otherwise, I would suggest to submit the updated versions, burn some incense, pray twenty vectorized hail Rs, and hope for the best.

Best,
Wolfgang

> -----Original Message-----
> From: R-package-devel <r-package-devel-bounces at r-project.org> On Behalf Of Uwe
> Ligges
> Sent: Monday, July 8, 2024 16:40
> To: Iris Simmons <ikwsimmo at gmail.com>; Michael Dewey <lists at dewey.myzen.co.uk>
> Cc: List r-package-devel <r-package-devel at r-project.org>
> Subject: Re: [R-pkg-devel] NOTE about lack of prebuilt manual
>
> On 08.07.2024 16:08, Iris Simmons wrote:
> > This is something I'd run into recently as well.
> >
> > The R devs changed the default from building the manual to not building the
> > manual. Now if you want (or need) to build the manual, you should add
>
> Well, not really, we still build manuals unless file(s) containing
> install/render-stage \Sexpr{}  are present (as in this case).
>
> Best,
> Uwe Ligges
>
> > BuildManual: TRUE
> >
> > to your DESCRIPTION.
> >
> > On Mon, Jul 8, 2024, 10:05 Michael Dewey <lists at dewey.myzen.co.uk> wrote:
> >
> >> Short version
> >>
> >> I have recently tried to update two of my CRAN packages and I am getting
> >> the NOTE from R CMD check --as-cran
> >>
> >> Package has help file(s) containing install/render-stage \Sexpr{}
> >> expressions but no prebuilt PDF manual.
> >>
> >> (It comes on one line in the check.log)
> >>
> >> What am I doing wrong?
> >>
> >> ===================
> >>
> >> More details
> >>
> >> Both packages have lived successfuly on CRAN for some time but my recent
> >> attempts to update lead to the NOTE shown above. I notice that the
> >> version currently on CRAN do have in the tarball a directory called
> >> build which amongst other thing does contain the package manual. However
> >> when I build the updated versions the tarball still contains a build
> >> directory but without the manual.
> >>
> >> I am using 4.4.1 under Windows 10. I open a command line and do
> >> everything from there with R CMD, I do not use any helper package. The
> >> help files do not explicitly contain any instance of \Sexpr{} but they
> >> do contain macros. Both of them use mathjaxr and Rdpack and one also has
> >> some macros written by me. They have been like that for some while. The
> >> Rd files are hand-written, I do not use any package to generate
> >> documentation.
> >>
> >> I notice that R CMD build has an option to turn off the manual but I do
> >> not set that and there does not seem to be a turn on option. I have
> >> looked at the NEWS for R4.4.0 and 4.4.1 but withou enlightenment. The
> >> versions on CRAN were probably generated with R 4.3.3 judgin by the date
> >> when I made them.
> >>
> >> I know it is only a NOTE but I would like to know why it is happening.
> >>
> >> I hope that is enough detail to be helpful but I can expand on any
> >> unclear areas.
> >>
> >> --
> >> Michael

From h@w|ckh@m @end|ng |rom gm@||@com  Tue Jul  9 11:01:21 2024
From: h@w|ckh@m @end|ng |rom gm@||@com (Hadley Wickham)
Date: Tue, 9 Jul 2024 11:01:21 +0200
Subject: [R-pkg-devel] cpp11 and "non-API calls to R"
In-Reply-To: <b73ddb20-bc88-48aa-97a1-266e9db4d4da@email.com>
References: <b73ddb20-bc88-48aa-97a1-266e9db4d4da@email.com>
Message-ID: <CABdHhvGvaWyMuCu3YeXRzA5nSQysi-zpJ3_+kwZCcsJuqCCZiA@mail.gmail.com>

Hi Mark,

The cpp11 package is now maintained by Davis Vaughan and we will release a
new version once the C API status is a little cleaner. This warnings
generated from cpp11 will not interfere with your ability to submit your
package; just let CRAN know that the warnings are coming from cpp11.

Hadley

On Mon, Jul 8, 2024 at 4:25?PM Mark Padgham <mark.padgham at email.com> wrote:

> Dear R-pkg-dev folk,
>
> The cpp11 package, which was developed yet is no longer maintained by
> Jim Hester, now triggers warnings on some CRAN pre-submit checks for
> "non-API calls to R" via "SETLENGTH", "SET_TRUELENGTH", and others. The
> relevant issue is https://github.com/r-lib/cpp11/issues/355, with a pull
> request to resolve at https://github.com/r-lib/cpp11/pull/358. Problem
> is the package is now largely inactive, with the PR hanging there for a
> month or so unattended. I presume this warning means I can not resubmit
> any package depending on cpp11 until this is resolved. But then there
> are currently 75 packages potentially affected by this which would then
> also be unable to be resubmitted. (Follow the links from the main GitHub
> issue for a glimpse of the scale of this problem.)
>
> Any suggestions? In particular, it would be helpful, in this arguably
> unusual and quite prominent case, to hear any views from CRAN folk as to
> whether everybody dependent on cpp11 will have to wait for resolution
> before they'll be able to resubmit? Alternatively, any indication from
> anybody in a position to opine on cpp11 status and future maintenance
> plans would be great!
>
> Thanks,
>
> Mark
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


-- 
http://hadley.nz

	[[alternative HTML version deleted]]


From |kry|ov @end|ng |rom d|@root@org  Tue Jul  9 11:06:11 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Tue, 9 Jul 2024 12:06:11 +0300
Subject: [R-pkg-devel] NOTE about lack of prebuilt manual
In-Reply-To: <AS8PR08MB9193350221722AE50DCA005B8BDB2@AS8PR08MB9193.eurprd08.prod.outlook.com>
References: <d8c9018d-6225-ebd3-9fc5-254c64b20f5c@dewey.myzen.co.uk>
 <CADNULg-t_C0F_MVSNJR0=R3qRZgPVenMo2s5-GACtmUA05cyng@mail.gmail.com>
 <d1edd1b3-4c28-492d-bf30-877f5d024b8d@statistik.tu-dortmund.de>
 <AS8PR08MB9193350221722AE50DCA005B8BDB2@AS8PR08MB9193.eurprd08.prod.outlook.com>
Message-ID: <20240709120611.6e01c078@Tarkus>

? Tue, 9 Jul 2024 08:54:22 +0000
"Viechtbauer, Wolfgang (NP)"
<wolfgang.viechtbauer at maastrichtuniversity.nl> ?????:

> This appears to be related to this change
> (https://cran.r-project.org/doc/manuals/r-devel/NEWS.html):
> 
> - tools::checkRd() (used by R CMD check) detects more problems with
> ?\Sexpr?-based dynamic content, including bad nesting of ?\Sexpr?s
> and invalid arguments.

The exact change was:

r85348 | hornik | 2023-10-18 08:13:46 +0000 (Wed, 18 Oct 2023) | 1 line
Build PDF refman only when explicitly asked for.

--- src/library/tools/R/build.R (revision 85347)
+++ src/library/tools/R/build.R (revision 85348)
@@ -633,7 +633,7 @@
         }

        needRefman <- manual &&
-            parse_description_field(desc, "BuildManual", TRUE) &&
+            parse_description_field(desc, "BuildManual", FALSE) &&
             any(btinfo[, "later"])
        if (needRefman) {
            messageLog(Log, "building the PDF package manual")

So now R CMD build only builds the manual when both BuildManual is set
to yes _and_ there are \Sexpr{}s with [stage=install or render].
(Previously BuildManual: yes was assumed by default.)

Was the motivation for this change to make R CMD build faster for
everyone, with the expectation that the relatively rare package
maintainers with non-[stage=build] \Sexpr{}s will set BuildManual: yes
to adapt?

-- 
Best regards,
Ivan


From ||@t@ @end|ng |rom dewey@myzen@co@uk  Tue Jul  9 12:05:23 2024
From: ||@t@ @end|ng |rom dewey@myzen@co@uk (Michael Dewey)
Date: Tue, 9 Jul 2024 11:05:23 +0100
Subject: [R-pkg-devel] NOTE about lack of prebuilt manual
In-Reply-To: <20240709120611.6e01c078@Tarkus>
References: <d8c9018d-6225-ebd3-9fc5-254c64b20f5c@dewey.myzen.co.uk>
 <CADNULg-t_C0F_MVSNJR0=R3qRZgPVenMo2s5-GACtmUA05cyng@mail.gmail.com>
 <d1edd1b3-4c28-492d-bf30-877f5d024b8d@statistik.tu-dortmund.de>
 <AS8PR08MB9193350221722AE50DCA005B8BDB2@AS8PR08MB9193.eurprd08.prod.outlook.com>
 <20240709120611.6e01c078@Tarkus>
Message-ID: <e20648d9-99bc-85a7-f796-cb4f02251fbf@dewey.myzen.co.uk>

Thank you to, in alphabetical order of given names, Iris, Ivan, Uwe and 
Wolfgang for your responses. I implemented Iris' suggestion and have 
successfully uploaded one of the packages to CRAN.

Michael

On 09/07/2024 10:06, Ivan Krylov wrote:
> ? Tue, 9 Jul 2024 08:54:22 +0000
> "Viechtbauer, Wolfgang (NP)"
> <wolfgang.viechtbauer at maastrichtuniversity.nl> ?????:
> 
>> This appears to be related to this change
>> (https://cran.r-project.org/doc/manuals/r-devel/NEWS.html):
>>
>> - tools::checkRd() (used by R CMD check) detects more problems with
>> ?\Sexpr?-based dynamic content, including bad nesting of ?\Sexpr?s
>> and invalid arguments.
> 
> The exact change was:
> 
> r85348 | hornik | 2023-10-18 08:13:46 +0000 (Wed, 18 Oct 2023) | 1 line
> Build PDF refman only when explicitly asked for.
> 
> --- src/library/tools/R/build.R (revision 85347)
> +++ src/library/tools/R/build.R (revision 85348)
> @@ -633,7 +633,7 @@
>           }
> 
>          needRefman <- manual &&
> -            parse_description_field(desc, "BuildManual", TRUE) &&
> +            parse_description_field(desc, "BuildManual", FALSE) &&
>               any(btinfo[, "later"])
>          if (needRefman) {
>              messageLog(Log, "building the PDF package manual")
> 
> So now R CMD build only builds the manual when both BuildManual is set
> to yes _and_ there are \Sexpr{}s with [stage=install or render].
> (Previously BuildManual: yes was assumed by default.)
> 
> Was the motivation for this change to make R CMD build faster for
> everyone, with the expectation that the relatively rare package
> maintainers with non-[stage=build] \Sexpr{}s will set BuildManual: yes
> to adapt?
> 

-- 
Michael


From |kry|ov @end|ng |rom d|@root@org  Tue Jul  9 12:45:05 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Tue, 9 Jul 2024 13:45:05 +0300
Subject: [R-pkg-devel] Help for understanding CRAN rejection
In-Reply-To: <27503A31-8521-4872-8AF7-C1C9AD548AF2@unil.ch>
References: <9DE1C4C5-3A88-4F75-87CD-7A5CE0F7EAA7@unil.ch>
 <D21E7C8B-9BA7-4F31-8F43-9E9F654E5118@unil.ch>
 <20240709101133.395178d6@Tarkus>
 <27503A31-8521-4872-8AF7-C1C9AD548AF2@unil.ch>
Message-ID: <20240709134505.2cd7a4f4@arachnoid>

(I am adding the mailing list back in Cc: because package licensing is
a complicated topic.)

? Tue, 9 Jul 2024 09:25:14 +0000
Matei Teleman <matei.teleman at unil.ch> ?????:

> I?ve added ? ? SuperCell uses
> [velocyto.R](https://github.com/velocyto-team/velocyto.R) for RNA
> velocity. ? in the Description field. Is that enough or I need also
> to directly give the command line to install the package from GitHub ?

It looks like a link should be fine. Here are a few examples of CRAN
packages that have a non-CRAN/Bioconductor package in Suggests: without
setting up Additional_repositories:

https://CRAN.R-project.org/package=babelmixr2
https://CRAN.R-project.org/package=bandsfdp
https://cran.r-project.org/package=GCD

I'm sorry that I didn't note any of the following in my initial reply,
but what worries me about CC BY-NC-ND specifically is that out of 117
CRAN packages with a Creative Commons license and 18 of those that use
the non-FOSS "NonCommercial" clause, none use the "NoDerivatives"
clause. Your users would probably appreciate being able to install
binary builds of your package from CRAN. Does `R CMD INSTALL --build`
count as creating a derivative work, or is it "merely changing the
format"? Then again, CC BY-NC-ND _is_ mentioned in the list of CRAN
licenses, so it could work.

I found a rejected copy of your package in the archive subdirectory on
the CRAN FTP server and a GitHub repository [*] that seems to be
slightly outdated compared to the archived package. (It's best to link
to up-to-date package sources when seeking help with code.) I'm getting
an additional NOTE:

>> Imports includes 21 non-default packages.
>> Importing from so many packages makes the package vulnerable to any
>> of them becoming unavailable.  Move as many as possible to Suggests
>> and use conditionally.

Is there a way to make some of the currently required dependencies into
conditional dependencies? R CMD check --as-cran sets the limit to 20,
so moving just one package from Imports to Suggests will silence this
particular NOTE.

I see that most of your package size comes from the data subdirectory.
CRAN policy says: "Packages should be of the minimum necessary size.
<...> Neither data nor documentation should exceed 5MB. <...> Where a
large amount of data is required (even after compression),
consideration should be given to a separate data-only package which can
be updated only rarely (since older versions of packages are archived
in perpetuity)."
Is there a way to reduce the size of the data? It's ideal if there's
only enough data to demonstrate how an algorithm works in the
\examples{} section of your documentation and to exercise as much of
your code as feasible in your tests.

Finally, were there any recommendations in the rejection e-mail from
CRAN? Sometimes NOTEs are unavoidable, but we should strive to minimise
them anyway.

-- 
Best regards,
Ivan

[*] https://github.com/GfellerLab/SuperCell


From murdoch@dunc@n @end|ng |rom gm@||@com  Wed Jul 10 14:54:30 2024
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Wed, 10 Jul 2024 08:54:30 -0400
Subject: [R-pkg-devel] =?utf-8?b?VXNlIG9mIOKAmFJfSW5wdXRIYW5kbGVyc+KAmQ==?=
Message-ID: <1fad3e4c-9b05-47af-8687-bf34719b5c38@gmail.com>

An update to the rgl package was rejected with this note:

> * checking compiled code ... NOTE
> File ?rgl/libs/rgl.so?:
>   Found non-API call to R: ?R_InputHandlers?
> 
> Compiled code should not call non-API entry points in R.
> 
> See ?Writing portable packages? in the ?Writing R Extensions? manual,
> and section ?Moving into C API compliance? for issues with the use of
> non-API entry points.

See 
<https://win-builder.r-project.org/incoming_pretest/rgl_1.3.10_20240707_165632/Debian/00check.log> 
for more info.

`R_InputHandlers` isn't actually a function, it's a linked list of 
structures holding input handlers.  rgl links into it to handle mouse 
and keyboard interaction when it is displaying a window in X11.

`R_InputHandlers` is declared in R in src/include/R_ext/eventloop.h, 
where comments state

> /*
>    For use by alternative front-ends and packages which need to share
>    the R event loop (on Unix-alikes).
> 
>    Not part of the API and subject to change without notice.
> 
>    NB: HAVE_SYS_SELECT_H should be checked and defined before this is
>    included.
>  */

WRE has a discussion of the issue in 8.1.4, "meshing event loops".  It 
refers to comments in src/unix/sys-std.c, but I'm not sure which comments.

rgl references it from this code:

https://github.com/dmurdoch/rgl/blob/fbedc326e291c3ec28a9ccac7d030f04b05edfa3/src/x11lib.cpp#L53-L72

Can anyone tell me whether I can fix this?

Duncan Murdoch


From mu@che|||j2 @end|ng |rom gm@||@com  Thu Jul 11 07:08:06 2024
From: mu@che|||j2 @end|ng |rom gm@||@com (John Muschelli)
Date: Thu, 11 Jul 2024 01:08:06 -0400
Subject: [R-pkg-devel] Options "reset" when options(opts)
Message-ID: <CAFsq6G_hyMMdTUJdrgmwRm8HuH_WdsQ7y_nrYLTKUmDsRsMqig@mail.gmail.com>

When setting options in a function, I have always used the following:
  opts <- options()
  on.exit(options(opts), add = TRUE)
and assumed it "reset" options to what they were prior to running the
function.  But for some options that are set to NULL, it does not seem to
reset them.  Specifically, I have found digits.secs to be set after this
simple example below.  Is this expected behavior/documented?  Overall, this
specific example (the one I encountered in the wild) is not that harmful,
but I wanted to ask before I set a fix for this in our work

noset = function() {
  opts = options()
  print(opts$digits.secs)
  on.exit(options(opts))
  options(digits.secs = 3)
}
getOption("digits.secs")
#> NULL
noset()
#> NULL
getOption("digits.secs")
#> [1] 3


John Muschelli, PhD
Associate Research Professor
Department of Biostatistics
Johns Hopkins Bloomberg School of Public Health

	[[alternative HTML version deleted]]


From iuke-tier@ey m@iii@g oii uiow@@edu  Thu Jul 11 08:43:06 2024
From: iuke-tier@ey m@iii@g oii uiow@@edu (iuke-tier@ey m@iii@g oii uiow@@edu)
Date: Thu, 11 Jul 2024 01:43:06 -0500 (CDT)
Subject: [R-pkg-devel] 
 =?iso8859-7?q?=5BExternal=5D__Use_of_=A1R=5FInputH?=
 =?iso8859-7?q?andlers=A2?=
In-Reply-To: <1fad3e4c-9b05-47af-8687-bf34719b5c38@gmail.com>
References: <1fad3e4c-9b05-47af-8687-bf34719b5c38@gmail.com>
Message-ID: <feaa28db-bcc6-b8f4-4687-12934442dd31@uiowa.edu>

On Wed, 10 Jul 2024, Duncan Murdoch wrote:

> An update to the rgl package was rejected with this note:
>
>> * checking compiled code ... NOTE
>> File ?rgl/libs/rgl.so?:
>>   Found non-API call to R: ?R_InputHandlers?
>> 
>> Compiled code should not call non-API entry points in R.
>> 
>> See ?Writing portable packages? in the ?Writing R Extensions? manual,
>> and section ?Moving into C API compliance? for issues with the use of
>> non-API entry points.
>
> See 
> <https://win-builder.r-project.org/incoming_pretest/rgl_1.3.10_20240707_165632/Debian/00check.log> 
> for more info.
>
> `R_InputHandlers` isn't actually a function, it's a linked list of structures 
> holding input handlers.  rgl links into it to handle mouse and keyboard 
> interaction when it is displaying a window in X11.

Ideally the code generating the NOTE should be revised since a few of
the things checked for at that point are global variables, not entry
points.

Given the design of this interface this variable should be added to
the embedding API and dropped from the check list. I have not dropped
it from the check list in R-devel so you should no longer get this
NOTE.

Best,

luke

>
> `R_InputHandlers` is declared in R in src/include/R_ext/eventloop.h, where 
> comments state
>
>> /*
>>    For use by alternative front-ends and packages which need to share
>>    the R event loop (on Unix-alikes).
>>
>>    Not part of the API and subject to change without notice.
>>
>>    NB: HAVE_SYS_SELECT_H should be checked and defined before this is
>>    included.
>>  */
>
> WRE has a discussion of the issue in 8.1.4, "meshing event loops".  It refers 
> to comments in src/unix/sys-std.c, but I'm not sure which comments.
>
> rgl references it from this code:
>
> https://github.com/dmurdoch/rgl/blob/fbedc326e291c3ec28a9ccac7d030f04b05edfa3/src/x11lib.cpp#L53-L72
>
> Can anyone tell me whether I can fix this?
>
> Duncan Murdoch
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu/

From je||er|@ @end|ng |rom gm@||@com  Thu Jul 11 08:49:23 2024
From: je||er|@ @end|ng |rom gm@||@com (Greg Jefferis)
Date: Thu, 11 Jul 2024 07:49:23 +0100
Subject: [R-pkg-devel] Options "reset" when options(opts)
In-Reply-To: <CAFsq6G_hyMMdTUJdrgmwRm8HuH_WdsQ7y_nrYLTKUmDsRsMqig@mail.gmail.com>
References: <CAFsq6G_hyMMdTUJdrgmwRm8HuH_WdsQ7y_nrYLTKUmDsRsMqig@mail.gmail.com>
Message-ID: <46F58CE1-56A2-4540-AEBE-E297B2BF80DA@gmail.com>

Dear John,

You need to collect the return value when setting options. This will include an explicit NULL value for an option that was previously NULL. 

Best,

Greg Jefferis.

options(digits.secs = NULL)

noset2 = function() {
  opts <- options(digits.secs = 3)
  on.exit(options(opts))
  print(opts)
}

> getOption("digits.secs")
NULL
 
> noset2()
$digits.secs
NULL

> getOption("digits.secs")
NULL

Gregory Jefferis
Division of Neurobiology
MRC Laboratory of Molecular Biology
Francis Crick Avenue
Cambridge Biomedical Campus
Cambridge, CB2 OQH, UK

http://www2.mrc-lmb.cam.ac.uk/group-leaders/h-to-m/g-jefferis
http://jefferislab.org
https://www.zoo.cam.ac.uk/research/groups/connectomics


> On 11 Jul 2024, at 06:08, John Muschelli <muschellij2 at gmail.com> wrote:
> 
> When setting options in a function, I have always used the following:
>  opts <- options()
>  on.exit(options(opts), add = TRUE)
> and assumed it "reset" options to what they were prior to running the
> function.  But for some options that are set to NULL, it does not seem to
> reset them.  Specifically, I have found digits.secs to be set after this
> simple example below.  Is this expected behavior/documented?  Overall, this
> specific example (the one I encountered in the wild) is not that harmful,
> but I wanted to ask before I set a fix for this in our work
> 
> noset = function() {
>  opts = options()
>  print(opts$digits.secs)
>  on.exit(options(opts))
>  options(digits.secs = 3)
> }
> getOption("digits.secs")
> #> NULL
> noset()
> #> NULL
> getOption("digits.secs")
> #> [1] 3
> 
> 
> John Muschelli, PhD
> Associate Research Professor
> Department of Biostatistics
> Johns Hopkins Bloomberg School of Public Health
> 
> [[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From d@v|dhughjone@ @end|ng |rom gm@||@com  Thu Jul 11 12:08:48 2024
From: d@v|dhughjone@ @end|ng |rom gm@||@com (David Hugh-Jones)
Date: Thu, 11 Jul 2024 11:08:48 +0100
Subject: [R-pkg-devel] Options "reset" when options(opts)
In-Reply-To: <46F58CE1-56A2-4540-AEBE-E297B2BF80DA@gmail.com>
References: <CAFsq6G_hyMMdTUJdrgmwRm8HuH_WdsQ7y_nrYLTKUmDsRsMqig@mail.gmail.com>
 <46F58CE1-56A2-4540-AEBE-E297B2BF80DA@gmail.com>
Message-ID: <CAARY7kgG8H+nmDDCHfvqPUZyt=MANWQ4VXtcjAGojZZi=UkdSQ@mail.gmail.com>

This surprised me, even though it shouldn?t have done. (My false internal
model of the world was that oo <- options(); ? options(oo) would overwrite
the entire options list with the old values.) I wonder if it would be worth
pointing out explicitly in ?options.

Writing: wyclif.substack.com
Book: www.wyclifsdust.com


On Thu, 11 Jul 2024 at 08:03, Greg Jefferis <jefferis at gmail.com> wrote:

> Dear John,
>
> You need to collect the return value when setting options. This will
> include an explicit NULL value for an option that was previously NULL.
>
> Best,
>
> Greg Jefferis.
>
> options(digits.secs = NULL)
>
> noset2 = function() {
>   opts <- options(digits.secs = 3)
>   on.exit(options(opts))
>   print(opts)
> }
>
> > getOption("digits.secs")
> NULL
>
> > noset2()
> $digits.secs
> NULL
>
> > getOption("digits.secs")
> NULL
>
> Gregory Jefferis
> Division of Neurobiology
> MRC Laboratory of Molecular Biology
> Francis Crick Avenue
> Cambridge Biomedical Campus
> Cambridge, CB2 OQH, UK
>
> http://www2.mrc-lmb.cam.ac.uk/group-leaders/h-to-m/g-jefferis
> http://jefferislab.org
> https://www.zoo.cam.ac.uk/research/groups/connectomics
>
>
> > On 11 Jul 2024, at 06:08, John Muschelli <muschellij2 at gmail.com> wrote:
> >
> > When setting options in a function, I have always used the following:
> >  opts <- options()
> >  on.exit(options(opts), add = TRUE)
> > and assumed it "reset" options to what they were prior to running the
> > function.  But for some options that are set to NULL, it does not seem to
> > reset them.  Specifically, I have found digits.secs to be set after this
> > simple example below.  Is this expected behavior/documented?  Overall,
> this
> > specific example (the one I encountered in the wild) is not that harmful,
> > but I wanted to ask before I set a fix for this in our work
> >
> > noset = function() {
> >  opts = options()
> >  print(opts$digits.secs)
> >  on.exit(options(opts))
> >  options(digits.secs = 3)
> > }
> > getOption("digits.secs")
> > #> NULL
> > noset()
> > #> NULL
> > getOption("digits.secs")
> > #> [1] 3
> >
> >
> > John Muschelli, PhD
> > Associate Research Professor
> > Department of Biostatistics
> > Johns Hopkins Bloomberg School of Public Health
> >
> > [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From ch@|n@@wt|ney @end|ng |rom gm@||@com  Thu Jul 11 16:22:49 2024
From: ch@|n@@wt|ney @end|ng |rom gm@||@com (Chung-hong Chan)
Date: Thu, 11 Jul 2024 16:22:49 +0200
Subject: [R-pkg-devel] cpp11 and "non-API calls to R"
In-Reply-To: <b73ddb20-bc88-48aa-97a1-266e9db4d4da@email.com>
References: <b73ddb20-bc88-48aa-97a1-266e9db4d4da@email.com>
Message-ID: <CAHfK2Mu+U0Yn_e5Cd8hQZ08iS-XBK-zcd2xPzRPVpASVQ2WSHQ@mail.gmail.com>

Not from CRAN, also not in a position to opine on cpp11 status, but I
wrote about it recently. My solution for readODS back then was to
vendor cpp11 and remove the SET_LENGTH call manually, like . But back
then CRAN might not know about this. I think it should be easier now.

https://www.chainsawriot.com/postmannheim/2024/05/26/readods230.html

On Mon, Jul 8, 2024 at 4:25?PM Mark Padgham <mark.padgham at email.com> wrote:
>
> Dear R-pkg-dev folk,
>
> The cpp11 package, which was developed yet is no longer maintained by
> Jim Hester, now triggers warnings on some CRAN pre-submit checks for
> "non-API calls to R" via "SETLENGTH", "SET_TRUELENGTH", and others. The
> relevant issue is https://github.com/r-lib/cpp11/issues/355, with a pull
> request to resolve at https://github.com/r-lib/cpp11/pull/358. Problem
> is the package is now largely inactive, with the PR hanging there for a
> month or so unattended. I presume this warning means I can not resubmit
> any package depending on cpp11 until this is resolved. But then there
> are currently 75 packages potentially affected by this which would then
> also be unable to be resubmitted. (Follow the links from the main GitHub
> issue for a glimpse of the scale of this problem.)
>
> Any suggestions? In particular, it would be helpful, in this arguably
> unusual and quite prominent case, to hear any views from CRAN folk as to
> whether everybody dependent on cpp11 will have to wait for resolution
> before they'll be able to resubmit? Alternatively, any indication from
> anybody in a position to opine on cpp11 status and future maintenance
> plans would be great!
>
> Thanks,
>
> Mark
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From m@te|@te|em@n @end|ng |rom un||@ch  Thu Jul 11 16:50:47 2024
From: m@te|@te|em@n @end|ng |rom un||@ch (Matei Teleman)
Date: Thu, 11 Jul 2024 14:50:47 +0000
Subject: [R-pkg-devel] Help for understanding CRAN rejection
In-Reply-To: <20240709134505.2cd7a4f4@arachnoid>
References: <9DE1C4C5-3A88-4F75-87CD-7A5CE0F7EAA7@unil.ch>
 <D21E7C8B-9BA7-4F31-8F43-9E9F654E5118@unil.ch>
 <20240709101133.395178d6@Tarkus>
 <27503A31-8521-4872-8AF7-C1C9AD548AF2@unil.ch>
 <20240709134505.2cd7a4f4@arachnoid>
Message-ID: <F5BD2414-3FCC-4229-B5EA-DB8CFC412AAC@unil.ch>

Dear Ivan,

Thank you so much for your help.

I followed your advices and I reduced the size of the example data, move one package from Import to Suggest.

The type of the license is unfortunately not depending on me so I?ll try one last time with the CC license and the new improvements.

Thank your again for your time.

Have a nice day!

Best regards,

Matei


> Le 9 juil. 2024 ? 12:45, Ivan Krylov <ikrylov at disroot.org> a ?crit :
> 
> (I am adding the mailing list back in Cc: because package licensing is
> a complicated topic.)
> 
> ? Tue, 9 Jul 2024 09:25:14 +0000
> Matei Teleman <matei.teleman at unil.ch> ?????:
> 
>> I?ve added ? ? SuperCell uses
>> [velocyto.R](https://github.com/velocyto-team/velocyto.R) for RNA
>> velocity. ? in the Description field. Is that enough or I need also
>> to directly give the command line to install the package from GitHub ?
> 
> It looks like a link should be fine. Here are a few examples of CRAN
> packages that have a non-CRAN/Bioconductor package in Suggests: without
> setting up Additional_repositories:
> 
> https://CRAN.R-project.org/package=babelmixr2
> https://CRAN.R-project.org/package=bandsfdp
> https://cran.r-project.org/package=GCD
> 
> I'm sorry that I didn't note any of the following in my initial reply,
> but what worries me about CC BY-NC-ND specifically is that out of 117
> CRAN packages with a Creative Commons license and 18 of those that use
> the non-FOSS "NonCommercial" clause, none use the "NoDerivatives"
> clause. Your users would probably appreciate being able to install
> binary builds of your package from CRAN. Does `R CMD INSTALL --build`
> count as creating a derivative work, or is it "merely changing the
> format"? Then again, CC BY-NC-ND _is_ mentioned in the list of CRAN
> licenses, so it could work.
> 
> I found a rejected copy of your package in the archive subdirectory on
> the CRAN FTP server and a GitHub repository [*] that seems to be
> slightly outdated compared to the archived package. (It's best to link
> to up-to-date package sources when seeking help with code.) I'm getting
> an additional NOTE:
> 
>>> Imports includes 21 non-default packages.
>>> Importing from so many packages makes the package vulnerable to any
>>> of them becoming unavailable.  Move as many as possible to Suggests
>>> and use conditionally.
> 
> Is there a way to make some of the currently required dependencies into
> conditional dependencies? R CMD check --as-cran sets the limit to 20,
> so moving just one package from Imports to Suggests will silence this
> particular NOTE.
> 
> I see that most of your package size comes from the data subdirectory.
> CRAN policy says: "Packages should be of the minimum necessary size.
> <...> Neither data nor documentation should exceed 5MB. <...> Where a
> large amount of data is required (even after compression),
> consideration should be given to a separate data-only package which can
> be updated only rarely (since older versions of packages are archived
> in perpetuity)."
> Is there a way to reduce the size of the data? It's ideal if there's
> only enough data to demonstrate how an algorithm works in the
> \examples{} section of your documentation and to exercise as much of
> your code as feasible in your tests.
> 
> Finally, were there any recommendations in the rejection e-mail from
> CRAN? Sometimes NOTEs are unavoidable, but we should strive to minimise
> them anyway.
> 
> -- 
> Best regards,
> Ivan
> 
> [*] https://github.com/GfellerLab/SuperCell


From vo|ody@ @end|ng |rom m|nd@pr|ng@com  Thu Jul 11 20:22:07 2024
From: vo|ody@ @end|ng |rom m|nd@pr|ng@com (Vladimir Dergachev)
Date: Thu, 11 Jul 2024 14:22:07 -0400 (EDT)
Subject: [R-pkg-devel] Options "reset" when options(opts)
In-Reply-To: <CAARY7kgG8H+nmDDCHfvqPUZyt=MANWQ4VXtcjAGojZZi=UkdSQ@mail.gmail.com>
References: <CAFsq6G_hyMMdTUJdrgmwRm8HuH_WdsQ7y_nrYLTKUmDsRsMqig@mail.gmail.com>
 <46F58CE1-56A2-4540-AEBE-E297B2BF80DA@gmail.com>
 <CAARY7kgG8H+nmDDCHfvqPUZyt=MANWQ4VXtcjAGojZZi=UkdSQ@mail.gmail.com>
Message-ID: <alpine.DEB.2.22.394.2407111415420.11778@iridium>



On Thu, 11 Jul 2024, David Hugh-Jones wrote:

> This surprised me, even though it shouldn?t have done. (My false internal
> model of the world was that oo <- options(); ? options(oo) would overwrite
> the entire options list with the old values.) I wonder if it would be worth
> pointing out explicitly in ?options.

Arguably, it would be nice to have a parameter like "reset", so 
that one can call

options(oo, reset=TRUE)

and any options not explicitly passed by oo are set to NULL.

This way there are two modes of operation - bulk setting of subset of 
options with reset=FALSE, and restoring full options set with reset=TRUE.

best

Vladimir Dergachev

>
> Writing: wyclif.substack.com
> Book: www.wyclifsdust.com
>
>
> On Thu, 11 Jul 2024 at 08:03, Greg Jefferis <jefferis at gmail.com> wrote:
>
>> Dear John,
>>
>> You need to collect the return value when setting options. This will
>> include an explicit NULL value for an option that was previously NULL.
>>
>> Best,
>>
>> Greg Jefferis.
>>
>> options(digits.secs = NULL)
>>
>> noset2 = function() {
>>   opts <- options(digits.secs = 3)
>>   on.exit(options(opts))
>>   print(opts)
>> }
>>
>>> getOption("digits.secs")
>> NULL
>>
>>> noset2()
>> $digits.secs
>> NULL
>>
>>> getOption("digits.secs")
>> NULL
>>
>> Gregory Jefferis
>> Division of Neurobiology
>> MRC Laboratory of Molecular Biology
>> Francis Crick Avenue
>> Cambridge Biomedical Campus
>> Cambridge, CB2 OQH, UK
>>
>> http://www2.mrc-lmb.cam.ac.uk/group-leaders/h-to-m/g-jefferis
>> http://jefferislab.org
>> https://www.zoo.cam.ac.uk/research/groups/connectomics
>>
>>
>>> On 11 Jul 2024, at 06:08, John Muschelli <muschellij2 at gmail.com> wrote:
>>>
>>> When setting options in a function, I have always used the following:
>>>  opts <- options()
>>>  on.exit(options(opts), add = TRUE)
>>> and assumed it "reset" options to what they were prior to running the
>>> function.  But for some options that are set to NULL, it does not seem to
>>> reset them.  Specifically, I have found digits.secs to be set after this
>>> simple example below.  Is this expected behavior/documented?  Overall,
>> this
>>> specific example (the one I encountered in the wild) is not that harmful,
>>> but I wanted to ask before I set a fix for this in our work
>>>
>>> noset = function() {
>>>  opts = options()
>>>  print(opts$digits.secs)
>>>  on.exit(options(opts))
>>>  options(digits.secs = 3)
>>> }
>>> getOption("digits.secs")
>>> #> NULL
>>> noset()
>>> #> NULL
>>> getOption("digits.secs")
>>> #> [1] 3
>>>
>>>
>>> John Muschelli, PhD
>>> Associate Research Professor
>>> Department of Biostatistics
>>> Johns Hopkins Bloomberg School of Public Health
>>>
>>> [[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

From @@j5xsj9 m@iii@g oii @iiiy@@ddy@io  Thu Jul 11 22:58:53 2024
From: @@j5xsj9 m@iii@g oii @iiiy@@ddy@io (@@j5xsj9 m@iii@g oii @iiiy@@ddy@io)
Date: Thu, 11 Jul 2024 20:58:53 +0000
Subject: [R-pkg-devel] Properly referencing copied code
Message-ID: <674a7e3cebc4e094859594fcbfcdc289@nilly.addy.io>

I'm trying to submit a package to CRAN that uses external C libs but properly crediting copyright holders and authors is the main issue holding up the submission and I've repeatedly failed to satisfy the requirements. I am having a lot of trouble understanding what/who I need to be listing in my DESCRIPTION file and how they should be listed.

1. How does linking to external libs differ from providing the source of a library and linking against that? Do I need to provide references to lapack and blas if they aren't shipped with the package? What about math (lm)?

2. What roles to supply to authors of external software? After my last submission, I got the note:
> Has copyright holders of included software in a [ctb] role only

From the CRAN Repository Policy file:
>Where code is copied (or derived) from the work of others (including from R itself), care must be taken that any copyright/license statements are preserved and authorship is not misrepresented.
>Preferably, an ?Authors at R? field would be used with ?ctb? roles for the authors of such code. Alternatively, the ?Author? field should list these authors as contributors.
>
>Where copyrights are held by an entity other than the package authors, this should preferably be indicated via ?cph? roles in the ?Authors at R? field, or using a ?Copyright? field (if necessary referring to an inst/COPYRIGHTS file).

My interpretation of the CRAN policy is that the role 'cph' should be used only for "entities other than the package authors" and therefore authors should only get 'ctb'. Do I need to differentiate between authors with explicit copyrights `c('ctb', 'cph')` vs those who are authors but are not listed as copyright holders `c('ctb')` in the third party source? Or just give everyone both?

3. One of my dependencies has a lot of copyright holders throughout the source. Most of these are for individual functions and cmake files that are not directly used by my package. What is the best way to handle this? Add as much of the unused parts of the third party package to the .Rbuildignore file as possible to filter out the unused parts? (Many copyrights are from parts of the package that are independent on the parts I used so for example ignore an unused vendor package seems reasonable but what about hand picking the main source files that are actually compiled to avoid copyrights?) Or list all of the authors/copyrights in the my DESCRIPTION file?

4. Is there a better place to put all these authors? The author list has already gotten large and I still have many more to add. I've seen use of an `AUTHOR-list.md` in packages but I don't see this mentioned in official documentation. In the previous quotation from CRAN's policy document, it mentions the possible use of a `inst/COPYRIGHTS` file that is referenced in the DESCRIPTION. Is there an equivalent for authors? Is it preferred to just put everything in DESCRIPTION instead?

- DRC
	[[alternative HTML version deleted]]


From |kry|ov @end|ng |rom d|@root@org  Fri Jul 12 10:07:41 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Fri, 12 Jul 2024 11:07:41 +0300
Subject: [R-pkg-devel] Properly referencing copied code
In-Reply-To: <674a7e3cebc4e094859594fcbfcdc289@nilly.addy.io>
References: <674a7e3cebc4e094859594fcbfcdc289@nilly.addy.io>
Message-ID: <20240712110741.5ba1a154@Tarkus>

? Thu, 11 Jul 2024 20:58:53 +0000
DRC via R-package-devel <r-package-devel at r-project.org> ?????:

> 1. How does linking to external libs differ from providing the source
> of a library and linking against that?

I think that the author information in the DESCRIPTION is about what
your package provides by itself, not everything that may end up in the
address space once the package is loaded. Since CRAN prefers
self-contained packages, we end up including them in our packages
(unless the third-party library is already very common and present in
RTools & macOS recipes & common GNU/Linux distros), which requires us
to specify their authors.

> Do I need to provide references to lapack and blas if they aren't
> shipped with the package? What about math (lm)?

No.

> 2. What roles to supply to authors of external software?

> Do I need to differentiate between authors with explicit copyrights
> `c('ctb', 'cph')` vs those who are authors but are not listed as
> copyright holders `c('ctb')` in the third party source? Or just give
> everyone both?

I would expect most authors and contributors to be copyright holders
too, but it must be possible to contribute without providing patches
and becoming one. E.g. a project might recognise a tester and bug
reporter as a full author, but there is no code that they own any
copyright on.

> 3. One of my dependencies has a lot of copyright holders throughout
> the source. Most of these are for individual functions and cmake
> files that are not directly used by my package. What is the best way
> to handle this? Add as much of the unused parts of the third party
> package to the .Rbuildignore file as possible to filter out the
> unused parts?

If it's feasible to implement, omitting unused files from the tarball
is a good idea.

> 4. Is there a better place to put all these authors? The author list
> has already gotten large and I still have many more to add.

CRAN recognises inst/AUTHORS. Here's a recently released package with
no obvious problems that makes use of it:
https://CRAN.R-project.org/package=xlcharts

We should probably document it somewhere.

-- 
Best regards,
Ivan


From d@|@ger @end|ng |rom |redhutch@org  Fri Jul 12 17:02:55 2024
From: d@|@ger @end|ng |rom |redhutch@org (Slager, Dave)
Date: Fri, 12 Jul 2024 15:02:55 +0000
Subject: [R-pkg-devel] relative vignette paths across CRAN check flavors
Message-ID: <SA3PR11MB7626D6A3515F654EDC2AEEDEB3A62@SA3PR11MB7626.namprd11.prod.outlook.com>

Hi,

Do the r-oldrel-macos-* CRAN check servers use a different setting that affects how vignette paths work? These two flavors seem less robust to relative vignette paths than other flavors, and I haven't been able to figure out why by looking at the descriptions of the flavors or the R CMD check output. For example, see:

https://cran.r-project.org/web/checks/check_results_PieGlyph.html
https://cran.r-project.org/web/checks/check_results_APCalign.html
https://cran.r-project.org/web/checks/check_results_agua.html
https://cran.r-project.org/web/checks/check_results_cleanepi.html
https://cran.r-project.org/web/checks/check_results_hardhat.html
https://cran.r-project.org/web/checks/check_results_IncidencePrevalence.html
https://cran.r-project.org/web/checks/check_results_metajam.html
https://cran.r-project.org/web/checks/check_results_ulrb.html

Thanks,
Dave


From @@j5xsj9 m@iii@g oii @iiiy@@ddy@io  Fri Jul 12 22:17:22 2024
From: @@j5xsj9 m@iii@g oii @iiiy@@ddy@io (@@j5xsj9 m@iii@g oii @iiiy@@ddy@io)
Date: Fri, 12 Jul 2024 20:17:22 +0000
Subject: [R-pkg-devel] Properly referencing copied code
In-Reply-To: <20240712110741.5ba1a154@Tarkus>
References: <674a7e3cebc4e094859594fcbfcdc289@nilly.addy.io>
 <20240712110741.5ba1a154@Tarkus>
Message-ID: <de459413e13d404a61c1722ad3d19bd7@nilly.addy.io>

Thanks that helps. Are there any thoughts on the feedback I was given? I'm still a bit confused on the note:

> Has copyright holders of included software in a [ctb] role only

I think I'm being asked to add the cph role to essentially every author in addition to ctp but that doesn't seem to be what the CRAN policy wants and I still don't know how to decide who gets both. Right now there are several people who have explicit copyright over certain code so I would think just add cph to all those authors? Or just give everyone cph who isn't a minor contributor?

?- DRC

On Friday, July 12th, 2024 at 3:07 AM, Ivan Krylov 'ikrylov at disroot.org' <anj5xsj9+ikrylov=disroot.org at nilly.addy.io> wrote:

> 
> ? Thu, 11 Jul 2024 20:58:53 +0000
> DRC via R-package-devel r-package-devel at r-project.org ?????:
> 
> > 1. How does linking to external libs differ from providing the source
> > of a library and linking against that?
> 
> 
> I think that the author information in the DESCRIPTION is about what
> your package provides by itself, not everything that may end up in the
> address space once the package is loaded. Since CRAN prefers
> self-contained packages, we end up including them in our packages
> (unless the third-party library is already very common and present in
> RTools & macOS recipes & common GNU/Linux distros), which requires us
> to specify their authors.
> 
> > Do I need to provide references to lapack and blas if they aren't
> > shipped with the package? What about math (lm)?
> 
> 
> No.
> 
> > 2. What roles to supply to authors of external software?
> 
> > Do I need to differentiate between authors with explicit copyrights
> > `c('ctb', 'cph')` vs those who are authors but are not listed as
> > copyright holders `c('ctb')` in the third party source? Or just give
> > everyone both?
> 
> 
> I would expect most authors and contributors to be copyright holders
> too, but it must be possible to contribute without providing patches
> and becoming one. E.g. a project might recognise a tester and bug
> reporter as a full author, but there is no code that they own any
> copyright on.
> 
> > 3. One of my dependencies has a lot of copyright holders throughout
> > the source. Most of these are for individual functions and cmake
> > files that are not directly used by my package. What is the best way
> > to handle this? Add as much of the unused parts of the third party
> > package to the .Rbuildignore file as possible to filter out the
> > unused parts?
> 
> 
> If it's feasible to implement, omitting unused files from the tarball
> is a good idea.
> 
> > 4. Is there a better place to put all these authors? The author list
> > has already gotten large and I still have many more to add.
> 
> 
> CRAN recognises inst/AUTHORS. Here's a recently released package with
> no obvious problems that makes use of it:
> https://CRAN.R-project.org/package=xlcharts
> 
> We should probably document it somewhere.
> 
> --
> Best regards,
> Ivan


From @|mon@urb@nek @end|ng |rom R-project@org  Sat Jul 13 12:24:36 2024
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Sat, 13 Jul 2024 12:24:36 +0200
Subject: [R-pkg-devel] Properly referencing copied code
In-Reply-To: <20240712110741.5ba1a154@Tarkus>
References: <674a7e3cebc4e094859594fcbfcdc289@nilly.addy.io>
 <20240712110741.5ba1a154@Tarkus>
Message-ID: <65BF00D9-1C0F-403F-A221-5A58796E843B@R-project.org>



> On 12 Jul 2024, at 10:07, Ivan Krylov via R-package-devel <r-package-devel at r-project.org> wrote:
> 
> ? Thu, 11 Jul 2024 20:58:53 +0000
> DRC via R-package-devel <r-package-devel at r-project.org> ?????:
> 
>> 1. How does linking to external libs differ from providing the source
>> of a library and linking against that?
> 
> I think that the author information in the DESCRIPTION is about what your package provides by itself, not everything that may end up in the address space once the package is loaded. Since CRAN prefers self-contained packages, we end up including them in our packages (unless the third-party library is already very common and present in RTools & macOS recipes & common GNU/Linux distros), which requires us to specify their authors.
> 


To clarify: as far as CRAN is concerned you only need to include sources that are otherwise not commonly available - or if you need to modify them for the purpose of the package, so it should be quite rare. In fact the CRAN policy states that a package should always look for an available library first. If we just are talking about libraries then a very rough rule of thumb is that if your dependent library is in Debian then you don't need to ship it as sources.

That said, if you are using something that is not in the current Rtools/recipes then you have to tell CRAN so we can be add it to macOS and Windows toolchains (assuming both are supported by the library you need) - but that doesn't mean you should ship them yourself (in fact that tends to cause a lot more problems).

Cheers,
Simon


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Sat Jul 13 16:04:46 2024
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Sat, 13 Jul 2024 16:04:46 +0200
Subject: [R-pkg-devel] Properly referencing copied code
In-Reply-To: <65BF00D9-1C0F-403F-A221-5A58796E843B@R-project.org>
References: <674a7e3cebc4e094859594fcbfcdc289@nilly.addy.io>
 <20240712110741.5ba1a154@Tarkus>
 <65BF00D9-1C0F-403F-A221-5A58796E843B@R-project.org>
Message-ID: <41e0e9ee-3613-448c-992a-cf11db3b17d3@gmail.com>


On 7/13/24 12:24, Simon Urbanek wrote:
>
>> On 12 Jul 2024, at 10:07, Ivan Krylov via R-package-devel <r-package-devel at r-project.org> wrote:
>>
>> ? Thu, 11 Jul 2024 20:58:53 +0000
>> DRC via R-package-devel <r-package-devel at r-project.org> ?????:
>>
>>> 1. How does linking to external libs differ from providing the source
>>> of a library and linking against that?
>> I think that the author information in the DESCRIPTION is about what your package provides by itself, not everything that may end up in the address space once the package is loaded. Since CRAN prefers self-contained packages, we end up including them in our packages (unless the third-party library is already very common and present in RTools & macOS recipes & common GNU/Linux distros), which requires us to specify their authors.
>>
>
> To clarify: as far as CRAN is concerned you only need to include sources that are otherwise not commonly available - or if you need to modify them for the purpose of the package, so it should be quite rare. In fact the CRAN policy states that a package should always look for an available library first. If we just are talking about libraries then a very rough rule of thumb is that if your dependent library is in Debian then you don't need to ship it as sources.
>
> That said, if you are using something that is not in the current Rtools/recipes then you have to tell CRAN so we can be add it to macOS and Windows toolchains (assuming both are supported by the library you need) - but that doesn't mean you should ship them yourself (in fact that tends to cause a lot more problems).

And you can indeed help with adding such library to Rtools/recipes. In 
case of Rtools, ideally first add it upstream to MXE.

Best
Tomas

>
> Cheers,
> Simon
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


