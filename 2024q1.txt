From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Tue Jan  2 13:59:13 2024
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Tue, 2 Jan 2024 13:59:13 +0100
Subject: [R-pkg-devel] CRAN submission struggle
In-Reply-To: <CAAS8PAKctuyYkXYRenUK+XqwgPeY_F09aK=b-dRYS6HV4GoMPQ@mail.gmail.com>
References: <CABuTGP4PHvRLjhih=7V=EuVmWV-zyXPbmjSr5TnxEF76UXdUCw@mail.gmail.com>
 <20231216210737.5ea551d1@Tarkus>
 <CABuTGP4Opm_b0N_T1sLeTKPv4oNA4LMMOOMjyBfejRtCGg1BqA@mail.gmail.com>
 <20231217170639.7376f8c3@Tarkus>
 <CABuTGP6YP3XhFtYo5PcNcu0yfNPbQWHVvyzFAyeyRsk7CX0EHA@mail.gmail.com>
 <20231218120148.51339325@Tarkus>
 <CABuTGP61Ex1mjz0hxyEJdsAvWTqrQwkPRSyeSwTrcDCGm4qM0A@mail.gmail.com>
 <20231218221521.351314e1@Tarkus>
 <CABuTGP4R9gCxPB_wJNoR3A1F4oJx3GSKSXd8=Z83esKhNVu=Tg@mail.gmail.com>
 <20231218232233.75e450c9@parabola>
 <CABuTGP48FCN5DPmdLfgXVOD0ZWjKtPXMt817fLmP7xtcVSZv0g@mail.gmail.com>
 <20231219003331.4e822ba7@Tarkus>
 <CABuTGP5yOhT-iE5fFxWEeEXSzJPJPg_33tqxjvnak_TYC2frfw@mail.gmail.com>
 <20231228165509.189879dd@arachnoid>
 <CABuTGP5xk58SFEN7ib5qPe9o6zKYfxoDhEn8kHd7Cx2UTz=OCw@mail.gmail.com>
 <CAAS8PAKctuyYkXYRenUK+XqwgPeY_F09aK=b-dRYS6HV4GoMPQ@mail.gmail.com>
Message-ID: <8235587f-f936-4010-8bde-768eba54384b@statistik.tu-dortmund.de>



On 29.12.2023 09:13, Greg Hunt wrote:
> Christaan,
> The elapsed time note is because CRAN expects that examples will be
> configured to run single threaded and some package that you use, or a
> package used by a package that you use is multi-threading by default and
> using more CPU time than clock time. If you cannot figure out how to
> reconfigure the multi-threaded package, a number of people have found that
> the simplest thing to do is disable running the example (which reduces the
> effective test coverage provided by the example).


No and no:

1.
       user system elapsed
IOPS 10.06   3.35   35.04

suggests that either the machines this ran on is heavily loaded (so that 
elapsed >> user) or something is waiting like some internet access. [For 
multithreading it would be user > elapsed.]

2. The solution is not to exclude examples ebtirely, as we need runtime 
checks.

For internet access: Set a timeout and let the exampe fail gracefully in 
case web access takes more than, e.g., 2. sec.

In general: Please reduce each example to less than 5 sec.

So use small toy examples. If you really want to add rel world examples 
that may take longer, then add them in addition to toy examples and wrap 
in \donttest{}.

Best,
Uwe Ligges








> 
> I haven?t encountered the miktex exception file before but i suspect its a
> side effect of a miktex error. Packages should not leave files behind in
> the temp directory. If you expect a miktex error you need to remove the
> file. If you don?t you need to track down and fix or work around the bug.
> The build process is really a quality check on your package.
> 
> Greg
> 
> On Fri, 29 Dec 2023 at 3:01?am, Christiaan Pieterse <
> pietie.cjp.1908 at gmail.com> wrote:
> 
>> Hi,
>>
>> Thank you for showing the difference in the ExampleTradeData. I've fixed
>> this by adding a .Gitignore file and a "data-raw" folder to load the
>> ExampleTradeData. I hope I did this correctly. When I check the package (
>> https://github.com/WoutersResearchGroup/R-IO-PS/tree/CRAN-prep) in
>> RStudio.
>> I only get 3 notes (see below), and if I run it in PositCloud, it crashes
>> or yields the same 1 ERROR and 2 NOTES result as before. Why might this be?
>> Is it a problem or is it fine if I continue working in RStudio since I
>> cannot increase the specs in PositCloud because I'm working on a research
>> group account?
>>
>> Here are the 3 notes I receive in RStudio:
>>
>> The first is the expected New Submission Note.
>>
>> The second is the runtime that is too long:
>> * checking examples ... [43s] NOTE
>> Examples with CPU (user + system) or elapsed time > 5s
>>        user system elapsed
>> IOPS 10.06   3.35   35.04
>> How can I reduce this time? I'm not sure how to reduce the size of my
>> ExampleTradeData without the check giving errors when running the example.
>>
>> The third note I am unsure what it means:
>> * checking for detritus in the temp directory ... NOTE
>> Found the following files/directories:
>>    'lastMiKTeXException'
>>
>> Kind regards
>> Christiaan
>>
>> On Thu, 28 Dec 2023 at 15:55, Ivan Krylov <krylov.r00t at gmail.com> wrote:
>>
>>> Hi Christiaan,
>>>
>>> ? Thu, 28 Dec 2023 14:57:55 +0200
>>> Christiaan Pieterse <pietie.cjp.1908 at gmail.com> ?????:
>>>
>>>> Still, I couldn't figure out why I ran into this problem, so I
>>>> created a test file called "Test Example.R" (available at the same
>>>> GitHub repository:
>>>> https://github.com/WoutersResearchGroup/R-IO-PS/tree/CRAN-prep).
>>>
>>> I see you're always adding or updating files to the GitHub repo by
>>> means of uploading. While that's certainly one way to use GitHub, it's
>>> combines the least convenient aspects of two approaches to using GitHub.
>>>
>>> With GitHub purely in the browser, GitHub is just a website where you
>>> keep and edit code, running nothing else on the local computer. Code
>>> can be run in Codespaces or using GitHub Actions. Microsoft will want
>>> to be paid money to run code on their computers.
>>>
>>> With GitHub as a Git remote, there is a local checkout [*] that's kept
>>> in sync with GitHub by means of commits [**] and pushes [***], letting
>>> you create meaningful, describable snapshots of changes in your code
>>> spanning multiple files at the same time.
>>>
>>> Right now, it probably feels like Dropbox but worse.
>>>
>>>> This file creates the function in the global environment (note that
>>>> this is the same function code as available in the package
>>>> "R/iopspackage2.0.R" file), and then runs this function with the same
>>>> example as in the package (If you want to try this yourself, just
>>>> load the data/ExampleTradeData.rda in before running the Test Example
>>>> file). This test file yields no errors when I run it and produces the
>>>> correct results. When I then proceed to build and check the package,
>>>> it yields the same example error as before. I do not understand why
>>>> or what could cause this issue.
>>>
>>> The difference is in the ExampleTradeData variable, which "Test
>>> Example.R" doesn't define.
>>>
>>> With data(ExampleTradeData), the script works.
>>>
>>> With ExampleTradeData <-
>>>
>>>
>> read.csv(system.file("extdata","ExampleTradeData.csv",package="iopspackage")),
>>> the script fails exactly the same way as example(IOPS) does.
>>>
>>>> I'm not sure if I should send out another email to the developers to
>>>> see if someone else spots something I'm not seeing.
>>>
>>> It may help to keep Cc: r-package-devel at r-project.org in the e-mails
>>> for the search engines to index the potential solutions in the mailing
>>> list archives.
>>>
>>> --
>>> Best regards,
>>> Ivan
>>>
>>> [*]
>>> https://git-scm.com/book/en/v2/Git-Basics-Getting-a-Git-Repository
>>>
>>> [**]
>>>
>>>
>> https://git-scm.com/book/en/v2/Git-Basics-Recording-Changes-to-the-Repository
>>>
>>> [***]
>>> https://git-scm.com/book/en/v2/Git-Basics-Working-with-Remotes
>>>
>>
>>          [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

From ke||ey @end|ng |rom d@|@c@  Wed Jan  3 14:34:27 2024
From: ke||ey @end|ng |rom d@|@c@ (Daniel Kelley)
Date: Wed, 3 Jan 2024 13:34:27 +0000
Subject: [R-pkg-devel] how to use pkgdown::build_site() with a project using
 S7 with a specialized plot()?
Message-ID: <99119974-B153-4584-A974-C4E423D3DB83@dal.ca>

# Question

Is there an online example online of specializing `plot()` for S7 objects, such that `pkgdown::build_site()` will produce webpages?  I ask because I find lots of users (of other packages) tend to consult websites made with pkgdown, rather than using the online help within R.  I think the problem I am having (discussed in the following sections) has to do with my specialization of plot().  I say that because when I was using S3 objects in an earlier version of my package, `pkgdown::build_site()` worked as intended.

# Background

In my 'mooring' package (https://github.com/dankelley/mooring/tree/S7), I am writing code like (https://github.com/dankelley/mooring/blob/f70b53ca12e88968f65710c205b50a64f750a99d/R/plot.R#L69)

```R
#' @aliases plot.mooring
#' ETC
`plot.mooring::mooring` <- plot(ETC) ETC
```

to handle objects made with (https://github.com/dankelley/mooring/blob/f70b53ca12e88968f65710c205b50a64f750a99d/R/oo.R#L2)

```R
mooringS7 <- S7::new_class("mooring",
    package = "mooring",
ETC
```

Built up in Rstudio, with Roxygen2 being used to create documentation, things seem to work, e.g.

```R
m <- mooring(anchor(), wire(length = 80), float(), waterDepth = 100)
plot(m)
```

produces a plot as intended, and

```R
?plot.mooring
```

produces documentation as intended.

*However* I encounter a problem comes when I try building a website with

```R
pkgdown::build_site()
```

This yields results as in the next section.  (I apologize for the length. I'm including the whole thing because I thought that would be less bothersome than writing another email to the list.)

I am not sure how to find the problem, and so I hope that someone on this list can point out an example of how to set up `plot()` to work with S7 objects, in such a way that documentation can be created with Roxygen2 and websites can be made with `pkgdown::build_site()`.

# What pkgdown::build_site() gives

```
> library(pkgdown)
> build_site()
Warning: Failed to parse usage:

S3method(`plot`, ``mooring::mooring``)(
  x,
  which = "shape",
  showInterfaces = TRUE,
  showDepths = FALSE,
  showLabels = TRUE,
  showDetails = FALSE,
  fancy = FALSE,
  title = "",
  mar = c(1.5, 3.5, 3.5, 1),
  mgp = c(2, 0.7, 0),
  xlim = NULL,
  xaxs = "r",
  yaxs = "r",
  type = "l",
  debug = 0,
  ...
)

-- Installing package into temporary library ----------------
== Building pkgdown site =======================================================
Reading from: '/Users/kelley/git/mooring'
Writing to:   '/Users/kelley/git/mooring/docs'
-- Initialising site -----------------------------------------------------------
-- Building home ---------------------------------------------------------------
Writing '404.html'
-- Building function reference -------------------------------------------------
Error: 
! in callr subprocess.
Caused by error in `map2(.x, vec_index(.x), .f, ...)`:
! In index: 1.
? See `$stdout` for standard output.
Type .Last.error to see the more details.
> .Last.error
<callr_error/rlib_error_3_0/rlib_error/error>
Error: 
! in callr subprocess.
Caused by error in `map2(.x, vec_index(.x), .f, ...)`:
! In index: 1.
? See `$stdout` for standard output.
---
Backtrace:
1. pkgdown::build_site()
2. pkgdown:::build_site_external(pkg = pkg, examples = examples, run?
3. callr::r(function(..., cli_colors, pkgdown_internet) { ?
4. callr:::get_result(output = out, options)
5. callr:::throw(callr_remote_error(remerr, output), parent = fix_?
---
Subprocess backtrace:
 1. pkgdown::build_site(...)
 2. pkgdown:::build_site_local(pkg = pkg, examples = examples, run_do?
 3. pkgdown::build_reference(pkg, lazy = lazy, examples = examples, ?
 4. pkgdown::build_reference_index(pkg)
 5. pkgdown::render_page(pkg, "reference-index", data = data_referen?
 6. pkgdown:::render_page_html(pkg, name = name, data = data, depth =?
 7. utils::modifyList(data_template(pkg, depth = depth), da?
 8. base::stopifnot(is.list(x), is.list(val))
 9. pkgdown:::data_reference_index(pkg)
10. meta %>% purrr::imap(data_reference_index_rows, pkg = p?
11. base::unlist(., recursive = FALSE)
12. purrr::compact(.)
13. purrr::discard(.x, function(x) is_empty(.f(x)))
14. purrr:::where_if(.x, .p, ...)
15. purrr:::map_(.x, .p, ..., .type = "logical", .purrr_error_call ?
16. purrr:::vctrs_vec_compat(.x, .purrr_user_env)
17. purrr::imap(., data_reference_index_rows, pkg = pkg)
18. purrr::map2(.x, vec_index(.x), .f, ...)
19. purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
20. purrr:::with_indexed_errors(i = i, names = names, error_call = ?
21. base::withCallingHandlers(expr, error = function(cnd) { ?
22. purrr:::call_with_cleanup(map2_impl, environment(), .type, .pro?
23. local .f(.x[[i]], .y[[i]], ...)
24. pkgdown:::section_topics(section$contents, pkg$topics, pkg$src_pa?
25. base::rbind(topics, ext_topics(ext_strings))
26. base::rbind(deparse.level, ...)
27. pkgdown:::ext_topics(ext_strings)
28. purrr::map2(pkg, fun, get_rd_from_help)
29. purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
30. purrr:::with_indexed_errors(i = i, names = names, error_call = ?
31. base::withCallingHandlers(expr, error = function(cnd) { ?
32. purrr:::call_with_cleanup(map2_impl, environment(), .type, .pro?
33. local .f(.x[[i]], .y[[i]], ...)
34. rlang::check_installed(package, "as it's used in the reference?
35. base::stop(cnd)
36. (function (cnd) ?
37. cli::cli_abort(message, location = i, name = name, pare?
38. | rlang::abort(message, ..., call = call, use_cli_format ?
39. | rlang:::signal_abort(cnd, .file)
40. | base::signalCondition(cnd)
41. (function (cnd) ?
42. cli::cli_abort(message, location = i, name = name, pare?
43. | rlang::abort(message, ..., call = call, use_cli_format ?
44. | rlang:::signal_abort(cnd, .file)
45. | base::signalCondition(cnd)
46. global (function (e) ?
```


From kry|ov@r00t @end|ng |rom gm@||@com  Wed Jan  3 15:01:20 2024
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Wed, 3 Jan 2024 17:01:20 +0300
Subject: [R-pkg-devel] 
 how to use pkgdown::build_site() with a project using
 S7 with a specialized plot()?
In-Reply-To: <99119974-B153-4584-A974-C4E423D3DB83@dal.ca>
References: <99119974-B153-4584-A974-C4E423D3DB83@dal.ca>
Message-ID: <20240103170120.138d2f5a@Tarkus>

On Wed, 3 Jan 2024 13:34:27 +0000
Daniel Kelley <kelley at dal.ca> wrote:

> Error: 
> ! in callr subprocess.
> Caused by error in `map2(.x, vec_index(.x), .f, ...)`:
> ! In index: 1.

Interesting that the actual error messages seem to be completely
empty.

By chance (I was searching for "rlang See `$stdout` for standard
output" because I was curious to know what is this error message
telling the user to subset) I found a bug report that seems relevant
(as it's also about S7, has the same warning and crashes in the same
call to rlang::check_installed):
https://github.com/r-lib/pkgdown/issues/2186

Unfortunately, there's no solution, just two similar-looking cases.

Is there an equivalent of options(error = recover) for callr child
processes? If you can recover the expression evaluated by the child
process, it could be worth executing it directly and walking the call
stack looking at the local variables at the time of the crash.

-- 
Best regards,
Ivan


From jo@|@h@p@rry @end|ng |rom gm@||@com  Wed Jan  3 17:33:44 2024
From: jo@|@h@p@rry @end|ng |rom gm@||@com (Josiah Parry)
Date: Wed, 3 Jan 2024 11:33:44 -0500
Subject: [R-pkg-devel] Suggests with non-CRAN packages
Message-ID: <CAL3ufUJs8qG7KOuX3q2T_VPavwsAhNkrvC79pk70KEq_wVZVKQ@mail.gmail.com>

I have a scenario where I have an exported function that requires the
installation a package that *is not* available on CRAN. The body of the
function is generally:

fx <- function() {
  rlang::check_installed("noncranpkg")
  noncranpkg::gx()
}

As required, this package is in the Suggests field. But this results in a
note:

checking package dependencies ... NOTE
Package suggested but not available for checking: ?noncranpkg?

Can this be safely ignored?

	[[alternative HTML version deleted]]


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Wed Jan  3 17:43:08 2024
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Wed, 3 Jan 2024 17:43:08 +0100
Subject: [R-pkg-devel] Suggests with non-CRAN packages
In-Reply-To: <CAL3ufUJs8qG7KOuX3q2T_VPavwsAhNkrvC79pk70KEq_wVZVKQ@mail.gmail.com>
References: <CAL3ufUJs8qG7KOuX3q2T_VPavwsAhNkrvC79pk70KEq_wVZVKQ@mail.gmail.com>
Message-ID: <3ffa6bed-84a2-43d7-a1a1-0ef7453e6943@statistik.tu-dortmund.de>



On 03.01.2024 17:33, Josiah Parry wrote:
> I have a scenario where I have an exported function that requires the
> installation a package that *is not* available on CRAN. The body of the
> function is generally:
> 
> fx <- function() {
>    rlang::check_installed("noncranpkg")
>    noncranpkg::gx()
> }
> 
> As required, this package is in the Suggests field. But this results in a
> note:
> 
> checking package dependencies ... NOTE
> Package suggested but not available for checking: ?noncranpkg?
> 
> Can this be safely ignored?

Yes.

Best,
Uwe Ligges



> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

From jo@|@h@p@rry @end|ng |rom gm@||@com  Wed Jan  3 17:50:07 2024
From: jo@|@h@p@rry @end|ng |rom gm@||@com (Josiah Parry)
Date: Wed, 3 Jan 2024 11:50:07 -0500
Subject: [R-pkg-devel] Suggests with non-CRAN packages
In-Reply-To: <3ffa6bed-84a2-43d7-a1a1-0ef7453e6943@statistik.tu-dortmund.de>
References: <CAL3ufUJs8qG7KOuX3q2T_VPavwsAhNkrvC79pk70KEq_wVZVKQ@mail.gmail.com>
 <3ffa6bed-84a2-43d7-a1a1-0ef7453e6943@statistik.tu-dortmund.de>
Message-ID: <CAL3ufU+tMjvHpuEiC7KUsU1pf2EiZ_pOJW4Lm+cCtjzSf6p1mA@mail.gmail.com>

Lovely, thank you!

On Wed, Jan 3, 2024 at 11:43?AM Uwe Ligges <ligges at statistik.tu-dortmund.de>
wrote:

>
>
> On 03.01.2024 17:33, Josiah Parry wrote:
> > I have a scenario where I have an exported function that requires the
> > installation a package that *is not* available on CRAN. The body of the
> > function is generally:
> >
> > fx <- function() {
> >    rlang::check_installed("noncranpkg")
> >    noncranpkg::gx()
> > }
> >
> > As required, this package is in the Suggests field. But this results in a
> > note:
> >
> > checking package dependencies ... NOTE
> > Package suggested but not available for checking: ?noncranpkg?
> >
> > Can this be safely ignored?
>
> Yes.
>
> Best,
> Uwe Ligges
>
>
>
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Wed Jan  3 17:58:31 2024
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Wed, 3 Jan 2024 11:58:31 -0500
Subject: [R-pkg-devel] Suggests with non-CRAN packages
In-Reply-To: <CAL3ufUJs8qG7KOuX3q2T_VPavwsAhNkrvC79pk70KEq_wVZVKQ@mail.gmail.com>
References: <CAL3ufUJs8qG7KOuX3q2T_VPavwsAhNkrvC79pk70KEq_wVZVKQ@mail.gmail.com>
Message-ID: <4b98dd93-760c-4c21-a122-9bff615b5f62@gmail.com>

On 03/01/2024 11:33 a.m., Josiah Parry wrote:
> I have a scenario where I have an exported function that requires the
> installation a package that *is not* available on CRAN. The body of the
> function is generally:
> 
> fx <- function() {
>    rlang::check_installed("noncranpkg")
>    noncranpkg::gx()
> }
> 
> As required, this package is in the Suggests field. But this results in a
> note:
> 
> checking package dependencies ... NOTE
> Package suggested but not available for checking: ?noncranpkg?
> 
> Can this be safely ignored?

Uwe said yes, and he's an authority.  But for your users, it might be 
nice to include an Additional_repositories field so they can find the 
package.  This needs to be organized as an actual repository; the drat 
package is a very convenient way to set one up.

Duncan Murdoch


From h@w|ckh@m @end|ng |rom gm@||@com  Wed Jan  3 18:06:11 2024
From: h@w|ckh@m @end|ng |rom gm@||@com (Hadley Wickham)
Date: Thu, 4 Jan 2024 06:06:11 +1300
Subject: [R-pkg-devel] 
 how to use pkgdown::build_site() with a project using
 S7 with a specialized plot()?
In-Reply-To: <99119974-B153-4584-A974-C4E423D3DB83@dal.ca>
References: <99119974-B153-4584-A974-C4E423D3DB83@dal.ca>
Message-ID: <CABdHhvFtCY64ArC=qHG6Zmd2NQprhOxbehy4GVSL2k=sLc=FPg@mail.gmail.com>

This bug is fixed in the dev version (I don?t remember off the top of my
head in which of pkgdown and roxygen2 you need but it might be both). I?m
planning CRAN updates for both in the near future.

Hadley

On Thursday, January 4, 2024, Daniel Kelley <kelley at dal.ca> wrote:

> # Question
>
> Is there an online example online of specializing `plot()` for S7 objects,
> such that `pkgdown::build_site()` will produce webpages?  I ask because I
> find lots of users (of other packages) tend to consult websites made with
> pkgdown, rather than using the online help within R.  I think the problem I
> am having (discussed in the following sections) has to do with my
> specialization of plot().  I say that because when I was using S3 objects
> in an earlier version of my package, `pkgdown::build_site()` worked as
> intended.
>
> # Background
>
> In my 'mooring' package (https://github.com/dankelley/mooring/tree/S7), I
> am writing code like (https://github.com/dankelley/mooring/blob/
> f70b53ca12e88968f65710c205b50a64f750a99d/R/plot.R#L69)
>
> ```R
> #' @aliases plot.mooring
> #' ETC
> `plot.mooring::mooring` <- plot(ETC) ETC
> ```
>
> to handle objects made with (https://github.com/dankelley/mooring/blob/
> f70b53ca12e88968f65710c205b50a64f750a99d/R/oo.R#L2)
>
> ```R
> mooringS7 <- S7::new_class("mooring",
>     package = "mooring",
> ETC
> ```
>
> Built up in Rstudio, with Roxygen2 being used to create documentation,
> things seem to work, e.g.
>
> ```R
> m <- mooring(anchor(), wire(length = 80), float(), waterDepth = 100)
> plot(m)
> ```
>
> produces a plot as intended, and
>
> ```R
> ?plot.mooring
> ```
>
> produces documentation as intended.
>
> *However* I encounter a problem comes when I try building a website with
>
> ```R
> pkgdown::build_site()
> ```
>
> This yields results as in the next section.  (I apologize for the length.
> I'm including the whole thing because I thought that would be less
> bothersome than writing another email to the list.)
>
> I am not sure how to find the problem, and so I hope that someone on this
> list can point out an example of how to set up `plot()` to work with S7
> objects, in such a way that documentation can be created with Roxygen2 and
> websites can be made with `pkgdown::build_site()`.
>
> # What pkgdown::build_site() gives
>
> ```
> > library(pkgdown)
> > build_site()
> Warning: Failed to parse usage:
>
> S3method(`plot`, ``mooring::mooring``)(
>   x,
>   which = "shape",
>   showInterfaces = TRUE,
>   showDepths = FALSE,
>   showLabels = TRUE,
>   showDetails = FALSE,
>   fancy = FALSE,
>   title = "",
>   mar = c(1.5, 3.5, 3.5, 1),
>   mgp = c(2, 0.7, 0),
>   xlim = NULL,
>   xaxs = "r",
>   yaxs = "r",
>   type = "l",
>   debug = 0,
>   ...
> )
>
> -- Installing package into temporary library ----------------
> == Building pkgdown site ==============================
> =========================
> Reading from: '/Users/kelley/git/mooring'
> Writing to:   '/Users/kelley/git/mooring/docs'
> -- Initialising site ------------------------------
> -----------------------------
> -- Building home ------------------------------
> ---------------------------------
> Writing '404.html'
> -- Building function reference ------------------------------
> -------------------
> Error:
> ! in callr subprocess.
> Caused by error in `map2(.x, vec_index(.x), .f, ...)`:
> ! In index: 1.
> ? See `$stdout` for standard output.
> Type .Last.error to see the more details.
> > .Last.error
> <callr_error/rlib_error_3_0/rlib_error/error>
> Error:
> ! in callr subprocess.
> Caused by error in `map2(.x, vec_index(.x), .f, ...)`:
> ! In index: 1.
> ? See `$stdout` for standard output.
> ---
> Backtrace:
> 1. pkgdown::build_site()
> 2. pkgdown:::build_site_external(pkg = pkg, examples = examples, run?
> 3. callr::r(function(..., cli_colors, pkgdown_internet) { ?
> 4. callr:::get_result(output = out, options)
> 5. callr:::throw(callr_remote_error(remerr, output), parent = fix_?
> ---
> Subprocess backtrace:
>  1. pkgdown::build_site(...)
>  2. pkgdown:::build_site_local(pkg = pkg, examples = examples, run_do?
>  3. pkgdown::build_reference(pkg, lazy = lazy, examples = examples, ?
>  4. pkgdown::build_reference_index(pkg)
>  5. pkgdown::render_page(pkg, "reference-index", data = data_referen?
>  6. pkgdown:::render_page_html(pkg, name = name, data = data, depth =?
>  7. utils::modifyList(data_template(pkg, depth = depth), da?
>  8. base::stopifnot(is.list(x), is.list(val))
>  9. pkgdown:::data_reference_index(pkg)
> 10. meta %>% purrr::imap(data_reference_index_rows, pkg = p?
> 11. base::unlist(., recursive = FALSE)
> 12. purrr::compact(.)
> 13. purrr::discard(.x, function(x) is_empty(.f(x)))
> 14. purrr:::where_if(.x, .p, ...)
> 15. purrr:::map_(.x, .p, ..., .type = "logical", .purrr_error_call ?
> 16. purrr:::vctrs_vec_compat(.x, .purrr_user_env)
> 17. purrr::imap(., data_reference_index_rows, pkg = pkg)
> 18. purrr::map2(.x, vec_index(.x), .f, ...)
> 19. purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
> 20. purrr:::with_indexed_errors(i = i, names = names, error_call = ?
> 21. base::withCallingHandlers(expr, error = function(cnd) { ?
> 22. purrr:::call_with_cleanup(map2_impl, environment(), .type, .pro?
> 23. local .f(.x[[i]], .y[[i]], ...)
> 24. pkgdown:::section_topics(section$contents, pkg$topics, pkg$src_pa?
> 25. base::rbind(topics, ext_topics(ext_strings))
> 26. base::rbind(deparse.level, ...)
> 27. pkgdown:::ext_topics(ext_strings)
> 28. purrr::map2(pkg, fun, get_rd_from_help)
> 29. purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
> 30. purrr:::with_indexed_errors(i = i, names = names, error_call = ?
> 31. base::withCallingHandlers(expr, error = function(cnd) { ?
> 32. purrr:::call_with_cleanup(map2_impl, environment(), .type, .pro?
> 33. local .f(.x[[i]], .y[[i]], ...)
> 34. rlang::check_installed(package, "as it's used in the reference?
> 35. base::stop(cnd)
> 36. (function (cnd) ?
> 37. cli::cli_abort(message, location = i, name = name, pare?
> 38. | rlang::abort(message, ..., call = call, use_cli_format ?
> 39. | rlang:::signal_abort(cnd, .file)
> 40. | base::signalCondition(cnd)
> 41. (function (cnd) ?
> 42. cli::cli_abort(message, location = i, name = name, pare?
> 43. | rlang::abort(message, ..., call = call, use_cli_format ?
> 44. | rlang:::signal_abort(cnd, .file)
> 45. | base::signalCondition(cnd)
> 46. global (function (e) ?
> ```
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


-- 
http://hadley.nz

	[[alternative HTML version deleted]]


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Wed Jan  3 18:14:07 2024
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Wed, 3 Jan 2024 18:14:07 +0100
Subject: [R-pkg-devel] Suggests with non-CRAN packages
In-Reply-To: <4b98dd93-760c-4c21-a122-9bff615b5f62@gmail.com>
References: <CAL3ufUJs8qG7KOuX3q2T_VPavwsAhNkrvC79pk70KEq_wVZVKQ@mail.gmail.com>
 <4b98dd93-760c-4c21-a122-9bff615b5f62@gmail.com>
Message-ID: <fd578d29-d30e-4060-a774-c141aa095c33@statistik.tu-dortmund.de>



On 03.01.2024 17:58, Duncan Murdoch wrote:
> On 03/01/2024 11:33 a.m., Josiah Parry wrote:
>> I have a scenario where I have an exported function that requires the
>> installation a package that *is not* available on CRAN. The body of the
>> function is generally:
>>
>> fx <- function() {
>> ?? rlang::check_installed("noncranpkg")
>> ?? noncranpkg::gx()
>> }
>>
>> As required, this package is in the Suggests field. But this results in a
>> note:
>>
>> checking package dependencies ... NOTE
>> Package suggested but not available for checking: ?noncranpkg?
>>
>> Can this be safely ignored?
> 
> Uwe said yes, and he's an authority.? But for your users, it might be 
> nice to include an Additional_repositories field so they can find the 
> package.? This needs to be organized as an actual repository; the drat 
> package is a very convenient way to set one up.

Thanks for elaborating, yes of course, people have to declare where to 
get the package from. The note from above is still unavoidable in that case.

Best,
Uwe

> 
> Duncan Murdoch
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

From jo@|@h@p@rry @end|ng |rom gm@||@com  Wed Jan  3 18:19:45 2024
From: jo@|@h@p@rry @end|ng |rom gm@||@com (Josiah Parry)
Date: Wed, 3 Jan 2024 12:19:45 -0500
Subject: [R-pkg-devel] Suggests with non-CRAN packages
In-Reply-To: <fd578d29-d30e-4060-a774-c141aa095c33@statistik.tu-dortmund.de>
References: <CAL3ufUJs8qG7KOuX3q2T_VPavwsAhNkrvC79pk70KEq_wVZVKQ@mail.gmail.com>
 <4b98dd93-760c-4c21-a122-9bff615b5f62@gmail.com>
 <fd578d29-d30e-4060-a774-c141aa095c33@statistik.tu-dortmund.de>
Message-ID: <CAL3ufUL2que0kEhmtuNt41BJyQKxo-UcwXzJkMS+3LZ7CbYnZw@mail.gmail.com>

Thanks, both. I'm not familiar with Additional_repositories. Must the
package source be specified there? Or can it be specified via documentation
a la Rd file?

On Wed, Jan 3, 2024 at 12:14?PM Uwe Ligges <ligges at statistik.tu-dortmund.de>
wrote:

>
>
> On 03.01.2024 17:58, Duncan Murdoch wrote:
> > On 03/01/2024 11:33 a.m., Josiah Parry wrote:
> >> I have a scenario where I have an exported function that requires the
> >> installation a package that *is not* available on CRAN. The body of the
> >> function is generally:
> >>
> >> fx <- function() {
> >>    rlang::check_installed("noncranpkg")
> >>    noncranpkg::gx()
> >> }
> >>
> >> As required, this package is in the Suggests field. But this results in
> a
> >> note:
> >>
> >> checking package dependencies ... NOTE
> >> Package suggested but not available for checking: ?noncranpkg?
> >>
> >> Can this be safely ignored?
> >
> > Uwe said yes, and he's an authority.  But for your users, it might be
> > nice to include an Additional_repositories field so they can find the
> > package.  This needs to be organized as an actual repository; the drat
> > package is a very convenient way to set one up.
>
> Thanks for elaborating, yes of course, people have to declare where to
> get the package from. The note from above is still unavoidable in that
> case.
>
> Best,
> Uwe
>
> >
> > Duncan Murdoch
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From ke||ey @end|ng |rom d@|@c@  Wed Jan  3 18:31:59 2024
From: ke||ey @end|ng |rom d@|@c@ (Daniel Kelley)
Date: Wed, 3 Jan 2024 17:31:59 +0000
Subject: [R-pkg-devel] 
 how to use pkgdown::build_site() with a project using
 S7 with a specialized plot()?
In-Reply-To: <CABdHhvFtCY64ArC=qHG6Zmd2NQprhOxbehy4GVSL2k=sLc=FPg@mail.gmail.com>
References: <99119974-B153-4584-A974-C4E423D3DB83@dal.ca>
 <CABdHhvFtCY64ArC=qHG6Zmd2NQprhOxbehy4GVSL2k=sLc=FPg@mail.gmail.com>
Message-ID: <DF86B412-821B-45D0-9DE7-C55CE7DA6A8D@dal.ca>

Thanks.  I installed the latest roxygen2 and pkgdown, and tried to make a simple reprex
git clone https://github.com/dankelley/mooring.git
cd mooring
git checkout S7
Rscript -e "pkgdown::clean_site()"
Rscript -e "pkgdown::build_site()"

but it still fails.  (Full output is below, for completeness.) I wonder whether I ought to be doing something extra in the Roxygen code (in file R/plot.R within this directory.). Please note that I can rename it as "draw()" or something, but I'm hoping to learn S7 properly, because I'm really quite keen to leave my S3 and S4 days behind me.  (PS to Hadley: I loved the presentation you gave on what was then R7, and have recommended it to colleagues not just for the R7 information, but for the concise explanation of the benefit of OOP and generics.)

?? Installing package mooring into temporary library ???????????????????????????
?? Building pkgdown site for package mooring ???????????????????????????????????
Reading from: /Users/kelley/wednesday/mooring
Writing to: /Users/kelley/wednesday/mooring/docs
?? Initialising site ???????????????????????????????????????????????????????????
Copying
../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/pkgdown/BS3/assets/bootstrap-toc.css,
../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/pkgdown/BS3/assets/bootstrap-toc.js,
../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/pkgdown/BS3/assets/docsearch.css,
../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/pkgdown/BS3/assets/docsearch.js,
../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/pkgdown/BS3/assets/link.svg,
../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/pkgdown/BS3/assets/pkgdown.css,
and
../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/pkgdown/BS3/assets/pkgdown.js
to bootstrap-toc.css, bootstrap-toc.js, docsearch.css, docsearch.js, link.svg,
pkgdown.css, and pkgdown.js
?? Building home ???????????????????????????????????????????????????????????????
Writing authors.html
Copying man/figures/Makefile, man/figures/README-example-1.png,
man/figures/README-example-2.png, man/figures/force_diagram.R, and
man/figures/force_diagram.png
to reference/figures/Makefile, reference/figures/README-example-1.png,
reference/figures/README-example-2.png, reference/figures/force_diagram.R, and
reference/figures/force_diagram.png
Writing 404.html
?? Building function reference ?????????????????????????????????????????????????
Error:
! in callr subprocess.
Caused by error in `map2(.x, vec_index(.x), .f, ...)`:
! In index: 1.
---
Standard error:
?? Building pkgdown site for package mooring ???????????????????????????????????
Reading from: /Users/kelley/wednesday/mooring
Writing to: /Users/kelley/wednesday/mooring/docs
?? Initialising site ???????????????????????????????????????????????????????????
Copying
../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/pkgdown/BS3/assets/bootstrap-toc.css,
../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/pkgdown/BS3/assets/bootstrap-toc.js,
../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/pkgdown/BS3/assets/docsearch.css,
../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/pkgdown/BS3/assets/docsearch.js,
../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/pkgdown/BS3/assets/link.svg,
../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/pkgdown/BS3/assets/pkgdown.css,
and
../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/pkgdown/BS3/assets/pkgdown.js
to bootstrap-toc.css, bootstrap-toc.js, docsearch.css, docsearch.js, link.svg,
pkgdown.css, and pkgdown.js
?? Building home ???????????????????????????????????????????????????????????????
Writing authors.html
Copying man/figures/Makefile, man/figures/README-example-1.png,
man/figures/README-example-2.png, man/figures/force_diagram.R, and
man/figures/force_diagram.png
to reference/figures/Makefile, reference/figures/README-example-1.png,
reference/figures/README-example-2.png, reference/figures/force_diagram.R, and
reference/figures/force_diagram.png
Writing 404.html
?? Building function reference ?????????????????????????????????????????????????
---
Backtrace:
1. pkgdown::build_site()
2. pkgdown:::build_site_external(pkg = pkg, examples = examples, run_dont_run = run_don?
3. callr::r(function(..., cli_colors, pkgdown_internet) { ?
4. callr:::get_result(output = out, options)
5. callr:::throw(callr_remote_error(remerr, output), parent = fix_msg(remerr[[3]]))
---
Subprocess backtrace:
 1. pkgdown::build_site(...)
 2. pkgdown:::build_site_local(pkg = pkg, examples = examples, run_dont_run = run_dont_r?
 3. pkgdown::build_reference(pkg, lazy = lazy, examples = examples, run_dont_run = run_?
 4. pkgdown::build_reference_index(pkg)
 5. pkgdown::render_page(pkg, "reference-index", data = data_reference_index(pkg), ?
 6. pkgdown:::render_page_html(pkg, name = name, data = data, depth = depth)
 7. utils::modifyList(data_template(pkg, depth = depth), data)
 8. base::stopifnot(is.list(x), is.list(val))
 9. pkgdown:::data_reference_index(pkg)
10. meta %>% purrr::imap(data_reference_index_rows, pkg = pkg) %>% ?
11. base::unlist(., recursive = FALSE)
12. purrr::compact(.)
13. purrr::discard(.x, function(x) is_empty(.f(x)))
14. purrr:::where_if(.x, .p, ...)
15. purrr:::map_(.x, .p, ..., .type = "logical", .purrr_error_call = .purrr_error_call)
16. purrr:::vctrs_vec_compat(.x, .purrr_user_env)
17. purrr::imap(., data_reference_index_rows, pkg = pkg)
18. purrr::map2(.x, vec_index(.x), .f, ...)
19. purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
20. purrr:::with_indexed_errors(i = i, names = names, error_call = .purrr_error_call, ?
21. base::withCallingHandlers(expr, error = function(cnd) { ?
22. purrr:::call_with_cleanup(map2_impl, environment(), .type, .progress, ?
23. local .f(.x[[i]], .y[[i]], ...)
24. pkgdown:::section_topics(section$contents, pkg$topics, pkg$src_path)
25. base::rbind(topics, ext_topics(ext_strings))
26. base::rbind(deparse.level, ...)
27. pkgdown:::ext_topics(ext_strings)
28. purrr::map2(pkg, fun, get_rd_from_help)
29. purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
30. purrr:::with_indexed_errors(i = i, names = names, error_call = .purrr_error_call, ?
31. base::withCallingHandlers(expr, error = function(cnd) { ?
32. purrr:::call_with_cleanup(map2_impl, environment(), .type, .progress, ?
33. local .f(.x[[i]], .y[[i]], ...)
34. rlang::check_installed(package, "as it's used in the reference index.")
35. base::stop(cnd)
36. (function (cnd) ?
37. cli::cli_abort(message, location = i, name = name, parent = cnd, ?
38. | rlang::abort(message, ..., call = call, use_cli_format = TRUE, ?
39. | rlang:::signal_abort(cnd, .file)
40. | base::signalCondition(cnd)
41. (function (cnd) ?
42. cli::cli_abort(message, location = i, name = name, parent = cnd, ?
43. | rlang::abort(message, ..., call = call, use_cli_format = TRUE, ?
44. | rlang:::signal_abort(cnd, .file)
45. | base::signalCondition(cnd)
46. global (function (e) ?
Execution halted



On Jan 3, 2024, at 1:06?PM, Hadley Wickham <h.wickham at gmail.com> wrote:

CAUTION: The Sender of this email is not from within Dalhousie.
This bug is fixed in the dev version (I don?t remember off the top of my head in which of pkgdown and roxygen2 you need but it might be both). I?m planning CRAN updates for both in the near future.

Hadley

On Thursday, January 4, 2024, Daniel Kelley <kelley at dal.ca<mailto:kelley at dal.ca>> wrote:
# Question

Is there an online example online of specializing `plot()` for S7 objects, such that `pkgdown::build_site()` will produce webpages?  I ask because I find lots of users (of other packages) tend to consult websites made with pkgdown, rather than using the online help within R.  I think the problem I am having (discussed in the following sections) has to do with my specialization of plot().  I say that because when I was using S3 objects in an earlier version of my package, `pkgdown::build_site()` worked as intended.

# Background

In my 'mooring' package (https://github.com/dankelley/mooring/tree/S7), I am writing code like (https://github.com/dankelley/mooring/blob/f70b53ca12e88968f65710c205b50a64f750a99d/R/plot.R#L69)

```R
#' @aliases plot.mooring
#' ETC
`plot.mooring::mooring` <- plot(ETC) ETC
```

to handle objects made with (https://github.com/dankelley/mooring/blob/f70b53ca12e88968f65710c205b50a64f750a99d/R/oo.R#L2)

```R
mooringS7 <- S7::new_class("mooring",
    package = "mooring",
ETC
```

Built up in Rstudio, with Roxygen2 being used to create documentation, things seem to work, e.g.

```R
m <- mooring(anchor(), wire(length = 80), float(), waterDepth = 100)
plot(m)
```

produces a plot as intended, and

```R
?plot.mooring
```

produces documentation as intended.

*However* I encounter a problem comes when I try building a website with

```R
pkgdown::build_site()
```

This yields results as in the next section.  (I apologize for the length. I'm including the whole thing because I thought that would be less bothersome than writing another email to the list.)

I am not sure how to find the problem, and so I hope that someone on this list can point out an example of how to set up `plot()` to work with S7 objects, in such a way that documentation can be created with Roxygen2 and websites can be made with `pkgdown::build_site()`.

# What pkgdown::build_site() gives

```
> library(pkgdown)
> build_site()
Warning: Failed to parse usage:

S3method(`plot`, ``mooring::mooring``)(
  x,
  which = "shape",
  showInterfaces = TRUE,
  showDepths = FALSE,
  showLabels = TRUE,
  showDetails = FALSE,
  fancy = FALSE,
  title = "",
  mar = c(1.5, 3.5, 3.5, 1),
  mgp = c(2, 0.7, 0),
  xlim = NULL,
  xaxs = "r",
  yaxs = "r",
  type = "l",
  debug = 0,
  ...
)

-- Installing package into temporary library ----------------
== Building pkgdown site =======================================================
Reading from: '/Users/kelley/git/mooring'
Writing to:   '/Users/kelley/git/mooring/docs'
-- Initialising site -----------------------------------------------------------
-- Building home ---------------------------------------------------------------
Writing '404.html'
-- Building function reference -------------------------------------------------
Error:
! in callr subprocess.
Caused by error in `map2(.x, vec_index(.x), .f, ...)`:
! In index: 1.
? See `$stdout` for standard output.
Type .Last.error to see the more details.
> .Last.error
<callr_error/rlib_error_3_0/rlib_error/error>
Error:
! in callr subprocess.
Caused by error in `map2(.x, vec_index(.x), .f, ...)`:
! In index: 1.
? See `$stdout` for standard output.
---
Backtrace:
1. pkgdown::build_site()
2. pkgdown:::build_site_external(pkg = pkg, examples = examples, run?
3. callr::r(function(..., cli_colors, pkgdown_internet) { ?
4. callr:::get_result(output = out, options)
5. callr:::throw(callr_remote_error(remerr, output), parent = fix_?
---
Subprocess backtrace:
 1. pkgdown::build_site(...)
 2. pkgdown:::build_site_local(pkg = pkg, examples = examples, run_do?
 3. pkgdown::build_reference(pkg, lazy = lazy, examples = examples, ?
 4. pkgdown::build_reference_index(pkg)
 5. pkgdown::render_page(pkg, "reference-index", data = data_referen?
 6. pkgdown:::render_page_html(pkg, name = name, data = data, depth =?
 7. utils::modifyList(data_template(pkg, depth = depth), da?
 8. base::stopifnot(is.list(x), is.list(val))
 9. pkgdown:::data_reference_index(pkg)
10. meta %>% purrr::imap(data_reference_index_rows, pkg = p?
11. base::unlist(., recursive = FALSE)
12. purrr::compact(.)
13. purrr::discard(.x, function(x) is_empty(.f(x)))
14. purrr:::where_if(.x, .p, ...)
15. purrr:::map_(.x, .p, ..., .type = "logical", .purrr_error_call ?
16. purrr:::vctrs_vec_compat(.x, .purrr_user_env)
17. purrr::imap(., data_reference_index_rows, pkg = pkg)
18. purrr::map2(.x, vec_index(.x), .f, ...)
19. purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
20. purrr:::with_indexed_errors(i = i, names = names, error_call = ?
21. base::withCallingHandlers(expr, error = function(cnd) { ?
22. purrr:::call_with_cleanup(map2_impl, environment(), .type, .pro?
23. local .f(.x[[i]], .y[[i]], ...)
24. pkgdown:::section_topics(section$contents, pkg$topics, pkg$src_pa?
25. base::rbind(topics, ext_topics(ext_strings))
26. base::rbind(deparse.level, ...)
27. pkgdown:::ext_topics(ext_strings)
28. purrr::map2(pkg, fun, get_rd_from_help)
29. purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
30. purrr:::with_indexed_errors(i = i, names = names, error_call = ?
31. base::withCallingHandlers(expr, error = function(cnd) { ?
32. purrr:::call_with_cleanup(map2_impl, environment(), .type, .pro?
33. local .f(.x[[i]], .y[[i]], ...)
34. rlang::check_installed(package, "as it's used in the reference?
35. base::stop(cnd)
36. (function (cnd) ?
37. cli::cli_abort(message, location = i, name = name, pare?
38. | rlang::abort(message, ..., call = call, use_cli_format ?
39. | rlang:::signal_abort(cnd, .file)
40. | base::signalCondition(cnd)
41. (function (cnd) ?
42. cli::cli_abort(message, location = i, name = name, pare?
43. | rlang::abort(message, ..., call = call, use_cli_format ?
44. | rlang:::signal_abort(cnd, .file)
45. | base::signalCondition(cnd)
46. global (function (e) ?
```

______________________________________________
R-package-devel at r-project.org<mailto:R-package-devel at r-project.org> mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel


--
http://hadley.nz<http://hadley.nz/>


	[[alternative HTML version deleted]]


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Wed Jan  3 18:35:56 2024
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Wed, 3 Jan 2024 18:35:56 +0100
Subject: [R-pkg-devel] Suggests with non-CRAN packages
In-Reply-To: <CAL3ufUL2que0kEhmtuNt41BJyQKxo-UcwXzJkMS+3LZ7CbYnZw@mail.gmail.com>
References: <CAL3ufUJs8qG7KOuX3q2T_VPavwsAhNkrvC79pk70KEq_wVZVKQ@mail.gmail.com>
 <4b98dd93-760c-4c21-a122-9bff615b5f62@gmail.com>
 <fd578d29-d30e-4060-a774-c141aa095c33@statistik.tu-dortmund.de>
 <CAL3ufUL2que0kEhmtuNt41BJyQKxo-UcwXzJkMS+3LZ7CbYnZw@mail.gmail.com>
Message-ID: <9f77096b-e7ab-4750-ab60-802576dfb471@statistik.tu-dortmund.de>

 From the CRAN polcies:

"Packages on which a CRAN package depends should be available from a 
mainstream repository: if any mentioned in ?Suggests? or ?Enhances? 
fields are not from such a repository, where to obtain them at a 
repository should be specified in an ?Additional_repositories? field of 
the DESCRIPTION file (as a comma-separated list of repository URLs) or 
for other means of access, described in the ?Description? field. "

Best,
Uwe Ligges




On 03.01.2024 18:19, Josiah Parry wrote:
> Thanks, both. I'm not familiar with Additional_repositories. Must the 
> package source be specified there? Or can it be specified?via 
> documentation a la Rd file?
> 
> On Wed, Jan 3, 2024 at 12:14?PM Uwe Ligges 
> <ligges at statistik.tu-dortmund.de 
> <mailto:ligges at statistik.tu-dortmund.de>> wrote:
> 
> 
> 
>     On 03.01.2024 17:58, Duncan Murdoch wrote:
>      > On 03/01/2024 11:33 a.m., Josiah Parry wrote:
>      >> I have a scenario where I have an exported function that
>     requires the
>      >> installation a package that *is not* available on CRAN. The body
>     of the
>      >> function is generally:
>      >>
>      >> fx <- function() {
>      >> ?? rlang::check_installed("noncranpkg")
>      >> ?? noncranpkg::gx()
>      >> }
>      >>
>      >> As required, this package is in the Suggests field. But this
>     results in a
>      >> note:
>      >>
>      >> checking package dependencies ... NOTE
>      >> Package suggested but not available for checking: ?noncranpkg?
>      >>
>      >> Can this be safely ignored?
>      >
>      > Uwe said yes, and he's an authority.? But for your users, it
>     might be
>      > nice to include an Additional_repositories field so they can find
>     the
>      > package.? This needs to be organized as an actual repository; the
>     drat
>      > package is a very convenient way to set one up.
> 
>     Thanks for elaborating, yes of course, people have to declare where to
>     get the package from. The note from above is still unavoidable in
>     that case.
> 
>     Best,
>     Uwe
> 
>      >
>      > Duncan Murdoch
>      >
>      > ______________________________________________
>      > R-package-devel at r-project.org
>     <mailto:R-package-devel at r-project.org> mailing list
>      > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>     <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
> 

From h@w|ckh@m @end|ng |rom gm@||@com  Wed Jan  3 19:48:03 2024
From: h@w|ckh@m @end|ng |rom gm@||@com (Hadley Wickham)
Date: Thu, 4 Jan 2024 07:48:03 +1300
Subject: [R-pkg-devel] 
 how to use pkgdown::build_site() with a project using
 S7 with a specialized plot()?
In-Reply-To: <DF86B412-821B-45D0-9DE7-C55CE7DA6A8D@dal.ca>
References: <99119974-B153-4584-A974-C4E423D3DB83@dal.ca>
 <CABdHhvFtCY64ArC=qHG6Zmd2NQprhOxbehy4GVSL2k=sLc=FPg@mail.gmail.com>
 <DF86B412-821B-45D0-9DE7-C55CE7DA6A8D@dal.ca>
Message-ID: <CABdHhvERBUSxpuQ4B+xhjtr=XvGQdRFm81KbADHFnvQcvY0uyA@mail.gmail.com>

Did you re-document? You?ll need that to correctly regenerate the .Rd, I
think. (Sorry I?m on vacation so I?m guessing at stuff from my phone)

Hadley

On Thursday, January 4, 2024, Daniel Kelley <kelley at dal.ca> wrote:

> Thanks.  I installed the latest roxygen2 and pkgdown, and tried to make a
> simple reprex
> git clone https://github.com/dankelley/mooring.git
> cd mooring
> git checkout S7
> Rscript -e "pkgdown::clean_site()"
> Rscript -e "pkgdown::build_site()"
>
> but it still fails.  (Full output is below, for completeness.) I wonder
> whether I ought to be doing something extra in the Roxygen code (in file
> R/plot.R within this directory.). Please note that I can rename it as
> "draw()" or something, but I'm hoping to learn S7 properly, because I'm
> really quite keen to leave my S3 and S4 days behind me.  (PS to Hadley: I
> loved the presentation you gave on what was then R7, and have recommended
> it to colleagues not just for the R7 information, but for the concise
> explanation of the benefit of OOP and generics.)
>
> ?? Installing package mooring into temporary library
> ???????????????????????????
> ?? Building pkgdown site for package mooring ??????????????????????????????
> ?????
> Reading from: /Users/kelley/wednesday/mooring
> Writing to: /Users/kelley/wednesday/mooring/docs
> ?? Initialising site ??????????????????????????????
> ?????????????????????????????
> Copying
> ../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/
> library/pkgdown/BS3/assets/bootstrap-toc.css,
> ../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/
> library/pkgdown/BS3/assets/bootstrap-toc.js,
> ../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/
> library/pkgdown/BS3/assets/docsearch.css,
> ../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/
> library/pkgdown/BS3/assets/docsearch.js,
> ../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/
> library/pkgdown/BS3/assets/link.svg,
> ../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/
> library/pkgdown/BS3/assets/pkgdown.css,
> and
> ../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/
> library/pkgdown/BS3/assets/pkgdown.js
> to bootstrap-toc.css, bootstrap-toc.js, docsearch.css, docsearch.js,
> link.svg,
> pkgdown.css, and pkgdown.js
> ?? Building home ??????????????????????????????
> ?????????????????????????????????
> Writing authors.html
> Copying man/figures/Makefile, man/figures/README-example-1.png,
> man/figures/README-example-2.png, man/figures/force_diagram.R, and
> man/figures/force_diagram.png
> to reference/figures/Makefile, reference/figures/README-example-1.png,
> reference/figures/README-example-2.png, reference/figures/force_diagram.R,
> and
> reference/figures/force_diagram.png
> Writing 404.html
> ?? Building function reference ??????????????????????????????
> ???????????????????
> Error:
> ! in callr subprocess.
> Caused by error in `map2(.x, vec_index(.x), .f, ...)`:
> ! In index: 1.
> ---
> Standard error:
> ?? Building pkgdown site for package mooring ??????????????????????????????
> ?????
> Reading from: /Users/kelley/wednesday/mooring
> Writing to: /Users/kelley/wednesday/mooring/docs
> ?? Initialising site ??????????????????????????????
> ?????????????????????????????
> Copying
> ../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/
> library/pkgdown/BS3/assets/bootstrap-toc.css,
> ../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/
> library/pkgdown/BS3/assets/bootstrap-toc.js,
> ../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/
> library/pkgdown/BS3/assets/docsearch.css,
> ../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/
> library/pkgdown/BS3/assets/docsearch.js,
> ../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/
> library/pkgdown/BS3/assets/link.svg,
> ../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/
> library/pkgdown/BS3/assets/pkgdown.css,
> and
> ../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/
> library/pkgdown/BS3/assets/pkgdown.js
> to bootstrap-toc.css, bootstrap-toc.js, docsearch.css, docsearch.js,
> link.svg,
> pkgdown.css, and pkgdown.js
> ?? Building home ??????????????????????????????
> ?????????????????????????????????
> Writing authors.html
> Copying man/figures/Makefile, man/figures/README-example-1.png,
> man/figures/README-example-2.png, man/figures/force_diagram.R, and
> man/figures/force_diagram.png
> to reference/figures/Makefile, reference/figures/README-example-1.png,
> reference/figures/README-example-2.png, reference/figures/force_diagram.R,
> and
> reference/figures/force_diagram.png
> Writing 404.html
> ?? Building function reference ??????????????????????????????
> ???????????????????
> ---
> Backtrace:
> 1. pkgdown::build_site()
> 2. pkgdown:::build_site_external(pkg = pkg, examples = examples,
> run_dont_run = run_don?
> 3. callr::r(function(..., cli_colors, pkgdown_internet) { ?
> 4. callr:::get_result(output = out, options)
> 5. callr:::throw(callr_remote_error(remerr, output), parent =
> fix_msg(remerr[[3]]))
> ---
> Subprocess backtrace:
>  1. pkgdown::build_site(...)
>  2. pkgdown:::build_site_local(pkg = pkg, examples = examples,
> run_dont_run = run_dont_r?
>  3. pkgdown::build_reference(pkg, lazy = lazy, examples = examples,
> run_dont_run = run_?
>  4. pkgdown::build_reference_index(pkg)
>  5. pkgdown::render_page(pkg, "reference-index", data =
> data_reference_index(pkg), ?
>  6. pkgdown:::render_page_html(pkg, name = name, data = data, depth =
> depth)
>  7. utils::modifyList(data_template(pkg, depth = depth), data)
>  8. base::stopifnot(is.list(x), is.list(val))
>  9. pkgdown:::data_reference_index(pkg)
> 10. meta %>% purrr::imap(data_reference_index_rows, pkg = pkg) %>% ?
> 11. base::unlist(., recursive = FALSE)
> 12. purrr::compact(.)
> 13. purrr::discard(.x, function(x) is_empty(.f(x)))
> 14. purrr:::where_if(.x, .p, ...)
> 15. purrr:::map_(.x, .p, ..., .type = "logical", .purrr_error_call =
> .purrr_error_call)
> 16. purrr:::vctrs_vec_compat(.x, .purrr_user_env)
> 17. purrr::imap(., data_reference_index_rows, pkg = pkg)
> 18. purrr::map2(.x, vec_index(.x), .f, ...)
> 19. purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
> 20. purrr:::with_indexed_errors(i = i, names = names, error_call =
> .purrr_error_call, ?
> 21. base::withCallingHandlers(expr, error = function(cnd) { ?
> 22. purrr:::call_with_cleanup(map2_impl, environment(), .type, .progress,
> ?
> 23. local .f(.x[[i]], .y[[i]], ...)
> 24. pkgdown:::section_topics(section$contents, pkg$topics, pkg$src_path)
> 25. base::rbind(topics, ext_topics(ext_strings))
> 26. base::rbind(deparse.level, ...)
> 27. pkgdown:::ext_topics(ext_strings)
> 28. purrr::map2(pkg, fun, get_rd_from_help)
> 29. purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
> 30. purrr:::with_indexed_errors(i = i, names = names, error_call =
> .purrr_error_call, ?
> 31. base::withCallingHandlers(expr, error = function(cnd) { ?
> 32. purrr:::call_with_cleanup(map2_impl, environment(), .type, .progress,
> ?
> 33. local .f(.x[[i]], .y[[i]], ...)
> 34. rlang::check_installed(package, "as it's used in the reference
> index.")
> 35. base::stop(cnd)
> 36. (function (cnd) ?
> 37. cli::cli_abort(message, location = i, name = name, parent = cnd, ?
> 38. | rlang::abort(message, ..., call = call, use_cli_format = TRUE, ?
> 39. | rlang:::signal_abort(cnd, .file)
> 40. | base::signalCondition(cnd)
> 41. (function (cnd) ?
> 42. cli::cli_abort(message, location = i, name = name, parent = cnd, ?
> 43. | rlang::abort(message, ..., call = call, use_cli_format = TRUE, ?
> 44. | rlang:::signal_abort(cnd, .file)
> 45. | base::signalCondition(cnd)
> 46. global (function (e) ?
> Execution halted
>
>
>
> On Jan 3, 2024, at 1:06?PM, Hadley Wickham <h.wickham at gmail.com> wrote:
>
> CAUTION: The Sender of this email is not from within Dalhousie.
> This bug is fixed in the dev version (I don?t remember off the top of my
> head in which of pkgdown and roxygen2 you need but it might be both). I?m
> planning CRAN updates for both in the near future.
>
> Hadley
>
> On Thursday, January 4, 2024, Daniel Kelley <kelley at dal.ca> wrote:
>
>> # Question
>>
>> Is there an online example online of specializing `plot()` for S7
>> objects, such that `pkgdown::build_site()` will produce webpages?  I ask
>> because I find lots of users (of other packages) tend to consult websites
>> made with pkgdown, rather than using the online help within R.  I think the
>> problem I am having (discussed in the following sections) has to do with my
>> specialization of plot().  I say that because when I was using S3 objects
>> in an earlier version of my package, `pkgdown::build_site()` worked as
>> intended.
>>
>> # Background
>>
>> In my 'mooring' package (https://github.com/dankelley/mooring/tree/S7),
>> I am writing code like (https://github.com/dankelley/
>> mooring/blob/f70b53ca12e88968f65710c205b50a64f750a99d/R/plot.R#L69)
>>
>> ```R
>> #' @aliases plot.mooring
>> #' ETC
>> `plot.mooring::mooring` <- plot(ETC) ETC
>> ```
>>
>> to handle objects made with (https://github.com/dankelley/
>> mooring/blob/f70b53ca12e88968f65710c205b50a64f750a99d/R/oo.R#L2)
>>
>> ```R
>> mooringS7 <- S7::new_class("mooring",
>>     package = "mooring",
>> ETC
>> ```
>>
>> Built up in Rstudio, with Roxygen2 being used to create documentation,
>> things seem to work, e.g.
>>
>> ```R
>> m <- mooring(anchor(), wire(length = 80), float(), waterDepth = 100)
>> plot(m)
>> ```
>>
>> produces a plot as intended, and
>>
>> ```R
>> ?plot.mooring
>> ```
>>
>> produces documentation as intended.
>>
>> *However* I encounter a problem comes when I try building a website with
>>
>> ```R
>> pkgdown::build_site()
>> ```
>>
>> This yields results as in the next section.  (I apologize for the length.
>> I'm including the whole thing because I thought that would be less
>> bothersome than writing another email to the list.)
>>
>> I am not sure how to find the problem, and so I hope that someone on this
>> list can point out an example of how to set up `plot()` to work with S7
>> objects, in such a way that documentation can be created with Roxygen2 and
>> websites can be made with `pkgdown::build_site()`.
>>
>> # What pkgdown::build_site() gives
>>
>> ```
>> > library(pkgdown)
>> > build_site()
>> Warning: Failed to parse usage:
>>
>> S3method(`plot`, ``mooring::mooring``)(
>>   x,
>>   which = "shape",
>>   showInterfaces = TRUE,
>>   showDepths = FALSE,
>>   showLabels = TRUE,
>>   showDetails = FALSE,
>>   fancy = FALSE,
>>   title = "",
>>   mar = c(1.5, 3.5, 3.5, 1),
>>   mgp = c(2, 0.7, 0),
>>   xlim = NULL,
>>   xaxs = "r",
>>   yaxs = "r",
>>   type = "l",
>>   debug = 0,
>>   ...
>> )
>>
>> -- Installing package into temporary library ----------------
>> == Building pkgdown site ==============================
>> =========================
>> Reading from: '/Users/kelley/git/mooring'
>> Writing to:   '/Users/kelley/git/mooring/docs'
>> -- Initialising site ------------------------------
>> -----------------------------
>> -- Building home ------------------------------
>> ---------------------------------
>> Writing '404.html'
>> -- Building function reference ------------------------------
>> -------------------
>> Error:
>> ! in callr subprocess.
>> Caused by error in `map2(.x, vec_index(.x), .f, ...)`:
>> ! In index: 1.
>> ? See `$stdout` for standard output.
>> Type .Last.error to see the more details.
>> > .Last.error
>> <callr_error/rlib_error_3_0/rlib_error/error>
>> Error:
>> ! in callr subprocess.
>> Caused by error in `map2(.x, vec_index(.x), .f, ...)`:
>> ! In index: 1.
>> ? See `$stdout` for standard output.
>> ---
>> Backtrace:
>> 1. pkgdown::build_site()
>> 2. pkgdown:::build_site_external(pkg = pkg, examples = examples, run?
>> 3. callr::r(function(..., cli_colors, pkgdown_internet) { ?
>> 4. callr:::get_result(output = out, options)
>> 5. callr:::throw(callr_remote_error(remerr, output), parent = fix_?
>> ---
>> Subprocess backtrace:
>>  1. pkgdown::build_site(...)
>>  2. pkgdown:::build_site_local(pkg = pkg, examples = examples, run_do?
>>  3. pkgdown::build_reference(pkg, lazy = lazy, examples = examples, ?
>>  4. pkgdown::build_reference_index(pkg)
>>  5. pkgdown::render_page(pkg, "reference-index", data = data_referen?
>>  6. pkgdown:::render_page_html(pkg, name = name, data = data, depth =?
>>  7. utils::modifyList(data_template(pkg, depth = depth), da?
>>  8. base::stopifnot(is.list(x), is.list(val))
>>  9. pkgdown:::data_reference_index(pkg)
>> 10. meta %>% purrr::imap(data_reference_index_rows, pkg = p?
>> 11. base::unlist(., recursive = FALSE)
>> 12. purrr::compact(.)
>> 13. purrr::discard(.x, function(x) is_empty(.f(x)))
>> 14. purrr:::where_if(.x, .p, ...)
>> 15. purrr:::map_(.x, .p, ..., .type = "logical", .purrr_error_call ?
>> 16. purrr:::vctrs_vec_compat(.x, .purrr_user_env)
>> 17. purrr::imap(., data_reference_index_rows, pkg = pkg)
>> 18. purrr::map2(.x, vec_index(.x), .f, ...)
>> 19. purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
>> 20. purrr:::with_indexed_errors(i = i, names = names, error_call = ?
>> 21. base::withCallingHandlers(expr, error = function(cnd) { ?
>> 22. purrr:::call_with_cleanup(map2_impl, environment(), .type, .pro?
>> 23. local .f(.x[[i]], .y[[i]], ...)
>> 24. pkgdown:::section_topics(section$contents, pkg$topics, pkg$src_pa?
>> 25. base::rbind(topics, ext_topics(ext_strings))
>> 26. base::rbind(deparse.level, ...)
>> 27. pkgdown:::ext_topics(ext_strings)
>> 28. purrr::map2(pkg, fun, get_rd_from_help)
>> 29. purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
>> 30. purrr:::with_indexed_errors(i = i, names = names, error_call = ?
>> 31. base::withCallingHandlers(expr, error = function(cnd) { ?
>> 32. purrr:::call_with_cleanup(map2_impl, environment(), .type, .pro?
>> 33. local .f(.x[[i]], .y[[i]], ...)
>> 34. rlang::check_installed(package, "as it's used in the reference?
>> 35. base::stop(cnd)
>> 36. (function (cnd) ?
>> 37. cli::cli_abort(message, location = i, name = name, pare?
>> 38. | rlang::abort(message, ..., call = call, use_cli_format ?
>> 39. | rlang:::signal_abort(cnd, .file)
>> 40. | base::signalCondition(cnd)
>> 41. (function (cnd) ?
>> 42. cli::cli_abort(message, location = i, name = name, pare?
>> 43. | rlang::abort(message, ..., call = call, use_cli_format ?
>> 44. | rlang:::signal_abort(cnd, .file)
>> 45. | base::signalCondition(cnd)
>> 46. global (function (e) ?
>> ```
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>
>
> --
> http://hadley.nz
>
>
>

-- 
http://hadley.nz

	[[alternative HTML version deleted]]


From ke||ey @end|ng |rom d@|@c@  Wed Jan  3 20:18:05 2024
From: ke||ey @end|ng |rom d@|@c@ (Daniel Kelley)
Date: Wed, 3 Jan 2024 19:18:05 +0000
Subject: [R-pkg-devel] 
 how to use pkgdown::build_site() with a project using
 S7 with a specialized plot()?
In-Reply-To: <CABdHhvERBUSxpuQ4B+xhjtr=XvGQdRFm81KbADHFnvQcvY0uyA@mail.gmail.com>
References: <99119974-B153-4584-A974-C4E423D3DB83@dal.ca>
 <CABdHhvFtCY64ArC=qHG6Zmd2NQprhOxbehy4GVSL2k=sLc=FPg@mail.gmail.com>
 <DF86B412-821B-45D0-9DE7-C55CE7DA6A8D@dal.ca>
 <CABdHhvERBUSxpuQ4B+xhjtr=XvGQdRFm81KbADHFnvQcvY0uyA@mail.gmail.com>
Message-ID: <217173AF-B7B6-443A-BC25-C0ACA4226A3A@dal.ca>

Oh, Hadley, I'm sorry to bother you whilst you're on vacation.  Please don't take too much time on.  I'm certainly not in a rush at all.

To answer your question, yes, I rebuilt the documentation (within RStudio, via the 'More/Document' scheme) and it still fails.

I wonder if I need to do a

method(plot, mooring:::mooringS7) <- function(ETC) {ETC}

instead of

`plot.mooring::mooring` <- function(ETC) {ETC}

which is what I'm doing now, and which works for plotting but not webpage-building.

PS. That `mooringS7` vs `mooring` name difference is because I am using

mooringS7 <- S7::new_class("mooring", ETC

because I want the user-facing function to be called `mooring`.  (I am having the user using the object constructor directly.  I guess I could, but I'm doing it this way to retain my old code, which used S3 methodology and had a fair bit of logic before constructing a return value.  I can change that, of course.  For now, my S7 steps are a bit timid, so I can fall back to my S3 code if I cannot figure things out.)



On Jan 3, 2024, at 2:48?PM, Hadley Wickham <h.wickham at gmail.com> wrote:

CAUTION: The Sender of this email is not from within Dalhousie.
Did you re-document? You?ll need that to correctly regenerate the .Rd, I think. (Sorry I?m on vacation so I?m guessing at stuff from my phone)

Hadley

On Thursday, January 4, 2024, Daniel Kelley <kelley at dal.ca<mailto:kelley at dal.ca>> wrote:
Thanks.  I installed the latest roxygen2 and pkgdown, and tried to make a simple reprex
git clone https://github.com/dankelley/mooring.git
cd mooring
git checkout S7
Rscript -e "pkgdown::clean_site()"
Rscript -e "pkgdown::build_site()"

but it still fails.  (Full output is below, for completeness.) I wonder whether I ought to be doing something extra in the Roxygen code (in file R/plot.R within this directory.). Please note that I can rename it as "draw()" or something, but I'm hoping to learn S7 properly, because I'm really quite keen to leave my S3 and S4 days behind me.  (PS to Hadley: I loved the presentation you gave on what was then R7, and have recommended it to colleagues not just for the R7 information, but for the concise explanation of the benefit of OOP and generics.)

?? Installing package mooring into temporary library ???????????????????????????
?? Building pkgdown site for package mooring ???????????????????????????????????
Reading from: /Users/kelley/wednesday/mooring
Writing to: /Users/kelley/wednesday/mooring/docs
?? Initialising site ???????????????????????????????????????????????????????????
Copying
../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/pkgdown/BS3/assets/bootstrap-toc.css,
../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/pkgdown/BS3/assets/bootstrap-toc.js,
../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/pkgdown/BS3/assets/docsearch.css,
../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/pkgdown/BS3/assets/docsearch.js,
../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/pkgdown/BS3/assets/link.svg,
../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/pkgdown/BS3/assets/pkgdown.css,
and
../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/pkgdown/BS3/assets/pkgdown.js
to bootstrap-toc.css, bootstrap-toc.js, docsearch.css, docsearch.js, link.svg,
pkgdown.css, and pkgdown.js
?? Building home ???????????????????????????????????????????????????????????????
Writing authors.html
Copying man/figures/Makefile, man/figures/README-example-1.png,
man/figures/README-example-2.png, man/figures/force_diagram.R, and
man/figures/force_diagram.png
to reference/figures/Makefile, reference/figures/README-example-1.png,
reference/figures/README-example-2.png, reference/figures/force_diagram.R, and
reference/figures/force_diagram.png
Writing 404.html
?? Building function reference ?????????????????????????????????????????????????
Error:
! in callr subprocess.
Caused by error in `map2(.x, vec_index(.x), .f, ...)`:
! In index: 1.
---
Standard error:
?? Building pkgdown site for package mooring ???????????????????????????????????
Reading from: /Users/kelley/wednesday/mooring
Writing to: /Users/kelley/wednesday/mooring/docs
?? Initialising site ???????????????????????????????????????????????????????????
Copying
../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/pkgdown/BS3/assets/bootstrap-toc.css,
../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/pkgdown/BS3/assets/bootstrap-toc.js,
../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/pkgdown/BS3/assets/docsearch.css,
../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/pkgdown/BS3/assets/docsearch.js,
../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/pkgdown/BS3/assets/link.svg,
../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/pkgdown/BS3/assets/pkgdown.css,
and
../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/pkgdown/BS3/assets/pkgdown.js
to bootstrap-toc.css, bootstrap-toc.js, docsearch.css, docsearch.js, link.svg,
pkgdown.css, and pkgdown.js
?? Building home ???????????????????????????????????????????????????????????????
Writing authors.html
Copying man/figures/Makefile, man/figures/README-example-1.png,
man/figures/README-example-2.png, man/figures/force_diagram.R, and
man/figures/force_diagram.png
to reference/figures/Makefile, reference/figures/README-example-1.png,
reference/figures/README-example-2.png, reference/figures/force_diagram.R, and
reference/figures/force_diagram.png
Writing 404.html
?? Building function reference ?????????????????????????????????????????????????
---
Backtrace:
1. pkgdown::build_site()
2. pkgdown:::build_site_external(pkg = pkg, examples = examples, run_dont_run = run_don?
3. callr::r(function(..., cli_colors, pkgdown_internet) { ?
4. callr:::get_result(output = out, options)
5. callr:::throw(callr_remote_error(remerr, output), parent = fix_msg(remerr[[3]]))
---
Subprocess backtrace:
 1. pkgdown::build_site(...)
 2. pkgdown:::build_site_local(pkg = pkg, examples = examples, run_dont_run = run_dont_r?
 3. pkgdown::build_reference(pkg, lazy = lazy, examples = examples, run_dont_run = run_?
 4. pkgdown::build_reference_index(pkg)
 5. pkgdown::render_page(pkg, "reference-index", data = data_reference_index(pkg), ?
 6. pkgdown:::render_page_html(pkg, name = name, data = data, depth = depth)
 7. utils::modifyList(data_template(pkg, depth = depth), data)
 8. base::stopifnot(is.list(x), is.list(val))
 9. pkgdown:::data_reference_index(pkg)
10. meta %>% purrr::imap(data_reference_index_rows, pkg = pkg) %>% ?
11. base::unlist(., recursive = FALSE)
12. purrr::compact(.)
13. purrr::discard(.x, function(x) is_empty(.f(x)))
14. purrr:::where_if(.x, .p, ...)
15. purrr:::map_(.x, .p, ..., .type = "logical", .purrr_error_call = .purrr_error_call)
16. purrr:::vctrs_vec_compat(.x, .purrr_user_env)
17. purrr::imap(., data_reference_index_rows, pkg = pkg)
18. purrr::map2(.x, vec_index(.x), .f, ...)
19. purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
20. purrr:::with_indexed_errors(i = i, names = names, error_call = .purrr_error_call, ?
21. base::withCallingHandlers(expr, error = function(cnd) { ?
22. purrr:::call_with_cleanup(map2_impl, environment(), .type, .progress, ?
23. local .f(.x[[i]], .y[[i]], ...)
24. pkgdown:::section_topics(section$contents, pkg$topics, pkg$src_path)
25. base::rbind(topics, ext_topics(ext_strings))
26. base::rbind(deparse.level, ...)
27. pkgdown:::ext_topics(ext_strings)
28. purrr::map2(pkg, fun, get_rd_from_help)
29. purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
30. purrr:::with_indexed_errors(i = i, names = names, error_call = .purrr_error_call, ?
31. base::withCallingHandlers(expr, error = function(cnd) { ?
32. purrr:::call_with_cleanup(map2_impl, environment(), .type, .progress, ?
33. local .f(.x[[i]], .y[[i]], ...)
34. rlang::check_installed(package, "as it's used in the reference index.")
35. base::stop(cnd)
36. (function (cnd) ?
37. cli::cli_abort(message, location = i, name = name, parent = cnd, ?
38. | rlang::abort(message, ..., call = call, use_cli_format = TRUE, ?
39. | rlang:::signal_abort(cnd, .file)
40. | base::signalCondition(cnd)
41. (function (cnd) ?
42. cli::cli_abort(message, location = i, name = name, parent = cnd, ?
43. | rlang::abort(message, ..., call = call, use_cli_format = TRUE, ?
44. | rlang:::signal_abort(cnd, .file)
45. | base::signalCondition(cnd)
46. global (function (e) ?
Execution halted



On Jan 3, 2024, at 1:06?PM, Hadley Wickham <h.wickham at gmail.com<mailto:h.wickham at gmail.com>> wrote:

CAUTION: The Sender of this email is not from within Dalhousie.
This bug is fixed in the dev version (I don?t remember off the top of my head in which of pkgdown and roxygen2 you need but it might be both). I?m planning CRAN updates for both in the near future.

Hadley

On Thursday, January 4, 2024, Daniel Kelley <kelley at dal.ca<mailto:kelley at dal.ca>> wrote:
# Question

Is there an online example online of specializing `plot()` for S7 objects, such that `pkgdown::build_site()` will produce webpages?  I ask because I find lots of users (of other packages) tend to consult websites made with pkgdown, rather than using the online help within R.  I think the problem I am having (discussed in the following sections) has to do with my specialization of plot().  I say that because when I was using S3 objects in an earlier version of my package, `pkgdown::build_site()` worked as intended.

# Background

In my 'mooring' package (https://github.com/dankelley/mooring/tree/S7), I am writing code like (https://github.com/dankelley/mooring/blob/f70b53ca12e88968f65710c205b50a64f750a99d/R/plot.R#L69)

```R
#' @aliases plot.mooring
#' ETC
`plot.mooring::mooring` <- plot(ETC) ETC
```

to handle objects made with (https://github.com/dankelley/mooring/blob/f70b53ca12e88968f65710c205b50a64f750a99d/R/oo.R#L2)

```R
mooringS7 <- S7::new_class("mooring",
    package = "mooring",
ETC
```

Built up in Rstudio, with Roxygen2 being used to create documentation, things seem to work, e.g.

```R
m <- mooring(anchor(), wire(length = 80), float(), waterDepth = 100)
plot(m)
```

produces a plot as intended, and

```R
?plot.mooring
```

produces documentation as intended.

*However* I encounter a problem comes when I try building a website with

```R
pkgdown::build_site()
```

This yields results as in the next section.  (I apologize for the length. I'm including the whole thing because I thought that would be less bothersome than writing another email to the list.)

I am not sure how to find the problem, and so I hope that someone on this list can point out an example of how to set up `plot()` to work with S7 objects, in such a way that documentation can be created with Roxygen2 and websites can be made with `pkgdown::build_site()`.

# What pkgdown::build_site() gives

```
> library(pkgdown)
> build_site()
Warning: Failed to parse usage:

S3method(`plot`, ``mooring::mooring``)(
  x,
  which = "shape",
  showInterfaces = TRUE,
  showDepths = FALSE,
  showLabels = TRUE,
  showDetails = FALSE,
  fancy = FALSE,
  title = "",
  mar = c(1.5, 3.5, 3.5, 1),
  mgp = c(2, 0.7, 0),
  xlim = NULL,
  xaxs = "r",
  yaxs = "r",
  type = "l",
  debug = 0,
  ...
)

-- Installing package into temporary library ----------------
== Building pkgdown site =======================================================
Reading from: '/Users/kelley/git/mooring'
Writing to:   '/Users/kelley/git/mooring/docs'
-- Initialising site -----------------------------------------------------------
-- Building home ---------------------------------------------------------------
Writing '404.html'
-- Building function reference -------------------------------------------------
Error:
! in callr subprocess.
Caused by error in `map2(.x, vec_index(.x), .f, ...)`:
! In index: 1.
? See `$stdout` for standard output.
Type .Last.error to see the more details.
> .Last.error
<callr_error/rlib_error_3_0/rlib_error/error>
Error:
! in callr subprocess.
Caused by error in `map2(.x, vec_index(.x), .f, ...)`:
! In index: 1.
? See `$stdout` for standard output.
---
Backtrace:
1. pkgdown::build_site()
2. pkgdown:::build_site_external(pkg = pkg, examples = examples, run?
3. callr::r(function(..., cli_colors, pkgdown_internet) { ?
4. callr:::get_result(output = out, options)
5. callr:::throw(callr_remote_error(remerr, output), parent = fix_?
---
Subprocess backtrace:
 1. pkgdown::build_site(...)
 2. pkgdown:::build_site_local(pkg = pkg, examples = examples, run_do?
 3. pkgdown::build_reference(pkg, lazy = lazy, examples = examples, ?
 4. pkgdown::build_reference_index(pkg)
 5. pkgdown::render_page(pkg, "reference-index", data = data_referen?
 6. pkgdown:::render_page_html(pkg, name = name, data = data, depth =?
 7. utils::modifyList(data_template(pkg, depth = depth), da?
 8. base::stopifnot(is.list(x), is.list(val))
 9. pkgdown:::data_reference_index(pkg)
10. meta %>% purrr::imap(data_reference_index_rows, pkg = p?
11. base::unlist(., recursive = FALSE)
12. purrr::compact(.)
13. purrr::discard(.x, function(x) is_empty(.f(x)))
14. purrr:::where_if(.x, .p, ...)
15. purrr:::map_(.x, .p, ..., .type = "logical", .purrr_error_call ?
16. purrr:::vctrs_vec_compat(.x, .purrr_user_env)
17. purrr::imap(., data_reference_index_rows, pkg = pkg)
18. purrr::map2(.x, vec_index(.x), .f, ...)
19. purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
20. purrr:::with_indexed_errors(i = i, names = names, error_call = ?
21. base::withCallingHandlers(expr, error = function(cnd) { ?
22. purrr:::call_with_cleanup(map2_impl, environment(), .type, .pro?
23. local .f(.x[[i]], .y[[i]], ...)
24. pkgdown:::section_topics(section$contents, pkg$topics, pkg$src_pa?
25. base::rbind(topics, ext_topics(ext_strings))
26. base::rbind(deparse.level, ...)
27. pkgdown:::ext_topics(ext_strings)
28. purrr::map2(pkg, fun, get_rd_from_help)
29. purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
30. purrr:::with_indexed_errors(i = i, names = names, error_call = ?
31. base::withCallingHandlers(expr, error = function(cnd) { ?
32. purrr:::call_with_cleanup(map2_impl, environment(), .type, .pro?
33. local .f(.x[[i]], .y[[i]], ...)
34. rlang::check_installed(package, "as it's used in the reference?
35. base::stop(cnd)
36. (function (cnd) ?
37. cli::cli_abort(message, location = i, name = name, pare?
38. | rlang::abort(message, ..., call = call, use_cli_format ?
39. | rlang:::signal_abort(cnd, .file)
40. | base::signalCondition(cnd)
41. (function (cnd) ?
42. cli::cli_abort(message, location = i, name = name, pare?
43. | rlang::abort(message, ..., call = call, use_cli_format ?
44. | rlang:::signal_abort(cnd, .file)
45. | base::signalCondition(cnd)
46. global (function (e) ?
```

______________________________________________
R-package-devel at r-project.org<mailto:R-package-devel at r-project.org> mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel


--
http://hadley.nz<http://hadley.nz/>



--
http://hadley.nz<http://hadley.nz/>


	[[alternative HTML version deleted]]


From ke||ey @end|ng |rom d@|@c@  Wed Jan  3 20:38:17 2024
From: ke||ey @end|ng |rom d@|@c@ (Daniel Kelley)
Date: Wed, 3 Jan 2024 19:38:17 +0000
Subject: [R-pkg-devel] 
 how to use pkgdown::build_site() with a project using
 S7 with a specialized plot()?
In-Reply-To: <217173AF-B7B6-443A-BC25-C0ACA4226A3A@dal.ca>
References: <99119974-B153-4584-A974-C4E423D3DB83@dal.ca>
 <CABdHhvFtCY64ArC=qHG6Zmd2NQprhOxbehy4GVSL2k=sLc=FPg@mail.gmail.com>
 <DF86B412-821B-45D0-9DE7-C55CE7DA6A8D@dal.ca>
 <CABdHhvERBUSxpuQ4B+xhjtr=XvGQdRFm81KbADHFnvQcvY0uyA@mail.gmail.com>
 <217173AF-B7B6-443A-BC25-C0ACA4226A3A@dal.ca>
Message-ID: <BD26FD59-5E3D-4FC6-9E48-2DF71E9F436F@dal.ca>

Answering my own question here ...

The problem was that I was using

	mooringS7 <- S7::new_class("mooring", ETC

instead of

	mooringS7 <- S7::new_class("mooringS7", ETC

With the change to the latter, all works fine now.  Thanks very much to all who have helped, so generously and so quickly.  

I wish a very Happy New Year, to all!!

Dan.

Dan Kelley / Oceanography Department / Dalhousie University / Halifax, Nova Scotia / Canada


> On Jan 3, 2024, at 3:18?PM, Daniel Kelley <kelley at dal.ca> wrote:
> 
> Oh, Hadley, I'm sorry to bother you whilst you're on vacation.  Please don't take too much time on.  I'm certainly not in a rush at all.
> 
> To answer your question, yes, I rebuilt the documentation (within RStudio, via the 'More/Document' scheme) and it still fails.
> 
> I wonder if I need to do a
> 
> method(plot, mooring:::mooringS7) <- function(ETC) {ETC}
> 
> instead of
> 
> `plot.mooring::mooring` <- function(ETC) {ETC}
> 
> which is what I'm doing now, and which works for plotting but not webpage-building.
> 
> PS. That `mooringS7` vs `mooring` name difference is because I am using
> 
> mooringS7 <- S7::new_class("mooring", ETC
> 
> because I want the user-facing function to be called `mooring`.  (I am having the user using the object constructor directly.  I guess I could, but I'm doing it this way to retain my old code, which used S3 methodology and had a fair bit of logic before constructing a return value.  I can change that, of course.  For now, my S7 steps are a bit timid, so I can fall back to my S3 code if I cannot figure things out.)
> 
> 
> 
> On Jan 3, 2024, at 2:48?PM, Hadley Wickham <h.wickham at gmail.com> wrote:
> 
> CAUTION: The Sender of this email is not from within Dalhousie.
> Did you re-document? You?ll need that to correctly regenerate the .Rd, I think. (Sorry I?m on vacation so I?m guessing at stuff from my phone)
> 
> Hadley
> 
> On Thursday, January 4, 2024, Daniel Kelley <kelley at dal.ca<mailto:kelley at dal.ca>> wrote:
> Thanks.  I installed the latest roxygen2 and pkgdown, and tried to make a simple reprex
> git clone https://github.com/dankelley/mooring.git
> cd mooring
> git checkout S7
> Rscript -e "pkgdown::clean_site()"
> Rscript -e "pkgdown::build_site()"
> 
> but it still fails.  (Full output is below, for completeness.) I wonder whether I ought to be doing something extra in the Roxygen code (in file R/plot.R within this directory.). Please note that I can rename it as "draw()" or something, but I'm hoping to learn S7 properly, because I'm really quite keen to leave my S3 and S4 days behind me.  (PS to Hadley: I loved the presentation you gave on what was then R7, and have recommended it to colleagues not just for the R7 information, but for the concise explanation of the benefit of OOP and generics.)
> 
> ?? Installing package mooring into temporary library ???????????????????????????
> ?? Building pkgdown site for package mooring ???????????????????????????????????
> Reading from: /Users/kelley/wednesday/mooring
> Writing to: /Users/kelley/wednesday/mooring/docs
> ?? Initialising site ???????????????????????????????????????????????????????????
> Copying
> ../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/pkgdown/BS3/assets/bootstrap-toc.css,
> ../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/pkgdown/BS3/assets/bootstrap-toc.js,
> ../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/pkgdown/BS3/assets/docsearch.css,
> ../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/pkgdown/BS3/assets/docsearch.js,
> ../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/pkgdown/BS3/assets/link.svg,
> ../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/pkgdown/BS3/assets/pkgdown.css,
> and
> ../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/pkgdown/BS3/assets/pkgdown.js
> to bootstrap-toc.css, bootstrap-toc.js, docsearch.css, docsearch.js, link.svg,
> pkgdown.css, and pkgdown.js
> ?? Building home ???????????????????????????????????????????????????????????????
> Writing authors.html
> Copying man/figures/Makefile, man/figures/README-example-1.png,
> man/figures/README-example-2.png, man/figures/force_diagram.R, and
> man/figures/force_diagram.png
> to reference/figures/Makefile, reference/figures/README-example-1.png,
> reference/figures/README-example-2.png, reference/figures/force_diagram.R, and
> reference/figures/force_diagram.png
> Writing 404.html
> ?? Building function reference ?????????????????????????????????????????????????
> Error:
> ! in callr subprocess.
> Caused by error in `map2(.x, vec_index(.x), .f, ...)`:
> ! In index: 1.
> ---
> Standard error:
> ?? Building pkgdown site for package mooring ???????????????????????????????????
> Reading from: /Users/kelley/wednesday/mooring
> Writing to: /Users/kelley/wednesday/mooring/docs
> ?? Initialising site ???????????????????????????????????????????????????????????
> Copying
> ../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/pkgdown/BS3/assets/bootstrap-toc.css,
> ../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/pkgdown/BS3/assets/bootstrap-toc.js,
> ../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/pkgdown/BS3/assets/docsearch.css,
> ../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/pkgdown/BS3/assets/docsearch.js,
> ../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/pkgdown/BS3/assets/link.svg,
> ../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/pkgdown/BS3/assets/pkgdown.css,
> and
> ../../../../Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/pkgdown/BS3/assets/pkgdown.js
> to bootstrap-toc.css, bootstrap-toc.js, docsearch.css, docsearch.js, link.svg,
> pkgdown.css, and pkgdown.js
> ?? Building home ???????????????????????????????????????????????????????????????
> Writing authors.html
> Copying man/figures/Makefile, man/figures/README-example-1.png,
> man/figures/README-example-2.png, man/figures/force_diagram.R, and
> man/figures/force_diagram.png
> to reference/figures/Makefile, reference/figures/README-example-1.png,
> reference/figures/README-example-2.png, reference/figures/force_diagram.R, and
> reference/figures/force_diagram.png
> Writing 404.html
> ?? Building function reference ?????????????????????????????????????????????????
> ---
> Backtrace:
> 1. pkgdown::build_site()
> 2. pkgdown:::build_site_external(pkg = pkg, examples = examples, run_dont_run = run_don?
> 3. callr::r(function(..., cli_colors, pkgdown_internet) { ?
> 4. callr:::get_result(output = out, options)
> 5. callr:::throw(callr_remote_error(remerr, output), parent = fix_msg(remerr[[3]]))
> ---
> Subprocess backtrace:
> 1. pkgdown::build_site(...)
> 2. pkgdown:::build_site_local(pkg = pkg, examples = examples, run_dont_run = run_dont_r?
> 3. pkgdown::build_reference(pkg, lazy = lazy, examples = examples, run_dont_run = run_?
> 4. pkgdown::build_reference_index(pkg)
> 5. pkgdown::render_page(pkg, "reference-index", data = data_reference_index(pkg), ?
> 6. pkgdown:::render_page_html(pkg, name = name, data = data, depth = depth)
> 7. utils::modifyList(data_template(pkg, depth = depth), data)
> 8. base::stopifnot(is.list(x), is.list(val))
> 9. pkgdown:::data_reference_index(pkg)
> 10. meta %>% purrr::imap(data_reference_index_rows, pkg = pkg) %>% ?
> 11. base::unlist(., recursive = FALSE)
> 12. purrr::compact(.)
> 13. purrr::discard(.x, function(x) is_empty(.f(x)))
> 14. purrr:::where_if(.x, .p, ...)
> 15. purrr:::map_(.x, .p, ..., .type = "logical", .purrr_error_call = .purrr_error_call)
> 16. purrr:::vctrs_vec_compat(.x, .purrr_user_env)
> 17. purrr::imap(., data_reference_index_rows, pkg = pkg)
> 18. purrr::map2(.x, vec_index(.x), .f, ...)
> 19. purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
> 20. purrr:::with_indexed_errors(i = i, names = names, error_call = .purrr_error_call, ?
> 21. base::withCallingHandlers(expr, error = function(cnd) { ?
> 22. purrr:::call_with_cleanup(map2_impl, environment(), .type, .progress, ?
> 23. local .f(.x[[i]], .y[[i]], ...)
> 24. pkgdown:::section_topics(section$contents, pkg$topics, pkg$src_path)
> 25. base::rbind(topics, ext_topics(ext_strings))
> 26. base::rbind(deparse.level, ...)
> 27. pkgdown:::ext_topics(ext_strings)
> 28. purrr::map2(pkg, fun, get_rd_from_help)
> 29. purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
> 30. purrr:::with_indexed_errors(i = i, names = names, error_call = .purrr_error_call, ?
> 31. base::withCallingHandlers(expr, error = function(cnd) { ?
> 32. purrr:::call_with_cleanup(map2_impl, environment(), .type, .progress, ?
> 33. local .f(.x[[i]], .y[[i]], ...)
> 34. rlang::check_installed(package, "as it's used in the reference index.")
> 35. base::stop(cnd)
> 36. (function (cnd) ?
> 37. cli::cli_abort(message, location = i, name = name, parent = cnd, ?
> 38. | rlang::abort(message, ..., call = call, use_cli_format = TRUE, ?
> 39. | rlang:::signal_abort(cnd, .file)
> 40. | base::signalCondition(cnd)
> 41. (function (cnd) ?
> 42. cli::cli_abort(message, location = i, name = name, parent = cnd, ?
> 43. | rlang::abort(message, ..., call = call, use_cli_format = TRUE, ?
> 44. | rlang:::signal_abort(cnd, .file)
> 45. | base::signalCondition(cnd)
> 46. global (function (e) ?
> Execution halted
> 
> 
> 
> On Jan 3, 2024, at 1:06?PM, Hadley Wickham <h.wickham at gmail.com<mailto:h.wickham at gmail.com>> wrote:
> 
> CAUTION: The Sender of this email is not from within Dalhousie.
> This bug is fixed in the dev version (I don?t remember off the top of my head in which of pkgdown and roxygen2 you need but it might be both). I?m planning CRAN updates for both in the near future.
> 
> Hadley
> 
> On Thursday, January 4, 2024, Daniel Kelley <kelley at dal.ca<mailto:kelley at dal.ca>> wrote:
> # Question
> 
> Is there an online example online of specializing `plot()` for S7 objects, such that `pkgdown::build_site()` will produce webpages?  I ask because I find lots of users (of other packages) tend to consult websites made with pkgdown, rather than using the online help within R.  I think the problem I am having (discussed in the following sections) has to do with my specialization of plot().  I say that because when I was using S3 objects in an earlier version of my package, `pkgdown::build_site()` worked as intended.
> 
> # Background
> 
> In my 'mooring' package (https://github.com/dankelley/mooring/tree/S7), I am writing code like (https://github.com/dankelley/mooring/blob/f70b53ca12e88968f65710c205b50a64f750a99d/R/plot.R#L69)
> 
> ```R
> #' @aliases plot.mooring
> #' ETC
> `plot.mooring::mooring` <- plot(ETC) ETC
> ```
> 
> to handle objects made with (https://github.com/dankelley/mooring/blob/f70b53ca12e88968f65710c205b50a64f750a99d/R/oo.R#L2)
> 
> ```R
> mooringS7 <- S7::new_class("mooring",
>    package = "mooring",
> ETC
> ```
> 
> Built up in Rstudio, with Roxygen2 being used to create documentation, things seem to work, e.g.
> 
> ```R
> m <- mooring(anchor(), wire(length = 80), float(), waterDepth = 100)
> plot(m)
> ```
> 
> produces a plot as intended, and
> 
> ```R
> ?plot.mooring
> ```
> 
> produces documentation as intended.
> 
> *However* I encounter a problem comes when I try building a website with
> 
> ```R
> pkgdown::build_site()
> ```
> 
> This yields results as in the next section.  (I apologize for the length. I'm including the whole thing because I thought that would be less bothersome than writing another email to the list.)
> 
> I am not sure how to find the problem, and so I hope that someone on this list can point out an example of how to set up `plot()` to work with S7 objects, in such a way that documentation can be created with Roxygen2 and websites can be made with `pkgdown::build_site()`.
> 
> # What pkgdown::build_site() gives
> 
> ```
>> library(pkgdown)
>> build_site()
> Warning: Failed to parse usage:
> 
> S3method(`plot`, ``mooring::mooring``)(
>  x,
>  which = "shape",
>  showInterfaces = TRUE,
>  showDepths = FALSE,
>  showLabels = TRUE,
>  showDetails = FALSE,
>  fancy = FALSE,
>  title = "",
>  mar = c(1.5, 3.5, 3.5, 1),
>  mgp = c(2, 0.7, 0),
>  xlim = NULL,
>  xaxs = "r",
>  yaxs = "r",
>  type = "l",
>  debug = 0,
>  ...
> )
> 
> -- Installing package into temporary library ----------------
> == Building pkgdown site =======================================================
> Reading from: '/Users/kelley/git/mooring'
> Writing to:   '/Users/kelley/git/mooring/docs'
> -- Initialising site -----------------------------------------------------------
> -- Building home ---------------------------------------------------------------
> Writing '404.html'
> -- Building function reference -------------------------------------------------
> Error:
> ! in callr subprocess.
> Caused by error in `map2(.x, vec_index(.x), .f, ...)`:
> ! In index: 1.
> ? See `$stdout` for standard output.
> Type .Last.error to see the more details.
>> .Last.error
> <callr_error/rlib_error_3_0/rlib_error/error>
> Error:
> ! in callr subprocess.
> Caused by error in `map2(.x, vec_index(.x), .f, ...)`:
> ! In index: 1.
> ? See `$stdout` for standard output.
> ---
> Backtrace:
> 1. pkgdown::build_site()
> 2. pkgdown:::build_site_external(pkg = pkg, examples = examples, run?
> 3. callr::r(function(..., cli_colors, pkgdown_internet) { ?
> 4. callr:::get_result(output = out, options)
> 5. callr:::throw(callr_remote_error(remerr, output), parent = fix_?
> ---
> Subprocess backtrace:
> 1. pkgdown::build_site(...)
> 2. pkgdown:::build_site_local(pkg = pkg, examples = examples, run_do?
> 3. pkgdown::build_reference(pkg, lazy = lazy, examples = examples, ?
> 4. pkgdown::build_reference_index(pkg)
> 5. pkgdown::render_page(pkg, "reference-index", data = data_referen?
> 6. pkgdown:::render_page_html(pkg, name = name, data = data, depth =?
> 7. utils::modifyList(data_template(pkg, depth = depth), da?
> 8. base::stopifnot(is.list(x), is.list(val))
> 9. pkgdown:::data_reference_index(pkg)
> 10. meta %>% purrr::imap(data_reference_index_rows, pkg = p?
> 11. base::unlist(., recursive = FALSE)
> 12. purrr::compact(.)
> 13. purrr::discard(.x, function(x) is_empty(.f(x)))
> 14. purrr:::where_if(.x, .p, ...)
> 15. purrr:::map_(.x, .p, ..., .type = "logical", .purrr_error_call ?
> 16. purrr:::vctrs_vec_compat(.x, .purrr_user_env)
> 17. purrr::imap(., data_reference_index_rows, pkg = pkg)
> 18. purrr::map2(.x, vec_index(.x), .f, ...)
> 19. purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
> 20. purrr:::with_indexed_errors(i = i, names = names, error_call = ?
> 21. base::withCallingHandlers(expr, error = function(cnd) { ?
> 22. purrr:::call_with_cleanup(map2_impl, environment(), .type, .pro?
> 23. local .f(.x[[i]], .y[[i]], ...)
> 24. pkgdown:::section_topics(section$contents, pkg$topics, pkg$src_pa?
> 25. base::rbind(topics, ext_topics(ext_strings))
> 26. base::rbind(deparse.level, ...)
> 27. pkgdown:::ext_topics(ext_strings)
> 28. purrr::map2(pkg, fun, get_rd_from_help)
> 29. purrr:::map2_("list", .x, .y, .f, ..., .progress = .progress)
> 30. purrr:::with_indexed_errors(i = i, names = names, error_call = ?
> 31. base::withCallingHandlers(expr, error = function(cnd) { ?
> 32. purrr:::call_with_cleanup(map2_impl, environment(), .type, .pro?
> 33. local .f(.x[[i]], .y[[i]], ...)
> 34. rlang::check_installed(package, "as it's used in the reference?
> 35. base::stop(cnd)
> 36. (function (cnd) ?
> 37. cli::cli_abort(message, location = i, name = name, pare?
> 38. | rlang::abort(message, ..., call = call, use_cli_format ?
> 39. | rlang:::signal_abort(cnd, .file)
> 40. | base::signalCondition(cnd)
> 41. (function (cnd) ?
> 42. cli::cli_abort(message, location = i, name = name, pare?
> 43. | rlang::abort(message, ..., call = call, use_cli_format ?
> 44. | rlang:::signal_abort(cnd, .file)
> 45. | base::signalCondition(cnd)
> 46. global (function (e) ?
> ```
> 
> ______________________________________________
> R-package-devel at r-project.org<mailto:R-package-devel at r-project.org> mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> 
> --
> http://hadley.nz<http://hadley.nz/>
> 
> 
> 
> --
> http://hadley.nz<http://hadley.nz/>
> 
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From du@@@@dr|@n @end|ng |rom gm@||@com  Thu Jan  4 17:43:38 2024
From: du@@@@dr|@n @end|ng |rom gm@||@com (=?UTF-8?B?QWRyaWFuIER1yJlh?=)
Date: Thu, 4 Jan 2024 18:43:38 +0200
Subject: [R-pkg-devel] [Rd] static html vignette
In-Reply-To: <20240104135548.03db2b3a@Tarkus>
References: <CAJ=0CtCZM4AW_obdmipvd_X9pcF_b2JD49qbbNVpX+Z9VnZwGg@mail.gmail.com>
 <20240104135548.03db2b3a@Tarkus>
Message-ID: <CAJ=0CtAKAjO7ZRe=08MoaVcFnCiJR-RKHHzA8Nm9hgvt3jVaVw@mail.gmail.com>

(Moved here following Ivan's suggestion)

On Thu, Jan 4, 2024 at 12:55?PM Ivan Krylov <krylov.r00t at gmail.com> wrote:

> On Thu, 4 Jan 2024 11:57:15 +0200
> Adrian Du?a <dusa.adrian at gmail.com> wrote:
>
> > I wonder if it would be possible to include an html static vignette.
>
> I would say that static vignettes are against the spirit of vignettes:
> the idea is to provide another layer of unit testing to the package by
> providing a deeper executable example than is possible with just Rd
> examples. I think that Bioconductor will even refuse a package with a
> vignette with no executable code in it.
>

I understand that perfectly, but for instance my package declared already
has over 800 tests and 100% code coverage. More unit testing in the
vignettes really strikes as unnecessary.

One other reason to use a static vignette, in my case, is that package
Sweave is not available for my version of R (on MacOS, M2 version)



> Still, you can use the R.rsp package to provide static vignettes in
> both PDF and HTML formats:
>
> https://cran.r-project.org/package=R.rsp/vignettes/R_packages-Static_PDF_and_HTML_vignettes.pdf
>
> This will add 6 packages to your total Suggests budget:
>
> setdiff(
>  unlist(package_dependencies('R.rsp', recursive=TRUE)),
>  unlist(standard_package_names())
> )
> # [1] "R.methodsS3" "R.oo"        "R.utils"     "R.cache"     "digest"


Yes indeed, I know about R.rsp.
To me at least, zero dependency means that users install that package and
that package alone, the reason for which I am now looking for static
(preferably html) vignettes.

I guess another question is why should the "Suggests" packages need to be
installed by end users. I understand CRAN checks need to make sure the
Vignettes can be processed and the code inside runs fine (just like the
examples in the Rd files) but it is very unlikely that end-users will want
to compile the vignettes themselves.

From my own experience of almost 20 years of using R, I never-ever build
the vignettes of a certain package because it is much simpler to read them
on CRAN. I wonder, then, why are end users forced to install
Vignette-building "Suggests" packages (with long dependency chains) when
they practically never do that.

Life would be much simpler if the Suggests packages would not be
(automatically) installed, or if CRAN provided a way to include static
Vignettes to avoid the heavy dependencies of building them.

Best regards,
Adrian

	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu Jan  4 21:23:06 2024
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 4 Jan 2024 15:23:06 -0500
Subject: [R-pkg-devel] [Rd] static html vignette
In-Reply-To: <CAJ=0CtAKAjO7ZRe=08MoaVcFnCiJR-RKHHzA8Nm9hgvt3jVaVw@mail.gmail.com>
References: <CAJ=0CtCZM4AW_obdmipvd_X9pcF_b2JD49qbbNVpX+Z9VnZwGg@mail.gmail.com>
 <20240104135548.03db2b3a@Tarkus>
 <CAJ=0CtAKAjO7ZRe=08MoaVcFnCiJR-RKHHzA8Nm9hgvt3jVaVw@mail.gmail.com>
Message-ID: <9ca3fb97-4731-4e11-b0f8-b278bb87081f@gmail.com>

On 04/01/2024 11:43 a.m., Adrian Du?a wrote:
 > (Moved here following Ivan's suggestion)
 >
 > On Thu, Jan 4, 2024 at 12:55?PM Ivan Krylov <krylov.r00t at gmail.com> 
wrote:
 >
 >> On Thu, 4 Jan 2024 11:57:15 +0200
 >> Adrian Du?a <dusa.adrian at gmail.com> wrote:
 >>
 >>> I wonder if it would be possible to include an html static vignette.
 >>
 >> I would say that static vignettes are against the spirit of vignettes:
 >> the idea is to provide another layer of unit testing to the package by
 >> providing a deeper executable example than is possible with just Rd
 >> examples. I think that Bioconductor will even refuse a package with a
 >> vignette with no executable code in it.
 >>
 >
 > I understand that perfectly, but for instance my package declared already
 > has over 800 tests and 100% code coverage. More unit testing in the
 > vignettes really strikes as unnecessary.
 >
 > One other reason to use a static vignette, in my case, is that package
 > Sweave is not available for my version of R (on MacOS, M2 version)
As far as I know, there is no package called Sweave, there's just the 
Sweave() function in the utils package.>
 >
 >
 >> Still, you can ue the R.rsp package to provide static vignettes in
 >> both PDF and HTML formats:
 >>
 >> 
https://cran.r-project.org/package=R.rsp/vignettes/R_packages-Static_PDF_and_HTML_vignettes.pdf
 >>
 >> This will add 6 packages to your total Suggests budget:
 >>
 >> setdiff(
 >>   unlist(package_dependencies('R.rsp', recursive=TRUE)),
 >>   unlist(standard_package_names())
 >> )
 >> # [1] "R.methodsS3" "R.oo"        "R.utils"     "R.cache"     "digest"
 >
 >
 > Yes indeed, I know about R.rsp.
 > To me at least, zero dependency means that users install that package and
 > that package alone, the reason for which I am now looking for static
 > (preferably html) vignettes.
 >
 > I guess another question is why should the "Suggests" packages need to be
 > installed by end users. I understand CRAN checks need to make sure the
 > Vignettes can be processed and the code inside runs fine (just like the
 > examples in the Rd files) but it is very unlikely that end-users will 
want
 > to compile the vignettes themselves.
 >
 >  From my own experience of almost 20 years of using R, I never-ever build
 > the vignettes of a certain package because it is much simpler to read 
them
 > on CRAN. I wonder, then, why are end users forced to install
 > Vignette-building "Suggests" packages (with long dependency chains) when
 > they practically never do that.
 >
 > Life would be much simpler if the Suggests packages would not be
 > (automatically) installed, or if CRAN provided a way to include static
 > Vignettes to avoid the heavy dependencies of building them.
 >
Users aren't forced to install "Suggests" packages.  That's a choice 
they make.  The default for `install.packages()` is `dependencies = NA`, 
which says to install hard dependencies (Imports, Depends, LinkingTo).
Users have to choose a non-default setting to include Suggests.

Duncan Murdoch


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Thu Jan  4 21:43:57 2024
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Thu, 4 Jan 2024 21:43:57 +0100
Subject: [R-pkg-devel] [Rd] static html vignette
In-Reply-To: <9ca3fb97-4731-4e11-b0f8-b278bb87081f@gmail.com>
References: <CAJ=0CtCZM4AW_obdmipvd_X9pcF_b2JD49qbbNVpX+Z9VnZwGg@mail.gmail.com>
 <20240104135548.03db2b3a@Tarkus>
 <CAJ=0CtAKAjO7ZRe=08MoaVcFnCiJR-RKHHzA8Nm9hgvt3jVaVw@mail.gmail.com>
 <9ca3fb97-4731-4e11-b0f8-b278bb87081f@gmail.com>
Message-ID: <2baa876c-0a22-45fa-bd77-fac8fd5cea7a@statistik.tu-dortmund.de>



On 04.01.2024 21:23, Duncan Murdoch wrote:
> On 04/01/2024 11:43 a.m., Adrian Du?a wrote:
>  > (Moved here following Ivan's suggestion)
>  >
>  > On Thu, Jan 4, 2024 at 12:55?PM Ivan Krylov <krylov.r00t at gmail.com> 
> wrote:
>  >
>  >> On Thu, 4 Jan 2024 11:57:15 +0200
>  >> Adrian Du?a <dusa.adrian at gmail.com> wrote:
>  >>
>  >>> I wonder if it would be possible to include an html static vignette.
>  >>
>  >> I would say that static vignettes are against the spirit of vignettes:
>  >> the idea is to provide another layer of unit testing to the package by
>  >> providing a deeper executable example than is possible with just Rd
>  >> examples. I think that Bioconductor will even refuse a package with a
>  >> vignette with no executable code in it.
>  >>
>  >
>  > I understand that perfectly, but for instance my package declared 
> already
>  > has over 800 tests and 100% code coverage. More unit testing in the
>  > vignettes really strikes as unnecessary.
>  >
>  > One other reason to use a static vignette, in my case, is that package
>  > Sweave is not available for my version of R (on MacOS, M2 version)
> As far as I know, there is no package called Sweave, there's just the 
> Sweave() function in the utils package.>
>  >
>  >
>  >> Still, you can ue the R.rsp package to provide static vignettes in
>  >> both PDF and HTML formats:
>  >>
>  >> 
> https://cran.r-project.org/package=R.rsp/vignettes/R_packages-Static_PDF_and_HTML_vignettes.pdf
>  >>
>  >> This will add 6 packages to your total Suggests budget:
>  >>
>  >> setdiff(
>  >>?? unlist(package_dependencies('R.rsp', recursive=TRUE)),
>  >>?? unlist(standard_package_names())
>  >> )
>  >> # [1] "R.methodsS3" "R.oo"??????? "R.utils"???? "R.cache"???? "digest"
>  >
>  >
>  > Yes indeed, I know about R.rsp.
>  > To me at least, zero dependency means that users install that package 
> and
>  > that package alone, the reason for which I am now looking for static
>  > (preferably html) vignettes.
>  >
>  > I guess another question is why should the "Suggests" packages need 
> to be
>  > installed by end users. I understand CRAN checks need to make sure the
>  > Vignettes can be processed and the code inside runs fine (just like the
>  > examples in the Rd files) but it is very unlikely that end-users will 
> want
>  > to compile the vignettes themselves.
>  >
>  >? From my own experience of almost 20 years of using R, I never-ever 
> build
>  > the vignettes of a certain package because it is much simpler to read 
> them
>  > on CRAN. I wonder, then, why are end users forced to install
>  > Vignette-building "Suggests" packages (with long dependency chains) when
>  > they practically never do that.
>  >
>  > Life would be much simpler if the Suggests packages would not be
>  > (automatically) installed, or if CRAN provided a way to include static
>  > Vignettes to avoid the heavy dependencies of building them.
>  >
> Users aren't forced to install "Suggests" packages.? That's a choice 
> they make.? The default for `install.packages()` is `dependencies = NA`, 
> which says to install hard dependencies (Imports, Depends, LinkingTo).
> Users have to choose a non-default setting to include Suggests.

Also note that the maintainer builds the vignette whe calling
R CMD build
CRAN checks whether the vignette can be build.
If a user installs a package, the already produced vignette (on the 
maintainers machine by R CMD build) is instaled. There is no need for 
the user to install any extra package for being able to look at the 
vignettes.

Best,
Uwe Ligges




> 
> Duncan Murdoch
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

From t|@goo||voto @end|ng |rom gm@||@com  Thu Jan  4 21:51:15 2024
From: t|@goo||voto @end|ng |rom gm@||@com (Tiago Olivoto)
Date: Thu, 4 Jan 2024 17:51:15 -0300
Subject: [R-pkg-devel] Assigning an object to the global environment (shiny
 package)
Message-ID: <CAMyz+tW8yVq5GEDG31aQmL39QCUeAXyVH1=Nhb5baEWyCq8pqg@mail.gmail.com>

Hi everyone!
I which a happy new year!


I'm coding a shiny app and I would like to include an option so that the
users can assign the results to the global environment for further analysis.

I have written the following code, which checks if 'globalvarname' (the
name of object to be created in the global environment) already exists,
returning an error if so, and asking to the user change the name.

code
-----------
observeEvent(input$savetoglobalenv, {
 ### more code here

  if (exists(input$globalvarname, envir = globalenv())) {
    sendSweetAlert(
      session = session,
      title = "Error",
      text = paste0("The object'", input$globalvarname, "' already exists
in the global environment. Please, change the name."),
      type = "success"
    )
  } else {
    assign(input$globalvarname, report, envir = globalenv())
    ask_confirmation(
      inputId = "myconfirmation",
      type = "warning",
      title = "Close the App?",
      text = paste0("The object'", input$globalvarname, "' has been created
in the Global environment. To access the created object, you need first to
stop the App. Do you really want to close the app now?"),
      btn_labels = c("Nope", "Yep"),
      btn_colors = c("#FE642E", "#04B404")
    )
  }
})
---------

Thus, the object is only created when the user decides to assign such an
object to the global environment. As the object's name is checked, there is
no way of replacing some object already available in the global environment.

Of course, when running devtools::check(), a NOTE is returned

Found the following assignments to the global environment:
  Arquivo 'plimanshiny/R/mod_analyze.R':

Can I ignore this safely?
Is there any suggestion to handly this without using 'assign()'

Thanks in advance,
Olivoto

	[[alternative HTML version deleted]]


From |kw@|mmo @end|ng |rom gm@||@com  Thu Jan  4 22:00:17 2024
From: |kw@|mmo @end|ng |rom gm@||@com (Iris Simmons)
Date: Thu, 4 Jan 2024 16:00:17 -0500
Subject: [R-pkg-devel] 
 Assigning an object to the global environment (shiny package)
In-Reply-To: <CAMyz+tW8yVq5GEDG31aQmL39QCUeAXyVH1=Nhb5baEWyCq8pqg@mail.gmail.com>
References: <CAMyz+tW8yVq5GEDG31aQmL39QCUeAXyVH1=Nhb5baEWyCq8pqg@mail.gmail.com>
Message-ID: <CADNULg_AFD5rU6Tgn9HvA4pd-P8mJdMAdx0YDR8A5DJevCBa=A@mail.gmail.com>

You cannot and should not ignore this.

An R package should never ever be assigning variables into environments for
which they haven't been granted permission to do so. You should ask the
user whether they want the object assigned in the global environment before
doing so, and the default should be no so that it will not be assigned in
non interactive sessions.

On Thu, Jan 4, 2024, 15:54 Tiago Olivoto <tiagoolivoto at gmail.com> wrote:

> Hi everyone!
> I which a happy new year!
>
>
> I'm coding a shiny app and I would like to include an option so that the
> users can assign the results to the global environment for further
> analysis.
>
> I have written the following code, which checks if 'globalvarname' (the
> name of object to be created in the global environment) already exists,
> returning an error if so, and asking to the user change the name.
>
> code
> -----------
> observeEvent(input$savetoglobalenv, {
>  ### more code here
>
>   if (exists(input$globalvarname, envir = globalenv())) {
>     sendSweetAlert(
>       session = session,
>       title = "Error",
>       text = paste0("The object'", input$globalvarname, "' already exists
> in the global environment. Please, change the name."),
>       type = "success"
>     )
>   } else {
>     assign(input$globalvarname, report, envir = globalenv())
>     ask_confirmation(
>       inputId = "myconfirmation",
>       type = "warning",
>       title = "Close the App?",
>       text = paste0("The object'", input$globalvarname, "' has been created
> in the Global environment. To access the created object, you need first to
> stop the App. Do you really want to close the app now?"),
>       btn_labels = c("Nope", "Yep"),
>       btn_colors = c("#FE642E", "#04B404")
>     )
>   }
> })
> ---------
>
> Thus, the object is only created when the user decides to assign such an
> object to the global environment. As the object's name is checked, there is
> no way of replacing some object already available in the global
> environment.
>
> Of course, when running devtools::check(), a NOTE is returned
>
> Found the following assignments to the global environment:
>   Arquivo 'plimanshiny/R/mod_analyze.R':
>
> Can I ignore this safely?
> Is there any suggestion to handly this without using 'assign()'
>
> Thanks in advance,
> Olivoto
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu Jan  4 22:06:52 2024
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 4 Jan 2024 16:06:52 -0500
Subject: [R-pkg-devel] 
 Assigning an object to the global environment (shiny package)
In-Reply-To: <CAMyz+tW8yVq5GEDG31aQmL39QCUeAXyVH1=Nhb5baEWyCq8pqg@mail.gmail.com>
References: <CAMyz+tW8yVq5GEDG31aQmL39QCUeAXyVH1=Nhb5baEWyCq8pqg@mail.gmail.com>
Message-ID: <324344d8-bd19-431a-94f6-c9149c554ae2@gmail.com>

On 04/01/2024 3:51 p.m., Tiago Olivoto wrote:
> Hi everyone!
> I which a happy new year!
> 
> 
> I'm coding a shiny app and I would like to include an option so that the
> users can assign the results to the global environment for further analysis.
> 
> I have written the following code, which checks if 'globalvarname' (the
> name of object to be created in the global environment) already exists,
> returning an error if so, and asking to the user change the name.
> 
> code
> -----------
> observeEvent(input$savetoglobalenv, {
>   ### more code here
> 
>    if (exists(input$globalvarname, envir = globalenv())) {
>      sendSweetAlert(
>        session = session,
>        title = "Error",
>        text = paste0("The object'", input$globalvarname, "' already exists
> in the global environment. Please, change the name."),
>        type = "success"
>      )
>    } else {
>      assign(input$globalvarname, report, envir = globalenv())
>      ask_confirmation(
>        inputId = "myconfirmation",
>        type = "warning",
>        title = "Close the App?",
>        text = paste0("The object'", input$globalvarname, "' has been created
> in the Global environment. To access the created object, you need first to
> stop the App. Do you really want to close the app now?"),
>        btn_labels = c("Nope", "Yep"),
>        btn_colors = c("#FE642E", "#04B404")
>      )
>    }
> })
> ---------
> 
> Thus, the object is only created when the user decides to assign such an
> object to the global environment. As the object's name is checked, there is
> no way of replacing some object already available in the global environment.
> 
> Of course, when running devtools::check(), a NOTE is returned
> 
> Found the following assignments to the global environment:
>    Arquivo 'plimanshiny/R/mod_analyze.R':
> 
> Can I ignore this safely?
> Is there any suggestion to handly this without using 'assign()'

A simple alternative would be to assign it into a private environment 
managed by your app, and supply a function to the user to retrieve it 
from there.  The user can choose where to assign the result of that 
function.

So instead of:

   user says to save to "myvar"
   you save to myvar
   user uses myvar

you would have

   user says to save value
   you save it privately
   user runs myvar <- savedvalue()

If your app requires users to be able to save several different values, 
the user could enter a name on the first line and enter it again on the 
third line.

Duncan Murdoch

Duncan Murdoch


From jo@|@h@p@rry @end|ng |rom gm@||@com  Thu Jan  4 22:07:25 2024
From: jo@|@h@p@rry @end|ng |rom gm@||@com (Josiah Parry)
Date: Thu, 4 Jan 2024 16:07:25 -0500
Subject: [R-pkg-devel] [Rd] static html vignette
In-Reply-To: <2baa876c-0a22-45fa-bd77-fac8fd5cea7a@statistik.tu-dortmund.de>
References: <CAJ=0CtCZM4AW_obdmipvd_X9pcF_b2JD49qbbNVpX+Z9VnZwGg@mail.gmail.com>
 <20240104135548.03db2b3a@Tarkus>
 <CAJ=0CtAKAjO7ZRe=08MoaVcFnCiJR-RKHHzA8Nm9hgvt3jVaVw@mail.gmail.com>
 <9ca3fb97-4731-4e11-b0f8-b278bb87081f@gmail.com>
 <2baa876c-0a22-45fa-bd77-fac8fd5cea7a@statistik.tu-dortmund.de>
Message-ID: <CAL3ufU+kojgZYFCx3GEjAEm0E_m9Q+1gtRx_h1VEZ2=Pt=_8cQ@mail.gmail.com>

I understand that this doesn't actually *solve *your problem, but would
like to offer an alternative perspective.

I often find that vignettes may be most useful as an extended form of
documentation. If you have a pkgdown site, you can use
`usethis::use_article()` to create an article which will not be included as
part of the package itself but will be served in the documentation site of
the package. I don't think many people consume extended package
documentation through vignettes all that much but often prefer to rely on
the package website. Using the article format means that your package tests
on CRAN will not be subjected to any other packages used in the articles or
vignettes.

Cheers!

On Thu, Jan 4, 2024 at 3:44?PM Uwe Ligges <ligges at statistik.tu-dortmund.de>
wrote:

>
>
> On 04.01.2024 21:23, Duncan Murdoch wrote:
> > On 04/01/2024 11:43 a.m., Adrian Du?a wrote:
> >  > (Moved here following Ivan's suggestion)
> >  >
> >  > On Thu, Jan 4, 2024 at 12:55?PM Ivan Krylov <krylov.r00t at gmail.com>
> > wrote:
> >  >
> >  >> On Thu, 4 Jan 2024 11:57:15 +0200
> >  >> Adrian Du?a <dusa.adrian at gmail.com> wrote:
> >  >>
> >  >>> I wonder if it would be possible to include an html static vignette.
> >  >>
> >  >> I would say that static vignettes are against the spirit of
> vignettes:
> >  >> the idea is to provide another layer of unit testing to the package
> by
> >  >> providing a deeper executable example than is possible with just Rd
> >  >> examples. I think that Bioconductor will even refuse a package with a
> >  >> vignette with no executable code in it.
> >  >>
> >  >
> >  > I understand that perfectly, but for instance my package declared
> > already
> >  > has over 800 tests and 100% code coverage. More unit testing in the
> >  > vignettes really strikes as unnecessary.
> >  >
> >  > One other reason to use a static vignette, in my case, is that package
> >  > Sweave is not available for my version of R (on MacOS, M2 version)
> > As far as I know, there is no package called Sweave, there's just the
> > Sweave() function in the utils package.>
> >  >
> >  >
> >  >> Still, you can ue the R.rsp package to provide static vignettes in
> >  >> both PDF and HTML formats:
> >  >>
> >  >>
> >
> https://cran.r-project.org/package=R.rsp/vignettes/R_packages-Static_PDF_and_HTML_vignettes.pdf
> >  >>
> >  >> This will add 6 packages to your total Suggests budget:
> >  >>
> >  >> setdiff(
> >  >>   unlist(package_dependencies('R.rsp', recursive=TRUE)),
> >  >>   unlist(standard_package_names())
> >  >> )
> >  >> # [1] "R.methodsS3" "R.oo"        "R.utils"     "R.cache"
> "digest"
> >  >
> >  >
> >  > Yes indeed, I know about R.rsp.
> >  > To me at least, zero dependency means that users install that package
> > and
> >  > that package alone, the reason for which I am now looking for static
> >  > (preferably html) vignettes.
> >  >
> >  > I guess another question is why should the "Suggests" packages need
> > to be
> >  > installed by end users. I understand CRAN checks need to make sure the
> >  > Vignettes can be processed and the code inside runs fine (just like
> the
> >  > examples in the Rd files) but it is very unlikely that end-users will
> > want
> >  > to compile the vignettes themselves.
> >  >
> >  >  From my own experience of almost 20 years of using R, I never-ever
> > build
> >  > the vignettes of a certain package because it is much simpler to read
> > them
> >  > on CRAN. I wonder, then, why are end users forced to install
> >  > Vignette-building "Suggests" packages (with long dependency chains)
> when
> >  > they practically never do that.
> >  >
> >  > Life would be much simpler if the Suggests packages would not be
> >  > (automatically) installed, or if CRAN provided a way to include static
> >  > Vignettes to avoid the heavy dependencies of building them.
> >  >
> > Users aren't forced to install "Suggests" packages.  That's a choice
> > they make.  The default for `install.packages()` is `dependencies = NA`,
> > which says to install hard dependencies (Imports, Depends, LinkingTo).
> > Users have to choose a non-default setting to include Suggests.
>
> Also note that the maintainer builds the vignette whe calling
> R CMD build
> CRAN checks whether the vignette can be build.
> If a user installs a package, the already produced vignette (on the
> maintainers machine by R CMD build) is instaled. There is no need for
> the user to install any extra package for being able to look at the
> vignettes.
>
> Best,
> Uwe Ligges
>
>
>
>
> >
> > Duncan Murdoch
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From jo@|@h@p@rry @end|ng |rom gm@||@com  Thu Jan  4 22:11:07 2024
From: jo@|@h@p@rry @end|ng |rom gm@||@com (Josiah Parry)
Date: Thu, 4 Jan 2024 16:11:07 -0500
Subject: [R-pkg-devel] 
 Assigning an object to the global environment (shiny package)
In-Reply-To: <CADNULg_AFD5rU6Tgn9HvA4pd-P8mJdMAdx0YDR8A5DJevCBa=A@mail.gmail.com>
References: <CAMyz+tW8yVq5GEDG31aQmL39QCUeAXyVH1=Nhb5baEWyCq8pqg@mail.gmail.com>
 <CADNULg_AFD5rU6Tgn9HvA4pd-P8mJdMAdx0YDR8A5DJevCBa=A@mail.gmail.com>
Message-ID: <CAL3ufU+CZt-kzME=WETaX541qYvNyRFY2-HT9ef60LuQs9FuBw@mail.gmail.com>

Alternatively, you can create a new environment in your package and assign
into it and fetch out of it. This is definitely safer and probably "more
idiomatic." Hope that helps!


# create a new environment
<http://localhost:11786/session/agile-pike_reprex_preview.html?viewer_pane=1&capabilities=1&host=http%3A%2F%2F127.0.0.1%3A35355#cb1-2>my_env
<- rlang::new_environment()
<http://localhost:11786/session/agile-pike_reprex_preview.html?viewer_pane=1&capabilities=1&host=http%3A%2F%2F127.0.0.1%3A35355#cb1-3>
<http://localhost:11786/session/agile-pike_reprex_preview.html?viewer_pane=1&capabilities=1&host=http%3A%2F%2F127.0.0.1%3A35355#cb1-4>#
assign a value to the environment
<http://localhost:11786/session/agile-pike_reprex_preview.html?viewer_pane=1&capabilities=1&host=http%3A%2F%2F127.0.0.1%3A35355#cb1-5>rlang::env_bind(my_env,
var_name = "my value")
<http://localhost:11786/session/agile-pike_reprex_preview.html?viewer_pane=1&capabilities=1&host=http%3A%2F%2F127.0.0.1%3A35355#cb1-6>
<http://localhost:11786/session/agile-pike_reprex_preview.html?viewer_pane=1&capabilities=1&host=http%3A%2F%2F127.0.0.1%3A35355#cb1-7>#
fetch the value from the environment
<http://localhost:11786/session/agile-pike_reprex_preview.html?viewer_pane=1&capabilities=1&host=http%3A%2F%2F127.0.0.1%3A35355#cb1-8>my_env$var_name
<http://localhost:11786/session/agile-pike_reprex_preview.html?viewer_pane=1&capabilities=1&host=http%3A%2F%2F127.0.0.1%3A35355#cb1-9>#>
[1] "my value"


On Thu, Jan 4, 2024 at 4:04?PM Iris Simmons <ikwsimmo at gmail.com> wrote:

> You cannot and should not ignore this.
>
> An R package should never ever be assigning variables into environments for
> which they haven't been granted permission to do so. You should ask the
> user whether they want the object assigned in the global environment before
> doing so, and the default should be no so that it will not be assigned in
> non interactive sessions.
>
> On Thu, Jan 4, 2024, 15:54 Tiago Olivoto <tiagoolivoto at gmail.com> wrote:
>
> > Hi everyone!
> > I which a happy new year!
> >
> >
> > I'm coding a shiny app and I would like to include an option so that the
> > users can assign the results to the global environment for further
> > analysis.
> >
> > I have written the following code, which checks if 'globalvarname' (the
> > name of object to be created in the global environment) already exists,
> > returning an error if so, and asking to the user change the name.
> >
> > code
> > -----------
> > observeEvent(input$savetoglobalenv, {
> >  ### more code here
> >
> >   if (exists(input$globalvarname, envir = globalenv())) {
> >     sendSweetAlert(
> >       session = session,
> >       title = "Error",
> >       text = paste0("The object'", input$globalvarname, "' already exists
> > in the global environment. Please, change the name."),
> >       type = "success"
> >     )
> >   } else {
> >     assign(input$globalvarname, report, envir = globalenv())
> >     ask_confirmation(
> >       inputId = "myconfirmation",
> >       type = "warning",
> >       title = "Close the App?",
> >       text = paste0("The object'", input$globalvarname, "' has been
> created
> > in the Global environment. To access the created object, you need first
> to
> > stop the App. Do you really want to close the app now?"),
> >       btn_labels = c("Nope", "Yep"),
> >       btn_colors = c("#FE642E", "#04B404")
> >     )
> >   }
> > })
> > ---------
> >
> > Thus, the object is only created when the user decides to assign such an
> > object to the global environment. As the object's name is checked, there
> is
> > no way of replacing some object already available in the global
> > environment.
> >
> > Of course, when running devtools::check(), a NOTE is returned
> >
> > Found the following assignments to the global environment:
> >   Arquivo 'plimanshiny/R/mod_analyze.R':
> >
> > Can I ignore this safely?
> > Is there any suggestion to handly this without using 'assign()'
> >
> > Thanks in advance,
> > Olivoto
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From du@@@@dr|@n @end|ng |rom gm@||@com  Thu Jan  4 22:27:21 2024
From: du@@@@dr|@n @end|ng |rom gm@||@com (=?UTF-8?B?QWRyaWFuIER1yJlh?=)
Date: Thu, 4 Jan 2024 23:27:21 +0200
Subject: [R-pkg-devel] [Rd] static html vignette
In-Reply-To: <2baa876c-0a22-45fa-bd77-fac8fd5cea7a@statistik.tu-dortmund.de>
References: <CAJ=0CtCZM4AW_obdmipvd_X9pcF_b2JD49qbbNVpX+Z9VnZwGg@mail.gmail.com>
 <20240104135548.03db2b3a@Tarkus>
 <CAJ=0CtAKAjO7ZRe=08MoaVcFnCiJR-RKHHzA8Nm9hgvt3jVaVw@mail.gmail.com>
 <9ca3fb97-4731-4e11-b0f8-b278bb87081f@gmail.com>
 <2baa876c-0a22-45fa-bd77-fac8fd5cea7a@statistik.tu-dortmund.de>
Message-ID: <CAJ=0CtD=KSBCJ4bZS3EDY2qGTzwf4Yot1fDWK9c26LHSRhnsWA@mail.gmail.com>

On Thu, Jan 4, 2024 at 10:44?PM Uwe Ligges <ligges at statistik.tu-dortmund.de>
wrote:

> On 04.01.2024 21:23, Duncan Murdoch wrote:[...]
> > Users aren't forced to install "Suggests" packages.  That's a choice
> > they make.  The default for `install.packages()` is `dependencies = NA`,
> > which says to install hard dependencies (Imports, Depends, LinkingTo).
> > Users have to choose a non-default setting to include Suggests.
>
> Also note that the maintainer builds the vignette whe calling
> R CMD build
> CRAN checks whether the vignette can be build.
> If a user installs a package, the already produced vignette (on the
> maintainers machine by R CMD build) is instaled. There is no need for
> the user to install any extra package for being able to look at the
> vignettes.
>

I see... then I must have tested with dependencies = TRUE thinking this
refers to hard dependencies (one more reason to read the documentation
properly).

Thank you,
Adrian

	[[alternative HTML version deleted]]


From t|@goo||voto @end|ng |rom gm@||@com  Thu Jan  4 23:20:04 2024
From: t|@goo||voto @end|ng |rom gm@||@com (Tiago Olivoto)
Date: Thu, 4 Jan 2024 19:20:04 -0300
Subject: [R-pkg-devel] 
 Assigning an object to the global environment (shiny package)
In-Reply-To: <CADNULg_AFD5rU6Tgn9HvA4pd-P8mJdMAdx0YDR8A5DJevCBa=A@mail.gmail.com>
References: <CAMyz+tW8yVq5GEDG31aQmL39QCUeAXyVH1=Nhb5baEWyCq8pqg@mail.gmail.com>
 <CADNULg_AFD5rU6Tgn9HvA4pd-P8mJdMAdx0YDR8A5DJevCBa=A@mail.gmail.com>
Message-ID: <CAMyz+tUyi3ZQQnQOE4Y17+ORxkpaqYvyFSne=skhDqCLG11mOw@mail.gmail.com>

Dear all,
Thanks all for the tips and sorry for the automatic reply.
Best regards,
Olivoto

Em qui., 4 de jan. de 2024 ?s 18:00, Iris Simmons <ikwsimmo at gmail.com>
escreveu:

> You cannot and should not ignore this.
>
> An R package should never ever be assigning variables into environments
> for which they haven't been granted permission to do so. You should ask the
> user whether they want the object assigned in the global environment before
> doing so, and the default should be no so that it will not be assigned in
> non interactive sessions.
>
> On Thu, Jan 4, 2024, 15:54 Tiago Olivoto <tiagoolivoto at gmail.com> wrote:
>
>> Hi everyone!
>> I which a happy new year!
>>
>>
>> I'm coding a shiny app and I would like to include an option so that the
>> users can assign the results to the global environment for further
>> analysis.
>>
>> I have written the following code, which checks if 'globalvarname' (the
>> name of object to be created in the global environment) already exists,
>> returning an error if so, and asking to the user change the name.
>>
>> code
>> -----------
>> observeEvent(input$savetoglobalenv, {
>>  ### more code here
>>
>>   if (exists(input$globalvarname, envir = globalenv())) {
>>     sendSweetAlert(
>>       session = session,
>>       title = "Error",
>>       text = paste0("The object'", input$globalvarname, "' already exists
>> in the global environment. Please, change the name."),
>>       type = "success"
>>     )
>>   } else {
>>     assign(input$globalvarname, report, envir = globalenv())
>>     ask_confirmation(
>>       inputId = "myconfirmation",
>>       type = "warning",
>>       title = "Close the App?",
>>       text = paste0("The object'", input$globalvarname, "' has been
>> created
>> in the Global environment. To access the created object, you need first to
>> stop the App. Do you really want to close the app now?"),
>>       btn_labels = c("Nope", "Yep"),
>>       btn_colors = c("#FE642E", "#04B404")
>>     )
>>   }
>> })
>> ---------
>>
>> Thus, the object is only created when the user decides to assign such an
>> object to the global environment. As the object's name is checked, there
>> is
>> no way of replacing some object already available in the global
>> environment.
>>
>> Of course, when running devtools::check(), a NOTE is returned
>>
>> Found the following assignments to the global environment:
>>   Arquivo 'plimanshiny/R/mod_analyze.R':
>>
>> Can I ignore this safely?
>> Is there any suggestion to handly this without using 'assign()'
>>
>> Thanks in advance,
>> Olivoto
>>
>>         [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>

	[[alternative HTML version deleted]]


From p|et|e@cjp@1908 @end|ng |rom gm@||@com  Sat Jan  6 12:50:49 2024
From: p|et|e@cjp@1908 @end|ng |rom gm@||@com (Christiaan Pieterse)
Date: Sat, 6 Jan 2024 13:50:49 +0200
Subject: [R-pkg-devel] CRAN submission struggle
In-Reply-To: <8235587f-f936-4010-8bde-768eba54384b@statistik.tu-dortmund.de>
References: <CABuTGP4PHvRLjhih=7V=EuVmWV-zyXPbmjSr5TnxEF76UXdUCw@mail.gmail.com>
 <20231216210737.5ea551d1@Tarkus>
 <CABuTGP4Opm_b0N_T1sLeTKPv4oNA4LMMOOMjyBfejRtCGg1BqA@mail.gmail.com>
 <20231217170639.7376f8c3@Tarkus>
 <CABuTGP6YP3XhFtYo5PcNcu0yfNPbQWHVvyzFAyeyRsk7CX0EHA@mail.gmail.com>
 <20231218120148.51339325@Tarkus>
 <CABuTGP61Ex1mjz0hxyEJdsAvWTqrQwkPRSyeSwTrcDCGm4qM0A@mail.gmail.com>
 <20231218221521.351314e1@Tarkus>
 <CABuTGP4R9gCxPB_wJNoR3A1F4oJx3GSKSXd8=Z83esKhNVu=Tg@mail.gmail.com>
 <20231218232233.75e450c9@parabola>
 <CABuTGP48FCN5DPmdLfgXVOD0ZWjKtPXMt817fLmP7xtcVSZv0g@mail.gmail.com>
 <20231219003331.4e822ba7@Tarkus>
 <CABuTGP5yOhT-iE5fFxWEeEXSzJPJPg_33tqxjvnak_TYC2frfw@mail.gmail.com>
 <20231228165509.189879dd@arachnoid>
 <CABuTGP5xk58SFEN7ib5qPe9o6zKYfxoDhEn8kHd7Cx2UTz=OCw@mail.gmail.com>
 <CAAS8PAKctuyYkXYRenUK+XqwgPeY_F09aK=b-dRYS6HV4GoMPQ@mail.gmail.com>
 <8235587f-f936-4010-8bde-768eba54384b@statistik.tu-dortmund.de>
Message-ID: <CABuTGP4t=-tG+kgfay5d8G+xckmZLKQEF5i29BUgE9qXg_ESoQ@mail.gmail.com>

Good day

I think I finally have a final package that only yields the expected 'New
submission' note.
The package is available at:
https://github.com/WoutersResearchGroup/R-IO-PS/tree/CRAN-prep.

Is there a way to confirm that this package is ready for submission?
I submitted it to https://win-builder.r-project.org/ and
https://mac.r-project.org/macbuilder/submit.html and
https://builder.r-hub.io/. All of these seem to only show the expected new
submission note.

I see the CRAN package submission web form is unavailable until the 8th, so
any confirmation that my package should be fine for submission would be
appreciated.

Thank you
Christiaan

On Tue, 2 Jan 2024 at 14:59, Uwe Ligges <ligges at statistik.tu-dortmund.de>
wrote:

>
>
> On 29.12.2023 09:13, Greg Hunt wrote:
> > Christaan,
> > The elapsed time note is because CRAN expects that examples will be
> > configured to run single threaded and some package that you use, or a
> > package used by a package that you use is multi-threading by default and
> > using more CPU time than clock time. If you cannot figure out how to
> > reconfigure the multi-threaded package, a number of people have found
> that
> > the simplest thing to do is disable running the example (which reduces
> the
> > effective test coverage provided by the example).
>
>
> No and no:
>
> 1.
>        user system elapsed
> IOPS 10.06   3.35   35.04
>
> suggests that either the machines this ran on is heavily loaded (so that
> elapsed >> user) or something is waiting like some internet access. [For
> multithreading it would be user > elapsed.]
>
> 2. The solution is not to exclude examples ebtirely, as we need runtime
> checks.
>
> For internet access: Set a timeout and let the exampe fail gracefully in
> case web access takes more than, e.g., 2. sec.
>
> In general: Please reduce each example to less than 5 sec.
>
> So use small toy examples. If you really want to add rel world examples
> that may take longer, then add them in addition to toy examples and wrap
> in \donttest{}.
>
> Best,
> Uwe Ligges
>
>
>
>
>
>
>
>
> >
> > I haven?t encountered the miktex exception file before but i suspect its
> a
> > side effect of a miktex error. Packages should not leave files behind in
> > the temp directory. If you expect a miktex error you need to remove the
> > file. If you don?t you need to track down and fix or work around the bug.
> > The build process is really a quality check on your package.
> >
> > Greg
> >
> > On Fri, 29 Dec 2023 at 3:01?am, Christiaan Pieterse <
> > pietie.cjp.1908 at gmail.com> wrote:
> >
> >> Hi,
> >>
> >> Thank you for showing the difference in the ExampleTradeData. I've fixed
> >> this by adding a .Gitignore file and a "data-raw" folder to load the
> >> ExampleTradeData. I hope I did this correctly. When I check the package
> (
> >> https://github.com/WoutersResearchGroup/R-IO-PS/tree/CRAN-prep) in
> >> RStudio.
> >> I only get 3 notes (see below), and if I run it in PositCloud, it
> crashes
> >> or yields the same 1 ERROR and 2 NOTES result as before. Why might this
> be?
> >> Is it a problem or is it fine if I continue working in RStudio since I
> >> cannot increase the specs in PositCloud because I'm working on a
> research
> >> group account?
> >>
> >> Here are the 3 notes I receive in RStudio:
> >>
> >> The first is the expected New Submission Note.
> >>
> >> The second is the runtime that is too long:
> >> * checking examples ... [43s] NOTE
> >> Examples with CPU (user + system) or elapsed time > 5s
> >>        user system elapsed
> >> IOPS 10.06   3.35   35.04
> >> How can I reduce this time? I'm not sure how to reduce the size of my
> >> ExampleTradeData without the check giving errors when running the
> example.
> >>
> >> The third note I am unsure what it means:
> >> * checking for detritus in the temp directory ... NOTE
> >> Found the following files/directories:
> >>    'lastMiKTeXException'
> >>
> >> Kind regards
> >> Christiaan
> >>
> >> On Thu, 28 Dec 2023 at 15:55, Ivan Krylov <krylov.r00t at gmail.com>
> wrote:
> >>
> >>> Hi Christiaan,
> >>>
> >>> ? Thu, 28 Dec 2023 14:57:55 +0200
> >>> Christiaan Pieterse <pietie.cjp.1908 at gmail.com> ?????:
> >>>
> >>>> Still, I couldn't figure out why I ran into this problem, so I
> >>>> created a test file called "Test Example.R" (available at the same
> >>>> GitHub repository:
> >>>> https://github.com/WoutersResearchGroup/R-IO-PS/tree/CRAN-prep).
> >>>
> >>> I see you're always adding or updating files to the GitHub repo by
> >>> means of uploading. While that's certainly one way to use GitHub, it's
> >>> combines the least convenient aspects of two approaches to using
> GitHub.
> >>>
> >>> With GitHub purely in the browser, GitHub is just a website where you
> >>> keep and edit code, running nothing else on the local computer. Code
> >>> can be run in Codespaces or using GitHub Actions. Microsoft will want
> >>> to be paid money to run code on their computers.
> >>>
> >>> With GitHub as a Git remote, there is a local checkout [*] that's kept
> >>> in sync with GitHub by means of commits [**] and pushes [***], letting
> >>> you create meaningful, describable snapshots of changes in your code
> >>> spanning multiple files at the same time.
> >>>
> >>> Right now, it probably feels like Dropbox but worse.
> >>>
> >>>> This file creates the function in the global environment (note that
> >>>> this is the same function code as available in the package
> >>>> "R/iopspackage2.0.R" file), and then runs this function with the same
> >>>> example as in the package (If you want to try this yourself, just
> >>>> load the data/ExampleTradeData.rda in before running the Test Example
> >>>> file). This test file yields no errors when I run it and produces the
> >>>> correct results. When I then proceed to build and check the package,
> >>>> it yields the same example error as before. I do not understand why
> >>>> or what could cause this issue.
> >>>
> >>> The difference is in the ExampleTradeData variable, which "Test
> >>> Example.R" doesn't define.
> >>>
> >>> With data(ExampleTradeData), the script works.
> >>>
> >>> With ExampleTradeData <-
> >>>
> >>>
> >>
> read.csv(system.file("extdata","ExampleTradeData.csv",package="iopspackage")),
> >>> the script fails exactly the same way as example(IOPS) does.
> >>>
> >>>> I'm not sure if I should send out another email to the developers to
> >>>> see if someone else spots something I'm not seeing.
> >>>
> >>> It may help to keep Cc: r-package-devel at r-project.org in the e-mails
> >>> for the search engines to index the potential solutions in the mailing
> >>> list archives.
> >>>
> >>> --
> >>> Best regards,
> >>> Ivan
> >>>
> >>> [*]
> >>> https://git-scm.com/book/en/v2/Git-Basics-Getting-a-Git-Repository
> >>>
> >>> [**]
> >>>
> >>>
> >>
> https://git-scm.com/book/en/v2/Git-Basics-Recording-Changes-to-the-Repository
> >>>
> >>> [***]
> >>> https://git-scm.com/book/en/v2/Git-Basics-Working-with-Remotes
> >>>
> >>
> >>          [[alternative HTML version deleted]]
> >>
> >> ______________________________________________
> >> R-package-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Sat Jan  6 13:16:01 2024
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Sat, 6 Jan 2024 15:16:01 +0300
Subject: [R-pkg-devel] CRAN submission struggle
In-Reply-To: <CABuTGP4t=-tG+kgfay5d8G+xckmZLKQEF5i29BUgE9qXg_ESoQ@mail.gmail.com>
References: <CABuTGP4PHvRLjhih=7V=EuVmWV-zyXPbmjSr5TnxEF76UXdUCw@mail.gmail.com>
 <CABuTGP4Opm_b0N_T1sLeTKPv4oNA4LMMOOMjyBfejRtCGg1BqA@mail.gmail.com>
 <20231217170639.7376f8c3@Tarkus>
 <CABuTGP6YP3XhFtYo5PcNcu0yfNPbQWHVvyzFAyeyRsk7CX0EHA@mail.gmail.com>
 <20231218120148.51339325@Tarkus>
 <CABuTGP61Ex1mjz0hxyEJdsAvWTqrQwkPRSyeSwTrcDCGm4qM0A@mail.gmail.com>
 <20231218221521.351314e1@Tarkus>
 <CABuTGP4R9gCxPB_wJNoR3A1F4oJx3GSKSXd8=Z83esKhNVu=Tg@mail.gmail.com>
 <20231218232233.75e450c9@parabola>
 <CABuTGP48FCN5DPmdLfgXVOD0ZWjKtPXMt817fLmP7xtcVSZv0g@mail.gmail.com>
 <20231219003331.4e822ba7@Tarkus>
 <CABuTGP5yOhT-iE5fFxWEeEXSzJPJPg_33tqxjvnak_TYC2frfw@mail.gmail.com>
 <20231228165509.189879dd@arachnoid>
 <CABuTGP5xk58SFEN7ib5qPe9o6zKYfxoDhEn8kHd7Cx2UTz=OCw@mail.gmail.com>
 <CAAS8PAKctuyYkXYRenUK+XqwgPeY_F09aK=b-dRYS6HV4GoMPQ@mail.gmail.com>
 <8235587f-f936-4010-8bde-768eba54384b@statistik.tu-dortmund.de>
 <CABuTGP4t=-tG+kgfay5d8G+xckmZLKQEF5i29BUgE9qXg_ESoQ@mail.gmail.com>
Message-ID: <20240106151601.118b607b@Tarkus>

On Sat, 6 Jan 2024 13:50:49 +0200
Christiaan Pieterse <pietie.cjp.1908 at gmail.com> wrote:

> Is there a way to confirm that this package is ready for submission?
> I submitted it to https://win-builder.r-project.org/ and
> https://mac.r-project.org/macbuilder/submit.html and
> https://builder.r-hub.io/. All of these seem to only show the
> expected new submission note.

Congratulations! I also get the single expected NOTE in my checks.

This may be your last chance to rename the package from iopspackage to,
say, "IOPS". If you go over the package and the CRAN policy at
<https://cran.r-project.org/web/packages/policies.html> one last time
and deem the package compliant, it should be ready for submission.

The CRAN reviewer may find additional problems and ask you to fix them,
but you are likely most of the way there.

-- 
Best regards,
Ivan


From kry|ov@r00t @end|ng |rom gm@||@com  Sat Jan  6 13:59:41 2024
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Sat, 6 Jan 2024 15:59:41 +0300
Subject: [R-pkg-devel] CRAN submission struggle
In-Reply-To: <20240106151601.118b607b@Tarkus>
References: <CABuTGP4PHvRLjhih=7V=EuVmWV-zyXPbmjSr5TnxEF76UXdUCw@mail.gmail.com>
 <20231217170639.7376f8c3@Tarkus>
 <CABuTGP6YP3XhFtYo5PcNcu0yfNPbQWHVvyzFAyeyRsk7CX0EHA@mail.gmail.com>
 <20231218120148.51339325@Tarkus>
 <CABuTGP61Ex1mjz0hxyEJdsAvWTqrQwkPRSyeSwTrcDCGm4qM0A@mail.gmail.com>
 <20231218221521.351314e1@Tarkus>
 <CABuTGP4R9gCxPB_wJNoR3A1F4oJx3GSKSXd8=Z83esKhNVu=Tg@mail.gmail.com>
 <20231218232233.75e450c9@parabola>
 <CABuTGP48FCN5DPmdLfgXVOD0ZWjKtPXMt817fLmP7xtcVSZv0g@mail.gmail.com>
 <20231219003331.4e822ba7@Tarkus>
 <CABuTGP5yOhT-iE5fFxWEeEXSzJPJPg_33tqxjvnak_TYC2frfw@mail.gmail.com>
 <20231228165509.189879dd@arachnoid>
 <CABuTGP5xk58SFEN7ib5qPe9o6zKYfxoDhEn8kHd7Cx2UTz=OCw@mail.gmail.com>
 <CAAS8PAKctuyYkXYRenUK+XqwgPeY_F09aK=b-dRYS6HV4GoMPQ@mail.gmail.com>
 <8235587f-f936-4010-8bde-768eba54384b@statistik.tu-dortmund.de>
 <CABuTGP4t=-tG+kgfay5d8G+xckmZLKQEF5i29BUgE9qXg_ESoQ@mail.gmail.com>
 <20240106151601.118b607b@Tarkus>
Message-ID: <20240106155941.0b52014b@Tarkus>

On Sat, 6 Jan 2024 15:16:01 +0300
Ivan Krylov <krylov.r00t at gmail.com> wrote:

> Congratulations! I also get the single expected NOTE in my checks.

Apologies for the double e-mail, but I've read the code now, and
wrapping the example of your only function in \dontrun{} will most
likely not be allowed.

Is it really the case that you cannot remove a single row from the
example dataset without making the example crash? It may help to write
a function that would remove rows one by one, make sure that the
example still runs, and keep doing that until not a single row can be
removed. The complexity is terrible (something like O(n^k)), but let it
run for a while, and maybe it'll reduce the dataset enough to fit in
the example time limit.

-- 
Best regards,
Ivan


From j@goreck| @end|ng |rom w|t@edu@p|  Sat Jan  6 20:09:18 2024
From: j@goreck| @end|ng |rom w|t@edu@p| (Jan Gorecki)
Date: Sat, 6 Jan 2024 20:09:18 +0100
Subject: [R-pkg-devel] [Rd] static html vignette
In-Reply-To: <CAJ=0CtD=KSBCJ4bZS3EDY2qGTzwf4Yot1fDWK9c26LHSRhnsWA@mail.gmail.com>
References: <CAJ=0CtCZM4AW_obdmipvd_X9pcF_b2JD49qbbNVpX+Z9VnZwGg@mail.gmail.com>
 <20240104135548.03db2b3a@Tarkus>
 <CAJ=0CtAKAjO7ZRe=08MoaVcFnCiJR-RKHHzA8Nm9hgvt3jVaVw@mail.gmail.com>
 <9ca3fb97-4731-4e11-b0f8-b278bb87081f@gmail.com>
 <2baa876c-0a22-45fa-bd77-fac8fd5cea7a@statistik.tu-dortmund.de>
 <CAJ=0CtD=KSBCJ4bZS3EDY2qGTzwf4Yot1fDWK9c26LHSRhnsWA@mail.gmail.com>
Message-ID: <CAOO9MKXdR110AQWopSSD5Bb4+TrSY39TfqaArkM2fy5v_cEB_w@mail.gmail.com>

I may add two cents on that as we recently made this change in data.table.
Using markdown package instead of rmarkdown as a vignette engine reduced
burden caused by extra dependencies tremendously. Moreover it made package
to not even need c++ compiler, as knitr and markdown both (and their
recursive deps) are pure C with no C++.
Gains were huge. Deps installation time from 12min to 30sec. CI pipeline
compute minutes saving around 100min on a single workflow.

But there is even a better news (so be sure to upvote), that knitr may not
be required to render Rmd at all in near future. For details see
https://github.com/rstudio/markdown/issues/109


On Thu, Jan 4, 2024, 22:27 Adrian Du?a <dusa.adrian at gmail.com> wrote:

> On Thu, Jan 4, 2024 at 10:44?PM Uwe Ligges <
> ligges at statistik.tu-dortmund.de>
> wrote:
>
> > On 04.01.2024 21:23, Duncan Murdoch wrote:[...]
> > > Users aren't forced to install "Suggests" packages.  That's a choice
> > > they make.  The default for `install.packages()` is `dependencies =
> NA`,
> > > which says to install hard dependencies (Imports, Depends, LinkingTo).
> > > Users have to choose a non-default setting to include Suggests.
> >
> > Also note that the maintainer builds the vignette whe calling
> > R CMD build
> > CRAN checks whether the vignette can be build.
> > If a user installs a package, the already produced vignette (on the
> > maintainers machine by R CMD build) is instaled. There is no need for
> > the user to install any extra package for being able to look at the
> > vignettes.
> >
>
> I see... then I must have tested with dependencies = TRUE thinking this
> refers to hard dependencies (one more reason to read the documentation
> properly).
>
> Thank you,
> Adrian
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From p|et|e@cjp@1908 @end|ng |rom gm@||@com  Sun Jan  7 09:52:44 2024
From: p|et|e@cjp@1908 @end|ng |rom gm@||@com (Christiaan Pieterse)
Date: Sun, 7 Jan 2024 10:52:44 +0200
Subject: [R-pkg-devel] CRAN submission struggle
In-Reply-To: <20240106155941.0b52014b@Tarkus>
References: <CABuTGP4PHvRLjhih=7V=EuVmWV-zyXPbmjSr5TnxEF76UXdUCw@mail.gmail.com>
 <20231217170639.7376f8c3@Tarkus>
 <CABuTGP6YP3XhFtYo5PcNcu0yfNPbQWHVvyzFAyeyRsk7CX0EHA@mail.gmail.com>
 <20231218120148.51339325@Tarkus>
 <CABuTGP61Ex1mjz0hxyEJdsAvWTqrQwkPRSyeSwTrcDCGm4qM0A@mail.gmail.com>
 <20231218221521.351314e1@Tarkus>
 <CABuTGP4R9gCxPB_wJNoR3A1F4oJx3GSKSXd8=Z83esKhNVu=Tg@mail.gmail.com>
 <20231218232233.75e450c9@parabola>
 <CABuTGP48FCN5DPmdLfgXVOD0ZWjKtPXMt817fLmP7xtcVSZv0g@mail.gmail.com>
 <20231219003331.4e822ba7@Tarkus>
 <CABuTGP5yOhT-iE5fFxWEeEXSzJPJPg_33tqxjvnak_TYC2frfw@mail.gmail.com>
 <20231228165509.189879dd@arachnoid>
 <CABuTGP5xk58SFEN7ib5qPe9o6zKYfxoDhEn8kHd7Cx2UTz=OCw@mail.gmail.com>
 <CAAS8PAKctuyYkXYRenUK+XqwgPeY_F09aK=b-dRYS6HV4GoMPQ@mail.gmail.com>
 <8235587f-f936-4010-8bde-768eba54384b@statistik.tu-dortmund.de>
 <CABuTGP4t=-tG+kgfay5d8G+xckmZLKQEF5i29BUgE9qXg_ESoQ@mail.gmail.com>
 <20240106151601.118b607b@Tarkus> <20240106155941.0b52014b@Tarkus>
Message-ID: <CABuTGP7HipLiPvCrFG+55SddU2qJZRzXB5yiEE8JTwpc_uBheQ@mail.gmail.com>

Good day

I have edited my package to have two examples. One uses a small
self-generated dataset and another uses a big dataset. For the big dataset
example, I put \donttest{} around it, should this be fine?

I only get one note for the new package, available at
https://github.com/WoutersResearchGroup/R-IO-PS/tree/CRAN-prep.

Kind regards
Christiaan

On Sat, 6 Jan 2024 at 14:59, Ivan Krylov <krylov.r00t at gmail.com> wrote:

> On Sat, 6 Jan 2024 15:16:01 +0300
> Ivan Krylov <krylov.r00t at gmail.com> wrote:
>
> > Congratulations! I also get the single expected NOTE in my checks.
>
> Apologies for the double e-mail, but I've read the code now, and
> wrapping the example of your only function in \dontrun{} will most
> likely not be allowed.
>
> Is it really the case that you cannot remove a single row from the
> example dataset without making the example crash? It may help to write
> a function that would remove rows one by one, make sure that the
> example still runs, and keep doing that until not a single row can be
> removed. The complexity is terrible (something like O(n^k)), but let it
> run for a while, and maybe it'll reduce the dataset enough to fit in
> the example time limit.
>
> --
> Best regards,
> Ivan
>

	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Sun Jan  7 13:08:29 2024
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Sun, 7 Jan 2024 15:08:29 +0300
Subject: [R-pkg-devel] CRAN submission struggle
In-Reply-To: <CABuTGP7HipLiPvCrFG+55SddU2qJZRzXB5yiEE8JTwpc_uBheQ@mail.gmail.com>
References: <CABuTGP4PHvRLjhih=7V=EuVmWV-zyXPbmjSr5TnxEF76UXdUCw@mail.gmail.com>
 <20231218120148.51339325@Tarkus>
 <CABuTGP61Ex1mjz0hxyEJdsAvWTqrQwkPRSyeSwTrcDCGm4qM0A@mail.gmail.com>
 <20231218221521.351314e1@Tarkus>
 <CABuTGP4R9gCxPB_wJNoR3A1F4oJx3GSKSXd8=Z83esKhNVu=Tg@mail.gmail.com>
 <20231218232233.75e450c9@parabola>
 <CABuTGP48FCN5DPmdLfgXVOD0ZWjKtPXMt817fLmP7xtcVSZv0g@mail.gmail.com>
 <20231219003331.4e822ba7@Tarkus>
 <CABuTGP5yOhT-iE5fFxWEeEXSzJPJPg_33tqxjvnak_TYC2frfw@mail.gmail.com>
 <20231228165509.189879dd@arachnoid>
 <CABuTGP5xk58SFEN7ib5qPe9o6zKYfxoDhEn8kHd7Cx2UTz=OCw@mail.gmail.com>
 <CAAS8PAKctuyYkXYRenUK+XqwgPeY_F09aK=b-dRYS6HV4GoMPQ@mail.gmail.com>
 <8235587f-f936-4010-8bde-768eba54384b@statistik.tu-dortmund.de>
 <CABuTGP4t=-tG+kgfay5d8G+xckmZLKQEF5i29BUgE9qXg_ESoQ@mail.gmail.com>
 <20240106151601.118b607b@Tarkus> <20240106155941.0b52014b@Tarkus>
 <CABuTGP7HipLiPvCrFG+55SddU2qJZRzXB5yiEE8JTwpc_uBheQ@mail.gmail.com>
Message-ID: <20240107150829.7c212618@Tarkus>

On Sun, 7 Jan 2024 10:52:44 +0200
Christiaan Pieterse <pietie.cjp.1908 at gmail.com> wrote:

> I have edited my package to have two examples. One uses a small
> self-generated dataset and another uses a big dataset. For the big
> dataset example, I put \donttest{} around it, should this be fine?

The small example is definitely fine: it exercises the code and does so
fast.

The big example wrapped in \donttest{} could be fine, I'm not sure.
I've seen CRAN packages that wrap the long parts of their examples in
\donttest{} while still making sure that R CMD check --run-donttest
exercises most of their code.

-- 
Best regards,
Ivan


From m@rchywk@ @end|ng |rom hotm@||@com  Tue Jan  9 17:59:58 2024
From: m@rchywk@ @end|ng |rom hotm@||@com (Mike Marchywka)
Date: Tue, 9 Jan 2024 16:59:58 +0000
Subject: [R-pkg-devel] Fw: [Rd] using Paraview "in-situ" with R?
In-Reply-To: <BL3PR11MB6338D814D9A3FF932D7E7F49BE6A2@BL3PR11MB6338.namprd11.prod.outlook.com>
References: <BL3PR11MB6338D814D9A3FF932D7E7F49BE6A2@BL3PR11MB6338.namprd11.prod.outlook.com>
Message-ID: <BL3PR11MB633863C558D2D2917A7AFDFBBE6A2@BL3PR11MB6338.namprd11.prod.outlook.com>

The r-devel list suggested I try this here. Thanks. 


________________________________________
From: R-devel <r-devel-bounces at r-project.org> on behalf of Mike Marchywka <marchywka at hotmail.com>
Sent: Tuesday, January 9, 2024 9:20 AM
To: R-devel
Subject: [Rd] using Paraview "in-situ" with R?

I had previously asked about R interfaces to various "other" visualization
tools specifically lightweights for monitoring progress of
various codes. I was working on this,

https://github.com/mmarchywka/mjmdatascope

but in the meantime found out that Paraview has an "in-situ"
capability for similar objectives.

https://discourse.paraview.org/t/does-or-can-paraview-support-streaming-input/13637/9

While R does have a lot of plotting features,
it seems like an excellent tool to interface to R allowing visualization without
a bunch of temp files or

Is anyone aware of anyone doing this interface or reasons its  a boondoggle?

Thanks.



 Mike Marchywka
44 Crosscreek Trail
Jasper GA 30143
was 306 Charles Cox Drive  Canton, GA 30115
470-758-0799
404-788-1216



______________________________________________
R-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel


From jo@|@h@p@rry @end|ng |rom gm@||@com  Wed Jan 10 15:35:15 2024
From: jo@|@h@p@rry @end|ng |rom gm@||@com (Josiah Parry)
Date: Wed, 10 Jan 2024 09:35:15 -0500
Subject: [R-pkg-devel] Suggests with non-CRAN packages
In-Reply-To: <9f77096b-e7ab-4750-ab60-802576dfb471@statistik.tu-dortmund.de>
References: <CAL3ufUJs8qG7KOuX3q2T_VPavwsAhNkrvC79pk70KEq_wVZVKQ@mail.gmail.com>
 <4b98dd93-760c-4c21-a122-9bff615b5f62@gmail.com>
 <fd578d29-d30e-4060-a774-c141aa095c33@statistik.tu-dortmund.de>
 <CAL3ufUL2que0kEhmtuNt41BJyQKxo-UcwXzJkMS+3LZ7CbYnZw@mail.gmail.com>
 <9f77096b-e7ab-4750-ab60-802576dfb471@statistik.tu-dortmund.de>
Message-ID: <CAL3ufULe4D_5-MQr2sbxga4eKDVp4HrrGK8Ws+T5idg0MMF2Ww@mail.gmail.com>

Thanks, all. As it goes, the package submission failed. The package that is
suggested is available at https://r.esri.com/bin/ and as such provided `
https://r.esri.com` as the url in `Additional_repositories`.

The request was to remove the additional repositories and provide
instructions for package installation in the Description field. This
package, arcgisbinding, is used in one line of the entire package
https://github.com/R-ArcGIS/arcgisutils/blob/64093dc1a42fa28010cd45bb6ae8b8c57835cb40/R/arc-auth.R#L123
to extract an authorization token. It is provided for compatibility with a
semi-closed-source R package. The installation instructions for which
are....lengthy (
https://r.esri.com/r-bridge-site/arcgisbinding/installing-arcgisbinding.html)
and *only *available as a windows binary. Providing an explicit call
out for installation in the "Description" field of the DESCRIPTION feels
like it is co-opting the Description to describe the installation process
for a function that I anticipate *very few *people to use.

Is there another approach that can be taken here? The one requested feels
like an incorrect use of the description field because it no longer
describes the package but how to handle one very rare edge case.

On Wed, Jan 3, 2024 at 12:36?PM Uwe Ligges <ligges at statistik.tu-dortmund.de>
wrote:

>  From the CRAN polcies:
>
> "Packages on which a CRAN package depends should be available from a
> mainstream repository: if any mentioned in ?Suggests? or ?Enhances?
> fields are not from such a repository, where to obtain them at a
> repository should be specified in an ?Additional_repositories? field of
> the DESCRIPTION file (as a comma-separated list of repository URLs) or
> for other means of access, described in the ?Description? field. "
>
> Best,
> Uwe Ligges
>
>
>
>
> On 03.01.2024 18:19, Josiah Parry wrote:
> > Thanks, both. I'm not familiar with Additional_repositories. Must the
> > package source be specified there? Or can it be specified via
> > documentation a la Rd file?
> >
> > On Wed, Jan 3, 2024 at 12:14?PM Uwe Ligges
> > <ligges at statistik.tu-dortmund.de
> > <mailto:ligges at statistik.tu-dortmund.de>> wrote:
> >
> >
> >
> >     On 03.01.2024 17:58, Duncan Murdoch wrote:
> >      > On 03/01/2024 11:33 a.m., Josiah Parry wrote:
> >      >> I have a scenario where I have an exported function that
> >     requires the
> >      >> installation a package that *is not* available on CRAN. The body
> >     of the
> >      >> function is generally:
> >      >>
> >      >> fx <- function() {
> >      >>    rlang::check_installed("noncranpkg")
> >      >>    noncranpkg::gx()
> >      >> }
> >      >>
> >      >> As required, this package is in the Suggests field. But this
> >     results in a
> >      >> note:
> >      >>
> >      >> checking package dependencies ... NOTE
> >      >> Package suggested but not available for checking: ?noncranpkg?
> >      >>
> >      >> Can this be safely ignored?
> >      >
> >      > Uwe said yes, and he's an authority.  But for your users, it
> >     might be
> >      > nice to include an Additional_repositories field so they can find
> >     the
> >      > package.  This needs to be organized as an actual repository; the
> >     drat
> >      > package is a very convenient way to set one up.
> >
> >     Thanks for elaborating, yes of course, people have to declare where
> to
> >     get the package from. The note from above is still unavoidable in
> >     that case.
> >
> >     Best,
> >     Uwe
> >
> >      >
> >      > Duncan Murdoch
> >      >
> >      > ______________________________________________
> >      > R-package-devel at r-project.org
> >     <mailto:R-package-devel at r-project.org> mailing list
> >      > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >     <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
> >
>

	[[alternative HTML version deleted]]


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Wed Jan 10 16:25:39 2024
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Wed, 10 Jan 2024 16:25:39 +0100
Subject: [R-pkg-devel] Suggests with non-CRAN packages
In-Reply-To: <CAL3ufULe4D_5-MQr2sbxga4eKDVp4HrrGK8Ws+T5idg0MMF2Ww@mail.gmail.com>
References: <CAL3ufUJs8qG7KOuX3q2T_VPavwsAhNkrvC79pk70KEq_wVZVKQ@mail.gmail.com>
 <4b98dd93-760c-4c21-a122-9bff615b5f62@gmail.com>
 <fd578d29-d30e-4060-a774-c141aa095c33@statistik.tu-dortmund.de>
 <CAL3ufUL2que0kEhmtuNt41BJyQKxo-UcwXzJkMS+3LZ7CbYnZw@mail.gmail.com>
 <9f77096b-e7ab-4750-ab60-802576dfb471@statistik.tu-dortmund.de>
 <CAL3ufULe4D_5-MQr2sbxga4eKDVp4HrrGK8Ws+T5idg0MMF2Ww@mail.gmail.com>
Message-ID: <9060def6-da3e-49ce-a66c-81e48625bd79@statistik.tu-dortmund.de>



On 10.01.2024 15:35, Josiah Parry wrote:
> Thanks, all. As it goes, the package submission failed. The package that 
> is suggested is available at https://r.esri.com/bin/ 
> <https://r.esri.com/bin/> and as such provided `https://r.esri.com 
> <https://r.esri.com>` as the url in `Additional_repositories`.

There is no

https://r.esri.com/src

hence it is obviously not a standard repository.


> The request was to remove the additional repositories and provide 
> instructions for package installation in the Description field. This 
> package, arcgisbinding, is used in one line of the entire package 
> https://github.com/R-ArcGIS/arcgisutils/blob/64093dc1a42fa28010cd45bb6ae8b8c57835cb40/R/arc-auth.R#L123 <https://github.com/R-ArcGIS/arcgisutils/blob/64093dc1a42fa28010cd45bb6ae8b8c57835cb40/R/arc-auth.R#L123> to extract an authorization token. It is provided for compatibility with a semi-closed-source R package. The installation instructions for which are....lengthy (https://r.esri.com/r-bridge-site/arcgisbinding/installing-arcgisbinding.html <https://r.esri.com/r-bridge-site/arcgisbinding/installing-arcgisbinding.html>) and /only /available as a windows binary. Providing an explicit call out?for installation in the "Description" field of the DESCRIPTION feels like it is co-opting the Description to describe the installation process for a function that I anticipate /very few /people to use.

So you can either remove the need for that package or say something like 
".... and if an authorization token is to be extracted on Windows, the 
'arcgisbinding' package is needed that can be installed as explained at 
<https://r.esri.com>."

Best,
Uwe Ligges



> 
> Is there another approach that can be taken here? The one requested 
> feels like an incorrect use of the description field because it no 
> longer describes the package but how to handle one very rare edge case.
> 
> On Wed, Jan 3, 2024 at 12:36?PM Uwe Ligges 
> <ligges at statistik.tu-dortmund.de 
> <mailto:ligges at statistik.tu-dortmund.de>> wrote:
> 
>      ?From the CRAN polcies:
> 
>     "Packages on which a CRAN package depends should be available from a
>     mainstream repository: if any mentioned in ?Suggests? or ?Enhances?
>     fields are not from such a repository, where to obtain them at a
>     repository should be specified in an ?Additional_repositories? field of
>     the DESCRIPTION file (as a comma-separated list of repository URLs) or
>     for other means of access, described in the ?Description? field. "
> 
>     Best,
>     Uwe Ligges
> 
> 
> 
> 
>     On 03.01.2024 18:19, Josiah Parry wrote:
>      > Thanks, both. I'm not familiar with Additional_repositories. Must
>     the
>      > package source be specified there? Or can it be specified?via
>      > documentation a la Rd file?
>      >
>      > On Wed, Jan 3, 2024 at 12:14?PM Uwe Ligges
>      > <ligges at statistik.tu-dortmund.de
>     <mailto:ligges at statistik.tu-dortmund.de>
>      > <mailto:ligges at statistik.tu-dortmund.de
>     <mailto:ligges at statistik.tu-dortmund.de>>> wrote:
>      >
>      >
>      >
>      >? ? ?On 03.01.2024 17:58, Duncan Murdoch wrote:
>      >? ? ? > On 03/01/2024 11:33 a.m., Josiah Parry wrote:
>      >? ? ? >> I have a scenario where I have an exported function that
>      >? ? ?requires the
>      >? ? ? >> installation a package that *is not* available on CRAN.
>     The body
>      >? ? ?of the
>      >? ? ? >> function is generally:
>      >? ? ? >>
>      >? ? ? >> fx <- function() {
>      >? ? ? >> ?? rlang::check_installed("noncranpkg")
>      >? ? ? >> ?? noncranpkg::gx()
>      >? ? ? >> }
>      >? ? ? >>
>      >? ? ? >> As required, this package is in the Suggests field. But this
>      >? ? ?results in a
>      >? ? ? >> note:
>      >? ? ? >>
>      >? ? ? >> checking package dependencies ... NOTE
>      >? ? ? >> Package suggested but not available for checking:
>     ?noncranpkg?
>      >? ? ? >>
>      >? ? ? >> Can this be safely ignored?
>      >? ? ? >
>      >? ? ? > Uwe said yes, and he's an authority.? But for your users, it
>      >? ? ?might be
>      >? ? ? > nice to include an Additional_repositories field so they
>     can find
>      >? ? ?the
>      >? ? ? > package.? This needs to be organized as an actual
>     repository; the
>      >? ? ?drat
>      >? ? ? > package is a very convenient way to set one up.
>      >
>      >? ? ?Thanks for elaborating, yes of course, people have to declare
>     where to
>      >? ? ?get the package from. The note from above is still unavoidable in
>      >? ? ?that case.
>      >
>      >? ? ?Best,
>      >? ? ?Uwe
>      >
>      >? ? ? >
>      >? ? ? > Duncan Murdoch
>      >? ? ? >
>      >? ? ? > ______________________________________________
>      >? ? ? > R-package-devel at r-project.org
>     <mailto:R-package-devel at r-project.org>
>      >? ? ?<mailto:R-package-devel at r-project.org
>     <mailto:R-package-devel at r-project.org>> mailing list
>      >? ? ? > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>     <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
>      >? ? ?<https://stat.ethz.ch/mailman/listinfo/r-package-devel
>     <https://stat.ethz.ch/mailman/listinfo/r-package-devel>>
>      >
> 

From jo@|@h@p@rry @end|ng |rom gm@||@com  Wed Jan 10 16:29:01 2024
From: jo@|@h@p@rry @end|ng |rom gm@||@com (Josiah Parry)
Date: Wed, 10 Jan 2024 10:29:01 -0500
Subject: [R-pkg-devel] Suggests with non-CRAN packages
In-Reply-To: <9060def6-da3e-49ce-a66c-81e48625bd79@statistik.tu-dortmund.de>
References: <CAL3ufUJs8qG7KOuX3q2T_VPavwsAhNkrvC79pk70KEq_wVZVKQ@mail.gmail.com>
 <4b98dd93-760c-4c21-a122-9bff615b5f62@gmail.com>
 <fd578d29-d30e-4060-a774-c141aa095c33@statistik.tu-dortmund.de>
 <CAL3ufUL2que0kEhmtuNt41BJyQKxo-UcwXzJkMS+3LZ7CbYnZw@mail.gmail.com>
 <9f77096b-e7ab-4750-ab60-802576dfb471@statistik.tu-dortmund.de>
 <CAL3ufULe4D_5-MQr2sbxga4eKDVp4HrrGK8Ws+T5idg0MMF2Ww@mail.gmail.com>
 <9060def6-da3e-49ce-a66c-81e48625bd79@statistik.tu-dortmund.de>
Message-ID: <CAL3ufU+DtK=DpzC20hCkNLdPbi_WJew=0_vdgt=56vt28OJaJQ@mail.gmail.com>

Well, I wouldn't say "obviously." It's not quite clear what a "standard"
CRAN-like repository looks like unless you have an intimate knowledge of
CRAN's structure.

Regardless, thank you for the feedback! I'll adjust the description file.

On Wed, Jan 10, 2024 at 10:26?AM Uwe Ligges <ligges at statistik.tu-dortmund.de>
wrote:

>
>
> On 10.01.2024 15:35, Josiah Parry wrote:
> > Thanks, all. As it goes, the package submission failed. The package that
> > is suggested is available at https://r.esri.com/bin/
> > <https://r.esri.com/bin/> and as such provided `https://r.esri.com
> > <https://r.esri.com>` as the url in `Additional_repositories`.
>
> There is no
>
> https://r.esri.com/src
>
> hence it is obviously not a standard repository.
>
>
> > The request was to remove the additional repositories and provide
> > instructions for package installation in the Description field. This
> > package, arcgisbinding, is used in one line of the entire package
> >
> https://github.com/R-ArcGIS/arcgisutils/blob/64093dc1a42fa28010cd45bb6ae8b8c57835cb40/R/arc-auth.R#L123
> <
> https://github.com/R-ArcGIS/arcgisutils/blob/64093dc1a42fa28010cd45bb6ae8b8c57835cb40/R/arc-auth.R#L123>
> to extract an authorization token. It is provided for compatibility with a
> semi-closed-source R package. The installation instructions for which
> are....lengthy (
> https://r.esri.com/r-bridge-site/arcgisbinding/installing-arcgisbinding.html
> <
> https://r.esri.com/r-bridge-site/arcgisbinding/installing-arcgisbinding.html>)
> and /only /available as a windows binary. Providing an explicit call
> out for installation in the "Description" field of the DESCRIPTION feels
> like it is co-opting the Description to describe the installation process
> for a function that I anticipate /very few /people to use.
>
> So you can either remove the need for that package or say something like
> ".... and if an authorization token is to be extracted on Windows, the
> 'arcgisbinding' package is needed that can be installed as explained at
> <https://r.esri.com>."
>
> Best,
> Uwe Ligges
>
>
>
> >
> > Is there another approach that can be taken here? The one requested
> > feels like an incorrect use of the description field because it no
> > longer describes the package but how to handle one very rare edge case.
> >
> > On Wed, Jan 3, 2024 at 12:36?PM Uwe Ligges
> > <ligges at statistik.tu-dortmund.de
> > <mailto:ligges at statistik.tu-dortmund.de>> wrote:
> >
> >       From the CRAN polcies:
> >
> >     "Packages on which a CRAN package depends should be available from a
> >     mainstream repository: if any mentioned in ?Suggests? or ?Enhances?
> >     fields are not from such a repository, where to obtain them at a
> >     repository should be specified in an ?Additional_repositories? field
> of
> >     the DESCRIPTION file (as a comma-separated list of repository URLs)
> or
> >     for other means of access, described in the ?Description? field. "
> >
> >     Best,
> >     Uwe Ligges
> >
> >
> >
> >
> >     On 03.01.2024 18:19, Josiah Parry wrote:
> >      > Thanks, both. I'm not familiar with Additional_repositories. Must
> >     the
> >      > package source be specified there? Or can it be specified via
> >      > documentation a la Rd file?
> >      >
> >      > On Wed, Jan 3, 2024 at 12:14?PM Uwe Ligges
> >      > <ligges at statistik.tu-dortmund.de
> >     <mailto:ligges at statistik.tu-dortmund.de>
> >      > <mailto:ligges at statistik.tu-dortmund.de
> >     <mailto:ligges at statistik.tu-dortmund.de>>> wrote:
> >      >
> >      >
> >      >
> >      >     On 03.01.2024 17:58, Duncan Murdoch wrote:
> >      >      > On 03/01/2024 11:33 a.m., Josiah Parry wrote:
> >      >      >> I have a scenario where I have an exported function that
> >      >     requires the
> >      >      >> installation a package that *is not* available on CRAN.
> >     The body
> >      >     of the
> >      >      >> function is generally:
> >      >      >>
> >      >      >> fx <- function() {
> >      >      >>    rlang::check_installed("noncranpkg")
> >      >      >>    noncranpkg::gx()
> >      >      >> }
> >      >      >>
> >      >      >> As required, this package is in the Suggests field. But
> this
> >      >     results in a
> >      >      >> note:
> >      >      >>
> >      >      >> checking package dependencies ... NOTE
> >      >      >> Package suggested but not available for checking:
> >     ?noncranpkg?
> >      >      >>
> >      >      >> Can this be safely ignored?
> >      >      >
> >      >      > Uwe said yes, and he's an authority.  But for your users,
> it
> >      >     might be
> >      >      > nice to include an Additional_repositories field so they
> >     can find
> >      >     the
> >      >      > package.  This needs to be organized as an actual
> >     repository; the
> >      >     drat
> >      >      > package is a very convenient way to set one up.
> >      >
> >      >     Thanks for elaborating, yes of course, people have to declare
> >     where to
> >      >     get the package from. The note from above is still
> unavoidable in
> >      >     that case.
> >      >
> >      >     Best,
> >      >     Uwe
> >      >
> >      >      >
> >      >      > Duncan Murdoch
> >      >      >
> >      >      > ______________________________________________
> >      >      > R-package-devel at r-project.org
> >     <mailto:R-package-devel at r-project.org>
> >      >     <mailto:R-package-devel at r-project.org
> >     <mailto:R-package-devel at r-project.org>> mailing list
> >      >      > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >     <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
> >      >     <https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >     <https://stat.ethz.ch/mailman/listinfo/r-package-devel>>
> >      >
> >
>

	[[alternative HTML version deleted]]


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Wed Jan 10 16:43:21 2024
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Wed, 10 Jan 2024 16:43:21 +0100
Subject: [R-pkg-devel] Suggests with non-CRAN packages
In-Reply-To: <CAL3ufU+DtK=DpzC20hCkNLdPbi_WJew=0_vdgt=56vt28OJaJQ@mail.gmail.com>
References: <CAL3ufUJs8qG7KOuX3q2T_VPavwsAhNkrvC79pk70KEq_wVZVKQ@mail.gmail.com>
 <4b98dd93-760c-4c21-a122-9bff615b5f62@gmail.com>
 <fd578d29-d30e-4060-a774-c141aa095c33@statistik.tu-dortmund.de>
 <CAL3ufUL2que0kEhmtuNt41BJyQKxo-UcwXzJkMS+3LZ7CbYnZw@mail.gmail.com>
 <9f77096b-e7ab-4750-ab60-802576dfb471@statistik.tu-dortmund.de>
 <CAL3ufULe4D_5-MQr2sbxga4eKDVp4HrrGK8Ws+T5idg0MMF2Ww@mail.gmail.com>
 <9060def6-da3e-49ce-a66c-81e48625bd79@statistik.tu-dortmund.de>
 <CAL3ufU+DtK=DpzC20hCkNLdPbi_WJew=0_vdgt=56vt28OJaJQ@mail.gmail.com>
Message-ID: <ff5b7230-9deb-481e-a654-611f3b0248a8@statistik.tu-dortmund.de>



On 10.01.2024 16:29, Josiah Parry wrote:
> Well, I wouldn't say "obviously." It's not quite clear what a "standard" 
> CRAN-like repository looks like unless you have an intimate knowledge of 
> CRAN's structure.

A repository r that works with

install.packages(......., repos=r)

i.e. needs PACKAGES files and sources/binaries in relevant directories 
such as
./src (at least)
and ideally also
./bin/windows/contrib/4.2/
./bin/windows/contrib/4.3/
./bin/windows/contrib/4.4/
and similarly for mac.

Best,
Uwe Ligges




> Regardless, thank you for the feedback! I'll adjust the description file.
> 
> On Wed, Jan 10, 2024 at 10:26?AM Uwe Ligges 
> <ligges at statistik.tu-dortmund.de 
> <mailto:ligges at statistik.tu-dortmund.de>> wrote:
> 
> 
> 
>     On 10.01.2024 15:35, Josiah Parry wrote:
>      > Thanks, all. As it goes, the package submission failed. The
>     package that
>      > is suggested is available at https://r.esri.com/bin/
>     <https://r.esri.com/bin/>
>      > <https://r.esri.com/bin/ <https://r.esri.com/bin/>> and as such
>     provided `https://r.esri.com <https://r.esri.com>
>      > <https://r.esri.com <https://r.esri.com>>` as the url in
>     `Additional_repositories`.
> 
>     There is no
> 
>     https://r.esri.com/src <https://r.esri.com/src>
> 
>     hence it is obviously not a standard repository.
> 
> 
>      > The request was to remove the additional repositories and provide
>      > instructions for package installation in the Description field. This
>      > package, arcgisbinding, is used in one line of the entire package
>      >
>     https://github.com/R-ArcGIS/arcgisutils/blob/64093dc1a42fa28010cd45bb6ae8b8c57835cb40/R/arc-auth.R#L123 <https://github.com/R-ArcGIS/arcgisutils/blob/64093dc1a42fa28010cd45bb6ae8b8c57835cb40/R/arc-auth.R#L123> <https://github.com/R-ArcGIS/arcgisutils/blob/64093dc1a42fa28010cd45bb6ae8b8c57835cb40/R/arc-auth.R#L123 <https://github.com/R-ArcGIS/arcgisutils/blob/64093dc1a42fa28010cd45bb6ae8b8c57835cb40/R/arc-auth.R#L123>> to extract an authorization token. It is provided for compatibility with a semi-closed-source R package. The installation instructions for which are....lengthy (https://r.esri.com/r-bridge-site/arcgisbinding/installing-arcgisbinding.html <https://r.esri.com/r-bridge-site/arcgisbinding/installing-arcgisbinding.html> <https://r.esri.com/r-bridge-site/arcgisbinding/installing-arcgisbinding.html <https://r.esri.com/r-bridge-site/arcgisbinding/installing-arcgisbinding.html>>) and /only /available as a windows binary. Providing an explicit call out?for installation in the "Description" field of the DESCRIPTION feels like it is co-opting the Description to describe the installation process for a function that I anticipate /very few /people to use.
> 
>     So you can either remove the need for that package or say something
>     like
>     ".... and if an authorization token is to be extracted on Windows, the
>     'arcgisbinding' package is needed that can be installed as explained at
>     <https://r.esri.com <https://r.esri.com>>."
> 
>     Best,
>     Uwe Ligges
> 
> 
> 
>      >
>      > Is there another approach that can be taken here? The one requested
>      > feels like an incorrect use of the description field because it no
>      > longer describes the package but how to handle one very rare edge
>     case.
>      >
>      > On Wed, Jan 3, 2024 at 12:36?PM Uwe Ligges
>      > <ligges at statistik.tu-dortmund.de
>     <mailto:ligges at statistik.tu-dortmund.de>
>      > <mailto:ligges at statistik.tu-dortmund.de
>     <mailto:ligges at statistik.tu-dortmund.de>>> wrote:
>      >
>      >? ? ? ?From the CRAN polcies:
>      >
>      >? ? ?"Packages on which a CRAN package depends should be available
>     from a
>      >? ? ?mainstream repository: if any mentioned in ?Suggests? or
>     ?Enhances?
>      >? ? ?fields are not from such a repository, where to obtain them at a
>      >? ? ?repository should be specified in an
>     ?Additional_repositories? field of
>      >? ? ?the DESCRIPTION file (as a comma-separated list of repository
>     URLs) or
>      >? ? ?for other means of access, described in the ?Description?
>     field. "
>      >
>      >? ? ?Best,
>      >? ? ?Uwe Ligges
>      >
>      >
>      >
>      >
>      >? ? ?On 03.01.2024 18:19, Josiah Parry wrote:
>      >? ? ? > Thanks, both. I'm not familiar with
>     Additional_repositories. Must
>      >? ? ?the
>      >? ? ? > package source be specified there? Or can it be specified?via
>      >? ? ? > documentation a la Rd file?
>      >? ? ? >
>      >? ? ? > On Wed, Jan 3, 2024 at 12:14?PM Uwe Ligges
>      >? ? ? > <ligges at statistik.tu-dortmund.de
>     <mailto:ligges at statistik.tu-dortmund.de>
>      >? ? ?<mailto:ligges at statistik.tu-dortmund.de
>     <mailto:ligges at statistik.tu-dortmund.de>>
>      >? ? ? > <mailto:ligges at statistik.tu-dortmund.de
>     <mailto:ligges at statistik.tu-dortmund.de>
>      >? ? ?<mailto:ligges at statistik.tu-dortmund.de
>     <mailto:ligges at statistik.tu-dortmund.de>>>> wrote:
>      >? ? ? >
>      >? ? ? >
>      >? ? ? >
>      >? ? ? >? ? ?On 03.01.2024 17:58, Duncan Murdoch wrote:
>      >? ? ? >? ? ? > On 03/01/2024 11:33 a.m., Josiah Parry wrote:
>      >? ? ? >? ? ? >> I have a scenario where I have an exported
>     function that
>      >? ? ? >? ? ?requires the
>      >? ? ? >? ? ? >> installation a package that *is not* available on
>     CRAN.
>      >? ? ?The body
>      >? ? ? >? ? ?of the
>      >? ? ? >? ? ? >> function is generally:
>      >? ? ? >? ? ? >>
>      >? ? ? >? ? ? >> fx <- function() {
>      >? ? ? >? ? ? >> ?? rlang::check_installed("noncranpkg")
>      >? ? ? >? ? ? >> ?? noncranpkg::gx()
>      >? ? ? >? ? ? >> }
>      >? ? ? >? ? ? >>
>      >? ? ? >? ? ? >> As required, this package is in the Suggests
>     field. But this
>      >? ? ? >? ? ?results in a
>      >? ? ? >? ? ? >> note:
>      >? ? ? >? ? ? >>
>      >? ? ? >? ? ? >> checking package dependencies ... NOTE
>      >? ? ? >? ? ? >> Package suggested but not available for checking:
>      >? ? ??noncranpkg?
>      >? ? ? >? ? ? >>
>      >? ? ? >? ? ? >> Can this be safely ignored?
>      >? ? ? >? ? ? >
>      >? ? ? >? ? ? > Uwe said yes, and he's an authority.? But for your
>     users, it
>      >? ? ? >? ? ?might be
>      >? ? ? >? ? ? > nice to include an Additional_repositories field so
>     they
>      >? ? ?can find
>      >? ? ? >? ? ?the
>      >? ? ? >? ? ? > package.? This needs to be organized as an actual
>      >? ? ?repository; the
>      >? ? ? >? ? ?drat
>      >? ? ? >? ? ? > package is a very convenient way to set one up.
>      >? ? ? >
>      >? ? ? >? ? ?Thanks for elaborating, yes of course, people have to
>     declare
>      >? ? ?where to
>      >? ? ? >? ? ?get the package from. The note from above is still
>     unavoidable in
>      >? ? ? >? ? ?that case.
>      >? ? ? >
>      >? ? ? >? ? ?Best,
>      >? ? ? >? ? ?Uwe
>      >? ? ? >
>      >? ? ? >? ? ? >
>      >? ? ? >? ? ? > Duncan Murdoch
>      >? ? ? >? ? ? >
>      >? ? ? >? ? ? > ______________________________________________
>      >? ? ? >? ? ? > R-package-devel at r-project.org
>     <mailto:R-package-devel at r-project.org>
>      >? ? ?<mailto:R-package-devel at r-project.org
>     <mailto:R-package-devel at r-project.org>>
>      >? ? ? >? ? ?<mailto:R-package-devel at r-project.org
>     <mailto:R-package-devel at r-project.org>
>      >? ? ?<mailto:R-package-devel at r-project.org
>     <mailto:R-package-devel at r-project.org>>> mailing list
>      >? ? ? >? ? ? >
>     https://stat.ethz.ch/mailman/listinfo/r-package-devel
>     <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
>      >? ? ?<https://stat.ethz.ch/mailman/listinfo/r-package-devel
>     <https://stat.ethz.ch/mailman/listinfo/r-package-devel>>
>      >? ? ? >? ? ?<https://stat.ethz.ch/mailman/listinfo/r-package-devel
>     <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
>      >? ? ?<https://stat.ethz.ch/mailman/listinfo/r-package-devel
>     <https://stat.ethz.ch/mailman/listinfo/r-package-devel>>>
>      >? ? ? >
>      >
> 

From edd @end|ng |rom deb|@n@org  Wed Jan 10 16:53:18 2024
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Wed, 10 Jan 2024 09:53:18 -0600
Subject: [R-pkg-devel] Suggests with non-CRAN packages
In-Reply-To: <9060def6-da3e-49ce-a66c-81e48625bd79@statistik.tu-dortmund.de>
References: <CAL3ufUJs8qG7KOuX3q2T_VPavwsAhNkrvC79pk70KEq_wVZVKQ@mail.gmail.com>
 <4b98dd93-760c-4c21-a122-9bff615b5f62@gmail.com>
 <fd578d29-d30e-4060-a774-c141aa095c33@statistik.tu-dortmund.de>
 <CAL3ufUL2que0kEhmtuNt41BJyQKxo-UcwXzJkMS+3LZ7CbYnZw@mail.gmail.com>
 <9f77096b-e7ab-4750-ab60-802576dfb471@statistik.tu-dortmund.de>
 <CAL3ufULe4D_5-MQr2sbxga4eKDVp4HrrGK8Ws+T5idg0MMF2Ww@mail.gmail.com>
 <9060def6-da3e-49ce-a66c-81e48625bd79@statistik.tu-dortmund.de>
Message-ID: <26014.48494.907575.163236@rob.eddelbuettel.com>


On 10 January 2024 at 16:25, Uwe Ligges wrote:
| 
| 
| On 10.01.2024 15:35, Josiah Parry wrote:
| > Thanks, all. As it goes, the package submission failed. The package that 
| > is suggested is available at https://r.esri.com/bin/ 
| > <https://r.esri.com/bin/> and as such provided `https://r.esri.com 
| > <https://r.esri.com>` as the url in `Additional_repositories`.
| 
| There is no
| 
| https://r.esri.com/src
| 
| hence it is obviously not a standard repository.

And how to set one up is described very patiently over ten pages in

   Hosting Data Packages via drat: A Case Study with Hurricane Exposure Data

at

   https://journal.r-project.org/archive/2017/RJ-2017-026/index.html

which does

   Abstract Data-only packages offer a way to provide extended functionality
   for other R users. However, such packages can be large enough to exceed
   the package size limit (5 megabytes) for the Comprehen sive R Archive
   Network (CRAN). As an alternative, large data packages can be posted to
   additional repostiories beyond CRAN itself in a way that allows smaller
   code packages on CRAN to access and use the data. The drat package
   facilitates creation and use of such alternative repositories and makes it
   particularly simple to host them via GitHub. CRAN packages can draw on
   packages posted to drat repositories through the use of the
   ?Additonal_repositories? field in the DESCRIPTION file. This paper
   describes how R users can create a suite of coordinated packages, in which
   larger data packages are hosted in an alternative repository created with
   drat, while a smaller code package that interacts with this data is
   created that can be submitted to CRAN.

for the use case of a 'too large for CRAN' suggested data package

| > The request was to remove the additional repositories and provide 
| > instructions for package installation in the Description field. This 
| > package, arcgisbinding, is used in one line of the entire package 
| > https://github.com/R-ArcGIS/arcgisutils/blob/64093dc1a42fa28010cd45bb6ae8b8c57835cb40/R/arc-auth.R#L123 <https://github.com/R-ArcGIS/arcgisutils/blob/64093dc1a42fa28010cd45bb6ae8b8c57835cb40/R/arc-auth.R#L123> to extract an authorization token. It is provided for compatibility with a semi-closed-source R package. The installation instructions for which are....lengthy (https://r.esri.com/r-bridge-site/arcgisbinding/installing-arcgisbinding.html <https://r.esri.com/r-bridge-site/arcgisbinding/installing-arcgisbinding.html>) and /only /available as a windows binary. Providing an explicit call out?for installation in the "Description" field of the DESCRIPTION feels like it is co-opting the Description to describe the installation process for a function that I anticipate /very few /people to use.
| 
| So you can either remove the need for that package or say something like 
| ".... and if an authorization token is to be extracted on Windows, the 
| 'arcgisbinding' package is needed that can be installed as explained at 
| <https://r.esri.com>."

Additional_repositories is great, and you have 134 examples at CRAN:

> D <- data.table(tools::CRAN_package_db())
> D[is.na(Additional_repositories)==FALSE, .(Package, Additional_repositories)]
                  Package                                                Additional_repositories
                   <char>                                                                 <char>
  1:            archiDART                                      https://archidart.github.io/drat/
  2:           aroma.core https://henrikbengtsson.r-universe.dev,\nhttps://r-forge.r-project.org
  3:             asteRisk                                   https://rafael-ayala.github.io/drat/
  4:            BayesfMRI                             https://inla.r-inla-download.org/R/testing
  5:                bigDM                              https://inla.r-inla-download.org/R/stable
 ---                                                                                            
130:    TreatmentPatterns                                           https://ohdsi.github.io/drat
131:             TreeDist                                      https://ms609.github.io/packages/
132:         triplesmatch                                        https://errickson.net/rrelaxiv/
133: USA.state.boundaries                                         https://iembry.gitlab.io/drat/
134:                  voi                             https://inla.r-inla-download.org/R/stable/
>

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From murdoch@dunc@n @end|ng |rom gm@||@com  Wed Jan 10 18:16:15 2024
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Wed, 10 Jan 2024 12:16:15 -0500
Subject: [R-pkg-devel] Suggests with non-CRAN packages
In-Reply-To: <CAL3ufULe4D_5-MQr2sbxga4eKDVp4HrrGK8Ws+T5idg0MMF2Ww@mail.gmail.com>
References: <CAL3ufUJs8qG7KOuX3q2T_VPavwsAhNkrvC79pk70KEq_wVZVKQ@mail.gmail.com>
 <4b98dd93-760c-4c21-a122-9bff615b5f62@gmail.com>
 <fd578d29-d30e-4060-a774-c141aa095c33@statistik.tu-dortmund.de>
 <CAL3ufUL2que0kEhmtuNt41BJyQKxo-UcwXzJkMS+3LZ7CbYnZw@mail.gmail.com>
 <9f77096b-e7ab-4750-ab60-802576dfb471@statistik.tu-dortmund.de>
 <CAL3ufULe4D_5-MQr2sbxga4eKDVp4HrrGK8Ws+T5idg0MMF2Ww@mail.gmail.com>
Message-ID: <57ae7f15-487a-4dde-b938-0a8cbdb5dbad@gmail.com>

On 10/01/2024 9:35 a.m., Josiah Parry wrote:
> Thanks, all. As it goes, the package submission failed. The package that 
> is suggested is available at https://r.esri.com/bin/ 
> <https://r.esri.com/bin/> and as such provided `https://r.esri.com 
> <https://r.esri.com>` as the url in `Additional_repositories`.

I don't see a source package there, only .zip files.  Those are only 
going to work on Windows, and only on the R versions you've prepared it 
for.  If the suggested package is only on that platform, I'd suggest 
removing it from "Suggests", and just describe what it does and how to 
use it in a vignette or help page.

If you really want to keep it in Suggests, but don't want to describe 
installation in the way that was recommended to you, then take the other 
route, and put it in an "Additional_repositories" repository as I 
suggested last week -- but this time make sure to use a properly 
formatted repository, not just a web site with some binary builds.  The 
"drat" package makes building one of those really easy.

Duncan Murdoch


From murdoch@dunc@n @end|ng |rom gm@||@com  Wed Jan 10 18:20:43 2024
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Wed, 10 Jan 2024 12:20:43 -0500
Subject: [R-pkg-devel] Suggests with non-CRAN packages
In-Reply-To: <26014.48494.907575.163236@rob.eddelbuettel.com>
References: <CAL3ufUJs8qG7KOuX3q2T_VPavwsAhNkrvC79pk70KEq_wVZVKQ@mail.gmail.com>
 <4b98dd93-760c-4c21-a122-9bff615b5f62@gmail.com>
 <fd578d29-d30e-4060-a774-c141aa095c33@statistik.tu-dortmund.de>
 <CAL3ufUL2que0kEhmtuNt41BJyQKxo-UcwXzJkMS+3LZ7CbYnZw@mail.gmail.com>
 <9f77096b-e7ab-4750-ab60-802576dfb471@statistik.tu-dortmund.de>
 <CAL3ufULe4D_5-MQr2sbxga4eKDVp4HrrGK8Ws+T5idg0MMF2Ww@mail.gmail.com>
 <9060def6-da3e-49ce-a66c-81e48625bd79@statistik.tu-dortmund.de>
 <26014.48494.907575.163236@rob.eddelbuettel.com>
Message-ID: <859e1921-b3a4-4aab-a324-0783e3b305d8@gmail.com>

On 10/01/2024 10:53 a.m., Dirk Eddelbuettel wrote:
> 
> On 10 January 2024 at 16:25, Uwe Ligges wrote:
> |
> |
> | On 10.01.2024 15:35, Josiah Parry wrote:
> | > Thanks, all. As it goes, the package submission failed. The package that
> | > is suggested is available at https://r.esri.com/bin/
> | > <https://r.esri.com/bin/> and as such provided `https://r.esri.com
> | > <https://r.esri.com>` as the url in `Additional_repositories`.
> |
> | There is no
> |
> | https://r.esri.com/src
> |
> | hence it is obviously not a standard repository.
> 
> And how to set one up is described very patiently over ten pages in
> 
>     Hosting Data Packages via drat: A Case Study with Hurricane Exposure Data
> 
> at
> 
>     https://journal.r-project.org/archive/2017/RJ-2017-026/index.html

And for the impatient, see the drat "Quick Start" instructions at

   https://github.com/eddelbuettel/drat

They work really well!  Thanks Dirk!

Duncan Murdoch

> 
> which does
> 
>     Abstract Data-only packages offer a way to provide extended functionality
>     for other R users. However, such packages can be large enough to exceed
>     the package size limit (5 megabytes) for the Comprehen sive R Archive
>     Network (CRAN). As an alternative, large data packages can be posted to
>     additional repostiories beyond CRAN itself in a way that allows smaller
>     code packages on CRAN to access and use the data. The drat package
>     facilitates creation and use of such alternative repositories and makes it
>     particularly simple to host them via GitHub. CRAN packages can draw on
>     packages posted to drat repositories through the use of the
>     ?Additonal_repositories? field in the DESCRIPTION file. This paper
>     describes how R users can create a suite of coordinated packages, in which
>     larger data packages are hosted in an alternative repository created with
>     drat, while a smaller code package that interacts with this data is
>     created that can be submitted to CRAN.
> 
> for the use case of a 'too large for CRAN' suggested data package
> 
> | > The request was to remove the additional repositories and provide
> | > instructions for package installation in the Description field. This
> | > package, arcgisbinding, is used in one line of the entire package
> | > https://github.com/R-ArcGIS/arcgisutils/blob/64093dc1a42fa28010cd45bb6ae8b8c57835cb40/R/arc-auth.R#L123 <https://github.com/R-ArcGIS/arcgisutils/blob/64093dc1a42fa28010cd45bb6ae8b8c57835cb40/R/arc-auth.R#L123> to extract an authorization token. It is provided for compatibility with a semi-closed-source R package. The installation instructions for which are....lengthy (https://r.esri.com/r-bridge-site/arcgisbinding/installing-arcgisbinding.html <https://r.esri.com/r-bridge-site/arcgisbinding/installing-arcgisbinding.html>) and /only /available as a windows binary. Providing an explicit call out?for installation in the "Description" field of the DESCRIPTION feels like it is co-opting the Description to describe the installation process for a function that I anticipate /very few /people to use.
> |
> | So you can either remove the need for that package or say something like
> | ".... and if an authorization token is to be extracted on Windows, the
> | 'arcgisbinding' package is needed that can be installed as explained at
> | <https://r.esri.com>."
> 
> Additional_repositories is great, and you have 134 examples at CRAN:
> 
>> D <- data.table(tools::CRAN_package_db())
>> D[is.na(Additional_repositories)==FALSE, .(Package, Additional_repositories)]
>                    Package                                                Additional_repositories
>                     <char>                                                                 <char>
>    1:            archiDART                                      https://archidart.github.io/drat/
>    2:           aroma.core https://henrikbengtsson.r-universe.dev,\nhttps://r-forge.r-project.org
>    3:             asteRisk                                   https://rafael-ayala.github.io/drat/
>    4:            BayesfMRI                             https://inla.r-inla-download.org/R/testing
>    5:                bigDM                              https://inla.r-inla-download.org/R/stable
>   ---
> 130:    TreatmentPatterns                                           https://ohdsi.github.io/drat
> 131:             TreeDist                                      https://ms609.github.io/packages/
> 132:         triplesmatch                                        https://errickson.net/rrelaxiv/
> 133: USA.state.boundaries                                         https://iembry.gitlab.io/drat/
> 134:                  voi                             https://inla.r-inla-download.org/R/stable/
>>
> 
> Dirk
>


From d@v|d_j_z|mmerm@nn @end|ng |rom hotm@||@com  Thu Jan 11 13:39:17 2024
From: d@v|d_j_z|mmerm@nn @end|ng |rom hotm@||@com (D Z)
Date: Thu, 11 Jan 2024 12:39:17 +0000
Subject: [R-pkg-devel] "Examples with CPU time > 2.5 times elapsed time" and
 other NOTEs on CRAN and rhub checks
Message-ID: <AS8PR03MB101194981649434A5F83AB8A1D3682@AS8PR03MB10119.eurprd03.prod.outlook.com>

Hi all,
I submitted my package RITCH (https://github.com/DavZim/RITCH) to CRAN (used to be archived but I wanted to revive it again) but I got a NOTE (Question 1 below). Besides this NOTE from CRAN, I got two other NOTEs from rhub (Q2 and Q3).

Q1) The CRAN NOTE (Debian only, does not surface on Windows or other platforms) reads

*checking examples ... [7s/3s] NOTE
Examples with CPU time > 2.5 times elapsed time
                              user system elapsed ratio
read_functions 3.968  0.092   0.831 4.886
(https://github.com/DavZim/RITCH/blob/master/R/read_functions.R in case you need the source code, the full CRAN report can be found here https://win-builder.r-project.org/incoming_pretest/RITCH_0.1.23_20240110_120457/Debian/00check.log)

The package itself has no parallelism built-in, but Imports data.table. This NOTE does not surface on other platforms (eg using rhub or on my GitHub actions runners). My unit tests already limit data.table to 2 cores using setDTthreads(2), but I would like to keep this line out of the help files for my functions.
Is there anything that I can do or can I ignore the result and argue for an exception using the false positive argument?

Q2) A second question that I have is that on rhub Ubuntu Linux 20.04.1 LTS, R-release, GCC (https://artifacts.r-hub.io/RITCH_0.1.22.tar.gz-d2b925faf6b24497abbfa6ff60e51d34/RITCH.Rcheck/00check.log) I receive the NOTE that my libs/ sub-directory is at 7.7Mb. Can I ignore this or do I need to figure out how to reduce the binary size of the package?

* checking installed package size ... NOTE
  installed size is  8.6Mb
  sub-directories of 1Mb or more:
    libs   7.7Mb

My code uses Rcpp and has some classes and interdependencies between C++ functions, therefore a rewrite to make the binary size smaller might take a lot of work. From looking around online I find that other packages are a lot bigger. Are there any low-hanging fruits that I can use to reduce the size or should I ignore this NOTE?

Q3) And last but not least, on some rhub instances (Fedora and Ubuntu GCC) I receive a NOTE that the package runs its examples too slowly (eg above 5secs). I have already tweaked the example code already that it runs reliably <4 secs on my development laptop

Ubuntu Linux 20.04.1 LTS, R-release, GCC (https://builder.r-hub.io/status/original/RITCH_0.1.22.tar.gz-d2b925faf6b24497abbfa6ff60e51d34)
* checking examples ... [6s/37s] NOTE
Examples with CPU (user + system) or elapsed time > 5s
               user system elapsed
read_functions 2.51  0.028   12.57

and on Fedora Linux, R-devel, clang, gfortran (https://builder.r-hub.io/status/original/RITCH_0.1.22.tar.gz-01bf475551eb4b30a722ea79ce421788)

* checking examples ... [6s/26s] NOTE
Examples with CPU (user + system) or elapsed time > 5s
                user system elapsed
read_functions 1.896  0.018   8.891

As this does not surface on the CRAN checks, I would ignore it for now and concentrate only on the CRAN checks. Is this correct or should I pay more attention to these NOTEs?

Any help/comment is appreciated.

Thank you for your time and best regards,
David

	[[alternative HTML version deleted]]


From |kry|ov @end|ng |rom d|@root@org  Thu Jan 11 14:45:30 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Thu, 11 Jan 2024 16:45:30 +0300
Subject: [R-pkg-devel] 
 "Examples with CPU time > 2.5 times elapsed time" and
 other NOTEs on CRAN and rhub checks
In-Reply-To: <AS8PR03MB101194981649434A5F83AB8A1D3682@AS8PR03MB10119.eurprd03.prod.outlook.com>
References: <AS8PR03MB101194981649434A5F83AB8A1D3682@AS8PR03MB10119.eurprd03.prod.outlook.com>
Message-ID: <20240111164530.6244d332@arachnoid>

? Thu, 11 Jan 2024 12:39:17 +0000
D Z <david_j_zimmermann at hotmail.com> ?????:

> The package itself has no parallelism built-in, but Imports
> data.table. This NOTE does not surface on other platforms (eg using
> rhub or on my GitHub actions runners). My unit tests already limit
> data.table to 2 cores using setDTthreads(2), but I would like to keep
> this line out of the help files for my functions.

A breakpoint on pthread_create confirms that these are OpenMP threads
created by data.table. You can wrap setDTthreads(2) in \dontshow{} to
avoid visual pollution:
https://cran.r-project.org/doc/manuals/R-exts.html#index-_005cdontshow

> I receive the NOTE that my libs/ sub-directory is at 7.7Mb. Can I
> ignore this or do I need to figure out how to reduce the binary size
> of the package?

I think this is typically accepted for packages using C++.

> And last but not least, on some rhub instances (Fedora and Ubuntu
> GCC) I receive a NOTE that the package runs its examples too slowly
> (eg above 5secs). I have already tweaked the example code already
> that it runs reliably <4 secs on my development laptop

Then it should be fine.

Additionally, you may need to cast some of your Rprintf arguments to
avoid format warnings on Windows:
https://win-builder.r-project.org/incoming_pretest/RITCH_0.1.23_20240110_120457/Windows/00check.log

-- 
Best regards,
Ivan


From Serge@Iov|e|| @end|ng |rom @tkpp@org  Fri Jan 12 19:09:29 2024
From: Serge@Iov|e|| @end|ng |rom @tkpp@org (Serge)
Date: Fri, 12 Jan 2024 19:09:29 +0100
Subject: [R-pkg-devel] Does dependencies up to date on the pretest CRAN
 infrastructure
Message-ID: <9d76dc3b-9f7b-4883-a866-221e46991e15@stkpp.org>

I'm the mainteneur of the package MixAll.

This package has a dependency to the package rtkore (whom I'm the mainteneur too).
I updated the package rtkore one month ago, fixing a compilation problem on windows devel platform.

MixAll has a dependency to rtkore. Thus, I suspect that the error reported below is due to
the presence of the old version of rtkore on the pretest infrastructure of the CRAN.

My question: is-it possible to know what is the version of rtkore installed on this pretest platform ?
(and the https://win-builder.r-project.org/ site too, as I get the same error on this site).
Il would certainly save me many tries, my suspicion should be true.

Thanks,
Serge



> Dear maintainer,
>  
> package MixAll_1.5.4.tar.gz does not pass the incoming checks automatically, please see the following pre-tests:
> Windows: <https://win-builder.r-project.org/incoming_pretest/MixAll_1.5.4_20240108_094228/Windows/00check.log>
> Status: 1 ERROR
> Debian: <https://win-builder.r-project.org/incoming_pretest/MixAll_1.5.4_20240108_094228/Debian/00check.log>
> Status: 1 NOTE
> 
> Last released version's CRAN status: OK: 1, NOTE: 8, WARNING: 2, ERROR: 1
> See: <https://CRAN.R-project.org/web/checks/check_results_MixAll.html>
> 
> CRAN Web: <https://cran.r-project.org/package=MixAll>
> 
> Please fix all problems and resubmit a fixed version via the webform.
> If you are not sure how to fix the problems shown, please ask for help on the R-package-devel mailing list:
 > <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
> If you are fairly certain the rejection is a false positive, please reply-all to this message and explain.
  
> More details are given in the directory:
 > <https://win-builder.r-project.org/incoming_pretest/MixAll_1.5.4_20240108_094228/>
> The files will be removed after roughly 7 days.


From murdoch@dunc@n @end|ng |rom gm@||@com  Fri Jan 12 19:47:46 2024
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Fri, 12 Jan 2024 13:47:46 -0500
Subject: [R-pkg-devel] Does dependencies up to date on the pretest CRAN
 infrastructure
In-Reply-To: <9d76dc3b-9f7b-4883-a866-221e46991e15@stkpp.org>
References: <9d76dc3b-9f7b-4883-a866-221e46991e15@stkpp.org>
Message-ID: <3c2dd7f4-69ed-4a9c-acd4-5a4be7217f36@gmail.com>

I don't know if you can find out which rtkore version was installed, but 
your package should work with any rtkore version if you haven't declared 
a dependency on a particular version.  So the simplest thing is just to 
declare that you depend on "rtkore (>= x.y.z)" where x.y.z has the 
recent fix.

Duncan Murdoch

On 12/01/2024 1:09 p.m., Serge wrote:
> I'm the mainteneur of the package MixAll.
> 
> This package has a dependency to the package rtkore (whom I'm the mainteneur too).
> I updated the package rtkore one month ago, fixing a compilation problem on windows devel platform.
> 
> MixAll has a dependency to rtkore. Thus, I suspect that the error reported below is due to
> the presence of the old version of rtkore on the pretest infrastructure of the CRAN.
> 
> My question: is-it possible to know what is the version of rtkore installed on this pretest platform ?
> (and the https://win-builder.r-project.org/ site too, as I get the same error on this site).
> Il would certainly save me many tries, my suspicion should be true.
> 
> Thanks,
> Serge
> 
> 
> 
>> Dear maintainer,
>>   
>> package MixAll_1.5.4.tar.gz does not pass the incoming checks automatically, please see the following pre-tests:
>> Windows: <https://win-builder.r-project.org/incoming_pretest/MixAll_1.5.4_20240108_094228/Windows/00check.log>
>> Status: 1 ERROR
>> Debian: <https://win-builder.r-project.org/incoming_pretest/MixAll_1.5.4_20240108_094228/Debian/00check.log>
>> Status: 1 NOTE
>>
>> Last released version's CRAN status: OK: 1, NOTE: 8, WARNING: 2, ERROR: 1
>> See: <https://CRAN.R-project.org/web/checks/check_results_MixAll.html>
>>
>> CRAN Web: <https://cran.r-project.org/package=MixAll>
>>
>> Please fix all problems and resubmit a fixed version via the webform.
>> If you are not sure how to fix the problems shown, please ask for help on the R-package-devel mailing list:
>   > <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
>> If you are fairly certain the rejection is a false positive, please reply-all to this message and explain.
>    
>> More details are given in the directory:
>   > <https://win-builder.r-project.org/incoming_pretest/MixAll_1.5.4_20240108_094228/>
>> The files will be removed after roughly 7 days.
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From |kry|ov @end|ng |rom d|@root@org  Fri Jan 12 20:14:19 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Fri, 12 Jan 2024 22:14:19 +0300
Subject: [R-pkg-devel] Does dependencies up to date on the pretest CRAN
 infrastructure
In-Reply-To: <9d76dc3b-9f7b-4883-a866-221e46991e15@stkpp.org>
References: <9d76dc3b-9f7b-4883-a866-221e46991e15@stkpp.org>
Message-ID: <20240112221419.1539ed08@Tarkus>

? Fri, 12 Jan 2024 19:09:29 +0100
Serge <Serge.Iovleff at stkpp.org> ?????:

> I updated the package rtkore one month ago, fixing a compilation
> problem on windows devel platform.
> 
> MixAll has a dependency to rtkore. Thus, I suspect that the error
> reported below is due to the presence of the old version of rtkore on
> the pretest infrastructure of the CRAN.

<https://win-builder.r-project.org/incoming_pretest/MixAll_1.5.4_20240108_094228/Windows/00install.out>:

/usr/bin/make -C projects/Clustering/src/
make[2]: Entering directory '/d/temp/RtmpYJkDTJ/R.INSTALL316dc7c0f48e6/MixAll/inst/projects/Clustering/src'
g++ -std=gnu++17  -I"D:/RCompile/recent/R/include" -DNDEBUG `D:/RCompile/recent/R/bin/Rscript -e "rtkore:::CppFlags()"`  -I'D:/RCompile/CRANpkg/lib/4.4/Rcpp/include' -I'D:/RCompile/CRANpkg/lib/4.4/rtkore/include'   -I"d:/rtools43/x86_64-w64-mingw32.static.posix/include"    `D:/RCompile/recent/R/bin/Rscript -e "rtkore:::CxxFlags()"` -I../inst/projects/ -I../inst/include/ -fopenmp   -pedantic -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign  -I../../../projects/ -I../../../include/ STK_CategoricalParameters.cpp -c -o ../../../bin/STK_CategoricalParameters.o
/bin/sh: line 1: /x86_64-w64-mingw32.static.posix/bin/g++: Bad address
make[2]: *** [makefile:54: ../../../bin/STK_CategoricalParameters.o] Error 126

RTools uses Cygwin features to emulate the presence of certain virtual
paths; /x86_64-w64-mingw32.static.posix/bin/g++ actually exists and is
transparently mapped to
d:/rtools43/x86_64-w64-mingw32.static.posix/bin/g++.exe:

User at WINMACHINE MSYS ~
$ /x86_64-w64-mingw32.static.posix/bin/g++ --version
g++.exe (GCC) 12.2.0

The "Bad address" here means that /bin/sh got an EFAULT while trying to
launch g++.exe:
https://stat.ethz.ch/pipermail/r-package-devel/2023q4/010223.html

Unless there is something extremely weird in the command line arguments
returned by Rscript -e "rtkore:::CxxFlags()" that causes the process to
fail to launch (in my opinion, very unlikely, but can you print them
from your compilation process just in case?), I would be looking for
problems elsewhere.

In particular, the problem cannot be in having rtkore installed that is
one version too old, because you only changed Makevars in that version,
and your package MixAll doesn't use the Makevars from a different
source package.

-- 
Best regards,
Ivan


From Serge@Iov|e|| @end|ng |rom @tkpp@org  Fri Jan 12 20:30:46 2024
From: Serge@Iov|e|| @end|ng |rom @tkpp@org (Serge)
Date: Fri, 12 Jan 2024 20:30:46 +0100
Subject: [R-pkg-devel] Does dependencies up to date on the pretest CRAN
 infrastructure
In-Reply-To: <20240112221419.1539ed08@Tarkus>
References: <9d76dc3b-9f7b-4883-a866-221e46991e15@stkpp.org>
 <20240112221419.1539ed08@Tarkus>
Message-ID: <f0b573d9-c087-4f19-8508-dd2e815e5c76@stkpp.org>

Hello Ivan,

Here the output of Cxxflags on my local computer

 > rtkore::CppFlags()
-DIS_RTKPP_LIB -DSTKUSELAPACK
 > rtkore::CxxFlags()
-I/home/iovleff/R/x86_64-pc-linux-gnu-library/4.3/rtkore/include 
-I/home/iovleff/R/x86_64-pc-linux-gnu-library/4.3/rtkore/projects


and here the code of the functions used internally by CxxFlags() (cpp11 is FALSE by default)

# Provide compiler flags -- i.e. -I/path/to/RTKpp.h
# @keywords internal
.rtkoreCxxFlags <- function(cpp11)
{
   path1 <- .rtkore.system.file( "include" )
   path2 <- .rtkore.system.file( "projects" )
   if (.Platform$OS.type=="windows")
   {
     path1 <- .asBuildPath(path1);
     path2 <- .asBuildPath(path2);
   }
   paste("-I", path1, " -I", path2, if (cpp11) " -std=c++11 " else "", sep="")
}
###########################
# Adapted from Rcpp package
###########################
# @rdname rtkoreFlags
# @keywords internal
.asBuildPath <- function(path)
{
   if (.Platform$OS.type == "windows")
   {
     path <- normalizePath(path)
     if (grepl(' ', path, fixed=TRUE))
       path <- utils::shortPathName(path)
     path <- gsub("\\\\", "/", path)
   }
   return(path)
}


Le 12/01/2024 ? 20:14, Ivan Krylov a ?crit?:
> ? Fri, 12 Jan 2024 19:09:29 +0100
> Serge <Serge.Iovleff at stkpp.org> ?????:
> 
>> I updated the package rtkore one month ago, fixing a compilation
>> problem on windows devel platform.
>>
>> MixAll has a dependency to rtkore. Thus, I suspect that the error
>> reported below is due to the presence of the old version of rtkore on
>> the pretest infrastructure of the CRAN.
> 
> <https://win-builder.r-project.org/incoming_pretest/MixAll_1.5.4_20240108_094228/Windows/00install.out>:
> 
> /usr/bin/make -C projects/Clustering/src/
> make[2]: Entering directory '/d/temp/RtmpYJkDTJ/R.INSTALL316dc7c0f48e6/MixAll/inst/projects/Clustering/src'
> g++ -std=gnu++17  -I"D:/RCompile/recent/R/include" -DNDEBUG `D:/RCompile/recent/R/bin/Rscript -e "rtkore:::CppFlags()"`  -I'D:/RCompile/CRANpkg/lib/4.4/Rcpp/include' -I'D:/RCompile/CRANpkg/lib/4.4/rtkore/include'   -I"d:/rtools43/x86_64-w64-mingw32.static.posix/include"    `D:/RCompile/recent/R/bin/Rscript -e "rtkore:::CxxFlags()"` -I../inst/projects/ -I../inst/include/ -fopenmp   -pedantic -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign  -I../../../projects/ -I../../../include/ STK_CategoricalParameters.cpp -c -o ../../../bin/STK_CategoricalParameters.o
> /bin/sh: line 1: /x86_64-w64-mingw32.static.posix/bin/g++: Bad address
> make[2]: *** [makefile:54: ../../../bin/STK_CategoricalParameters.o] Error 126
> 
> RTools uses Cygwin features to emulate the presence of certain virtual
> paths; /x86_64-w64-mingw32.static.posix/bin/g++ actually exists and is
> transparently mapped to
> d:/rtools43/x86_64-w64-mingw32.static.posix/bin/g++.exe:
> 
> User at WINMACHINE MSYS ~
> $ /x86_64-w64-mingw32.static.posix/bin/g++ --version
> g++.exe (GCC) 12.2.0
> 
> The "Bad address" here means that /bin/sh got an EFAULT while trying to
> launch g++.exe:
> https://stat.ethz.ch/pipermail/r-package-devel/2023q4/010223.html
> 
> Unless there is something extremely weird in the command line arguments
> returned by Rscript -e "rtkore:::CxxFlags()" that causes the process to
> fail to launch (in my opinion, very unlikely, but can you print them
> from your compilation process just in case?), I would be looking for
> problems elsewhere.
> 
> In particular, the problem cannot be in having rtkore installed that is
> one version too old, because you only changed Makevars in that version,
> and your package MixAll doesn't use the Makevars from a different
> source package.
>


From Serge@Iov|e|| @end|ng |rom @tkpp@org  Fri Jan 12 20:57:41 2024
From: Serge@Iov|e|| @end|ng |rom @tkpp@org (Serge)
Date: Fri, 12 Jan 2024 20:57:41 +0100
Subject: [R-pkg-devel] Does dependencies up to date on the pretest CRAN
 infrastructure
In-Reply-To: <3c2dd7f4-69ed-4a9c-acd4-5a4be7217f36@gmail.com>
References: <9d76dc3b-9f7b-4883-a866-221e46991e15@stkpp.org>
 <3c2dd7f4-69ed-4a9c-acd4-5a4be7217f36@gmail.com>
Message-ID: <5376bc60-7d55-4400-b40e-1ddc29d48c57@stkpp.org>

Hello Duncan,

Yes, you're right, I'll do that !
Serge

Le 12/01/2024 ? 19:47, Duncan Murdoch a ?crit?:
> I don't know if you can find out which rtkore version was installed, but your package should work 
> with any rtkore version if you haven't declared a dependency on a particular version.? So the 
> simplest thing is just to declare that you depend on "rtkore (>= x.y.z)" where x.y.z has the recent 
> fix.
> 
> Duncan Murdoch
> 
> On 12/01/2024 1:09 p.m., Serge wrote:
>> I'm the mainteneur of the package MixAll.
>>
>> This package has a dependency to the package rtkore (whom I'm the mainteneur too).
>> I updated the package rtkore one month ago, fixing a compilation problem on windows devel platform.
>>
>> MixAll has a dependency to rtkore. Thus, I suspect that the error reported below is due to
>> the presence of the old version of rtkore on the pretest infrastructure of the CRAN.
>>
>> My question: is-it possible to know what is the version of rtkore installed on this pretest 
>> platform ?
>> (and the https://win-builder.r-project.org/ site too, as I get the same error on this site).
>> Il would certainly save me many tries, my suspicion should be true.
>>
>> Thanks,
>> Serge
>>
>>
>>
>>> Dear maintainer,
>>> package MixAll_1.5.4.tar.gz does not pass the incoming checks automatically, please see the 
>>> following pre-tests:
>>> Windows: 
>>> <https://win-builder.r-project.org/incoming_pretest/MixAll_1.5.4_20240108_094228/Windows/00check.log>
>>> Status: 1 ERROR
>>> Debian: 
>>> <https://win-builder.r-project.org/incoming_pretest/MixAll_1.5.4_20240108_094228/Debian/00check.log>
>>> Status: 1 NOTE
>>>
>>> Last released version's CRAN status: OK: 1, NOTE: 8, WARNING: 2, ERROR: 1
>>> See: <https://CRAN.R-project.org/web/checks/check_results_MixAll.html>
>>>
>>> CRAN Web: <https://cran.r-project.org/package=MixAll>
>>>
>>> Please fix all problems and resubmit a fixed version via the webform.
>>> If you are not sure how to fix the problems shown, please ask for help on the R-package-devel 
>>> mailing list:
>> ? > <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
>>> If you are fairly certain the rejection is a false positive, please reply-all to this message and 
>>> explain.
>>> More details are given in the directory:
>> ? > <https://win-builder.r-project.org/incoming_pretest/MixAll_1.5.4_20240108_094228/>
>>> The files will be removed after roughly 7 days.
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From Serge@Iov|e|| @end|ng |rom @tkpp@org  Fri Jan 12 21:19:00 2024
From: Serge@Iov|e|| @end|ng |rom @tkpp@org (Serge)
Date: Fri, 12 Jan 2024 21:19:00 +0100
Subject: [R-pkg-devel] Does dependencies up to date on the pretest CRAN
 infrastructure
In-Reply-To: <20240112221419.1539ed08@Tarkus>
References: <9d76dc3b-9f7b-4883-a866-221e46991e15@stkpp.org>
 <20240112221419.1539ed08@Tarkus>
Message-ID: <0b451d3b-198d-458e-8e0c-cba953715924@stkpp.org>

Hi Ivan,

After somme minor midficiations, I make a try on the winbuilder site.
I was able to build the archive with the static library
but I get again a Bad address error. You can have a look to

https://win-builder.r-project.org/bw47qsMX3HTd/00install.out

Thanks for your help,
Serge

Le 12/01/2024 ? 20:14, Ivan Krylov a ?crit?:
> ? Fri, 12 Jan 2024 19:09:29 +0100
> Serge <Serge.Iovleff at stkpp.org> ?????:
> 
>> I updated the package rtkore one month ago, fixing a compilation
>> problem on windows devel platform.
>>
>> MixAll has a dependency to rtkore. Thus, I suspect that the error
>> reported below is due to the presence of the old version of rtkore on
>> the pretest infrastructure of the CRAN.
> 
> <https://win-builder.r-project.org/incoming_pretest/MixAll_1.5.4_20240108_094228/Windows/00install.out>:
> 
> /usr/bin/make -C projects/Clustering/src/
> make[2]: Entering directory '/d/temp/RtmpYJkDTJ/R.INSTALL316dc7c0f48e6/MixAll/inst/projects/Clustering/src'
> g++ -std=gnu++17  -I"D:/RCompile/recent/R/include" -DNDEBUG `D:/RCompile/recent/R/bin/Rscript -e "rtkore:::CppFlags()"`  -I'D:/RCompile/CRANpkg/lib/4.4/Rcpp/include' -I'D:/RCompile/CRANpkg/lib/4.4/rtkore/include'   -I"d:/rtools43/x86_64-w64-mingw32.static.posix/include"    `D:/RCompile/recent/R/bin/Rscript -e "rtkore:::CxxFlags()"` -I../inst/projects/ -I../inst/include/ -fopenmp   -pedantic -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign  -I../../../projects/ -I../../../include/ STK_CategoricalParameters.cpp -c -o ../../../bin/STK_CategoricalParameters.o
> /bin/sh: line 1: /x86_64-w64-mingw32.static.posix/bin/g++: Bad address
> make[2]: *** [makefile:54: ../../../bin/STK_CategoricalParameters.o] Error 126
> 
> RTools uses Cygwin features to emulate the presence of certain virtual
> paths; /x86_64-w64-mingw32.static.posix/bin/g++ actually exists and is
> transparently mapped to
> d:/rtools43/x86_64-w64-mingw32.static.posix/bin/g++.exe:
> 
> User at WINMACHINE MSYS ~
> $ /x86_64-w64-mingw32.static.posix/bin/g++ --version
> g++.exe (GCC) 12.2.0
> 
> The "Bad address" here means that /bin/sh got an EFAULT while trying to
> launch g++.exe:
> https://stat.ethz.ch/pipermail/r-package-devel/2023q4/010223.html
> 
> Unless there is something extremely weird in the command line arguments
> returned by Rscript -e "rtkore:::CxxFlags()" that causes the process to
> fail to launch (in my opinion, very unlikely, but can you print them
> from your compilation process just in case?), I would be looking for
> problems elsewhere.
> 
> In particular, the problem cannot be in having rtkore installed that is
> one version too old, because you only changed Makevars in that version,
> and your package MixAll doesn't use the Makevars from a different
> source package.
>


From |kry|ov @end|ng |rom d|@root@org  Sat Jan 13 10:10:24 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Sat, 13 Jan 2024 12:10:24 +0300
Subject: [R-pkg-devel] Does dependencies up to date on the pretest CRAN
 infrastructure
In-Reply-To: <0b451d3b-198d-458e-8e0c-cba953715924@stkpp.org>
References: <9d76dc3b-9f7b-4883-a866-221e46991e15@stkpp.org>
 <20240112221419.1539ed08@Tarkus>
 <0b451d3b-198d-458e-8e0c-cba953715924@stkpp.org>
Message-ID: <20240113121024.5fd323c7@Tarkus>

? Fri, 12 Jan 2024 21:19:00 +0100
Serge <Serge.Iovleff at stkpp.org> ?????:

> After somme minor midficiations, I make a try on the winbuilder site.
> I was able to build the archive with the static library
> but I get again a Bad address error. You can have a look to
> 
> https://win-builder.r-project.org/bw47qsMX3HTd/00install.out

I think that Win-Builder is running out of memory. It took some
experimenting, but I was able to reproduce something like this using
the following:

1. Set the swap file in the Windows settings to minimal recommended
size and disable its automatic growth

2. Write and run a program that does malloc(LARGE_NUMBER); getchar();
so that almost all physical memory is allocated

3. Run gcc -DFOO=`/path/to/Rscript -e 'some script'` & many times

I got a lot of interesting errors, including the "Bad address":

Warnings:
1: .getGeneric(f, , package) : internal error -4 in R_decompress1
2: package "methods" in options("defaultPackages") was not found

0 [main] bash (2892) child_copy: cygheap read copy failed,
0x0..0x800025420, done 0, windows pid 2892, Win32 error 299

0 [main] bash (3256) C:\rtools43\usr\bin\bash.exe: *** fatal error in
forked process - MEM_COMMIT failed, Win32 error 1455

-bash: fork: retry: Resource temporarily unavailable

-bash: R-devel/bin/Rscript.exe: Bad address

Your package is written in C++, but that by itself shouldn't disqualify
it. On my Linux computer, /usr/bin/time R -e
'install.packages("MixAll")' says that the installation takes slightly
less than a gigabyte of memory ("912516maxresident k"), which is par
the course for such packages. (My small Rcpp-using package takes
approximately half a gigabyte by the same metric.)

I'm still not 100% sure (if Win-Builder is running out of memory, why
are you seeing "Bad address" only and not the rest of the carnage?),
but I'm not seeing a problem with your package, either. If EFAULT is
Cygwin's way of saying "I caught a bad pointer in your system call"
(which, I must stress, is happening inside /bin/sh, not your package
or even R at all), it's not impossible that Win-Builder is having
hardware problems. Unfortunately, they take a lot of effort and
downtime to diagnose and could be hiding anywhere from RAM to the power
supply.

-- 
Best regards,
Ivan


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Sat Jan 13 14:08:39 2024
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Sat, 13 Jan 2024 14:08:39 +0100
Subject: [R-pkg-devel] Does dependencies up to date on the pretest CRAN
 infrastructure
In-Reply-To: <20240113121024.5fd323c7@Tarkus>
References: <9d76dc3b-9f7b-4883-a866-221e46991e15@stkpp.org>
 <20240112221419.1539ed08@Tarkus>
 <0b451d3b-198d-458e-8e0c-cba953715924@stkpp.org>
 <20240113121024.5fd323c7@Tarkus>
Message-ID: <badf0fdf-8828-47fa-9768-0bbb925169c4@statistik.tu-dortmund.de>



On 13.01.2024 10:10, Ivan Krylov via R-package-devel wrote:
> ? Fri, 12 Jan 2024 21:19:00 +0100
> Serge <Serge.Iovleff at stkpp.org> ?????:
> 
>> After somme minor midficiations, I make a try on the winbuilder site.
>> I was able to build the archive with the static library
>> but I get again a Bad address error. You can have a look to
>>
>> https://win-builder.r-project.org/bw47qsMX3HTd/00install.out
> 
> I think that Win-Builder is running out of memory. It took some
> experimenting, but I was able to reproduce something like this using
> the following:
> 
> 1. Set the swap file in the Windows settings to minimal recommended
> size and disable its automatic growth
> 
> 2. Write and run a program that does malloc(LARGE_NUMBER); getchar();
> so that almost all physical memory is allocated
> 
> 3. Run gcc -DFOO=`/path/to/Rscript -e 'some script'` & many times
> 
> I got a lot of interesting errors, including the "Bad address":
> 
> Warnings:
> 1: .getGeneric(f, , package) : internal error -4 in R_decompress1
> 2: package "methods" in options("defaultPackages") was not found
> 
> 0 [main] bash (2892) child_copy: cygheap read copy failed,
> 0x0..0x800025420, done 0, windows pid 2892, Win32 error 299
> 
> 0 [main] bash (3256) C:\rtools43\usr\bin\bash.exe: *** fatal error in
> forked process - MEM_COMMIT failed, Win32 error 1455
> 
> -bash: fork: retry: Resource temporarily unavailable
> 
> -bash: R-devel/bin/Rscript.exe: Bad address

The above indeed happens if not sufficient memory would be available.
Important to know: This includes unused but committed memory which may 
be a lot.
But I doubt it is the case on winbuilder as the machines has 256GB or 
more (depending in the machine) and additionally 500GB swap space on SSD.

Best,
Uwe


> Your package is written in C++, but that by itself shouldn't disqualify
> it. On my Linux computer, /usr/bin/time R -e
> 'install.packages("MixAll")' says that the installation takes slightly
> less than a gigabyte of memory ("912516maxresident k"), which is par
> the course for such packages. (My small Rcpp-using package takes
> approximately half a gigabyte by the same metric.)
> 
> I'm still not 100% sure (if Win-Builder is running out of memory, why
> are you seeing "Bad address" only and not the rest of the carnage?),
> but I'm not seeing a problem with your package, either. If EFAULT is
> Cygwin's way of saying "I caught a bad pointer in your system call"
> (which, I must stress, is happening inside /bin/sh, not your package
> or even R at all), it's not impossible that Win-Builder is having
> hardware problems. Unfortunately, they take a lot of effort and
> downtime to diagnose and could be hiding anywhere from RAM to the power
> supply.
> 

From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Sat Jan 13 14:12:33 2024
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Sat, 13 Jan 2024 14:12:33 +0100
Subject: [R-pkg-devel] Does dependencies up to date on the pretest CRAN
 infrastructure
In-Reply-To: <badf0fdf-8828-47fa-9768-0bbb925169c4@statistik.tu-dortmund.de>
References: <9d76dc3b-9f7b-4883-a866-221e46991e15@stkpp.org>
 <20240112221419.1539ed08@Tarkus>
 <0b451d3b-198d-458e-8e0c-cba953715924@stkpp.org>
 <20240113121024.5fd323c7@Tarkus>
 <badf0fdf-8828-47fa-9768-0bbb925169c4@statistik.tu-dortmund.de>
Message-ID: <669c5f1d-a979-420c-aeda-63e92007fa82@statistik.tu-dortmund.de>

I can take a look, but not sure if I get to it before monday.
I haven't seen it for any other packages recently.

My suspicion is currently a strange mix of cmd.exe and sh.exe calls. But 
this is a very wild guess.

Best,
Uwe

On 13.01.2024 14:08, Uwe Ligges wrote:
> 
> 
> On 13.01.2024 10:10, Ivan Krylov via R-package-devel wrote:
>> ? Fri, 12 Jan 2024 21:19:00 +0100
>> Serge <Serge.Iovleff at stkpp.org> ?????:
>>
>>> After somme minor midficiations, I make a try on the winbuilder site.
>>> I was able to build the archive with the static library
>>> but I get again a Bad address error. You can have a look to
>>>
>>> https://win-builder.r-project.org/bw47qsMX3HTd/00install.out
>>
>> I think that Win-Builder is running out of memory. It took some
>> experimenting, but I was able to reproduce something like this using
>> the following:
>>
>> 1. Set the swap file in the Windows settings to minimal recommended
>> size and disable its automatic growth
>>
>> 2. Write and run a program that does malloc(LARGE_NUMBER); getchar();
>> so that almost all physical memory is allocated
>>
>> 3. Run gcc -DFOO=`/path/to/Rscript -e 'some script'` & many times
>>
>> I got a lot of interesting errors, including the "Bad address":
>>
>> Warnings:
>> 1: .getGeneric(f, , package) : internal error -4 in R_decompress1
>> 2: package "methods" in options("defaultPackages") was not found
>>
>> 0 [main] bash (2892) child_copy: cygheap read copy failed,
>> 0x0..0x800025420, done 0, windows pid 2892, Win32 error 299
>>
>> 0 [main] bash (3256) C:\rtools43\usr\bin\bash.exe: *** fatal error in
>> forked process - MEM_COMMIT failed, Win32 error 1455
>>
>> -bash: fork: retry: Resource temporarily unavailable
>>
>> -bash: R-devel/bin/Rscript.exe: Bad address
> 
> The above indeed happens if not sufficient memory would be available.
> Important to know: This includes unused but committed memory which may 
> be a lot.
> But I doubt it is the case on winbuilder as the machines has 256GB or 
> more (depending in the machine) and additionally 500GB swap space on SSD.
> 
> Best,
> Uwe
> 
> 
>> Your package is written in C++, but that by itself shouldn't disqualify
>> it. On my Linux computer, /usr/bin/time R -e
>> 'install.packages("MixAll")' says that the installation takes slightly
>> less than a gigabyte of memory ("912516maxresident k"), which is par
>> the course for such packages. (My small Rcpp-using package takes
>> approximately half a gigabyte by the same metric.)
>>
>> I'm still not 100% sure (if Win-Builder is running out of memory, why
>> are you seeing "Bad address" only and not the rest of the carnage?),
>> but I'm not seeing a problem with your package, either. If EFAULT is
>> Cygwin's way of saying "I caught a bad pointer in your system call"
>> (which, I must stress, is happening inside /bin/sh, not your package
>> or even R at all), it's not impossible that Win-Builder is having
>> hardware problems. Unfortunately, they take a lot of effort and
>> downtime to diagnose and could be hiding anywhere from RAM to the power
>> supply.
>>
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Sat Jan 13 15:01:48 2024
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Sat, 13 Jan 2024 15:01:48 +0100
Subject: [R-pkg-devel] Does dependencies up to date on the pretest CRAN
 infrastructure
In-Reply-To: <669c5f1d-a979-420c-aeda-63e92007fa82@statistik.tu-dortmund.de>
References: <9d76dc3b-9f7b-4883-a866-221e46991e15@stkpp.org>
 <20240112221419.1539ed08@Tarkus>
 <0b451d3b-198d-458e-8e0c-cba953715924@stkpp.org>
 <20240113121024.5fd323c7@Tarkus>
 <badf0fdf-8828-47fa-9768-0bbb925169c4@statistik.tu-dortmund.de>
 <669c5f1d-a979-420c-aeda-63e92007fa82@statistik.tu-dortmund.de>
Message-ID: <f540a493-c521-461c-86d7-91d261664bdf@statistik.tu-dortmund.de>

Fascinating, now it worked with the latest winbuilder submission 3 times 
in a row when I checked it manually. So maybe Ivan was right and there 
was a very demanding set of other packages compiling at the same time?
I don't know.

Serge, Can you somply submit your latest winbuilder upload to CRAN?

Best,
Uwe Ligges



On 13.01.2024 14:12, Uwe Ligges wrote:
> I can take a look, but not sure if I get to it before monday.
> I haven't seen it for any other packages recently.
> 
> My suspicion is currently a strange mix of cmd.exe and sh.exe calls. But 
> this is a very wild guess.
> 
> Best,
> Uwe
> 
> On 13.01.2024 14:08, Uwe Ligges wrote:
>>
>>
>> On 13.01.2024 10:10, Ivan Krylov via R-package-devel wrote:
>>> ? Fri, 12 Jan 2024 21:19:00 +0100
>>> Serge <Serge.Iovleff at stkpp.org> ?????:
>>>
>>>> After somme minor midficiations, I make a try on the winbuilder site.
>>>> I was able to build the archive with the static library
>>>> but I get again a Bad address error. You can have a look to
>>>>
>>>> https://win-builder.r-project.org/bw47qsMX3HTd/00install.out
>>>
>>> I think that Win-Builder is running out of memory. It took some
>>> experimenting, but I was able to reproduce something like this using
>>> the following:
>>>
>>> 1. Set the swap file in the Windows settings to minimal recommended
>>> size and disable its automatic growth
>>>
>>> 2. Write and run a program that does malloc(LARGE_NUMBER); getchar();
>>> so that almost all physical memory is allocated
>>>
>>> 3. Run gcc -DFOO=`/path/to/Rscript -e 'some script'` & many times
>>>
>>> I got a lot of interesting errors, including the "Bad address":
>>>
>>> Warnings:
>>> 1: .getGeneric(f, , package) : internal error -4 in R_decompress1
>>> 2: package "methods" in options("defaultPackages") was not found
>>>
>>> 0 [main] bash (2892) child_copy: cygheap read copy failed,
>>> 0x0..0x800025420, done 0, windows pid 2892, Win32 error 299
>>>
>>> 0 [main] bash (3256) C:\rtools43\usr\bin\bash.exe: *** fatal error in
>>> forked process - MEM_COMMIT failed, Win32 error 1455
>>>
>>> -bash: fork: retry: Resource temporarily unavailable
>>>
>>> -bash: R-devel/bin/Rscript.exe: Bad address
>>
>> The above indeed happens if not sufficient memory would be available.
>> Important to know: This includes unused but committed memory which may 
>> be a lot.
>> But I doubt it is the case on winbuilder as the machines has 256GB or 
>> more (depending in the machine) and additionally 500GB swap space on SSD.
>>
>> Best,
>> Uwe
>>
>>
>>> Your package is written in C++, but that by itself shouldn't disqualify
>>> it. On my Linux computer, /usr/bin/time R -e
>>> 'install.packages("MixAll")' says that the installation takes slightly
>>> less than a gigabyte of memory ("912516maxresident k"), which is par
>>> the course for such packages. (My small Rcpp-using package takes
>>> approximately half a gigabyte by the same metric.)
>>>
>>> I'm still not 100% sure (if Win-Builder is running out of memory, why
>>> are you seeing "Bad address" only and not the rest of the carnage?),
>>> but I'm not seeing a problem with your package, either. If EFAULT is
>>> Cygwin's way of saying "I caught a bad pointer in your system call"
>>> (which, I must stress, is happening inside /bin/sh, not your package
>>> or even R at all), it's not impossible that Win-Builder is having
>>> hardware problems. Unfortunately, they take a lot of effort and
>>> downtime to diagnose and could be hiding anywhere from RAM to the power
>>> supply.
>>>
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

From Serge@Iov|e|| @end|ng |rom @tkpp@org  Sat Jan 13 17:41:30 2024
From: Serge@Iov|e|| @end|ng |rom @tkpp@org (Serge)
Date: Sat, 13 Jan 2024 17:41:30 +0100
Subject: [R-pkg-devel] Does dependencies up to date on the pretest CRAN
 infrastructure
In-Reply-To: <f540a493-c521-461c-86d7-91d261664bdf@statistik.tu-dortmund.de>
References: <9d76dc3b-9f7b-4883-a866-221e46991e15@stkpp.org>
 <20240112221419.1539ed08@Tarkus>
 <0b451d3b-198d-458e-8e0c-cba953715924@stkpp.org>
 <20240113121024.5fd323c7@Tarkus>
 <badf0fdf-8828-47fa-9768-0bbb925169c4@statistik.tu-dortmund.de>
 <669c5f1d-a979-420c-aeda-63e92007fa82@statistik.tu-dortmund.de>
 <f540a493-c521-461c-86d7-91d261664bdf@statistik.tu-dortmund.de>
Message-ID: <bc7131fb-b3ac-437b-8850-4cb1056f46e4@stkpp.org>

Thank you both very much for your feedback.
I'll submit the package tomorrow and see...

Best,
Serge



Le 13/01/2024 ? 15:01, Uwe Ligges a ?crit?:
> Fascinating, now it worked with the latest winbuilder submission 3 times in a row when I checked it 
> manually. So maybe Ivan was right and there was a very demanding set of other packages compiling at 
> the same time?
> I don't know.
> 
> Serge, Can you somply submit your latest winbuilder upload to CRAN?
> 
> Best,
> Uwe Ligges
> 
> 
> 
> On 13.01.2024 14:12, Uwe Ligges wrote:
>> I can take a look, but not sure if I get to it before monday.
>> I haven't seen it for any other packages recently.
>>
>> My suspicion is currently a strange mix of cmd.exe and sh.exe calls. But this is a very wild guess.
>>
>> Best,
>> Uwe
>>
>> On 13.01.2024 14:08, Uwe Ligges wrote:
>>>
>>>
>>> On 13.01.2024 10:10, Ivan Krylov via R-package-devel wrote:
>>>> ? Fri, 12 Jan 2024 21:19:00 +0100
>>>> Serge <Serge.Iovleff at stkpp.org> ?????:
>>>>
>>>>> After somme minor midficiations, I make a try on the winbuilder site.
>>>>> I was able to build the archive with the static library
>>>>> but I get again a Bad address error. You can have a look to
>>>>>
>>>>> https://win-builder.r-project.org/bw47qsMX3HTd/00install.out
>>>>
>>>> I think that Win-Builder is running out of memory. It took some
>>>> experimenting, but I was able to reproduce something like this using
>>>> the following:
>>>>
>>>> 1. Set the swap file in the Windows settings to minimal recommended
>>>> size and disable its automatic growth
>>>>
>>>> 2. Write and run a program that does malloc(LARGE_NUMBER); getchar();
>>>> so that almost all physical memory is allocated
>>>>
>>>> 3. Run gcc -DFOO=`/path/to/Rscript -e 'some script'` & many times
>>>>
>>>> I got a lot of interesting errors, including the "Bad address":
>>>>
>>>> Warnings:
>>>> 1: .getGeneric(f, , package) : internal error -4 in R_decompress1
>>>> 2: package "methods" in options("defaultPackages") was not found
>>>>
>>>> 0 [main] bash (2892) child_copy: cygheap read copy failed,
>>>> 0x0..0x800025420, done 0, windows pid 2892, Win32 error 299
>>>>
>>>> 0 [main] bash (3256) C:\rtools43\usr\bin\bash.exe: *** fatal error in
>>>> forked process - MEM_COMMIT failed, Win32 error 1455
>>>>
>>>> -bash: fork: retry: Resource temporarily unavailable
>>>>
>>>> -bash: R-devel/bin/Rscript.exe: Bad address
>>>
>>> The above indeed happens if not sufficient memory would be available.
>>> Important to know: This includes unused but committed memory which may be a lot.
>>> But I doubt it is the case on winbuilder as the machines has 256GB or more (depending in the 
>>> machine) and additionally 500GB swap space on SSD.
>>>
>>> Best,
>>> Uwe
>>>
>>>
>>>> Your package is written in C++, but that by itself shouldn't disqualify
>>>> it. On my Linux computer, /usr/bin/time R -e
>>>> 'install.packages("MixAll")' says that the installation takes slightly
>>>> less than a gigabyte of memory ("912516maxresident k"), which is par
>>>> the course for such packages. (My small Rcpp-using package takes
>>>> approximately half a gigabyte by the same metric.)
>>>>
>>>> I'm still not 100% sure (if Win-Builder is running out of memory, why
>>>> are you seeing "Bad address" only and not the rest of the carnage?),
>>>> but I'm not seeing a problem with your package, either. If EFAULT is
>>>> Cygwin's way of saying "I caught a bad pointer in your system call"
>>>> (which, I must stress, is happening inside /bin/sh, not your package
>>>> or even R at all), it's not impossible that Win-Builder is having
>>>> hardware problems. Unfortunately, they take a lot of effort and
>>>> downtime to diagnose and could be hiding anywhere from RAM to the power
>>>> supply.
>>>>
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Sun Jan 14 18:50:01 2024
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Sun, 14 Jan 2024 18:50:01 +0100
Subject: [R-pkg-devel] Does dependencies up to date on the pretest CRAN
 infrastructure
In-Reply-To: <f540a493-c521-461c-86d7-91d261664bdf@statistik.tu-dortmund.de>
References: <9d76dc3b-9f7b-4883-a866-221e46991e15@stkpp.org>
 <20240112221419.1539ed08@Tarkus>
 <0b451d3b-198d-458e-8e0c-cba953715924@stkpp.org>
 <20240113121024.5fd323c7@Tarkus>
 <badf0fdf-8828-47fa-9768-0bbb925169c4@statistik.tu-dortmund.de>
 <669c5f1d-a979-420c-aeda-63e92007fa82@statistik.tu-dortmund.de>
 <f540a493-c521-461c-86d7-91d261664bdf@statistik.tu-dortmund.de>
Message-ID: <161938e1-9b59-4cc8-ac63-ee5b1bc32a34@statistik.tu-dortmund.de>



On 13.01.2024 15:01, Uwe Ligges wrote:
> Fascinating, now it worked with the latest winbuilder submission 3 times 
> in a row when I checked it manually. So maybe Ivan was right and there 
> was a very demanding set of other packages compiling at the same time?
> I don't know.
> 
> Serge, Can you somply submit your latest winbuilder upload to CRAN?

Really, I inspected some more. The underlying issue is simple:
The C++ compiler used under Windows asks for precomitted memory. If 
several processes are running at the same time, a lot of memory is 
precomitted. And Windows does not use it for other processes, even if 
almost nothing is actually used.
So while the used memory may be around 50GB, all of the rest (of 756 GB 
including swap space) may have been precomitted (but unused) and new 
processes failed to start correctly. Grrrr.

Best,
Uwe Ligges





> Best,
> Uwe Ligges
> 
> 
> 
> On 13.01.2024 14:12, Uwe Ligges wrote:
>> I can take a look, but not sure if I get to it before monday.
>> I haven't seen it for any other packages recently.
>>
>> My suspicion is currently a strange mix of cmd.exe and sh.exe calls. 
>> But this is a very wild guess.
>>
>> Best,
>> Uwe
>>
>> On 13.01.2024 14:08, Uwe Ligges wrote:
>>>
>>>
>>> On 13.01.2024 10:10, Ivan Krylov via R-package-devel wrote:
>>>> ? Fri, 12 Jan 2024 21:19:00 +0100
>>>> Serge <Serge.Iovleff at stkpp.org> ?????:
>>>>
>>>>> After somme minor midficiations, I make a try on the winbuilder site.
>>>>> I was able to build the archive with the static library
>>>>> but I get again a Bad address error. You can have a look to
>>>>>
>>>>> https://win-builder.r-project.org/bw47qsMX3HTd/00install.out
>>>>
>>>> I think that Win-Builder is running out of memory. It took some
>>>> experimenting, but I was able to reproduce something like this using
>>>> the following:
>>>>
>>>> 1. Set the swap file in the Windows settings to minimal recommended
>>>> size and disable its automatic growth
>>>>
>>>> 2. Write and run a program that does malloc(LARGE_NUMBER); getchar();
>>>> so that almost all physical memory is allocated
>>>>
>>>> 3. Run gcc -DFOO=`/path/to/Rscript -e 'some script'` & many times
>>>>
>>>> I got a lot of interesting errors, including the "Bad address":
>>>>
>>>> Warnings:
>>>> 1: .getGeneric(f, , package) : internal error -4 in R_decompress1
>>>> 2: package "methods" in options("defaultPackages") was not found
>>>>
>>>> 0 [main] bash (2892) child_copy: cygheap read copy failed,
>>>> 0x0..0x800025420, done 0, windows pid 2892, Win32 error 299
>>>>
>>>> 0 [main] bash (3256) C:\rtools43\usr\bin\bash.exe: *** fatal error in
>>>> forked process - MEM_COMMIT failed, Win32 error 1455
>>>>
>>>> -bash: fork: retry: Resource temporarily unavailable
>>>>
>>>> -bash: R-devel/bin/Rscript.exe: Bad address
>>>
>>> The above indeed happens if not sufficient memory would be available.
>>> Important to know: This includes unused but committed memory which 
>>> may be a lot.
>>> But I doubt it is the case on winbuilder as the machines has 256GB or 
>>> more (depending in the machine) and additionally 500GB swap space on 
>>> SSD.
>>>
>>> Best,
>>> Uwe
>>>
>>>
>>>> Your package is written in C++, but that by itself shouldn't disqualify
>>>> it. On my Linux computer, /usr/bin/time R -e
>>>> 'install.packages("MixAll")' says that the installation takes slightly
>>>> less than a gigabyte of memory ("912516maxresident k"), which is par
>>>> the course for such packages. (My small Rcpp-using package takes
>>>> approximately half a gigabyte by the same metric.)
>>>>
>>>> I'm still not 100% sure (if Win-Builder is running out of memory, why
>>>> are you seeing "Bad address" only and not the rest of the carnage?),
>>>> but I'm not seeing a problem with your package, either. If EFAULT is
>>>> Cygwin's way of saying "I caught a bad pointer in your system call"
>>>> (which, I must stress, is happening inside /bin/sh, not your package
>>>> or even R at all), it's not impossible that Win-Builder is having
>>>> hardware problems. Unfortunately, they take a lot of effort and
>>>> downtime to diagnose and could be hiding anywhere from RAM to the power
>>>> supply.
>>>>
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

From ro||turner @end|ng |rom po@teo@net  Tue Jan 16 06:15:22 2024
From: ro||turner @end|ng |rom po@teo@net (Rolf Turner)
Date: Tue, 16 Jan 2024 05:15:22 +0000
Subject: [R-pkg-devel] checking CRAN incoming feasibility
Message-ID: <20240116181522.42573cc6@rolf-Latitude-E7470>


This post essentially amounts to idle curiosity.  I don't really expect
that anything can be done about the problem that I perceive.

When I check a package using --as-cran, the code spits out a line

    checking CRAN incoming feasibility ...

and then disappears into a black hole for what seems an eternity (5 or
10 minutes).

Why does this step take so long?  Surely the software just has to check
that there is web connection to a CRAN mirror.  I would have thought
that this would be executed virtually instantaneously.

cheers,

Rolf Turner

-- 
Honorary Research Fellow
Department of Statistics
University of Auckland
Stats. Dep't. (secretaries) phone:
         +64-9-373-7599 ext. 89622
Home phone: +64-9-480-4619


From hugh@p@r@on@ge @end|ng |rom gm@||@com  Tue Jan 16 06:24:59 2024
From: hugh@p@r@on@ge @end|ng |rom gm@||@com (Hugh Parsonage)
Date: Tue, 16 Jan 2024 16:24:59 +1100
Subject: [R-pkg-devel] checking CRAN incoming feasibility
In-Reply-To: <20240116181522.42573cc6@rolf-Latitude-E7470>
References: <20240116181522.42573cc6@rolf-Latitude-E7470>
Message-ID: <CAJmOi+P3ba7YVChFxz8kvAY9tr8VBi_SE+spgTzBHpswaNkjeQ@mail.gmail.com>

>  Surely the software just has to check
that there is web connection to a CRAN mirror.

Nope! The full code is in tools:::.check_package_CRAN_incoming  (the
body of which filled up my entire console), but to name a few checks
it has to do: check that the name of the package is not the same as
any other, including archived packages (which means that it has to
download the package metadata), make sure the licence is ok, see if
the version number is ok. 10 minutes is quite a lot though. I suspect
the initial connection may have been faulty.

On Tue, 16 Jan 2024 at 16:15, Rolf Turner <rolfturner at posteo.net> wrote:
>
>
> This post essentially amounts to idle curiosity.  I don't really expect
> that anything can be done about the problem that I perceive.
>
> When I check a package using --as-cran, the code spits out a line
>
>     checking CRAN incoming feasibility ...
>
> and then disappears into a black hole for what seems an eternity (5 or
> 10 minutes).
>
> Why does this step take so long?  Surely the software just has to check
> that there is web connection to a CRAN mirror.  I would have thought
> that this would be executed virtually instantaneously.
>
> cheers,
>
> Rolf Turner
>
> --
> Honorary Research Fellow
> Department of Statistics
> University of Auckland
> Stats. Dep't. (secretaries) phone:
>          +64-9-373-7599 ext. 89622
> Home phone: +64-9-480-4619
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From ro||turner @end|ng |rom po@teo@net  Tue Jan 16 06:49:01 2024
From: ro||turner @end|ng |rom po@teo@net (Rolf Turner)
Date: Tue, 16 Jan 2024 05:49:01 +0000
Subject: [R-pkg-devel] checking CRAN incoming feasibility
In-Reply-To: <CAJmOi+P3ba7YVChFxz8kvAY9tr8VBi_SE+spgTzBHpswaNkjeQ@mail.gmail.com>
References: <20240116181522.42573cc6@rolf-Latitude-E7470>
 <CAJmOi+P3ba7YVChFxz8kvAY9tr8VBi_SE+spgTzBHpswaNkjeQ@mail.gmail.com>
Message-ID: <20240116184901.3f33e87b@rolf-Latitude-E7470>


On Tue, 16 Jan 2024 16:24:59 +1100
Hugh Parsonage <hugh.parsonage at gmail.com> wrote:

> >  Surely the software just has to check
> that there is web connection to a CRAN mirror.
> 
> Nope! The full code is in tools:::.check_package_CRAN_incoming  (the
> body of which filled up my entire console), but to name a few checks
> it has to do: check that the name of the package is not the same as
> any other, including archived packages (which means that it has to
> download the package metadata), make sure the licence is ok, see if
> the version number is ok. 10 minutes is quite a lot though. I suspect
> the initial connection may have been faulty.

Well, it may not have been 10 minutes, but it was at least 5.  The
problem is persistent/repeatable.  I don't believe that there is any
faulty connection.

Thanks for the insight.

cheers,

Rolf Turner

-- 
Honorary Research Fellow
Department of Statistics
University of Auckland
Stats. Dep't. (secretaries) phone:
         +64-9-373-7599 ext. 89622
Home phone: +64-9-480-4619


From |kry|ov @end|ng |rom d|@root@org  Tue Jan 16 08:58:58 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Tue, 16 Jan 2024 10:58:58 +0300
Subject: [R-pkg-devel] checking CRAN incoming feasibility
In-Reply-To: <20240116184901.3f33e87b@rolf-Latitude-E7470>
References: <20240116181522.42573cc6@rolf-Latitude-E7470>
 <CAJmOi+P3ba7YVChFxz8kvAY9tr8VBi_SE+spgTzBHpswaNkjeQ@mail.gmail.com>
 <20240116184901.3f33e87b@rolf-Latitude-E7470>
Message-ID: <20240116105858.4e657b78@Tarkus>

? Tue, 16 Jan 2024 05:49:01 +0000
Rolf Turner <rolfturner at posteo.net> ?????:

> The problem is persistent/repeatable.  I don't believe that there is
> any faulty connection.

One of the things done by R CMD check --as-cran at this point is
sending a HEAD request to every Web link mentioned in the package
documentation and DESCRIPTION. One of the hosts may be slow to respond,
either by accident or due to misguided anti-robot countermeasures.
(Most website protection systems would say that R CMD check counts as a
robot because there's no human behind it to look at the ads.)

Here's what you could try. Unpack your built source package. If you
have a fresh .Rcheck directory from an R CMD check, use
YOURPACKAGE.Rcheck/00_pkg_src/YOURPACKAGE. Then profile the check
function, using the subdirectory from the source package archive as the
argument:

Rprof(); tools:::.check_package_CRAN_incoming(dir); Rprof('NULL')

Does any one function stand out in the subsequent summaryRprof()
output? For me, it's readRDS (not very helpful), but by reading
Rprof.out I can see that it's used by CRAN_package_db and
CRAN_archive_db to download web/packages/packages.rds and
src/contrib/Meta/archive.rds from the chosen CRAN mirror, which for me
takes a few seconds for both files.

Do you have a CRAN mirror set up in ~/.Rprofile? It could be having a
slow day.

-- 
Best regards,
Ivan


From d@v|dhughjone@ @end|ng |rom gm@||@com  Tue Jan 16 09:47:07 2024
From: d@v|dhughjone@ @end|ng |rom gm@||@com (David Hugh-Jones)
Date: Tue, 16 Jan 2024 08:47:07 +0000
Subject: [R-pkg-devel] checking CRAN incoming feasibility
In-Reply-To: <CAJmOi+P3ba7YVChFxz8kvAY9tr8VBi_SE+spgTzBHpswaNkjeQ@mail.gmail.com>
References: <20240116181522.42573cc6@rolf-Latitude-E7470>
 <CAJmOi+P3ba7YVChFxz8kvAY9tr8VBi_SE+spgTzBHpswaNkjeQ@mail.gmail.com>
Message-ID: <CAARY7ki=8w7+5wySY6evjjao+uShJD1AsokDioX+cfYaui6FTg@mail.gmail.com>

If I understand correctly, the current procedure is that the client
downloads every package name from CRAN, and then checks its name is
unique. Wouldn?t
it be faster (for both parties) to check name uniqueness directly on the
server?


Writing: wyclif.substack.com
Book: www.wyclifsdust.com


On Tue, 16 Jan 2024 at 05:25, Hugh Parsonage <hugh.parsonage at gmail.com>
wrote:

> >  Surely the software just has to check
> that there is web connection to a CRAN mirror.
>
> Nope! The full code is in tools:::.check_package_CRAN_incoming  (the
> body of which filled up my entire console), but to name a few checks
> it has to do: check that the name of the package is not the same as
> any other, including archived packages (which means that it has to
> download the package metadata), make sure the licence is ok, see if
> the version number is ok. 10 minutes is quite a lot though. I suspect
> the initial connection may have been faulty.
>
> On Tue, 16 Jan 2024 at 16:15, Rolf Turner <rolfturner at posteo.net> wrote:
> >
> >
> > This post essentially amounts to idle curiosity.  I don't really expect
> > that anything can be done about the problem that I perceive.
> >
> > When I check a package using --as-cran, the code spits out a line
> >
> >     checking CRAN incoming feasibility ...
> >
> > and then disappears into a black hole for what seems an eternity (5 or
> > 10 minutes).
> >
> > Why does this step take so long?  Surely the software just has to check
> > that there is web connection to a CRAN mirror.  I would have thought
> > that this would be executed virtually instantaneously.
> >
> > cheers,
> >
> > Rolf Turner
> >
> > --
> > Honorary Research Fellow
> > Department of Statistics
> > University of Auckland
> > Stats. Dep't. (secretaries) phone:
> >          +64-9-373-7599 ext. 89622
> > Home phone: +64-9-480-4619
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Tue Jan 16 11:00:08 2024
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Tue, 16 Jan 2024 11:00:08 +0100
Subject: [R-pkg-devel] checking CRAN incoming feasibility
In-Reply-To: <20240116184901.3f33e87b@rolf-Latitude-E7470>
References: <20240116181522.42573cc6@rolf-Latitude-E7470>
 <CAJmOi+P3ba7YVChFxz8kvAY9tr8VBi_SE+spgTzBHpswaNkjeQ@mail.gmail.com>
 <20240116184901.3f33e87b@rolf-Latitude-E7470>
Message-ID: <3804e258-e568-4005-924b-946299d04ca1@statistik.tu-dortmund.de>



On 16.01.2024 06:49, Rolf Turner wrote:
> 
> On Tue, 16 Jan 2024 16:24:59 +1100
> Hugh Parsonage <hugh.parsonage at gmail.com> wrote:
> 
>>>   Surely the software just has to check
>> that there is web connection to a CRAN mirror.
>>
>> Nope! The full code is in tools:::.check_package_CRAN_incoming  (the
>> body of which filled up my entire console), but to name a few checks
>> it has to do: check that the name of the package is not the same as
>> any other, including archived packages (which means that it has to
>> download the package metadata), make sure the licence is ok, see if
>> the version number is ok. 10 minutes is quite a lot though. I suspect
>> the initial connection may have been faulty.
> 
> Well, it may not have been 10 minutes, but it was at least 5.  The
> problem is persistent/repeatable.  I don't believe that there is any
> faulty connection.
> 
> Thanks for the insight.
> 
> cheers,
> 
> Rolf Turner
> 


I'd suggest to choose a local CRAN mirror for the checks (particularly 
as you are located at the most opposite side of the world from Vienna) 
which may help if several requests to CRAN are done.
Also, you may want to disable the URL checks, which also take some time 
for us, but may be way more serious if you point to many URLs that do 
not resolve to servers in your part of the world.

Best,
Uwe Ligges

From jo@|@h@p@rry @end|ng |rom gm@||@com  Tue Jan 16 15:46:41 2024
From: jo@|@h@p@rry @end|ng |rom gm@||@com (Josiah Parry)
Date: Tue, 16 Jan 2024 09:46:41 -0500
Subject: [R-pkg-devel] test failure: oldrel
Message-ID: <CAL3ufUJgCWZm0Kosxbt4Awha7Wag0EhUEc8bNp=PqCOGjYqyOA@mail.gmail.com>

Hey folks! I've received note that a package of mine is failing tests on
oldrel.

Check results:
https://www.r-project.org/nosvn/R.check/r-oldrel-windows-x86_64/arcgisutils-00check.html

I think I've narrowed it down to the way that I've written the test which
uses `as.POSIXct(Sys.Date(), tz = "UTC")`.

If I understand the R release changelog correctly, this behavior did not
exist prior to R 4.3.0.

as.POSIXlt(<Date>) now does apply a tz (time zone) argument, as does
> as.POSIXct(); partly suggested by Roland Fu? on the R-devel mailing list.


https://cran.r-project.org/doc/manuals/r-release/NEWS.html

Does this check out? If so, would be more effective to modify the test to
use a the character method of `as.POSIXct()`?

	[[alternative HTML version deleted]]


From edd @end|ng |rom deb|@n@org  Tue Jan 16 15:59:21 2024
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Tue, 16 Jan 2024 08:59:21 -0600
Subject: [R-pkg-devel] test failure: oldrel
In-Reply-To: <CAL3ufUJgCWZm0Kosxbt4Awha7Wag0EhUEc8bNp=PqCOGjYqyOA@mail.gmail.com>
References: <CAL3ufUJgCWZm0Kosxbt4Awha7Wag0EhUEc8bNp=PqCOGjYqyOA@mail.gmail.com>
Message-ID: <26022.39369.364674.947370@rob.eddelbuettel.com>


Doesn't seem to be the case as it moderately easy to check (especially when
you happen to have local images of r-base around anyway):

edd at rob:~$ for v in 4.3.2 4.2.2 4.1.3 4.0.5 3.6.3 3.5.3 3.4.4 3.3.3; do echo -n "R ${v}: "; docker run --rm -ti r-base:${v} Rscript -e 'as.POSIXct(Sys.Date(), tz = "UTC")'; done
R 4.3.2: [1] "2024-01-16 UTC"
R 4.2.2: [1] "2024-01-16 UTC"
R 4.1.3: [1] "2024-01-16 UTC"
R 4.0.5: [1] "2024-01-16 UTC"
R 3.6.3: [1] "2024-01-16 UTC"
R 3.5.3: [1] "2024-01-16 UTC"
R 3.4.4: [1] "2024-01-16 UTC"
R 3.3.3: [1] "2024-01-16 UTC"
edd at rob:~$ 

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From |kry|ov @end|ng |rom d|@root@org  Tue Jan 16 16:04:20 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Tue, 16 Jan 2024 18:04:20 +0300
Subject: [R-pkg-devel] checking CRAN incoming feasibility
In-Reply-To: <CAARY7ki=8w7+5wySY6evjjao+uShJD1AsokDioX+cfYaui6FTg@mail.gmail.com>
References: <20240116181522.42573cc6@rolf-Latitude-E7470>
 <CAJmOi+P3ba7YVChFxz8kvAY9tr8VBi_SE+spgTzBHpswaNkjeQ@mail.gmail.com>
 <CAARY7ki=8w7+5wySY6evjjao+uShJD1AsokDioX+cfYaui6FTg@mail.gmail.com>
Message-ID: <20240116180420.43895dee@arachnoid>

? Tue, 16 Jan 2024 08:47:07 +0000
David Hugh-Jones <davidhughjones at gmail.com> ?????:

> If I understand correctly, the current procedure is that the client
> downloads every package name from CRAN, and then checks its name is
> unique.

This is not the only check that relies on utils::available.packages().

In particular, strong dependencies are ensured to be present in
mainstream repositories, and the whole strong dependency tree is checked
for packages with FOSS licenses to ensure that their dependencies do not
restrict use.

Additional checks require even more files:

 - src/contrib/PACKAGES.in is checked for CRAN notes on packages
 - src/contrib/Meta/archive.rds is also checked for potential name
   collisions, case-insensitively.
 - src/contrib/Meta/current.rds is checked together with archive.rds
   for update frequency
 - web/packages/packages.rds is checked for maintainer changes

> Wouldn?t it be faster (for both parties) to check name uniqueness
> directly on the server?

The current scheme, if somewhat wasteful, makes it possible to run R
CMD check with any CRAN mirror without making it run any code server
side. (With the small exception of .htaccess to rewrite some paths, but
that should be translatable for other servers like nginx too.)

It's probably not impossible to transmit only data related to the
current package while keeping this property, but recursive dependency
checks in particular will not be easy. I think it's not worth the
effort.

-- 
Best regards,
Ivan


From jo@|@h@p@rry @end|ng |rom gm@||@com  Tue Jan 16 16:28:36 2024
From: jo@|@h@p@rry @end|ng |rom gm@||@com (Josiah Parry)
Date: Tue, 16 Jan 2024 10:28:36 -0500
Subject: [R-pkg-devel] test failure: oldrel
In-Reply-To: <26022.39369.364674.947370@rob.eddelbuettel.com>
References: <CAL3ufUJgCWZm0Kosxbt4Awha7Wag0EhUEc8bNp=PqCOGjYqyOA@mail.gmail.com>
 <26022.39369.364674.947370@rob.eddelbuettel.com>
Message-ID: <CAL3ufULJYW-u8T9gr7n=1iAc5veqiEYP603RHGTAACOc+emGjA@mail.gmail.com>

Oddly making the change has made CI happy.
https://github.com/R-ArcGIS/arcgisutils/actions/runs/7543315551/job/20534063601

It may be that the issue was OS related but I'm unsure since only oldrel
for windows and macos check results are published
https://cran.r-project.org/web/checks/check_results_arcgisutils.html


On Tue, Jan 16, 2024 at 9:59?AM Dirk Eddelbuettel <edd at debian.org> wrote:

>
> Doesn't seem to be the case as it moderately easy to check (especially when
> you happen to have local images of r-base around anyway):
>
> edd at rob:~$ for v in 4.3.2 4.2.2 4.1.3 4.0.5 3.6.3 3.5.3 3.4.4 3.3.3; do
> echo -n "R ${v}: "; docker run --rm -ti r-base:${v} Rscript -e
> 'as.POSIXct(Sys.Date(), tz = "UTC")'; done
> R 4.3.2: [1] "2024-01-16 UTC"
> R 4.2.2: [1] "2024-01-16 UTC"
> R 4.1.3: [1] "2024-01-16 UTC"
> R 4.0.5: [1] "2024-01-16 UTC"
> R 3.6.3: [1] "2024-01-16 UTC"
> R 3.5.3: [1] "2024-01-16 UTC"
> R 3.4.4: [1] "2024-01-16 UTC"
> R 3.3.3: [1] "2024-01-16 UTC"
> edd at rob:~$
>
> Dirk
>
> --
> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>

	[[alternative HTML version deleted]]


From edd @end|ng |rom deb|@n@org  Tue Jan 16 18:12:04 2024
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Tue, 16 Jan 2024 11:12:04 -0600
Subject: [R-pkg-devel] test failure: oldrel
In-Reply-To: <CAL3ufULJYW-u8T9gr7n=1iAc5veqiEYP603RHGTAACOc+emGjA@mail.gmail.com>
References: <CAL3ufUJgCWZm0Kosxbt4Awha7Wag0EhUEc8bNp=PqCOGjYqyOA@mail.gmail.com>
 <26022.39369.364674.947370@rob.eddelbuettel.com>
 <CAL3ufULJYW-u8T9gr7n=1iAc5veqiEYP603RHGTAACOc+emGjA@mail.gmail.com>
Message-ID: <26022.47332.888136.397575@rob.eddelbuettel.com>


On 16 January 2024 at 10:28, Josiah Parry wrote:
| Oddly making the change has made CI happy.?
| https://github.com/R-ArcGIS/arcgisutils/actions/runs/7543315551/job/20534063601
| 
| It may be that the issue was OS related but I'm unsure since only oldrel for
| windows and macos check results are published?https://cran.r-project.org/web/
| checks/check_results_arcgisutils.html

Seb solved the puzzle (in direct email to me). It has to do with the fact
that _the container_ defaults to UTC.  If I add '-e TZ=America/Chicago' to
the invocation we do indeed see a difference between r-release and r-oldrel
(and I also brought the version string display inside R):

edd at rob:~$ for v in 4.3.2 4.2.2; do docker run --rm -ti -e TZ=America/Chicago r-base:${v} Rscript -e 'cat(format(getRversion()), format(as.POSIXct(Sys.Date(), tz = "UTC")), Sys.getenv("TZ"), "\n")'; done
4.3.2 2024-01-16 America/Chicago 
4.2.2 2024-01-15 18:00:00 America/Chicago 
edd at rob:~$ 

Thanks to Seb for the cluebat wave.

Dirk

| 
| 
| On Tue, Jan 16, 2024 at 9:59?AM Dirk Eddelbuettel <edd at debian.org> wrote:
| 
| 
|     Doesn't seem to be the case as it moderately easy to check (especially when
|     you happen to have local images of r-base around anyway):
| 
|     edd at rob:~$ for v in 4.3.2 4.2.2 4.1.3 4.0.5 3.6.3 3.5.3 3.4.4 3.3.3; do
|     echo -n "R ${v}: "; docker run --rm -ti r-base:${v} Rscript -e 'as.POSIXct
|     (Sys.Date(), tz = "UTC")'; done
|     R 4.3.2: [1] "2024-01-16 UTC"
|     R 4.2.2: [1] "2024-01-16 UTC"
|     R 4.1.3: [1] "2024-01-16 UTC"
|     R 4.0.5: [1] "2024-01-16 UTC"
|     R 3.6.3: [1] "2024-01-16 UTC"
|     R 3.5.3: [1] "2024-01-16 UTC"
|     R 3.4.4: [1] "2024-01-16 UTC"
|     R 3.3.3: [1] "2024-01-16 UTC"
|     edd at rob:~$
| 
|     Dirk
| 
|     --
|     dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
| 

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From jo@|@h@p@rry @end|ng |rom gm@||@com  Tue Jan 16 18:54:53 2024
From: jo@|@h@p@rry @end|ng |rom gm@||@com (Josiah Parry)
Date: Tue, 16 Jan 2024 12:54:53 -0500
Subject: [R-pkg-devel] test failure: oldrel
In-Reply-To: <26022.47332.888136.397575@rob.eddelbuettel.com>
References: <CAL3ufUJgCWZm0Kosxbt4Awha7Wag0EhUEc8bNp=PqCOGjYqyOA@mail.gmail.com>
 <26022.39369.364674.947370@rob.eddelbuettel.com>
 <CAL3ufULJYW-u8T9gr7n=1iAc5veqiEYP603RHGTAACOc+emGjA@mail.gmail.com>
 <26022.47332.888136.397575@rob.eddelbuettel.com>
Message-ID: <CAL3ufUJNZ-5mSqLMZZYbcBt6EO_vmzbtXx5a5-=vKQr1spp3Kw@mail.gmail.com>

Thanks for the update!
Ill be submitting a change in the coming days and will report back :)

On Tue, Jan 16, 2024 at 12:12 Dirk Eddelbuettel <edd at debian.org> wrote:

>
> On 16 January 2024 at 10:28, Josiah Parry wrote:
> | Oddly making the change has made CI happy.
> |
> https://github.com/R-ArcGIS/arcgisutils/actions/runs/7543315551/job/20534063601
> |
> | It may be that the issue was OS related but I'm unsure since only oldrel
> for
> | windows and macos check results are published
> https://cran.r-project.org/web/
> | checks/check_results_arcgisutils.html
>
> Seb solved the puzzle (in direct email to me). It has to do with the fact
> that _the container_ defaults to UTC.  If I add '-e TZ=America/Chicago' to
> the invocation we do indeed see a difference between r-release and r-oldrel
> (and I also brought the version string display inside R):
>
> edd at rob:~$ for v in 4.3.2 4.2.2; do docker run --rm -ti -e
> TZ=America/Chicago r-base:${v} Rscript -e 'cat(format(getRversion()),
> format(as.POSIXct(Sys.Date(), tz = "UTC")), Sys.getenv("TZ"), "\n")'; done
> 4.3.2 2024-01-16 America/Chicago
> 4.2.2 2024-01-15 18:00:00 America/Chicago
> edd at rob:~$
>
> Thanks to Seb for the cluebat wave.
>
> Dirk
>
> |
> |
> | On Tue, Jan 16, 2024 at 9:59?AM Dirk Eddelbuettel <edd at debian.org>
> wrote:
> |
> |
> |     Doesn't seem to be the case as it moderately easy to check
> (especially when
> |     you happen to have local images of r-base around anyway):
> |
> |     edd at rob:~$ for v in 4.3.2 4.2.2 4.1.3 4.0.5 3.6.3 3.5.3 3.4.4
> 3.3.3; do
> |     echo -n "R ${v}: "; docker run --rm -ti r-base:${v} Rscript -e
> 'as.POSIXct
> |     (Sys.Date(), tz = "UTC")'; done
> |     R 4.3.2: [1] "2024-01-16 UTC"
> |     R 4.2.2: [1] "2024-01-16 UTC"
> |     R 4.1.3: [1] "2024-01-16 UTC"
> |     R 4.0.5: [1] "2024-01-16 UTC"
> |     R 3.6.3: [1] "2024-01-16 UTC"
> |     R 3.5.3: [1] "2024-01-16 UTC"
> |     R 3.4.4: [1] "2024-01-16 UTC"
> |     R 3.3.3: [1] "2024-01-16 UTC"
> |     edd at rob:~$
> |
> |     Dirk
> |
> |     --
> |     dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
> |
>
> --
> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>

	[[alternative HTML version deleted]]


From @|mon@urb@nek @end|ng |rom R-project@org  Tue Jan 16 21:42:32 2024
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Wed, 17 Jan 2024 09:42:32 +1300
Subject: [R-pkg-devel] checking CRAN incoming feasibility
In-Reply-To: <20240116184901.3f33e87b@rolf-Latitude-E7470>
References: <20240116181522.42573cc6@rolf-Latitude-E7470>
 <CAJmOi+P3ba7YVChFxz8kvAY9tr8VBi_SE+spgTzBHpswaNkjeQ@mail.gmail.com>
 <20240116184901.3f33e87b@rolf-Latitude-E7470>
Message-ID: <4B696484-4CF7-4D16-9D07-A546603532FB@R-project.org>

Ralf,

that check always hangs for me (I don't think it likes NZ ;)), so I just use

_R_CHECK_CRAN_INCOMING_REMOTE_=0 R CMD check --as-cran ...

Cheers,
Simon


> On Jan 16, 2024, at 6:49 PM, Rolf Turner <rolfturner at posteo.net> wrote:
> 
> 
> On Tue, 16 Jan 2024 16:24:59 +1100
> Hugh Parsonage <hugh.parsonage at gmail.com> wrote:
> 
>>> Surely the software just has to check
>> that there is web connection to a CRAN mirror.
>> 
>> Nope! The full code is in tools:::.check_package_CRAN_incoming  (the
>> body of which filled up my entire console), but to name a few checks
>> it has to do: check that the name of the package is not the same as
>> any other, including archived packages (which means that it has to
>> download the package metadata), make sure the licence is ok, see if
>> the version number is ok. 10 minutes is quite a lot though. I suspect
>> the initial connection may have been faulty.
> 
> Well, it may not have been 10 minutes, but it was at least 5.  The
> problem is persistent/repeatable.  I don't believe that there is any
> faulty connection.
> 
> Thanks for the insight.
> 
> cheers,
> 
> Rolf Turner
> 
> -- 
> Honorary Research Fellow
> Department of Statistics
> University of Auckland
> Stats. Dep't. (secretaries) phone:
>         +64-9-373-7599 ext. 89622
> Home phone: +64-9-480-4619
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From edd @end|ng |rom deb|@n@org  Tue Jan 16 21:58:15 2024
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Tue, 16 Jan 2024 14:58:15 -0600
Subject: [R-pkg-devel] checking CRAN incoming feasibility
In-Reply-To: <4B696484-4CF7-4D16-9D07-A546603532FB@R-project.org>
References: <20240116181522.42573cc6@rolf-Latitude-E7470>
 <CAJmOi+P3ba7YVChFxz8kvAY9tr8VBi_SE+spgTzBHpswaNkjeQ@mail.gmail.com>
 <20240116184901.3f33e87b@rolf-Latitude-E7470>
 <4B696484-4CF7-4D16-9D07-A546603532FB@R-project.org>
Message-ID: <26022.60903.629455.352417@rob.eddelbuettel.com>


On 17 January 2024 at 09:42, Simon Urbanek wrote:
| that check always hangs for me (I don't think it likes NZ ;)), so I just use
| 
| _R_CHECK_CRAN_INCOMING_REMOTE_=0 R CMD check --as-cran ...

You can also set it in Renviron files consulted just for checks:

  $ grep INCOMING_= ~/.R/check.Renviron*
  /home/edd/.R/check.Renviron:_R_CHECK_CRAN_INCOMING_=FALSE
  /home/edd/.R/check.Renviron-Rdevel:_R_CHECK_CRAN_INCOMING_=TRUE
  $ 

Best, Dirk

| 
| Cheers,
| Simon
| 
| 
| > On Jan 16, 2024, at 6:49 PM, Rolf Turner <rolfturner at posteo.net> wrote:
| > 
| > 
| > On Tue, 16 Jan 2024 16:24:59 +1100
| > Hugh Parsonage <hugh.parsonage at gmail.com> wrote:
| > 
| >>> Surely the software just has to check
| >> that there is web connection to a CRAN mirror.
| >> 
| >> Nope! The full code is in tools:::.check_package_CRAN_incoming  (the
| >> body of which filled up my entire console), but to name a few checks
| >> it has to do: check that the name of the package is not the same as
| >> any other, including archived packages (which means that it has to
| >> download the package metadata), make sure the licence is ok, see if
| >> the version number is ok. 10 minutes is quite a lot though. I suspect
| >> the initial connection may have been faulty.
| > 
| > Well, it may not have been 10 minutes, but it was at least 5.  The
| > problem is persistent/repeatable.  I don't believe that there is any
| > faulty connection.
| > 
| > Thanks for the insight.
| > 
| > cheers,
| > 
| > Rolf Turner
| > 
| > -- 
| > Honorary Research Fellow
| > Department of Statistics
| > University of Auckland
| > Stats. Dep't. (secretaries) phone:
| >         +64-9-373-7599 ext. 89622
| > Home phone: +64-9-480-4619
| > 
| > ______________________________________________
| > R-package-devel at r-project.org mailing list
| > https://stat.ethz.ch/mailman/listinfo/r-package-devel
| >
| 
| ______________________________________________
| R-package-devel at r-project.org mailing list
| https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From @|mon@urb@nek @end|ng |rom R-project@org  Tue Jan 16 22:24:16 2024
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Wed, 17 Jan 2024 10:24:16 +1300
Subject: [R-pkg-devel] test failure: oldrel
In-Reply-To: <CAL3ufUJgCWZm0Kosxbt4Awha7Wag0EhUEc8bNp=PqCOGjYqyOA@mail.gmail.com>
References: <CAL3ufUJgCWZm0Kosxbt4Awha7Wag0EhUEc8bNp=PqCOGjYqyOA@mail.gmail.com>
Message-ID: <FF836548-B1B4-46EF-BF3E-6AB068554167@R-project.org>



> On Jan 17, 2024, at 3:46 AM, Josiah Parry <josiah.parry at gmail.com> wrote:
> 
> Hey folks! I've received note that a package of mine is failing tests on
> oldrel.
> 
> Check results:
> https://www.r-project.org/nosvn/R.check/r-oldrel-windows-x86_64/arcgisutils-00check.html
> 
> I think I've narrowed it down to the way that I've written the test which
> uses `as.POSIXct(Sys.Date(), tz = "UTC")`.
> 

That's not where it fails - it fails in

today <- Sys.Date()
today_ms <- date_to_ms(today)
as.POSIXct(today_ms / 1000)

which is equivalent to

as.POSIXct(as.numeric(Sys.Date()) * 86400)

and that is only supported since R 4.3.0 - from NEWS:

  as.POSIXct(<numeric>) and as.POSIXlt(.) (without specifying origin) now work.

so you have to add R >= 4.3.0 or use .POSIXct() instead.

I didn't check your other tests so you may have more of the same ...

Cheers,
Simon


> If I understand the R release changelog correctly, this behavior did not
> exist prior to R 4.3.0.
> 
> as.POSIXlt(<Date>) now does apply a tz (time zone) argument, as does
>> as.POSIXct(); partly suggested by Roland Fu? on the R-devel mailing list.
> 
> 
> https://cran.r-project.org/doc/manuals/r-release/NEWS.html
> 
> Does this check out? If so, would be more effective to modify the test to
> use a the character method of `as.POSIXct()`?
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 


From ro||turner @end|ng |rom po@teo@net  Tue Jan 16 23:13:22 2024
From: ro||turner @end|ng |rom po@teo@net (Rolf Turner)
Date: Tue, 16 Jan 2024 22:13:22 +0000
Subject: [R-pkg-devel] Warning when the --as-cran flag is used,
 not otherwise.
Message-ID: <20240117111322.1033ed0b@rolf-Latitude-E7470>


In a package that I am updating, I have a data documentation file
monoCyteSim.Rd.  In this file, two data sets are documented: bivarSim
and ccSim.  The usage section is;

> \usage{
>     bivarSim
>     ccSim
> }

Since the data are lazy-loaded I *don't* wrap the names of the data
sets in "data()".

I do this in another data documentation file (SydColDat.Rd) without
problem. However when I check the package using --as-cran I get a
warning:

> * checking for code/documentation mismatches ... WARNING
> Variables with usage in documentation object 'monoCyteSim' but not in
> code: ?bivarSim? ?ccSim?

No such warning seems to arise in respect of SydColDat.Rd.

Can anyone explain what is going on, and what if anything I can do
about it?  I would be grateful for any insight.

I have attached the two help files, the one that triggers the
warning and the one that doesn't.  I have changed the extension from
.Rd to .txt so that (I hope!) the mailer doesn't strip them away.

The complete package, as it currently stands (if this is of any
interest), is available from my web page:

    https://www.stat.auckland.ac.nz/~rolf/

Scroll to near the bottom and click on "Eglhmm".

Thanks.

cheers,

Rolf Turner

-- 
Honorary Research Fellow
Department of Statistics
University of Auckland
Stats. Dep't. (secretaries) phone:
         +64-9-373-7599 ext. 89622
Home phone: +64-9-480-4619

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: monoCyteSim.txt
URL: <https://stat.ethz.ch/pipermail/r-package-devel/attachments/20240116/62eb780c/attachment.txt>

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: SydColDat.txt
URL: <https://stat.ethz.ch/pipermail/r-package-devel/attachments/20240116/62eb780c/attachment-0001.txt>

From @eb@meyer @end|ng |rom |@u@de  Tue Jan 16 23:53:15 2024
From: @eb@meyer @end|ng |rom |@u@de (Sebastian Meyer)
Date: Tue, 16 Jan 2024 23:53:15 +0100
Subject: [R-pkg-devel] Warning when the --as-cran flag is used,
 not otherwise.
In-Reply-To: <20240117111322.1033ed0b@rolf-Latitude-E7470>
References: <20240117111322.1033ed0b@rolf-Latitude-E7470>
Message-ID: <653EEC64-5568-4971-AC8D-067B79309ACD@fau.de>

There is a note on your help page that says

These data are **not** immediately available in the `eglhmm` package.

which seems to be in line with the check warning.

Best wishes,
Sebastian Meyer

Am 16. Januar 2024 23:13:22 MEZ schrieb Rolf Turner <rolfturner at posteo.net>:
>
>In a package that I am updating, I have a data documentation file
>monoCyteSim.Rd.  In this file, two data sets are documented: bivarSim
>and ccSim.  The usage section is;
>
>> \usage{
>>     bivarSim
>>     ccSim
>> }
>
>Since the data are lazy-loaded I *don't* wrap the names of the data
>sets in "data()".
>
>I do this in another data documentation file (SydColDat.Rd) without
>problem. However when I check the package using --as-cran I get a
>warning:
>
>> * checking for code/documentation mismatches ... WARNING
>> Variables with usage in documentation object 'monoCyteSim' but not in
>> code: ?bivarSim? ?ccSim?
>
>No such warning seems to arise in respect of SydColDat.Rd.
>
>Can anyone explain what is going on, and what if anything I can do
>about it?  I would be grateful for any insight.
>
>I have attached the two help files, the one that triggers the
>warning and the one that doesn't.  I have changed the extension from
>.Rd to .txt so that (I hope!) the mailer doesn't strip them away.
>
>The complete package, as it currently stands (if this is of any
>interest), is available from my web page:
>
>    https://www.stat.auckland.ac.nz/~rolf/
>
>Scroll to near the bottom and click on "Eglhmm".
>
>Thanks.
>
>cheers,
>
>Rolf Turner
>


From hugh@p@r@on@ge @end|ng |rom gm@||@com  Wed Jan 17 00:30:36 2024
From: hugh@p@r@on@ge @end|ng |rom gm@||@com (Hugh Parsonage)
Date: Wed, 17 Jan 2024 10:30:36 +1100
Subject: [R-pkg-devel] Additional Issues: Intel
Message-ID: <CAJmOi+PRCxcqL=RM_pHDnLMpHvNLP=xp9KOPgtER25C_eccXdQ@mail.gmail.com>

My package grattan fails the Intel[1] check with

  Error: segfault from C stack overflow

I am unable to immediately see where in the test suite this error has
occurred.  I seek advice on how to fix this error.  The only hunch I
have is that the package uses C code and includes structs with arrays
on the stack, which perhaps are excessive for the Intel check machine,
but am far from confident that's the issue.  The repository is at
<https://github.com/HughParsonage/grattan/>

[1]https://www.stats.ox.ac.uk/pub/bdr/Intel/grattan.out


From @teve@the@b@ye@|@n @end|ng |rom gm@||@com  Wed Jan 17 00:54:10 2024
From: @teve@the@b@ye@|@n @end|ng |rom gm@||@com (Steven Scott)
Date: Tue, 16 Jan 2024 15:54:10 -0800
Subject: [R-pkg-devel] current docker image for ASAN
Message-ID: <CAJqTW45g8KevjJ77CW0MX81vBxrw5hHOxTy6T-FX82TnRaZ2oQ@mail.gmail.com>

Greetings everyone, though I expect this message is mainly for Dirk.

CRAN checks of my bsts/Boom package generate an ASAN error that the CRAN
maintainers have asked me to look into.  I recall doing this before (this
error has been there for several years now) via a docker image that Dirk
had set up.  I have two questions.

1) Which docker image should I use?  I imagine it has been updated since
the last time I tried.
2) Is the image built with an asan-appropriate libc++?  I'm asking because
the last time I tried tracking down this error, ASAN identified that there
was an error, but pointed to an irrelevant section of code.  Brian thinks
libc++ is the culprit.

	[[alternative HTML version deleted]]


From edd @end|ng |rom deb|@n@org  Wed Jan 17 01:18:14 2024
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Tue, 16 Jan 2024 18:18:14 -0600
Subject: [R-pkg-devel] current docker image for ASAN
In-Reply-To: <CAJqTW45g8KevjJ77CW0MX81vBxrw5hHOxTy6T-FX82TnRaZ2oQ@mail.gmail.com>
References: <CAJqTW45g8KevjJ77CW0MX81vBxrw5hHOxTy6T-FX82TnRaZ2oQ@mail.gmail.com>
Message-ID: <26023.7366.705344.886467@rob.eddelbuettel.com>


On 16 January 2024 at 15:54, Steven Scott wrote:
| Greetings everyone, though I expect this message is mainly for Dirk.
| 
| CRAN checks of my bsts/Boom package generate an ASAN error that the CRAN
| maintainers have asked me to look into.  I recall doing this before (this
| error has been there for several years now) via a docker image that Dirk
| had set up.  I have two questions.
| 
| 1) Which docker image should I use?  I imagine it has been updated since
| the last time I tried.
| 2) Is the image built with an asan-appropriate libc++?  I'm asking because
| the last time I tried tracking down this error, ASAN identified that there
| was an error, but pointed to an irrelevant section of code.  Brian thinks
| libc++ is the culprit.

Thanks -- maybe see prior messages. The container is on a scheduled weekly
rebuild, but for reasons that long escape me I also switched at some point to
relying on the 'sumo' container Winston builds by collating several such
containers and have used this myself for several debugging trips:

   https://github.com/wch/r-debug

You want RDsan and/or RDcsan therein.

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From vo|ody@ @end|ng |rom m|nd@pr|ng@com  Wed Jan 17 04:24:55 2024
From: vo|ody@ @end|ng |rom m|nd@pr|ng@com (Vladimir Dergachev)
Date: Tue, 16 Jan 2024 22:24:55 -0500 (EST)
Subject: [R-pkg-devel] Additional Issues: Intel
In-Reply-To: <CAJmOi+PRCxcqL=RM_pHDnLMpHvNLP=xp9KOPgtER25C_eccXdQ@mail.gmail.com>
References: <CAJmOi+PRCxcqL=RM_pHDnLMpHvNLP=xp9KOPgtER25C_eccXdQ@mail.gmail.com>
Message-ID: <alpine.DEB.2.22.394.2401162218570.3559@iridium>



On Wed, 17 Jan 2024, Hugh Parsonage wrote:

> My package grattan fails the Intel[1] check with
>
>  Error: segfault from C stack overflow
>
> I am unable to immediately see where in the test suite this error has
> occurred.  I seek advice on how to fix this error.  The only hunch I
> have is that the package uses C code and includes structs with arrays
> on the stack, which perhaps are excessive for the Intel check machine,
> but am far from confident that's the issue.  The repository is at
> <https://github.com/HughParsonage/grattan/>

Two possibilities to look into:

    * your structures on the stack are large. Don't do this ! Your code 
might run faster and would be easier to debug if you use regular memory 
allocation instead. Since R does fair number of memory allocation calls 
itself, the extra overhead from your calls will not be that noticeable.

    * your stuctures are small, but you have a recursive function that is 
called too often. In this case, the solution is to reimplement the 
recurrence without doing function calls (using a loop, for example). Some 
recurrences can be implemented without using any accumulating state. 
Others need it and you can use heap memory for that.

best

Vladimir Dergachev

>
> [1]https://www.stats.ox.ac.uk/pub/bdr/Intel/grattan.out
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From ro||turner @end|ng |rom po@teo@net  Wed Jan 17 07:39:03 2024
From: ro||turner @end|ng |rom po@teo@net (Rolf Turner)
Date: Wed, 17 Jan 2024 06:39:03 +0000
Subject: [R-pkg-devel] Warning when the --as-cran flag is used,
 not otherwise.
In-Reply-To: <653EEC64-5568-4971-AC8D-067B79309ACD@fau.de>
References: <20240117111322.1033ed0b@rolf-Latitude-E7470>
 <653EEC64-5568-4971-AC8D-067B79309ACD@fau.de>
Message-ID: <20240117193903.1550f669@rolf-Latitude-E7470>


On Tue, 16 Jan 2024 23:53:15 +0100
Sebastian Meyer <seb.meyer at fau.de> wrote:

> There is a note on your help page that says
> 
> These data are **not** immediately available in the `eglhmm` package.
> 
> which seems to be in line with the check warning.

OK.  Thanks.  Now that you have pointed this out, it's all too obvious.
The user is invited to install the monoCyteSim package (from a specified
github repository).  After the user has done so, then the data sets
bivarSim and ccSim are available in the usual way.

When I ran R CMD check without the --as-cran flag, there was no problem
because I had already installed the monoCyteSim package on my local
computer.  *With* that flag, R CMD check carries on as if it were
looking at the eghlmm package in the context of running on a CRAN
server.  This server would *not* have the monoCyteSim package
installed, whence it would not be able to find the data sets bivarSim
and ccCM, whence the warning.  Makes perfect sense now.

It turns out I can make the warning go away by removing the lines

\usage{
    bivarSim
    ccSim
}

They serve no useful purpose and are not required.

Thanks again.

cheers,

Rolf Turner

-- 
Honorary Research Fellow
Department of Statistics
University of Auckland
Stats. Dep't. (secretaries) phone:
         +64-9-373-7599 ext. 89622
Home phone: +64-9-480-4619


From dw|n@em|u@ @end|ng |rom comc@@t@net  Wed Jan 17 08:19:54 2024
From: dw|n@em|u@ @end|ng |rom comc@@t@net (David Winsemius)
Date: Tue, 16 Jan 2024 23:19:54 -0800
Subject: [R-pkg-devel] Warning when the --as-cran flag is used,
 not otherwise.
In-Reply-To: <20240117193903.1550f669@rolf-Latitude-E7470>
References: <20240117111322.1033ed0b@rolf-Latitude-E7470>
 <653EEC64-5568-4971-AC8D-067B79309ACD@fau.de>
 <20240117193903.1550f669@rolf-Latitude-E7470>
Message-ID: <b492cfb0-dea5-70c5-6acc-371c919e8ccb@comcast.net>

Speaking as a potential user of such a package, I wonder if that 
information could be put in a help page for the entire package? I've 
seen several packages that do such a "global" overview. I realize there 
might be a Suggests: entry in the DESCRIPTION file but not everyone 
knows how to find it and even those who do might first try for a help 
page if it was in the Index.

On 1/16/24 22:39, Rolf Turner wrote:
> On Tue, 16 Jan 2024 23:53:15 +0100
> Sebastian Meyer <seb.meyer at fau.de> wrote:
>
>> There is a note on your help page that says
>>
>> These data are **not** immediately available in the `eglhmm` package.
>>
>> which seems to be in line with the check warning.
> OK.  Thanks.  Now that you have pointed this out, it's all too obvious.
> The user is invited to install the monoCyteSim package (from a specified
> github repository).  After the user has done so, then the data sets
> bivarSim and ccSim are available in the usual way.
>
> When I ran R CMD check without the --as-cran flag, there was no problem
> because I had already installed the monoCyteSim package on my local
> computer.  *With* that flag, R CMD check carries on as if it were
> looking at the eghlmm package in the context of running on a CRAN
> server.  This server would *not* have the monoCyteSim package
> installed, whence it would not be able to find the data sets bivarSim
> and ccCM, whence the warning.  Makes perfect sense now.
>
> It turns out I can make the warning go away by removing the lines
>
> \usage{
>      bivarSim
>      ccSim
> }
>
> They serve no useful purpose and are not required.
>
> Thanks again.
>
> cheers,
>
> Rolf Turner
>


From @@meh@@bdu|@h @end|ng |rom k@u@t@edu@@@  Wed Jan 17 08:37:20 2024
From: @@meh@@bdu|@h @end|ng |rom k@u@t@edu@@@ (Sameh Abdulah)
Date: Wed, 17 Jan 2024 07:37:20 +0000
Subject: [R-pkg-devel] CMake on CRAN Systems
In-Reply-To: <20240116180420.43895dee@arachnoid>
References: <20240116181522.42573cc6@rolf-Latitude-E7470>
 <CAJmOi+P3ba7YVChFxz8kvAY9tr8VBi_SE+spgTzBHpswaNkjeQ@mail.gmail.com>
 <CAARY7ki=8w7+5wySY6evjjao+uShJD1AsokDioX+cfYaui6FTg@mail.gmail.com>
 <20240116180420.43895dee@arachnoid>
Message-ID: <VI1P192MB02855048046590780FE1BB3BFB722@VI1P192MB0285.EURP192.PROD.OUTLOOK.COM>

Hi All,

We recently encountered an installation issue with our package on CRAN. We've been depending on CMake, assuming it is readily available by default, but it appears to be only available on the M1mac system but not on the others. Should we include the CMake installation within our package?

We encountered another issue with OpenMP, but we managed to resolve it by consulting the manual.

https://urldefense.com/v3/__https://cran-archive.r-project.org/web/checks/2024/2024-01-12_check_results_MPCR.html__;!!Nmw4Hv0!1cg5mCeLOB9fBslqbEGB1S0_MEcOLMjk6m4hpfWDyXErAlWtm82xz9ZUU3aQ3q6jkXZBM2tNhUp3EI3JmigE4EvCLlrC$<https://urldefense.com/v3/__https:/cran-archive.r-project.org/web/checks/2024/2024-01-12_check_results_MPCR.html__;!!Nmw4Hv0!1cg5mCeLOB9fBslqbEGB1S0_MEcOLMjk6m4hpfWDyXErAlWtm82xz9ZUU3aQ3q6jkXZBM2tNhUp3EI3JmigE4EvCLlrC$>



Best,
--Sameh

-- 

This message and its contents, including attachments are intended solely 
for the original recipient. If you are not the intended recipient or have 
received this message in error, please notify me immediately and delete 
this message from your computer system. Any unauthorized use or 
distribution is prohibited. Please consider the environment before printing 
this email.

	[[alternative HTML version deleted]]


From |kry|ov @end|ng |rom d|@root@org  Wed Jan 17 08:54:13 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Wed, 17 Jan 2024 10:54:13 +0300
Subject: [R-pkg-devel] CMake on CRAN Systems
Message-ID: <20240117105413.4b87e347@Tarkus>

Dear Sameh,

Regarding your question about the MPCR package and the use of CMake
<https://cran-archive.r-project.org/web/checks/2024/2024-01-12_check_results_MPCR.html>:
on a Mac, you have to look for the cmake executable in more than one
place because it is not guaranteed to be on the $PATH. As described in
Writing R Extensions
<https://cran.r-project.org/doc/manuals/R-exts.html#Using-cmake>, the
following is one way to work around the problem:

if test -z "$CMAKE"; then CMAKE="`which cmake`"; fi
if test -z "$CMAKE"; then
 CMAKE=/Applications/CMake.app/Contents/bin/cmake;
fi
if test -f "$CMAKE"; then echo "no ?cmake? command found"; exit 1; fi

Please don't reply to existing threads when starting a new topic on
mailing lists. Your message had a mangled link that went to
urldefense.com instead of cran-archive.r-project.org, letting Amazon
(who host the website) know about every visit to the link:
https://stat.ethz.ch/pipermail/r-package-devel/2024q1/010328.html

-- 
Best regards,
Ivan


From m@tth|@@-gond@n @end|ng |rom gmx@de  Wed Jan 17 08:59:56 2024
From: m@tth|@@-gond@n @end|ng |rom gmx@de (Matthias Gondan)
Date: Wed, 17 Jan 2024 08:59:56 +0100
Subject: [R-pkg-devel] CMake on CRAN Systems
In-Reply-To: <VI1P192MB02855048046590780FE1BB3BFB722@VI1P192MB0285.EURP192.PROD.OUTLOOK.COM>
References: <20240116181522.42573cc6@rolf-Latitude-E7470>
 <CAJmOi+P3ba7YVChFxz8kvAY9tr8VBi_SE+spgTzBHpswaNkjeQ@mail.gmail.com>
 <CAARY7ki=8w7+5wySY6evjjao+uShJD1AsokDioX+cfYaui6FTg@mail.gmail.com>
 <20240116180420.43895dee@arachnoid>
 <VI1P192MB02855048046590780FE1BB3BFB722@VI1P192MB0285.EURP192.PROD.OUTLOOK.COM>
Message-ID: <trinity-8da34806-e9ec-45a6-9efb-ba607ce24087-1705478396401@msvc-mesg-gmx101>

For package rswipl, cmake still seems to work, but

* one has to search for it on MacOS, see the src/Makevars, as well as the relevant sections in Writing R extensions
* Windows Defender (also on CRAN) complains about dubious exe-files when checking the "endianness" of the target system. That can be circumvented by telling cmake to compile static libraries instead of executables.

I am unsure if my response is specific to your problem, but the links below do not seem to work.

> Gesendet: Mittwoch, den 17.01.2024 um 08:37 Uhr
> Von: "Sameh Abdulah" <sameh.abdulah at kaust.edu.sa>
> An: "R Package Development" <r-package-devel at r-project.org>
> Betreff: [R-pkg-devel] CMake on CRAN Systems
>
> Hi All,
>
> We recently encountered an installation issue with our package on CRAN. We've been depending on CMake, assuming it is readily available by default, but it appears to be only available on the M1mac system but not on the others. Should we include the CMake installation within our package?
>
> We encountered another issue with OpenMP, but we managed to resolve it by consulting the manual.
>
> https://urldefense.com/v3/__https://cran-archive.r-project.org/web/checks/2024/2024-01-12_check_results_MPCR.html__;!!Nmw4Hv0!1cg5mCeLOB9fBslqbEGB1S0_MEcOLMjk6m4hpfWDyXErAlWtm82xz9ZUU3aQ3q6jkXZBM2tNhUp3EI3JmigE4EvCLlrC$<https://urldefense.com/v3/__https:/cran-archive.r-project.org/web/checks/2024/2024-01-12_check_results_MPCR.html__;!!Nmw4Hv0!1cg5mCeLOB9fBslqbEGB1S0_MEcOLMjk6m4hpfWDyXErAlWtm82xz9ZUU3aQ3q6jkXZBM2tNhUp3EI3JmigE4EvCLlrC$>
>
>
>
> Best,
> --Sameh
>
> --
>
> This message and its contents, including attachments are intended solely
> for the original recipient. If you are not the intended recipient or have
> received this message in error, please notify me immediately and delete
> this message from your computer system. Any unauthorized use or
> distribution is prohibited. Please consider the environment before printing
> this email.
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From |kry|ov @end|ng |rom d|@root@org  Wed Jan 17 09:41:08 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Wed, 17 Jan 2024 11:41:08 +0300
Subject: [R-pkg-devel] Additional Issues: Intel
In-Reply-To: <CAJmOi+PRCxcqL=RM_pHDnLMpHvNLP=xp9KOPgtER25C_eccXdQ@mail.gmail.com>
References: <CAJmOi+PRCxcqL=RM_pHDnLMpHvNLP=xp9KOPgtER25C_eccXdQ@mail.gmail.com>
Message-ID: <20240117114108.7251bbe9@Tarkus>

? Wed, 17 Jan 2024 10:30:36 +1100
Hugh Parsonage <hugh.parsonage at gmail.com> ?????:

> I am unable to immediately see where in the test suite this error has
> occurred.

Without testthat, you would have gotten a line by line printout of the code, letting you pinpoint the (top-level) place of the crash. With
testthat, you will need a more verbose reporter that would print tests
as they are executed to find out which test causes the crash.

> The only hunch I have is that the package uses C code and includes
> structs with arrays on the stack, which perhaps are excessive for the
> Intel check machine, but am far from confident that's the issue.

According to GNU cflow, your only recursive C functions are
getListElement (from getListElement.c) and nthOffset (from Offset.c),
but the recursion seems bounded in both cases.

I've tried looking for variable-length arrays in your code using a
Coccinelle patch, but found none. If you had variable-bounded recursion
or variable-length stack arrays (VLA or alloca()), it would be prudent
to use R_CheckStack() or R_CheckStack2(size_of_VLA), but your C code
contains neither, so there's no obvious culprit. If you know about
R-level recursion happening in your code and have a way to reduce it,
that might help too.

Otherwise, it's time to install Intel Everything and reproduce and
debug the problem the hard way.

-- 
Best regards,
Ivan


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Wed Jan 17 09:52:14 2024
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Wed, 17 Jan 2024 09:52:14 +0100
Subject: [R-pkg-devel] Additional Issues: Intel
In-Reply-To: <20240117114108.7251bbe9@Tarkus>
References: <CAJmOi+PRCxcqL=RM_pHDnLMpHvNLP=xp9KOPgtER25C_eccXdQ@mail.gmail.com>
 <20240117114108.7251bbe9@Tarkus>
Message-ID: <a8a532f6-fa84-4a9d-a0a3-8cc18d4a98ad@gmail.com>


On 1/17/24 09:41, Ivan Krylov via R-package-devel wrote:
> ? Wed, 17 Jan 2024 10:30:36 +1100
> Hugh Parsonage <hugh.parsonage at gmail.com> ?????:
>
>> I am unable to immediately see where in the test suite this error has
>> occurred.
> Without testthat, you would have gotten a line by line printout of the code, letting you pinpoint the (top-level) place of the crash. With
> testthat, you will need a more verbose reporter that would print tests
> as they are executed to find out which test causes the crash.
>
>> The only hunch I have is that the package uses C code and includes
>> structs with arrays on the stack, which perhaps are excessive for the
>> Intel check machine, but am far from confident that's the issue.
> According to GNU cflow, your only recursive C functions are
> getListElement (from getListElement.c) and nthOffset (from Offset.c),
> but the recursion seems bounded in both cases.
>
> I've tried looking for variable-length arrays in your code using a
> Coccinelle patch, but found none. If you had variable-bounded recursion
> or variable-length stack arrays (VLA or alloca()), it would be prudent
> to use R_CheckStack() or R_CheckStack2(size_of_VLA), but your C code
> contains neither, so there's no obvious culprit. If you know about
> R-level recursion happening in your code and have a way to reduce it,
> that might help too.
>
> Otherwise, it's time to install Intel Everything and reproduce and
> debug the problem the hard way.

You could also try debugging using your toolchain, but with reduced 
stack size (e.g. ulimit -s). If you can make the error appear with a 
smaller but still reasonable stack size, chances are it is due to the 
same underlying problem.

Tomas

>


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Wed Jan 17 11:25:13 2024
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Wed, 17 Jan 2024 11:25:13 +0100
Subject: [R-pkg-devel] CMake on CRAN Systems
In-Reply-To: <VI1P192MB02855048046590780FE1BB3BFB722@VI1P192MB0285.EURP192.PROD.OUTLOOK.COM>
References: <20240116181522.42573cc6@rolf-Latitude-E7470>
 <CAJmOi+P3ba7YVChFxz8kvAY9tr8VBi_SE+spgTzBHpswaNkjeQ@mail.gmail.com>
 <CAARY7ki=8w7+5wySY6evjjao+uShJD1AsokDioX+cfYaui6FTg@mail.gmail.com>
 <20240116180420.43895dee@arachnoid>
 <VI1P192MB02855048046590780FE1BB3BFB722@VI1P192MB0285.EURP192.PROD.OUTLOOK.COM>
Message-ID: <d0ac887d-c2d9-44e3-a9dc-a38fbf52b1f6@gmail.com>


On 1/17/24 08:37, Sameh Abdulah wrote:
> Hi All,
>
> We recently encountered an installation issue with our package on CRAN. We've been depending on CMake, assuming it is readily available by default, but it appears to be only available on the M1mac system but not on the others. Should we include the CMake installation within our package?

Re Windows, see the documentation:

https://cran.r-project.org/bin/windows/base/howto-R-devel.html
https://cran.r-project.org/bin/windows/base/howto-R-4.3.html

cmake executable is available. But another issue is how well maintained 
are the cmake configuration files to find the software, etc.

You have most control when you specify the libraries for linking 
explicitly by yourself (and use just make/Makevars files), even though 
this can sometimes require manual changes for newer versions of Rtools 
(some libraries change linking often, most don't). This is the common 
way to do it (see the documentation).

You can also use pkg-config with the latest Rtools, and pkg-config is 
used internally by MXE, which provides some testing, and I've manually 
fixed a number of issues not detected by that testing. The advantage of 
pkg-config is that you don't have to specify the libraries yourself and 
it should reduce the need for updating your Makevars on Rtools updates. 
At the same time, it is much more likely to work than cmake, yet you 
could still easily run to issues, typically some dependency omitted.

I would not use cmake for an R package on Windows.

Tomas

>
> We encountered another issue with OpenMP, but we managed to resolve it by consulting the manual.
>
> https://urldefense.com/v3/__https://cran-archive.r-project.org/web/checks/2024/2024-01-12_check_results_MPCR.html__;!!Nmw4Hv0!1cg5mCeLOB9fBslqbEGB1S0_MEcOLMjk6m4hpfWDyXErAlWtm82xz9ZUU3aQ3q6jkXZBM2tNhUp3EI3JmigE4EvCLlrC$<https://urldefense.com/v3/__https:/cran-archive.r-project.org/web/checks/2024/2024-01-12_check_results_MPCR.html__;!!Nmw4Hv0!1cg5mCeLOB9fBslqbEGB1S0_MEcOLMjk6m4hpfWDyXErAlWtm82xz9ZUU3aQ3q6jkXZBM2tNhUp3EI3JmigE4EvCLlrC$>
>
>
>
> Best,
> --Sameh
>


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Wed Jan 17 16:52:40 2024
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Wed, 17 Jan 2024 16:52:40 +0100
Subject: [R-pkg-devel] CMake on CRAN Systems
In-Reply-To: <trinity-8da34806-e9ec-45a6-9efb-ba607ce24087-1705478396401@msvc-mesg-gmx101>
References: <20240116181522.42573cc6@rolf-Latitude-E7470>
 <CAJmOi+P3ba7YVChFxz8kvAY9tr8VBi_SE+spgTzBHpswaNkjeQ@mail.gmail.com>
 <CAARY7ki=8w7+5wySY6evjjao+uShJD1AsokDioX+cfYaui6FTg@mail.gmail.com>
 <20240116180420.43895dee@arachnoid>
 <VI1P192MB02855048046590780FE1BB3BFB722@VI1P192MB0285.EURP192.PROD.OUTLOOK.COM>
 <trinity-8da34806-e9ec-45a6-9efb-ba607ce24087-1705478396401@msvc-mesg-gmx101>
Message-ID: <0205afd5-ad1f-46d4-a04a-5e613c850b87@statistik.tu-dortmund.de>



On 17.01.2024 08:59, Matthias Gondan wrote:
> For package rswipl, cmake still seems to work, but
> 
> * one has to search for it on MacOS, see the src/Makevars, as well as the relevant sections in Writing R extensions
> * Windows Defender (also on CRAN) complains about dubious exe-files when checking the "endianness" of the target system. That can be circumvented by telling cmake to compile static libraries instead of executables.

Indeed, currently Windows Defender gives false positives for some 
temprary .exe files that CMake creates. As thge filenames and locations 
are random, there is no straightforward way to tell the defender about 
exceptions. Hence please follow the advice and  tell cmake to compile 
static libraries instead of executables (an excellent idea, thanks!). 
[Microsoft knows about this for several weeks now without action.]

Best,
Uwe Ligges



> 
> I am unsure if my response is specific to your problem, but the links below do not seem to work.
> 
>> Gesendet: Mittwoch, den 17.01.2024 um 08:37 Uhr
>> Von: "Sameh Abdulah" <sameh.abdulah at kaust.edu.sa>
>> An: "R Package Development" <r-package-devel at r-project.org>
>> Betreff: [R-pkg-devel] CMake on CRAN Systems
>>
>> Hi All,
>>
>> We recently encountered an installation issue with our package on CRAN. We've been depending on CMake, assuming it is readily available by default, but it appears to be only available on the M1mac system but not on the others. Should we include the CMake installation within our package?
>>
>> We encountered another issue with OpenMP, but we managed to resolve it by consulting the manual.
>>
>> https://urldefense.com/v3/__https://cran-archive.r-project.org/web/checks/2024/2024-01-12_check_results_MPCR.html__;!!Nmw4Hv0!1cg5mCeLOB9fBslqbEGB1S0_MEcOLMjk6m4hpfWDyXErAlWtm82xz9ZUU3aQ3q6jkXZBM2tNhUp3EI3JmigE4EvCLlrC$<https://urldefense.com/v3/__https:/cran-archive.r-project.org/web/checks/2024/2024-01-12_check_results_MPCR.html__;!!Nmw4Hv0!1cg5mCeLOB9fBslqbEGB1S0_MEcOLMjk6m4hpfWDyXErAlWtm82xz9ZUU3aQ3q6jkXZBM2tNhUp3EI3JmigE4EvCLlrC$>
>>
>>
>>
>> Best,
>> --Sameh
>>
>> --
>>
>> This message and its contents, including attachments are intended solely
>> for the original recipient. If you are not the intended recipient or have
>> received this message in error, please notify me immediately and delete
>> this message from your computer system. Any unauthorized use or
>> distribution is prohibited. Please consider the environment before printing
>> this email.
>>
>> 	[[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

From m@tth|@@-gond@n @end|ng |rom gmx@de  Wed Jan 17 17:04:20 2024
From: m@tth|@@-gond@n @end|ng |rom gmx@de (Matthias Gondan)
Date: Wed, 17 Jan 2024 17:04:20 +0100
Subject: [R-pkg-devel] CMake on CRAN Systems
In-Reply-To: <0205afd5-ad1f-46d4-a04a-5e613c850b87@statistik.tu-dortmund.de>
References: <20240116181522.42573cc6@rolf-Latitude-E7470>
 <CAJmOi+P3ba7YVChFxz8kvAY9tr8VBi_SE+spgTzBHpswaNkjeQ@mail.gmail.com>
 <CAARY7ki=8w7+5wySY6evjjao+uShJD1AsokDioX+cfYaui6FTg@mail.gmail.com>
 <20240116180420.43895dee@arachnoid>
 <VI1P192MB02855048046590780FE1BB3BFB722@VI1P192MB0285.EURP192.PROD.OUTLOOK.COM>
 <trinity-8da34806-e9ec-45a6-9efb-ba607ce24087-1705478396401@msvc-mesg-gmx101>
 <0205afd5-ad1f-46d4-a04a-5e613c850b87@statistik.tu-dortmund.de>
Message-ID: <trinity-10f9a467-23ed-4821-b4e3-690ffded9f54-1705507460186@3c-app-gmx-bap38>

Here's an example. It first checks if CMAKE_C_BYTE_ORDER is defined, which is available in recent versions of cmake. If it isn't, cmake's own macro TestBigEndian is invoked (deprecated, but still available). It would normally compile an executable, but we change the compile target to a static library (the test for endianness works anyway).

if(DEFINED CMAKE_C_BYTE_ORDER)
  if(CMAKE_C_BYTE_ORDER STREQUAL "BIG_ENDIAN")
    set(WORDS_BIGENDIAN 1)
  else()
    set(WORDS_BIGENDIAN 0)
  endif()
else()
  # From cmake docs: If CMAKE_OSX_ARCHITECTURES specifies multiple architectures, the value
  # of CMAKE_<LANG>_BYTE_ORDER is non-empty only if all architectures share the same byte
  # order.
  include(TestBigEndian)
  SET(CMAKE_TRY_COMPILE_TARGET_TYPE_SAVE ${CMAKE_TRY_COMPILE_TARGET_TYPE})
  SET(CMAKE_TRY_COMPILE_TARGET_TYPE STATIC_LIBRARY)
  TEST_BIG_ENDIAN(WORDS_BIGENDIAN)
  SET(CMAKE_TRY_COMPILE_TARGET_TYPE ${CMAKE_TRY_COMPILE_TARGET_TYPE_SAVE})
endif()



> Gesendet: Mittwoch, 17. Januar 2024 um 16:52 Uhr
> Von: "Uwe Ligges" <ligges at statistik.tu-dortmund.de>
> An: "Matthias Gondan" <matthias-gondan at gmx.de>, "Sameh Abdulah" <sameh.abdulah at kaust.edu.sa>
> Cc: "R Package Development" <r-package-devel at r-project.org>
> Betreff: Re: [R-pkg-devel] CMake on CRAN Systems
>
>
>
> On 17.01.2024 08:59, Matthias Gondan wrote:
> > For package rswipl, cmake still seems to work, but
> >
> > * one has to search for it on MacOS, see the src/Makevars, as well as the relevant sections in Writing R extensions
> > * Windows Defender (also on CRAN) complains about dubious exe-files when checking the "endianness" of the target system. That can be circumvented by telling cmake to compile static libraries instead of executables.
>
> Indeed, currently Windows Defender gives false positives for some
> temprary .exe files that CMake creates. As thge filenames and locations
> are random, there is no straightforward way to tell the defender about
> exceptions. Hence please follow the advice and  tell cmake to compile
> static libraries instead of executables (an excellent idea, thanks!).
> [Microsoft knows about this for several weeks now without action.]
>
> Best,
> Uwe Ligges
>
>
>
> >
> > I am unsure if my response is specific to your problem, but the links below do not seem to work.
> >
> >> Gesendet: Mittwoch, den 17.01.2024 um 08:37 Uhr
> >> Von: "Sameh Abdulah" <sameh.abdulah at kaust.edu.sa>
> >> An: "R Package Development" <r-package-devel at r-project.org>
> >> Betreff: [R-pkg-devel] CMake on CRAN Systems
> >>
> >> Hi All,
> >>
> >> We recently encountered an installation issue with our package on CRAN. We've been depending on CMake, assuming it is readily available by default, but it appears to be only available on the M1mac system but not on the others. Should we include the CMake installation within our package?
> >>
> >> We encountered another issue with OpenMP, but we managed to resolve it by consulting the manual.
> >>
> >> https://urldefense.com/v3/__https://cran-archive.r-project.org/web/checks/2024/2024-01-12_check_results_MPCR.html__;!!Nmw4Hv0!1cg5mCeLOB9fBslqbEGB1S0_MEcOLMjk6m4hpfWDyXErAlWtm82xz9ZUU3aQ3q6jkXZBM2tNhUp3EI3JmigE4EvCLlrC$<https://urldefense.com/v3/__https:/cran-archive.r-project.org/web/checks/2024/2024-01-12_check_results_MPCR.html__;!!Nmw4Hv0!1cg5mCeLOB9fBslqbEGB1S0_MEcOLMjk6m4hpfWDyXErAlWtm82xz9ZUU3aQ3q6jkXZBM2tNhUp3EI3JmigE4EvCLlrC$>
> >>
> >>
> >>
> >> Best,
> >> --Sameh
> >>
> >> --
> >>
> >> This message and its contents, including attachments are intended solely
> >> for the original recipient. If you are not the intended recipient or have
> >> received this message in error, please notify me immediately and delete
> >> this message from your computer system. Any unauthorized use or
> >> distribution is prohibited. Please consider the environment before printing
> >> this email.
> >>
> >> 	[[alternative HTML version deleted]]
> >>
> >> ______________________________________________
> >> R-package-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From @|mon@urb@nek @end|ng |rom R-project@org  Wed Jan 17 23:23:39 2024
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Thu, 18 Jan 2024 11:23:39 +1300
Subject: [R-pkg-devel] CMake on CRAN Systems
In-Reply-To: <20240117105413.4b87e347@Tarkus>
References: <20240117105413.4b87e347@Tarkus>
Message-ID: <7EEAC845-970E-4700-B66A-CC220E3D1CEA@R-project.org>

I had a quick look and that package (assuming it's https://github.com/stsds/MPCR) does not adhere to any rules from R-exts (hence the removal from CRAN I presume) so the failure to detect cmake is the least problem. I would strongly recommend reading the  R documentation as cmake is just the wrong tool for the job in this case. R already has a fully working build system which will compile the package using the correct flags and tools - you only need to provide the C++ sources. You cannot generate the package shared object with cmake by definition - you must let R build it. [In rare case dependent static libraries are sometimes built with cmake inside the package if there is no other option and cmake is used upstream, but those are rare and you still have to use R to build the final shared object].

Cheers,
Simon


> On Jan 17, 2024, at 8:54 PM, Ivan Krylov via R-package-devel <r-package-devel at r-project.org> wrote:
> 
> Dear Sameh,
> 
> Regarding your question about the MPCR package and the use of CMake
> <https://cran-archive.r-project.org/web/checks/2024/2024-01-12_check_results_MPCR.html>:
> on a Mac, you have to look for the cmake executable in more than one
> place because it is not guaranteed to be on the $PATH. As described in
> Writing R Extensions
> <https://cran.r-project.org/doc/manuals/R-exts.html#Using-cmake>, the
> following is one way to work around the problem:
> 
> if test -z "$CMAKE"; then CMAKE="`which cmake`"; fi
> if test -z "$CMAKE"; then
> CMAKE=/Applications/CMake.app/Contents/bin/cmake;
> fi
> if test -f "$CMAKE"; then echo "no ?cmake? command found"; exit 1; fi
> 
> Please don't reply to existing threads when starting a new topic on
> mailing lists. Your message had a mangled link that went to
> urldefense.com instead of cran-archive.r-project.org, letting Amazon
> (who host the website) know about every visit to the link:
> https://stat.ethz.ch/pipermail/r-package-devel/2024q1/010328.html
> 
> -- 
> Best regards,
> Ivan
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 


From r@c@rtwr|ght @end|ng |rom gm@||@com  Wed Jan 17 23:58:22 2024
From: r@c@rtwr|ght @end|ng |rom gm@||@com (Reed A. Cartwright)
Date: Wed, 17 Jan 2024 15:58:22 -0700
Subject: [R-pkg-devel] CMake on CRAN Systems
In-Reply-To: <7EEAC845-970E-4700-B66A-CC220E3D1CEA@R-project.org>
References: <20240117105413.4b87e347@Tarkus>
 <7EEAC845-970E-4700-B66A-CC220E3D1CEA@R-project.org>
Message-ID: <CALOkxuxUMZO0oY2oXcM=AX-T-DLBXKEBAc8AVyKfQTgWeByYsg@mail.gmail.com>

I think this is the same group that advertised an R package template a
while back that also clearly didn't follow R-exts rules or use any of
the best practices mentioned on this mailing list.

https://github.com/stsds/Template-Rcpp


On Wed, Jan 17, 2024 at 3:24?PM Simon Urbanek
<simon.urbanek at r-project.org> wrote:
>
> I had a quick look and that package (assuming it's https://urldefense.com/v3/__https://github.com/stsds/MPCR__;!!IKRxdwAv5BmarQ!Yc-rZLeUomy6UfK2hWnlm7jSdZkb90h9QCvh1B8HkY97GxPB-zes4t2gnSD2fTupOOXR-HtLQODuWJl_l5l6nsZNGlfE$ ) does not adhere to any rules from R-exts (hence the removal from CRAN I presume) so the failure to detect cmake is the least problem. I would strongly recommend reading the  R documentation as cmake is just the wrong tool for the job in this case. R already has a fully working build system which will compile the package using the correct flags and tools - you only need to provide the C++ sources. You cannot generate the package shared object with cmake by definition - you must let R build it. [In rare case dependent static libraries are sometimes built with cmake inside the package if there is no other option and cmake is used upstream, but those are rare and you still have to use R to build the final shared object].
>
> Cheers,
> Simon
>
>
> > On Jan 17, 2024, at 8:54 PM, Ivan Krylov via R-package-devel <r-package-devel at r-project.org> wrote:
> >
> > Dear Sameh,
> >
> > Regarding your question about the MPCR package and the use of CMake
> > <https://urldefense.com/v3/__https://cran-archive.r-project.org/web/checks/2024/2024-01-12_check_results_MPCR.html__;!!IKRxdwAv5BmarQ!Yc-rZLeUomy6UfK2hWnlm7jSdZkb90h9QCvh1B8HkY97GxPB-zes4t2gnSD2fTupOOXR-HtLQODuWJl_l5l6ntE5gM59$ >:
> > on a Mac, you have to look for the cmake executable in more than one
> > place because it is not guaranteed to be on the $PATH. As described in
> > Writing R Extensions
> > <https://urldefense.com/v3/__https://cran.r-project.org/doc/manuals/R-exts.html*Using-cmake__;Iw!!IKRxdwAv5BmarQ!Yc-rZLeUomy6UfK2hWnlm7jSdZkb90h9QCvh1B8HkY97GxPB-zes4t2gnSD2fTupOOXR-HtLQODuWJl_l5l6nhk6H1bw$ >, the
> > following is one way to work around the problem:
> >
> > if test -z "$CMAKE"; then CMAKE="`which cmake`"; fi
> > if test -z "$CMAKE"; then
> > CMAKE=/Applications/CMake.app/Contents/bin/cmake;
> > fi
> > if test -f "$CMAKE"; then echo "no ?cmake? command found"; exit 1; fi
> >
> > Please don't reply to existing threads when starting a new topic on
> > mailing lists. Your message had a mangled link that went to
> > urldefense.com instead of cran-archive.r-project.org, letting Amazon
> > (who host the website) know about every visit to the link:
> > https://urldefense.com/v3/__https://stat.ethz.ch/pipermail/r-package-devel/2024q1/010328.html__;!!IKRxdwAv5BmarQ!Yc-rZLeUomy6UfK2hWnlm7jSdZkb90h9QCvh1B8HkY97GxPB-zes4t2gnSD2fTupOOXR-HtLQODuWJl_l5l6nnj6jJF1$
> >
> > --
> > Best regards,
> > Ivan
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://urldefense.com/v3/__https://stat.ethz.ch/mailman/listinfo/r-package-devel__;!!IKRxdwAv5BmarQ!Yc-rZLeUomy6UfK2hWnlm7jSdZkb90h9QCvh1B8HkY97GxPB-zes4t2gnSD2fTupOOXR-HtLQODuWJl_l5l6nsmyJVkA$
> >
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://urldefense.com/v3/__https://stat.ethz.ch/mailman/listinfo/r-package-devel__;!!IKRxdwAv5BmarQ!Yc-rZLeUomy6UfK2hWnlm7jSdZkb90h9QCvh1B8HkY97GxPB-zes4t2gnSD2fTupOOXR-HtLQODuWJl_l5l6nsmyJVkA$


From @@meh@@bdu|@h @end|ng |rom k@u@t@edu@@@  Thu Jan 18 05:52:27 2024
From: @@meh@@bdu|@h @end|ng |rom k@u@t@edu@@@ (Sameh Abdulah)
Date: Thu, 18 Jan 2024 04:52:27 +0000
Subject: [R-pkg-devel] [EXTERNAL] Re:  CMake on CRAN Systems
In-Reply-To: <CALOkxuxUMZO0oY2oXcM=AX-T-DLBXKEBAc8AVyKfQTgWeByYsg@mail.gmail.com>
References: <20240117105413.4b87e347@Tarkus>
 <7EEAC845-970E-4700-B66A-CC220E3D1CEA@R-project.org>
 <CALOkxuxUMZO0oY2oXcM=AX-T-DLBXKEBAc8AVyKfQTgWeByYsg@mail.gmail.com>
Message-ID: <VI1P192MB02853F67C04BA4EBDF0B14C7FB712@VI1P192MB0285.EURP192.PROD.OUTLOOK.COM>

Thank you, Ivan and everyone else, for your help. We are working on modifying the package in line with your suggestions.

Regarding the Rcpp template we previously advertised, we are updating it to align better with the rules and constraints of R-exts. If you believe the template is still a potential example, we seek the community?s contribution to making it more tailored for the CRAN and R-exts rules, if not just ignore it.

Again, thanks for helping.


Best,
--Sameh

From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Reed A. Cartwright <racartwright at gmail.com>
Date: Thursday, January 18, 2024 at 1:59 AM
To: R Package Development <r-package-devel at r-project.org>
Subject: [EXTERNAL] Re: [R-pkg-devel] CMake on CRAN Systems
I think this is the same group that advertised an R package template a
while back that also clearly didn't follow R-exts rules or use any of
the best practices mentioned on this mailing list.

https://urldefense.com/v3/__https://github.com/stsds/Template-Rcpp__;!!Nmw4Hv0!2sMfEIGCOkf4K4xnMD01roSPe6BozSTq0MZKf1vY_MT-f6l4c-jX2I6SVogak9830IrKvZrbNEQkBIjkZfFeLm3SrrUW$<https://urldefense.com/v3/__https:/github.com/stsds/Template-Rcpp__;!!Nmw4Hv0!2sMfEIGCOkf4K4xnMD01roSPe6BozSTq0MZKf1vY_MT-f6l4c-jX2I6SVogak9830IrKvZrbNEQkBIjkZfFeLm3SrrUW$>


On Wed, Jan 17, 2024 at 3:24?PM Simon Urbanek
<simon.urbanek at r-project.org> wrote:
>
> I had a quick look and that package (assuming it's https://urldefense.com/v3/__https://github.com/stsds/MPCR__;!!IKRxdwAv5BmarQ!Yc-rZLeUomy6UfK2hWnlm7jSdZkb90h9QCvh1B8HkY97GxPB-zes4t2gnSD2fTupOOXR-HtLQODuWJl_l5l6nsZNGlfE$<https://urldefense.com/v3/__https:/github.com/stsds/MPCR__;!!IKRxdwAv5BmarQ!Yc-rZLeUomy6UfK2hWnlm7jSdZkb90h9QCvh1B8HkY97GxPB-zes4t2gnSD2fTupOOXR-HtLQODuWJl_l5l6nsZNGlfE$> ) does not adhere to any rules from R-exts (hence the removal from CRAN I presume) so the failure to detect cmake is the least problem. I would strongly recommend reading the  R documentation as cmake is just the wrong tool for the job in this case. R already has a fully working build system which will compile the package using the correct flags and tools - you only need to provide the C++ sources. You cannot generate the package shared object with cmake by definition - you must let R build it. [In rare case dependent static libraries are sometimes built with cmake inside the package if there is no other option and cmake is used upstream, but those are rare and you still have to use R to build the final shared object].
>
> Cheers,
> Simon
>
>
> > On Jan 17, 2024, at 8:54 PM, Ivan Krylov via R-package-devel <r-package-devel at r-project.org> wrote:
> >
> > Dear Sameh,
> >
> > Regarding your question about the MPCR package and the use of CMake
> > <https://urldefense.com/v3/__https://cran-archive.r-project.org/web/checks/2024/2024-01-12_check_results_MPCR.html__;!!IKRxdwAv5BmarQ!Yc-rZLeUomy6UfK2hWnlm7jSdZkb90h9QCvh1B8HkY97GxPB-zes4t2gnSD2fTupOOXR-HtLQODuWJl_l5l6ntE5gM59$ >:
> > on a Mac, you have to look for the cmake executable in more than one
> > place because it is not guaranteed to be on the $PATH. As described in
> > Writing R Extensions
> > <https://urldefense.com/v3/__https://cran.r-project.org/doc/manuals/R-exts.html*Using-cmake__;Iw!!IKRxdwAv5BmarQ!Yc-rZLeUomy6UfK2hWnlm7jSdZkb90h9QCvh1B8HkY97GxPB-zes4t2gnSD2fTupOOXR-HtLQODuWJl_l5l6nhk6H1bw$ >, the
> > following is one way to work around the problem:
> >
> > if test -z "$CMAKE"; then CMAKE="`which cmake`"; fi
> > if test -z "$CMAKE"; then
> > CMAKE=/Applications/CMake.app/Contents/bin/cmake;
> > fi
> > if test -f "$CMAKE"; then echo "no ?cmake? command found"; exit 1; fi
> >
> > Please don't reply to existing threads when starting a new topic on
> > mailing lists. Your message had a mangled link that went to
> > urldefense.com instead of cran-archive.r-project.org, letting Amazon
> > (who host the website) know about every visit to the link:
> > https://urldefense.com/v3/__https://stat.ethz.ch/pipermail/r-package-devel/2024q1/010328.html__;!!IKRxdwAv5BmarQ!Yc-rZLeUomy6UfK2hWnlm7jSdZkb90h9QCvh1B8HkY97GxPB-zes4t2gnSD2fTupOOXR-HtLQODuWJl_l5l6nnj6jJF1$<https://urldefense.com/v3/__https:/stat.ethz.ch/pipermail/r-package-devel/2024q1/010328.html__;!!IKRxdwAv5BmarQ!Yc-rZLeUomy6UfK2hWnlm7jSdZkb90h9QCvh1B8HkY97GxPB-zes4t2gnSD2fTupOOXR-HtLQODuWJl_l5l6nnj6jJF1$>
> >
> > --
> > Best regards,
> > Ivan
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://urldefense.com/v3/__https://stat.ethz.ch/mailman/listinfo/r-package-devel__;!!IKRxdwAv5BmarQ!Yc-rZLeUomy6UfK2hWnlm7jSdZkb90h9QCvh1B8HkY97GxPB-zes4t2gnSD2fTupOOXR-HtLQODuWJl_l5l6nsmyJVkA$<https://urldefense.com/v3/__https:/stat.ethz.ch/mailman/listinfo/r-package-devel__;!!IKRxdwAv5BmarQ!Yc-rZLeUomy6UfK2hWnlm7jSdZkb90h9QCvh1B8HkY97GxPB-zes4t2gnSD2fTupOOXR-HtLQODuWJl_l5l6nsmyJVkA$>
> >
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://urldefense.com/v3/__https://stat.ethz.ch/mailman/listinfo/r-package-devel__;!!IKRxdwAv5BmarQ!Yc-rZLeUomy6UfK2hWnlm7jSdZkb90h9QCvh1B8HkY97GxPB-zes4t2gnSD2fTupOOXR-HtLQODuWJl_l5l6nsmyJVkA$<https://urldefense.com/v3/__https:/stat.ethz.ch/mailman/listinfo/r-package-devel__;!!IKRxdwAv5BmarQ!Yc-rZLeUomy6UfK2hWnlm7jSdZkb90h9QCvh1B8HkY97GxPB-zes4t2gnSD2fTupOOXR-HtLQODuWJl_l5l6nsmyJVkA$>

______________________________________________
R-package-devel at r-project.org mailing list
https://urldefense.com/v3/__https://stat.ethz.ch/mailman/listinfo/r-package-devel__;!!Nmw4Hv0!2sMfEIGCOkf4K4xnMD01roSPe6BozSTq0MZKf1vY_MT-f6l4c-jX2I6SVogak9830IrKvZrbNEQkBIjkZfFeLuuaByd8$<https://urldefense.com/v3/__https:/stat.ethz.ch/mailman/listinfo/r-package-devel__;!!Nmw4Hv0!2sMfEIGCOkf4K4xnMD01roSPe6BozSTq0MZKf1vY_MT-f6l4c-jX2I6SVogak9830IrKvZrbNEQkBIjkZfFeLuuaByd8$>

-- 

This message and its contents, including attachments are intended solely 
for the original recipient. If you are not the intended recipient or have 
received this message in error, please notify me immediately and delete 
this message from your computer system. Any unauthorized use or 
distribution is prohibited. Please consider the environment before printing
this email.

	[[alternative HTML version deleted]]


From Serge@Iov|e|| @end|ng |rom @tkpp@org  Fri Jan 19 15:18:42 2024
From: Serge@Iov|e|| @end|ng |rom @tkpp@org (Serge)
Date: Fri, 19 Jan 2024 15:18:42 +0100
Subject: [R-pkg-devel] ERROR building MixAll on Windows platform
In-Reply-To: <161938e1-9b59-4cc8-ac63-ee5b1bc32a34@statistik.tu-dortmund.de>
References: <9d76dc3b-9f7b-4883-a866-221e46991e15@stkpp.org>
 <20240112221419.1539ed08@Tarkus>
 <0b451d3b-198d-458e-8e0c-cba953715924@stkpp.org>
 <20240113121024.5fd323c7@Tarkus>
 <badf0fdf-8828-47fa-9768-0bbb925169c4@statistik.tu-dortmund.de>
 <669c5f1d-a979-420c-aeda-63e92007fa82@statistik.tu-dortmund.de>
 <f540a493-c521-461c-86d7-91d261664bdf@statistik.tu-dortmund.de>
 <161938e1-9b59-4cc8-ac63-ee5b1bc32a34@statistik.tu-dortmund.de>
Message-ID: <1ce77471-1458-4c2b-a7ff-1af3d04eb400@stkpp.org>

This post is a continuation of the post *[R-pkg-devel] Does dependencies up to date on the pretest 
CRAN infrastructure*

I made more (unsuccessful) tries:

- I installed a Windows 11 version in a VM on my compuiter and try to buid the MixAll package using 
Rtools42 and Rtools43 (it's quite easy, and funny, to do it on windows: you have just to rename 
C:\rtools42 as C:\rtools43).
The result is that MixAll is build using the 4.2 version and the buid failed using the 4.3 version.

- I installed the version 12.3 of gcc on ubuntu (the same version used on windows) and could build 
the package without problem

- Inspecting the log of the Rtools4.3 
(https://cran.r-project.org/bin/windows/Rtools/rtools43/news.html) and g++12..3 
(https://gcc.gnu.org/gcc-12/changes.html) does not give insight.

- The package is dependent of the rtkore package which use extensive use of templated class. As 
rtkore is a port for R of stk++, I try to compile the stk++ library on windows (using g++12). All 
tests are compiled without any troubles.

These attempts eliminate some causes, but don't give me any insight why MixAll (and blockcluster) 
failed to be build on the Windows-devel platform. It seems related to Rtools43. Does anyone else 
(using for exemple Rcppeigen) is experiencing this problem ?

Serge



Le 14/01/2024 ? 18:50, Uwe Ligges a ?crit?:
> 
> 
> On 13.01.2024 15:01, Uwe Ligges wrote:
>> Fascinating, now it worked with the latest winbuilder submission 3 times in a row when I checked 
>> it manually. So maybe Ivan was right and there was a very demanding set of other packages 
>> compiling at the same time?
>> I don't know.
>>
>> Serge, Can you somply submit your latest winbuilder upload to CRAN?
> 
> Really, I inspected some more. The underlying issue is simple:
> The C++ compiler used under Windows asks for precomitted memory. If several processes are running at 
> the same time, a lot of memory is precomitted. And Windows does not use it for other processes, even 
> if almost nothing is actually used.
> So while the used memory may be around 50GB, all of the rest (of 756 GB including swap space) may 
> have been precomitted (but unused) and new processes failed to start correctly. Grrrr.
> 
> Best,
> Uwe Ligges
> 
> 
> 
> 
> 
>> Best,
>> Uwe Ligges
>>
>>
>>
>> On 13.01.2024 14:12, Uwe Ligges wrote:
>>> I can take a look, but not sure if I get to it before monday.
>>> I haven't seen it for any other packages recently.
>>>
>>> My suspicion is currently a strange mix of cmd.exe and sh.exe calls. But this is a very wild guess.
>>>
>>> Best,
>>> Uwe
>>>
>>> On 13.01.2024 14:08, Uwe Ligges wrote:
>>>>
>>>>
>>>> On 13.01.2024 10:10, Ivan Krylov via R-package-devel wrote:
>>>>> ? Fri, 12 Jan 2024 21:19:00 +0100
>>>>> Serge <Serge.Iovleff at stkpp.org> ?????:
>>>>>
>>>>>> After somme minor midficiations, I make a try on the winbuilder site.
>>>>>> I was able to build the archive with the static library
>>>>>> but I get again a Bad address error. You can have a look to
>>>>>>
>>>>>> https://win-builder.r-project.org/bw47qsMX3HTd/00install.out
>>>>>
>>>>> I think that Win-Builder is running out of memory. It took some
>>>>> experimenting, but I was able to reproduce something like this using
>>>>> the following:
>>>>>
>>>>> 1. Set the swap file in the Windows settings to minimal recommended
>>>>> size and disable its automatic growth
>>>>>
>>>>> 2. Write and run a program that does malloc(LARGE_NUMBER); getchar();
>>>>> so that almost all physical memory is allocated
>>>>>
>>>>> 3. Run gcc -DFOO=`/path/to/Rscript -e 'some script'` & many times
>>>>>
>>>>> I got a lot of interesting errors, including the "Bad address":
>>>>>
>>>>> Warnings:
>>>>> 1: .getGeneric(f, , package) : internal error -4 in R_decompress1
>>>>> 2: package "methods" in options("defaultPackages") was not found
>>>>>
>>>>> 0 [main] bash (2892) child_copy: cygheap read copy failed,
>>>>> 0x0..0x800025420, done 0, windows pid 2892, Win32 error 299
>>>>>
>>>>> 0 [main] bash (3256) C:\rtools43\usr\bin\bash.exe: *** fatal error in
>>>>> forked process - MEM_COMMIT failed, Win32 error 1455
>>>>>
>>>>> -bash: fork: retry: Resource temporarily unavailable
>>>>>
>>>>> -bash: R-devel/bin/Rscript.exe: Bad address
>>>>
>>>> The above indeed happens if not sufficient memory would be available.
>>>> Important to know: This includes unused but committed memory which may be a lot.
>>>> But I doubt it is the case on winbuilder as the machines has 256GB or more (depending in the 
>>>> machine) and additionally 500GB swap space on SSD.
>>>>
>>>> Best,
>>>> Uwe
>>>>
>>>>
>>>>> Your package is written in C++, but that by itself shouldn't disqualify
>>>>> it. On my Linux computer, /usr/bin/time R -e
>>>>> 'install.packages("MixAll")' says that the installation takes slightly
>>>>> less than a gigabyte of memory ("912516maxresident k"), which is par
>>>>> the course for such packages. (My small Rcpp-using package takes
>>>>> approximately half a gigabyte by the same metric.)
>>>>>
>>>>> I'm still not 100% sure (if Win-Builder is running out of memory, why
>>>>> are you seeing "Bad address" only and not the rest of the carnage?),
>>>>> but I'm not seeing a problem with your package, either. If EFAULT is
>>>>> Cygwin's way of saying "I caught a bad pointer in your system call"
>>>>> (which, I must stress, is happening inside /bin/sh, not your package
>>>>> or even R at all), it's not impossible that Win-Builder is having
>>>>> hardware problems. Unfortunately, they take a lot of effort and
>>>>> downtime to diagnose and could be hiding anywhere from RAM to the power
>>>>> supply.
>>>>>
>>>>
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Fri Jan 19 16:58:26 2024
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Fri, 19 Jan 2024 16:58:26 +0100
Subject: [R-pkg-devel] ERROR building MixAll on Windows platform
In-Reply-To: <1ce77471-1458-4c2b-a7ff-1af3d04eb400@stkpp.org>
References: <9d76dc3b-9f7b-4883-a866-221e46991e15@stkpp.org>
 <20240112221419.1539ed08@Tarkus>
 <0b451d3b-198d-458e-8e0c-cba953715924@stkpp.org>
 <20240113121024.5fd323c7@Tarkus>
 <badf0fdf-8828-47fa-9768-0bbb925169c4@statistik.tu-dortmund.de>
 <669c5f1d-a979-420c-aeda-63e92007fa82@statistik.tu-dortmund.de>
 <f540a493-c521-461c-86d7-91d261664bdf@statistik.tu-dortmund.de>
 <161938e1-9b59-4cc8-ac63-ee5b1bc32a34@statistik.tu-dortmund.de>
 <1ce77471-1458-4c2b-a7ff-1af3d04eb400@stkpp.org>
Message-ID: <1e49598a-32cb-4500-9cf6-03160f637952@gmail.com>

On 1/19/24 15:18, Serge wrote:
> This post is a continuation of the post *[R-pkg-devel] Does 
> dependencies up to date on the pretest CRAN infrastructure*
>
> I made more (unsuccessful) tries:
>
> - I installed a Windows 11 version in a VM on my compuiter and try to 
> buid the MixAll package using Rtools42 and Rtools43 (it's quite easy, 
> and funny, to do it on windows: you have just to rename C:\rtools42 as 
> C:\rtools43).
There should be no renaming, instead, one should use R 4.2.x with 
Rtools42 and R 4.3.x (or current R-devel) with Rtools43. All of these 
can co-exist (be installed at the same time). Mixing the two could lead 
to different failures. I understand you want to test different versions 
of GCC, but to do that reliable you would have to rebuild the rest of 
Rtools with that, or just the part that is needed by the package.
>
> The result is that MixAll is build using the 4.2 version and the buid 
> failed using the 4.3 version.
Please make sure to use Rtools43 (the real one) with R 4.3.
>
> - I installed the version 12.3 of gcc on ubuntu (the same version used 
> on windows) and could build the package without problem
>
> - Inspecting the log of the Rtools4.3 
> (https://cran.r-project.org/bin/windows/Rtools/rtools43/news.html) and 
> g++12..3 (https://gcc.gnu.org/gcc-12/changes.html) does not give insight.
>
> - The package is dependent of the rtkore package which use extensive 
> use of templated class. As rtkore is a port for R of stk++, I try to 
> compile the stk++ library on windows (using g++12). All tests are 
> compiled without any troubles.
>
> These attempts eliminate some causes, but don't give me any insight 
> why MixAll (and blockcluster) failed to be build on the Windows-devel 
> platform. It seems related to Rtools43. Does anyone else (using for 
> exemple Rcppeigen) is experiencing this problem ?

If this is GCC running out of memory on Windows but not Linux, when 
there really should be enough of memory available (i.e. due to the 
problem that Uwe described, maybe the internal GC in GCC is asking for 
too much memory for its heap given that the OS is not overcomiting), you 
can try narrowing it down to a standalone C++ program (independent on R, 
Rtools, R packages, compilable on both Windows and Linux with disabled 
optimizations, etc) that still exhibits the problem and then submitting 
it in a bug report to GCC bugzilla.

In such case, it could be that some heuristics in the collector could be 
improved.

If you have such standalone example, it would be easier to test 
different versions of GCC or even bisect to a concrete GCC version. You 
might also compare memory usage when compiling and cross-compiling.

You might also be able to find a work-around for your package by 
disabling some compiler optimizations. Also if you can narrow this down 
to a concrete GCC optimization then it would help to mention that in the 
bug report.

Certainly all of this would be out of scope of R-(pkg)-devel, this would 
rather be a GCC/Windows thing.

Tomas

>
> Serge
>
>
>
> Le 14/01/2024 ? 18:50, Uwe Ligges a ?crit?:
>>
>>
>> On 13.01.2024 15:01, Uwe Ligges wrote:
>>> Fascinating, now it worked with the latest winbuilder submission 3 
>>> times in a row when I checked it manually. So maybe Ivan was right 
>>> and there was a very demanding set of other packages compiling at 
>>> the same time?
>>> I don't know.
>>>
>>> Serge, Can you somply submit your latest winbuilder upload to CRAN?
>>
>> Really, I inspected some more. The underlying issue is simple:
>> The C++ compiler used under Windows asks for precomitted memory. If 
>> several processes are running at the same time, a lot of memory is 
>> precomitted. And Windows does not use it for other processes, even if 
>> almost nothing is actually used.
>> So while the used memory may be around 50GB, all of the rest (of 756 
>> GB including swap space) may have been precomitted (but unused) and 
>> new processes failed to start correctly. Grrrr.
>>
>> Best,
>> Uwe Ligges
>>
>>
>>
>>
>>
>>> Best,
>>> Uwe Ligges
>>>
>>>
>>>
>>> On 13.01.2024 14:12, Uwe Ligges wrote:
>>>> I can take a look, but not sure if I get to it before monday.
>>>> I haven't seen it for any other packages recently.
>>>>
>>>> My suspicion is currently a strange mix of cmd.exe and sh.exe 
>>>> calls. But this is a very wild guess.
>>>>
>>>> Best,
>>>> Uwe
>>>>
>>>> On 13.01.2024 14:08, Uwe Ligges wrote:
>>>>>
>>>>>
>>>>> On 13.01.2024 10:10, Ivan Krylov via R-package-devel wrote:
>>>>>> ? Fri, 12 Jan 2024 21:19:00 +0100
>>>>>> Serge <Serge.Iovleff at stkpp.org> ?????:
>>>>>>
>>>>>>> After somme minor midficiations, I make a try on the winbuilder 
>>>>>>> site.
>>>>>>> I was able to build the archive with the static library
>>>>>>> but I get again a Bad address error. You can have a look to
>>>>>>>
>>>>>>> https://win-builder.r-project.org/bw47qsMX3HTd/00install.out
>>>>>>
>>>>>> I think that Win-Builder is running out of memory. It took some
>>>>>> experimenting, but I was able to reproduce something like this using
>>>>>> the following:
>>>>>>
>>>>>> 1. Set the swap file in the Windows settings to minimal recommended
>>>>>> size and disable its automatic growth
>>>>>>
>>>>>> 2. Write and run a program that does malloc(LARGE_NUMBER); 
>>>>>> getchar();
>>>>>> so that almost all physical memory is allocated
>>>>>>
>>>>>> 3. Run gcc -DFOO=`/path/to/Rscript -e 'some script'` & many times
>>>>>>
>>>>>> I got a lot of interesting errors, including the "Bad address":
>>>>>>
>>>>>> Warnings:
>>>>>> 1: .getGeneric(f, , package) : internal error -4 in R_decompress1
>>>>>> 2: package "methods" in options("defaultPackages") was not found
>>>>>>
>>>>>> 0 [main] bash (2892) child_copy: cygheap read copy failed,
>>>>>> 0x0..0x800025420, done 0, windows pid 2892, Win32 error 299
>>>>>>
>>>>>> 0 [main] bash (3256) C:\rtools43\usr\bin\bash.exe: *** fatal 
>>>>>> error in
>>>>>> forked process - MEM_COMMIT failed, Win32 error 1455
>>>>>>
>>>>>> -bash: fork: retry: Resource temporarily unavailable
>>>>>>
>>>>>> -bash: R-devel/bin/Rscript.exe: Bad address
>>>>>
>>>>> The above indeed happens if not sufficient memory would be available.
>>>>> Important to know: This includes unused but committed memory which 
>>>>> may be a lot.
>>>>> But I doubt it is the case on winbuilder as the machines has 256GB 
>>>>> or more (depending in the machine) and additionally 500GB swap 
>>>>> space on SSD.
>>>>>
>>>>> Best,
>>>>> Uwe
>>>>>
>>>>>
>>>>>> Your package is written in C++, but that by itself shouldn't 
>>>>>> disqualify
>>>>>> it. On my Linux computer, /usr/bin/time R -e
>>>>>> 'install.packages("MixAll")' says that the installation takes 
>>>>>> slightly
>>>>>> less than a gigabyte of memory ("912516maxresident k"), which is par
>>>>>> the course for such packages. (My small Rcpp-using package takes
>>>>>> approximately half a gigabyte by the same metric.)
>>>>>>
>>>>>> I'm still not 100% sure (if Win-Builder is running out of memory, 
>>>>>> why
>>>>>> are you seeing "Bad address" only and not the rest of the carnage?),
>>>>>> but I'm not seeing a problem with your package, either. If EFAULT is
>>>>>> Cygwin's way of saying "I caught a bad pointer in your system call"
>>>>>> (which, I must stress, is happening inside /bin/sh, not your package
>>>>>> or even R at all), it's not impossible that Win-Builder is having
>>>>>> hardware problems. Unfortunately, they take a lot of effort and
>>>>>> downtime to diagnose and could be hiding anywhere from RAM to the 
>>>>>> power
>>>>>> supply.
>>>>>>
>>>>>
>>>>> ______________________________________________
>>>>> R-package-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From @ndr|y@prot@@k @end|ng |rom edu@u@h@e@  Fri Jan 19 15:34:25 2024
From: @ndr|y@prot@@k @end|ng |rom edu@u@h@e@ (Protsak Andriy)
Date: Fri, 19 Jan 2024 14:34:25 +0000
Subject: [R-pkg-devel] Inquiry Regarding Package Organization in CRAN
Message-ID: <AM0PR03MB4963B7B5C6480AD9736A3AD6A3702@AM0PR03MB4963.eurprd03.prod.outlook.com>

Hi all!



My name is Andriy, and I?m a student at University of Alcal?, currently working on my final year project.



I?m tasked with organizing the R packages developed by our university that are currently available on CRAN. The goal is to enhance their discoverability, to achieve this the initial focus is on exploring the possibility of renaming the packages so that they share a common prefix, making it easier for uses to locate them in the package list.

If you believe there are alternative strategies to achieve a similar result, please feel free to share your perspective.



Additionally, I?m looking into the prospect of merging two packages that contain similar functionalities. The aim is to create a more comprehensive package by incorporation additional features and ensuring seamless compatibility.



Your assistance is key to the successful completion of my final year project, and I would be immensely grateful for any insights you can provide. Thank you for your time and consideration.



Best regards,



Andriy

	[[alternative HTML version deleted]]


From d@v|dhughjone@ @end|ng |rom gm@||@com  Fri Jan 19 21:47:46 2024
From: d@v|dhughjone@ @end|ng |rom gm@||@com (David Hugh-Jones)
Date: Fri, 19 Jan 2024 20:47:46 +0000
Subject: [R-pkg-devel] Inquiry Regarding Package Organization in CRAN
In-Reply-To: <AM0PR03MB4963B7B5C6480AD9736A3AD6A3702@AM0PR03MB4963.eurprd03.prod.outlook.com>
References: <AM0PR03MB4963B7B5C6480AD9736A3AD6A3702@AM0PR03MB4963.eurprd03.prod.outlook.com>
Message-ID: <CAARY7khnWH+7CJkLFp_5iA4VKdL+tgBBasLRL0ACusLydbNk8g@mail.gmail.com>

Hi Andriy

Renaming the packages seems quite drastic. It?ll break existing code and
the packages? dependencies, and any existing name recognition will be lost.
I?m also a bit sceptical that it will greatly affect discoverability: I
don?t think most users find packages by scrolling through the big
alphabetical list.

Here are some less drastic alternatives :

* Post about new versions of the packages to r-pkgs mailing list.
* Write announcements, articles and/or blog posts for rweekly.org.
* if it?s appropriate, suggest the packages for one or more CRAN task
views.
* make sure you?ve got friendly online documentation. The pkgdown package
is pretty good for this, and many people host documentation on GitHub pages.

Best,
David

Writing: wyclif.substack.com
Book: www.wyclifsdust.com


On Fri, 19 Jan 2024 at 19:41, Protsak Andriy via R-package-devel <
r-package-devel at r-project.org> wrote:

> Hi all!
>
>
>
> My name is Andriy, and I?m a student at University of Alcal?, currently
> working on my final year project.
>
>
>
> I?m tasked with organizing the R packages developed by our university that
> are currently available on CRAN. The goal is to enhance their
> discoverability, to achieve this the initial focus is on exploring the
> possibility of renaming the packages so that they share a common prefix,
> making it easier for uses to locate them in the package list.
>
> If you believe there are alternative strategies to achieve a similar
> result, please feel free to share your perspective.
>
>
>
> Additionally, I?m looking into the prospect of merging two packages that
> contain similar functionalities. The aim is to create a more comprehensive
> package by incorporation additional features and ensuring seamless
> compatibility.
>
>
>
> Your assistance is key to the successful completion of my final year
> project, and I would be immensely grateful for any insights you can
> provide. Thank you for your time and consideration.
>
>
>
> Best regards,
>
>
>
> Andriy
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From |kry|ov @end|ng |rom d|@root@org  Fri Jan 19 21:58:55 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Fri, 19 Jan 2024 23:58:55 +0300
Subject: [R-pkg-devel] Inquiry Regarding Package Organization in CRAN
In-Reply-To: <AM0PR03MB4963B7B5C6480AD9736A3AD6A3702@AM0PR03MB4963.eurprd03.prod.outlook.com>
References: <AM0PR03MB4963B7B5C6480AD9736A3AD6A3702@AM0PR03MB4963.eurprd03.prod.outlook.com>
Message-ID: <20240119235855.150d3d77@Tarkus>

Hello Andriy and welcome to R-package-devel!

On Fri, 19 Jan 2024 14:34:25 +0000
Protsak Andriy via R-package-devel <r-package-devel at r-project.org>
wrote:

> to achieve this the initial focus is on exploring the possibility of
> renaming the packages so that they share a common prefix, making it
> easier for uses to locate them in the package list.

CRAN package names are long-term identifiers. Assume that there are
many users happy with the packages as they are. If you rename a
package, they will have to patch their scripts and their own packages
just to keep them working as before. Red Queen's race is not something
people like to participate in.

It is certainly not impossible to rename a package, but there has to be
a very good reason to break backwards compatibility and assume a new
name, while the old name stays in the archive, unavailable for new
packages.

Here are some past responses to similar questions:

https://stat.ethz.ch/pipermail/r-package-devel/2022q2/008140.html
https://stat.ethz.ch/pipermail/r-package-devel/2017q2/001678.html
https://stat.ethz.ch/pipermail/r-package-devel/2015q3/000271.html

> If you believe there are alternative strategies to achieve a similar
> result, please feel free to share your perspective.

There are approximately 20000 active packages on CRAN. Looking for
useful packages by scanning a list of names will not be very effective.
Better results can be achieved using tools like RSiteSearch
<https://search.r-project.org/>. If you want a package to be more
visible, request its addition to a Task View
<https://cran.r-project.org/web/views/>. If some packages are related,
make them link to each other in their documentation. David's options
are all very good.

> Additionally, I'm looking into the prospect of merging two packages
> that contain similar functionalities. The aim is to create a more
> comprehensive package by incorporation additional features and
> ensuring seamless compatibility.

The previous point about keeping backwards compatibility still stands.
It should be possible to move all the functions to one package and then
import() it from the other package. Both packages can then export() all
functions, making them available to the dependencies of either package.
Eventually, the skeleton package may grow packageStartupMessage()s
letting the users know that it is deprecated and could they please use
the other package instead. After a while, it should be possible to
archive the skeleton package. But deprecation cycles should be long:
for example, rgeos and rgdal took more than a year to retire
<https://r-spatial.org/r/2022/04/12/evolution.html>.

Or do you intend to come up with a completely new API? Beware of the
second system effect (although it's certainly not unheard of for second
system projects to succeed).

The spatstat package went through the opposite process a few years ago:
it grew too big and had to be split into multiple packages. Here's one
of its maintainers sharing the experience:
https://stat.ethz.ch/pipermail/r-package-devel/2022q4/008557.html

What is the nature of your final year project? If it can include
technical writing, you could add well-written vignettes to the packages
(only one of the CRAN packages maintained by people @uah.es has a
vignette, and it's very terse). If it has to be mostly programming or
maintenance of R packages, I'm out of ideas.

Either way, good luck, and I hope your project succeeds!

-- 
Best regards,
Ivan


From ||@t@ @end|ng |rom dewey@myzen@co@uk  Sat Jan 20 12:41:59 2024
From: ||@t@ @end|ng |rom dewey@myzen@co@uk (Michael Dewey)
Date: Sat, 20 Jan 2024 11:41:59 +0000
Subject: [R-pkg-devel] Inquiry Regarding Package Organization in CRAN
In-Reply-To: <AM0PR03MB4963B7B5C6480AD9736A3AD6A3702@AM0PR03MB4963.eurprd03.prod.outlook.com>
References: <AM0PR03MB4963B7B5C6480AD9736A3AD6A3702@AM0PR03MB4963.eurprd03.prod.outlook.com>
Message-ID: <0edd77a6-da02-3d0e-fe36-11d7f82d8933@dewey.myzen.co.uk>

Dear Andriy

I would second the advice that David and Ivan have already given.

I woouls also add that I suspect that most users search for packages by 
functionality so you might want to study techniques for search engine 
optimisation and then advise authors how to increase the visibility of 
their packages.

If the goal is just to record all package from your university then why 
not establish a page on your university website which links to all of 
them? The main problem there will be updating it after you have 
graduated and moved institutions.

Michael

On 19/01/2024 14:34, Protsak Andriy via R-package-devel wrote:
> Hi all!
> 
> 
> 
> My name is Andriy, and I?m a student at University of Alcal?, currently working on my final year project.
> 
> 
> 
> I?m tasked with organizing the R packages developed by our university that are currently available on CRAN. The goal is to enhance their discoverability, to achieve this the initial focus is on exploring the possibility of renaming the packages so that they share a common prefix, making it easier for uses to locate them in the package list.
> 
> If you believe there are alternative strategies to achieve a similar result, please feel free to share your perspective.
> 
> 
> 
> Additionally, I?m looking into the prospect of merging two packages that contain similar functionalities. The aim is to create a more comprehensive package by incorporation additional features and ensuring seamless compatibility.
> 
> 
> 
> Your assistance is key to the successful completion of my final year project, and I would be immensely grateful for any insights you can provide. Thank you for your time and consideration.
> 
> 
> 
> Best regards,
> 
> 
> 
> Andriy
> 
> 	[[alternative HTML version deleted]]
> 
> 
> 
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
Michael


From me @end|ng |rom jg@eb@com  Sat Jan 20 20:38:55 2024
From: me @end|ng |rom jg@eb@com (Johann Gaebler)
Date: Sat, 20 Jan 2024 14:38:55 -0500
Subject: [R-pkg-devel] New Package Removal because Shared Library Too Large
 from Debugging Symbols
Message-ID: <D94C0990-EC93-432F-B10A-C2B81E55BB2C@jgaeb.com>

Hi everyone,

I received the following message regarding  `rar` <https://cran.r-project.org/package=rar>, a package that I put up on CRAN two days ago:

> Dear maintainer,
> 
> Please see the problems shown on
> <https://cran.r-project.org/web/checks/check_results_rar.html>.
> 
> Please correct before 2024-02-02 to safely retain your package on CRAN.

The issue is that the compiled libraries are too large. The Mac CRAN checks turned up the following note:

> installed size is  8.9Mb
> sub-directories of 1Mb or more:
>  libs   8.7Mb

I have not been able to reproduce the issue either locally or on any machine I have ready access to. I have built it on some of the Rhub and R-Project build systems, and the same issue (with very different `libs` sizes) came up on some of them:

? (RHub) Ubuntu Linux 20.04.1 LTS, R-release, GCC: 18.2Mb,
? (RHub) Fedora Linux, R-devel, clang, gfortran: 6.8Mb,
? (R-Project) r-release-macosx-arm64: 8.5Mb.

Based on trying to read up about this, it seems that this is a pretty common problem <http://dirk.eddelbuettel.com/blog/2017/08/14/#009_compact_shared_libraries> for compiled packages because of debugging symbols getting inserted into the shared library file. Using the fix from that blog post where you modify the Makevars to strip debugging symbols from the shared library seems to solve the issue on those build systems, so I feel reasonably confident that this is what?s going on.

Apparently many, many existing packages on CRAN have the same issue. However, I?m very new to R package development, so I?m not exactly sure what to do. I have two questions:

1. Is there anything I need to ?fix? here, or should I just make contact with the CRAN folks and bring the fact that this is being caused by debugging symbols to their attention?
2. Regardless of whether or not I have to fix this issue for CRAN, is there a way to strip out the debugging symbols that comports with CRAN policies? The method suggested in the blog post above (adding a phony target in `Makevars` that strips the shared library) seems not to be CRAN-compliant, but I could be mistaken about that. (In particular, I had to modify it locally to get it to run, so I?m not sure what the platform-independent version of it looks like.)

Thanks in advance for the help!

Sincerely,
Johann D. Gaebler
	[[alternative HTML version deleted]]


From edd @end|ng |rom deb|@n@org  Sat Jan 20 21:01:29 2024
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Sat, 20 Jan 2024 14:01:29 -0600
Subject: [R-pkg-devel] 
 New Package Removal because Shared Library Too Large
 from Debugging Symbols
In-Reply-To: <D94C0990-EC93-432F-B10A-C2B81E55BB2C@jgaeb.com>
References: <D94C0990-EC93-432F-B10A-C2B81E55BB2C@jgaeb.com>
Message-ID: <26028.9881.344.127700@rob.eddelbuettel.com>


Johann,

On 20 January 2024 at 14:38, Johann Gaebler wrote:
| Hi everyone,
| 
| I received the following message regarding  `rar` <https://cran.r-project.org/package=rar>, a package that I put up on CRAN two days ago:
| 
| > Dear maintainer,
| > 
| > Please see the problems shown on
| > <https://cran.r-project.org/web/checks/check_results_rar.html>.
| > 
| > Please correct before 2024-02-02 to safely retain your package on CRAN.
| 
| The issue is that the compiled libraries are too large. The Mac CRAN checks turned up the following note:

No you read that wrong. That is NOT the issue. That is a mere 'Note'.

Your issue is the bright red link labeled 'LTO' on that pagem and going to

  https://www.stats.ox.ac.uk/pub/bdr/LTO/rar.out
  
where it details an error on that platform / compilation choice:

  g++-13 -std=gnu++17 -shared -L/usr/local/gcc13/lib64 -L/usr/local/lib64 -o rar.so cpp11.o distpt.o iter.o max.o min.o regdata.o sens.o test-distpt.o test-iter.o test-max.o test-min.o test-regdata.o test-runner.o test-sens.o
  cpp11.cpp:18:13: warning: 'run_testthat_tests' violates the C++ One Definition Rule [-Wodr]
     18 | extern SEXP run_testthat_tests(void *);
        |             ^
  /data/gannet/ripley/R/test-dev/testthat/include/testthat/testthat.h:172:17: note: 'run_testthat_tests' was previously declared here
    172 | extern "C" SEXP run_testthat_tests(SEXP use_xml_sxp) {
        |                 ^
  make[2]: Leaving directory '/data/gannet/ripley/R/packages/tests-LTO/rar/src'
  installing to /data/gannet/ripley/R/packages/tests-LTO/Libs/rar-lib/00LOCK-rar/00new/rar/libs

This 'violates the C++ One Definition Rule' is something that started with
g++-13, if memory serves. Without looking at the code, I think you did
something that lead to a symbol being included multiple times, and it should
not be.

Cheers, Dirk

 
| > installed size is  8.9Mb
| > sub-directories of 1Mb or more:
| >  libs   8.7Mb
| 
| I have not been able to reproduce the issue either locally or on any machine I have ready access to. I have built it on some of the Rhub and R-Project build systems, and the same issue (with very different `libs` sizes) came up on some of them:
| 
| ? (RHub) Ubuntu Linux 20.04.1 LTS, R-release, GCC: 18.2Mb,
| ? (RHub) Fedora Linux, R-devel, clang, gfortran: 6.8Mb,
| ? (R-Project) r-release-macosx-arm64: 8.5Mb.
| 
| Based on trying to read up about this, it seems that this is a pretty common problem <http://dirk.eddelbuettel.com/blog/2017/08/14/#009_compact_shared_libraries> for compiled packages because of debugging symbols getting inserted into the shared library file. Using the fix from that blog post where you modify the Makevars to strip debugging symbols from the shared library seems to solve the issue on those build systems, so I feel reasonably confident that this is what?s going on.
| 
| Apparently many, many existing packages on CRAN have the same issue. However, I?m very new to R package development, so I?m not exactly sure what to do. I have two questions:
| 
| 1. Is there anything I need to ?fix? here, or should I just make contact with the CRAN folks and bring the fact that this is being caused by debugging symbols to their attention?
| 2. Regardless of whether or not I have to fix this issue for CRAN, is there a way to strip out the debugging symbols that comports with CRAN policies? The method suggested in the blog post above (adding a phony target in `Makevars` that strips the shared library) seems not to be CRAN-compliant, but I could be mistaken about that. (In particular, I had to modify it locally to get it to run, so I?m not sure what the platform-independent version of it looks like.)
| 
| Thanks in advance for the help!
| 
| Sincerely,
| Johann D. Gaebler
| 	[[alternative HTML version deleted]]
| 
| ______________________________________________
| R-package-devel at r-project.org mailing list
| https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From bbo|ker @end|ng |rom gm@||@com  Sat Jan 20 21:02:15 2024
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Sat, 20 Jan 2024 15:02:15 -0500
Subject: [R-pkg-devel] 
 New Package Removal because Shared Library Too Large
 from Debugging Symbols
In-Reply-To: <D94C0990-EC93-432F-B10A-C2B81E55BB2C@jgaeb.com>
References: <D94C0990-EC93-432F-B10A-C2B81E55BB2C@jgaeb.com>
Message-ID: <5d74ddc9-51a0-4d3c-b29a-cec3728d5967@gmail.com>

   Are you sure the issue that CRAN has is the library sizes, and not 
the issues flagged by the "LTO" platform 
<https://www.stats.ox.ac.uk/pub/bdr/LTO/README.txt> ?

https://www.stats.ox.ac.uk/pub/bdr/LTO/rar.out

   I would check with CRAN for clarification before you spend a lot of 
time trying to reduce package sizes. As you point out, lots of packages 
on CRAN have package sizes large enough to trigger this note -- it is my 
impression that CRAN only object if the large package size is considered 
unnecessary; some of the *inappropriate* reasons for large package size 
are listed in the repository policy 
<https://cran.r-project.org/web/packages/policies.html>

===
Packages should be of the minimum necessary size. Reasonable compression 
should be used for data (not just .rda files) and PDF documentation: 
CRAN will if necessary pass the latter through qpdf.

As a general rule, neither data nor documentation should exceed 5MB 
(which covers several books). A CRAN package is not an appropriate way 
to distribute course notes, and authors will be asked to trim their 
documentation to a maximum of 5MB.

Where a large amount of data is required (even after compression), 
consideration should be given to a separate data-only package which can 
be updated only rarely (since older versions of packages are archived in 
perpetuity).

Similar considerations apply to other forms of ?data?, e.g., .jar files.

Source package tarballs should if possible not exceed 10MB. It is much 
preferred that third-party source software should be included within the 
package (as e.g. a vendor.tar.xz file) than be downloaded at 
installation: if this requires a larger tarball a modestly increased 
limit can be requested at submission.
====

On 2024-01-20 2:38 p.m., Johann Gaebler wrote:
> Hi everyone,
> 
> I received the following message regarding  `rar` <https://cran.r-project.org/package=rar>, a package that I put up on CRAN two days ago:
> 
>> Dear maintainer,
>>
>> Please see the problems shown on
>> <https://cran.r-project.org/web/checks/check_results_rar.html>.
>>
>> Please correct before 2024-02-02 to safely retain your package on CRAN.
> 
> The issue is that the compiled libraries are too large. The Mac CRAN checks turned up the following note:
> 
>> installed size is  8.9Mb
>> sub-directories of 1Mb or more:
>>   libs   8.7Mb
> 
> I have not been able to reproduce the issue either locally or on any machine I have ready access to. I have built it on some of the Rhub and R-Project build systems, and the same issue (with very different `libs` sizes) came up on some of them:
> 
> ? (RHub) Ubuntu Linux 20.04.1 LTS, R-release, GCC: 18.2Mb,
> ? (RHub) Fedora Linux, R-devel, clang, gfortran: 6.8Mb,
> ? (R-Project) r-release-macosx-arm64: 8.5Mb.
> 
> Based on trying to read up about this, it seems that this is a pretty common problem <http://dirk.eddelbuettel.com/blog/2017/08/14/#009_compact_shared_libraries> for compiled packages because of debugging symbols getting inserted into the shared library file. Using the fix from that blog post where you modify the Makevars to strip debugging symbols from the shared library seems to solve the issue on those build systems, so I feel reasonably confident that this is what?s going on.
> 
> Apparently many, many existing packages on CRAN have the same issue. However, I?m very new to R package development, so I?m not exactly sure what to do. I have two questions:
> 
> 1. Is there anything I need to ?fix? here, or should I just make contact with the CRAN folks and bring the fact that this is being caused by debugging symbols to their attention?
> 2. Regardless of whether or not I have to fix this issue for CRAN, is there a way to strip out the debugging symbols that comports with CRAN policies? The method suggested in the blog post above (adding a phony target in `Makevars` that strips the shared library) seems not to be CRAN-compliant, but I could be mistaken about that. (In particular, I had to modify it locally to get it to run, so I?m not sure what the platform-independent version of it looks like.)
> 
> Thanks in advance for the help!
> 
> Sincerely,
> Johann D. Gaebler
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
Dr. Benjamin Bolker
Professor, Mathematics & Statistics and Biology, McMaster University
Director, School of Computational Science and Engineering
(Acting) Graduate chair, Mathematics & Statistics
 > E-mail is sent at my convenience; I don't expect replies outside of 
working hours.


From |kry|ov @end|ng |rom d|@root@org  Sat Jan 20 21:02:37 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Sat, 20 Jan 2024 23:02:37 +0300
Subject: [R-pkg-devel] 
 New Package Removal because Shared Library Too Large
 from Debugging Symbols
In-Reply-To: <D94C0990-EC93-432F-B10A-C2B81E55BB2C@jgaeb.com>
References: <D94C0990-EC93-432F-B10A-C2B81E55BB2C@jgaeb.com>
Message-ID: <20240120230237.41df2796@Tarkus>

? Sat, 20 Jan 2024 14:38:55 -0500
Johann Gaebler <me at jgaeb.com> ?????:

> The issue is that the compiled libraries are too large.

Was it in the e-mail? As you quite correctly observed, many other
packages get the NOTE about shared library size.

It may be not exactly obvious, but the red link saying "LTO" on the
check page that points to
<https://www.stats.ox.ac.uk/pub/bdr/LTO/rar.out> is hiding a more
serious issue:

> cpp11.cpp:18:13: warning: 'run_testthat_tests' violates the C++ One Definition Rule [-Wodr]
>    18 | extern SEXP run_testthat_tests(void *);
>       |             ^
> /data/gannet/ripley/R/test-dev/testthat/include/testthat/testthat.h:172:17: note: 'run_testthat_tests' was previously declared here
>   172 | extern "C" SEXP run_testthat_tests(SEXP use_xml_sxp) {
>       |                 ^

Modern C++ compilers are painfully pedantic about undefined behaviour
and can optimise away large sections of code if they think they have a
proof that your code causes it [*]. If you edit cpp11.cpp to provide the
correct declaration (#include the testthat header if possible), the
error should go away.

-- 
Best regards,
Ivan

[*] For example, see this issue in R: https://bugs.r-project.org/show_bug.cgi?id=18430


From jeroenoom@ @end|ng |rom gm@||@com  Sat Jan 20 23:51:28 2024
From: jeroenoom@ @end|ng |rom gm@||@com (Jeroen Ooms)
Date: Sat, 20 Jan 2024 23:51:28 +0100
Subject: [R-pkg-devel] Inquiry Regarding Package Organization in CRAN
In-Reply-To: <AM0PR03MB4963B7B5C6480AD9736A3AD6A3702@AM0PR03MB4963.eurprd03.prod.outlook.com>
References: <AM0PR03MB4963B7B5C6480AD9736A3AD6A3702@AM0PR03MB4963.eurprd03.prod.outlook.com>
Message-ID: <CABFfbXvb2UV0==pNn_5As+4ZZGx+dcw9mNWgxru484bREz6K4A@mail.gmail.com>

On Fri, Jan 19, 2024 at 8:41?PM Protsak Andriy via R-package-devel
<r-package-devel at r-project.org> wrote:
>
> Hi all!
>
>
>
> My name is Andriy, and I?m a student at University of Alcal?, currently working on my final year project.
>
>
>
> I?m tasked with organizing the R packages developed by our university that are currently available on CRAN. The goal is to enhance their discoverability, to achieve this the initial focus is on exploring the possibility of renaming the packages so that they share a common prefix, making it easier for uses to locate them in the package list.
>
> If you believe there are alternative strategies to achieve a similar result, please feel free to share your perspective.



You could also set up a cranlike package repository on r-universe,
where you include all the packages from your university (both those
from CRAN and others). This will provide a nice overview of all the
packages in your institute and makes them discoverable via web UI and
r-universe search engine.

Many other organisations are represented here as well, some examples:

 - https://ropensci.r-universe.dev
 - https://lcbc-uio.r-universe.dev
 - https://vimc.r-universe.dev
 - https://kwb-r.r-universe.dev
 - https://mrcieu.r-universe.dev
 - https://inbo.r-universe.dev

And many more from: https://r-universe.dev/organizations/. Getting
started is easy, see:
https://github.com/r-universe-org/help?tab=readme-ov-file


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Sun Jan 21 01:12:56 2024
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Sun, 21 Jan 2024 01:12:56 +0100
Subject: [R-pkg-devel] 
 New Package Removal because Shared Library Too Large
 from Debugging Symbols
In-Reply-To: <D94C0990-EC93-432F-B10A-C2B81E55BB2C@jgaeb.com>
References: <D94C0990-EC93-432F-B10A-C2B81E55BB2C@jgaeb.com>
Message-ID: <684ce040-8232-4599-ac25-cf5abcfc8b77@statistik.tu-dortmund.de>

Others have pointed you to the Additional issue, namely LTO.

But I really cannot resist:
You omitted a line from our message that actually explains it. We wrote: 
"Do remember to look at the 'Additional issues'."

Best,
Uwe Ligges



On 20.01.2024 20:38, Johann Gaebler wrote:
> Hi everyone,
> 
> I received the following message regarding  `rar` <https://cran.r-project.org/package=rar>, a package that I put up on CRAN two days ago:
> 
>> Dear maintainer,
>>
>> Please see the problems shown on
>> <https://cran.r-project.org/web/checks/check_results_rar.html>.
>>
>> Please correct before 2024-02-02 to safely retain your package on CRAN.
> 
> The issue is that the compiled libraries are too large. The Mac CRAN checks turned up the following note:
> 
>> installed size is  8.9Mb
>> sub-directories of 1Mb or more:
>>   libs   8.7Mb
> 
> I have not been able to reproduce the issue either locally or on any machine I have ready access to. I have built it on some of the Rhub and R-Project build systems, and the same issue (with very different `libs` sizes) came up on some of them:
> 
> ? (RHub) Ubuntu Linux 20.04.1 LTS, R-release, GCC: 18.2Mb,
> ? (RHub) Fedora Linux, R-devel, clang, gfortran: 6.8Mb,
> ? (R-Project) r-release-macosx-arm64: 8.5Mb.
> 
> Based on trying to read up about this, it seems that this is a pretty common problem <http://dirk.eddelbuettel.com/blog/2017/08/14/#009_compact_shared_libraries> for compiled packages because of debugging symbols getting inserted into the shared library file. Using the fix from that blog post where you modify the Makevars to strip debugging symbols from the shared library seems to solve the issue on those build systems, so I feel reasonably confident that this is what?s going on.
> 
> Apparently many, many existing packages on CRAN have the same issue. However, I?m very new to R package development, so I?m not exactly sure what to do. I have two questions:
> 
> 1. Is there anything I need to ?fix? here, or should I just make contact with the CRAN folks and bring the fact that this is being caused by debugging symbols to their attention?
> 2. Regardless of whether or not I have to fix this issue for CRAN, is there a way to strip out the debugging symbols that comports with CRAN policies? The method suggested in the blog post above (adding a phony target in `Makevars` that strips the shared library) seems not to be CRAN-compliant, but I could be mistaken about that. (In particular, I had to modify it locally to get it to run, so I?m not sure what the platform-independent version of it looks like.)
> 
> Thanks in advance for the help!
> 
> Sincerely,
> Johann D. Gaebler
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

From me @end|ng |rom jg@eb@com  Sun Jan 21 02:28:00 2024
From: me @end|ng |rom jg@eb@com (Johann Gaebler)
Date: Sat, 20 Jan 2024 20:28:00 -0500
Subject: [R-pkg-devel] 
 New Package Removal because Shared Library Too Large
 from Debugging Symbols
In-Reply-To: <20240120230237.41df2796@Tarkus>
References: <D94C0990-EC93-432F-B10A-C2B81E55BB2C@jgaeb.com>
 <20240120230237.41df2796@Tarkus>
Message-ID: <E8F43369-EC0C-4F59-99D5-2FC1C993DEC0@jgaeb.com>

Hi Ivan,

Thanks, this is very helpful! You are completely right that I misread the message.

I will try including that header in `cpp11.cpp`. Unfortunately, that?s supposed to be programmatically generated, so I?m not sure what the ?right" fix is: most likely there?s some error on my part in how I?ve set up cpp11, but it also seems possible that cpp11 should have detected that that header needs to be included and added it automatically. 

Best,
Hans

> Ivan Krylov <ikrylov at disroot.org> ? 2024?1?20? ??3:02 ???
> 
> ? Sat, 20 Jan 2024 14:38:55 -0500
> Johann Gaebler <me at jgaeb.com> ?????:
> 
>> The issue is that the compiled libraries are too large.
> 
> Was it in the e-mail? As you quite correctly observed, many other
> packages get the NOTE about shared library size.
> 
> It may be not exactly obvious, but the red link saying "LTO" on the
> check page that points to
> <https://www.stats.ox.ac.uk/pub/bdr/LTO/rar.out> is hiding a more
> serious issue:
> 
>> cpp11.cpp:18:13: warning: 'run_testthat_tests' violates the C++ One Definition Rule [-Wodr]
>>   18 | extern SEXP run_testthat_tests(void *);
>>      |             ^
>> /data/gannet/ripley/R/test-dev/testthat/include/testthat/testthat.h:172:17: note: 'run_testthat_tests' was previously declared here
>>  172 | extern "C" SEXP run_testthat_tests(SEXP use_xml_sxp) {
>>      |                 ^
> 
> Modern C++ compilers are painfully pedantic about undefined behaviour
> and can optimise away large sections of code if they think they have a
> proof that your code causes it [*]. If you edit cpp11.cpp to provide the
> correct declaration (#include the testthat header if possible), the
> error should go away.
> 
> -- 
> Best regards,
> Ivan
> 
> [*] For example, see this issue in R: https://bugs.r-project.org/show_bug.cgi?id=18430


From me @end|ng |rom jg@eb@com  Sun Jan 21 02:29:15 2024
From: me @end|ng |rom jg@eb@com (Johann Gaebler)
Date: Sat, 20 Jan 2024 20:29:15 -0500
Subject: [R-pkg-devel] 
 New Package Removal because Shared Library Too Large
 from Debugging Symbols
In-Reply-To: <684ce040-8232-4599-ac25-cf5abcfc8b77@statistik.tu-dortmund.de>
References: <D94C0990-EC93-432F-B10A-C2B81E55BB2C@jgaeb.com>
 <684ce040-8232-4599-ac25-cf5abcfc8b77@statistik.tu-dortmund.de>
Message-ID: <2117B1BC-A641-43B0-AAC2-E8908986E339@jgaeb.com>

Hi Uwe,

You?re completely right. I misunderstood the ?additional issue? and thought it was referring to the ?NOTE.?

Thanks for the help!

Best,
Hans

> Uwe Ligges <ligges at statistik.tu-dortmund.de> ? 2024?1?20? ??7:12 ???
> 
> Others have pointed you to the Additional issue, namely LTO.
> 
> But I really cannot resist:
> You omitted a line from our message that actually explains it. We wrote: "Do remember to look at the 'Additional issues'."
> 
> Best,
> Uwe Ligges
> 
> 
> 
> On 20.01.2024 20:38, Johann Gaebler wrote:
>> Hi everyone,
>> I received the following message regarding  `rar` <https://cran.r-project.org/package=rar>, a package that I put up on CRAN two days ago:
>>> Dear maintainer,
>>> 
>>> Please see the problems shown on
>>> <https://cran.r-project.org/web/checks/check_results_rar.html>.
>>> 
>>> Please correct before 2024-02-02 to safely retain your package on CRAN.
>> The issue is that the compiled libraries are too large. The Mac CRAN checks turned up the following note:
>>> installed size is  8.9Mb
>>> sub-directories of 1Mb or more:
>>>  libs   8.7Mb
>> I have not been able to reproduce the issue either locally or on any machine I have ready access to. I have built it on some of the Rhub and R-Project build systems, and the same issue (with very different `libs` sizes) came up on some of them:
>> ? (RHub) Ubuntu Linux 20.04.1 LTS, R-release, GCC: 18.2Mb,
>> ? (RHub) Fedora Linux, R-devel, clang, gfortran: 6.8Mb,
>> ? (R-Project) r-release-macosx-arm64: 8.5Mb.
>> Based on trying to read up about this, it seems that this is a pretty common problem <http://dirk.eddelbuettel.com/blog/2017/08/14/#009_compact_shared_libraries> for compiled packages because of debugging symbols getting inserted into the shared library file. Using the fix from that blog post where you modify the Makevars to strip debugging symbols from the shared library seems to solve the issue on those build systems, so I feel reasonably confident that this is what?s going on.
>> Apparently many, many existing packages on CRAN have the same issue. However, I?m very new to R package development, so I?m not exactly sure what to do. I have two questions:
>> 1. Is there anything I need to ?fix? here, or should I just make contact with the CRAN folks and bring the fact that this is being caused by debugging symbols to their attention?
>> 2. Regardless of whether or not I have to fix this issue for CRAN, is there a way to strip out the debugging symbols that comports with CRAN policies? The method suggested in the blog post above (adding a phony target in `Makevars` that strips the shared library) seems not to be CRAN-compliant, but I could be mistaken about that. (In particular, I had to modify it locally to get it to run, so I?m not sure what the platform-independent version of it looks like.)
>> Thanks in advance for the help!
>> Sincerely,
>> Johann D. Gaebler
>> 	[[alternative HTML version deleted]]
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From |kry|ov @end|ng |rom d|@root@org  Sun Jan 21 09:44:11 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Sun, 21 Jan 2024 11:44:11 +0300
Subject: [R-pkg-devel] 
 New Package Removal because Shared Library Too Large
 from Debugging Symbols
In-Reply-To: <E8F43369-EC0C-4F59-99D5-2FC1C993DEC0@jgaeb.com>
References: <D94C0990-EC93-432F-B10A-C2B81E55BB2C@jgaeb.com>
 <20240120230237.41df2796@Tarkus>
 <E8F43369-EC0C-4F59-99D5-2FC1C993DEC0@jgaeb.com>
Message-ID: <20240121114411.41ed2c5c@Tarkus>

? Sat, 20 Jan 2024 20:28:00 -0500
Johann Gaebler <me at jgaeb.com> ?????:

> most likely there?s some error on my part in how I?ve set up cpp11,
> but it also seems possible that cpp11 should have detected that that
> header needs to be included and added it automatically

Upon further investigation, it's more complicated than a missing
#include.

cpp11::cpp_register() uses
tools::package_native_routine_registration_skeleton() to generate these
declarations. This function works by scanning the R code for calls to
.Call(), .C(), .Fortran(), and others and then trying to come up with
appropriate prototypes for the native functions being called. For
.Call()s, the function must output the correct type of SEXP for every
argument in the generated declaration.

This works the right way, for example, in R-4.2.2 (2022-11-10) and
today's R-devel, but was broken for a while (e.g. in R-4.3.1 and
R-4.3.2), and the fix, unfortunately, hasn't been backported (not to
R-patched either): https://bugs.r-project.org/show_bug.cgi?id=18585

I can suggest three workarounds.

1. Edit src/cpp11.cpp on a separate "for-CRAN" branch and rebase it on
   top of the main branch every time you update the package.

2. Install R-devel and use it to generate the source package. Strictly
   speaking, this would go against the letter of the CRAN policy
   (builds "should be done with current R-patched or the current
   release of R"), but would at least follow its spirit (use the
   version of R where the known package-building-related bug was fixed).

3. Add a configure script that would modify src/cpp11.cpp while the
   package is being installed. This way, the only thing modifying
   generated code would be more code, which is considered
   architecturally pure by some developers.

   Lots of ways to implement it, too: you can do it in a single shell
   script (using sed or patch -- are these tools guaranteed to be
   available?), delegate to tools/configure.R (that you would also
   write yourself), or go full GNU Autoconf and generate a
   megabyte-sized ./configure from some m4 macros just to replace one
   line.

   There is definitely a lot of performance art value if you go this
   way, but extra code means extra ways for it to go wrong. For more
   style points, make it a Makevars target instead of a configure
   script.

-- 
Best regards,
Ivan


From @@meh@@bdu|@h @end|ng |rom k@u@t@edu@@@  Sun Jan 21 17:51:39 2024
From: @@meh@@bdu|@h @end|ng |rom k@u@t@edu@@@ (Sameh Abdulah)
Date: Sun, 21 Jan 2024 16:51:39 +0000
Subject: [R-pkg-devel] Cannot see the failure output on Fedora clang/gcc
 falvor (page not found)
Message-ID: <VI1P192MB0285585C5A4BE5B950FD7F6EFB762@VI1P192MB0285.EURP192.PROD.OUTLOOK.COM>

Recently, our package was removed from CRAN due to failures across all systems. We've fixed the issue on MacOS systems. However, we cannot access the webpage (page not found) to identify and address the failures on Fedora systems.

https://cran-archive.r-project.org/web/checks/2024/2024-01-12_check_results_MPCR.html

How can we see the failures on these systems?


Best,
--Sameh



-- 

This message and its contents, including attachments are intended solely 
for the original recipient. If you are not the intended recipient or have 
received this message in error, please notify me immediately and delete 
this message from your computer system. Any unauthorized use or 
distribution is prohibited. Please consider the environment before printing 
this email.

	[[alternative HTML version deleted]]


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Mon Jan 22 12:30:46 2024
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Mon, 22 Jan 2024 12:30:46 +0100
Subject: [R-pkg-devel] 
 New Package Removal because Shared Library Too Large
 from Debugging Symbols
In-Reply-To: <20240121114411.41ed2c5c@Tarkus>
References: <D94C0990-EC93-432F-B10A-C2B81E55BB2C@jgaeb.com>
 <20240120230237.41df2796@Tarkus>
 <E8F43369-EC0C-4F59-99D5-2FC1C993DEC0@jgaeb.com>
 <20240121114411.41ed2c5c@Tarkus>
Message-ID: <e83ab772-b5cb-4d12-92d6-90c4712a8df8@gmail.com>


On 1/21/24 09:44, Ivan Krylov via R-package-devel wrote:
> ? Sat, 20 Jan 2024 20:28:00 -0500
> Johann Gaebler <me at jgaeb.com> ?????:
>
>> most likely there?s some error on my part in how I?ve set up cpp11,
>> but it also seems possible that cpp11 should have detected that that
>> header needs to be included and added it automatically
> Upon further investigation, it's more complicated than a missing
> #include.
>
> cpp11::cpp_register() uses
> tools::package_native_routine_registration_skeleton() to generate these
> declarations. This function works by scanning the R code for calls to
> .Call(), .C(), .Fortran(), and others and then trying to come up with
> appropriate prototypes for the native functions being called. For
> .Call()s, the function must output the correct type of SEXP for every
> argument in the generated declaration.
>
> This works the right way, for example, in R-4.2.2 (2022-11-10) and
> today's R-devel, but was broken for a while (e.g. in R-4.3.1 and
> R-4.3.2), and the fix, unfortunately, hasn't been backported (not to
> R-patched either): https://bugs.r-project.org/show_bug.cgi?id=18585
Thanks, ported now to R-patched.
Tomas
>
> I can suggest three workarounds.
>
> 1. Edit src/cpp11.cpp on a separate "for-CRAN" branch and rebase it on
>     top of the main branch every time you update the package.
>
> 2. Install R-devel and use it to generate the source package. Strictly
>     speaking, this would go against the letter of the CRAN policy
>     (builds "should be done with current R-patched or the current
>     release of R"), but would at least follow its spirit (use the
>     version of R where the known package-building-related bug was fixed).
>
> 3. Add a configure script that would modify src/cpp11.cpp while the
>     package is being installed. This way, the only thing modifying
>     generated code would be more code, which is considered
>     architecturally pure by some developers.
>
>     Lots of ways to implement it, too: you can do it in a single shell
>     script (using sed or patch -- are these tools guaranteed to be
>     available?), delegate to tools/configure.R (that you would also
>     write yourself), or go full GNU Autoconf and generate a
>     megabyte-sized ./configure from some m4 macros just to replace one
>     line.
>
>     There is definitely a lot of performance art value if you go this
>     way, but extra code means extra ways for it to go wrong. For more
>     style points, make it a Makevars target instead of a configure
>     script.
>


From iibi@giei m@iii@g oii si@@@com  Mon Jan 22 10:50:33 2024
From: iibi@giei m@iii@g oii si@@@com (iibi@giei m@iii@g oii si@@@com)
Date: Mon, 22 Jan 2024 17:50:33 +0800
Subject: [R-pkg-devel] Assistance Needed for Resolving Submission Issues
 with openaistream Package
Message-ID: <65ae3a6977ee26.30025412.9e9f5f9c@m0.mail.sina.com.cn>

Hi,I am writing to seek guidance regarding some challenges I've encountered while submitting my package, openaistream, to CRAN. I have recently received feedback from the CRAN team, and I'm looking for assistance to address the issues noted.The package in question aims to provide streaming capabilities for OpenAI API interactions and is based on the 'httr2' framework. While the last released version's CRAN status is marked as 'OK: 12', I have been advised to fix certain problems and resubmit a revised version.The specific areas of concern are:License Information: There's a note indicating that the license stub is an "invalid DCF". I've used 'MIT + file LICENSE' as the licensing terms. I would appreciate guidance on how to correctly format this section to meet the DCF standards.General Submission: I've been directed to win-builder pretest for more details. However, I'm finding it challenging to pinpoint the exact issues that need rectification. Any insights or suggestions on common pitfalls or areas to focus on would be immensely helpful.I have thoroughly reviewed the provided links and documentation but would greatly benefit from the community's expertise and experience in addressing these specific concerns. If there are any resources, examples, or advice you can share, it would be greatly appreciated.Windows: <https://win-builder.r-project.org/incoming_pretest/openaistream_0.2.0_20240122_043830/Windows/00check.log>Status: 2 NOTEsDebian: <https://win-builder.r-project.org/incoming_pretest/openaistream_0.2.0_20240122_043830/Debian/00check.log>Status: 2 NOTEs
Best regards,Li Gen
Email: libingfei at sina.comGitHub: https://github.com/libingfei/openaistream
	[[alternative HTML version deleted]]


From |kry|ov @end|ng |rom d|@root@org  Mon Jan 22 15:18:38 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Mon, 22 Jan 2024 17:18:38 +0300
Subject: [R-pkg-devel] Assistance Needed for Resolving Submission Issues
 with openaistream Package
In-Reply-To: <65ae3a6977ee26.30025412.9e9f5f9c@m0.mail.sina.com.cn>
References: <65ae3a6977ee26.30025412.9e9f5f9c@m0.mail.sina.com.cn>
Message-ID: <20240122171838.7ec7885a@arachnoid>

Hello Li Gen and welcome to R-package-devel!

? Mon, 22 Jan 2024 17:50:33 +0800
<libingfei at sina.com> ?????:

> The specific areas of concern are:License Information: There's a note
> indicating that the license stub is an "invalid DCF". I've used 'MIT
> + file LICENSE' as the licensing terms. I would appreciate guidance
> on how to correctly format this section to meet the DCF standards.

Leave just the following lines in the LICENSE file, as it currently is
on CRAN [*]:

YEAR: 2023
COPYRIGHT HOLDER: openaistream authors

Why would you like to change it? CRAN doesn't want packages to provide
yet another copy of the MIT license inside the tarball. The text of the
MIT license is always available in an R install at
file.path(R.home('share'), 'licenses', 'MIT').

If you need a copy of the MIT license inside your GitHub repository,
store it elsewhere (e.g. LICENSE.md) and list it in .Rbuildignore [**].

Since you composed your e-mail in HTML and left your mailer to generate
a plain text equivalent, we only got the latter, somewhat mangled:
https://stat.ethz.ch/pipermail/r-package-devel/2024q1/010356.html

Please compose your messages to R mailing lists in plain text.

-- 
Best regards,
Ivan

[*]
https://cran.r-project.org/web/packages/openaistream/LICENSE

[**]
https://cran.r-project.org/doc/manuals/R-exts.html#Building-package-tarballs


From |kry|ov @end|ng |rom d|@root@org  Mon Jan 22 15:42:06 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Mon, 22 Jan 2024 17:42:06 +0300
Subject: [R-pkg-devel] 
 New Package Removal because Shared Library Too Large
 from Debugging Symbols
In-Reply-To: <e83ab772-b5cb-4d12-92d6-90c4712a8df8@gmail.com>
References: <D94C0990-EC93-432F-B10A-C2B81E55BB2C@jgaeb.com>
 <20240120230237.41df2796@Tarkus>
 <E8F43369-EC0C-4F59-99D5-2FC1C993DEC0@jgaeb.com>
 <20240121114411.41ed2c5c@Tarkus>
 <e83ab772-b5cb-4d12-92d6-90c4712a8df8@gmail.com>
Message-ID: <20240122174206.394ca24f@arachnoid>

On Mon, 22 Jan 2024 12:30:46 +0100
Tomas Kalibera <tomas.kalibera at gmail.com> wrote:

> Thanks, ported now to R-patched.

Thank you!

Is it fine to mention problems like this one in the middle of an
e-mail, or should I have left a note in the Bugzilla instead?

-- 
Best regards,
Ivan


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Mon Jan 22 15:50:44 2024
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Mon, 22 Jan 2024 15:50:44 +0100
Subject: [R-pkg-devel] new maintainer for CRAN package XML
Message-ID: <f6c68c43-54d1-4dde-a394-cc0263457133@statistik.tu-dortmund.de>

Dear package developers,

the CRAN team (and Professor Ripley in particular) has been the defacto 
maintainer of CRAN package 'XML'.
Our hope was that maintainers of packages depending on XML will migrate 
to other packages for reading XML structures. This has not happened and 
we still see dozens of strong dependencies on XML.

So we are looking for a person volunteering to take over 'XML'.
Please let us know if you are interested.

For the CRAN team,
Uwe Ligges

From ||u|@@rev|||@ @end|ng |rom gm@||@com  Mon Jan 22 15:57:40 2024
From: ||u|@@rev|||@ @end|ng |rom gm@||@com (=?UTF-8?Q?Llu=C3=ADs_Revilla?=)
Date: Mon, 22 Jan 2024 15:57:40 +0100
Subject: [R-pkg-devel] Assistance Needed for Resolving Submission Issues
 with openaistream Package
In-Reply-To: <20240122171838.7ec7885a@arachnoid>
References: <65ae3a6977ee26.30025412.9e9f5f9c@m0.mail.sina.com.cn>
 <20240122171838.7ec7885a@arachnoid>
Message-ID: <CAN+W6_s2WuwhZh=Y7suU6KGXPWC0i-ViYLX2mqv29RibgsTU6A@mail.gmail.com>

Hi Li Gen,

This NOTE is part of the new checks on CRAN to comply with its policy.
The error message was introduced in c85587 (2023/11/22), when
incorporating this suggestion
https://bugs.r-project.org/show_bug.cgi?id=18611.
You can see the changes and checks in the browser here:
https://github.com/r-devel/r-svn/commit/c82305de4adc1a8ee01aaf3b4c84bd55721e77fc)
But the solution is what Ivan already wrote: simply provide a file
LICENSE that can be read with read.dcf with those two fields.

Best regards,

Llu?s


On Mon, 22 Jan 2024 at 15:19, Ivan Krylov via R-package-devel
<r-package-devel at r-project.org> wrote:
>
> Hello Li Gen and welcome to R-package-devel!
>
> ? Mon, 22 Jan 2024 17:50:33 +0800
> <libingfei at sina.com> ?????:
>
> > The specific areas of concern are:License Information: There's a note
> > indicating that the license stub is an "invalid DCF". I've used 'MIT
> > + file LICENSE' as the licensing terms. I would appreciate guidance
> > on how to correctly format this section to meet the DCF standards.
>
> Leave just the following lines in the LICENSE file, as it currently is
> on CRAN [*]:
>
> YEAR: 2023
> COPYRIGHT HOLDER: openaistream authors
>
> Why would you like to change it? CRAN doesn't want packages to provide
> yet another copy of the MIT license inside the tarball. The text of the
> MIT license is always available in an R install at
> file.path(R.home('share'), 'licenses', 'MIT').
>
> If you need a copy of the MIT license inside your GitHub repository,
> store it elsewhere (e.g. LICENSE.md) and list it in .Rbuildignore [**].
>
> Since you composed your e-mail in HTML and left your mailer to generate
> a plain text equivalent, we only got the latter, somewhat mangled:
> https://stat.ethz.ch/pipermail/r-package-devel/2024q1/010356.html
>
> Please compose your messages to R mailing lists in plain text.
>
> --
> Best regards,
> Ivan
>
> [*]
> https://cran.r-project.org/web/packages/openaistream/LICENSE
>
> [**]
> https://cran.r-project.org/doc/manuals/R-exts.html#Building-package-tarballs
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From |kry|ov @end|ng |rom d|@root@org  Mon Jan 22 16:10:52 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Mon, 22 Jan 2024 18:10:52 +0300
Subject: [R-pkg-devel] Cannot see the failure output on Fedora clang/gcc
 falvor (page not found)
In-Reply-To: <VI1P192MB0285585C5A4BE5B950FD7F6EFB762@VI1P192MB0285.EURP192.PROD.OUTLOOK.COM>
References: <VI1P192MB0285585C5A4BE5B950FD7F6EFB762@VI1P192MB0285.EURP192.PROD.OUTLOOK.COM>
Message-ID: <20240122181052.0eef0be8@arachnoid>

On Sun, 21 Jan 2024 16:51:39 +0000
Sameh Abdulah <sameh.abdulah at kaust.edu.sa> wrote:

> However, we cannot access the webpage (page not found) to identify
> and address the failures on Fedora systems.
> 
> https://cran-archive.r-project.org/web/checks/2024/2024-01-12_check_results_MPCR.html
> 
> How can we see the failures on these systems?

I cannot help you with the exact output from the Fedora system (I think
it's lost), but here's how the package fails on mine:

* installing *source* package 'MPCR' ...
** using staged installation
Linux
------------------------------------------------------------
/tmp/RtmpCSPOGc/Rbuild6043fb1a651/MPCR
/usr/bin/cmake
CMake is installed in: /usr/bin
-- The C compiler identification is GNU 12.2.0
-- The CXX compiler identification is GNU 12.2.0
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: /usr/bin/gcc - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: /usr/bin/g++ - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- WORKING ON RELEASE MODE
MPCR Install Result : FALSE
-- Found OpenMP_C: -fopenmp (found version "4.5")
-- Found OpenMP_CXX: -fopenmp (found version "4.5")
-- Found OpenMP: TRUE (found version "4.5")
OpenMp Found
R Include Path :  /home/ivan/R-build/include
Rcpp Lib Path :  /home/ivan/R-build/library/Rcpp
R Home Path :  /home/ivan/R-build
CMake Error at cmake/FindR.cmake:63 (find_library):
  Could not find R_LIB using the following names: libR.so
Call Stack (most recent call first):
  CMakeLists.txt:70 (FIND_PACKAGE)


-- Configuring incomplete, errors occurred!
See also "/tmp/RtmpCSPOGc/Rbuild6043fb1a651/MPCR/bin/CMakeFiles/CMakeOutput.log".
make: *** No rule to make target 'clean'.  Stop.
make: *** No rule to make target 'all'.  Stop.
cp: cannot stat '/tmp/RtmpCSPOGc/Rbuild6043fb1a651/MPCR/bin/src/libmpcr.so': No such file or directory
Failed: libmpcr.so -> src
** libs
make: Nothing to be done for 'all'.
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
Error: package or namespace load failed for 'MPCR' in library.dynam(lib, package, package.lib):
 shared object 'MPCR.so' not found

It is not the default to build R as a shared library, and this
installation of R has been built without --enable-R-shlib. I'm sure
that with enough effort it's possible to propagate the information from
R to CMake so that it would make you a shared library in the correct
manner, but I think it's easier to separate your code into two parts:

 1. One part should contain most of your code, without the dependencies
    on R. It can be built using CMake if that's what you prefer. It
    will probably be more convenient to build it as a static library.

 2. The other part will be the R interface. Let the R build system
    (described in WRE 1.2 [*] and below, especially 1.2.6) link the
    final shared library from the small remaining part of the source
    files (those that include R-related headers) and the static library
    from the previous step. If you play your cards right, it will also
    work on Windows without significant additional effort.

Have you considered linking your R package against the BLAS and LAPACK
that already come with R? This may not give the user the best possible
performance ever, but those who do care about performance have probably
installed a copy of BLAS of their own choice and may not prefer an
extra copy of OpenBLAS that may or may not match the optimal parameters
for their hardware. Same goes for libgfortran (that may be required
depending on what you're linking) [**].

This would also make it easier to comply with CRAN policy on external
libraries [***]: if you want to download software during package
installation, you may be required to host a fixed version of the
package on something extra reliable (like Zenodo) and verify a
cryptographic hash of the file you download before using it.

-- 
Best regards,
Ivan

[*]
https://cran.r-project.org/doc/manuals/R-exts.html#Configure-and-cleanup

[**]
https://cran.r-project.org/doc/manuals/R-exts.html#index-FLIBS

[***]
https://cran.r-project.org/web/packages/using_rust.html
https://cran.r-project.org/web/packages/external_libs.html


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Mon Jan 22 17:14:04 2024
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Mon, 22 Jan 2024 17:14:04 +0100
Subject: [R-pkg-devel] 
 New Package Removal because Shared Library Too Large
 from Debugging Symbols
In-Reply-To: <20240122174206.394ca24f@arachnoid>
References: <D94C0990-EC93-432F-B10A-C2B81E55BB2C@jgaeb.com>
 <20240120230237.41df2796@Tarkus>
 <E8F43369-EC0C-4F59-99D5-2FC1C993DEC0@jgaeb.com>
 <20240121114411.41ed2c5c@Tarkus>
 <e83ab772-b5cb-4d12-92d6-90c4712a8df8@gmail.com>
 <20240122174206.394ca24f@arachnoid>
Message-ID: <1d7380ca-53d9-417c-9ef6-1ff3509aef4c@gmail.com>


On 1/22/24 15:42, Ivan Krylov via R-package-devel wrote:
> On Mon, 22 Jan 2024 12:30:46 +0100
> Tomas Kalibera <tomas.kalibera at gmail.com> wrote:
>
>> Thanks, ported now to R-patched.
> Thank you!
>
> Is it fine to mention problems like this one in the middle of an
> e-mail, or should I have left a note in the Bugzilla instead?
>
In this case a comment on bugzilla would have been well justified: it 
was a regression, fixed many months ago, with a simple fix, so something 
quite clearly intended to be ported. In other cases the decision what to 
port and when may be harder.

Yes, inside a bigger email, reports can get overlooked, particularly 
when in a thread with a rather different subject. It wasn't overlooked 
this time thanks to Martin.

Tomas


From ||u|@@rev|||@ @end|ng |rom gm@||@com  Tue Jan 23 01:03:41 2024
From: ||u|@@rev|||@ @end|ng |rom gm@||@com (=?UTF-8?Q?Llu=C3=ADs_Revilla?=)
Date: Tue, 23 Jan 2024 01:03:41 +0100
Subject: [R-pkg-devel] new maintainer for CRAN package XML
In-Reply-To: <f6c68c43-54d1-4dde-a394-cc0263457133@statistik.tu-dortmund.de>
References: <f6c68c43-54d1-4dde-a394-cc0263457133@statistik.tu-dortmund.de>
Message-ID: <CAN+W6_si-iXLZkBKCUgLzagUzGV7CT62NPzcrMAx=PM6KiwnVA@mail.gmail.com>

Dear Uwe and the CRAN team,

Many thanks for maintaining the package for so long (>10 years!).

I see the latest changes are in some internal C code related to
updating the libxml2 library.
In CRAN's experience, is this the highest time consuming task?

I have some questions about how the maintenance transfer will go:
Would someone from the CRAN team help/review the new maintainer for some time?
Or would there be a change in the "cre" role and that's all the
further involvement of the CRAN team with the package (besides the
excellent checks on CRAN)?

For anyone considering it, I analyzed a bit the situation of XML and
RCurl: https://llrs.dev/post/2023/05/03/cran-maintained-packages/
In short, with ~300 direct dependencies, and many highly used, across
CRAN and Bioconductor's packages.

Kind regards,

Llu?s


On Mon, 22 Jan 2024 at 15:51, Uwe Ligges
<ligges at statistik.tu-dortmund.de> wrote:
>
> Dear package developers,
>
> the CRAN team (and Professor Ripley in particular) has been the defacto
> maintainer of CRAN package 'XML'.
> Our hope was that maintainers of packages depending on XML will migrate
> to other packages for reading XML structures. This has not happened and
> we still see dozens of strong dependencies on XML.
>
> So we are looking for a person volunteering to take over 'XML'.
> Please let us know if you are interested.
>
> For the CRAN team,
> Uwe Ligges
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From p@tr|ck@g|r@udoux @end|ng |rom un|v-|comte@|r  Tue Jan 23 19:39:54 2024
From: p@tr|ck@g|r@udoux @end|ng |rom un|v-|comte@|r (Patrick Giraudoux)
Date: Tue, 23 Jan 2024 19:39:54 +0100
Subject: [R-pkg-devel] lost braces note on CRAN pretest related to \itemize
In-Reply-To: <mailman.10169.9.1705921202.31571.r-package-devel@r-project.org>
References: <mailman.10169.9.1705921202.31571.r-package-devel@r-project.org>
Message-ID: <94a7abb7-fbcd-4852-8170-2532b9af58aa@univ-fcomte.fr>

Dear listers,

I meet a problem with the? submission of the package pgirmess. In fact 
the package goes through R CMD check --as-cran and R-wind-builder 
smoothly with no problem, but submitted to CRAN, I get this:

Flavor: r-devel-linux-x86_64-debian-gcc, r-devel-windows-x86_64
Check: CRAN incoming feasibility, Result: Note_to_CRAN_maintainers
   Maintainer: 'Patrick Giraudoux<patrick.giraudoux at univ-fcomte.fr>'

Flavor: r-devel-linux-x86_64-debian-gcc, r-devel-windows-x86_64
Check: Rd files, Result: NOTE
   checkRd: (-1) mergeTrackObs.rd:24: Lost braces in \itemize; \value handles \item{}{} directly
   checkRd: (-1) mergeTrackObs.rd:25: Lost braces in \itemize; \value handles \item{}{} directly
   checkRd: (-1) mergeTrackObs.rd:26: Lost braces in \itemize; \value handles \item{}{} directly
   checkRd: (-1) selMod.rd:29-31: Lost braces in \itemize; meant \describe ?
   checkRd: (-1) selMod.rd:32-33: Lost braces in \itemize; meant \describe ?
   checkRd: (-1) selMod.rd:54: Lost braces in \itemize; meant \describe ?
   checkRd: (-1) selMod.rd:55: Lost braces in \itemize; meant \describe ?

The code that seems to make problem (although braces are balanced; I 
wonder why a claim 'lost braces') is

- for mergeTrackObs.rd

\value{
 ? A \code{\link[sf]{sfc}} object, of POINT geometry, with the following 
columns:
 ? \itemize{
 ? \item{ID}{ ID number}
 ? \item{nObs}{ The number of observations in the interval}
 ? \item{geometry} {POINT geometry}
 ? }
}

- for selMod.rd

\details{
 ? This function provides parameters used in the information theoretic 
methods for model comparisons.
 ? \itemize{
 ? \item{.}{lm and glm objects can be passed directly as the upper scope 
of term addition (all terms added).
 ? Every model from y\eqn{\sim}{~}1 is computed adding one term at a 
time until the upper scope model is derived. This is a stepwise analysis 
where the terms are added sequentially and this does NOT provide all 
combinations of terms and interactions. Offset terms cannot be proceeded 
here.
 ? }
 ? \item{.}{A list of user specified lm, glm, nls, lme or nlme objects 
(actually any object for which AIC and logLik functions are applicable) 
to compare can alternately be passed.
 ? }
 ? }
}

Has anyone an idea about what is going wrong ?

Patrick





	[[alternative HTML version deleted]]


From edd @end|ng |rom deb|@n@org  Tue Jan 23 19:58:46 2024
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Tue, 23 Jan 2024 12:58:46 -0600
Subject: [R-pkg-devel] 
 lost braces note on CRAN pretest related to \itemize
In-Reply-To: <94a7abb7-fbcd-4852-8170-2532b9af58aa@univ-fcomte.fr>
References: <mailman.10169.9.1705921202.31571.r-package-devel@r-project.org>
 <94a7abb7-fbcd-4852-8170-2532b9af58aa@univ-fcomte.fr>
Message-ID: <26032.3174.970615.617686@rob.eddelbuettel.com>


On 23 January 2024 at 19:39, Patrick Giraudoux wrote:
| Has anyone an idea about what is going wrong ?

\item has no braces following it.  From a package I submitted today and for
which I still have NEWS.Rd in the editor (indented here):

  \section{Changes in version 0.0.22 (2024-01-23)}{
    \itemize{
      \item Replace empty examples macros to satisfy CRAN request.
    }
  }

Hth,  Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From |kry|ov @end|ng |rom d|@root@org  Tue Jan 23 19:59:54 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Tue, 23 Jan 2024 21:59:54 +0300
Subject: [R-pkg-devel] 
 lost braces note on CRAN pretest related to \itemize
In-Reply-To: <94a7abb7-fbcd-4852-8170-2532b9af58aa@univ-fcomte.fr>
References: <mailman.10169.9.1705921202.31571.r-package-devel@r-project.org>
 <94a7abb7-fbcd-4852-8170-2532b9af58aa@univ-fcomte.fr>
Message-ID: <20240123215954.0afb8e9d@Tarkus>

? Tue, 23 Jan 2024 19:39:54 +0100
Patrick Giraudoux <patrick.giraudoux at univ-fcomte.fr> ?????:

>  ? \itemize{
>  ? \item{.}{lm and glm objects can be passed directly as the upper
> scope of term addition (all terms added).

Inside the \itemize and \enumerate commands, the \item command doesn't
take any arguments:
https://cran.r-project.org/doc/manuals/R-exts.html#Lists-and-tables

Instead, it starts a new paragraph with a number (\enumerate) or a
bullet point (\itemize). R CMD check is reminding you that \itemize{
\item{foo}{bar} } is equivalent to \itemize{ \item foo bar } without
any braces.

If you meant to highlight a word by making it an argument of the \item
command, use the \describe command. Here, you're highlighting a dot,
which would be rendered with a bullet point before it, so it's probably
neither semantically nor visually appropriate.

> \value{
>  ? A \code{\link[sf]{sfc}} object, of POINT geometry, with the
> following columns:
>  ? \itemize{
>  ? \item{ID}{ ID number}

The same problem applies here.

Additionally, R CMD check is reminding you that \value{} is implicitly
a special case of a \describe{} environment:
https://cran.r-project.org/doc/manuals/R-exts.html#index-_005cvalue

Since you're already using \item{}{} labels to name the components of
the value, just drop the \itemize{} (but keep its contents). \value{} is
enough.

-- 
Best regards,
Ivan


From p@tr|ck@g|r@udoux @end|ng |rom un|v-|comte@|r  Tue Jan 23 20:08:20 2024
From: p@tr|ck@g|r@udoux @end|ng |rom un|v-|comte@|r (Patrick Giraudoux)
Date: Tue, 23 Jan 2024 20:08:20 +0100
Subject: [R-pkg-devel] 
 lost braces note on CRAN pretest related to \itemize
In-Reply-To: <26032.3174.970615.617686@rob.eddelbuettel.com>
References: <mailman.10169.9.1705921202.31571.r-package-devel@r-project.org>
 <94a7abb7-fbcd-4852-8170-2532b9af58aa@univ-fcomte.fr>
 <26032.3174.970615.617686@rob.eddelbuettel.com>
Message-ID: <68b9da72-26ad-4f27-8839-aa5b2a65cc6a@univ-fcomte.fr>

OK. Clear enough. CRAN applies a new "filter" as it was going through 
without crying a note since decades ;-). However, indeed, re-checking 
the manual "Writing R extensions" my syntax was wrong...
Thanks for the guidance,
Patrick

Le 23/01/2024 ? 19:58, Dirk Eddelbuettel a ?crit?:
> On 23 January 2024 at 19:39, Patrick Giraudoux wrote:
> | Has anyone an idea about what is going wrong ?
>
> \item has no braces following it.  From a package I submitted today and for
> which I still have NEWS.Rd in the editor (indented here):
>
>    \section{Changes in version 0.0.22 (2024-01-23)}{
>      \itemize{
>        \item Replace empty examples macros to satisfy CRAN request.
>      }
>    }
>
> Hth,  Dirk
>

	[[alternative HTML version deleted]]


From georg|@bo@hn@kov @end|ng |rom m@nche@ter@@c@uk  Tue Jan 23 21:14:13 2024
From: georg|@bo@hn@kov @end|ng |rom m@nche@ter@@c@uk (Georgi Boshnakov)
Date: Tue, 23 Jan 2024 20:14:13 +0000
Subject: [R-pkg-devel] 
 lost braces note on CRAN pretest related to \itemize
In-Reply-To: <68b9da72-26ad-4f27-8839-aa5b2a65cc6a@univ-fcomte.fr>
References: <mailman.10169.9.1705921202.31571.r-package-devel@r-project.org>
 <94a7abb7-fbcd-4852-8170-2532b9af58aa@univ-fcomte.fr>
 <26032.3174.970615.617686@rob.eddelbuettel.com>
 <68b9da72-26ad-4f27-8839-aa5b2a65cc6a@univ-fcomte.fr>
Message-ID: <LO0P265MB63252FC9F918C154634DD11BAE742@LO0P265MB6325.GBRP265.PROD.OUTLOOK.COM>

The notes you get illustrate why they are useful, if you look at your rendered documentation you probably will see something wrong. Thousands of packages on CRAN, including some of mines have had this kind of infelicities for years.

Firstly, the two sets of braces suggest that you meant a description environment, not itemize (in which  its only argument doesn't need braces).

Secondly, in the value section, \item is implicitly enclosed in \describe and you don't need to include the latter.

Georgi Boshnakov


Sent from Outlook for Android<https://aka.ms/AAb9ysg>

________________________________
From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Patrick Giraudoux <patrick.giraudoux at univ-fcomte.fr>
Sent: Tuesday, January 23, 2024 7:09:22 pm
To: Dirk Eddelbuettel <edd at debian.org>
Cc: R Package Development <r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel]  lost braces note on CRAN pretest related to \itemize

OK. Clear enough. CRAN applies a new "filter" as it was going through
without crying a note since decades ;-). However, indeed, re-checking
the manual "Writing R extensions" my syntax was wrong...
Thanks for the guidance,
Patrick

Le 23/01/2024 ? 19:58, Dirk Eddelbuettel a ?crit :
> On 23 January 2024 at 19:39, Patrick Giraudoux wrote:
> | Has anyone an idea about what is going wrong ?
>
> \item has no braces following it.  From a package I submitted today and for
> which I still have NEWS.Rd in the editor (indented here):
>
>    \section{Changes in version 0.0.22 (2024-01-23)}{
>      \itemize{
>        \item Replace empty examples macros to satisfy CRAN request.
>      }
>    }
>
> Hth,  Dirk
>

        [[alternative HTML version deleted]]

______________________________________________
R-package-devel at r-project.org mailing list
https://urldefense.com/v3/__https://stat.ethz.ch/mailman/listinfo/r-package-devel__;!!PDiH4ENfjr2_Jw!Gu9AhS4Yi4k5IC8TXv4B8xpznl-8-Jhl-cdxRZ6zVrRCdmDaSTVYpaG5XDoitdms9FuHQGV7adP-Q6WD6w2bMws_b5UnszsH5VsXFBMUIvFX4Nc$ [stat[.]ethz[.]ch]


	[[alternative HTML version deleted]]


From c@chw@rz@t@t@|uc@ @end|ng |rom gm@||@com  Wed Jan 24 04:22:43 2024
From: c@chw@rz@t@t@|uc@ @end|ng |rom gm@||@com (Carl Schwarz)
Date: Tue, 23 Jan 2024 19:22:43 -0800
Subject: [R-pkg-devel] How to debug segfault when running build -> document
 in Rstudio that includes TMB module
Message-ID: <CADtpigYViZ+2GJq+XQyJ6GeyEZ_CWMnUPg20-LcdLKC3GWvVxA@mail.gmail.com>

I'm trying to update my SPAS package to respond to a CRAN check. Before
starting the changes, I tried to rebuild my package, but now get a segfault
when I try to do a devtools::document() or devtools::check(args =
c('--as-cran')). See below for output from the Rstudio "Build" window.

I've
- reinstalled ALL packages
- reinstalled R (4.3.2 on MacOS Intel Chip)
- reinstalled Rstudio

When I try a rebuild/document on a sister package it runs fine, so I
suspect that the problem is related to using a TMB module that is part of
the SPAS package written in Cpp.

How do I start to "debug" this to identify the problem?

Thanks
Carl Schwarz




==> devtools::document(roclets = c('rd', 'collate', 'namespace', 'vignette'))
? Updating SPAS documentation? Loading SPAS

 *** caught segfault ***
address 0x54e40, cause 'memory not mapped'

Traceback:
 1: dyn.load(dll_copy_file)
 2: library.dynam2(path, lib)
 3: load_dll(path)
 4: pkgload::load_all(path, helpers = FALSE, attach_testthat = FALSE)
 5: load_code(base_path)
 6: roxygen2::roxygenise(pkg$path, roclets)
 7: devtools::document(roclets = c("rd", "collate", "namespace",
"vignette"))
 8: withCallingHandlers(expr, packageStartupMessage = function(c)
tryInvokeRestart("muffleMessage"))
 9: suppressPackageStartupMessages({    oldLC <-
Sys.getlocale(category = "LC_COLLATE")    Sys.setlocale(category =
"LC_COLLATE", locale = "C")    on.exit(Sys.setlocale(category =
"LC_COLLATE", locale = oldLC))    devtools::document(roclets = c("rd",
"collate", "namespace",         "vignette"))})
An irrecoverable exception occurred. R is aborting now ...

Exited with status 139.

	[[alternative HTML version deleted]]


From j@y|@mb20 @end|ng |rom gm@||@com  Wed Jan 24 04:35:31 2024
From: j@y|@mb20 @end|ng |rom gm@||@com (James Lamb)
Date: Tue, 23 Jan 2024 21:35:31 -0600
Subject: [R-pkg-devel] 
 How to debug segfault when running build -> document
 in Rstudio that includes TMB module
In-Reply-To: <CADtpigYViZ+2GJq+XQyJ6GeyEZ_CWMnUPg20-LcdLKC3GWvVxA@mail.gmail.com>
References: <CADtpigYViZ+2GJq+XQyJ6GeyEZ_CWMnUPg20-LcdLKC3GWvVxA@mail.gmail.com>
Message-ID: <CADPubGQcowMyyZUCHYu=4ndjyB9xAu4gLLOjgKjtS1L_kqdNVQ@mail.gmail.com>

Carl,

Consider performing these tasks without the use of the 'devtools' package,
running the following from a shell.

```shell
R CMD build .
R CMD INSTALL --with-keep.source ./SPAS_*.tar.gz

# (assuming you use roxygen2)
Rscript -e "roxygen2::roxygenize(load = 'installed')"

R CMD check --as-cran ./SPAS_*.tar.gz
```

If those commands are successful, then you know the problem lies somewhere
in the difference between that approach and what 'devtools' does, which
might help to narrow it down.

Cheers,

-James


On Tue, Jan 23, 2024 at 9:23?PM Carl Schwarz <cschwarzstatsfuca at gmail.com>
wrote:

> I'm trying to update my SPAS package to respond to a CRAN check. Before
> starting the changes, I tried to rebuild my package, but now get a segfault
> when I try to do a devtools::document() or devtools::check(args =
> c('--as-cran')). See below for output from the Rstudio "Build" window.
>
> I've
> - reinstalled ALL packages
> - reinstalled R (4.3.2 on MacOS Intel Chip)
> - reinstalled Rstudio
>
> When I try a rebuild/document on a sister package it runs fine, so I
> suspect that the problem is related to using a TMB module that is part of
> the SPAS package written in Cpp.
>
> How do I start to "debug" this to identify the problem?
>
> Thanks
> Carl Schwarz
>
>
>
>
> ==> devtools::document(roclets = c('rd', 'collate', 'namespace',
> 'vignette'))
> ? Updating SPAS documentation? Loading SPAS
>
>  *** caught segfault ***
> address 0x54e40, cause 'memory not mapped'
>
> Traceback:
>  1: dyn.load(dll_copy_file)
>  2: library.dynam2(path, lib)
>  3: load_dll(path)
>  4: pkgload::load_all(path, helpers = FALSE, attach_testthat = FALSE)
>  5: load_code(base_path)
>  6: roxygen2::roxygenise(pkg$path, roclets)
>  7: devtools::document(roclets = c("rd", "collate", "namespace",
> "vignette"))
>  8: withCallingHandlers(expr, packageStartupMessage = function(c)
> tryInvokeRestart("muffleMessage"))
>  9: suppressPackageStartupMessages({    oldLC <-
> Sys.getlocale(category = "LC_COLLATE")    Sys.setlocale(category =
> "LC_COLLATE", locale = "C")    on.exit(Sys.setlocale(category =
> "LC_COLLATE", locale = oldLC))    devtools::document(roclets = c("rd",
> "collate", "namespace",         "vignette"))})
> An irrecoverable exception occurred. R is aborting now ...
>
> Exited with status 139.
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


-- 
James Lamb (he/him)
GitHub <https://github.com/jameslamb> | LinkedIn
<https://www.linkedin.com/in/jameslamb1/>

	[[alternative HTML version deleted]]


From @ergue|@@oko| @end|ng |rom gm@||@com  Wed Jan 24 09:03:11 2024
From: @ergue|@@oko| @end|ng |rom gm@||@com (Serguei Sokol)
Date: Wed, 24 Jan 2024 09:03:11 +0100
Subject: [R-pkg-devel] 
 How to debug segfault when running build -> document
 in Rstudio that includes TMB module
In-Reply-To: <CADtpigYViZ+2GJq+XQyJ6GeyEZ_CWMnUPg20-LcdLKC3GWvVxA@mail.gmail.com>
References: <CADtpigYViZ+2GJq+XQyJ6GeyEZ_CWMnUPg20-LcdLKC3GWvVxA@mail.gmail.com>
Message-ID: <8a8e07b0-2fe9-410b-a9f4-15ab6ebe9f91@gmail.com>

Le 24/01/2024 ? 04:22, Carl Schwarz a ?crit?:
> I'm trying to update my SPAS package to respond to a CRAN check. Before
> starting the changes, I tried to rebuild my package, but now get a segfault
> when I try to do a devtools::document() or devtools::check(args =
> c('--as-cran')). See below for output from the Rstudio "Build" window.
> 
> I've
> - reinstalled ALL packages
> - reinstalled R (4.3.2 on MacOS Intel Chip)
> - reinstalled Rstudio
> 
> When I try a rebuild/document on a sister package it runs fine, so I
> suspect that the problem is related to using a TMB module that is part of
> the SPAS package written in Cpp.
> 
> How do I start to "debug" this to identify the problem?
Why not simply run devtools::document() from 'R -d gdb' ?

Best,
Serguei.

> 
> Thanks
> Carl Schwarz
> 
> 
> 
> 
> ==> devtools::document(roclets = c('rd', 'collate', 'namespace', 'vignette'))
> ? Updating SPAS documentation? Loading SPAS
> 
>   *** caught segfault ***
> address 0x54e40, cause 'memory not mapped'
> 
> Traceback:
>   1: dyn.load(dll_copy_file)
>   2: library.dynam2(path, lib)
>   3: load_dll(path)
>   4: pkgload::load_all(path, helpers = FALSE, attach_testthat = FALSE)
>   5: load_code(base_path)
>   6: roxygen2::roxygenise(pkg$path, roclets)
>   7: devtools::document(roclets = c("rd", "collate", "namespace",
> "vignette"))
>   8: withCallingHandlers(expr, packageStartupMessage = function(c)
> tryInvokeRestart("muffleMessage"))
>   9: suppressPackageStartupMessages({    oldLC <-
> Sys.getlocale(category = "LC_COLLATE")    Sys.setlocale(category =
> "LC_COLLATE", locale = "C")    on.exit(Sys.setlocale(category =
> "LC_COLLATE", locale = oldLC))    devtools::document(roclets = c("rd",
> "collate", "namespace",         "vignette"))})
> An irrecoverable exception occurred. R is aborting now ...
> 
> Exited with status 139.
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From jeroenoom@ @end|ng |rom gm@||@com  Wed Jan 24 15:59:39 2024
From: jeroenoom@ @end|ng |rom gm@||@com (Jeroen Ooms)
Date: Wed, 24 Jan 2024 15:59:39 +0100
Subject: [R-pkg-devel] new maintainer for CRAN package XML
In-Reply-To: <f6c68c43-54d1-4dde-a394-cc0263457133@statistik.tu-dortmund.de>
References: <f6c68c43-54d1-4dde-a394-cc0263457133@statistik.tu-dortmund.de>
Message-ID: <CABFfbXvZ4b9PQe=fA6CJ=Udq9ektOC+=ht+bH2HoKUktThRfeA@mail.gmail.com>

On Mon, Jan 22, 2024 at 3:51?PM Uwe Ligges
<ligges at statistik.tu-dortmund.de> wrote:
>
> Dear package developers,
>
> the CRAN team (and Professor Ripley in particular) has been the defacto
> maintainer of CRAN package 'XML'.
> Our hope was that maintainers of packages depending on XML will migrate
> to other packages for reading XML structures. This has not happened and
> we still see dozens of strong dependencies on XML.

How is this hope communicated? Many R users assume that XML package is
in great shape and the preferable choice because it is maintained by
the CRAN team and r-core members.

Perhaps one could follow the precedent from the rgdal retirement, and
set a deadline.

One way to communicate this effectively would be by introducing a
formal deprecation field in the package description. This could then
be displayed on the XML CRAN html page, and when loading the package
interactively. Other packages that import such a deprecated package
could be given a CMD check warning.


From emm@nue|@b|onde|1 @end|ng |rom gm@||@com  Wed Jan 24 16:38:49 2024
From: emm@nue|@b|onde|1 @end|ng |rom gm@||@com (Emmanuel Blondel)
Date: Wed, 24 Jan 2024 16:38:49 +0100
Subject: [R-pkg-devel] new maintainer for CRAN package XML
In-Reply-To: <CABFfbXvZ4b9PQe=fA6CJ=Udq9ektOC+=ht+bH2HoKUktThRfeA@mail.gmail.com>
References: <f6c68c43-54d1-4dde-a394-cc0263457133@statistik.tu-dortmund.de>
 <CABFfbXvZ4b9PQe=fA6CJ=Udq9ektOC+=ht+bH2HoKUktThRfeA@mail.gmail.com>
Message-ID: <21d76136-65f7-472d-b14c-322a53a559b7@gmail.com>

if XML is deprecated, then what would be the choice for a package 
maintainer? Move to xml2 probably at some point I assume

I use XML in the R packages I've been developing. For some of them, I 
started before CRAN started being the maintainer, and before xml2 
inception. The thing is that XML fulfills requirements, it works and 
fulfills needs of depending packages that made the choice to use it. For 
this, it deserves to be maintained in CRAN, without having to enter into 
comparison exercices with other packages that , as of today, may be 
better to rely on (with certainly very good reasons).

Moving to xml2 (or whatever other package), which although I could agree 
on the principle, can be costly for packages that use extensively XML. 
Doing so would mean that we first get the assurance that all XML 
features are covered elsewhere, and can be migrated smoothly.

In any case, please acknowledge that this kind of migration may take 
time and require resources that vary (or even are missing) depending on 
the package projects. I doubt having CRAN setting a common deadline for 
retirement is a good way to foster an efficient maintenance of R 
packages depending on XML. It would be good to receive guidance how to 
migrate, while ensuring backward compatibility on our package features.

Best

Le 24/01/2024 ? 15:59, Jeroen Ooms a ?crit?:
> On Mon, Jan 22, 2024 at 3:51?PM Uwe Ligges
> <ligges at statistik.tu-dortmund.de> wrote:
>> Dear package developers,
>>
>> the CRAN team (and Professor Ripley in particular) has been the defacto
>> maintainer of CRAN package 'XML'.
>> Our hope was that maintainers of packages depending on XML will migrate
>> to other packages for reading XML structures. This has not happened and
>> we still see dozens of strong dependencies on XML.
> How is this hope communicated? Many R users assume that XML package is
> in great shape and the preferable choice because it is maintained by
> the CRAN team and r-core members.
>
> Perhaps one could follow the precedent from the rgdal retirement, and
> set a deadline.
>
> One way to communicate this effectively would be by introducing a
> formal deprecation field in the package description. This could then
> be displayed on the XML CRAN html page, and when loading the package
> interactively. Other packages that import such a deprecated package
> could be given a CMD check warning.
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Wed Jan 24 17:06:01 2024
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Wed, 24 Jan 2024 17:06:01 +0100
Subject: [R-pkg-devel] new maintainer for CRAN package XML
In-Reply-To: <21d76136-65f7-472d-b14c-322a53a559b7@gmail.com>
References: <f6c68c43-54d1-4dde-a394-cc0263457133@statistik.tu-dortmund.de>
 <CABFfbXvZ4b9PQe=fA6CJ=Udq9ektOC+=ht+bH2HoKUktThRfeA@mail.gmail.com>
 <21d76136-65f7-472d-b14c-322a53a559b7@gmail.com>
Message-ID: <9c7c5b69-13fa-4234-965f-0d834baf37c2@statistik.tu-dortmund.de>



On 24.01.2024 16:38, Emmanuel Blondel wrote:
> if XML is deprecated, then what would be the choice for a package 
> maintainer? Move to xml2 probably at some point I assume
> 
> I use XML in the R packages I've been developing. For some of them, I 
> started before CRAN started being the maintainer, and before xml2 
> inception. The thing is that XML fulfills requirements, it works and 
> fulfills needs of depending packages that made the choice to use it. For 
> this, it deserves to be maintained in CRAN, without having to enter into 
> comparison exercices with other packages that , as of today, may be 
> better to rely on (with certainly very good reasons).
> 
> Moving to xml2 (or whatever other package), which although I could agree 
> on the principle, can be costly for packages that use extensively XML. 
> Doing so would mean that we first get the assurance that all XML 
> features are covered elsewhere, and can be migrated smoothly.
> 
> In any case, please acknowledge that this kind of migration may take 
> time and require resources that vary (or even are missing) depending on 
> the package projects. I doubt having CRAN setting a common deadline for 
> retirement is a good way to foster an efficient maintenance of R 
> packages depending on XML. It would be good to receive guidance how to 
> migrate, while ensuring backward compatibility on our package features.

We learned that it is hard to fade out XML support, and CRAN took over 
maintainance as XML had too many reverse dependencies.
CRAN certainly does not have the resources to be able to deprecate XML 
in the same way as Roger Bivand did for rgdal.
So now we are looking for a new maintainer on a public list, feel free 
to raise your hand and take over. Then you could even consider to 
deprecate it and help other maintainers to migrate.

I won't spend more time on any discussions. We are just looking for a 
volunteer.

Best,
Uwe Ligges



> Best
> 
> Le 24/01/2024 ? 15:59, Jeroen Ooms a ?crit?:
>> On Mon, Jan 22, 2024 at 3:51?PM Uwe Ligges
>> <ligges at statistik.tu-dortmund.de> wrote:
>>> Dear package developers,
>>>
>>> the CRAN team (and Professor Ripley in particular) has been the defacto
>>> maintainer of CRAN package 'XML'.
>>> Our hope was that maintainers of packages depending on XML will migrate
>>> to other packages for reading XML structures. This has not happened and
>>> we still see dozens of strong dependencies on XML.
>> How is this hope communicated? Many R users assume that XML package is
>> in great shape and the preferable choice because it is maintained by
>> the CRAN team and r-core members.
>>
>> Perhaps one could follow the precedent from the rgdal retirement, and
>> set a deadline.
>>
>> One way to communicate this effectively would be by introducing a
>> formal deprecation field in the package description. This could then
>> be displayed on the XML CRAN html page, and when loading the package
>> interactively. Other packages that import such a deprecated package
>> could be given a CMD check warning.
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Wed Jan 24 17:06:38 2024
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Wed, 24 Jan 2024 17:06:38 +0100
Subject: [R-pkg-devel] new maintainer for CRAN package XML
In-Reply-To: <CABFfbXvZ4b9PQe=fA6CJ=Udq9ektOC+=ht+bH2HoKUktThRfeA@mail.gmail.com>
References: <f6c68c43-54d1-4dde-a394-cc0263457133@statistik.tu-dortmund.de>
 <CABFfbXvZ4b9PQe=fA6CJ=Udq9ektOC+=ht+bH2HoKUktThRfeA@mail.gmail.com>
Message-ID: <296998d9-8b16-4630-b3ba-07fa415248f1@statistik.tu-dortmund.de>



On 24.01.2024 15:59, Jeroen Ooms wrote:
> On Mon, Jan 22, 2024 at 3:51?PM Uwe Ligges
> <ligges at statistik.tu-dortmund.de> wrote:
>>
>> Dear package developers,
>>
>> the CRAN team (and Professor Ripley in particular) has been the defacto
>> maintainer of CRAN package 'XML'.
>> Our hope was that maintainers of packages depending on XML will migrate
>> to other packages for reading XML structures. This has not happened and
>> we still see dozens of strong dependencies on XML.
> 
> How is this hope communicated? Many R users assume that XML package is
> in great shape and the preferable choice because it is maintained by
> the CRAN team and r-core members.
> 
> Perhaps one could follow the precedent from the rgdal retirement, and
> set a deadline.
> 
> One way to communicate this effectively would be by introducing a
> formal deprecation field in the package description. This could then
> be displayed on the XML CRAN html page, and when loading the package
> interactively. Other packages that import such a deprecated package
> could be given a CMD check warning.

Sure, the new maintainer may do all these things.

Best,
Uwe Ligges

From c@chw@rz@t@t@|uc@ @end|ng |rom gm@||@com  Wed Jan 24 20:34:51 2024
From: c@chw@rz@t@t@|uc@ @end|ng |rom gm@||@com (Carl Schwarz)
Date: Wed, 24 Jan 2024 11:34:51 -0800
Subject: [R-pkg-devel] R-package-devel Digest, Vol 105, Issue 19
In-Reply-To: <CADtpigb0F6fPchnuu3cm0dV+-En14yHUuUURy5szfFn-3DTBXw@mail.gmail.com>
References: <mailman.10186.5.1706094001.5533.r-package-devel@r-project.org>
 <CADtpigb0F6fPchnuu3cm0dV+-En14yHUuUURy5szfFn-3DTBXw@mail.gmail.com>
Message-ID: <CADtpigYezZfLRdDWGeWjBNXzJQnYPcrGL983BDBu0OO8q5STOQ@mail.gmail.com>

Solved...

The src/ directory also included a .o and .so objects from the last build
of the package that must be "out of date" because once I removed those
older objects, the Build -> Document and build -> Check package now work
fine without crashing...A newer version of the .o and .so objects are now
built and it now works fine.

Thanks
Carl Schwarz

On Wed, Jan 24, 2024 at 10:57?AM Carl Schwarz <cschwarzstatsfuca at gmail.com>
wrote:

> Thanks for your suggestions.  I followed the suggestion in today's message
> (see results below) which all run without issue.
> I tried to isolate the problem more....
>
> The issue appears to be with load_dll()
>
> When I try
> > getwd()
> [1] "/Users/cschwarz/Library/CloudStorage/Dropbox/SPAS-R/SPAS"
> > load_dll()
>
> It crashes.
>
>
> I moved the package outside of CloudStorage to see if that is the issue.
> > getwd()
> [1] "/Users/cschwarz/Desktop/SPAS"
> > load_dll()
>
> It crashes.
>
>
> I tried doing a dll_load() where there is NO c++ object, i.e. a random
> directory and it terminates with a sensible error message....
> > setwd("/Users/cschwarz/Desktop/BikePics")
> > library(pkgload)
> > load_dll()
> Error in `value[[3L]]()`:
> ! Could not find a root 'DESCRIPTION' file that starts with '^Package' in
> /Users/cschwarz/Desktop/BikePics.
> ? Are you in your project directory and does your project have a
> 'DESCRIPTION' file?
> Run `rlang::last_trace()` to see where the error occurred.
>
> I'm following the suggestions on including TMB code in a package at
>
> https://stackoverflow.com/questions/48627069/guidelines-for-including-tmb-c-code-in-an-r-package
> and appear to have all the necessary files
>
> I created my own load_dll() function by copying over the code and adding a
> browser().
> It appears to run fine until the statement library.dynam2(path.lib) where
> it cannot find the function library.dynam2
>
>
> > my_load_dll()
> Called from: my_load_dll()
> Browse[1]> n
> debug at #4: package <- pkg_name(path)
> Browse[2]> n
> debug at #5: env <- ns_env(package)
> Browse[2]> n
> debug at #6: nsInfo <- parse_ns_file(path)
> Browse[2]> n
> debug at #7: dlls <- list()
> Browse[2]> n
> debug at #8: dynLibs <- nsInfo$dynlibs
> Browse[2]> n
> debug at #9: nativeRoutines <- list()
> Browse[2]> n
> debug at #10: for (i in seq_along(dynLibs)) {
>     lib <- dynLibs[i]
>     dlls[[lib]] <- library.dynam2(path, lib)
>     routines <- assignNativeRoutines(dlls[[lib]], lib, env,
> nsInfo$nativeRoutines[[lib]])
>     nativeRoutines[[lib]] <- routines
>     if (!is.null(names(nsInfo$dynlibs)) &&
> nzchar(names(nsInfo$dynlibs)[i]))
>         env[[names(nsInfo$dynlibs)[i]]] <- dlls[[lib]]
>     setNamespaceInfo(env, "DLLs", dlls)
> }
> Browse[2]> n
> debug at #11: lib <- dynLibs[i]
> Browse[2]> n
> debug at #12: dlls[[lib]] <- library.dynam2(path, lib)
> Browse[2]> n
> Error in library.dynam2(path, lib) :
>   could not find function "library.dynam2"
>
> I'm unable to find where the library.dynam2() function lies... A google
> search for library.dynam2 doesn't show anything except for a cryptic
> comment in
> https://rdrr.io/cran/pkgload/src/R/load-dll.R
> which says
>
> ## The code below taken directly from base::loadNamespace
>   ## https://github.com/wch/r-source/blob/tags/R-3-3-0/src/library/base/R/namespace.R#L466-L485
>   ## except for the call to library.dynam2, which is a special version of
>   ## library.dynam
>
> This is now beyond my pay grade..
>
> Suggestions?
>
>
> ------------------------------
>
> From James Lamb <jaylamb20 at gmail.com>
>
> Using the shell:
>
> R CMD build .
> - success with
>
> * checking for file ?./DESCRIPTION? ... OK
>
> * preparing ?SPAS?:
>
> * checking DESCRIPTION meta-information ... OK
>
> * cleaning src
>
> * installing the package to build vignettes
>
> * creating vignettes ... OK
>
> * cleaning src
>
> * checking for LF line-endings in source and make files and shell scripts
>
> * checking for empty or unneeded directories
>
> * building ?SPAS_2024.1.31.tar.gz?
>
>
> R CMD INSTALL --with-keep.source ./SPAS_*.tar.gz
> - success. Lots of warning from the C compiler but appears to terminate
> successfully with
> ....
>
> installing to /Users/cschwarz/Rlibs/00LOCK-SPAS/00new/SPAS/libs
>
> ** R
>
> ** inst
>
> ** byte-compile and prepare package for lazy loading
>
> ** help
>
> *** installing help indices
>
> ** building package indices
>
> ** installing vignettes
>
> ** testing if installed package can be loaded from temporary location
>
> ** checking absolute paths in shared objects and dynamic libraries
>
> ** testing if installed package can be loaded from final location
>
> ** testing if installed package keeps a record of temporary installation
> path
>
> * DONE (SPAS)
>
>
> # (assuming you use roxygen2)
> Rscript -e "roxygen2::roxygenize(load = 'installed')"
>
>
> - success?, it just returns with no messages
>
> cschwarz at schwarz-iMac-2020 SPAS % Rscript -e "roxygen2::roxygenize(load =
> 'installed')"
>
> cschwarz at schwarz-iMac-2020 SPAS %
>
>
> R CMD check --as-cran ./SPAS_*.tar.gz
>
> - successful...runs the checks, but does NOT find the note from the
> development versions of R that triggered CRAN to ask for a resubmission..
>
> It does find some problems in the html which I will also need to check
> out, but this appears to be ok as well.
>
>
> cschwarz at schwarz-iMac-2020 SPAS % R CMD check --as-cran ./SPAS_*.tar.gz
>
> * using log directory
> ?/Users/cschwarz/Library/CloudStorage/Dropbox/SPAS-R/SPAS/SPAS.Rcheck?
>
> * using R version 4.3.2 (2023-10-31)
>
> * using platform: x86_64-apple-darwin20 (64-bit)
>
> * R was compiled by
>
>     Apple clang version 14.0.0 (clang-1400.0.29.202)
>
>     GNU Fortran (GCC) 12.2.0
>
> * running under: macOS Sonoma 14.2.1
>
> * using session charset: UTF-8
>
> * using option ?--as-cran?
>
> * checking for file ?SPAS/DESCRIPTION? ... OK
>
> * checking extension type ... Package
>
> * this is package ?SPAS? version ?2024.1.31?
>
> * package encoding: UTF-8
>
> * checking CRAN incoming feasibility ... [3s/16s] NOTE
>
> Maintainer: ?Carl James Schwarz <cschwarz.stat.sfu.ca at gmail.com>?
>
>
> Found the following (possibly) invalid URLs:
>
>   URL: https://cdnsciencepub.com/doi/10.1139/f97-238
>
>     From: DESCRIPTION
>
>     Status: 403
>
>     Message: Forbidden
>
>   URL: https://www.jstor.org/stable/2332748
>
>     From: DESCRIPTION
>
>     Status: 403
>
>     Message: Forbidden
>
> * checking package namespace information ... OK
>
> * checking package dependencies ... OK
>
> * checking if this is a source package ... OK
>
> * checking if there is a namespace ... OK
>
> * checking for executable files ... OK
>
> * checking for hidden files and directories ... OK
>
> * checking for portable file names ... OK
>
> * checking for sufficient/correct file permissions ... OK
>
> * checking serialization versions ... OK
>
> * checking whether package ?SPAS? can be installed ... [28s/30s] OK
>
> * used C++ compiler: ?Apple clang version 15.0.0 (clang-1500.1.0.2.5)?
>
> * used SDK: ??
>
> * checking installed package size ... NOTE
>
>   installed size is 12.8Mb
>
>   sub-directories of 1Mb or more:
>
>     libs  12.1Mb
>
> * checking package directory ... OK
>
> * checking for future file timestamps ... OK
>
> * checking ?build? directory ... OK
>
> * checking DESCRIPTION meta-information ... OK
>
> * checking top-level files ... OK
>
> * checking for left-over files ... OK
>
> * checking index information ... OK
>
> * checking package subdirectories ... OK
>
> * checking R files for non-ASCII characters ... OK
>
> * checking R files for syntax errors ... OK
>
> * checking whether the package can be loaded ... OK
>
> * checking whether the package can be loaded with stated dependencies ...
> OK
>
> * checking whether the package can be unloaded cleanly ... OK
>
> * checking whether the namespace can be loaded with stated dependencies
> ... OK
>
> * checking whether the namespace can be unloaded cleanly ... OK
>
> * checking loading without being on the library search path ... OK
>
> * checking startup messages can be suppressed ... OK
>
> * checking use of S3 registration ... OK
>
> * checking dependencies in R code ... OK
>
> * checking S3 generic/method consistency ... OK
>
> * checking replacement functions ... OK
>
> * checking foreign function calls ... OK
>
> * checking R code for possible problems ... OK
>
> * checking Rd files ... OK
>
> * checking Rd metadata ... OK
>
> * checking Rd line widths ... OK
>
> * checking Rd cross-references ... OK
>
> * checking for missing documentation entries ... OK
>
> * checking for code/documentation mismatches ... OK
>
> * checking Rd \usage sections ... OK
>
> * checking Rd contents ... OK
>
> * checking for unstated dependencies in examples ... OK
>
> * checking line endings in C/C++/Fortran sources/headers ... OK
>
> * checking pragmas in C/C++ headers and code ... OK
>
> * checking compilation flags used ... OK
>
> * checking compiled code ... OK
>
> * checking installed files from ?inst/doc? ... OK
>
> * checking files in ?vignettes? ... OK
>
> * checking examples ... OK
>
> * checking for unstated dependencies in vignettes ... OK
>
> * checking package vignettes in ?inst/doc? ... OK
>
> * checking re-building of vignette outputs ... [11s/13s] OK
>
> * checking PDF version of manual ... OK
>
> * checking HTML version of manual ... NOTE
>
> Found the following HTML validation problems:
>
> SPAS.autopool.html:4:1 (SPAS.autopool.Rd:5): Warning: <link> inserting
> "type" attribute
>
> SPAS.autopool.html:12:1 (SPAS.autopool.Rd:5): Warning: <script>
> proprietary attribute "onload"
>
> SPAS.autopool.html:12:1 (SPAS.autopool.Rd:5): Warning: <script> inserting
> "type" attribute
>
> SPAS.autopool.html:17:1 (SPAS.autopool.Rd:5): Warning: <table> lacks
> "summary" attribute
>
> SPAS.autopool.html:46:1 (SPAS.autopool.Rd:19): Warning: <table> lacks
> "summary" attribute
>
> SPAS.extract.par.est.html:4:1 (SPAS.extract.par.est.Rd:5): Warning: <link>
> inserting "type" attribute
>
> SPAS.extract.par.est.html:12:1 (SPAS.extract.par.est.Rd:5): Warning:
> <script> proprietary attribute "onload"
>
> SPAS.extract.par.est.html:12:1 (SPAS.extract.par.est.Rd:5): Warning:
> <script> inserting "type" attribute
>
> SPAS.extract.par.est.html:17:1 (SPAS.extract.par.est.Rd:5): Warning:
> <table> lacks "summary" attribute
>
> SPAS.extract.par.est.html:35:1 (SPAS.extract.par.est.Rd:10): Warning:
> <table> lacks "summary" attribute
>
> SPAS.fit.model.html:4:1 (SPAS.fit.model.Rd:5): Warning: <link> inserting
> "type" attribute
>
> SPAS.fit.model.html:12:1 (SPAS.fit.model.Rd:5): Warning: <script>
> proprietary attribute "onload"
>
> SPAS.fit.model.html:12:1 (SPAS.fit.model.Rd:5): Warning: <script>
> inserting "type" attribute
>
> SPAS.fit.model.html:17:1 (SPAS.fit.model.Rd:5): Warning: <table> lacks
> "summary" attribute
>
> SPAS.fit.model.html:56:1 (SPAS.fit.model.Rd:28): Warning: <table> lacks
> "summary" attribute
>
> SPAS.likelihood.star.DM.html:4:1 (SPAS.likelihood.star.DM.Rd:5): Warning:
> <link> inserting "type" attribute
>
> SPAS.likelihood.star.DM.html:12:1 (SPAS.likelihood.star.DM.Rd:5): Warning:
> <script> proprietary attribute "onload"
>
> SPAS.likelihood.star.DM.html:12:1 (SPAS.likelihood.star.DM.Rd:5): Warning:
> <script> inserting "type" attribute
>
> SPAS.likelihood.star.DM.html:17:1 (SPAS.likelihood.star.DM.Rd:5): Warning:
> <table> lacks "summary" attribute
>
> SPAS.print.model.html:4:1 (SPAS.print.model.Rd:5): Warning: <link>
> inserting "type" attribute
>
> SPAS.print.model.html:12:1 (SPAS.print.model.Rd:5): Warning: <script>
> proprietary attribute "onload"
>
> SPAS.print.model.html:12:1 (SPAS.print.model.Rd:5): Warning: <script>
> inserting "type" attribute
>
> SPAS.print.model.html:17:1 (SPAS.print.model.Rd:5): Warning: <table> lacks
> "summary" attribute
>
> SPAS.print.model.html:36:1 (SPAS.print.model.Rd:10): Warning: <table>
> lacks "summary" attribute
>
> dot-onAttach.html:4:1 (dot-onAttach.Rd:5): Warning: <link> inserting
> "type" attribute
>
> dot-onAttach.html:12:1 (dot-onAttach.Rd:5): Warning: <script> proprietary
> attribute "onload"
>
> dot-onAttach.html:12:1 (dot-onAttach.Rd:5): Warning: <script> inserting
> "type" attribute
>
> dot-onAttach.html:17:1 (dot-onAttach.Rd:5): Warning: <table> lacks
> "summary" attribute
>
> dot-onAttach.html:19:1 (dot-onAttach.Rd:5): Warning: <h2> attribute "id"
> has invalid value ".onAttach"
>
> dummy.html:4:1 (dummy.Rd:5): Warning: <link> inserting "type" attribute
>
> dummy.html:12:1 (dummy.Rd:5): Warning: <script> proprietary attribute
> "onload"
>
> dummy.html:12:1 (dummy.Rd:5): Warning: <script> inserting "type" attribute
>
> dummy.html:17:1 (dummy.Rd:5): Warning: <table> lacks "summary" attribute
>
> logit.html:4:1 (logit.Rd:5): Warning: <link> inserting "type" attribute
>
> logit.html:12:1 (logit.Rd:5): Warning: <script> proprietary attribute
> "onload"
>
> logit.html:12:1 (logit.Rd:5): Warning: <script> inserting "type" attribute
>
> logit.html:17:1 (logit.Rd:5): Warning: <table> lacks "summary" attribute
>
> logit.html:35:1 (logit.Rd:10): Warning: <table> lacks "summary" attribute
>
> * checking for non-standard things in the check directory ... OK
>
> * checking for detritus in the temp directory ... OK
>
> * DONE
>
>
> Status: 3 NOTEs
>
> See
>
>
> ?/Users/cschwarz/Library/CloudStorage/Dropbox/SPAS-R/SPAS/SPAS.Rcheck/00check.log?
>
> for details.
>
>
>
> cschwarz at schwarz-iMac-2020 SPAS %
>
>
>
> From: Serguei Sokol <serguei.sokol at gmail.com>
>
> Why not simply run devtools::document() from 'R -d gdb' ?
>
>
> This didn't work on my Mac
>
>
> cschwarz at schwarz-iMac-2020 SPAS % R -d gdb
>
> /usr/local/bin/R: line 299: exec: gdb: not found
>
>
> But then I tried launching R by it self, i.e. not from RStudios and
> devtools::document()
>
> and it too crashes so it appears to be something in devtools::document()??
>
>
>
> [1] "/Users/cschwarz/Library/CloudStorage/Dropbox/SPAS-R/SPAS"
>
> > devtools::document()
>
> ? Updating SPAS documentation
>
> ? Loading SPAS
>
>
>  *** caught segfault ***
>
> address 0x54e40, cause 'memory not mapped'
>
>
> Traceback:
>
>  1: dyn.load(dll_copy_file)
>
>  2: library.dynam2(path, lib)
>
>  3: load_dll(path)
>
>  4: pkgload::load_all(path, helpers = FALSE, attach_testthat = FALSE)
>
>  5: load_code(base_path)
>
>  6: roxygen2::roxygenise(pkg$path, roclets)
>
>  7: devtools::document()
>
>
> Possible actions:
>
> 1: abort (with core dump, if enabled)
>
> 2: normal R exit
>
> 3: exit R without saving workspace
>
> 4: exit R saving workspace
>
> Selection:
>
>
>
>
>
> On Wed, Jan 24, 2024 at 3:01?AM <r-package-devel-request at r-project.org>
> wrote:
>
>> Send R-package-devel mailing list submissions to
>>         r-package-devel at r-project.org
>>
>> To subscribe or unsubscribe via the World Wide Web, visit
>>         https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> or, via email, send a message with subject or body 'help' to
>>         r-package-devel-request at r-project.org
>>
>> You can reach the person managing the list at
>>         r-package-devel-owner at r-project.org
>>
>> When replying, please edit your Subject line so it is more specific
>> than "Re: Contents of R-package-devel digest..."
>>
>>
>> Today's Topics:
>>
>>    1. lost braces note on CRAN pretest related to \itemize
>>       (Patrick Giraudoux)
>>    2. Re:  lost braces note on CRAN pretest related to \itemize
>>       (Dirk Eddelbuettel)
>>    3. Re:  lost braces note on CRAN pretest related to \itemize
>>       (Ivan Krylov)
>>    4. Re:  lost braces note on CRAN pretest related to \itemize
>>       (Patrick Giraudoux)
>>    5. Re:  lost braces note on CRAN pretest related to \itemize
>>       (Georgi Boshnakov)
>>    6. How to debug segfault when running build -> document in
>>       Rstudio that includes TMB module (Carl Schwarz)
>>    7. Re:  How to debug segfault when running build -> document in
>>       Rstudio that includes TMB module (James Lamb)
>>    8. Re:  How to debug segfault when running build -> document in
>>       Rstudio that includes TMB module (Serguei Sokol)
>>
>> ----------------------------------------------------------------------
>>
>> Message: 1
>> Date: Tue, 23 Jan 2024 19:39:54 +0100
>> From: Patrick Giraudoux <patrick.giraudoux at univ-fcomte.fr>
>> To: R Package Development <r-package-devel at r-project.org>
>> Subject: [R-pkg-devel] lost braces note on CRAN pretest related to
>>         \itemize
>> Message-ID: <94a7abb7-fbcd-4852-8170-2532b9af58aa at univ-fcomte.fr>
>> Content-Type: text/plain; charset="utf-8"
>>
>> Dear listers,
>>
>> I meet a problem with the  submission of the package pgirmess. In fact
>> the package goes through R CMD check --as-cran and R-wind-builder
>> smoothly with no problem, but submitted to CRAN, I get this:
>>
>> Flavor: r-devel-linux-x86_64-debian-gcc, r-devel-windows-x86_64
>> Check: CRAN incoming feasibility, Result: Note_to_CRAN_maintainers
>>    Maintainer: 'Patrick Giraudoux<patrick.giraudoux at univ-fcomte.fr>'
>>
>> Flavor: r-devel-linux-x86_64-debian-gcc, r-devel-windows-x86_64
>> Check: Rd files, Result: NOTE
>>    checkRd: (-1) mergeTrackObs.rd:24: Lost braces in \itemize; \value
>> handles \item{}{} directly
>>    checkRd: (-1) mergeTrackObs.rd:25: Lost braces in \itemize; \value
>> handles \item{}{} directly
>>    checkRd: (-1) mergeTrackObs.rd:26: Lost braces in \itemize; \value
>> handles \item{}{} directly
>>    checkRd: (-1) selMod.rd:29-31: Lost braces in \itemize; meant
>> \describe ?
>>    checkRd: (-1) selMod.rd:32-33: Lost braces in \itemize; meant
>> \describe ?
>>    checkRd: (-1) selMod.rd:54: Lost braces in \itemize; meant \describe ?
>>    checkRd: (-1) selMod.rd:55: Lost braces in \itemize; meant \describe ?
>>
>> The code that seems to make problem (although braces are balanced; I
>> wonder why a claim 'lost braces') is
>>
>> - for mergeTrackObs.rd
>>
>> \value{
>>    A \code{\link[sf]{sfc}} object, of POINT geometry, with the following
>> columns:
>>    \itemize{
>>    \item{ID}{ ID number}
>>    \item{nObs}{ The number of observations in the interval}
>>    \item{geometry} {POINT geometry}
>>    }
>> }
>>
>> - for selMod.rd
>>
>> \details{
>>    This function provides parameters used in the information theoretic
>> methods for model comparisons.
>>    \itemize{
>>    \item{.}{lm and glm objects can be passed directly as the upper scope
>> of term addition (all terms added).
>>    Every model from y\eqn{\sim}{~}1 is computed adding one term at a
>> time until the upper scope model is derived. This is a stepwise analysis
>> where the terms are added sequentially and this does NOT provide all
>> combinations of terms and interactions. Offset terms cannot be proceeded
>> here.
>>    }
>>    \item{.}{A list of user specified lm, glm, nls, lme or nlme objects
>> (actually any object for which AIC and logLik functions are applicable)
>> to compare can alternately be passed.
>>    }
>>    }
>> }
>>
>> Has anyone an idea about what is going wrong ?
>>
>> Patrick
>>
>>
>>
>>
>>
>>         [[alternative HTML version deleted]]
>>
>>
>>
>>
>> ------------------------------
>>
>> Message: 2
>> Date: Tue, 23 Jan 2024 12:58:46 -0600
>> From: Dirk Eddelbuettel <edd at debian.org>
>> To: Patrick Giraudoux <patrick.giraudoux at univ-fcomte.fr>
>> Cc: R Package Development <r-package-devel at r-project.org>
>> Subject: Re: [R-pkg-devel]  lost braces note on CRAN pretest related
>>         to \itemize
>> Message-ID: <26032.3174.970615.617686 at rob.eddelbuettel.com>
>> Content-Type: text/plain; charset="us-ascii"
>>
>>
>> On 23 January 2024 at 19:39, Patrick Giraudoux wrote:
>> | Has anyone an idea about what is going wrong ?
>>
>> \item has no braces following it.  From a package I submitted today and
>> for
>> which I still have NEWS.Rd in the editor (indented here):
>>
>>   \section{Changes in version 0.0.22 (2024-01-23)}{
>>     \itemize{
>>       \item Replace empty examples macros to satisfy CRAN request.
>>     }
>>   }
>>
>> Hth,  Dirk
>>
>> --
>> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>>
>>
>>
>>
>> ------------------------------
>>
>> Message: 3
>> Date: Tue, 23 Jan 2024 21:59:54 +0300
>> From: Ivan Krylov <ikrylov at disroot.org>
>> To: R Package Development <r-package-devel at r-project.org>
>> Subject: Re: [R-pkg-devel]  lost braces note on CRAN pretest related
>>         to \itemize
>> Message-ID: <20240123215954.0afb8e9d at Tarkus>
>> Content-Type: text/plain; charset="utf-8"
>>
>> ? Tue, 23 Jan 2024 19:39:54 +0100
>> Patrick Giraudoux <patrick.giraudoux at univ-fcomte.fr> ?????:
>>
>> >    \itemize{
>> >    \item{.}{lm and glm objects can be passed directly as the upper
>> > scope of term addition (all terms added).
>>
>> Inside the \itemize and \enumerate commands, the \item command doesn't
>> take any arguments:
>> https://cran.r-project.org/doc/manuals/R-exts.html#Lists-and-tables
>>
>> Instead, it starts a new paragraph with a number (\enumerate) or a
>> bullet point (\itemize). R CMD check is reminding you that \itemize{
>> \item{foo}{bar} } is equivalent to \itemize{ \item foo bar } without
>> any braces.
>>
>> If you meant to highlight a word by making it an argument of the \item
>> command, use the \describe command. Here, you're highlighting a dot,
>> which would be rendered with a bullet point before it, so it's probably
>> neither semantically nor visually appropriate.
>>
>> > \value{
>> >    A \code{\link[sf]{sfc}} object, of POINT geometry, with the
>> > following columns:
>> >    \itemize{
>> >    \item{ID}{ ID number}
>>
>> The same problem applies here.
>>
>> Additionally, R CMD check is reminding you that \value{} is implicitly
>> a special case of a \describe{} environment:
>> https://cran.r-project.org/doc/manuals/R-exts.html#index-_005cvalue
>>
>> Since you're already using \item{}{} labels to name the components of
>> the value, just drop the \itemize{} (but keep its contents). \value{} is
>> enough.
>>
>> --
>> Best regards,
>> Ivan
>>
>>
>>
>>
>> ------------------------------
>>
>> Message: 4
>> Date: Tue, 23 Jan 2024 20:08:20 +0100
>> From: Patrick Giraudoux <patrick.giraudoux at univ-fcomte.fr>
>> To: Dirk Eddelbuettel <edd at debian.org>
>> Cc: R Package Development <r-package-devel at r-project.org>
>> Subject: Re: [R-pkg-devel]  lost braces note on CRAN pretest related
>>         to \itemize
>> Message-ID: <68b9da72-26ad-4f27-8839-aa5b2a65cc6a at univ-fcomte.fr>
>> Content-Type: text/plain; charset="utf-8"
>>
>> OK. Clear enough. CRAN applies a new "filter" as it was going through
>> without crying a note since decades ;-). However, indeed, re-checking
>> the manual "Writing R extensions" my syntax was wrong...
>> Thanks for the guidance,
>> Patrick
>>
>> Le 23/01/2024 ? 19:58, Dirk Eddelbuettel a ?crit :
>> > On 23 January 2024 at 19:39, Patrick Giraudoux wrote:
>> > | Has anyone an idea about what is going wrong ?
>> >
>> > \item has no braces following it.  From a package I submitted today and
>> for
>> > which I still have NEWS.Rd in the editor (indented here):
>> >
>> >    \section{Changes in version 0.0.22 (2024-01-23)}{
>> >      \itemize{
>> >        \item Replace empty examples macros to satisfy CRAN request.
>> >      }
>> >    }
>> >
>> > Hth,  Dirk
>> >
>>
>>         [[alternative HTML version deleted]]
>>
>>
>>
>>
>> ------------------------------
>>
>> Message: 5
>> Date: Tue, 23 Jan 2024 20:14:13 +0000
>> From: Georgi Boshnakov <georgi.boshnakov at manchester.ac.uk>
>> To: Patrick Giraudoux <patrick.giraudoux at univ-fcomte.fr>, Dirk
>>         Eddelbuettel <edd at debian.org>
>> Cc: R Package Development <r-package-devel at r-project.org>
>> Subject: Re: [R-pkg-devel]  lost braces note on CRAN pretest related
>>         to \itemize
>> Message-ID:
>>         <
>> LO0P265MB63252FC9F918C154634DD11BAE742 at LO0P265MB6325.GBRP265.PROD.OUTLOOK.COM
>> >
>>
>> Content-Type: text/plain; charset="utf-8"
>>
>> The notes you get illustrate why they are useful, if you look at your
>> rendered documentation you probably will see something wrong. Thousands of
>> packages on CRAN, including some of mines have had this kind of
>> infelicities for years.
>>
>> Firstly, the two sets of braces suggest that you meant a description
>> environment, not itemize (in which  its only argument doesn't need braces).
>>
>> Secondly, in the value section, \item is implicitly enclosed in \describe
>> and you don't need to include the latter.
>>
>> Georgi Boshnakov
>>
>>
>> Sent from Outlook for Android<https://aka.ms/AAb9ysg>
>>
>> ________________________________
>> From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf
>> of Patrick Giraudoux <patrick.giraudoux at univ-fcomte.fr>
>> Sent: Tuesday, January 23, 2024 7:09:22 pm
>> To: Dirk Eddelbuettel <edd at debian.org>
>> Cc: R Package Development <r-package-devel at r-project.org>
>> Subject: Re: [R-pkg-devel]  lost braces note on CRAN pretest related to
>> \itemize
>>
>> OK. Clear enough. CRAN applies a new "filter" as it was going through
>> without crying a note since decades ;-). However, indeed, re-checking
>> the manual "Writing R extensions" my syntax was wrong...
>> Thanks for the guidance,
>> Patrick
>>
>> Le 23/01/2024 ? 19:58, Dirk Eddelbuettel a ?crit :
>> > On 23 January 2024 at 19:39, Patrick Giraudoux wrote:
>> > | Has anyone an idea about what is going wrong ?
>> >
>> > \item has no braces following it.  From a package I submitted today and
>> for
>> > which I still have NEWS.Rd in the editor (indented here):
>> >
>> >    \section{Changes in version 0.0.22 (2024-01-23)}{
>> >      \itemize{
>> >        \item Replace empty examples macros to satisfy CRAN request.
>> >      }
>> >    }
>> >
>> > Hth,  Dirk
>> >
>>
>>         [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>>
>> https://urldefense.com/v3/__https://stat.ethz.ch/mailman/listinfo/r-package-devel__;!!PDiH4ENfjr2_Jw!Gu9AhS4Yi4k5IC8TXv4B8xpznl-8-Jhl-cdxRZ6zVrRCdmDaSTVYpaG5XDoitdms9FuHQGV7adP-Q6WD6w2bMws_b5UnszsH5VsXFBMUIvFX4Nc$
>> [stat[.]ethz[.]ch]
>>
>>
>>         [[alternative HTML version deleted]]
>>
>>
>>
>>
>> ------------------------------
>>
>> Message: 6
>> Date: Tue, 23 Jan 2024 19:22:43 -0800
>> From: Carl Schwarz <cschwarzstatsfuca at gmail.com>
>> To: r-package-devel at r-project.org
>> Subject: [R-pkg-devel] How to debug segfault when running build ->
>>         document in Rstudio that includes TMB module
>> Message-ID:
>>         <
>> CADtpigYViZ+2GJq+XQyJ6GeyEZ_CWMnUPg20-LcdLKC3GWvVxA at mail.gmail.com>
>> Content-Type: text/plain; charset="utf-8"
>>
>> I'm trying to update my SPAS package to respond to a CRAN check. Before
>> starting the changes, I tried to rebuild my package, but now get a
>> segfault
>> when I try to do a devtools::document() or devtools::check(args =
>> c('--as-cran')). See below for output from the Rstudio "Build" window.
>>
>> I've
>> - reinstalled ALL packages
>> - reinstalled R (4.3.2 on MacOS Intel Chip)
>> - reinstalled Rstudio
>>
>> When I try a rebuild/document on a sister package it runs fine, so I
>> suspect that the problem is related to using a TMB module that is part of
>> the SPAS package written in Cpp.
>>
>> How do I start to "debug" this to identify the problem?
>>
>> Thanks
>> Carl Schwarz
>>
>>
>>
>>
>> ==> devtools::document(roclets = c('rd', 'collate', 'namespace',
>> 'vignette'))
>> ? Updating SPAS documentation? Loading SPAS
>>
>>  *** caught segfault ***
>> address 0x54e40, cause 'memory not mapped'
>>
>> Traceback:
>>  1: dyn.load(dll_copy_file)
>>  2: library.dynam2(path, lib)
>>  3: load_dll(path)
>>  4: pkgload::load_all(path, helpers = FALSE, attach_testthat = FALSE)
>>  5: load_code(base_path)
>>  6: roxygen2::roxygenise(pkg$path, roclets)
>>  7: devtools::document(roclets = c("rd", "collate", "namespace",
>> "vignette"))
>>  8: withCallingHandlers(expr, packageStartupMessage = function(c)
>> tryInvokeRestart("muffleMessage"))
>>  9: suppressPackageStartupMessages({    oldLC <-
>> Sys.getlocale(category = "LC_COLLATE")    Sys.setlocale(category =
>> "LC_COLLATE", locale = "C")    on.exit(Sys.setlocale(category =
>> "LC_COLLATE", locale = oldLC))    devtools::document(roclets = c("rd",
>> "collate", "namespace",         "vignette"))})
>> An irrecoverable exception occurred. R is aborting now ...
>>
>> Exited with status 139.
>>
>>         [[alternative HTML version deleted]]
>>
>>
>>
>>
>> ------------------------------
>>
>> Message: 7
>> Date: Tue, 23 Jan 2024 21:35:31 -0600
>> From: James Lamb <jaylamb20 at gmail.com>
>> To: cschwarzstatsfuca at gmail.com,  R Package Development
>>         <r-package-devel at r-project.org>
>> Subject: Re: [R-pkg-devel]  How to debug segfault when running build
>>         -> document in Rstudio that includes TMB module
>> Message-ID:
>>         <CADPubGQcowMyyZUCHYu=
>> 4ndjyB9xAu4gLLOjgKjtS1L_kqdNVQ at mail.gmail.com>
>> Content-Type: text/plain; charset="utf-8"
>>
>> Carl,
>>
>> Consider performing these tasks without the use of the 'devtools' package,
>> running the following from a shell.
>>
>> ```shell
>> R CMD build .
>> R CMD INSTALL --with-keep.source ./SPAS_*.tar.gz
>>
>> # (assuming you use roxygen2)
>> Rscript -e "roxygen2::roxygenize(load = 'installed')"
>>
>> R CMD check --as-cran ./SPAS_*.tar.gz
>> ```
>>
>> If those commands are successful, then you know the problem lies somewhere
>> in the difference between that approach and what 'devtools' does, which
>> might help to narrow it down.
>>
>> Cheers,
>>
>> -James
>>
>>
>> On Tue, Jan 23, 2024 at 9:23?PM Carl Schwarz <cschwarzstatsfuca at gmail.com
>> >
>> wrote:
>>
>> > I'm trying to update my SPAS package to respond to a CRAN check. Before
>> > starting the changes, I tried to rebuild my package, but now get a
>> segfault
>> > when I try to do a devtools::document() or devtools::check(args =
>> > c('--as-cran')). See below for output from the Rstudio "Build" window.
>> >
>> > I've
>> > - reinstalled ALL packages
>> > - reinstalled R (4.3.2 on MacOS Intel Chip)
>> > - reinstalled Rstudio
>> >
>> > When I try a rebuild/document on a sister package it runs fine, so I
>> > suspect that the problem is related to using a TMB module that is part
>> of
>> > the SPAS package written in Cpp.
>> >
>> > How do I start to "debug" this to identify the problem?
>> >
>> > Thanks
>> > Carl Schwarz
>> >
>> >
>> >
>> >
>> > ==> devtools::document(roclets = c('rd', 'collate', 'namespace',
>> > 'vignette'))
>> > ? Updating SPAS documentation? Loading SPAS
>> >
>> >  *** caught segfault ***
>> > address 0x54e40, cause 'memory not mapped'
>> >
>> > Traceback:
>> >  1: dyn.load(dll_copy_file)
>> >  2: library.dynam2(path, lib)
>> >  3: load_dll(path)
>> >  4: pkgload::load_all(path, helpers = FALSE, attach_testthat = FALSE)
>> >  5: load_code(base_path)
>> >  6: roxygen2::roxygenise(pkg$path, roclets)
>> >  7: devtools::document(roclets = c("rd", "collate", "namespace",
>> > "vignette"))
>> >  8: withCallingHandlers(expr, packageStartupMessage = function(c)
>> > tryInvokeRestart("muffleMessage"))
>> >  9: suppressPackageStartupMessages({    oldLC <-
>> > Sys.getlocale(category = "LC_COLLATE")    Sys.setlocale(category =
>> > "LC_COLLATE", locale = "C")    on.exit(Sys.setlocale(category =
>> > "LC_COLLATE", locale = oldLC))    devtools::document(roclets = c("rd",
>> > "collate", "namespace",         "vignette"))})
>> > An irrecoverable exception occurred. R is aborting now ...
>> >
>> > Exited with status 139.
>> >
>> >         [[alternative HTML version deleted]]
>> >
>> > ______________________________________________
>> > R-package-devel at r-project.org mailing list
>> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> >
>>
>>
>> --
>> James Lamb (he/him)
>> GitHub <https://github.com/jameslamb> | LinkedIn
>> <https://www.linkedin.com/in/jameslamb1/>
>>
>>         [[alternative HTML version deleted]]
>>
>>
>>
>>
>> ------------------------------
>>
>> Message: 8
>> Date: Wed, 24 Jan 2024 09:03:11 +0100
>> From: Serguei Sokol <serguei.sokol at gmail.com>
>> To: r-package-devel at r-project.org
>> Subject: Re: [R-pkg-devel]  How to debug segfault when running build
>>         -> document in Rstudio that includes TMB module
>> Message-ID: <8a8e07b0-2fe9-410b-a9f4-15ab6ebe9f91 at gmail.com>
>> Content-Type: text/plain; charset="utf-8"; Format="flowed"
>>
>> Le 24/01/2024 ? 04:22, Carl Schwarz a ?crit :
>> > I'm trying to update my SPAS package to respond to a CRAN check. Before
>> > starting the changes, I tried to rebuild my package, but now get a
>> segfault
>> > when I try to do a devtools::document() or devtools::check(args =
>> > c('--as-cran')). See below for output from the Rstudio "Build" window.
>> >
>> > I've
>> > - reinstalled ALL packages
>> > - reinstalled R (4.3.2 on MacOS Intel Chip)
>> > - reinstalled Rstudio
>> >
>> > When I try a rebuild/document on a sister package it runs fine, so I
>> > suspect that the problem is related to using a TMB module that is part
>> of
>> > the SPAS package written in Cpp.
>> >
>> > How do I start to "debug" this to identify the problem?
>> Why not simply run devtools::document() from 'R -d gdb' ?
>>
>> Best,
>> Serguei.
>>
>> >
>> > Thanks
>> > Carl Schwarz
>> >
>> >
>> >
>> >
>> > ==> devtools::document(roclets = c('rd', 'collate', 'namespace',
>> 'vignette'))
>> > ? Updating SPAS documentation? Loading SPAS
>> >
>> >   *** caught segfault ***
>> > address 0x54e40, cause 'memory not mapped'
>> >
>> > Traceback:
>> >   1: dyn.load(dll_copy_file)
>> >   2: library.dynam2(path, lib)
>> >   3: load_dll(path)
>> >   4: pkgload::load_all(path, helpers = FALSE, attach_testthat = FALSE)
>> >   5: load_code(base_path)
>> >   6: roxygen2::roxygenise(pkg$path, roclets)
>> >   7: devtools::document(roclets = c("rd", "collate", "namespace",
>> > "vignette"))
>> >   8: withCallingHandlers(expr, packageStartupMessage = function(c)
>> > tryInvokeRestart("muffleMessage"))
>> >   9: suppressPackageStartupMessages({    oldLC <-
>> > Sys.getlocale(category = "LC_COLLATE")    Sys.setlocale(category =
>> > "LC_COLLATE", locale = "C")    on.exit(Sys.setlocale(category =
>> > "LC_COLLATE", locale = oldLC))    devtools::document(roclets = c("rd",
>> > "collate", "namespace",         "vignette"))})
>> > An irrecoverable exception occurred. R is aborting now ...
>> >
>> > Exited with status 139.
>> >
>> >       [[alternative HTML version deleted]]
>> >
>> > ______________________________________________
>> > R-package-devel at r-project.org mailing list
>> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>>
>>
>>
>> ------------------------------
>>
>> Subject: Digest Footer
>>
>> _______________________________________________
>> R-package-devel mailing list
>> R-package-devel at r-project.org
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>>
>> ------------------------------
>>
>> End of R-package-devel Digest, Vol 105, Issue 19
>> ************************************************
>
>

	[[alternative HTML version deleted]]


From @|mon@urb@nek @end|ng |rom R-project@org  Wed Jan 24 23:36:26 2024
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Thu, 25 Jan 2024 11:36:26 +1300
Subject: [R-pkg-devel] R-package-devel Digest, Vol 105, Issue 19
In-Reply-To: <CADtpigYezZfLRdDWGeWjBNXzJQnYPcrGL983BDBu0OO8q5STOQ@mail.gmail.com>
References: <mailman.10186.5.1706094001.5533.r-package-devel@r-project.org>
 <CADtpigb0F6fPchnuu3cm0dV+-En14yHUuUURy5szfFn-3DTBXw@mail.gmail.com>
 <CADtpigYezZfLRdDWGeWjBNXzJQnYPcrGL983BDBu0OO8q5STOQ@mail.gmail.com>
Message-ID: <E35A1CC3-BDA3-4A19-9307-1BBB1059F22D@R-project.org>

This is a reminder why one should never build packages directly in their source directory since it can only be done once (for packages with native source code) - always use

R CMD build --no-build-vignettes foo && R CMD INSTALL foo_*.tar.gz

if you plan to edit files in the source directory and re-use it.

Cheers,
Simon


> On 25/01/2024, at 8:34 AM, Carl Schwarz <cschwarzstatsfuca at gmail.com> wrote:
> 
> Solved...
> 
> The src/ directory also included a .o and .so objects from the last build
> of the package that must be "out of date" because once I removed those
> older objects, the Build -> Document and build -> Check package now work
> fine without crashing...A newer version of the .o and .so objects are now
> built and it now works fine.
> 
> Thanks
> Carl Schwarz
> 
> On Wed, Jan 24, 2024 at 10:57?AM Carl Schwarz <cschwarzstatsfuca at gmail.com>
> wrote:
> 
>> Thanks for your suggestions.  I followed the suggestion in today's message
>> (see results below) which all run without issue.
>> I tried to isolate the problem more....
>> 
>> The issue appears to be with load_dll()
>> 
>> When I try
>>> getwd()
>> [1] "/Users/cschwarz/Library/CloudStorage/Dropbox/SPAS-R/SPAS"
>>> load_dll()
>> 
>> It crashes.
>> 
>> 
>> I moved the package outside of CloudStorage to see if that is the issue.
>>> getwd()
>> [1] "/Users/cschwarz/Desktop/SPAS"
>>> load_dll()
>> 
>> It crashes.
>> 
>> 
>> I tried doing a dll_load() where there is NO c++ object, i.e. a random
>> directory and it terminates with a sensible error message....
>>> setwd("/Users/cschwarz/Desktop/BikePics")
>>> library(pkgload)
>>> load_dll()
>> Error in `value[[3L]]()`:
>> ! Could not find a root 'DESCRIPTION' file that starts with '^Package' in
>> /Users/cschwarz/Desktop/BikePics.
>> ? Are you in your project directory and does your project have a
>> 'DESCRIPTION' file?
>> Run `rlang::last_trace()` to see where the error occurred.
>> 
>> I'm following the suggestions on including TMB code in a package at
>> 
>> https://stackoverflow.com/questions/48627069/guidelines-for-including-tmb-c-code-in-an-r-package
>> and appear to have all the necessary files
>> 
>> I created my own load_dll() function by copying over the code and adding a
>> browser().
>> It appears to run fine until the statement library.dynam2(path.lib) where
>> it cannot find the function library.dynam2
>> 
>> 
>>> my_load_dll()
>> Called from: my_load_dll()
>> Browse[1]> n
>> debug at #4: package <- pkg_name(path)
>> Browse[2]> n
>> debug at #5: env <- ns_env(package)
>> Browse[2]> n
>> debug at #6: nsInfo <- parse_ns_file(path)
>> Browse[2]> n
>> debug at #7: dlls <- list()
>> Browse[2]> n
>> debug at #8: dynLibs <- nsInfo$dynlibs
>> Browse[2]> n
>> debug at #9: nativeRoutines <- list()
>> Browse[2]> n
>> debug at #10: for (i in seq_along(dynLibs)) {
>>    lib <- dynLibs[i]
>>    dlls[[lib]] <- library.dynam2(path, lib)
>>    routines <- assignNativeRoutines(dlls[[lib]], lib, env,
>> nsInfo$nativeRoutines[[lib]])
>>    nativeRoutines[[lib]] <- routines
>>    if (!is.null(names(nsInfo$dynlibs)) &&
>> nzchar(names(nsInfo$dynlibs)[i]))
>>        env[[names(nsInfo$dynlibs)[i]]] <- dlls[[lib]]
>>    setNamespaceInfo(env, "DLLs", dlls)
>> }
>> Browse[2]> n
>> debug at #11: lib <- dynLibs[i]
>> Browse[2]> n
>> debug at #12: dlls[[lib]] <- library.dynam2(path, lib)
>> Browse[2]> n
>> Error in library.dynam2(path, lib) :
>>  could not find function "library.dynam2"
>> 
>> I'm unable to find where the library.dynam2() function lies... A google
>> search for library.dynam2 doesn't show anything except for a cryptic
>> comment in
>> https://rdrr.io/cran/pkgload/src/R/load-dll.R
>> which says
>> 
>> ## The code below taken directly from base::loadNamespace
>>  ## https://github.com/wch/r-source/blob/tags/R-3-3-0/src/library/base/R/namespace.R#L466-L485
>>  ## except for the call to library.dynam2, which is a special version of
>>  ## library.dynam
>> 
>> This is now beyond my pay grade..
>> 
>> Suggestions?
>> 
>> 
>> ------------------------------
>> 
>> From James Lamb <jaylamb20 at gmail.com>
>> 
>> Using the shell:
>> 
>> R CMD build .
>> - success with
>> 
>> * checking for file ?./DESCRIPTION? ... OK
>> 
>> * preparing ?SPAS?:
>> 
>> * checking DESCRIPTION meta-information ... OK
>> 
>> * cleaning src
>> 
>> * installing the package to build vignettes
>> 
>> * creating vignettes ... OK
>> 
>> * cleaning src
>> 
>> * checking for LF line-endings in source and make files and shell scripts
>> 
>> * checking for empty or unneeded directories
>> 
>> * building ?SPAS_2024.1.31.tar.gz?
>> 
>> 
>> R CMD INSTALL --with-keep.source ./SPAS_*.tar.gz
>> - success. Lots of warning from the C compiler but appears to terminate
>> successfully with
>> ....
>> 
>> installing to /Users/cschwarz/Rlibs/00LOCK-SPAS/00new/SPAS/libs
>> 
>> ** R
>> 
>> ** inst
>> 
>> ** byte-compile and prepare package for lazy loading
>> 
>> ** help
>> 
>> *** installing help indices
>> 
>> ** building package indices
>> 
>> ** installing vignettes
>> 
>> ** testing if installed package can be loaded from temporary location
>> 
>> ** checking absolute paths in shared objects and dynamic libraries
>> 
>> ** testing if installed package can be loaded from final location
>> 
>> ** testing if installed package keeps a record of temporary installation
>> path
>> 
>> * DONE (SPAS)
>> 
>> 
>> # (assuming you use roxygen2)
>> Rscript -e "roxygen2::roxygenize(load = 'installed')"
>> 
>> 
>> - success?, it just returns with no messages
>> 
>> cschwarz at schwarz-iMac-2020 SPAS % Rscript -e "roxygen2::roxygenize(load =
>> 'installed')"
>> 
>> cschwarz at schwarz-iMac-2020 SPAS %
>> 
>> 
>> R CMD check --as-cran ./SPAS_*.tar.gz
>> 
>> - successful...runs the checks, but does NOT find the note from the
>> development versions of R that triggered CRAN to ask for a resubmission..
>> 
>> It does find some problems in the html which I will also need to check
>> out, but this appears to be ok as well.
>> 
>> 
>> cschwarz at schwarz-iMac-2020 SPAS % R CMD check --as-cran ./SPAS_*.tar.gz
>> 
>> * using log directory
>> ?/Users/cschwarz/Library/CloudStorage/Dropbox/SPAS-R/SPAS/SPAS.Rcheck?
>> 
>> * using R version 4.3.2 (2023-10-31)
>> 
>> * using platform: x86_64-apple-darwin20 (64-bit)
>> 
>> * R was compiled by
>> 
>>    Apple clang version 14.0.0 (clang-1400.0.29.202)
>> 
>>    GNU Fortran (GCC) 12.2.0
>> 
>> * running under: macOS Sonoma 14.2.1
>> 
>> * using session charset: UTF-8
>> 
>> * using option ?--as-cran?
>> 
>> * checking for file ?SPAS/DESCRIPTION? ... OK
>> 
>> * checking extension type ... Package
>> 
>> * this is package ?SPAS? version ?2024.1.31?
>> 
>> * package encoding: UTF-8
>> 
>> * checking CRAN incoming feasibility ... [3s/16s] NOTE
>> 
>> Maintainer: ?Carl James Schwarz <cschwarz.stat.sfu.ca at gmail.com>?
>> 
>> 
>> Found the following (possibly) invalid URLs:
>> 
>>  URL: https://cdnsciencepub.com/doi/10.1139/f97-238
>> 
>>    From: DESCRIPTION
>> 
>>    Status: 403
>> 
>>    Message: Forbidden
>> 
>>  URL: https://www.jstor.org/stable/2332748
>> 
>>    From: DESCRIPTION
>> 
>>    Status: 403
>> 
>>    Message: Forbidden
>> 
>> * checking package namespace information ... OK
>> 
>> * checking package dependencies ... OK
>> 
>> * checking if this is a source package ... OK
>> 
>> * checking if there is a namespace ... OK
>> 
>> * checking for executable files ... OK
>> 
>> * checking for hidden files and directories ... OK
>> 
>> * checking for portable file names ... OK
>> 
>> * checking for sufficient/correct file permissions ... OK
>> 
>> * checking serialization versions ... OK
>> 
>> * checking whether package ?SPAS? can be installed ... [28s/30s] OK
>> 
>> * used C++ compiler: ?Apple clang version 15.0.0 (clang-1500.1.0.2.5)?
>> 
>> * used SDK: ??
>> 
>> * checking installed package size ... NOTE
>> 
>>  installed size is 12.8Mb
>> 
>>  sub-directories of 1Mb or more:
>> 
>>    libs  12.1Mb
>> 
>> * checking package directory ... OK
>> 
>> * checking for future file timestamps ... OK
>> 
>> * checking ?build? directory ... OK
>> 
>> * checking DESCRIPTION meta-information ... OK
>> 
>> * checking top-level files ... OK
>> 
>> * checking for left-over files ... OK
>> 
>> * checking index information ... OK
>> 
>> * checking package subdirectories ... OK
>> 
>> * checking R files for non-ASCII characters ... OK
>> 
>> * checking R files for syntax errors ... OK
>> 
>> * checking whether the package can be loaded ... OK
>> 
>> * checking whether the package can be loaded with stated dependencies ...
>> OK
>> 
>> * checking whether the package can be unloaded cleanly ... OK
>> 
>> * checking whether the namespace can be loaded with stated dependencies
>> ... OK
>> 
>> * checking whether the namespace can be unloaded cleanly ... OK
>> 
>> * checking loading without being on the library search path ... OK
>> 
>> * checking startup messages can be suppressed ... OK
>> 
>> * checking use of S3 registration ... OK
>> 
>> * checking dependencies in R code ... OK
>> 
>> * checking S3 generic/method consistency ... OK
>> 
>> * checking replacement functions ... OK
>> 
>> * checking foreign function calls ... OK
>> 
>> * checking R code for possible problems ... OK
>> 
>> * checking Rd files ... OK
>> 
>> * checking Rd metadata ... OK
>> 
>> * checking Rd line widths ... OK
>> 
>> * checking Rd cross-references ... OK
>> 
>> * checking for missing documentation entries ... OK
>> 
>> * checking for code/documentation mismatches ... OK
>> 
>> * checking Rd \usage sections ... OK
>> 
>> * checking Rd contents ... OK
>> 
>> * checking for unstated dependencies in examples ... OK
>> 
>> * checking line endings in C/C++/Fortran sources/headers ... OK
>> 
>> * checking pragmas in C/C++ headers and code ... OK
>> 
>> * checking compilation flags used ... OK
>> 
>> * checking compiled code ... OK
>> 
>> * checking installed files from ?inst/doc? ... OK
>> 
>> * checking files in ?vignettes? ... OK
>> 
>> * checking examples ... OK
>> 
>> * checking for unstated dependencies in vignettes ... OK
>> 
>> * checking package vignettes in ?inst/doc? ... OK
>> 
>> * checking re-building of vignette outputs ... [11s/13s] OK
>> 
>> * checking PDF version of manual ... OK
>> 
>> * checking HTML version of manual ... NOTE
>> 
>> Found the following HTML validation problems:
>> 
>> SPAS.autopool.html:4:1 (SPAS.autopool.Rd:5): Warning: <link> inserting
>> "type" attribute
>> 
>> SPAS.autopool.html:12:1 (SPAS.autopool.Rd:5): Warning: <script>
>> proprietary attribute "onload"
>> 
>> SPAS.autopool.html:12:1 (SPAS.autopool.Rd:5): Warning: <script> inserting
>> "type" attribute
>> 
>> SPAS.autopool.html:17:1 (SPAS.autopool.Rd:5): Warning: <table> lacks
>> "summary" attribute
>> 
>> SPAS.autopool.html:46:1 (SPAS.autopool.Rd:19): Warning: <table> lacks
>> "summary" attribute
>> 
>> SPAS.extract.par.est.html:4:1 (SPAS.extract.par.est.Rd:5): Warning: <link>
>> inserting "type" attribute
>> 
>> SPAS.extract.par.est.html:12:1 (SPAS.extract.par.est.Rd:5): Warning:
>> <script> proprietary attribute "onload"
>> 
>> SPAS.extract.par.est.html:12:1 (SPAS.extract.par.est.Rd:5): Warning:
>> <script> inserting "type" attribute
>> 
>> SPAS.extract.par.est.html:17:1 (SPAS.extract.par.est.Rd:5): Warning:
>> <table> lacks "summary" attribute
>> 
>> SPAS.extract.par.est.html:35:1 (SPAS.extract.par.est.Rd:10): Warning:
>> <table> lacks "summary" attribute
>> 
>> SPAS.fit.model.html:4:1 (SPAS.fit.model.Rd:5): Warning: <link> inserting
>> "type" attribute
>> 
>> SPAS.fit.model.html:12:1 (SPAS.fit.model.Rd:5): Warning: <script>
>> proprietary attribute "onload"
>> 
>> SPAS.fit.model.html:12:1 (SPAS.fit.model.Rd:5): Warning: <script>
>> inserting "type" attribute
>> 
>> SPAS.fit.model.html:17:1 (SPAS.fit.model.Rd:5): Warning: <table> lacks
>> "summary" attribute
>> 
>> SPAS.fit.model.html:56:1 (SPAS.fit.model.Rd:28): Warning: <table> lacks
>> "summary" attribute
>> 
>> SPAS.likelihood.star.DM.html:4:1 (SPAS.likelihood.star.DM.Rd:5): Warning:
>> <link> inserting "type" attribute
>> 
>> SPAS.likelihood.star.DM.html:12:1 (SPAS.likelihood.star.DM.Rd:5): Warning:
>> <script> proprietary attribute "onload"
>> 
>> SPAS.likelihood.star.DM.html:12:1 (SPAS.likelihood.star.DM.Rd:5): Warning:
>> <script> inserting "type" attribute
>> 
>> SPAS.likelihood.star.DM.html:17:1 (SPAS.likelihood.star.DM.Rd:5): Warning:
>> <table> lacks "summary" attribute
>> 
>> SPAS.print.model.html:4:1 (SPAS.print.model.Rd:5): Warning: <link>
>> inserting "type" attribute
>> 
>> SPAS.print.model.html:12:1 (SPAS.print.model.Rd:5): Warning: <script>
>> proprietary attribute "onload"
>> 
>> SPAS.print.model.html:12:1 (SPAS.print.model.Rd:5): Warning: <script>
>> inserting "type" attribute
>> 
>> SPAS.print.model.html:17:1 (SPAS.print.model.Rd:5): Warning: <table> lacks
>> "summary" attribute
>> 
>> SPAS.print.model.html:36:1 (SPAS.print.model.Rd:10): Warning: <table>
>> lacks "summary" attribute
>> 
>> dot-onAttach.html:4:1 (dot-onAttach.Rd:5): Warning: <link> inserting
>> "type" attribute
>> 
>> dot-onAttach.html:12:1 (dot-onAttach.Rd:5): Warning: <script> proprietary
>> attribute "onload"
>> 
>> dot-onAttach.html:12:1 (dot-onAttach.Rd:5): Warning: <script> inserting
>> "type" attribute
>> 
>> dot-onAttach.html:17:1 (dot-onAttach.Rd:5): Warning: <table> lacks
>> "summary" attribute
>> 
>> dot-onAttach.html:19:1 (dot-onAttach.Rd:5): Warning: <h2> attribute "id"
>> has invalid value ".onAttach"
>> 
>> dummy.html:4:1 (dummy.Rd:5): Warning: <link> inserting "type" attribute
>> 
>> dummy.html:12:1 (dummy.Rd:5): Warning: <script> proprietary attribute
>> "onload"
>> 
>> dummy.html:12:1 (dummy.Rd:5): Warning: <script> inserting "type" attribute
>> 
>> dummy.html:17:1 (dummy.Rd:5): Warning: <table> lacks "summary" attribute
>> 
>> logit.html:4:1 (logit.Rd:5): Warning: <link> inserting "type" attribute
>> 
>> logit.html:12:1 (logit.Rd:5): Warning: <script> proprietary attribute
>> "onload"
>> 
>> logit.html:12:1 (logit.Rd:5): Warning: <script> inserting "type" attribute
>> 
>> logit.html:17:1 (logit.Rd:5): Warning: <table> lacks "summary" attribute
>> 
>> logit.html:35:1 (logit.Rd:10): Warning: <table> lacks "summary" attribute
>> 
>> * checking for non-standard things in the check directory ... OK
>> 
>> * checking for detritus in the temp directory ... OK
>> 
>> * DONE
>> 
>> 
>> Status: 3 NOTEs
>> 
>> See
>> 
>> 
>> ?/Users/cschwarz/Library/CloudStorage/Dropbox/SPAS-R/SPAS/SPAS.Rcheck/00check.log?
>> 
>> for details.
>> 
>> 
>> 
>> cschwarz at schwarz-iMac-2020 SPAS %
>> 
>> 
>> 
>> From: Serguei Sokol <serguei.sokol at gmail.com>
>> 
>> Why not simply run devtools::document() from 'R -d gdb' ?
>> 
>> 
>> This didn't work on my Mac
>> 
>> 
>> cschwarz at schwarz-iMac-2020 SPAS % R -d gdb
>> 
>> /usr/local/bin/R: line 299: exec: gdb: not found
>> 
>> 
>> But then I tried launching R by it self, i.e. not from RStudios and
>> devtools::document()
>> 
>> and it too crashes so it appears to be something in devtools::document()??
>> 
>> 
>> 
>> [1] "/Users/cschwarz/Library/CloudStorage/Dropbox/SPAS-R/SPAS"
>> 
>>> devtools::document()
>> 
>> ? Updating SPAS documentation
>> 
>> ? Loading SPAS
>> 
>> 
>> *** caught segfault ***
>> 
>> address 0x54e40, cause 'memory not mapped'
>> 
>> 
>> Traceback:
>> 
>> 1: dyn.load(dll_copy_file)
>> 
>> 2: library.dynam2(path, lib)
>> 
>> 3: load_dll(path)
>> 
>> 4: pkgload::load_all(path, helpers = FALSE, attach_testthat = FALSE)
>> 
>> 5: load_code(base_path)
>> 
>> 6: roxygen2::roxygenise(pkg$path, roclets)
>> 
>> 7: devtools::document()
>> 
>> 
>> Possible actions:
>> 
>> 1: abort (with core dump, if enabled)
>> 
>> 2: normal R exit
>> 
>> 3: exit R without saving workspace
>> 
>> 4: exit R saving workspace
>> 
>> Selection:
>> 
>> 
>> 
>> 
>> 
>> On Wed, Jan 24, 2024 at 3:01?AM <r-package-devel-request at r-project.org>
>> wrote:
>> 
>>> Send R-package-devel mailing list submissions to
>>>        r-package-devel at r-project.org
>>> 
>>> To subscribe or unsubscribe via the World Wide Web, visit
>>>        https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>> or, via email, send a message with subject or body 'help' to
>>>        r-package-devel-request at r-project.org
>>> 
>>> You can reach the person managing the list at
>>>        r-package-devel-owner at r-project.org
>>> 
>>> When replying, please edit your Subject line so it is more specific
>>> than "Re: Contents of R-package-devel digest..."
>>> 
>>> 
>>> Today's Topics:
>>> 
>>>   1. lost braces note on CRAN pretest related to \itemize
>>>      (Patrick Giraudoux)
>>>   2. Re:  lost braces note on CRAN pretest related to \itemize
>>>      (Dirk Eddelbuettel)
>>>   3. Re:  lost braces note on CRAN pretest related to \itemize
>>>      (Ivan Krylov)
>>>   4. Re:  lost braces note on CRAN pretest related to \itemize
>>>      (Patrick Giraudoux)
>>>   5. Re:  lost braces note on CRAN pretest related to \itemize
>>>      (Georgi Boshnakov)
>>>   6. How to debug segfault when running build -> document in
>>>      Rstudio that includes TMB module (Carl Schwarz)
>>>   7. Re:  How to debug segfault when running build -> document in
>>>      Rstudio that includes TMB module (James Lamb)
>>>   8. Re:  How to debug segfault when running build -> document in
>>>      Rstudio that includes TMB module (Serguei Sokol)
>>> 
>>> ----------------------------------------------------------------------
>>> 
>>> Message: 1
>>> Date: Tue, 23 Jan 2024 19:39:54 +0100
>>> From: Patrick Giraudoux <patrick.giraudoux at univ-fcomte.fr>
>>> To: R Package Development <r-package-devel at r-project.org>
>>> Subject: [R-pkg-devel] lost braces note on CRAN pretest related to
>>>        \itemize
>>> Message-ID: <94a7abb7-fbcd-4852-8170-2532b9af58aa at univ-fcomte.fr>
>>> Content-Type: text/plain; charset="utf-8"
>>> 
>>> Dear listers,
>>> 
>>> I meet a problem with the  submission of the package pgirmess. In fact
>>> the package goes through R CMD check --as-cran and R-wind-builder
>>> smoothly with no problem, but submitted to CRAN, I get this:
>>> 
>>> Flavor: r-devel-linux-x86_64-debian-gcc, r-devel-windows-x86_64
>>> Check: CRAN incoming feasibility, Result: Note_to_CRAN_maintainers
>>>   Maintainer: 'Patrick Giraudoux<patrick.giraudoux at univ-fcomte.fr>'
>>> 
>>> Flavor: r-devel-linux-x86_64-debian-gcc, r-devel-windows-x86_64
>>> Check: Rd files, Result: NOTE
>>>   checkRd: (-1) mergeTrackObs.rd:24: Lost braces in \itemize; \value
>>> handles \item{}{} directly
>>>   checkRd: (-1) mergeTrackObs.rd:25: Lost braces in \itemize; \value
>>> handles \item{}{} directly
>>>   checkRd: (-1) mergeTrackObs.rd:26: Lost braces in \itemize; \value
>>> handles \item{}{} directly
>>>   checkRd: (-1) selMod.rd:29-31: Lost braces in \itemize; meant
>>> \describe ?
>>>   checkRd: (-1) selMod.rd:32-33: Lost braces in \itemize; meant
>>> \describe ?
>>>   checkRd: (-1) selMod.rd:54: Lost braces in \itemize; meant \describe ?
>>>   checkRd: (-1) selMod.rd:55: Lost braces in \itemize; meant \describe ?
>>> 
>>> The code that seems to make problem (although braces are balanced; I
>>> wonder why a claim 'lost braces') is
>>> 
>>> - for mergeTrackObs.rd
>>> 
>>> \value{
>>>   A \code{\link[sf]{sfc}} object, of POINT geometry, with the following
>>> columns:
>>>   \itemize{
>>>   \item{ID}{ ID number}
>>>   \item{nObs}{ The number of observations in the interval}
>>>   \item{geometry} {POINT geometry}
>>>   }
>>> }
>>> 
>>> - for selMod.rd
>>> 
>>> \details{
>>>   This function provides parameters used in the information theoretic
>>> methods for model comparisons.
>>>   \itemize{
>>>   \item{.}{lm and glm objects can be passed directly as the upper scope
>>> of term addition (all terms added).
>>>   Every model from y\eqn{\sim}{~}1 is computed adding one term at a
>>> time until the upper scope model is derived. This is a stepwise analysis
>>> where the terms are added sequentially and this does NOT provide all
>>> combinations of terms and interactions. Offset terms cannot be proceeded
>>> here.
>>>   }
>>>   \item{.}{A list of user specified lm, glm, nls, lme or nlme objects
>>> (actually any object for which AIC and logLik functions are applicable)
>>> to compare can alternately be passed.
>>>   }
>>>   }
>>> }
>>> 
>>> Has anyone an idea about what is going wrong ?
>>> 
>>> Patrick
>>> 
>>> 
>>> 
>>> 
>>> 
>>>        [[alternative HTML version deleted]]
>>> 
>>> 
>>> 
>>> 
>>> ------------------------------
>>> 
>>> Message: 2
>>> Date: Tue, 23 Jan 2024 12:58:46 -0600
>>> From: Dirk Eddelbuettel <edd at debian.org>
>>> To: Patrick Giraudoux <patrick.giraudoux at univ-fcomte.fr>
>>> Cc: R Package Development <r-package-devel at r-project.org>
>>> Subject: Re: [R-pkg-devel]  lost braces note on CRAN pretest related
>>>        to \itemize
>>> Message-ID: <26032.3174.970615.617686 at rob.eddelbuettel.com>
>>> Content-Type: text/plain; charset="us-ascii"
>>> 
>>> 
>>> On 23 January 2024 at 19:39, Patrick Giraudoux wrote:
>>> | Has anyone an idea about what is going wrong ?
>>> 
>>> \item has no braces following it.  From a package I submitted today and
>>> for
>>> which I still have NEWS.Rd in the editor (indented here):
>>> 
>>>  \section{Changes in version 0.0.22 (2024-01-23)}{
>>>    \itemize{
>>>      \item Replace empty examples macros to satisfy CRAN request.
>>>    }
>>>  }
>>> 
>>> Hth,  Dirk
>>> 
>>> --
>>> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>>> 
>>> 
>>> 
>>> 
>>> ------------------------------
>>> 
>>> Message: 3
>>> Date: Tue, 23 Jan 2024 21:59:54 +0300
>>> From: Ivan Krylov <ikrylov at disroot.org>
>>> To: R Package Development <r-package-devel at r-project.org>
>>> Subject: Re: [R-pkg-devel]  lost braces note on CRAN pretest related
>>>        to \itemize
>>> Message-ID: <20240123215954.0afb8e9d at Tarkus>
>>> Content-Type: text/plain; charset="utf-8"
>>> 
>>> ? Tue, 23 Jan 2024 19:39:54 +0100
>>> Patrick Giraudoux <patrick.giraudoux at univ-fcomte.fr> ?????:
>>> 
>>>>   \itemize{
>>>>   \item{.}{lm and glm objects can be passed directly as the upper
>>>> scope of term addition (all terms added).
>>> 
>>> Inside the \itemize and \enumerate commands, the \item command doesn't
>>> take any arguments:
>>> https://cran.r-project.org/doc/manuals/R-exts.html#Lists-and-tables
>>> 
>>> Instead, it starts a new paragraph with a number (\enumerate) or a
>>> bullet point (\itemize). R CMD check is reminding you that \itemize{
>>> \item{foo}{bar} } is equivalent to \itemize{ \item foo bar } without
>>> any braces.
>>> 
>>> If you meant to highlight a word by making it an argument of the \item
>>> command, use the \describe command. Here, you're highlighting a dot,
>>> which would be rendered with a bullet point before it, so it's probably
>>> neither semantically nor visually appropriate.
>>> 
>>>> \value{
>>>>   A \code{\link[sf]{sfc}} object, of POINT geometry, with the
>>>> following columns:
>>>>   \itemize{
>>>>   \item{ID}{ ID number}
>>> 
>>> The same problem applies here.
>>> 
>>> Additionally, R CMD check is reminding you that \value{} is implicitly
>>> a special case of a \describe{} environment:
>>> https://cran.r-project.org/doc/manuals/R-exts.html#index-_005cvalue
>>> 
>>> Since you're already using \item{}{} labels to name the components of
>>> the value, just drop the \itemize{} (but keep its contents). \value{} is
>>> enough.
>>> 
>>> --
>>> Best regards,
>>> Ivan
>>> 
>>> 
>>> 
>>> 
>>> ------------------------------
>>> 
>>> Message: 4
>>> Date: Tue, 23 Jan 2024 20:08:20 +0100
>>> From: Patrick Giraudoux <patrick.giraudoux at univ-fcomte.fr>
>>> To: Dirk Eddelbuettel <edd at debian.org>
>>> Cc: R Package Development <r-package-devel at r-project.org>
>>> Subject: Re: [R-pkg-devel]  lost braces note on CRAN pretest related
>>>        to \itemize
>>> Message-ID: <68b9da72-26ad-4f27-8839-aa5b2a65cc6a at univ-fcomte.fr>
>>> Content-Type: text/plain; charset="utf-8"
>>> 
>>> OK. Clear enough. CRAN applies a new "filter" as it was going through
>>> without crying a note since decades ;-). However, indeed, re-checking
>>> the manual "Writing R extensions" my syntax was wrong...
>>> Thanks for the guidance,
>>> Patrick
>>> 
>>> Le 23/01/2024 ? 19:58, Dirk Eddelbuettel a ?crit :
>>>> On 23 January 2024 at 19:39, Patrick Giraudoux wrote:
>>>> | Has anyone an idea about what is going wrong ?
>>>> 
>>>> \item has no braces following it.  From a package I submitted today and
>>> for
>>>> which I still have NEWS.Rd in the editor (indented here):
>>>> 
>>>>   \section{Changes in version 0.0.22 (2024-01-23)}{
>>>>     \itemize{
>>>>       \item Replace empty examples macros to satisfy CRAN request.
>>>>     }
>>>>   }
>>>> 
>>>> Hth,  Dirk
>>>> 
>>> 
>>>        [[alternative HTML version deleted]]
>>> 
>>> 
>>> 
>>> 
>>> ------------------------------
>>> 
>>> Message: 5
>>> Date: Tue, 23 Jan 2024 20:14:13 +0000
>>> From: Georgi Boshnakov <georgi.boshnakov at manchester.ac.uk>
>>> To: Patrick Giraudoux <patrick.giraudoux at univ-fcomte.fr>, Dirk
>>>        Eddelbuettel <edd at debian.org>
>>> Cc: R Package Development <r-package-devel at r-project.org>
>>> Subject: Re: [R-pkg-devel]  lost braces note on CRAN pretest related
>>>        to \itemize
>>> Message-ID:
>>>        <
>>> LO0P265MB63252FC9F918C154634DD11BAE742 at LO0P265MB6325.GBRP265.PROD.OUTLOOK.COM
>>>> 
>>> 
>>> Content-Type: text/plain; charset="utf-8"
>>> 
>>> The notes you get illustrate why they are useful, if you look at your
>>> rendered documentation you probably will see something wrong. Thousands of
>>> packages on CRAN, including some of mines have had this kind of
>>> infelicities for years.
>>> 
>>> Firstly, the two sets of braces suggest that you meant a description
>>> environment, not itemize (in which  its only argument doesn't need braces).
>>> 
>>> Secondly, in the value section, \item is implicitly enclosed in \describe
>>> and you don't need to include the latter.
>>> 
>>> Georgi Boshnakov
>>> 
>>> 
>>> Sent from Outlook for Android<https://aka.ms/AAb9ysg>
>>> 
>>> ________________________________
>>> From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf
>>> of Patrick Giraudoux <patrick.giraudoux at univ-fcomte.fr>
>>> Sent: Tuesday, January 23, 2024 7:09:22 pm
>>> To: Dirk Eddelbuettel <edd at debian.org>
>>> Cc: R Package Development <r-package-devel at r-project.org>
>>> Subject: Re: [R-pkg-devel]  lost braces note on CRAN pretest related to
>>> \itemize
>>> 
>>> OK. Clear enough. CRAN applies a new "filter" as it was going through
>>> without crying a note since decades ;-). However, indeed, re-checking
>>> the manual "Writing R extensions" my syntax was wrong...
>>> Thanks for the guidance,
>>> Patrick
>>> 
>>> Le 23/01/2024 ? 19:58, Dirk Eddelbuettel a ?crit :
>>>> On 23 January 2024 at 19:39, Patrick Giraudoux wrote:
>>>> | Has anyone an idea about what is going wrong ?
>>>> 
>>>> \item has no braces following it.  From a package I submitted today and
>>> for
>>>> which I still have NEWS.Rd in the editor (indented here):
>>>> 
>>>>   \section{Changes in version 0.0.22 (2024-01-23)}{
>>>>     \itemize{
>>>>       \item Replace empty examples macros to satisfy CRAN request.
>>>>     }
>>>>   }
>>>> 
>>>> Hth,  Dirk
>>>> 
>>> 
>>>        [[alternative HTML version deleted]]
>>> 
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> 
>>> https://urldefense.com/v3/__https://stat.ethz.ch/mailman/listinfo/r-package-devel__;!!PDiH4ENfjr2_Jw!Gu9AhS4Yi4k5IC8TXv4B8xpznl-8-Jhl-cdxRZ6zVrRCdmDaSTVYpaG5XDoitdms9FuHQGV7adP-Q6WD6w2bMws_b5UnszsH5VsXFBMUIvFX4Nc$
>>> [stat[.]ethz[.]ch]
>>> 
>>> 
>>>        [[alternative HTML version deleted]]
>>> 
>>> 
>>> 
>>> 
>>> ------------------------------
>>> 
>>> Message: 6
>>> Date: Tue, 23 Jan 2024 19:22:43 -0800
>>> From: Carl Schwarz <cschwarzstatsfuca at gmail.com>
>>> To: r-package-devel at r-project.org
>>> Subject: [R-pkg-devel] How to debug segfault when running build ->
>>>        document in Rstudio that includes TMB module
>>> Message-ID:
>>>        <
>>> CADtpigYViZ+2GJq+XQyJ6GeyEZ_CWMnUPg20-LcdLKC3GWvVxA at mail.gmail.com>
>>> Content-Type: text/plain; charset="utf-8"
>>> 
>>> I'm trying to update my SPAS package to respond to a CRAN check. Before
>>> starting the changes, I tried to rebuild my package, but now get a
>>> segfault
>>> when I try to do a devtools::document() or devtools::check(args =
>>> c('--as-cran')). See below for output from the Rstudio "Build" window.
>>> 
>>> I've
>>> - reinstalled ALL packages
>>> - reinstalled R (4.3.2 on MacOS Intel Chip)
>>> - reinstalled Rstudio
>>> 
>>> When I try a rebuild/document on a sister package it runs fine, so I
>>> suspect that the problem is related to using a TMB module that is part of
>>> the SPAS package written in Cpp.
>>> 
>>> How do I start to "debug" this to identify the problem?
>>> 
>>> Thanks
>>> Carl Schwarz
>>> 
>>> 
>>> 
>>> 
>>> ==> devtools::document(roclets = c('rd', 'collate', 'namespace',
>>> 'vignette'))
>>> ? Updating SPAS documentation? Loading SPAS
>>> 
>>> *** caught segfault ***
>>> address 0x54e40, cause 'memory not mapped'
>>> 
>>> Traceback:
>>> 1: dyn.load(dll_copy_file)
>>> 2: library.dynam2(path, lib)
>>> 3: load_dll(path)
>>> 4: pkgload::load_all(path, helpers = FALSE, attach_testthat = FALSE)
>>> 5: load_code(base_path)
>>> 6: roxygen2::roxygenise(pkg$path, roclets)
>>> 7: devtools::document(roclets = c("rd", "collate", "namespace",
>>> "vignette"))
>>> 8: withCallingHandlers(expr, packageStartupMessage = function(c)
>>> tryInvokeRestart("muffleMessage"))
>>> 9: suppressPackageStartupMessages({    oldLC <-
>>> Sys.getlocale(category = "LC_COLLATE")    Sys.setlocale(category =
>>> "LC_COLLATE", locale = "C")    on.exit(Sys.setlocale(category =
>>> "LC_COLLATE", locale = oldLC))    devtools::document(roclets = c("rd",
>>> "collate", "namespace",         "vignette"))})
>>> An irrecoverable exception occurred. R is aborting now ...
>>> 
>>> Exited with status 139.
>>> 
>>>        [[alternative HTML version deleted]]
>>> 
>>> 
>>> 
>>> 
>>> ------------------------------
>>> 
>>> Message: 7
>>> Date: Tue, 23 Jan 2024 21:35:31 -0600
>>> From: James Lamb <jaylamb20 at gmail.com>
>>> To: cschwarzstatsfuca at gmail.com,  R Package Development
>>>        <r-package-devel at r-project.org>
>>> Subject: Re: [R-pkg-devel]  How to debug segfault when running build
>>>        -> document in Rstudio that includes TMB module
>>> Message-ID:
>>>        <CADPubGQcowMyyZUCHYu=
>>> 4ndjyB9xAu4gLLOjgKjtS1L_kqdNVQ at mail.gmail.com>
>>> Content-Type: text/plain; charset="utf-8"
>>> 
>>> Carl,
>>> 
>>> Consider performing these tasks without the use of the 'devtools' package,
>>> running the following from a shell.
>>> 
>>> ```shell
>>> R CMD build .
>>> R CMD INSTALL --with-keep.source ./SPAS_*.tar.gz
>>> 
>>> # (assuming you use roxygen2)
>>> Rscript -e "roxygen2::roxygenize(load = 'installed')"
>>> 
>>> R CMD check --as-cran ./SPAS_*.tar.gz
>>> ```
>>> 
>>> If those commands are successful, then you know the problem lies somewhere
>>> in the difference between that approach and what 'devtools' does, which
>>> might help to narrow it down.
>>> 
>>> Cheers,
>>> 
>>> -James
>>> 
>>> 
>>> On Tue, Jan 23, 2024 at 9:23?PM Carl Schwarz <cschwarzstatsfuca at gmail.com
>>>> 
>>> wrote:
>>> 
>>>> I'm trying to update my SPAS package to respond to a CRAN check. Before
>>>> starting the changes, I tried to rebuild my package, but now get a
>>> segfault
>>>> when I try to do a devtools::document() or devtools::check(args =
>>>> c('--as-cran')). See below for output from the Rstudio "Build" window.
>>>> 
>>>> I've
>>>> - reinstalled ALL packages
>>>> - reinstalled R (4.3.2 on MacOS Intel Chip)
>>>> - reinstalled Rstudio
>>>> 
>>>> When I try a rebuild/document on a sister package it runs fine, so I
>>>> suspect that the problem is related to using a TMB module that is part
>>> of
>>>> the SPAS package written in Cpp.
>>>> 
>>>> How do I start to "debug" this to identify the problem?
>>>> 
>>>> Thanks
>>>> Carl Schwarz
>>>> 
>>>> 
>>>> 
>>>> 
>>>> ==> devtools::document(roclets = c('rd', 'collate', 'namespace',
>>>> 'vignette'))
>>>> ? Updating SPAS documentation? Loading SPAS
>>>> 
>>>> *** caught segfault ***
>>>> address 0x54e40, cause 'memory not mapped'
>>>> 
>>>> Traceback:
>>>> 1: dyn.load(dll_copy_file)
>>>> 2: library.dynam2(path, lib)
>>>> 3: load_dll(path)
>>>> 4: pkgload::load_all(path, helpers = FALSE, attach_testthat = FALSE)
>>>> 5: load_code(base_path)
>>>> 6: roxygen2::roxygenise(pkg$path, roclets)
>>>> 7: devtools::document(roclets = c("rd", "collate", "namespace",
>>>> "vignette"))
>>>> 8: withCallingHandlers(expr, packageStartupMessage = function(c)
>>>> tryInvokeRestart("muffleMessage"))
>>>> 9: suppressPackageStartupMessages({    oldLC <-
>>>> Sys.getlocale(category = "LC_COLLATE")    Sys.setlocale(category =
>>>> "LC_COLLATE", locale = "C")    on.exit(Sys.setlocale(category =
>>>> "LC_COLLATE", locale = oldLC))    devtools::document(roclets = c("rd",
>>>> "collate", "namespace",         "vignette"))})
>>>> An irrecoverable exception occurred. R is aborting now ...
>>>> 
>>>> Exited with status 139.
>>>> 
>>>>        [[alternative HTML version deleted]]
>>>> 
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>> 
>>> 
>>> 
>>> --
>>> James Lamb (he/him)
>>> GitHub <https://github.com/jameslamb> | LinkedIn
>>> <https://www.linkedin.com/in/jameslamb1/>
>>> 
>>>        [[alternative HTML version deleted]]
>>> 
>>> 
>>> 
>>> 
>>> ------------------------------
>>> 
>>> Message: 8
>>> Date: Wed, 24 Jan 2024 09:03:11 +0100
>>> From: Serguei Sokol <serguei.sokol at gmail.com>
>>> To: r-package-devel at r-project.org
>>> Subject: Re: [R-pkg-devel]  How to debug segfault when running build
>>>        -> document in Rstudio that includes TMB module
>>> Message-ID: <8a8e07b0-2fe9-410b-a9f4-15ab6ebe9f91 at gmail.com>
>>> Content-Type: text/plain; charset="utf-8"; Format="flowed"
>>> 
>>> Le 24/01/2024 ? 04:22, Carl Schwarz a ?crit :
>>>> I'm trying to update my SPAS package to respond to a CRAN check. Before
>>>> starting the changes, I tried to rebuild my package, but now get a
>>> segfault
>>>> when I try to do a devtools::document() or devtools::check(args =
>>>> c('--as-cran')). See below for output from the Rstudio "Build" window.
>>>> 
>>>> I've
>>>> - reinstalled ALL packages
>>>> - reinstalled R (4.3.2 on MacOS Intel Chip)
>>>> - reinstalled Rstudio
>>>> 
>>>> When I try a rebuild/document on a sister package it runs fine, so I
>>>> suspect that the problem is related to using a TMB module that is part
>>> of
>>>> the SPAS package written in Cpp.
>>>> 
>>>> How do I start to "debug" this to identify the problem?
>>> Why not simply run devtools::document() from 'R -d gdb' ?
>>> 
>>> Best,
>>> Serguei.
>>> 
>>>> 
>>>> Thanks
>>>> Carl Schwarz
>>>> 
>>>> 
>>>> 
>>>> 
>>>> ==> devtools::document(roclets = c('rd', 'collate', 'namespace',
>>> 'vignette'))
>>>> ? Updating SPAS documentation? Loading SPAS
>>>> 
>>>>  *** caught segfault ***
>>>> address 0x54e40, cause 'memory not mapped'
>>>> 
>>>> Traceback:
>>>>  1: dyn.load(dll_copy_file)
>>>>  2: library.dynam2(path, lib)
>>>>  3: load_dll(path)
>>>>  4: pkgload::load_all(path, helpers = FALSE, attach_testthat = FALSE)
>>>>  5: load_code(base_path)
>>>>  6: roxygen2::roxygenise(pkg$path, roclets)
>>>>  7: devtools::document(roclets = c("rd", "collate", "namespace",
>>>> "vignette"))
>>>>  8: withCallingHandlers(expr, packageStartupMessage = function(c)
>>>> tryInvokeRestart("muffleMessage"))
>>>>  9: suppressPackageStartupMessages({    oldLC <-
>>>> Sys.getlocale(category = "LC_COLLATE")    Sys.setlocale(category =
>>>> "LC_COLLATE", locale = "C")    on.exit(Sys.setlocale(category =
>>>> "LC_COLLATE", locale = oldLC))    devtools::document(roclets = c("rd",
>>>> "collate", "namespace",         "vignette"))})
>>>> An irrecoverable exception occurred. R is aborting now ...
>>>> 
>>>> Exited with status 139.
>>>> 
>>>>      [[alternative HTML version deleted]]
>>>> 
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>> 
>>> 
>>> 
>>> 
>>> ------------------------------
>>> 
>>> Subject: Digest Footer
>>> 
>>> _______________________________________________
>>> R-package-devel mailing list
>>> R-package-devel at r-project.org
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>> 
>>> 
>>> ------------------------------
>>> 
>>> End of R-package-devel Digest, Vol 105, Issue 19
>>> ************************************************
>> 
>> 
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 


From c@chw@rz@t@t@|uc@ @end|ng |rom gm@||@com  Thu Jan 25 01:14:05 2024
From: c@chw@rz@t@t@|uc@ @end|ng |rom gm@||@com (Carl Schwarz)
Date: Wed, 24 Jan 2024 16:14:05 -0800
Subject: [R-pkg-devel] How to deal with issues when using
 devtools::check_rhub(), rhub::check(), and web form
In-Reply-To: <CADtpigYViZ+2GJq+XQyJ6GeyEZ_CWMnUPg20-LcdLKC3GWvVxA@mail.gmail.com>
References: <CADtpigYViZ+2GJq+XQyJ6GeyEZ_CWMnUPg20-LcdLKC3GWvVxA@mail.gmail.com>
Message-ID: <CADtpigaY9tjUsDp_e12q9EzRO-KEbAD_AJ40QjfL+D5Yq9Tn1g@mail.gmail.com>

I fixed all of the new issues identified by CRAN, and these seem to be from
the
    r-devel-linux-x86_64-fedora-gcc
and similar machines where it flags documentation in a function.

However, when I use devtools::check_rhub(), it just "hangs", i.e. generates
messages saying to check a web file that remains blank for several hours.
Ditto for rhub::check().

I tried using the web interface at https://builder.r-hub.io/ to select the
denebian machines, and it returns a message saying

We're sorry, but something went wrong.
If you are the application owner check the logs for more information.
We're sorry, but something went wrong.
If you are the application owner check the logs for more information.

Same thing happens when I select the windows release machine.

Revised packages passes devtools::check_win_release() or
devtools::check_win_devel() and my local (on a Mac) package checks.

So how do I tell if this a "Rhub issue" or an issue with my package? Or do
I just give up on using Rhub to check the denebian machines?

THanks
Carl Schwarz

	[[alternative HTML version deleted]]


From |kry|ov @end|ng |rom d|@root@org  Thu Jan 25 06:26:29 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Thu, 25 Jan 2024 08:26:29 +0300
Subject: [R-pkg-devel] 
 New Package Removal because Shared Library Too Large
 from Debugging Symbols
In-Reply-To: <1d7380ca-53d9-417c-9ef6-1ff3509aef4c@gmail.com>
References: <D94C0990-EC93-432F-B10A-C2B81E55BB2C@jgaeb.com>
 <20240120230237.41df2796@Tarkus>
 <E8F43369-EC0C-4F59-99D5-2FC1C993DEC0@jgaeb.com>
 <20240121114411.41ed2c5c@Tarkus>
 <e83ab772-b5cb-4d12-92d6-90c4712a8df8@gmail.com>
 <20240122174206.394ca24f@arachnoid>
 <1d7380ca-53d9-417c-9ef6-1ff3509aef4c@gmail.com>
Message-ID: <20240125082629.3ccdc248@parabola>

On Mon, 22 Jan 2024 17:14:04 +0100
Tomas Kalibera <tomas.kalibera at gmail.com> wrote:

> Yes, inside a bigger email, reports can get overlooked, particularly 
> when in a thread with a rather different subject. It wasn't
> overlooked this time thanks to Martin.

Then additional thanks goes to Martin, and I'll make sure to report in
the right place if a similar situation happens again.

-- 
Best regards,
Ivan


From |kry|ov @end|ng |rom d|@root@org  Thu Jan 25 06:45:08 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Thu, 25 Jan 2024 08:45:08 +0300
Subject: [R-pkg-devel] How to deal with issues when using
 devtools::check_rhub(), rhub::check(), and web form
In-Reply-To: <CADtpigaY9tjUsDp_e12q9EzRO-KEbAD_AJ40QjfL+D5Yq9Tn1g@mail.gmail.com>
References: <CADtpigYViZ+2GJq+XQyJ6GeyEZ_CWMnUPg20-LcdLKC3GWvVxA@mail.gmail.com>
 <CADtpigaY9tjUsDp_e12q9EzRO-KEbAD_AJ40QjfL+D5Yq9Tn1g@mail.gmail.com>
Message-ID: <20240125084508.5de3bdde@parabola>

? Wed, 24 Jan 2024 16:14:05 -0800
Carl Schwarz <cschwarzstatsfuca at gmail.com> ?????:

> I tried using the web interface at https://builder.r-hub.io/ to
> select the denebian machines, and it returns a message saying
> 
> We're sorry, but something went wrong.
> If you are the application owner check the logs for more information.

> So how do I tell if this a "Rhub issue" or an issue with my package?

A problem with your package would look more like the check at least
starting and then producing errors. Here, it doesn't look like the
check is even starting.

> Or do I just give up on using Rhub to check the denebian machines?

For a while, Rhub used to offer the only on-demand checking service
specifically on Linux machines (there was Win-builder by Uwe Ligges and
macOS builder by Simon Urbanek, but no "Linux builder"), including
Debian [*]. Now that the funding ran out [**], you can try using
various continuous integration services to run your checks in a Linux
virtual machine. Many of them offer free compute minutes.

I think that you've already fulfilled the requirements of the CRAN
policy by fixing all known problems and having R CMD check --as-cran on
R-devel run for you by Win-Builder (which is what
devtools::check_win_devel() does).

-- 
Best regards,
Ivan

[*]
Named after Debra Lynn and Ian Murdock

[**]
https://github.com/RConsortium/r-repositories-wg/blob/main/minutes/2023-09-07_Minutes.md


From c@g|||e@p|e @end|ng |rom gm@||@com  Thu Jan 25 10:12:55 2024
From: c@g|||e@p|e @end|ng |rom gm@||@com (Colin Gillespie)
Date: Thu, 25 Jan 2024 09:12:55 +0000
Subject: [R-pkg-devel] Possible malware(?) in a vignette
Message-ID: <CADbDLZnW6Rgk+Z2161yPOFBSMD+fHApPmRyrQLmgywGOTGaBVw@mail.gmail.com>

Hi All,

I've had two emails from users in the last 24 hours about malware
around one of my vignettes. A snippet from the last user is:

---
I was trying to install a R package that depends on PowerRLaw two
weeks ago.  However my virus protection software F secure did not
allow me to install it from CRAN, while installation from GitHub
worked normally. Virus protection software claimed that
d_jss_paper.pdf is compromised. I asked about this from our IT support
and they asked it from the company F secure. Now F secure has analysed
the file and according them it is malware.

?Upon analyzing, our analysis indicates that the file you submitted is
malicious. Hence the verdict will remain

---

Other information is:

 * Package in question:
https://cran.r-project.org/web/packages/poweRlaw/index.html
 * Package hasn't been updated for three years
 * Vignette in question:
https://cran.r-project.org/web/packages/poweRlaw/vignettes/d_jss_paper.pdf

CRAN asked me to fix
https://cran.r-project.org/web/checks/check_results_poweRlaw.html a
couple of days ago - which I'm in the process of doing.

Any ideas?

Thanks
Colin


From |uc@r @end|ng |rom |edor@project@org  Thu Jan 25 12:02:00 2024
From: |uc@r @end|ng |rom |edor@project@org (=?UTF-8?Q?I=C3=B1aki_Ucar?=)
Date: Thu, 25 Jan 2024 12:02:00 +0100
Subject: [R-pkg-devel] Possible malware(?) in a vignette
In-Reply-To: <CADbDLZnW6Rgk+Z2161yPOFBSMD+fHApPmRyrQLmgywGOTGaBVw@mail.gmail.com>
References: <CADbDLZnW6Rgk+Z2161yPOFBSMD+fHApPmRyrQLmgywGOTGaBVw@mail.gmail.com>
Message-ID: <CALEXWq0vHqYeB_UT7A_oG+um1HqSP1WBYa7D3Ls+3yWQ_DCQdQ@mail.gmail.com>

On Thu, 25 Jan 2024 at 10:13, Colin Gillespie <csgillespie at gmail.com> wrote:
>
> Hi All,
>
> I've had two emails from users in the last 24 hours about malware
> around one of my vignettes. A snippet from the last user is:
>
> ---
> I was trying to install a R package that depends on PowerRLaw two
> weeks ago.  However my virus protection software F secure did not
> allow me to install it from CRAN, while installation from GitHub
> worked normally. Virus protection software claimed that
> d_jss_paper.pdf is compromised. I asked about this from our IT support
> and they asked it from the company F secure. Now F secure has analysed
> the file and according them it is malware.
>
> ?Upon analyzing, our analysis indicates that the file you submitted is
> malicious. Hence the verdict will remain

See https://www.virustotal.com/gui/file/9486d99c1c1f2d1b06f0b6c5d27c54d4f6e39d69a91d7fad845f323b0ab88de9/behavior

According to the sandboxed analysis, there's something there trying to
tamper with the Acrobat installation. It tries several Windows paths.
That's not good.

The good news is that, if I recreate the vignette from your repo, the
file is different, different hash, and it's clean.

The bad news is that... this means that CRAN may be compromised. I
urge CRAN maintainers to check all the PDF vignettes and scan the
Windows machines for viruses.

Best,
I?aki


>
> ---
>
> Other information is:
>
>  * Package in question:
> https://cran.r-project.org/web/packages/poweRlaw/index.html
>  * Package hasn't been updated for three years
>  * Vignette in question:
> https://cran.r-project.org/web/packages/poweRlaw/vignettes/d_jss_paper.pdf
>
> CRAN asked me to fix
> https://cran.r-project.org/web/checks/check_results_poweRlaw.html a
> couple of days ago - which I'm in the process of doing.
>
> Any ideas?
>
> Thanks
> Colin
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel



-- 
I?aki ?car


From r|||ght79 @end|ng |rom gm@||@com  Thu Jan 25 15:47:18 2024
From: r|||ght79 @end|ng |rom gm@||@com (Robert M. Flight)
Date: Thu, 25 Jan 2024 09:47:18 -0500
Subject: [R-pkg-devel] Possible malware(?) in a vignette
In-Reply-To: <CALEXWq0vHqYeB_UT7A_oG+um1HqSP1WBYa7D3Ls+3yWQ_DCQdQ@mail.gmail.com>
References: <CADbDLZnW6Rgk+Z2161yPOFBSMD+fHApPmRyrQLmgywGOTGaBVw@mail.gmail.com>
 <CALEXWq0vHqYeB_UT7A_oG+um1HqSP1WBYa7D3Ls+3yWQ_DCQdQ@mail.gmail.com>
Message-ID: <CAJLyBTW9s_ZaiM6x_Nos9afabG-JjdVikb+xOScsWa2_cypdAA@mail.gmail.com>

I decided to grab a copy of that PDF from the RStudio CRAN mirror, and
downloaded on Linux (where hopefully it won't be an issue) from the list of
vignettes.

Virus Total gives it the same hash as the above linked PDF, so it's
definitely been propagated from CRAN, and *may* be malicious.

That is *disconcerting* to say the least.

-Robert

On Thu, Jan 25, 2024 at 6:03?AM I?aki Ucar <iucar at fedoraproject.org> wrote:

> On Thu, 25 Jan 2024 at 10:13, Colin Gillespie <csgillespie at gmail.com>
> wrote:
> >
> > Hi All,
> >
> > I've had two emails from users in the last 24 hours about malware
> > around one of my vignettes. A snippet from the last user is:
> >
> > ---
> > I was trying to install a R package that depends on PowerRLaw two
> > weeks ago.  However my virus protection software F secure did not
> > allow me to install it from CRAN, while installation from GitHub
> > worked normally. Virus protection software claimed that
> > d_jss_paper.pdf is compromised. I asked about this from our IT support
> > and they asked it from the company F secure. Now F secure has analysed
> > the file and according them it is malware.
> >
> > ?Upon analyzing, our analysis indicates that the file you submitted is
> > malicious. Hence the verdict will remain
>
> See
> https://www.virustotal.com/gui/file/9486d99c1c1f2d1b06f0b6c5d27c54d4f6e39d69a91d7fad845f323b0ab88de9/behavior
>
> According to the sandboxed analysis, there's something there trying to
> tamper with the Acrobat installation. It tries several Windows paths.
> That's not good.
>
> The good news is that, if I recreate the vignette from your repo, the
> file is different, different hash, and it's clean.
>
> The bad news is that... this means that CRAN may be compromised. I
> urge CRAN maintainers to check all the PDF vignettes and scan the
> Windows machines for viruses.
>
> Best,
> I?aki
>
>
> >
> > ---
> >
> > Other information is:
> >
> >  * Package in question:
> > https://cran.r-project.org/web/packages/poweRlaw/index.html
> >  * Package hasn't been updated for three years
> >  * Vignette in question:
> >
> https://cran.r-project.org/web/packages/poweRlaw/vignettes/d_jss_paper.pdf
> >
> > CRAN asked me to fix
> > https://cran.r-project.org/web/checks/check_results_poweRlaw.html a
> > couple of days ago - which I'm in the process of doing.
> >
> > Any ideas?
> >
> > Thanks
> > Colin
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>
>
> --
> I?aki ?car
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From me @end|ng |rom jg@eb@com  Thu Jan 25 15:52:05 2024
From: me @end|ng |rom jg@eb@com (Johann Gaebler)
Date: Thu, 25 Jan 2024 09:52:05 -0500
Subject: [R-pkg-devel] 
 New Package Removal because Shared Library Too Large
 from Debugging Symbols
In-Reply-To: <D94C0990-EC93-432F-B10A-C2B81E55BB2C@jgaeb.com>
References: <D94C0990-EC93-432F-B10A-C2B81E55BB2C@jgaeb.com>
Message-ID: <4EDC0AD3-4C01-4938-B3D2-6BBCDE4050BC@jgaeb.com>

It seems some of my emails didn?t make it onto the list, so I just wanted briefly to follow up to say thank you to Dirk, Ivan, Uwe, and Ben for helping with this.

Ultimately, following Ivan?s advice, I just added a GitHub action to the repo as a temporary patch to ensure that the signature gets corrected if cpp11 gets rerun.

I uploaded a new version with the correct signature to CRAN, and, as best I?m able to discern, it has passed the LTO check.

All the best,
Hans

> Johann Gaebler <me at jgaeb.com> ? 2024?1?20? ??2:38 ???
> 
> Hi everyone,
> 
> I received the following message regarding  `rar` <https://cran.r-project.org/package=rar>, a package that I put up on CRAN two days ago:
> 
>> Dear maintainer,
>> 
>> Please see the problems shown on
>> <https://cran.r-project.org/web/checks/check_results_rar.html>.
>> 
>> Please correct before 2024-02-02 to safely retain your package on CRAN.
> 
> The issue is that the compiled libraries are too large. The Mac CRAN checks turned up the following note:
> 
>> installed size is  8.9Mb
>> sub-directories of 1Mb or more:
>>  libs   8.7Mb
> 
> I have not been able to reproduce the issue either locally or on any machine I have ready access to. I have built it on some of the Rhub and R-Project build systems, and the same issue (with very different `libs` sizes) came up on some of them:
> 
> ? (RHub) Ubuntu Linux 20.04.1 LTS, R-release, GCC: 18.2Mb,
> ? (RHub) Fedora Linux, R-devel, clang, gfortran: 6.8Mb,
> ? (R-Project) r-release-macosx-arm64: 8.5Mb.
> 
> Based on trying to read up about this, it seems that this is a pretty common problem <http://dirk.eddelbuettel.com/blog/2017/08/14/#009_compact_shared_libraries> for compiled packages because of debugging symbols getting inserted into the shared library file. Using the fix from that blog post where you modify the Makevars to strip debugging symbols from the shared library seems to solve the issue on those build systems, so I feel reasonably confident that this is what?s going on.
> 
> Apparently many, many existing packages on CRAN have the same issue. However, I?m very new to R package development, so I?m not exactly sure what to do. I have two questions:
> 
> 1. Is there anything I need to ?fix? here, or should I just make contact with the CRAN folks and bring the fact that this is being caused by debugging symbols to their attention?
> 2. Regardless of whether or not I have to fix this issue for CRAN, is there a way to strip out the debugging symbols that comports with CRAN policies? The method suggested in the blog post above (adding a phony target in `Makevars` that strips the shared library) seems not to be CRAN-compliant, but I could be mistaken about that. (In particular, I had to modify it locally to get it to run, so I?m not sure what the platform-independent version of it looks like.)
> 
> Thanks in advance for the help!
> 
> Sincerely,
> Johann D. Gaebler


	[[alternative HTML version deleted]]


From jo@|@h@p@rry @end|ng |rom gm@||@com  Thu Jan 25 16:27:38 2024
From: jo@|@h@p@rry @end|ng |rom gm@||@com (Josiah Parry)
Date: Thu, 25 Jan 2024 10:27:38 -0500
Subject: [R-pkg-devel] Native pipe in package examples
Message-ID: <CAL3ufUJ1jWWt2qQRuZZuT5EiJ3YCYBHivPbqouZo77WhH=1Rkw@mail.gmail.com>

Hey all,

I've encountered use of the native pipe operator in the examples for
'httr2' e.g.

request("http://example.com") |> req_dry_run()


Since r-oldrel (according to rversions::r_oldrel()) is now 4.2.3, can the
native pipe be used in example code?

I do notice that the package httr2 requires R >= 3.6.0 which implies that
the code itself does not use the native pipe, but the examples do.

Is this an accurate summation?

Thanks!

	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu Jan 25 16:40:08 2024
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 25 Jan 2024 10:40:08 -0500
Subject: [R-pkg-devel] Native pipe in package examples
In-Reply-To: <CAL3ufUJ1jWWt2qQRuZZuT5EiJ3YCYBHivPbqouZo77WhH=1Rkw@mail.gmail.com>
References: <CAL3ufUJ1jWWt2qQRuZZuT5EiJ3YCYBHivPbqouZo77WhH=1Rkw@mail.gmail.com>
Message-ID: <c763b6cf-ba88-48dd-aff7-f63041f39649@gmail.com>

On 25/01/2024 10:27 a.m., Josiah Parry wrote:
> Hey all,
> 
> I've encountered use of the native pipe operator in the examples for
> 'httr2' e.g.
> 
> request("http://example.com") |> req_dry_run()
> 
> 
> Since r-oldrel (according to rversions::r_oldrel()) is now 4.2.3, can the
> native pipe be used in example code?
> 
> I do notice that the package httr2 requires R >= 3.6.0 which implies that
> the code itself does not use the native pipe, but the examples do.

I think that the package should state it requires R (>= 4.1.0), since 
that code won't work in earlier versions.

I believe it's a syntax error before 4.1.0, but don't have a copy handy 
to test.  That means the package won't pass R CMD check in those old 
versions.  If it wasn't a syntax error, just a case of using a new 
feature, then I think it would be fine to put in a run-time test of the 
R version to skip code that won't run properly.

Duncan Murdoch


From henr|k@bengt@@on @end|ng |rom gm@||@com  Thu Jan 25 17:18:51 2024
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Thu, 25 Jan 2024 08:18:51 -0800
Subject: [R-pkg-devel] Native pipe in package examples
In-Reply-To: <c763b6cf-ba88-48dd-aff7-f63041f39649@gmail.com>
References: <CAL3ufUJ1jWWt2qQRuZZuT5EiJ3YCYBHivPbqouZo77WhH=1Rkw@mail.gmail.com>
 <c763b6cf-ba88-48dd-aff7-f63041f39649@gmail.com>
Message-ID: <CAFDcVCSjyPLQhcR-pSi-N3j5ShzrMd_DaQqYCuKeWK-5HwtnVg@mail.gmail.com>

On Thu, Jan 25, 2024 at 7:48?AM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>
> On 25/01/2024 10:27 a.m., Josiah Parry wrote:
> > Hey all,
> >
> > I've encountered use of the native pipe operator in the examples for
> > 'httr2' e.g.
> >
> > request("http://example.com") |> req_dry_run()
> >
> >
> > Since r-oldrel (according to rversions::r_oldrel()) is now 4.2.3, can the
> > native pipe be used in example code?
> >
> > I do notice that the package httr2 requires R >= 3.6.0 which implies that
> > the code itself does not use the native pipe, but the examples do.
>
> I think that the package should state it requires R (>= 4.1.0), since
> that code won't work in earlier versions.
>
> I believe it's a syntax error before 4.1.0, but don't have a copy handy
> to test.

Yes, support for the |> syntax was introduced in R 4.1.0;

$ Rscript --vanilla -e "getRversion()" -e "1:10 |> sum()"
[1] ?4.0.5?
Error: unexpected '>' in "1:10 |>"
Execution halted

$ Rscript --vanilla -e "getRversion()" -e "1:10 |> sum()"
[1] ?4.1.0?
[1] 55

> That means the package won't pass R CMD check in those old
> versions.  If it wasn't a syntax error, just a case of using a new
> feature, then I think it would be fine to put in a run-time test of the
> R version to skip code that won't run properly.

There's also the distinction of package code versus code in
documentation. If it's only example code in help pages that use the
native pipe, but the code in R/*.R does not, then the package will
still install and work with R (< 4.1.0).  The only thing that won't
work is when the user tries to run the code in the documented
examples.  I'd argue that it's okay to specify, say, R (>= 3.6.0) in
such an example.  It allows users with older versions to still use the
package, while already now migrating the documentation to use newer
syntax.

/Henrik
>
> Duncan Murdoch
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu Jan 25 17:27:50 2024
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 25 Jan 2024 11:27:50 -0500
Subject: [R-pkg-devel] Native pipe in package examples
In-Reply-To: <CAFDcVCSjyPLQhcR-pSi-N3j5ShzrMd_DaQqYCuKeWK-5HwtnVg@mail.gmail.com>
References: <CAL3ufUJ1jWWt2qQRuZZuT5EiJ3YCYBHivPbqouZo77WhH=1Rkw@mail.gmail.com>
 <c763b6cf-ba88-48dd-aff7-f63041f39649@gmail.com>
 <CAFDcVCSjyPLQhcR-pSi-N3j5ShzrMd_DaQqYCuKeWK-5HwtnVg@mail.gmail.com>
Message-ID: <675ef40d-4371-4a54-b2f6-0a05839819d7@gmail.com>

On 25/01/2024 11:18 a.m., Henrik Bengtsson wrote:
> On Thu, Jan 25, 2024 at 7:48?AM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>>
>> On 25/01/2024 10:27 a.m., Josiah Parry wrote:
>>> Hey all,
>>>
>>> I've encountered use of the native pipe operator in the examples for
>>> 'httr2' e.g.
>>>
>>> request("http://example.com") |> req_dry_run()
>>>
>>>
>>> Since r-oldrel (according to rversions::r_oldrel()) is now 4.2.3, can the
>>> native pipe be used in example code?
>>>
>>> I do notice that the package httr2 requires R >= 3.6.0 which implies that
>>> the code itself does not use the native pipe, but the examples do.
>>
>> I think that the package should state it requires R (>= 4.1.0), since
>> that code won't work in earlier versions.
>>
>> I believe it's a syntax error before 4.1.0, but don't have a copy handy
>> to test.
> 
> Yes, support for the |> syntax was introduced in R 4.1.0;
> 
> $ Rscript --vanilla -e "getRversion()" -e "1:10 |> sum()"
> [1] ?4.0.5?
> Error: unexpected '>' in "1:10 |>"
> Execution halted
> 
> $ Rscript --vanilla -e "getRversion()" -e "1:10 |> sum()"
> [1] ?4.1.0?
> [1] 55
> 
>> That means the package won't pass R CMD check in those old
>> versions.  If it wasn't a syntax error, just a case of using a new
>> feature, then I think it would be fine to put in a run-time test of the
>> R version to skip code that won't run properly.
> 
> There's also the distinction of package code versus code in
> documentation. If it's only example code in help pages that use the
> native pipe, but the code in R/*.R does not, then the package will
> still install and work with R (< 4.1.0).  The only thing that won't
> work is when the user tries to run the code in the documented
> examples.  I'd argue that it's okay to specify, say, R (>= 3.6.0) in
> such an example.  It allows users with older versions to still use the
> package, while already now migrating the documentation to use newer
> syntax.

Is there a way to do that so that R will pay attention, or do you mean 
just saying it in a comment?

I think you're right that syntax errors in help page examples will be 
installable, but I don't think there's a way to make them pass "R CMD 
check" other than wrapping them in \dontrun{}, and I don't know a way to 
do that conditional on the R version.

I would say that a package that doesn't pass "R CMD check" without 
errors shouldn't be trusted.

Duncan Murdoch


From jo@|@h@p@rry @end|ng |rom gm@||@com  Thu Jan 25 17:44:06 2024
From: jo@|@h@p@rry @end|ng |rom gm@||@com (Josiah Parry)
Date: Thu, 25 Jan 2024 11:44:06 -0500
Subject: [R-pkg-devel] Native pipe in package examples
In-Reply-To: <675ef40d-4371-4a54-b2f6-0a05839819d7@gmail.com>
References: <CAL3ufUJ1jWWt2qQRuZZuT5EiJ3YCYBHivPbqouZo77WhH=1Rkw@mail.gmail.com>
 <c763b6cf-ba88-48dd-aff7-f63041f39649@gmail.com>
 <CAFDcVCSjyPLQhcR-pSi-N3j5ShzrMd_DaQqYCuKeWK-5HwtnVg@mail.gmail.com>
 <675ef40d-4371-4a54-b2f6-0a05839819d7@gmail.com>
Message-ID: <CAL3ufU+VNPU5KH5ZqCLitqJ7ff3tuFOuNFf01QsOEGJTdtFipg@mail.gmail.com>

The package of course passes R CMD check otherwise it wouldn?t be on CRAN!
(:

Thank you Henrik! Good to know my intuition was correct. I?m glad we can
start to use the new features of R in package documentation :)

On Thu, Jan 25, 2024 at 11:27 Duncan Murdoch <murdoch.duncan at gmail.com>
wrote:

> On 25/01/2024 11:18 a.m., Henrik Bengtsson wrote:
> > On Thu, Jan 25, 2024 at 7:48?AM Duncan Murdoch <murdoch.duncan at gmail.com>
> wrote:
> >>
> >> On 25/01/2024 10:27 a.m., Josiah Parry wrote:
> >>> Hey all,
> >>>
> >>> I've encountered use of the native pipe operator in the examples for
> >>> 'httr2' e.g.
> >>>
> >>> request("http://example.com") |> req_dry_run()
> >>>
> >>>
> >>> Since r-oldrel (according to rversions::r_oldrel()) is now 4.2.3, can
> the
> >>> native pipe be used in example code?
> >>>
> >>> I do notice that the package httr2 requires R >= 3.6.0 which implies
> that
> >>> the code itself does not use the native pipe, but the examples do.
> >>
> >> I think that the package should state it requires R (>= 4.1.0), since
> >> that code won't work in earlier versions.
> >>
> >> I believe it's a syntax error before 4.1.0, but don't have a copy handy
> >> to test.
> >
> > Yes, support for the |> syntax was introduced in R 4.1.0;
> >
> > $ Rscript --vanilla -e "getRversion()" -e "1:10 |> sum()"
> > [1] ?4.0.5?
> > Error: unexpected '>' in "1:10 |>"
> > Execution halted
> >
> > $ Rscript --vanilla -e "getRversion()" -e "1:10 |> sum()"
> > [1] ?4.1.0?
> > [1] 55
> >
> >> That means the package won't pass R CMD check in those old
> >> versions.  If it wasn't a syntax error, just a case of using a new
> >> feature, then I think it would be fine to put in a run-time test of the
> >> R version to skip code that won't run properly.
> >
> > There's also the distinction of package code versus code in
> > documentation. If it's only example code in help pages that use the
> > native pipe, but the code in R/*.R does not, then the package will
> > still install and work with R (< 4.1.0).  The only thing that won't
> > work is when the user tries to run the code in the documented
> > examples.  I'd argue that it's okay to specify, say, R (>= 3.6.0) in
> > such an example.  It allows users with older versions to still use the
> > package, while already now migrating the documentation to use newer
> > syntax.
>
> Is there a way to do that so that R will pay attention, or do you mean
> just saying it in a comment?
>
> I think you're right that syntax errors in help page examples will be
> installable, but I don't think there's a way to make them pass "R CMD
> check" other than wrapping them in \dontrun{}, and I don't know a way to
> do that conditional on the R version.
>
> I would say that a package that doesn't pass "R CMD check" without
> errors shouldn't be trusted.
>
> Duncan Murdoch
>

	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu Jan 25 18:00:58 2024
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 25 Jan 2024 12:00:58 -0500
Subject: [R-pkg-devel] Native pipe in package examples
In-Reply-To: <CAL3ufU+VNPU5KH5ZqCLitqJ7ff3tuFOuNFf01QsOEGJTdtFipg@mail.gmail.com>
References: <CAL3ufUJ1jWWt2qQRuZZuT5EiJ3YCYBHivPbqouZo77WhH=1Rkw@mail.gmail.com>
 <c763b6cf-ba88-48dd-aff7-f63041f39649@gmail.com>
 <CAFDcVCSjyPLQhcR-pSi-N3j5ShzrMd_DaQqYCuKeWK-5HwtnVg@mail.gmail.com>
 <675ef40d-4371-4a54-b2f6-0a05839819d7@gmail.com>
 <CAL3ufU+VNPU5KH5ZqCLitqJ7ff3tuFOuNFf01QsOEGJTdtFipg@mail.gmail.com>
Message-ID: <863a66b0-e059-439c-a03e-563fbd98426e@gmail.com>

On 25/01/2024 11:44 a.m., Josiah Parry wrote:
> The package of course passes R CMD check otherwise it wouldn?t be on 
> CRAN! (:

CRAN doesn't run checks using R 3.6.0.  The package claims it works 
there, and maybe it will, but it won't pass R CMD check.

Duncan Murdoch


> 
> Thank you Henrik! Good to know my intuition was correct. I?m glad we can 
> start to use the new features of R in package documentation :)
> 
> On Thu, Jan 25, 2024 at 11:27 Duncan Murdoch <murdoch.duncan at gmail.com 
> <mailto:murdoch.duncan at gmail.com>> wrote:
> 
>     On 25/01/2024 11:18 a.m., Henrik Bengtsson wrote:
>      > On Thu, Jan 25, 2024 at 7:48?AM Duncan Murdoch
>     <murdoch.duncan at gmail.com <mailto:murdoch.duncan at gmail.com>> wrote:
>      >>
>      >> On 25/01/2024 10:27 a.m., Josiah Parry wrote:
>      >>> Hey all,
>      >>>
>      >>> I've encountered use of the native pipe operator in the
>     examples for
>      >>> 'httr2' e.g.
>      >>>
>      >>> request("http://example.com <http://example.com>") |> req_dry_run()
>      >>>
>      >>>
>      >>> Since r-oldrel (according to rversions::r_oldrel()) is now
>     4.2.3, can the
>      >>> native pipe be used in example code?
>      >>>
>      >>> I do notice that the package httr2 requires R >= 3.6.0 which
>     implies that
>      >>> the code itself does not use the native pipe, but the examples do.
>      >>
>      >> I think that the package should state it requires R (>= 4.1.0),
>     since
>      >> that code won't work in earlier versions.
>      >>
>      >> I believe it's a syntax error before 4.1.0, but don't have a
>     copy handy
>      >> to test.
>      >
>      > Yes, support for the |> syntax was introduced in R 4.1.0;
>      >
>      > $ Rscript --vanilla -e "getRversion()" -e "1:10 |> sum()"
>      > [1] ?4.0.5?
>      > Error: unexpected '>' in "1:10 |>"
>      > Execution halted
>      >
>      > $ Rscript --vanilla -e "getRversion()" -e "1:10 |> sum()"
>      > [1] ?4.1.0?
>      > [1] 55
>      >
>      >> That means the package won't pass R CMD check in those old
>      >> versions.? If it wasn't a syntax error, just a case of using a new
>      >> feature, then I think it would be fine to put in a run-time test
>     of the
>      >> R version to skip code that won't run properly.
>      >
>      > There's also the distinction of package code versus code in
>      > documentation. If it's only example code in help pages that use the
>      > native pipe, but the code in R/*.R does not, then the package will
>      > still install and work with R (< 4.1.0).? The only thing that won't
>      > work is when the user tries to run the code in the documented
>      > examples.? I'd argue that it's okay to specify, say, R (>= 3.6.0) in
>      > such an example.? It allows users with older versions to still
>     use the
>      > package, while already now migrating the documentation to use newer
>      > syntax.
> 
>     Is there a way to do that so that R will pay attention, or do you mean
>     just saying it in a comment?
> 
>     I think you're right that syntax errors in help page examples will be
>     installable, but I don't think there's a way to make them pass "R CMD
>     check" other than wrapping them in \dontrun{}, and I don't know a
>     way to
>     do that conditional on the R version.
> 
>     I would say that a package that doesn't pass "R CMD check" without
>     errors shouldn't be trusted.
> 
>     Duncan Murdoch
>


From ht @end|ng |rom he@therturner@net  Thu Jan 25 18:08:19 2024
From: ht @end|ng |rom he@therturner@net (Heather Turner)
Date: Thu, 25 Jan 2024 17:08:19 +0000
Subject: [R-pkg-devel] new maintainer for CRAN package XML
In-Reply-To: <21d76136-65f7-472d-b14c-322a53a559b7@gmail.com>
References: <f6c68c43-54d1-4dde-a394-cc0263457133@statistik.tu-dortmund.de>
 <CABFfbXvZ4b9PQe=fA6CJ=Udq9ektOC+=ht+bH2HoKUktThRfeA@mail.gmail.com>
 <21d76136-65f7-472d-b14c-322a53a559b7@gmail.com>
Message-ID: <b8fe3280-422c-4a7c-ae0a-b0006e24f52d@app.fastmail.com>

Re: guidance on how to migrate from XML to xml2, these notes from Daniel N?st may be helpful: https://gist.github.com/nuest/3ed3b0057713eb4f4d75d11bb62f2d66.

Best wishes,
Heather

On Wed, Jan 24, 2024, at 3:38 PM, Emmanuel Blondel wrote:
> if XML is deprecated, then what would be the choice for a package 
> maintainer? Move to xml2 probably at some point I assume
>
> I use XML in the R packages I've been developing. For some of them, I 
> started before CRAN started being the maintainer, and before xml2 
> inception. The thing is that XML fulfills requirements, it works and 
> fulfills needs of depending packages that made the choice to use it. For 
> this, it deserves to be maintained in CRAN, without having to enter into 
> comparison exercices with other packages that , as of today, may be 
> better to rely on (with certainly very good reasons).
>
> Moving to xml2 (or whatever other package), which although I could agree 
> on the principle, can be costly for packages that use extensively XML. 
> Doing so would mean that we first get the assurance that all XML 
> features are covered elsewhere, and can be migrated smoothly.
>
> In any case, please acknowledge that this kind of migration may take 
> time and require resources that vary (or even are missing) depending on 
> the package projects. I doubt having CRAN setting a common deadline for 
> retirement is a good way to foster an efficient maintenance of R 
> packages depending on XML. It would be good to receive guidance how to 
> migrate, while ensuring backward compatibility on our package features.
>
> Best
>
> Le 24/01/2024 ? 15:59, Jeroen Ooms a ?crit?:
>> On Mon, Jan 22, 2024 at 3:51?PM Uwe Ligges
>> <ligges at statistik.tu-dortmund.de> wrote:
>>> Dear package developers,
>>>
>>> the CRAN team (and Professor Ripley in particular) has been the defacto
>>> maintainer of CRAN package 'XML'.
>>> Our hope was that maintainers of packages depending on XML will migrate
>>> to other packages for reading XML structures. This has not happened and
>>> we still see dozens of strong dependencies on XML.
>> How is this hope communicated? Many R users assume that XML package is
>> in great shape and the preferable choice because it is maintained by
>> the CRAN team and r-core members.
>>
>> Perhaps one could follow the precedent from the rgdal retirement, and
>> set a deadline.
>>
>> One way to communicate this effectively would be by introducing a
>> formal deprecation field in the package description. This could then
>> be displayed on the XML CRAN html page, and when loading the package
>> interactively. Other packages that import such a deprecated package
>> could be given a CMD check warning.
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From berw|n@tur|@ch @end|ng |rom gm@||@com  Thu Jan 25 18:23:18 2024
From: berw|n@tur|@ch @end|ng |rom gm@||@com (Berwin A Turlach)
Date: Fri, 26 Jan 2024 01:23:18 +0800
Subject: [R-pkg-devel] Native pipe in package examples
In-Reply-To: <675ef40d-4371-4a54-b2f6-0a05839819d7@gmail.com>
References: <CAL3ufUJ1jWWt2qQRuZZuT5EiJ3YCYBHivPbqouZo77WhH=1Rkw@mail.gmail.com>
 <c763b6cf-ba88-48dd-aff7-f63041f39649@gmail.com>
 <CAFDcVCSjyPLQhcR-pSi-N3j5ShzrMd_DaQqYCuKeWK-5HwtnVg@mail.gmail.com>
 <675ef40d-4371-4a54-b2f6-0a05839819d7@gmail.com>
Message-ID: <20240126012251.167dd0b6@absentia>

G'day Duncon,

On Thu, 25 Jan 2024 11:27:50 -0500
Duncan Murdoch <murdoch.duncan at gmail.com> wrote:

> On 25/01/2024 11:18 a.m., Henrik Bengtsson wrote:
[...]
> I think you're right that syntax errors in help page examples will be 
> installable, but I don't think there's a way to make them pass "R CMD 
> check" other than wrapping them in \dontrun{}, and I don't know a way
> to do that conditional on the R version.

I remember vaguely that 'S Programming' was discussing some nifty
tricks to deal with differences between S and R, and how to write code
that would work with either.  If memory serves correctly, those
tricks depended on whether a macro called using_S (using_R?) was
defined. Not sure if the same tricks could be used to distinguish
between different versions of R.

But you could always code your example (not tested :-) ) along lines
similar to:

if( with(version, all(as.numeric(c(major, minor)) >= c(4, 1))) ){
  ## code that uses native pipe
}else{
  cat("You have to upgrade to R >= 4.1.0 to run this example\n")
}


> I would say that a package that doesn't pass "R CMD check" without 
> errors shouldn't be trusted.

Given the number of packages on CRAN and Murphy's law (or equivalents),
I would say that there are packages that do pass "R CMD check" without
errors but shouldn't be trusted, own packages not excluded. :)

Cheers,

	Berwin


From henr|k@bengt@@on @end|ng |rom gm@||@com  Thu Jan 25 18:38:12 2024
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Thu, 25 Jan 2024 09:38:12 -0800
Subject: [R-pkg-devel] Native pipe in package examples
In-Reply-To: <675ef40d-4371-4a54-b2f6-0a05839819d7@gmail.com>
References: <CAL3ufUJ1jWWt2qQRuZZuT5EiJ3YCYBHivPbqouZo77WhH=1Rkw@mail.gmail.com>
 <c763b6cf-ba88-48dd-aff7-f63041f39649@gmail.com>
 <CAFDcVCSjyPLQhcR-pSi-N3j5ShzrMd_DaQqYCuKeWK-5HwtnVg@mail.gmail.com>
 <675ef40d-4371-4a54-b2f6-0a05839819d7@gmail.com>
Message-ID: <CAFDcVCSAZYL3puuUc8nvnfUAdWMk9X87A_ydM3Axuoczxao+rQ@mail.gmail.com>

On Thu, Jan 25, 2024 at 8:27?AM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>
> On 25/01/2024 11:18 a.m., Henrik Bengtsson wrote:
> > On Thu, Jan 25, 2024 at 7:48?AM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> >>
> >> On 25/01/2024 10:27 a.m., Josiah Parry wrote:
> >>> Hey all,
> >>>
> >>> I've encountered use of the native pipe operator in the examples for
> >>> 'httr2' e.g.
> >>>
> >>> request("http://example.com") |> req_dry_run()
> >>>
> >>>
> >>> Since r-oldrel (according to rversions::r_oldrel()) is now 4.2.3, can the
> >>> native pipe be used in example code?
> >>>
> >>> I do notice that the package httr2 requires R >= 3.6.0 which implies that
> >>> the code itself does not use the native pipe, but the examples do.
> >>
> >> I think that the package should state it requires R (>= 4.1.0), since
> >> that code won't work in earlier versions.
> >>
> >> I believe it's a syntax error before 4.1.0, but don't have a copy handy
> >> to test.
> >
> > Yes, support for the |> syntax was introduced in R 4.1.0;
> >
> > $ Rscript --vanilla -e "getRversion()" -e "1:10 |> sum()"
> > [1] ?4.0.5?
> > Error: unexpected '>' in "1:10 |>"
> > Execution halted
> >
> > $ Rscript --vanilla -e "getRversion()" -e "1:10 |> sum()"
> > [1] ?4.1.0?
> > [1] 55
> >
> >> That means the package won't pass R CMD check in those old
> >> versions.  If it wasn't a syntax error, just a case of using a new
> >> feature, then I think it would be fine to put in a run-time test of the
> >> R version to skip code that won't run properly.
> >
> > There's also the distinction of package code versus code in
> > documentation. If it's only example code in help pages that use the
> > native pipe, but the code in R/*.R does not, then the package will
> > still install and work with R (< 4.1.0).  The only thing that won't
> > work is when the user tries to run the code in the documented
> > examples.  I'd argue that it's okay to specify, say, R (>= 3.6.0) in
> > such an example.  It allows users with older versions to still use the
> > package, while already now migrating the documentation to use newer
> > syntax.
>
> Is there a way to do that so that R will pay attention, or do you mean
> just saying it in a comment?

As a "comment".

>
> I think you're right that syntax errors in help page examples will be
> installable, but I don't think there's a way to make them pass "R CMD
> check" other than wrapping them in \dontrun{}, and I don't know a way to
> do that conditional on the R version.

I think

$ R CMD check --no-examples --no-vignettes ...

would check everything else but examples and vignettes.

>
> I would say that a package that doesn't pass "R CMD check" without
> errors shouldn't be trusted.

Somewhat agree, but we still get some "trust" from the fact that the
package passes R CMD check --as-cran on R (>= 4.1.0).  Also, if the
maintainer documents something like "On R (> 4.1.0), the package
passes 'R CMD check --no-examples ...'; we use R (>= 4.1.0)-specific
syntax in some of the help-age examples", then there's additional
"trust" in it's working there.  But, yes, there's less "trust" here,
but I think it's okay for maintainers to declare "R (>= 3.6.0)" to be
backward compatible. Another way to put it, it would be extreme to
require "R (>= 4.1.0)" just because of a single "1:3 |> sum()" in some
example code.

/Henrik

PS. Personally, I'd skip the use of |> in examples to avoid these concerns.

>
> Duncan Murdoch


From henr|k@bengt@@on @end|ng |rom gm@||@com  Thu Jan 25 18:44:26 2024
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Thu, 25 Jan 2024 09:44:26 -0800
Subject: [R-pkg-devel] Native pipe in package examples
In-Reply-To: <20240126012251.167dd0b6@absentia>
References: <CAL3ufUJ1jWWt2qQRuZZuT5EiJ3YCYBHivPbqouZo77WhH=1Rkw@mail.gmail.com>
 <c763b6cf-ba88-48dd-aff7-f63041f39649@gmail.com>
 <CAFDcVCSjyPLQhcR-pSi-N3j5ShzrMd_DaQqYCuKeWK-5HwtnVg@mail.gmail.com>
 <675ef40d-4371-4a54-b2f6-0a05839819d7@gmail.com>
 <20240126012251.167dd0b6@absentia>
Message-ID: <CAFDcVCSVy9Q7mKMTi4orUbkoOXqdH-wo83H=Ghar_5Xfs1w3LA@mail.gmail.com>

On Thu, Jan 25, 2024 at 9:23?AM Berwin A Turlach
<berwin.turlach at gmail.com> wrote:
>
> G'day Duncon,
>
> On Thu, 25 Jan 2024 11:27:50 -0500
> Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>
> > On 25/01/2024 11:18 a.m., Henrik Bengtsson wrote:
> [...]
> > I think you're right that syntax errors in help page examples will be
> > installable, but I don't think there's a way to make them pass "R CMD
> > check" other than wrapping them in \dontrun{}, and I don't know a way
> > to do that conditional on the R version.
>
> I remember vaguely that 'S Programming' was discussing some nifty
> tricks to deal with differences between S and R, and how to write code
> that would work with either.  If memory serves correctly, those
> tricks depended on whether a macro called using_S (using_R?) was
> defined. Not sure if the same tricks could be used to distinguish
> between different versions of R.
>
> But you could always code your example (not tested :-) ) along lines
> similar to:
>
> if( with(version, all(as.numeric(c(major, minor)) >= c(4, 1))) ){
>   ## code that uses native pipe
> }else{
>   cat("You have to upgrade to R >= 4.1.0 to run this example\n")
> }

That will unfortunately not work in this case, because |> is part of
the new *syntax* that was introduced in R 4.1.0.  Older versions of R
simply doesn't understand how to *parse* those two symbols next to
each other, e.g.

{R 4.1.0}> parse(text = "1:3 |> sum()")
expression(1:3 |> sum())

{R 4.0.5}> parse(text = "1:3 |> sum()")
Error in parse(text = "1:3 |> sum()") : <text>:1:6: unexpected '>'
1: 1:3 |>
         ^

In order for R to execute some code, it needs to be able to parse it
first. Only then, it can execute it.  So, here, we're not even getting
past the parsing phase.

/Henrik

>
>
> > I would say that a package that doesn't pass "R CMD check" without
> > errors shouldn't be trusted.
>
> Given the number of packages on CRAN and Murphy's law (or equivalents),
> I would say that there are packages that do pass "R CMD check" without
> errors but shouldn't be trusted, own packages not excluded. :)
>
> Cheers,
>
>         Berwin


From berw|n@tur|@ch @end|ng |rom gm@||@com  Thu Jan 25 19:04:23 2024
From: berw|n@tur|@ch @end|ng |rom gm@||@com (Berwin A Turlach)
Date: Fri, 26 Jan 2024 02:04:23 +0800
Subject: [R-pkg-devel] Native pipe in package examples
In-Reply-To: <CAFDcVCSVy9Q7mKMTi4orUbkoOXqdH-wo83H=Ghar_5Xfs1w3LA@mail.gmail.com>
References: <CAL3ufUJ1jWWt2qQRuZZuT5EiJ3YCYBHivPbqouZo77WhH=1Rkw@mail.gmail.com>
 <c763b6cf-ba88-48dd-aff7-f63041f39649@gmail.com>
 <CAFDcVCSjyPLQhcR-pSi-N3j5ShzrMd_DaQqYCuKeWK-5HwtnVg@mail.gmail.com>
 <675ef40d-4371-4a54-b2f6-0a05839819d7@gmail.com>
 <20240126012251.167dd0b6@absentia>
 <CAFDcVCSVy9Q7mKMTi4orUbkoOXqdH-wo83H=Ghar_5Xfs1w3LA@mail.gmail.com>
Message-ID: <20240126020423.7e352852@absentia>

On Thu, 25 Jan 2024 09:44:26 -0800
Henrik Bengtsson <henrik.bengtsson at gmail.com> wrote:

> On Thu, Jan 25, 2024 at 9:23?AM Berwin A Turlach
> <berwin.turlach at gmail.com> wrote:
> >
> > G'day Duncon,

Uups, apologies for the misspelling of your name Duncan.  Fingers were
too fast. :)

[...]
> > But you could always code your example (not tested :-) ) along lines
> > similar to:
> >
> > if( with(version, all(as.numeric(c(major, minor)) >= c(4, 1))) ){
> >   ## code that uses native pipe
> > }else{
> >   cat("You have to upgrade to R >= 4.1.0 to run this example\n")
> > }  
> 
> That will unfortunately not work in this case, because |> is part of
> the new *syntax* that was introduced in R 4.1.0.  Older versions of R
> simply doesn't understand how to *parse* those two symbols next to
> each other, e.g.
> 
> {R 4.1.0}> parse(text = "1:3 |> sum()")
> expression(1:3 |> sum())
> 
> {R 4.0.5}> parse(text = "1:3 |> sum()")
> Error in parse(text = "1:3 |> sum()") : <text>:1:6: unexpected '>'
> 1: 1:3 |>
>          ^
> 
> In order for R to execute some code, it needs to be able to parse it
> first. Only then, it can execute it.  So, here, we're not even getting
> past the parsing phase.

Well, not withstanding 'fortune(181)', you could code it as:

if( with(version, all(as.numeric(c(major, minor)) >= c(4, 1))) ){
   cat(eval(parse(text="1:3 |> sum()")), "\n")
}else{
  cat("You have to upgrade to R >= 4.1.0 to run this example\n")
}  


Admittedly, it would be easier to say "Depends: R (>= 4.1.0)" in the
DESCRIPTION file. :)

Cheers,

	Berwin


From henr|k@bengt@@on @end|ng |rom gm@||@com  Thu Jan 25 19:25:06 2024
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Thu, 25 Jan 2024 10:25:06 -0800
Subject: [R-pkg-devel] new maintainer for CRAN package XML
In-Reply-To: <b8fe3280-422c-4a7c-ae0a-b0006e24f52d@app.fastmail.com>
References: <f6c68c43-54d1-4dde-a394-cc0263457133@statistik.tu-dortmund.de>
 <CABFfbXvZ4b9PQe=fA6CJ=Udq9ektOC+=ht+bH2HoKUktThRfeA@mail.gmail.com>
 <21d76136-65f7-472d-b14c-322a53a559b7@gmail.com>
 <b8fe3280-422c-4a7c-ae0a-b0006e24f52d@app.fastmail.com>
Message-ID: <CAFDcVCS+ye1Nfw3nCWVB9vS6gBqmay7z-K=H8agm6BZjw5omLA@mail.gmail.com>

Some thoughts for what the next steps could be:

I could be wrong, but I doubt that there's someone out there that
wants to pick up 'XML' and start developing it beyond keeping the
lights on.  I also think the community agrees that 'xml2' is the
recommended package to use for XML-related needs.  If this can be
agreed upon, I think the best path forward would be to declare 'XML'
being deprecated. This is some that the current maintainer (CRAN Team)
could already do, but updating the document and the package
Description field to:

[WARNING: The 'XML' package is deprecated. Please do not add it as a
dependency to your R package.] Many approaches for both reading and
creating XML (and HTML) documents (including DTDs), both local and
accessible via HTTP or FTP. Also offers access to an 'XPath'
"interpreter".

That would at least help stopping the influx of new packages being
added that depends on XML, especially since not everyone might be
aware of the state of 'XML' and that 'xml2' exists as an alternative.

This also begs the question: Do we need a way to formally declare a
whole package being deprecated?  Is this something that could be added
to the DESCRIPTION file?  Deprecated: TRUE?  Or something richer like
"Lifecycle: deprecated"?  With such a mechanism in place, 'R CMD
check' could give a NOTE for deprecated dependencies.  That could also
be a block for *new* CRAN submission; existing CRAN package should be
accepted ("grandfathered in").  With a richer {deprecation, ...,
defunct} vocabulary, we could produce WARNINGs and eventually ERRORs
too.


/Henrik

On Thu, Jan 25, 2024 at 9:11?AM Heather Turner <ht at heatherturner.net> wrote:
>
> Re: guidance on how to migrate from XML to xml2, these notes from Daniel N?st may be helpful: https://gist.github.com/nuest/3ed3b0057713eb4f4d75d11bb62f2d66.
>
> Best wishes,
> Heather
>
> On Wed, Jan 24, 2024, at 3:38 PM, Emmanuel Blondel wrote:
> > if XML is deprecated, then what would be the choice for a package
> > maintainer? Move to xml2 probably at some point I assume
> >
> > I use XML in the R packages I've been developing. For some of them, I
> > started before CRAN started being the maintainer, and before xml2
> > inception. The thing is that XML fulfills requirements, it works and
> > fulfills needs of depending packages that made the choice to use it. For
> > this, it deserves to be maintained in CRAN, without having to enter into
> > comparison exercices with other packages that , as of today, may be
> > better to rely on (with certainly very good reasons).
> >
> > Moving to xml2 (or whatever other package), which although I could agree
> > on the principle, can be costly for packages that use extensively XML.
> > Doing so would mean that we first get the assurance that all XML
> > features are covered elsewhere, and can be migrated smoothly.
> >
> > In any case, please acknowledge that this kind of migration may take
> > time and require resources that vary (or even are missing) depending on
> > the package projects. I doubt having CRAN setting a common deadline for
> > retirement is a good way to foster an efficient maintenance of R
> > packages depending on XML. It would be good to receive guidance how to
> > migrate, while ensuring backward compatibility on our package features.
> >
> > Best
> >
> > Le 24/01/2024 ? 15:59, Jeroen Ooms a ?crit :
> >> On Mon, Jan 22, 2024 at 3:51?PM Uwe Ligges
> >> <ligges at statistik.tu-dortmund.de> wrote:
> >>> Dear package developers,
> >>>
> >>> the CRAN team (and Professor Ripley in particular) has been the defacto
> >>> maintainer of CRAN package 'XML'.
> >>> Our hope was that maintainers of packages depending on XML will migrate
> >>> to other packages for reading XML structures. This has not happened and
> >>> we still see dozens of strong dependencies on XML.
> >> How is this hope communicated? Many R users assume that XML package is
> >> in great shape and the preferable choice because it is maintained by
> >> the CRAN team and r-core members.
> >>
> >> Perhaps one could follow the precedent from the rgdal retirement, and
> >> set a deadline.
> >>
> >> One way to communicate this effectively would be by introducing a
> >> formal deprecation field in the package description. This could then
> >> be displayed on the XML CRAN html page, and when loading the package
> >> interactively. Other packages that import such a deprecated package
> >> could be given a CMD check warning.
> >>
> >> ______________________________________________
> >> R-package-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From @|mon@urb@nek @end|ng |rom R-project@org  Fri Jan 26 03:44:27 2024
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Fri, 26 Jan 2024 15:44:27 +1300
Subject: [R-pkg-devel] Possible malware(?) in a vignette
In-Reply-To: <CALEXWq0vHqYeB_UT7A_oG+um1HqSP1WBYa7D3Ls+3yWQ_DCQdQ@mail.gmail.com>
References: <CADbDLZnW6Rgk+Z2161yPOFBSMD+fHApPmRyrQLmgywGOTGaBVw@mail.gmail.com>
 <CALEXWq0vHqYeB_UT7A_oG+um1HqSP1WBYa7D3Ls+3yWQ_DCQdQ@mail.gmail.com>
Message-ID: <0EC824A6-0025-4FC2-9DE3-6364AC1F22D9@R-project.org>

I?aki,

I think you got it backwards in your conclusions: CRAN has not generated that PDF file (and Windows machines are not even involved here), it is the contents of a contributed package, so CRAN itself is not compromised. Also it is far from clear that it is really a malware - in fact it's certainly NOT what the website you linked claims as those tags imply trojans disguising ZIPped executables as PDF, but the file is an actual valid PDF and not even remotely a ZIP file (in fact is it consistent with pdflatex output). I looked at the decompressed payload of the PDF and the only binary payload are embedded fonts so my guess would be that some byte sequence in the fonts gets detected as false-positive trojan, but since there is no detail on the report we can just guess. False-positives are a common problem and this would not be the first one. Further indication that it's a false-positive is that a simple re-packaging the streams (i.e. NOT changing the actual PDF contents) make the same file pass the tests as clean.

Also note that there is a bit of a confusion as the currently released version (poweRlaw 0.80.0) does not get flagged, so it is only the archived version (from 2020).

Cheers,
Simon



> On 26/01/2024, at 12:02 AM, I?aki Ucar <iucar at fedoraproject.org> wrote:
> 
> On Thu, 25 Jan 2024 at 10:13, Colin Gillespie <csgillespie at gmail.com> wrote:
>> 
>> Hi All,
>> 
>> I've had two emails from users in the last 24 hours about malware
>> around one of my vignettes. A snippet from the last user is:
>> 
>> ---
>> I was trying to install a R package that depends on PowerRLaw two
>> weeks ago.  However my virus protection software F secure did not
>> allow me to install it from CRAN, while installation from GitHub
>> worked normally. Virus protection software claimed that
>> d_jss_paper.pdf is compromised. I asked about this from our IT support
>> and they asked it from the company F secure. Now F secure has analysed
>> the file and according them it is malware.
>> 
>> ?Upon analyzing, our analysis indicates that the file you submitted is
>> malicious. Hence the verdict will remain
> 
> See https://www.virustotal.com/gui/file/9486d99c1c1f2d1b06f0b6c5d27c54d4f6e39d69a91d7fad845f323b0ab88de9/behavior
> 
> According to the sandboxed analysis, there's something there trying to
> tamper with the Acrobat installation. It tries several Windows paths.
> That's not good.
> 
> The good news is that, if I recreate the vignette from your repo, the
> file is different, different hash, and it's clean.
> 
> The bad news is that... this means that CRAN may be compromised. I
> urge CRAN maintainers to check all the PDF vignettes and scan the
> Windows machines for viruses.
> 
> Best,
> I?aki
> 
> 
>> 
>> ---
>> 
>> Other information is:
>> 
>> * Package in question:
>> https://cran.r-project.org/web/packages/poweRlaw/index.html
>> * Package hasn't been updated for three years
>> * Vignette in question:
>> https://cran.r-project.org/web/packages/poweRlaw/vignettes/d_jss_paper.pdf
>> 
>> CRAN asked me to fix
>> https://cran.r-project.org/web/checks/check_results_poweRlaw.html a
>> couple of days ago - which I'm in the process of doing.
>> 
>> Any ideas?
>> 
>> Thanks
>> Colin
>> 
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> 
> 
> -- 
> I?aki ?car
> 


From @ergue|@@oko| @end|ng |rom gm@||@com  Fri Jan 26 10:31:42 2024
From: @ergue|@@oko| @end|ng |rom gm@||@com (Serguei Sokol)
Date: Fri, 26 Jan 2024 10:31:42 +0100
Subject: [R-pkg-devel] Native pipe in package examples
In-Reply-To: <20240126020423.7e352852@absentia>
References: <CAL3ufUJ1jWWt2qQRuZZuT5EiJ3YCYBHivPbqouZo77WhH=1Rkw@mail.gmail.com>
 <c763b6cf-ba88-48dd-aff7-f63041f39649@gmail.com>
 <CAFDcVCSjyPLQhcR-pSi-N3j5ShzrMd_DaQqYCuKeWK-5HwtnVg@mail.gmail.com>
 <675ef40d-4371-4a54-b2f6-0a05839819d7@gmail.com>
 <20240126012251.167dd0b6@absentia>
 <CAFDcVCSVy9Q7mKMTi4orUbkoOXqdH-wo83H=Ghar_5Xfs1w3LA@mail.gmail.com>
 <20240126020423.7e352852@absentia>
Message-ID: <969390a1-b118-456e-8fb5-f901b7fc8deb@gmail.com>

Le 25/01/2024 ? 19:04, Berwin A Turlach a ?crit?:
> On Thu, 25 Jan 2024 09:44:26 -0800
> Henrik Bengtsson <henrik.bengtsson at gmail.com> wrote:
> 
>> On Thu, Jan 25, 2024 at 9:23?AM Berwin A Turlach
>> <berwin.turlach at gmail.com> wrote:
>>>
>>> G'day Duncon,
> 
> Uups, apologies for the misspelling of your name Duncan.  Fingers were
> too fast. :)
> 
> [...]
>>> But you could always code your example (not tested :-) ) along lines
>>> similar to:
>>>
>>> if( with(version, all(as.numeric(c(major, minor)) >= c(4, 1))) ){
>>>    ## code that uses native pipe
>>> }else{
>>>    cat("You have to upgrade to R >= 4.1.0 to run this example\n")
>>> }
>>
>> That will unfortunately not work in this case, because |> is part of
>> the new *syntax* that was introduced in R 4.1.0.  Older versions of R
>> simply doesn't understand how to *parse* those two symbols next to
>> each other, e.g.
>>
>> {R 4.1.0}> parse(text = "1:3 |> sum()")
>> expression(1:3 |> sum())
>>
>> {R 4.0.5}> parse(text = "1:3 |> sum()")
>> Error in parse(text = "1:3 |> sum()") : <text>:1:6: unexpected '>'
>> 1: 1:3 |>
>>           ^
>>
>> In order for R to execute some code, it needs to be able to parse it
>> first. Only then, it can execute it.  So, here, we're not even getting
>> past the parsing phase.
> 
> Well, not withstanding 'fortune(181)', you could code it as:
> 
> if( with(version, all(as.numeric(c(major, minor)) >= c(4, 1))) ){
>     cat(eval(parse(text="1:3 |> sum()")), "\n")
> }else{
>    cat("You have to upgrade to R >= 4.1.0 to run this example\n")
> }
> 
By nitpicking a little bit, this test won't work for v5.0 as minor "0" 
is less then "1". There are a more canonical ways to test the version 
and send a message (or a 'warning()'):

if (getVersion() >= "4.1") {
    cat(eval(parse(text="1:3 |> sum()")), "\n")
} else {
    message("You have to upgrade to R >= 4.1.0 to run this example")
}

Best,
Serguei.


From @ergue|@@oko| @end|ng |rom gm@||@com  Fri Jan 26 10:44:13 2024
From: @ergue|@@oko| @end|ng |rom gm@||@com (Serguei Sokol)
Date: Fri, 26 Jan 2024 10:44:13 +0100
Subject: [R-pkg-devel] Native pipe in package examples
In-Reply-To: <969390a1-b118-456e-8fb5-f901b7fc8deb@gmail.com>
References: <CAL3ufUJ1jWWt2qQRuZZuT5EiJ3YCYBHivPbqouZo77WhH=1Rkw@mail.gmail.com>
 <c763b6cf-ba88-48dd-aff7-f63041f39649@gmail.com>
 <CAFDcVCSjyPLQhcR-pSi-N3j5ShzrMd_DaQqYCuKeWK-5HwtnVg@mail.gmail.com>
 <675ef40d-4371-4a54-b2f6-0a05839819d7@gmail.com>
 <20240126012251.167dd0b6@absentia>
 <CAFDcVCSVy9Q7mKMTi4orUbkoOXqdH-wo83H=Ghar_5Xfs1w3LA@mail.gmail.com>
 <20240126020423.7e352852@absentia>
 <969390a1-b118-456e-8fb5-f901b7fc8deb@gmail.com>
Message-ID: <dc299993-5022-4076-8f72-e4275345a5ba@gmail.com>

Le 26/01/2024 ? 10:31, Serguei Sokol a ?crit?:
> Le 25/01/2024 ? 19:04, Berwin A Turlach a ?crit?:
>> On Thu, 25 Jan 2024 09:44:26 -0800
>> Henrik Bengtsson <henrik.bengtsson at gmail.com> wrote:
>>
>>> On Thu, Jan 25, 2024 at 9:23?AM Berwin A Turlach
>>> <berwin.turlach at gmail.com> wrote:
>>>>
>>>> G'day Duncon,
>>
>> Uups, apologies for the misspelling of your name Duncan. Fingers were
>> too fast. :)
>>
>> [...]
>>>> But you could always code your example (not tested :-) ) along lines
>>>> similar to:
>>>>
>>>> if( with(version, all(as.numeric(c(major, minor)) >= c(4, 1))) ){
>>>> ?? ## code that uses native pipe
>>>> }else{
>>>> ?? cat("You have to upgrade to R >= 4.1.0 to run this example\n")
>>>> }
>>>
>>> That will unfortunately not work in this case, because |> is part of
>>> the new *syntax* that was introduced in R 4.1.0.? Older versions of R
>>> simply doesn't understand how to *parse* those two symbols next to
>>> each other, e.g.
>>>
>>> {R 4.1.0}> parse(text = "1:3 |> sum()")
>>> expression(1:3 |> sum())
>>>
>>> {R 4.0.5}> parse(text = "1:3 |> sum()")
>>> Error in parse(text = "1:3 |> sum()") : <text>:1:6: unexpected '>'
>>> 1: 1:3 |>
>>> ????????? ^
>>>
>>> In order for R to execute some code, it needs to be able to parse it
>>> first. Only then, it can execute it.? So, here, we're not even getting
>>> past the parsing phase.
>>
>> Well, not withstanding 'fortune(181)', you could code it as:
>>
>> if( with(version, all(as.numeric(c(major, minor)) >= c(4, 1))) ){
>> ??? cat(eval(parse(text="1:3 |> sum()")), "\n")
>> }else{
>> ?? cat("You have to upgrade to R >= 4.1.0 to run this example\n")
>> }
>>
> By nitpicking a little bit, this test won't work for v5.0 as minor "0" 
> is less then "1". There are a more canonical ways to test the version 
> and send a message (or a 'warning()'):
>
> if (getVersion() >= "4.1") {
Oops, it won't work for v10.0. Better would be:

if (utils::compareVersion(getVersion(), "4.1.0") >= 0) {

Best,
Serguei.

> cat(eval(parse(text="1:3 |> sum()")), "\n")
> } else {
> ?? message("You have to upgrade to R >= 4.1.0 to run this example")
> }
>
> Best,
> Serguei.


From @ergue|@@oko| @end|ng |rom gm@||@com  Fri Jan 26 10:48:11 2024
From: @ergue|@@oko| @end|ng |rom gm@||@com (Serguei Sokol)
Date: Fri, 26 Jan 2024 10:48:11 +0100
Subject: [R-pkg-devel] Native pipe in package examples
In-Reply-To: <dc299993-5022-4076-8f72-e4275345a5ba@gmail.com>
References: <CAL3ufUJ1jWWt2qQRuZZuT5EiJ3YCYBHivPbqouZo77WhH=1Rkw@mail.gmail.com>
 <c763b6cf-ba88-48dd-aff7-f63041f39649@gmail.com>
 <CAFDcVCSjyPLQhcR-pSi-N3j5ShzrMd_DaQqYCuKeWK-5HwtnVg@mail.gmail.com>
 <675ef40d-4371-4a54-b2f6-0a05839819d7@gmail.com>
 <20240126012251.167dd0b6@absentia>
 <CAFDcVCSVy9Q7mKMTi4orUbkoOXqdH-wo83H=Ghar_5Xfs1w3LA@mail.gmail.com>
 <20240126020423.7e352852@absentia>
 <969390a1-b118-456e-8fb5-f901b7fc8deb@gmail.com>
 <dc299993-5022-4076-8f72-e4275345a5ba@gmail.com>
Message-ID: <b8d37df2-debb-4fc8-8ac1-b21008fef717@gmail.com>

Le 26/01/2024 ? 10:44, Serguei Sokol a ?crit?:
> Le 26/01/2024 ? 10:31, Serguei Sokol a ?crit?:
>> Le 25/01/2024 ? 19:04, Berwin A Turlach a ?crit?:
>>> On Thu, 25 Jan 2024 09:44:26 -0800
>>> Henrik Bengtsson <henrik.bengtsson at gmail.com> wrote:
>>>
>>>> On Thu, Jan 25, 2024 at 9:23?AM Berwin A Turlach
>>>> <berwin.turlach at gmail.com> wrote:
>>>>>
>>>>> G'day Duncon,
>>>
>>> Uups, apologies for the misspelling of your name Duncan. Fingers were
>>> too fast. :)
>>>
>>> [...]
>>>>> But you could always code your example (not tested :-) ) along lines
>>>>> similar to:
>>>>>
>>>>> if( with(version, all(as.numeric(c(major, minor)) >= c(4, 1))) ){
>>>>> ?? ## code that uses native pipe
>>>>> }else{
>>>>> ?? cat("You have to upgrade to R >= 4.1.0 to run this example\n")
>>>>> }
>>>>
>>>> That will unfortunately not work in this case, because |> is part of
>>>> the new *syntax* that was introduced in R 4.1.0.? Older versions of R
>>>> simply doesn't understand how to *parse* those two symbols next to
>>>> each other, e.g.
>>>>
>>>> {R 4.1.0}> parse(text = "1:3 |> sum()")
>>>> expression(1:3 |> sum())
>>>>
>>>> {R 4.0.5}> parse(text = "1:3 |> sum()")
>>>> Error in parse(text = "1:3 |> sum()") : <text>:1:6: unexpected '>'
>>>> 1: 1:3 |>
>>>> ????????? ^
>>>>
>>>> In order for R to execute some code, it needs to be able to parse it
>>>> first. Only then, it can execute it.? So, here, we're not even getting
>>>> past the parsing phase.
>>>
>>> Well, not withstanding 'fortune(181)', you could code it as:
>>>
>>> if( with(version, all(as.numeric(c(major, minor)) >= c(4, 1))) ){
>>> ??? cat(eval(parse(text="1:3 |> sum()")), "\n")
>>> }else{
>>> ?? cat("You have to upgrade to R >= 4.1.0 to run this example\n")
>>> }
>>>
>> By nitpicking a little bit, this test won't work for v5.0 as minor 
>> "0" is less then "1". There are a more canonical ways to test the 
>> version and send a message (or a 'warning()'):
>>
>> if (getVersion() >= "4.1") {
> Oops, it won't work for v10.0. Better would be:
>
> if (utils::compareVersion(getVersion(), "4.1.0") >= 0) {
Sorry for annoyance (not a good day for sending messages), obviously it 
should be 'getRversion()'

Best,
Serguei.

>
> Best,
> Serguei.
>
>> cat(eval(parse(text="1:3 |> sum()")), "\n")
>> } else {
>> ?? message("You have to upgrade to R >= 4.1.0 to run this example")
>> }
>>
>> Best,
>> Serguei.
>


From murdoch@dunc@n @end|ng |rom gm@||@com  Fri Jan 26 16:18:52 2024
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Fri, 26 Jan 2024 10:18:52 -0500
Subject: [R-pkg-devel] Native pipe in package examples
In-Reply-To: <CAFDcVCSAZYL3puuUc8nvnfUAdWMk9X87A_ydM3Axuoczxao+rQ@mail.gmail.com>
References: <CAL3ufUJ1jWWt2qQRuZZuT5EiJ3YCYBHivPbqouZo77WhH=1Rkw@mail.gmail.com>
 <c763b6cf-ba88-48dd-aff7-f63041f39649@gmail.com>
 <CAFDcVCSjyPLQhcR-pSi-N3j5ShzrMd_DaQqYCuKeWK-5HwtnVg@mail.gmail.com>
 <675ef40d-4371-4a54-b2f6-0a05839819d7@gmail.com>
 <CAFDcVCSAZYL3puuUc8nvnfUAdWMk9X87A_ydM3Axuoczxao+rQ@mail.gmail.com>
Message-ID: <3b025664-cdf4-4ac9-b6b1-f818e013258a@gmail.com>

On 25/01/2024 12:38 p.m., Henrik Bengtsson wrote:
> On Thu, Jan 25, 2024 at 8:27?AM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>>
>> On 25/01/2024 11:18 a.m., Henrik Bengtsson wrote:
>>> On Thu, Jan 25, 2024 at 7:48?AM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>>>>
>>>> On 25/01/2024 10:27 a.m., Josiah Parry wrote:
>>>>> Hey all,
>>>>>
>>>>> I've encountered use of the native pipe operator in the examples for
>>>>> 'httr2' e.g.
>>>>>
>>>>> request("http://example.com") |> req_dry_run()
>>>>>
>>>>>
>>>>> Since r-oldrel (according to rversions::r_oldrel()) is now 4.2.3, can the
>>>>> native pipe be used in example code?
>>>>>
>>>>> I do notice that the package httr2 requires R >= 3.6.0 which implies that
>>>>> the code itself does not use the native pipe, but the examples do.
>>>>
>>>> I think that the package should state it requires R (>= 4.1.0), since
>>>> that code won't work in earlier versions.
>>>>
>>>> I believe it's a syntax error before 4.1.0, but don't have a copy handy
>>>> to test.
>>>
>>> Yes, support for the |> syntax was introduced in R 4.1.0;
>>>
>>> $ Rscript --vanilla -e "getRversion()" -e "1:10 |> sum()"
>>> [1] ?4.0.5?
>>> Error: unexpected '>' in "1:10 |>"
>>> Execution halted
>>>
>>> $ Rscript --vanilla -e "getRversion()" -e "1:10 |> sum()"
>>> [1] ?4.1.0?
>>> [1] 55
>>>
>>>> That means the package won't pass R CMD check in those old
>>>> versions.  If it wasn't a syntax error, just a case of using a new
>>>> feature, then I think it would be fine to put in a run-time test of the
>>>> R version to skip code that won't run properly.
>>>
>>> There's also the distinction of package code versus code in
>>> documentation. If it's only example code in help pages that use the
>>> native pipe, but the code in R/*.R does not, then the package will
>>> still install and work with R (< 4.1.0).  The only thing that won't
>>> work is when the user tries to run the code in the documented
>>> examples.  I'd argue that it's okay to specify, say, R (>= 3.6.0) in
>>> such an example.  It allows users with older versions to still use the
>>> package, while already now migrating the documentation to use newer
>>> syntax.
>>
>> Is there a way to do that so that R will pay attention, or do you mean
>> just saying it in a comment?
> 
> As a "comment".
> 
>>
>> I think you're right that syntax errors in help page examples will be
>> installable, but I don't think there's a way to make them pass "R CMD
>> check" other than wrapping them in \dontrun{}, and I don't know a way to
>> do that conditional on the R version.
> 
> I think
> 
> $ R CMD check --no-examples --no-vignettes ...
> 
> would check everything else but examples and vignettes.
> 
>>
>> I would say that a package that doesn't pass "R CMD check" without
>> errors shouldn't be trusted.
> 
> Somewhat agree, but we still get some "trust" from the fact that the
> package passes R CMD check --as-cran on R (>= 4.1.0).  Also, if the
> maintainer documents something like "On R (> 4.1.0), the package
> passes 'R CMD check --no-examples ...'; we use R (>= 4.1.0)-specific
> syntax in some of the help-age examples", then there's additional
> "trust" in it's working there.  But, yes, there's less "trust" here,
> but I think it's okay for maintainers to declare "R (>= 3.6.0)" to be
> backward compatible. Another way to put it, it would be extreme to
> require "R (>= 4.1.0)" just because of a single "1:3 |> sum()" in some
> example code.
> 
> /Henrik
> 
> PS. Personally, I'd skip the use of |> in examples to avoid these concerns.

I think we agree.  If I was determined to support 3.6.0 users, I'd 
recode that example as

   req_dry_run(request("http://example.com"))

   # It is convenient to use the native pipe |> in R 4.1.0 or greater:

   #   request("http://example.com") |> req_dry_run()

   # ... or the magrittr pipe if available:

   #   request("http://example.com") %>% req_dry_run()

Duncan Murdoch


From bob @end|ng |rom rud@|@  Sat Jan 27 09:52:01 2024
From: bob @end|ng |rom rud@|@ (Bob Rudis)
Date: Sat, 27 Jan 2024 03:52:01 -0500
Subject: [R-pkg-devel] Possible malware(?) in a vignette
In-Reply-To: <0EC824A6-0025-4FC2-9DE3-6364AC1F22D9@R-project.org>
References: <CADbDLZnW6Rgk+Z2161yPOFBSMD+fHApPmRyrQLmgywGOTGaBVw@mail.gmail.com>
 <CALEXWq0vHqYeB_UT7A_oG+um1HqSP1WBYa7D3Ls+3yWQ_DCQdQ@mail.gmail.com>
 <0EC824A6-0025-4FC2-9DE3-6364AC1F22D9@R-project.org>
Message-ID: <CAA-FpKU=1nJ2W1TjHQt8GGCtd4Dt9STrePXw9igGE9_P+xW-vw@mail.gmail.com>

The current one on CRAN does get flagged for some low-level Sigma rules b/c
of one of way a few URLs interact. I don't know if f-secure is
pedantic enough to call that malicious (it probably is, though). The
*current* PDF is "fine".

There is a major problem with the 2020 version. The file I?aki's URL
matches the PDF that I grabbed from the Wayback Machine for the 2020 PDF
from that URL.

Simon's assertion about this *2020* file is flat out wrong. It's very bad.

Two VT sandboxes used Adobe Acrobat Reader to open the PDF and the PDF
seems to either had malicious JavaScript or had been crafted sufficiently
to caused a buffer overflow in Reader that then let it perform other
functions on those sandboxes.

They are most certainly *not* false positives, and dismissing that outright
is not great.

I'm not going to check every 2020 PDF from CRAN, but this is a big signal
to me there was an issue *somewhere* in that time period.

I do not know what cran.r-project.org resolved to for the Common Crawl at
that date (which is where archive.org picked it up to archive for the 2020
PDF version). I highly doubt the Common Crawl DNS resolution process was
spoofed _just for that PDF URL_, but it may have been for CRAN in general
or just "in general" during that crawl period.

It is also possible some malware hit CRAN during portions of that time
period and infected more than one PDF.

But, outright suggesting there is no issue was not the way to go, here.
And, someone should likely at least poke at more 2020 PDFs from CRAN
vignette builds (perhaps just the ones built that were JSS articles?it's
possible the header image sourced at that time was tampered with during
some time window, since image decoding issues have plagued Adobe Reader in
buffer overflow land for a long while).

- boB


On Thu, Jan 25, 2024 at 9:44?PM Simon Urbanek <simon.urbanek at r-project.org>
wrote:

> I?aki,
>
> I think you got it backwards in your conclusions: CRAN has not generated
> that PDF file (and Windows machines are not even involved here), it is the
> contents of a contributed package, so CRAN itself is not compromised. Also
> it is far from clear that it is really a malware - in fact it's certainly
> NOT what the website you linked claims as those tags imply trojans
> disguising ZIPped executables as PDF, but the file is an actual valid PDF
> and not even remotely a ZIP file (in fact is it consistent with pdflatex
> output). I looked at the decompressed payload of the PDF and the only
> binary payload are embedded fonts so my guess would be that some byte
> sequence in the fonts gets detected as false-positive trojan, but since
> there is no detail on the report we can just guess. False-positives are a
> common problem and this would not be the first one. Further indication that
> it's a false-positive is that a simple re-packaging the streams (i.e. NOT
> changing the actual PDF contents) make the same file pass the tests as
> clean.
>
> Also note that there is a bit of a confusion as the currently released
> version (poweRlaw 0.80.0) does not get flagged, so it is only the archived
> version (from 2020).
>
> Cheers,
> Simon
>
>
>
> > On 26/01/2024, at 12:02 AM, I?aki Ucar <iucar at fedoraproject.org> wrote:
> >
> > On Thu, 25 Jan 2024 at 10:13, Colin Gillespie <csgillespie at gmail.com>
> wrote:
> >>
> >> Hi All,
> >>
> >> I've had two emails from users in the last 24 hours about malware
> >> around one of my vignettes. A snippet from the last user is:
> >>
> >> ---
> >> I was trying to install a R package that depends on PowerRLaw two
> >> weeks ago.  However my virus protection software F secure did not
> >> allow me to install it from CRAN, while installation from GitHub
> >> worked normally. Virus protection software claimed that
> >> d_jss_paper.pdf is compromised. I asked about this from our IT support
> >> and they asked it from the company F secure. Now F secure has analysed
> >> the file and according them it is malware.
> >>
> >> ?Upon analyzing, our analysis indicates that the file you submitted is
> >> malicious. Hence the verdict will remain
> >
> > See
> https://www.virustotal.com/gui/file/9486d99c1c1f2d1b06f0b6c5d27c54d4f6e39d69a91d7fad845f323b0ab88de9/behavior
> >
> > According to the sandboxed analysis, there's something there trying to
> > tamper with the Acrobat installation. It tries several Windows paths.
> > That's not good.
> >
> > The good news is that, if I recreate the vignette from your repo, the
> > file is different, different hash, and it's clean.
> >
> > The bad news is that... this means that CRAN may be compromised. I
> > urge CRAN maintainers to check all the PDF vignettes and scan the
> > Windows machines for viruses.
> >
> > Best,
> > I?aki
> >
> >
> >>
> >> ---
> >>
> >> Other information is:
> >>
> >> * Package in question:
> >> https://cran.r-project.org/web/packages/poweRlaw/index.html
> >> * Package hasn't been updated for three years
> >> * Vignette in question:
> >>
> https://cran.r-project.org/web/packages/poweRlaw/vignettes/d_jss_paper.pdf
> >>
> >> CRAN asked me to fix
> >> https://cran.r-project.org/web/checks/check_results_poweRlaw.html a
> >> couple of days ago - which I'm in the process of doing.
> >>
> >> Any ideas?
> >>
> >> Thanks
> >> Colin
> >>
> >> ______________________________________________
> >> R-package-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
> >
> >
> > --
> > I?aki ?car
> >
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From @|mon@urb@nek @end|ng |rom R-project@org  Sat Jan 27 11:18:47 2024
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Sat, 27 Jan 2024 23:18:47 +1300
Subject: [R-pkg-devel] Possible malware(?) in a vignette
In-Reply-To: <CAA-FpKU=1nJ2W1TjHQt8GGCtd4Dt9STrePXw9igGE9_P+xW-vw@mail.gmail.com>
References: <CADbDLZnW6Rgk+Z2161yPOFBSMD+fHApPmRyrQLmgywGOTGaBVw@mail.gmail.com>
 <CALEXWq0vHqYeB_UT7A_oG+um1HqSP1WBYa7D3Ls+3yWQ_DCQdQ@mail.gmail.com>
 <0EC824A6-0025-4FC2-9DE3-6364AC1F22D9@R-project.org>
 <CAA-FpKU=1nJ2W1TjHQt8GGCtd4Dt9STrePXw9igGE9_P+xW-vw@mail.gmail.com>
Message-ID: <5020FB99-7AD6-47C6-8DB0-C4D909FFBDD6@R-project.org>

Bob,

I was not making assertions, I was only dismissing clearly false claims: CRAN did NOT generate the file in question, it is not a ZIP file trojan as indicated by the AV flags and content inspection did not reveal any other streams than what is usual in pdflatex output. The information about the alleged malware was terribly vague and incomplete to put it mildly so if you have any additional forensic information that sheds more light on whether this was a malware or not, it would be welcome. If it was indeed one, knowing what kind would help to see how any other instances could be detected. Please contact the CRAN team if you have any such information and we can take it from there.

As you hinted yourself - there is no such thing as absolute safety - as the webp exploits have illustrated very clearly a simple image can be malware and the only read defense is to keep your software up to date.

Cheers,
Simon



> On Jan 27, 2024, at 9:52 PM, Bob Rudis <bob at rud.is> wrote:
> 
> The current one on CRAN does get flagged for some low-level Sigma rules b/c of one of way a few URLs interact. I don't know if f-secure is pedantic enough to call that malicious (it probably is, though). The *current* PDF is "fine".
> 
> There is a major problem with the 2020 version. The file I?aki's URL matches the PDF that I grabbed from the Wayback Machine for the 2020 PDF from that URL.
> 
> Simon's assertion about this *2020* file is flat out wrong. It's very bad.
> 
> Two VT sandboxes used Adobe Acrobat Reader to open the PDF and the PDF seems to either had malicious JavaScript or had been crafted sufficiently to caused a buffer overflow in Reader that then let it perform other functions on those sandboxes.
> 
> They are most certainly *not* false positives, and dismissing that outright is not great.
> 
> I'm not going to check every 2020 PDF from CRAN, but this is a big signal to me there was an issue *somewhere* in that time period.
> 
> I do not know what cran.r-project.org resolved to for the Common Crawl at that date (which is where archive.org picked it up to archive for the 2020 PDF version). I highly doubt the Common Crawl DNS resolution process was spoofed _just for that PDF URL_, but it may have been for CRAN in general or just "in general" during that crawl period.
> 
> It is also possible some malware hit CRAN during portions of that time period and infected more than one PDF.
> 
> But, outright suggesting there is no issue was not the way to go, here. And, someone should likely at least poke at more 2020 PDFs from CRAN vignette builds (perhaps just the ones built that were JSS articles?it's possible the header image sourced at that time was tampered with during some time window, since image decoding issues have plagued Adobe Reader in buffer overflow land for a long while).
> 
> - boB
> 
> 
> On Thu, Jan 25, 2024 at 9:44?PM Simon Urbanek <simon.urbanek at r-project.org> wrote:
> I?aki,
> 
> I think you got it backwards in your conclusions: CRAN has not generated that PDF file (and Windows machines are not even involved here), it is the contents of a contributed package, so CRAN itself is not compromised. Also it is far from clear that it is really a malware - in fact it's certainly NOT what the website you linked claims as those tags imply trojans disguising ZIPped executables as PDF, but the file is an actual valid PDF and not even remotely a ZIP file (in fact is it consistent with pdflatex output). I looked at the decompressed payload of the PDF and the only binary payload are embedded fonts so my guess would be that some byte sequence in the fonts gets detected as false-positive trojan, but since there is no detail on the report we can just guess. False-positives are a common problem and this would not be the first one. Further indication that it's a false-positive is that a simple re-packaging the streams (i.e. NOT changing the actual PDF contents) make the same file pass the tests as clean.
> 
> Also note that there is a bit of a confusion as the currently released version (poweRlaw 0.80.0) does not get flagged, so it is only the archived version (from 2020).
> 
> Cheers,
> Simon
> 
> 
> 
> > On 26/01/2024, at 12:02 AM, I?aki Ucar <iucar at fedoraproject.org> wrote:
> > 
> > On Thu, 25 Jan 2024 at 10:13, Colin Gillespie <csgillespie at gmail.com> wrote:
> >> 
> >> Hi All,
> >> 
> >> I've had two emails from users in the last 24 hours about malware
> >> around one of my vignettes. A snippet from the last user is:
> >> 
> >> ---
> >> I was trying to install a R package that depends on PowerRLaw two
> >> weeks ago.  However my virus protection software F secure did not
> >> allow me to install it from CRAN, while installation from GitHub
> >> worked normally. Virus protection software claimed that
> >> d_jss_paper.pdf is compromised. I asked about this from our IT support
> >> and they asked it from the company F secure. Now F secure has analysed
> >> the file and according them it is malware.
> >> 
> >> ?Upon analyzing, our analysis indicates that the file you submitted is
> >> malicious. Hence the verdict will remain
> > 
> > See https://www.virustotal.com/gui/file/9486d99c1c1f2d1b06f0b6c5d27c54d4f6e39d69a91d7fad845f323b0ab88de9/behavior
> > 
> > According to the sandboxed analysis, there's something there trying to
> > tamper with the Acrobat installation. It tries several Windows paths.
> > That's not good.
> > 
> > The good news is that, if I recreate the vignette from your repo, the
> > file is different, different hash, and it's clean.
> > 
> > The bad news is that... this means that CRAN may be compromised. I
> > urge CRAN maintainers to check all the PDF vignettes and scan the
> > Windows machines for viruses.
> > 
> > Best,
> > I?aki
> > 
> > 
> >> 
> >> ---
> >> 
> >> Other information is:
> >> 
> >> * Package in question:
> >> https://cran.r-project.org/web/packages/poweRlaw/index.html
> >> * Package hasn't been updated for three years
> >> * Vignette in question:
> >> https://cran.r-project.org/web/packages/poweRlaw/vignettes/d_jss_paper.pdf
> >> 
> >> CRAN asked me to fix
> >> https://cran.r-project.org/web/checks/check_results_poweRlaw.html a
> >> couple of days ago - which I'm in the process of doing.
> >> 
> >> Any ideas?
> >> 
> >> Thanks
> >> Colin
> >> 
> >> ______________________________________________
> >> R-package-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> > 
> > 
> > 
> > -- 
> > I?aki ?car
> > 
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From |uc@r @end|ng |rom |edor@project@org  Sat Jan 27 11:44:12 2024
From: |uc@r @end|ng |rom |edor@project@org (=?UTF-8?Q?I=C3=B1aki_Ucar?=)
Date: Sat, 27 Jan 2024 11:44:12 +0100
Subject: [R-pkg-devel] Possible malware(?) in a vignette
In-Reply-To: <5020FB99-7AD6-47C6-8DB0-C4D909FFBDD6@R-project.org>
References: <CADbDLZnW6Rgk+Z2161yPOFBSMD+fHApPmRyrQLmgywGOTGaBVw@mail.gmail.com>
 <CALEXWq0vHqYeB_UT7A_oG+um1HqSP1WBYa7D3Ls+3yWQ_DCQdQ@mail.gmail.com>
 <0EC824A6-0025-4FC2-9DE3-6364AC1F22D9@R-project.org>
 <CAA-FpKU=1nJ2W1TjHQt8GGCtd4Dt9STrePXw9igGE9_P+xW-vw@mail.gmail.com>
 <5020FB99-7AD6-47C6-8DB0-C4D909FFBDD6@R-project.org>
Message-ID: <CALEXWq1Su3_saZg3MXP3EHKXsWJdoNibjMkYYHKJW=yGs2BQrQ@mail.gmail.com>

Simon,

Please re-read my email. I did *not* say that CRAN *generated* that file. I
said that CRAN *may* be compromised (some virus may have modified files).

I did *not* claim that the report was necessarily 100% accurate. But "that
page I linked" was created by a security firm, and it would be wise to
further investigate any potential threat reported there, which is what I
was suggesting.

I don't think these are "false claims".

I?aki

El s?b., 27 ene. 2024 11:19, Simon Urbanek <simon.urbanek at r-project.org>
escribi?:

> Bob,
>
> I was not making assertions, I was only dismissing clearly false claims:
> CRAN did NOT generate the file in question, it is not a ZIP file trojan as
> indicated by the AV flags and content inspection did not reveal any other
> streams than what is usual in pdflatex output. The information about the
> alleged malware was terribly vague and incomplete to put it mildly so if
> you have any additional forensic information that sheds more light on
> whether this was a malware or not, it would be welcome. If it was indeed
> one, knowing what kind would help to see how any other instances could be
> detected. Please contact the CRAN team if you have any such information and
> we can take it from there.
>
> As you hinted yourself - there is no such thing as absolute safety - as
> the webp exploits have illustrated very clearly a simple image can be
> malware and the only read defense is to keep your software up to date.
>
> Cheers,
> Simon
>
>
>
> > On Jan 27, 2024, at 9:52 PM, Bob Rudis <bob at rud.is> wrote:
> >
> > The current one on CRAN does get flagged for some low-level Sigma rules
> b/c of one of way a few URLs interact. I don't know if f-secure is pedantic
> enough to call that malicious (it probably is, though). The *current* PDF
> is "fine".
> >
> > There is a major problem with the 2020 version. The file I?aki's URL
> matches the PDF that I grabbed from the Wayback Machine for the 2020 PDF
> from that URL.
> >
> > Simon's assertion about this *2020* file is flat out wrong. It's very
> bad.
> >
> > Two VT sandboxes used Adobe Acrobat Reader to open the PDF and the PDF
> seems to either had malicious JavaScript or had been crafted sufficiently
> to caused a buffer overflow in Reader that then let it perform other
> functions on those sandboxes.
> >
> > They are most certainly *not* false positives, and dismissing that
> outright is not great.
> >
> > I'm not going to check every 2020 PDF from CRAN, but this is a big
> signal to me there was an issue *somewhere* in that time period.
> >
> > I do not know what cran.r-project.org resolved to for the Common Crawl
> at that date (which is where archive.org picked it up to archive for the
> 2020 PDF version). I highly doubt the Common Crawl DNS resolution process
> was spoofed _just for that PDF URL_, but it may have been for CRAN in
> general or just "in general" during that crawl period.
> >
> > It is also possible some malware hit CRAN during portions of that time
> period and infected more than one PDF.
> >
> > But, outright suggesting there is no issue was not the way to go, here.
> And, someone should likely at least poke at more 2020 PDFs from CRAN
> vignette builds (perhaps just the ones built that were JSS articles?it's
> possible the header image sourced at that time was tampered with during
> some time window, since image decoding issues have plagued Adobe Reader in
> buffer overflow land for a long while).
> >
> > - boB
> >
> >
> > On Thu, Jan 25, 2024 at 9:44?PM Simon Urbanek <
> simon.urbanek at r-project.org> wrote:
> > I?aki,
> >
> > I think you got it backwards in your conclusions: CRAN has not generated
> that PDF file (and Windows machines are not even involved here), it is the
> contents of a contributed package, so CRAN itself is not compromised. Also
> it is far from clear that it is really a malware - in fact it's certainly
> NOT what the website you linked claims as those tags imply trojans
> disguising ZIPped executables as PDF, but the file is an actual valid PDF
> and not even remotely a ZIP file (in fact is it consistent with pdflatex
> output). I looked at the decompressed payload of the PDF and the only
> binary payload are embedded fonts so my guess would be that some byte
> sequence in the fonts gets detected as false-positive trojan, but since
> there is no detail on the report we can just guess. False-positives are a
> common problem and this would not be the first one. Further indication that
> it's a false-positive is that a simple re-packaging the streams (i.e. NOT
> changing the actual PDF contents) make the same file pass the tests as
> clean.
> >
> > Also note that there is a bit of a confusion as the currently released
> version (poweRlaw 0.80.0) does not get flagged, so it is only the archived
> version (from 2020).
> >
> > Cheers,
> > Simon
> >
> >
> >
> > > On 26/01/2024, at 12:02 AM, I?aki Ucar <iucar at fedoraproject.org>
> wrote:
> > >
> > > On Thu, 25 Jan 2024 at 10:13, Colin Gillespie <csgillespie at gmail.com>
> wrote:
> > >>
> > >> Hi All,
> > >>
> > >> I've had two emails from users in the last 24 hours about malware
> > >> around one of my vignettes. A snippet from the last user is:
> > >>
> > >> ---
> > >> I was trying to install a R package that depends on PowerRLaw two
> > >> weeks ago.  However my virus protection software F secure did not
> > >> allow me to install it from CRAN, while installation from GitHub
> > >> worked normally. Virus protection software claimed that
> > >> d_jss_paper.pdf is compromised. I asked about this from our IT support
> > >> and they asked it from the company F secure. Now F secure has analysed
> > >> the file and according them it is malware.
> > >>
> > >> ?Upon analyzing, our analysis indicates that the file you submitted is
> > >> malicious. Hence the verdict will remain
> > >
> > > See
> https://www.virustotal.com/gui/file/9486d99c1c1f2d1b06f0b6c5d27c54d4f6e39d69a91d7fad845f323b0ab88de9/behavior
> > >
> > > According to the sandboxed analysis, there's something there trying to
> > > tamper with the Acrobat installation. It tries several Windows paths.
> > > That's not good.
> > >
> > > The good news is that, if I recreate the vignette from your repo, the
> > > file is different, different hash, and it's clean.
> > >
> > > The bad news is that... this means that CRAN may be compromised. I
> > > urge CRAN maintainers to check all the PDF vignettes and scan the
> > > Windows machines for viruses.
> > >
> > > Best,
> > > I?aki
> > >
> > >
> > >>
> > >> ---
> > >>
> > >> Other information is:
> > >>
> > >> * Package in question:
> > >> https://cran.r-project.org/web/packages/poweRlaw/index.html
> > >> * Package hasn't been updated for three years
> > >> * Vignette in question:
> > >>
> https://cran.r-project.org/web/packages/poweRlaw/vignettes/d_jss_paper.pdf
> > >>
> > >> CRAN asked me to fix
> > >> https://cran.r-project.org/web/checks/check_results_poweRlaw.html a
> > >> couple of days ago - which I'm in the process of doing.
> > >>
> > >> Any ideas?
> > >>
> > >> Thanks
> > >> Colin
> > >>
> > >> ______________________________________________
> > >> R-package-devel at r-project.org mailing list
> > >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> > >
> > >
> > >
> > > --
> > > I?aki ?car
> > >
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>

	[[alternative HTML version deleted]]


From |kry|ov @end|ng |rom d|@root@org  Sat Jan 27 11:51:10 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Sat, 27 Jan 2024 13:51:10 +0300
Subject: [R-pkg-devel] Possible malware(?) in a vignette
In-Reply-To: <CAA-FpKU=1nJ2W1TjHQt8GGCtd4Dt9STrePXw9igGE9_P+xW-vw@mail.gmail.com>
References: <CADbDLZnW6Rgk+Z2161yPOFBSMD+fHApPmRyrQLmgywGOTGaBVw@mail.gmail.com>
 <CALEXWq0vHqYeB_UT7A_oG+um1HqSP1WBYa7D3Ls+3yWQ_DCQdQ@mail.gmail.com>
 <0EC824A6-0025-4FC2-9DE3-6364AC1F22D9@R-project.org>
 <CAA-FpKU=1nJ2W1TjHQt8GGCtd4Dt9STrePXw9igGE9_P+xW-vw@mail.gmail.com>
Message-ID: <20240127135110.59610a16@Tarkus>

? Sat, 27 Jan 2024 03:52:01 -0500
Bob Rudis <bob at rud.is> ?????:

> Two VT sandboxes used Adobe Acrobat Reader to open the PDF and the PDF
> seems to either had malicious JavaScript or had been crafted
> sufficiently to caused a buffer overflow in Reader that then let it
> perform other functions on those sandboxes.

Let's talk package versions and SHA256 hashes of
poweRlaw/inst/doc/d_jss_paper.pdf.

poweRlaw version 0.70.4:
Packaged: 2020-04-07 14:55:32 UTC
Date/Publication: 2020-04-07 16:10:02 UTC
SHA-256(poweRlaw/inst/doc/d_jss_paper.pdf):
96535de112f471c66e29b74c77444b34a29b82d6525c04d477ed2d987ea6ccae

Not previously uploaded to VirusTotal, currently checks out clean:
https://www.virustotal.com/gui/file/96535de112f471c66e29b74c77444b34a29b82d6525c04d477ed2d987ea6ccae

poweRlaw version 0.70.5:
Packaged: 2020-04-23 15:36:49 UTC
Date/Publication: 2020-04-23 16:40:06 UTC
SHA-256(poweRlaw/inst/doc/d_jss_paper.pdf):
5f827302ede74e1345fba5ba52c279129823da3c104baa821d654ebb8d7a67fb

Not previously uploaded to VirusTotal, also checks out clean:
https://www.virustotal.com/gui/file/5f827302ede74e1345fba5ba52c279129823da3c104baa821d654ebb8d7a67fb/behavior

For some reason, the Zenbox report shows a browser starting up and
someone (something?) moving the mouse:
https://vtbehaviour.commondatastorage.googleapis.com/5f827302ede74e1345fba5ba52c279129823da3c104baa821d654ebb8d7a67fb_Zenbox.html?GoogleAccessId=758681729565-rc7fgq07icj8c9dm2gi34a4cckv235v1 at developer.gserviceaccount.com&Expires=1706348766&Signature=KSTxSZJJUUv0FOA51Kwuot89ep4PKUDTY6tHL7kTyG7VwaMlF8VjmU90loeF4ytLBxKjkEtAk%2Ffr39xFrTTyOym3mehtc3HLyT9DS3C5qGa9OPVcu%2BfQfd8qr%2BRubBWb3SKNnhGpi%2Bn%2BTDhaiRx3PilEz%2BwVGiukfNUzWGBlGweG%2BmR1Y%2F0fIgDxJ3eyZ8KwTaocbywMoOLJeC1GSmoW8VYUAnFS2bb8P9Jt%2Bs%2F0axvAkc0M2pmSN3s2lpMq8u5P%2FZZ8yRIMdmv%2B1kUR5ajBdIa%2FHV8Vw8xAdNjZID6ozwAsmBOOizJmHgzr4zh1tX4V65qmcz8D3jctvDRKsuEqXA%3D%3D&response-content-type=text%2Fhtml;#overview

Lots of file activity. I think that all of it can be attributed to
either normal Acrobat Reader activity or normal Chrome activity.

Then we come to poweRlaw version 0.70.6:
Packaged: 2020-04-24 10:44:31 UTC
Date/Publication: 2020-04-25 07:30:12 UTC
SHA-256(inst/doc/d_jss_paper.pdf):
9486d99c1c1f2d1b06f0b6c5d27c54d4f6e39d69a91d7fad845f323b0ab88de9

The Web Archive capture version 20201205222617 for the address
https://cran.r-project.org/web/packages/poweRlaw/vignettes/d_jss_paper.pdf
has the same SHA-256 hash.

This file is being disputed because some antivirus applications flag it:
https://www.virustotal.com/gui/file/9486d99c1c1f2d1b06f0b6c5d27c54d4f6e39d69a91d7fad845f323b0ab88de9/behavior

The behaviour is exactly the same as the one from version 0.70.5:
browser opens with a link to a wrong DOI. Some links are followed.
https://vtbehaviour.commondatastorage.googleapis.com/9486d99c1c1f2d1b06f0b6c5d27c54d4f6e39d69a91d7fad845f323b0ab88de9_Zenbox.html?GoogleAccessId=758681729565-rc7fgq07icj8c9dm2gi34a4cckv235v1 at developer.gserviceaccount.com&Expires=1706347808&Signature=Kv1LXUGvDe988Br0pU1AMlttjYY1K9sDwouvZrlzAVSspkdOGS9Ow%2Bg%2F3VjnQLEshx08QqgOHZzQcghownumPDUJLBbEHbOk6KG9IZSH43rxkYhTIy%2BYT5PfNFIupevbJA5XrnJHrm1wKho2%2BDb4t8vA4cgOJJY0UahXTbIMKUeUmPCKAzx9W5kYKj55WhNDrIPrEuni9EeGWkFV45kPr%2BBwYfl2hK4%2BWv6K78CB7zJtzFltF6P3pewafn5Lg3M3AY5YcZ4TryXi01t0dq04Fha83fLRP7JUkmcfpAJauA48Ct0XN7RdCRPSogb0TAGwG%2BDstxNzLAphOEsVju9LUQ%3D%3D&response-content-type=text%2Fhtml;#dropped-info

I've uploaded a decompressed version (prepared using qpdf in.pdf
--stream-data=uncompress out.pdf) of the same file to VirusTotal, and
there are no detections. Zero detections, but the behaviour is the same:
some files are "dropped", but all of them relate to cache in Acrobat
Reader (which is nowadays a piece of Chrome) and Chrome itself:
https://www.virustotal.com/gui/file/5acbc41f103c88a801db36fa72f01d4fa81b9afa1879c36235b1f5373d46ee1a/behavior

Finally, there's poweRlaw version 0.80.0:
Packaged: 2024-01-25 10:39:42 UTC
Date/Publication: 2024-01-25 18:00:02 UTC
SHA-256(inst/doc/d_jss_paper.pdf):
17c252a38e6c9bcfab90a69070b17c5e9d8a1713b7bb376badaeba28b3a38739
Same zero flags, same behaviour of starting the browser, same "dropped"
files in the cache:
https://www.virustotal.com/gui/file/17c252a38e6c9bcfab90a69070b17c5e9d8a1713b7bb376badaeba28b3a38739/behavior
https://vtbehaviour.commondatastorage.googleapis.com/17c252a38e6c9bcfab90a69070b17c5e9d8a1713b7bb376badaeba28b3a38739_Zenbox.html?GoogleAccessId=758681729565-rc7fgq07icj8c9dm2gi34a4cckv235v1 at developer.gserviceaccount.com&Expires=1706348864&Signature=UjXMjCvz0uTjS1sqyr5y%2FOwluE%2BskW9F2XupXuOs5JgODlsL1BuwJcWJ56xddQNEtKDHDOaXoRfNxynsffmSaza4yJD9hvPJ6%2BrNMibbB8hojY53g07WKnCd3wdaOmOHEqIP7Md06QWD4CnLEN0KlRvWdsUUA%2F9YTB1bAVqkIR%2FtiaJcRrOTAmdG%2F9Hwrq4xpiEBaFZzO%2FsQPVj3dzNS1LQEXOHFAfnOTaC1LlbBfn9QQWCPib%2FpCOL7huVYqIFSm%2FO8VHWv67JD1qwcTOY7JSl8XPw1ueyumRpF5xF1rpWYCPjC1awU8tho25A2COA7f7LSkku0BRqkuHYW3kuZaw%3D%3D&response-content-type=text%2Fhtml;#dropped-info

I've also uploaded a PDF that came directly from a US agency (NOAA) and
got a similar report:
https://www.virustotal.com/gui/file/0dcffd0096f106229f3aa630bdc460c106c6dab81907535317e27ed00ddb4544/behavior
https://vtbehaviour.commondatastorage.googleapis.com/0dcffd0096f106229f3aa630bdc460c106c6dab81907535317e27ed00ddb4544_Zenbox.html?GoogleAccessId=758681729565-rc7fgq07icj8c9dm2gi34a4cckv235v1 at developer.gserviceaccount.com&Expires=1706352702&Signature=rjPfqYbtDFcBAtwaqOQbnAvXe%2B%2FoxKUXqliRCqXh77vi2s0lK81O1m8t0YdYIT9KQdcBwGS2Dk2l2tfdC9DmdWEzAukgJVMJ3uqrs0RDQVTP83Y5jmPghvT6OeiTzC%2BMNCs%2F3CVgHSwjQy2dAvWD1vLly0GnkueJAHjs%2BrWXfoSdMfzb96hzXF0kgPS8VoEogOeDG1DZ7oEZVUlQ3jEv3sBkrt3rFIqeV8LW2xdN7bsiGGRNyjdaF7i1tOvi5UrT87D7vVgT2FRVxySzTPQ3d9JnSLO2t%2B1Gk9Of1l6ASUuTWj3hS5JXao8a0Qm%2BDnNhgSKZ9Bq7LaXCs%2Fc7PIJT5w%3D%3D&response-content-type=text%2Fhtml;#dropped-info
(It's actually worse because there's a Firefox crash, but there's still
a lot of "dropped" files in Acrobat Reader cache.)

How is the potentially malicious
poweRlaw_0.70.6.tar.gz/poweRlaw/inst/doc/d_jss_paper.pdf with SHA-256
hash 9486d99c1c1f2d1b06f0b6c5d27c54d4f6e39d69a91d7fad845f323b0ab88de9
different from all the other files considered here, besides a few flags
from non-major AVs that disappear when the PDF is repacked using a
content-preserving program?

-- 
Best regards,
Ivan


From @|mon@urb@nek @end|ng |rom R-project@org  Sat Jan 27 12:18:05 2024
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Sun, 28 Jan 2024 00:18:05 +1300
Subject: [R-pkg-devel] Possible malware(?) in a vignette
In-Reply-To: <CALEXWq1Su3_saZg3MXP3EHKXsWJdoNibjMkYYHKJW=yGs2BQrQ@mail.gmail.com>
References: <CADbDLZnW6Rgk+Z2161yPOFBSMD+fHApPmRyrQLmgywGOTGaBVw@mail.gmail.com>
 <CALEXWq0vHqYeB_UT7A_oG+um1HqSP1WBYa7D3Ls+3yWQ_DCQdQ@mail.gmail.com>
 <0EC824A6-0025-4FC2-9DE3-6364AC1F22D9@R-project.org>
 <CAA-FpKU=1nJ2W1TjHQt8GGCtd4Dt9STrePXw9igGE9_P+xW-vw@mail.gmail.com>
 <5020FB99-7AD6-47C6-8DB0-C4D909FFBDD6@R-project.org>
 <CALEXWq1Su3_saZg3MXP3EHKXsWJdoNibjMkYYHKJW=yGs2BQrQ@mail.gmail.com>
Message-ID: <32A265A1-5973-4D41-9DE2-03E71020E25D@R-project.org>

I?aki,

> On Jan 27, 2024, at 11:44 PM, I?aki Ucar <iucar at fedoraproject.org> wrote:
> 
> Simon,
> 
> Please re-read my email. I did *not* say that CRAN *generated* that file. I said that CRAN *may* be compromised (some virus may have modified files).
> 


I guess I should have been more clear in my response: the file could not have been modified by CRAN, because the package files are checksummed (the hashes match) so that's how we know this could not have been a virus on the CRAN machine.


> I did *not* claim that the report was necessarily 100% accurate. But "that page I linked" was created by a security firm, and it would be wise to further investigate any potential threat reported there, which is what I was suggesting.
> 


I appreciate the report, there was no objection to that. Unfortunately, the report has turned out to have virtually no useful information that would make it possible for us to investigate. The little information it provided has proven to be false (at least as much as could be gleamed from the tags), so unless we can get some real security expert to give us more details, there is not much more we can do given that the file is no longer distributed. And without more detailed information of the threat it's hard to see if there are any steps we could take. 

Back to my main original point - as far as CRAN machines are concerned, we did check the integrity of the files, machines and tools and found no link there. Hence the only path left is to get more details on the particular file to see if it is indeed a malware and if so, if it was just some random infection at the source or something bigger like Bob hinted at some compromised material that may have been circling in the community.

Cheers,
Simon



> I don't think these are "false claims".
> 
> I?aki
> 
> El s?b., 27 ene. 2024 11:19, Simon Urbanek <simon.urbanek at r-project.org <mailto:simon.urbanek at r-project.org>> escribi?:
> Bob,
> 
> I was not making assertions, I was only dismissing clearly false claims: CRAN did NOT generate the file in question, it is not a ZIP file trojan as indicated by the AV flags and content inspection did not reveal any other streams than what is usual in pdflatex output. The information about the alleged malware was terribly vague and incomplete to put it mildly so if you have any additional forensic information that sheds more light on whether this was a malware or not, it would be welcome. If it was indeed one, knowing what kind would help to see how any other instances could be detected. Please contact the CRAN team if you have any such information and we can take it from there.
> 
> As you hinted yourself - there is no such thing as absolute safety - as the webp exploits have illustrated very clearly a simple image can be malware and the only read defense is to keep your software up to date.
> 
> Cheers,
> Simon
> 
> 
> 
> > On Jan 27, 2024, at 9:52 PM, Bob Rudis <bob at rud.is <mailto:bob at rud.is>> wrote:
> > 
> > The current one on CRAN does get flagged for some low-level Sigma rules b/c of one of way a few URLs interact. I don't know if f-secure is pedantic enough to call that malicious (it probably is, though). The *current* PDF is "fine".
> > 
> > There is a major problem with the 2020 version. The file I?aki's URL matches the PDF that I grabbed from the Wayback Machine for the 2020 PDF from that URL.
> > 
> > Simon's assertion about this *2020* file is flat out wrong. It's very bad.
> > 
> > Two VT sandboxes used Adobe Acrobat Reader to open the PDF and the PDF seems to either had malicious JavaScript or had been crafted sufficiently to caused a buffer overflow in Reader that then let it perform other functions on those sandboxes.
> > 
> > They are most certainly *not* false positives, and dismissing that outright is not great.
> > 
> > I'm not going to check every 2020 PDF from CRAN, but this is a big signal to me there was an issue *somewhere* in that time period.
> > 
> > I do not know what cran.r-project.org <http://cran.r-project.org/> resolved to for the Common Crawl at that date (which is where archive.org <http://archive.org/> picked it up to archive for the 2020 PDF version). I highly doubt the Common Crawl DNS resolution process was spoofed _just for that PDF URL_, but it may have been for CRAN in general or just "in general" during that crawl period.
> > 
> > It is also possible some malware hit CRAN during portions of that time period and infected more than one PDF.
> > 
> > But, outright suggesting there is no issue was not the way to go, here. And, someone should likely at least poke at more 2020 PDFs from CRAN vignette builds (perhaps just the ones built that were JSS articles?it's possible the header image sourced at that time was tampered with during some time window, since image decoding issues have plagued Adobe Reader in buffer overflow land for a long while).
> > 
> > - boB
> > 
> > 
> > On Thu, Jan 25, 2024 at 9:44?PM Simon Urbanek <simon.urbanek at r-project.org <mailto:simon.urbanek at r-project.org>> wrote:
> > I?aki,
> > 
> > I think you got it backwards in your conclusions: CRAN has not generated that PDF file (and Windows machines are not even involved here), it is the contents of a contributed package, so CRAN itself is not compromised. Also it is far from clear that it is really a malware - in fact it's certainly NOT what the website you linked claims as those tags imply trojans disguising ZIPped executables as PDF, but the file is an actual valid PDF and not even remotely a ZIP file (in fact is it consistent with pdflatex output). I looked at the decompressed payload of the PDF and the only binary payload are embedded fonts so my guess would be that some byte sequence in the fonts gets detected as false-positive trojan, but since there is no detail on the report we can just guess. False-positives are a common problem and this would not be the first one. Further indication that it's a false-positive is that a simple re-packaging the streams (i.e. NOT changing the actual PDF contents) make the same file pass the tests as clean.
> > 
> > Also note that there is a bit of a confusion as the currently released version (poweRlaw 0.80.0) does not get flagged, so it is only the archived version (from 2020).
> > 
> > Cheers,
> > Simon
> > 
> > 
> > 
> > > On 26/01/2024, at 12:02 AM, I?aki Ucar <iucar at fedoraproject.org <mailto:iucar at fedoraproject.org>> wrote:
> > > 
> > > On Thu, 25 Jan 2024 at 10:13, Colin Gillespie <csgillespie at gmail.com <mailto:csgillespie at gmail.com>> wrote:
> > >> 
> > >> Hi All,
> > >> 
> > >> I've had two emails from users in the last 24 hours about malware
> > >> around one of my vignettes. A snippet from the last user is:
> > >> 
> > >> ---
> > >> I was trying to install a R package that depends on PowerRLaw two
> > >> weeks ago.  However my virus protection software F secure did not
> > >> allow me to install it from CRAN, while installation from GitHub
> > >> worked normally. Virus protection software claimed that
> > >> d_jss_paper.pdf is compromised. I asked about this from our IT support
> > >> and they asked it from the company F secure. Now F secure has analysed
> > >> the file and according them it is malware.
> > >> 
> > >> ?Upon analyzing, our analysis indicates that the file you submitted is
> > >> malicious. Hence the verdict will remain
> > > 
> > > See https://www.virustotal.com/gui/file/9486d99c1c1f2d1b06f0b6c5d27c54d4f6e39d69a91d7fad845f323b0ab88de9/behavior <https://www.virustotal.com/gui/file/9486d99c1c1f2d1b06f0b6c5d27c54d4f6e39d69a91d7fad845f323b0ab88de9/behavior>
> > > 
> > > According to the sandboxed analysis, there's something there trying to
> > > tamper with the Acrobat installation. It tries several Windows paths.
> > > That's not good.
> > > 
> > > The good news is that, if I recreate the vignette from your repo, the
> > > file is different, different hash, and it's clean.
> > > 
> > > The bad news is that... this means that CRAN may be compromised. I
> > > urge CRAN maintainers to check all the PDF vignettes and scan the
> > > Windows machines for viruses.
> > > 
> > > Best,
> > > I?aki
> > > 
> > > 
> > >> 
> > >> ---
> > >> 
> > >> Other information is:
> > >> 
> > >> * Package in question:
> > >> https://cran.r-project.org/web/packages/poweRlaw/index.html <https://cran.r-project.org/web/packages/poweRlaw/index.html>
> > >> * Package hasn't been updated for three years
> > >> * Vignette in question:
> > >> https://cran.r-project.org/web/packages/poweRlaw/vignettes/d_jss_paper.pdf <https://cran.r-project.org/web/packages/poweRlaw/vignettes/d_jss_paper.pdf>
> > >> 
> > >> CRAN asked me to fix
> > >> https://cran.r-project.org/web/checks/check_results_poweRlaw.html <https://cran.r-project.org/web/checks/check_results_poweRlaw.html> a
> > >> couple of days ago - which I'm in the process of doing.
> > >> 
> > >> Any ideas?
> > >> 
> > >> Thanks
> > >> Colin
> > >> 
> > >> ______________________________________________
> > >> R-package-devel at r-project.org <mailto:R-package-devel at r-project.org> mailing list
> > >> https://stat.ethz.ch/mailman/listinfo/r-package-devel <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
> > > 
> > > 
> > > 
> > > -- 
> > > I?aki ?car
> > > 
> > 
> > ______________________________________________
> > R-package-devel at r-project.org <mailto:R-package-devel at r-project.org> mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
> 


	[[alternative HTML version deleted]]


From bob @end|ng |rom rud@|@  Sat Jan 27 13:10:53 2024
From: bob @end|ng |rom rud@|@ (Bob Rudis)
Date: Sat, 27 Jan 2024 07:10:53 -0500
Subject: [R-pkg-devel] Possible malware(?) in a vignette
In-Reply-To: <32A265A1-5973-4D41-9DE2-03E71020E25D@R-project.org>
References: <CADbDLZnW6Rgk+Z2161yPOFBSMD+fHApPmRyrQLmgywGOTGaBVw@mail.gmail.com>
 <CALEXWq0vHqYeB_UT7A_oG+um1HqSP1WBYa7D3Ls+3yWQ_DCQdQ@mail.gmail.com>
 <0EC824A6-0025-4FC2-9DE3-6364AC1F22D9@R-project.org>
 <CAA-FpKU=1nJ2W1TjHQt8GGCtd4Dt9STrePXw9igGE9_P+xW-vw@mail.gmail.com>
 <5020FB99-7AD6-47C6-8DB0-C4D909FFBDD6@R-project.org>
 <CALEXWq1Su3_saZg3MXP3EHKXsWJdoNibjMkYYHKJW=yGs2BQrQ@mail.gmail.com>
 <32A265A1-5973-4D41-9DE2-03E71020E25D@R-project.org>
Message-ID: <CAA-FpKWZOipv4P68eVOMj3sfvTYYcgkMJHsrCxotFn5z4WNWGA@mail.gmail.com>

Simon: Is there a historical record of the hashes of just the PDFs
that show up in the CRAN web view?

Ivan: do you know what mirror NOAA used at that time to get that version of
the package? Or, did they pull it "directly" from cran.r-project.org
(scare-quotes only b/c DNS spoofing is and has been a pretty solid attack
vector)?

I've asked the infosec community if anyone has VT Enterprise to do a
historical search on any PDFs that come directly from cran.r-project.org (I
don't have VT Enterprise). It is possible there are other PDFs from that
timeframe with similar issues (again, not saying CRAN had any issues; this
could still be crawler cache poisoning).

I don't know if any university folks have grad student labor to harness,
but having a few of them do some archive.org searches for other PDFs in
that timeframe, and note the source of the archive (likely Common Crawl) if
there are other real issues, that'd be a solid path forward for triage.

The fact that the current PDF on CRAN ? which uses some of the same
7-year-old PDF & JPEG images from ?
https://github.com/csgillespie/poweRlaw/tree/main/vignettes ? is not being
flagged, means it's likely not an issue with Colin's sources.

Simon: it might be a good idea for all *.r-project.org sites to set up CAA
records (
https://en.wikipedia.org/wiki/DNS_Certification_Authority_Authorization)
since that could help prevent adjacent TLS spoofing.

Also having something running ? https://github.com/SSLMate/certspotter ?
can let y'all know if certs are created for *.r-project.org domains. That
won't help for well-resourced attacks, but it does add some layers that may
give a heads-up for any mid-grade spoofing attacks.

On Sat, Jan 27, 2024 at 6:18?AM Simon Urbanek <simon.urbanek at r-project.org>
wrote:

> I?aki,
>
> On Jan 27, 2024, at 11:44 PM, I?aki Ucar <iucar at fedoraproject.org> wrote:
>
> Simon,
>
> Please re-read my email. I did *not* say that CRAN *generated* that file.
> I said that CRAN *may* be compromised (some virus may have modified files).
>
>
>
> I guess I should have been more clear in my response: the file could not
> have been modified by CRAN, because the package files are checksummed (the
> hashes match) so that's how we know this could not have been a virus on the
> CRAN machine.
>
>
> I did *not* claim that the report was necessarily 100% accurate. But "that
> page I linked" was created by a security firm, and it would be wise to
> further investigate any potential threat reported there, which is what I
> was suggesting.
>
>
>
> I appreciate the report, there was no objection to that. Unfortunately,
> the report has turned out to have virtually no useful information that
> would make it possible for us to investigate. The little information it
> provided has proven to be false (at least as much as could be gleamed from
> the tags), so unless we can get some real security expert to give us more
> details, there is not much more we can do given that the file is no longer
> distributed. And without more detailed information of the threat it's hard
> to see if there are any steps we could take.
>
> Back to my main original point - as far as CRAN machines are concerned, we
> did check the integrity of the files, machines and tools and found no link
> there. Hence the only path left is to get more details on the particular
> file to see if it is indeed a malware and if so, if it was just some random
> infection at the source or something bigger like Bob hinted at some
> compromised material that may have been circling in the community.
>
> Cheers,
> Simon
>
>
>
> I don't think these are "false claims".
>
> I?aki
>
> El s?b., 27 ene. 2024 11:19, Simon Urbanek <simon.urbanek at r-project.org>
> escribi?:
>
>> Bob,
>>
>> I was not making assertions, I was only dismissing clearly false claims:
>> CRAN did NOT generate the file in question, it is not a ZIP file trojan as
>> indicated by the AV flags and content inspection did not reveal any other
>> streams than what is usual in pdflatex output. The information about the
>> alleged malware was terribly vague and incomplete to put it mildly so if
>> you have any additional forensic information that sheds more light on
>> whether this was a malware or not, it would be welcome. If it was indeed
>> one, knowing what kind would help to see how any other instances could be
>> detected. Please contact the CRAN team if you have any such information and
>> we can take it from there.
>>
>> As you hinted yourself - there is no such thing as absolute safety - as
>> the webp exploits have illustrated very clearly a simple image can be
>> malware and the only read defense is to keep your software up to date.
>>
>> Cheers,
>> Simon
>>
>>
>>
>> > On Jan 27, 2024, at 9:52 PM, Bob Rudis <bob at rud.is> wrote:
>> >
>> > The current one on CRAN does get flagged for some low-level Sigma rules
>> b/c of one of way a few URLs interact. I don't know if f-secure is pedantic
>> enough to call that malicious (it probably is, though). The *current* PDF
>> is "fine".
>> >
>> > There is a major problem with the 2020 version. The file I?aki's URL
>> matches the PDF that I grabbed from the Wayback Machine for the 2020 PDF
>> from that URL.
>> >
>> > Simon's assertion about this *2020* file is flat out wrong. It's very
>> bad.
>> >
>> > Two VT sandboxes used Adobe Acrobat Reader to open the PDF and the PDF
>> seems to either had malicious JavaScript or had been crafted sufficiently
>> to caused a buffer overflow in Reader that then let it perform other
>> functions on those sandboxes.
>> >
>> > They are most certainly *not* false positives, and dismissing that
>> outright is not great.
>> >
>> > I'm not going to check every 2020 PDF from CRAN, but this is a big
>> signal to me there was an issue *somewhere* in that time period.
>> >
>> > I do not know what cran.r-project.org resolved to for the Common Crawl
>> at that date (which is where archive.org picked it up to archive for the
>> 2020 PDF version). I highly doubt the Common Crawl DNS resolution process
>> was spoofed _just for that PDF URL_, but it may have been for CRAN in
>> general or just "in general" during that crawl period.
>> >
>> > It is also possible some malware hit CRAN during portions of that time
>> period and infected more than one PDF.
>> >
>> > But, outright suggesting there is no issue was not the way to go, here.
>> And, someone should likely at least poke at more 2020 PDFs from CRAN
>> vignette builds (perhaps just the ones built that were JSS articles?it's
>> possible the header image sourced at that time was tampered with during
>> some time window, since image decoding issues have plagued Adobe Reader in
>> buffer overflow land for a long while).
>> >
>> > - boB
>> >
>> >
>> > On Thu, Jan 25, 2024 at 9:44?PM Simon Urbanek <
>> simon.urbanek at r-project.org> wrote:
>> > I?aki,
>> >
>> > I think you got it backwards in your conclusions: CRAN has not
>> generated that PDF file (and Windows machines are not even involved here),
>> it is the contents of a contributed package, so CRAN itself is not
>> compromised. Also it is far from clear that it is really a malware - in
>> fact it's certainly NOT what the website you linked claims as those tags
>> imply trojans disguising ZIPped executables as PDF, but the file is an
>> actual valid PDF and not even remotely a ZIP file (in fact is it consistent
>> with pdflatex output). I looked at the decompressed payload of the PDF and
>> the only binary payload are embedded fonts so my guess would be that some
>> byte sequence in the fonts gets detected as false-positive trojan, but
>> since there is no detail on the report we can just guess. False-positives
>> are a common problem and this would not be the first one. Further
>> indication that it's a false-positive is that a simple re-packaging the
>> streams (i.e. NOT changing the actual PDF contents) make the same file pass
>> the tests as clean.
>> >
>> > Also note that there is a bit of a confusion as the currently released
>> version (poweRlaw 0.80.0) does not get flagged, so it is only the archived
>> version (from 2020).
>> >
>> > Cheers,
>> > Simon
>> >
>> >
>> >
>> > > On 26/01/2024, at 12:02 AM, I?aki Ucar <iucar at fedoraproject.org>
>> wrote:
>> > >
>> > > On Thu, 25 Jan 2024 at 10:13, Colin Gillespie <csgillespie at gmail.com>
>> wrote:
>> > >>
>> > >> Hi All,
>> > >>
>> > >> I've had two emails from users in the last 24 hours about malware
>> > >> around one of my vignettes. A snippet from the last user is:
>> > >>
>> > >> ---
>> > >> I was trying to install a R package that depends on PowerRLaw two
>> > >> weeks ago.  However my virus protection software F secure did not
>> > >> allow me to install it from CRAN, while installation from GitHub
>> > >> worked normally. Virus protection software claimed that
>> > >> d_jss_paper.pdf is compromised. I asked about this from our IT
>> support
>> > >> and they asked it from the company F secure. Now F secure has
>> analysed
>> > >> the file and according them it is malware.
>> > >>
>> > >> ?Upon analyzing, our analysis indicates that the file you submitted
>> is
>> > >> malicious. Hence the verdict will remain
>> > >
>> > > See
>> https://www.virustotal.com/gui/file/9486d99c1c1f2d1b06f0b6c5d27c54d4f6e39d69a91d7fad845f323b0ab88de9/behavior
>> > >
>> > > According to the sandboxed analysis, there's something there trying to
>> > > tamper with the Acrobat installation. It tries several Windows paths.
>> > > That's not good.
>> > >
>> > > The good news is that, if I recreate the vignette from your repo, the
>> > > file is different, different hash, and it's clean.
>> > >
>> > > The bad news is that... this means that CRAN may be compromised. I
>> > > urge CRAN maintainers to check all the PDF vignettes and scan the
>> > > Windows machines for viruses.
>> > >
>> > > Best,
>> > > I?aki
>> > >
>> > >
>> > >>
>> > >> ---
>> > >>
>> > >> Other information is:
>> > >>
>> > >> * Package in question:
>> > >> https://cran.r-project.org/web/packages/poweRlaw/index.html
>> > >> * Package hasn't been updated for three years
>> > >> * Vignette in question:
>> > >>
>> https://cran.r-project.org/web/packages/poweRlaw/vignettes/d_jss_paper.pdf
>> > >>
>> > >> CRAN asked me to fix
>> > >> https://cran.r-project.org/web/checks/check_results_poweRlaw.html a
>> > >> couple of days ago - which I'm in the process of doing.
>> > >>
>> > >> Any ideas?
>> > >>
>> > >> Thanks
>> > >> Colin
>> > >>
>> > >> ______________________________________________
>> > >> R-package-devel at r-project.org mailing list
>> > >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> > >
>> > >
>> > >
>> > > --
>> > > I?aki ?car
>> > >
>> >
>> > ______________________________________________
>> > R-package-devel at r-project.org mailing list
>> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>>
>

	[[alternative HTML version deleted]]


From |kry|ov @end|ng |rom d|@root@org  Sat Jan 27 14:05:26 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Sat, 27 Jan 2024 16:05:26 +0300
Subject: [R-pkg-devel] Possible malware(?) in a vignette
In-Reply-To: <CAA-FpKWZOipv4P68eVOMj3sfvTYYcgkMJHsrCxotFn5z4WNWGA@mail.gmail.com>
References: <CADbDLZnW6Rgk+Z2161yPOFBSMD+fHApPmRyrQLmgywGOTGaBVw@mail.gmail.com>
 <CALEXWq0vHqYeB_UT7A_oG+um1HqSP1WBYa7D3Ls+3yWQ_DCQdQ@mail.gmail.com>
 <0EC824A6-0025-4FC2-9DE3-6364AC1F22D9@R-project.org>
 <CAA-FpKU=1nJ2W1TjHQt8GGCtd4Dt9STrePXw9igGE9_P+xW-vw@mail.gmail.com>
 <5020FB99-7AD6-47C6-8DB0-C4D909FFBDD6@R-project.org>
 <CALEXWq1Su3_saZg3MXP3EHKXsWJdoNibjMkYYHKJW=yGs2BQrQ@mail.gmail.com>
 <32A265A1-5973-4D41-9DE2-03E71020E25D@R-project.org>
 <CAA-FpKWZOipv4P68eVOMj3sfvTYYcgkMJHsrCxotFn5z4WNWGA@mail.gmail.com>
Message-ID: <1BCD3265-A018-4FEC-8188-676660CFCE2A@disroot.org>

Apologies for being insufficiently clear. By "a file straight from NOAA" I meant a completely different PDF, <https://www.ncei.noaa.gov/sites/default/files/2022-06/woa18documentation.pdf>, that gives the same SHA-256 hash whether downloaded by VirusTotal <https://www.virustotal.com/gui/url/ebff41f79720bcd2bbccf343874a584f2b3d78f3cd390a19f11b7576c3a38ad1?nocache=1> or me, comes from a supposedly trusted source, and still makes Acrobat Reader behave like it's infected, show a crashed Firefox on the screenshot and drop a number of scary-looking files. Surely there will be a difference between reading an infected file and a non-infected file?

27 ?????? 2024 ?. 15:10:53 GMT+03:00, Bob Rudis <bob at rud.is> ?????:
>Ivan: do you know what mirror NOAA used at that time to get that version of
>the package? Or, did they pull it "directly" from cran.r-project.org
>(scare-quotes only b/c DNS spoofing is and has been a pretty solid attack
>vector)?


From @|mon@urb@nek @end|ng |rom R-project@org  Sat Jan 27 15:35:13 2024
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Sun, 28 Jan 2024 03:35:13 +1300
Subject: [R-pkg-devel] Possible malware(?) in a vignette
In-Reply-To: <CAA-FpKWZOipv4P68eVOMj3sfvTYYcgkMJHsrCxotFn5z4WNWGA@mail.gmail.com>
References: <CADbDLZnW6Rgk+Z2161yPOFBSMD+fHApPmRyrQLmgywGOTGaBVw@mail.gmail.com>
 <CALEXWq0vHqYeB_UT7A_oG+um1HqSP1WBYa7D3Ls+3yWQ_DCQdQ@mail.gmail.com>
 <0EC824A6-0025-4FC2-9DE3-6364AC1F22D9@R-project.org>
 <CAA-FpKU=1nJ2W1TjHQt8GGCtd4Dt9STrePXw9igGE9_P+xW-vw@mail.gmail.com>
 <5020FB99-7AD6-47C6-8DB0-C4D909FFBDD6@R-project.org>
 <CALEXWq1Su3_saZg3MXP3EHKXsWJdoNibjMkYYHKJW=yGs2BQrQ@mail.gmail.com>
 <32A265A1-5973-4D41-9DE2-03E71020E25D@R-project.org>
 <CAA-FpKWZOipv4P68eVOMj3sfvTYYcgkMJHsrCxotFn5z4WNWGA@mail.gmail.com>
Message-ID: <429E3EFD-E570-434A-8DC8-98DDF27F37D8@R-project.org>

First, let's take a step back, because I think there is way too much confusion here.

The original report was about the vignette from the poweRlaw package version 0.70.6. That package contains a vignette file d_jss_paper.pdf with the SHA256 hash 9486d99c1c1f2d1b06f0b6c5d27c54d4f6e39d69a91d7fad845f323b0ab88de9 (md5 e0439db551e1d34e9bf8713fca27887b). This is the same file that would be available for download from the web view until the new version was published. However, I assume we are talking about the same file based on the fact that I?aki's VirusTotal URL has exactly the same hash, i.e., web view and the package are identical (I also checked the other hashes just to be really sure). That's why I think we're barking up the wrong tree here since this is not about cache poisoning, file swaps or anything like that - the file has never been modified - it is the same file that has been submitted to CRAN in 2020.

That's why I was saying that this most likely has nothing to do with CRAN at all, but rather the question is if that old file has included some malware for the last 4 years or if simply the AV software is misclassifying due to a false-positive detection. I'm not a security expert, but based on the little information available and inspection of the streams I came to the conclusion that it's likely a false-positive. The main reason that made me think so was that submitting the exact same *identical* PDF payload with just one-byte change to the /ID (which is functionally not used by Acrobat) results in the file NOT being flagged as malicious by VirusTotal by any of the security vendors. That said, I'm not a security expert, so I may be wrong or I'm missing something, that's why I was asking for someone with more expertise to actually look at the file as opposed to just trusting auto-generated reports that may be wrong. But that is not beyond my power.

(Also if it turns out that the file did contain malware, it would be good to know what we can do - for example, nowadays we are re-compressing streams and/or filtering through GS so one could imagine that it could be also effective at removing PDF malware - if it is real.)

More responses inline.


> On Jan 28, 2024, at 1:10 AM, Bob Rudis <bob at rud.is> wrote:
> 
> Simon: Is there a historical record of the hashes of just the PDFs
> that show up in the CRAN web view?
> 

Not the website, but hashes are recorded in the packages - so you can verify that the file has not changed for years (I can directly confirm it has not changed as far back as May 2021).


> Ivan: do you know what mirror NOAA used at that time to get that version of
> the package? Or, did they pull it "directly" from cran.r-project.org
> (scare-quotes only b/c DNS spoofing is and has been a pretty solid attack
> vector)?
> 
> I've asked the infosec community if anyone has VT Enterprise to do a
> historical search on any PDFs that come directly from cran.r-project.org (I
> don't have VT Enterprise). It is possible there are other PDFs from that
> timeframe with similar issues (again, not saying CRAN had any issues; this
> could still be crawler cache poisoning).
> 
> I don't know if any university folks have grad student labor to harness,
> but having a few of them do some archive.org searches for other PDFs in
> that timeframe, and note the source of the archive (likely Common Crawl) if
> there are other real issues, that'd be a solid path forward for triage.
> 
> The fact that the current PDF on CRAN ? which uses some of the same
> 7-year-old PDF & JPEG images from ?
> https://github.com/csgillespie/poweRlaw/tree/main/vignettes ? is not being
> flagged, means it's likely not an issue with Colin's sources.
> 
> Simon: it might be a good idea for all *.r-project.org sites to set up CAA
> records (
> https://en.wikipedia.org/wiki/DNS_Certification_Authority_Authorization)
> since that could help prevent adjacent TLS spoofing.
> 
> Also having something running ? https://github.com/SSLMate/certspotter ?
> can let y'all know if certs are created for *.r-project.org domains. That
> won't help for well-resourced attacks, but it does add some layers that may
> give a heads-up for any mid-grade spoofing attacks.
> 


All well meant, but remember that CRAN is mirrored worldwide, we have control pretty much only over the WU master. That said, we can have a look, but DNS changes are not as easy as you would think.

Cheers,
Simon


From jonthegeek @end|ng |rom gm@||@com  Fri Jan 26 12:21:43 2024
From: jonthegeek @end|ng |rom gm@||@com (Jon Harmon)
Date: Fri, 26 Jan 2024 05:21:43 -0600
Subject: [R-pkg-devel] Native pipe in package examples
Message-ID: <CAAEaqJG9=6j3HwHgvP23F-gip8TyzvzZ6_ArLwvDH7dKBk836w@mail.gmail.com>

See
https://github.com/r-lib/httr2/blob/main/configure
and
https://github.com/r-lib/httr2/blob/main/tools%2Fexamples.R

(and https://r-pkgs.org/misc.html#sec-misc-tools if you're not sure what
you're looking at).

They use a build-time script to change the examples. It looks like it just
puts a header on them saying they won't run (and stops them from executing
in checks, I think?). It'd be interesting to use that trick to actually
change the code, but probably more trouble than it's worth.

	[[alternative HTML version deleted]]


From |kry|ov @end|ng |rom d|@root@org  Sun Jan 28 11:08:27 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Sun, 28 Jan 2024 13:08:27 +0300
Subject: [R-pkg-devel] Possible malware(?) in a vignette
In-Reply-To: <429E3EFD-E570-434A-8DC8-98DDF27F37D8@R-project.org>
References: <CADbDLZnW6Rgk+Z2161yPOFBSMD+fHApPmRyrQLmgywGOTGaBVw@mail.gmail.com>
 <CALEXWq0vHqYeB_UT7A_oG+um1HqSP1WBYa7D3Ls+3yWQ_DCQdQ@mail.gmail.com>
 <0EC824A6-0025-4FC2-9DE3-6364AC1F22D9@R-project.org>
 <CAA-FpKU=1nJ2W1TjHQt8GGCtd4Dt9STrePXw9igGE9_P+xW-vw@mail.gmail.com>
 <5020FB99-7AD6-47C6-8DB0-C4D909FFBDD6@R-project.org>
 <CALEXWq1Su3_saZg3MXP3EHKXsWJdoNibjMkYYHKJW=yGs2BQrQ@mail.gmail.com>
 <32A265A1-5973-4D41-9DE2-03E71020E25D@R-project.org>
 <CAA-FpKWZOipv4P68eVOMj3sfvTYYcgkMJHsrCxotFn5z4WNWGA@mail.gmail.com>
 <429E3EFD-E570-434A-8DC8-98DDF27F37D8@R-project.org>
Message-ID: <20240128130827.61c66b08@Tarkus>

There used to be a long analysis in the draft of this e-mail [*], but
let me cut to the chase.

Even something as simple as replacing the four-byte comment [**] at the
beginning of the file ("%\xd0\xd4\xc5\xd8" -> "%    ") that keeps the
file fully readable (!) results in the same behaviour but zero
detections:

$ sha256sum d_jss_paper*.pdf
0ae3b229fdd763a0571463dc98e02010752bb0213a672db6826afcd72ccaf291  d_jss_paper1.pdf
9486d99c1c1f2d1b06f0b6c5d27c54d4f6e39d69a91d7fad845f323b0ab88de9  d_jss_paper.pdf
$ diff -u <(hd d_jss_paper.pdf) <(hd d_jss_paper1.pdf)
--- /dev/fd/63  2024-01-28 13:00:43.454419322 +0300
+++ /dev/fd/62  2024-01-28 13:00:43.454419322 +0300
@@ -1,4 +1,4 @@
-00000000  25 50 44 46 2d 31 2e 35  0a 25 d0 d4 c5 d8 0a 37  |%PDF-1.5.%.....7|
+00000000  25 50 44 46 2d 31 2e 35  0a 25 20 20 20 20 0a 37  |%PDF-1.5.%    .7|
 00000010  37 20 30 20 6f 62 6a 0a  3c 3c 0a 2f 4c 65 6e 67  |7 0 obj.<<./Leng|
 00000020  74 68 20 32 36 32 38 20  20 20 20 20 20 0a 2f 46  |th 2628      ./F|
 00000030  69 6c 74 65 72 20 2f 46  6c 61 74 65 44 65 63 6f  |ilter /FlateDeco|

https://www.virustotal.com/gui/file/0ae3b229fdd763a0571463dc98e02010752bb0213a672db6826afcd72ccaf291

The scary-looking files and hosts being accessed are just Adobe Reader
and Chrome behaving in a manner indistinguishable from spyware. Upload
any PDF file with links in it and you'll see the same picture. Even the
original report for d_jss_paper.pdf from poweRlaw_0.70.6 says "no
sandboxes flagged this file as malicious".

I think that the few non-major antivirus products that "detected" the
original file remembered a low-quality checksum of a different file,
and this whole thread resulted from a checksum collision. 0x043BC33F
(71025471) is what, four bytes? Doesn't seem to be a standard CRC-32 or
the sum of all bytes modulo 2^32, though.

I cannot prove a negative, but I invite infosec people with more PDF
experience to comment further on the issue.

-- 
Best regards,
Ivan

[*] Colin seems to have used the Debian build of TeX Live 2017 to
generate it, which is non-trivial but possible to reproduce by
installing it from Debian Snapshots on top of Stretch. The resulting
file has a different hash (for valid reasons), the same behaviour, but
zero detections:
https://www.virustotal.com/gui/file/f7b0e0400167e06970ac61fcadfda29daec1c2ee685d4c9ff805e375bcffc985/behavior

Trying a "binary search" by removing PDF objects or replacing byte
ranges with ASCII spaces was also a dead end: any change results in no
detections.

[**] PDF 1.5 specification, section 3.1.2:

>> Comments (other than the %PDF?1.4 and %%EOF comments described in
>> Section 3.4, ?File Structure?) have no semantics.

https://opensource.adobe.com/dc-acrobat-sdk-docs/pdfstandards/pdfreference1.5_v6.pdf#G8.1860480


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Mon Jan 29 10:02:48 2024
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Mon, 29 Jan 2024 10:02:48 +0100
Subject: [R-pkg-devel] new maintainer for CRAN package XML
In-Reply-To: <CAN+W6_si-iXLZkBKCUgLzagUzGV7CT62NPzcrMAx=PM6KiwnVA@mail.gmail.com>
References: <f6c68c43-54d1-4dde-a394-cc0263457133@statistik.tu-dortmund.de>
 <CAN+W6_si-iXLZkBKCUgLzagUzGV7CT62NPzcrMAx=PM6KiwnVA@mail.gmail.com>
Message-ID: <a1865383-e6ca-4591-b685-a3af78922c2f@statistik.tu-dortmund.de>



On 23.01.2024 01:03, Llu?s Revilla wrote:
> Dear Uwe and the CRAN team,
> 
> Many thanks for maintaining the package for so long (>10 years!).
> 
> I see the latest changes are in some internal C code related to
> updating the libxml2 library.
> In CRAN's experience, is this the highest time consuming task?

Yes, and adapting the code to new compilers/toolchains.
Note that the team only fixes urgent check issues.

> I have some questions about how the maintenance transfer will go:
> Would someone from the CRAN team help/review the new maintainer for some time?
> Or would there be a change in the "cre" role and that's all the
> further involvement of the CRAN team with the package (besides the
> excellent checks on CRAN)?

Ideally the latter.

Best,
Uwe Ligges

> 
> For anyone considering it, I analyzed a bit the situation of XML and
> RCurl: https://llrs.dev/post/2023/05/03/cran-maintained-packages/
> In short, with ~300 direct dependencies, and many highly used, across
> CRAN and Bioconductor's packages.
> 
> Kind regards,
> 
> Llu?s
> 
> 
> On Mon, 22 Jan 2024 at 15:51, Uwe Ligges
> <ligges at statistik.tu-dortmund.de> wrote:
>>
>> Dear package developers,
>>
>> the CRAN team (and Professor Ripley in particular) has been the defacto
>> maintainer of CRAN package 'XML'.
>> Our hope was that maintainers of packages depending on XML will migrate
>> to other packages for reading XML structures. This has not happened and
>> we still see dozens of strong dependencies on XML.
>>
>> So we are looking for a person volunteering to take over 'XML'.
>> Please let us know if you are interested.
>>
>> For the CRAN team,
>> Uwe Ligges
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel

From ne@|@p@r|ch@rd@on @end|ng |rom gm@||@com  Mon Jan 29 15:11:20 2024
From: ne@|@p@r|ch@rd@on @end|ng |rom gm@||@com (Neal Richardson)
Date: Mon, 29 Jan 2024 07:11:20 -0700
Subject: [R-pkg-devel] Clarifying CRAN's external libraries policy
Message-ID: <CAOCv4hjz9wywBPUZJVRsEvtAiEJB-GKvB5V8Ox2Do2gu9WZ9GA@mail.gmail.com>

Hi,
CRAN's policy on using external C/C++/Fortran/other libraries says:

"Where a package wishes to make use of a library not written solely for the
package, the package installation should first look to see if it is already
installed and if so is of a suitable version. In case not, it is desirable
to include the library sources in the package and compile them as part of
package installation. If the sources are too large, it is acceptable to
download them as part of installation, but do ensure that the download is
of a fixed version rather than the latest. Only as a last resort and with
the agreement of the CRAN team should a package download pre-compiled
software."

Apologies if this is documented somewhere I've missed, but how does one get
CRAN's agreement to download pre-compiled software? A project I work with
has been seeking permission since October, but emails to both
CRAN at R-project.org and CRAN-submissions at R-project.org about this have not
been acknowledged.

I recognize that this mailing list is not CRAN, but I was hoping someone
here might know the right way to reach the CRAN team to provide a judgment
on such a request.

Thank you,
Neal

	[[alternative HTML version deleted]]


From @ndrew @end|ng |rom robb|n@@@me  Mon Jan 29 15:42:11 2024
From: @ndrew @end|ng |rom robb|n@@@me (Andrew Robbins)
Date: Mon, 29 Jan 2024 09:42:11 -0500
Subject: [R-pkg-devel] Clarifying CRAN's external libraries policy
In-Reply-To: <CAOCv4hjz9wywBPUZJVRsEvtAiEJB-GKvB5V8Ox2Do2gu9WZ9GA@mail.gmail.com>
References: <CAOCv4hjz9wywBPUZJVRsEvtAiEJB-GKvB5V8Ox2Do2gu9WZ9GA@mail.gmail.com>
Message-ID: <0dc1210f-30fc-49b8-8fb0-b048790941c8@robbinsa.me>

Personally haven't had anyone raise an issue with mine downloading 
hash-verified git-tagged tarballs, but I don't know if that's because my 
package is having other issues or if that's because its generally 
acceptable.


-Andrew

On 1/29/2024 9:11 AM, Neal Richardson wrote:
> Hi,
> CRAN's policy on using external C/C++/Fortran/other libraries says:
>
> "Where a package wishes to make use of a library not written solely for the
> package, the package installation should first look to see if it is already
> installed and if so is of a suitable version. In case not, it is desirable
> to include the library sources in the package and compile them as part of
> package installation. If the sources are too large, it is acceptable to
> download them as part of installation, but do ensure that the download is
> of a fixed version rather than the latest. Only as a last resort and with
> the agreement of the CRAN team should a package download pre-compiled
> software."
>
> Apologies if this is documented somewhere I've missed, but how does one get
> CRAN's agreement to download pre-compiled software? A project I work with
> has been seeking permission since October, but emails to both
> CRAN at R-project.org and CRAN-submissions at R-project.org about this have not
> been acknowledged.
>
> I recognize that this mailing list is not CRAN, but I was hoping someone
> here might know the right way to reach the CRAN team to provide a judgment
> on such a request.
>
> Thank you,
> Neal
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
Andrew Robbins
Systems Analyst, Welch Lab<https://welch-lab.github.io>
University of Michigan
Department of Computational Medicine and Bioinformatics


-------------- next part --------------
A non-text attachment was scrubbed...
Name: OpenPGP_signature.asc
Type: application/pgp-signature
Size: 840 bytes
Desc: OpenPGP digital signature
URL: <https://stat.ethz.ch/pipermail/r-package-devel/attachments/20240129/b28bef17/attachment.sig>

From @|mon@urb@nek @end|ng |rom R-project@org  Mon Jan 29 22:50:53 2024
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Tue, 30 Jan 2024 10:50:53 +1300
Subject: [R-pkg-devel] Clarifying CRAN's external libraries policy
In-Reply-To: <CAOCv4hjz9wywBPUZJVRsEvtAiEJB-GKvB5V8Ox2Do2gu9WZ9GA@mail.gmail.com>
References: <CAOCv4hjz9wywBPUZJVRsEvtAiEJB-GKvB5V8Ox2Do2gu9WZ9GA@mail.gmail.com>
Message-ID: <C2A8AFFD-52B3-4BBD-B628-8B1B05A380AD@R-project.org>

Neal,

generally, binaries are not allowed since CRAN cannot check the provenance so it's not worth the risk, and it's close to impossible to maintain them over time across different systems, toolchains and architectures as they evolve. Historically, some packages allowed to provide binaries (e.g., back when the Windows toolchain was not as complete and there was only Win32 target it was more common to supply a Windows binary) and CRAN was more lenient, but it should be avoided nowadays as it was simply too fragile.

As Andrew pointed out in special circumstances you can use external hash-checked *source* tar balls, but generally you should provide sources in the package.

I do not see any e-mail from you to CRAN at r-project.org about this, so please make sure you are using the correct e-mail if you intend to plead your case.

Cheers,
Simon



> On Jan 30, 2024, at 3:11 AM, Neal Richardson <neal.p.richardson at gmail.com> wrote:
> 
> Hi,
> CRAN's policy on using external C/C++/Fortran/other libraries says:
> 
> "Where a package wishes to make use of a library not written solely for the
> package, the package installation should first look to see if it is already
> installed and if so is of a suitable version. In case not, it is desirable
> to include the library sources in the package and compile them as part of
> package installation. If the sources are too large, it is acceptable to
> download them as part of installation, but do ensure that the download is
> of a fixed version rather than the latest. Only as a last resort and with
> the agreement of the CRAN team should a package download pre-compiled
> software."
> 
> Apologies if this is documented somewhere I've missed, but how does one get
> CRAN's agreement to download pre-compiled software? A project I work with
> has been seeking permission since October, but emails to both
> CRAN at R-project.org and CRAN-submissions at R-project.org about this have not
> been acknowledged.
> 
> I recognize that this mailing list is not CRAN, but I was hoping someone
> here might know the right way to reach the CRAN team to provide a judgment
> on such a request.
> 
> Thank you,
> Neal
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 


From @|mon@urb@nek @end|ng |rom R-project@org  Mon Jan 29 23:31:22 2024
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Tue, 30 Jan 2024 11:31:22 +1300
Subject: [R-pkg-devel] Clarifying CRAN's external libraries policy
In-Reply-To: <CAFT6ooAmAbtW=NUgqrzT+J5Lk2w5PxwBb=1yckazin1ny8RZ4w@mail.gmail.com>
References: <CAOCv4hjz9wywBPUZJVRsEvtAiEJB-GKvB5V8Ox2Do2gu9WZ9GA@mail.gmail.com>
 <C2A8AFFD-52B3-4BBD-B628-8B1B05A380AD@R-project.org>
 <CAFT6ooAmAbtW=NUgqrzT+J5Lk2w5PxwBb=1yckazin1ny8RZ4w@mail.gmail.com>
Message-ID: <3DD8423F-36EE-475A-970D-F1AC5A47A7DA@R-project.org>

Nic,

as far as I can see that thread was clearly concluded that it is not a special case that would require external binary downloads.

Cheers,
Simon


> On Jan 30, 2024, at 11:11 AM, Nic Crane <thisisnic at gmail.com> wrote:
> 
> Hi Simon,
> 
> The email that Neal is referring to was sent by me (this email
> address) to CRAN at r-project.org on Mon, 23 Oct 2023.
> 
> Thanks,
> 
> Nic
> 
> 
> On Mon, 29 Jan 2024 at 18:51, Simon Urbanek <simon.urbanek at r-project.org> wrote:
>> 
>> Neal,
>> 
>> generally, binaries are not allowed since CRAN cannot check the provenance so it's not worth the risk, and it's close to impossible to maintain them over time across different systems, toolchains and architectures as they evolve. Historically, some packages allowed to provide binaries (e.g., back when the Windows toolchain was not as complete and there was only Win32 target it was more common to supply a Windows binary) and CRAN was more lenient, but it should be avoided nowadays as it was simply too fragile.
>> 
>> As Andrew pointed out in special circumstances you can use external hash-checked *source* tar balls, but generally you should provide sources in the package.
>> 
>> I do not see any e-mail from you to CRAN at r-project.org about this, so please make sure you are using the correct e-mail if you intend to plead your case.
>> 
>> Cheers,
>> Simon
>> 
>> 
>> 
>>> On Jan 30, 2024, at 3:11 AM, Neal Richardson <neal.p.richardson at gmail.com> wrote:
>>> 
>>> Hi,
>>> CRAN's policy on using external C/C++/Fortran/other libraries says:
>>> 
>>> "Where a package wishes to make use of a library not written solely for the
>>> package, the package installation should first look to see if it is already
>>> installed and if so is of a suitable version. In case not, it is desirable
>>> to include the library sources in the package and compile them as part of
>>> package installation. If the sources are too large, it is acceptable to
>>> download them as part of installation, but do ensure that the download is
>>> of a fixed version rather than the latest. Only as a last resort and with
>>> the agreement of the CRAN team should a package download pre-compiled
>>> software."
>>> 
>>> Apologies if this is documented somewhere I've missed, but how does one get
>>> CRAN's agreement to download pre-compiled software? A project I work with
>>> has been seeking permission since October, but emails to both
>>> CRAN at R-project.org and CRAN-submissions at R-project.org about this have not
>>> been acknowledged.
>>> 
>>> I recognize that this mailing list is not CRAN, but I was hoping someone
>>> here might know the right way to reach the CRAN team to provide a judgment
>>> on such a request.
>>> 
>>> Thank you,
>>> Neal
>>> 
>>>      [[alternative HTML version deleted]]
>>> 
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>> 
>> 
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 


From th|@|@n|c @end|ng |rom gm@||@com  Mon Jan 29 23:11:26 2024
From: th|@|@n|c @end|ng |rom gm@||@com (Nic Crane)
Date: Mon, 29 Jan 2024 19:11:26 -0300
Subject: [R-pkg-devel] Clarifying CRAN's external libraries policy
In-Reply-To: <C2A8AFFD-52B3-4BBD-B628-8B1B05A380AD@R-project.org>
References: <CAOCv4hjz9wywBPUZJVRsEvtAiEJB-GKvB5V8Ox2Do2gu9WZ9GA@mail.gmail.com>
 <C2A8AFFD-52B3-4BBD-B628-8B1B05A380AD@R-project.org>
Message-ID: <CAFT6ooAmAbtW=NUgqrzT+J5Lk2w5PxwBb=1yckazin1ny8RZ4w@mail.gmail.com>

Hi Simon,

The email that Neal is referring to was sent by me (this email
address) to CRAN at r-project.org on Mon, 23 Oct 2023.

Thanks,

Nic


On Mon, 29 Jan 2024 at 18:51, Simon Urbanek <simon.urbanek at r-project.org> wrote:
>
> Neal,
>
> generally, binaries are not allowed since CRAN cannot check the provenance so it's not worth the risk, and it's close to impossible to maintain them over time across different systems, toolchains and architectures as they evolve. Historically, some packages allowed to provide binaries (e.g., back when the Windows toolchain was not as complete and there was only Win32 target it was more common to supply a Windows binary) and CRAN was more lenient, but it should be avoided nowadays as it was simply too fragile.
>
> As Andrew pointed out in special circumstances you can use external hash-checked *source* tar balls, but generally you should provide sources in the package.
>
> I do not see any e-mail from you to CRAN at r-project.org about this, so please make sure you are using the correct e-mail if you intend to plead your case.
>
> Cheers,
> Simon
>
>
>
> > On Jan 30, 2024, at 3:11 AM, Neal Richardson <neal.p.richardson at gmail.com> wrote:
> >
> > Hi,
> > CRAN's policy on using external C/C++/Fortran/other libraries says:
> >
> > "Where a package wishes to make use of a library not written solely for the
> > package, the package installation should first look to see if it is already
> > installed and if so is of a suitable version. In case not, it is desirable
> > to include the library sources in the package and compile them as part of
> > package installation. If the sources are too large, it is acceptable to
> > download them as part of installation, but do ensure that the download is
> > of a fixed version rather than the latest. Only as a last resort and with
> > the agreement of the CRAN team should a package download pre-compiled
> > software."
> >
> > Apologies if this is documented somewhere I've missed, but how does one get
> > CRAN's agreement to download pre-compiled software? A project I work with
> > has been seeking permission since October, but emails to both
> > CRAN at R-project.org and CRAN-submissions at R-project.org about this have not
> > been acknowledged.
> >
> > I recognize that this mailing list is not CRAN, but I was hoping someone
> > here might know the right way to reach the CRAN team to provide a judgment
> > on such a request.
> >
> > Thank you,
> > Neal
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From th|@|@n|c @end|ng |rom gm@||@com  Mon Jan 29 23:50:37 2024
From: th|@|@n|c @end|ng |rom gm@||@com (Nic Crane)
Date: Mon, 29 Jan 2024 19:50:37 -0300
Subject: [R-pkg-devel] Clarifying CRAN's external libraries policy
In-Reply-To: <3DD8423F-36EE-475A-970D-F1AC5A47A7DA@R-project.org>
References: <CAOCv4hjz9wywBPUZJVRsEvtAiEJB-GKvB5V8Ox2Do2gu9WZ9GA@mail.gmail.com>
 <C2A8AFFD-52B3-4BBD-B628-8B1B05A380AD@R-project.org>
 <CAFT6ooAmAbtW=NUgqrzT+J5Lk2w5PxwBb=1yckazin1ny8RZ4w@mail.gmail.com>
 <3DD8423F-36EE-475A-970D-F1AC5A47A7DA@R-project.org>
Message-ID: <CAFT6ooD3_neqwDRN75Jn61AQonSOAtG82ciNhnKMXTwXa_6vMQ@mail.gmail.com>

Thanks Simon.

As far as I can tell, I did not receive any reply to that email; would you
mind re-sending it?

Nic


On Mon, 29 Jan 2024, 19:31 Simon Urbanek, <simon.urbanek at r-project.org>
wrote:

> Nic,
>
> as far as I can see that thread was clearly concluded that it is not a
> special case that would require external binary downloads.
>
> Cheers,
> Simon
>
>
> > On Jan 30, 2024, at 11:11 AM, Nic Crane <thisisnic at gmail.com> wrote:
> >
> > Hi Simon,
> >
> > The email that Neal is referring to was sent by me (this email
> > address) to CRAN at r-project.org on Mon, 23 Oct 2023.
> >
> > Thanks,
> >
> > Nic
> >
> >
> > On Mon, 29 Jan 2024 at 18:51, Simon Urbanek <simon.urbanek at r-project.org>
> wrote:
> >>
> >> Neal,
> >>
> >> generally, binaries are not allowed since CRAN cannot check the
> provenance so it's not worth the risk, and it's close to impossible to
> maintain them over time across different systems, toolchains and
> architectures as they evolve. Historically, some packages allowed to
> provide binaries (e.g., back when the Windows toolchain was not as complete
> and there was only Win32 target it was more common to supply a Windows
> binary) and CRAN was more lenient, but it should be avoided nowadays as it
> was simply too fragile.
> >>
> >> As Andrew pointed out in special circumstances you can use external
> hash-checked *source* tar balls, but generally you should provide sources
> in the package.
> >>
> >> I do not see any e-mail from you to CRAN at r-project.org about this, so
> please make sure you are using the correct e-mail if you intend to plead
> your case.
> >>
> >> Cheers,
> >> Simon
> >>
> >>
> >>
> >>> On Jan 30, 2024, at 3:11 AM, Neal Richardson <
> neal.p.richardson at gmail.com> wrote:
> >>>
> >>> Hi,
> >>> CRAN's policy on using external C/C++/Fortran/other libraries says:
> >>>
> >>> "Where a package wishes to make use of a library not written solely
> for the
> >>> package, the package installation should first look to see if it is
> already
> >>> installed and if so is of a suitable version. In case not, it is
> desirable
> >>> to include the library sources in the package and compile them as part
> of
> >>> package installation. If the sources are too large, it is acceptable to
> >>> download them as part of installation, but do ensure that the download
> is
> >>> of a fixed version rather than the latest. Only as a last resort and
> with
> >>> the agreement of the CRAN team should a package download pre-compiled
> >>> software."
> >>>
> >>> Apologies if this is documented somewhere I've missed, but how does
> one get
> >>> CRAN's agreement to download pre-compiled software? A project I work
> with
> >>> has been seeking permission since October, but emails to both
> >>> CRAN at R-project.org and CRAN-submissions at R-project.org about this have
> not
> >>> been acknowledged.
> >>>
> >>> I recognize that this mailing list is not CRAN, but I was hoping
> someone
> >>> here might know the right way to reach the CRAN team to provide a
> judgment
> >>> on such a request.
> >>>
> >>> Thank you,
> >>> Neal
> >>>
> >>>      [[alternative HTML version deleted]]
> >>>
> >>> ______________________________________________
> >>> R-package-devel at r-project.org mailing list
> >>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>>
> >>
> >> ______________________________________________
> >> R-package-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
>
>

	[[alternative HTML version deleted]]


From |kry|ov @end|ng |rom d|@root@org  Tue Jan 30 16:56:28 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Tue, 30 Jan 2024 18:56:28 +0300
Subject: [R-pkg-devel] Bioconductor reverse dependency checks for a CRAN
 package
Message-ID: <20240130185628.347bbaee@arachnoid>

Hello R-package-devel,

What would you recommend in order to run reverse dependency checks for
a package with 182 direct strong dependencies from CRAN and 66 from
Bioconductor (plus 3 more from annotations and experiments)?

Without extra environment variables, R CMD check requires the Suggested
packages to be available, which means installing...

revdepdep <- package_dependencies(revdep, which = 'most')
revdeprest <- package_dependencies(
 unique(unlist(revdepdep)),
 which = 'strong', recursive = TRUE
)
length(setdiff(
 unlist(c(revdepdep, revdeprest)),
 unlist(standard_package_names())
))

...up to 1316 packages. 7 of these suggested packages aren't on CRAN or
Bioconductor (because they've been archived or have always lived on
GitHub), but even if I filter those out, it's not easy. Some of the
Bioconductor dependencies are large; I now have multiple gigabytes of
genome fragments and mass spectra, but also a 500-megabyte arrow.so in
my library. As long as a data package declares a dependency on your
package, it still has to be installed and checked, right?

Manually installing the SystemRequirements is no fun at all, so I've
tried the rocker/r2u container. It got me most of the way there, but
there were a few remaining packages with newer versions on CRAN. For
these, I had to install the system packages manually in order to build
them from source.

Someone told me to try the rocker/r-base container together with pak.
It was more proactive at telling me about dependency conflicts and
would have got me most of the way there too, except it somehow got me a
'stringi' binary without the corresponding libicu*.so*, which stopped
the installation process. Again, nothing that a bit of manual work
wouldn't fix, but I don't feel comfortable setting this up on a CI
system. (Not on every commit, of course - that would be extremely
wasteful - but it would be nice if it was possible to run these checks
before release on a different computer and spot more problems this way.)

I can't help but notice that neither install.packages() nor pak() is
the recommended way to install Bioconductor packages. Could that
introduce additional problems with checking the reverse dependencies?

Then there's the check_packages_in_dir() function itself. Its behaviour
about the reverse dependencies is not very helpful: they are removed
altogether or at least moved away. Something may be wrong with my CRAN
mirror, because some of the downloaded reverse dependencies come out
with a size of zero and subsequently fail the check very quickly.

I am thinking of keeping a separate persistent library with all the
1316 dependencies required to check the reverse dependencies and a
persistent directory with the reverse dependencies themselves. Instead
of using the reverse=... argument, I'm thinking of using the following
scheme:

1. Use package_dependencies() to determine the list of packages to test.
2. Use download.packages() to download the latest version of everything
if it doesn't already exist. Retry if got zero-sized or otherwise
damaged tarballs. Remove old versions of packages if a newer version
exists.
3. Run check_packages_in_dir() on the whole directory with the
downloaded reverse dependencies.

For this to work, I need a way to run step (3) twice, ensuring that one
of the runs is performed with the CRAN version of the package in the
library and the other one is performed with the to-be-released version
of the package in the library. Has anyone already come up with an
automated way to do that?

No wonder nobody wants to maintain the XML package.

-- 
Best regards,
Ivan


From mtmorg@n@xyz @end|ng |rom gm@||@com  Tue Jan 30 17:24:40 2024
From: mtmorg@n@xyz @end|ng |rom gm@||@com (Martin Morgan)
Date: Tue, 30 Jan 2024 16:24:40 +0000
Subject: [R-pkg-devel] Bioconductor reverse dependency checks for a CRAN
 package
In-Reply-To: <20240130185628.347bbaee@arachnoid>
References: <20240130185628.347bbaee@arachnoid>
Message-ID: <DS7PR10MB72772BE31259003B9625B283FA7D2@DS7PR10MB7277.namprd10.prod.outlook.com>

BiocManager (the recommended way to install Bioconductor packages) at the end of the day does essentially install.packages(repos = BiocManager::repositories()), ensuring that the right versions of Bioconductor packages are installed for the version of R in use. Maybe this is moot though if the goal is to emulate CRAN, since I believe they use utils:::.BioC_version_associated_with_R_version().

There is a Bioconductor docker container, extending rocker https://github.com/Bioconductor/bioconductor_docker ; I don't know whether this would be more or less work than alternatives. And an exploratory https://github.com/Bioconductor/bioc2u; I don't know the status of that project.

At some point the scale tips from installing packages from standard repositories to using a local clone https://bioconductor.org/about/mirrors/mirror-how-to/.

Martin Morgan

From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Ivan Krylov via R-package-devel <r-package-devel at r-project.org>
Date: Tuesday, January 30, 2024 at 10:57?AM
To: r-package-devel at r-project.org <r-package-devel at r-project.org>
Subject: [R-pkg-devel] Bioconductor reverse dependency checks for a CRAN package
Hello R-package-devel,

What would you recommend in order to run reverse dependency checks for
a package with 182 direct strong dependencies from CRAN and 66 from
Bioconductor (plus 3 more from annotations and experiments)?

Without extra environment variables, R CMD check requires the Suggested
packages to be available, which means installing...

revdepdep <- package_dependencies(revdep, which = 'most')
revdeprest <- package_dependencies(
 unique(unlist(revdepdep)),
 which = 'strong', recursive = TRUE
)
length(setdiff(
 unlist(c(revdepdep, revdeprest)),
 unlist(standard_package_names())
))

...up to 1316 packages. 7 of these suggested packages aren't on CRAN or
Bioconductor (because they've been archived or have always lived on
GitHub), but even if I filter those out, it's not easy. Some of the
Bioconductor dependencies are large; I now have multiple gigabytes of
genome fragments and mass spectra, but also a 500-megabyte arrow.so in
my library. As long as a data package declares a dependency on your
package, it still has to be installed and checked, right?

Manually installing the SystemRequirements is no fun at all, so I've
tried the rocker/r2u container. It got me most of the way there, but
there were a few remaining packages with newer versions on CRAN. For
these, I had to install the system packages manually in order to build
them from source.

Someone told me to try the rocker/r-base container together with pak.
It was more proactive at telling me about dependency conflicts and
would have got me most of the way there too, except it somehow got me a
'stringi' binary without the corresponding libicu*.so*, which stopped
the installation process. Again, nothing that a bit of manual work
wouldn't fix, but I don't feel comfortable setting this up on a CI
system. (Not on every commit, of course - that would be extremely
wasteful - but it would be nice if it was possible to run these checks
before release on a different computer and spot more problems this way.)

I can't help but notice that neither install.packages() nor pak() is
the recommended way to install Bioconductor packages. Could that
introduce additional problems with checking the reverse dependencies?

Then there's the check_packages_in_dir() function itself. Its behaviour
about the reverse dependencies is not very helpful: they are removed
altogether or at least moved away. Something may be wrong with my CRAN
mirror, because some of the downloaded reverse dependencies come out
with a size of zero and subsequently fail the check very quickly.

I am thinking of keeping a separate persistent library with all the
1316 dependencies required to check the reverse dependencies and a
persistent directory with the reverse dependencies themselves. Instead
of using the reverse=... argument, I'm thinking of using the following
scheme:

1. Use package_dependencies() to determine the list of packages to test.
2. Use download.packages() to download the latest version of everything
if it doesn't already exist. Retry if got zero-sized or otherwise
damaged tarballs. Remove old versions of packages if a newer version
exists.
3. Run check_packages_in_dir() on the whole directory with the
downloaded reverse dependencies.

For this to work, I need a way to run step (3) twice, ensuring that one
of the runs is performed with the CRAN version of the package in the
library and the other one is performed with the to-be-released version
of the package in the library. Has anyone already come up with an
automated way to do that?

No wonder nobody wants to maintain the XML package.

--
Best regards,
Ivan

______________________________________________
R-package-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel

	[[alternative HTML version deleted]]


From edd @end|ng |rom deb|@n@org  Tue Jan 30 17:32:36 2024
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Tue, 30 Jan 2024 10:32:36 -0600
Subject: [R-pkg-devel] Bioconductor reverse dependency checks for a CRAN
 package
In-Reply-To: <20240130185628.347bbaee@arachnoid>
References: <20240130185628.347bbaee@arachnoid>
Message-ID: <26041.9380.865238.237313@rob.eddelbuettel.com>


Ivan,

On 30 January 2024 at 18:56, Ivan Krylov via R-package-devel wrote:
| Hello R-package-devel,
| 
| What would you recommend in order to run reverse dependency checks for
| a package with 182 direct strong dependencies from CRAN and 66 from
| Bioconductor (plus 3 more from annotations and experiments)?
| 
| Without extra environment variables, R CMD check requires the Suggested
| packages to be available, which means installing...
| 
| revdepdep <- package_dependencies(revdep, which = 'most')
| revdeprest <- package_dependencies(
|  unique(unlist(revdepdep)),
|  which = 'strong', recursive = TRUE
| )
| length(setdiff(
|  unlist(c(revdepdep, revdeprest)),
|  unlist(standard_package_names())
| ))
| 
| ...up to 1316 packages. 7 of these suggested packages aren't on CRAN or
| Bioconductor (because they've been archived or have always lived on
| GitHub), but even if I filter those out, it's not easy. Some of the
| Bioconductor dependencies are large; I now have multiple gigabytes of
| genome fragments and mass spectra, but also a 500-megabyte arrow.so in
| my library. As long as a data package declares a dependency on your
| package, it still has to be installed and checked, right?
| 
| Manually installing the SystemRequirements is no fun at all, so I've
| tried the rocker/r2u container. It got me most of the way there, but
| there were a few remaining packages with newer versions on CRAN. For

If that happens, please file an issue ticket at the r2u site.  CRAN should be
current as I update business daily whenever p3m does and hence will be as
current as approaches using it (and encode the genuine system dependencies).

BioConductor in r2u is both more manual (and I try to update "every few
days") and course not complete so if you miss a package _from BioConductor_
again please just file an issue ticket.

| these, I had to install the system packages manually in order to build
| them from source.

For what it is worth, my own go-to for many years has been a VM in which I
install 'all packages needed' for the rev.dep to be checked. Doing it with
on-demands 'lambda function (one per package tested)' based on r2u would be a
nice alternative but I don't have the aws credits to try it...

| Someone told me to try the rocker/r-base container together with pak.
| It was more proactive at telling me about dependency conflicts and
| would have got me most of the way there too, except it somehow got me a
| 'stringi' binary without the corresponding libicu*.so*, which stopped
| the installation process. Again, nothing that a bit of manual work
| wouldn't fix, but I don't feel comfortable setting this up on a CI
| system. (Not on every commit, of course - that would be extremely
| wasteful - but it would be nice if it was possible to run these checks
| before release on a different computer and spot more problems this way.)
| 
| I can't help but notice that neither install.packages() nor pak() is
| the recommended way to install Bioconductor packages. Could that
| introduce additional problems with checking the reverse dependencies?

As Martin already told you, BioConductor has always had their own
installation wrapper because they are a 'little different' with the bi-annual
release cycle.
 
| Then there's the check_packages_in_dir() function itself. Its behaviour
| about the reverse dependencies is not very helpful: they are removed
| altogether or at least moved away. Something may be wrong with my CRAN
| mirror, because some of the downloaded reverse dependencies come out
| with a size of zero and subsequently fail the check very quickly.
| 
| I am thinking of keeping a separate persistent library with all the
| 1316 dependencies required to check the reverse dependencies and a

As stated above, that is what works for me. I used to use a chroot directory
on a 'big server', now I use a small somewhat underpowered VM.

| persistent directory with the reverse dependencies themselves. Instead
| of using the reverse=... argument, I'm thinking of using the following
| scheme:
| 
| 1. Use package_dependencies() to determine the list of packages to test.
| 2. Use download.packages() to download the latest version of everything
| if it doesn't already exist. Retry if got zero-sized or otherwise
| damaged tarballs. Remove old versions of packages if a newer version
| exists.
| 3. Run check_packages_in_dir() on the whole directory with the
| downloaded reverse dependencies.
| 
| For this to work, I need a way to run step (3) twice, ensuring that one
| of the runs is performed with the CRAN version of the package in the
| library and the other one is performed with the to-be-released version
| of the package in the library. Has anyone already come up with an
| automated way to do that?
| 
| No wonder nobody wants to maintain the XML package.

Well a few of us maintain packages with quite a tail and cope. Rcpp has 2700,
RcppArmadillo have over 100, BH a few hundred. These aren't 'light'. I wrote
myself the `prrd` package (on CRAN) for this, others have other tools -- Team
data.table managed to release 1.5.0 to CRAN today too. So this clearly is
possible. But it is a worthy discussion topic so thanks for raising it.

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From georg|@bo@hn@kov @end|ng |rom m@nche@ter@@c@uk  Tue Jan 30 17:45:33 2024
From: georg|@bo@hn@kov @end|ng |rom m@nche@ter@@c@uk (Georgi Boshnakov)
Date: Tue, 30 Jan 2024 16:45:33 +0000
Subject: [R-pkg-devel] Bioconductor reverse dependency checks for a CRAN
 package
In-Reply-To: <20240130185628.347bbaee@arachnoid>
References: <20240130185628.347bbaee@arachnoid>
Message-ID: <LO0P265MB6325302A53C8AC7779673481AE7D2@LO0P265MB6325.GBRP265.PROD.OUTLOOK.COM>

Have you tried revdepcheck (https://github.com/r-lib/revdepcheck)?
It handles the dependencies and uses a local cache for the downloaded packages. 
It also checks packages with the new and old versions. 

As far as I know, it doesn't handle the system requirements though.

Georgi Boshnakov



________________________________________
From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Ivan Krylov via R-package-devel <r-package-devel at r-project.org>
Sent: 30 January 2024 15:56
To: r-package-devel at r-project.org
Subject: [R-pkg-devel] Bioconductor reverse dependency checks for a CRAN package

Hello R-package-devel,

What would you recommend in order to run reverse dependency checks for
a package with 182 direct strong dependencies from CRAN and 66 from
Bioconductor (plus 3 more from annotations and experiments)?

Without extra environment variables, R CMD check requires the Suggested
packages to be available, which means installing...

revdepdep <- package_dependencies(revdep, which = 'most')
revdeprest <- package_dependencies(
 unique(unlist(revdepdep)),
 which = 'strong', recursive = TRUE
)
length(setdiff(
 unlist(c(revdepdep, revdeprest)),
 unlist(standard_package_names())
))

...up to 1316 packages. 7 of these suggested packages aren't on CRAN or
Bioconductor (because they've been archived or have always lived on
GitHub), but even if I filter those out, it's not easy. Some of the
Bioconductor dependencies are large; I now have multiple gigabytes of
genome fragments and mass spectra, but also a 500-megabyte arrow.so in
my library. As long as a data package declares a dependency on your
package, it still has to be installed and checked, right?

Manually installing the SystemRequirements is no fun at all, so I've
tried the rocker/r2u container. It got me most of the way there, but
there were a few remaining packages with newer versions on CRAN. For
these, I had to install the system packages manually in order to build
them from source.

Someone told me to try the rocker/r-base container together with pak.
It was more proactive at telling me about dependency conflicts and
would have got me most of the way there too, except it somehow got me a
'stringi' binary without the corresponding libicu*.so*, which stopped
the installation process. Again, nothing that a bit of manual work
wouldn't fix, but I don't feel comfortable setting this up on a CI
system. (Not on every commit, of course - that would be extremely
wasteful - but it would be nice if it was possible to run these checks
before release on a different computer and spot more problems this way.)

I can't help but notice that neither install.packages() nor pak() is
the recommended way to install Bioconductor packages. Could that
introduce additional problems with checking the reverse dependencies?

Then there's the check_packages_in_dir() function itself. Its behaviour
about the reverse dependencies is not very helpful: they are removed
altogether or at least moved away. Something may be wrong with my CRAN
mirror, because some of the downloaded reverse dependencies come out
with a size of zero and subsequently fail the check very quickly.

I am thinking of keeping a separate persistent library with all the
1316 dependencies required to check the reverse dependencies and a
persistent directory with the reverse dependencies themselves. Instead
of using the reverse=... argument, I'm thinking of using the following
scheme:

1. Use package_dependencies() to determine the list of packages to test.
2. Use download.packages() to download the latest version of everything
if it doesn't already exist. Retry if got zero-sized or otherwise
damaged tarballs. Remove old versions of packages if a newer version
exists.
3. Run check_packages_in_dir() on the whole directory with the
downloaded reverse dependencies.

For this to work, I need a way to run step (3) twice, ensuring that one
of the runs is performed with the CRAN version of the package in the
library and the other one is performed with the to-be-released version
of the package in the library. Has anyone already come up with an
automated way to do that?

No wonder nobody wants to maintain the XML package.

--
Best regards,
Ivan

______________________________________________
R-package-devel at r-project.org mailing list
https://urldefense.com/v3/__https://stat.ethz.ch/mailman/listinfo/r-package-devel__;!!PDiH4ENfjr2_Jw!CS5KQeRz1siwuoD4-RSsRjkbQzvi1QS9jLin41C9dDDiXO1WkQ4-TZNdsLD6JyHLNedacNbjOvT05POeYHSYhLOKR4WvCNwVh37etWZ78gw$ [stat[.]ethz[.]ch]


From bbo|ker @end|ng |rom gm@||@com  Tue Jan 30 18:38:57 2024
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Tue, 30 Jan 2024 12:38:57 -0500
Subject: [R-pkg-devel] Bioconductor reverse dependency checks for a CRAN
 package
In-Reply-To: <20240130185628.347bbaee@arachnoid>
References: <20240130185628.347bbaee@arachnoid>
Message-ID: <51003fa4-f72e-4073-976b-74fe38f63978@gmail.com>

https://github.com/r-lib/revdepcheck does the 'step 3 twice' part.


   I have had a few issues with it 
<https://github.com/r-lib/revdepcheck/issues/330> but overall it's been 
very helpful.

https://github.com/HenrikBengtsson/revdepcheck.extras may also be useful.

On 2024-01-30 10:56 a.m., Ivan Krylov via R-package-devel wrote:
> Hello R-package-devel,
> 
> What would you recommend in order to run reverse dependency checks for
> a package with 182 direct strong dependencies from CRAN and 66 from
> Bioconductor (plus 3 more from annotations and experiments)?
> 
> Without extra environment variables, R CMD check requires the Suggested
> packages to be available, which means installing...
> 
> revdepdep <- package_dependencies(revdep, which = 'most')
> revdeprest <- package_dependencies(
>   unique(unlist(revdepdep)),
>   which = 'strong', recursive = TRUE
> )
> length(setdiff(
>   unlist(c(revdepdep, revdeprest)),
>   unlist(standard_package_names())
> ))
> 
> ...up to 1316 packages. 7 of these suggested packages aren't on CRAN or
> Bioconductor (because they've been archived or have always lived on
> GitHub), but even if I filter those out, it's not easy. Some of the
> Bioconductor dependencies are large; I now have multiple gigabytes of
> genome fragments and mass spectra, but also a 500-megabyte arrow.so in
> my library. As long as a data package declares a dependency on your
> package, it still has to be installed and checked, right?
> 
> Manually installing the SystemRequirements is no fun at all, so I've
> tried the rocker/r2u container. It got me most of the way there, but
> there were a few remaining packages with newer versions on CRAN. For
> these, I had to install the system packages manually in order to build
> them from source.
> 
> Someone told me to try the rocker/r-base container together with pak.
> It was more proactive at telling me about dependency conflicts and
> would have got me most of the way there too, except it somehow got me a
> 'stringi' binary without the corresponding libicu*.so*, which stopped
> the installation process. Again, nothing that a bit of manual work
> wouldn't fix, but I don't feel comfortable setting this up on a CI
> system. (Not on every commit, of course - that would be extremely
> wasteful - but it would be nice if it was possible to run these checks
> before release on a different computer and spot more problems this way.)
> 
> I can't help but notice that neither install.packages() nor pak() is
> the recommended way to install Bioconductor packages. Could that
> introduce additional problems with checking the reverse dependencies?
> 
> Then there's the check_packages_in_dir() function itself. Its behaviour
> about the reverse dependencies is not very helpful: they are removed
> altogether or at least moved away. Something may be wrong with my CRAN
> mirror, because some of the downloaded reverse dependencies come out
> with a size of zero and subsequently fail the check very quickly.
> 
> I am thinking of keeping a separate persistent library with all the
> 1316 dependencies required to check the reverse dependencies and a
> persistent directory with the reverse dependencies themselves. Instead
> of using the reverse=... argument, I'm thinking of using the following
> scheme:
> 
> 1. Use package_dependencies() to determine the list of packages to test.
> 2. Use download.packages() to download the latest version of everything
> if it doesn't already exist. Retry if got zero-sized or otherwise
> damaged tarballs. Remove old versions of packages if a newer version
> exists.
> 3. Run check_packages_in_dir() on the whole directory with the
> downloaded reverse dependencies.
> 
> For this to work, I need a way to run step (3) twice, ensuring that one
> of the runs is performed with the CRAN version of the package in the
> library and the other one is performed with the to-be-released version
> of the package in the library. Has anyone already come up with an
> automated way to do that?
> 
> No wonder nobody wants to maintain the XML package.
>


From d|ego@hern@ngomezherrero @end|ng |rom gm@||@com  Tue Jan 30 18:57:41 2024
From: d|ego@hern@ngomezherrero @end|ng |rom gm@||@com (=?UTF-8?Q?Diego_Hernang=C3=B3mez_Herrero?=)
Date: Tue, 30 Jan 2024 18:57:41 +0100
Subject: [R-pkg-devel] Bioconductor reverse dependency checks for a CRAN
 package
In-Reply-To: <51003fa4-f72e-4073-976b-74fe38f63978@gmail.com>
References: <20240130185628.347bbaee@arachnoid>
 <51003fa4-f72e-4073-976b-74fe38f63978@gmail.com>
Message-ID: <CAA-ibayfuo+-3J_GSAinVOGvsoGbMM-k2DMZoHZ1iMu1O6f3NA@mail.gmail.com>

Haven?t tried with a package with such an amount of revdeps, but my
approach is revdepcheck in GH actions and commiting the result to the repo
(that is somehow similar to the docker approach if you host the package in
GitHub).

You can check the setup in tidyterra:

- folder with basic setup:
https://github.com/dieghernan/tidyterra/tree/main/revdep
- action (triggered manually):
https://github.com/dieghernan/tidyterra/blob/main/.github/workflows/revdepcheck.yaml

You would need to add revdepcheck folder to .Rbuildignore to avoid notes on
R CMD CHECK and grant write access to GitHub actions on the repo setup so
the results can be pushed to the repo.







Have a nice day!


El El mar, 30 ene 2024 a las 18:39, Ben Bolker <bbolker at gmail.com> escribi?:

> https://github.com/r-lib/revdepcheck does the 'step 3 twice' part.
>
>
>    I have had a few issues with it
> <https://github.com/r-lib/revdepcheck/issues/330> but overall it's been
> very helpful.
>
> https://github.com/HenrikBengtsson/revdepcheck.extras may also be useful.
>
> On 2024-01-30 10:56 a.m., Ivan Krylov via R-package-devel wrote:
> > Hello R-package-devel,
> >
> > What would you recommend in order to run reverse dependency checks for
> > a package with 182 direct strong dependencies from CRAN and 66 from
> > Bioconductor (plus 3 more from annotations and experiments)?
> >
> > Without extra environment variables, R CMD check requires the Suggested
> > packages to be available, which means installing...
> >
> > revdepdep <- package_dependencies(revdep, which = 'most')
> > revdeprest <- package_dependencies(
> >   unique(unlist(revdepdep)),
> >   which = 'strong', recursive = TRUE
> > )
> > length(setdiff(
> >   unlist(c(revdepdep, revdeprest)),
> >   unlist(standard_package_names())
> > ))
> >
> > ...up to 1316 packages. 7 of these suggested packages aren't on CRAN or
> > Bioconductor (because they've been archived or have always lived on
> > GitHub), but even if I filter those out, it's not easy. Some of the
> > Bioconductor dependencies are large; I now have multiple gigabytes of
> > genome fragments and mass spectra, but also a 500-megabyte arrow.so in
> > my library. As long as a data package declares a dependency on your
> > package, it still has to be installed and checked, right?
> >
> > Manually installing the SystemRequirements is no fun at all, so I've
> > tried the rocker/r2u container. It got me most of the way there, but
> > there were a few remaining packages with newer versions on CRAN. For
> > these, I had to install the system packages manually in order to build
> > them from source.
> >
> > Someone told me to try the rocker/r-base container together with pak.
> > It was more proactive at telling me about dependency conflicts and
> > would have got me most of the way there too, except it somehow got me a
> > 'stringi' binary without the corresponding libicu*.so*, which stopped
> > the installation process. Again, nothing that a bit of manual work
> > wouldn't fix, but I don't feel comfortable setting this up on a CI
> > system. (Not on every commit, of course - that would be extremely
> > wasteful - but it would be nice if it was possible to run these checks
> > before release on a different computer and spot more problems this way.)
> >
> > I can't help but notice that neither install.packages() nor pak() is
> > the recommended way to install Bioconductor packages. Could that
> > introduce additional problems with checking the reverse dependencies?
> >
> > Then there's the check_packages_in_dir() function itself. Its behaviour
> > about the reverse dependencies is not very helpful: they are removed
> > altogether or at least moved away. Something may be wrong with my CRAN
> > mirror, because some of the downloaded reverse dependencies come out
> > with a size of zero and subsequently fail the check very quickly.
> >
> > I am thinking of keeping a separate persistent library with all the
> > 1316 dependencies required to check the reverse dependencies and a
> > persistent directory with the reverse dependencies themselves. Instead
> > of using the reverse=... argument, I'm thinking of using the following
> > scheme:
> >
> > 1. Use package_dependencies() to determine the list of packages to test.
> > 2. Use download.packages() to download the latest version of everything
> > if it doesn't already exist. Retry if got zero-sized or otherwise
> > damaged tarballs. Remove old versions of packages if a newer version
> > exists.
> > 3. Run check_packages_in_dir() on the whole directory with the
> > downloaded reverse dependencies.
> >
> > For this to work, I need a way to run step (3) twice, ensuring that one
> > of the runs is performed with the CRAN version of the package in the
> > library and the other one is performed with the to-be-released version
> > of the package in the library. Has anyone already come up with an
> > automated way to do that?
> >
> > No wonder nobody wants to maintain the XML package.
> >
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Tue Jan 30 23:27:32 2024
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Tue, 30 Jan 2024 23:27:32 +0100
Subject: [R-pkg-devel] Bioconductor reverse dependency checks for a CRAN
 package
In-Reply-To: <20240130185628.347bbaee@arachnoid>
References: <20240130185628.347bbaee@arachnoid>
Message-ID: <f05e7ed7-fa7a-48e7-a187-a45def00141b@statistik.tu-dortmund.de>

For the BioC installation:
For all CAN work, I simply use install.packages() after adding/setting 
the BioC repo/mirror which perfectly well resolves the dependencies.

Best,
Uwe Ligges



On 30.01.2024 16:56, Ivan Krylov via R-package-devel wrote:
> Hello R-package-devel,
> 
> What would you recommend in order to run reverse dependency checks for
> a package with 182 direct strong dependencies from CRAN and 66 from
> Bioconductor (plus 3 more from annotations and experiments)?
> 
> Without extra environment variables, R CMD check requires the Suggested
> packages to be available, which means installing...
> 
> revdepdep <- package_dependencies(revdep, which = 'most')
> revdeprest <- package_dependencies(
>   unique(unlist(revdepdep)),
>   which = 'strong', recursive = TRUE
> )
> length(setdiff(
>   unlist(c(revdepdep, revdeprest)),
>   unlist(standard_package_names())
> ))
> 
> ...up to 1316 packages. 7 of these suggested packages aren't on CRAN or
> Bioconductor (because they've been archived or have always lived on
> GitHub), but even if I filter those out, it's not easy. Some of the
> Bioconductor dependencies are large; I now have multiple gigabytes of
> genome fragments and mass spectra, but also a 500-megabyte arrow.so in
> my library. As long as a data package declares a dependency on your
> package, it still has to be installed and checked, right?
> 
> Manually installing the SystemRequirements is no fun at all, so I've
> tried the rocker/r2u container. It got me most of the way there, but
> there were a few remaining packages with newer versions on CRAN. For
> these, I had to install the system packages manually in order to build
> them from source.
> 
> Someone told me to try the rocker/r-base container together with pak.
> It was more proactive at telling me about dependency conflicts and
> would have got me most of the way there too, except it somehow got me a
> 'stringi' binary without the corresponding libicu*.so*, which stopped
> the installation process. Again, nothing that a bit of manual work
> wouldn't fix, but I don't feel comfortable setting this up on a CI
> system. (Not on every commit, of course - that would be extremely
> wasteful - but it would be nice if it was possible to run these checks
> before release on a different computer and spot more problems this way.)
> 
> I can't help but notice that neither install.packages() nor pak() is
> the recommended way to install Bioconductor packages. Could that
> introduce additional problems with checking the reverse dependencies?
> 
> Then there's the check_packages_in_dir() function itself. Its behaviour
> about the reverse dependencies is not very helpful: they are removed
> altogether or at least moved away. Something may be wrong with my CRAN
> mirror, because some of the downloaded reverse dependencies come out
> with a size of zero and subsequently fail the check very quickly.
> 
> I am thinking of keeping a separate persistent library with all the
> 1316 dependencies required to check the reverse dependencies and a
> persistent directory with the reverse dependencies themselves. Instead
> of using the reverse=... argument, I'm thinking of using the following
> scheme:
> 
> 1. Use package_dependencies() to determine the list of packages to test.
> 2. Use download.packages() to download the latest version of everything
> if it doesn't already exist. Retry if got zero-sized or otherwise
> damaged tarballs. Remove old versions of packages if a newer version
> exists.
> 3. Run check_packages_in_dir() on the whole directory with the
> downloaded reverse dependencies.
> 
> For this to work, I need a way to run step (3) twice, ensuring that one
> of the runs is performed with the CRAN version of the package in the
> library and the other one is performed with the to-be-released version
> of the package in the library. Has anyone already come up with an
> automated way to do that?
> 
> No wonder nobody wants to maintain the XML package.
> 

From n@r@@ @end|ng |rom @t@n|ord@edu  Thu Feb  1 15:53:19 2024
From: n@r@@ @end|ng |rom @t@n|ord@edu (Balasubramanian Narasimhan)
Date: Thu, 1 Feb 2024 06:53:19 -0800
Subject: [R-pkg-devel] Winbuilder down?
Message-ID: <ce363607-ca31-4b6c-b4ab-b31edf173295@stanford.edu>

Just FYI: Winbuilder seems to be unresponsive. My uploads over the last 
2 days have not resulted in any output or messages.

Thank you.

-Naras


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Thu Feb  1 16:40:09 2024
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Thu, 1 Feb 2024 16:40:09 +0100
Subject: [R-pkg-devel] Winbuilder down?
In-Reply-To: <ce363607-ca31-4b6c-b4ab-b31edf173295@stanford.edu>
References: <ce363607-ca31-4b6c-b4ab-b31edf173295@stanford.edu>
Message-ID: <68c2f672-bd05-4440-a1ab-f071752eca15@statistik.tu-dortmund.de>

Dear Naras,

the queues are empty, so everything has been processed.
Which package are you talking about? Then I can take a look what went wrong.

Best,
Uwe

On 01.02.2024 15:53, Balasubramanian Narasimhan wrote:
> Just FYI: Winbuilder seems to be unresponsive. My uploads over the last 
> 2 days have not resulted in any output or messages.
> 
> Thank you.
> 
> -Naras
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

From n@r@@ @end|ng |rom @t@n|ord@edu  Thu Feb  1 18:29:14 2024
From: n@r@@ @end|ng |rom @t@n|ord@edu (Balasubramanian Narasimhan)
Date: Thu, 1 Feb 2024 09:29:14 -0800
Subject: [R-pkg-devel] Winbuilder down?
In-Reply-To: <68c2f672-bd05-4440-a1ab-f071752eca15@statistik.tu-dortmund.de>
References: <ce363607-ca31-4b6c-b4ab-b31edf173295@stanford.edu>
 <68c2f672-bd05-4440-a1ab-f071752eca15@statistik.tu-dortmund.de>
Message-ID: <eb91a1c3-f145-410b-9235-10776e65453b@stanford.edu>

Dear Uwe,

Mea culpa. that was a false alarm. I forgot that the email goes to the 
maintainer, which is not me. Apologies.

-Naras

On 2/1/24 7:40 AM, Uwe Ligges wrote:
> Dear Naras,
>
> the queues are empty, so everything has been processed.
> Which package are you talking about? Then I can take a look what went 
> wrong.
>
> Best,
> Uwe
>
> On 01.02.2024 15:53, Balasubramanian Narasimhan wrote:
>> Just FYI: Winbuilder seems to be unresponsive. My uploads over the 
>> last 2 days have not resulted in any output or messages.
>>
>> Thank you.
>>
>> -Naras
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From @n248 @end|ng |rom corne||@edu  Sat Feb  3 16:38:35 2024
From: @n248 @end|ng |rom corne||@edu (Satyaprakash Nayak)
Date: Sat, 3 Feb 2024 10:38:35 -0500
Subject: [R-pkg-devel] Warnings from upstream C library in CRAN submission
Message-ID: <CAM3CqvLWwvjNFSo5yqOJK4hK75JRbSMpEHVt9v3MirHALuBUHQ@mail.gmail.com>

Hi

I had a package 'sundialr' which was archived from CRAN. It is an interface
to some of the solvers in SUNDIALS ODE Solving library. I have fixed the
issue which was related to emails being forwarded from the maintainer's
email address.

The repository code can be found at - https://github.com/sn248/sundialr

I have updated the upstream library and now I am getting the following
warnings from CRAN which are all related to the upstream library. The
package compiles without any other issues and can be used.

Flavor: r-devel-windows-x86_64
Check: whether package can be installed, Result: WARNING
  Found the following significant warnings:
    ./sundials/sundials/sundials_hashmap.h:26:48: warning: conversion from
'long long unsigned int' to 'long unsigned int' changes value from
'14695981039346656037' to '2216829733' [-Woverflow]
    ./sundials/sundials/sundials_hashmap.h:27:48: warning: conversion from
'long long unsigned int' to 'long unsigned int' changes value from
'1099511628211' to '435' [-Woverflow]
    sundials/sundials/sundials_hashmap.h:26:48: warning: conversion from
'long long unsigned int' to 'long unsigned int' changes value from
'14695981039346656037' to '2216829733' [-Woverflow]
    sundials/sundials/sundials_hashmap.h:27:48: warning: conversion from
'long long unsigned int' to 'long unsigned int' changes value from
'1099511628211' to '435' [-Woverflow]
    sundials/sundials/sundials_profiler.c:71:24: warning: function
declaration isn't a prototype [-Wstrict-prototypes]
  See 'd:/RCompile/CRANincoming/R-devel/sundialr.Rcheck/00install.out' for
details.
  Used C++ compiler: 'g++.exe (GCC) 12.3.0'

Flavor: r-devel-linux-x86_64-debian-gcc
Check: whether package can be installed, Result: WARNING
  Found the following significant warnings:
    sundials/sundials/sundials_profiler.c:71:41: warning: a function
declaration without a prototype is deprecated in all versions of C
[-Wstrict-prototypes]
  See '/srv/hornik/tmp/CRAN/sundialr.Rcheck/00install.out' for details.
  Used C++ compiler: 'Debian clang version 17.0.6 (5)'

I am hesitant to change anything in the SUNDIALS library C code because I
don't understand the consequences of changing anything there.

Any help will be kindly appreciated.

Thank you.

	[[alternative HTML version deleted]]


From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Sat Feb  3 16:51:23 2024
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Sat, 03 Feb 2024 07:51:23 -0800
Subject: [R-pkg-devel] 
 Warnings from upstream C library in CRAN submission
In-Reply-To: <CAM3CqvLWwvjNFSo5yqOJK4hK75JRbSMpEHVt9v3MirHALuBUHQ@mail.gmail.com>
References: <CAM3CqvLWwvjNFSo5yqOJK4hK75JRbSMpEHVt9v3MirHALuBUHQ@mail.gmail.com>
Message-ID: <8A2C1756-E48D-43C9-B51F-1CB047F9FD73@dcn.davis.ca.us>

Type conversions are always a bit risky... this one appears to be likely to corrupt data. If they actually intended to truncate values like this then they should have cast explicitly.

Looks like you need to report this to the SUNDIALS maintainers.

On February 3, 2024 7:38:35 AM PST, Satyaprakash Nayak <sn248 at cornell.edu> wrote:
>Hi
>
>I had a package 'sundialr' which was archived from CRAN. It is an interface
>to some of the solvers in SUNDIALS ODE Solving library. I have fixed the
>issue which was related to emails being forwarded from the maintainer's
>email address.
>
>The repository code can be found at - https://github.com/sn248/sundialr
>
>I have updated the upstream library and now I am getting the following
>warnings from CRAN which are all related to the upstream library. The
>package compiles without any other issues and can be used.
>
>Flavor: r-devel-windows-x86_64
>Check: whether package can be installed, Result: WARNING
>  Found the following significant warnings:
>    ./sundials/sundials/sundials_hashmap.h:26:48: warning: conversion from
>'long long unsigned int' to 'long unsigned int' changes value from
>'14695981039346656037' to '2216829733' [-Woverflow]
>    ./sundials/sundials/sundials_hashmap.h:27:48: warning: conversion from
>'long long unsigned int' to 'long unsigned int' changes value from
>'1099511628211' to '435' [-Woverflow]
>    sundials/sundials/sundials_hashmap.h:26:48: warning: conversion from
>'long long unsigned int' to 'long unsigned int' changes value from
>'14695981039346656037' to '2216829733' [-Woverflow]
>    sundials/sundials/sundials_hashmap.h:27:48: warning: conversion from
>'long long unsigned int' to 'long unsigned int' changes value from
>'1099511628211' to '435' [-Woverflow]
>    sundials/sundials/sundials_profiler.c:71:24: warning: function
>declaration isn't a prototype [-Wstrict-prototypes]
>  See 'd:/RCompile/CRANincoming/R-devel/sundialr.Rcheck/00install.out' for
>details.
>  Used C++ compiler: 'g++.exe (GCC) 12.3.0'
>
>Flavor: r-devel-linux-x86_64-debian-gcc
>Check: whether package can be installed, Result: WARNING
>  Found the following significant warnings:
>    sundials/sundials/sundials_profiler.c:71:41: warning: a function
>declaration without a prototype is deprecated in all versions of C
>[-Wstrict-prototypes]
>  See '/srv/hornik/tmp/CRAN/sundialr.Rcheck/00install.out' for details.
>  Used C++ compiler: 'Debian clang version 17.0.6 (5)'
>
>I am hesitant to change anything in the SUNDIALS library C code because I
>don't understand the consequences of changing anything there.
>
>Any help will be kindly appreciated.
>
>Thank you.
>
>	[[alternative HTML version deleted]]
>
>______________________________________________
>R-package-devel at r-project.org mailing list
>https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
Sent from my phone. Please excuse my brevity.


From @|mon@urb@nek @end|ng |rom R-project@org  Sat Feb  3 22:52:56 2024
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Sun, 4 Feb 2024 10:52:56 +1300
Subject: [R-pkg-devel] 
 Warnings from upstream C library in CRAN submission
In-Reply-To: <CAM3CqvLWwvjNFSo5yqOJK4hK75JRbSMpEHVt9v3MirHALuBUHQ@mail.gmail.com>
References: <CAM3CqvLWwvjNFSo5yqOJK4hK75JRbSMpEHVt9v3MirHALuBUHQ@mail.gmail.com>
Message-ID: <F45FFE41-EF9C-4606-A0F7-84EF8F5055D5@R-project.org>

Satyaprakash,

those are clear bugs in the SUNDIALS library - they assume that "unsigned long" type is 64-bit wide (that assumption is also mentioned in the comments), but there is no such guarantee and on Windows it is only 32-bit wide, so the code has to be changed to replace "unsigned long" with the proper unsigned 64-bit type which is uint64_t. The code is simply wrong and won't work unless those issues are solved, so those are not just warnings but actual errors. It would be also prudent to check the rest of the code in the library for similar incorrect use of the "long" type where 64-bit use was intended.

Cheers,
Simon


> On Feb 4, 2024, at 4:38 AM, Satyaprakash Nayak <sn248 at cornell.edu> wrote:
> 
> Hi
> 
> I had a package 'sundialr' which was archived from CRAN. It is an interface
> to some of the solvers in SUNDIALS ODE Solving library. I have fixed the
> issue which was related to emails being forwarded from the maintainer's
> email address.
> 
> The repository code can be found at - https://github.com/sn248/sundialr
> 
> I have updated the upstream library and now I am getting the following
> warnings from CRAN which are all related to the upstream library. The
> package compiles without any other issues and can be used.
> 
> Flavor: r-devel-windows-x86_64
> Check: whether package can be installed, Result: WARNING
>  Found the following significant warnings:
>    ./sundials/sundials/sundials_hashmap.h:26:48: warning: conversion from
> 'long long unsigned int' to 'long unsigned int' changes value from
> '14695981039346656037' to '2216829733' [-Woverflow]
>    ./sundials/sundials/sundials_hashmap.h:27:48: warning: conversion from
> 'long long unsigned int' to 'long unsigned int' changes value from
> '1099511628211' to '435' [-Woverflow]
>    sundials/sundials/sundials_hashmap.h:26:48: warning: conversion from
> 'long long unsigned int' to 'long unsigned int' changes value from
> '14695981039346656037' to '2216829733' [-Woverflow]
>    sundials/sundials/sundials_hashmap.h:27:48: warning: conversion from
> 'long long unsigned int' to 'long unsigned int' changes value from
> '1099511628211' to '435' [-Woverflow]
>    sundials/sundials/sundials_profiler.c:71:24: warning: function
> declaration isn't a prototype [-Wstrict-prototypes]
>  See 'd:/RCompile/CRANincoming/R-devel/sundialr.Rcheck/00install.out' for
> details.
>  Used C++ compiler: 'g++.exe (GCC) 12.3.0'
> 
> Flavor: r-devel-linux-x86_64-debian-gcc
> Check: whether package can be installed, Result: WARNING
>  Found the following significant warnings:
>    sundials/sundials/sundials_profiler.c:71:41: warning: a function
> declaration without a prototype is deprecated in all versions of C
> [-Wstrict-prototypes]
>  See '/srv/hornik/tmp/CRAN/sundialr.Rcheck/00install.out' for details.
>  Used C++ compiler: 'Debian clang version 17.0.6 (5)'
> 
> I am hesitant to change anything in the SUNDIALS library C code because I
> don't understand the consequences of changing anything there.
> 
> Any help will be kindly appreciated.
> 
> Thank you.
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 


From @n248 @end|ng |rom corne||@edu  Sun Feb  4 19:58:09 2024
From: @n248 @end|ng |rom corne||@edu (Satyaprakash Nayak)
Date: Sun, 4 Feb 2024 13:58:09 -0500
Subject: [R-pkg-devel] 
 Warnings from upstream C library in CRAN submission
In-Reply-To: <CAM3CqvLWwvjNFSo5yqOJK4hK75JRbSMpEHVt9v3MirHALuBUHQ@mail.gmail.com>
References: <CAM3CqvLWwvjNFSo5yqOJK4hK75JRbSMpEHVt9v3MirHALuBUHQ@mail.gmail.com>
Message-ID: <CAM3CqvK4fXVkNhsXT3KjEHtNMmZ0NLda26suw1bi2eSeAA3dkA@mail.gmail.com>

Thank you Jeff and Simon for your feedback.

I have filed your feedback as an issue to the SUNDIALS developers at  -
https://github.com/LLNL/sundials/issues/409

Thank you.

On Sat, Feb 3, 2024 at 10:38?AM Satyaprakash Nayak <sn248 at cornell.edu>
wrote:

> Hi
>
> I had a package 'sundialr' which was archived from CRAN. It is an interface
> to some of the solvers in SUNDIALS ODE Solving library. I have fixed the
> issue which was related to emails being forwarded from the maintainer's
> email address.
>
> The repository code can be found at - https://github.com/sn248/sundialr
>
> I have updated the upstream library and now I am getting the following
> warnings from CRAN which are all related to the upstream library. The
> package compiles without any other issues and can be used.
>
> Flavor: r-devel-windows-x86_64
> Check: whether package can be installed, Result: WARNING
>   Found the following significant warnings:
>     ./sundials/sundials/sundials_hashmap.h:26:48: warning: conversion from
> 'long long unsigned int' to 'long unsigned int' changes value from
> '14695981039346656037' to '2216829733' [-Woverflow]
>     ./sundials/sundials/sundials_hashmap.h:27:48: warning: conversion from
> 'long long unsigned int' to 'long unsigned int' changes value from
> '1099511628211' to '435' [-Woverflow]
>     sundials/sundials/sundials_hashmap.h:26:48: warning: conversion from
> 'long long unsigned int' to 'long unsigned int' changes value from
> '14695981039346656037' to '2216829733' [-Woverflow]
>     sundials/sundials/sundials_hashmap.h:27:48: warning: conversion from
> 'long long unsigned int' to 'long unsigned int' changes value from
> '1099511628211' to '435' [-Woverflow]
>     sundials/sundials/sundials_profiler.c:71:24: warning: function
> declaration isn't a prototype [-Wstrict-prototypes]
>   See 'd:/RCompile/CRANincoming/R-devel/sundialr.Rcheck/00install.out' for
> details.
>   Used C++ compiler: 'g++.exe (GCC) 12.3.0'
>
> Flavor: r-devel-linux-x86_64-debian-gcc
> Check: whether package can be installed, Result: WARNING
>   Found the following significant warnings:
>     sundials/sundials/sundials_profiler.c:71:41: warning: a function
> declaration without a prototype is deprecated in all versions of C
> [-Wstrict-prototypes]
>   See '/srv/hornik/tmp/CRAN/sundialr.Rcheck/00install.out' for details.
>   Used C++ compiler: 'Debian clang version 17.0.6 (5)'
>
> I am hesitant to change anything in the SUNDIALS library C code because I
> don't understand the consequences of changing anything there.
>
> Any help will be kindly appreciated.
>
> Thank you.
>

	[[alternative HTML version deleted]]


From |kry|ov @end|ng |rom d|@root@org  Mon Feb  5 20:42:48 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Mon, 5 Feb 2024 22:42:48 +0300
Subject: [R-pkg-devel] Bioconductor reverse dependency checks for a CRAN
 package
In-Reply-To: <26041.9380.865238.237313@rob.eddelbuettel.com>
References: <20240130185628.347bbaee@arachnoid>
 <26041.9380.865238.237313@rob.eddelbuettel.com>
Message-ID: <20240205224248.3e9dec02@Tarkus>

Dear Dirk,

Thank you very much for your help here and over on GitHub!

I have finally managed to get the reverse dependency checks working. It
took some additional disk space and a few more system dependencies. If
not for r2u, I would have been stuck for much longer. I really
appreciate the work that went into packaging all these R packages.

On Tue, 30 Jan 2024 10:32:36 -0600
Dirk Eddelbuettel <edd at debian.org> wrote:

> For what it is worth, my own go-to for many years has been a VM in
> which I install 'all packages needed' for the rev.dep to be checked.

This approach seems to be working for me, too. I had initially hoped to
set something up using CI infrastructure, but there's too many
dependencies to install in a prepare step and it's too much work to
make a container image with all dependencies anew every time I want to
run a reverse dependency check. Easier to just let it run overnight on
a spare computer.

> Well a few of us maintain packages with quite a tail and cope. Rcpp
> has 2700, RcppArmadillo have over 100, BH a few hundred. These aren't
> 'light'.

Maintaining a top-5 CRAN package by in-degree rank
[10.32614/RJ-2023-060] is indeed a very serious responsibility. 

> I wrote myself the `prrd` package (on CRAN) for this, others have
> other tools -- Team data.table managed to release 1.5.0 to CRAN today
> too. So this clearly is possible.

I'll check out `prrd` next, thanks. tools::check_packages_in_dir is
nice, but it could be faster if I could disable mc.preschedule. 

-- 
Best regards,
Ivan


From |kry|ov @end|ng |rom d|@root@org  Mon Feb  5 20:47:55 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Mon, 5 Feb 2024 22:47:55 +0300
Subject: [R-pkg-devel] Bioconductor reverse dependency checks for a CRAN
 package
In-Reply-To: <DS7PR10MB72772BE31259003B9625B283FA7D2@DS7PR10MB7277.namprd10.prod.outlook.com>
References: <20240130185628.347bbaee@arachnoid>
 <DS7PR10MB72772BE31259003B9625B283FA7D2@DS7PR10MB7277.namprd10.prod.outlook.com>
Message-ID: <20240205224551.0304cb8c@Tarkus>

On Tue, 30 Jan 2024 16:24:40 +0000
Martin Morgan <mtmorgan.xyz at gmail.com> wrote:

> BiocManager (the recommended way to install Bioconductor packages) at
> the end of the day does essentially install.packages(repos =
> BiocManager::repositories()), ensuring that the right versions of
> Bioconductor packages are installed for the version of R in use.

That's great to know, thanks! I think I will use BiocManager::install
for now, both because it uses the correct repositories and because it
doesn't forcibly reinstall the packages I am asking for. With bspm, I
can run BiocManager::install(all_the_dependencies) and have the system
perform the least amount of work required to reach the desired state.

-- 
Best regards,
Ivan


From |kry|ov @end|ng |rom d|@root@org  Mon Feb  5 21:19:31 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Mon, 5 Feb 2024 23:19:31 +0300
Subject: [R-pkg-devel] Bioconductor reverse dependency checks for a CRAN
 package
In-Reply-To: <LO0P265MB6325302A53C8AC7779673481AE7D2@LO0P265MB6325.GBRP265.PROD.OUTLOOK.COM>
References: <20240130185628.347bbaee@arachnoid>
 <51003fa4-f72e-4073-976b-74fe38f63978@gmail.com>
 <CAA-ibayfuo+-3J_GSAinVOGvsoGbMM-k2DMZoHZ1iMu1O6f3NA@mail.gmail.com>
 <LO0P265MB6325302A53C8AC7779673481AE7D2@LO0P265MB6325.GBRP265.PROD.OUTLOOK.COM>
Message-ID: <20240205231931.44f1f7e8@Tarkus>

Thank you Georgi Boshnakov, Ben Bolker, and Diego Hernang?mez Herrero
for introducing me to `revdepcheck`!

On Tue, 30 Jan 2024 12:38:57 -0500
Ben Bolker <bbolker at gmail.com> wrote:

> I have had a few issues with it 
> <https://github.com/r-lib/revdepcheck/issues/330> but overall it's
> been very helpful.

Indeed that looks perplexing. Writable .Library can also cause problems
for people running R-svn built in their home directories without
R_LIBS_USER set when they check their packages without Suggests.
I'm also relying on .Library.site for the dependencies of the reverse
dependencies. So far, my setup seems to be working as intended, but I'll
keep this issue in mind.

On Tue, 30 Jan 2024 18:57:41 +0100
Diego Hernang?mez Herrero <diego.hernangomezherrero at gmail.com> wrote:

> Haven?t tried with a package with such an amount of revdeps, but my
> approach is revdepcheck in GH actions and commiting the result to the
> repo (that is somehow similar to the docker approach if you host the
> package in GitHub).

Great to know that reverse dependency checks can run in CI! I think
I'll keep a stateful virtual machine for now, because otherwise I would
need to find space for 4 to 32 gigabytes of cache somewhere (or download
everything from the repository mirrors every time).

-- 
Best regards,
Ivan


From |kry|ov @end|ng |rom d|@root@org  Tue Feb  6 08:37:35 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Tue, 6 Feb 2024 10:37:35 +0300
Subject: [R-pkg-devel] new maintainer for CRAN package XML
In-Reply-To: <f6c68c43-54d1-4dde-a394-cc0263457133@statistik.tu-dortmund.de>
References: <f6c68c43-54d1-4dde-a394-cc0263457133@statistik.tu-dortmund.de>
Message-ID: <20240206103735.21fe6875@Tarkus>

Dear Uwe Ligges,

On Mon, 22 Jan 2024 15:50:44 +0100
Uwe Ligges <ligges at statistik.tu-dortmund.de> wrote:

> So we are looking for a person volunteering to take over 'XML'.
> Please let us know if you are interested.

Unless someone else has been discussing this with CRAN in private or
had a package depending on XML and was planning to step up but forgot,
I would like to volunteer.

I'm assuming that the Omegahat page is best preserved in its current
form for historical reasons, so instead I have prepared a Git
repository and a page with an option to file issues on the Codeberg
forge: https://codeberg.org/aitap/XML

With the help of the amazing list members, I have also set up a virtual
machine to run the reverse dependency checks, so it should be possible
to avoid immediate breakage if I have to make any changes.

That's the theory, at least.

(Also, thank you for your reply to my question!)

-- 
Best regards,
Ivan


From v|ncentv@nhee@ @end|ng |rom gm@||@com  Tue Feb  6 18:27:32 2024
From: v|ncentv@nhee@ @end|ng |rom gm@||@com (Vincent van Hees)
Date: Tue, 6 Feb 2024 18:27:32 +0100
Subject: [R-pkg-devel] r-oldrel-linux- not in CRAN checks?
Message-ID: <CALnEB15-U1KNKhPdiNYJi8182kGM2hm2JR8uBSmF=Nn_UGQKLw@mail.gmail.com>

Hello,

I noticed that there is no r-oldrel-linux-x86_64... on the CRAN
package results page. Does this mean that CRAN checks no longer run on
old Debian releases?

The reason for asking this is that I am struggling to install Rfast on
Ubuntu 18, which made me wonder whether CRAN/R community no longer
support Ubuntu 18? For details see:
https://github.com/RfastOfficial/Rfast/issues/99

Thanks,

Vincent


From |kry|ov @end|ng |rom d|@root@org  Tue Feb  6 21:34:37 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Tue, 6 Feb 2024 23:34:37 +0300
Subject: [R-pkg-devel] r-oldrel-linux- not in CRAN checks?
In-Reply-To: <CALnEB15-U1KNKhPdiNYJi8182kGM2hm2JR8uBSmF=Nn_UGQKLw@mail.gmail.com>
References: <CALnEB15-U1KNKhPdiNYJi8182kGM2hm2JR8uBSmF=Nn_UGQKLw@mail.gmail.com>
Message-ID: <20240206233437.30bf182b@Tarkus>

? Tue, 6 Feb 2024 18:27:32 +0100
Vincent van Hees <vincentvanhees at gmail.com> ?????:

> For details see:
> https://github.com/RfastOfficial/Rfast/issues/99

GitHub processed your plain text description of the problem as if it
was Markdown and among other things ate the text that used to be there
between angle brackets:

>     #include
>              ^~~~~~~~~~~

By digging through the raw source code of the issue at
https://api.github.com/repos/RfastOfficial/Rfast/issues/99 it is
possible to find out which header was missing for Rfast:

> ../inst/include/Rfast/parallel.h:20:10:fatal error: tion: No such
> file or directory
>     #include <execution>
>              ^~~~~~~~~~~
>    compilation terminated.

Indeed, <execution> is a C++17 header [1]. While g++ version
7.5.0-3ubuntu1~18.04 seems to accept --std=c++17 without complaint, its
libstdc++-7-dev package is missing this header. Moreover, there's still
no <execution> in libstdc++-8-dev. I think that you need libstdc++-9
for that to work, which is not in Bionic; older versions aren't
C++17-compliant enough to compile Rfast, and C++17 is listed in the
SystemRequirements of the package.

Installing clang-10 and editing Makeconf to use clang++-10 instead of
g++ seems to let the compilation proceed. In order to successfully link
the resulting shared object, I also had to edit Makeconf to specify
-L/usr/lib/gcc/x86_64-linux-gnu/7 when linking -lgfortran.

If you plan to use this in production, be very careful. I don't know
about binary compatibility guarantees between g++-7 and clang++-10, so
you might have to recompile every C++-using R package from source with
clang++-10 in order to avoid hard-to-debug problems when using them
together. (It might also work fine. That's the worst thing about such
problems.)

-- 
Best regards,
Ivan

[1] https://en.cppreference.com/w/cpp/header/execution


From v|ncentv@nhee@ @end|ng |rom gm@||@com  Wed Feb  7 09:15:48 2024
From: v|ncentv@nhee@ @end|ng |rom gm@||@com (Vincent van Hees)
Date: Wed, 7 Feb 2024 09:15:48 +0100
Subject: [R-pkg-devel] r-oldrel-linux- not in CRAN checks?
In-Reply-To: <20240206233437.30bf182b@Tarkus>
References: <CALnEB15-U1KNKhPdiNYJi8182kGM2hm2JR8uBSmF=Nn_UGQKLw@mail.gmail.com>
 <20240206233437.30bf182b@Tarkus>
Message-ID: <CALnEB15t3OzUi1j+7Fp-o6Er_2rKrXrnKvuWeLayB1J5xBZEYg@mail.gmail.com>

Thanks Ivan, In that case I will conclude that it is time to upgrade my
Ubuntu 18 machine. I just wasn't sure whether there is still a need for
keeping my own package Ubuntu 18 compatible, but if dependencies like Rfast
do not do it and if it is even not in the CRAN checks anymore then there is
also limited value in me making the effort.

I have now fixed the message formatting in that issue just in case Rfast
maintainers want to have a look at it.

Vincent

Op di 6 feb. 2024 21:34 schreef Ivan Krylov <ikrylov at disroot.org>:

> ? Tue, 6 Feb 2024 18:27:32 +0100
> Vincent van Hees <vincentvanhees at gmail.com> ?????:
>
> > For details see:
> > https://github.com/RfastOfficial/Rfast/issues/99
>
> GitHub processed your plain text description of the problem as if it
> was Markdown and among other things ate the text that used to be there
> between angle brackets:
>
> >     #include
> >              ^~~~~~~~~~~
>
> By digging through the raw source code of the issue at
> https://api.github.com/repos/RfastOfficial/Rfast/issues/99 it is
> possible to find out which header was missing for Rfast:
>
> > ../inst/include/Rfast/parallel.h:20:10:fatal error: tion: No such
> > file or directory
> >     #include <execution>
> >              ^~~~~~~~~~~
> >    compilation terminated.
>
> Indeed, <execution> is a C++17 header [1]. While g++ version
> 7.5.0-3ubuntu1~18.04 seems to accept --std=c++17 without complaint, its
> libstdc++-7-dev package is missing this header. Moreover, there's still
> no <execution> in libstdc++-8-dev. I think that you need libstdc++-9
> for that to work, which is not in Bionic; older versions aren't
> C++17-compliant enough to compile Rfast, and C++17 is listed in the
> SystemRequirements of the package.
>
> Installing clang-10 and editing Makeconf to use clang++-10 instead of
> g++ seems to let the compilation proceed. In order to successfully link
> the resulting shared object, I also had to edit Makeconf to specify
> -L/usr/lib/gcc/x86_64-linux-gnu/7 when linking -lgfortran.
>
> If you plan to use this in production, be very careful. I don't know
> about binary compatibility guarantees between g++-7 and clang++-10, so
> you might have to recompile every C++-using R package from source with
> clang++-10 in order to avoid hard-to-debug problems when using them
> together. (It might also work fine. That's the worst thing about such
> problems.)
>
> --
> Best regards,
> Ivan
>
> [1] https://en.cppreference.com/w/cpp/header/execution
>

	[[alternative HTML version deleted]]


From edd @end|ng |rom deb|@n@org  Wed Feb  7 12:56:05 2024
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Wed, 7 Feb 2024 05:56:05 -0600
Subject: [R-pkg-devel] r-oldrel-linux- not in CRAN checks?
In-Reply-To: <CALnEB15t3OzUi1j+7Fp-o6Er_2rKrXrnKvuWeLayB1J5xBZEYg@mail.gmail.com>
References: <CALnEB15-U1KNKhPdiNYJi8182kGM2hm2JR8uBSmF=Nn_UGQKLw@mail.gmail.com>
 <20240206233437.30bf182b@Tarkus>
 <CALnEB15t3OzUi1j+7Fp-o6Er_2rKrXrnKvuWeLayB1J5xBZEYg@mail.gmail.com>
Message-ID: <26051.28629.413313.133095@rob.eddelbuettel.com>


On 7 February 2024 at 09:15, Vincent van Hees wrote:
| Thanks Ivan, In that case I will conclude that it is time to upgrade my
| Ubuntu 18 machine. I just wasn't sure whether there is still a need for
| keeping my own package Ubuntu 18 compatible, but if dependencies like Rfast
| do not do it and if it is even not in the CRAN checks anymore then there is
| also limited value in me making the effort.

I think that is a good conclusion.  A few more observations:

- for #r2u I package / build all of CRAN for Ubuntu (both 20.04 and 22.04),
  there are a handful of CRAN packages I cannot build on Ubuntu 20.04 (!!!)
  because they use C++20 which the default compiler on 20.04 does not support

- in my dayjob (also behind one large CRAN package I maintain) we had to move
  all CI jobs from 20.04 to 22.04 for the same reason. I think this will me
  more, not less, common.

- your premise in your initial email was not quite supported by either
  "Writing R Extensions" nor the "CRAN Repository Policy": Neither stipulates
  a minimum 'old' environment.

FWIW I am a fairly happy camper with 22.04 for deployment, 23.10 for my use
and will likely move to 22.04 fairly soon this summer after it is released.

Cheers, Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From m@rc|njurek1988 @end|ng |rom gm@||@com  Wed Feb  7 15:40:44 2024
From: m@rc|njurek1988 @end|ng |rom gm@||@com (Marcin Jurek)
Date: Wed, 7 Feb 2024 08:40:44 -0600
Subject: [R-pkg-devel] failing CRAN checks due to problems with dependencies
Message-ID: <CAKpFkB0ebZnhNbk2qaVOXW3Sny+V1NAs4fE6VA9hWDO==SrXBg@mail.gmail.com>

Dear community,

I've been trying to submit an update to my GPvecchia package recently. This
morning I was notified that my package didn't pass incoming checks. When I
looked at the log this was the problem:

* checking package dependencies ... ERROR
Packages required but not available: 'sparseinv', 'GpGp'* checking
package dependencies ... ERROR

Packages required but not available: 'sparseinv', 'GpGp'

Like my package, these have been on CRAN for a while now and still seem to
be. However they both report an error in their respective CRAN checks, but
it's a weird one.

This is taken from GpGp checks but it's similar for sparseinv:

Result: ERROR  Packages required but not available: 'Rcpp', 'FNN',
'RcppArmadillo' Packages suggested but not available for checking:
'fields', 'rmarkdown', 'testthat', 'maptools' See section ?The DESCRIPTION
file? in the ?Writing R Extensions?

I'm not sure how to proceed. I know the maintainer of the GpGp package but
I'm not sure what to alert him to if Rcpp does not work.

I really appreciate your help.

Marcin

	[[alternative HTML version deleted]]


From d@v|dhughjone@ @end|ng |rom gm@||@com  Thu Feb  8 10:24:09 2024
From: d@v|dhughjone@ @end|ng |rom gm@||@com (David Hugh-Jones)
Date: Thu, 8 Feb 2024 09:24:09 +0000
Subject: [R-pkg-devel] Package failing reverse dependency checks
Message-ID: <CAARY7kgUtrKJh9ukw_iCv7DMY3+9Mdyq+D3NO0366M_fnsZjXA@mail.gmail.com>

Hi all,

I'm trying to upload a new version of my "huxtable" package. It is
currently failing reverse dependency checks for two packages (homnormal and
RSStest). The relevant failures are below.

I got this failure one time, and fixed the problem, which relates to
mistakenly relying on the Suggested: knitr package (see here for the
commit: https://github.com/hughjonesd/huxtable/commit/5a3edc). After the
commit, reverse dependency checks for homnormal and RSStest pass on my
machine, when testing either with revdepcheck::revdep_check or
tools::check_packages_in_dir, and even when knitr is not installed. But,
after I uploaded the new package to CRAN, the same failure recurred.

My new release candidate had the same version number as the previous one
(which had failed the revdep check, and therefore not been published on
CRAN). Is it possible that CRAN just tested the old version again?

If not, then can anyone suggest the best way to debug a revdep check on as
close a setup to the CRAN machines as possible?

Cheers,
David

Git tag for the last CRAN submission:
https://github.com/hughjonesd/huxtable/releases/tag/v5.5.4-rc3

Info from the CRAN email:
--
Debian: <
https://win-builder.r-project.org/incoming_pretest/huxtable_5.5.4_20240205_164815/reverseDependencies/summary.txt
>
RSStest, homnormal

Log dir: <
https://win-builder.r-project.org/incoming_pretest/huxtable_5.5.4_20240205_164815/
>
The files will be removed after roughly 7 days.

Pretests:
Windows: <
https://win-builder.r-project.org/incoming_pretest/huxtable_5.5.4_20240205_164815/Windows/00check.log
>
Debian: <
https://win-builder.r-project.org/incoming_pretest/huxtable_5.5.4_20240205_164815/Debian/00check.log
>
--
Changes to worse in reverse depends:

Package: homnormal
Check: examples
New result: ERROR
  Running examples in ?homnormal-Ex.R? failed
  The error most likely occurred in:

  > base::assign(".ptime", proc.time(), pos = "CheckExEnv")
  > ### Name: Brown_Forsythe
  > ### Title: Brown-Forsythe Test for Homogeniety
  > ### Aliases: Brown_Forsythe
  >
  > ### ** Examples
  >
  >     data(FH_data)
  >    x1=FH_data$SurvivalTime
  >    x2=FH_data$HospitalNo
  >    Brown_Forsythe(x1,x2)
  Error in loadNamespace(x) : there is no package called ?knitr?
  Calls: Brown_Forsythe ... loadNamespace -> withRestarts -> withOneRestart
-> doWithOneRestart
  Execution halted

Package: RSStest
Check: examples
New result: ERROR
  Running examples in ?RSStest-Ex.R? failed
  The error most likely occurred in:

  > base::assign(".ptime", proc.time(), pos = "CheckExEnv")
  > ### Name: teststat_MRSS
  > ### Title: Median Ranked Set Sampling Test
  > ### Aliases: teststat_MRSS
  >
  > ### ** Examples
  >
  > x1=matrix(c(1,2.3, 3.4,4.5,5.6,4 ),nrow=3)
  > x2=matrix(c(2,3.2, 4.2,6.5,4.6,6 ),nrow=3)
  > teststat_MRSS(x1,x2,tn=1000)
  Error in loadNamespace(x) : there is no package called ?knitr?
  Calls: teststat_MRSS ... loadNamespace -> withRestarts -> withOneRestart
-> doWithOneRestart
  Execution halted

	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu Feb  8 11:23:43 2024
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 8 Feb 2024 05:23:43 -0500
Subject: [R-pkg-devel] Package failing reverse dependency checks
In-Reply-To: <CAARY7kgUtrKJh9ukw_iCv7DMY3+9Mdyq+D3NO0366M_fnsZjXA@mail.gmail.com>
References: <CAARY7kgUtrKJh9ukw_iCv7DMY3+9Mdyq+D3NO0366M_fnsZjXA@mail.gmail.com>
Message-ID: <54fb6fc3-4ac4-45a0-a683-4dd9a866c28f@gmail.com>

On 08/02/2024 4:24 a.m., David Hugh-Jones wrote:
> Hi all,
> 
> I'm trying to upload a new version of my "huxtable" package. It is
> currently failing reverse dependency checks for two packages (homnormal and
> RSStest). The relevant failures are below.
> 
> I got this failure one time, and fixed the problem, which relates to
> mistakenly relying on the Suggested: knitr package (see here for the
> commit: https://github.com/hughjonesd/huxtable/commit/5a3edc). After the
> commit, reverse dependency checks for homnormal and RSStest pass on my
> machine, when testing either with revdepcheck::revdep_check or
> tools::check_packages_in_dir, and even when knitr is not installed. But,
> after I uploaded the new package to CRAN, the same failure recurred.
> 
> My new release candidate had the same version number as the previous one
> (which had failed the revdep check, and therefore not been published on
> CRAN). Is it possible that CRAN just tested the old version again?

The CRAN policy on re-submission says "Increasing the version number at 
each submission reduces confusion so is preferred even when a previous 
submission was not accepted."

So yes, I think confusion with the previous submission could have happened.

Duncan Murdoch

> 
> If not, then can anyone suggest the best way to debug a revdep check on as
> close a setup to the CRAN machines as possible?
> 
> Cheers,
> David
> 
> Git tag for the last CRAN submission:
> https://github.com/hughjonesd/huxtable/releases/tag/v5.5.4-rc3
> 
> Info from the CRAN email:
> --
> Debian: <
> https://win-builder.r-project.org/incoming_pretest/huxtable_5.5.4_20240205_164815/reverseDependencies/summary.txt
>>
> RSStest, homnormal
> 
> Log dir: <
> https://win-builder.r-project.org/incoming_pretest/huxtable_5.5.4_20240205_164815/
>>
> The files will be removed after roughly 7 days.
> 
> Pretests:
> Windows: <
> https://win-builder.r-project.org/incoming_pretest/huxtable_5.5.4_20240205_164815/Windows/00check.log
>>
> Debian: <
> https://win-builder.r-project.org/incoming_pretest/huxtable_5.5.4_20240205_164815/Debian/00check.log
>>
> --
> Changes to worse in reverse depends:
> 
> Package: homnormal
> Check: examples
> New result: ERROR
>    Running examples in ?homnormal-Ex.R? failed
>    The error most likely occurred in:
> 
>    > base::assign(".ptime", proc.time(), pos = "CheckExEnv")
>    > ### Name: Brown_Forsythe
>    > ### Title: Brown-Forsythe Test for Homogeniety
>    > ### Aliases: Brown_Forsythe
>    >
>    > ### ** Examples
>    >
>    >     data(FH_data)
>    >    x1=FH_data$SurvivalTime
>    >    x2=FH_data$HospitalNo
>    >    Brown_Forsythe(x1,x2)
>    Error in loadNamespace(x) : there is no package called ?knitr?
>    Calls: Brown_Forsythe ... loadNamespace -> withRestarts -> withOneRestart
> -> doWithOneRestart
>    Execution halted
> 
> Package: RSStest
> Check: examples
> New result: ERROR
>    Running examples in ?RSStest-Ex.R? failed
>    The error most likely occurred in:
> 
>    > base::assign(".ptime", proc.time(), pos = "CheckExEnv")
>    > ### Name: teststat_MRSS
>    > ### Title: Median Ranked Set Sampling Test
>    > ### Aliases: teststat_MRSS
>    >
>    > ### ** Examples
>    >
>    > x1=matrix(c(1,2.3, 3.4,4.5,5.6,4 ),nrow=3)
>    > x2=matrix(c(2,3.2, 4.2,6.5,4.6,6 ),nrow=3)
>    > teststat_MRSS(x1,x2,tn=1000)
>    Error in loadNamespace(x) : there is no package called ?knitr?
>    Calls: teststat_MRSS ... loadNamespace -> withRestarts -> withOneRestart
> -> doWithOneRestart
>    Execution halted
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From ||u|@@rev|||@ @end|ng |rom gm@||@com  Thu Feb  8 11:26:15 2024
From: ||u|@@rev|||@ @end|ng |rom gm@||@com (=?UTF-8?Q?Llu=C3=ADs_Revilla?=)
Date: Thu, 8 Feb 2024 11:26:15 +0100
Subject: [R-pkg-devel] Package failing reverse dependency checks
In-Reply-To: <CAARY7kgUtrKJh9ukw_iCv7DMY3+9Mdyq+D3NO0366M_fnsZjXA@mail.gmail.com>
References: <CAARY7kgUtrKJh9ukw_iCv7DMY3+9Mdyq+D3NO0366M_fnsZjXA@mail.gmail.com>
Message-ID: <CAN+W6_tZKEYWdkT4Ro+HReHykBO5Pw_7+OP=cCNQ87Y1rex24g@mail.gmail.com>

Hi David,

If you didn't increase the version number it could happen that the old
version of the package was used (as CRAN might not be aware that there is a
new version).
The CRAN repository policy says: "Increasing the version number at each
submission reduces confusion so is preferred even when a previous
submission was not accepted".
In addition, it is easier to track how smooth the submission process is for
maintainers/developers.

I would recommend submitting again, changing the version number of the
package.
Checking on  win builders and macos builders CRAN provides is the closest
one, other approaches include rhub2.

Best,

Llu?s



On Thu, 8 Feb 2024 at 10:24, David Hugh-Jones <davidhughjones at gmail.com>
wrote:

> Hi all,
>
> I'm trying to upload a new version of my "huxtable" package. It is
> currently failing reverse dependency checks for two packages (homnormal and
> RSStest). The relevant failures are below.
>
> I got this failure one time, and fixed the problem, which relates to
> mistakenly relying on the Suggested: knitr package (see here for the
> commit: https://github.com/hughjonesd/huxtable/commit/5a3edc). After the
> commit, reverse dependency checks for homnormal and RSStest pass on my
> machine, when testing either with revdepcheck::revdep_check or
> tools::check_packages_in_dir, and even when knitr is not installed. But,
> after I uploaded the new package to CRAN, the same failure recurred.
>
> My new release candidate had the same version number as the previous one
> (which had failed the revdep check, and therefore not been published on
> CRAN). Is it possible that CRAN just tested the old version again?
>
> If not, then can anyone suggest the best way to debug a revdep check on as
> close a setup to the CRAN machines as possible?
>
> Cheers,
> David
>
> Git tag for the last CRAN submission:
> https://github.com/hughjonesd/huxtable/releases/tag/v5.5.4-rc3
>
> Info from the CRAN email:
> --
> Debian: <
>
> https://win-builder.r-project.org/incoming_pretest/huxtable_5.5.4_20240205_164815/reverseDependencies/summary.txt
> >
> RSStest, homnormal
>
> Log dir: <
>
> https://win-builder.r-project.org/incoming_pretest/huxtable_5.5.4_20240205_164815/
> >
> The files will be removed after roughly 7 days.
>
> Pretests:
> Windows: <
>
> https://win-builder.r-project.org/incoming_pretest/huxtable_5.5.4_20240205_164815/Windows/00check.log
> >
> Debian: <
>
> https://win-builder.r-project.org/incoming_pretest/huxtable_5.5.4_20240205_164815/Debian/00check.log
> >
> --
> Changes to worse in reverse depends:
>
> Package: homnormal
> Check: examples
> New result: ERROR
>   Running examples in ?homnormal-Ex.R? failed
>   The error most likely occurred in:
>
>   > base::assign(".ptime", proc.time(), pos = "CheckExEnv")
>   > ### Name: Brown_Forsythe
>   > ### Title: Brown-Forsythe Test for Homogeniety
>   > ### Aliases: Brown_Forsythe
>   >
>   > ### ** Examples
>   >
>   >     data(FH_data)
>   >    x1=FH_data$SurvivalTime
>   >    x2=FH_data$HospitalNo
>   >    Brown_Forsythe(x1,x2)
>   Error in loadNamespace(x) : there is no package called ?knitr?
>   Calls: Brown_Forsythe ... loadNamespace -> withRestarts -> withOneRestart
> -> doWithOneRestart
>   Execution halted
>
> Package: RSStest
> Check: examples
> New result: ERROR
>   Running examples in ?RSStest-Ex.R? failed
>   The error most likely occurred in:
>
>   > base::assign(".ptime", proc.time(), pos = "CheckExEnv")
>   > ### Name: teststat_MRSS
>   > ### Title: Median Ranked Set Sampling Test
>   > ### Aliases: teststat_MRSS
>   >
>   > ### ** Examples
>   >
>   > x1=matrix(c(1,2.3, 3.4,4.5,5.6,4 ),nrow=3)
>   > x2=matrix(c(2,3.2, 4.2,6.5,4.6,6 ),nrow=3)
>   > teststat_MRSS(x1,x2,tn=1000)
>   Error in loadNamespace(x) : there is no package called ?knitr?
>   Calls: teststat_MRSS ... loadNamespace -> withRestarts -> withOneRestart
> -> doWithOneRestart
>   Execution halted
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From d@v|dhughjone@ @end|ng |rom gm@||@com  Thu Feb  8 13:52:32 2024
From: d@v|dhughjone@ @end|ng |rom gm@||@com (David Hugh-Jones)
Date: Thu, 8 Feb 2024 12:52:32 +0000
Subject: [R-pkg-devel] Package failing reverse dependency checks
In-Reply-To: <CAN+W6_tZKEYWdkT4Ro+HReHykBO5Pw_7+OP=cCNQ87Y1rex24g@mail.gmail.com>
References: <CAARY7kgUtrKJh9ukw_iCv7DMY3+9Mdyq+D3NO0366M_fnsZjXA@mail.gmail.com>
 <CAN+W6_tZKEYWdkT4Ro+HReHykBO5Pw_7+OP=cCNQ87Y1rex24g@mail.gmail.com>
Message-ID: <CAARY7kjhTobag34rsZfn0yPPVEJK4US45GO2FegQZxrPguseMA@mail.gmail.com>

Thanks for this tip. Out of interest, is there a way to make win/Mac
builder run revdep checks?

Writing: wyclif.substack.com
Book: www.wyclifsdust.com


On Thu, 8 Feb 2024 at 10:26, Llu?s Revilla <lluis.revilla at gmail.com> wrote:

> Hi David,
>
> If you didn't increase the version number it could happen that the old
> version of the package was used (as CRAN might not be aware that there is a
> new version).
> The CRAN repository policy says: "Increasing the version number at each
> submission reduces confusion so is preferred even when a previous
> submission was not accepted".
> In addition, it is easier to track how smooth the submission process is
> for maintainers/developers.
>
> I would recommend submitting again, changing the version number of the
> package.
> Checking on  win builders and macos builders CRAN provides is the closest
> one, other approaches include rhub2.
>
> Best,
>
> Llu?s
>
>
>
> On Thu, 8 Feb 2024 at 10:24, David Hugh-Jones <davidhughjones at gmail.com>
> wrote:
>
>> Hi all,
>>
>> I'm trying to upload a new version of my "huxtable" package. It is
>> currently failing reverse dependency checks for two packages (homnormal
>> and
>> RSStest). The relevant failures are below.
>>
>> I got this failure one time, and fixed the problem, which relates to
>> mistakenly relying on the Suggested: knitr package (see here for the
>> commit: https://github.com/hughjonesd/huxtable/commit/5a3edc). After the
>> commit, reverse dependency checks for homnormal and RSStest pass on my
>> machine, when testing either with revdepcheck::revdep_check or
>> tools::check_packages_in_dir, and even when knitr is not installed. But,
>> after I uploaded the new package to CRAN, the same failure recurred.
>>
>> My new release candidate had the same version number as the previous one
>> (which had failed the revdep check, and therefore not been published on
>> CRAN). Is it possible that CRAN just tested the old version again?
>>
>> If not, then can anyone suggest the best way to debug a revdep check on as
>> close a setup to the CRAN machines as possible?
>>
>> Cheers,
>> David
>>
>> Git tag for the last CRAN submission:
>> https://github.com/hughjonesd/huxtable/releases/tag/v5.5.4-rc3
>>
>> Info from the CRAN email:
>> --
>> Debian: <
>>
>> https://win-builder.r-project.org/incoming_pretest/huxtable_5.5.4_20240205_164815/reverseDependencies/summary.txt
>> >
>> RSStest, homnormal
>>
>> Log dir: <
>>
>> https://win-builder.r-project.org/incoming_pretest/huxtable_5.5.4_20240205_164815/
>> >
>> The files will be removed after roughly 7 days.
>>
>> Pretests:
>> Windows: <
>>
>> https://win-builder.r-project.org/incoming_pretest/huxtable_5.5.4_20240205_164815/Windows/00check.log
>> >
>> Debian: <
>>
>> https://win-builder.r-project.org/incoming_pretest/huxtable_5.5.4_20240205_164815/Debian/00check.log
>> >
>> --
>> Changes to worse in reverse depends:
>>
>> Package: homnormal
>> Check: examples
>> New result: ERROR
>>   Running examples in ?homnormal-Ex.R? failed
>>   The error most likely occurred in:
>>
>>   > base::assign(".ptime", proc.time(), pos = "CheckExEnv")
>>   > ### Name: Brown_Forsythe
>>   > ### Title: Brown-Forsythe Test for Homogeniety
>>   > ### Aliases: Brown_Forsythe
>>   >
>>   > ### ** Examples
>>   >
>>   >     data(FH_data)
>>   >    x1=FH_data$SurvivalTime
>>   >    x2=FH_data$HospitalNo
>>   >    Brown_Forsythe(x1,x2)
>>   Error in loadNamespace(x) : there is no package called ?knitr?
>>   Calls: Brown_Forsythe ... loadNamespace -> withRestarts ->
>> withOneRestart
>> -> doWithOneRestart
>>   Execution halted
>>
>> Package: RSStest
>> Check: examples
>> New result: ERROR
>>   Running examples in ?RSStest-Ex.R? failed
>>   The error most likely occurred in:
>>
>>   > base::assign(".ptime", proc.time(), pos = "CheckExEnv")
>>   > ### Name: teststat_MRSS
>>   > ### Title: Median Ranked Set Sampling Test
>>   > ### Aliases: teststat_MRSS
>>   >
>>   > ### ** Examples
>>   >
>>   > x1=matrix(c(1,2.3, 3.4,4.5,5.6,4 ),nrow=3)
>>   > x2=matrix(c(2,3.2, 4.2,6.5,4.6,6 ),nrow=3)
>>   > teststat_MRSS(x1,x2,tn=1000)
>>   Error in loadNamespace(x) : there is no package called ?knitr?
>>   Calls: teststat_MRSS ... loadNamespace -> withRestarts -> withOneRestart
>> -> doWithOneRestart
>>   Execution halted
>>
>>         [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>

	[[alternative HTML version deleted]]


From jo@|@h@p@rry @end|ng |rom gm@||@com  Thu Feb  8 17:37:50 2024
From: jo@|@h@p@rry @end|ng |rom gm@||@com (Josiah Parry)
Date: Thu, 8 Feb 2024 11:37:50 -0500
Subject: [R-pkg-devel] Changing package maintainers
Message-ID: <CAL3ufULeTu-pTa_-U+VFbLHeTQ1QSmd9MpOmWRQDu04b3Y4Jrw@mail.gmail.com>

I intend to change the maintainer of my package {sfdep}
https://cran.r-project.org/package=sfdep.
Is the process as simple as submitting a new release where the DESCRIPTION
file changes who has the role of `aut`?

	[[alternative HTML version deleted]]


From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Thu Feb  8 18:01:11 2024
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Thu, 08 Feb 2024 09:01:11 -0800
Subject: [R-pkg-devel] Changing package maintainers
In-Reply-To: <CAL3ufULeTu-pTa_-U+VFbLHeTQ1QSmd9MpOmWRQDu04b3Y4Jrw@mail.gmail.com>
References: <CAL3ufULeTu-pTa_-U+VFbLHeTQ1QSmd9MpOmWRQDu04b3Y4Jrw@mail.gmail.com>
Message-ID: <27B4DA86-41D9-4CDC-8676-9E1199E1ADA0@dcn.davis.ca.us>

Are you aware of this [1]? J. Random Lurker may not be a reliable source, and actual CRAN repo maintainers are probably a bit busy...

[1] https://cran.r-project.org/web/packages/policies.html#Submission

On February 8, 2024 8:37:50 AM PST, Josiah Parry <josiah.parry at gmail.com> wrote:
>I intend to change the maintainer of my package {sfdep}
>https://cran.r-project.org/package=sfdep.
>Is the process as simple as submitting a new release where the DESCRIPTION
>file changes who has the role of `aut`?
>
>	[[alternative HTML version deleted]]
>
>______________________________________________
>R-package-devel at r-project.org mailing list
>https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
Sent from my phone. Please excuse my brevity.


From jo@|@h@p@rry @end|ng |rom gm@||@com  Thu Feb  8 18:16:47 2024
From: jo@|@h@p@rry @end|ng |rom gm@||@com (Josiah Parry)
Date: Thu, 8 Feb 2024 12:16:47 -0500
Subject: [R-pkg-devel] Changing package maintainers
In-Reply-To: <27B4DA86-41D9-4CDC-8676-9E1199E1ADA0@dcn.davis.ca.us>
References: <CAL3ufULeTu-pTa_-U+VFbLHeTQ1QSmd9MpOmWRQDu04b3Y4Jrw@mail.gmail.com>
 <27B4DA86-41D9-4CDC-8676-9E1199E1ADA0@dcn.davis.ca.us>
Message-ID: <CAL3ufU+t-=MKdkG17dq=R5-DsdV7nGXnqQSi9ECu841LUgxmHQ@mail.gmail.com>

I?m sorry? I do not follow.

On Thu, Feb 8, 2024 at 12:01 Jeff Newmiller via R-package-devel <
r-package-devel at r-project.org> wrote:

> Are you aware of this [1]? J. Random Lurker may not be a reliable source,
> and actual CRAN repo maintainers are probably a bit busy...
>
> [1] https://cran.r-project.org/web/packages/policies.html#Submission
>
> On February 8, 2024 8:37:50 AM PST, Josiah Parry <josiah.parry at gmail.com>
> wrote:
> >I intend to change the maintainer of my package {sfdep}
> >https://cran.r-project.org/package=sfdep.
> >Is the process as simple as submitting a new release where the DESCRIPTION
> >file changes who has the role of `aut`?
> >
> >       [[alternative HTML version deleted]]
> >
> >______________________________________________
> >R-package-devel at r-project.org mailing list
> >https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
> --
> Sent from my phone. Please excuse my brevity.
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From jo@h@m@u|r|ch @end|ng |rom gm@||@com  Thu Feb  8 18:31:58 2024
From: jo@h@m@u|r|ch @end|ng |rom gm@||@com (Joshua Ulrich)
Date: Thu, 8 Feb 2024 11:31:58 -0600
Subject: [R-pkg-devel] Changing package maintainers
In-Reply-To: <CAL3ufULeTu-pTa_-U+VFbLHeTQ1QSmd9MpOmWRQDu04b3Y4Jrw@mail.gmail.com>
References: <CAL3ufULeTu-pTa_-U+VFbLHeTQ1QSmd9MpOmWRQDu04b3Y4Jrw@mail.gmail.com>
Message-ID: <CAPPM_gSU9bVUQKYD-dDvcsbVJnDWFt10GCmfyEyFUnZR4TBXXQ@mail.gmail.com>

The process is described in the 6th bullet of the "Source Packages"
section of the CRAN Policies:
https://cran.r-project.org/web/packages/policies.html

"When a new maintainer wishes to take over a package, this should be
accompanied by the written agreement of the previous maintainer
(unless the package has been formally orphaned)."

So the current maintainer needs to send CRAN an email with the name
and email address of the new maintainer.

Best,
Josh


On Thu, Feb 8, 2024 at 10:38?AM Josiah Parry <josiah.parry at gmail.com> wrote:
>
> I intend to change the maintainer of my package {sfdep}
> https://cran.r-project.org/package=sfdep.
> Is the process as simple as submitting a new release where the DESCRIPTION
> file changes who has the role of `aut`?
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel



--
Joshua Ulrich  |  about.me/joshuaulrich
FOSS Trading  |  www.fosstrading.com


From jo@|@h@p@rry @end|ng |rom gm@||@com  Thu Feb  8 18:37:44 2024
From: jo@|@h@p@rry @end|ng |rom gm@||@com (Josiah Parry)
Date: Thu, 8 Feb 2024 12:37:44 -0500
Subject: [R-pkg-devel] Changing package maintainers
In-Reply-To: <CAPPM_gSU9bVUQKYD-dDvcsbVJnDWFt10GCmfyEyFUnZR4TBXXQ@mail.gmail.com>
References: <CAL3ufULeTu-pTa_-U+VFbLHeTQ1QSmd9MpOmWRQDu04b3Y4Jrw@mail.gmail.com>
 <CAPPM_gSU9bVUQKYD-dDvcsbVJnDWFt10GCmfyEyFUnZR4TBXXQ@mail.gmail.com>
Message-ID: <CAL3ufU+-BjSKDGwir_-7-1U6iu2aUWoRvm2YYb2fC7vJ13S__A@mail.gmail.com>

Much appreciated, Josh! One day I?ll internalize everything in the
policies.

On Thu, Feb 8, 2024 at 12:32 Joshua Ulrich <josh.m.ulrich at gmail.com> wrote:

> The process is described in the 6th bullet of the "Source Packages"
> section of the CRAN Policies:
> https://cran.r-project.org/web/packages/policies.html
>
> "When a new maintainer wishes to take over a package, this should be
> accompanied by the written agreement of the previous maintainer
> (unless the package has been formally orphaned)."
>
> So the current maintainer needs to send CRAN an email with the name
> and email address of the new maintainer.
>
> Best,
> Josh
>
>
> On Thu, Feb 8, 2024 at 10:38?AM Josiah Parry <josiah.parry at gmail.com>
> wrote:
> >
> > I intend to change the maintainer of my package {sfdep}
> > https://cran.r-project.org/package=sfdep.
> > Is the process as simple as submitting a new release where the
> DESCRIPTION
> > file changes who has the role of `aut`?
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>
>
> --
> Joshua Ulrich  |  about.me/joshuaulrich
> FOSS Trading  |  www.fosstrading.com
>

	[[alternative HTML version deleted]]


From |kry|ov @end|ng |rom d|@root@org  Thu Feb  8 20:17:28 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Thu, 8 Feb 2024 22:17:28 +0300
Subject: [R-pkg-devel] 
 failing CRAN checks due to problems with dependencies
In-Reply-To: <CAKpFkB0ebZnhNbk2qaVOXW3Sny+V1NAs4fE6VA9hWDO==SrXBg@mail.gmail.com>
References: <CAKpFkB0ebZnhNbk2qaVOXW3Sny+V1NAs4fE6VA9hWDO==SrXBg@mail.gmail.com>
Message-ID: <20240208221728.5f2132fb@Tarkus>

? Wed, 7 Feb 2024 08:40:44 -0600
Marcin Jurek <marcinjurek1988 at gmail.com> ?????:

> Packages required but not available: 'Rcpp', 'FNN',
> 'RcppArmadillo' Packages suggested but not available for checking:
> 'fields', 'rmarkdown', 'testthat', 'maptools'

One of the machines running the incoming checks was having problems. If
you followed the failing dependency chain by looking at the CRAN check
results of the packages described as "not available", you could
eventually find a package needing compilation (Rcpp or stringi or
something else), look at the installation log and see Make trying to
run commands that are completely wrong.

It looked like the path to the compiler was empty:
https://web.archive.org/web/20240208191430/https://www.r-project.org/nosvn/R.check/r-devel-linux-x86_64-debian-clang/Rcpp-00install.html

I think that the problems are solved now, so it should be safe to
increment the version and submit it again.

-- 
Best regards,
Ivan


From m@rc|njurek1988 @end|ng |rom gm@||@com  Thu Feb  8 20:28:52 2024
From: m@rc|njurek1988 @end|ng |rom gm@||@com (Marcin Jurek)
Date: Thu, 8 Feb 2024 13:28:52 -0600
Subject: [R-pkg-devel] 
 failing CRAN checks due to problems with dependencies
In-Reply-To: <20240208221728.5f2132fb@Tarkus>
References: <CAKpFkB0ebZnhNbk2qaVOXW3Sny+V1NAs4fE6VA9hWDO==SrXBg@mail.gmail.com>
 <20240208221728.5f2132fb@Tarkus>
Message-ID: <CAKpFkB14RyjeXqup815=BT1pJ5hU_Hq4_c17ZhtWAy9nk=2uLw@mail.gmail.com>

Ok, this makes sense! I saw that Rcpp was failing the checks too but I
wasn't sure if I should resubmit or wait. Thanks!

On Thu, Feb 8, 2024 at 1:17?PM Ivan Krylov <ikrylov at disroot.org> wrote:

> ? Wed, 7 Feb 2024 08:40:44 -0600
> Marcin Jurek <marcinjurek1988 at gmail.com> ?????:
>
> > Packages required but not available: 'Rcpp', 'FNN',
> > 'RcppArmadillo' Packages suggested but not available for checking:
> > 'fields', 'rmarkdown', 'testthat', 'maptools'
>
> One of the machines running the incoming checks was having problems. If
> you followed the failing dependency chain by looking at the CRAN check
> results of the packages described as "not available", you could
> eventually find a package needing compilation (Rcpp or stringi or
> something else), look at the installation log and see Make trying to
> run commands that are completely wrong.
>
> It looked like the path to the compiler was empty:
>
> https://web.archive.org/web/20240208191430/https://www.r-project.org/nosvn/R.check/r-devel-linux-x86_64-debian-clang/Rcpp-00install.html
>
> I think that the problems are solved now, so it should be safe to
> increment the version and submit it again.
>
> --
> Best regards,
> Ivan
>

	[[alternative HTML version deleted]]


From ||u|@@rev|||@ @end|ng |rom gm@||@com  Thu Feb  8 20:30:56 2024
From: ||u|@@rev|||@ @end|ng |rom gm@||@com (=?UTF-8?Q?Llu=C3=ADs_Revilla?=)
Date: Thu, 8 Feb 2024 20:30:56 +0100
Subject: [R-pkg-devel] Package failing reverse dependency checks
In-Reply-To: <CAARY7kjhTobag34rsZfn0yPPVEJK4US45GO2FegQZxrPguseMA@mail.gmail.com>
References: <CAARY7kgUtrKJh9ukw_iCv7DMY3+9Mdyq+D3NO0366M_fnsZjXA@mail.gmail.com>
 <CAN+W6_tZKEYWdkT4Ro+HReHykBO5Pw_7+OP=cCNQ87Y1rex24g@mail.gmail.com>
 <CAARY7kjhTobag34rsZfn0yPPVEJK4US45GO2FegQZxrPguseMA@mail.gmail.com>
Message-ID: <CAN+W6_t8czysEET7Abd-zdBYBPJ_vpU3paGdiqCj3qcZSfE15Q@mail.gmail.com>

Hi David,

Dependency checks cannot be run on win /Mac builders as far as I know.
Some packages have more than 2000 packages depending on them.
It would be too much for the heavily used CRAN's machines.

Best,

Llu?s

On Thu, 8 Feb 2024 at 13:52, David Hugh-Jones <davidhughjones at gmail.com>
wrote:

> Thanks for this tip. Out of interest, is there a way to make win/Mac
> builder run revdep checks?
>
> Writing: wyclif.substack.com
> Book: www.wyclifsdust.com
>
>
> On Thu, 8 Feb 2024 at 10:26, Llu?s Revilla <lluis.revilla at gmail.com>
> wrote:
>
>> Hi David,
>>
>> If you didn't increase the version number it could happen that the old
>> version of the package was used (as CRAN might not be aware that there is a
>> new version).
>> The CRAN repository policy says: "Increasing the version number at each
>> submission reduces confusion so is preferred even when a previous
>> submission was not accepted".
>> In addition, it is easier to track how smooth the submission process is
>> for maintainers/developers.
>>
>> I would recommend submitting again, changing the version number of the
>> package.
>> Checking on  win builders and macos builders CRAN provides is the closest
>> one, other approaches include rhub2.
>>
>> Best,
>>
>> Llu?s
>>
>>
>>
>> On Thu, 8 Feb 2024 at 10:24, David Hugh-Jones <davidhughjones at gmail.com>
>> wrote:
>>
>>> Hi all,
>>>
>>> I'm trying to upload a new version of my "huxtable" package. It is
>>> currently failing reverse dependency checks for two packages (homnormal
>>> and
>>> RSStest). The relevant failures are below.
>>>
>>> I got this failure one time, and fixed the problem, which relates to
>>> mistakenly relying on the Suggested: knitr package (see here for the
>>> commit: https://github.com/hughjonesd/huxtable/commit/5a3edc). After the
>>> commit, reverse dependency checks for homnormal and RSStest pass on my
>>> machine, when testing either with revdepcheck::revdep_check or
>>> tools::check_packages_in_dir, and even when knitr is not installed. But,
>>> after I uploaded the new package to CRAN, the same failure recurred.
>>>
>>> My new release candidate had the same version number as the previous one
>>> (which had failed the revdep check, and therefore not been published on
>>> CRAN). Is it possible that CRAN just tested the old version again?
>>>
>>> If not, then can anyone suggest the best way to debug a revdep check on
>>> as
>>> close a setup to the CRAN machines as possible?
>>>
>>> Cheers,
>>> David
>>>
>>> Git tag for the last CRAN submission:
>>> https://github.com/hughjonesd/huxtable/releases/tag/v5.5.4-rc3
>>>
>>> Info from the CRAN email:
>>> --
>>> Debian: <
>>>
>>> https://win-builder.r-project.org/incoming_pretest/huxtable_5.5.4_20240205_164815/reverseDependencies/summary.txt
>>> >
>>> RSStest, homnormal
>>>
>>> Log dir: <
>>>
>>> https://win-builder.r-project.org/incoming_pretest/huxtable_5.5.4_20240205_164815/
>>> >
>>> The files will be removed after roughly 7 days.
>>>
>>> Pretests:
>>> Windows: <
>>>
>>> https://win-builder.r-project.org/incoming_pretest/huxtable_5.5.4_20240205_164815/Windows/00check.log
>>> >
>>> Debian: <
>>>
>>> https://win-builder.r-project.org/incoming_pretest/huxtable_5.5.4_20240205_164815/Debian/00check.log
>>> >
>>> --
>>> Changes to worse in reverse depends:
>>>
>>> Package: homnormal
>>> Check: examples
>>> New result: ERROR
>>>   Running examples in ?homnormal-Ex.R? failed
>>>   The error most likely occurred in:
>>>
>>>   > base::assign(".ptime", proc.time(), pos = "CheckExEnv")
>>>   > ### Name: Brown_Forsythe
>>>   > ### Title: Brown-Forsythe Test for Homogeniety
>>>   > ### Aliases: Brown_Forsythe
>>>   >
>>>   > ### ** Examples
>>>   >
>>>   >     data(FH_data)
>>>   >    x1=FH_data$SurvivalTime
>>>   >    x2=FH_data$HospitalNo
>>>   >    Brown_Forsythe(x1,x2)
>>>   Error in loadNamespace(x) : there is no package called ?knitr?
>>>   Calls: Brown_Forsythe ... loadNamespace -> withRestarts ->
>>> withOneRestart
>>> -> doWithOneRestart
>>>   Execution halted
>>>
>>> Package: RSStest
>>> Check: examples
>>> New result: ERROR
>>>   Running examples in ?RSStest-Ex.R? failed
>>>   The error most likely occurred in:
>>>
>>>   > base::assign(".ptime", proc.time(), pos = "CheckExEnv")
>>>   > ### Name: teststat_MRSS
>>>   > ### Title: Median Ranked Set Sampling Test
>>>   > ### Aliases: teststat_MRSS
>>>   >
>>>   > ### ** Examples
>>>   >
>>>   > x1=matrix(c(1,2.3, 3.4,4.5,5.6,4 ),nrow=3)
>>>   > x2=matrix(c(2,3.2, 4.2,6.5,4.6,6 ),nrow=3)
>>>   > teststat_MRSS(x1,x2,tn=1000)
>>>   Error in loadNamespace(x) : there is no package called ?knitr?
>>>   Calls: teststat_MRSS ... loadNamespace -> withRestarts ->
>>> withOneRestart
>>> -> doWithOneRestart
>>>   Execution halted
>>>
>>>         [[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>>

	[[alternative HTML version deleted]]


From edd @end|ng |rom deb|@n@org  Thu Feb  8 20:57:34 2024
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Thu, 8 Feb 2024 13:57:34 -0600
Subject: [R-pkg-devel] 
 failing CRAN checks due to problems with dependencies
In-Reply-To: <CAKpFkB14RyjeXqup815=BT1pJ5hU_Hq4_c17ZhtWAy9nk=2uLw@mail.gmail.com>
References: <CAKpFkB0ebZnhNbk2qaVOXW3Sny+V1NAs4fE6VA9hWDO==SrXBg@mail.gmail.com>
 <20240208221728.5f2132fb@Tarkus>
 <CAKpFkB14RyjeXqup815=BT1pJ5hU_Hq4_c17ZhtWAy9nk=2uLw@mail.gmail.com>
Message-ID: <26053.12846.819130.786996@rob.eddelbuettel.com>


On 8 February 2024 at 13:28, Marcin Jurek wrote:
| Ok, this makes sense! I saw that Rcpp was failing the checks too but I
| wasn't sure if I should resubmit or wait. Thanks!

For completeness, it was not caused by Rcpp but rather by a mix on new clang
and gcc versions which somehow got into each other's way on that machine; and
this has by now been fixed.

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From m@rc|njurek1988 @end|ng |rom gm@||@com  Fri Feb  9 15:59:45 2024
From: m@rc|njurek1988 @end|ng |rom gm@||@com (Marcin Jurek)
Date: Fri, 9 Feb 2024 08:59:45 -0600
Subject: [R-pkg-devel] CRAN uses an old version of clang
Message-ID: <CAKpFkB07uZUzQP+zB6+6V9kuQ2X-GGq_J_1VZ2YjoAKTqdznmA@mail.gmail.com>

Dear community,

I recently submitted an update to my package. It previous version relied on
Boost for Bessel and gamma functions but a colleague pointed out to me that
they are included in the standard library beginning with the C++17
standard.

I don't have access to a Mac so I tested my package on Rhub and on my local
Linux and everything ran fine. However, it seems like CRAN is using an old
version of Clang (14.03 vs 16 being the newest one) and it complained about
these Bessel functions. I'm pasting the installation log below. I wonder if
this is something I could hope to explain in cran-comments and have my
package accepted as is?

I could also revert to using Boost although I only need it for these
special functions and things are much cleaner without it. In addition, one
of the main reasons for this update was related to some warnings Boost
started throwing.

Really appreciate the help!

* installing *source* package ?GPvecchia? ...
** package ?GPvecchia? successfully unpacked and MD5 sums checked
** using staged installation
** libs
using C++ compiler: ?Apple clang version 14.0.3 (clang-1403.0.22.14.1)?
using C++17
using SDK: ?MacOSX11.3.sdk?
clang++ -arch x86_64 -std=gnu++17
-I"/Library/Frameworks/R.framework/Resources/include" -DNDEBUG
-I'/Volumes/Builds/packages/big-sur-x86_64/Rlib/4.3/Rcpp/include'
-I'/Volumes/Builds/packages/big-sur-x86_64/Rlib/4.3/RcppArmadillo/include'
-I/opt/R/x86_64/include     -fPIC  -falign-functions=64 -Wall -g -O2
-c Esqe.cpp -o Esqe.o
clang++ -arch x86_64 -std=gnu++17
-I"/Library/Frameworks/R.framework/Resources/include" -DNDEBUG
-I'/Volumes/Builds/packages/big-sur-x86_64/Rlib/4.3/Rcpp/include'
-I'/Volumes/Builds/packages/big-sur-x86_64/Rlib/4.3/RcppArmadillo/include'
-I/opt/R/x86_64/include     -fPIC  -falign-functions=64 -Wall -g -O2
-c Matern.cpp -o Matern.o
clang++ -arch x86_64 -std=gnu++17
-I"/Library/Frameworks/R.framework/Resources/include" -DNDEBUG
-I'/Volumes/Builds/packages/big-sur-x86_64/Rlib/4.3/Rcpp/include'
-I'/Volumes/Builds/packages/big-sur-x86_64/Rlib/4.3/RcppArmadillo/include'
-I/opt/R/x86_64/include     -fPIC  -falign-functions=64 -Wall -g -O2
-c MaxMin.cpp -o MaxMin.o
clang++ -arch x86_64 -std=gnu++17
-I"/Library/Frameworks/R.framework/Resources/include" -DNDEBUG
-I'/Volumes/Builds/packages/big-sur-x86_64/Rlib/4.3/Rcpp/include'
-I'/Volumes/Builds/packages/big-sur-x86_64/Rlib/4.3/RcppArmadillo/include'
-I/opt/R/x86_64/include     -fPIC  -falign-functions=64 -Wall -g -O2
-c RcppExports.cpp -o RcppExports.o
clang++ -arch x86_64 -std=gnu++17
-I"/Library/Frameworks/R.framework/Resources/include" -DNDEBUG
-I'/Volumes/Builds/packages/big-sur-x86_64/Rlib/4.3/Rcpp/include'
-I'/Volumes/Builds/packages/big-sur-x86_64/Rlib/4.3/RcppArmadillo/include'
-I/opt/R/x86_64/include     -fPIC  -falign-functions=64 -Wall -g -O2
-c U_NZentries.cpp -o U_NZentries.o
clang++ -arch x86_64 -std=gnu++17
-I"/Library/Frameworks/R.framework/Resources/include" -DNDEBUG
-I'/Volumes/Builds/packages/big-sur-x86_64/Rlib/4.3/Rcpp/include'
-I'/Volumes/Builds/packages/big-sur-x86_64/Rlib/4.3/RcppArmadillo/include'
-I/opt/R/x86_64/include     -fPIC  -falign-functions=64 -Wall -g -O2
-c dist.cpp -o dist.o
clang++ -arch x86_64 -std=gnu++17
-I"/Library/Frameworks/R.framework/Resources/include" -DNDEBUG
-I'/Volumes/Builds/packages/big-sur-x86_64/Rlib/4.3/Rcpp/include'
-I'/Volumes/Builds/packages/big-sur-x86_64/Rlib/4.3/RcppArmadillo/include'
-I/opt/R/x86_64/include     -fPIC  -falign-functions=64 -Wall -g -O2
-c fastTree.cpp -o fastTree.o
Matern.cpp:80:68: error: no member named 'cyl_bessel_k' in namespace 'std'
        covmat(j1,j2) = normcon*pow( scaledist, covparms(2)
)*std::cyl_bessel_k(covparms(2),scaledist);
//Rf_bessel_k(scaledist,covparms(2),1.0);
                                                              ~~~~~^
1 error generated.
make: *** [Matern.o] Error 1
make: *** Waiting for unfinished jobs....
ERROR: compilation failed for package ?GPvecchia?
* removing ?/Volumes/Builds/packages/big-sur-x86_64/results/4.3/GPvecchia.Rcheck/GPvecchia?

	[[alternative HTML version deleted]]


From @ergue|@@oko| @end|ng |rom gm@||@com  Fri Feb  9 16:34:36 2024
From: @ergue|@@oko| @end|ng |rom gm@||@com (Serguei Sokol)
Date: Fri, 9 Feb 2024 16:34:36 +0100
Subject: [R-pkg-devel] CRAN uses an old version of clang
In-Reply-To: <CAKpFkB07uZUzQP+zB6+6V9kuQ2X-GGq_J_1VZ2YjoAKTqdznmA@mail.gmail.com>
References: <CAKpFkB07uZUzQP+zB6+6V9kuQ2X-GGq_J_1VZ2YjoAKTqdznmA@mail.gmail.com>
Message-ID: <b12f9bdc-5ff5-4c02-88b5-aadc988f3eb0@gmail.com>

Not really responding the question, however another way could be to 
consider if your code is in Rcpp and calls to bessel and gamma function 
are not very frequent. These functions are available in base R and as 
such are callable via Function():

 > Rcpp::evalCpp('Function("besselK")(1., 0.2)')
[1] 0.42722
 > Rcpp::evalCpp('Function("gamma")(4)') # 3!
[1] 6

https://teuder.github.io/rcpp4everyone_en/230_R_function.html#function


Best,
Serguei.

Le 09/02/2024 ? 15:59, Marcin Jurek a ?crit?:
> Dear community,
> 
> I recently submitted an update to my package. It previous version relied on
> Boost for Bessel and gamma functions but a colleague pointed out to me that
> they are included in the standard library beginning with the C++17
> standard.
> 
> I don't have access to a Mac so I tested my package on Rhub and on my local
> Linux and everything ran fine. However, it seems like CRAN is using an old
> version of Clang (14.03 vs 16 being the newest one) and it complained about
> these Bessel functions. I'm pasting the installation log below. I wonder if
> this is something I could hope to explain in cran-comments and have my
> package accepted as is?
> 
> I could also revert to using Boost although I only need it for these
> special functions and things are much cleaner without it. In addition, one
> of the main reasons for this update was related to some warnings Boost
> started throwing.
> 
> Really appreciate the help!
> 
> * installing *source* package ?GPvecchia? ...
> ** package ?GPvecchia? successfully unpacked and MD5 sums checked
> ** using staged installation
> ** libs
> using C++ compiler: ?Apple clang version 14.0.3 (clang-1403.0.22.14.1)?
> using C++17
> using SDK: ?MacOSX11.3.sdk?
> clang++ -arch x86_64 -std=gnu++17
> -I"/Library/Frameworks/R.framework/Resources/include" -DNDEBUG
> -I'/Volumes/Builds/packages/big-sur-x86_64/Rlib/4.3/Rcpp/include'
> -I'/Volumes/Builds/packages/big-sur-x86_64/Rlib/4.3/RcppArmadillo/include'
> -I/opt/R/x86_64/include     -fPIC  -falign-functions=64 -Wall -g -O2
> -c Esqe.cpp -o Esqe.o
> clang++ -arch x86_64 -std=gnu++17
> -I"/Library/Frameworks/R.framework/Resources/include" -DNDEBUG
> -I'/Volumes/Builds/packages/big-sur-x86_64/Rlib/4.3/Rcpp/include'
> -I'/Volumes/Builds/packages/big-sur-x86_64/Rlib/4.3/RcppArmadillo/include'
> -I/opt/R/x86_64/include     -fPIC  -falign-functions=64 -Wall -g -O2
> -c Matern.cpp -o Matern.o
> clang++ -arch x86_64 -std=gnu++17
> -I"/Library/Frameworks/R.framework/Resources/include" -DNDEBUG
> -I'/Volumes/Builds/packages/big-sur-x86_64/Rlib/4.3/Rcpp/include'
> -I'/Volumes/Builds/packages/big-sur-x86_64/Rlib/4.3/RcppArmadillo/include'
> -I/opt/R/x86_64/include     -fPIC  -falign-functions=64 -Wall -g -O2
> -c MaxMin.cpp -o MaxMin.o
> clang++ -arch x86_64 -std=gnu++17
> -I"/Library/Frameworks/R.framework/Resources/include" -DNDEBUG
> -I'/Volumes/Builds/packages/big-sur-x86_64/Rlib/4.3/Rcpp/include'
> -I'/Volumes/Builds/packages/big-sur-x86_64/Rlib/4.3/RcppArmadillo/include'
> -I/opt/R/x86_64/include     -fPIC  -falign-functions=64 -Wall -g -O2
> -c RcppExports.cpp -o RcppExports.o
> clang++ -arch x86_64 -std=gnu++17
> -I"/Library/Frameworks/R.framework/Resources/include" -DNDEBUG
> -I'/Volumes/Builds/packages/big-sur-x86_64/Rlib/4.3/Rcpp/include'
> -I'/Volumes/Builds/packages/big-sur-x86_64/Rlib/4.3/RcppArmadillo/include'
> -I/opt/R/x86_64/include     -fPIC  -falign-functions=64 -Wall -g -O2
> -c U_NZentries.cpp -o U_NZentries.o
> clang++ -arch x86_64 -std=gnu++17
> -I"/Library/Frameworks/R.framework/Resources/include" -DNDEBUG
> -I'/Volumes/Builds/packages/big-sur-x86_64/Rlib/4.3/Rcpp/include'
> -I'/Volumes/Builds/packages/big-sur-x86_64/Rlib/4.3/RcppArmadillo/include'
> -I/opt/R/x86_64/include     -fPIC  -falign-functions=64 -Wall -g -O2
> -c dist.cpp -o dist.o
> clang++ -arch x86_64 -std=gnu++17
> -I"/Library/Frameworks/R.framework/Resources/include" -DNDEBUG
> -I'/Volumes/Builds/packages/big-sur-x86_64/Rlib/4.3/Rcpp/include'
> -I'/Volumes/Builds/packages/big-sur-x86_64/Rlib/4.3/RcppArmadillo/include'
> -I/opt/R/x86_64/include     -fPIC  -falign-functions=64 -Wall -g -O2
> -c fastTree.cpp -o fastTree.o
> Matern.cpp:80:68: error: no member named 'cyl_bessel_k' in namespace 'std'
>          covmat(j1,j2) = normcon*pow( scaledist, covparms(2)
> )*std::cyl_bessel_k(covparms(2),scaledist);
> //Rf_bessel_k(scaledist,covparms(2),1.0);
>                                                                ~~~~~^
> 1 error generated.
> make: *** [Matern.o] Error 1
> make: *** Waiting for unfinished jobs....
> ERROR: compilation failed for package ?GPvecchia?
> * removing ?/Volumes/Builds/packages/big-sur-x86_64/results/4.3/GPvecchia.Rcheck/GPvecchia?
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Fri Feb  9 16:42:50 2024
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Fri, 9 Feb 2024 16:42:50 +0100
Subject: [R-pkg-devel] CRAN uses an old version of clang
In-Reply-To: <CAKpFkB07uZUzQP+zB6+6V9kuQ2X-GGq_J_1VZ2YjoAKTqdznmA@mail.gmail.com>
References: <CAKpFkB07uZUzQP+zB6+6V9kuQ2X-GGq_J_1VZ2YjoAKTqdznmA@mail.gmail.com>
Message-ID: <2c0a427e-afd4-4e8d-85c8-2f277decebe7@statistik.tu-dortmund.de>

Your users may also use old versions of clang. Hence please correct it.
CRAN is also checking with the clang18 release candidate.

Best,
Uwe Ligges



On 09.02.2024 15:59, Marcin Jurek wrote:
> Dear community,
> 
> I recently submitted an update to my package. It previous version relied on
> Boost for Bessel and gamma functions but a colleague pointed out to me that
> they are included in the standard library beginning with the C++17
> standard.
> 
> I don't have access to a Mac so I tested my package on Rhub and on my local
> Linux and everything ran fine. However, it seems like CRAN is using an old
> version of Clang (14.03 vs 16 being the newest one) and it complained about
> these Bessel functions. I'm pasting the installation log below. I wonder if
> this is something I could hope to explain in cran-comments and have my
> package accepted as is?
> 
> I could also revert to using Boost although I only need it for these
> special functions and things are much cleaner without it. In addition, one
> of the main reasons for this update was related to some warnings Boost
> started throwing.
> 
> Really appreciate the help!
> 
> * installing *source* package ?GPvecchia? ...
> ** package ?GPvecchia? successfully unpacked and MD5 sums checked
> ** using staged installation
> ** libs
> using C++ compiler: ?Apple clang version 14.0.3 (clang-1403.0.22.14.1)?
> using C++17
> using SDK: ?MacOSX11.3.sdk?
> clang++ -arch x86_64 -std=gnu++17
> -I"/Library/Frameworks/R.framework/Resources/include" -DNDEBUG
> -I'/Volumes/Builds/packages/big-sur-x86_64/Rlib/4.3/Rcpp/include'
> -I'/Volumes/Builds/packages/big-sur-x86_64/Rlib/4.3/RcppArmadillo/include'
> -I/opt/R/x86_64/include     -fPIC  -falign-functions=64 -Wall -g -O2
> -c Esqe.cpp -o Esqe.o
> clang++ -arch x86_64 -std=gnu++17
> -I"/Library/Frameworks/R.framework/Resources/include" -DNDEBUG
> -I'/Volumes/Builds/packages/big-sur-x86_64/Rlib/4.3/Rcpp/include'
> -I'/Volumes/Builds/packages/big-sur-x86_64/Rlib/4.3/RcppArmadillo/include'
> -I/opt/R/x86_64/include     -fPIC  -falign-functions=64 -Wall -g -O2
> -c Matern.cpp -o Matern.o
> clang++ -arch x86_64 -std=gnu++17
> -I"/Library/Frameworks/R.framework/Resources/include" -DNDEBUG
> -I'/Volumes/Builds/packages/big-sur-x86_64/Rlib/4.3/Rcpp/include'
> -I'/Volumes/Builds/packages/big-sur-x86_64/Rlib/4.3/RcppArmadillo/include'
> -I/opt/R/x86_64/include     -fPIC  -falign-functions=64 -Wall -g -O2
> -c MaxMin.cpp -o MaxMin.o
> clang++ -arch x86_64 -std=gnu++17
> -I"/Library/Frameworks/R.framework/Resources/include" -DNDEBUG
> -I'/Volumes/Builds/packages/big-sur-x86_64/Rlib/4.3/Rcpp/include'
> -I'/Volumes/Builds/packages/big-sur-x86_64/Rlib/4.3/RcppArmadillo/include'
> -I/opt/R/x86_64/include     -fPIC  -falign-functions=64 -Wall -g -O2
> -c RcppExports.cpp -o RcppExports.o
> clang++ -arch x86_64 -std=gnu++17
> -I"/Library/Frameworks/R.framework/Resources/include" -DNDEBUG
> -I'/Volumes/Builds/packages/big-sur-x86_64/Rlib/4.3/Rcpp/include'
> -I'/Volumes/Builds/packages/big-sur-x86_64/Rlib/4.3/RcppArmadillo/include'
> -I/opt/R/x86_64/include     -fPIC  -falign-functions=64 -Wall -g -O2
> -c U_NZentries.cpp -o U_NZentries.o
> clang++ -arch x86_64 -std=gnu++17
> -I"/Library/Frameworks/R.framework/Resources/include" -DNDEBUG
> -I'/Volumes/Builds/packages/big-sur-x86_64/Rlib/4.3/Rcpp/include'
> -I'/Volumes/Builds/packages/big-sur-x86_64/Rlib/4.3/RcppArmadillo/include'
> -I/opt/R/x86_64/include     -fPIC  -falign-functions=64 -Wall -g -O2
> -c dist.cpp -o dist.o
> clang++ -arch x86_64 -std=gnu++17
> -I"/Library/Frameworks/R.framework/Resources/include" -DNDEBUG
> -I'/Volumes/Builds/packages/big-sur-x86_64/Rlib/4.3/Rcpp/include'
> -I'/Volumes/Builds/packages/big-sur-x86_64/Rlib/4.3/RcppArmadillo/include'
> -I/opt/R/x86_64/include     -fPIC  -falign-functions=64 -Wall -g -O2
> -c fastTree.cpp -o fastTree.o
> Matern.cpp:80:68: error: no member named 'cyl_bessel_k' in namespace 'std'
>          covmat(j1,j2) = normcon*pow( scaledist, covparms(2)
> )*std::cyl_bessel_k(covparms(2),scaledist);
> //Rf_bessel_k(scaledist,covparms(2),1.0);
>                                                                ~~~~~^
> 1 error generated.
> make: *** [Matern.o] Error 1
> make: *** Waiting for unfinished jobs....
> ERROR: compilation failed for package ?GPvecchia?
> * removing ?/Volumes/Builds/packages/big-sur-x86_64/results/4.3/GPvecchia.Rcheck/GPvecchia?
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

From edd @end|ng |rom deb|@n@org  Fri Feb  9 16:44:43 2024
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Fri, 9 Feb 2024 09:44:43 -0600
Subject: [R-pkg-devel] CRAN uses an old version of clang
In-Reply-To: <CAKpFkB07uZUzQP+zB6+6V9kuQ2X-GGq_J_1VZ2YjoAKTqdznmA@mail.gmail.com>
References: <CAKpFkB07uZUzQP+zB6+6V9kuQ2X-GGq_J_1VZ2YjoAKTqdznmA@mail.gmail.com>
Message-ID: <26054.18539.260332.121921@rob.eddelbuettel.com>


On 9 February 2024 at 08:59, Marcin Jurek wrote:
| I recently submitted an update to my package. It previous version relied on
| Boost for Bessel and gamma functions but a colleague pointed out to me that
| they are included in the standard library beginning with the C++17
| standard.

There is an often overlooked bit of 'fine print': _compiler support_ for a
C++ standard is not the same as the _compiler shipping a complete library_
for that same standard. This can be frustrating. See the release notes for
gcc/g++ and clang/clang++, IIRC they usually have a separate entry for C++
library support.

In this case, can probably rely on LinkingTo: BH which has been helping with
Boost headers for over a decade.

Writing R Extensions is also generally careful in reminding us that such
language standard support is always dependent on the compiler at hand. So
package authors ought to check, just like R does via its extensive configure
script when it builds.

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From m@rc|njurek1988 @end|ng |rom gm@||@com  Fri Feb  9 20:04:33 2024
From: m@rc|njurek1988 @end|ng |rom gm@||@com (Marcin Jurek)
Date: Fri, 9 Feb 2024 13:04:33 -0600
Subject: [R-pkg-devel] CRAN uses an old version of clang
In-Reply-To: <26054.18539.260332.121921@rob.eddelbuettel.com>
References: <CAKpFkB07uZUzQP+zB6+6V9kuQ2X-GGq_J_1VZ2YjoAKTqdznmA@mail.gmail.com>
 <26054.18539.260332.121921@rob.eddelbuettel.com>
Message-ID: <CAKpFkB2rLOPvPLcDzoYd8WF5SCB43J=hfN4gYiPBMFEuPy7uXg@mail.gmail.com>

All this makes sense, thanks for your tips, everyone!

Marcin

On Fri, Feb 9, 2024 at 9:44?AM Dirk Eddelbuettel <edd at debian.org> wrote:

>
> On 9 February 2024 at 08:59, Marcin Jurek wrote:
> | I recently submitted an update to my package. It previous version relied
> on
> | Boost for Bessel and gamma functions but a colleague pointed out to me
> that
> | they are included in the standard library beginning with the C++17
> | standard.
>
> There is an often overlooked bit of 'fine print': _compiler support_ for a
> C++ standard is not the same as the _compiler shipping a complete library_
> for that same standard. This can be frustrating. See the release notes for
> gcc/g++ and clang/clang++, IIRC they usually have a separate entry for C++
> library support.
>
> In this case, can probably rely on LinkingTo: BH which has been helping
> with
> Boost headers for over a decade.
>
> Writing R Extensions is also generally careful in reminding us that such
> language standard support is always dependent on the compiler at hand. So
> package authors ought to check, just like R does via its extensive
> configure
> script when it builds.
>
> Dirk
>
> --
> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>

	[[alternative HTML version deleted]]


From @|mon@urb@nek @end|ng |rom R-project@org  Mon Feb 12 01:35:46 2024
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Mon, 12 Feb 2024 13:35:46 +1300
Subject: [R-pkg-devel] CRAN uses an old version of clang
In-Reply-To: <CAKpFkB2rLOPvPLcDzoYd8WF5SCB43J=hfN4gYiPBMFEuPy7uXg@mail.gmail.com>
References: <CAKpFkB07uZUzQP+zB6+6V9kuQ2X-GGq_J_1VZ2YjoAKTqdznmA@mail.gmail.com>
 <26054.18539.260332.121921@rob.eddelbuettel.com>
 <CAKpFkB2rLOPvPLcDzoYd8WF5SCB43J=hfN4gYiPBMFEuPy7uXg@mail.gmail.com>
Message-ID: <9481E58A-BD8E-4979-B4D8-830327D66E32@R-project.org>

Just to include the necessary details: macOS CRAN build uses Apple clang-14, so you cannot assume anything higher. Also the target is macOS 11 SDK.

That said, LLVM does not support the special math functions at all according to the status report (see Mathematical Special Functions for C++17 at https://libcxx.llvm.org/Status/Cxx17.html) so Boost is your best bet.

BTW: this is not a Mac thing - you can replicate it on any other system, eg. in Linux:

$ clang++-17 -std=c++17 -stdlib=libc++  bes.cc
bes.cc:11:49: error: no member named 'cyl_bessel_k' in namespace 'std'
   11 |     std::cout << "K_.5(" << x << ") = " << std::cyl_bessel_k(.5, x) << '\n'
      |                                            ~~~~~^
bes.cc:13:35: error: no member named 'cyl_bessel_i' in namespace 'std'
   13 |               << (pi / 2) * (std::cyl_bessel_i(-.5, x)
      |                              ~~~~~^
bes.cc:14:25: error: no member named 'cyl_bessel_i' in namespace 'std'
   14 |                  - std::cyl_bessel_i(.5, x)) / std::sin(.5 * pi) << '\n';
      |                    ~~~~~^
3 errors generated.

Cheers,
Simon


> On 10/02/2024, at 8:04 AM, Marcin Jurek <marcinjurek1988 at gmail.com> wrote:
> 
> All this makes sense, thanks for your tips, everyone!
> 
> Marcin
> 
> On Fri, Feb 9, 2024 at 9:44?AM Dirk Eddelbuettel <edd at debian.org> wrote:
> 
>> 
>> On 9 February 2024 at 08:59, Marcin Jurek wrote:
>> | I recently submitted an update to my package. It previous version relied
>> on
>> | Boost for Bessel and gamma functions but a colleague pointed out to me
>> that
>> | they are included in the standard library beginning with the C++17
>> | standard.
>> 
>> There is an often overlooked bit of 'fine print': _compiler support_ for a
>> C++ standard is not the same as the _compiler shipping a complete library_
>> for that same standard. This can be frustrating. See the release notes for
>> gcc/g++ and clang/clang++, IIRC they usually have a separate entry for C++
>> library support.
>> 
>> In this case, can probably rely on LinkingTo: BH which has been helping
>> with
>> Boost headers for over a decade.
>> 
>> Writing R Extensions is also generally careful in reminding us that such
>> language standard support is always dependent on the compiler at hand. So
>> package authors ought to check, just like R does via its extensive
>> configure
>> script when it builds.
>> 
>> Dirk
>> 
>> --
>> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>> 
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Mon Feb 12 16:02:14 2024
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Mon, 12 Feb 2024 16:02:14 +0100
Subject: [R-pkg-devel] CRAN uses an old version of clang
In-Reply-To: <9481E58A-BD8E-4979-B4D8-830327D66E32@R-project.org>
References: <CAKpFkB07uZUzQP+zB6+6V9kuQ2X-GGq_J_1VZ2YjoAKTqdznmA@mail.gmail.com>
 <26054.18539.260332.121921@rob.eddelbuettel.com>
 <CAKpFkB2rLOPvPLcDzoYd8WF5SCB43J=hfN4gYiPBMFEuPy7uXg@mail.gmail.com>
 <9481E58A-BD8E-4979-B4D8-830327D66E32@R-project.org>
Message-ID: <cdb5b1b0-fe2f-4520-b2b7-66ffe5f5343c@gmail.com>


On 2/12/24 01:35, Simon Urbanek wrote:
> Just to include the necessary details: macOS CRAN build uses Apple clang-14, so you cannot assume anything higher. Also the target is macOS 11 SDK.
>
> That said, LLVM does not support the special math functions at all according to the status report (see Mathematical Special Functions for C++17 at https://libcxx.llvm.org/Status/Cxx17.html) so Boost is your best bet.
>
> BTW: this is not a Mac thing - you can replicate it on any other system, eg. in Linux:
>
> $ clang++-17 -std=c++17 -stdlib=libc++  bes.cc
> bes.cc:11:49: error: no member named 'cyl_bessel_k' in namespace 'std'
>     11 |     std::cout << "K_.5(" << x << ") = " << std::cyl_bessel_k(.5, x) << '\n'
>        |                                            ~~~~~^
> bes.cc:13:35: error: no member named 'cyl_bessel_i' in namespace 'std'
>     13 |               << (pi / 2) * (std::cyl_bessel_i(-.5, x)
>        |                              ~~~~~^
> bes.cc:14:25: error: no member named 'cyl_bessel_i' in namespace 'std'
>     14 |                  - std::cyl_bessel_i(.5, x)) / std::sin(.5 * pi) << '\n';
>        |                    ~~~~~^
> 3 errors generated.

And on Windows with LLVM 17, the experimental build of Rtools43 for 
Windows/aarch64.

Tomas

>
> Cheers,
> Simon
>
>
>> On 10/02/2024, at 8:04 AM, Marcin Jurek <marcinjurek1988 at gmail.com> wrote:
>>
>> All this makes sense, thanks for your tips, everyone!
>>
>> Marcin
>>
>> On Fri, Feb 9, 2024 at 9:44?AM Dirk Eddelbuettel <edd at debian.org> wrote:
>>
>>> On 9 February 2024 at 08:59, Marcin Jurek wrote:
>>> | I recently submitted an update to my package. It previous version relied
>>> on
>>> | Boost for Bessel and gamma functions but a colleague pointed out to me
>>> that
>>> | they are included in the standard library beginning with the C++17
>>> | standard.
>>>
>>> There is an often overlooked bit of 'fine print': _compiler support_ for a
>>> C++ standard is not the same as the _compiler shipping a complete library_
>>> for that same standard. This can be frustrating. See the release notes for
>>> gcc/g++ and clang/clang++, IIRC they usually have a separate entry for C++
>>> library support.
>>>
>>> In this case, can probably rely on LinkingTo: BH which has been helping
>>> with
>>> Boost headers for over a decade.
>>>
>>> Writing R Extensions is also generally careful in reminding us that such
>>> language standard support is always dependent on the compiler at hand. So
>>> package authors ought to check, just like R does via its extensive
>>> configure
>>> script when it builds.
>>>
>>> Dirk
>>>
>>> --
>>> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>>>
>> 	[[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From ggene@|ogyp@ck@ge @end|ng |rom gm@||@com  Mon Feb 12 17:01:27 2024
From: ggene@|ogyp@ck@ge @end|ng |rom gm@||@com (Package Maintainer)
Date: Mon, 12 Feb 2024 16:01:27 +0000
Subject: [R-pkg-devel] Conversion failure in 'mbcsToSbcs'
In-Reply-To: <20231119182539.2483cbdb@Tarkus>
References: <CAA8crwe=Ahry5kf_x6P1HXJ5coAZRfZJyv=arJUhVq0nm1khDA@mail.gmail.com>
 <20231117185557.7ab22a8d@arachnoid>
 <CAA8crwfV15isVC7jzbbiN46Vg3=ceeZnMGn0MvoG7VW32z282Q@mail.gmail.com>
 <20231119182539.2483cbdb@Tarkus>
Message-ID: <CAA8crwfZkcHqwDBhnF4aHrpL7ZkVmFJWNu0eV4PiV9ppfg1n+A@mail.gmail.com>

Dear Ivan:

Thank you again for all your support.

I recently incorporated your suggestion to add the line:

\SweaveOpts{pdf.encoding = ISOLatin2.enc}

to line 32 of my vignette file, the latest copy of which is located
here (https://github.com/lindsayrutter/ggenealogy/blob/master/vignettes/ggenealogy.Rnw).

I don't *believe* I changed or created a plot device either, which you
advised not to do.

I then ran:

1) R CMD build
2) debian-gcc-devel
(https://builder.r-hub.io/status/ggenealogy_1.0.3.tar.gz-fc9f3ff459314bc2bcfd2df00b5c38f3)
3) debian-clang-devel
(https://builder.r-hub.io/status/ggenealogy_1.0.3.tar.gz-fa86bcdc246042e194a7558c018ed19b)

And my .tar file passed all three. So, I then uploaded my .tar file to
the CRAN submission page.

Unfortunately, I received a reply from the CRAN submission team
stating that my vignette file is still obtaining the "mbcsToSbcs"
ERROR as is shown here
(https://win-builder.r-project.org/incoming_pretest/ggenealogy_1.0.3_20240212_152455/Debian/00check.log).

The latest version of my package and its vignette code is on my
GitHub: https://github.com/lindsayrutter/ggenealogy/blob/master/vignettes/ggenealogy.Rnw

I'm still a bit at a loss on how to resolve this issue. I would be all
ears if you (and/or others) might have any further advice.

Thank you again for your patience and support.

Kind regards,
LAR

PS: Thanks for the advice about plain text mode. Hopefully, I have
correctly abide by that advice in this current email.


On Sun, Nov 19, 2023 at 3:25?PM Ivan Krylov <krylov.r00t at gmail.com> wrote:
>
> On Sun, 19 Nov 2023 13:53:52 +0000
> Package Maintainer <ggenealogypackage at gmail.com> wrote:
>
> > I added the code you suggested to the package vignette:
>
> It won't work without setting my.Swd as the new plot device instead of
> pdf():
>
> \SweaveOpts{grdevice=my.Swd,pdf=FALSE}
>
> You have this directive commented out a few lines later, inside a code
> block. It should instead be present outside the code block, without a %
> before it.
>
> (It's best to link to a copy of the code available for viewing
> somewhere. While I was able to fish out a copy of your package from the
> CRAN FTP server this time, it is not always possible to do so.)
>
> A less intrusive way to avoid the error is using the following Sweave
> directive:
>
> \SweaveOpts{pdf.encoding = ISOLatin2.enc}
>
> (Without changing the plot device or creating a new plot device in a
> hidden code block.)
>
> > In both those cases, I didn't see the ERROR of "Conversion failure in
> > 'mbcsToSbcs'".
>
> In order to replicate the problem, you need (1) a fairly recent R-devel
> (a pre-release version, e.g. [*]) and (2) the environment variable
> _R_CHECK_MBCS_CONVERSION_FAILURE_ set. R-hub runs recent R-devel but
> doesn't set the environment variable. I don't know for sure, but I
> think that you are running a released version of R. I hope that R-core
> will make this test part of R CMD check --as-cran, making it possible
> to reproduce such failures with just a copy of R-devel, without extra
> environment variables.
>
> --
> Best regards,
> Ivan
>
> [*] https://cran.r-project.org/bin/windows/base/rdevel.html
>
> P.S. Could you please switch your mailer to plain text instead of HTML
> when sending messages to the list? When you compose your e-mail in
> HTML, your mailer automatically prepares a plain text equivalent where
> the code block is seriously mangled. This plain text equivalent is what
> the list subscribers see:
> https://stat.ethz.ch/pipermail/r-package-devel/2023q4/010102.html


From j@g@nmn2 @end|ng |rom gm@||@com  Mon Feb 12 19:36:17 2024
From: j@g@nmn2 @end|ng |rom gm@||@com (Mikael Jagan)
Date: Mon, 12 Feb 2024 13:36:17 -0500
Subject: [R-pkg-devel] Matrix 1.7-0 to be released in March with
 ABI-breaking SuiteSparse update
Message-ID: <85c8662e-4658-482e-93b6-07975c8b9e85@gmail.com>

Dear users and binary repository maintainers,

We are preparing Matrix version 1.7-0 for CRAN submission on March 11, ahead
of the spring release of R version 4.4.0.  The only significant change from
Matrix 1.6-5 is an update of the internal SuiteSparse libraries
(5.10.1 -> 7.6.0).  Unfortunately, the old and new SuiteSparse versions are 
binary incompatible, hence so too will be the old and new Matrix versions.

A corollary is that users and binary repository maintainers switching between
Matrix < 1.7-0 and Matrix >= 1.7-0 must rebuild _from sources_ packages that
link Matrix:

 > tools::package_dependencies("Matrix", which = "LinkingTo", reverse = TRUE)[[1L]]
  [1] "ahMLE"               "bayesWatch"          "cplm"
  [4] "GeneralizedWendland" "geostatsp"           "irlba"
  [7] "lme4"                "mcmcsae"             "OpenMx"
[10] "PRIMME"              "PUlasso"             "robustlmm"
[13] "spGARCH"             "TMB"                 "bcSeq"

For users, that means doing, e.g.,

     install.packages("lme4", type = "source")

but an alternative for Windows and macOS users without the required tools is

     oo <- options(repos = "https://cran.r-project.org/")
     install.packages("Matrix")
     install.packages("lme4")
     options(oo)

where we trust CRAN to provide binaries compatible with the latest Matrix
version (because we notify CRAN upon submission about required rebuilds).
Once other repositories react with rebuilds, they can be used instead of
CRAN.

Our reverse dependency checks (and history, intuition, ...) show that most
problems (caught segfaults in this case) can be traced to a binary incompatible
lme4 and not to one of the other packages linking Matrix.  Still, we recommend
rebuilds for all 15 packages.

Maintainers of packages that link Matrix can implement an .onLoad test for
possible binary incompatibility by comparing the value of

     if (utils::packageVersion("Matrix") >= "1.6.2")
         Matrix::Matrix.Version()[["abi"]]
     else numeric_version("0")

at install time and at load time, warning the user if the values differ.
But please do look at the above and not at packageVersion("Matrix") directly,
as the ABI version is incremented less often than the package version.

Mikael {on behalf of citation("Matrix")$author}


From ro||turner @end|ng |rom po@teo@net  Mon Feb 12 20:52:20 2024
From: ro||turner @end|ng |rom po@teo@net (Rolf Turner)
Date: Mon, 12 Feb 2024 19:52:20 +0000
Subject: [R-pkg-devel] Package version on CRAN not up-to-date.
Message-ID: <20240213085220.47a489b4@rolf-Latitude-E7470>


On 20 January I submitted a revised version of my eglhmm package, to
CRAN. I very rapidly got an email, emanating from Uwe Ligges' address,
saying:

> Dear maintainer,
>  
> thanks, package eglhmm_0.1-2.tar.gz is on its way to CRAN.
>  
> Best regards,
> CRAN teams' auto-check service

However the version of eglhmm that is available from CRAN is still
0.1-1.  I have twice sent emails to Uwe Ligges (on 8 Feb. and 11
Feb.) asking why this was so.  I CC-ed these emails to
CRAN-submissions at R-project.org .

I have been met with complete radio silence. Can anyone suggest an
explanation for this phenomenon?  (I *hate* being ignored! ?? )

cheers,

Rolf Turner

-- 
Honorary Research Fellow
Department of Statistics
University of Auckland
Stats. Dep't. (secretaries) phone:
         +64-9-373-7599 ext. 89622
Home phone: +64-9-480-4619


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Mon Feb 12 21:03:30 2024
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Mon, 12 Feb 2024 21:03:30 +0100
Subject: [R-pkg-devel] Package version on CRAN not up-to-date.
In-Reply-To: <20240213085220.47a489b4@rolf-Latitude-E7470>
References: <20240213085220.47a489b4@rolf-Latitude-E7470>
Message-ID: <653bed26-6150-49ba-ac2b-195f588a02b4@statistik.tu-dortmund.de>

There is one Uwe Ligges but > 20000 packages.



On 12.02.2024 20:52, Rolf Turner wrote:
> 
> On 20 January I submitted a revised version of my eglhmm package, to
> CRAN. I very rapidly got an email, emanating from Uwe Ligges' address,
> saying:
> 
>> Dear maintainer,
>>   
>> thanks, package eglhmm_0.1-2.tar.gz is on its way to CRAN.
>>   
>> Best regards,
>> CRAN teams' auto-check service
> 
> However the version of eglhmm that is available from CRAN is still
> 0.1-1.  I have twice sent emails to Uwe Ligges (on 8 Feb. and 11
> Feb.) asking why this was so.  I CC-ed these emails to
> CRAN-submissions at R-project.org .
> 
> I have been met with complete radio silence. Can anyone suggest an
> explanation for this phenomenon?  (I *hate* being ignored! ?? )
> 
> cheers,
> 
> Rolf Turner
> 

From j|r|@c@mor@vec @end|ng |rom gm@||@com  Mon Feb 12 21:37:50 2024
From: j|r|@c@mor@vec @end|ng |rom gm@||@com (=?UTF-8?B?SmnFmcOtIE1vcmF2ZWM=?=)
Date: Tue, 13 Feb 2024 09:37:50 +1300
Subject: [R-pkg-devel] Package version on CRAN not up-to-date.
In-Reply-To: <653bed26-6150-49ba-ac2b-195f588a02b4@statistik.tu-dortmund.de>
References: <20240213085220.47a489b4@rolf-Latitude-E7470>
 <653bed26-6150-49ba-ac2b-195f588a02b4@statistik.tu-dortmund.de>
Message-ID: <0526f572-062d-4457-8bec-86075a347a97@gmail.com>

git clone git://statistik.tu-dortmund.de/ligges.git UweLigges2

On 13/02/24 09:03, Uwe Ligges wrote:
> There is one Uwe Ligges but > 20000 packages.
>
>
>
> On 12.02.2024 20:52, Rolf Turner wrote:
>>
>> On 20 January I submitted a revised version of my eglhmm package, to
>> CRAN. I very rapidly got an email, emanating from Uwe Ligges' address,
>> saying:
>>
>>> Dear maintainer,
>>> ? thanks, package eglhmm_0.1-2.tar.gz is on its way to CRAN.
>>> ? Best regards,
>>> CRAN teams' auto-check service
>>
>> However the version of eglhmm that is available from CRAN is still
>> 0.1-1.? I have twice sent emails to Uwe Ligges (on 8 Feb. and 11
>> Feb.) asking why this was so.? I CC-ed these emails to
>> CRAN-submissions at R-project.org .
>>
>> I have been met with complete radio silence. Can anyone suggest an
>> explanation for this phenomenon?? (I *hate* being ignored! ?? )
>>
>> cheers,
>>
>> Rolf Turner
>>
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From kry|ov@r00t @end|ng |rom gm@||@com  Thu Feb 15 16:17:24 2024
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Thu, 15 Feb 2024 18:17:24 +0300
Subject: [R-pkg-devel] Conversion failure in 'mbcsToSbcs'
In-Reply-To: <CAA8crwfZkcHqwDBhnF4aHrpL7ZkVmFJWNu0eV4PiV9ppfg1n+A@mail.gmail.com>
References: <CAA8crwe=Ahry5kf_x6P1HXJ5coAZRfZJyv=arJUhVq0nm1khDA@mail.gmail.com>
 <20231117185557.7ab22a8d@arachnoid>
 <CAA8crwfV15isVC7jzbbiN46Vg3=ceeZnMGn0MvoG7VW32z282Q@mail.gmail.com>
 <20231119182539.2483cbdb@Tarkus>
 <CAA8crwfZkcHqwDBhnF4aHrpL7ZkVmFJWNu0eV4PiV9ppfg1n+A@mail.gmail.com>
Message-ID: <20240215181724.7ccfbc83@arachnoid>

? Mon, 12 Feb 2024 16:01:27 +0000
Package Maintainer <ggenealogypackage at gmail.com> ?????:

> Unfortunately, I received a reply from the CRAN submission team
> stating that my vignette file is still obtaining the "mbcsToSbcs"
> ERROR as is shown here
> (https://win-builder.r-project.org/incoming_pretest/ggenealogy_1.0.3_20240212_152455/Debian/00check.log).

I am sorry for leading you down the wrong way with my advice. It turns
out that no 8-bit Type-1 encoding known to pdf() can represent both
'Lubom?r Kub??ek' and 'Anders ?gren':

lapply(
 setNames(nm = c(
  'latin1', 'cp1252', 'latin2', 'latin7',
  'latin-9', 'CP1250', 'CP1257'
 )), function(enc)
  iconv(enc2utf8(c(
   'Lubom?r Kub??ek', 'Anders ?gren'
  )), 'UTF-8', enc, toRaw = TRUE)
) |> sapply(lengths)
# one of the two strings cannot be represented, returning a NULL:
#      latin1 cp1252 latin2 latin7 latin-9 CP1250 CP1257
# [1,]      0      0     15      0       0     15      0
# [2,]     12     12      0     12      12      0     12

While it may still be possible to give extra parameters to pdf() to use
a font encoding that covers all the relevant characters, it seems
easier to switch to cairo_pdf() for your multi-lingual plots. Place the
following somewhere in the beginning of the vignette:

<<results=hide,echo=FALSE>>=
my.Swd <- function(name, width, height, ...)
 grDevices::cairo_pdf(
  filename = paste(name, "pdf", sep = "."),
  width = width, height = height
 )
@
\SweaveOpts{grdevice=my.Swd,pdf=FALSE}

This should define a new plot device function for Sweave, one that
handles more Unicode characters correctly.

> PS: Thanks for the advice about plain text mode. Hopefully, I have
> correctly abide by that advice in this current email.

This e-mail arrived in plain text, thank you!

-- 
Best regards,
Ivan


From @te|@n@m@yer @end|ng |rom un|-tueb|ngen@de  Fri Feb 16 18:50:58 2024
From: @te|@n@m@yer @end|ng |rom un|-tueb|ngen@de (Stefan Mayer)
Date: Fri, 16 Feb 2024 18:50:58 +0100
Subject: [R-pkg-devel] Unusually long execution time for R.utils::gzip on
 r-devel-windows
Message-ID: <CA730087-BFE7-47A5-A62C-F2C079142D33@uni-tuebingen.de>

Dear list,

I tried to submit an update to my R package imagefluency, but the update does not pass the incoming checks automatically. The problem is that one of the examples takes too long to execute ? but only under Windows with the development version of R (R Under development (unstable) (2024-02-15 r85925 ucrt)).

I was able to pin down the problem to using R.utils::gzip(). I created a test package that illustrates the problem: https://github.com/stm/ziptest
The package has two functions that zip a file given a file path. When using R.utils::gzip() (function `gzipit()` in the test package), I get a NOTE when checking the package using devtools::check_win_devel()

* checking examples ... [55s] NOTE
Examples with CPU (user + system) or elapsed time > 10s
       user system elapsed
gzipit 6.91  47.24   54.84

There is no issue with utils::zip() (function `zipit()` in the test package). Is this somehow a bug in R.utils::gzip(), or is there an issue with the combination of Windows and r-devel?

Best, Stefan


From henr|k@bengt@@on @end|ng |rom gm@||@com  Sat Feb 17 06:24:13 2024
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Fri, 16 Feb 2024 21:24:13 -0800
Subject: [R-pkg-devel] 
 Unusually long execution time for R.utils::gzip on r-devel-windows
In-Reply-To: <CA730087-BFE7-47A5-A62C-F2C079142D33@uni-tuebingen.de>
References: <CA730087-BFE7-47A5-A62C-F2C079142D33@uni-tuebingen.de>
Message-ID: <CAFDcVCTPexNOOQizj3kbu6MjohnP+w5MG9K0teo22FgOd4k2Fw@mail.gmail.com>

Author of R.utils here. I happen to investigate this too right now,
because of extremely slow win-builder performance of R.rsp checks,
which in turn depends on R.utils.

It's not obvious to me why this happens on win-builder. I've noticed
slower and slower win-builder/cran-incoming checks over the years,
despite the code not changing. Right now, I'm investigating a piece of
code that calls shell("dir") as a fallback to figure out if a file is
a symbol link or not - it could be that that takes a very long time on
win-builder.

So, stay tuned ... I'll report back when I find something out.

/Henrik

On Fri, Feb 16, 2024 at 4:43?PM Stefan Mayer
<stefan.mayer at uni-tuebingen.de> wrote:
>
> Dear list,
>
> I tried to submit an update to my R package imagefluency, but the update does not pass the incoming checks automatically. The problem is that one of the examples takes too long to execute ? but only under Windows with the development version of R (R Under development (unstable) (2024-02-15 r85925 ucrt)).
>
> I was able to pin down the problem to using R.utils::gzip(). I created a test package that illustrates the problem: https://github.com/stm/ziptest
> The package has two functions that zip a file given a file path. When using R.utils::gzip() (function `gzipit()` in the test package), I get a NOTE when checking the package using devtools::check_win_devel()
>
> * checking examples ... [55s] NOTE
> Examples with CPU (user + system) or elapsed time > 10s
>        user system elapsed
> gzipit 6.91  47.24   54.84
>
> There is no issue with utils::zip() (function `zipit()` in the test package). Is this somehow a bug in R.utils::gzip(), or is there an issue with the combination of Windows and r-devel?
>
> Best, Stefan
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From henr|k@bengt@@on @end|ng |rom gm@||@com  Sat Feb 17 09:16:46 2024
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Sat, 17 Feb 2024 00:16:46 -0800
Subject: [R-pkg-devel] 
 Unusually long execution time for R.utils::gzip on r-devel-windows
In-Reply-To: <CAFDcVCTPexNOOQizj3kbu6MjohnP+w5MG9K0teo22FgOd4k2Fw@mail.gmail.com>
References: <CA730087-BFE7-47A5-A62C-F2C079142D33@uni-tuebingen.de>
 <CAFDcVCTPexNOOQizj3kbu6MjohnP+w5MG9K0teo22FgOd4k2Fw@mail.gmail.com>
Message-ID: <CAFDcVCQtReBuEuQ0OdXBXnUmNRUMBHP=JiP55RwYOKqOgszXEg@mail.gmail.com>

I can confirm that this has to fixed in R.utils. This gist is that
R.utils does lots of validation of read/write permissions, and deep
down it rely on system("dir") as a fallback method. If this is down
toward dirname(tempdir()), then it'll find a lot of files, e.g.

    [1] " Datentr?ger in Laufwerk D: ist Daten"
    [2] " Volumeseriennummer: 1826-A193"
    [3] ""
    [4] " Verzeichnis von D:\\temp"
    [5] ""
    [6] "17.02.2024  09:06    <DIR>          ."
    [7] "14.02.2024  03:36                 0 cc6H4Sp5"
    [8] "15.02.2024  03:46                 0 cc6PwKb4"
    [9] "15.02.2024  16:25                 0 cc6RH27v"
   [10] "16.02.2024  01:50                 0 ccafzzMl"
   ...
[99997] "09.02.2024  04:48    <DIR>          RtmpURWDbA"
[99998] "14.02.2024  04:35    <DIR>          RtmpURWeVC"
[99999] "15.02.2024  04:00    <DIR>          RtmpUrwhHU"
 [ reached getOption("max.print") -- omitted 17165 entries ]
Time difference of 18.67841 secs

So, yeah, wow!  I'll look into fixing this, probably by removing this
fallback approach, which is very rarely needed; it was added way back
when Sys.readlink() didn't cover all cases.

/Henrik

On Fri, Feb 16, 2024 at 9:24?PM Henrik Bengtsson
<henrik.bengtsson at gmail.com> wrote:
>
> Author of R.utils here. I happen to investigate this too right now,
> because of extremely slow win-builder performance of R.rsp checks,
> which in turn depends on R.utils.
>
> It's not obvious to me why this happens on win-builder. I've noticed
> slower and slower win-builder/cran-incoming checks over the years,
> despite the code not changing. Right now, I'm investigating a piece of
> code that calls shell("dir") as a fallback to figure out if a file is
> a symbol link or not - it could be that that takes a very long time on
> win-builder.
>
> So, stay tuned ... I'll report back when I find something out.
>
> /Henrik
>
> On Fri, Feb 16, 2024 at 4:43?PM Stefan Mayer
> <stefan.mayer at uni-tuebingen.de> wrote:
> >
> > Dear list,
> >
> > I tried to submit an update to my R package imagefluency, but the update does not pass the incoming checks automatically. The problem is that one of the examples takes too long to execute ? but only under Windows with the development version of R (R Under development (unstable) (2024-02-15 r85925 ucrt)).
> >
> > I was able to pin down the problem to using R.utils::gzip(). I created a test package that illustrates the problem: https://github.com/stm/ziptest
> > The package has two functions that zip a file given a file path. When using R.utils::gzip() (function `gzipit()` in the test package), I get a NOTE when checking the package using devtools::check_win_devel()
> >
> > * checking examples ... [55s] NOTE
> > Examples with CPU (user + system) or elapsed time > 10s
> >        user system elapsed
> > gzipit 6.91  47.24   54.84
> >
> > There is no issue with utils::zip() (function `zipit()` in the test package). Is this somehow a bug in R.utils::gzip(), or is there an issue with the combination of Windows and r-devel?
> >
> > Best, Stefan
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel


From @te|@n@m@yer @end|ng |rom un|-tueb|ngen@de  Sat Feb 17 12:20:56 2024
From: @te|@n@m@yer @end|ng |rom un|-tueb|ngen@de (Stefan Mayer)
Date: Sat, 17 Feb 2024 12:20:56 +0100
Subject: [R-pkg-devel] 
 Unusually long execution time for R.utils::gzip on r-devel-windows
In-Reply-To: <CAFDcVCQtReBuEuQ0OdXBXnUmNRUMBHP=JiP55RwYOKqOgszXEg@mail.gmail.com>
References: <CA730087-BFE7-47A5-A62C-F2C079142D33@uni-tuebingen.de>
 <CAFDcVCTPexNOOQizj3kbu6MjohnP+w5MG9K0teo22FgOd4k2Fw@mail.gmail.com>
 <CAFDcVCQtReBuEuQ0OdXBXnUmNRUMBHP=JiP55RwYOKqOgszXEg@mail.gmail.com>
Message-ID: <01046CE9-0875-41B9-B289-A5535269F413@uni-tuebingen.de>


> On 17. Feb 2024, at 09:16, Henrik Bengtsson <henrik.bengtsson at gmail.com> wrote:
> 
> I can confirm that this has to fixed in R.utils. This gist is that
> R.utils does lots of validation of read/write permissions, and deep
> down it rely on system("dir") as a fallback method. If this is down
> toward dirname(tempdir()), then it'll find a lot of files, e.g.
> 
> [?]
> 
> So, yeah, wow!  I'll look into fixing this, probably by removing this
> fallback approach, which is very rarely needed; it was added way back
> when Sys.readlink() didn't cover all cases.

Thanks for looking into this, Henrik! Feel free to let me know if I can help with anything.

- Stefan

From ggene@|ogyp@ck@ge @end|ng |rom gm@||@com  Sat Feb 17 13:51:31 2024
From: ggene@|ogyp@ck@ge @end|ng |rom gm@||@com (Package Maintainer)
Date: Sat, 17 Feb 2024 12:51:31 +0000
Subject: [R-pkg-devel] Conversion failure in 'mbcsToSbcs'
In-Reply-To: <20240215181724.7ccfbc83@arachnoid>
References: <CAA8crwe=Ahry5kf_x6P1HXJ5coAZRfZJyv=arJUhVq0nm1khDA@mail.gmail.com>
 <20231117185557.7ab22a8d@arachnoid>
 <CAA8crwfV15isVC7jzbbiN46Vg3=ceeZnMGn0MvoG7VW32z282Q@mail.gmail.com>
 <20231119182539.2483cbdb@Tarkus>
 <CAA8crwfZkcHqwDBhnF4aHrpL7ZkVmFJWNu0eV4PiV9ppfg1n+A@mail.gmail.com>
 <20240215181724.7ccfbc83@arachnoid>
Message-ID: <CAA8crwevmYJkkxBTY7-MgTDYxt87TUf7maXmUj-hOvejc2wy1w@mail.gmail.com>

Dear Ivan:

Thank you for your help again.

Thanks for your suggestion to use cairo_pdf() instead of pdf() to
allow for the multi-lingual plots.

I incorporated your advice and added the the code you suggested:

<<results=hide,echo=FALSE>>=
my.Swd <- function(name, width, height, ...)
 grDevices::cairo_pdf(
  filename = paste(name, "pdf", sep = "."),
  width = width, height = height
 )
@
\SweaveOpts{grdevice=my.Swd,pdf=FALSE}

as shown in lines 49-56 in my new vignette file here
(https://github.com/lindsayrutter/ggenealogy/blob/master/vignettes/ggenealogy.Rnw).

Upon attempting to build (R CMD build ggenealogy), I received the ERROR:

Error: processing vignette 'ggenealogy.Rnw' failed with diagnostics:
object 'my.Swd' not found
--- failed re-building ?ggenealogy.Rnw?

I tried replacing the code you suggested to various locations and
separating the \SweaveOpts line to be located at separate locations.
However, I received the same ERROR each time.

Do you have any suggestions or ideas on how to resolve this error?

I again thank you for your help with this issue.

Kind regards,
LAR


On Thu, Feb 15, 2024 at 3:17?PM Ivan Krylov <krylov.r00t at gmail.com> wrote:
>
> ? Mon, 12 Feb 2024 16:01:27 +0000
> Package Maintainer <ggenealogypackage at gmail.com> ?????:
>
> > Unfortunately, I received a reply from the CRAN submission team
> > stating that my vignette file is still obtaining the "mbcsToSbcs"
> > ERROR as is shown here
> > (https://win-builder.r-project.org/incoming_pretest/ggenealogy_1.0.3_20240212_152455/Debian/00check.log).
>
> I am sorry for leading you down the wrong way with my advice. It turns
> out that no 8-bit Type-1 encoding known to pdf() can represent both
> 'Lubom?r Kub??ek' and 'Anders ?gren':
>
> lapply(
>  setNames(nm = c(
>   'latin1', 'cp1252', 'latin2', 'latin7',
>   'latin-9', 'CP1250', 'CP1257'
>  )), function(enc)
>   iconv(enc2utf8(c(
>    'Lubom?r Kub??ek', 'Anders ?gren'
>   )), 'UTF-8', enc, toRaw = TRUE)
> ) |> sapply(lengths)
> # one of the two strings cannot be represented, returning a NULL:
> #      latin1 cp1252 latin2 latin7 latin-9 CP1250 CP1257
> # [1,]      0      0     15      0       0     15      0
> # [2,]     12     12      0     12      12      0     12
>
> While it may still be possible to give extra parameters to pdf() to use
> a font encoding that covers all the relevant characters, it seems
> easier to switch to cairo_pdf() for your multi-lingual plots. Place the
> following somewhere in the beginning of the vignette:
>
> <<results=hide,echo=FALSE>>=
> my.Swd <- function(name, width, height, ...)
>  grDevices::cairo_pdf(
>   filename = paste(name, "pdf", sep = "."),
>   width = width, height = height
>  )
> @
> \SweaveOpts{grdevice=my.Swd,pdf=FALSE}
>
> This should define a new plot device function for Sweave, one that
> handles more Unicode characters correctly.
>
> > PS: Thanks for the advice about plain text mode. Hopefully, I have
> > correctly abide by that advice in this current email.
>
> This e-mail arrived in plain text, thank you!
>
> --
> Best regards,
> Ivan


From murdoch@dunc@n @end|ng |rom gm@||@com  Sat Feb 17 14:18:33 2024
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sat, 17 Feb 2024 08:18:33 -0500
Subject: [R-pkg-devel] Conversion failure in 'mbcsToSbcs'
In-Reply-To: <CAA8crwevmYJkkxBTY7-MgTDYxt87TUf7maXmUj-hOvejc2wy1w@mail.gmail.com>
References: <CAA8crwe=Ahry5kf_x6P1HXJ5coAZRfZJyv=arJUhVq0nm1khDA@mail.gmail.com>
 <20231117185557.7ab22a8d@arachnoid>
 <CAA8crwfV15isVC7jzbbiN46Vg3=ceeZnMGn0MvoG7VW32z282Q@mail.gmail.com>
 <20231119182539.2483cbdb@Tarkus>
 <CAA8crwfZkcHqwDBhnF4aHrpL7ZkVmFJWNu0eV4PiV9ppfg1n+A@mail.gmail.com>
 <20240215181724.7ccfbc83@arachnoid>
 <CAA8crwevmYJkkxBTY7-MgTDYxt87TUf7maXmUj-hOvejc2wy1w@mail.gmail.com>
Message-ID: <eeee3682-885a-488f-a58f-5b7f9f9f3461@gmail.com>

At line 66 of your document, you have this chunk:

<<echo=FALSE>>=
rm(list=ls())
@

That removed the device.  You need to put its definition after that. 
(It might also need to come earlier if you're doing plotting before 
this, and again even later if you remove it again.)

By the way, I'd recommend using knitr for Rnw documents instead of 
Sweave.  It will require a few changes, but in general it's more 
flexible and works a bit better.

Duncan Murdoch



On 17/02/2024 7:51 a.m., Package Maintainer wrote:
> Dear Ivan:
> 
> Thank you for your help again.
> 
> Thanks for your suggestion to use cairo_pdf() instead of pdf() to
> allow for the multi-lingual plots.
> 
> I incorporated your advice and added the the code you suggested:
> 
> <<results=hide,echo=FALSE>>=
> my.Swd <- function(name, width, height, ...)
>   grDevices::cairo_pdf(
>    filename = paste(name, "pdf", sep = "."),
>    width = width, height = height
>   )
> @
> \SweaveOpts{grdevice=my.Swd,pdf=FALSE}
> 
> as shown in lines 49-56 in my new vignette file here
> (https://github.com/lindsayrutter/ggenealogy/blob/master/vignettes/ggenealogy.Rnw).
> 
> Upon attempting to build (R CMD build ggenealogy), I received the ERROR:
> 
> Error: processing vignette 'ggenealogy.Rnw' failed with diagnostics:
> object 'my.Swd' not found
> --- failed re-building ?ggenealogy.Rnw?
> 
> I tried replacing the code you suggested to various locations and
> separating the \SweaveOpts line to be located at separate locations.
> However, I received the same ERROR each time.
> 
> Do you have any suggestions or ideas on how to resolve this error?
> 
> I again thank you for your help with this issue.
> 
> Kind regards,
> LAR
> 
> 
> On Thu, Feb 15, 2024 at 3:17?PM Ivan Krylov <krylov.r00t at gmail.com> wrote:
>>
>> ? Mon, 12 Feb 2024 16:01:27 +0000
>> Package Maintainer <ggenealogypackage at gmail.com> ?????:
>>
>>> Unfortunately, I received a reply from the CRAN submission team
>>> stating that my vignette file is still obtaining the "mbcsToSbcs"
>>> ERROR as is shown here
>>> (https://win-builder.r-project.org/incoming_pretest/ggenealogy_1.0.3_20240212_152455/Debian/00check.log).
>>
>> I am sorry for leading you down the wrong way with my advice. It turns
>> out that no 8-bit Type-1 encoding known to pdf() can represent both
>> 'Lubom?r Kub??ek' and 'Anders ?gren':
>>
>> lapply(
>>   setNames(nm = c(
>>    'latin1', 'cp1252', 'latin2', 'latin7',
>>    'latin-9', 'CP1250', 'CP1257'
>>   )), function(enc)
>>    iconv(enc2utf8(c(
>>     'Lubom?r Kub??ek', 'Anders ?gren'
>>    )), 'UTF-8', enc, toRaw = TRUE)
>> ) |> sapply(lengths)
>> # one of the two strings cannot be represented, returning a NULL:
>> #      latin1 cp1252 latin2 latin7 latin-9 CP1250 CP1257
>> # [1,]      0      0     15      0       0     15      0
>> # [2,]     12     12      0     12      12      0     12
>>
>> While it may still be possible to give extra parameters to pdf() to use
>> a font encoding that covers all the relevant characters, it seems
>> easier to switch to cairo_pdf() for your multi-lingual plots. Place the
>> following somewhere in the beginning of the vignette:
>>
>> <<results=hide,echo=FALSE>>=
>> my.Swd <- function(name, width, height, ...)
>>   grDevices::cairo_pdf(
>>    filename = paste(name, "pdf", sep = "."),
>>    width = width, height = height
>>   )
>> @
>> \SweaveOpts{grdevice=my.Swd,pdf=FALSE}
>>
>> This should define a new plot device function for Sweave, one that
>> handles more Unicode characters correctly.
>>
>>> PS: Thanks for the advice about plain text mode. Hopefully, I have
>>> correctly abide by that advice in this current email.
>>
>> This e-mail arrived in plain text, thank you!
>>
>> --
>> Best regards,
>> Ivan
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From kev|nu@hey @end|ng |rom gm@||@com  Sat Feb 17 22:46:38 2024
From: kev|nu@hey @end|ng |rom gm@||@com (Kevin Ushey)
Date: Sat, 17 Feb 2024 13:46:38 -0800
Subject: [R-pkg-devel] 
 Unusually long execution time for R.utils::gzip on r-devel-windows
In-Reply-To: <01046CE9-0875-41B9-B289-A5535269F413@uni-tuebingen.de>
References: <CA730087-BFE7-47A5-A62C-F2C079142D33@uni-tuebingen.de>
 <CAFDcVCTPexNOOQizj3kbu6MjohnP+w5MG9K0teo22FgOd4k2Fw@mail.gmail.com>
 <CAFDcVCQtReBuEuQ0OdXBXnUmNRUMBHP=JiP55RwYOKqOgszXEg@mail.gmail.com>
 <01046CE9-0875-41B9-B289-A5535269F413@uni-tuebingen.de>
Message-ID: <CAJXgQP0Dr-k5Yc24nxR_+rVz9XHDJ16RLwic4zK-U+_0bvSwJQ@mail.gmail.com>

FWIW, as far as I can tell, Sys.readlink() still doesn't handle
symlinks (or junction points) on Windows. Were you thinking of
normalizePath()? That does now resolve both symlinks and junction
points on Windows (courtesy of a lot of work from Tomas), although I
don't recall the exact versions in which support was introduced. But
that would still give you a more efficient way of detecting such files
on Windows.

Kevin

On Sat, Feb 17, 2024 at 3:21?AM Stefan Mayer
<stefan.mayer at uni-tuebingen.de> wrote:
>
>
> > On 17. Feb 2024, at 09:16, Henrik Bengtsson <henrik.bengtsson at gmail.com> wrote:
> >
> > I can confirm that this has to fixed in R.utils. This gist is that
> > R.utils does lots of validation of read/write permissions, and deep
> > down it rely on system("dir") as a fallback method. If this is down
> > toward dirname(tempdir()), then it'll find a lot of files, e.g.
> >
> > [?]
> >
> > So, yeah, wow!  I'll look into fixing this, probably by removing this
> > fallback approach, which is very rarely needed; it was added way back
> > when Sys.readlink() didn't cover all cases.
>
> Thanks for looking into this, Henrik! Feel free to let me know if I can help with anything.
>
> - Stefan
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From ggene@|ogyp@ck@ge @end|ng |rom gm@||@com  Mon Feb 19 13:27:03 2024
From: ggene@|ogyp@ck@ge @end|ng |rom gm@||@com (Package Maintainer)
Date: Mon, 19 Feb 2024 12:27:03 +0000
Subject: [R-pkg-devel] Conversion failure in 'mbcsToSbcs'
In-Reply-To: <eeee3682-885a-488f-a58f-5b7f9f9f3461@gmail.com>
References: <CAA8crwe=Ahry5kf_x6P1HXJ5coAZRfZJyv=arJUhVq0nm1khDA@mail.gmail.com>
 <20231117185557.7ab22a8d@arachnoid>
 <CAA8crwfV15isVC7jzbbiN46Vg3=ceeZnMGn0MvoG7VW32z282Q@mail.gmail.com>
 <20231119182539.2483cbdb@Tarkus>
 <CAA8crwfZkcHqwDBhnF4aHrpL7ZkVmFJWNu0eV4PiV9ppfg1n+A@mail.gmail.com>
 <20240215181724.7ccfbc83@arachnoid>
 <CAA8crwevmYJkkxBTY7-MgTDYxt87TUf7maXmUj-hOvejc2wy1w@mail.gmail.com>
 <eeee3682-885a-488f-a58f-5b7f9f9f3461@gmail.com>
Message-ID: <CAA8crwdoGRvtQ=7zW_TaO9dWmbtQPF-oX9w+=Y0WE_d2bcQwyw@mail.gmail.com>

Hello all:

Thank you both for your advice.

I attempted to upload the latest version to CRAN, and again received
the notification that the package did not pass.

It seems there are no warnings or errors (only 2 notes) on windows
(https://win-builder.r-project.org/incoming_pretest/ggenealogy_1.0.3_20240219_122904/Windows/00check.log)
and debian (https://win-builder.r-project.org/incoming_pretest/ggenealogy_1.0.3_20240219_122904/Debian/00check.log).

One of the notes is simply stating that the package has been archived
(which occurred even when I contacted folks before the deadline). The
other note I can fix easily (an unrecognized file type in the main
directory).

The only error delineated to me appears to be from a submission back
in November 2023
(https://cran-archive.r-project.org/web/checks/2023/2023-11-14_check_results_ggenealogy.html).

Is there anything particular I should do?

Thank you.

Kind regards,
LAR

On Sat, Feb 17, 2024 at 1:18?PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>
> At line 66 of your document, you have this chunk:
>
> <<echo=FALSE>>=
> rm(list=ls())
> @
>
> That removed the device.  You need to put its definition after that.
> (It might also need to come earlier if you're doing plotting before
> this, and again even later if you remove it again.)
>
> By the way, I'd recommend using knitr for Rnw documents instead of
> Sweave.  It will require a few changes, but in general it's more
> flexible and works a bit better.
>
> Duncan Murdoch
>
>
>
> On 17/02/2024 7:51 a.m., Package Maintainer wrote:
> > Dear Ivan:
> >
> > Thank you for your help again.
> >
> > Thanks for your suggestion to use cairo_pdf() instead of pdf() to
> > allow for the multi-lingual plots.
> >
> > I incorporated your advice and added the the code you suggested:
> >
> > <<results=hide,echo=FALSE>>=
> > my.Swd <- function(name, width, height, ...)
> >   grDevices::cairo_pdf(
> >    filename = paste(name, "pdf", sep = "."),
> >    width = width, height = height
> >   )
> > @
> > \SweaveOpts{grdevice=my.Swd,pdf=FALSE}
> >
> > as shown in lines 49-56 in my new vignette file here
> > (https://github.com/lindsayrutter/ggenealogy/blob/master/vignettes/ggenealogy.Rnw).
> >
> > Upon attempting to build (R CMD build ggenealogy), I received the ERROR:
> >
> > Error: processing vignette 'ggenealogy.Rnw' failed with diagnostics:
> > object 'my.Swd' not found
> > --- failed re-building ?ggenealogy.Rnw?
> >
> > I tried replacing the code you suggested to various locations and
> > separating the \SweaveOpts line to be located at separate locations.
> > However, I received the same ERROR each time.
> >
> > Do you have any suggestions or ideas on how to resolve this error?
> >
> > I again thank you for your help with this issue.
> >
> > Kind regards,
> > LAR
> >
> >
> > On Thu, Feb 15, 2024 at 3:17?PM Ivan Krylov <krylov.r00t at gmail.com> wrote:
> >>
> >> ? Mon, 12 Feb 2024 16:01:27 +0000
> >> Package Maintainer <ggenealogypackage at gmail.com> ?????:
> >>
> >>> Unfortunately, I received a reply from the CRAN submission team
> >>> stating that my vignette file is still obtaining the "mbcsToSbcs"
> >>> ERROR as is shown here
> >>> (https://win-builder.r-project.org/incoming_pretest/ggenealogy_1.0.3_20240212_152455/Debian/00check.log).
> >>
> >> I am sorry for leading you down the wrong way with my advice. It turns
> >> out that no 8-bit Type-1 encoding known to pdf() can represent both
> >> 'Lubom?r Kub??ek' and 'Anders ?gren':
> >>
> >> lapply(
> >>   setNames(nm = c(
> >>    'latin1', 'cp1252', 'latin2', 'latin7',
> >>    'latin-9', 'CP1250', 'CP1257'
> >>   )), function(enc)
> >>    iconv(enc2utf8(c(
> >>     'Lubom?r Kub??ek', 'Anders ?gren'
> >>    )), 'UTF-8', enc, toRaw = TRUE)
> >> ) |> sapply(lengths)
> >> # one of the two strings cannot be represented, returning a NULL:
> >> #      latin1 cp1252 latin2 latin7 latin-9 CP1250 CP1257
> >> # [1,]      0      0     15      0       0     15      0
> >> # [2,]     12     12      0     12      12      0     12
> >>
> >> While it may still be possible to give extra parameters to pdf() to use
> >> a font encoding that covers all the relevant characters, it seems
> >> easier to switch to cairo_pdf() for your multi-lingual plots. Place the
> >> following somewhere in the beginning of the vignette:
> >>
> >> <<results=hide,echo=FALSE>>=
> >> my.Swd <- function(name, width, height, ...)
> >>   grDevices::cairo_pdf(
> >>    filename = paste(name, "pdf", sep = "."),
> >>    width = width, height = height
> >>   )
> >> @
> >> \SweaveOpts{grdevice=my.Swd,pdf=FALSE}
> >>
> >> This should define a new plot device function for Sweave, one that
> >> handles more Unicode characters correctly.
> >>
> >>> PS: Thanks for the advice about plain text mode. Hopefully, I have
> >>> correctly abide by that advice in this current email.
> >>
> >> This e-mail arrived in plain text, thank you!
> >>
> >> --
> >> Best regards,
> >> Ivan
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From murdoch@dunc@n @end|ng |rom gm@||@com  Mon Feb 19 15:20:04 2024
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Mon, 19 Feb 2024 09:20:04 -0500
Subject: [R-pkg-devel] Conversion failure in 'mbcsToSbcs'
In-Reply-To: <CAA8crwdoGRvtQ=7zW_TaO9dWmbtQPF-oX9w+=Y0WE_d2bcQwyw@mail.gmail.com>
References: <CAA8crwe=Ahry5kf_x6P1HXJ5coAZRfZJyv=arJUhVq0nm1khDA@mail.gmail.com>
 <20231117185557.7ab22a8d@arachnoid>
 <CAA8crwfV15isVC7jzbbiN46Vg3=ceeZnMGn0MvoG7VW32z282Q@mail.gmail.com>
 <20231119182539.2483cbdb@Tarkus>
 <CAA8crwfZkcHqwDBhnF4aHrpL7ZkVmFJWNu0eV4PiV9ppfg1n+A@mail.gmail.com>
 <20240215181724.7ccfbc83@arachnoid>
 <CAA8crwevmYJkkxBTY7-MgTDYxt87TUf7maXmUj-hOvejc2wy1w@mail.gmail.com>
 <eeee3682-885a-488f-a58f-5b7f9f9f3461@gmail.com>
 <CAA8crwdoGRvtQ=7zW_TaO9dWmbtQPF-oX9w+=Y0WE_d2bcQwyw@mail.gmail.com>
Message-ID: <39c3c921-c594-4c79-8dd9-adaee37322ec@gmail.com>

Removing (or moving to inst) the unrecognized file should be sufficient.

Duncan Murdoch

On 19/02/2024 7:27 a.m., Package Maintainer wrote:
> Hello all:
> 
> Thank you both for your advice.
> 
> I attempted to upload the latest version to CRAN, and again received
> the notification that the package did not pass.
> 
> It seems there are no warnings or errors (only 2 notes) on windows
> (https://win-builder.r-project.org/incoming_pretest/ggenealogy_1.0.3_20240219_122904/Windows/00check.log)
> and debian (https://win-builder.r-project.org/incoming_pretest/ggenealogy_1.0.3_20240219_122904/Debian/00check.log).
> 
> One of the notes is simply stating that the package has been archived
> (which occurred even when I contacted folks before the deadline). The
> other note I can fix easily (an unrecognized file type in the main
> directory).
> 
> The only error delineated to me appears to be from a submission back
> in November 2023
> (https://cran-archive.r-project.org/web/checks/2023/2023-11-14_check_results_ggenealogy.html).
> 
> Is there anything particular I should do? >
> Thank you.
> 
> Kind regards,
> LAR
> 
> On Sat, Feb 17, 2024 at 1:18?PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>>
>> At line 66 of your document, you have this chunk:
>>
>> <<echo=FALSE>>=
>> rm(list=ls())
>> @
>>
>> That removed the device.  You need to put its definition after that.
>> (It might also need to come earlier if you're doing plotting before
>> this, and again even later if you remove it again.)
>>
>> By the way, I'd recommend using knitr for Rnw documents instead of
>> Sweave.  It will require a few changes, but in general it's more
>> flexible and works a bit better.
>>
>> Duncan Murdoch
>>
>>
>>
>> On 17/02/2024 7:51 a.m., Package Maintainer wrote:
>>> Dear Ivan:
>>>
>>> Thank you for your help again.
>>>
>>> Thanks for your suggestion to use cairo_pdf() instead of pdf() to
>>> allow for the multi-lingual plots.
>>>
>>> I incorporated your advice and added the the code you suggested:
>>>
>>> <<results=hide,echo=FALSE>>=
>>> my.Swd <- function(name, width, height, ...)
>>>    grDevices::cairo_pdf(
>>>     filename = paste(name, "pdf", sep = "."),
>>>     width = width, height = height
>>>    )
>>> @
>>> \SweaveOpts{grdevice=my.Swd,pdf=FALSE}
>>>
>>> as shown in lines 49-56 in my new vignette file here
>>> (https://github.com/lindsayrutter/ggenealogy/blob/master/vignettes/ggenealogy.Rnw).
>>>
>>> Upon attempting to build (R CMD build ggenealogy), I received the ERROR:
>>>
>>> Error: processing vignette 'ggenealogy.Rnw' failed with diagnostics:
>>> object 'my.Swd' not found
>>> --- failed re-building ?ggenealogy.Rnw?
>>>
>>> I tried replacing the code you suggested to various locations and
>>> separating the \SweaveOpts line to be located at separate locations.
>>> However, I received the same ERROR each time.
>>>
>>> Do you have any suggestions or ideas on how to resolve this error?
>>>
>>> I again thank you for your help with this issue.
>>>
>>> Kind regards,
>>> LAR
>>>
>>>
>>> On Thu, Feb 15, 2024 at 3:17?PM Ivan Krylov <krylov.r00t at gmail.com> wrote:
>>>>
>>>> ? Mon, 12 Feb 2024 16:01:27 +0000
>>>> Package Maintainer <ggenealogypackage at gmail.com> ?????:
>>>>
>>>>> Unfortunately, I received a reply from the CRAN submission team
>>>>> stating that my vignette file is still obtaining the "mbcsToSbcs"
>>>>> ERROR as is shown here
>>>>> (https://win-builder.r-project.org/incoming_pretest/ggenealogy_1.0.3_20240212_152455/Debian/00check.log).
>>>>
>>>> I am sorry for leading you down the wrong way with my advice. It turns
>>>> out that no 8-bit Type-1 encoding known to pdf() can represent both
>>>> 'Lubom?r Kub??ek' and 'Anders ?gren':
>>>>
>>>> lapply(
>>>>    setNames(nm = c(
>>>>     'latin1', 'cp1252', 'latin2', 'latin7',
>>>>     'latin-9', 'CP1250', 'CP1257'
>>>>    )), function(enc)
>>>>     iconv(enc2utf8(c(
>>>>      'Lubom?r Kub??ek', 'Anders ?gren'
>>>>     )), 'UTF-8', enc, toRaw = TRUE)
>>>> ) |> sapply(lengths)
>>>> # one of the two strings cannot be represented, returning a NULL:
>>>> #      latin1 cp1252 latin2 latin7 latin-9 CP1250 CP1257
>>>> # [1,]      0      0     15      0       0     15      0
>>>> # [2,]     12     12      0     12      12      0     12
>>>>
>>>> While it may still be possible to give extra parameters to pdf() to use
>>>> a font encoding that covers all the relevant characters, it seems
>>>> easier to switch to cairo_pdf() for your multi-lingual plots. Place the
>>>> following somewhere in the beginning of the vignette:
>>>>
>>>> <<results=hide,echo=FALSE>>=
>>>> my.Swd <- function(name, width, height, ...)
>>>>    grDevices::cairo_pdf(
>>>>     filename = paste(name, "pdf", sep = "."),
>>>>     width = width, height = height
>>>>    )
>>>> @
>>>> \SweaveOpts{grdevice=my.Swd,pdf=FALSE}
>>>>
>>>> This should define a new plot device function for Sweave, one that
>>>> handles more Unicode characters correctly.
>>>>
>>>>> PS: Thanks for the advice about plain text mode. Hopefully, I have
>>>>> correctly abide by that advice in this current email.
>>>>
>>>> This e-mail arrived in plain text, thank you!
>>>>
>>>> --
>>>> Best regards,
>>>> Ivan
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>


From ggene@|ogyp@ck@ge @end|ng |rom gm@||@com  Mon Feb 19 18:48:24 2024
From: ggene@|ogyp@ck@ge @end|ng |rom gm@||@com (Package Maintainer)
Date: Mon, 19 Feb 2024 17:48:24 +0000
Subject: [R-pkg-devel] Conversion failure in 'mbcsToSbcs'
In-Reply-To: <39c3c921-c594-4c79-8dd9-adaee37322ec@gmail.com>
References: <CAA8crwe=Ahry5kf_x6P1HXJ5coAZRfZJyv=arJUhVq0nm1khDA@mail.gmail.com>
 <20231117185557.7ab22a8d@arachnoid>
 <CAA8crwfV15isVC7jzbbiN46Vg3=ceeZnMGn0MvoG7VW32z282Q@mail.gmail.com>
 <20231119182539.2483cbdb@Tarkus>
 <CAA8crwfZkcHqwDBhnF4aHrpL7ZkVmFJWNu0eV4PiV9ppfg1n+A@mail.gmail.com>
 <20240215181724.7ccfbc83@arachnoid>
 <CAA8crwevmYJkkxBTY7-MgTDYxt87TUf7maXmUj-hOvejc2wy1w@mail.gmail.com>
 <eeee3682-885a-488f-a58f-5b7f9f9f3461@gmail.com>
 <CAA8crwdoGRvtQ=7zW_TaO9dWmbtQPF-oX9w+=Y0WE_d2bcQwyw@mail.gmail.com>
 <39c3c921-c594-4c79-8dd9-adaee37322ec@gmail.com>
Message-ID: <CAA8crwdDqCnJOa8iWy6zDROMsXORamtioDB7RGG-20bB6OECLA@mail.gmail.com>

Dear Duncan:

Thank you for the feedback about that. I have removed the unrecognized
file and resubmitted the package. Thanks again.

Kind regards,
LAR


On Mon, Feb 19, 2024 at 2:20?PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>
> Removing (or moving to inst) the unrecognized file should be sufficient.
>
> Duncan Murdoch
>
> On 19/02/2024 7:27 a.m., Package Maintainer wrote:
> > Hello all:
> >
> > Thank you both for your advice.
> >
> > I attempted to upload the latest version to CRAN, and again received
> > the notification that the package did not pass.
> >
> > It seems there are no warnings or errors (only 2 notes) on windows
> > (https://win-builder.r-project.org/incoming_pretest/ggenealogy_1.0.3_20240219_122904/Windows/00check.log)
> > and debian (https://win-builder.r-project.org/incoming_pretest/ggenealogy_1.0.3_20240219_122904/Debian/00check.log).
> >
> > One of the notes is simply stating that the package has been archived
> > (which occurred even when I contacted folks before the deadline). The
> > other note I can fix easily (an unrecognized file type in the main
> > directory).
> >
> > The only error delineated to me appears to be from a submission back
> > in November 2023
> > (https://cran-archive.r-project.org/web/checks/2023/2023-11-14_check_results_ggenealogy.html).
> >
> > Is there anything particular I should do? >
> > Thank you.
> >
> > Kind regards,
> > LAR
> >
> > On Sat, Feb 17, 2024 at 1:18?PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> >>
> >> At line 66 of your document, you have this chunk:
> >>
> >> <<echo=FALSE>>=
> >> rm(list=ls())
> >> @
> >>
> >> That removed the device.  You need to put its definition after that.
> >> (It might also need to come earlier if you're doing plotting before
> >> this, and again even later if you remove it again.)
> >>
> >> By the way, I'd recommend using knitr for Rnw documents instead of
> >> Sweave.  It will require a few changes, but in general it's more
> >> flexible and works a bit better.
> >>
> >> Duncan Murdoch
> >>
> >>
> >>
> >> On 17/02/2024 7:51 a.m., Package Maintainer wrote:
> >>> Dear Ivan:
> >>>
> >>> Thank you for your help again.
> >>>
> >>> Thanks for your suggestion to use cairo_pdf() instead of pdf() to
> >>> allow for the multi-lingual plots.
> >>>
> >>> I incorporated your advice and added the the code you suggested:
> >>>
> >>> <<results=hide,echo=FALSE>>=
> >>> my.Swd <- function(name, width, height, ...)
> >>>    grDevices::cairo_pdf(
> >>>     filename = paste(name, "pdf", sep = "."),
> >>>     width = width, height = height
> >>>    )
> >>> @
> >>> \SweaveOpts{grdevice=my.Swd,pdf=FALSE}
> >>>
> >>> as shown in lines 49-56 in my new vignette file here
> >>> (https://github.com/lindsayrutter/ggenealogy/blob/master/vignettes/ggenealogy.Rnw).
> >>>
> >>> Upon attempting to build (R CMD build ggenealogy), I received the ERROR:
> >>>
> >>> Error: processing vignette 'ggenealogy.Rnw' failed with diagnostics:
> >>> object 'my.Swd' not found
> >>> --- failed re-building ?ggenealogy.Rnw?
> >>>
> >>> I tried replacing the code you suggested to various locations and
> >>> separating the \SweaveOpts line to be located at separate locations.
> >>> However, I received the same ERROR each time.
> >>>
> >>> Do you have any suggestions or ideas on how to resolve this error?
> >>>
> >>> I again thank you for your help with this issue.
> >>>
> >>> Kind regards,
> >>> LAR
> >>>
> >>>
> >>> On Thu, Feb 15, 2024 at 3:17?PM Ivan Krylov <krylov.r00t at gmail.com> wrote:
> >>>>
> >>>> ? Mon, 12 Feb 2024 16:01:27 +0000
> >>>> Package Maintainer <ggenealogypackage at gmail.com> ?????:
> >>>>
> >>>>> Unfortunately, I received a reply from the CRAN submission team
> >>>>> stating that my vignette file is still obtaining the "mbcsToSbcs"
> >>>>> ERROR as is shown here
> >>>>> (https://win-builder.r-project.org/incoming_pretest/ggenealogy_1.0.3_20240212_152455/Debian/00check.log).
> >>>>
> >>>> I am sorry for leading you down the wrong way with my advice. It turns
> >>>> out that no 8-bit Type-1 encoding known to pdf() can represent both
> >>>> 'Lubom?r Kub??ek' and 'Anders ?gren':
> >>>>
> >>>> lapply(
> >>>>    setNames(nm = c(
> >>>>     'latin1', 'cp1252', 'latin2', 'latin7',
> >>>>     'latin-9', 'CP1250', 'CP1257'
> >>>>    )), function(enc)
> >>>>     iconv(enc2utf8(c(
> >>>>      'Lubom?r Kub??ek', 'Anders ?gren'
> >>>>     )), 'UTF-8', enc, toRaw = TRUE)
> >>>> ) |> sapply(lengths)
> >>>> # one of the two strings cannot be represented, returning a NULL:
> >>>> #      latin1 cp1252 latin2 latin7 latin-9 CP1250 CP1257
> >>>> # [1,]      0      0     15      0       0     15      0
> >>>> # [2,]     12     12      0     12      12      0     12
> >>>>
> >>>> While it may still be possible to give extra parameters to pdf() to use
> >>>> a font encoding that covers all the relevant characters, it seems
> >>>> easier to switch to cairo_pdf() for your multi-lingual plots. Place the
> >>>> following somewhere in the beginning of the vignette:
> >>>>
> >>>> <<results=hide,echo=FALSE>>=
> >>>> my.Swd <- function(name, width, height, ...)
> >>>>    grDevices::cairo_pdf(
> >>>>     filename = paste(name, "pdf", sep = "."),
> >>>>     width = width, height = height
> >>>>    )
> >>>> @
> >>>> \SweaveOpts{grdevice=my.Swd,pdf=FALSE}
> >>>>
> >>>> This should define a new plot device function for Sweave, one that
> >>>> handles more Unicode characters correctly.
> >>>>
> >>>>> PS: Thanks for the advice about plain text mode. Hopefully, I have
> >>>>> correctly abide by that advice in this current email.
> >>>>
> >>>> This e-mail arrived in plain text, thank you!
> >>>>
> >>>> --
> >>>> Best regards,
> >>>> Ivan
> >>>
> >>> ______________________________________________
> >>> R-package-devel at r-project.org mailing list
> >>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>
>


From ggene@|ogyp@ck@ge @end|ng |rom gm@||@com  Wed Feb 21 13:29:02 2024
From: ggene@|ogyp@ck@ge @end|ng |rom gm@||@com (Package Maintainer)
Date: Wed, 21 Feb 2024 12:29:02 +0000
Subject: [R-pkg-devel] Conversion failure in 'mbcsToSbcs'
In-Reply-To: <CAA8crwdDqCnJOa8iWy6zDROMsXORamtioDB7RGG-20bB6OECLA@mail.gmail.com>
References: <CAA8crwe=Ahry5kf_x6P1HXJ5coAZRfZJyv=arJUhVq0nm1khDA@mail.gmail.com>
 <20231117185557.7ab22a8d@arachnoid>
 <CAA8crwfV15isVC7jzbbiN46Vg3=ceeZnMGn0MvoG7VW32z282Q@mail.gmail.com>
 <20231119182539.2483cbdb@Tarkus>
 <CAA8crwfZkcHqwDBhnF4aHrpL7ZkVmFJWNu0eV4PiV9ppfg1n+A@mail.gmail.com>
 <20240215181724.7ccfbc83@arachnoid>
 <CAA8crwevmYJkkxBTY7-MgTDYxt87TUf7maXmUj-hOvejc2wy1w@mail.gmail.com>
 <eeee3682-885a-488f-a58f-5b7f9f9f3461@gmail.com>
 <CAA8crwdoGRvtQ=7zW_TaO9dWmbtQPF-oX9w+=Y0WE_d2bcQwyw@mail.gmail.com>
 <39c3c921-c594-4c79-8dd9-adaee37322ec@gmail.com>
 <CAA8crwdDqCnJOa8iWy6zDROMsXORamtioDB7RGG-20bB6OECLA@mail.gmail.com>
Message-ID: <CAA8crwd9Y6PxoVL=H6KGK9ftYHSP2v0xC9XniivyDzpzWXMaJA@mail.gmail.com>

Hello:

Thank you again for your help.

I resubmitted the package (after it passed R CMD check) and it seems
there is still an ERROR on the windows builder as shown here:
https://win-builder.r-project.org/incoming_pretest/ggenealogy_1.0.3_20240221_121754/Debian/00check.log

Error: processing vignette 'ggenealogy.Rnw' failed with diagnostics:
 chunk 58 (label = plotCBText)
Error in graphics::strwidth(pMPDF$label, "inches") :
  conversion failure on 'Lubom?r  Kub??ek' in 'mbcsToSbcs': for ? (U+010D)

My latest vignette file can be found on the package github:

https://github.com/lindsayrutter/ggenealogy/blob/master/vignettes/ggenealogy.Rnw

The recommended cairo_pdf() syntax was used on lines 47-54:

<<results=hide,echo=FALSE>>=
my.Swd <- function(name, width, height, ...)
 grDevices::cairo_pdf(
  filename = paste(name, "pdf", sep = "."),
  width = width, height = height
 )
@
\SweaveOpts{grdevice=my.Swd,pdf=FALSE}

I am a bit unsure how to remove this persisting ERROR; is there
anything else you might recommend I look into?

Thank you again.

LAR

On Mon, Feb 19, 2024 at 5:48?PM Package Maintainer
<ggenealogypackage at gmail.com> wrote:
>
> Dear Duncan:
>
> Thank you for the feedback about that. I have removed the unrecognized
> file and resubmitted the package. Thanks again.
>
> Kind regards,
> LAR
>
>
> On Mon, Feb 19, 2024 at 2:20?PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> >
> > Removing (or moving to inst) the unrecognized file should be sufficient.
> >
> > Duncan Murdoch
> >
> > On 19/02/2024 7:27 a.m., Package Maintainer wrote:
> > > Hello all:
> > >
> > > Thank you both for your advice.
> > >
> > > I attempted to upload the latest version to CRAN, and again received
> > > the notification that the package did not pass.
> > >
> > > It seems there are no warnings or errors (only 2 notes) on windows
> > > (https://win-builder.r-project.org/incoming_pretest/ggenealogy_1.0.3_20240219_122904/Windows/00check.log)
> > > and debian (https://win-builder.r-project.org/incoming_pretest/ggenealogy_1.0.3_20240219_122904/Debian/00check.log).
> > >
> > > One of the notes is simply stating that the package has been archived
> > > (which occurred even when I contacted folks before the deadline). The
> > > other note I can fix easily (an unrecognized file type in the main
> > > directory).
> > >
> > > The only error delineated to me appears to be from a submission back
> > > in November 2023
> > > (https://cran-archive.r-project.org/web/checks/2023/2023-11-14_check_results_ggenealogy.html).
> > >
> > > Is there anything particular I should do? >
> > > Thank you.
> > >
> > > Kind regards,
> > > LAR
> > >
> > > On Sat, Feb 17, 2024 at 1:18?PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> > >>
> > >> At line 66 of your document, you have this chunk:
> > >>
> > >> <<echo=FALSE>>=
> > >> rm(list=ls())
> > >> @
> > >>
> > >> That removed the device.  You need to put its definition after that.
> > >> (It might also need to come earlier if you're doing plotting before
> > >> this, and again even later if you remove it again.)
> > >>
> > >> By the way, I'd recommend using knitr for Rnw documents instead of
> > >> Sweave.  It will require a few changes, but in general it's more
> > >> flexible and works a bit better.
> > >>
> > >> Duncan Murdoch
> > >>
> > >>
> > >>
> > >> On 17/02/2024 7:51 a.m., Package Maintainer wrote:
> > >>> Dear Ivan:
> > >>>
> > >>> Thank you for your help again.
> > >>>
> > >>> Thanks for your suggestion to use cairo_pdf() instead of pdf() to
> > >>> allow for the multi-lingual plots.
> > >>>
> > >>> I incorporated your advice and added the the code you suggested:
> > >>>
> > >>> <<results=hide,echo=FALSE>>=
> > >>> my.Swd <- function(name, width, height, ...)
> > >>>    grDevices::cairo_pdf(
> > >>>     filename = paste(name, "pdf", sep = "."),
> > >>>     width = width, height = height
> > >>>    )
> > >>> @
> > >>> \SweaveOpts{grdevice=my.Swd,pdf=FALSE}
> > >>>
> > >>> as shown in lines 49-56 in my new vignette file here
> > >>> (https://github.com/lindsayrutter/ggenealogy/blob/master/vignettes/ggenealogy.Rnw).
> > >>>
> > >>> Upon attempting to build (R CMD build ggenealogy), I received the ERROR:
> > >>>
> > >>> Error: processing vignette 'ggenealogy.Rnw' failed with diagnostics:
> > >>> object 'my.Swd' not found
> > >>> --- failed re-building ?ggenealogy.Rnw?
> > >>>
> > >>> I tried replacing the code you suggested to various locations and
> > >>> separating the \SweaveOpts line to be located at separate locations.
> > >>> However, I received the same ERROR each time.
> > >>>
> > >>> Do you have any suggestions or ideas on how to resolve this error?
> > >>>
> > >>> I again thank you for your help with this issue.
> > >>>
> > >>> Kind regards,
> > >>> LAR
> > >>>
> > >>>
> > >>> On Thu, Feb 15, 2024 at 3:17?PM Ivan Krylov <krylov.r00t at gmail.com> wrote:
> > >>>>
> > >>>> ? Mon, 12 Feb 2024 16:01:27 +0000
> > >>>> Package Maintainer <ggenealogypackage at gmail.com> ?????:
> > >>>>
> > >>>>> Unfortunately, I received a reply from the CRAN submission team
> > >>>>> stating that my vignette file is still obtaining the "mbcsToSbcs"
> > >>>>> ERROR as is shown here
> > >>>>> (https://win-builder.r-project.org/incoming_pretest/ggenealogy_1.0.3_20240212_152455/Debian/00check.log).
> > >>>>
> > >>>> I am sorry for leading you down the wrong way with my advice. It turns
> > >>>> out that no 8-bit Type-1 encoding known to pdf() can represent both
> > >>>> 'Lubom?r Kub??ek' and 'Anders ?gren':
> > >>>>
> > >>>> lapply(
> > >>>>    setNames(nm = c(
> > >>>>     'latin1', 'cp1252', 'latin2', 'latin7',
> > >>>>     'latin-9', 'CP1250', 'CP1257'
> > >>>>    )), function(enc)
> > >>>>     iconv(enc2utf8(c(
> > >>>>      'Lubom?r Kub??ek', 'Anders ?gren'
> > >>>>     )), 'UTF-8', enc, toRaw = TRUE)
> > >>>> ) |> sapply(lengths)
> > >>>> # one of the two strings cannot be represented, returning a NULL:
> > >>>> #      latin1 cp1252 latin2 latin7 latin-9 CP1250 CP1257
> > >>>> # [1,]      0      0     15      0       0     15      0
> > >>>> # [2,]     12     12      0     12      12      0     12
> > >>>>
> > >>>> While it may still be possible to give extra parameters to pdf() to use
> > >>>> a font encoding that covers all the relevant characters, it seems
> > >>>> easier to switch to cairo_pdf() for your multi-lingual plots. Place the
> > >>>> following somewhere in the beginning of the vignette:
> > >>>>
> > >>>> <<results=hide,echo=FALSE>>=
> > >>>> my.Swd <- function(name, width, height, ...)
> > >>>>    grDevices::cairo_pdf(
> > >>>>     filename = paste(name, "pdf", sep = "."),
> > >>>>     width = width, height = height
> > >>>>    )
> > >>>> @
> > >>>> \SweaveOpts{grdevice=my.Swd,pdf=FALSE}
> > >>>>
> > >>>> This should define a new plot device function for Sweave, one that
> > >>>> handles more Unicode characters correctly.
> > >>>>
> > >>>>> PS: Thanks for the advice about plain text mode. Hopefully, I have
> > >>>>> correctly abide by that advice in this current email.
> > >>>>
> > >>>> This e-mail arrived in plain text, thank you!
> > >>>>
> > >>>> --
> > >>>> Best regards,
> > >>>> Ivan
> > >>>
> > >>> ______________________________________________
> > >>> R-package-devel at r-project.org mailing list
> > >>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> > >>
> >


From kry|ov@r00t @end|ng |rom gm@||@com  Wed Feb 21 13:44:58 2024
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Wed, 21 Feb 2024 15:44:58 +0300
Subject: [R-pkg-devel] Conversion failure in 'mbcsToSbcs'
In-Reply-To: <CAA8crwd9Y6PxoVL=H6KGK9ftYHSP2v0xC9XniivyDzpzWXMaJA@mail.gmail.com>
References: <CAA8crwe=Ahry5kf_x6P1HXJ5coAZRfZJyv=arJUhVq0nm1khDA@mail.gmail.com>
 <20231117185557.7ab22a8d@arachnoid>
 <CAA8crwfV15isVC7jzbbiN46Vg3=ceeZnMGn0MvoG7VW32z282Q@mail.gmail.com>
 <20231119182539.2483cbdb@Tarkus>
 <CAA8crwfZkcHqwDBhnF4aHrpL7ZkVmFJWNu0eV4PiV9ppfg1n+A@mail.gmail.com>
 <20240215181724.7ccfbc83@arachnoid>
 <CAA8crwevmYJkkxBTY7-MgTDYxt87TUf7maXmUj-hOvejc2wy1w@mail.gmail.com>
 <eeee3682-885a-488f-a58f-5b7f9f9f3461@gmail.com>
 <CAA8crwdoGRvtQ=7zW_TaO9dWmbtQPF-oX9w+=Y0WE_d2bcQwyw@mail.gmail.com>
 <39c3c921-c594-4c79-8dd9-adaee37322ec@gmail.com>
 <CAA8crwdDqCnJOa8iWy6zDROMsXORamtioDB7RGG-20bB6OECLA@mail.gmail.com>
 <CAA8crwd9Y6PxoVL=H6KGK9ftYHSP2v0xC9XniivyDzpzWXMaJA@mail.gmail.com>
Message-ID: <20240221154458.5bea2858@arachnoid>

? Wed, 21 Feb 2024 12:29:02 +0000
Package Maintainer <ggenealogypackage at gmail.com> ?????:

> Error: processing vignette 'ggenealogy.Rnw' failed with diagnostics:
>  chunk 58 (label = plotCBText)

In order to use the non-standard graphics device, the chunk must
set the option fig=TRUE. Otherwise, when something calls
graphics::strwidth('Lubom?r Kub??ek', "inches"), R notices that no
graphics device is active and creates a default one, which happens to
be pdf() and has all these problems. With fig=TRUE, Sweave will
initialise the cairo_pdf() device first, and then graphics::strwidth()
will use the existing device, avoiding the error.

-- 
Best regards,
Ivan


From ggene@|ogyp@ck@ge @end|ng |rom gm@||@com  Wed Feb 21 18:25:14 2024
From: ggene@|ogyp@ck@ge @end|ng |rom gm@||@com (Package Maintainer)
Date: Wed, 21 Feb 2024 17:25:14 +0000
Subject: [R-pkg-devel] Conversion failure in 'mbcsToSbcs'
In-Reply-To: <20240221154458.5bea2858@arachnoid>
References: <CAA8crwe=Ahry5kf_x6P1HXJ5coAZRfZJyv=arJUhVq0nm1khDA@mail.gmail.com>
 <20231117185557.7ab22a8d@arachnoid>
 <CAA8crwfV15isVC7jzbbiN46Vg3=ceeZnMGn0MvoG7VW32z282Q@mail.gmail.com>
 <20231119182539.2483cbdb@Tarkus>
 <CAA8crwfZkcHqwDBhnF4aHrpL7ZkVmFJWNu0eV4PiV9ppfg1n+A@mail.gmail.com>
 <20240215181724.7ccfbc83@arachnoid>
 <CAA8crwevmYJkkxBTY7-MgTDYxt87TUf7maXmUj-hOvejc2wy1w@mail.gmail.com>
 <eeee3682-885a-488f-a58f-5b7f9f9f3461@gmail.com>
 <CAA8crwdoGRvtQ=7zW_TaO9dWmbtQPF-oX9w+=Y0WE_d2bcQwyw@mail.gmail.com>
 <39c3c921-c594-4c79-8dd9-adaee37322ec@gmail.com>
 <CAA8crwdDqCnJOa8iWy6zDROMsXORamtioDB7RGG-20bB6OECLA@mail.gmail.com>
 <CAA8crwd9Y6PxoVL=H6KGK9ftYHSP2v0xC9XniivyDzpzWXMaJA@mail.gmail.com>
 <20240221154458.5bea2858@arachnoid>
Message-ID: <CAA8crwd03LV56nYJei8SHVDZf6jJym-zjNK7pQvKg2RVoZA6bQ@mail.gmail.com>

Dear Ivan and all:

Thank you for this helpful advice. I have received confirmation that
the package is now on its way to CRAN.

Many thanks again.

LAR

On Wed, Feb 21, 2024 at 12:45?PM Ivan Krylov <krylov.r00t at gmail.com> wrote:
>
> ? Wed, 21 Feb 2024 12:29:02 +0000
> Package Maintainer <ggenealogypackage at gmail.com> ?????:
>
> > Error: processing vignette 'ggenealogy.Rnw' failed with diagnostics:
> >  chunk 58 (label = plotCBText)
>
> In order to use the non-standard graphics device, the chunk must
> set the option fig=TRUE. Otherwise, when something calls
> graphics::strwidth('Lubom?r Kub??ek', "inches"), R notices that no
> graphics device is active and creates a default one, which happens to
> be pdf() and has all these problems. With fig=TRUE, Sweave will
> initialise the cairo_pdf() device first, and then graphics::strwidth()
> will use the existing device, avoiding the error.
>
> --
> Best regards,
> Ivan


From @p@rk7 @end|ng |rom u||@edu  Wed Feb 21 23:15:32 2024
From: @p@rk7 @end|ng |rom u||@edu (Park, Sung Jae)
Date: Wed, 21 Feb 2024 22:15:32 +0000
Subject: [R-pkg-devel] =?utf-8?q?Package_required_but_not_available=3A_?=
 =?utf-8?b?4oCYYXJyb3figJk=?=
Message-ID: <SA1PR22MB297786B7A5FFCD632E4C52A493572@SA1PR22MB2977.namprd22.prod.outlook.com>

Hi,

I?m writing to seek assistance regarding an issue we?re encountering during the submission process of our new package to CRAN.
The package in question is currently working smoothly on R CMD check on Windows; however, we are facing a specific error when running R CMD check on Debian. The error message we?ve got from CRAN is as follows:

```
? checking package dependencies ... ERROR
  Package required but not available: ?arrow?

  See section ?The DESCRIPTION file? in the ?Writing R Extensions?
manual.
```

We have ensured that the ?arrow? package is properly listed in DESCRIPTION file under the ?Imports:?.
Could you please provide guidance on how to resolve this? Any help will be valuable.

Thank you in advance.

Best,
--Sungjae



	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu Feb 22 10:01:14 2024
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 22 Feb 2024 04:01:14 -0500
Subject: [R-pkg-devel] 
 =?utf-8?q?Package_required_but_not_available=3A_?=
 =?utf-8?b?4oCYYXJyb3figJk=?=
In-Reply-To: <SA1PR22MB297786B7A5FFCD632E4C52A493572@SA1PR22MB2977.namprd22.prod.outlook.com>
References: <SA1PR22MB297786B7A5FFCD632E4C52A493572@SA1PR22MB2977.namprd22.prod.outlook.com>
Message-ID: <8c072e2a-0c76-4ce6-bfa0-d4f336f0143f@gmail.com>

If you look on the CRAN check results for arrow, you'll see it has 
errors on the Linux platforms that use clang, and can't be installed there.

For you to deal with this, you should make arrow into a suggested 
package, and if it is missing, work around that without generating an 
error.  Another choice would be to work with the arrow developers to get 
it to install on the systems where it fails now, but it's a big package, 
so that would likely be a lot harder.

Duncan Murdoch

On 21/02/2024 5:15 p.m., Park, Sung Jae wrote:
> Hi,
> 
> I?m writing to seek assistance regarding an issue we?re encountering during the submission process of our new package to CRAN.
> The package in question is currently working smoothly on R CMD check on Windows; however, we are facing a specific error when running R CMD check on Debian. The error message we?ve got from CRAN is as follows:
> 
> ```
> ? checking package dependencies ... ERROR
>    Package required but not available: ?arrow?
> 
>    See section ?The DESCRIPTION file? in the ?Writing R Extensions?
> manual.
> ```
> 
> We have ensured that the ?arrow? package is properly listed in DESCRIPTION file under the ?Imports:?.
> Could you please provide guidance on how to resolve this? Any help will be valuable.
> 
> Thank you in advance.
> 
> Best,
> --Sungjae
> 
> 
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From rhe|p @end|ng |rom eoo@@dd@@n|  Thu Feb 22 10:02:21 2024
From: rhe|p @end|ng |rom eoo@@dd@@n| (Jan van der Laan)
Date: Thu, 22 Feb 2024 10:02:21 +0100
Subject: [R-pkg-devel] 
 =?utf-8?q?Package_required_but_not_available=3A_?=
 =?utf-8?b?4oCYYXJyb3figJk=?=
In-Reply-To: <SA1PR22MB297786B7A5FFCD632E4C52A493572@SA1PR22MB2977.namprd22.prod.outlook.com>
References: <SA1PR22MB297786B7A5FFCD632E4C52A493572@SA1PR22MB2977.namprd22.prod.outlook.com>
Message-ID: <37568811-1486-4f46-8fc5-45da4a8f3766@eoos.dds.nl>

This error indicates that the arrow package is unavailable on the system 
where your package is checked. At 
https://cran.r-project.org/web/checks/check_results_arrow.html you can 
see that the arrow package is currently not working with clang on fedora 
an debian. This is not something that you can fix. All you can do is 
report this with the arrow maintainers if it is not already reported, 
and wait until this is fixed.

HTH,
Jan


On 21-02-2024 23:15, Park, Sung Jae wrote:
> Hi,
> 
> I?m writing to seek assistance regarding an issue we?re encountering during the submission process of our new package to CRAN.
> The package in question is currently working smoothly on R CMD check on Windows; however, we are facing a specific error when running R CMD check on Debian. The error message we?ve got from CRAN is as follows:
> 
> ```
> ? checking package dependencies ... ERROR
>    Package required but not available: ?arrow?
> 
>    See section ?The DESCRIPTION file? in the ?Writing R Extensions?
> manual.
> ```
> 
> We have ensured that the ?arrow? package is properly listed in DESCRIPTION file under the ?Imports:?.
> Could you please provide guidance on how to resolve this? Any help will be valuable.
> 
> Thank you in advance.
> 
> Best,
> --Sungjae
> 
> 
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From toth@dene@ @end|ng |rom kogentum@hu  Thu Feb 22 12:47:31 2024
From: toth@dene@ @end|ng |rom kogentum@hu (=?UTF-8?B?RMOpbmVzIFTDs3Ro?=)
Date: Thu, 22 Feb 2024 12:47:31 +0100
Subject: [R-pkg-devel] 
 =?utf-8?q?Package_required_but_not_available=3A_?=
 =?utf-8?b?4oCYYXJyb3figJk=?=
In-Reply-To: <8c072e2a-0c76-4ce6-bfa0-d4f336f0143f@gmail.com>
References: <SA1PR22MB297786B7A5FFCD632E4C52A493572@SA1PR22MB2977.namprd22.prod.outlook.com>
 <8c072e2a-0c76-4ce6-bfa0-d4f336f0143f@gmail.com>
Message-ID: <0efeb391-ad7d-420c-62b5-b54a40ae6a98@kogentum.hu>

Depending on your use case you can also take a look at the nanoarrow 
package (https://cran.r-project.org/package=nanoarrow). Maybe it 
provides all the features you need and has a much smaller footprint than 
'arrow'.

Best,
Denes


On 2/22/24 10:01, Duncan Murdoch wrote:
> If you look on the CRAN check results for arrow, you'll see it has 
> errors on the Linux platforms that use clang, and can't be installed there.
> 
> For you to deal with this, you should make arrow into a suggested 
> package, and if it is missing, work around that without generating an 
> error.? Another choice would be to work with the arrow developers to get 
> it to install on the systems where it fails now, but it's a big package, 
> so that would likely be a lot harder.
> 
> Duncan Murdoch
> 
> On 21/02/2024 5:15 p.m., Park, Sung Jae wrote:
>> Hi,
>>
>> I?m writing to seek assistance regarding an issue we?re encountering 
>> during the submission process of our new package to CRAN.
>> The package in question is currently working smoothly on R CMD check 
>> on Windows; however, we are facing a specific error when running R CMD 
>> check on Debian. The error message we?ve got from CRAN is as follows:
>>
>> ```
>> ? checking package dependencies ... ERROR
>> ?? Package required but not available: ?arrow?
>>
>> ?? See section ?The DESCRIPTION file? in the ?Writing R Extensions?
>> manual.
>> ```
>>
>> We have ensured that the ?arrow? package is properly listed in 
>> DESCRIPTION file under the ?Imports:?.
>> Could you please provide guidance on how to resolve this? Any help 
>> will be valuable.
>>
>> Thank you in advance.
>>
>> Best,
>> --Sungjae
>>
>>
>>
>> ????[[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From @p@rk7 @end|ng |rom u||@edu  Thu Feb 22 15:21:56 2024
From: @p@rk7 @end|ng |rom u||@edu (Park, Sung Jae)
Date: Thu, 22 Feb 2024 14:21:56 +0000
Subject: [R-pkg-devel] 
 =?utf-8?q?Package_required_but_not_available=3A_?=
 =?utf-8?b?4oCYYXJyb3figJk=?=
In-Reply-To: <0efeb391-ad7d-420c-62b5-b54a40ae6a98@kogentum.hu>
References: <SA1PR22MB297786B7A5FFCD632E4C52A493572@SA1PR22MB2977.namprd22.prod.outlook.com>
 <8c072e2a-0c76-4ce6-bfa0-d4f336f0143f@gmail.com>
 <0efeb391-ad7d-420c-62b5-b54a40ae6a98@kogentum.hu>
Message-ID: <PH0PR22MB29817E3470781E786C8FA59B93562@PH0PR22MB2981.namprd22.prod.outlook.com>

Thank you so much for all of you! I haven?t thought that ?arrow? package itself will have an error.
Since ?arrow? package isn?t a crucial component of our package, I made ?arrow? package into ?Suggests? and update cran-comment.md accordingly.
I appreciate your advice once again.

Best,
--Sungjae

From: D?nes T?th <toth.denes at kogentum.hu>
Date: Thursday, February 22, 2024 at 6:47?AM
To: Duncan Murdoch <murdoch.duncan at gmail.com>, Park, Sung Jae <spark7 at ufl.edu>, r-package-devel at r-project.org <r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] Package required but not available: ?arrow?
[External Email]

Depending on your use case you can also take a look at the nanoarrow
package (https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fcran.r-project.org%2Fpackage%3Dnanoarrow&data=05%7C02%7Cspark7%40ufl.edu%7C1e2fd4f4cb684488106208dc339c0e93%7C0d4da0f84a314d76ace60a62331e1b84%7C0%7C0%7C638441992558568835%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7C%7C&sdata=uJO%2BkxcEtEoDRg9ynyEYuOOCjO%2B30L05lwqIaPifijE%3D&reserved=0<https://cran.r-project.org/package=nanoarrow>). Maybe it
provides all the features you need and has a much smaller footprint than
'arrow'.

Best,
Denes


On 2/22/24 10:01, Duncan Murdoch wrote:
> If you look on the CRAN check results for arrow, you'll see it has
> errors on the Linux platforms that use clang, and can't be installed there.
>
> For you to deal with this, you should make arrow into a suggested
> package, and if it is missing, work around that without generating an
> error.  Another choice would be to work with the arrow developers to get
> it to install on the systems where it fails now, but it's a big package,
> so that would likely be a lot harder.
>
> Duncan Murdoch
>
> On 21/02/2024 5:15 p.m., Park, Sung Jae wrote:
>> Hi,
>>
>> I?m writing to seek assistance regarding an issue we?re encountering
>> during the submission process of our new package to CRAN.
>> The package in question is currently working smoothly on R CMD check
>> on Windows; however, we are facing a specific error when running R CMD
>> check on Debian. The error message we?ve got from CRAN is as follows:
>>
>> ```
>> ? checking package dependencies ... ERROR
>>    Package required but not available: ?arrow?
>>
>>    See section ?The DESCRIPTION file? in the ?Writing R Extensions?
>> manual.
>> ```
>>
>> We have ensured that the ?arrow? package is properly listed in
>> DESCRIPTION file under the ?Imports:?.
>> Could you please provide guidance on how to resolve this? Any help
>> will be valuable.
>>
>> Thank you in advance.
>>
>> Best,
>> --Sungjae
>>
>>
>>
>>     [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-package-devel&data=05%7C02%7Cspark7%40ufl.edu%7C1e2fd4f4cb684488106208dc339c0e93%7C0d4da0f84a314d76ace60a62331e1b84%7C0%7C0%7C638441992558577549%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7C%7C&sdata=osbKs4kHdz70V75aL3IcTsoc9hWi1m2G5x4Yp9SiiRE%3D&reserved=0<https://stat.ethz.ch/mailman/listinfo/r-package-devel>
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-package-devel&data=05%7C02%7Cspark7%40ufl.edu%7C1e2fd4f4cb684488106208dc339c0e93%7C0d4da0f84a314d76ace60a62331e1b84%7C0%7C0%7C638441992558583779%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7C%7C&sdata=9%2FKDNWc62Z9PRFIKGZjkGB8pj16134RKu694qO%2Fg6vs%3D&reserved=0<https://stat.ethz.ch/mailman/listinfo/r-package-devel>
>

	[[alternative HTML version deleted]]


From th|@|@n|c @end|ng |rom gm@||@com  Thu Feb 22 15:24:27 2024
From: th|@|@n|c @end|ng |rom gm@||@com (Nic Crane)
Date: Thu, 22 Feb 2024 09:24:27 -0500
Subject: [R-pkg-devel] 
	=?utf-8?q?Package_required_but_not_available=3A_?=
	=?utf-8?b?4oCYYXJyb3figJk=?=
In-Reply-To: <PH0PR22MB29817E3470781E786C8FA59B93562@PH0PR22MB2981.namprd22.prod.outlook.com>
References: <SA1PR22MB297786B7A5FFCD632E4C52A493572@SA1PR22MB2977.namprd22.prod.outlook.com>
 <8c072e2a-0c76-4ce6-bfa0-d4f336f0143f@gmail.com>
 <0efeb391-ad7d-420c-62b5-b54a40ae6a98@kogentum.hu>
 <PH0PR22MB29817E3470781E786C8FA59B93562@PH0PR22MB2981.namprd22.prod.outlook.com>
Message-ID: <CAFT6ooA_8VDJdj5BeD1Mi05o=vKZMM8sLjwMS1JaCKXQTNcfAA@mail.gmail.com>

FWIW the arrow maintainers are aware of this and we submitted a fix to CRAN
a couple of weeks ago, which is currently in the review queue at
https://cran.r-project.org/incoming/pending/

Nic

On Thu, 22 Feb 2024 at 09:22, Park, Sung Jae <spark7 at ufl.edu> wrote:

> Thank you so much for all of you! I haven?t thought that ?arrow? package
> itself will have an error.
> Since ?arrow? package isn?t a crucial component of our package, I made
> ?arrow? package into ?Suggests? and update cran-comment.md accordingly.
> I appreciate your advice once again.
>
> Best,
> --Sungjae
>
> From: D?nes T?th <toth.denes at kogentum.hu>
> Date: Thursday, February 22, 2024 at 6:47?AM
> To: Duncan Murdoch <murdoch.duncan at gmail.com>, Park, Sung Jae <
> spark7 at ufl.edu>, r-package-devel at r-project.org <
> r-package-devel at r-project.org>
> Subject: Re: [R-pkg-devel] Package required but not available: ?arrow?
> [External Email]
>
> Depending on your use case you can also take a look at the nanoarrow
> package (
> https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fcran.r-project.org%2Fpackage%3Dnanoarrow&data=05%7C02%7Cspark7%40ufl.edu%7C1e2fd4f4cb684488106208dc339c0e93%7C0d4da0f84a314d76ace60a62331e1b84%7C0%7C0%7C638441992558568835%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7C%7C&sdata=uJO%2BkxcEtEoDRg9ynyEYuOOCjO%2B30L05lwqIaPifijE%3D&reserved=0
> <https://cran.r-project.org/package=nanoarrow>). Maybe it
> provides all the features you need and has a much smaller footprint than
> 'arrow'.
>
> Best,
> Denes
>
>
> On 2/22/24 10:01, Duncan Murdoch wrote:
> > If you look on the CRAN check results for arrow, you'll see it has
> > errors on the Linux platforms that use clang, and can't be installed
> there.
> >
> > For you to deal with this, you should make arrow into a suggested
> > package, and if it is missing, work around that without generating an
> > error.  Another choice would be to work with the arrow developers to get
> > it to install on the systems where it fails now, but it's a big package,
> > so that would likely be a lot harder.
> >
> > Duncan Murdoch
> >
> > On 21/02/2024 5:15 p.m., Park, Sung Jae wrote:
> >> Hi,
> >>
> >> I?m writing to seek assistance regarding an issue we?re encountering
> >> during the submission process of our new package to CRAN.
> >> The package in question is currently working smoothly on R CMD check
> >> on Windows; however, we are facing a specific error when running R CMD
> >> check on Debian. The error message we?ve got from CRAN is as follows:
> >>
> >> ```
> >> ? checking package dependencies ... ERROR
> >>    Package required but not available: ?arrow?
> >>
> >>    See section ?The DESCRIPTION file? in the ?Writing R Extensions?
> >> manual.
> >> ```
> >>
> >> We have ensured that the ?arrow? package is properly listed in
> >> DESCRIPTION file under the ?Imports:?.
> >> Could you please provide guidance on how to resolve this? Any help
> >> will be valuable.
> >>
> >> Thank you in advance.
> >>
> >> Best,
> >> --Sungjae
> >>
> >>
> >>
> >>     [[alternative HTML version deleted]]
> >>
> >> ______________________________________________
> >> R-package-devel at r-project.org mailing list
> >>
> https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-package-devel&data=05%7C02%7Cspark7%40ufl.edu%7C1e2fd4f4cb684488106208dc339c0e93%7C0d4da0f84a314d76ace60a62331e1b84%7C0%7C0%7C638441992558577549%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7C%7C&sdata=osbKs4kHdz70V75aL3IcTsoc9hWi1m2G5x4Yp9SiiRE%3D&reserved=0
> <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> >
> https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-package-devel&data=05%7C02%7Cspark7%40ufl.edu%7C1e2fd4f4cb684488106208dc339c0e93%7C0d4da0f84a314d76ace60a62331e1b84%7C0%7C0%7C638441992558583779%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7C%7C&sdata=9%2FKDNWc62Z9PRFIKGZjkGB8pj16134RKu694qO%2Fg6vs%3D&reserved=0
> <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
> >
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From edd @end|ng |rom deb|@n@org  Thu Feb 22 15:28:57 2024
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Thu, 22 Feb 2024 08:28:57 -0600
Subject: [R-pkg-devel] =?utf-8?q?Package_required_but_not_available=3A?=
 =?utf-8?b?4oCYYXJyb3figJk=?=
In-Reply-To: <8c072e2a-0c76-4ce6-bfa0-d4f336f0143f@gmail.com>
References: <SA1PR22MB297786B7A5FFCD632E4C52A493572@SA1PR22MB2977.namprd22.prod.outlook.com>
 <8c072e2a-0c76-4ce6-bfa0-d4f336f0143f@gmail.com>
Message-ID: <26071.23081.994554.748077@rob.eddelbuettel.com>


On 22 February 2024 at 04:01, Duncan Murdoch wrote:
| For you to deal with this, you should make arrow into a suggested 
| package,

For what it is worth, that is exactly what package tiledb does.

Yet the Suggests: still lead to a NOTE requiring a human to override which
did not happen until I gently nudged after the 'five work days' had lapsed.

So full agreement that 'in theory' a Suggests: should help and is the weaker
and simpler dependency.  However 'in practice' it can still lead to being
held up up when the weak-dependency package does not build.

[ As for D?nes's point, most if not all the internals in package tiledb are
  actually on nanoarrow but we offer one code path returning an Arrow Table
  object and that requires 'arrow' the package for the instantiation.

  So it really all boils down to 'Lightweight is the right weight' as we say
  over at www.tinyverse.org.  But given that the public API offers an Arrow
  accessor, it is a little late to pull back from it.  And Arrow is a powerful
  and useful tool. Building it, however, can have its issues... ]

Anyway, while poking around the issue when waiting, I was also told by Arrow
developers that the issue (AFAICT a missing header) is fixed, and looking at
CRAN's incoming reveals the package has been sitting there since Feb 8 (see
https://cran.r-project.org/incoming/pending/).  So would be good to hear from
CRAN what if anything is happening here.

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From |eo@m@d@ @end|ng |rom @yon|c@eu  Fri Feb 23 16:53:44 2024
From: |eo@m@d@ @end|ng |rom @yon|c@eu (Leo Mada)
Date: Fri, 23 Feb 2024 15:53:44 +0000
Subject: [R-pkg-devel] 
 =?utf-8?q?Package_required_but_not_available=3A_?=
 =?utf-8?b?4oCYYXJyb3figJk=?=
Message-ID: <VI1P192MB009549D962DDDEF789DD484E84552@VI1P192MB0095.EURP192.PROD.OUTLOOK.COM>

Dear Dirk & R-Members,

It seems that the version number is not incremented:
# Archived
arrow_14.0.2.1.tar.gz???2024-02-08 11:57 ?3.9M
# Pending
arrow_14.0.2.1.tar.gz???2024-02-08 18:24 ?3.9M

Maybe this is the reason why it got stuck in "pending".

Regarding such issues: maybe CRAN should warn if the version number of a new submission matches a previous one.

Sincerely,

Leonard


	[[alternative HTML version deleted]]


From edd @end|ng |rom deb|@n@org  Fri Feb 23 17:19:41 2024
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Fri, 23 Feb 2024 10:19:41 -0600
Subject: [R-pkg-devel] 
 =?utf-8?q?Package_required_but_not_available=3A_?=
 =?utf-8?b?4oCYYXJyb3figJk=?=
In-Reply-To: <VI1P192MB009549D962DDDEF789DD484E84552@VI1P192MB0095.EURP192.PROD.OUTLOOK.COM>
References: <VI1P192MB009549D962DDDEF789DD484E84552@VI1P192MB0095.EURP192.PROD.OUTLOOK.COM>
Message-ID: <26072.50589.667230.533311@rob.eddelbuettel.com>


On 23 February 2024 at 15:53, Leo Mada wrote:
| Dear Dirk & R-Members,
| 
| It seems that the version number is not incremented:
| # Archived
| arrow_14.0.2.1.tar.gz???2024-02-08 11:57 ?3.9M
| # Pending
| arrow_14.0.2.1.tar.gz???2024-02-08 18:24 ?3.9M
| 
| Maybe this is the reason why it got stuck in "pending".

No it is not.

The hint to increase version numbers on re-submission is a weaker 'should' or
'might', not a strong 'must'.

I have uploaded a few packages to CRAN over the last two decades, and like
others have made mistakes requiring iterations. I have not once increased a
version number.  If/when CRAN sees an error in its (automated, largely)
processing, the package is moved and the space is cleared allowing a fresh
upload. (Of course you cannot upload under the same filename twice _before_
the initial processing. By default uploads do not overwrite.)  Arhive/ is
distinct from pending.  POSIX semantics on times also help: your example
clearly shows that the one in archived is older by about 6 1/2 hours. 

That said, in case there are multiple rounds of email and discussion having
distinct numbers may ease identification of the particular package and
discussion thread. But it still makes sense to have this be a suggestion, not
a requirement.
 
Cheers, Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From Sunmee@K|m @end|ng |rom um@n|tob@@c@  Fri Feb 23 18:04:39 2024
From: Sunmee@K|m @end|ng |rom um@n|tob@@c@ (Sunmee Kim)
Date: Fri, 23 Feb 2024 17:04:39 +0000
Subject: [R-pkg-devel] CRAN Package Check Note: Warning: trimming empty
Message-ID: <YQXPR01MB56195F43DCA9ABF2ECC50F48F4552@YQXPR01MB5619.CANPRD01.PROD.OUTLOOK.COM>

Hello everyone,

I encountered a note in the CRAN package check results for the package I submitted and need some guidance on how to address it. The note appears under two flavors: r-devel-linux-x86_64-debian-clang, r-devel-linux-x86_64-debian-gcc.

The specific issue details are:
Check Details
Version: 1.0.4
Check: HTML version of manual
Result: NOTE
    Found the following problems:
    gesca.run.Rd:127:1: Warning: trimming empty <p>
    gesca.run.Rd:153:1: Warning: trimming empty <p>
    gesca.run.Rd:163:1: Warning: trimming empty <p>

Could anyone provide insights or suggestions on how to resolve this warning?

Thank you!
Sunmee

	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Sat Feb 24 12:40:08 2024
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sat, 24 Feb 2024 06:40:08 -0500
Subject: [R-pkg-devel] CRAN Package Check Note: Warning: trimming empty
In-Reply-To: <YQXPR01MB56195F43DCA9ABF2ECC50F48F4552@YQXPR01MB5619.CANPRD01.PROD.OUTLOOK.COM>
References: <YQXPR01MB56195F43DCA9ABF2ECC50F48F4552@YQXPR01MB5619.CANPRD01.PROD.OUTLOOK.COM>
Message-ID: <74c6e83f-c3db-4987-b753-6884bce15d91@gmail.com>

On 23/02/2024 12:04 p.m., Sunmee Kim wrote:
> Hello everyone,
> 
> I encountered a note in the CRAN package check results for the package I submitted and need some guidance on how to address it. The note appears under two flavors: r-devel-linux-x86_64-debian-clang, r-devel-linux-x86_64-debian-gcc.
> 
> The specific issue details are:
> Check Details
> Version: 1.0.4
> Check: HTML version of manual
> Result: NOTE
>      Found the following problems:
>      gesca.run.Rd:127:1: Warning: trimming empty <p>
>      gesca.run.Rd:153:1: Warning: trimming empty <p>
>      gesca.run.Rd:163:1: Warning: trimming empty <p>
> 
> Could anyone provide insights or suggestions on how to resolve this warning?
> 

What is in that file at those locations?

Duncan Murdoch


From |kry|ov @end|ng |rom d|@root@org  Sat Feb 24 14:03:58 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Sat, 24 Feb 2024 16:03:58 +0300
Subject: [R-pkg-devel] CRAN Package Check Note: Warning: trimming empty
In-Reply-To: <YQXPR01MB56195F43DCA9ABF2ECC50F48F4552@YQXPR01MB5619.CANPRD01.PROD.OUTLOOK.COM>
References: <YQXPR01MB56195F43DCA9ABF2ECC50F48F4552@YQXPR01MB5619.CANPRD01.PROD.OUTLOOK.COM>
Message-ID: <20240224160358.193dec60@Tarkus>

? Fri, 23 Feb 2024 17:04:39 +0000
Sunmee Kim <Sunmee.Kim at umanitoba.ca> ?????:

> Version: 1.0.4
> Check: HTML version of manual
> Result: NOTE

This may not be immediately obvious in the e-mail from CRAN, but I
think this is a reminder of a warning from the previous version of the
package. Haven't you just uploaded version 1.0.5? I'm not getting any
warnings for gesca_1.0.5.tar.gz from the /incoming/archive subdirectory
on the CRAN FTP server, except perhaps "This build time stamp is over a
month old", and the latest check looks almost clean in the same manner:
https://win-builder.r-project.org/incoming_pretest/gesca_1.0.5_20240223_172938/

What does the rest of the e-mail say?

-- 
Best regards,
Ivan


From ro||turner @end|ng |rom po@teo@net  Sun Feb 25 05:44:37 2024
From: ro||turner @end|ng |rom po@teo@net (Rolf Turner)
Date: Sun, 25 Feb 2024 04:44:37 +0000
Subject: [R-pkg-devel] 
 =?utf-8?q?Package_required_but_not_available=3A_?=
 =?utf-8?b?4oCYYXJyb3figJk=?=
In-Reply-To: <26072.50589.667230.533311@rob.eddelbuettel.com>
References: <VI1P192MB009549D962DDDEF789DD484E84552@VI1P192MB0095.EURP192.PROD.OUTLOOK.COM>
 <26072.50589.667230.533311@rob.eddelbuettel.com>
Message-ID: <20240225174437.20ce1ca7@rolf-Latitude-E7470>


On Fri, 23 Feb 2024 10:19:41 -0600
Dirk Eddelbuettel <edd at debian.org> wrote:

> 
> On 23 February 2024 at 15:53, Leo Mada wrote:
> | Dear Dirk & R-Members,
> | 
> | It seems that the version number is not incremented:
> | # Archived
> | arrow_14.0.2.1.tar.gz???2024-02-08 11:57 ?3.9M
> | # Pending
> | arrow_14.0.2.1.tar.gz???2024-02-08 18:24 ?3.9M
> | 
> | Maybe this is the reason why it got stuck in "pending".
> 
> No it is not.
> 
> The hint to increase version numbers on re-submission is a weaker
> 'should' or 'might', not a strong 'must'.
> 
> I have uploaded a few packages to CRAN over the last two decades, and
> like others have made mistakes requiring iterations. I have not once
> increased a version number.

That's as may be but IMHO (and AFAICS) it never hurts to increment the
version number, even if you've only corrected a trivial glitch.

cheers,

Rolf

-- 
Honorary Research Fellow
Department of Statistics
University of Auckland
Stats. Dep't. (secretaries) phone:
         +64-9-373-7599 ext. 89622
Home phone: +64-9-480-4619


From @|mon@urb@nek @end|ng |rom R-project@org  Sun Feb 25 21:19:20 2024
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Mon, 26 Feb 2024 09:19:20 +1300
Subject: [R-pkg-devel] 
 =?utf-8?q?Package_required_but_not_available=3A_?=
 =?utf-8?b?4oCYYXJyb3figJk=?=
In-Reply-To: <20240225174437.20ce1ca7@rolf-Latitude-E7470>
References: <VI1P192MB009549D962DDDEF789DD484E84552@VI1P192MB0095.EURP192.PROD.OUTLOOK.COM>
 <26072.50589.667230.533311@rob.eddelbuettel.com>
 <20240225174437.20ce1ca7@rolf-Latitude-E7470>
Message-ID: <793CFFAC-0BB6-4BB8-ACBC-70C10034DC9B@R-project.org>

To quote Rob: "Version numbers are cheap"

The way the policy is worded it is clear that you cannot complain if you didn't increase it as you are taking a risk. Also the the incoming FTP won't let you upload same version twice so it wasn't really a problem until more recently when there are multiple different ways to submit. Either way, changing the policy to MUST is probably the best way to avoid race conditions and certainly the only good practice.

Cheers,
Simon


> On 25/02/2024, at 5:44 PM, Rolf Turner <rolfturner at posteo.net> wrote:
> 
> 
> On Fri, 23 Feb 2024 10:19:41 -0600
> Dirk Eddelbuettel <edd at debian.org> wrote:
> 
>> 
>> On 23 February 2024 at 15:53, Leo Mada wrote:
>> | Dear Dirk & R-Members,
>> | 
>> | It seems that the version number is not incremented:
>> | # Archived
>> | arrow_14.0.2.1.tar.gz???2024-02-08 11:57 ?3.9M
>> | # Pending
>> | arrow_14.0.2.1.tar.gz???2024-02-08 18:24 ?3.9M
>> | 
>> | Maybe this is the reason why it got stuck in "pending".
>> 
>> No it is not.
>> 
>> The hint to increase version numbers on re-submission is a weaker
>> 'should' or 'might', not a strong 'must'.
>> 
>> I have uploaded a few packages to CRAN over the last two decades, and
>> like others have made mistakes requiring iterations. I have not once
>> increased a version number.
> 
> That's as may be but IMHO (and AFAICS) it never hurts to increment the
> version number, even if you've only corrected a trivial glitch.
> 
> cheers,
> 
> Rolf
> 
> -- 
> Honorary Research Fellow
> Department of Statistics
> University of Auckland
> Stats. Dep't. (secretaries) phone:
>         +64-9-373-7599 ext. 89622
> Home phone: +64-9-480-4619
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 


From edd @end|ng |rom deb|@n@org  Sun Feb 25 22:06:31 2024
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Sun, 25 Feb 2024 15:06:31 -0600
Subject: [R-pkg-devel] 
 =?utf-8?q?Package_required_but_not_available=3A_?=
 =?utf-8?b?4oCYYXJyb3figJk=?=
In-Reply-To: <793CFFAC-0BB6-4BB8-ACBC-70C10034DC9B@R-project.org>
References: <VI1P192MB009549D962DDDEF789DD484E84552@VI1P192MB0095.EURP192.PROD.OUTLOOK.COM>
 <26072.50589.667230.533311@rob.eddelbuettel.com>
 <20240225174437.20ce1ca7@rolf-Latitude-E7470>
 <793CFFAC-0BB6-4BB8-ACBC-70C10034DC9B@R-project.org>
Message-ID: <26075.43991.862939.832496@rob.eddelbuettel.com>


On 26 February 2024 at 09:19, Simon Urbanek wrote:
| [requiring increased is] best way [..] and certainly the only good practice.

No, not really. Another viewpoint, which is implemented in another project I
contribute to, is where a version + build_revision tuple exists if, and only
if, the underlying upload was accepted. Until then upload iterations are fine.

Hence s/only good practive/one possible way/.

Anyway: `arrow` is long back at CRAN (yay!) so this thread is done anyway.

Dirk
 
-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From cderv @end|ng |rom po@|t@co  Mon Feb 26 16:34:11 2024
From: cderv @end|ng |rom po@|t@co (Christophe Dervieux)
Date: Mon, 26 Feb 2024 16:34:11 +0100
Subject: [R-pkg-devel] CRAN checks for release of a package with new
 vignette engine
Message-ID: <CAAs3ibuvc5NGTr9ozGfBoS-R0_Ff8uJchYmL1hyHmhHGNbFArg@mail.gmail.com>

Hi,

I am trying to release a new version of the quarto R package. This new
version is adding support for a new vignette engine that will use quarto
CLI (https://quarto.org) when available. The vignettes inside the package
itself are '.qmd' files built with quarto.

While developing the feature, I noticed that R CMD check will query for
vignette engines information, and it will find engine in already installed
package (with `tools:::vignetteEngine`). So a package adding a new engine,
and using this engine for its vignette only works when the package is
installed before check.

Automated checks works ok on `r-devel-windows-x86_64`, but fails on
`r-devel-linux-x86_64-debian-gcc` because of this note

Check: package vignettes, Result: NOTE
  Package has 'vignettes' subdirectory but apparently no vignettes.
  Perhaps the 'VignetteBuilder' information is missing from the
  DESCRIPTION file?

I believe this happens because the package is not installed, so when R CMD
Check is doing the vignette checking, it won't find the quarto vignette
engine.

I am trying to understand what I could do for this package release,
considering checks are ok on windows r-devel, and only having the NOTE on
debian environment.

Should I consider this a false positive for this specific case ? Is there
any consideration to take for adding a new engine ?

Thank you

Christophe Dervieux

	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Mon Feb 26 18:20:31 2024
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Mon, 26 Feb 2024 12:20:31 -0500
Subject: [R-pkg-devel] CRAN checks for release of a package with new
 vignette engine
In-Reply-To: <CAAs3ibuvc5NGTr9ozGfBoS-R0_Ff8uJchYmL1hyHmhHGNbFArg@mail.gmail.com>
References: <CAAs3ibuvc5NGTr9ozGfBoS-R0_Ff8uJchYmL1hyHmhHGNbFArg@mail.gmail.com>
Message-ID: <352c79ba-2f2c-492a-b653-fb921d6a8ff9@gmail.com>

Could you show us the install and check logs for the problematic platform?

I don't think you'd get to the message you quote unless the install 
succeeded, so I think your diagnosis of the problem isn't right.  But 
maybe I'm wrong about that, and the install failed, perhaps because the 
Quarto tools were not available.

Duncan Murdoch

On 26/02/2024 10:34 a.m., Christophe Dervieux wrote:
> Hi,
> 
> I am trying to release a new version of the quarto R package. This new
> version is adding support for a new vignette engine that will use quarto
> CLI (https://quarto.org) when available. The vignettes inside the package
> itself are '.qmd' files built with quarto.
> 
> While developing the feature, I noticed that R CMD check will query for
> vignette engines information, and it will find engine in already installed
> package (with `tools:::vignetteEngine`). So a package adding a new engine,
> and using this engine for its vignette only works when the package is
> installed before check.
> 
> Automated checks works ok on `r-devel-windows-x86_64`, but fails on
> `r-devel-linux-x86_64-debian-gcc` because of this note
> 
> Check: package vignettes, Result: NOTE
>    Package has 'vignettes' subdirectory but apparently no vignettes.
>    Perhaps the 'VignetteBuilder' information is missing from the
>    DESCRIPTION file?
> 
> I believe this happens because the package is not installed, so when R CMD
> Check is doing the vignette checking, it won't find the quarto vignette
> engine.
> 
> I am trying to understand what I could do for this package release,
> considering checks are ok on windows r-devel, and only having the NOTE on
> debian environment.
> 
> Should I consider this a false positive for this specific case ? Is there
> any consideration to take for adding a new engine ?
> 
> Thank you
> 
> Christophe Dervieux
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From cderv @end|ng |rom po@|t@co  Mon Feb 26 21:14:39 2024
From: cderv @end|ng |rom po@|t@co (Christophe Dervieux)
Date: Mon, 26 Feb 2024 21:14:39 +0100
Subject: [R-pkg-devel] CRAN checks for release of a package with new
 vignette engine
In-Reply-To: <352c79ba-2f2c-492a-b653-fb921d6a8ff9@gmail.com>
References: <CAAs3ibuvc5NGTr9ozGfBoS-R0_Ff8uJchYmL1hyHmhHGNbFArg@mail.gmail.com>
 <352c79ba-2f2c-492a-b653-fb921d6a8ff9@gmail.com>
Message-ID: <CAAs3ibv099vtqAT5FnK9mVgdJ40uBsziXZBYkTqiiAiEZxisyQ@mail.gmail.com>

Thank you for your reply. I understand from the reply that the package
is installed first from the built .tar.gz uploaded before R CMD check
is ran on the bundle.
I made my assumption based on experience on CI environment where I
needed to explicitly install the package before running checks in
order for the vignette engine to be found.

Install did not fail. Here is the install log for
`r-devel-linux-x86_64-debian-gcc` platform

* installing *source* package ?quarto? ...
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
*** copying figures
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* DONE (quarto)


And the check log for the `r-devel-linux-x86_64-debian-gcc` platform

* using log directory ?/srv/hornik/tmp/CRAN/quarto.Rcheck?
* using R Under development (unstable) (2024-02-21 r85960)
* using platform: x86_64-pc-linux-gnu
* R was compiled by
    Debian clang version 17.0.6 (5)
    Debian flang-new version 17.0.6 (5)
* running under: Debian GNU/Linux trixie/sid
* using session charset: UTF-8
* checking for file ?quarto/DESCRIPTION? ... OK
* this is package ?quarto? version ?1.4?
* package encoding: UTF-8
* checking CRAN incoming feasibility ... [4s/5s] NOTE
Maintainer: ?Christophe Dervieux <cderv at posit.co>?
New maintainer:
  Christophe Dervieux <cderv at posit.co>
Old maintainer(s):
  JJ Allaire <jj at rstudio.com>
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for executable files ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking for sufficient/correct file permissions ... OK
* checking whether package ?quarto? can be installed ... [2s/2s] OK
* checking package directory ... OK
* checking for future file timestamps ... OK
* checking ?build? directory ... OK
* checking DESCRIPTION meta-information ... OK
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... [0s/0s] OK
* checking whether the package can be loaded with stated dependencies
... [0s/0s] OK
* checking whether the package can be unloaded cleanly ... [0s/0s] OK
* checking whether the namespace can be loaded with stated
dependencies ... [0s/0s] OK
* checking whether the namespace can be unloaded cleanly ... [0s/0s] OK
* checking loading without being on the library search path ... [0s/0s] OK
* checking whether startup messages can be suppressed ... [0s/0s] OK
* checking use of S3 registration ... OK
* checking dependencies in R code ... OK
* checking S3 generic/method consistency ... OK
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... [3s/3s] OK
* checking Rd files ... [0s/0s] OK
* checking Rd metadata ... OK
* checking Rd line widths ... OK
* checking Rd cross-references ... OK
* checking for missing documentation entries ... OK
* checking for code/documentation mismatches ... OK
* checking Rd \usage sections ... OK
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking sizes of PDF files under ?inst/doc? ... OK
* checking installed files from ?inst/doc? ... OK
* checking files in ?vignettes? ... OK
* checking examples ... [1s/1s] OK
* checking for unstated dependencies in ?tests? ... OK
* checking tests ... [16s/10s] OK
  Running ?testthat.R? [16s/10s]
* checking package vignettes ... NOTE
Package has ?vignettes? subdirectory but apparently no vignettes.
Perhaps the ?VignetteBuilder? information is missing from the
DESCRIPTION file?
* checking PDF version of manual ... [3s/3s] OK
* checking HTML version of manual ... [0s/0s] OK
* checking for non-standard things in the check directory ... OK
* checking for detritus in the temp directory ... OK
* DONE

As I shared, the log on Windows r-devel environment does not have the same NOTE

* using log directory 'd:/RCompile/CRANincoming/R-devel/quarto.Rcheck'
* using R Under development (unstable) (2024-02-20 r85959 ucrt)
* using platform: x86_64-w64-mingw32
* R was compiled by
    gcc.exe (GCC) 12.3.0
    GNU Fortran (GCC) 12.3.0
* running under: Windows Server 2022 x64 (build 20348)
* using session charset: UTF-8
* checking for file 'quarto/DESCRIPTION' ... OK
* this is package 'quarto' version '1.4'
* package encoding: UTF-8
* checking CRAN incoming feasibility ... NOTE
Maintainer: 'Christophe Dervieux <cderv at posit.co>'
New maintainer:
  Christophe Dervieux <cderv at posit.co>
Old maintainer(s):
  JJ Allaire <jj at rstudio.com>
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking whether package 'quarto' can be installed ... OK
* checking installed package size ... OK
* checking package directory ... OK
* checking for future file timestamps ... OK
* checking 'build' directory ... OK
* checking DESCRIPTION meta-information ... OK
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies ... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking loading without being on the library search path ... OK
* checking whether startup messages can be suppressed ... OK
* checking use of S3 registration ... OK
* checking dependencies in R code ... OK
* checking S3 generic/method consistency ... OK
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... OK
* checking Rd files ... OK
* checking Rd metadata ... OK
* checking Rd line widths ... OK
* checking Rd cross-references ... OK
* checking for missing documentation entries ... OK
* checking for code/documentation mismatches ... OK
* checking Rd \usage sections ... OK
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking sizes of PDF files under 'inst/doc' ... OK
* checking installed files from 'inst/doc' ... OK
* checking files in 'vignettes' ... OK
* checking examples ... OK
* checking for unstated dependencies in 'tests' ... OK
* checking tests ... [22s] OK
  Running 'testthat.R' [22s]
* checking for unstated dependencies in vignettes ... OK
* checking package vignettes ... OK
* checking re-building of vignette outputs ... [20s] OK
* checking PDF version of manual ... [17s] OK
* checking HTML version of manual ... OK
* DONE

So if my assumption about new version of package not being installed
is wrong, what could explain the difference between the two
environments, and the new engine not being found only on one platform
?

If anyone has some hints about this, I'll take them to verify and fix
this. Thank you

Christophe


On Mon, Feb 26, 2024 at 6:20?PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>
> Could you show us the install and check logs for the problematic platform?
>
> I don't think you'd get to the message you quote unless the install
> succeeded, so I think your diagnosis of the problem isn't right.  But
> maybe I'm wrong about that, and the install failed, perhaps because the
> Quarto tools were not available.
>
> Duncan Murdoch
>
> On 26/02/2024 10:34 a.m., Christophe Dervieux wrote:
> > Hi,
> >
> > I am trying to release a new version of the quarto R package. This new
> > version is adding support for a new vignette engine that will use quarto
> > CLI (https://quarto.org) when available. The vignettes inside the package
> > itself are '.qmd' files built with quarto.
> >
> > While developing the feature, I noticed that R CMD check will query for
> > vignette engines information, and it will find engine in already installed
> > package (with `tools:::vignetteEngine`). So a package adding a new engine,
> > and using this engine for its vignette only works when the package is
> > installed before check.
> >
> > Automated checks works ok on `r-devel-windows-x86_64`, but fails on
> > `r-devel-linux-x86_64-debian-gcc` because of this note
> >
> > Check: package vignettes, Result: NOTE
> >    Package has 'vignettes' subdirectory but apparently no vignettes.
> >    Perhaps the 'VignetteBuilder' information is missing from the
> >    DESCRIPTION file?
> >
> > I believe this happens because the package is not installed, so when R CMD
> > Check is doing the vignette checking, it won't find the quarto vignette
> > engine.
> >
> > I am trying to understand what I could do for this package release,
> > considering checks are ok on windows r-devel, and only having the NOTE on
> > debian environment.
> >
> > Should I consider this a false positive for this specific case ? Is there
> > any consideration to take for adding a new engine ?
> >
> > Thank you
> >
> > Christophe Dervieux
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From jeroenoom@ @end|ng |rom gm@||@com  Mon Feb 26 21:28:38 2024
From: jeroenoom@ @end|ng |rom gm@||@com (Jeroen Ooms)
Date: Mon, 26 Feb 2024 21:28:38 +0100
Subject: [R-pkg-devel] CRAN checks for release of a package with new
 vignette engine
In-Reply-To: <CAAs3ibuvc5NGTr9ozGfBoS-R0_Ff8uJchYmL1hyHmhHGNbFArg@mail.gmail.com>
References: <CAAs3ibuvc5NGTr9ozGfBoS-R0_Ff8uJchYmL1hyHmhHGNbFArg@mail.gmail.com>
Message-ID: <CABFfbXuG2h4J3NkNLNPYYzgbo5BAVnP9F_j+Gngv5E4B9VKTNQ@mail.gmail.com>

On Mon, Feb 26, 2024 at 5:50?PM Christophe Dervieux <cderv at posit.co> wrote:
>
> Hi,
>
> I am trying to release a new version of the quarto R package. This new
> version is adding support for a new vignette engine that will use quarto
> CLI (https://quarto.org) when available. The vignettes inside the package
> itself are '.qmd' files built with quarto.
>
> While developing the feature, I noticed that R CMD check will query for
> vignette engines information, and it will find engine in already installed
> package (with `tools:::vignetteEngine`). So a package adding a new engine,
> and using this engine for its vignette only works when the package is
> installed before check.


This looks similar to https://bugs.r-project.org/show_bug.cgi?id=18191

Based on what I can see from the public cran incoming files [1,2], I
suspect the Debian check is loading the CRAN version of quarto (1.3),
rather than the one being checked (1.4), to test vignettes. As a
result it does not recognize the new qmd type vignettes introduced in
this version.

If this is indeed the case, the problem will resolve itself once the
submission is approved.

 [1] https://cran.r-project.org/incoming/archive/quarto_1.4.tar.gz
 [2] https://win-builder.r-project.org/incoming_pretest/quarto_1.4_20240221_175256/


From cderv @end|ng |rom po@|t@co  Tue Feb 27 21:21:21 2024
From: cderv @end|ng |rom po@|t@co (Christophe Dervieux)
Date: Tue, 27 Feb 2024 21:21:21 +0100
Subject: [R-pkg-devel] CRAN checks for release of a package with new
 vignette engine
In-Reply-To: <CABFfbXuG2h4J3NkNLNPYYzgbo5BAVnP9F_j+Gngv5E4B9VKTNQ@mail.gmail.com>
References: <CAAs3ibuvc5NGTr9ozGfBoS-R0_Ff8uJchYmL1hyHmhHGNbFArg@mail.gmail.com>
 <CABFfbXuG2h4J3NkNLNPYYzgbo5BAVnP9F_j+Gngv5E4B9VKTNQ@mail.gmail.com>
Message-ID: <CAAs3ibtS+oMtEZU35heBV+=1o9Lc=erDhL9=OKGd=Y_8c9L=tg@mail.gmail.com>

Thank you.

I wasn't aware of this bug report [1] but definitely what I
encountered while working on the feature, and for CI testing.

My understanding is similar to Jeroen, and I believe it will solve
itself once the new version is made available.

Is the following step to reply to the CRAN teams after automated
checks to explain the situation ?

Christophe

[1] https://bugs.r-project.org/show_bug.cgi?id=18191

On Mon, Feb 26, 2024 at 9:28?PM Jeroen Ooms <jeroenooms at gmail.com> wrote:
>
> On Mon, Feb 26, 2024 at 5:50?PM Christophe Dervieux <cderv at posit.co> wrote:
> >
> > Hi,
> >
> > I am trying to release a new version of the quarto R package. This new
> > version is adding support for a new vignette engine that will use quarto
> > CLI (https://quarto.org) when available. The vignettes inside the package
> > itself are '.qmd' files built with quarto.
> >
> > While developing the feature, I noticed that R CMD check will query for
> > vignette engines information, and it will find engine in already installed
> > package (with `tools:::vignetteEngine`). So a package adding a new engine,
> > and using this engine for its vignette only works when the package is
> > installed before check.
>
>
> This looks similar to https://bugs.r-project.org/show_bug.cgi?id=18191
>
> Based on what I can see from the public cran incoming files [1,2], I
> suspect the Debian check is loading the CRAN version of quarto (1.3),
> rather than the one being checked (1.4), to test vignettes. As a
> result it does not recognize the new qmd type vignettes introduced in
> this version.
>
> If this is indeed the case, the problem will resolve itself once the
> submission is approved.
>
>  [1] https://cran.r-project.org/incoming/archive/quarto_1.4.tar.gz
>  [2] https://win-builder.r-project.org/incoming_pretest/quarto_1.4_20240221_175256/


From jon@c|@yden @end|ng |rom gm@||@com  Tue Feb 27 12:14:19 2024
From: jon@c|@yden @end|ng |rom gm@||@com (Jon Clayden)
Date: Tue, 27 Feb 2024 11:14:19 +0000
Subject: [R-pkg-devel] Unexpected multi-core CPU usage in package tests
Message-ID: <CAM9CR=0jc5=8-3oB2+bc6y6p_wCX2M3_dAXEG1_T3OJkS2XyAw@mail.gmail.com>

Dear all,

I'm slightly going out of my mind trying to resolve a CRAN rejection
based on the note

    Flavor: r-devel-linux-x86_64-debian-gcc
    Check: tests, Result: NOTE
        Running 'tinytest.R' [20s/5s]
      Running R code in 'tinytest.R' had CPU time 4.4 times elapsed time

This applies to package 'tractor.base', which contains no compiled
code and is not parallelised, but has (first-party) package 'mmand' as
a dependency, which uses OpenMP where available.

Further investigation suggests that skipping the tests that use that
package doesn't resolve the issue, and indeed it seems to occur in
another dependency, 'RNifti', which doesn't use OpenMP, and has no
hard dependencies of its own except 'Rcpp'.

My testing route is to install the packages within the
'rocker/r-devel' Docker container, which is Debian-based, then use
'time' to evaluate CPU usage. Note that, even though 'RNifti' does not
use OpenMP, setting OMP_NUM_THREADS changes its CPU usage:

    # /usr/bin/time Rscript -e "library(RNifti);
testthat::test_dir('tests/testthat')"
    ...
    5.46user 4.88system 0:04.06elapsed 254%CPU (0avgtext+0avgdata
387244maxresident)k
    0inputs+8032outputs (208major+97868minor)pagefaults 0swaps

    # /usr/bin/time env OMP_NUM_THREADS=1 Rscript -e "library(RNifti);
testthat::test_dir('tests/testthat')"
    ...
    3.54user 0.13system 0:03.67elapsed 100%CPU (0avgtext+0avgdata
382060maxresident)k
    0inputs+8032outputs (222major+98893minor)pagefaults 0swaps

I see similar results for packages using 'tinytest' as well as
'testthat'. I am not requesting parallelised testing from either
framework.

So, my questions are

(i) is there something wrong with this evaluation that's leading me astray?
(ii) what might the source of this unexpected parallelism be?
(iii) how can I reliably meet CRAN's requirement not to use too many
CPU cores, other than setting OMP_NUM_THREADS before starting R, which
I can't control?

Thanks in advance.

All the best,
Jon


From @vr@h@m@@d|er @end|ng |rom gm@||@com  Wed Feb 28 18:05:20 2024
From: @vr@h@m@@d|er @end|ng |rom gm@||@com (Avraham Adler)
Date: Wed, 28 Feb 2024 19:05:20 +0200
Subject: [R-pkg-devel] Unable to access log operator in C
Message-ID: <CAL6gwnKXD9roXuvBd++1RS4ZQFLPD107G_gTcOuWEXk58tWTzA@mail.gmail.com>

I am hoping the solution to this question is simple, but I have not
been able to find one. I am building a routine in C to be called from
R. I am including Rmath.h. However, when I have a call to "log", I get
the error "called object 'log' is not a function or a function
pointer. When I "trick" it by calling log1p(x - 1), which I *know* is
exported from Rmath.h, it works.

More completely, my includes are:
#include <R.h>
#include <Rmath.h>
#include <Rinternals.h>
#include <Rconfig.h>
#include <stdlib.h> // for NULL
#include <R_ext/Rdynload.h>

The object being logged is a double, passed into C as an SEXP, call it
"a", which for now will always be a singleton. I initialize a pointer
double *pa = REAL(a). I eventually call log(pa[0]), which does not
compile and throws the error listed above. Switching the call to
log1p(pa[0] - 1.0) works and returns the proper answer.

Even including math.h explicitly does not help, which makes sense as
it is included by Rmath.h.

Thank you,

Avi


From edd @end|ng |rom deb|@n@org  Wed Feb 28 18:14:03 2024
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Wed, 28 Feb 2024 11:14:03 -0600
Subject: [R-pkg-devel] Unable to access log operator in C
In-Reply-To: <CAL6gwnKXD9roXuvBd++1RS4ZQFLPD107G_gTcOuWEXk58tWTzA@mail.gmail.com>
References: <CAL6gwnKXD9roXuvBd++1RS4ZQFLPD107G_gTcOuWEXk58tWTzA@mail.gmail.com>
Message-ID: <26079.27099.42453.848786@rob.eddelbuettel.com>


On 28 February 2024 at 19:05, Avraham Adler wrote:
| I am hoping the solution to this question is simple, but I have not
| been able to find one. I am building a routine in C to be called from
| R. I am including Rmath.h. However, when I have a call to "log", I get
| the error "called object 'log' is not a function or a function
| pointer. When I "trick" it by calling log1p(x - 1), which I *know* is
| exported from Rmath.h, it works.
| 
| More completely, my includes are:
| #include <R.h>
| #include <Rmath.h>
| #include <Rinternals.h>
| #include <Rconfig.h>
| #include <stdlib.h> // for NULL
| #include <R_ext/Rdynload.h>
| 
| The object being logged is a double, passed into C as an SEXP, call it
| "a", which for now will always be a singleton. I initialize a pointer
| double *pa = REAL(a). I eventually call log(pa[0]), which does not
| compile and throws the error listed above. Switching the call to
| log1p(pa[0] - 1.0) works and returns the proper answer.
| 
| Even including math.h explicitly does not help, which makes sense as
| it is included by Rmath.h.

Can you show the actual line?  Worst case rename your source file to end in
.cpp, include <cmath> and call std::log.

  > Rcpp::cppFunction("double mylog(double x) { return std::log(x); }")
  > mylog(exp(42))
  [1] 42
  > 

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From @vr@h@m@@d|er @end|ng |rom gm@||@com  Wed Feb 28 18:34:56 2024
From: @vr@h@m@@d|er @end|ng |rom gm@||@com (Avraham Adler)
Date: Wed, 28 Feb 2024 19:34:56 +0200
Subject: [R-pkg-devel] Unable to access log operator in C
In-Reply-To: <26079.27099.42453.848786@rob.eddelbuettel.com>
References: <CAL6gwnKXD9roXuvBd++1RS4ZQFLPD107G_gTcOuWEXk58tWTzA@mail.gmail.com>
 <26079.27099.42453.848786@rob.eddelbuettel.com>
Message-ID: <CAL6gwnLc95GoUhHTP7PyDTAAxUZB3GiRVy5Jy--zxdvzBdaj4w@mail.gmail.com>

Thank you, Dirk.

However, I am an absolute clod.I just realized; I was passing in the
SEXP indicating whether or not to log the function as "log", so I
"overwrote" the symbol.

Excuse me while I go bang my head into the wall a few dozen times.

My apologies,

Avi

On Wed, Feb 28, 2024 at 7:14?PM Dirk Eddelbuettel <edd at debian.org> wrote:
>
>
> On 28 February 2024 at 19:05, Avraham Adler wrote:
> | I am hoping the solution to this question is simple, but I have not
> | been able to find one. I am building a routine in C to be called from
> | R. I am including Rmath.h. However, when I have a call to "log", I get
> | the error "called object 'log' is not a function or a function
> | pointer. When I "trick" it by calling log1p(x - 1), which I *know* is
> | exported from Rmath.h, it works.
> |
> | More completely, my includes are:
> | #include <R.h>
> | #include <Rmath.h>
> | #include <Rinternals.h>
> | #include <Rconfig.h>
> | #include <stdlib.h> // for NULL
> | #include <R_ext/Rdynload.h>
> |
> | The object being logged is a double, passed into C as an SEXP, call it
> | "a", which for now will always be a singleton. I initialize a pointer
> | double *pa = REAL(a). I eventually call log(pa[0]), which does not
> | compile and throws the error listed above. Switching the call to
> | log1p(pa[0] - 1.0) works and returns the proper answer.
> |
> | Even including math.h explicitly does not help, which makes sense as
> | it is included by Rmath.h.
>
> Can you show the actual line?  Worst case rename your source file to end in
> .cpp, include <cmath> and call std::log.
>
>   > Rcpp::cppFunction("double mylog(double x) { return std::log(x); }")
>   > mylog(exp(42))
>   [1] 42
>   >
>
> Dirk
>
> --
> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From |kry|ov @end|ng |rom d|@root@org  Wed Feb 28 18:36:23 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Wed, 28 Feb 2024 20:36:23 +0300
Subject: [R-pkg-devel] Unexpected multi-core CPU usage in package tests
In-Reply-To: <CAM9CR=0jc5=8-3oB2+bc6y6p_wCX2M3_dAXEG1_T3OJkS2XyAw@mail.gmail.com>
References: <CAM9CR=0jc5=8-3oB2+bc6y6p_wCX2M3_dAXEG1_T3OJkS2XyAw@mail.gmail.com>
Message-ID: <20240228203623.5ec58653@Tarkus>

? Tue, 27 Feb 2024 11:14:19 +0000
Jon Clayden <jon.clayden at gmail.com> ?????:

> My testing route is to install the packages within the
> 'rocker/r-devel' Docker container, which is Debian-based, then use
> 'time' to evaluate CPU usage. Note that, even though 'RNifti' does not
> use OpenMP, setting OMP_NUM_THREADS changes its CPU usage

I think that's because rocker/r-devel uses parallel OpenBLAS:

$ podman run --rm -it docker.io/rocker/r-devel \
 R -q -s -e 'sessionInfo()' | grep -A1 BLAS
BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 
LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.24.so;  LAPACK version 3.11.0

The incoming CRAN check machine either sets the BLAS parallellism to 1
or uses a non-parallel BLAS. With rocker/r-devel, you can run R with
the environment variable OPENBLAS_NUM_THREADS set to 1. It's been
effective in the past to run R -d gdb and set a breakpoint on
pthread_create before launching the test. (In theory, it may be
required to set a breakpoint on every system call that may be used to
create threads, including various variations of clone(), subject to
variations between operating systems, but pthread_create has been
enough for me so far.)

With OPENBLAS_NUM_THREADS=1, I'm only seeing OpenMP threads created by
the mmand package during tests for your package tractor.base, and the
latest commit (that temporary disables testing of mmand) doesn't hit
the breakpoint or raise any NOTEs at all.

-- 
Best regards,
Ivan


From jon@c|@yden @end|ng |rom gm@||@com  Wed Feb 28 18:49:47 2024
From: jon@c|@yden @end|ng |rom gm@||@com (Jon Clayden)
Date: Wed, 28 Feb 2024 17:49:47 +0000
Subject: [R-pkg-devel] Unexpected multi-core CPU usage in package tests
In-Reply-To: <20240228203623.5ec58653@Tarkus>
References: <CAM9CR=0jc5=8-3oB2+bc6y6p_wCX2M3_dAXEG1_T3OJkS2XyAw@mail.gmail.com>
 <20240228203623.5ec58653@Tarkus>
Message-ID: <CAM9CR=0ZrV1kJzV47e7OSECe=L43NBV3hTiM92QO=-J1HxBoyg@mail.gmail.com>

On Wed, 28 Feb 2024 at 17:36, Ivan Krylov <ikrylov at disroot.org> wrote:
>
> ? Tue, 27 Feb 2024 11:14:19 +0000
> Jon Clayden <jon.clayden at gmail.com> ?????:
>
> > My testing route is to install the packages within the
> > 'rocker/r-devel' Docker container, which is Debian-based, then use
> > 'time' to evaluate CPU usage. Note that, even though 'RNifti' does not
> > use OpenMP, setting OMP_NUM_THREADS changes its CPU usage
>
> I think that's because rocker/r-devel uses parallel OpenBLAS:
>
> $ podman run --rm -it docker.io/rocker/r-devel \
>  R -q -s -e 'sessionInfo()' | grep -A1 BLAS
> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3
> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.24.so;  LAPACK version 3.11.0
>
> The incoming CRAN check machine either sets the BLAS parallellism to 1
> or uses a non-parallel BLAS. With rocker/r-devel, you can run R with
> the environment variable OPENBLAS_NUM_THREADS set to 1. It's been
> effective in the past to run R -d gdb and set a breakpoint on
> pthread_create before launching the test. (In theory, it may be
> required to set a breakpoint on every system call that may be used to
> create threads, including various variations of clone(), subject to
> variations between operating systems, but pthread_create has been
> enough for me so far.)
>
> With OPENBLAS_NUM_THREADS=1, I'm only seeing OpenMP threads created by
> the mmand package during tests for your package tractor.base, and the
> latest commit (that temporary disables testing of mmand) doesn't hit
> the breakpoint or raise any NOTEs at all.

Very many thanks for testing this, Ivan. I did come across the
breakpoint suggestion when searching on this, and tried it, but I ran
into some problems with gdb within the container. Your experiments
confirm that my yardstick was just misleading me; I will add support
for explicitly setting the thread count within mmand, which should
give me a longer-term solution.

Thanks again,
Jon


From murr@y@e||ord @end|ng |rom ot@go@@c@nz  Fri Mar  1 08:42:01 2024
From: murr@y@e||ord @end|ng |rom ot@go@@c@nz (Murray Efford)
Date: Fri, 1 Mar 2024 07:42:01 +0000
Subject: [R-pkg-devel] Additional issues: Intel segfault
Message-ID: <SY4PR01MB565871424C33A2C928A02BA5AC5E2@SY4PR01MB5658.ausprd01.prod.outlook.com>

I am puzzling over an 'Additional issues' error in the CRAN check results for package secrdesign version 1.8.2 (see https://CRAN.R-project.org/package=secrdesign, and for an updated version https://github.com/MurrayEfford/secrdesign) The issue rises with the Intel(R) oneAPI DPC++/C++ Compiler:?

?*** caught segfault ***
address (nil), cause 'unknown'

The location of the error is obscure: R CMD check suggests it is most likely in the Examples for 'validate', but all code there is wrapped in \dontrun{}. The package makes limited use of RcppArmadillo and BH. It passes all other CRAN checks on several platforms (see GitHub link) and for all I know may now be 'clean'.

valgrind on x86_64-pc-linux-gnu (64-bit) hits an error that I guess is unrelated and not actually a bug?
(the location is a matrix multiplication in a function from package 'secr' that is executed by run.scenarios):

> sims1 <- run.scenarios(nrepl = 2, trapset = traps1, scenarios =
+ ? ? ?scen1, seed = 345, fit = TRUE, extractfn = summary)
vex amd64->IR: unhandled instruction bytes: 0x62 0xE1 0xFF 0x8 0x10 0xC 0xD1 0x62 0xF2 0xF5
vex amd64->IR: ? REX=0 REX.W=0 REX.R=0 REX.X=0 REX.B=0
vex amd64->IR: ? VEX=0 VEX.L=0 VEX.nVVVV=0x0 ESC=NONE
vex amd64->IR: ? PFX.66=0 PFX.F2=0 PFX.F3=0
==1990825== valgrind: Unrecognised instruction at address 0x57d51f0.
==1990825== ? ?at 0x57D51F0: dgemv_n (in /opt/OpenBLAS/lib/libopenblas_skylakexp-r0.3.23.dev.so)
==1990825== ? ?by 0x554BDF9: dgemv_ (in /opt/OpenBLAS/lib/libopenblas_skylakexp-r0.3.23.dev.so)
==1990825== ? ?by 0x4EE2F2C: matprod (array.c:812)
etc.

I would much appreciate any tips on how to proceed. Specifically, how to reproduce and localise the arcane Intel error that prevents me submitting a new version to CRAN, or whether I should submit regardless.

Murray Efford

From |kry|ov @end|ng |rom d|@root@org  Fri Mar  1 09:46:28 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Fri, 1 Mar 2024 11:46:28 +0300
Subject: [R-pkg-devel] Additional issues: Intel segfault
In-Reply-To: <SY4PR01MB565871424C33A2C928A02BA5AC5E2@SY4PR01MB5658.ausprd01.prod.outlook.com>
References: <SY4PR01MB565871424C33A2C928A02BA5AC5E2@SY4PR01MB5658.ausprd01.prod.outlook.com>
Message-ID: <20240301114628.09b38b0f@Tarkus>

? Fri, 1 Mar 2024 07:42:01 +0000
Murray Efford <murray.efford at otago.ac.nz> ?????:

> R CMD check suggests it is most likely in the Examples for
> 'validate', but all code there is wrapped in \dontrun{}.

The crash happens after q('no'), suggesting a corruption in the heap or
in the R memory manager. At least it's a null pointer being
dereferenced and not a 0xRANDOM_LOOKING_NUMBER: this limits the impact
of the problem.

I don't know if anyone created an easily reproducible container with an
Intel build of R (there's https://hub.docker.com/r/intel/oneapi, but
aren't the compilers themselves supposed to be not redistributable?),
so you will most likely have to follow
https://www.stats.ox.ac.uk/pub/bdr/Intel/README.txt and
https://cran.r-project.org/doc/manuals/r-devel/R-admin.html#Intel-compilers
manually, compiling R using Intel compilers yourself in order to
reproduce this.

I think it would be great if CRAN checking machines used a just-in-time
debugger to provide C-level backtraces at the place of the crash. For
Windows, such a utility does exist [*], but I recently learned that the
glibc `catchsegv` program (and most other similar programs) used to
perform shared object preloading (before being thrown out of the
codebase altogether), which is more intrusive than it could be. A proof
of concept using GDB on Linux can be shown to work:

R -d gdb \
 --debugger-args='-batch -ex run -ex bt -ex c -ex q' \
 -e '
  Rcpp::sourceCpp(code =
   "//[[Rcpp::export]]\nvoid rip() { *(double*)(42) = 42; }"
  ); rip()
 '

-- 
Best regards,
Ivan

[*] https://github.com/jrfonseca/drmingw


From murr@y@e||ord @end|ng |rom ot@go@@c@nz  Sat Mar  2 03:07:47 2024
From: murr@y@e||ord @end|ng |rom ot@go@@c@nz (Murray Efford)
Date: Sat, 2 Mar 2024 02:07:47 +0000
Subject: [R-pkg-devel] Additional issues: Intel segfault
In-Reply-To: <20240301114628.09b38b0f@Tarkus>
References: <SY4PR01MB565871424C33A2C928A02BA5AC5E2@SY4PR01MB5658.ausprd01.prod.outlook.com>
 <20240301114628.09b38b0f@Tarkus>
Message-ID: <SY4PR01MB5658703BAD0C1D9D63425022AC5D2@SY4PR01MB5658.ausprd01.prod.outlook.com>

Thanks, Ivan, for looking into this and providing some reassurance. Gabor suggested https://github.com/r-hub/rhub2 and that worked like a charm. A check there on the Intel platform found no errors in my present version of secrdesign, so I'll resubmit with confidence. The original error remains a mystery, but not one I need to pursue.
Murray

From: Ivan Krylov <ikrylov at disroot.org>
Sent: Friday, 1 March 2024 21:46
To: Murray Efford <murray.efford at otago.ac.nz>
Cc: R-package-devel at r-project.org <r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] Additional issues: Intel segfault

? Fri, 1 Mar 2024 07:42:01 +0000
Murray Efford <murray.efford at otago.ac.nz> ?????:

> R CMD check suggests it is most likely in the Examples for
> 'validate', but all code there is wrapped in \dontrun{}.

The crash happens after q('no'), suggesting a corruption in the heap or
in the R memory manager. At least it's a null pointer being
dereferenced and not a 0xRANDOM_LOOKING_NUMBER: this limits the impact
of the problem.

I don't know if anyone created an easily reproducible container with an
Intel build of R (there's https://hub.docker.com/r/intel/oneapi, but
aren't the compilers themselves supposed to be not redistributable?),
so you will most likely have to follow
https://www.stats.ox.ac.uk/pub/bdr/Intel/README.txt and
https://cran.r-project.org/doc/manuals/r-devel/R-admin.html#Intel-compilers
manually, compiling R using Intel compilers yourself in order to
reproduce this.

I think it would be great if CRAN checking machines used a just-in-time
debugger to provide C-level backtraces at the place of the crash. For
Windows, such a utility does exist [*], but I recently learned that the
glibc `catchsegv` program (and most other similar programs) used to
perform shared object preloading (before being thrown out of the
codebase altogether), which is more intrusive than it could be. A proof
of concept using GDB on Linux can be shown to work:

R -d gdb \
 --debugger-args='-batch -ex run -ex bt -ex c -ex q' \
 -e '
  Rcpp::sourceCpp(code =
   "//[[Rcpp::export]]\nvoid rip() { *(double*)(42) = 42; }"
  ); rip()
 '

--
Best regards,
Ivan

[*] https://github.com/jrfonseca/drmingw


From |kry|ov @end|ng |rom d|@root@org  Sat Mar  2 08:45:37 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Sat, 2 Mar 2024 10:45:37 +0300
Subject: [R-pkg-devel] Additional issues: Intel segfault
In-Reply-To: <SY4PR01MB5658703BAD0C1D9D63425022AC5D2@SY4PR01MB5658.ausprd01.prod.outlook.com>
References: <20240301114628.09b38b0f@Tarkus>
 <SY4PR01MB5658703BAD0C1D9D63425022AC5D2@SY4PR01MB5658.ausprd01.prod.outlook.com>
Message-ID: <20240302104537.3eebf43c@Tarkus>

? Sat, 2 Mar 2024 02:07:47 +0000
Murray Efford <murray.efford at otago.ac.nz> ?????:

> Gabor suggested https://github.com/r-hub/rhub2 and that worked like a
> charm. A check there on the Intel platform found no errors in my
> present version of secrdesign, so I'll resubmit with confidence.

Thank you for letting me know! Having this as a container simplifies a
lot of things.

-- 
Best regards,
Ivan


From |kry|ov @end|ng |rom d|@root@org  Sun Mar  3 09:14:44 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Sun, 3 Mar 2024 11:14:44 +0300
Subject: [R-pkg-devel] RFC: C backtraces for R CMD check via just-in-time
 debugging
Message-ID: <20240303111444.6582a6c3@Tarkus>

Hello,

This may be of interest to people who run lots of R CMD checks and have
to deal with resulting crashes in compiled code.

Every now and then, the CRAN checks surface a particularly nasty crash.
The R-level traceback stops in the compiled code. It's not obvious
where exactly the crash happens. Naturally, this never happened on the
maintainer's computer before and, in fact, is hard to reproduce.

Containers would help, but they cannot solve the problem completely.
Some problems only surface when there's more than 32 logical
processors, or during certain times of day. It may help to at least see
the location of the crash as it happens on the computer running the
check.

One way to provide that would be to run a special debugger that does
nothing most of the time, attaches to child threads and processes, and
produces backtraces when processes receive a crashing signal. There is
such a debugger for Windows [1], and there is now a proof of concept
for amd64 Linux [2]. 

I've just tried [2] on a 250-package reverse dependency check and saw a
lot of SIGSEGVs with rcx=00000000cafebabe or Java in the backtrace, but
other than that, it seems to work fine. Do you think it's worth
developing further?

The major downside of using a debugger like this is a noticeable change
in the environment: [v]fork(), clone() and exec() become slower,
attaching another tracer becomes impossible, SIGSEGVs may become much
slower (although I do hope that most software I rely upon doesn't care
about SIGSEGVs per second). On the other hand, these wrappers are as
transparent as they get and don't even need R -d to pass the arguments
to the child process.

The other way to provide C-level backtraces is a post-mortem debugger
(registered via the AeDebug registry key on Windows or
kernel.core_pattern sysctl on Linux). This avoids interference with the
process environment during normal execution, but requires more
integration work to collect the crash dumps, process them into usable
backtraces and associate with the R CMD check runs. There are also
injectable DLLs like libbacktrace, but these have to interfere with the
process from the inside, which may be worse than ptrace() in terms of
observable environment changes. On glibc systems (but not musl, macOS,
Windows), R's SIGSEGV handler could be enhanced to call
backtrace_symbols_fd(), which should be safe (no malloc()) as long as
libgcc is preloaded.

Is adding C-level backtraces to R CMD checks worth the effort? Could it
be a good idea to add this on CRAN? If yes, how can I help?

-- 
Best regards,
Ivan

[1] <https://github.com/jrfonseca/drmingw>, see "catchsegv"

[2] https://codeberg.org/aitap/tracecrash


From ro||turner @end|ng |rom po@teo@net  Mon Mar  4 02:15:08 2024
From: ro||turner @end|ng |rom po@teo@net (Rolf Turner)
Date: Mon,  4 Mar 2024 01:15:08 +0000
Subject: [R-pkg-devel] 
 RFC: C backtraces for R CMD check via just-in-time debugging
In-Reply-To: <20240303111444.6582a6c3@Tarkus>
References: <20240303111444.6582a6c3@Tarkus>
Message-ID: <20240304141508.59f3fea9@rolf-Latitude-E7470>

On Sun, 3 Mar 2024 11:14:44 +0300
Ivan Krylov via R-package-devel <r-package-devel at r-project.org> wrote:

> Hello,
> 
> This may be of interest to people who run lots of R CMD checks and
> have to deal with resulting crashes in compiled code.

<SNIP>

> Is adding C-level backtraces to R CMD checks worth the effort? Could
> it be a good idea to add this on CRAN? If yes, how can I help?
> 

Sounds like an excellent idea to me, but I am not really qualified to
judge.  Most of this stuff is was over my head.

cheers,

Rolf Turner

-- 
Honorary Research Fellow
Department of Statistics
University of Auckland
Stats. Dep't. (secretaries) phone:
         +64-9-373-7599 ext. 89622
Home phone: +64-9-480-4619


From kev|nu@hey @end|ng |rom gm@||@com  Mon Mar  4 04:19:43 2024
From: kev|nu@hey @end|ng |rom gm@||@com (Kevin Ushey)
Date: Sun, 3 Mar 2024 19:19:43 -0800
Subject: [R-pkg-devel] 
 RFC: C backtraces for R CMD check via just-in-time debugging
In-Reply-To: <20240304141508.59f3fea9@rolf-Latitude-E7470>
References: <20240303111444.6582a6c3@Tarkus>
 <20240304141508.59f3fea9@rolf-Latitude-E7470>
Message-ID: <CAJXgQP2Q8mBaEvmXZh8tA5cO-8gfdn8=xCT0eXww=MJPXNPe9A@mail.gmail.com>

Would libSegFault be useful here?
https://lemire.me/blog/2023/05/01/under-linux-libsegfault-and-addr2line-are-underrated/

On Sun, Mar 3, 2024, 5:15?PM Rolf Turner <rolfturner at posteo.net> wrote:

> On Sun, 3 Mar 2024 11:14:44 +0300
> Ivan Krylov via R-package-devel <r-package-devel at r-project.org> wrote:
>
> > Hello,
> >
> > This may be of interest to people who run lots of R CMD checks and
> > have to deal with resulting crashes in compiled code.
>
> <SNIP>
>
> > Is adding C-level backtraces to R CMD checks worth the effort? Could
> > it be a good idea to add this on CRAN? If yes, how can I help?
> >
>
> Sounds like an excellent idea to me, but I am not really qualified to
> judge.  Most of this stuff is was over my head.
>
> cheers,
>
> Rolf Turner
>
> --
> Honorary Research Fellow
> Department of Statistics
> University of Auckland
> Stats. Dep't. (secretaries) phone:
>          +64-9-373-7599 ext. 89622
> Home phone: +64-9-480-4619
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From |kry|ov @end|ng |rom d|@root@org  Mon Mar  4 08:27:42 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Mon, 4 Mar 2024 10:27:42 +0300
Subject: [R-pkg-devel] 
 RFC: C backtraces for R CMD check via just-in-time debugging
In-Reply-To: <CAJXgQP2Q8mBaEvmXZh8tA5cO-8gfdn8=xCT0eXww=MJPXNPe9A@mail.gmail.com>
References: <20240303111444.6582a6c3@Tarkus>
 <20240304141508.59f3fea9@rolf-Latitude-E7470>
 <CAJXgQP2Q8mBaEvmXZh8tA5cO-8gfdn8=xCT0eXww=MJPXNPe9A@mail.gmail.com>
Message-ID: <20240304102742.34af66ac@Tarkus>

On Sun, 3 Mar 2024 19:19:43 -0800
Kevin Ushey <kevinushey at gmail.com> wrote:

> Would libSegFault be useful here?

Glad to know it has been moved to
<https://github.com/zatrazz/glibc-tools/tree/main/libSegFault> and not
just removed altogether after the upstream commit
<https://sourceware.org/git/?p=glibc.git;a=commit;h=65ccd641bacea33be23d51da737c2de7543d0f5e>.

libSegFault is safer than, say, libsegfault [*] because it both
supports SA_ONSTACK (for when a SIGSEGV is caused by stack overflow)
and avoids functions like snprintf() (which depend on the locale code,
which may have been the source of the crash). The only correctness
problem that may still be unaddressed is potential memory allocations
in backtrace() when it loads libgcc on first use. That should be easy
to fix by calling backtrace() once in segfault_init(). Unfortunately,
libSegFault is limited to glibc systems, so a different solution will
be needed on Windows, macOS and Linux systems with the musl libc.

Google-owned "backward" [**] tries to do most of this right, but (1) is
designed to be compiled together with C++ programs, not injected into
unrelated processes and (2) will exit the process if it survives
raise(signum), which will interfere with both rJava (judging by the
number of Java-related SIGSEGVs I saw while running R CMD check) and R's
own stack overflow survival attempts.

-- 
Best regards,
Ivan

[*] https://github.com/stass/libsegfault
(Which doesn't compile out of the box on GNU/Linux due to missing
pthread_np.h, although that should be easy to patch.)

[**] https://github.com/bombela/backward-cpp


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Mon Mar  4 16:40:21 2024
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Mon, 4 Mar 2024 16:40:21 +0100
Subject: [R-pkg-devel] CRAN checks for release of a package with new
 vignette engine
In-Reply-To: <CABFfbXuG2h4J3NkNLNPYYzgbo5BAVnP9F_j+Gngv5E4B9VKTNQ@mail.gmail.com>
References: <CAAs3ibuvc5NGTr9ozGfBoS-R0_Ff8uJchYmL1hyHmhHGNbFArg@mail.gmail.com>
 <CABFfbXuG2h4J3NkNLNPYYzgbo5BAVnP9F_j+Gngv5E4B9VKTNQ@mail.gmail.com>
Message-ID: <8c326569-b3f0-489d-b751-d81a8f054323@statistik.tu-dortmund.de>

So you have defined


   VignetteBuilder: quarto

??

Best,
Uwe

On 26.02.2024 21:28, Jeroen Ooms wrote:
> On Mon, Feb 26, 2024 at 5:50?PM Christophe Dervieux <cderv at posit.co> wrote:
>>
>> Hi,
>>
>> I am trying to release a new version of the quarto R package. This new
>> version is adding support for a new vignette engine that will use quarto
>> CLI (https://quarto.org) when available. The vignettes inside the package
>> itself are '.qmd' files built with quarto.
>>
>> While developing the feature, I noticed that R CMD check will query for
>> vignette engines information, and it will find engine in already installed
>> package (with `tools:::vignetteEngine`). So a package adding a new engine,
>> and using this engine for its vignette only works when the package is
>> installed before check.
> 
> 
> This looks similar to https://bugs.r-project.org/show_bug.cgi?id=18191
> 
> Based on what I can see from the public cran incoming files [1,2], I
> suspect the Debian check is loading the CRAN version of quarto (1.3),
> rather than the one being checked (1.4), to test vignettes. As a
> result it does not recognize the new qmd type vignettes introduced in
> this version.
> 
> If this is indeed the case, the problem will resolve itself once the
> submission is approved.
> 
>   [1] https://cran.r-project.org/incoming/archive/quarto_1.4.tar.gz
>   [2] https://win-builder.r-project.org/incoming_pretest/quarto_1.4_20240221_175256/
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

From cderv @end|ng |rom po@|t@co  Mon Mar  4 16:53:07 2024
From: cderv @end|ng |rom po@|t@co (Christophe Dervieux)
Date: Mon, 4 Mar 2024 16:53:07 +0100
Subject: [R-pkg-devel] CRAN checks for release of a package with new
 vignette engine
In-Reply-To: <8c326569-b3f0-489d-b751-d81a8f054323@statistik.tu-dortmund.de>
References: <CAAs3ibuvc5NGTr9ozGfBoS-R0_Ff8uJchYmL1hyHmhHGNbFArg@mail.gmail.com>
 <CABFfbXuG2h4J3NkNLNPYYzgbo5BAVnP9F_j+Gngv5E4B9VKTNQ@mail.gmail.com>
 <8c326569-b3f0-489d-b751-d81a8f054323@statistik.tu-dortmund.de>
Message-ID: <CAAs3ibszbCnA4Fm5_H_OMZsvcnM2FdEdX8nMNCQyNJyOe+RaZw@mail.gmail.com>

Hi,

yes I have defined in DESCRIPTION

    VignetteBuilder:
        quarto

and running `tools:::loadVignetteBuilder` on the package source
directory reads it correctly.

    > tools:::loadVignetteBuilder(".")
    [1] "quarto" "utils"

Best regards,

Christophe


On Mon, Mar 4, 2024 at 4:40?PM Uwe Ligges
<ligges at statistik.tu-dortmund.de> wrote:
>
> So you have defined
>
>
>    VignetteBuilder: quarto
>
> ??
>
> Best,
> Uwe
>
> On 26.02.2024 21:28, Jeroen Ooms wrote:
> > On Mon, Feb 26, 2024 at 5:50?PM Christophe Dervieux <cderv at posit.co> wrote:
> >>
> >> Hi,
> >>
> >> I am trying to release a new version of the quarto R package. This new
> >> version is adding support for a new vignette engine that will use quarto
> >> CLI (https://quarto.org) when available. The vignettes inside the package
> >> itself are '.qmd' files built with quarto.
> >>
> >> While developing the feature, I noticed that R CMD check will query for
> >> vignette engines information, and it will find engine in already installed
> >> package (with `tools:::vignetteEngine`). So a package adding a new engine,
> >> and using this engine for its vignette only works when the package is
> >> installed before check.
> >
> >
> > This looks similar to https://bugs.r-project.org/show_bug.cgi?id=18191
> >
> > Based on what I can see from the public cran incoming files [1,2], I
> > suspect the Debian check is loading the CRAN version of quarto (1.3),
> > rather than the one being checked (1.4), to test vignettes. As a
> > result it does not recognize the new qmd type vignettes introduced in
> > this version.
> >
> > If this is indeed the case, the problem will resolve itself once the
> > submission is approved.
> >
> >   [1] https://cran.r-project.org/incoming/archive/quarto_1.4.tar.gz
> >   [2] https://win-builder.r-project.org/incoming_pretest/quarto_1.4_20240221_175256/
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Mon Mar  4 16:57:52 2024
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Mon, 4 Mar 2024 16:57:52 +0100
Subject: [R-pkg-devel] CRAN checks for release of a package with new
 vignette engine
In-Reply-To: <CAAs3ibszbCnA4Fm5_H_OMZsvcnM2FdEdX8nMNCQyNJyOe+RaZw@mail.gmail.com>
References: <CAAs3ibuvc5NGTr9ozGfBoS-R0_Ff8uJchYmL1hyHmhHGNbFArg@mail.gmail.com>
 <CABFfbXuG2h4J3NkNLNPYYzgbo5BAVnP9F_j+Gngv5E4B9VKTNQ@mail.gmail.com>
 <8c326569-b3f0-489d-b751-d81a8f054323@statistik.tu-dortmund.de>
 <CAAs3ibszbCnA4Fm5_H_OMZsvcnM2FdEdX8nMNCQyNJyOe+RaZw@mail.gmail.com>
Message-ID: <15c60c1b-c658-49d9-ba7f-24242735b012@statistik.tu-dortmund.de>

OK, can you pls submit that one to CRAN again?

Best,
Uwe Ligges

On 04.03.2024 16:53, Christophe Dervieux wrote:
> Hi,
> 
> yes I have defined in DESCRIPTION
> 
>      VignetteBuilder:
>          quarto
> 
> and running `tools:::loadVignetteBuilder` on the package source
> directory reads it correctly.
> 
>      > tools:::loadVignetteBuilder(".")
>      [1] "quarto" "utils"
> 
> Best regards,
> 
> Christophe
> 
> 
> On Mon, Mar 4, 2024 at 4:40?PM Uwe Ligges
> <ligges at statistik.tu-dortmund.de> wrote:
>>
>> So you have defined
>>
>>
>>     VignetteBuilder: quarto
>>
>> ??
>>
>> Best,
>> Uwe
>>
>> On 26.02.2024 21:28, Jeroen Ooms wrote:
>>> On Mon, Feb 26, 2024 at 5:50?PM Christophe Dervieux <cderv at posit.co> wrote:
>>>>
>>>> Hi,
>>>>
>>>> I am trying to release a new version of the quarto R package. This new
>>>> version is adding support for a new vignette engine that will use quarto
>>>> CLI (https://quarto.org) when available. The vignettes inside the package
>>>> itself are '.qmd' files built with quarto.
>>>>
>>>> While developing the feature, I noticed that R CMD check will query for
>>>> vignette engines information, and it will find engine in already installed
>>>> package (with `tools:::vignetteEngine`). So a package adding a new engine,
>>>> and using this engine for its vignette only works when the package is
>>>> installed before check.
>>>
>>>
>>> This looks similar to https://bugs.r-project.org/show_bug.cgi?id=18191
>>>
>>> Based on what I can see from the public cran incoming files [1,2], I
>>> suspect the Debian check is loading the CRAN version of quarto (1.3),
>>> rather than the one being checked (1.4), to test vignettes. As a
>>> result it does not recognize the new qmd type vignettes introduced in
>>> this version.
>>>
>>> If this is indeed the case, the problem will resolve itself once the
>>> submission is approved.
>>>
>>>    [1] https://cran.r-project.org/incoming/archive/quarto_1.4.tar.gz
>>>    [2] https://win-builder.r-project.org/incoming_pretest/quarto_1.4_20240221_175256/
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel

From cderv @end|ng |rom po@|t@co  Mon Mar  4 18:45:59 2024
From: cderv @end|ng |rom po@|t@co (Christophe Dervieux)
Date: Mon, 4 Mar 2024 18:45:59 +0100
Subject: [R-pkg-devel] CRAN checks for release of a package with new
 vignette engine
In-Reply-To: <15c60c1b-c658-49d9-ba7f-24242735b012@statistik.tu-dortmund.de>
References: <CAAs3ibuvc5NGTr9ozGfBoS-R0_Ff8uJchYmL1hyHmhHGNbFArg@mail.gmail.com>
 <CABFfbXuG2h4J3NkNLNPYYzgbo5BAVnP9F_j+Gngv5E4B9VKTNQ@mail.gmail.com>
 <8c326569-b3f0-489d-b751-d81a8f054323@statistik.tu-dortmund.de>
 <CAAs3ibszbCnA4Fm5_H_OMZsvcnM2FdEdX8nMNCQyNJyOe+RaZw@mail.gmail.com>
 <15c60c1b-c658-49d9-ba7f-24242735b012@statistik.tu-dortmund.de>
Message-ID: <CAAs3ibt29ChJwG+YmZMntuMjPRMTK0TUsvpZLkPYV4d_EL9euQ@mail.gmail.com>

I just re-submitted now. Thank you.

Best regards,

Christophe



On Mon, Mar 4, 2024 at 4:57?PM Uwe Ligges
<ligges at statistik.tu-dortmund.de> wrote:
>
> OK, can you pls submit that one to CRAN again?
>
> Best,
> Uwe Ligges
>
> On 04.03.2024 16:53, Christophe Dervieux wrote:
> > Hi,
> >
> > yes I have defined in DESCRIPTION
> >
> >      VignetteBuilder:
> >          quarto
> >
> > and running `tools:::loadVignetteBuilder` on the package source
> > directory reads it correctly.
> >
> >      > tools:::loadVignetteBuilder(".")
> >      [1] "quarto" "utils"
> >
> > Best regards,
> >
> > Christophe
> >
> >
> > On Mon, Mar 4, 2024 at 4:40?PM Uwe Ligges
> > <ligges at statistik.tu-dortmund.de> wrote:
> >>
> >> So you have defined
> >>
> >>
> >>     VignetteBuilder: quarto
> >>
> >> ??
> >>
> >> Best,
> >> Uwe
> >>
> >> On 26.02.2024 21:28, Jeroen Ooms wrote:
> >>> On Mon, Feb 26, 2024 at 5:50?PM Christophe Dervieux <cderv at posit.co> wrote:
> >>>>
> >>>> Hi,
> >>>>
> >>>> I am trying to release a new version of the quarto R package. This new
> >>>> version is adding support for a new vignette engine that will use quarto
> >>>> CLI (https://quarto.org) when available. The vignettes inside the package
> >>>> itself are '.qmd' files built with quarto.
> >>>>
> >>>> While developing the feature, I noticed that R CMD check will query for
> >>>> vignette engines information, and it will find engine in already installed
> >>>> package (with `tools:::vignetteEngine`). So a package adding a new engine,
> >>>> and using this engine for its vignette only works when the package is
> >>>> installed before check.
> >>>
> >>>
> >>> This looks similar to https://bugs.r-project.org/show_bug.cgi?id=18191
> >>>
> >>> Based on what I can see from the public cran incoming files [1,2], I
> >>> suspect the Debian check is loading the CRAN version of quarto (1.3),
> >>> rather than the one being checked (1.4), to test vignettes. As a
> >>> result it does not recognize the new qmd type vignettes introduced in
> >>> this version.
> >>>
> >>> If this is indeed the case, the problem will resolve itself once the
> >>> submission is approved.
> >>>
> >>>    [1] https://cran.r-project.org/incoming/archive/quarto_1.4.tar.gz
> >>>    [2] https://win-builder.r-project.org/incoming_pretest/quarto_1.4_20240221_175256/
> >>>
> >>> ______________________________________________
> >>> R-package-devel at r-project.org mailing list
> >>> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From yoh@nn@|oucher @end|ng |rom un|v-po|t|er@@|r  Tue Mar  5 11:58:38 2024
From: yoh@nn@|oucher @end|ng |rom un|v-po|t|er@@|r (Yohann Foucher)
Date: Tue, 5 Mar 2024 11:58:38 +0100
Subject: [R-pkg-devel] Suggesting an archived package in the DESCRIPTION file
Message-ID: <345B8EC7-A291-4DDB-ADFB-83E203953403@univ-poitiers.fr>

Dear R-Members,


I just have submitted an update of the ?survivalSL' package because the last version depends on the ?survivalmodels? package, which has been recently archived.  In the DESCRIPTION file of the new version 0.93 of the ?survivalSL' package, I've moved ?survivalmodels' from "Depends" to the ?Suggests'. I thought this would solve the problem. Indeed, the 'survivalSL? package can function without the ?survivalmodels? package if the user does not include the related learner (survival neural network) in the learning ensemble. Nevertheless, the new version 0.93 was archived again. 

I?m working on the estimation of a survival neural network without the ?survivalmodels? package but this developments will take a long time. During this period, do you have any idea to avoid the archiving of my package?

Thank you for your help.


Yohann


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Tue Mar  5 12:21:05 2024
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Tue, 5 Mar 2024 12:21:05 +0100
Subject: [R-pkg-devel] Suggesting an archived package in the DESCRIPTION
 file
In-Reply-To: <345B8EC7-A291-4DDB-ADFB-83E203953403@univ-poitiers.fr>
References: <345B8EC7-A291-4DDB-ADFB-83E203953403@univ-poitiers.fr>
Message-ID: <00dae23e-38c9-42b1-a259-a68164c00978@statistik.tu-dortmund.de>

Suggested packages should be used conditionally. If available, use it, 
otherwise the code should fail gracefully.

Best,
Uwe Ligges


On 05.03.2024 11:58, Yohann Foucher wrote:
> Dear R-Members,
> 
> 
> I just have submitted an update of the ?survivalSL' package because the last version depends on the ?survivalmodels? package, which has been recently archived.  In the DESCRIPTION file of the new version 0.93 of the ?survivalSL' package, I've moved ?survivalmodels' from "Depends" to the ?Suggests'. I thought this would solve the problem. Indeed, the 'survivalSL? package can function without the ?survivalmodels? package if the user does not include the related learner (survival neural network) in the learning ensemble. Nevertheless, the new version 0.93 was archived again.
> 
> I?m working on the estimation of a survival neural network without the ?survivalmodels? package but this developments will take a long time. During this period, do you have any idea to avoid the archiving of my package?
> 
> Thank you for your help.
> 
> 
> Yohann
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

From murdoch@dunc@n @end|ng |rom gm@||@com  Tue Mar  5 12:25:15 2024
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Tue, 5 Mar 2024 06:25:15 -0500
Subject: [R-pkg-devel] Suggesting an archived package in the DESCRIPTION
 file
In-Reply-To: <345B8EC7-A291-4DDB-ADFB-83E203953403@univ-poitiers.fr>
References: <345B8EC7-A291-4DDB-ADFB-83E203953403@univ-poitiers.fr>
Message-ID: <1e49962e-de18-4549-8d34-3526724d97e8@gmail.com>

On 05/03/2024 5:58 a.m., Yohann Foucher wrote:
> Dear R-Members,
> 
> 
> I just have submitted an update of the ?survivalSL' package because the last version depends on the ?survivalmodels? package, which has been recently archived.  In the DESCRIPTION file of the new version 0.93 of the ?survivalSL' package, I've moved ?survivalmodels' from "Depends" to the ?Suggests'. I thought this would solve the problem. Indeed, the 'survivalSL? package can function without the ?survivalmodels? package if the user does not include the related learner (survival neural network) in the learning ensemble. Nevertheless, the new version 0.93 was archived again.
> 
> I?m working on the estimation of a survival neural network without the ?survivalmodels? package but this developments will take a long time. During this period, do you have any idea to avoid the archiving of my package?

You could make a compatible version of `survivalmodels` available on a 
non-CRAN website, and refer to that website in the 
Additional_repositories field of DESCRIPTION.

It would be best if you fixed whatever issue caused survivalmodels to be 
archived when you do this.

Looking here: 
https://cran-archive.r-project.org/web/checks/2024/2024-03-02_check_results_survivalmodels.html
that appears very easy to do.  The source is here: 
https://github.com/RaphaelS1/survivalmodels/ .

Alternatively, you could just drop the functions that depend on 
survivalmodels completely, and drop it as a Suggested package.

Duncan Murdoch


From edd @end|ng |rom deb|@n@org  Tue Mar  5 14:02:37 2024
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Tue, 5 Mar 2024 07:02:37 -0600
Subject: [R-pkg-devel] Suggesting an archived package in the DESCRIPTION
 file
In-Reply-To: <1e49962e-de18-4549-8d34-3526724d97e8@gmail.com>
References: <345B8EC7-A291-4DDB-ADFB-83E203953403@univ-poitiers.fr>
 <1e49962e-de18-4549-8d34-3526724d97e8@gmail.com>
Message-ID: <26087.6125.251731.974584@rob.eddelbuettel.com>


On 5 March 2024 at 06:25, Duncan Murdoch wrote:
| You could make a compatible version of `survivalmodels` available on a 
| non-CRAN website, and refer to that website in the 
| Additional_repositories field of DESCRIPTION.

Every r-universe sub-site fits that requirement. For this package Google's
first hit was https://raphaels1.r-universe.dev/survivalmodels and it carries
the same line on install.packages() that Jeroen adds to every page:

 install.packages('survivalmodels', repos = c('https://raphaels1.r-universe.dev',
                                              'https://cloud.r-project.org'))

So doing all three of 
- adding a line 'Additional_repositories: https://raphaels1.r-universe.dev'
- adding a 'Suggests: survivalmodels;
- ensuring conditional use only as Suggests != Depends
should do.

| It would be best if you fixed whatever issue caused survivalmodels to be 
| archived when you do this.
| 
| Looking here: 
| https://cran-archive.r-project.org/web/checks/2024/2024-03-02_check_results_survivalmodels.html
| that appears very easy to do.  The source is here: 
| https://github.com/RaphaelS1/survivalmodels/ .

The other may even take a PR fixing this going forward.

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From murdoch@dunc@n @end|ng |rom gm@||@com  Tue Mar  5 17:56:09 2024
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Tue, 5 Mar 2024 11:56:09 -0500
Subject: [R-pkg-devel] Suggesting an archived package in the DESCRIPTION
 file
In-Reply-To: <26087.6125.251731.974584@rob.eddelbuettel.com>
References: <345B8EC7-A291-4DDB-ADFB-83E203953403@univ-poitiers.fr>
 <1e49962e-de18-4549-8d34-3526724d97e8@gmail.com>
 <26087.6125.251731.974584@rob.eddelbuettel.com>
Message-ID: <ce8eb415-6715-45b1-90df-b131734a0882@gmail.com>

On 05/03/2024 8:02 a.m., Dirk Eddelbuettel wrote:
> 
> On 5 March 2024 at 06:25, Duncan Murdoch wrote:
> | You could make a compatible version of `survivalmodels` available on a
> | non-CRAN website, and refer to that website in the
> | Additional_repositories field of DESCRIPTION.
> 
> Every r-universe sub-site fits that requirement. For this package Google's
> first hit was https://raphaels1.r-universe.dev/survivalmodels and it carries
> the same line on install.packages() that Jeroen adds to every page:
> 
>   install.packages('survivalmodels', repos = c('https://raphaels1.r-universe.dev',
>                                                'https://cloud.r-project.org'))

I have mixed feelings about r-universe.  On the one hand, it is really 
nicely put together, and it offers the service described above.  On the 
other, it's probably a bad idea to follow its advice and use 
install.packages() with `repos` as shown:  that will install development 
versions of packages, not releases.

Do you know if it's possible for a package to suggest the CRAN version 
first, with an option like the above only offered as a pre-release option?

Duncan Murdoch

> 
> So doing all three of
> - adding a line 'Additional_repositories: https://raphaels1.r-universe.dev'
> - adding a 'Suggests: survivalmodels;
> - ensuring conditional use only as Suggests != Depends
> should do.
> 
> | It would be best if you fixed whatever issue caused survivalmodels to be
> | archived when you do this.
> |
> | Looking here:
> | https://cran-archive.r-project.org/web/checks/2024/2024-03-02_check_results_survivalmodels.html
> | that appears very easy to do.  The source is here:
> | https://github.com/RaphaelS1/survivalmodels/ .
> 
> The other may even take a PR fixing this going forward.
> 
> Dirk
>


From jo@|@h@p@rry @end|ng |rom gm@||@com  Tue Mar  5 18:08:53 2024
From: jo@|@h@p@rry @end|ng |rom gm@||@com (Josiah Parry)
Date: Tue, 5 Mar 2024 12:08:53 -0500
Subject: [R-pkg-devel] Suggesting an archived package in the DESCRIPTION
 file
In-Reply-To: <ce8eb415-6715-45b1-90df-b131734a0882@gmail.com>
References: <345B8EC7-A291-4DDB-ADFB-83E203953403@univ-poitiers.fr>
 <1e49962e-de18-4549-8d34-3526724d97e8@gmail.com>
 <26087.6125.251731.974584@rob.eddelbuettel.com>
 <ce8eb415-6715-45b1-90df-b131734a0882@gmail.com>
Message-ID: <CAL3ufUJtKSKp1CHYGZqo0qYhfBgoTkH4AG1JaMu4pbv6nG+xxQ@mail.gmail.com>

My understanding is that the order of CRAN repos available in
`options("repos")` are tried sequentially. So if cran.r-rproject.org is
first, that will be tried. If the package is not available there, the next
repository will be tried.

I do appreciate the ease of release to R-universe quite a bit particularly
because you don?t need to vendor rust deps.

On Tue, Mar 5, 2024 at 11:56?AM Duncan Murdoch <murdoch.duncan at gmail.com>
wrote:

> On 05/03/2024 8:02 a.m., Dirk Eddelbuettel wrote:
> >
> > On 5 March 2024 at 06:25, Duncan Murdoch wrote:
> > | You could make a compatible version of `survivalmodels` available on a
> > | non-CRAN website, and refer to that website in the
> > | Additional_repositories field of DESCRIPTION.
> >
> > Every r-universe sub-site fits that requirement. For this package
> Google's
> > first hit was https://raphaels1.r-universe.dev/survivalmodels and it
> carries
> > the same line on install.packages() that Jeroen adds to every page:
> >
> >   install.packages('survivalmodels', repos = c('
> https://raphaels1.r-universe.dev',
> >                                                '
> https://cloud.r-project.org'))
>
> I have mixed feelings about r-universe.  On the one hand, it is really
> nicely put together, and it offers the service described above.  On the
> other, it's probably a bad idea to follow its advice and use
> install.packages() with `repos` as shown:  that will install development
> versions of packages, not releases.
>
> Do you know if it's possible for a package to suggest the CRAN version
> first, with an option like the above only offered as a pre-release option?
>
> Duncan Murdoch
>
> >
> > So doing all three of
> > - adding a line 'Additional_repositories:
> https://raphaels1.r-universe.dev'
> > - adding a 'Suggests: survivalmodels;
> > - ensuring conditional use only as Suggests != Depends
> > should do.
> >
> > | It would be best if you fixed whatever issue caused survivalmodels to
> be
> > | archived when you do this.
> > |
> > | Looking here:
> > |
> https://cran-archive.r-project.org/web/checks/2024/2024-03-02_check_results_survivalmodels.html
> > | that appears very easy to do.  The source is here:
> > | https://github.com/RaphaelS1/survivalmodels/ .
> >
> > The other may even take a PR fixing this going forward.
> >
> > Dirk
> >
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Tue Mar  5 18:47:24 2024
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Tue, 5 Mar 2024 12:47:24 -0500
Subject: [R-pkg-devel] Suggesting an archived package in the DESCRIPTION
 file
In-Reply-To: <CAL3ufUJtKSKp1CHYGZqo0qYhfBgoTkH4AG1JaMu4pbv6nG+xxQ@mail.gmail.com>
References: <345B8EC7-A291-4DDB-ADFB-83E203953403@univ-poitiers.fr>
 <1e49962e-de18-4549-8d34-3526724d97e8@gmail.com>
 <26087.6125.251731.974584@rob.eddelbuettel.com>
 <ce8eb415-6715-45b1-90df-b131734a0882@gmail.com>
 <CAL3ufUJtKSKp1CHYGZqo0qYhfBgoTkH4AG1JaMu4pbv6nG+xxQ@mail.gmail.com>
Message-ID: <21aab52c-6eec-43fb-8693-e9c8e401a137@gmail.com>

On 05/03/2024 12:08 p.m., Josiah Parry wrote:
> My understanding is that the order of CRAN repos available in 
> `options("repos")` are tried sequentially. So if cran.r-rproject.org 
> <http://cran.r-rproject.org> is first, that will be tried. If the 
> package is not available there, the next repository will be tried.

I think that's correct, but as in the example below, the R-universe 
repos is usually listed first.

> I do appreciate the ease of release?to R-universe quite a bit 
> particularly because you don?t need to vendor rust deps.

Is it really a release if the author doesn't know it happened?  I found 
out about "my" site dmurdoch.r-universe.dev today, but it seems to have 
existed for quite a while.

Duncan Murdoch

> 
> On Tue, Mar 5, 2024 at 11:56?AM Duncan Murdoch <murdoch.duncan at gmail.com 
> <mailto:murdoch.duncan at gmail.com>> wrote:
> 
>     On 05/03/2024 8:02 a.m., Dirk Eddelbuettel wrote:
>      >
>      > On 5 March 2024 at 06:25, Duncan Murdoch wrote:
>      > | You could make a compatible version of `survivalmodels`
>     available on a
>      > | non-CRAN website, and refer to that website in the
>      > | Additional_repositories field of DESCRIPTION.
>      >
>      > Every r-universe sub-site fits that requirement. For this package
>     Google's
>      > first hit was https://raphaels1.r-universe.dev/survivalmodels
>     <https://raphaels1.r-universe.dev/survivalmodels> and it carries
>      > the same line on install.packages() that Jeroen adds to every page:
>      >
>      >? ?install.packages('survivalmodels', repos =
>     c('https://raphaels1.r-universe.dev <https://raphaels1.r-universe.dev>',
>      >                                               
>     'https://cloud.r-project.org <https://cloud.r-project.org>'))
> 
>     I have mixed feelings about r-universe.? On the one hand, it is really
>     nicely put together, and it offers the service described above.? On the
>     other, it's probably a bad idea to follow its advice and use
>     install.packages() with `repos` as shown:? that will install
>     development
>     versions of packages, not releases.
> 
>     Do you know if it's possible for a package to suggest the CRAN version
>     first, with an option like the above only offered as a pre-release
>     option?
> 
>     Duncan Murdoch
> 
>      >
>      > So doing all three of
>      > - adding a line 'Additional_repositories:
>     https://raphaels1.r-universe.dev <https://raphaels1.r-universe.dev>'
>      > - adding a 'Suggests: survivalmodels;
>      > - ensuring conditional use only as Suggests != Depends
>      > should do.
>      >
>      > | It would be best if you fixed whatever issue caused
>     survivalmodels to be
>      > | archived when you do this.
>      > |
>      > | Looking here:
>      > |
>     https://cran-archive.r-project.org/web/checks/2024/2024-03-02_check_results_survivalmodels.html <https://cran-archive.r-project.org/web/checks/2024/2024-03-02_check_results_survivalmodels.html>
>      > | that appears very easy to do.? The source is here:
>      > | https://github.com/RaphaelS1/survivalmodels/
>     <https://github.com/RaphaelS1/survivalmodels/> .
>      >
>      > The other may even take a PR fixing this going forward.
>      >
>      > Dirk
>      >
> 
>     ______________________________________________
>     R-package-devel at r-project.org <mailto:R-package-devel at r-project.org>
>     mailing list
>     https://stat.ethz.ch/mailman/listinfo/r-package-devel
>     <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
>


From edd @end|ng |rom deb|@n@org  Tue Mar  5 19:04:21 2024
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Tue, 5 Mar 2024 12:04:21 -0600
Subject: [R-pkg-devel] Suggesting an archived package in the DESCRIPTION
 file
In-Reply-To: <ce8eb415-6715-45b1-90df-b131734a0882@gmail.com>
References: <345B8EC7-A291-4DDB-ADFB-83E203953403@univ-poitiers.fr>
 <1e49962e-de18-4549-8d34-3526724d97e8@gmail.com>
 <26087.6125.251731.974584@rob.eddelbuettel.com>
 <ce8eb415-6715-45b1-90df-b131734a0882@gmail.com>
Message-ID: <26087.24229.361902.266275@rob.eddelbuettel.com>


On 5 March 2024 at 11:56, Duncan Murdoch wrote:
| I have mixed feelings about r-universe.  On the one hand, it is really 
| nicely put together, and it offers the service described above.  On the 
| other, it's probably a bad idea to follow its advice and use 
| install.packages() with `repos` as shown:  that will install development 
| versions of packages, not releases.

Yup. It's a point I raised right at the start as I really do believe in
curated releases but clearly a lot of people prefer the simplicity of
'tagging a release' at GitHub and then getting a build.

r-universe is indeed good at what it does and reliable. There are limited
choices in 'driving' what you can do with it.  We rely quite heavily on it in
a large project for work.  As each 'repo' can appear only once in a universe,
we resorted to having the 'offical' build follow GitHub 'releases', as well
as (optional, additional) builds against a the main branch from another
universe.  This example is for a non-CRAN package.

With CRAN packages, r-universe can be useful too. For some of my packages, I
now show multiple 'badges' at the README: for the released CRAN version as
well as for the current 'rc' in the main branch sporting a differentiating
final digit.  RcppArmadillo had a pre-releases available to test that way for
a few weeks til the new release this week.  So in effect, this gives you what
`drat` allows yet also automagically adds builds. It's quite useful when you
are careful about it.
 
| Do you know if it's possible for a package to suggest the CRAN version 
| first, with an option like the above only offered as a pre-release option?

In the language of Debian and its dpkg and tools, one solution to that would
be 'repository pinning' to declare a 'value' on a repository.  There, the
default is 500, and e.g. for r2u I set this to 700 as you usually want its
versions.

We do not have this for R, but it could be added (eventually) as a new value
in PACKAGES, or as a new supplementary attribute.

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From murdoch@dunc@n @end|ng |rom gm@||@com  Tue Mar  5 19:28:35 2024
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Tue, 5 Mar 2024 13:28:35 -0500
Subject: [R-pkg-devel] Suggesting an archived package in the DESCRIPTION
 file
In-Reply-To: <26087.24229.361902.266275@rob.eddelbuettel.com>
References: <345B8EC7-A291-4DDB-ADFB-83E203953403@univ-poitiers.fr>
 <1e49962e-de18-4549-8d34-3526724d97e8@gmail.com>
 <26087.6125.251731.974584@rob.eddelbuettel.com>
 <ce8eb415-6715-45b1-90df-b131734a0882@gmail.com>
 <26087.24229.361902.266275@rob.eddelbuettel.com>
Message-ID: <92260940-61c1-409f-9c31-dd1f5dccefcb@gmail.com>

On 05/03/2024 1:04 p.m., Dirk Eddelbuettel wrote:
> 
> On 5 March 2024 at 11:56, Duncan Murdoch wrote:
> | I have mixed feelings about r-universe.  On the one hand, it is really
> | nicely put together, and it offers the service described above.  On the
> | other, it's probably a bad idea to follow its advice and use
> | install.packages() with `repos` as shown:  that will install development
> | versions of packages, not releases.
> 
> Yup. It's a point I raised right at the start as I really do believe in
> curated releases but clearly a lot of people prefer the simplicity of
> 'tagging a release' at GitHub and then getting a build.

What I'm seeing is that the tags are ignored, and it is distributing the 
HEAD of the main branch.  I don't think most users should be using that 
version:  in my packages it won't have had full reverse dependency 
checks, I only do that before CRAN releases.  And occasionally it hasn't 
even passed R CMD check, though that's not my normal workflow.  On the 
other hand, I like that it's available and easy to install, it just 
shouldn't be the default install.

I suppose I could do all development on a "devel" branch, and only merge 
it into the main branch after I wanted to make a release, but then the 
R-universe instructions would be no good for getting the devel code.

> 
> r-universe is indeed good at what it does and reliable. There are limited
> choices in 'driving' what you can do with it.  We rely quite heavily on it in
> a large project for work.  As each 'repo' can appear only once in a universe,
> we resorted to having the 'offical' build follow GitHub 'releases', as well
> as (optional, additional) builds against a the main branch from another
> universe.  This example is for a non-CRAN package.


> 
> With CRAN packages, r-universe can be useful too. For some of my packages, I
> now show multiple 'badges' at the README: for the released CRAN version as
> well as for the current 'rc' in the main branch sporting a differentiating
> final digit.  RcppArmadillo had a pre-releases available to test that way for
> a few weeks til the new release this week.  So in effect, this gives you what
> `drat` allows yet also automagically adds builds. It's quite useful when you
> are careful about it.
>   
> | Do you know if it's possible for a package to suggest the CRAN version
> | first, with an option like the above only offered as a pre-release option?
> 
> In the language of Debian and its dpkg and tools, one solution to that would
> be 'repository pinning' to declare a 'value' on a repository.  There, the
> default is 500, and e.g. for r2u I set this to 700 as you usually want its
> versions.
> 
> We do not have this for R, but it could be added (eventually) as a new value
> in PACKAGES, or as a new supplementary attribute.

I don't know anything about dpkg, but having some options available to 
package authors would be a good thing.

Duncan Murdoch


From edd @end|ng |rom deb|@n@org  Tue Mar  5 20:26:59 2024
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Tue, 5 Mar 2024 13:26:59 -0600
Subject: [R-pkg-devel] Suggesting an archived package in the DESCRIPTION
 file
In-Reply-To: <92260940-61c1-409f-9c31-dd1f5dccefcb@gmail.com>
References: <345B8EC7-A291-4DDB-ADFB-83E203953403@univ-poitiers.fr>
 <1e49962e-de18-4549-8d34-3526724d97e8@gmail.com>
 <26087.6125.251731.974584@rob.eddelbuettel.com>
 <ce8eb415-6715-45b1-90df-b131734a0882@gmail.com>
 <26087.24229.361902.266275@rob.eddelbuettel.com>
 <92260940-61c1-409f-9c31-dd1f5dccefcb@gmail.com>
Message-ID: <26087.29187.819952.445502@rob.eddelbuettel.com>


On 5 March 2024 at 13:28, Duncan Murdoch wrote:
| What I'm seeing is that the tags are ignored, and it is distributing the 
| HEAD of the main branch.  I don't think most users should be using that 
| version:  in my packages it won't have had full reverse dependency 
| checks, I only do that before CRAN releases.  And occasionally it hasn't 
| even passed R CMD check, though that's not my normal workflow.  On the 
| other hand, I like that it's available and easy to install, it just 
| shouldn't be the default install.

The default behaviour is to build after every commit to the main branch.  But
there are options. On the repo I mentioned we use

    "branch": "*release",

and now builds occur on tagged releases only. The above is AFAIUI a meta
declaration understood by `remotes`, it was an option suggested by a
colleague.  Naming actual branches also works.
 
| I suppose I could do all development on a "devel" branch, and only merge 
| it into the main branch after I wanted to make a release, but then the 
| R-universe instructions would be no good for getting the devel code.

It is under your control. You could document how to install via `remotes`
from that branch.  As so often, it's about trading one thing off for another.

| I don't know anything about dpkg, but having some options available to 
| package authors would be a good thing.

Yes but you know {install,available}.packages and have some understanding of
how R identifies and installs packages. I merely illustrated a different use
pattern of giving "weights" to repos. If "we all" want different behaviour,
someone has to site down and write it. Discussing some possible specs and
desired behavior may help. 

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From murdoch@dunc@n @end|ng |rom gm@||@com  Tue Mar  5 21:12:05 2024
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Tue, 5 Mar 2024 15:12:05 -0500
Subject: [R-pkg-devel] Suggesting an archived package in the DESCRIPTION
 file
In-Reply-To: <26087.29187.819952.445502@rob.eddelbuettel.com>
References: <345B8EC7-A291-4DDB-ADFB-83E203953403@univ-poitiers.fr>
 <1e49962e-de18-4549-8d34-3526724d97e8@gmail.com>
 <26087.6125.251731.974584@rob.eddelbuettel.com>
 <ce8eb415-6715-45b1-90df-b131734a0882@gmail.com>
 <26087.24229.361902.266275@rob.eddelbuettel.com>
 <92260940-61c1-409f-9c31-dd1f5dccefcb@gmail.com>
 <26087.29187.819952.445502@rob.eddelbuettel.com>
Message-ID: <0a068595-3418-415b-b64e-7b3163e98ffd@gmail.com>

On 05/03/2024 2:26 p.m., Dirk Eddelbuettel wrote:
> 
> On 5 March 2024 at 13:28, Duncan Murdoch wrote:
> | What I'm seeing is that the tags are ignored, and it is distributing the
> | HEAD of the main branch.  I don't think most users should be using that
> | version:  in my packages it won't have had full reverse dependency
> | checks, I only do that before CRAN releases.  And occasionally it hasn't
> | even passed R CMD check, though that's not my normal workflow.  On the
> | other hand, I like that it's available and easy to install, it just
> | shouldn't be the default install.
> 
> The default behaviour is to build after every commit to the main branch.  But
> there are options. On the repo I mentioned we use
> 
>      "branch": "*release",

Where do you put that?  I don't see r2u on R-universe, so I guess you're 
talking about a different repo; which one?

> 
> and now builds occur on tagged releases only. The above is AFAIUI a meta
> declaration understood by `remotes`, it was an option suggested by a
> colleague.  Naming actual branches also works.
>   
> | I suppose I could do all development on a "devel" branch, and only merge
> | it into the main branch after I wanted to make a release, but then the
> | R-universe instructions would be no good for getting the devel code.
> 
> It is under your control. You could document how to install via `remotes`
> from that branch.  As so often, it's about trading one thing off for another.

I do that, but my documentation falls off the bottom of the screen, and 
the automatic docs generated by R-universe are at the top.

Duncan

> 
> | I don't know anything about dpkg, but having some options available to
> | package authors would be a good thing.
> 
> Yes but you know {install,available}.packages and have some understanding of
> how R identifies and installs packages. I merely illustrated a different use
> pattern of giving "weights" to repos. If "we all" want different behaviour,
> someone has to site down and write it. Discussing some possible specs and
> desired behavior may help.
> 
> Dirk
>


From edd @end|ng |rom deb|@n@org  Tue Mar  5 22:25:06 2024
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Tue, 5 Mar 2024 15:25:06 -0600
Subject: [R-pkg-devel] Suggesting an archived package in the DESCRIPTION
 file
In-Reply-To: <0a068595-3418-415b-b64e-7b3163e98ffd@gmail.com>
References: <345B8EC7-A291-4DDB-ADFB-83E203953403@univ-poitiers.fr>
 <1e49962e-de18-4549-8d34-3526724d97e8@gmail.com>
 <26087.6125.251731.974584@rob.eddelbuettel.com>
 <ce8eb415-6715-45b1-90df-b131734a0882@gmail.com>
 <26087.24229.361902.266275@rob.eddelbuettel.com>
 <92260940-61c1-409f-9c31-dd1f5dccefcb@gmail.com>
 <26087.29187.819952.445502@rob.eddelbuettel.com>
 <0a068595-3418-415b-b64e-7b3163e98ffd@gmail.com>
Message-ID: <26087.36274.990228.83788@rob.eddelbuettel.com>


On 5 March 2024 at 15:12, Duncan Murdoch wrote:
| On 05/03/2024 2:26 p.m., Dirk Eddelbuettel wrote:
| > The default behaviour is to build after every commit to the main branch.  But
| > there are options. On the repo I mentioned we use
| > 
| >      "branch": "*release",
| 
| Where do you put that?  I don't see r2u on R-universe, so I guess you're 
| talking about a different repo; which one?

In the (optional) control repo that can drive your 'r-universe', and the file
has to be named 'packages.json'. For you the repo would

    https://github.com/dmurdoch/dmurdoch.r-universe.dev

(and the naming rule was tightened by Jeroen recently -- we used to call
these just 'universe', now it has to match your runiverse)

The file packages.json would then have a block

  {
    "package": "rgl",
    "maintainer": "Duncan Murdoch <murdoch.duncan at gmail.com>"
    "url": "https://github.com/dmurdoch/rgl",
    "available": true,
    "branch": "*release"
  }

The reference I mentioned is our package 'tiledbsoma' (joint work of TileDB
and CZI, in https://github.com/single-cell-data/TileDB-SOMA) and described here:

https://github.com/TileDB-Inc/tiledb-inc.r-universe.dev/blob/master/packages.json 

(and you can ignore the '"subdir": "apis/r"' which is a facet local to that repo).

Note that 'my' packages.json in my eddelbuettel.r-universe.dev ie

https://github.com/eddelbuettel/eddelbuettel.r-universe.dev/blob/master/packages.json

also describe but without the '"branch": "*release"' and that builds with every merge to
the main branch by my choice; that build is mine and 'inofficial' giving us two.

| > It is under your control. You could document how to install via `remotes`
| > from that branch.  As so often, it's about trading one thing off for another.
| 
| I do that, but my documentation falls off the bottom of the screen, and 
| the automatic docs generated by R-universe are at the top.

I always get lost in the r-universe docs too. Some, as Jeroen kindly reminded
me the other day, are here:  https://github.com/r-universe-org

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From rmh @end|ng |rom temp|e@edu  Tue Mar  5 23:41:32 2024
From: rmh @end|ng |rom temp|e@edu (Richard M. Heiberger)
Date: Tue, 5 Mar 2024 22:41:32 +0000
Subject: [R-pkg-devel] RcmdrPlugin.HH_1.1-48.tar.gz
Message-ID: <D8090F24-6B4A-4E38-91FA-7D61E19EA87B@temple.edu>

My package is being rejected by auto-check

Flavor: r-devel-linux-x86_64-debian-gcc, r-devel-windows-x86_64
Check: for missing documentation entries, Result: WARNING
 Undocumented code objects:
   '.__global__'
 All user-level objects in a package should have documentation entries.
 See chapter 'Writing R documentation files' in the 'Writing R
 Extensions' manual.

The problem is that the string    '.__global__'  is not in the package.
I can't find it and John Fox, the maintainer of Rcmdr, can'f find it.

Can someone help me understand why a non-existent string is being detected?


From murdoch@dunc@n @end|ng |rom gm@||@com  Wed Mar  6 00:21:26 2024
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Tue, 5 Mar 2024 18:21:26 -0500
Subject: [R-pkg-devel] RcmdrPlugin.HH_1.1-48.tar.gz
In-Reply-To: <D8090F24-6B4A-4E38-91FA-7D61E19EA87B@temple.edu>
References: <D8090F24-6B4A-4E38-91FA-7D61E19EA87B@temple.edu>
Message-ID: <b6414ad2-144e-4154-addb-db4de2b4c193@gmail.com>

On 05/03/2024 5:41 p.m., Richard M. Heiberger wrote:
> My package is being rejected by auto-check
> 
> Flavor: r-devel-linux-x86_64-debian-gcc, r-devel-windows-x86_64
> Check: for missing documentation entries, Result: WARNING
>   Undocumented code objects:
>     '.__global__'
>   All user-level objects in a package should have documentation entries.
>   See chapter 'Writing R documentation files' in the 'Writing R
>   Extensions' manual.
> 
> The problem is that the string    '.__global__'  is not in the package.
> I can't find it and John Fox, the maintainer of Rcmdr, can'f find it.
> 
> Can someone help me understand why a non-existent string is being detected?
> 

That's the variable modified by the `globalVariables()` function.  So it 
may well exist in your package.  I'd guess the problem is that your 
package exports functions by giving a pattern for the names instead of 
listing each one separately, and it matches that variable.

Duncan Murdoch


From vo|ody@ @end|ng |rom m|nd@pr|ng@com  Wed Mar  6 00:26:28 2024
From: vo|ody@ @end|ng |rom m|nd@pr|ng@com (Vladimir Dergachev)
Date: Tue, 5 Mar 2024 18:26:28 -0500 (EST)
Subject: [R-pkg-devel] 
 RFC: C backtraces for R CMD check via just-in-time debugging
In-Reply-To: <20240304102742.34af66ac@Tarkus>
References: <20240303111444.6582a6c3@Tarkus>
 <20240304141508.59f3fea9@rolf-Latitude-E7470>
 <CAJXgQP2Q8mBaEvmXZh8tA5cO-8gfdn8=xCT0eXww=MJPXNPe9A@mail.gmail.com>
 <20240304102742.34af66ac@Tarkus>
Message-ID: <alpine.DEB.2.22.394.2403051825150.3559@iridium>


I use libunwind in my programs, works quite well, and simple to use.

Happy to share the code if there is interest..

best

Vladimir Dergachev

On Mon, 4 Mar 2024, Ivan Krylov via R-package-devel wrote:

> On Sun, 3 Mar 2024 19:19:43 -0800
> Kevin Ushey <kevinushey at gmail.com> wrote:
>
>> Would libSegFault be useful here?
>
> Glad to know it has been moved to
> <https://github.com/zatrazz/glibc-tools/tree/main/libSegFault> and not
> just removed altogether after the upstream commit
> <https://sourceware.org/git/?p=glibc.git;a=commit;h=65ccd641bacea33be23d51da737c2de7543d0f5e>.
>
> libSegFault is safer than, say, libsegfault [*] because it both
> supports SA_ONSTACK (for when a SIGSEGV is caused by stack overflow)
> and avoids functions like snprintf() (which depend on the locale code,
> which may have been the source of the crash). The only correctness
> problem that may still be unaddressed is potential memory allocations
> in backtrace() when it loads libgcc on first use. That should be easy
> to fix by calling backtrace() once in segfault_init(). Unfortunately,
> libSegFault is limited to glibc systems, so a different solution will
> be needed on Windows, macOS and Linux systems with the musl libc.
>
> Google-owned "backward" [**] tries to do most of this right, but (1) is
> designed to be compiled together with C++ programs, not injected into
> unrelated processes and (2) will exit the process if it survives
> raise(signum), which will interfere with both rJava (judging by the
> number of Java-related SIGSEGVs I saw while running R CMD check) and R's
> own stack overflow survival attempts.
>
> -- 
> Best regards,
> Ivan
>
> [*] https://github.com/stass/libsegfault
> (Which doesn't compile out of the box on GNU/Linux due to missing
> pthread_np.h, although that should be easy to patch.)
>
> [**] https://github.com/bombela/backward-cpp
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From rmh @end|ng |rom temp|e@edu  Wed Mar  6 02:34:36 2024
From: rmh @end|ng |rom temp|e@edu (Richard M. Heiberger)
Date: Wed, 6 Mar 2024 01:34:36 +0000
Subject: [R-pkg-devel] [External]  RcmdrPlugin.HH_1.1-48.tar.gz
In-Reply-To: <b6414ad2-144e-4154-addb-db4de2b4c193@gmail.com>
References: <D8090F24-6B4A-4E38-91FA-7D61E19EA87B@temple.edu>
 <b6414ad2-144e-4154-addb-db4de2b4c193@gmail.com>
Message-ID: <E5B989A3-A7C8-4456-810B-A8ADFA919612@temple.edu>

Almost.

I used 
prompt(".__global__")
to create file
man/.__global__.Rd

This file does not appear in the tar.gz file, but without a note of rejection.
When I checked my disk directory directly
R CMD check RcmdrPlugin.HH
the file was rejected with

Found the following hidden files and directories:
  .DS_Store
  R/.DS_Store
  man/.__global__.Rd
These were most likely included in error. See section ?Package
structure? in the ?Writing R Extensions? manual.

I looked there
Section 1.1 says that the acceptable characters are
    A-Za-z0-9._!#$%&+,;=@^(){}'[]
and "." and _ are explicitly included.

What should I try next?


> On Mar 5, 2024, at 18:21, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> 
> On 05/03/2024 5:41 p.m., Richard M. Heiberger wrote:
>> My package is being rejected by auto-check
>> Flavor: r-devel-linux-x86_64-debian-gcc, r-devel-windows-x86_64
>> Check: for missing documentation entries, Result: WARNING
>>  Undocumented code objects:
>>    '.__global__'
>>  All user-level objects in a package should have documentation entries.
>>  See chapter 'Writing R documentation files' in the 'Writing R
>>  Extensions' manual.
>> The problem is that the string    '.__global__'  is not in the package.
>> I can't find it and John Fox, the maintainer of Rcmdr, can'f find it.
>> Can someone help me understand why a non-existent string is being detected?
> 
> That's the variable modified by the `globalVariables()` function.  So it may well exist in your package.  I'd guess the problem is that your package exports functions by giving a pattern for the names instead of listing each one separately, and it matches that variable.
> 
> Duncan Murdoch
> 
> 
> 


From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Wed Mar  6 03:02:03 2024
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Tue, 05 Mar 2024 18:02:03 -0800
Subject: [R-pkg-devel] [External]  RcmdrPlugin.HH_1.1-48.tar.gz
In-Reply-To: <E5B989A3-A7C8-4456-810B-A8ADFA919612@temple.edu>
References: <D8090F24-6B4A-4E38-91FA-7D61E19EA87B@temple.edu>
 <b6414ad2-144e-4154-addb-db4de2b4c193@gmail.com>
 <E5B989A3-A7C8-4456-810B-A8ADFA919612@temple.edu>
Message-ID: <CF3E0721-1F41-407F-9FA3-C18D9933B4DD@dcn.davis.ca.us>

Remove leading periods from all file names in the tar.gz. Use .Rbuildignore to handle such files in your dev directory if you need them. Maybe also look at [1].

 [1] https://stackoverflow.com/questions/40950799/r-cmd-check-error-how-to-get-rid-of-hidden-files-and-directory-in-devel-r-pack

On March 5, 2024 5:34:36 PM PST, "Richard M. Heiberger" <rmh at temple.edu> wrote:
>Almost.
>
>I used 
>prompt(".__global__")
>to create file
>man/.__global__.Rd
>
>This file does not appear in the tar.gz file, but without a note of rejection.
>When I checked my disk directory directly
>R CMD check RcmdrPlugin.HH
>the file was rejected with
>
>Found the following hidden files and directories:
>  .DS_Store
>  R/.DS_Store
>  man/.__global__.Rd
>These were most likely included in error. See section ?Package
>structure? in the ?Writing R Extensions? manual.
>
>I looked there
>Section 1.1 says that the acceptable characters are
>    A-Za-z0-9._!#$%&+,;=@^(){}'[]
>and "." and _ are explicitly included.
>
>What should I try next?
>
>
>> On Mar 5, 2024, at 18:21, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>> 
>> On 05/03/2024 5:41 p.m., Richard M. Heiberger wrote:
>>> My package is being rejected by auto-check
>>> Flavor: r-devel-linux-x86_64-debian-gcc, r-devel-windows-x86_64
>>> Check: for missing documentation entries, Result: WARNING
>>>  Undocumented code objects:
>>>    '.__global__'
>>>  All user-level objects in a package should have documentation entries.
>>>  See chapter 'Writing R documentation files' in the 'Writing R
>>>  Extensions' manual.
>>> The problem is that the string    '.__global__'  is not in the package.
>>> I can't find it and John Fox, the maintainer of Rcmdr, can'f find it.
>>> Can someone help me understand why a non-existent string is being detected?
>> 
>> That's the variable modified by the `globalVariables()` function.  So it may well exist in your package.  I'd guess the problem is that your package exports functions by giving a pattern for the names instead of listing each one separately, and it matches that variable.
>> 
>> Duncan Murdoch
>> 
>> 
>> 
>
>______________________________________________
>R-package-devel at r-project.org mailing list
>https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
Sent from my phone. Please excuse my brevity.


From |kry|ov @end|ng |rom d|@root@org  Wed Mar  6 07:38:12 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Wed, 6 Mar 2024 09:38:12 +0300
Subject: [R-pkg-devel] RcmdrPlugin.HH_1.1-48.tar.gz
In-Reply-To: <D8090F24-6B4A-4E38-91FA-7D61E19EA87B@temple.edu>
References: <D8090F24-6B4A-4E38-91FA-7D61E19EA87B@temple.edu>
Message-ID: <20240306093812.14bc68d7@Tarkus>

? Tue, 5 Mar 2024 22:41:32 +0000
"Richard M. Heiberger" <rmh at temple.edu> ?????:

>  Undocumented code objects:
>    '.__global__'
>  All user-level objects in a package should have documentation
> entries. See chapter 'Writing R documentation files' in the 'Writing R
>  Extensions' manual.

This object is not here for the user of the package. If you don't
export it, there will be no WARNING about it being undocumented. This
variable is exported because of exportPattern(".") in the file
NAMESPACE. The lone dot is a regular expression that matches any name
of an R object.

If you don't want to manually list your exports in the NAMESPACE file
(which can get tedious) or generate it (which takes additional
dependencies and build steps), you can use exportPattern('^[^\\.]') to
export everything except objects with a name starting with a period:
https://cran.r-project.org/doc/manuals/R-exts.html#Specifying-imports-and-exports

-- 
Best regards,
Ivan


From rmh @end|ng |rom temp|e@edu  Wed Mar  6 08:02:39 2024
From: rmh @end|ng |rom temp|e@edu (Richard M. Heiberger)
Date: Wed, 6 Mar 2024 07:02:39 +0000
Subject: [R-pkg-devel] [External]  RcmdrPlugin.HH_1.1-48.tar.gz
In-Reply-To: <20240306093812.14bc68d7@Tarkus>
References: <D8090F24-6B4A-4E38-91FA-7D61E19EA87B@temple.edu>
 <20240306093812.14bc68d7@Tarkus>
Message-ID: <F68DC1C6-597C-4647-AC96-84373F392EC3@temple.edu>

Thank you Duncan, Jeff, Ivan.

I did all that Duncan and Jeff suggested, plus a bit more that appeared to be necessary.
All of what I did is documented in the RcmdrPlugin.HH/NEWS file.

Ivan's comments were received after I sent 1.1-50 to CRAN and it was accepted.

I suggest that my notes in the NEWS file, perhaps augmented with Ivan's comments,
might be added to utils/man/globalVariables.Rd and to the
"
section ?Package
structure? in the ?Writing R Extensions? manual.
"


> On Mar 6, 2024, at 01:38, Ivan Krylov <ikrylov at disroot.org> wrote:
>
> ? Tue, 5 Mar 2024 22:41:32 +0000
> "Richard M. Heiberger" <rmh at temple.edu> ?????:
>
>> Undocumented code objects:
>>   '.__global__'
>> All user-level objects in a package should have documentation
>> entries. See chapter 'Writing R documentation files' in the 'Writing R
>> Extensions' manual.
>
> This object is not here for the user of the package. If you don't
> export it, there will be no WARNING about it being undocumented. This
> variable is exported because of exportPattern(".") in the file
> NAMESPACE. The lone dot is a regular expression that matches any name
> of an R object.
>
> If you don't want to manually list your exports in the NAMESPACE file
> (which can get tedious) or generate it (which takes additional
> dependencies and build steps), you can use exportPattern('^[^\\.]') to
> export everything except objects with a name starting with a period:
> https://cran.r-project.org/doc/manuals/R-exts.html#Specifying-imports-and-exports
>
> --
> Best regards,
> Ivan


From jo@h@m@u|r|ch @end|ng |rom gm@||@com  Wed Mar  6 17:57:28 2024
From: jo@h@m@u|r|ch @end|ng |rom gm@||@com (Joshua Ulrich)
Date: Wed, 6 Mar 2024 10:57:28 -0600
Subject: [R-pkg-devel] [External] RcmdrPlugin.HH_1.1-48.tar.gz
In-Reply-To: <F68DC1C6-597C-4647-AC96-84373F392EC3@temple.edu>
References: <D8090F24-6B4A-4E38-91FA-7D61E19EA87B@temple.edu>
 <20240306093812.14bc68d7@Tarkus>
 <F68DC1C6-597C-4647-AC96-84373F392EC3@temple.edu>
Message-ID: <CAPPM_gTCgr4BRRwk7qoseGSjX966O71hX2nWBDJ6mfy8RMKAAg@mail.gmail.com>

On Wed, Mar 6, 2024 at 1:03?AM Richard M. Heiberger <rmh at temple.edu> wrote:
>
> Thank you Duncan, Jeff, Ivan.
>
> I did all that Duncan and Jeff suggested, plus a bit more that appeared to be necessary.
> All of what I did is documented in the RcmdrPlugin.HH/NEWS file.
>
> Ivan's comments were received after I sent 1.1-50 to CRAN and it was accepted.
>
I recommend you revert all the changes you made that are documented in
the package NEWS, and at minimum follow Ivan's advice to use
exportPattern("^[^\\.]") instead of exportPattern("."). It would be
even better to follow the advice in Writing R Extensions and list each
exported object individually.

> I suggest that my notes in the NEWS file, perhaps augmented with Ivan's comments,
> might be added to utils/man/globalVariables.Rd and to the
> "
> section ?Package
> structure? in the ?Writing R Extensions? manual.
> "
>
That section of Writing R Extensions specifically says not to do what you did.

    Beware of patterns which include names starting with a period: some
    of these are internal-only variables and should never be exported,
    e.g. ?.__S3MethodsTable__.? (and loading excludes known cases).

Duncan pointed out that '.__global__' is an internal-only variable
created by globalVariables(), which means it should never be exported
by a package. Imagine the number of conflicts there would be if every
package that used globalVariables() exported the '.__global__'
object... there would probably be thousands, yikes!

It's possible that future versions of 'R CMD check' will error if
there are any incorrectly exported internal variables (like
'.__global__'), which would cause your package to fail.

Best,
Josh


>
> > On Mar 6, 2024, at 01:38, Ivan Krylov <ikrylov at disroot.org> wrote:
> >
> > ? Tue, 5 Mar 2024 22:41:32 +0000
> > "Richard M. Heiberger" <rmh at temple.edu> ?????:
> >
> >> Undocumented code objects:
> >>   '.__global__'
> >> All user-level objects in a package should have documentation
> >> entries. See chapter 'Writing R documentation files' in the 'Writing R
> >> Extensions' manual.
> >
> > This object is not here for the user of the package. If you don't
> > export it, there will be no WARNING about it being undocumented. This
> > variable is exported because of exportPattern(".") in the file
> > NAMESPACE. The lone dot is a regular expression that matches any name
> > of an R object.
> >
> > If you don't want to manually list your exports in the NAMESPACE file
> > (which can get tedious) or generate it (which takes additional
> > dependencies and build steps), you can use exportPattern('^[^\\.]') to
> > export everything except objects with a name starting with a period:
> > https://cran.r-project.org/doc/manuals/R-exts.html#Specifying-imports-and-exports
> >
> > --
> > Best regards,
> > Ivan
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel



--
Joshua Ulrich  |  about.me/joshuaulrich
FOSS Trading  |  www.fosstrading.com


From rmh @end|ng |rom temp|e@edu  Wed Mar  6 18:10:50 2024
From: rmh @end|ng |rom temp|e@edu (Richard M. Heiberger)
Date: Wed, 6 Mar 2024 17:10:50 +0000
Subject: [R-pkg-devel] 
 [External]  [External] RcmdrPlugin.HH_1.1-48.tar.gz
In-Reply-To: <CAPPM_gTCgr4BRRwk7qoseGSjX966O71hX2nWBDJ6mfy8RMKAAg@mail.gmail.com>
References: <D8090F24-6B4A-4E38-91FA-7D61E19EA87B@temple.edu>
 <20240306093812.14bc68d7@Tarkus>
 <F68DC1C6-597C-4647-AC96-84373F392EC3@temple.edu>
 <CAPPM_gTCgr4BRRwk7qoseGSjX966O71hX2nWBDJ6mfy8RMKAAg@mail.gmail.com>
Message-ID: <B48ACA95-8F2A-4508-A5CB-E3E0CB162CD8@temple.edu>

Thank you, I will do that reversion in a few days.

Before I do, I want to ask if the default export generated by R CMD build should be changed.
the default is  exportPattern("."), which seems to be the cause of the problem.
Might the default be changed to exportPattern("^[^\\.]") ?

> On Mar 6, 2024, at 11:57, Joshua Ulrich <josh.m.ulrich at gmail.com> wrote:
>
> On Wed, Mar 6, 2024 at 1:03?AM Richard M. Heiberger <rmh at temple.edu> wrote:
>>
>> Thank you Duncan, Jeff, Ivan.
>>
>> I did all that Duncan and Jeff suggested, plus a bit more that appeared to be necessary.
>> All of what I did is documented in the RcmdrPlugin.HH/NEWS file.
>>
>> Ivan's comments were received after I sent 1.1-50 to CRAN and it was accepted.
>>
> I recommend you revert all the changes you made that are documented in
> the package NEWS, and at minimum follow Ivan's advice to use
> exportPattern("^[^\\.]") instead of exportPattern("."). It would be
> even better to follow the advice in Writing R Extensions and list each
> exported object individually.
>
>> I suggest that my notes in the NEWS file, perhaps augmented with Ivan's comments,
>> might be added to utils/man/globalVariables.Rd and to the
>> "
>> section ?Package
>> structure? in the ?Writing R Extensions? manual.
>> "
>>
> That section of Writing R Extensions specifically says not to do what you did.
>
>    Beware of patterns which include names starting with a period: some
>    of these are internal-only variables and should never be exported,
>    e.g. ?.__S3MethodsTable__.? (and loading excludes known cases).
>
> Duncan pointed out that '.__global__' is an internal-only variable
> created by globalVariables(), which means it should never be exported
> by a package. Imagine the number of conflicts there would be if every
> package that used globalVariables() exported the '.__global__'
> object... there would probably be thousands, yikes!
>
> It's possible that future versions of 'R CMD check' will error if
> there are any incorrectly exported internal variables (like
> '.__global__'), which would cause your package to fail.
>
> Best,
> Josh
>
>
>>
>>> On Mar 6, 2024, at 01:38, Ivan Krylov <ikrylov at disroot.org> wrote:
>>>
>>> ? Tue, 5 Mar 2024 22:41:32 +0000
>>> "Richard M. Heiberger" <rmh at temple.edu> ?????:
>>>
>>>> Undocumented code objects:
>>>>  '.__global__'
>>>> All user-level objects in a package should have documentation
>>>> entries. See chapter 'Writing R documentation files' in the 'Writing R
>>>> Extensions' manual.
>>>
>>> This object is not here for the user of the package. If you don't
>>> export it, there will be no WARNING about it being undocumented. This
>>> variable is exported because of exportPattern(".") in the file
>>> NAMESPACE. The lone dot is a regular expression that matches any name
>>> of an R object.
>>>
>>> If you don't want to manually list your exports in the NAMESPACE file
>>> (which can get tedious) or generate it (which takes additional
>>> dependencies and build steps), you can use exportPattern('^[^\\.]') to
>>> export everything except objects with a name starting with a period:
>>> https://cran.r-project.org/doc/manuals/R-exts.html#Specifying-imports-and-exports
>>>
>>> --
>>> Best regards,
>>> Ivan
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>
>
> --
> Joshua Ulrich  |  about.me/joshuaulrich
> FOSS Trading  |  http://www.fosstrading.com/



From yoh@nn@|oucher @end|ng |rom un|v-po|t|er@@|r  Wed Mar  6 18:27:35 2024
From: yoh@nn@|oucher @end|ng |rom un|v-po|t|er@@|r (Yohann Foucher)
Date: Wed, 6 Mar 2024 18:27:35 +0100
Subject: [R-pkg-devel] Suggesting an archived package in the DESCRIPTION
 file
In-Reply-To: <26087.36274.990228.83788@rob.eddelbuettel.com>
References: <345B8EC7-A291-4DDB-ADFB-83E203953403@univ-poitiers.fr>
 <1e49962e-de18-4549-8d34-3526724d97e8@gmail.com>
 <26087.6125.251731.974584@rob.eddelbuettel.com>
 <ce8eb415-6715-45b1-90df-b131734a0882@gmail.com>
 <26087.24229.361902.266275@rob.eddelbuettel.com>
 <92260940-61c1-409f-9c31-dd1f5dccefcb@gmail.com>
 <26087.29187.819952.445502@rob.eddelbuettel.com>
 <0a068595-3418-415b-b64e-7b3163e98ffd@gmail.com>
 <26087.36274.990228.83788@rob.eddelbuettel.com>
Message-ID: <562BB3C8-694B-468F-B2B3-CB39CB3B8228@univ-poitiers.fr>

Dear all,

Thank you for your proposals and discussions. Accordingly, because it seems there is no relevant alternative, I decided to propose an update of the ? survivalmodels ? instead of the initial maintener for repositioning it in the main CRAN repository and avoid the archiving of my package.

Thanks again.

Yohann


> Le 5 mars 2024 ? 22:25, Dirk Eddelbuettel <edd at debian.org> a ?crit :
> 
> 
> On 5 March 2024 at 15:12, Duncan Murdoch wrote:
> | On 05/03/2024 2:26 p.m., Dirk Eddelbuettel wrote:
> | > The default behaviour is to build after every commit to the main branch.  But
> | > there are options. On the repo I mentioned we use
> | > 
> | >      "branch": "*release",
> | 
> | Where do you put that?  I don't see r2u on R-universe, so I guess you're 
> | talking about a different repo; which one?
> 
> In the (optional) control repo that can drive your 'r-universe', and the file
> has to be named 'packages.json'. For you the repo would
> 
>    https://github.com/dmurdoch/dmurdoch.r-universe.dev
> 
> (and the naming rule was tightened by Jeroen recently -- we used to call
> these just 'universe', now it has to match your runiverse)
> 
> The file packages.json would then have a block
> 
>  {
>    "package": "rgl",
>    "maintainer": "Duncan Murdoch <murdoch.duncan at gmail.com>"
>    "url": "https://github.com/dmurdoch/rgl",
>    "available": true,
>    "branch": "*release"
>  }
> 
> The reference I mentioned is our package 'tiledbsoma' (joint work of TileDB
> and CZI, in https://github.com/single-cell-data/TileDB-SOMA) and described here:
> 
> https://github.com/TileDB-Inc/tiledb-inc.r-universe.dev/blob/master/packages.json 
> 
> (and you can ignore the '"subdir": "apis/r"' which is a facet local to that repo).
> 
> Note that 'my' packages.json in my eddelbuettel.r-universe.dev ie
> 
> https://github.com/eddelbuettel/eddelbuettel.r-universe.dev/blob/master/packages.json
> 
> also describe but without the '"branch": "*release"' and that builds with every merge to
> the main branch by my choice; that build is mine and 'inofficial' giving us two.
> 
> | > It is under your control. You could document how to install via `remotes`
> | > from that branch.  As so often, it's about trading one thing off for another.
> | 
> | I do that, but my documentation falls off the bottom of the screen, and 
> | the automatic docs generated by R-universe are at the top.
> 
> I always get lost in the r-universe docs too. Some, as Jeroen kindly reminded
> me the other day, are here:  https://github.com/r-universe-org
> 
> Dirk
> 
> -- 
> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Wed Mar  6 18:34:41 2024
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Wed, 6 Mar 2024 18:34:41 +0100
Subject: [R-pkg-devel] [External] RcmdrPlugin.HH_1.1-48.tar.gz
In-Reply-To: <CAPPM_gTCgr4BRRwk7qoseGSjX966O71hX2nWBDJ6mfy8RMKAAg@mail.gmail.com>
References: <D8090F24-6B4A-4E38-91FA-7D61E19EA87B@temple.edu>
 <20240306093812.14bc68d7@Tarkus>
 <F68DC1C6-597C-4647-AC96-84373F392EC3@temple.edu>
 <CAPPM_gTCgr4BRRwk7qoseGSjX966O71hX2nWBDJ6mfy8RMKAAg@mail.gmail.com>
Message-ID: <26088.43313.357757.63530@stat.math.ethz.ch>

>>>>> Joshua Ulrich 
>>>>>     on Wed, 6 Mar 2024 10:57:28 -0600 writes:

    > On Wed, Mar 6, 2024 at 1:03?AM Richard M. Heiberger
    > <rmh at temple.edu> wrote:
    >> 
    >> Thank you Duncan, Jeff, Ivan.
    >> 
    >> I did all that Duncan and Jeff suggested, plus a bit more
    >> that appeared to be necessary.  All of what I did is
    >> documented in the RcmdrPlugin.HH/NEWS file.
    >> 
    >> Ivan's comments were received after I sent 1.1-50 to CRAN
    >> and it was accepted.
    >> 
    > I recommend you revert all the changes you made that are
    > documented in the package NEWS, and at minimum follow
    > Ivan's advice to use exportPattern("^[^\\.]") instead of
    > exportPattern("."). It would be even better to follow the
    > advice in Writing R Extensions and list each exported
    > object individually.

I agree: at least use   exportPattern("^[^\\.]")
instead of the 'very un-recommended' (.)  which -- as Ivan
mentioned -- does export *everything* --
entirely destroying one important advantage of namespaces,
namely to have "private" auxiliary functions/objects/data .

Martin

    >> I suggest that my notes in the NEWS file, perhaps
    >> augmented with Ivan's comments, might be added to
    >> utils/man/globalVariables.Rd and to the " section
    >> ?Package structure? in the ?Writing R Extensions? manual.
    >> "
    >> 
    > That section of Writing R Extensions specifically says not
    > to do what you did.

    >     Beware of patterns which include names starting with a
    > period: some of these are internal-only variables and
    > should never be exported, e.g. ?.__S3MethodsTable__.? (and
    > loading excludes known cases).

    > Duncan pointed out that '.__global__' is an internal-only
    > variable created by globalVariables(), which means it
    > should never be exported by a package. Imagine the number
    > of conflicts there would be if every package that used
    > globalVariables() exported the '.__global__'
    > object... there would probably be thousands, yikes!

    > It's possible that future versions of 'R CMD check' will
    > error if there are any incorrectly exported internal
    > variables (like '.__global__'), which would cause your
    > package to fail.

    > Best, Josh


    >> 
    >> > On Mar 6, 2024, at 01:38, Ivan Krylov
    >> <ikrylov at disroot.org> wrote:
    >> >
    >> > ? Tue, 5 Mar 2024 22:41:32 +0000 > "Richard
    >> M. Heiberger" <rmh at temple.edu> ?????:
    >> >
    >> >> Undocumented code objects: >> '.__global__' >> All
    >> user-level objects in a package should have documentation
    >> >> entries. See chapter 'Writing R documentation files'
    >> in the 'Writing R >> Extensions' manual.
    >> >
    >> > This object is not here for the user of the package. If
    >> you don't > export it, there will be no WARNING about it
    >> being undocumented. This > variable is exported because
    >> of exportPattern(".") in the file > NAMESPACE. The lone
    >> dot is a regular expression that matches any name > of an
    >> R object.
    >> >
    >> > If you don't want to manually list your exports in the
    >> NAMESPACE file > (which can get tedious) or generate it
    >> (which takes additional > dependencies and build steps),
    >> you can use exportPattern('^[^\\.]') to > export
    >> everything except objects with a name starting with a
    >> period: >
    >> https://cran.r-project.org/doc/manuals/R-exts.html#Specifying-imports-and-exports
    >> >
    >> > --
    >> > Best regards, > Ivan
    >> 
    >> ______________________________________________
    >> R-package-devel at r-project.org mailing list
    >> https://stat.ethz.ch/mailman/listinfo/r-package-devel



    > --
    > Joshua Ulrich | about.me/joshuaulrich FOSS Trading |
    > www.fosstrading.com

    > ______________________________________________
    > R-package-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-package-devel


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Wed Mar  6 19:00:16 2024
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Wed, 6 Mar 2024 19:00:16 +0100
Subject: [R-pkg-devel] 
 [External]  [External] RcmdrPlugin.HH_1.1-48.tar.gz
In-Reply-To: <B48ACA95-8F2A-4508-A5CB-E3E0CB162CD8@temple.edu>
References: <D8090F24-6B4A-4E38-91FA-7D61E19EA87B@temple.edu>
 <20240306093812.14bc68d7@Tarkus>
 <F68DC1C6-597C-4647-AC96-84373F392EC3@temple.edu>
 <CAPPM_gTCgr4BRRwk7qoseGSjX966O71hX2nWBDJ6mfy8RMKAAg@mail.gmail.com>
 <B48ACA95-8F2A-4508-A5CB-E3E0CB162CD8@temple.edu>
Message-ID: <26088.44848.383114.571551@stat.math.ethz.ch>

>>>>> Richard M Heiberger 
>>>>>     on Wed, 6 Mar 2024 17:10:50 +0000 writes:

    > Thank you, I will do that reversion in a few days.

(good; I'm sorry I did not see this, before I replied to Joshua's)

    > Before I do, I want to ask if the default export generated by R CMD build should be changed.
    > the default is  exportPattern("."), which seems to be the cause of the problem.
    > Might the default be changed to exportPattern("^[^\\.]") ?

That's a good suggestion in my view.
That default *was* sensible when namespaces were
introduced (~ 2004?): It did indeed ensure that the package worked
entirely as before there were namespaces -- always everything
was "exported", i.e. publicly visible and part of the implicit
package API.

And such 100%-backcompatibility was of course sensible to ease
transition. But we are ca. 20 years later now, and I guess that
most active R users (incl package developers) either don't know
or then hardly remember that R had no namespaces originally.

I see it only in the tools pkg hidden  writeDefaultNamespace()
which is used only once in tools:::.build_packages()

	## add NAMESPACE if the author didn't write one
	if(!file.exists(namespace <- file.path(pkgname, "NAMESPACE")) ) {
	    messageLog(Log, "creating default NAMESPACE file")
	    writeDefaultNamespace(namespace)
	}

Note that the "Bible" on R packages has always been
'Writing R Extensions' - in the R sources,  doc/manual/R-exts.texi

It has -- *since* svn rev 23392,  003-02-27 19:02:45 +0100 
          by Luke Tierney and commit message
	  "Added name space support for packages that do not use methods."

the text, e.g., at
  https://cran.r-project.org/doc/manuals/R-exts.html#Specifying-imports-and-exports

>    For packages with many variables to export it may be more convenient
> to specify the names to export with a regular expression using
> ?exportPattern?.  The directive

>      exportPattern("^[^\\.]")

> exports all variables that do not start with a period.  However, such
> broad patterns are not recommended for production code: it is better to
> list all exports or use narrowly-defined groups.  .....

so I agree we should change the default.
The R code above shows that the user does get a message about
automatic NAMESPACE creation.

If there are cases, where people need to export even .<some>,
they should have to consciously choose so.

Martin




    >> On Mar 6, 2024, at 11:57, Joshua Ulrich <josh.m.ulrich at gmail.com> wrote:
    >> 
    >> On Wed, Mar 6, 2024 at 1:03?AM Richard M. Heiberger <rmh at temple.edu> wrote:
    >>> 
    >>> Thank you Duncan, Jeff, Ivan.
    >>> 
    >>> I did all that Duncan and Jeff suggested, plus a bit more that appeared to be necessary.
    >>> All of what I did is documented in the RcmdrPlugin.HH/NEWS file.
    >>> 
    >>> Ivan's comments were received after I sent 1.1-50 to CRAN and it was accepted.
    >>> 
    >> I recommend you revert all the changes you made that are documented in
    >> the package NEWS, and at minimum follow Ivan's advice to use
    >> exportPattern("^[^\\.]") instead of exportPattern("."). It would be
    >> even better to follow the advice in Writing R Extensions and list each
    >> exported object individually.
    >> 
    >>> I suggest that my notes in the NEWS file, perhaps augmented with Ivan's comments,
    >>> might be added to utils/man/globalVariables.Rd and to the
    >>> "
    >>> section ?Package
    >>> structure? in the ?Writing R Extensions? manual.
    >>> "
    >>> 
    >> That section of Writing R Extensions specifically says not to do what you did.
    >> 
    >> Beware of patterns which include names starting with a period: some
    >> of these are internal-only variables and should never be exported,
    >> e.g. ?.__S3MethodsTable__.? (and loading excludes known cases).
    >> 
    >> Duncan pointed out that '.__global__' is an internal-only variable
    >> created by globalVariables(), which means it should never be exported
    >> by a package. Imagine the number of conflicts there would be if every
    >> package that used globalVariables() exported the '.__global__'
    >> object... there would probably be thousands, yikes!
    >> 
    >> It's possible that future versions of 'R CMD check' will error if
    >> there are any incorrectly exported internal variables (like
    >> '.__global__'), which would cause your package to fail.
    >> 
    >> Best,
    >> Josh
    >> 
    >> 
    >>> 
    >>>> On Mar 6, 2024, at 01:38, Ivan Krylov <ikrylov at disroot.org> wrote:
    >>>> 
    >>>> ? Tue, 5 Mar 2024 22:41:32 +0000
    >>>> "Richard M. Heiberger" <rmh at temple.edu> ?????:
    >>>> 
    >>>>> Undocumented code objects:
    >>>>> '.__global__'
    >>>>> All user-level objects in a package should have documentation
    >>>>> entries. See chapter 'Writing R documentation files' in the 'Writing R
    >>>>> Extensions' manual.
    >>>> 
    >>>> This object is not here for the user of the package. If you don't
    >>>> export it, there will be no WARNING about it being undocumented. This
    >>>> variable is exported because of exportPattern(".") in the file
    >>>> NAMESPACE. The lone dot is a regular expression that matches any name
    >>>> of an R object.
    >>>> 
    >>>> If you don't want to manually list your exports in the NAMESPACE file
    >>>> (which can get tedious) or generate it (which takes additional
    >>>> dependencies and build steps), you can use exportPattern('^[^\\.]') to
    >>>> export everything except objects with a name starting with a period:
    >>>> https://cran.r-project.org/doc/manuals/R-exts.html#Specifying-imports-and-exports
    >>>> 
    >>>> --
    >>>> Best regards,
    >>>> Ivan
    >>> 
    >>> ______________________________________________
    >>> R-package-devel at r-project.org mailing list
    >>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
    >> 
    >> 
    >> 
    >> --
    >> Joshua Ulrich  |  about.me/joshuaulrich
    >> FOSS Trading  |  http://www.fosstrading.com/


    > ______________________________________________
    > R-package-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-package-devel


From murdoch@dunc@n @end|ng |rom gm@||@com  Wed Mar  6 19:46:55 2024
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Wed, 6 Mar 2024 13:46:55 -0500
Subject: [R-pkg-devel] 
 [External] [External] RcmdrPlugin.HH_1.1-48.tar.gz
In-Reply-To: <26088.44848.383114.571551@stat.math.ethz.ch>
References: <D8090F24-6B4A-4E38-91FA-7D61E19EA87B@temple.edu>
 <20240306093812.14bc68d7@Tarkus>
 <F68DC1C6-597C-4647-AC96-84373F392EC3@temple.edu>
 <CAPPM_gTCgr4BRRwk7qoseGSjX966O71hX2nWBDJ6mfy8RMKAAg@mail.gmail.com>
 <B48ACA95-8F2A-4508-A5CB-E3E0CB162CD8@temple.edu>
 <26088.44848.383114.571551@stat.math.ethz.ch>
Message-ID: <d01e3364-07d5-4a12-855d-bc608402f29b@gmail.com>

On 06/03/2024 1:00 p.m., Martin Maechler wrote:
>>>>>> Richard M Heiberger
>>>>>>      on Wed, 6 Mar 2024 17:10:50 +0000 writes:
> 
>      > Thank you, I will do that reversion in a few days.
> 
> (good; I'm sorry I did not see this, before I replied to Joshua's)
> 
>      > Before I do, I want to ask if the default export generated by R CMD build should be changed.
>      > the default is  exportPattern("."), which seems to be the cause of the problem.
>      > Might the default be changed to exportPattern("^[^\\.]") ?
> 
> That's a good suggestion in my view.

One thing I don't understand about that suggestion (which is taken from 
WRE, I'm not blaming Rich for it):  why include the backslash in the 
negated character class? Does R ever create variables starting with a 
backslash, or is this just a more or less harmless error, thinking that 
the dot needs escaping?

Duncan Murdoch

> That default *was* sensible when namespaces were
> introduced (~ 2004?): It did indeed ensure that the package worked
> entirely as before there were namespaces -- always everything
> was "exported", i.e. publicly visible and part of the implicit
> package API.
> 
> And such 100%-backcompatibility was of course sensible to ease
> transition. But we are ca. 20 years later now, and I guess that
> most active R users (incl package developers) either don't know
> or then hardly remember that R had no namespaces originally.
> 
> I see it only in the tools pkg hidden  writeDefaultNamespace()
> which is used only once in tools:::.build_packages()
> 
> 	## add NAMESPACE if the author didn't write one
> 	if(!file.exists(namespace <- file.path(pkgname, "NAMESPACE")) ) {
> 	    messageLog(Log, "creating default NAMESPACE file")
> 	    writeDefaultNamespace(namespace)
> 	}
> 
> Note that the "Bible" on R packages has always been
> 'Writing R Extensions' - in the R sources,  doc/manual/R-exts.texi
> 
> It has -- *since* svn rev 23392,  003-02-27 19:02:45 +0100
>            by Luke Tierney and commit message
> 	  "Added name space support for packages that do not use methods."
> 
> the text, e.g., at
>    https://cran.r-project.org/doc/manuals/R-exts.html#Specifying-imports-and-exports
> 
>>     For packages with many variables to export it may be more convenient
>> to specify the names to export with a regular expression using
>> ?exportPattern?.  The directive
> 
>>       exportPattern("^[^\\.]")
> 
>> exports all variables that do not start with a period.  However, such
>> broad patterns are not recommended for production code: it is better to
>> list all exports or use narrowly-defined groups.  .....
> 
> so I agree we should change the default.
> The R code above shows that the user does get a message about
> automatic NAMESPACE creation.
> 
> If there are cases, where people need to export even .<some>,
> they should have to consciously choose so.
> 
> Martin
> 
> 
> 
> 
>      >> On Mar 6, 2024, at 11:57, Joshua Ulrich <josh.m.ulrich at gmail.com> wrote:
>      >>
>      >> On Wed, Mar 6, 2024 at 1:03?AM Richard M. Heiberger <rmh at temple.edu> wrote:
>      >>>
>      >>> Thank you Duncan, Jeff, Ivan.
>      >>>
>      >>> I did all that Duncan and Jeff suggested, plus a bit more that appeared to be necessary.
>      >>> All of what I did is documented in the RcmdrPlugin.HH/NEWS file.
>      >>>
>      >>> Ivan's comments were received after I sent 1.1-50 to CRAN and it was accepted.
>      >>>
>      >> I recommend you revert all the changes you made that are documented in
>      >> the package NEWS, and at minimum follow Ivan's advice to use
>      >> exportPattern("^[^\\.]") instead of exportPattern("."). It would be
>      >> even better to follow the advice in Writing R Extensions and list each
>      >> exported object individually.
>      >>
>      >>> I suggest that my notes in the NEWS file, perhaps augmented with Ivan's comments,
>      >>> might be added to utils/man/globalVariables.Rd and to the
>      >>> "
>      >>> section ?Package
>      >>> structure? in the ?Writing R Extensions? manual.
>      >>> "
>      >>>
>      >> That section of Writing R Extensions specifically says not to do what you did.
>      >>
>      >> Beware of patterns which include names starting with a period: some
>      >> of these are internal-only variables and should never be exported,
>      >> e.g. ?.__S3MethodsTable__.? (and loading excludes known cases).
>      >>
>      >> Duncan pointed out that '.__global__' is an internal-only variable
>      >> created by globalVariables(), which means it should never be exported
>      >> by a package. Imagine the number of conflicts there would be if every
>      >> package that used globalVariables() exported the '.__global__'
>      >> object... there would probably be thousands, yikes!
>      >>
>      >> It's possible that future versions of 'R CMD check' will error if
>      >> there are any incorrectly exported internal variables (like
>      >> '.__global__'), which would cause your package to fail.
>      >>
>      >> Best,
>      >> Josh
>      >>
>      >>
>      >>>
>      >>>> On Mar 6, 2024, at 01:38, Ivan Krylov <ikrylov at disroot.org> wrote:
>      >>>>
>      >>>> ? Tue, 5 Mar 2024 22:41:32 +0000
>      >>>> "Richard M. Heiberger" <rmh at temple.edu> ?????:
>      >>>>
>      >>>>> Undocumented code objects:
>      >>>>> '.__global__'
>      >>>>> All user-level objects in a package should have documentation
>      >>>>> entries. See chapter 'Writing R documentation files' in the 'Writing R
>      >>>>> Extensions' manual.
>      >>>>
>      >>>> This object is not here for the user of the package. If you don't
>      >>>> export it, there will be no WARNING about it being undocumented. This
>      >>>> variable is exported because of exportPattern(".") in the file
>      >>>> NAMESPACE. The lone dot is a regular expression that matches any name
>      >>>> of an R object.
>      >>>>
>      >>>> If you don't want to manually list your exports in the NAMESPACE file
>      >>>> (which can get tedious) or generate it (which takes additional
>      >>>> dependencies and build steps), you can use exportPattern('^[^\\.]') to
>      >>>> export everything except objects with a name starting with a period:
>      >>>> https://cran.r-project.org/doc/manuals/R-exts.html#Specifying-imports-and-exports
>      >>>>
>      >>>> --
>      >>>> Best regards,
>      >>>> Ivan
>      >>>
>      >>> ______________________________________________
>      >>> R-package-devel at r-project.org mailing list
>      >>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>      >>
>      >>
>      >>
>      >> --
>      >> Joshua Ulrich  |  about.me/joshuaulrich
>      >> FOSS Trading  |  http://www.fosstrading.com/
> 
> 
>      > ______________________________________________
>      > R-package-devel at r-project.org mailing list
>      > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From |kry|ov @end|ng |rom d|@root@org  Thu Mar  7 10:16:59 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Thu, 7 Mar 2024 12:16:59 +0300
Subject: [R-pkg-devel] 
 [External] [External] RcmdrPlugin.HH_1.1-48.tar.gz
In-Reply-To: <d01e3364-07d5-4a12-855d-bc608402f29b@gmail.com>
References: <D8090F24-6B4A-4E38-91FA-7D61E19EA87B@temple.edu>
 <20240306093812.14bc68d7@Tarkus>
 <F68DC1C6-597C-4647-AC96-84373F392EC3@temple.edu>
 <CAPPM_gTCgr4BRRwk7qoseGSjX966O71hX2nWBDJ6mfy8RMKAAg@mail.gmail.com>
 <B48ACA95-8F2A-4508-A5CB-E3E0CB162CD8@temple.edu>
 <26088.44848.383114.571551@stat.math.ethz.ch>
 <d01e3364-07d5-4a12-855d-bc608402f29b@gmail.com>
Message-ID: <20240307121659.5969d579@arachnoid>

On Wed, 6 Mar 2024 13:46:55 -0500
Duncan Murdoch <murdoch.duncan at gmail.com> wrote:

> is this just a more or less harmless error, thinking that 
> the dot needs escaping

I think it's this one. You are absolutely right that the dot doesn't
need escaping in either TRE (which is what's used inside exportPattern)
or PCRE. In PRCE, this regular expression would have worked as intended:

# We do match backslashes by mistake.
grepl('[\\.]', '\\')
# [1] TRUE

# In PCRE, this wouldn't have been a mistake.
grepl('[\\.]', c('\\', '.'), perl = TRUE)
# [1] FALSE TRUE

-- 
Best regards,
Ivan


From |kry|ov @end|ng |rom d|@root@org  Thu Mar  7 10:30:42 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Thu, 7 Mar 2024 12:30:42 +0300
Subject: [R-pkg-devel] 
 RFC: C backtraces for R CMD check via just-in-time debugging
In-Reply-To: <alpine.DEB.2.22.394.2403051825150.3559@iridium>
References: <20240303111444.6582a6c3@Tarkus>
 <20240304141508.59f3fea9@rolf-Latitude-E7470>
 <CAJXgQP2Q8mBaEvmXZh8tA5cO-8gfdn8=xCT0eXww=MJPXNPe9A@mail.gmail.com>
 <20240304102742.34af66ac@Tarkus>
 <alpine.DEB.2.22.394.2403051825150.3559@iridium>
Message-ID: <20240307123042.338b426c@arachnoid>

On Tue, 5 Mar 2024 18:26:28 -0500 (EST)
Vladimir Dergachev <volodya at mindspring.com> wrote:

> I use libunwind in my programs, works quite well, and simple to use.
> 
> Happy to share the code if there is interest..

Do you mean that you use libunwind in signal handlers? An example on
how to produce a backtrace without calling any async-signal-unsafe
functions would indeed be greatly useful.

Speaking of shared objects injected using LD_PRELOAD, I've experimented
some more, and I think that none of them would work with R without
additional adjustments. They install their signal handler very soon
after the process starts up, and later, when R initialises, it
installs its own signal handler, overwriting the previous one. For this
scheme to work, either R would have to cooperate, remembering a pointer
to the previous signal handler and calling it at some point (which
sounds unsafe), or the injected shared object would have to override
sigaction() and call R's signal handler from its own (which sounds
extremely unsafe).

Without that, if we want C-level backtraces, we either need to patch R
to produce them (using backtrace() and limiting this to glibc systems
or using libunwind and paying the dependency cost) or to use a debugger.

-- 
Best regards,
Ivan


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu Mar  7 11:08:40 2024
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 7 Mar 2024 05:08:40 -0500
Subject: [R-pkg-devel] 
 [External] [External] RcmdrPlugin.HH_1.1-48.tar.gz
In-Reply-To: <20240307121659.5969d579@arachnoid>
References: <D8090F24-6B4A-4E38-91FA-7D61E19EA87B@temple.edu>
 <20240306093812.14bc68d7@Tarkus>
 <F68DC1C6-597C-4647-AC96-84373F392EC3@temple.edu>
 <CAPPM_gTCgr4BRRwk7qoseGSjX966O71hX2nWBDJ6mfy8RMKAAg@mail.gmail.com>
 <B48ACA95-8F2A-4508-A5CB-E3E0CB162CD8@temple.edu>
 <26088.44848.383114.571551@stat.math.ethz.ch>
 <d01e3364-07d5-4a12-855d-bc608402f29b@gmail.com>
 <20240307121659.5969d579@arachnoid>
Message-ID: <0cb6fb85-a69a-4e92-8e91-5886a1199223@gmail.com>

On 07/03/2024 4:16 a.m., Ivan Krylov wrote:
> On Wed, 6 Mar 2024 13:46:55 -0500
> Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> 
>> is this just a more or less harmless error, thinking that
>> the dot needs escaping
> 
> I think it's this one. You are absolutely right that the dot doesn't
> need escaping in either TRE (which is what's used inside exportPattern)
> or PCRE. In PRCE, this regular expression would have worked as intended:
> 
> # We do match backslashes by mistake.
> grepl('[\\.]', '\\')
> # [1] TRUE
> 
> # In PCRE, this wouldn't have been a mistake.
> grepl('[\\.]', c('\\', '.'), perl = TRUE)
> # [1] FALSE TRUE
> 

Thanks, I didn't realize that escaping in PCRE was optional.

So the default exportPattern line could be

   exportPattern("^[^.]")

and it would work even if things were changed so that PCRE was used 
instead of TRE.

Duncan Murdoch


From Sergej@Ru|| @end|ng |rom t|ho-h@nnover@de  Thu Mar  7 11:37:51 2024
From: Sergej@Ru|| @end|ng |rom t|ho-h@nnover@de (Ruff, Sergej)
Date: Thu, 7 Mar 2024 10:37:51 +0000
Subject: [R-pkg-devel] @doctype is deprecated. need help for r package
 documentation
Message-ID: <1967f4ed50ab46de84fd614de15e4bc0@tiho-hannover.de>

Hello,

I need help with a package I am currently developing called bootGSEA.
 I noticed that when I try ??bootGSEA? it goes to the help page in R itself but not to the html page (we had this issue last time as well but we solved it by adding a documentation to the package itself to the R file) like from the before version of the package.
I tried ?_PACKAGE? in the documentation of the package section as @doctype is depreceated, but it still doesn?t seem to solve the issue. Do you have any idea on this?


	[[alternative HTML version deleted]]


From |kry|ov @end|ng |rom d|@root@org  Thu Mar  7 13:53:07 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Thu, 7 Mar 2024 15:53:07 +0300
Subject: [R-pkg-devel] @doctype is deprecated. need help for r package
 documentation
In-Reply-To: <1967f4ed50ab46de84fd614de15e4bc0@tiho-hannover.de>
References: <1967f4ed50ab46de84fd614de15e4bc0@tiho-hannover.de>
Message-ID: <20240307155307.53f3d629@arachnoid>

? Thu, 7 Mar 2024 10:37:51 +0000
"Ruff, Sergej" <Sergej.Ruff at tiho-hannover.de> ?????:

> I noticed that when I try _?bootGSEA_ it goes to the help page in R
> itself but not to the html page

That's up to the user to choose. help(bootGSEA, help_type = 'html')
should get you to the HTML documentation; help(bootGSEA, help_type =
'text') should give you plain text. The default depends on
options(help_type=...). On Windows, you get a choice during
installation of R; this gets recorded in file.path(R.home('etc'),
'Rprofile.site').

-- 
Best regards,
Ivan


From @ergue|@@oko| @end|ng |rom gm@||@com  Thu Mar  7 14:38:26 2024
From: @ergue|@@oko| @end|ng |rom gm@||@com (Serguei Sokol)
Date: Thu, 7 Mar 2024 14:38:26 +0100
Subject: [R-pkg-devel] 
 [External] [External] RcmdrPlugin.HH_1.1-48.tar.gz
In-Reply-To: <0cb6fb85-a69a-4e92-8e91-5886a1199223@gmail.com>
References: <D8090F24-6B4A-4E38-91FA-7D61E19EA87B@temple.edu>
 <20240306093812.14bc68d7@Tarkus>
 <F68DC1C6-597C-4647-AC96-84373F392EC3@temple.edu>
 <CAPPM_gTCgr4BRRwk7qoseGSjX966O71hX2nWBDJ6mfy8RMKAAg@mail.gmail.com>
 <B48ACA95-8F2A-4508-A5CB-E3E0CB162CD8@temple.edu>
 <26088.44848.383114.571551@stat.math.ethz.ch>
 <d01e3364-07d5-4a12-855d-bc608402f29b@gmail.com>
 <20240307121659.5969d579@arachnoid>
 <0cb6fb85-a69a-4e92-8e91-5886a1199223@gmail.com>
Message-ID: <1f392072-43a1-49c2-aaa8-4fbb58fe300b@gmail.com>

Le 07/03/2024 ? 11:08, Duncan Murdoch a ?crit?:
> On 07/03/2024 4:16 a.m., Ivan Krylov wrote:
>> On Wed, 6 Mar 2024 13:46:55 -0500
>> Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>>
>>> is this just a more or less harmless error, thinking that
>>> the dot needs escaping
>>
>> I think it's this one. You are absolutely right that the dot doesn't
>> need escaping in either TRE (which is what's used inside exportPattern)
>> or PCRE. In PRCE, this regular expression would have worked as intended:
>>
>> # We do match backslashes by mistake.
>> grepl('[\\.]', '\\')
>> # [1] TRUE
>>
>> # In PCRE, this wouldn't have been a mistake.
>> grepl('[\\.]', c('\\', '.'), perl = TRUE)
>> # [1] FALSE TRUE
>>
> 
> Thanks, I didn't realize that escaping in PCRE was optional.
Escaping is optional only in brackets []. Without them it becomes 
mandatory if we want to catch just "." not any character :

grepl('.', c('\\', '.'), perl = TRUE)
#[1] TRUE TRUE

Best,
Serguei.


> 
> So the default exportPattern line could be
> 
>  ? exportPattern("^[^.]")
> 
> and it would work even if things were changed so that PCRE was used 
> instead of TRE.
> 
> Duncan Murdoch
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From vo|ody@ @end|ng |rom m|nd@pr|ng@com  Thu Mar  7 15:38:18 2024
From: vo|ody@ @end|ng |rom m|nd@pr|ng@com (Vladimir Dergachev)
Date: Thu, 7 Mar 2024 09:38:18 -0500 (EST)
Subject: [R-pkg-devel] 
 RFC: C backtraces for R CMD check via just-in-time debugging
In-Reply-To: <20240307123042.338b426c@arachnoid>
References: <20240303111444.6582a6c3@Tarkus>
 <20240304141508.59f3fea9@rolf-Latitude-E7470>
 <CAJXgQP2Q8mBaEvmXZh8tA5cO-8gfdn8=xCT0eXww=MJPXNPe9A@mail.gmail.com>
 <20240304102742.34af66ac@Tarkus>
 <alpine.DEB.2.22.394.2403051825150.3559@iridium>
 <20240307123042.338b426c@arachnoid>
Message-ID: <alpine.DEB.2.22.394.2403070925030.3559@iridium>


Hi Ivan,

Here is the piece of code I currently use:

void backtrace_dump(void)
{
     unw_cursor_t    cursor;
     unw_context_t   context;

     unw_getcontext(&context);
     unw_init_local(&cursor, &context);

     while (unw_step(&cursor) > 0)
     {
         unw_word_t  offset, pc;
         char        fname[64];

         unw_get_reg(&cursor, UNW_REG_IP, &pc);

         fname[0] = '\0';
         (void) unw_get_proc_name(&cursor, fname, 64, &offset);

         fprintf(stderr, "0x%016lx : (%s+0x%lx)\n", pc-(long)backtrace_dump, fname, offset);
     }
}

To make it safe, one can simply replace fprintf() with a function that 
stores information into a buffer.

Several things to point out:

   * printing pc-(long)backtrace_dump works around address randomization, 
so that if you attach the debugger you can find the location again by 
using backtrace_dump+0xxxx (it does not have to be backtrace_dump, any 
symbol will do)

   * this works even if the symbols are stripped, in which case it finds an 
offset relative to the nearest available symbol - there are always some 
from the loader. Of course, in this case you should use the offsets and 
the debugger to find out whats wrong

   * you can call backtrace_dump() from anywhere, does not have to be a 
signal handler. I've taken to calling it when my programs detect some 
abnormal situation, so I can see the call chain.

   * this should work as a package, but I am not sure whether the offsets 
between package symbols and R symbols would be static or not. For R it 
might be a good idea to also print a table of offsets between some R 
symbol and all the loaded C packages R_init_RMVL(), at least initially.

   * R ought to know where packages are loaded, we might want to be clever 
and print out information on which package contains which function, or 
there might be identical R_init_RMVL() printouts.

best

Vladimir Dergachev

On Thu, 7 Mar 2024, Ivan Krylov wrote:

> On Tue, 5 Mar 2024 18:26:28 -0500 (EST)
> Vladimir Dergachev <volodya at mindspring.com> wrote:
>
>> I use libunwind in my programs, works quite well, and simple to use.
>>
>> Happy to share the code if there is interest..
>
> Do you mean that you use libunwind in signal handlers? An example on
> how to produce a backtrace without calling any async-signal-unsafe
> functions would indeed be greatly useful.
>
> Speaking of shared objects injected using LD_PRELOAD, I've experimented
> some more, and I think that none of them would work with R without
> additional adjustments. They install their signal handler very soon
> after the process starts up, and later, when R initialises, it
> installs its own signal handler, overwriting the previous one. For this
> scheme to work, either R would have to cooperate, remembering a pointer
> to the previous signal handler and calling it at some point (which
> sounds unsafe), or the injected shared object would have to override
> sigaction() and call R's signal handler from its own (which sounds
> extremely unsafe).
>
> Without that, if we want C-level backtraces, we either need to patch R
> to produce them (using backtrace() and limiting this to glibc systems
> or using libunwind and paying the dependency cost) or to use a debugger.
>
> -- 
> Best regards,
> Ivan
>


From h@w|ckh@m @end|ng |rom gm@||@com  Thu Mar  7 16:02:15 2024
From: h@w|ckh@m @end|ng |rom gm@||@com (Hadley Wickham)
Date: Thu, 7 Mar 2024 10:02:15 -0500
Subject: [R-pkg-devel] @doctype is deprecated. need help for r package
 documentation
In-Reply-To: <1967f4ed50ab46de84fd614de15e4bc0@tiho-hannover.de>
References: <1967f4ed50ab46de84fd614de15e4bc0@tiho-hannover.de>
Message-ID: <CABdHhvHZrSNMv9Me5owag45BRTberboOQzLzhYWc+vELhnRFzw@mail.gmail.com>

Do you have a pointer to the roxygen2 comments that you're using?
Hadley

On Thu, Mar 7, 2024 at 5:38?AM Ruff, Sergej <Sergej.Ruff at tiho-hannover.de>
wrote:

> Hello,
>
> I need help with a package I am currently developing called bootGSEA.
>  I noticed that when I try ??bootGSEA? it goes to the help page in R
> itself but not to the html page (we had this issue last time as well but we
> solved it by adding a documentation to the package itself to the R file)
> like from the before version of the package.
> I tried ?_PACKAGE? in the documentation of the package section as @doctype
> is depreceated, but it still doesn?t seem to solve the issue. Do you have
> any idea on this?
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


-- 
http://hadley.nz

	[[alternative HTML version deleted]]


From Sergej@Ru|| @end|ng |rom t|ho-h@nnover@de  Thu Mar  7 17:56:20 2024
From: Sergej@Ru|| @end|ng |rom t|ho-h@nnover@de (Ruff, Sergej)
Date: Thu, 7 Mar 2024 16:56:20 +0000
Subject: [R-pkg-devel] 
 [EXTERN] Re: @doctype is deprecated. need help for r
 package documentation
In-Reply-To: <CABdHhvHZrSNMv9Me5owag45BRTberboOQzLzhYWc+vELhnRFzw@mail.gmail.com>
References: <1967f4ed50ab46de84fd614de15e4bc0@tiho-hannover.de>,
 <CABdHhvHZrSNMv9Me5owag45BRTberboOQzLzhYWc+vELhnRFzw@mail.gmail.com>
Message-ID: <f40ffe2a3cbd40e8a14268c55d306ebc@tiho-hannover.de>

the package is currently available under: https://github.com/klausjung-hannover/bootGSEA/blob/main/R/bootGSEA.r


line 1-31 contains the package information.


#' Package contains functions that repeates GSEA using bootstrap samples of gene sets. Bootstrap results are
#' aggregated to a new ranking score. The score can be compared to the gene set
#' ranking resulting from the standard GSEA.
#'
#' So far the functions included in the package are:
#' \itemize{
#'   \item \code{\link{aggr.boot.GO}} Aggregate boostrap GO analysis
#'   \item \code{\link{aggr.boot.Pathway}} Write a \code{genind} Aggregate boostrap pathway analysis
#'   \item \code{\link{aggr.multiomics}} Multiomics Integration analysis
#'   \item \code{\link{boot.GO}} Bootstrap GO analysis
#'   \item \code{\link{boot.pathway}} Bootstrap Pathway analysis
#'   \item \code{\link{compareRank}} Visualisation of bootstrap GO analyses
#'   \item \code{\link{histDiff}} Visualization of difference in ranks
#'   \item \code{\link{plotRank}} Visualisation of bootstrap pathway analyses
#' }
#'
#' \tabular{ll}{
#' Package: \tab bootGSEA\cr
#' Type: \tab Package\cr
#' Version: \tab 1.0\cr
#' Date: \tab 2024-03-05\cr
#' License: \tab GPL (>= 3)\cr
#' }
#'
#' @author Shamini Hemandhar Kumar, Klaus Jung (\email{shamini.hemandhar.kumar@@tiho-hannover.de})(\email{klaus.jung@@tiho-hannover.de})
#'
#' Maintainer: Shamini Hemandhar Kumar (\email{shamini.hemandhar.kumar@@tiho-hannover.de})
#' @aliases bootGSEA
#' @title Robustness evaluation of gene set enrichment analysis (GSEA)
#' @keywords Robustness GSEA
"_PACKAGE"


________________________________
Von: Hadley Wickham <h.wickham at gmail.com>
Gesendet: Donnerstag, 7. M?rz 2024 16:02:15
An: Ruff, Sergej
Cc: r-package-devel at r-project.org
Betreff: [EXTERN] Re: [R-pkg-devel] @doctype is deprecated. need help for r package documentation

Do you have a pointer to the roxygen2 comments that you're using?
Hadley

On Thu, Mar 7, 2024 at 5:38?AM Ruff, Sergej <Sergej.Ruff at tiho-hannover.de<mailto:Sergej.Ruff at tiho-hannover.de>> wrote:
Hello,

I need help with a package I am currently developing called bootGSEA.
 I noticed that when I try ??bootGSEA? it goes to the help page in R itself but not to the html page (we had this issue last time as well but we solved it by adding a documentation to the package itself to the R file) like from the before version of the package.
I tried ?_PACKAGE? in the documentation of the package section as @doctype is depreceated, but it still doesn?t seem to solve the issue. Do you have any idea on this?


        [[alternative HTML version deleted]]

______________________________________________
R-package-devel at r-project.org<mailto:R-package-devel at r-project.org> mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel


--
http://hadley.nz

	[[alternative HTML version deleted]]


From Sergej@Ru|| @end|ng |rom t|ho-h@nnover@de  Thu Mar  7 20:21:06 2024
From: Sergej@Ru|| @end|ng |rom t|ho-h@nnover@de (Ruff, Sergej)
Date: Thu, 7 Mar 2024 19:21:06 +0000
Subject: [R-pkg-devel] 
 [EXTERN] Re: @doctype is deprecated. need help for r
 package documentation
In-Reply-To: <f40ffe2a3cbd40e8a14268c55d306ebc@tiho-hannover.de>
References: <1967f4ed50ab46de84fd614de15e4bc0@tiho-hannover.de>,
 <CABdHhvHZrSNMv9Me5owag45BRTberboOQzLzhYWc+vELhnRFzw@mail.gmail.com>,
 <f40ffe2a3cbd40e8a14268c55d306ebc@tiho-hannover.de>
Message-ID: <3fdf55261a96402f896e1733cf99a628@tiho-hannover.de>

So, in  the previous version of the package when we type ?bootGSEA, it opens the documentation in webpage (google, firefox?) and when we type ?pkg-function opens to the right side window, but now it just opens in the right side window. I was wondering why does it not open in webpage now.

________________________________
Von: Ruff, Sergej
Gesendet: Donnerstag, 7. M?rz 2024 17:56:20
An: Hadley Wickham
Cc: r-package-devel at r-project.org
Betreff: AW: [EXTERN] Re: [R-pkg-devel] @doctype is deprecated. need help for r package documentation


the package is currently available under: https://github.com/klausjung-hannover/bootGSEA/blob/main/R/bootGSEA.r


line 1-31 contains the package information.


#' Package contains functions that repeates GSEA using bootstrap samples of gene sets. Bootstrap results are
#' aggregated to a new ranking score. The score can be compared to the gene set
#' ranking resulting from the standard GSEA.
#'
#' So far the functions included in the package are:
#' \itemize{
#'   \item \code{\link{aggr.boot.GO}} Aggregate boostrap GO analysis
#'   \item \code{\link{aggr.boot.Pathway}} Write a \code{genind} Aggregate boostrap pathway analysis
#'   \item \code{\link{aggr.multiomics}} Multiomics Integration analysis
#'   \item \code{\link{boot.GO}} Bootstrap GO analysis
#'   \item \code{\link{boot.pathway}} Bootstrap Pathway analysis
#'   \item \code{\link{compareRank}} Visualisation of bootstrap GO analyses
#'   \item \code{\link{histDiff}} Visualization of difference in ranks
#'   \item \code{\link{plotRank}} Visualisation of bootstrap pathway analyses
#' }
#'
#' \tabular{ll}{
#' Package: \tab bootGSEA\cr
#' Type: \tab Package\cr
#' Version: \tab 1.0\cr
#' Date: \tab 2024-03-05\cr
#' License: \tab GPL (>= 3)\cr
#' }
#'
#' @author Shamini Hemandhar Kumar, Klaus Jung (\email{shamini.hemandhar.kumar@@tiho-hannover.de})(\email{klaus.jung@@tiho-hannover.de})
#'
#' Maintainer: Shamini Hemandhar Kumar (\email{shamini.hemandhar.kumar@@tiho-hannover.de})
#' @aliases bootGSEA
#' @title Robustness evaluation of gene set enrichment analysis (GSEA)
#' @keywords Robustness GSEA
"_PACKAGE"


________________________________
Von: Hadley Wickham <h.wickham at gmail.com>
Gesendet: Donnerstag, 7. M?rz 2024 16:02:15
An: Ruff, Sergej
Cc: r-package-devel at r-project.org
Betreff: [EXTERN] Re: [R-pkg-devel] @doctype is deprecated. need help for r package documentation

Do you have a pointer to the roxygen2 comments that you're using?
Hadley

On Thu, Mar 7, 2024 at 5:38?AM Ruff, Sergej <Sergej.Ruff at tiho-hannover.de<mailto:Sergej.Ruff at tiho-hannover.de>> wrote:
Hello,

I need help with a package I am currently developing called bootGSEA.
 I noticed that when I try ??bootGSEA? it goes to the help page in R itself but not to the html page (we had this issue last time as well but we solved it by adding a documentation to the package itself to the R file) like from the before version of the package.
I tried ?_PACKAGE? in the documentation of the package section as @doctype is depreceated, but it still doesn?t seem to solve the issue. Do you have any idea on this?


        [[alternative HTML version deleted]]

______________________________________________
R-package-devel at r-project.org<mailto:R-package-devel at r-project.org> mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel


--
http://hadley.nz

	[[alternative HTML version deleted]]


From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Thu Mar  7 20:57:58 2024
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Thu, 07 Mar 2024 11:57:58 -0800
Subject: [R-pkg-devel] 
 [EXTERN] Re: @doctype is deprecated. need help for r
 package documentation
In-Reply-To: <3fdf55261a96402f896e1733cf99a628@tiho-hannover.de>
References: <1967f4ed50ab46de84fd614de15e4bc0@tiho-hannover.de>,
 <CABdHhvHZrSNMv9Me5owag45BRTberboOQzLzhYWc+vELhnRFzw@mail.gmail.com>,
 <f40ffe2a3cbd40e8a14268c55d306ebc@tiho-hannover.de>
 <3fdf55261a96402f896e1733cf99a628@tiho-hannover.de>
Message-ID: <8D1F6A23-439A-4078-BE45-AB9BF7345C21@dcn.davis.ca.us>

What is a "right side window"? Are you mixing up what R does and what RStudio does? I think I agree with Ivan that this is a question about the environment in which you are loading the package rather than anything in the package itself.

On March 7, 2024 11:21:06 AM PST, "Ruff, Sergej" <Sergej.Ruff at tiho-hannover.de> wrote:
>So, in  the previous version of the package when we type ?bootGSEA, it opens the documentation in webpage (google, firefox?) and when we type ?pkg-function opens to the right side window, but now it just opens in the right side window. I was wondering why does it not open in webpage now.
>
>________________________________
>Von: Ruff, Sergej
>Gesendet: Donnerstag, 7. M?rz 2024 17:56:20
>An: Hadley Wickham
>Cc: r-package-devel at r-project.org
>Betreff: AW: [EXTERN] Re: [R-pkg-devel] @doctype is deprecated. need help for r package documentation
>
>
>the package is currently available under: https://github.com/klausjung-hannover/bootGSEA/blob/main/R/bootGSEA.r
>
>
>line 1-31 contains the package information.
>
>
>#' Package contains functions that repeates GSEA using bootstrap samples of gene sets. Bootstrap results are
>#' aggregated to a new ranking score. The score can be compared to the gene set
>#' ranking resulting from the standard GSEA.
>#'
>#' So far the functions included in the package are:
>#' \itemize{
>#'   \item \code{\link{aggr.boot.GO}} Aggregate boostrap GO analysis
>#'   \item \code{\link{aggr.boot.Pathway}} Write a \code{genind} Aggregate boostrap pathway analysis
>#'   \item \code{\link{aggr.multiomics}} Multiomics Integration analysis
>#'   \item \code{\link{boot.GO}} Bootstrap GO analysis
>#'   \item \code{\link{boot.pathway}} Bootstrap Pathway analysis
>#'   \item \code{\link{compareRank}} Visualisation of bootstrap GO analyses
>#'   \item \code{\link{histDiff}} Visualization of difference in ranks
>#'   \item \code{\link{plotRank}} Visualisation of bootstrap pathway analyses
>#' }
>#'
>#' \tabular{ll}{
>#' Package: \tab bootGSEA\cr
>#' Type: \tab Package\cr
>#' Version: \tab 1.0\cr
>#' Date: \tab 2024-03-05\cr
>#' License: \tab GPL (>= 3)\cr
>#' }
>#'
>#' @author Shamini Hemandhar Kumar, Klaus Jung (\email{shamini.hemandhar.kumar@@tiho-hannover.de})(\email{klaus.jung@@tiho-hannover.de})
>#'
>#' Maintainer: Shamini Hemandhar Kumar (\email{shamini.hemandhar.kumar@@tiho-hannover.de})
>#' @aliases bootGSEA
>#' @title Robustness evaluation of gene set enrichment analysis (GSEA)
>#' @keywords Robustness GSEA
>"_PACKAGE"
>
>
>________________________________
>Von: Hadley Wickham <h.wickham at gmail.com>
>Gesendet: Donnerstag, 7. M?rz 2024 16:02:15
>An: Ruff, Sergej
>Cc: r-package-devel at r-project.org
>Betreff: [EXTERN] Re: [R-pkg-devel] @doctype is deprecated. need help for r package documentation
>
>Do you have a pointer to the roxygen2 comments that you're using?
>Hadley
>
>On Thu, Mar 7, 2024 at 5:38?AM Ruff, Sergej <Sergej.Ruff at tiho-hannover.de<mailto:Sergej.Ruff at tiho-hannover.de>> wrote:
>Hello,
>
>I need help with a package I am currently developing called bootGSEA.
> I noticed that when I try ??bootGSEA? it goes to the help page in R itself but not to the html page (we had this issue last time as well but we solved it by adding a documentation to the package itself to the R file) like from the before version of the package.
>I tried ?_PACKAGE? in the documentation of the package section as @doctype is depreceated, but it still doesn?t seem to solve the issue. Do you have any idea on this?
>
>
>        [[alternative HTML version deleted]]
>
>______________________________________________
>R-package-devel at r-project.org<mailto:R-package-devel at r-project.org> mailing list
>https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>
>--
>http://hadley.nz
>
>	[[alternative HTML version deleted]]
>
>______________________________________________
>R-package-devel at r-project.org mailing list
>https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
Sent from my phone. Please excuse my brevity.


From Sergej@Ru|| @end|ng |rom t|ho-h@nnover@de  Thu Mar  7 21:27:29 2024
From: Sergej@Ru|| @end|ng |rom t|ho-h@nnover@de (Ruff, Sergej)
Date: Thu, 7 Mar 2024 20:27:29 +0000
Subject: [R-pkg-devel] [EXTERN] Re: [EXTERN] Re: @doctype is deprecated.
 need help for r package documentation
In-Reply-To: <8D1F6A23-439A-4078-BE45-AB9BF7345C21@dcn.davis.ca.us>
References: <1967f4ed50ab46de84fd614de15e4bc0@tiho-hannover.de>,
 <CABdHhvHZrSNMv9Me5owag45BRTberboOQzLzhYWc+vELhnRFzw@mail.gmail.com>,
 <f40ffe2a3cbd40e8a14268c55d306ebc@tiho-hannover.de>
 <3fdf55261a96402f896e1733cf99a628@tiho-hannover.de>,
 <8D1F6A23-439A-4078-BE45-AB9BF7345C21@dcn.davis.ca.us>
Message-ID: <124b36813f614b9f86594e6960f006b3@tiho-hannover.de>

yes,


I am refering to Rstudio. I checked the settings and type is set to "htlm", not text. And I was wondering why the package documentation opened in a browser when I used @doctype. Maybe it has nothing to do with that but I can?t find the reason why it opened in the browser in the first place.

________________________________
Von: Jeff Newmiller <jdnewmil at dcn.davis.ca.us>
Gesendet: Donnerstag, 7. M?rz 2024 20:57:58
An: r-package-devel at r-project.org; Ruff, Sergej; Hadley Wickham
Cc: r-package-devel at r-project.org
Betreff: [EXTERN] Re: [R-pkg-devel] [EXTERN] Re: @doctype is deprecated. need help for r package documentation

What is a "right side window"? Are you mixing up what R does and what RStudio does? I think I agree with Ivan that this is a question about the environment in which you are loading the package rather than anything in the package itself.

On March 7, 2024 11:21:06 AM PST, "Ruff, Sergej" <Sergej.Ruff at tiho-hannover.de> wrote:
>So, in  the previous version of the package when we type ?bootGSEA, it opens the documentation in webpage (google, firefox?) and when we type ?pkg-function opens to the right side window, but now it just opens in the right side window. I was wondering why does it not open in webpage now.
>
>________________________________
>Von: Ruff, Sergej
>Gesendet: Donnerstag, 7. M?rz 2024 17:56:20
>An: Hadley Wickham
>Cc: r-package-devel at r-project.org
>Betreff: AW: [EXTERN] Re: [R-pkg-devel] @doctype is deprecated. need help for r package documentation
>
>
>the package is currently available under: https://github.com/klausjung-hannover/bootGSEA/blob/main/R/bootGSEA.r
>
>
>line 1-31 contains the package information.
>
>
>#' Package contains functions that repeates GSEA using bootstrap samples of gene sets. Bootstrap results are
>#' aggregated to a new ranking score. The score can be compared to the gene set
>#' ranking resulting from the standard GSEA.
>#'
>#' So far the functions included in the package are:
>#' \itemize{
>#'   \item \code{\link{aggr.boot.GO}} Aggregate boostrap GO analysis
>#'   \item \code{\link{aggr.boot.Pathway}} Write a \code{genind} Aggregate boostrap pathway analysis
>#'   \item \code{\link{aggr.multiomics}} Multiomics Integration analysis
>#'   \item \code{\link{boot.GO}} Bootstrap GO analysis
>#'   \item \code{\link{boot.pathway}} Bootstrap Pathway analysis
>#'   \item \code{\link{compareRank}} Visualisation of bootstrap GO analyses
>#'   \item \code{\link{histDiff}} Visualization of difference in ranks
>#'   \item \code{\link{plotRank}} Visualisation of bootstrap pathway analyses
>#' }
>#'
>#' \tabular{ll}{
>#' Package: \tab bootGSEA\cr
>#' Type: \tab Package\cr
>#' Version: \tab 1.0\cr
>#' Date: \tab 2024-03-05\cr
>#' License: \tab GPL (>= 3)\cr
>#' }
>#'
>#' @author Shamini Hemandhar Kumar, Klaus Jung (\email{shamini.hemandhar.kumar@@tiho-hannover.de})(\email{klaus.jung@@tiho-hannover.de})
>#'
>#' Maintainer: Shamini Hemandhar Kumar (\email{shamini.hemandhar.kumar@@tiho-hannover.de})
>#' @aliases bootGSEA
>#' @title Robustness evaluation of gene set enrichment analysis (GSEA)
>#' @keywords Robustness GSEA
>"_PACKAGE"
>
>
>________________________________
>Von: Hadley Wickham <h.wickham at gmail.com>
>Gesendet: Donnerstag, 7. M?rz 2024 16:02:15
>An: Ruff, Sergej
>Cc: r-package-devel at r-project.org
>Betreff: [EXTERN] Re: [R-pkg-devel] @doctype is deprecated. need help for r package documentation
>
>Do you have a pointer to the roxygen2 comments that you're using?
>Hadley
>
>On Thu, Mar 7, 2024 at 5:38?AM Ruff, Sergej <Sergej.Ruff at tiho-hannover.de<mailto:Sergej.Ruff at tiho-hannover.de>> wrote:
>Hello,
>
>I need help with a package I am currently developing called bootGSEA.
> I noticed that when I try ??bootGSEA? it goes to the help page in R itself but not to the html page (we had this issue last time as well but we solved it by adding a documentation to the package itself to the R file) like from the before version of the package.
>I tried ?_PACKAGE? in the documentation of the package section as @doctype is depreceated, but it still doesn?t seem to solve the issue. Do you have any idea on this?
>
>
>        [[alternative HTML version deleted]]
>
>______________________________________________
>R-package-devel at r-project.org<mailto:R-package-devel at r-project.org> mailing list
>https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>
>--
>http://hadley.nz
>
>       [[alternative HTML version deleted]]
>
>______________________________________________
>R-package-devel at r-project.org mailing list
>https://stat.ethz.ch/mailman/listinfo/r-package-devel

--
Sent from my phone. Please excuse my brevity.

	[[alternative HTML version deleted]]


From |kry|ov @end|ng |rom d|@root@org  Fri Mar  8 08:36:43 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Fri, 8 Mar 2024 10:36:43 +0300
Subject: [R-pkg-devel] [EXTERN] Re: [EXTERN] Re: @doctype is deprecated.
 need help for r package documentation
In-Reply-To: <124b36813f614b9f86594e6960f006b3@tiho-hannover.de>
References: <1967f4ed50ab46de84fd614de15e4bc0@tiho-hannover.de>
 <CABdHhvHZrSNMv9Me5owag45BRTberboOQzLzhYWc+vELhnRFzw@mail.gmail.com>
 <f40ffe2a3cbd40e8a14268c55d306ebc@tiho-hannover.de>
 <3fdf55261a96402f896e1733cf99a628@tiho-hannover.de>
 <8D1F6A23-439A-4078-BE45-AB9BF7345C21@dcn.davis.ca.us>
 <124b36813f614b9f86594e6960f006b3@tiho-hannover.de>
Message-ID: <20240308103643.0dd72603@Tarkus>

? Thu, 7 Mar 2024 20:27:29 +0000
"Ruff, Sergej" <Sergej.Ruff at tiho-hannover.de> ?????:

> I am refering to Rstudio. I checked the settings and type is set to
> "htlm", not text. And I was wondering why the package documentation
> opened in a browser when I used @doctype.

Do you still have the source package .tar.gz file for which ?bootGSEA
would start a browser from inside RStudio?

-- 
Best regards,
Ivan


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Fri Mar  8 08:52:52 2024
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Fri, 8 Mar 2024 08:52:52 +0100
Subject: [R-pkg-devel] 
 [External] [External] RcmdrPlugin.HH_1.1-48.tar.gz
In-Reply-To: <0cb6fb85-a69a-4e92-8e91-5886a1199223@gmail.com>
References: <D8090F24-6B4A-4E38-91FA-7D61E19EA87B@temple.edu>
 <20240306093812.14bc68d7@Tarkus>
 <F68DC1C6-597C-4647-AC96-84373F392EC3@temple.edu>
 <CAPPM_gTCgr4BRRwk7qoseGSjX966O71hX2nWBDJ6mfy8RMKAAg@mail.gmail.com>
 <B48ACA95-8F2A-4508-A5CB-E3E0CB162CD8@temple.edu>
 <26088.44848.383114.571551@stat.math.ethz.ch>
 <d01e3364-07d5-4a12-855d-bc608402f29b@gmail.com>
 <20240307121659.5969d579@arachnoid>
 <0cb6fb85-a69a-4e92-8e91-5886a1199223@gmail.com>
Message-ID: <26090.50132.196454.619873@stat.math.ethz.ch>

>>>>> Duncan Murdoch 
>>>>>     on Thu, 7 Mar 2024 05:08:40 -0500 writes:

    > On 07/03/2024 4:16 a.m., Ivan Krylov wrote:
    >> On Wed, 6 Mar 2024 13:46:55 -0500 Duncan Murdoch
    >> <murdoch.duncan at gmail.com> wrote:
    >> 
    >>> is this just a more or less harmless error, thinking
    >>> that the dot needs escaping
    >> 
    >> I think it's this one. You are absolutely right that the
    >> dot doesn't need escaping in either TRE (which is what's
    >> used inside exportPattern) or PCRE. In PRCE, this regular
    >> expression would have worked as intended:
    >> 
    >> # We do match backslashes by mistake.  grepl('[\\.]',
    >> '\\') # [1] TRUE
    >> 
    >> # In PCRE, this wouldn't have been a mistake.
    >> grepl('[\\.]', c('\\', '.'), perl = TRUE) # [1] FALSE
    >> TRUE
    >> 

    > Thanks, I didn't realize that escaping in PCRE was
    > optional.

    > So the default exportPattern line could be

    >    exportPattern("^[^.]")

    > and it would work even if things were changed so that PCRE
    > was used instead of TRE.

    > Duncan Murdoch

Yes, thank you, Duncan!
.. I had started changing to this much easier pattern already
before reading on ...  -->  in R-devel; now also with "doc"s (NEWS.Rd, R-exts.texi)

Martin


From bbo|ker @end|ng |rom gm@||@com  Sun Mar 10 18:55:43 2024
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Sun, 10 Mar 2024 13:55:43 -0400
Subject: [R-pkg-devel] confusion over spellchecking
Message-ID: <094f7c79-0f74-4abc-a476-fe597f937802@gmail.com>


   I am working on a package and can't seem to get rid of a NOTE about

Possibly misspelled words in DESCRIPTION:
   glmmTMB (10:88)
   lme (10:82)

on win-builder.

I have set export _R_CHECK_CRAN_INCOMING_USE_ASPELL_=TRUE locally, and 
have tried to set up the .aspell defaults as specified by Dirk 
Eddelbuettel in  his 2017 blog post 
<http://dirk.eddelbuettel.com/blog/2017/08/10/#008_aspell_cran_incoming>

   I get no spelling NOTEs locally or on GH actions.

  The aspell machinery is here:

https://github.com/bbolker/reformulas/tree/main/.aspell

Following Dirk's blog post, here's what's in those files:

$ cat defaults.R
Rd_files <- vignettes <- R_files <- description <-
     list(encoding = "UTF-8",
          language = "en",
          dictionaries = c("en_stats", "reformulas"))

$ r -p -e 'readRDS("reformulas.rds")'
[1] "glmmTMB" "lme"


   In the end I think I'm going to suck it up and put those words in 
quotation marks in the definition, but it feels like I *should* be able 
to have them ignored?

   I have three questions:

  (1) am I missing something in how this should be set up?
  (2) is any of this machinery documented anywhere official? (I couldn't 
find the string "spell" anywhere in _Writing R Extensions_ or the CRAN 
repository policy
  (3) If the answer to #2 is 'no', could/should it be?


From murr@y@e||ord @end|ng |rom ot@go@@c@nz  Sun Mar 10 19:53:57 2024
From: murr@y@e||ord @end|ng |rom ot@go@@c@nz (Murray Efford)
Date: Sun, 10 Mar 2024 18:53:57 +0000
Subject: [R-pkg-devel] Additional issues: Intel segfault
In-Reply-To: <20240302104537.3eebf43c@Tarkus>
References: <20240301114628.09b38b0f@Tarkus>
 <SY4PR01MB5658703BAD0C1D9D63425022AC5D2@SY4PR01MB5658.ausprd01.prod.outlook.com>
 <20240302104537.3eebf43c@Tarkus>
Message-ID: <SY4PR01MB5658D766AB028E715647100FAC252@SY4PR01MB5658.ausprd01.prod.outlook.com>

For the record - the original 'Additional issue' (Intel segfault on exit) has spontaneously disappeared, for both packages secrdesign and ipsecr (I also found the error in some other packages that used RcppArmadillo, but haven't rechecked them).
________________________________
From: Ivan Krylov <ikrylov at disroot.org>
Sent: Saturday, 2 March 2024 20:45
To: Murray Efford <murray.efford at otago.ac.nz>
Cc: R-package-devel at r-project.org <r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] Additional issues: Intel segfault

? Sat, 2 Mar 2024 02:07:47 +0000
Murray Efford <murray.efford at otago.ac.nz> ?????:

> Gabor suggested https://apc01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fr-hub%2Frhub2&data=05%7C02%7Cmurray.efford%40otago.ac.nz%7Cf74f0a4e96b14115b95a08dc3a8cc260%7C0225efc578fe4928b1579ef24809e9ba%7C0%7C0%7C638449623464096131%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7C%7C&sdata=WBz4HzJ%2FKlAKdRimgsiHPx3bIoB2Nvl%2FUQRdh6Ldv%2Fs%3D&reserved=0<https://github.com/r-hub/rhub2> and that worked like a
> charm. A check there on the Intel platform found no errors in my
> present version of secrdesign, so I'll resubmit with confidence.

Thank you for letting me know! Having this as a container simplifies a
lot of things.

--
Best regards,
Ivan

	[[alternative HTML version deleted]]


From d|ego@hern@ngomezherrero @end|ng |rom gm@||@com  Mon Mar 11 09:25:45 2024
From: d|ego@hern@ngomezherrero @end|ng |rom gm@||@com (=?UTF-8?Q?Diego_Hernang=C3=B3mez_Herrero?=)
Date: Mon, 11 Mar 2024 09:25:45 +0100
Subject: [R-pkg-devel] confusion over spellchecking
In-Reply-To: <094f7c79-0f74-4abc-a476-fe597f937802@gmail.com>
References: <094f7c79-0f74-4abc-a476-fe597f937802@gmail.com>
Message-ID: <CAA-ibaxuqiR4P04h_KZG7trNqCg4LxHR_ZAxnhwQu3KPEA7bPQ@mail.gmail.com>

As per 'The DESCRIPTION file'[1]:


As with the ?Title? field, double quotes should be used for quotations
(including titles of books and articles), and single quotes for non-English
usage, including names of other packages and external software.


Enclose that words in single quote, it should work.

[1] Writing R Extensions
https://cran.r-project.org/doc/manuals/R-exts.html#The-DESCRIPTION-file

Have a nice day!


El El dom, 10 mar 2024 a las 18:56, Ben Bolker <bbolker at gmail.com> escribi?:

>
>    I am working on a package and can't seem to get rid of a NOTE about
>
> Possibly misspelled words in DESCRIPTION:
>    glmmTMB (10:88)
>    lme (10:82)
>
> on win-builder.
>
> I have set export _R_CHECK_CRAN_INCOMING_USE_ASPELL_=TRUE locally, and
> have tried to set up the .aspell defaults as specified by Dirk
> Eddelbuettel in  his 2017 blog post
> <http://dirk.eddelbuettel.com/blog/2017/08/10/#008_aspell_cran_incoming>
>
>    I get no spelling NOTEs locally or on GH actions.
>
>   The aspell machinery is here:
>
> https://github.com/bbolker/reformulas/tree/main/.aspell
>
> Following Dirk's blog post, here's what's in those files:
>
> $ cat defaults.R
> Rd_files <- vignettes <- R_files <- description <-
>      list(encoding = "UTF-8",
>           language = "en",
>           dictionaries = c("en_stats", "reformulas"))
>
> $ r -p -e 'readRDS("reformulas.rds")'
> [1] "glmmTMB" "lme"
>
>
>    In the end I think I'm going to suck it up and put those words in
> quotation marks in the definition, but it feels like I *should* be able
> to have them ignored?
>
>    I have three questions:
>
>   (1) am I missing something in how this should be set up?
>   (2) is any of this machinery documented anywhere official? (I couldn't
> find the string "spell" anywhere in _Writing R Extensions_ or the CRAN
> repository policy
>   (3) If the answer to #2 is 'no', could/should it be?
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From Sergej@Ru|| @end|ng |rom t|ho-h@nnover@de  Mon Mar 11 15:57:58 2024
From: Sergej@Ru|| @end|ng |rom t|ho-h@nnover@de (Ruff, Sergej)
Date: Mon, 11 Mar 2024 14:57:58 +0000
Subject: [R-pkg-devel] 
 [EXTERN] Re: [EXTERN] Re: [EXTERN] Re: @doctype is
 deprecated. need help for r package documentation
In-Reply-To: <20240308103643.0dd72603@Tarkus>
References: <1967f4ed50ab46de84fd614de15e4bc0@tiho-hannover.de>
 <CABdHhvHZrSNMv9Me5owag45BRTberboOQzLzhYWc+vELhnRFzw@mail.gmail.com>
 <f40ffe2a3cbd40e8a14268c55d306ebc@tiho-hannover.de>
 <3fdf55261a96402f896e1733cf99a628@tiho-hannover.de>
 <8D1F6A23-439A-4078-BE45-AB9BF7345C21@dcn.davis.ca.us>
 <124b36813f614b9f86594e6960f006b3@tiho-hannover.de>,
 <20240308103643.0dd72603@Tarkus>
Message-ID: <fcaa3aa48a0d472ab2df8b32b1980a4c@tiho-hannover.de>

yes.


I apologize it took so long to reply.

I uploaded the old version of the package to my repo: https://github.com/SergejRuff/boot



________________________________
Von: Ivan Krylov <ikrylov at disroot.org>
Gesendet: Freitag, 8. M?rz 2024 08:36:43
An: Ruff, Sergej
Cc: r-package-devel at r-project.org
Betreff: [EXTERN] Re: [R-pkg-devel] [EXTERN] Re: [EXTERN] Re: @doctype is deprecated. need help for r package documentation

? Thu, 7 Mar 2024 20:27:29 +0000
"Ruff, Sergej" <Sergej.Ruff at tiho-hannover.de> ?????:

> I am refering to Rstudio. I checked the settings and type is set to
> "htlm", not text. And I was wondering why the package documentation
> opened in a browser when I used @doctype.

Do you still have the source package .tar.gz file for which ?bootGSEA
would start a browser from inside RStudio?

--
Best regards,
Ivan

	[[alternative HTML version deleted]]


From n@@|n@k|@m@c|ej @end|ng |rom gm@||@com  Mon Mar 11 17:09:27 2024
From: n@@|n@k|@m@c|ej @end|ng |rom gm@||@com (Maciej Nasinski)
Date: Mon, 11 Mar 2024 17:09:27 +0100
Subject: [R-pkg-devel] M1mac check logs
Message-ID: <CA+h+x0YeYH00+r7nfirzqmCPbRqKTOaZAXoAfxK-OVs+GPJGgA@mail.gmail.com>

Hey All,

I want to help fix the M1mac-related issue. The URL to issue is
https://www.stats.ox.ac.uk/pub/bdr/M1mac/teal.reporter.out
I am one of the coauthors of the teal reporter package.
The question is how I can access
?/Users/ripley/R/packages/tests-devel/teal.reporter.Rcheck/00install.out?
and ?/Users/ripley/R/packages/tests-devel/teal.reporter.Rcheck/00check.log?
log files.

I appreciate your help.

KR
Maciej Nasinski

	[[alternative HTML version deleted]]


From cr@n@r @end|ng |rom proton@me  Mon Mar 11 16:22:52 2024
From: cr@n@r @end|ng |rom proton@me (CRAN.r)
Date: Mon, 11 Mar 2024 15:22:52 +0000
Subject: [R-pkg-devel] R CHECK warning about new S3 generic/method
 consistency
Message-ID: <vh8JIGJjAnx3iogEj4YOawdfPEiMiPERYzcT-wMwTdjPELDSpPvU8poNFhq69bH1x7Ijnhj07rtShRqhNee5A8-xd-H2PzGTwI5pYBXqCQ4=@proton.me>

I'm trying to define a new generic, and keep getting an S3 generic/method consistency when running R CHECK. All of the code seems to be working, and I'm not getting any note, errors, or other warnings.

This minimal example shows the warning I'm getting. The functions are

  myscale <- function(x, y) UseMethod("myscale")
  myscale.default <- function(x) x

The usage section of the man file is

  \usage{
    myscale(x, y)
    \method{myscale}{default}(x)
  }

and the NAMESPACE file is

  export("myscale", "myscale.default")
  S3method(myscale, default)

When I build the package and run CHECK, I get

  * checking S3 generic/method consistency ... WARNING
  myscale:
    function(x, y)
  myscale.default:
    function(x)
  See section 'Generic functions and methods' in the 'Writing R
  Extensions' manual.

As I understand it, there shouldn't be a problem as long as the generic function contains all possible arguments of any method, and the methods have their arguments in the same order as the generic. It seems that having one method with only "x" shouldn't be a problem. I've read the section mentioned in the warning, but I can't figure out what's going on. Is any of this wrong?

Jay


From d|ego@hern@ngomezherrero @end|ng |rom gm@||@com  Mon Mar 11 18:43:45 2024
From: d|ego@hern@ngomezherrero @end|ng |rom gm@||@com (=?UTF-8?Q?Diego_Hernang=C3=B3mez_Herrero?=)
Date: Mon, 11 Mar 2024 18:43:45 +0100
Subject: [R-pkg-devel] R CHECK warning about new S3 generic/method
 consistency
In-Reply-To: <vh8JIGJjAnx3iogEj4YOawdfPEiMiPERYzcT-wMwTdjPELDSpPvU8poNFhq69bH1x7Ijnhj07rtShRqhNee5A8-xd-H2PzGTwI5pYBXqCQ4=@proton.me>
References: <vh8JIGJjAnx3iogEj4YOawdfPEiMiPERYzcT-wMwTdjPELDSpPvU8poNFhq69bH1x7Ijnhj07rtShRqhNee5A8-xd-H2PzGTwI5pYBXqCQ4=@proton.me>
Message-ID: <CAA-ibawsEPJMYUyEySn59eb6dquEnA4RVaHYNFM_oVMWswxQ1Q@mail.gmail.com>

Shouldn?t you include the y argument also in
myscale.default ? Your generic is defining that argument as well.



Have a nice day!


El El lun, 11 mar 2024 a las 18:25, CRAN.r <cran.r at proton.me> escribi?:

> I'm trying to define a new generic, and keep getting an S3 generic/method
> consistency when running R CHECK. All of the code seems to be working, and
> I'm not getting any note, errors, or other warnings.
>
> This minimal example shows the warning I'm getting. The functions are
>
>   myscale <- function(x, y) UseMethod("myscale")
>   myscale.default <- function(x) x
>
> The usage section of the man file is
>
>   \usage{
>     myscale(x, y)
>     \method{myscale}{default}(x)
>   }
>
> and the NAMESPACE file is
>
>   export("myscale", "myscale.default")
>   S3method(myscale, default)
>
> When I build the package and run CHECK, I get
>
>   * checking S3 generic/method consistency ... WARNING
>   myscale:
>     function(x, y)
>   myscale.default:
>     function(x)
>   See section 'Generic functions and methods' in the 'Writing R
>   Extensions' manual.
>
> As I understand it, there shouldn't be a problem as long as the generic
> function contains all possible arguments of any method, and the methods
> have their arguments in the same order as the generic. It seems that having
> one method with only "x" shouldn't be a problem. I've read the section
> mentioned in the warning, but I can't figure out what's going on. Is any of
> this wrong?
>
> Jay
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From cr@n@r @end|ng |rom proton@me  Mon Mar 11 19:13:28 2024
From: cr@n@r @end|ng |rom proton@me (CRAN.r)
Date: Mon, 11 Mar 2024 18:13:28 +0000
Subject: [R-pkg-devel] R CHECK warning about new S3 generic/method
 consistency
In-Reply-To: <CAA-ibawsEPJMYUyEySn59eb6dquEnA4RVaHYNFM_oVMWswxQ1Q@mail.gmail.com>
References: <vh8JIGJjAnx3iogEj4YOawdfPEiMiPERYzcT-wMwTdjPELDSpPvU8poNFhq69bH1x7Ijnhj07rtShRqhNee5A8-xd-H2PzGTwI5pYBXqCQ4=@proton.me>
 <CAA-ibawsEPJMYUyEySn59eb6dquEnA4RVaHYNFM_oVMWswxQ1Q@mail.gmail.com>
Message-ID: <hV4lx_U-zSXxiV1OTTm0J0FGohychf4_b0vU90KlE0JwYYiK2TZTya9uRLOdsfj9CUDjX4qYp7oF8Nbqwn62M-rFtWC23Ds_eVA_De_ls5g=@proton.me>

On Monday, March 11th, 2024 at 12:43 PM, Diego Hernang?mez Herrero <diego.hernangomezherrero at gmail.com> wrote:

> Shouldn?t you include the y argument also inmyscale.default ? Your generic is defining that argument as well.

I assume (hopefully correctly) that methods don't need to include all the arguments of the generic. I get the same warning if I use "..." instead of y, too.


From d|ego@hern@ngomezherrero @end|ng |rom gm@||@com  Mon Mar 11 19:20:22 2024
From: d|ego@hern@ngomezherrero @end|ng |rom gm@||@com (=?UTF-8?Q?Diego_Hernang=C3=B3mez_Herrero?=)
Date: Mon, 11 Mar 2024 19:20:22 +0100
Subject: [R-pkg-devel] R CHECK warning about new S3 generic/method
 consistency
In-Reply-To: <hV4lx_U-zSXxiV1OTTm0J0FGohychf4_b0vU90KlE0JwYYiK2TZTya9uRLOdsfj9CUDjX4qYp7oF8Nbqwn62M-rFtWC23Ds_eVA_De_ls5g=@proton.me>
References: <vh8JIGJjAnx3iogEj4YOawdfPEiMiPERYzcT-wMwTdjPELDSpPvU8poNFhq69bH1x7Ijnhj07rtShRqhNee5A8-xd-H2PzGTwI5pYBXqCQ4=@proton.me>
 <CAA-ibawsEPJMYUyEySn59eb6dquEnA4RVaHYNFM_oVMWswxQ1Q@mail.gmail.com>
 <hV4lx_U-zSXxiV1OTTm0J0FGohychf4_b0vU90KlE0JwYYiK2TZTya9uRLOdsfj9CUDjX4qYp7oF8Nbqwn62M-rFtWC23Ds_eVA_De_ls5g=@proton.me>
Message-ID: <CAA-ibax5UHAm1VSZyivucy8aX_0DPLkO2SC5_0DPNH3WqBuZ1A@mail.gmail.com>

Usually when I write a generic I use ? in the definition to allow using
additional arguments in specific methods, see

as_bibentry <- function(x, ...) { UseMethod("as_bibentry")
 }

as_bibentry.cff <- function(x, ..., what = c("preferred", "references",
"all")) {

<code>
}

but in any case the method must include at least the arguments defined in
the same order. Using ? in the generic allows me to include `what` arg with
no WARNINGs.




Have a nice day!


El El lun, 11 mar 2024 a las 19:13, CRAN.r <cran.r at proton.me> escribi?:

> On Monday, March 11th, 2024 at 12:43 PM, Diego Hernang?mez Herrero <
> diego.hernangomezherrero at gmail.com> wrote:
>
> > Shouldn?t you include the y argument also inmyscale.default ? Your
> generic is defining that argument as well.
>
> I assume (hopefully correctly) that methods don't need to include all the
> arguments of the generic. I get the same warning if I use "..." instead of
> y, too.
>

	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Mon Mar 11 19:28:20 2024
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Mon, 11 Mar 2024 14:28:20 -0400
Subject: [R-pkg-devel] R CHECK warning about new S3 generic/method
 consistency
In-Reply-To: <hV4lx_U-zSXxiV1OTTm0J0FGohychf4_b0vU90KlE0JwYYiK2TZTya9uRLOdsfj9CUDjX4qYp7oF8Nbqwn62M-rFtWC23Ds_eVA_De_ls5g=@proton.me>
References: <vh8JIGJjAnx3iogEj4YOawdfPEiMiPERYzcT-wMwTdjPELDSpPvU8poNFhq69bH1x7Ijnhj07rtShRqhNee5A8-xd-H2PzGTwI5pYBXqCQ4=@proton.me>
 <CAA-ibawsEPJMYUyEySn59eb6dquEnA4RVaHYNFM_oVMWswxQ1Q@mail.gmail.com>
 <hV4lx_U-zSXxiV1OTTm0J0FGohychf4_b0vU90KlE0JwYYiK2TZTya9uRLOdsfj9CUDjX4qYp7oF8Nbqwn62M-rFtWC23Ds_eVA_De_ls5g=@proton.me>
Message-ID: <e9003143-68d6-433e-a3d0-b04eeee61acb@gmail.com>

On 11/03/2024 2:13 p.m., CRAN.r wrote:
> On Monday, March 11th, 2024 at 12:43 PM, Diego Hernang?mez Herrero <diego.hernangomezherrero at gmail.com> wrote:
> 
>> Shouldn?t you include the y argument also inmyscale.default ? Your generic is defining that argument as well.
> 
> I assume (hopefully correctly) that methods don't need to include all the arguments of the generic. I get the same warning if I use "..." instead of y, too.

No, your assumption is backwards.  The methods do need to include all 
arguments of the generic.  As Writing R Extensions says near the start 
of section 7, "A method must have all the arguments of the generic, 
including ? if the generic does."

Think about your user.  They'll ask about help for `inmyscale`, and see 
that it has two arguments, x and y.  If x is a type that goes to 
`inmyscale.default`, the user would receive an error when they followed 
the docs and included the y value.

The usual way to handle this is to include both x and y in all methods, 
but document some of them to say that y is ignored.

Duncan Murdoch


From cr@n@r @end|ng |rom proton@me  Mon Mar 11 19:34:39 2024
From: cr@n@r @end|ng |rom proton@me (CRAN.r)
Date: Mon, 11 Mar 2024 18:34:39 +0000
Subject: [R-pkg-devel] R CHECK warning about new S3 generic/method
 consistency
In-Reply-To: <e9003143-68d6-433e-a3d0-b04eeee61acb@gmail.com>
References: <vh8JIGJjAnx3iogEj4YOawdfPEiMiPERYzcT-wMwTdjPELDSpPvU8poNFhq69bH1x7Ijnhj07rtShRqhNee5A8-xd-H2PzGTwI5pYBXqCQ4=@proton.me>
 <CAA-ibawsEPJMYUyEySn59eb6dquEnA4RVaHYNFM_oVMWswxQ1Q@mail.gmail.com>
 <hV4lx_U-zSXxiV1OTTm0J0FGohychf4_b0vU90KlE0JwYYiK2TZTya9uRLOdsfj9CUDjX4qYp7oF8Nbqwn62M-rFtWC23Ds_eVA_De_ls5g=@proton.me>
 <e9003143-68d6-433e-a3d0-b04eeee61acb@gmail.com>
Message-ID: <fVt-tX5u6EjRDSCP4AZv3yWNGgzporPZA1ycaDm-6cp2jAnaBFJjxIBPHKbI9P-wWaVnoeblmujmhjfhN1s8lC2IG5OwhjKH84h3ZvSE6kg=@proton.me>

> No, your assumption is backwards. The methods do need to include all
> arguments of the generic. As Writing R Extensions says near the start
> of section 7, "A method must have all the arguments of the generic,
> including ? if the generic does."

That's embarrassing. I was worried it was something simple I missed. Thanks for pointing that out!


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Mon Mar 11 20:42:11 2024
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Mon, 11 Mar 2024 20:42:11 +0100
Subject: [R-pkg-devel] R CHECK warning about new S3 generic/method
 consistency
In-Reply-To: <fVt-tX5u6EjRDSCP4AZv3yWNGgzporPZA1ycaDm-6cp2jAnaBFJjxIBPHKbI9P-wWaVnoeblmujmhjfhN1s8lC2IG5OwhjKH84h3ZvSE6kg=@proton.me>
References: <vh8JIGJjAnx3iogEj4YOawdfPEiMiPERYzcT-wMwTdjPELDSpPvU8poNFhq69bH1x7Ijnhj07rtShRqhNee5A8-xd-H2PzGTwI5pYBXqCQ4=@proton.me>
 <CAA-ibawsEPJMYUyEySn59eb6dquEnA4RVaHYNFM_oVMWswxQ1Q@mail.gmail.com>
 <hV4lx_U-zSXxiV1OTTm0J0FGohychf4_b0vU90KlE0JwYYiK2TZTya9uRLOdsfj9CUDjX4qYp7oF8Nbqwn62M-rFtWC23Ds_eVA_De_ls5g=@proton.me>
 <e9003143-68d6-433e-a3d0-b04eeee61acb@gmail.com>
 <fVt-tX5u6EjRDSCP4AZv3yWNGgzporPZA1ycaDm-6cp2jAnaBFJjxIBPHKbI9P-wWaVnoeblmujmhjfhN1s8lC2IG5OwhjKH84h3ZvSE6kg=@proton.me>
Message-ID: <68218f72-c9d1-4884-91e0-af076ee108c4@statistik.tu-dortmund.de>



On 11.03.2024 19:34, CRAN.r wrote:
>> No, your assumption is backwards. The methods do need to include all
>> arguments of the generic. As Writing R Extensions says near the start
>> of section 7, "A method must have all the arguments of the generic,
>> including ? if the generic does."
> 
> That's embarrassing. I was worried it was something simple I missed. Thanks for pointing that out!
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


Even more embarassing given you seem to be Mr CRAN given your mail 
message's "From" field ...

Uwe Ligges


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Mon Mar 11 20:49:51 2024
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Mon, 11 Mar 2024 20:49:51 +0100
Subject: [R-pkg-devel] M1mac check logs
In-Reply-To: <CA+h+x0YeYH00+r7nfirzqmCPbRqKTOaZAXoAfxK-OVs+GPJGgA@mail.gmail.com>
References: <CA+h+x0YeYH00+r7nfirzqmCPbRqKTOaZAXoAfxK-OVs+GPJGgA@mail.gmail.com>
Message-ID: <fcee5cd8-f437-4894-85c0-f7521fc722bc@statistik.tu-dortmund.de>

Unfortunately, due to a temporary bug in R-devel, the check result 
changed before you looked at it.
Now foxed and back to the older state where the check.log was sufficient 
to see the issue.

Best,
Uwe Ligges



On 11.03.2024 17:09, Maciej Nasinski wrote:
> Hey All,
> 
> I want to help fix the M1mac-related issue. The URL to issue is
> https://www.stats.ox.ac.uk/pub/bdr/M1mac/teal.reporter.out
> I am one of the coauthors of the teal reporter package.
> The question is how I can access
> ?/Users/ripley/R/packages/tests-devel/teal.reporter.Rcheck/00install.out?
> and ?/Users/ripley/R/packages/tests-devel/teal.reporter.Rcheck/00check.log?
> log files.
> 
> I appreciate your help.
> 
> KR
> Maciej Nasinski
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

From n@@|n@k|@m@c|ej @end|ng |rom gm@||@com  Mon Mar 11 21:04:32 2024
From: n@@|n@k|@m@c|ej @end|ng |rom gm@||@com (Maciej Nasinski)
Date: Mon, 11 Mar 2024 21:04:32 +0100
Subject: [R-pkg-devel] M1mac check logs
In-Reply-To: <fcee5cd8-f437-4894-85c0-f7521fc722bc@statistik.tu-dortmund.de>
References: <fcee5cd8-f437-4894-85c0-f7521fc722bc@statistik.tu-dortmund.de>
Message-ID: <C3C2C66F-2272-43C1-AEEC-885AC19D3275@gmail.com>

Thanks a lot for your response.
Yes, I see the check print is different and clear now.

KR
Maciej Nasinski

> On 11 Mar 2024, at 20:49, Uwe Ligges <ligges at statistik.tu-dortmund.de> wrote:
> 
> ?Unfortunately, due to a temporary bug in R-devel, the check result changed before you looked at it.
> Now foxed and back to the older state where the check.log was sufficient to see the issue.
> 
> Best,
> Uwe Ligges
> 
> 
> 
>> On 11.03.2024 17:09, Maciej Nasinski wrote:
>> Hey All,
>> I want to help fix the M1mac-related issue. The URL to issue is
>> https://www.stats.ox.ac.uk/pub/bdr/M1mac/teal.reporter.out
>> I am one of the coauthors of the teal reporter package.
>> The question is how I can access
>> ?/Users/ripley/R/packages/tests-devel/teal.reporter.Rcheck/00install.out?
>> and ?/Users/ripley/R/packages/tests-devel/teal.reporter.Rcheck/00check.log?
>> log files.
>> I appreciate your help.
>> KR
>> Maciej Nasinski
>>    [[alternative HTML version deleted]]
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From |kry|ov @end|ng |rom d|@root@org  Mon Mar 11 22:22:03 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Tue, 12 Mar 2024 00:22:03 +0300
Subject: [R-pkg-devel] 
 RFC: C backtraces for R CMD check via just-in-time debugging
In-Reply-To: <alpine.DEB.2.22.394.2403070925030.3559@iridium>
References: <20240303111444.6582a6c3@Tarkus>
 <20240304141508.59f3fea9@rolf-Latitude-E7470>
 <CAJXgQP2Q8mBaEvmXZh8tA5cO-8gfdn8=xCT0eXww=MJPXNPe9A@mail.gmail.com>
 <20240304102742.34af66ac@Tarkus>
 <alpine.DEB.2.22.394.2403051825150.3559@iridium>
 <20240307123042.338b426c@arachnoid>
 <alpine.DEB.2.22.394.2403070925030.3559@iridium>
Message-ID: <20240312002203.187747aa@Tarkus>

Vladimir,

Thank you for the example and for sharing the ideas regarding
symbol-relative offsets!

On Thu, 7 Mar 2024 09:38:18 -0500 (EST)
Vladimir Dergachev <volodya at mindspring.com> wrote:

>          unw_get_reg(&cursor, UNW_REG_IP, &pc);

Is it ever possible for unw_get_reg() to fail (return non-zero) for
UNW_REG_IP? The documentation isn't being obvious about this. Then
again, if the process is so damaged it cannot even read the instruction
pointer from its own stack frame, any attempts at self-debugging must
be doomed.

>    * this should work as a package, but I am not sure whether the
> offsets between package symbols and R symbols would be static or not.

Since package shared objects are mmap()ed into the address space and
(at least on Linux with ASLR enabled) mmap()s are supposed to be made
unpredictable, this offset ends up not being static. On Linux, R seems
to be normally built as a position-independent executable, so no matter
whether there is a libR.so, both the R base address and the package
shared object base address are randomised:

$ cat ex.c
#include <stdint.h>
#include <R.h>
void addr_diff(void) {
 ptrdiff_t diff = (char*)&addr_diff - (char*)&Rprintf;
 Rprintf("self - Rprintf = %td\n", diff);
}
$ R CMD SHLIB ex.c
$ R-dynamic -q -s -e 'dyn.load("ex.so"); .C("addr_diff");'
self - Rprintf = -9900928
$ R-dynamic -q -s -e 'dyn.load("ex.so"); .C("addr_diff");'
self - Rprintf = -15561600
$ R-static -q -s -e 'dyn.load("ex.so"); .C("addr_diff");'
self - Rprintf = 45537907472976
$ R-static -q -s -e 'dyn.load("ex.so"); .C("addr_diff");'
self - Rprintf = 46527711447632

>    * R ought to know where packages are loaded, we might want to be
> clever and print out information on which package contains which
> function, or there might be identical R_init_RMVL() printouts.

That's true. Informaion on all registered symbols is available from
getLoadedDLLs().

-- 
Best regards,
Ivan


From vo|ody@ @end|ng |rom m|nd@pr|ng@com  Tue Mar 12 03:10:20 2024
From: vo|ody@ @end|ng |rom m|nd@pr|ng@com (Vladimir Dergachev)
Date: Mon, 11 Mar 2024 22:10:20 -0400 (EDT)
Subject: [R-pkg-devel] 
 RFC: C backtraces for R CMD check via just-in-time debugging
In-Reply-To: <20240312002203.187747aa@Tarkus>
References: <20240303111444.6582a6c3@Tarkus>
 <20240304141508.59f3fea9@rolf-Latitude-E7470>
 <CAJXgQP2Q8mBaEvmXZh8tA5cO-8gfdn8=xCT0eXww=MJPXNPe9A@mail.gmail.com>
 <20240304102742.34af66ac@Tarkus>
 <alpine.DEB.2.22.394.2403051825150.3559@iridium>
 <20240307123042.338b426c@arachnoid>
 <alpine.DEB.2.22.394.2403070925030.3559@iridium>
 <20240312002203.187747aa@Tarkus>
Message-ID: <alpine.DEB.2.22.394.2403112206430.3559@iridium>



On Tue, 12 Mar 2024, Ivan Krylov wrote:

> Vladimir,
>
> Thank you for the example and for sharing the ideas regarding
> symbol-relative offsets!
>
> On Thu, 7 Mar 2024 09:38:18 -0500 (EST)
> Vladimir Dergachev <volodya at mindspring.com> wrote:
>
>>          unw_get_reg(&cursor, UNW_REG_IP, &pc);
>
> Is it ever possible for unw_get_reg() to fail (return non-zero) for
> UNW_REG_IP? The documentation isn't being obvious about this. Then
> again, if the process is so damaged it cannot even read the instruction
> pointer from its own stack frame, any attempts at self-debugging must
> be doomed.

Not sure. I think it just returns what is in it, you will get a false 
reading if the stack is corrupted. The way that I see it - some printout 
is better than none, and having signs that stack is badly corrupted is a 
useful debugging clue.

>
>>    * this should work as a package, but I am not sure whether the
>> offsets between package symbols and R symbols would be static or not.
>
> Since package shared objects are mmap()ed into the address space and
> (at least on Linux with ASLR enabled) mmap()s are supposed to be made
> unpredictable, this offset ends up not being static. On Linux, R seems
> to be normally built as a position-independent executable, so no matter
> whether there is a libR.so, both the R base address and the package
> shared object base address are randomised:
>
> $ cat ex.c
> #include <stdint.h>
> #include <R.h>
> void addr_diff(void) {
> ptrdiff_t diff = (char*)&addr_diff - (char*)&Rprintf;
> Rprintf("self - Rprintf = %td\n", diff);
> }
> $ R CMD SHLIB ex.c
> $ R-dynamic -q -s -e 'dyn.load("ex.so"); .C("addr_diff");'
> self - Rprintf = -9900928
> $ R-dynamic -q -s -e 'dyn.load("ex.so"); .C("addr_diff");'
> self - Rprintf = -15561600
> $ R-static -q -s -e 'dyn.load("ex.so"); .C("addr_diff");'
> self - Rprintf = 45537907472976
> $ R-static -q -s -e 'dyn.load("ex.so"); .C("addr_diff");'
> self - Rprintf = 46527711447632
>
>>    * R ought to know where packages are loaded, we might want to be
>> clever and print out information on which package contains which
>> function, or there might be identical R_init_RMVL() printouts.
>
> That's true. Informaion on all registered symbols is available from
> getLoadedDLLs().

Ok, so this is reasonably straighforward.

best

Vladimir Dergachev

>
> -- 
> Best regards,
> Ivan
>


From |kry|ov @end|ng |rom d|@root@org  Tue Mar 12 11:58:55 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Tue, 12 Mar 2024 13:58:55 +0300
Subject: [R-pkg-devel] 
 [EXTERN] Re: [EXTERN] Re: [EXTERN] Re: @doctype is
 deprecated. need help for r package documentation
In-Reply-To: <fcaa3aa48a0d472ab2df8b32b1980a4c@tiho-hannover.de>
References: <1967f4ed50ab46de84fd614de15e4bc0@tiho-hannover.de>
 <CABdHhvHZrSNMv9Me5owag45BRTberboOQzLzhYWc+vELhnRFzw@mail.gmail.com>
 <f40ffe2a3cbd40e8a14268c55d306ebc@tiho-hannover.de>
 <3fdf55261a96402f896e1733cf99a628@tiho-hannover.de>
 <8D1F6A23-439A-4078-BE45-AB9BF7345C21@dcn.davis.ca.us>
 <fcaa3aa48a0d472ab2df8b32b1980a4c@tiho-hannover.de>
Message-ID: <20240312135855.6a69bc89@arachnoid>

? Mon, 11 Mar 2024 14:57:58 +0000
"Ruff, Sergej" <Sergej.Ruff at tiho-hannover.de> ?????:

> I uploaded the old version of the package to my repo:
> https://github.com/SergejRuff/boot

After installing this tarball, running RStudio and typing:

library(bootGSEA)
?bootGSEA

...I see the help page in RStudio's help tab, not in the browser. I
think this is the expected behaviour for RStudio.

-- 
Best regards,
Ivan


From murdoch@dunc@n @end|ng |rom gm@||@com  Tue Mar 12 13:09:57 2024
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Tue, 12 Mar 2024 08:09:57 -0400
Subject: [R-pkg-devel] 
 [EXTERN] Re: [EXTERN] Re: [EXTERN] Re: @doctype is
 deprecated. need help for r package documentation
In-Reply-To: <20240312135855.6a69bc89@arachnoid>
References: <1967f4ed50ab46de84fd614de15e4bc0@tiho-hannover.de>
 <CABdHhvHZrSNMv9Me5owag45BRTberboOQzLzhYWc+vELhnRFzw@mail.gmail.com>
 <f40ffe2a3cbd40e8a14268c55d306ebc@tiho-hannover.de>
 <3fdf55261a96402f896e1733cf99a628@tiho-hannover.de>
 <8D1F6A23-439A-4078-BE45-AB9BF7345C21@dcn.davis.ca.us>
 <fcaa3aa48a0d472ab2df8b32b1980a4c@tiho-hannover.de>
 <20240312135855.6a69bc89@arachnoid>
Message-ID: <66455bb8-d9cb-4053-8009-2be86323561f@gmail.com>

On 12/03/2024 6:58 a.m., Ivan Krylov via R-package-devel wrote:
> ? Mon, 11 Mar 2024 14:57:58 +0000
> "Ruff, Sergej" <Sergej.Ruff at tiho-hannover.de> ?????:
> 
>> I uploaded the old version of the package to my repo:
>> https://github.com/SergejRuff/boot
> 
> After installing this tarball, running RStudio and typing:
> 
> library(bootGSEA)
> ?bootGSEA
> 
> ...I see the help page in RStudio's help tab, not in the browser. I
> think this is the expected behaviour for RStudio.

You can tell R to use an external browser in RStudio by setting the 
"browser" option.  For example,

   options(browser="open")

causes help to open in the default browser on MacOS.  See ?browseURL for 
details of how to specify other browsers.

Duncan Murdoch


From n||@@mech @end|ng |rom gm@||@com  Mon Mar 11 23:45:13 2024
From: n||@@mech @end|ng |rom gm@||@com (Nils Mechtel)
Date: Mon, 11 Mar 2024 23:45:13 +0100
Subject: [R-pkg-devel] Submission after archived version
Message-ID: <E42C76A0-66EE-4448-B0F4-9D5810A4104D@gmail.com>

Hi,

Our package was archived at the end of last year, and after some major rework we submitted a newer version yesterday. Despite R CMD check not giving any errors or warnings, the package doesn?t pass the pre-tests:

package MetAlyzer_1.0.0.tar.gz does not pass the incoming checks automatically, please see the following pre-tests:
Windows: <https://win-builder.r-project.org/incoming_pretest/MetAlyzer_1.0.0_20240310_215320/Windows/00check.log>
Status: 2 NOTEs
Debian: <https://win-builder.r-project.org/incoming_pretest/MetAlyzer_1.0.0_20240310_215320/Debian/00check.log>
Status: 3 NOTEs

Last released version's CRAN status: OK: 5, ERROR: 8
See: <https://cran-archive.r-project.org/web/checks/2023/2023-11-07_check_results_MetAlyzer.html>

Do we miss something here?

Best,
Nils
	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Tue Mar 12 20:10:11 2024
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Tue, 12 Mar 2024 15:10:11 -0400
Subject: [R-pkg-devel] Submission after archived version
In-Reply-To: <E42C76A0-66EE-4448-B0F4-9D5810A4104D@gmail.com>
References: <E42C76A0-66EE-4448-B0F4-9D5810A4104D@gmail.com>
Message-ID: <25136127-e8a4-483d-99cc-d6938539570f@gmail.com>

On 11/03/2024 6:45 p.m., Nils Mechtel wrote:
> Hi,
> 
> Our package was archived at the end of last year, and after some major rework we submitted a newer version yesterday. Despite R CMD check not giving any errors or warnings, the package doesn?t pass the pre-tests:
> 
> package MetAlyzer_1.0.0.tar.gz does not pass the incoming checks automatically, please see the following pre-tests:
> Windows: <https://win-builder.r-project.org/incoming_pretest/MetAlyzer_1.0.0_20240310_215320/Windows/00check.log>
> Status: 2 NOTEs
> Debian: <https://win-builder.r-project.org/incoming_pretest/MetAlyzer_1.0.0_20240310_215320/Debian/00check.log>
> Status: 3 NOTEs
> 
> Last released version's CRAN status: OK: 5, ERROR: 8
> See: <https://cran-archive.r-project.org/web/checks/2023/2023-11-07_check_results_MetAlyzer.html>
> 
> Do we miss something here?

The first note is mostly informational, though you might want to mention 
that metabolomics is spelled correctly in your submission message.

The second note should be fixed.  Apparently your package has both 
Authors and Authors at R fields.  Delete Authors and that should go away.

The third note only happened on one system, so it may be a false 
positive, but what it says is that your checks created a file called 
metabolomics_data.csv some place where it shouldn't have created it. 
You should only be writing in the temp directory, and you should clean 
up afterwards.

Duncan Murdoch


From |kry|ov @end|ng |rom d|@root@org  Tue Mar 12 20:10:29 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Tue, 12 Mar 2024 22:10:29 +0300
Subject: [R-pkg-devel] Submission after archived version
In-Reply-To: <E42C76A0-66EE-4448-B0F4-9D5810A4104D@gmail.com>
References: <E42C76A0-66EE-4448-B0F4-9D5810A4104D@gmail.com>
Message-ID: <20240312221029.58dc24c1@Tarkus>

? Mon, 11 Mar 2024 23:45:13 +0100
Nils Mechtel <nils.mech at gmail.com> ?????:

> Debian:
> <https://win-builder.r-project.org/incoming_pretest/MetAlyzer_1.0.0_20240310_215320/Debian/00check.log>
> Status: 3 NOTEs

>> * checking CRAN incoming feasibility ... [4s/6s] NOTE

>> Possibly misspelled words in DESCRIPTION:
>>  metabolomics (36:78)

This one can be explained in the submission comment. The rest of the
NOTE is to be expected.

>> * checking DESCRIPTION meta-information ... NOTE
>> Author field differs from that derived from Authors at R

Just remove the Author: field from your DESCRIPTION and let R CMD build
automatically generate it from Authors at R.

>> * checking for non-standard things in the check directory ... NOTE
>> Found the following files/directories:
>>  ?metabolomics_data.csv?

Make sure that when your tests and examples create files, they do so in
the session temp directory and then remove the files afterwards. If a
user had a valuable file named metabolomics_data.csv in the current
directory, ran example(...) and had it overwritten as a result, they
would be very unhappy.

The NOTEs on Windows are similar.

Good luck!

-- 
Best regards,
Ivan


From |kry|ov @end|ng |rom d|@root@org  Wed Mar 13 07:51:09 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Wed, 13 Mar 2024 09:51:09 +0300
Subject: [R-pkg-devel] Submission after archived version
In-Reply-To: <E42C76A0-66EE-4448-B0F4-9D5810A4104D@gmail.com>
References: <E42C76A0-66EE-4448-B0F4-9D5810A4104D@gmail.com>
Message-ID: <20240313095109.353d3f91@Tarkus>

? Mon, 11 Mar 2024 23:45:13 +0100
Nils Mechtel <nils.mech at gmail.com> ?????:

> Despite R CMD check not giving any errors or warnings, the package
> doesn?t pass the pre-tests:

If your question was more about the reasons for the difference between
your R CMD check and the pre-tests, most of it is due to --as-cran:

(Using commit ffe216d from https://github.com/nilsmechtel/MetAlyzer as
the basis for the example, which seems to be different from the
incoming pretest from the link you've shared.)

$ R-devel CMD check MetAlyzer_1.0.0.tar.gz
<...>
Status: OK	
$ R-devel CMD check --as-cran MetAlyzer_1.0.0.tar.gz
<...>
* checking for non-standard things in the check directory ... NOTE
Found the following files/directories: ?metabolomics_data.csv?
<...>

It's less wasteful to run checks without --as-cran in CI (as you
currently do), but you need to perform additional testing before making
a release. The incoming pre-tests use a custom set of environment
variables that go a but further than just --as-cran:
https://svn.r-project.org/R-dev-web/trunk/CRAN/QA/Kurt/lib/R/Scripts/check_CRAN_incoming.R

In particular, _R_CHECK_CRAN_INCOMING_USE_ASPELL_=true enables the
check for words that are possibly misspelled:

(Using an extra environment variable because your package has been
already published and R filters out "misspellings" found in the CRAN
version of the package. Congratulations!)

$ env \
 _R_CHECK_CRAN_INCOMING_ASPELL_RECHECK_MAYBE_=FALSE \
 _R_CHECK_CRAN_INCOMING_USE_ASPELL_=true \
 R-devel CMD check --as-cran MetAlyzer_1.0.0.tar.gz
<...>
Possibly misspelled words in DESCRIPTION:
  metabolomics (15:78)
<...>

Yet another way to avoid false misspellings is to create a custom
dictionary:
http://dirk.eddelbuettel.com/blog/2017/08/10/#008_aspell_cran_incoming

$ mkdir -p .aspell
$ echo '
 Rd_files <- vignettes <- R_files <- description <- list(
  encoding = "UTF-8",
  language = "en",
  dictionaries = c("en_stats", "dictionary")
 )
' > .aspell/defaults.R
$ R -q -s -e '
 saveRDS(c(
  "metabolomics" # , extra words go here
 ), file.path(".aspell", "dictionary.rds"))
'
$ R CMD build .
$ env \
 _R_CHECK_CRAN_INCOMING_ASPELL_RECHECK_MAYBE_=FALSE \
 _R_CHECK_CRAN_INCOMING_USE_ASPELL_=true \
 R-devel CMD check --as-cran MetAlyzer_1.0.0.tar.gz
# No more "Possibly misspelled words in DESCRIPTION"!

Some day, this will be documented in Writing R Extensions, or maybe in
R Internals (where the other _R_CHECK_* variables are documented), or
perhaps in the CRAN policy. See also:
https://stat.ethz.ch/pipermail/r-package-devel/2024q1/010558.html

-- 
Best regards,
Ivan


From |kry|ov @end|ng |rom d|@root@org  Wed Mar 13 07:57:16 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Wed, 13 Mar 2024 09:57:16 +0300
Subject: [R-pkg-devel] confusion over spellchecking
In-Reply-To: <094f7c79-0f74-4abc-a476-fe597f937802@gmail.com>
References: <094f7c79-0f74-4abc-a476-fe597f937802@gmail.com>
Message-ID: <20240313095716.4d46d6d0@Tarkus>

? Sun, 10 Mar 2024 13:55:43 -0400
Ben Bolker <bbolker at gmail.com> ?????:

> I am working on a package and can't seem to get rid of a NOTE about
> 
> Possibly misspelled words in DESCRIPTION:
>    glmmTMB (10:88)
>    lme (10:82)
> 
> on win-builder.

Do you have these words anywhere else in the package (e.g. in the Rd
files)? It turns out that R has a special environment variable that
makes it ignore custom dictionaries specifically for DESCRIPTION:

>>    ## Allow providing package defaults but make this controllable via
>>    ##   _R_ASPELL_USE_DEFAULTS_FOR_PACKAGE_DESCRIPTION_
>>    ## to safeguard against possible mis-use for CRAN incoming checks.

I cannot see it used anywhere under the trunk/CRAN subdirectory in the
developer.r-project.org Subversion repo, but it could be set somewhere
else on Win-Builder.

-- 
Best regards,
Ivan


