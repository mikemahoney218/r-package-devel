From edd at debian.org  Fri May 22 13:38:22 2015
From: edd at debian.org (Dirk Eddelbuettel)
Date: Fri, 22 May 2015 06:38:22 -0500
Subject: [R-pkg-devel] Welcome all!
Message-ID: <21855.5422.212238.699143@max.nulle.part>


Thanks to all (176 as of now) of you for subscribing.  We hope this will turn
into a useful forum.

I would also like to thank you for your patience. We are having some somewhat
unusual birthing problems, and martin is looking into some file permissions
at the ETH side.  I also flipped the switch from 'moderated' -- the idea (per
discussion between Hadley, Martin and myself) is to be subscriber-only not
unlike a lot of the other R Project sublists.

There are two pending posts (as 'moderation' was on) that I'll flush now.

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From Dan.Kelley at Dal.Ca  Fri May 22 12:56:21 2015
From: Dan.Kelley at Dal.Ca (Daniel Kelley)
Date: Fri, 22 May 2015 10:56:21 +0000
Subject: [R-pkg-devel] how to call PROJ.4 C code in a package?
Message-ID: <FE25CD25-2F25-4F25-8FFB-4A841E5BCFBB@dal.ca>

The ?oce? package (for oceanographic analysis) presently includes PROJ.4 C-language source code, as a way to work with map projections (see [1,2] for why I do this).  It has been suggested that a separate PROJ.4 library be used instead, and that a version of that library is available on the CRAN build machines.

I am wondering whether anyone can advise on how ?oce? should hook up with this external PROJ.4 library. As explained at [3], I would prefer not to require users to download and install PROJ.4 themselves. (By the way, a strict download of the official PROJ.4 is not helpful, because it is peppered with fprintf() calls that should be Rprintf() calls, and also with exit() calls that should be error() calls.)

I have noticed that on my OSX machine, R has proj4 stored within itself, e.g.

	$ nm -g /Library/Frameworks/R.framework/Versions/3.2/Resources/library/proj4/libs/proj4.so | grep pj_init
	00000000000254d0 T _pj_init 	
	00000000000247c0 T _pj_init_ctx 
	0000000000025680 T _pj_init_plus 
	0000000000025510 T _pj_init_plus_ctx

and I am wondering whether I can make ?oce? hook up with this. However, I don?t know if that is there just on my machine because I have the R ?proj4? package installed (or perhaps ?rgdal?, which also uses PROJ.4), etc.

So, the simple question is: what do you do if a CRAN team member suggests that you remove PROJ.4 source code from your package and instead use the version that is on CRAN build computers?

I hope this is fairly clear, although I realize I am being probably too wordy.  Let me add to the words by thanking those who have set up this email group. It is a wonderful addition to the R world. At the moment, the CRAN team probably uses up a great deal of time dealing with people like me who are stumbling a bit, to try to find the best way to do things.  Members of the CRAN team have been wonderfully generous to me, in pointing out things I?ve done wrong in package development, but this seems to me to be an undue burden on them. Let?s hope that package developers can help each other!

Dan Kelley / Department of Oceanography / Dalhousie University / Nova Scotia / Canada


[1] ? The oce package cannot pass the map-projection work to the ?proj4? package, because the proj4::project() produces an error when any point in a vector of geographical locations is ?off scale? for the map projection at hand. A solution is to call proj4::project() for each point in turn, using try() to find out which results should be c(NA,NA). This is slow for datasets with many points, e.g. world coastlines

[2] ? ?oce? needs inverse projections, so the ?mapproj? package is insufficient.

[3] ? Quite a few users are at government or other sites where building packages is possible, but where they do not have permission to install new libraries (such as PROJ.4) in e.g. /usr. I don?t want such users to be cut out from using the development version of ?oce?, because that makes it hard for me to fix problems that they may encounter or to add new capabilities to the development version of ?oce? to allow them to do their work.

From retep.meissner at gmail.com  Fri May 22 13:20:19 2015
From: retep.meissner at gmail.com (Peter Meissner)
Date: Fri, 22 May 2015 13:20:19 +0200
Subject: [R-pkg-devel] Non-mainstream packages in vignette / dependency
Message-ID: <op.xy1a35qb3euttn@peter-think.fritz.box>

Dear Listeners,

I would like to submit a package to CRAN but I also want to use two  
non-mainstream packages in my vignette. Currently I have them stated in my  
Suggests field but that leads to CRAN/Check complaints -understandably  
since they cannot be obtained by install.packages().

I know, that there is the 'Additional_repositories' field for the  
DESCRIPTION file but as the name (and the CRAN policies) say this is for  
CRAN-like repositories and those two packages (AnomalyDetection,  
BreakoutDetection) are on GitHub (e.g.  
https://github.com/twitter/AnomalyDetection).

Should I simply leave them out of the Suggests - that will lead to  
complaints about non-stated dependencies in vignette.

Should I fake my vignette code so that the troubling part is actually not  
run when building the vignette - that gives me headaches.

Is there some other, clean way ?


Best, Peter



--


From edd at debian.org  Fri May 22 14:12:07 2015
From: edd at debian.org (Dirk Eddelbuettel)
Date: Fri, 22 May 2015 07:12:07 -0500
Subject: [R-pkg-devel] Non-mainstream packages in vignette / dependency
In-Reply-To: <op.xy1a35qb3euttn@peter-think.fritz.box>
References: <op.xy1a35qb3euttn@peter-think.fritz.box>
Message-ID: <21855.7447.555380.525225@max.nulle.part>


On 22 May 2015 at 13:20, Peter Meissner via R-package-devel wrote:
| I would like to submit a package to CRAN but I also want to use two  
| non-mainstream packages in my vignette. Currently I have them stated in my  
| Suggests field but that leads to CRAN/Check complaints -understandably  
| since they cannot be obtained by install.packages().
| 
| I know, that there is the 'Additional_repositories' field for the  
| DESCRIPTION file but as the name (and the CRAN policies) say this is for  
| CRAN-like repositories and those two packages (AnomalyDetection,  
| BreakoutDetection) are on GitHub (e.g.  
| https://github.com/twitter/AnomalyDetection).
| 
| Should I simply leave them out of the Suggests - that will lead to  
| complaints about non-stated dependencies in vignette.
| 
| Should I fake my vignette code so that the troubling part is actually not  
| run when building the vignette - that gives me headaches.
| 
| Is there some other, clean way ?

That is an excellent question that I have no answer to.

It so happens that I did put both of these packages (AnomalyDetection,
BreakoutDetection) into the 'ghrr' repository created by my drat package [1].

So I can install these packages fine as there is now a repo.  What I have not
done is tried to convince CRAN that such a non-CRAN, non-BioC, non-Omegahat
repo passes the implicit test set up by 'Additional_repositories'.

And to the best of my knowledge, nobody else has.  So that is really a CRAN
question.  [2]

Dirk


[1] I have posted / blogged a few times about drat. It basically sits on top
of install.packages() / update.packages() by providing repositories -- which
are super-easy to setup and host at GitHub via their built-in gh-pages
webserver.  See http://dirk.eddelbuettel.com/code/drat.html as well as the
http://ghrr.github.io/drat pages for starting points, or ask me off-list.

[2] So the list is zero days old and already stalled. Wow.  ;-)

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From jstachel at sfwmd.gov  Fri May 22 14:46:49 2015
From: jstachel at sfwmd.gov (Stachelek, Joseph)
Date: Fri, 22 May 2015 12:46:49 +0000
Subject: [R-pkg-devel] packages installed on winbuilder
Message-ID: <D51374C4B889BC47B3C5286047C86DA196C1C8FA@whqembx03p.ad.sfwmd.gov>

I am trying to compile a package through winbuilder. The winbuilder website says that every CRAN package is installed. Does this mean that absolutely every package is installed or just packages that have binary distributions? I am getting a "package required but not available" message.

--Joseph


We value your opinion. Please take a few minutes to share your comments on the service you received from the District by clicking on this link<http://my.sfwmd.gov/portal/page/portal/pg_grp_surveysystem/survey%20ext?pid=1653>.

	[[alternative HTML version deleted]]


From cdetermanjr at gmail.com  Fri May 22 15:53:12 2015
From: cdetermanjr at gmail.com (Charles Determan)
Date: Fri, 22 May 2015 08:53:12 -0500
Subject: [R-pkg-devel] packages installed on winbuilder
In-Reply-To: <D51374C4B889BC47B3C5286047C86DA196C1C8FA@whqembx03p.ad.sfwmd.gov>
References: <D51374C4B889BC47B3C5286047C86DA196C1C8FA@whqembx03p.ad.sfwmd.gov>
Message-ID: <CAKxd1KOhRr4LkSjsDOLS5MLnKjYu3Z+nXQQjW++dwKnn0W2cQQ@mail.gmail.com>

Which package are you receiving this error?  Winbuilder should have all
current CRAN and Bioconductor packages available for your package
dependencies.

Charles

On Fri, May 22, 2015 at 7:46 AM, Stachelek, Joseph <jstachel at sfwmd.gov>
wrote:

> I am trying to compile a package through winbuilder. The winbuilder
> website says that every CRAN package is installed. Does this mean that
> absolutely every package is installed or just packages that have binary
> distributions? I am getting a "package required but not available" message.
>
> --Joseph
>
>
> We value your opinion. Please take a few minutes to share your comments on
> the service you received from the District by clicking on this link<
> http://my.sfwmd.gov/portal/page/portal/pg_grp_surveysystem/survey%20ext?pid=1653
> >.
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From maechler at lynne.stat.math.ethz.ch  Fri May 22 16:00:13 2015
From: maechler at lynne.stat.math.ethz.ch (Martin Maechler)
Date: Fri, 22 May 2015 16:00:13 +0200
Subject: [R-pkg-devel] Welcome all!
In-Reply-To: <21855.5422.212238.699143@max.nulle.part>
References: <21855.5422.212238.699143@max.nulle.part>
Message-ID: <21855.13933.364462.280048@stat.math.ethz.ch>

>>>>> Dirk Eddelbuettel via R-package-devel <r-package-devel at r-project.org>
>>>>>     on Fri, 22 May 2015 06:38:22 -0500 writes:

    > Thanks to all (176 as of now) of you for subscribing.  We hope this will turn
    > into a useful forum.

    > I would also like to thank you for your patience. We are having some somewhat
    > unusual birthing problems, and martin is looking into some file permissions
    > at the ETH side.  I also flipped the switch from 'moderated' -- the idea (per
    > discussion between Hadley, Martin and myself) is to be subscriber-only not
    > unlike a lot of the other R Project sublists.

Yes, the list is subscriber-only.  If you are not subscribed,
your post is rejected immediately.

However -- as with other R project lists, for extra spam
protection -- your first posting(s) will still need a one-time
moderator approval.

We would be happy for a few volunteer moderators (who should be
known to us), notably from the AU/NZ and Asian time zones.
Please address me maechler at ... or us
r-package-devel-owner at ... if you are volunteering.

Martin Maechler, ETH Zurich


From maechler at lynne.stat.math.ethz.ch  Fri May 22 16:24:36 2015
From: maechler at lynne.stat.math.ethz.ch (Martin Maechler)
Date: Fri, 22 May 2015 16:24:36 +0200
Subject: [R-pkg-devel] packages installed on winbuilder
In-Reply-To: <D51374C4B889BC47B3C5286047C86DA196C1C8FA@whqembx03p.ad.sfwmd.gov>
References: <D51374C4B889BC47B3C5286047C86DA196C1C8FA@whqembx03p.ad.sfwmd.gov>
Message-ID: <21855.15396.317664.217749@stat.math.ethz.ch>

>>>>> Stachelek, Joseph <jstachel at sfwmd.gov>
>>>>>     on Fri, 22 May 2015 12:46:49 +0000 writes:

    > I am trying to compile a package through winbuilder. The winbuilder website says that every CRAN package is installed. Does this mean that absolutely every package is installed or just packages that have binary distributions? I am getting a "package required but not available" message.

The Winbuilder service is basically provided by Uwe Ligges volunteering
(and infrastructure of the department of statistics of
 Universit?t Dortmund, AFAIK, with a some hardware costs covered
 by the R Foundation).

I'm pretty sure Uwe's intent is to have  every  CRAN package
installed .. which is installable on Windows.
Some packages do explicitly require a non-Windows OS 
(similarly as a few other packages explicitly only work on Windows)
and hence would be excluded. 

For other packages, considerable manual work might be
required such that the package is easily installed/installable
on Winbuilder.  For instance, for my 'Rmpfr' package, a few
years ago, Uwe had to make sure that the underlying MPFR C
library was available on the winbuilder as well.

So lets thank Uwe for all he has volunteered doing about this,
and in your place, I'd ask him politely also for your specific
situation.

Martin

    > [[alternative HTML version deleted]]
      ^^^^^^^^^^^^^^^^^^^^^^^^^^
We do much prefer  'plain text' e-mails on our lists, for
several reasons,  see also
http://www.r-project.org/posting-guide.html


From jstachel at sfwmd.gov  Fri May 22 16:35:18 2015
From: jstachel at sfwmd.gov (Stachelek, Joseph)
Date: Fri, 22 May 2015 14:35:18 +0000
Subject: [R-pkg-devel] packages installed on winbuilder
In-Reply-To: <CAKxd1KOhRr4LkSjsDOLS5MLnKjYu3Z+nXQQjW++dwKnn0W2cQQ@mail.gmail.com>
References: <D51374C4B889BC47B3C5286047C86DA196C1C8FA@whqembx03p.ad.sfwmd.gov>
	<CAKxd1KOhRr4LkSjsDOLS5MLnKjYu3Z+nXQQjW++dwKnn0W2cQQ@mail.gmail.com>
Message-ID: <D51374C4B889BC47B3C5286047C86DA196C1C981@whqembx03p.ad.sfwmd.gov>

I am receiving this error about RcppOctave. I see that it does not have a binary on CRAN because of compiled code issues. My package does not have compiled code itself and it passes CRAN check. I set example code chunks to not run but this did not solve the issue.

From: Charles Determan [mailto:cdetermanjr at gmail.com]
Sent: Friday, May 22, 2015 9:53 AM
To: Stachelek, Joseph
Cc: r-package-devel at r-project.org
Subject: Re: [R-pkg-devel] packages installed on winbuilder

Which package are you receiving this error?  Winbuilder should have all current CRAN and Bioconductor packages available for your package dependencies.
Charles

On Fri, May 22, 2015 at 7:46 AM, Stachelek, Joseph <jstachel at sfwmd.gov<mailto:jstachel at sfwmd.gov>> wrote:
I am trying to compile a package through winbuilder. The winbuilder website says that every CRAN package is installed. Does this mean that absolutely every package is installed or just packages that have binary distributions? I am getting a "package required but not available" message.

--Joseph


We value your opinion. Please take a few minutes to share your comments on the service you received from the District by clicking on this link<http://my.sfwmd.gov/portal/page/portal/pg_grp_surveysystem/survey%20ext?pid=1653>.

        [[alternative HTML version deleted]]

______________________________________________
R-package-devel at r-project.org<mailto:R-package-devel at r-project.org> mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel



We value your opinion. Please take a few minutes to share your comments on the service you received from the District by clicking on this link<http://my.sfwmd.gov/portal/page/portal/pg_grp_surveysystem/survey%20ext?pid=1653>.

	[[alternative HTML version deleted]]


From maechler at lynne.stat.math.ethz.ch  Fri May 22 16:39:41 2015
From: maechler at lynne.stat.math.ethz.ch (Martin Maechler)
Date: Fri, 22 May 2015 16:39:41 +0200
Subject: [R-pkg-devel] how to call PROJ.4 C code in a package?
In-Reply-To: <FE25CD25-2F25-4F25-8FFB-4A841E5BCFBB@dal.ca>
References: <FE25CD25-2F25-4F25-8FFB-4A841E5BCFBB@dal.ca>
Message-ID: <21855.16301.495360.380241@stat.math.ethz.ch>

>>>>> Daniel Kelley <Dan.Kelley at Dal.Ca>
>>>>>     on Fri, 22 May 2015 10:56:21 +0000 writes:

    > The ?oce? package (for oceanographic analysis) presently includes PROJ.4 C-language source code, as a way to work with map projections (see [1,2] for why I do this).  It has been suggested that a separate PROJ.4 library be used instead, and that a version of that library is available on the CRAN build machines.
    > I am wondering whether anyone can advise on how ?oce? should hook up with this external PROJ.4 library. As explained at [3], I would prefer not to require users to download and install PROJ.4 themselves. (By the way, a strict download of the official PROJ.4 is not helpful, because it is peppered with fprintf() calls that should be Rprintf() calls, and also with exit() calls that should be error() calls.)

    > I have noticed that on my OSX machine, R has proj4 stored within itself, e.g.

    > $ nm -g /Library/Frameworks/R.framework/Versions/3.2/Resources/library/proj4/libs/proj4.so | grep pj_init
    > 00000000000254d0 T _pj_init 	
    > 00000000000247c0 T _pj_init_ctx 
    > 0000000000025680 T _pj_init_plus 
    > 0000000000025510 T _pj_init_plus_ctx

... Well, not quite: That's not R, that was you, when you
installed the CRAN package called  'proj4'.

Excursion about  libraries of packages, .libPaths() etc:

  Note that many R installations, notably on the Mac (your case) and on
  Windows are setup to install all packages into R's main package
  library. Under such circumstance, within R, your
     .libPaths()
  only contains one library location ('lib.loc') path with all packages in it,
  (possibly augmented with an extra one in your personal / "home" directory.)

  Other OSes, e.g. Debian or Ubuntu Linux would use separate
  libraries to install packages in,  and I have personally  never
  installed packages into R's own library, but rather separately.

    > and I am wondering whether I can make ?oce? hook up with this. However, I don?t know if that is there just on my machine because I have the R ?proj4? package installed (or perhaps ?rgdal?, which also uses PROJ.4), etc.

Indeed, you guessed correctly, this is just because you've
installed proj4 into R's own library.

    > So, the simple question is: what do you do if a CRAN team member suggests that you remove PROJ.4 source code from your package and instead use the version that is on CRAN build computers?

I think it would be a very good idea if you'd use the  PROJ.4
C library that is provided already by the proj4 CRAN package
instead of shipping your own (typically slightly differing!) version.

You possibly should collaborate with the proj4 maintainer,
because he would have to make part of the C API available to
other packages, and your 'oce' could then add a
--------------------
LinkingTo: proj4
--------------------
line to   oce/DESCRIPTION

I hope this gets you started in the right direction.

Martin Maechler, ETH Zurich


    > I hope this is fairly clear, although I realize I am being probably too wordy.  Let me add to the words by thanking those who have set up this email group. It is a wonderful addition to the R world. At the moment, the CRAN team probably uses up a great deal of time dealing with people like me who are stumbling a bit, to try to find the best way to do things.  Members of the CRAN team have been wonderfully generous to me, in pointing out things I?ve done wrong in package development, but this seems to me to be an undue burden on them. Let?s hope that package developers can help each other!

    > Dan Kelley / Department of Oceanography / Dalhousie University / Nova Scotia / Canada


    > [1] ? The oce package cannot pass the map-projection work to the ?proj4? package, because the proj4::project() produces an error when any point in a vector of geographical locations is ?off scale? for the map projection at hand. A solution is to call proj4::project() for each point in turn, using try() to find out which results should be c(NA,NA). This is slow for datasets with many points, e.g. world coastlines

    > [2] ? ?oce? needs inverse projections, so the ?mapproj? package is insufficient.

    > [3] ? Quite a few users are at government or other sites where building packages is possible, but where they do not have permission to install new libraries (such as PROJ.4) in e.g. /usr. I don?t want such users to be cut out from using the development version of ?oce?, because that makes it hard for me to fix problems that they may encounter or to add new capabilities to the development version of ?oce? to allow them to do their work.
    > ______________________________________________
    > R-package-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-package-devel


From h.wickham at gmail.com  Fri May 22 17:17:08 2015
From: h.wickham at gmail.com (Hadley Wickham)
Date: Fri, 22 May 2015 10:17:08 -0500
Subject: [R-pkg-devel] packages installed on winbuilder
In-Reply-To: <D51374C4B889BC47B3C5286047C86DA196C1C981@whqembx03p.ad.sfwmd.gov>
References: <D51374C4B889BC47B3C5286047C86DA196C1C8FA@whqembx03p.ad.sfwmd.gov>
	<CAKxd1KOhRr4LkSjsDOLS5MLnKjYu3Z+nXQQjW++dwKnn0W2cQQ@mail.gmail.com>
	<D51374C4B889BC47B3C5286047C86DA196C1C981@whqembx03p.ad.sfwmd.gov>
Message-ID: <CABdHhvFJJorGCku8qdhmEi1KLipx90QiDZ_KeT5E43kBe6T9vA@mail.gmail.com>

Can you please include the exact error message that you are seeing?
That will help diagnose the problem.

Hadley

On Fri, May 22, 2015 at 9:35 AM, Stachelek, Joseph <jstachel at sfwmd.gov> wrote:
> I am receiving this error about RcppOctave. I see that it does not have a binary on CRAN because of compiled code issues. My package does not have compiled code itself and it passes CRAN check. I set example code chunks to not run but this did not solve the issue.
>
> From: Charles Determan [mailto:cdetermanjr at gmail.com]
> Sent: Friday, May 22, 2015 9:53 AM
> To: Stachelek, Joseph
> Cc: r-package-devel at r-project.org
> Subject: Re: [R-pkg-devel] packages installed on winbuilder
>
> Which package are you receiving this error?  Winbuilder should have all current CRAN and Bioconductor packages available for your package dependencies.
> Charles
>
> On Fri, May 22, 2015 at 7:46 AM, Stachelek, Joseph <jstachel at sfwmd.gov<mailto:jstachel at sfwmd.gov>> wrote:
> I am trying to compile a package through winbuilder. The winbuilder website says that every CRAN package is installed. Does this mean that absolutely every package is installed or just packages that have binary distributions? I am getting a "package required but not available" message.
>
> --Joseph
>
>
> We value your opinion. Please take a few minutes to share your comments on the service you received from the District by clicking on this link<http://my.sfwmd.gov/portal/page/portal/pg_grp_surveysystem/survey%20ext?pid=1653>.
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org<mailto:R-package-devel at r-project.org> mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>
>
> We value your opinion. Please take a few minutes to share your comments on the service you received from the District by clicking on this link<http://my.sfwmd.gov/portal/page/portal/pg_grp_surveysystem/survey%20ext?pid=1653>.
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel



-- 
http://had.co.nz/


From edd at debian.org  Fri May 22 17:22:35 2015
From: edd at debian.org (Dirk Eddelbuettel)
Date: Fri, 22 May 2015 10:22:35 -0500
Subject: [R-pkg-devel] packages installed on winbuilder
In-Reply-To: <D51374C4B889BC47B3C5286047C86DA196C1C981@whqembx03p.ad.sfwmd.gov>
References: <D51374C4B889BC47B3C5286047C86DA196C1C8FA@whqembx03p.ad.sfwmd.gov>
	<CAKxd1KOhRr4LkSjsDOLS5MLnKjYu3Z+nXQQjW++dwKnn0W2cQQ@mail.gmail.com>
	<D51374C4B889BC47B3C5286047C86DA196C1C981@whqembx03p.ad.sfwmd.gov>
Message-ID: <21855.18875.339277.425886@max.nulle.part>


On 22 May 2015 at 14:35, Stachelek, Joseph wrote:
| I am receiving this error about RcppOctave. I see that it does not have a binary on CRAN because of compiled code issues. My package does not have compiled code itself and it passes CRAN check. I set example code chunks to not run but this did not solve the issue.

That is a pretty involved package which I know a little. I would recommend
that make that a Suggests: RcppOctave and test for presence of RcppOctave in
examples or tests.   To my reading of Writing R Extensions, that is exactly
what is recommended in this situation where you "can but not must" use
another package.

Dirk


-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From retep.meissner at gmail.com  Fri May 22 17:31:46 2015
From: retep.meissner at gmail.com (Peter Meissner)
Date: Fri, 22 May 2015 17:31:46 +0200
Subject: [R-pkg-devel] Non-mainstream packages in vignette / dependency
In-Reply-To: <21855.7447.555380.525225@max.nulle.part>
References: <op.xy1a35qb3euttn@peter-think.fritz.box>
	<21855.7447.555380.525225@max.nulle.part>
Message-ID: <op.xy1mq8ki3euttn@zukd208>

Am .05.2015, 14:12 Uhr, schrieb Dirk Eddelbuettel <edd at debian.org>:

>
> On 22 May 2015 at 13:20, Peter Meissner via R-package-devel wrote:
> | I would like to submit a package to CRAN but I also want to use two
> | non-mainstream packages in my vignette. Currently I have them stated  
> in my
> | Suggests field but that leads to CRAN/Check complaints -understandably
> | since they cannot be obtained by install.packages().
> |
> | I know, that there is the 'Additional_repositories' field for the
> | DESCRIPTION file but as the name (and the CRAN policies) say this is  
> for
> | CRAN-like repositories and those two packages (AnomalyDetection,
> | BreakoutDetection) are on GitHub (e.g.
> | https://github.com/twitter/AnomalyDetection).
> |
> | Should I simply leave them out of the Suggests - that will lead to
> | complaints about non-stated dependencies in vignette.
> |
> | Should I fake my vignette code so that the troubling part is actually  
> not
> | run when building the vignette - that gives me headaches.
> |
> | Is there some other, clean way ?
>
> That is an excellent question that I have no answer to.
>
> It so happens that I did put both of these packages (AnomalyDetection,
> BreakoutDetection) into the 'ghrr' repository created by my drat package  
> [1].
>
> So I can install these packages fine as there is now a repo.  What I  
> have not
> done is tried to convince CRAN that such a non-CRAN, non-BioC,  
> non-Omegahat
> repo passes the implicit test set up by 'Additional_repositories'.
>
> And to the best of my knowledge, nobody else has.  So that is really a  
> CRAN
> question.  [2]
>
> Dirk
>
>
> [1] I have posted / blogged a few times about drat. It basically sits on  
> top
> of install.packages() / update.packages() by providing repositories --  
> which
> are super-easy to setup and host at GitHub via their built-in gh-pages
> webserver.  See http://dirk.eddelbuettel.com/code/drat.html as well as  
> the
> http://ghrr.github.io/drat pages for starting points, or ask me off-list.
>
> [2] So the list is zero days old and already stalled. Wow.  ;-)
>


Hey,

many thanks for the hint to your drat framework. Since it seems, that
adding 'http://ghrr.github.io/drat/' as 'Additional_repositories' in
the package DESCRIPTION file, does fulfill  the !formal! requirements,
I think I will try if I can get through with it and will report the
results to the list.


Installation works out of the box with...

install.packages(
	"AnomalyDetection",
	repos = "http://ghrr.github.io/drat",
	type="source"
)


... and first hurdle Winbuilder (devtools::build_win()) accepts the
DESCRIPTION field ...

Additional_repositories: http://ghrr.github.io/drat


... and notes the following without raising a complaint:

Suggests or Enhances not in mainstream repositories:
   AnomalyDetection, BreakoutDetection

Availability using Additional_repositories specification:
   AnomalyDetection    yes   http://ghrr.github.io/drat
   BreakoutDetection   yes   http://ghrr.github.io/drat


Now my question is what status 'http://ghrr.github.io/drat/' has. Is it a
repo bundling Github published packages open for public and going to stay
there for good? Or is it more a private thing? To put it another way.
Should I use my 'own' fork of your efforts
(http://petermeissner.github.io/drat/) or is it ok that I use ghrr and
I can assume that AnomalyDetection and BreakoutDetection stay there - I
would prefer using ghrr.


Best, Peter



-- 
Peter Mei?ner
Workgroup 'Comparative Parliamentary Politics'
Department of Politics and Administration
University of Konstanz
Box 216
78457 Konstanz
Germany

+49 7531 88 5665
http://www.polver.uni-konstanz.de/sieberer/home/
https://github.com/petermeissner
http://pmeissner.com


From edd at debian.org  Fri May 22 17:58:13 2015
From: edd at debian.org (Dirk Eddelbuettel)
Date: Fri, 22 May 2015 10:58:13 -0500
Subject: [R-pkg-devel] Non-mainstream packages in vignette / dependency
In-Reply-To: <op.xy1mq8ki3euttn@zukd208>
References: <op.xy1a35qb3euttn@peter-think.fritz.box>
	<21855.7447.555380.525225@max.nulle.part>
	<op.xy1mq8ki3euttn@zukd208>
Message-ID: <21855.21013.165834.891822@max.nulle.part>


On 22 May 2015 at 17:31, Peter Meissner wrote:
| many thanks for the hint to your drat framework. Since it seems, that
| adding 'http://ghrr.github.io/drat/' as 'Additional_repositories' in
| the package DESCRIPTION file, does fulfill  the !formal! requirements,
| I think I will try if I can get through with it and will report the
| results to the list.

Awesome!
 
| Installation works out of the box with...
| 
| install.packages(
| 	"AnomalyDetection",
| 	repos = "http://ghrr.github.io/drat",
| 	type="source"
| )
| 
| 
| ... and first hurdle Winbuilder (devtools::build_win()) accepts the
| DESCRIPTION field ...
| 
| Additional_repositories: http://ghrr.github.io/drat
| 
| 
| ... and notes the following without raising a complaint:
| 
| Suggests or Enhances not in mainstream repositories:
|    AnomalyDetection, BreakoutDetection
| 
| Availability using Additional_repositories specification:
|    AnomalyDetection    yes   http://ghrr.github.io/drat
|    BreakoutDetection   yes   http://ghrr.github.io/drat

Wickedly cool. I didn't even think about trying that yet!
 
| Now my question is what status 'http://ghrr.github.io/drat/' has. Is it a
| repo bundling Github published packages open for public and going to stay
| there for good?

That is the idea! You will note that I didn't put my name anywhere to keep it
neutral.  On the other hand I didn't want to be 'too annoying' about it and
have not pushed it too hard yet.  I gave commit rights to a collaborator who
expressed interest in using it, but he is still at 'trying first with a local
repo' stage and has not pushed anything ... 

| Or is it more a private thing? To put it another way.
| Should I use my 'own' fork of your efforts
| (http://petermeissner.github.io/drat/) or is it ok that I use ghrr and
| I can assume that AnomalyDetection and BreakoutDetection stay there - I
| would prefer using ghrr.

It is up to you. You have choices.

You could pat and hope that the repo will be there.  I have tried all these
years to build up some karma and trust that things I maintain won't disappear
over night -- but one can never know, can one? ;-) If you'd rather use your
own drat repo, that is entirely within the spec.  Nobody can stop you.

"We" as a community have barely started to figure if additional repos can and
will work.  But what you did here is very exciting and encouraging for drat,
so thumbs up from me!

Cheers, Dirk

PS I already have three drat repos because one is for the drat code proper, I
opened one just for Rcpp and related, and this third 'general' one under the
'ghrr' handle. It has already proven to very useful for myself and colleagues
as I use to feed a bunch of servers at work with packages not otherwise on a
repo.  Such as RcppR6 by Rich, Rblpapi by Whit/myself/John, the breakout and
anomaly packages you use, and some more.

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From ligges at statistik.tu-dortmund.de  Fri May 22 18:59:49 2015
From: ligges at statistik.tu-dortmund.de (Uwe Ligges)
Date: Fri, 22 May 2015 18:59:49 +0200
Subject: [R-pkg-devel] packages installed on winbuilder
In-Reply-To: <21855.15396.317664.217749@stat.math.ethz.ch>
References: <D51374C4B889BC47B3C5286047C86DA196C1C8FA@whqembx03p.ad.sfwmd.gov>
	<21855.15396.317664.217749@stat.math.ethz.ch>
Message-ID: <555F6085.2090808@statistik.tu-dortmund.de>



On 22.05.2015 16:24, Martin Maechler wrote:
>>>>>> Stachelek, Joseph <jstachel at sfwmd.gov>
>>>>>>      on Fri, 22 May 2015 12:46:49 +0000 writes:
>
>      > I am trying to compile a package through winbuilder. The winbuilder website says that every CRAN package is installed. Does this mean that absolutely every package is installed or just packages that have binary distributions? I am getting a "package required but not available" message.
>
> The Winbuilder service is basically provided by Uwe Ligges volunteering
> (and infrastructure of the department of statistics of
>   Universit?t Dortmund, AFAIK, with a some hardware costs covered
>   by the R Foundation).

Currently all hardware costs covered by Dortmund university, actually.


> I'm pretty sure Uwe's intent is to have  every  CRAN package
> installed .. which is installable on Windows.
> Some packages do explicitly require a non-Windows OS
> (similarly as a few other packages explicitly only work on Windows)
> and hence would be excluded.
>
> For other packages, considerable manual work might be
> required such that the package is easily installed/installable
> on Winbuilder.  For instance, for my 'Rmpfr' package, a few
> years ago, Uwe had to make sure that the underlying MPFR C
> library was available on the winbuilder as well.
>
> So lets thank Uwe for all he has volunteered doing about this,
> and in your place, I'd ask him politely also for your specific
> situation.

Please see

http://cran.r-project.org/web/checks/check_results_RcppOctave.html


Windows error logs are are those from winbuilder. If a package cannot be 
installed, it won't be there of course.

Hence please follow the advise to make it a suggested package "only".

Best,
Uwe Ligges


>
> Martin
>
>      > [[alternative HTML version deleted]]
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^
> We do much prefer  'plain text' e-mails on our lists, for
> several reasons,  see also
> http://www.r-project.org/posting-guide.html
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From ligges at statistik.tu-dortmund.de  Fri May 22 19:07:52 2015
From: ligges at statistik.tu-dortmund.de (Uwe Ligges)
Date: Fri, 22 May 2015 19:07:52 +0200
Subject: [R-pkg-devel] how to call PROJ.4 C code in a package?
In-Reply-To: <21855.16301.495360.380241@stat.math.ethz.ch>
References: <FE25CD25-2F25-4F25-8FFB-4A841E5BCFBB@dal.ca>
	<21855.16301.495360.380241@stat.math.ethz.ch>
Message-ID: <555F6268.607@statistik.tu-dortmund.de>

Yes, and a CRAN team member already suggested:

"All CRAN build/test systems have proj4 installed (packages rgdal and 
proj need it) and it would have been better to link to libproj as those 
packages do."

Best,
Uwe Ligges






On 22.05.2015 16:39, Martin Maechler wrote:
>>>>>> Daniel Kelley <Dan.Kelley at Dal.Ca>
>>>>>>      on Fri, 22 May 2015 10:56:21 +0000 writes:
>
>      > The ?oce? package (for oceanographic analysis) presently includes PROJ.4 C-language source code, as a way to work with map projections (see [1,2] for why I do this).  It has been suggested that a separate PROJ.4 library be used instead, and that a version of that library is available on the CRAN build machines.
>      > I am wondering whether anyone can advise on how ?oce? should hook up with this external PROJ.4 library. As explained at [3], I would prefer not to require users to download and install PROJ.4 themselves. (By the way, a strict download of the official PROJ.4 is not helpful, because it is peppered with fprintf() calls that should be Rprintf() calls, and also with exit() calls that should be error() calls.)
>
>      > I have noticed that on my OSX machine, R has proj4 stored within itself, e.g.
>
>      > $ nm -g /Library/Frameworks/R.framework/Versions/3.2/Resources/library/proj4/libs/proj4.so | grep pj_init
>      > 00000000000254d0 T _pj_init 	
>      > 00000000000247c0 T _pj_init_ctx
>      > 0000000000025680 T _pj_init_plus
>      > 0000000000025510 T _pj_init_plus_ctx
>
> ... Well, not quite: That's not R, that was you, when you
> installed the CRAN package called  'proj4'.
>
> Excursion about  libraries of packages, .libPaths() etc:
>
>    Note that many R installations, notably on the Mac (your case) and on
>    Windows are setup to install all packages into R's main package
>    library. Under such circumstance, within R, your
>       .libPaths()
>    only contains one library location ('lib.loc') path with all packages in it,
>    (possibly augmented with an extra one in your personal / "home" directory.)
>
>    Other OSes, e.g. Debian or Ubuntu Linux would use separate
>    libraries to install packages in,  and I have personally  never
>    installed packages into R's own library, but rather separately.
>
>      > and I am wondering whether I can make ?oce? hook up with this. However, I don?t know if that is there just on my machine because I have the R ?proj4? package installed (or perhaps ?rgdal?, which also uses PROJ.4), etc.
>
> Indeed, you guessed correctly, this is just because you've
> installed proj4 into R's own library.
>
>      > So, the simple question is: what do you do if a CRAN team member suggests that you remove PROJ.4 source code from your package and instead use the version that is on CRAN build computers?
>
> I think it would be a very good idea if you'd use the  PROJ.4
> C library that is provided already by the proj4 CRAN package
> instead of shipping your own (typically slightly differing!) version.
>
> You possibly should collaborate with the proj4 maintainer,
> because he would have to make part of the C API available to
> other packages, and your 'oce' could then add a
> --------------------
> LinkingTo: proj4
> --------------------
> line to   oce/DESCRIPTION
>
> I hope this gets you started in the right direction.
>
> Martin Maechler, ETH Zurich
>
>
>      > I hope this is fairly clear, although I realize I am being probably too wordy.  Let me add to the words by thanking those who have set up this email group. It is a wonderful addition to the R world. At the moment, the CRAN team probably uses up a great deal of time dealing with people like me who are stumbling a bit, to try to find the best way to do things.  Members of the CRAN team have been wonderfully generous to me, in pointing out things I?ve done wrong in package development, but this seems to me to be an undue burden on them. Let?s hope that package developers can help each other!
>
>      > Dan Kelley / Department of Oceanography / Dalhousie University / Nova Scotia / Canada
>
>
>      > [1] ? The oce package cannot pass the map-projection work to the ?proj4? package, because the proj4::project() produces an error when any point in a vector of geographical locations is ?off scale? for the map projection at hand. A solution is to call proj4::project() for each point in turn, using try() to find out which results should be c(NA,NA). This is slow for datasets with many points, e.g. world coastlines
>
>      > [2] ? ?oce? needs inverse projections, so the ?mapproj? package is insufficient.
>
>      > [3] ? Quite a few users are at government or other sites where building packages is possible, but where they do not have permission to install new libraries (such as PROJ.4) in e.g. /usr. I don?t want such users to be cut out from using the development version of ?oce?, because that makes it hard for me to fix problems that they may encounter or to add new capabilities to the development version of ?oce? to allow them to do their work.
>      > ______________________________________________
>      > R-package-devel at r-project.org mailing list
>      > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From h.wickham at gmail.com  Fri May 22 21:03:35 2015
From: h.wickham at gmail.com (Hadley Wickham)
Date: Fri, 22 May 2015 14:03:35 -0500
Subject: [R-pkg-devel] how to call PROJ.4 C code in a package?
In-Reply-To: <555F6268.607@statistik.tu-dortmund.de>
References: <FE25CD25-2F25-4F25-8FFB-4A841E5BCFBB@dal.ca>
	<21855.16301.495360.380241@stat.math.ethz.ch>
	<555F6268.607@statistik.tu-dortmund.de>
Message-ID: <CABdHhvHYiLdRP-0NWwDUKDKo+Aeaf-eiq59cVWc1wVtYxXJ94Q@mail.gmail.com>

> Yes, and a CRAN team member already suggested:
>
> "All CRAN build/test systems have proj4 installed (packages rgdal and proj
> need it) and it would have been better to link to libproj as those packages
> do."

If you're unsure how to do that, just look at the source for the proj4
package: https://github.com/cran/proj4/tree/master/src (that link is
via the convenient github mirror)  You'll need to mimic the makevars
files.

If that package doesn't do exactly what you need, you can use github
search to look for other packages that use proj_api.h:
https://github.com/search?q=user%3Acran+proj_api.h&type=Code

Hadley

-- 
http://had.co.nz/


From robert.j.carroll at Vanderbilt.Edu  Fri May 22 21:33:26 2015
From: robert.j.carroll at Vanderbilt.Edu (Carroll, Robert J)
Date: Fri, 22 May 2015 19:33:26 +0000
Subject: [R-pkg-devel] requireNamespace and nested Depends
Message-ID: <910007DB8E6DFD41839E241311CB12231BE17EF2@ITS-HCWNEM105.ds.vanderbilt.edu>

Hello everyone-

I've been updating a package (https://github.com/PheWAS/PheWAS/tree/0.10) to comply with R 3.2.0 depends, suggests, and imports standards.

PheWAS suggests snowfall as it uses snowfall just to add parallelization. I was using a require call previously if a user specified the parallel option in one of my functions; the new standards ask for a requireNamespace call with :: specified function calls for suggested packages instead. Unfortunately, snowfall depends on the package snow via DESCRIPTION, but does not import it in NAMESPACE. When executed, the function call to snowfall::sfInit fails when it attempts to call snow functions. Adding a requireNamespace call for snow does not attach or put the namespace in any resolve/search path, so a call to sfInit still fails.

The "best" solution would likely be to update snowfall's NAMESPACE to include import(snow), but this is not in my control. Alternatively, I could add snow and/or snowfall to my Depends and import list. This would work, but it's not necessary for the function of the package, so it is more appropriate as a suggest. I could also do some specific imports, but that is still a suboptimal solution.

Is there a best practice here? Should I go for the simple solution and just add snowfall as a dependency? Snow and snowfall don't have any big dependencies themselves, so it shouldn't be much of a problem to just import them.

Thank you for any perspectives on this issue!
-Robert

Robert J Carroll, PhD
Department of Biomedical Informatics
Vanderbilt University School of Medicine
Robert.J.Carroll at Vanderbilt.edu
(615) 875-3253


From ligges at statistik.tu-dortmund.de  Sat May 23 00:26:43 2015
From: ligges at statistik.tu-dortmund.de (Uwe Ligges)
Date: Sat, 23 May 2015 00:26:43 +0200
Subject: [R-pkg-devel] requireNamespace and nested Depends
In-Reply-To: <910007DB8E6DFD41839E241311CB12231BE17EF2@ITS-HCWNEM105.ds.vanderbilt.edu>
References: <910007DB8E6DFD41839E241311CB12231BE17EF2@ITS-HCWNEM105.ds.vanderbilt.edu>
Message-ID: <555FAD23.80705@statistik.tu-dortmund.de>

It makes more sense to rely on something that uses package parallel 
these days (rather than snowfall/snow).

Most snow functionality has been ported to parallel and partly improved 
there and snowfall has not been updated for a long time....

Best,
Uwe Ligges





On 22.05.2015 21:33, Carroll, Robert J wrote:
> Hello everyone-
>
> I've been updating a package (https://github.com/PheWAS/PheWAS/tree/0.10) to comply with R 3.2.0 depends, suggests, and imports standards.
>
> PheWAS suggests snowfall as it uses snowfall just to add parallelization. I was using a require call previously if a user specified the parallel option in one of my functions; the new standards ask for a requireNamespace call with :: specified function calls for suggested packages instead. Unfortunately, snowfall depends on the package snow via DESCRIPTION, but does not import it in NAMESPACE. When executed, the function call to snowfall::sfInit fails when it attempts to call snow functions. Adding a requireNamespace call for snow does not attach or put the namespace in any resolve/search path, so a call to sfInit still fails.
>
> The "best" solution would likely be to update snowfall's NAMESPACE to include import(snow), but this is not in my control. Alternatively, I could add snow and/or snowfall to my Depends and import list. This would work, but it's not necessary for the function of the package, so it is more appropriate as a suggest. I could also do some specific imports, but that is still a suboptimal solution.
>
> Is there a best practice here? Should I go for the simple solution and just add snowfall as a dependency? Snow and snowfall don't have any big dependencies themselves, so it shouldn't be much of a problem to just import them.
>
> Thank you for any perspectives on this issue!
> -Robert
>
> Robert J Carroll, PhD
> Department of Biomedical Informatics
> Vanderbilt University School of Medicine
> Robert.J.Carroll at Vanderbilt.edu
> (615) 875-3253
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From retep.meissner at gmail.com  Sat May 23 10:57:40 2015
From: retep.meissner at gmail.com (Peter Meissner)
Date: Sat, 23 May 2015 10:57:40 +0200
Subject: [R-pkg-devel] Non-mainstream packages in vignette / dependency
In-Reply-To: <21855.21013.165834.891822@max.nulle.part>
References: <op.xy1a35qb3euttn@peter-think.fritz.box>
	<21855.7447.555380.525225@max.nulle.part> <op.xy1mq8ki3euttn@zukd208>
	<21855.21013.165834.891822@max.nulle.part>
Message-ID: <op.xy2y6elc3euttn@peter-think.fritz.box>

So I pat and hope for the best ...

and am happy to have used ghrr as additional repo for my CRAN submission.  
CRAN agrees and has accepted wikipediatrend with ghrr as an additional  
non-mainstream package-repo. Thanks again.

I think having one additional repo for packages that are on GitHub but not  
on CRAN is a splendid idea and the word about ghrr shall be spread loud  
and wide. Great work.

My personal drat repo then will remain for personal toolkit delivery.


Best, Peter




Am .05.2015, 17:58 Uhr, schrieb Dirk Eddelbuettel <edd at debian.org>:

>
> On 22 May 2015 at 17:31, Peter Meissner wrote:
> | many thanks for the hint to your drat framework. Since it seems, that
> | adding 'http://ghrr.github.io/drat/' as 'Additional_repositories' in
> | the package DESCRIPTION file, does fulfill  the !formal! requirements,
> | I think I will try if I can get through with it and will report the
> | results to the list.
>
> Awesome!
> | Installation works out of the box with...
> |
> | install.packages(
> | 	"AnomalyDetection",
> | 	repos = "http://ghrr.github.io/drat",
> | 	type="source"
> | )
> |
> |
> | ... and first hurdle Winbuilder (devtools::build_win()) accepts the
> | DESCRIPTION field ...
> |
> | Additional_repositories: http://ghrr.github.io/drat
> |
> |
> | ... and notes the following without raising a complaint:
> |
> | Suggests or Enhances not in mainstream repositories:
> |    AnomalyDetection, BreakoutDetection
> |
> | Availability using Additional_repositories specification:
> |    AnomalyDetection    yes   http://ghrr.github.io/drat
> |    BreakoutDetection   yes   http://ghrr.github.io/drat
>
> Wickedly cool. I didn't even think about trying that yet!
> | Now my question is what status 'http://ghrr.github.io/drat/' has. Is  
> it a
> | repo bundling Github published packages open for public and going to  
> stay
> | there for good?
>
> That is the idea! You will note that I didn't put my name anywhere to  
> keep it
> neutral.  On the other hand I didn't want to be 'too annoying' about it  
> and
> have not pushed it too hard yet.  I gave commit rights to a collaborator  
> who
> expressed interest in using it, but he is still at 'trying first with a  
> local
> repo' stage and has not pushed anything ...
>
> | Or is it more a private thing? To put it another way.
> | Should I use my 'own' fork of your efforts
> | (http://petermeissner.github.io/drat/) or is it ok that I use ghrr and
> | I can assume that AnomalyDetection and BreakoutDetection stay there - I
> | would prefer using ghrr.
>
> It is up to you. You have choices.
>
> You could pat and hope that the repo will be there.  I have tried all  
> these
> years to build up some karma and trust that things I maintain won't  
> disappear
> over night -- but one can never know, can one? ;-) If you'd rather use  
> your
> own drat repo, that is entirely within the spec.  Nobody can stop you.
>
> "We" as a community have barely started to figure if additional repos  
> can and
> will work.  But what you did here is very exciting and encouraging for  
> drat,
> so thumbs up from me!
>
> Cheers, Dirk
>
> PS I already have three drat repos because one is for the drat code  
> proper, I
> opened one just for Rcpp and related, and this third 'general' one under  
> the
> 'ghrr' handle. It has already proven to very useful for myself and  
> colleagues
> as I use to feed a bunch of servers at work with packages not otherwise  
> on a
> repo.  Such as RcppR6 by Rich, Rblpapi by Whit/myself/John, the breakout  
> and
> anomaly packages you use, and some more.
>


--


From rmh at temple.edu  Sat May 23 02:08:05 2015
From: rmh at temple.edu (Richard M. Heiberger)
Date: Fri, 22 May 2015 20:08:05 -0400
Subject: [R-pkg-devel] ERROR from R CMD check that I have never seen before
Message-ID: <CAGx1TMC+Uf28u5QUwL9skD3e48n16EvUF6KP-adDiWtcc5e+kQ@mail.gmail.com>

I am updating the HH package and have series of messages that I don't recognize.

bash-3.2$ R CMD check HH2
* using log directory '/Users/rmh/WindowsC/HOME/rmh/HH-R.package/HH2.Rcheck'
* using R Under development (unstable) (2015-02-12 r67812)
* using platform: x86_64-apple-darwin13.4.0 (64-bit)
* using session charset: ASCII
* checking for file 'HH2/DESCRIPTION' ... OK
* checking extension type ... Package
* this is package 'HH' version '3.1-17'
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for executable files ... OK
* checking for hidden files and directories ... NOTE
Found the following hidden files and directories:
  .DS_Store
  inst/.DS_Store
These were most likely included in error. See section 'Package
structure' in the 'Writing R Extensions' manual.
* checking for portable file names ... OK
* checking for sufficient/correct file permissions ... OK
* checking whether package 'HH' can be installed ... OK
* checking installed package size ... OK
* checking package directory ... OK
* checking DESCRIPTION meta-information ... OK
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies ... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking dependencies in R code ... NOTE
Error in validObject(.Object) :
  invalid class "ObjectsWithPackage" object: superclass "atomicVector"
not defined in the environment of the object's class
Execution halted

I have two questions about it.
1. What is it checking?  There are no words in the message that
indicate which of my
functions is being looked at.

I am getting 6 of these.  They are all identically worded.  sometimes they are
NOTE ERROR WARNING

Thanks
Rich

2. How can I run R CMD check, or its components, in a way that will stop and
let me investigate from the point?  I am looking for the equivalent of
the R option
option(error=recover)


From rmh at temple.edu  Sat May 23 05:29:27 2015
From: rmh at temple.edu (Richard M. Heiberger)
Date: Fri, 22 May 2015 23:29:27 -0400
Subject: [R-pkg-devel] ERROR from R CMD check that I have never seen
	before
In-Reply-To: <CAGx1TMC+Uf28u5QUwL9skD3e48n16EvUF6KP-adDiWtcc5e+kQ@mail.gmail.com>
References: <CAGx1TMC+Uf28u5QUwL9skD3e48n16EvUF6KP-adDiWtcc5e+kQ@mail.gmail.com>
Message-ID: <CAGx1TMAeFvJyc09ARQ8GdpK7NwtmyTx8A=PvqoOdg+NKb2aA1Q@mail.gmail.com>

followup.

I backed up to R-3.1.2 and fixed the problems it found.
Then I tried again with R-3.2.0 and I am still getting these messages

Error in validObject(.Object) :
  invalid class "ObjectsWithPackage" object: superclass "atomicVector"
not defined in the environment of the object's class
Calls: <Anonymous> ... metaNameUndo -> new -> initialize -> initialize
-> validObject
Execution halted

On Fri, May 22, 2015 at 8:08 PM, Richard M. Heiberger <rmh at temple.edu> wrote:
> I am updating the HH package and have series of messages that I don't recognize.
>
> bash-3.2$ R CMD check HH2
> * using log directory '/Users/rmh/WindowsC/HOME/rmh/HH-R.package/HH2.Rcheck'
> * using R Under development (unstable) (2015-02-12 r67812)
> * using platform: x86_64-apple-darwin13.4.0 (64-bit)
> * using session charset: ASCII
> * checking for file 'HH2/DESCRIPTION' ... OK
> * checking extension type ... Package
> * this is package 'HH' version '3.1-17'
> * checking package namespace information ... OK
> * checking package dependencies ... OK
> * checking if this is a source package ... OK
> * checking if there is a namespace ... OK
> * checking for executable files ... OK
> * checking for hidden files and directories ... NOTE
> Found the following hidden files and directories:
>   .DS_Store
>   inst/.DS_Store
> These were most likely included in error. See section 'Package
> structure' in the 'Writing R Extensions' manual.
> * checking for portable file names ... OK
> * checking for sufficient/correct file permissions ... OK
> * checking whether package 'HH' can be installed ... OK
> * checking installed package size ... OK
> * checking package directory ... OK
> * checking DESCRIPTION meta-information ... OK
> * checking top-level files ... OK
> * checking for left-over files ... OK
> * checking index information ... OK
> * checking package subdirectories ... OK
> * checking R files for non-ASCII characters ... OK
> * checking R files for syntax errors ... OK
> * checking whether the package can be loaded ... OK
> * checking whether the package can be loaded with stated dependencies ... OK
> * checking whether the package can be unloaded cleanly ... OK
> * checking whether the namespace can be loaded with stated dependencies ... OK
> * checking whether the namespace can be unloaded cleanly ... OK
> * checking dependencies in R code ... NOTE
> Error in validObject(.Object) :
>   invalid class "ObjectsWithPackage" object: superclass "atomicVector"
> not defined in the environment of the object's class
> Execution halted
>
> I have two questions about it.
> 1. What is it checking?  There are no words in the message that
> indicate which of my
> functions is being looked at.
>
> I am getting 6 of these.  They are all identically worded.  sometimes they are
> NOTE ERROR WARNING
>
> Thanks
> Rich
>
> 2. How can I run R CMD check, or its components, in a way that will stop and
> let me investigate from the point?  I am looking for the equivalent of
> the R option
> option(error=recover)


From edd at debian.org  Sat May 23 14:24:40 2015
From: edd at debian.org (Dirk Eddelbuettel)
Date: Sat, 23 May 2015 07:24:40 -0500
Subject: [R-pkg-devel] Non-mainstream packages in vignette / dependency
In-Reply-To: <op.xy2y6elc3euttn@peter-think.fritz.box>
References: <op.xy1a35qb3euttn@peter-think.fritz.box>
	<21855.7447.555380.525225@max.nulle.part>
	<op.xy1mq8ki3euttn@zukd208>
	<21855.21013.165834.891822@max.nulle.part>
	<op.xy2y6elc3euttn@peter-think.fritz.box>
Message-ID: <21856.29064.881732.342336@max.nulle.part>


On 23 May 2015 at 10:57, Peter Meissner wrote:
| So I pat and hope for the best ...
| 
| and am happy to have used ghrr as additional repo for my CRAN submission.  
| CRAN agrees and has accepted wikipediatrend with ghrr as an additional  
| non-mainstream package-repo. Thanks again.

Very nice existence proof -- congrats.

I'll reference that in the drat FAQ. I am due a package update anyway.
 
| I think having one additional repo for packages that are on GitHub but not  
| on CRAN is a splendid idea and the word about ghrr shall be spread loud  
| and wide. Great work.

And GitHub style pull requests (or issue tickets) may be the best way to add
more package.  Not sure I documented that somewhere but I tend to use

   "name of package"   "version"   "git sha1"   "repo url"

as a commit format so that it is always clear where a package came from.
>From my condensed 'git ls' in that repo:

* 6dcf413 - Rblpapi 0.2.2.5 f7ff208 git at github.com:eddelbuettel/Rblpapi.git (22 hours ago) <Dirk Eddelbuettel>
* 955771d - BH 1.58.0-0 2b6afe8 git at github.com:eddelbuettel/bh.git (9 days ago) <Dirk Eddelbuettel>
* 24be658 - AnomalyDetection 1.0.1 845527d git at github.com:eddelbuettel/AnomalyDetection.git (12 days ago) <Dirk Eddelbuettel>
* ed7f30d - Rblpapi 0.2.2.4 7e332bc git at github.com:eddelbuettel/Rblpapi.git (12 days ago) <Dirk Eddelbuettel>
* a1c49c8 - BreakoutDetection 1.0.1.1 2121f8c git at github.com:eddelbuettel/BreakoutDetection.git (12 days ago) <Dirk Eddelbuettel>

For BreakoutDetection and AnomalyDetection, I used local forks so that I
could increment the minor version to make the (then-current) git snapshot I
took distinct. Both had (minor) recent changes in there that made it a little
distinct from the earlier, announced versions -- and in cases like that I
think the version number really ought to be distinct as the code.

"That's what forks are for." :)

Similarly, the BH above was a pre-release I announced to rcpp-devel; it has
since been superseeded by the BH 1.58.0-1 release now on CRAN.

| My personal drat repo then will remain for personal toolkit delivery.

Sounds like a plan.

Dirk


-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From ligges at statistik.tu-dortmund.de  Sat May 23 15:02:55 2015
From: ligges at statistik.tu-dortmund.de (Uwe Ligges)
Date: Sat, 23 May 2015 15:02:55 +0200
Subject: [R-pkg-devel] ERROR from R CMD check that I have never seen
	before
In-Reply-To: <CAGx1TMAeFvJyc09ARQ8GdpK7NwtmyTx8A=PvqoOdg+NKb2aA1Q@mail.gmail.com>
References: <CAGx1TMC+Uf28u5QUwL9skD3e48n16EvUF6KP-adDiWtcc5e+kQ@mail.gmail.com>
	<CAGx1TMAeFvJyc09ARQ8GdpK7NwtmyTx8A=PvqoOdg+NKb2aA1Q@mail.gmail.com>
Message-ID: <55607A7F.2090202@statistik.tu-dortmund.de>

Can you try a more recent version of R-devel with all relevant packages 
you depend on re-installed?

Looks like either a bug in that months old version of R-devel or an 
inconsistancy of installed packages and the version of the methods 
package or so.

Best,
Uwe Ligges



On 23.05.2015 05:29, Richard M. Heiberger wrote:
> followup.
>
> I backed up to R-3.1.2 and fixed the problems it found.
> Then I tried again with R-3.2.0 and I am still getting these messages
>
> Error in validObject(.Object) :
>    invalid class "ObjectsWithPackage" object: superclass "atomicVector"
> not defined in the environment of the object's class
> Calls: <Anonymous> ... metaNameUndo -> new -> initialize -> initialize
> -> validObject
> Execution halted
>
> On Fri, May 22, 2015 at 8:08 PM, Richard M. Heiberger <rmh at temple.edu> wrote:
>> I am updating the HH package and have series of messages that I don't recognize.
>>
>> bash-3.2$ R CMD check HH2
>> * using log directory '/Users/rmh/WindowsC/HOME/rmh/HH-R.package/HH2.Rcheck'
>> * using R Under development (unstable) (2015-02-12 r67812)
>> * using platform: x86_64-apple-darwin13.4.0 (64-bit)
>> * using session charset: ASCII
>> * checking for file 'HH2/DESCRIPTION' ... OK
>> * checking extension type ... Package
>> * this is package 'HH' version '3.1-17'
>> * checking package namespace information ... OK
>> * checking package dependencies ... OK
>> * checking if this is a source package ... OK
>> * checking if there is a namespace ... OK
>> * checking for executable files ... OK
>> * checking for hidden files and directories ... NOTE
>> Found the following hidden files and directories:
>>    .DS_Store
>>    inst/.DS_Store
>> These were most likely included in error. See section 'Package
>> structure' in the 'Writing R Extensions' manual.
>> * checking for portable file names ... OK
>> * checking for sufficient/correct file permissions ... OK
>> * checking whether package 'HH' can be installed ... OK
>> * checking installed package size ... OK
>> * checking package directory ... OK
>> * checking DESCRIPTION meta-information ... OK
>> * checking top-level files ... OK
>> * checking for left-over files ... OK
>> * checking index information ... OK
>> * checking package subdirectories ... OK
>> * checking R files for non-ASCII characters ... OK
>> * checking R files for syntax errors ... OK
>> * checking whether the package can be loaded ... OK
>> * checking whether the package can be loaded with stated dependencies ... OK
>> * checking whether the package can be unloaded cleanly ... OK
>> * checking whether the namespace can be loaded with stated dependencies ... OK
>> * checking whether the namespace can be unloaded cleanly ... OK
>> * checking dependencies in R code ... NOTE
>> Error in validObject(.Object) :
>>    invalid class "ObjectsWithPackage" object: superclass "atomicVector"
>> not defined in the environment of the object's class
>> Execution halted
>>
>> I have two questions about it.
>> 1. What is it checking?  There are no words in the message that
>> indicate which of my
>> functions is being looked at.
>>
>> I am getting 6 of these.  They are all identically worded.  sometimes they are
>> NOTE ERROR WARNING
>>
>> Thanks
>> Rich
>>
>> 2. How can I run R CMD check, or its components, in a way that will stop and
>> let me investigate from the point?  I am looking for the equivalent of
>> the R option
>> option(error=recover)
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From rmh at temple.edu  Mon May 25 05:01:04 2015
From: rmh at temple.edu (Richard M. Heiberger)
Date: Sun, 24 May 2015 23:01:04 -0400
Subject: [R-pkg-devel] ERROR from R CMD check that I have never seen
	before
In-Reply-To: <55607A7F.2090202@statistik.tu-dortmund.de>
References: <CAGx1TMC+Uf28u5QUwL9skD3e48n16EvUF6KP-adDiWtcc5e+kQ@mail.gmail.com>
	<CAGx1TMAeFvJyc09ARQ8GdpK7NwtmyTx8A=PvqoOdg+NKb2aA1Q@mail.gmail.com>
	<55607A7F.2090202@statistik.tu-dortmund.de>
Message-ID: <CAGx1TMDY+YOt1eGzwitWj2Xdw00=Dyc4emhYKsgS47=j19+yeg@mail.gmail.com>

The problem is still there.  I am working on both Windows and Macintosh.

The packages I have check clean using R-3.1.2 on Windows.
They "INSTALL --build" and "build" using 3.3.0-devl on Windows and 3.2.0 on Mac,

I downloaded R-devel for Windows this afternoon and updated to Rtools33.
I have attached two R CMD check log files with this combination
* using R Under development (unstable) (2015-05-22 r68399)
* using platform: i386-w64-mingw32 (32-bit)


The 3.1-15 is the version currently on CRAN.
It complains it can't find Hmisc.  Hmisc is installed.
The built package inside the Rcheck directory loads.
Package check results on CRAN don't show this warning.


The 3.1-17 is the version I am working on.
It complains it can't find abind.  abind is installed.
It gives 6 versions of this message.
Error in validObject(.Object) :
  invalid class "ObjectsWithPackage" object: superclass "atomicVector"
not defined in the environment of the object's class
I don't understand what is triggering them.
The built package inside the Rcheck directory loads.

On Sat, May 23, 2015 at 9:02 AM, Uwe Ligges
<ligges at statistik.tu-dortmund.de> wrote:
> Can you try a more recent version of R-devel with all relevant packages you
> depend on re-installed?
>
> Looks like either a bug in that months old version of R-devel or an
> inconsistancy of installed packages and the version of the methods package
> or so.
>
> Best,
> Uwe Ligges
>
>
>
>
> On 23.05.2015 05:29, Richard M. Heiberger wrote:
>>
>> followup.
>>
>> I backed up to R-3.1.2 and fixed the problems it found.
>> Then I tried again with R-3.2.0 and I am still getting these messages
>>
>> Error in validObject(.Object) :
>>    invalid class "ObjectsWithPackage" object: superclass "atomicVector"
>> not defined in the environment of the object's class
>> Calls: <Anonymous> ... metaNameUndo -> new -> initialize -> initialize
>> -> validObject
>> Execution halted
>>
>> On Fri, May 22, 2015 at 8:08 PM, Richard M. Heiberger <rmh at temple.edu>
>> wrote:
>>>
>>> I am updating the HH package and have series of messages that I don't
>>> recognize.
>>>
>>> bash-3.2$ R CMD check HH2
>>> * using log directory
>>> '/Users/rmh/WindowsC/HOME/rmh/HH-R.package/HH2.Rcheck'
>>> * using R Under development (unstable) (2015-02-12 r67812)
>>> * using platform: x86_64-apple-darwin13.4.0 (64-bit)
>>> * using session charset: ASCII
>>> * checking for file 'HH2/DESCRIPTION' ... OK
>>> * checking extension type ... Package
>>> * this is package 'HH' version '3.1-17'
>>> * checking package namespace information ... OK
>>> * checking package dependencies ... OK
>>> * checking if this is a source package ... OK
>>> * checking if there is a namespace ... OK
>>> * checking for executable files ... OK
>>> * checking for hidden files and directories ... NOTE
>>> Found the following hidden files and directories:
>>>    .DS_Store
>>>    inst/.DS_Store
>>> These were most likely included in error. See section 'Package
>>> structure' in the 'Writing R Extensions' manual.
>>> * checking for portable file names ... OK
>>> * checking for sufficient/correct file permissions ... OK
>>> * checking whether package 'HH' can be installed ... OK
>>> * checking installed package size ... OK
>>> * checking package directory ... OK
>>> * checking DESCRIPTION meta-information ... OK
>>> * checking top-level files ... OK
>>> * checking for left-over files ... OK
>>> * checking index information ... OK
>>> * checking package subdirectories ... OK
>>> * checking R files for non-ASCII characters ... OK
>>> * checking R files for syntax errors ... OK
>>> * checking whether the package can be loaded ... OK
>>> * checking whether the package can be loaded with stated dependencies ...
>>> OK
>>> * checking whether the package can be unloaded cleanly ... OK
>>> * checking whether the namespace can be loaded with stated dependencies
>>> ... OK
>>> * checking whether the namespace can be unloaded cleanly ... OK
>>> * checking dependencies in R code ... NOTE
>>> Error in validObject(.Object) :
>>>    invalid class "ObjectsWithPackage" object: superclass "atomicVector"
>>> not defined in the environment of the object's class
>>> Execution halted
>>>
>>> I have two questions about it.
>>> 1. What is it checking?  There are no words in the message that
>>> indicate which of my
>>> functions is being looked at.
>>>
>>> I am getting 6 of these.  They are all identically worded.  sometimes
>>> they are
>>> NOTE ERROR WARNING
>>>
>>> Thanks
>>> Rich
>>>
>>> 2. How can I run R CMD check, or its components, in a way that will stop
>>> and
>>> let me investigate from the point?  I am looking for the equivalent of
>>> the R option
>>> option(error=recover)
>>
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>

From ligges at statistik.tu-dortmund.de  Mon May 25 09:44:26 2015
From: ligges at statistik.tu-dortmund.de (Uwe Ligges)
Date: Mon, 25 May 2015 09:44:26 +0200
Subject: [R-pkg-devel] ERROR from R CMD check that I have never seen
	before
In-Reply-To: <CAGx1TMDY+YOt1eGzwitWj2Xdw00=Dyc4emhYKsgS47=j19+yeg@mail.gmail.com>
References: <CAGx1TMC+Uf28u5QUwL9skD3e48n16EvUF6KP-adDiWtcc5e+kQ@mail.gmail.com>	<CAGx1TMAeFvJyc09ARQ8GdpK7NwtmyTx8A=PvqoOdg+NKb2aA1Q@mail.gmail.com>	<55607A7F.2090202@statistik.tu-dortmund.de>
	<CAGx1TMDY+YOt1eGzwitWj2Xdw00=Dyc4emhYKsgS47=j19+yeg@mail.gmail.com>
Message-ID: <5562D2DA.6070103@statistik.tu-dortmund.de>

Two ideas:

1. Solve the first error at first:

Error in loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), 
versionCheck = vI[[j]]) :
   there is no package called 'abind'
Error: package or namespace load failed for 'HH'
Execution halted

Looks like you forgot to declare abind as an Imports in your DESCRIPTION 
file?


2. If you still get the other problems, please make a version of your 
package available so that someone else can check and debug this.

Best,
Uwe Ligges




On 25.05.2015 05:01, Richard M. Heiberger wrote:
> The problem is still there.  I am working on both Windows and Macintosh.
>
> The packages I have check clean using R-3.1.2 on Windows.
> They "INSTALL --build" and "build" using 3.3.0-devl on Windows and 3.2.0 on Mac,
>
> I downloaded R-devel for Windows this afternoon and updated to Rtools33.
> I have attached two R CMD check log files with this combination
> * using R Under development (unstable) (2015-05-22 r68399)
> * using platform: i386-w64-mingw32 (32-bit)
>
>
> The 3.1-15 is the version currently on CRAN.
> It complains it can't find Hmisc.  Hmisc is installed.
> The built package inside the Rcheck directory loads.
> Package check results on CRAN don't show this warning.
>
>
> The 3.1-17 is the version I am working on.
> It complains it can't find abind.  abind is installed.
> It gives 6 versions of this message.
> Error in validObject(.Object) :
>    invalid class "ObjectsWithPackage" object: superclass "atomicVector"
> not defined in the environment of the object's class
> I don't understand what is triggering them.
> The built package inside the Rcheck directory loads.
>
> On Sat, May 23, 2015 at 9:02 AM, Uwe Ligges
> <ligges at statistik.tu-dortmund.de> wrote:
>> Can you try a more recent version of R-devel with all relevant packages you
>> depend on re-installed?
>>
>> Looks like either a bug in that months old version of R-devel or an
>> inconsistancy of installed packages and the version of the methods package
>> or so.
>>
>> Best,
>> Uwe Ligges
>>
>>
>>
>>
>> On 23.05.2015 05:29, Richard M. Heiberger wrote:
>>>
>>> followup.
>>>
>>> I backed up to R-3.1.2 and fixed the problems it found.
>>> Then I tried again with R-3.2.0 and I am still getting these messages
>>>
>>> Error in validObject(.Object) :
>>>     invalid class "ObjectsWithPackage" object: superclass "atomicVector"
>>> not defined in the environment of the object's class
>>> Calls: <Anonymous> ... metaNameUndo -> new -> initialize -> initialize
>>> -> validObject
>>> Execution halted
>>>
>>> On Fri, May 22, 2015 at 8:08 PM, Richard M. Heiberger <rmh at temple.edu>
>>> wrote:
>>>>
>>>> I am updating the HH package and have series of messages that I don't
>>>> recognize.
>>>>
>>>> bash-3.2$ R CMD check HH2
>>>> * using log directory
>>>> '/Users/rmh/WindowsC/HOME/rmh/HH-R.package/HH2.Rcheck'
>>>> * using R Under development (unstable) (2015-02-12 r67812)
>>>> * using platform: x86_64-apple-darwin13.4.0 (64-bit)
>>>> * using session charset: ASCII
>>>> * checking for file 'HH2/DESCRIPTION' ... OK
>>>> * checking extension type ... Package
>>>> * this is package 'HH' version '3.1-17'
>>>> * checking package namespace information ... OK
>>>> * checking package dependencies ... OK
>>>> * checking if this is a source package ... OK
>>>> * checking if there is a namespace ... OK
>>>> * checking for executable files ... OK
>>>> * checking for hidden files and directories ... NOTE
>>>> Found the following hidden files and directories:
>>>>     .DS_Store
>>>>     inst/.DS_Store
>>>> These were most likely included in error. See section 'Package
>>>> structure' in the 'Writing R Extensions' manual.
>>>> * checking for portable file names ... OK
>>>> * checking for sufficient/correct file permissions ... OK
>>>> * checking whether package 'HH' can be installed ... OK
>>>> * checking installed package size ... OK
>>>> * checking package directory ... OK
>>>> * checking DESCRIPTION meta-information ... OK
>>>> * checking top-level files ... OK
>>>> * checking for left-over files ... OK
>>>> * checking index information ... OK
>>>> * checking package subdirectories ... OK
>>>> * checking R files for non-ASCII characters ... OK
>>>> * checking R files for syntax errors ... OK
>>>> * checking whether the package can be loaded ... OK
>>>> * checking whether the package can be loaded with stated dependencies ...
>>>> OK
>>>> * checking whether the package can be unloaded cleanly ... OK
>>>> * checking whether the namespace can be loaded with stated dependencies
>>>> ... OK
>>>> * checking whether the namespace can be unloaded cleanly ... OK
>>>> * checking dependencies in R code ... NOTE
>>>> Error in validObject(.Object) :
>>>>     invalid class "ObjectsWithPackage" object: superclass "atomicVector"
>>>> not defined in the environment of the object's class
>>>> Execution halted
>>>>
>>>> I have two questions about it.
>>>> 1. What is it checking?  There are no words in the message that
>>>> indicate which of my
>>>> functions is being looked at.
>>>>
>>>> I am getting 6 of these.  They are all identically worded.  sometimes
>>>> they are
>>>> NOTE ERROR WARNING
>>>>
>>>> Thanks
>>>> Rich
>>>>
>>>> 2. How can I run R CMD check, or its components, in a way that will stop
>>>> and
>>>> let me investigate from the point?  I am looking for the equivalent of
>>>> the R option
>>>> option(error=recover)
>>>
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>>


From rmh at temple.edu  Mon May 25 18:59:03 2015
From: rmh at temple.edu (Richard M. Heiberger)
Date: Mon, 25 May 2015 12:59:03 -0400
Subject: [R-pkg-devel] ERROR from R CMD check that I have never seen
	before
In-Reply-To: <5562D2DA.6070103@statistik.tu-dortmund.de>
References: <CAGx1TMC+Uf28u5QUwL9skD3e48n16EvUF6KP-adDiWtcc5e+kQ@mail.gmail.com>
	<CAGx1TMAeFvJyc09ARQ8GdpK7NwtmyTx8A=PvqoOdg+NKb2aA1Q@mail.gmail.com>
	<55607A7F.2090202@statistik.tu-dortmund.de>
	<CAGx1TMDY+YOt1eGzwitWj2Xdw00=Dyc4emhYKsgS47=j19+yeg@mail.gmail.com>
	<5562D2DA.6070103@statistik.tu-dortmund.de>
Message-ID: <CAGx1TMD34N5NnFEVQnD3Gys84MBxxDxnRiMRfb5x10U0tobM_g@mail.gmail.com>

I am still working on your suggestions.  While doing so I found a more
general concern.

I am now trapped in incompatible circular dependencies.  I don't know
how to resolve them.

The immediate specific is that ggplot2::layer and latticeExtra::layer
are incompatible.

Due to these dependencies I don't think I have control over which one
has precedence.

I depend on lattice and latticeExtra and gridExtra.
I import Hmisc and Rcmdr

Hmisc Depends:  lattice and ggplot2
Imports: latticeExtra,  gridExtra

gridExtra suggests ggplot2 and lattice

Rcmdr imports abind,
    suggests e1071, Hmisc

The message I am seeing with HH (which I cannot interpret by myself)
Error in loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()),
versionCheck = vI[[j]]) :
  there is no package called 'abind'
seems to be a consequence of importing Rcmdr.
Since I do have this package the message is confusing at best.  Can
you rephrase the message?
Perhaps by listing which specific line in which file is triggering it.

I also sometime get a similar complaint about e1071 which I don't use
at all but is suggested by Rcmdr.

I also get a complaint about TeachingDemos, which I have but don't use
in HH.  I haven't spotted
where that dependency is coming from.  However I see that
TeachingDemos suggests both lattice and ggplot2.

Rich

On Mon, May 25, 2015 at 3:44 AM, Uwe Ligges
<ligges at statistik.tu-dortmund.de> wrote:
> Two ideas:
>
> 1. Solve the first error at first:
>
> Error in loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck =
> vI[[j]]) :
>   there is no package called 'abind'
> Error: package or namespace load failed for 'HH'
> Execution halted
>
> Looks like you forgot to declare abind as an Imports in your DESCRIPTION
> file?
>
>
> 2. If you still get the other problems, please make a version of your
> package available so that someone else can check and debug this.
>
> Best,
> Uwe Ligges
>
>
>
>
>
> On 25.05.2015 05:01, Richard M. Heiberger wrote:
>>
>> The problem is still there.  I am working on both Windows and Macintosh.
>>
>> The packages I have check clean using R-3.1.2 on Windows.
>> They "INSTALL --build" and "build" using 3.3.0-devl on Windows and 3.2.0
>> on Mac,
>>
>> I downloaded R-devel for Windows this afternoon and updated to Rtools33.
>> I have attached two R CMD check log files with this combination
>> * using R Under development (unstable) (2015-05-22 r68399)
>> * using platform: i386-w64-mingw32 (32-bit)
>>
>>
>> The 3.1-15 is the version currently on CRAN.
>> It complains it can't find Hmisc.  Hmisc is installed.
>> The built package inside the Rcheck directory loads.
>> Package check results on CRAN don't show this warning.
>>
>>
>> The 3.1-17 is the version I am working on.
>> It complains it can't find abind.  abind is installed.
>> It gives 6 versions of this message.
>> Error in validObject(.Object) :
>>    invalid class "ObjectsWithPackage" object: superclass "atomicVector"
>> not defined in the environment of the object's class
>> I don't understand what is triggering them.
>> The built package inside the Rcheck directory loads.
>>
>> On Sat, May 23, 2015 at 9:02 AM, Uwe Ligges
>> <ligges at statistik.tu-dortmund.de> wrote:
>>>
>>> Can you try a more recent version of R-devel with all relevant packages
>>> you
>>> depend on re-installed?
>>>
>>> Looks like either a bug in that months old version of R-devel or an
>>> inconsistancy of installed packages and the version of the methods
>>> package
>>> or so.
>>>
>>> Best,
>>> Uwe Ligges
>>>
>>>
>>>
>>>
>>> On 23.05.2015 05:29, Richard M. Heiberger wrote:
>>>>
>>>>
>>>> followup.
>>>>
>>>> I backed up to R-3.1.2 and fixed the problems it found.
>>>> Then I tried again with R-3.2.0 and I am still getting these messages
>>>>
>>>> Error in validObject(.Object) :
>>>>     invalid class "ObjectsWithPackage" object: superclass "atomicVector"
>>>> not defined in the environment of the object's class
>>>> Calls: <Anonymous> ... metaNameUndo -> new -> initialize -> initialize
>>>> -> validObject
>>>> Execution halted
>>>>
>>>> On Fri, May 22, 2015 at 8:08 PM, Richard M. Heiberger <rmh at temple.edu>
>>>> wrote:
>>>>>
>>>>>
>>>>> I am updating the HH package and have series of messages that I don't
>>>>> recognize.
>>>>>
>>>>> bash-3.2$ R CMD check HH2
>>>>> * using log directory
>>>>> '/Users/rmh/WindowsC/HOME/rmh/HH-R.package/HH2.Rcheck'
>>>>> * using R Under development (unstable) (2015-02-12 r67812)
>>>>> * using platform: x86_64-apple-darwin13.4.0 (64-bit)
>>>>> * using session charset: ASCII
>>>>> * checking for file 'HH2/DESCRIPTION' ... OK
>>>>> * checking extension type ... Package
>>>>> * this is package 'HH' version '3.1-17'
>>>>> * checking package namespace information ... OK
>>>>> * checking package dependencies ... OK
>>>>> * checking if this is a source package ... OK
>>>>> * checking if there is a namespace ... OK
>>>>> * checking for executable files ... OK
>>>>> * checking for hidden files and directories ... NOTE
>>>>> Found the following hidden files and directories:
>>>>>     .DS_Store
>>>>>     inst/.DS_Store
>>>>> These were most likely included in error. See section 'Package
>>>>> structure' in the 'Writing R Extensions' manual.
>>>>> * checking for portable file names ... OK
>>>>> * checking for sufficient/correct file permissions ... OK
>>>>> * checking whether package 'HH' can be installed ... OK
>>>>> * checking installed package size ... OK
>>>>> * checking package directory ... OK
>>>>> * checking DESCRIPTION meta-information ... OK
>>>>> * checking top-level files ... OK
>>>>> * checking for left-over files ... OK
>>>>> * checking index information ... OK
>>>>> * checking package subdirectories ... OK
>>>>> * checking R files for non-ASCII characters ... OK
>>>>> * checking R files for syntax errors ... OK
>>>>> * checking whether the package can be loaded ... OK
>>>>> * checking whether the package can be loaded with stated dependencies
>>>>> ...
>>>>> OK
>>>>> * checking whether the package can be unloaded cleanly ... OK
>>>>> * checking whether the namespace can be loaded with stated dependencies
>>>>> ... OK
>>>>> * checking whether the namespace can be unloaded cleanly ... OK
>>>>> * checking dependencies in R code ... NOTE
>>>>> Error in validObject(.Object) :
>>>>>     invalid class "ObjectsWithPackage" object: superclass
>>>>> "atomicVector"
>>>>> not defined in the environment of the object's class
>>>>> Execution halted
>>>>>
>>>>> I have two questions about it.
>>>>> 1. What is it checking?  There are no words in the message that
>>>>> indicate which of my
>>>>> functions is being looked at.
>>>>>
>>>>> I am getting 6 of these.  They are all identically worded.  sometimes
>>>>> they are
>>>>> NOTE ERROR WARNING
>>>>>
>>>>> Thanks
>>>>> Rich
>>>>>
>>>>> 2. How can I run R CMD check, or its components, in a way that will
>>>>> stop
>>>>> and
>>>>> let me investigate from the point?  I am looking for the equivalent of
>>>>> the R option
>>>>> option(error=recover)
>>>>
>>>>
>>>>
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>
>>>
>


From ligges at statistik.tu-dortmund.de  Mon May 25 19:21:57 2015
From: ligges at statistik.tu-dortmund.de (Uwe Ligges)
Date: Mon, 25 May 2015 19:21:57 +0200
Subject: [R-pkg-devel] ERROR from R CMD check that I have never seen
	before
In-Reply-To: <CAGx1TMD34N5NnFEVQnD3Gys84MBxxDxnRiMRfb5x10U0tobM_g@mail.gmail.com>
References: <CAGx1TMC+Uf28u5QUwL9skD3e48n16EvUF6KP-adDiWtcc5e+kQ@mail.gmail.com>	<CAGx1TMAeFvJyc09ARQ8GdpK7NwtmyTx8A=PvqoOdg+NKb2aA1Q@mail.gmail.com>	<55607A7F.2090202@statistik.tu-dortmund.de>	<CAGx1TMDY+YOt1eGzwitWj2Xdw00=Dyc4emhYKsgS47=j19+yeg@mail.gmail.com>	<5562D2DA.6070103@statistik.tu-dortmund.de>
	<CAGx1TMD34N5NnFEVQnD3Gys84MBxxDxnRiMRfb5x10U0tobM_g@mail.gmail.com>
Message-ID: <55635A35.6000400@statistik.tu-dortmund.de>



On 25.05.2015 18:59, Richard M. Heiberger wrote:
> I am still working on your suggestions.  While doing so I found a more
> general concern.
>
> I am now trapped in incompatible circular dependencies.  I don't know
> how to resolve them.
>
> The immediate specific is that ggplot2::layer and latticeExtra::layer
> are incompatible.
>
> Due to these dependencies I don't think I have control over which one
> has precedence.

You have: import selectively from these packages using importFrom() 
directives rather than simple import(). So you only import the layer 
version you actually need in your package (if any).
Try to get rid of Depends and solve all dependenciy issues via imports, 
i.e. NAMESPACE directives, where possible.


> I depend on lattice and latticeExtra and gridExtra.
> I import Hmisc and Rcmdr
>
> Hmisc Depends:  lattice and ggplot2
> Imports: latticeExtra,  gridExtra
>
> gridExtra suggests ggplot2 and lattice
>
> Rcmdr imports abind,
>      suggests e1071, Hmisc
>
> The message I am seeing with HH (which I cannot interpret by myself)
> Error in loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()),
> versionCheck = vI[[j]]) :
>    there is no package called 'abind'
> seems to be a consequence of importing Rcmdr.
> Since I do have this package the message is confusing at best.  Can
> you rephrase the message?

Perhaps a bug in another package? ANyway, can you give us the HH version 
that triggers these problems?


> Perhaps by listing which specific line in which file is triggering it.
>
> I also sometime get a similar complaint about e1071 which I don't use
> at all but is suggested by Rcmdr.

If a function in e1071 that needs it is called from a function in your 
package, you may need to suggest it as well.


> I also get a complaint about TeachingDemos, which I have but don't use
> in HH.  I haven't spotted
> where that dependency is coming from.  However I see that
> TeachingDemos suggests both lattice and ggplot2.

Don't know, again, I'd need the full package in order to say more.

Best,
Uwe


> Rich
>
> On Mon, May 25, 2015 at 3:44 AM, Uwe Ligges
> <ligges at statistik.tu-dortmund.de> wrote:
>> Two ideas:
>>
>> 1. Solve the first error at first:
>>
>> Error in loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck =
>> vI[[j]]) :
>>    there is no package called 'abind'
>> Error: package or namespace load failed for 'HH'
>> Execution halted
>>
>> Looks like you forgot to declare abind as an Imports in your DESCRIPTION
>> file?
>>
>>
>> 2. If you still get the other problems, please make a version of your
>> package available so that someone else can check and debug this.
>>
>> Best,
>> Uwe Ligges
>>
>>
>>
>>
>>
>> On 25.05.2015 05:01, Richard M. Heiberger wrote:
>>>
>>> The problem is still there.  I am working on both Windows and Macintosh.
>>>
>>> The packages I have check clean using R-3.1.2 on Windows.
>>> They "INSTALL --build" and "build" using 3.3.0-devl on Windows and 3.2.0
>>> on Mac,
>>>
>>> I downloaded R-devel for Windows this afternoon and updated to Rtools33.
>>> I have attached two R CMD check log files with this combination
>>> * using R Under development (unstable) (2015-05-22 r68399)
>>> * using platform: i386-w64-mingw32 (32-bit)
>>>
>>>
>>> The 3.1-15 is the version currently on CRAN.
>>> It complains it can't find Hmisc.  Hmisc is installed.
>>> The built package inside the Rcheck directory loads.
>>> Package check results on CRAN don't show this warning.
>>>
>>>
>>> The 3.1-17 is the version I am working on.
>>> It complains it can't find abind.  abind is installed.
>>> It gives 6 versions of this message.
>>> Error in validObject(.Object) :
>>>     invalid class "ObjectsWithPackage" object: superclass "atomicVector"
>>> not defined in the environment of the object's class
>>> I don't understand what is triggering them.
>>> The built package inside the Rcheck directory loads.
>>>
>>> On Sat, May 23, 2015 at 9:02 AM, Uwe Ligges
>>> <ligges at statistik.tu-dortmund.de> wrote:
>>>>
>>>> Can you try a more recent version of R-devel with all relevant packages
>>>> you
>>>> depend on re-installed?
>>>>
>>>> Looks like either a bug in that months old version of R-devel or an
>>>> inconsistancy of installed packages and the version of the methods
>>>> package
>>>> or so.
>>>>
>>>> Best,
>>>> Uwe Ligges
>>>>
>>>>
>>>>
>>>>
>>>> On 23.05.2015 05:29, Richard M. Heiberger wrote:
>>>>>
>>>>>
>>>>> followup.
>>>>>
>>>>> I backed up to R-3.1.2 and fixed the problems it found.
>>>>> Then I tried again with R-3.2.0 and I am still getting these messages
>>>>>
>>>>> Error in validObject(.Object) :
>>>>>      invalid class "ObjectsWithPackage" object: superclass "atomicVector"
>>>>> not defined in the environment of the object's class
>>>>> Calls: <Anonymous> ... metaNameUndo -> new -> initialize -> initialize
>>>>> -> validObject
>>>>> Execution halted
>>>>>
>>>>> On Fri, May 22, 2015 at 8:08 PM, Richard M. Heiberger <rmh at temple.edu>
>>>>> wrote:
>>>>>>
>>>>>>
>>>>>> I am updating the HH package and have series of messages that I don't
>>>>>> recognize.
>>>>>>
>>>>>> bash-3.2$ R CMD check HH2
>>>>>> * using log directory
>>>>>> '/Users/rmh/WindowsC/HOME/rmh/HH-R.package/HH2.Rcheck'
>>>>>> * using R Under development (unstable) (2015-02-12 r67812)
>>>>>> * using platform: x86_64-apple-darwin13.4.0 (64-bit)
>>>>>> * using session charset: ASCII
>>>>>> * checking for file 'HH2/DESCRIPTION' ... OK
>>>>>> * checking extension type ... Package
>>>>>> * this is package 'HH' version '3.1-17'
>>>>>> * checking package namespace information ... OK
>>>>>> * checking package dependencies ... OK
>>>>>> * checking if this is a source package ... OK
>>>>>> * checking if there is a namespace ... OK
>>>>>> * checking for executable files ... OK
>>>>>> * checking for hidden files and directories ... NOTE
>>>>>> Found the following hidden files and directories:
>>>>>>      .DS_Store
>>>>>>      inst/.DS_Store
>>>>>> These were most likely included in error. See section 'Package
>>>>>> structure' in the 'Writing R Extensions' manual.
>>>>>> * checking for portable file names ... OK
>>>>>> * checking for sufficient/correct file permissions ... OK
>>>>>> * checking whether package 'HH' can be installed ... OK
>>>>>> * checking installed package size ... OK
>>>>>> * checking package directory ... OK
>>>>>> * checking DESCRIPTION meta-information ... OK
>>>>>> * checking top-level files ... OK
>>>>>> * checking for left-over files ... OK
>>>>>> * checking index information ... OK
>>>>>> * checking package subdirectories ... OK
>>>>>> * checking R files for non-ASCII characters ... OK
>>>>>> * checking R files for syntax errors ... OK
>>>>>> * checking whether the package can be loaded ... OK
>>>>>> * checking whether the package can be loaded with stated dependencies
>>>>>> ...
>>>>>> OK
>>>>>> * checking whether the package can be unloaded cleanly ... OK
>>>>>> * checking whether the namespace can be loaded with stated dependencies
>>>>>> ... OK
>>>>>> * checking whether the namespace can be unloaded cleanly ... OK
>>>>>> * checking dependencies in R code ... NOTE
>>>>>> Error in validObject(.Object) :
>>>>>>      invalid class "ObjectsWithPackage" object: superclass
>>>>>> "atomicVector"
>>>>>> not defined in the environment of the object's class
>>>>>> Execution halted
>>>>>>
>>>>>> I have two questions about it.
>>>>>> 1. What is it checking?  There are no words in the message that
>>>>>> indicate which of my
>>>>>> functions is being looked at.
>>>>>>
>>>>>> I am getting 6 of these.  They are all identically worded.  sometimes
>>>>>> they are
>>>>>> NOTE ERROR WARNING
>>>>>>
>>>>>> Thanks
>>>>>> Rich
>>>>>>
>>>>>> 2. How can I run R CMD check, or its components, in a way that will
>>>>>> stop
>>>>>> and
>>>>>> let me investigate from the point?  I am looking for the equivalent of
>>>>>> the R option
>>>>>> option(error=recover)
>>>>>
>>>>>
>>>>>
>>>>> ______________________________________________
>>>>> R-package-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>>
>>>>
>>


From rmh at temple.edu  Mon May 25 20:28:57 2015
From: rmh at temple.edu (Richard M. Heiberger)
Date: Mon, 25 May 2015 14:28:57 -0400
Subject: [R-pkg-devel] ERROR from R CMD check that I have never seen
	before
In-Reply-To: <55635C4F.8010707@statistik.tu-dortmund.de>
References: <CAGx1TMC+Uf28u5QUwL9skD3e48n16EvUF6KP-adDiWtcc5e+kQ@mail.gmail.com>
	<CAGx1TMAeFvJyc09ARQ8GdpK7NwtmyTx8A=PvqoOdg+NKb2aA1Q@mail.gmail.com>
	<55607A7F.2090202@statistik.tu-dortmund.de>
	<CAGx1TMDY+YOt1eGzwitWj2Xdw00=Dyc4emhYKsgS47=j19+yeg@mail.gmail.com>
	<5562D2DA.6070103@statistik.tu-dortmund.de>
	<CAGx1TMD34N5NnFEVQnD3Gys84MBxxDxnRiMRfb5x10U0tobM_g@mail.gmail.com>
	<55635A35.6000400@statistik.tu-dortmund.de>
	<CAGx1TMDJbONjXc5uxmqq7W_z1r_N0DuXaU4gY-_RH-2s+_qNbw@mail.gmail.com>
	<55635C4F.8010707@statistik.tu-dortmund.de>
Message-ID: <CAGx1TMCPLcY3SDnUuzqktd=hyo8unjURB_ktp4o3y6XTUOF4fQ@mail.gmail.com>

I posted three files to
http://astro.temple.edu/~rmh/HH-test/

HH_3.1-17.tar.gz  ## my development version of HH.

00check-HH-R-3.1.2.log ## it passes R-3.1.2 cleanly

00check-HH-r68399.log ## many messages that I don't understand.  Some
of them I believe are
reflections of the packages I depend or import or suggest.

Thanks
Rich


On Mon, May 25, 2015 at 1:30 PM, Uwe Ligges
<ligges at statistik.tu-dortmund.de> wrote:
>
>
> On 25.05.2015 19:28, Richard M. Heiberger wrote:
>>
>> I will send it.  what is the best way?  direct to you? posting it on my
>> website?
>
>
> Website so others can look at it as well?
>
> Best,
> Uwe
>
>
>>
>> On Mon, May 25, 2015 at 1:21 PM, Uwe Ligges
>> <ligges at statistik.tu-dortmund.de> wrote:
>>>
>>>
>>>
>>> On 25.05.2015 18:59, Richard M. Heiberger wrote:
>>>>
>>>>
>>>> I am still working on your suggestions.  While doing so I found a more
>>>> general concern.
>>>>
>>>> I am now trapped in incompatible circular dependencies.  I don't know
>>>> how to resolve them.
>>>>
>>>> The immediate specific is that ggplot2::layer and latticeExtra::layer
>>>> are incompatible.
>>>>
>>>> Due to these dependencies I don't think I have control over which one
>>>> has precedence.
>>>
>>>
>>>
>>> You have: import selectively from these packages using importFrom()
>>> directives rather than simple import(). So you only import the layer
>>> version
>>> you actually need in your package (if any).
>>> Try to get rid of Depends and solve all dependenciy issues via imports,
>>> i.e.
>>> NAMESPACE directives, where possible.
>>>
>>>
>>>> I depend on lattice and latticeExtra and gridExtra.
>>>> I import Hmisc and Rcmdr
>>>>
>>>> Hmisc Depends:  lattice and ggplot2
>>>> Imports: latticeExtra,  gridExtra
>>>>
>>>> gridExtra suggests ggplot2 and lattice
>>>>
>>>> Rcmdr imports abind,
>>>>       suggests e1071, Hmisc
>>>>
>>>> The message I am seeing with HH (which I cannot interpret by myself)
>>>> Error in loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()),
>>>> versionCheck = vI[[j]]) :
>>>>     there is no package called 'abind'
>>>> seems to be a consequence of importing Rcmdr.
>>>> Since I do have this package the message is confusing at best.  Can
>>>> you rephrase the message?
>>>
>>>
>>>
>>> Perhaps a bug in another package? ANyway, can you give us the HH version
>>> that triggers these problems?
>>>
>>>
>>>> Perhaps by listing which specific line in which file is triggering it.
>>>>
>>>> I also sometime get a similar complaint about e1071 which I don't use
>>>> at all but is suggested by Rcmdr.
>>>
>>>
>>>
>>> If a function in e1071 that needs it is called from a function in your
>>> package, you may need to suggest it as well.
>>>
>>>
>>>> I also get a complaint about TeachingDemos, which I have but don't use
>>>> in HH.  I haven't spotted
>>>> where that dependency is coming from.  However I see that
>>>> TeachingDemos suggests both lattice and ggplot2.
>>>
>>>
>>>
>>> Don't know, again, I'd need the full package in order to say more.
>>>
>>> Best,
>>> Uwe
>>>
>>>
>>>
>>>> Rich
>>>>
>>>> On Mon, May 25, 2015 at 3:44 AM, Uwe Ligges
>>>> <ligges at statistik.tu-dortmund.de> wrote:
>>>>>
>>>>>
>>>>> Two ideas:
>>>>>
>>>>> 1. Solve the first error at first:
>>>>>
>>>>> Error in loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()),
>>>>> versionCheck =
>>>>> vI[[j]]) :
>>>>>     there is no package called 'abind'
>>>>> Error: package or namespace load failed for 'HH'
>>>>> Execution halted
>>>>>
>>>>> Looks like you forgot to declare abind as an Imports in your
>>>>> DESCRIPTION
>>>>> file?
>>>>>
>>>>>
>>>>> 2. If you still get the other problems, please make a version of your
>>>>> package available so that someone else can check and debug this.
>>>>>
>>>>> Best,
>>>>> Uwe Ligges
>>>>>
>>>>>
>>>>>
>>>>>
>>>>>
>>>>> On 25.05.2015 05:01, Richard M. Heiberger wrote:
>>>>>>
>>>>>>
>>>>>>
>>>>>> The problem is still there.  I am working on both Windows and
>>>>>> Macintosh.
>>>>>>
>>>>>> The packages I have check clean using R-3.1.2 on Windows.
>>>>>> They "INSTALL --build" and "build" using 3.3.0-devl on Windows and
>>>>>> 3.2.0
>>>>>> on Mac,
>>>>>>
>>>>>> I downloaded R-devel for Windows this afternoon and updated to
>>>>>> Rtools33.
>>>>>> I have attached two R CMD check log files with this combination
>>>>>> * using R Under development (unstable) (2015-05-22 r68399)
>>>>>> * using platform: i386-w64-mingw32 (32-bit)
>>>>>>
>>>>>>
>>>>>> The 3.1-15 is the version currently on CRAN.
>>>>>> It complains it can't find Hmisc.  Hmisc is installed.
>>>>>> The built package inside the Rcheck directory loads.
>>>>>> Package check results on CRAN don't show this warning.
>>>>>>
>>>>>>
>>>>>> The 3.1-17 is the version I am working on.
>>>>>> It complains it can't find abind.  abind is installed.
>>>>>> It gives 6 versions of this message.
>>>>>> Error in validObject(.Object) :
>>>>>>      invalid class "ObjectsWithPackage" object: superclass
>>>>>> "atomicVector"
>>>>>> not defined in the environment of the object's class
>>>>>> I don't understand what is triggering them.
>>>>>> The built package inside the Rcheck directory loads.
>>>>>>
>>>>>> On Sat, May 23, 2015 at 9:02 AM, Uwe Ligges
>>>>>> <ligges at statistik.tu-dortmund.de> wrote:
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>> Can you try a more recent version of R-devel with all relevant
>>>>>>> packages
>>>>>>> you
>>>>>>> depend on re-installed?
>>>>>>>
>>>>>>> Looks like either a bug in that months old version of R-devel or an
>>>>>>> inconsistancy of installed packages and the version of the methods
>>>>>>> package
>>>>>>> or so.
>>>>>>>
>>>>>>> Best,
>>>>>>> Uwe Ligges
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>> On 23.05.2015 05:29, Richard M. Heiberger wrote:
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>> followup.
>>>>>>>>
>>>>>>>> I backed up to R-3.1.2 and fixed the problems it found.
>>>>>>>> Then I tried again with R-3.2.0 and I am still getting these
>>>>>>>> messages
>>>>>>>>
>>>>>>>> Error in validObject(.Object) :
>>>>>>>>       invalid class "ObjectsWithPackage" object: superclass
>>>>>>>> "atomicVector"
>>>>>>>> not defined in the environment of the object's class
>>>>>>>> Calls: <Anonymous> ... metaNameUndo -> new -> initialize ->
>>>>>>>> initialize
>>>>>>>> -> validObject
>>>>>>>> Execution halted
>>>>>>>>
>>>>>>>> On Fri, May 22, 2015 at 8:08 PM, Richard M. Heiberger
>>>>>>>> <rmh at temple.edu>
>>>>>>>> wrote:
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>> I am updating the HH package and have series of messages that I
>>>>>>>>> don't
>>>>>>>>> recognize.
>>>>>>>>>
>>>>>>>>> bash-3.2$ R CMD check HH2
>>>>>>>>> * using log directory
>>>>>>>>> '/Users/rmh/WindowsC/HOME/rmh/HH-R.package/HH2.Rcheck'
>>>>>>>>> * using R Under development (unstable) (2015-02-12 r67812)
>>>>>>>>> * using platform: x86_64-apple-darwin13.4.0 (64-bit)
>>>>>>>>> * using session charset: ASCII
>>>>>>>>> * checking for file 'HH2/DESCRIPTION' ... OK
>>>>>>>>> * checking extension type ... Package
>>>>>>>>> * this is package 'HH' version '3.1-17'
>>>>>>>>> * checking package namespace information ... OK
>>>>>>>>> * checking package dependencies ... OK
>>>>>>>>> * checking if this is a source package ... OK
>>>>>>>>> * checking if there is a namespace ... OK
>>>>>>>>> * checking for executable files ... OK
>>>>>>>>> * checking for hidden files and directories ... NOTE
>>>>>>>>> Found the following hidden files and directories:
>>>>>>>>>       .DS_Store
>>>>>>>>>       inst/.DS_Store
>>>>>>>>> These were most likely included in error. See section 'Package
>>>>>>>>> structure' in the 'Writing R Extensions' manual.
>>>>>>>>> * checking for portable file names ... OK
>>>>>>>>> * checking for sufficient/correct file permissions ... OK
>>>>>>>>> * checking whether package 'HH' can be installed ... OK
>>>>>>>>> * checking installed package size ... OK
>>>>>>>>> * checking package directory ... OK
>>>>>>>>> * checking DESCRIPTION meta-information ... OK
>>>>>>>>> * checking top-level files ... OK
>>>>>>>>> * checking for left-over files ... OK
>>>>>>>>> * checking index information ... OK
>>>>>>>>> * checking package subdirectories ... OK
>>>>>>>>> * checking R files for non-ASCII characters ... OK
>>>>>>>>> * checking R files for syntax errors ... OK
>>>>>>>>> * checking whether the package can be loaded ... OK
>>>>>>>>> * checking whether the package can be loaded with stated
>>>>>>>>> dependencies
>>>>>>>>> ...
>>>>>>>>> OK
>>>>>>>>> * checking whether the package can be unloaded cleanly ... OK
>>>>>>>>> * checking whether the namespace can be loaded with stated
>>>>>>>>> dependencies
>>>>>>>>> ... OK
>>>>>>>>> * checking whether the namespace can be unloaded cleanly ... OK
>>>>>>>>> * checking dependencies in R code ... NOTE
>>>>>>>>> Error in validObject(.Object) :
>>>>>>>>>       invalid class "ObjectsWithPackage" object: superclass
>>>>>>>>> "atomicVector"
>>>>>>>>> not defined in the environment of the object's class
>>>>>>>>> Execution halted
>>>>>>>>>
>>>>>>>>> I have two questions about it.
>>>>>>>>> 1. What is it checking?  There are no words in the message that
>>>>>>>>> indicate which of my
>>>>>>>>> functions is being looked at.
>>>>>>>>>
>>>>>>>>> I am getting 6 of these.  They are all identically worded.
>>>>>>>>> sometimes
>>>>>>>>> they are
>>>>>>>>> NOTE ERROR WARNING
>>>>>>>>>
>>>>>>>>> Thanks
>>>>>>>>> Rich
>>>>>>>>>
>>>>>>>>> 2. How can I run R CMD check, or its components, in a way that will
>>>>>>>>> stop
>>>>>>>>> and
>>>>>>>>> let me investigate from the point?  I am looking for the equivalent
>>>>>>>>> of
>>>>>>>>> the R option
>>>>>>>>> option(error=recover)
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>> ______________________________________________
>>>>>>>> R-package-devel at r-project.org mailing list
>>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>>>>>
>>>>>>>
>>>>>
>>>
>


From wolfgang.viechtbauer at maastrichtuniversity.nl  Tue May 26 00:13:39 2015
From: wolfgang.viechtbauer at maastrichtuniversity.nl (Viechtbauer Wolfgang (STAT))
Date: Tue, 26 May 2015 00:13:39 +0200
Subject: [R-pkg-devel] CRAN check for package on Sparc Solaris (or other
	architectures)
Message-ID: <077E31A57DA26E46AB0D493C9966AC730F0CA06259@UM-MAIL4112.unimaas.nl>

Hello All,

First of all, thanks to Martin, Hadley, and Dirk (and everybody else involved) for setting up this new mailing list. I am sure this will become a tremendous resource for package developers.

My question is in essence just a repost of what I asked on R-devel a few weeks ago:

https://stat.ethz.ch/pipermail/r-devel/2015-May/071147.html

At the time, the 'metafor' package failed CRAN checks on Sparc Solaris.

To clarify: Before I submit a new version of metafor to CRAN, I check that it passes 'R CMD check --as-cran' on R-devel (both 64- and 32-bit), R-current (whatever version this is at the time), and the oldest version of R specified under 'Depends' (which is currently 3.1.0 for the metafor package) -- so 6 checks in total. All of these checks are run on Windows (yes, shoot me).

Admittedly, I screwed up on some package tests (using the 'testthat' package) -- using a few is_identical_to() instead of expect_equivalent() comparisons -- which I shouldn't have done in the first place. But all of these passed the 6 checks that I did. Not so on Sparc Solaris though (and apparently also not on x86_64 Linux with --disable-long-double, but as far as I can tell, http://cran.r-project.org/web/checks/check_results_metafor.html does not indicate such a check).

At any rate, I try to check the package thoroughly before submitting -- but clearly not thorough enough. While my mistake was easy to remedy, the more general question is this: Is there any possibility of checking packages on various architectures, and especially Sparc Solaris, before submitting? Also, I don't know how often it happens that packages pass the various flavors of R on Windows/OSX/Linux but not on Sparc Solaris, so maybe this is really not much of an issue. But I plan on adding additional checks to the package so that code coverage is much higher -- so is CRAN itself then the only place where I can end up running all checks?

Best,
Wolfgang

--    
Wolfgang Viechtbauer, Ph.D., Statistician    
Department of Psychiatry and Neuropsychology    
School for Mental Health and Neuroscience    
Faculty of Health, Medicine, and Life Sciences    
Maastricht University, P.O. Box 616 (VIJV1)    
6200 MD Maastricht, The Netherlands    
+31 (43) 388-4170 | http://www.wvbauer.com    


From edd at debian.org  Tue May 26 01:14:20 2015
From: edd at debian.org (Dirk Eddelbuettel)
Date: Mon, 25 May 2015 18:14:20 -0500
Subject: [R-pkg-devel] CRAN check for package on Sparc Solaris (or
	other	architectures)
In-Reply-To: <077E31A57DA26E46AB0D493C9966AC730F0CA06259@UM-MAIL4112.unimaas.nl>
References: <077E31A57DA26E46AB0D493C9966AC730F0CA06259@UM-MAIL4112.unimaas.nl>
Message-ID: <21859.44236.847581.90652@max.nulle.part>


On 26 May 2015 at 00:13, Viechtbauer Wolfgang (STAT) wrote:
| Is there any possibility of checking packages on various architectures, and
| especially Sparc Solaris, before submitting?

Not that I know of (apart of course from win-builder, and related services
such as Travis CI and its kin) and at this point in time.  Especially not for
that one OS we are all haunted by. 

There {was, is, probably always will be} talk of better services.  But none
have been built so far..

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From bbolker at gmail.com  Tue May 26 00:24:54 2015
From: bbolker at gmail.com (Ben Bolker)
Date: Mon, 25 May 2015 18:24:54 -0400
Subject: [R-pkg-devel] CRAN check for package on Sparc Solaris (or other
	architectures)
In-Reply-To: <077E31A57DA26E46AB0D493C9966AC730F0CA06259@UM-MAIL4112.unimaas.nl>
References: <077E31A57DA26E46AB0D493C9966AC730F0CA06259@UM-MAIL4112.unimaas.nl>
Message-ID: <CABghstToDD3dgT0OEcAi1AOypa3Ymxi+XSu4o9tQkR3jCx6RmA@mail.gmail.com>

For what it's worth I did install a Solaris VM on one of my machines
so I could run tests.  This does seem a little over the top as a
requirement for all package developers though ... I have easy access
to MacOS and Ubuntu so I usually test there and on win-builder as
well.

In my case, I eventually found that the warnings (related to some
parallelized code) could be reproduced in batch mode but *not* in
interactive mode on Solaris, so I just gave up and disabled the tests
on Solaris via     if (Sys.info()["sysname"] != "SunOS")  (shame on me
...)

A wish-list/discussion item for the CRAN maintainers would to be add a
step to the submission process, in between pushing the button to
confirm submission to CRAN and any CRAN maintainers having to look at
the submission/interact with the submitter, would be for the CRAN
results to get posted somewhere the submitter could see them.  If
there were errors or warnings the submission would be automatically
rejected ... if there were notes the submitter would then have to add
a comment/press another button justifying that it was OK to ignore
them ... if the submission was completely clean it could automatically
go on to the CRAN maintainers ...

I don't know what the costs of this would be, beyond implementing it
in the first place. It might encourage more load on the CRAN system by
allowing developers to use it as a test rig (although the
"automatically submit to CRAN if clean" behaviour would certainly
discourage this), but it's hard for me to imagine that it wouldn't be
worth it ...


On Mon, May 25, 2015 at 6:13 PM, Viechtbauer Wolfgang (STAT)
<wolfgang.viechtbauer at maastrichtuniversity.nl> wrote:
> Hello All,
>
> First of all, thanks to Martin, Hadley, and Dirk (and everybody else involved) for setting up this new mailing list. I am sure this will become a tremendous resource for package developers.
>
> My question is in essence just a repost of what I asked on R-devel a few weeks ago:
>
> https://stat.ethz.ch/pipermail/r-devel/2015-May/071147.html
>
> At the time, the 'metafor' package failed CRAN checks on Sparc Solaris.
>
> To clarify: Before I submit a new version of metafor to CRAN, I check that it passes 'R CMD check --as-cran' on R-devel (both 64- and 32-bit), R-current (whatever version this is at the time), and the oldest version of R specified under 'Depends' (which is currently 3.1.0 for the metafor package) -- so 6 checks in total. All of these checks are run on Windows (yes, shoot me).
>
> Admittedly, I screwed up on some package tests (using the 'testthat' package) -- using a few is_identical_to() instead of expect_equivalent() comparisons -- which I shouldn't have done in the first place. But all of these passed the 6 checks that I did. Not so on Sparc Solaris though (and apparently also not on x86_64 Linux with --disable-long-double, but as far as I can tell, http://cran.r-project.org/web/checks/check_results_metafor.html does not indicate such a check).
>
> At any rate, I try to check the package thoroughly before submitting -- but clearly not thorough enough. While my mistake was easy to remedy, the more general question is this: Is there any possibility of checking packages on various architectures, and especially Sparc Solaris, before submitting? Also, I don't know how often it happens that packages pass the various flavors of R on Windows/OSX/Linux but not on Sparc Solaris, so maybe this is really not much of an issue. But I plan on adding additional checks to the package so that code coverage is much higher -- so is CRAN itself then the only place where I can end up running all checks?
>
> Best,
> Wolfgang
>
> --
> Wolfgang Viechtbauer, Ph.D., Statistician
> Department of Psychiatry and Neuropsychology
> School for Mental Health and Neuroscience
> Faculty of Health, Medicine, and Life Sciences
> Maastricht University, P.O. Box 616 (VIJV1)
> 6200 MD Maastricht, The Netherlands
> +31 (43) 388-4170 | http://www.wvbauer.com
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From bbolker at gmail.com  Tue May 26 00:27:18 2015
From: bbolker at gmail.com (Ben Bolker)
Date: Mon, 25 May 2015 18:27:18 -0400
Subject: [R-pkg-devel] CRAN check for package on Sparc Solaris (or other
	architectures)
In-Reply-To: <CABghstToDD3dgT0OEcAi1AOypa3Ymxi+XSu4o9tQkR3jCx6RmA@mail.gmail.com>
References: <077E31A57DA26E46AB0D493C9966AC730F0CA06259@UM-MAIL4112.unimaas.nl>
	<CABghstToDD3dgT0OEcAi1AOypa3Ymxi+XSu4o9tQkR3jCx6RmA@mail.gmail.com>
Message-ID: <CABghstTxDfLCPMk2K1zm5SEH9+-LvOW5XAxRsp79=6t1gU9d9A@mail.gmail.com>

Just went back and re-read the mailing list thread -- I think my VM is
Solaris x86, so doesn't address the Sparc Solaris question anyway ...

On Mon, May 25, 2015 at 6:24 PM, Ben Bolker <bbolker at gmail.com> wrote:
> For what it's worth I did install a Solaris VM on one of my machines
> so I could run tests.  This does seem a little over the top as a
> requirement for all package developers though ... I have easy access
> to MacOS and Ubuntu so I usually test there and on win-builder as
> well.
>
> In my case, I eventually found that the warnings (related to some
> parallelized code) could be reproduced in batch mode but *not* in
> interactive mode on Solaris, so I just gave up and disabled the tests
> on Solaris via     if (Sys.info()["sysname"] != "SunOS")  (shame on me
> ...)
>
> A wish-list/discussion item for the CRAN maintainers would to be add a
> step to the submission process, in between pushing the button to
> confirm submission to CRAN and any CRAN maintainers having to look at
> the submission/interact with the submitter, would be for the CRAN
> results to get posted somewhere the submitter could see them.  If
> there were errors or warnings the submission would be automatically
> rejected ... if there were notes the submitter would then have to add
> a comment/press another button justifying that it was OK to ignore
> them ... if the submission was completely clean it could automatically
> go on to the CRAN maintainers ...
>
> I don't know what the costs of this would be, beyond implementing it
> in the first place. It might encourage more load on the CRAN system by
> allowing developers to use it as a test rig (although the
> "automatically submit to CRAN if clean" behaviour would certainly
> discourage this), but it's hard for me to imagine that it wouldn't be
> worth it ...
>
>
> On Mon, May 25, 2015 at 6:13 PM, Viechtbauer Wolfgang (STAT)
> <wolfgang.viechtbauer at maastrichtuniversity.nl> wrote:
>> Hello All,
>>
>> First of all, thanks to Martin, Hadley, and Dirk (and everybody else involved) for setting up this new mailing list. I am sure this will become a tremendous resource for package developers.
>>
>> My question is in essence just a repost of what I asked on R-devel a few weeks ago:
>>
>> https://stat.ethz.ch/pipermail/r-devel/2015-May/071147.html
>>
>> At the time, the 'metafor' package failed CRAN checks on Sparc Solaris.
>>
>> To clarify: Before I submit a new version of metafor to CRAN, I check that it passes 'R CMD check --as-cran' on R-devel (both 64- and 32-bit), R-current (whatever version this is at the time), and the oldest version of R specified under 'Depends' (which is currently 3.1.0 for the metafor package) -- so 6 checks in total. All of these checks are run on Windows (yes, shoot me).
>>
>> Admittedly, I screwed up on some package tests (using the 'testthat' package) -- using a few is_identical_to() instead of expect_equivalent() comparisons -- which I shouldn't have done in the first place. But all of these passed the 6 checks that I did. Not so on Sparc Solaris though (and apparently also not on x86_64 Linux with --disable-long-double, but as far as I can tell, http://cran.r-project.org/web/checks/check_results_metafor.html does not indicate such a check).
>>
>> At any rate, I try to check the package thoroughly before submitting -- but clearly not thorough enough. While my mistake was easy to remedy, the more general question is this: Is there any possibility of checking packages on various architectures, and especially Sparc Solaris, before submitting? Also, I don't know how often it happens that packages pass the various flavors of R on Windows/OSX/Linux but not on Sparc Solaris, so maybe this is really not much of an issue. But I plan on adding additional checks to the package so that code coverage is much higher -- so is CRAN itself then the only place where I can end up running all checks?
>>
>> Best,
>> Wolfgang
>>
>> --
>> Wolfgang Viechtbauer, Ph.D., Statistician
>> Department of Psychiatry and Neuropsychology
>> School for Mental Health and Neuroscience
>> Faculty of Health, Medicine, and Life Sciences
>> Maastricht University, P.O. Box 616 (VIJV1)
>> 6200 MD Maastricht, The Netherlands
>> +31 (43) 388-4170 | http://www.wvbauer.com
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From cjoshi at waikato.ac.nz  Tue May 26 05:42:20 2015
From: cjoshi at waikato.ac.nz (Chaitanya Joshi)
Date: Tue, 26 May 2015 15:42:20 +1200
Subject: [R-pkg-devel] R CMD check getting stalled
In-Reply-To: <CAMdN6SWOZMP0NNiavYxrPi7gnbhXu4S8g2g+4C85x68ZmYPRVw@mail.gmail.com>
References: <CAMdN6SWOZMP0NNiavYxrPi7gnbhXu4S8g2g+4C85x68ZmYPRVw@mail.gmail.com>
Message-ID: <5563EB9C.2010004@waikato.ac.nz>

Hi There,

Can you please help me with this query please?
Thanks in advance,
Chaitanya

Dr. Chaitanya Joshi

Senior Lecturer,
Department of Statistics,
University of Waikato,
Hamilton, New Zealand.

Webpage: www.cms.waikato.ac.nz/~cjoshi

Office: G3.29
Phone: +64 7 838 4019

On 24/05/2015 8:48 a.m., Chaitanya Joshi wrote:
>
> Hi there,
>
> I am trying to submit a new package called Traitspace. When I run R 
> CMD check the checking seems to  stall at 'checking installed package 
> size..' and nothing happens after that... see screenshot below
>
>
> Note, until today I was working on R-3.1.0 and R CMD check was running 
> without any issues and errors or warning... however, ever since I 
> installed R-3.2.0 and changed the path, this is happening...
>
> Can you please help?
> Thanks in advance!
>
> -- 
> Dr. Chaitanya Joshi
>
> Senior Lecturer,
> Department of Statistics,
> University of Waikato.
> Office: G3.30
> Tel +64 7 838 4019


From wolfgang.viechtbauer at maastrichtuniversity.nl  Tue May 26 09:47:15 2015
From: wolfgang.viechtbauer at maastrichtuniversity.nl (Viechtbauer Wolfgang (STAT))
Date: Tue, 26 May 2015 09:47:15 +0200
Subject: [R-pkg-devel] CRAN check for package on Sparc Solaris (or other
 architectures)
In-Reply-To: <CABghstToDD3dgT0OEcAi1AOypa3Ymxi+XSu4o9tQkR3jCx6RmA@mail.gmail.com>
References: <077E31A57DA26E46AB0D493C9966AC730F0CA06259@UM-MAIL4112.unimaas.nl>
	<CABghstToDD3dgT0OEcAi1AOypa3Ymxi+XSu4o9tQkR3jCx6RmA@mail.gmail.com>
Message-ID: <077E31A57DA26E46AB0D493C9966AC730F0CA062DF@UM-MAIL4112.unimaas.nl>

Thanks for the reply, Ben.

Excluding Solaris from (some of the) tests is of course one (rather brute-force) way of circumventing the issue. And in fact, if I hadn't been able to resolve the errors, I probably would have taken that shortcut as well. On the other hand, if this would become common practice, Sparc Solaris would slowly be denigrated to a sort-of second-class architecture/OS for R, which isn't ideal either.

I really like your suggestion for adding a step to the submission process as you describe. That would be fantastic! And while it may take some effort to set something like this up initially, it may ultimately save CRAN maintainers time. I (together with another person whose package also failed some tests on Sparc Solaris) was contacted about the errors by Brian Ripley and it seemed to me that this was not an automated message. Again, I have no idea how common such issues are, but if the CRAN maintainers are writing such messages on a regular basis (and with close to 7000 packages on CRAN, this could very well be the case), it seems to me that it would make a lot of sense to set up the system so that package authors are able to spot and hopefully resolve such issues before manual intervention becomes necessary.

Then again, it's easy for me to cheer for this suggestion. And as you say, there are some potential dangers here, as such a system could be apt to abuse. But indeed, the way you describe it would probably prevent this from happening in the first place. Also, one could consider only allowing a resubmission (of a package that initially failed some checks) only once per day or every x-many hours.

At any rate, I think this is a great suggestion.

Best,
Wolfgang

> -----Original Message-----
> From: Ben Bolker [mailto:bbolker at gmail.com]
> Sent: Tuesday, May 26, 2015 00:25
> To: Viechtbauer Wolfgang (STAT)
> Cc: r-package-devel at r-project.org
> Subject: Re: [R-pkg-devel] CRAN check for package on Sparc Solaris (or
> other architectures)
> 
> For what it's worth I did install a Solaris VM on one of my machines
> so I could run tests.  This does seem a little over the top as a
> requirement for all package developers though ... I have easy access
> to MacOS and Ubuntu so I usually test there and on win-builder as
> well.
> 
> In my case, I eventually found that the warnings (related to some
> parallelized code) could be reproduced in batch mode but *not* in
> interactive mode on Solaris, so I just gave up and disabled the tests
> on Solaris via     if (Sys.info()["sysname"] != "SunOS")  (shame on me
> ...)
> 
> A wish-list/discussion item for the CRAN maintainers would to be add a
> step to the submission process, in between pushing the button to
> confirm submission to CRAN and any CRAN maintainers having to look at
> the submission/interact with the submitter, would be for the CRAN
> results to get posted somewhere the submitter could see them.  If
> there were errors or warnings the submission would be automatically
> rejected ... if there were notes the submitter would then have to add
> a comment/press another button justifying that it was OK to ignore
> them ... if the submission was completely clean it could automatically
> go on to the CRAN maintainers ...
> 
> I don't know what the costs of this would be, beyond implementing it
> in the first place. It might encourage more load on the CRAN system by
> allowing developers to use it as a test rig (although the
> "automatically submit to CRAN if clean" behaviour would certainly
> discourage this), but it's hard for me to imagine that it wouldn't be
> worth it ...
> 
> 
> On Mon, May 25, 2015 at 6:13 PM, Viechtbauer Wolfgang (STAT)
> <wolfgang.viechtbauer at maastrichtuniversity.nl> wrote:
> > Hello All,
> >
> > First of all, thanks to Martin, Hadley, and Dirk (and everybody else
> involved) for setting up this new mailing list. I am sure this will
> become a tremendous resource for package developers.
> >
> > My question is in essence just a repost of what I asked on R-devel a
> few weeks ago:
> >
> > https://stat.ethz.ch/pipermail/r-devel/2015-May/071147.html
> >
> > At the time, the 'metafor' package failed CRAN checks on Sparc Solaris.
> >
> > To clarify: Before I submit a new version of metafor to CRAN, I check
> that it passes 'R CMD check --as-cran' on R-devel (both 64- and 32-bit),
> R-current (whatever version this is at the time), and the oldest version
> of R specified under 'Depends' (which is currently 3.1.0 for the metafor
> package) -- so 6 checks in total. All of these checks are run on Windows
> (yes, shoot me).
> >
> > Admittedly, I screwed up on some package tests (using the 'testthat'
> package) -- using a few is_identical_to() instead of expect_equivalent()
> comparisons -- which I shouldn't have done in the first place. But all of
> these passed the 6 checks that I did. Not so on Sparc Solaris though (and
> apparently also not on x86_64 Linux with --disable-long-double, but as
> far as I can tell, http://cran.r-
> project.org/web/checks/check_results_metafor.html does not indicate such
> a check).
> >
> > At any rate, I try to check the package thoroughly before submitting --
> but clearly not thorough enough. While my mistake was easy to remedy, the
> more general question is this: Is there any possibility of checking
> packages on various architectures, and especially Sparc Solaris, before
> submitting? Also, I don't know how often it happens that packages pass
> the various flavors of R on Windows/OSX/Linux but not on Sparc Solaris,
> so maybe this is really not much of an issue. But I plan on adding
> additional checks to the package so that code coverage is much higher --
> so is CRAN itself then the only place where I can end up running all
> checks?
> >
> > Best,
> > Wolfgang
> >
> > --
> > Wolfgang Viechtbauer, Ph.D., Statistician
> > Department of Psychiatry and Neuropsychology
> > School for Mental Health and Neuroscience
> > Faculty of Health, Medicine, and Life Sciences
> > Maastricht University, P.O. Box 616 (VIJV1)
> > 6200 MD Maastricht, The Netherlands
> > +31 (43) 388-4170 | http://www.wvbauer.com
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel

From wolfgang.viechtbauer at maastrichtuniversity.nl  Tue May 26 10:06:06 2015
From: wolfgang.viechtbauer at maastrichtuniversity.nl (Viechtbauer Wolfgang (STAT))
Date: Tue, 26 May 2015 10:06:06 +0200
Subject: [R-pkg-devel] CRAN check for package on Sparc Solaris (or other
 architectures)
Message-ID: <077E31A57DA26E46AB0D493C9966AC730F0CA0630A@UM-MAIL4112.unimaas.nl>

I was afraid so. In some of the previous exchanges, Martyn Plummer apparently offered help, but this was for solaris-x86, not sparc.

Heck, many years ago, I used to own a SPARCstation 20 -- not that it would run Solaris 10 (need an ultrasparc for that). I even started browsing a couple days ago for places where I could get my hands on a second-hand Blade workstation or something along those lines -- if I could help with resolving issues on Sparc Solaris, I wouldn't mind helping out that way. Added bonus: If I set up the machine in my office, it would definitely help to reinforce my status as the weird stats guy that seems to be in love with his computers (some of which looks really strange). Plus the added fan noise would help to drown out anything else going on in the hallways.

Best,
Wolfgang

> -----Original Message-----
> From: Dirk Eddelbuettel [mailto:edd at debian.org]
> Sent: Tuesday, May 26, 2015 01:14
> To: Viechtbauer Wolfgang (STAT)
> Cc: r-package-devel at r-project.org
> Subject: Re: [R-pkg-devel] CRAN check for package on Sparc Solaris (or
> other architectures)
> 
> On 26 May 2015 at 00:13, Viechtbauer Wolfgang (STAT) wrote:
> | Is there any possibility of checking packages on various architectures,
> and
> | especially Sparc Solaris, before submitting?
> 
> Not that I know of (apart of course from win-builder, and related
> services such as Travis CI and its kin) and at this point in time.
> Especially not for that one OS we are all haunted by.
> 
> There {was, is, probably always will be} talk of better services.  But
> none have been built so far..
> 
> Dirk
> 
> --
> http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From cdetermanjr at gmail.com  Tue May 26 14:04:30 2015
From: cdetermanjr at gmail.com (Charles Determan)
Date: Tue, 26 May 2015 07:04:30 -0500
Subject: [R-pkg-devel] R CMD check getting stalled
In-Reply-To: <5563EB9C.2010004@waikato.ac.nz>
References: <CAMdN6SWOZMP0NNiavYxrPi7gnbhXu4S8g2g+4C85x68ZmYPRVw@mail.gmail.com>
	<5563EB9C.2010004@waikato.ac.nz>
Message-ID: <CAKxd1KOeQg_Lfturj-KJacZTgNQ243ais7CSV2ofHJ2SGFTv2g@mail.gmail.com>

Hi Chaitanya,

That is strange the R CMD check is stalling but there didn't appear to be
any attached screenshot.  I would be also beneficial if we could see/access
your source code.  Is your package hosted on GitHub or a similar service?

Regards,
Charles

On Mon, May 25, 2015 at 10:42 PM, Chaitanya Joshi <cjoshi at waikato.ac.nz>
wrote:

> Hi There,
>
> Can you please help me with this query please?
> Thanks in advance,
> Chaitanya
>
> Dr. Chaitanya Joshi
>
> Senior Lecturer,
> Department of Statistics,
> University of Waikato,
> Hamilton, New Zealand.
>
> Webpage: www.cms.waikato.ac.nz/~cjoshi
>
> Office: G3.29
> Phone: +64 7 838 4019
>
> On 24/05/2015 8:48 a.m., Chaitanya Joshi wrote:
>
>>
>> Hi there,
>>
>> I am trying to submit a new package called Traitspace. When I run R CMD
>> check the checking seems to  stall at 'checking installed package size..'
>> and nothing happens after that... see screenshot below
>>
>>
>> Note, until today I was working on R-3.1.0 and R CMD check was running
>> without any issues and errors or warning... however, ever since I installed
>> R-3.2.0 and changed the path, this is happening...
>>
>> Can you please help?
>> Thanks in advance!
>>
>> --
>> Dr. Chaitanya Joshi
>>
>> Senior Lecturer,
>> Department of Statistics,
>> University of Waikato.
>> Office: G3.30
>> Tel +64 7 838 4019
>>
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From pieter.eendebak at gmail.com  Tue May 26 15:55:10 2015
From: pieter.eendebak at gmail.com (Pieter Eendebak)
Date: Tue, 26 May 2015 15:55:10 +0200
Subject: [R-pkg-devel] stdout in R package
Message-ID: <CA+j_vEr3MOTZtPxD0tcLbH4=zOErhJpa54M7VTd5ig3Y8FCA+g@mail.gmail.com>

Dear developers,

For an R package I am including some code I have written previously which
uses stdout, stderr and printf. The command R CMD check [packagename] gives
me warnings about these items. What is the proper way to print output in an
R package?

The documentation mentions that output is shpuld be written to the console.
Does this mean printing using printf only?

In my code I have several constructions like:

void print_structure(FILE *fid, object_t object);
void print_structure(object_t object) {
   print_structure(stdout, object);
}
void print_structure(const char *filename, object_t object) {
   FILE *fid = fopen(filename, 'wt');
   print_structure(fid, object);
   fclose(fid);
}

How can I keep using this code in R without duplicating the print_structure
function (once for output to console, and once for output to file)?

With kind regards,
Pieter Eendebak

	[[alternative HTML version deleted]]


From csardi.gabor at gmail.com  Tue May 26 17:20:25 2015
From: csardi.gabor at gmail.com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Tue, 26 May 2015 11:20:25 -0400
Subject: [R-pkg-devel] stdout in R package
In-Reply-To: <CA+j_vEr3MOTZtPxD0tcLbH4=zOErhJpa54M7VTd5ig3Y8FCA+g@mail.gmail.com>
References: <CA+j_vEr3MOTZtPxD0tcLbH4=zOErhJpa54M7VTd5ig3Y8FCA+g@mail.gmail.com>
Message-ID: <CABtg=K=AZZQG-o-3G448KgFhCt158vfMO2+1=j91+4p=xLv+Lg@mail.gmail.com>

Hi Pieter,

search for 'Rprintf' in the 'Writing R extensions' manual:
http://cran.r-project.org/doc/manuals/r-release/R-exts.html

Gabor

On Tue, May 26, 2015 at 9:55 AM, Pieter Eendebak <pieter.eendebak at gmail.com>
wrote:

> Dear developers,
>
> For an R package I am including some code I have written previously which
> uses stdout, stderr and printf. The command R CMD check [packagename] gives
> me warnings about these items. What is the proper way to print output in an
> R package?
>
> The documentation mentions that output is shpuld be written to the console.
> Does this mean printing using printf only?
>
> In my code I have several constructions like:
>
> void print_structure(FILE *fid, object_t object);
> void print_structure(object_t object) {
>    print_structure(stdout, object);
> }
> void print_structure(const char *filename, object_t object) {
>    FILE *fid = fopen(filename, 'wt');
>    print_structure(fid, object);
>    fclose(fid);
> }
>
> How can I keep using this code in R without duplicating the print_structure
> function (once for output to console, and once for output to file)?
>
> With kind regards,
> Pieter Eendebak
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From edd at debian.org  Tue May 26 17:33:57 2015
From: edd at debian.org (Dirk Eddelbuettel)
Date: Tue, 26 May 2015 10:33:57 -0500
Subject: [R-pkg-devel] R CMD check getting stalled
In-Reply-To: <CAKxd1KOeQg_Lfturj-KJacZTgNQ243ais7CSV2ofHJ2SGFTv2g@mail.gmail.com>
References: <CAMdN6SWOZMP0NNiavYxrPi7gnbhXu4S8g2g+4C85x68ZmYPRVw@mail.gmail.com>
	<5563EB9C.2010004@waikato.ac.nz>
	<CAKxd1KOeQg_Lfturj-KJacZTgNQ243ais7CSV2ofHJ2SGFTv2g@mail.gmail.com>
Message-ID: <21860.37477.484542.545452@max.nulle.part>


On 26 May 2015 at 07:04, Charles Determan wrote:
| That is strange the R CMD check is stalling but there didn't appear to be
| any attached screenshot.  I would be also beneficial if we could see/access

We don't do screenshots, and we don't do html email.

| your source code.  Is your package hosted on GitHub or a similar service?

Better approach, and praying that some kind volunteer helps...

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From ligges at statistik.tu-dortmund.de  Tue May 26 18:00:10 2015
From: ligges at statistik.tu-dortmund.de (Uwe Ligges)
Date: Tue, 26 May 2015 18:00:10 +0200
Subject: [R-pkg-devel] R CMD check getting stalled
In-Reply-To: <21860.37477.484542.545452@max.nulle.part>
References: <CAMdN6SWOZMP0NNiavYxrPi7gnbhXu4S8g2g+4C85x68ZmYPRVw@mail.gmail.com>	<5563EB9C.2010004@waikato.ac.nz>	<CAKxd1KOeQg_Lfturj-KJacZTgNQ243ais7CSV2ofHJ2SGFTv2g@mail.gmail.com>
	<21860.37477.484542.545452@max.nulle.part>
Message-ID: <5564988A.8040508@statistik.tu-dortmund.de>



On 26.05.2015 17:33, Dirk Eddelbuettel wrote:
>
> On 26 May 2015 at 07:04, Charles Determan wrote:
> | That is strange the R CMD check is stalling but there didn't appear to be
> | any attached screenshot.  I would be also beneficial if we could see/access
>
> We don't do screenshots, and we don't do html email.
>
> | your source code.  Is your package hosted on GitHub or a similar service?
>
> Better approach, and praying that some kind volunteer helps...
>
> Dirk
>


Wild guess: It's not the package but the file system or file permissions 
so that you cannot determine the size.

Best,
Uwe Ligges


From Roger.Bivand at nhh.no  Tue May 26 21:14:06 2015
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Tue, 26 May 2015 21:14:06 +0200
Subject: [R-pkg-devel]  how to call PROJ.4 C code in a package?
Message-ID: <alpine.LFD.2.11.1505262051240.29332@reclus.nhh.no>

Dan,

I'm sorry to be late to the party (one is offline occasionally), but all 
the advice given so far is at best only partially correct.

Use of PROJ.4 is crucially conditional on access to PROJ_LIB a shell 
variable setting the address of metadata files not included in the C 
source. PROJ.4 without this access is very limited, not least because the 
EPSG listing of projections is not available, not to mention a small file 
of default values that recently floored rgdal and other packages using its 
PROJ.4 facilities (PROJ.4 4.9.1 omitted the file by mistake).

At present, oce does not ship with PROJ_LIB at all. I agree that it does 
not need to ship with the PROJ.4 C source, and should, like rgdal and 
proj4, use the system PROJ.4 (or the CRAN PROJ.4). Only rgdal checks in 
./configure for settings related to PROJ_LIB. Using PROJ.4 externally 
makes sense because of version shifting and missed bug fixes (there were 
some bad bugs before the aborted 4.9.0 release), and crucially updated 
metadata files. Using a single PROJ.4 on a platform avoids different 
applications seeing possibly different metadata.

My guess would be that anything you might need to do can be done using 
function stubs exported by rgdal for use in raster (the package). You are 
free to choose not to use sp objects, but you'll find that the high-level 
support for these in rgdal is robust and well-motivated.

If you go for the proj4 rather than rgdal solution, do make sure that the 
CRAN Windows and OSX binaries are built with the metadata PROJ_LIB copied 
to the binary packages.

Again, apologies for not jumping in at the right time.

Roger

PS. Please also note that PROJ.4 is moving to

https://github.com/OSGeo/proj.4

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; fax +47 55 95 91 00
e-mail: Roger.Bivand at nhh.no


From Dan.Kelley at Dal.Ca  Tue May 26 23:53:43 2015
From: Dan.Kelley at Dal.Ca (Daniel Kelley)
Date: Tue, 26 May 2015 21:53:43 +0000
Subject: [R-pkg-devel] how to call PROJ.4 C code in a package?
In-Reply-To: <alpine.LFD.2.11.1505262051240.29332@reclus.nhh.no>
References: <alpine.LFD.2.11.1505262051240.29332@reclus.nhh.no>
Message-ID: <85186A70-282D-49A2-8C3A-188C84A7CAD1@dal.ca>

Roger,

I plan to make the next version of oce use rgdal::project() to do its work. The idea of using an external PROJ.4 is fine in my own work, but oce has a lot of users who are unaccustomed to building and installing external libraries. Also, many work at institutes that do not permit this kind of system modification. So, for oce I had to make a choice of including the C sources or using another package.

At first I felt the proj4 R package to be a natural candidate. However, it produces an error when any point in a lon-lat vector is ?offscale?, instead of inserting NA for the projected value. Indexing over a world coastline is too slow for practical work.

Over the weekend I set up a test version of oce to use rgdal::project(), and it?s early days but things seem to be working well.

I need to study the ?sp? package in more detail.  Maybe I?ll find the solution to a problem ?oce? has when lines in a coastal polygon ?cross over? the edge of the earth. This produces spurious domain-crossing lines when e.g. lon_0 is set to put the Pacific at the centre (a common choice of oceanographers).

Thanks VERY much for your detailed and helpful answer.  And thanks for your work on ?rgdal? and ?sp?, two very fine packages.

? Dan.

PS. glad to see more software going to github.

Dan Kelley
Oceanography Department
Dalhousie University
Halifax, NS, Canada

> On May 26, 2015, at 4:14 PM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
> 
> Dan,
> 
> I'm sorry to be late to the party (one is offline occasionally), but all the advice given so far is at best only partially correct.
> 
> Use of PROJ.4 is crucially conditional on access to PROJ_LIB a shell variable setting the address of metadata files not included in the C source. PROJ.4 without this access is very limited, not least because the EPSG listing of projections is not available, not to mention a small file of default values that recently floored rgdal and other packages using its PROJ.4 facilities (PROJ.4 4.9.1 omitted the file by mistake).
> 
> At present, oce does not ship with PROJ_LIB at all. I agree that it does not need to ship with the PROJ.4 C source, and should, like rgdal and proj4, use the system PROJ.4 (or the CRAN PROJ.4). Only rgdal checks in ./configure for settings related to PROJ_LIB. Using PROJ.4 externally makes sense because of version shifting and missed bug fixes (there were some bad bugs before the aborted 4.9.0 release), and crucially updated metadata files. Using a single PROJ.4 on a platform avoids different applications seeing possibly different metadata.
> 
> My guess would be that anything you might need to do can be done using function stubs exported by rgdal for use in raster (the package). You are free to choose not to use sp objects, but you'll find that the high-level support for these in rgdal is robust and well-motivated.
> 
> If you go for the proj4 rather than rgdal solution, do make sure that the CRAN Windows and OSX binaries are built with the metadata PROJ_LIB copied to the binary packages.
> 
> Again, apologies for not jumping in at the right time.
> 
> Roger
> 
> PS. Please also note that PROJ.4 is moving to
> 
> https://github.com/OSGeo/proj.4
> 
> -- 
> Roger Bivand
> Department of Economics, Norwegian School of Economics,
> Helleveien 30, N-5045 Bergen, Norway.
> voice: +47 55 95 93 55; fax +47 55 95 91 00
> e-mail: Roger.Bivand at nhh.no
> 







From cjoshi at waikato.ac.nz  Wed May 27 01:18:27 2015
From: cjoshi at waikato.ac.nz (Chaitanya Joshi)
Date: Wed, 27 May 2015 11:18:27 +1200
Subject: [R-pkg-devel] R CMD check getting stalled
In-Reply-To: <5564988A.8040508@statistik.tu-dortmund.de>
References: <CAMdN6SWOZMP0NNiavYxrPi7gnbhXu4S8g2g+4C85x68ZmYPRVw@mail.gmail.com>
	<5563EB9C.2010004@waikato.ac.nz>
	<CAKxd1KOeQg_Lfturj-KJacZTgNQ243ais7CSV2ofHJ2SGFTv2g@mail.gmail.com>
	<21860.37477.484542.545452@max.nulle.part>
	<5564988A.8040508@statistik.tu-dortmund.de>
Message-ID: <5564FF43.20303@waikato.ac.nz>

Hi all,

Thanks for your suggestions.

1. As I said, the the same package code was running was R.3.1.2 earlier 
and giving no errors... so not sure if it has to do with the package code
2. We checked the permissions issue, with the admin running it and it 
still stalled at the same place
3. Finally, the problem was solved by using the 32-bit platform - it was 
using a 64bit platform and that's apparently why the package was 
stalling (mystery!

We switched the platform to 32-bit and it is now working fine without 
any errors...
Thanks,
Chaitanya

Dr. Chaitanya Joshi

Senior Lecturer,
Department of Statistics,
University of Waikato,
Hamilton, New Zealand.

Webpage: www.cms.waikato.ac.nz/~cjoshi

Office: G3.29
Phone: +64 7 838 4019

On 27/05/2015 4:00 a.m., Uwe Ligges wrote:
>
>
> On 26.05.2015 17:33, Dirk Eddelbuettel wrote:
>>
>> On 26 May 2015 at 07:04, Charles Determan wrote:
>> | That is strange the R CMD check is stalling but there didn't appear 
>> to be
>> | any attached screenshot.  I would be also beneficial if we could 
>> see/access
>>
>> We don't do screenshots, and we don't do html email.
>>
>> | your source code.  Is your package hosted on GitHub or a similar 
>> service?
>>
>> Better approach, and praying that some kind volunteer helps...
>>
>> Dirk
>>
>
>
> Wild guess: It's not the package but the file system or file 
> permissions so that you cannot determine the size.
>
> Best,
> Uwe Ligges


From Roger.Bivand at nhh.no  Wed May 27 08:36:03 2015
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Wed, 27 May 2015 08:36:03 +0200
Subject: [R-pkg-devel] how to call PROJ.4 C code in a package?
In-Reply-To: <85186A70-282D-49A2-8C3A-188C84A7CAD1@dal.ca>
References: <alpine.LFD.2.11.1505262051240.29332@reclus.nhh.no>
	<85186A70-282D-49A2-8C3A-188C84A7CAD1@dal.ca>
Message-ID: <alpine.LFD.2.11.1505270826420.4421@reclus.nhh.no>

On Tue, 26 May 2015, Daniel Kelley wrote:

> Roger,
>
> I plan to make the next version of oce use rgdal::project() to do its 
> work. The idea of using an external PROJ.4 is fine in my own work, but 
> oce has a lot of users who are unaccustomed to building and installing 
> external libraries. Also, many work at institutes that do not permit 
> this kind of system modification. So, for oce I had to make a choice of 
> including the C sources or using another package.

Dan,

(while this might seem very specialised, it's actually an example of a 
typical package development problem, that of accessing facilities in one 
package from another).

I suggest using rgdal::rawTransform() instead of rgdal::project(), because 
it calls the PROJ.4 pj_transform, rather than pj_fwd or pj_inv, and so 
permitting datum transformation. rgdal::rawTransform() was contributed to 
rgdal by Robert Hijmans to make it easier to write code in the raster 
package using rgdal facilities; it is in rgdal/R/wrappers.R. Look at how 
Robert handles the import from the rgdal NAMESPACE into raster.

Roger

PS. I'm afraid that there isn't an easy solution to the wrap-around on the 
back of the globe - most of the fixes involve breaking geometries on the 
"other" side to work around the problem.

>
> At first I felt the proj4 R package to be a natural candidate. However, 
> it produces an error when any point in a lon-lat vector is ?offscale?, 
> instead of inserting NA for the projected value. Indexing over a world 
> coastline is too slow for practical work.
>
> Over the weekend I set up a test version of oce to use rgdal::project(), 
> and it?s early days but things seem to be working well.
>
> I need to study the ?sp? package in more detail.  Maybe I?ll find the 
> solution to a problem ?oce? has when lines in a coastal polygon ?cross 
> over? the edge of the earth. This produces spurious domain-crossing 
> lines when e.g. lon_0 is set to put the Pacific at the centre (a common 
> choice of oceanographers).
>
> Thanks VERY much for your detailed and helpful answer.  And thanks for 
> your work on ?rgdal? and ?sp?, two very fine packages.
>
> ? Dan.
>
> PS. glad to see more software going to github.
>
> Dan Kelley
> Oceanography Department
> Dalhousie University
> Halifax, NS, Canada
>
>> On May 26, 2015, at 4:14 PM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
>>
>> Dan,
>>
>> I'm sorry to be late to the party (one is offline occasionally), but all the advice given so far is at best only partially correct.
>>
>> Use of PROJ.4 is crucially conditional on access to PROJ_LIB a shell variable setting the address of metadata files not included in the C source. PROJ.4 without this access is very limited, not least because the EPSG listing of projections is not available, not to mention a small file of default values that recently floored rgdal and other packages using its PROJ.4 facilities (PROJ.4 4.9.1 omitted the file by mistake).
>>
>> At present, oce does not ship with PROJ_LIB at all. I agree that it does not need to ship with the PROJ.4 C source, and should, like rgdal and proj4, use the system PROJ.4 (or the CRAN PROJ.4). Only rgdal checks in ./configure for settings related to PROJ_LIB. Using PROJ.4 externally makes sense because of version shifting and missed bug fixes (there were some bad bugs before the aborted 4.9.0 release), and crucially updated metadata files. Using a single PROJ.4 on a platform avoids different applications seeing possibly different metadata.
>>
>> My guess would be that anything you might need to do can be done using function stubs exported by rgdal for use in raster (the package). You are free to choose not to use sp objects, but you'll find that the high-level support for these in rgdal is robust and well-motivated.
>>
>> If you go for the proj4 rather than rgdal solution, do make sure that the CRAN Windows and OSX binaries are built with the metadata PROJ_LIB copied to the binary packages.
>>
>> Again, apologies for not jumping in at the right time.
>>
>> Roger
>>
>> PS. Please also note that PROJ.4 is moving to
>>
>> https://github.com/OSGeo/proj.4
>>
>> --
>> Roger Bivand
>> Department of Economics, Norwegian School of Economics,
>> Helleveien 30, N-5045 Bergen, Norway.
>> voice: +47 55 95 93 55; fax +47 55 95 91 00
>> e-mail: Roger.Bivand at nhh.no
>>
>
>
>
>
>
>
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; fax +47 55 95 91 00
e-mail: Roger.Bivand at nhh.no

From rmh at temple.edu  Thu May 28 15:19:41 2015
From: rmh at temple.edu (Richard M. Heiberger)
Date: Thu, 28 May 2015 09:19:41 -0400
Subject: [R-pkg-devel] trivial package with R CMD check ERRORs that seem
 unrelated to package contents
Message-ID: <CAGx1TMAQ0aJ9NQVGFcfpyC5MA_TjnHeitWhBzT+BfSvbkQgR2A@mail.gmail.com>

I posted a package
    trivial_3.1-18.tar.gz
and the
    00check-trivial.log
from R-devel at

     http://astro.temple.edu/~rmh/HH-test/

The package contains one function
trivial <- function(...) {}
and a NAMESPACE that imports other packages.

The 00check-trivial.log has many messages that look like they depend
on aspects of the imported packages, including five of these
    Error in validObject(.Object) :

I need guidance on how to respond to these.

My real package
    HH_3.1-17.tar.gz
is also there along with a clean check log from R-3.1.2 and a check log
I don't understand from R-devel.

Thanks
Rich


From murdoch.duncan at gmail.com  Thu May 28 16:10:04 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Thu, 28 May 2015 10:10:04 -0400
Subject: [R-pkg-devel] trivial package with R CMD check ERRORs that seem
 unrelated to package contents
In-Reply-To: <CAGx1TMAQ0aJ9NQVGFcfpyC5MA_TjnHeitWhBzT+BfSvbkQgR2A@mail.gmail.com>
References: <CAGx1TMAQ0aJ9NQVGFcfpyC5MA_TjnHeitWhBzT+BfSvbkQgR2A@mail.gmail.com>
Message-ID: <556721BC.8080409@gmail.com>

On 28/05/2015 9:19 AM, Richard M. Heiberger wrote:
> I posted a package
>      trivial_3.1-18.tar.gz
> and the
>      00check-trivial.log
> from R-devel at
>
>       http://astro.temple.edu/~rmh/HH-test/
>
> The package contains one function
> trivial <- function(...) {}
> and a NAMESPACE that imports other packages.
>
> The 00check-trivial.log has many messages that look like they depend
> on aspects of the imported packages, including five of these
>      Error in validObject(.Object) :
>
> I need guidance on how to respond to these.
>
> My real package
>      HH_3.1-17.tar.gz
> is also there along with a clean check log from R-3.1.2 and a check log
> I don't understand from R-devel.

You're importing a lot of packages.  I think the first set of warnings

* checking whether package 'trivial' can be installed ... WARNING
Found the following significant warnings:
   Warning: replacing previous import by 'shiny::radioButtons' when loading 'trivial'
   Warning: replacing previous import by 'stats::dbinom' when loading 'trivial'
   Warning: replacing previous import by 'stats::pnorm' when loading 'trivial'
   Warning: replacing previous import by 'stats::dnorm' when loading 'trivial'
   Warning: replacing previous import by 'stats::dpois' when loading 'trivial'
   Warning: replacing previous import by 'latticeExtra::rootogram' when loading 'trivial'

could mean what they say: you already have a function called 
radioButtons imported,  and shiny::radioButtons is masking it, and 
similarly for the other warnings. Or it could be a bug in R-devel. If it 
really is a case of masking, the solution is probably to import less:  
just name the functions you really need, don't import everything.

The error

Error in loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]]) :
   there is no package called 'e1071'
Error: package or namespace load failed for 'trivial'
Execution halted


appears to be clear. You don't import e1071, but presumably one of your 
imports does,  and you don't have it.

I would guess the reason you didn't get the warnings previously is 
because it's a new check, and you didn't get the error because you did 
have e1071, or you were using different versions of the imported 
packages, and they didn't need it.

The errors like

Error in validObject(.Object) :
   invalid class "ObjectsWithPackage" object: superclass "atomicVector" not defined in the environment of the object's class
Execution halted


could be a bug in R-devel, or perhaps they are caused by using old 
versions of packages rather than reinstalling them for R-devel. I'm not 
sure what your response should be to these.   You could try 
install.packages() on all the dependencies just to be sure you have the 
latest builds; If they're an R-devel bug, they'll probably go away soon.

Duncan Murdoch


From rmh at temple.edu  Thu May 28 17:04:54 2015
From: rmh at temple.edu (Richard M. Heiberger)
Date: Thu, 28 May 2015 11:04:54 -0400
Subject: [R-pkg-devel] trivial package with R CMD check ERRORs that seem
 unrelated to package contents
In-Reply-To: <556721BC.8080409@gmail.com>
References: <CAGx1TMAQ0aJ9NQVGFcfpyC5MA_TjnHeitWhBzT+BfSvbkQgR2A@mail.gmail.com>
	<556721BC.8080409@gmail.com>
Message-ID: <CAGx1TMCuLPD261RtzXzqaCrLg+2yZs58GXVaRKcHpGXWdMF7LA@mail.gmail.com>

These "Error in validObject(.Object) : messages started appearing with
* using R Under development (unstable) (2015-02-12 r67812)
and are in the released R-3.2.0

I am seeing it now because I last posted HH_3.1-15 to CRAN in February
and have mostly
used R CMD INSTALL --build until now for my updates.  now I am getting
ready to send another
revision to CRAN and these errors, some of which appear to me to
depend on conflicts between other
packages, are keeping my package from passing the check.

On the e1071, I do have it. I am not using it here. Some other package
is doing something with it.
Rcmdr suggests e1071.
The line just following the error on e1071 says
     It looks like this package has a loading problem when not on .libPaths:

Please look at the thread on this list "ERROR from R CMD check that I
have never seen before",
particularly my message "Mon, May 25, 2015 at 12:59 PM", where I
indicate some of the conflicts I know about.

On the R-devel, I installed it from scratch and all packages are
consistent with that date.

I find the messages "Error in validObject(.Object) :" to be
noninformative.  Can you revise them to
indicate what line in what function triggered them?

I am certainly willing to do more selective imports.  I would like the
check to give me more information on which.

Here is another example (not in the posted checks)

* checking replacement functions ... WARNING
Error in validObject(.Object) :
  invalid class "ObjectsWithPackage" object: superclass "atomicVector"
not defined in the environment of the object's class
Calls: <Anonymous> ... metaNameUndo -> new -> initialize -> initialize
-> validObject
Execution halted
The argument of a replacement function which corresponds to the right
hand side must be named 'value'.

I checked my assignments.  They are ok.  I think this message is
coming from some function in some package
that was indirectly loaded or imported.  I don't know which.  I don't
know how to find out which.
ls(pat="<-") doesn't see inside namespaces.

On Thu, May 28, 2015 at 10:10 AM, Duncan Murdoch
<murdoch.duncan at gmail.com> wrote:
> On 28/05/2015 9:19 AM, Richard M. Heiberger wrote:
>>
>> I posted a package
>>      trivial_3.1-18.tar.gz
>> and the
>>      00check-trivial.log
>> from R-devel at
>>
>>       http://astro.temple.edu/~rmh/HH-test/
>>
>> The package contains one function
>> trivial <- function(...) {}
>> and a NAMESPACE that imports other packages.
>>
>> The 00check-trivial.log has many messages that look like they depend
>> on aspects of the imported packages, including five of these
>>      Error in validObject(.Object) :
>>
>> I need guidance on how to respond to these.
>>
>> My real package
>>      HH_3.1-17.tar.gz
>> is also there along with a clean check log from R-3.1.2 and a check log
>> I don't understand from R-devel.
>
>
> You're importing a lot of packages.  I think the first set of warnings
>
> * checking whether package 'trivial' can be installed ... WARNING
> Found the following significant warnings:
>   Warning: replacing previous import by 'shiny::radioButtons' when loading
> 'trivial'
>   Warning: replacing previous import by 'stats::dbinom' when loading
> 'trivial'
>   Warning: replacing previous import by 'stats::pnorm' when loading
> 'trivial'
>   Warning: replacing previous import by 'stats::dnorm' when loading
> 'trivial'
>   Warning: replacing previous import by 'stats::dpois' when loading
> 'trivial'
>   Warning: replacing previous import by 'latticeExtra::rootogram' when
> loading 'trivial'
>
> could mean what they say: you already have a function called radioButtons
> imported,  and shiny::radioButtons is masking it, and similarly for the
> other warnings. Or it could be a bug in R-devel. If it really is a case of
> masking, the solution is probably to import less:  just name the functions
> you really need, don't import everything.
>
> The error
>
> Error in loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck =
> vI[[j]]) :
>   there is no package called 'e1071'
> Error: package or namespace load failed for 'trivial'
> Execution halted
>
>
> appears to be clear. You don't import e1071, but presumably one of your
> imports does,  and you don't have it.
>
> I would guess the reason you didn't get the warnings previously is because
> it's a new check, and you didn't get the error because you did have e1071,
> or you were using different versions of the imported packages, and they
> didn't need it.
>
> The errors like
>
> Error in validObject(.Object) :
>   invalid class "ObjectsWithPackage" object: superclass "atomicVector" not
> defined in the environment of the object's class
> Execution halted
>
>
> could be a bug in R-devel, or perhaps they are caused by using old versions
> of packages rather than reinstalling them for R-devel. I'm not sure what
> your response should be to these.   You could try install.packages() on all
> the dependencies just to be sure you have the latest builds; If they're an
> R-devel bug, they'll probably go away soon.
>
> Duncan Murdoch
>
>


From cdetermanjr at gmail.com  Thu May 28 17:48:19 2015
From: cdetermanjr at gmail.com (Charles Determan)
Date: Thu, 28 May 2015 10:48:19 -0500
Subject: [R-pkg-devel] Extending MIT software
Message-ID: <CAKxd1KM+o5fQ7P6TRrFd6YKUWtdVZTdEUDBNsVaSB8MxETqXmA@mail.gmail.com>

When developing a new package we want to have a license attributed to that
package.  That said, I am a little confused how one would approach the MIT
license.  I am working on a package that extends upon another library that
has the MIT license.  I know that I need to create a LICENSE file with YEAR
and COPYRIGHT HOLDER.

My question is, would the copyright holder be just the authors for this
given R package or a combination of the R package authors and the original
library authors?

Regards,
Charles

	[[alternative HTML version deleted]]


From nfultz at gmail.com  Thu May 28 19:10:27 2015
From: nfultz at gmail.com (Neal Fultz)
Date: Thu, 28 May 2015 10:10:27 -0700
Subject: [R-pkg-devel] Extending MIT software
In-Reply-To: <CAKxd1KM+o5fQ7P6TRrFd6YKUWtdVZTdEUDBNsVaSB8MxETqXmA@mail.gmail.com>
References: <CAKxd1KM+o5fQ7P6TRrFd6YKUWtdVZTdEUDBNsVaSB8MxETqXmA@mail.gmail.com>
Message-ID: <CAL9B2vf69j7odvSy6GEtg-SExxmMhwfQ9S1gW-ZjOd_vEuBVjg@mail.gmail.com>

IANAL, but if you are just importing or depending on another package, you
shouldn't need to worry about this. If you
copied their code into your own package, you should probably rethink your
approach.

At my job, several of my coworkers had copy/pasted code from stack
overflow, which carries a CC license. This is
hypothetically a problem if anyone ever tried to buy our code base or
company. To clean it up, I moved all of the functions
 into a separate stackoverflow package which had the correct license and
attribution.




On Thu, May 28, 2015 at 8:48 AM, Charles Determan <cdetermanjr at gmail.com>
wrote:

> When developing a new package we want to have a license attributed to that
> package.  That said, I am a little confused how one would approach the MIT
> license.  I am working on a package that extends upon another library that
> has the MIT license.  I know that I need to create a LICENSE file with YEAR
> and COPYRIGHT HOLDER.
>
> My question is, would the copyright holder be just the authors for this
> given R package or a combination of the R package authors and the original
> library authors?
>
> Regards,
> Charles
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From csardi.gabor at gmail.com  Thu May 28 19:40:30 2015
From: csardi.gabor at gmail.com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Thu, 28 May 2015 13:40:30 -0400
Subject: [R-pkg-devel] Extending MIT software
In-Reply-To: <CAKxd1KM+o5fQ7P6TRrFd6YKUWtdVZTdEUDBNsVaSB8MxETqXmA@mail.gmail.com>
References: <CAKxd1KM+o5fQ7P6TRrFd6YKUWtdVZTdEUDBNsVaSB8MxETqXmA@mail.gmail.com>
Message-ID: <CABtg=KmxT_OQRqphAJRio11YOGrLj8CiMfDuXBWf+1QpNON3mw@mail.gmail.com>

IANAL, too, but if you are indeed extending (i.e. embedding or
copying) another package, then you need to put all copyright holders
into the LICENSE file.

In the individual files, you can explain who has the copyright for
what. If you don't change the copied files at all, that is simple,
just add yourself as copyright holder to the new files you create.

Gabor

On Thu, May 28, 2015 at 11:48 AM, Charles Determan
<cdetermanjr at gmail.com> wrote:
> When developing a new package we want to have a license attributed to that
> package.  That said, I am a little confused how one would approach the MIT
> license.  I am working on a package that extends upon another library that
> has the MIT license.  I know that I need to create a LICENSE file with YEAR
> and COPYRIGHT HOLDER.
>
> My question is, would the copyright holder be just the authors for this
> given R package or a combination of the R package authors and the original
> library authors?
>
> Regards,
> Charles
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From h.wickham at gmail.com  Thu May 28 23:02:00 2015
From: h.wickham at gmail.com (Hadley Wickham)
Date: Thu, 28 May 2015 16:02:00 -0500
Subject: [R-pkg-devel] R CMD check getting stalled
In-Reply-To: <5564988A.8040508@statistik.tu-dortmund.de>
References: <CAMdN6SWOZMP0NNiavYxrPi7gnbhXu4S8g2g+4C85x68ZmYPRVw@mail.gmail.com>
	<5563EB9C.2010004@waikato.ac.nz>
	<CAKxd1KOeQg_Lfturj-KJacZTgNQ243ais7CSV2ofHJ2SGFTv2g@mail.gmail.com>
	<21860.37477.484542.545452@max.nulle.part>
	<5564988A.8040508@statistik.tu-dortmund.de>
Message-ID: <CABdHhvEk6iwtQJ+Bf+p93PNsgs2WHJcHE7jhKrThKUNoXVxrqQ@mail.gmail.com>

> Wild guess: It's not the package but the file system or file permissions so
> that you cannot determine the size.

Do you have any thoughts on where specifically to look? Permissions of
the library or of the current dir?

I also wondered if it might be caused by a recursive link that caused
the size inspection to never finish, but there aren't any symlinks in
the package.

I have one student in a class of ~60 students who has this problem.
The package source is at https://github.com/hadley/rv2/tree/check-me,
but it seems unlikely to be related to the package as it works for
everyone else.

Hadley

-- 
http://had.co.nz/


From ligges at statistik.tu-dortmund.de  Thu May 28 23:04:12 2015
From: ligges at statistik.tu-dortmund.de (Uwe Ligges)
Date: Thu, 28 May 2015 23:04:12 +0200
Subject: [R-pkg-devel] R CMD check getting stalled
In-Reply-To: <CABdHhvEk6iwtQJ+Bf+p93PNsgs2WHJcHE7jhKrThKUNoXVxrqQ@mail.gmail.com>
References: <CAMdN6SWOZMP0NNiavYxrPi7gnbhXu4S8g2g+4C85x68ZmYPRVw@mail.gmail.com>
	<5563EB9C.2010004@waikato.ac.nz>
	<CAKxd1KOeQg_Lfturj-KJacZTgNQ243ais7CSV2ofHJ2SGFTv2g@mail.gmail.com>
	<21860.37477.484542.545452@max.nulle.part>
	<5564988A.8040508@statistik.tu-dortmund.de>
	<CABdHhvEk6iwtQJ+Bf+p93PNsgs2WHJcHE7jhKrThKUNoXVxrqQ@mail.gmail.com>
Message-ID: <556782CC.4070406@statistik.tu-dortmund.de>

I guess a package that was installed by root and later on checked by a 
regular user or some such, so that permissions do not match.

I think I'd try to remove the package from all libraries and try again. 
And note that network drives/mounts may be the source of such a problem 
when some listings are disabled.

Best,
Uwe Ligges



On 28.05.2015 23:02, Hadley Wickham wrote:
>> Wild guess: It's not the package but the file system or file permissions so
>> that you cannot determine the size.
>
> Do you have any thoughts on where specifically to look? Permissions of
> the library or of the current dir?
>
> I also wondered if it might be caused by a recursive link that caused
> the size inspection to never finish, but there aren't any symlinks in
> the package.
>
> I have one student in a class of ~60 students who has this problem.
> The package source is at https://github.com/hadley/rv2/tree/check-me,
> but it seems unlikely to be related to the package as it works for
> everyone else.
>
> Hadley
>


From h.wickham at gmail.com  Fri May 29 04:53:46 2015
From: h.wickham at gmail.com (Hadley Wickham)
Date: Thu, 28 May 2015 21:53:46 -0500
Subject: [R-pkg-devel] R CMD check getting stalled
In-Reply-To: <556782CC.4070406@statistik.tu-dortmund.de>
References: <CAMdN6SWOZMP0NNiavYxrPi7gnbhXu4S8g2g+4C85x68ZmYPRVw@mail.gmail.com>
	<5563EB9C.2010004@waikato.ac.nz>
	<CAKxd1KOeQg_Lfturj-KJacZTgNQ243ais7CSV2ofHJ2SGFTv2g@mail.gmail.com>
	<21860.37477.484542.545452@max.nulle.part>
	<5564988A.8040508@statistik.tu-dortmund.de>
	<CABdHhvEk6iwtQJ+Bf+p93PNsgs2WHJcHE7jhKrThKUNoXVxrqQ@mail.gmail.com>
	<556782CC.4070406@statistik.tu-dortmund.de>
Message-ID: <CABdHhvHRbHZRX9N+S+Ranjb6PWHyZcL=f4hirnd+BUvtQQc0mQ@mail.gmail.com>

Ok, it looks like it's actually quite a subtle problem. (Thanks to
Winston Chang for tracking it down). The root of the problem appears
to be the call to du at
https://github.com/wch/r-source/blob/9ffe87264a1cd59a31a829f72d57af0f1bfa327a/src/library/tools/R/check.R#L3639

With 32-bit R Sys.which("du") finds Rtools/bin/du.exe, whereas 64-bit
R finds c:/windows/system32/du.exe (see attached screenshot).

Hadley


On Thu, May 28, 2015 at 4:04 PM, Uwe Ligges
<ligges at statistik.tu-dortmund.de> wrote:
> I guess a package that was installed by root and later on checked by a
> regular user or some such, so that permissions do not match.
>
> I think I'd try to remove the package from all libraries and try again. And
> note that network drives/mounts may be the source of such a problem when
> some listings are disabled.
>
> Best,
> Uwe Ligges
>
>
>
>
> On 28.05.2015 23:02, Hadley Wickham wrote:
>>>
>>> Wild guess: It's not the package but the file system or file permissions
>>> so
>>> that you cannot determine the size.
>>
>>
>> Do you have any thoughts on where specifically to look? Permissions of
>> the library or of the current dir?
>>
>> I also wondered if it might be caused by a recursive link that caused
>> the size inspection to never finish, but there aren't any symlinks in
>> the package.
>>
>> I have one student in a class of ~60 students who has this problem.
>> The package source is at https://github.com/hadley/rv2/tree/check-me,
>> but it seems unlikely to be related to the package as it works for
>> everyone else.
>>
>> Hadley
>>
>



-- 
http://had.co.nz/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: r-64-v-32-email.png
Type: image/png
Size: 203151 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-package-devel/attachments/20150528/914e9eaf/attachment.png>

From henrik.bengtsson at gmail.com  Fri May 29 05:55:34 2015
From: henrik.bengtsson at gmail.com (Henrik Bengtsson)
Date: Thu, 28 May 2015 20:55:34 -0700
Subject: [R-pkg-devel] R CMD check getting stalled
In-Reply-To: <CABdHhvHRbHZRX9N+S+Ranjb6PWHyZcL=f4hirnd+BUvtQQc0mQ@mail.gmail.com>
References: <CAMdN6SWOZMP0NNiavYxrPi7gnbhXu4S8g2g+4C85x68ZmYPRVw@mail.gmail.com>
	<5563EB9C.2010004@waikato.ac.nz>
	<CAKxd1KOeQg_Lfturj-KJacZTgNQ243ais7CSV2ofHJ2SGFTv2g@mail.gmail.com>
	<21860.37477.484542.545452@max.nulle.part>
	<5564988A.8040508@statistik.tu-dortmund.de>
	<CABdHhvEk6iwtQJ+Bf+p93PNsgs2WHJcHE7jhKrThKUNoXVxrqQ@mail.gmail.com>
	<556782CC.4070406@statistik.tu-dortmund.de>
	<CABdHhvHRbHZRX9N+S+Ranjb6PWHyZcL=f4hirnd+BUvtQQc0mQ@mail.gmail.com>
Message-ID: <CAFDcVCT8TCRdTfVBxAPR-J-sg8545XisaGScpenydQKPzX_uew@mail.gmail.com>

[re-sending using from email address for this list]

On Thu, May 28, 2015 at 7:53 PM, Hadley Wickham <h.wickham at gmail.com> wrote:
> Ok, it looks like it's actually quite a subtle problem. (Thanks to
> Winston Chang for tracking it down). The root of the problem appears
> to be the call to du at
> https://github.com/wch/r-source/blob/9ffe87264a1cd59a31a829f72d57af0f1bfa327a/src/library/tools/R/check.R#L3639
>
> With 32-bit R Sys.which("du") finds Rtools/bin/du.exe, whereas 64-bit
> R finds c:/windows/system32/du.exe (see attached screenshot).

Huh, screenshots? ;)

So, I can reproduce this on Windows 7 64-bit, IFF, I do:

> file.copy("C:/Rtools/bin/du.exe", "C:/Windows/system32/du.exe")

$ echo %PATH%
C:\Rtools\bin;C:\Rtools\gcc-4.6.3\bin;C:\Windows;C:\Windows\system32

$ i386\Rscript.exe --vanilla -e "Sys.which('du')"
                             du
"C:\\Windows\\system32\\du.exe"
$ Rscript.exe --vanilla -e "shell('du')"
27797   ./i386
28413   ./x64
56275   .

$ x64\Rscript.exe --vanilla -e "Sys.which('du')"
                       du
"C:\\Rtools\\bin\\du.exe"
$ Rscript.exe --vanilla -e "shell('du')"
27797   ./i386
28413   ./x64
56275   .

However, without that C:/Windows/system32/du.exe (seems like a
mistake), both R builds finds the one in "C:\\Rtools\\bin\\du.exe".


BTW, this seems to be another example of what was reported in R-devel
thread '[Rd] How best to get around shadowing of executables by
system()'s prepending of directories to Windows' PATH?' on 2015-05-18
(https://stat.ethz.ch/pipermail/r-devel/2015-May/071195.html).


Details on the Rtools that I have:

$ ls -l C:/Rtools/bin/du.exe
-rwxr-xr-x 1 hb mkpasswd 177191 Oct 13  2014 C:/Rtools/bin/du.exe
$ md5sum C:/Rtools/bin/du.exe
408d9043dd90cf90fbde66f8bef2fcbe *C:/Rtools/bin/du.exe
$ cat C:/Rtools/VERSION.txt
Rtools version 3.3.0.1958


/Henrik

On Thu, May 28, 2015 at 7:53 PM, Hadley Wickham <h.wickham at gmail.com> wrote:
> Ok, it looks like it's actually quite a subtle problem. (Thanks to
> Winston Chang for tracking it down). The root of the problem appears
> to be the call to du at
> https://github.com/wch/r-source/blob/9ffe87264a1cd59a31a829f72d57af0f1bfa327a/src/library/tools/R/check.R#L3639
>
> With 32-bit R Sys.which("du") finds Rtools/bin/du.exe, whereas 64-bit
> R finds c:/windows/system32/du.exe (see attached screenshot).
>
> Hadley
>
>
> On Thu, May 28, 2015 at 4:04 PM, Uwe Ligges
> <ligges at statistik.tu-dortmund.de> wrote:
>> I guess a package that was installed by root and later on checked by a
>> regular user or some such, so that permissions do not match.
>>
>> I think I'd try to remove the package from all libraries and try again. And
>> note that network drives/mounts may be the source of such a problem when
>> some listings are disabled.
>>
>> Best,
>> Uwe Ligges
>>
>>
>>
>>
>> On 28.05.2015 23:02, Hadley Wickham wrote:
>>>>
>>>> Wild guess: It's not the package but the file system or file permissions
>>>> so
>>>> that you cannot determine the size.
>>>
>>>
>>> Do you have any thoughts on where specifically to look? Permissions of
>>> the library or of the current dir?
>>>
>>> I also wondered if it might be caused by a recursive link that caused
>>> the size inspection to never finish, but there aren't any symlinks in
>>> the package.
>>>
>>> I have one student in a class of ~60 students who has this problem.
>>> The package source is at https://github.com/hadley/rv2/tree/check-me,
>>> but it seems unlikely to be related to the package as it works for
>>> everyone else.
>>>
>>> Hadley
>>>
>>
>
>
>
> --
> http://had.co.nz/
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From Thomas.Petzoldt at tu-dresden.de  Thu May 28 17:59:40 2015
From: Thomas.Petzoldt at tu-dresden.de (Thomas Petzoldt)
Date: Thu, 28 May 2015 17:59:40 +0200
Subject: [R-pkg-devel] Extending MIT software
In-Reply-To: <CAKxd1KM+o5fQ7P6TRrFd6YKUWtdVZTdEUDBNsVaSB8MxETqXmA@mail.gmail.com>
References: <CAKxd1KM+o5fQ7P6TRrFd6YKUWtdVZTdEUDBNsVaSB8MxETqXmA@mail.gmail.com>
Message-ID: <55673B6C.1000506@tu-dresden.de>

Hi,

I am not a lawyer, but as far as I know, the MIT license allows 
re-licensing of derived work under the GPL.

See: http://en.wikipedia.org/wiki/License_compatibility

http://en.wikipedia.org/wiki/MIT_License

So what speaks against releasing your derived work under the GPL >= 2?

Thomas


On 28.05.2015 17:48, Charles Determan wrote:
> When developing a new package we want to have a license attributed to that
> package.  That said, I am a little confused how one would approach the MIT
> license.  I am working on a package that extends upon another library that
> has the MIT license.  I know that I need to create a LICENSE file with YEAR
> and COPYRIGHT HOLDER.
>
> My question is, would the copyright holder be just the authors for this
> given R package or a combination of the R package authors and the original
> library authors?
>
> Regards,
> Charles


-- 
Dr. Thomas Petzoldt
Technische Universitaet Dresden
Faculty of Environmental Sciences
Institute of Hydrobiology
01062 Dresden, Germany

E-Mail: thomas.petzoldt at tu-dresden.de
http://tu-dresden.de/Members/thomas.petzoldt


From winstonchang1 at gmail.com  Fri May 29 05:06:20 2015
From: winstonchang1 at gmail.com (Winston Chang)
Date: Thu, 28 May 2015 22:06:20 -0500
Subject: [R-pkg-devel] R CMD check getting stalled
In-Reply-To: <CABdHhvHRbHZRX9N+S+Ranjb6PWHyZcL=f4hirnd+BUvtQQc0mQ@mail.gmail.com>
References: <CAMdN6SWOZMP0NNiavYxrPi7gnbhXu4S8g2g+4C85x68ZmYPRVw@mail.gmail.com>
	<5563EB9C.2010004@waikato.ac.nz>
	<CAKxd1KOeQg_Lfturj-KJacZTgNQ243ais7CSV2ofHJ2SGFTv2g@mail.gmail.com>
	<21860.37477.484542.545452@max.nulle.part>
	<5564988A.8040508@statistik.tu-dortmund.de>
	<CABdHhvEk6iwtQJ+Bf+p93PNsgs2WHJcHE7jhKrThKUNoXVxrqQ@mail.gmail.com>
	<556782CC.4070406@statistik.tu-dortmund.de>
	<CABdHhvHRbHZRX9N+S+Ranjb6PWHyZcL=f4hirnd+BUvtQQc0mQ@mail.gmail.com>
Message-ID: <CAFOpNVHP-U+iJ1+MiWBDNwsrTiC09MdxsmLFpr4rpdxbbWi+qg@mail.gmail.com>

I should also mention that on the machine that had this problem, the user
had installed some software that provided the du program in
c:/windows/system32.

On that machine, with 64-bit R:

> > system2("du")


> Du v1.34 - report directory disk usage

Copyright (C) 2005-2009 Mark Russinovich

Sysinternals - www.sysinternals.com


> usage: C:\Windows\system32\du.exe [[-v] [-l <levels>] | [-n]] [-q]
> <directory>

   -l     Specify subdirectory depth of information (default is all levels).

   -n     Do not recurse.

   -q     Quiet (no banner).

   -u     Count only unique file occurences.

   -v     Show size (in KB) of intermediate directories.


> Warning message:

running command '"du"' had status 65535


-Winston

On Thursday, May 28, 2015, Hadley Wickham <h.wickham at gmail.com
<javascript:_e(%7B%7D,'cvml','h.wickham at gmail.com');>> wrote:

> Ok, it looks like it's actually quite a subtle problem. (Thanks to
> Winston Chang for tracking it down). The root of the problem appears
> to be the call to du at
>
> https://github.com/wch/r-source/blob/9ffe87264a1cd59a31a829f72d57af0f1bfa327a/src/library/tools/R/check.R#L3639
>
> With 32-bit R Sys.which("du") finds Rtools/bin/du.exe, whereas 64-bit
> R finds c:/windows/system32/du.exe (see attached screenshot).
>
> Hadley
>
>
> On Thu, May 28, 2015 at 4:04 PM, Uwe Ligges
> <ligges at statistik.tu-dortmund.de> wrote:
> > I guess a package that was installed by root and later on checked by a
> > regular user or some such, so that permissions do not match.
> >
> > I think I'd try to remove the package from all libraries and try again.
> And
> > note that network drives/mounts may be the source of such a problem when
> > some listings are disabled.
> >
> > Best,
> > Uwe Ligges
> >
> >
> >
> >
> > On 28.05.2015 23:02, Hadley Wickham wrote:
> >>>
> >>> Wild guess: It's not the package but the file system or file
> permissions
> >>> so
> >>> that you cannot determine the size.
> >>
> >>
> >> Do you have any thoughts on where specifically to look? Permissions of
> >> the library or of the current dir?
> >>
> >> I also wondered if it might be caused by a recursive link that caused
> >> the size inspection to never finish, but there aren't any symlinks in
> >> the package.
> >>
> >> I have one student in a class of ~60 students who has this problem.
> >> The package source is at https://github.com/hadley/rv2/tree/check-me,
> >> but it seems unlikely to be related to the package as it works for
> >> everyone else.
> >>
> >> Hadley
> >>
> >
>
>
>
> --
> http://had.co.nz/
>


-- 
Sent from my phone

	[[alternative HTML version deleted]]


From pieter.eendebak at gmail.com  Fri May 29 11:44:56 2015
From: pieter.eendebak at gmail.com (Pieter Eendebak)
Date: Fri, 29 May 2015 11:44:56 +0200
Subject: [R-pkg-devel] license for package
Message-ID: <CA+j_vEoc+r_jkt+tFPeAj0N6A2NFa2YS=9U+9sc+Pwnpk=bdTg@mail.gmail.com>

Dear developers,

How can I specify the license for my package when my package includes some
code with other licenses (and different copyright holders). In particular:

- my package is BSD 2-clause
- my packages in includes MPL-2 code (Eigen math library)
- my package includes some MIT code (different author)

With kind regards,
Pieter Eendebak

	[[alternative HTML version deleted]]


From Thomas.Petzoldt at tu-dresden.de  Fri May 29 13:46:07 2015
From: Thomas.Petzoldt at tu-dresden.de (Thomas Petzoldt)
Date: Fri, 29 May 2015 13:46:07 +0200
Subject: [R-pkg-devel] license for package
In-Reply-To: <CA+j_vEoc+r_jkt+tFPeAj0N6A2NFa2YS=9U+9sc+Pwnpk=bdTg@mail.gmail.com>
References: <CA+j_vEoc+r_jkt+tFPeAj0N6A2NFa2YS=9U+9sc+Pwnpk=bdTg@mail.gmail.com>
Message-ID: <5568517F.3060701@tu-dresden.de>

Dear Pieter,

there was recently a related discussion in the JSS editorial board. Some 
people took the position that there should be maximum possible freedom 
for software developers in choosing an appropriate license. Others saw 
the problem of confusion for users and developers of derived work, if 
too many licenses come into play and advocated for a strict application 
of the GPL.

In the end it was decided that "Code distributed with JSS articles uses 
the GNU General Public License version 2 or version 3 or a 
GPL-compatible license." (http://www.jstatsoft.org/instructions)

This compromise tries to respect both, rights of the software authors 
and interests of users, who (in most cases) don't want to bother too 
much about this.

More details about what is GPL compatible can be found here:
https://gnu.org/licenses/license-list.en.html

Information about the MPL-2 is found here:
https://www.mozilla.org/MPL/2.0/FAQ.html

R itself "as a package is licensed under GPL-2 | GPL-3", while 
associated software such as packages used licenses like this: 
http://www.r-project.org/Licenses/

Finally, technical advise to licensing of packages is found in "Writing 
R Extensions":

http://cran.at.r-project.org/doc/manuals/r-devel/R-exts.html#Licensing

Hope it helps,

Thomas



On 29.05.2015 11:44, Pieter Eendebak wrote:
> Dear developers,
>
> How can I specify the license for my package when my package includes some
> code with other licenses (and different copyright holders). In particular:
>
> - my package is BSD 2-clause
> - my packages in includes MPL-2 code (Eigen math library)
> - my package includes some MIT code (different author)
>
> With kind regards,
> Pieter Eendebak


From edd at debian.org  Fri May 29 13:56:34 2015
From: edd at debian.org (Dirk Eddelbuettel)
Date: Fri, 29 May 2015 06:56:34 -0500
Subject: [R-pkg-devel] license for package
In-Reply-To: <CA+j_vEoc+r_jkt+tFPeAj0N6A2NFa2YS=9U+9sc+Pwnpk=bdTg@mail.gmail.com>
References: <CA+j_vEoc+r_jkt+tFPeAj0N6A2NFa2YS=9U+9sc+Pwnpk=bdTg@mail.gmail.com>
Message-ID: <21864.21490.483375.864681@max.nulle.part>


On 29 May 2015 at 11:44, Pieter Eendebak wrote:
| Dear developers,
| 
| How can I specify the license for my package when my package includes some
| code with other licenses (and different copyright holders). In particular:
| 
| - my package is BSD 2-clause
| - my packages in includes MPL-2 code (Eigen math library)

Narrow comment: If you do 'LinkingTo: RcppEigen' you do not need to include
the Eigen headers yourself.

| - my package includes some MIT code (different author)

You cannot relicense code by other people.  Their license stays.

You have some choice in how you license _your_ code in the package.  That
said, license "cross-products" have conflicts, but licensing your code under
BSD-2 in the context of the GPL-2'ed R / MIT'ed other parts should be fine.
See the links in Thomas's post for more.

Lastly, in many cases [eg when you link against libR], the "aggregate work"
will be under GPL (>= 2) anyway.  But within the "aggregate work" the code
you added can be under a different license (as long as it is compatible).

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From cdetermanjr at gmail.com  Fri May 29 14:06:30 2015
From: cdetermanjr at gmail.com (Charles Determan)
Date: Fri, 29 May 2015 07:06:30 -0500
Subject: [R-pkg-devel] Extending MIT software
In-Reply-To: <55673B6C.1000506@tu-dresden.de>
References: <CAKxd1KM+o5fQ7P6TRrFd6YKUWtdVZTdEUDBNsVaSB8MxETqXmA@mail.gmail.com>
	<55673B6C.1000506@tu-dresden.de>
Message-ID: <CAKxd1KMnHtqDamt-NZ6Kv-ExJdU=QvbdQpwsuSHkmi_tDMxQBA@mail.gmail.com>

Thank you Thomas, I guess there is nothing, that I am aware of, that
prevents me from releasing with GPL >= 2 but I wanted to get some insights
as to what would be a best practice.  I prefer to give as much credit as
possible where it is do.

On Thu, May 28, 2015 at 10:59 AM, Thomas Petzoldt <
Thomas.Petzoldt at tu-dresden.de> wrote:

> Hi,
>
> I am not a lawyer, but as far as I know, the MIT license allows
> re-licensing of derived work under the GPL.
>
> See: http://en.wikipedia.org/wiki/License_compatibility
>
> http://en.wikipedia.org/wiki/MIT_License
>
> So what speaks against releasing your derived work under the GPL >= 2?
>
> Thomas
>
>
>
> On 28.05.2015 17:48, Charles Determan wrote:
>
>> When developing a new package we want to have a license attributed to that
>> package.  That said, I am a little confused how one would approach the MIT
>> license.  I am working on a package that extends upon another library that
>> has the MIT license.  I know that I need to create a LICENSE file with
>> YEAR
>> and COPYRIGHT HOLDER.
>>
>> My question is, would the copyright holder be just the authors for this
>> given R package or a combination of the R package authors and the original
>> library authors?
>>
>> Regards,
>> Charles
>>
>
>
> --
> Dr. Thomas Petzoldt
> Technische Universitaet Dresden
> Faculty of Environmental Sciences
> Institute of Hydrobiology
> 01062 Dresden, Germany
>
> E-Mail: thomas.petzoldt at tu-dresden.de
> http://tu-dresden.de/Members/thomas.petzoldt
>
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From schmidt at math.utk.edu  Fri May 29 14:23:50 2015
From: schmidt at math.utk.edu (Drew Schmidt)
Date: Fri, 29 May 2015 08:23:50 -0400
Subject: [R-pkg-devel] license for package
In-Reply-To: <21864.21490.483375.864681@max.nulle.part>
References: <CA+j_vEoc+r_jkt+tFPeAj0N6A2NFa2YS=9U+9sc+Pwnpk=bdTg@mail.gmail.com>
	<21864.21490.483375.864681@max.nulle.part>
Message-ID: <55685A56.9020502@math.utk.edu>


On 05/29/2015 07:56 AM, Dirk Eddelbuettel wrote:
> Lastly, in many cases [eg when you link against libR], the "aggregate work"
> will be under GPL (>= 2) anyway.  But within the "aggregate work" the code
> you added can be under a different license (as long as it is compatible).

This is the generally the FSF's interpretation, but others disagree; for 
instance http://www.law.washington.edu/lta/swp/law/derivative.html.

In reality, this stuff has never been tested in court, so no one really 
knows what the rules are.

-Drew


From Achim.Zeileis at R-project.org  Fri May 29 14:42:19 2015
From: Achim.Zeileis at R-project.org (Achim Zeileis)
Date: Fri, 29 May 2015 14:42:19 +0200 (CEST)
Subject: [R-pkg-devel] license for package
In-Reply-To: <21864.21490.483375.864681@max.nulle.part>
References: <CA+j_vEoc+r_jkt+tFPeAj0N6A2NFa2YS=9U+9sc+Pwnpk=bdTg@mail.gmail.com>
	<21864.21490.483375.864681@max.nulle.part>
Message-ID: <alpine.DEB.2.11.1505291433510.21946@paninaro.uibk.ac.at>

On Fri, 29 May 2015, Dirk Eddelbuettel wrote:

>
> On 29 May 2015 at 11:44, Pieter Eendebak wrote:
> | Dear developers,
> |
> | How can I specify the license for my package when my package includes some
> | code with other licenses (and different copyright holders). In particular:
> |
> | - my package is BSD 2-clause
> | - my packages in includes MPL-2 code (Eigen math library)
>
> Narrow comment: If you do 'LinkingTo: RcppEigen' you do not need to include
> the Eigen headers yourself.
>
> | - my package includes some MIT code (different author)
>
> You cannot relicense code by other people.  Their license stays.

To add one detail to this argument: You may be able to sublicense, though. 
Especially for the permissive MIT/X11 license even "trivial" sublicensing 
is allowed as long as the original copyright is preserved. (IANAL, of 
course...)

The OSI had an FAQ at http://ideas.opensource.org/wiki/help/license which 
currently appears to be offline. However, FAQ item 7 was:

-------------------------------------------------------------------------
Q: Can I always "relicense" BSD licensed-software under a new license?

If you define relicensing as "sublicensing, possibly under additional 
terms and conditions which do not contradict the terms and conditions of 
an original licensor's permissive license", then the answer is generally 
"yes" -- provided you also retain the original copyright information. 
However, strictly speaking, you can only modify the license of a 
"derivative work", and opinions differ on how much change is required to 
qualify as a derivative work. The MIT license and Academic Free License, 
for example, freely allow "trivial" sublicensing (without any other 
changes) as long as the copyright is preserved. Conversely, the Apache 2.0 
license only allows sublicensing for "Derivative Works", which it defines 
as "original works of authorship" -- meaning non-trivial additions. The 
new BSD license, unfortunately, is silent on this point. If you are 
planning to "trivially relicense" BSD software, you are encouraged to 
first check with the copyright holder and/or your own legal counsel.
-------------------------------------------------------------------------

> You have some choice in how you license _your_ code in the package.
> That said, license "cross-products" have conflicts, but licensing your 
> code under BSD-2 in the context of the GPL-2'ed R / MIT'ed other parts 
> should be fine. See the links in Thomas's post for more.
>
> Lastly, in many cases [eg when you link against libR], the "aggregate work"
> will be under GPL (>= 2) anyway.  But within the "aggregate work" the code
> you added can be under a different license (as long as it is compatible).
>
> Dirk
>
> -- 
> http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>


From cdetermanjr at gmail.com  Fri May 29 15:52:05 2015
From: cdetermanjr at gmail.com (Charles Determan)
Date: Fri, 29 May 2015 08:52:05 -0500
Subject: [R-pkg-devel] Package with multiple compilers?
Message-ID: <CAKxd1KM+zpFbb6yA-1m-sB6YFrUu4Z=BmzhF+OHKJs-WybLf0A@mail.gmail.com>

I am actively working on an R package that will incorporate some CUDA code
for using NVIDIA GPU devices.  I am quite familiar with Rcpp for C++ code
and accustomed to using a Makevars file for specifying compiler options.
However I am stumped currently about how to use the NVCC compiler for the
.cu files.

Typically, a CUDA program will first be compiled with NVCC and the linked
with any other .o files.

# very simplified example
nvcc my_cuda_function.cu -o my_cuda_function.o
g++ -o my_program.so other_cpp_function.o my_cuda_function.o

I have seem some older packages using a Makefile but I have also read that
this is currently recommended against because of the need for multiarch
builds.

Does anyone know how I can tell R to compile .cu files with NVCC and
'proceed as normal' with the resulting .o files?

Regards,
Charles

	[[alternative HTML version deleted]]


From murdoch.duncan at gmail.com  Fri May 29 19:45:54 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Fri, 29 May 2015 13:45:54 -0400
Subject: [R-pkg-devel] Package with multiple compilers?
In-Reply-To: <CAKxd1KM+zpFbb6yA-1m-sB6YFrUu4Z=BmzhF+OHKJs-WybLf0A@mail.gmail.com>
References: <CAKxd1KM+zpFbb6yA-1m-sB6YFrUu4Z=BmzhF+OHKJs-WybLf0A@mail.gmail.com>
Message-ID: <5568A5D2.6040909@gmail.com>

On 29/05/2015 9:52 AM, Charles Determan wrote:
> I am actively working on an R package that will incorporate some CUDA code
> for using NVIDIA GPU devices.  I am quite familiar with Rcpp for C++ code
> and accustomed to using a Makevars file for specifying compiler options.
> However I am stumped currently about how to use the NVCC compiler for the
> .cu files.
>
> Typically, a CUDA program will first be compiled with NVCC and the linked
> with any other .o files.
>
> # very simplified example
> nvcc my_cuda_function.cu -o my_cuda_function.o
> g++ -o my_program.so other_cpp_function.o my_cuda_function.o
>
> I have seem some older packages using a Makefile but I have also read that
> this is currently recommended against because of the need for multiarch
> builds.
>
> Does anyone know how I can tell R to compile .cu files with NVCC and
> 'proceed as normal' with the resulting .o files?

You can include the recipes for those .o files in your Makevars file.  
It is essentially a fragment of the full Makefile needed by your 
package.  I forget if you'll need to give an explicit recipe for the 
library, or whether the standard file will link them in. Try it!

Duncan Murdoch


From kevinushey at gmail.com  Fri May 29 19:57:23 2015
From: kevinushey at gmail.com (Kevin Ushey)
Date: Fri, 29 May 2015 17:57:23 +0000
Subject: [R-pkg-devel] Package with multiple compilers?
In-Reply-To: <5568A5D2.6040909@gmail.com>
References: <CAKxd1KM+zpFbb6yA-1m-sB6YFrUu4Z=BmzhF+OHKJs-WybLf0A@mail.gmail.com>
	<5568A5D2.6040909@gmail.com>
Message-ID: <CAJXgQP3uN9hWFtnYL_oaGU4B2Phqc8iH0YGpYxjCfoAvWx0aFQ@mail.gmail.com>

The GitHub search feature is also quite useful for seeing how other package
authors have constructed Makevars (or Makevars.win) when compiling with
custom targets. For example, a quick search of how some authors manipulate
OBJECTS in Makevars.win:


https://github.com/search?utf8=%E2%9C%93&q=OBJECTS+extension%3Awin&type=Code&ref=advsearch&l=

Of course, not all examples are good examples, but it definitely provides
examples to learn from -- and personally, my Makefile-fu is pretty weak.

Here's an example from 'gpusim' using 'nvcc' in their own Makevars.win:
https://github.com/rforge/gpusim/blob/d07dd509be5d414d3f4add66db8c841146813544/pkg/src/Makefile.win

Hopefully this gives you some more direction...

Kevin

On Fri, May 29, 2015 at 10:49 AM Duncan Murdoch <murdoch.duncan at gmail.com>
wrote:

> On 29/05/2015 9:52 AM, Charles Determan wrote:
> > I am actively working on an R package that will incorporate some CUDA
> code
> > for using NVIDIA GPU devices.  I am quite familiar with Rcpp for C++ code
> > and accustomed to using a Makevars file for specifying compiler options.
> > However I am stumped currently about how to use the NVCC compiler for the
> > .cu files.
> >
> > Typically, a CUDA program will first be compiled with NVCC and the linked
> > with any other .o files.
> >
> > # very simplified example
> > nvcc my_cuda_function.cu -o my_cuda_function.o
> > g++ -o my_program.so other_cpp_function.o my_cuda_function.o
> >
> > I have seem some older packages using a Makefile but I have also read
> that
> > this is currently recommended against because of the need for multiarch
> > builds.
> >
> > Does anyone know how I can tell R to compile .cu files with NVCC and
> > 'proceed as normal' with the resulting .o files?
>
> You can include the recipes for those .o files in your Makevars file.
> It is essentially a fragment of the full Makefile needed by your
> package.  I forget if you'll need to give an explicit recipe for the
> library, or whether the standard file will link them in. Try it!
>
> Duncan Murdoch
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From edd at debian.org  Fri May 29 21:31:48 2015
From: edd at debian.org (Dirk Eddelbuettel)
Date: Fri, 29 May 2015 14:31:48 -0500
Subject: [R-pkg-devel] license for package
In-Reply-To: <55685A56.9020502@math.utk.edu>
References: <CA+j_vEoc+r_jkt+tFPeAj0N6A2NFa2YS=9U+9sc+Pwnpk=bdTg@mail.gmail.com>
	<21864.21490.483375.864681@max.nulle.part>
	<55685A56.9020502@math.utk.edu>
Message-ID: <21864.48804.772731.270215@max.nulle.part>


On 29 May 2015 at 08:23, Drew Schmidt wrote:
| 
| On 05/29/2015 07:56 AM, Dirk Eddelbuettel wrote:
| > Lastly, in many cases [eg when you link against libR], the "aggregate work"
| > will be under GPL (>= 2) anyway.  But within the "aggregate work" the code
| > you added can be under a different license (as long as it is compatible).
| 
| This is the generally the FSF's interpretation, but others disagree; for 
| instance http://www.law.washington.edu/lta/swp/law/derivative.html.

Well neither you nor I are lawyers but folks at eg

  Software Freedom Conservancy (https://sfconservancy.org/) and

  Software Freedom Law Center (https://www.softwarefreedom.org/)

are, and they have views on this that differ from yours.  One you could also
point out that many commercial software firms (from large like RedHat to
smaller like RStudio) seems to agree with this view.
 
| In reality, this stuff has never been tested in court, so no one really 
| knows what the rules are.

Sure but there is both a pending case which may change this and of course
word of many cases settled before it had to move to court. 

Dirk


-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From schmidt at math.utk.edu  Sat May 30 01:52:55 2015
From: schmidt at math.utk.edu (Drew Schmidt)
Date: Fri, 29 May 2015 19:52:55 -0400
Subject: [R-pkg-devel] license for package
In-Reply-To: <21864.48804.772731.270215@max.nulle.part>
References: <CA+j_vEoc+r_jkt+tFPeAj0N6A2NFa2YS=9U+9sc+Pwnpk=bdTg@mail.gmail.com>	<21864.21490.483375.864681@max.nulle.part>	<55685A56.9020502@math.utk.edu>
	<21864.48804.772731.270215@max.nulle.part>
Message-ID: <5568FBD7.8030500@math.utk.edu>


On 05/29/2015 03:31 PM, Dirk Eddelbuettel wrote:
> Well neither you nor I are lawyers but folks at eg
>
>    Software Freedom Conservancy (https://sfconservancy.org/) and
>
>    Software Freedom Law Center (https://www.softwarefreedom.org/)
>
> are, and they have views on this that differ from yours.

I don't recall stating my views on this topic.  My goal in this exchange 
was to provide differing legal opinion (via the link) to the FSF's 
notion of "derivative work" in the case of dynamic linking.

If by your additional comments you mean to suggest that someone should 
approach the issue cautiously, I couldn't agree more.  But, until this 
is resolved in court, behaving as though the matter is already settled 
is duplicitous, in my opinion.

But this is hastily drifting away from the original topic, and I 
apologize for causing the digression.

-Drew


From pieter.eendebak at gmail.com  Sun May 31 22:42:30 2015
From: pieter.eendebak at gmail.com (Pieter Eendebak)
Date: Sun, 31 May 2015 22:42:30 +0200
Subject: [R-pkg-devel] license for package
In-Reply-To: <21864.21490.483375.864681@max.nulle.part>
References: <CA+j_vEoc+r_jkt+tFPeAj0N6A2NFa2YS=9U+9sc+Pwnpk=bdTg@mail.gmail.com>
	<21864.21490.483375.864681@max.nulle.part>
Message-ID: <CA+j_vEoEK2rAt+1+pAc-kD4LToSwL8E-LVzp9yWfW9V=HAdROg@mail.gmail.com>

On Fri, May 29, 2015 at 1:56 PM, Dirk Eddelbuettel <edd at debian.org> wrote:

>
> On 29 May 2015 at 11:44, Pieter Eendebak wrote:
> | Dear developers,
> |
> | How can I specify the license for my package when my package includes
> some
> | code with other licenses (and different copyright holders). In
> particular:
> |
> | - my package is BSD 2-clause
> | - my packages in includes MPL-2 code (Eigen math library)
>
> Narrow comment: If you do 'LinkingTo: RcppEigen' you do not need to include
> the Eigen headers yourself.
>

This is a good suggestion. I works for my code, so I can now leave out
Eigen for the source of the R package.


>
> | - my package includes some MIT code (different author)
>
> You cannot relicense code by other people.  Their license stays.
>
> I agree, but still I would like to be able to include source code from
other people (as long as licenses are compatible). To be concrete: how can
one distribute a file like msstdint.h (https://code.google.com/p/msinttypes/)
within an R package and have the licenses properly set in the DESCRIPTION
file?



> You have some choice in how you license _your_ code in the package.  That
> said, license "cross-products" have conflicts, but licensing your code
> under
> BSD-2 in the context of the GPL-2'ed R / MIT'ed other parts should be fine.
> See the links in Thomas's post for more.
>
> Lastly, in many cases [eg when you link against libR], the "aggregate work"
> will be under GPL (>= 2) anyway.  But within the "aggregate work" the code
> you added can be under a different license (as long as it is compatible).
>
> Dirk
>
> --
> http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>

	[[alternative HTML version deleted]]


From edd at debian.org  Mon Jun  1 00:23:06 2015
From: edd at debian.org (Dirk Eddelbuettel)
Date: Sun, 31 May 2015 17:23:06 -0500
Subject: [R-pkg-devel] license for package
In-Reply-To: <CA+j_vEoEK2rAt+1+pAc-kD4LToSwL8E-LVzp9yWfW9V=HAdROg@mail.gmail.com>
References: <CA+j_vEoc+r_jkt+tFPeAj0N6A2NFa2YS=9U+9sc+Pwnpk=bdTg@mail.gmail.com>
	<21864.21490.483375.864681@max.nulle.part>
	<CA+j_vEoEK2rAt+1+pAc-kD4LToSwL8E-LVzp9yWfW9V=HAdROg@mail.gmail.com>
Message-ID: <21867.35274.799211.221477@max.nulle.part>


On 31 May 2015 at 22:42, Pieter Eendebak wrote:
| 
| On Fri, May 29, 2015 at 1:56 PM, Dirk Eddelbuettel <edd at debian.org> wrote:
| 
|    
|     On 29 May 2015 at 11:44, Pieter Eendebak wrote:
|     | Dear developers,
|     |
|     | How can I specify the license for my package when my package includes
|     some
|     | code with other licenses (and different copyright holders). In
|     particular:
|     |
|     | - my package is BSD 2-clause
|     | - my packages in includes MPL-2 code (Eigen math library)
| 
|     Narrow comment: If you do 'LinkingTo: RcppEigen' you do not need to include
|     the Eigen headers yourself.
| 
| 
| This is a good suggestion. I works for my code, so I can now leave out Eigen
| for the source of the R package.

Excellent. 
    
|     | - my package includes some MIT code (different author)
| 
|     You cannot relicense code by other people.? Their license stays.
| 
| 
| I agree, but still I would like to be able to include source code from other
| people (as long as licenses are compatible). To be concrete: how can one
| distribute a file like msstdint.h (https://code.google.com/p/msinttypes/)
| within an R package and have the licenses properly set in the DESCRIPTION file?

That would probably depend on the license that the file is under, and the
license of the package you want to embed it in. [Goes looking:
BSD-3-clause. That means that you need to figure out if/how you can mix "your
code" in BSD-2 per your earlier mail with BSD-3 per the link.

Now: these things have been discussed ad nauseum over the 20+ years during
which Open Source / Free Software has become so much more prominent. Many
resources exists, see eg http://www.gnu.org/licenses/gpl-faq.en.html and
references therein, as well as http://opensource.org/licenses (which is
almost where your URL above links to as well if you follow its license link).

I am not sure we add value if we direct this list ---- freshly created to
address _packaging problems for R_ to yet another venue debating licenses and
mechanics. There is _nothing_ R specific in that question. 

Dirk

|     You have some choice in how you license _your_ code in the package.? That
|     said, license "cross-products" have conflicts, but licensing your code
|     under
|     BSD-2 in the context of the GPL-2'ed R / MIT'ed other parts should be fine.
|     See the links in Thomas's post for more.
| 
|     Lastly, in many cases [eg when you link against libR], the "aggregate work"
|     will be under GPL (>= 2) anyway.? But within the "aggregate work" the code
|     you added can be under a different license (as long as it is compatible).
|    
|     Dirk
| 
|     --
|     http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
| 
| 

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From berryboessenkool at hotmail.com  Wed Jun  3 09:48:16 2015
From: berryboessenkool at hotmail.com (Berry Boessenkool)
Date: Wed, 3 Jun 2015 09:48:16 +0200
Subject: [R-pkg-devel] FW: CRAN submission berryFunctions 1.8.0
In-Reply-To: <556E9DF6.202@stats.ox.ac.uk>
References: <20150602152411.1CCE81C009F@xmpalantir.wu.ac.at>,
	<556E9DF6.202@stats.ox.ac.uk>
Message-ID: <DUB123-W373BB5C10C2C5EF6AE6EEED5B40@phx.gbl>


Hi,

after submitting my package update, CRAN (Brian Ripley) found a couple of warnings / messages.
URLs that are not longer existent, a non-ASCII character from copypasting, incorrect title case.
Stuff that I should and could definitely solve before submitting.

Why did the latest Rdevel (2015-06-01 r68455) CMD check --as-cran not find them?
Below are the relevant excerpts.

Thanks for any hints about what I may have done wrong,
Berry

---------

> Found the following (possibly) invalid URLs:
>    URL: http://cran.r-project.org/web/packages/denstrip (moved to 
> http://cran.r-project.org/web/packages/denstrip/)
>      From: man/betaPlot.Rd
>            man/normPlot.Rd
>      Status: 200
>      Message: OK
>      CRAN URL not in canonical form

>    URL: http://www.geolinde.musin.de/afrika/pic/klimamuenchen.gif
>      From: man/climateGraph.Rd
>      Status: 404
>      Message: Not Found

[...]
 
>    The canonical URL of the CRAN page for a package is
>    http://cran.r-project.org/package=pkgname


> No package encoding and non-ASCII characters in the following R files:
>    R/groupHist.R
>      19: # ignore messages like: argument col is not made use of


> The Title field should be in title case, current version then in title case:
> ?Function Collection related to Plotting and Hydrology?
> ?Function Collection Related to Plotting and Hydrology?
> 

 		 	   		  
	[[alternative HTML version deleted]]


From ligges at statistik.tu-dortmund.de  Wed Jun  3 09:51:08 2015
From: ligges at statistik.tu-dortmund.de (Uwe Ligges)
Date: Wed, 03 Jun 2015 09:51:08 +0200
Subject: [R-pkg-devel] FW: CRAN submission berryFunctions 1.8.0
In-Reply-To: <DUB123-W373BB5C10C2C5EF6AE6EEED5B40@phx.gbl>
References: <20150602152411.1CCE81C009F@xmpalantir.wu.ac.at>,
	<556E9DF6.202@stats.ox.ac.uk>
	<DUB123-W373BB5C10C2C5EF6AE6EEED5B40@phx.gbl>
Message-ID: <556EB1EC.8080103@statistik.tu-dortmund.de>



On 03.06.2015 09:48, Berry Boessenkool wrote:
>
> Hi,
>
> after submitting my package update, CRAN (Brian Ripley) found a couple of warnings / messages.
> URLs that are not longer existent, a non-ASCII character from copypasting, incorrect title case.
> Stuff that I should and could definitely solve before submitting.
>
> Why did the latest Rdevel (2015-06-01 r68455) CMD check --as-cran not find them?

Your R was not libcurl enabled nor had you the spellchecker installed, I 
guess.

Best,
Uwe Ligges


> Below are the relevant excerpts.
>
> Thanks for any hints about what I may have done wrong,
> Berry
>
> ---------
>
>> Found the following (possibly) invalid URLs:
>>     URL: http://cran.r-project.org/web/packages/denstrip (moved to
>> http://cran.r-project.org/web/packages/denstrip/)
>>       From: man/betaPlot.Rd
>>             man/normPlot.Rd
>>       Status: 200
>>       Message: OK
>>       CRAN URL not in canonical form
>
>>     URL: http://www.geolinde.musin.de/afrika/pic/klimamuenchen.gif
>>       From: man/climateGraph.Rd
>>       Status: 404
>>       Message: Not Found
>
> [...]
>
>>     The canonical URL of the CRAN page for a package is
>>     http://cran.r-project.org/package=pkgname
>
>
>> No package encoding and non-ASCII characters in the following R files:
>>     R/groupHist.R
>>       19: # ignore messages like: argument col is not made use of
>
>
>> The Title field should be in title case, current version then in title case:
>> ?Function Collection related to Plotting and Hydrology?
>> ?Function Collection Related to Plotting and Hydrology?
>>
>
>   		 	   		
> 	[[alternative HTML version deleted]]
>
>
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From berryboessenkool at hotmail.com  Wed Jun  3 10:36:47 2015
From: berryboessenkool at hotmail.com (Berry Boessenkool)
Date: Wed, 3 Jun 2015 10:36:47 +0200
Subject: [R-pkg-devel] FW: CRAN submission berryFunctions 1.8.0
In-Reply-To: <1433318529.8774.131.camel@iarc.fr>
References: <20150602152411.1CCE81C009F@xmpalantir.wu.ac.at>
	,,<556E9DF6.202@stats.ox.ac.uk>
	<DUB123-W373BB5C10C2C5EF6AE6EEED5B40@phx.gbl>,
	<556EB1EC.8080103@statistik.tu-dortmund.de>,
	<1433318529.8774.131.camel@iarc.fr>
Message-ID: <DUB123-W2033C704EFB0CBDB6E8614D5B40@phx.gbl>


I found the actual reason: I was really stupid.
At the time of testing, I had killed the internet acces.
Sorry for bothering you all ...

Berry


PS: If you want to know why on earth I did that:
Yesterday, I got the error: unable to connect to CRAN.R-project.org on port 80.
I couldn't find an effective solution online except for turning of the internet connection while testing - which I did. And hooray, the error changed into a warning - which I felt safe to ignore.
Apparently, I should just have waited longer and tried again later, as the condition seems to be temporary in nature.
Pretty clear that, if I turn off the internet, checks can't find false URLs.




> From: plummerm at iarc.fr
> To: berryboessenkool at hotmail.com; ligges at statistik.tu-dortmund.de
> CC: r-package-devel at r-project.org
> Subject: Re: [R-pkg-devel] FW: CRAN submission berryFunctions 1.8.0
> Date: Wed, 3 Jun 2015 08:02:19 +0000
> 
> On Wed, 2015-06-03 at 09:51 +0200, Uwe Ligges wrote:
>> 
>> On 03.06.2015 09:48, Berry Boessenkool wrote:
>>>
>>> Hi,
>>>
>>> after submitting my package update, CRAN (Brian Ripley) found a couple of warnings / messages.
>>> URLs that are not longer existent, a non-ASCII character from copypasting, incorrect title case.
>>> Stuff that I should and could definitely solve before submitting.
>>>
>>> Why did the latest Rdevel (2015-06-01 r68455) CMD check --as-cran not find them?
>> 
>> Your R was not libcurl enabled nor had you the spellchecker installed, I 
>> guess.
> 
> I got the package source from https://github.com/brry/berryFunctions and
> I do get these messages.
> 
> Martyn
> 
>> Best,
>> Uwe Ligges
>> 
>> 
>>> Below are the relevant excerpts.
>>>
>>> Thanks for any hints about what I may have done wrong,
>>> Berry
>>>
>>> ---------
>>>
>>>> Found the following (possibly) invalid URLs:
>>>>     URL: http://cran.r-project.org/web/packages/denstrip (moved to
>>>> http://cran.r-project.org/web/packages/denstrip/)
>>>>       From: man/betaPlot.Rd
>>>>             man/normPlot.Rd
>>>>       Status: 200
>>>>       Message: OK
>>>>       CRAN URL not in canonical form
>>>
>>>>     URL: http://www.geolinde.musin.de/afrika/pic/klimamuenchen.gif
>>>>       From: man/climateGraph.Rd
>>>>       Status: 404
>>>>       Message: Not Found
>>>
>>> [...]
>>>
>>>>     The canonical URL of the CRAN page for a package is
>>>>     http://cran.r-project.org/package=pkgname
>>>
>>>
>>>> No package encoding and non-ASCII characters in the following R files:
>>>>     R/groupHist.R
>>>>       19: # ignore messages like: argument col is not made use of
>>>
>>>
>>>> The Title field should be in title case, current version then in title case:
>>>> ?Function Collection related to Plotting and Hydrology?
>>>> ?Function Collection Related to Plotting and Hydrology?
>>>>
>>>
>>>   		 	   		
>>> 	[[alternative HTML version deleted]]
>>>
>>>
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>> 
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
 		 	   		  
	[[alternative HTML version deleted]]


From plummerm at iarc.fr  Wed Jun  3 10:02:19 2015
From: plummerm at iarc.fr (Martyn Plummer)
Date: Wed, 3 Jun 2015 08:02:19 +0000
Subject: [R-pkg-devel] FW: CRAN submission berryFunctions 1.8.0
In-Reply-To: <556EB1EC.8080103@statistik.tu-dortmund.de>
References: <20150602152411.1CCE81C009F@xmpalantir.wu.ac.at>	,
	<556E9DF6.202@stats.ox.ac.uk>	
	<DUB123-W373BB5C10C2C5EF6AE6EEED5B40@phx.gbl>
	<556EB1EC.8080103@statistik.tu-dortmund.de>
Message-ID: <1433318529.8774.131.camel@iarc.fr>

On Wed, 2015-06-03 at 09:51 +0200, Uwe Ligges wrote:
> 
> On 03.06.2015 09:48, Berry Boessenkool wrote:
> >
> > Hi,
> >
> > after submitting my package update, CRAN (Brian Ripley) found a couple of warnings / messages.
> > URLs that are not longer existent, a non-ASCII character from copypasting, incorrect title case.
> > Stuff that I should and could definitely solve before submitting.
> >
> > Why did the latest Rdevel (2015-06-01 r68455) CMD check --as-cran not find them?
> 
> Your R was not libcurl enabled nor had you the spellchecker installed, I 
> guess.

I got the package source from https://github.com/brry/berryFunctions and
I do get these messages.

Martyn

> Best,
> Uwe Ligges
> 
> 
> > Below are the relevant excerpts.
> >
> > Thanks for any hints about what I may have done wrong,
> > Berry
> >
> > ---------
> >
> >> Found the following (possibly) invalid URLs:
> >>     URL: http://cran.r-project.org/web/packages/denstrip (moved to
> >> http://cran.r-project.org/web/packages/denstrip/)
> >>       From: man/betaPlot.Rd
> >>             man/normPlot.Rd
> >>       Status: 200
> >>       Message: OK
> >>       CRAN URL not in canonical form
> >
> >>     URL: http://www.geolinde.musin.de/afrika/pic/klimamuenchen.gif
> >>       From: man/climateGraph.Rd
> >>       Status: 404
> >>       Message: Not Found
> >
> > [...]
> >
> >>     The canonical URL of the CRAN page for a package is
> >>     http://cran.r-project.org/package=pkgname
> >
> >
> >> No package encoding and non-ASCII characters in the following R files:
> >>     R/groupHist.R
> >>       19: # ignore messages like: argument col is not made use of
> >
> >
> >> The Title field should be in title case, current version then in title case:
> >> ?Function Collection related to Plotting and Hydrology?
> >> ?Function Collection Related to Plotting and Hydrology?
> >>
> >
> >   		 	   		
> > 	[[alternative HTML version deleted]]
> >
> >
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From kirill.mueller at ivt.baug.ethz.ch  Wed Jun  3 10:13:50 2015
From: kirill.mueller at ivt.baug.ethz.ch (=?UTF-8?B?S2lyaWxsIE3DvGxsZXI=?=)
Date: Wed, 3 Jun 2015 10:13:50 +0200
Subject: [R-pkg-devel] FW: CRAN submission berryFunctions 1.8.0
In-Reply-To: <556EB1EC.8080103@statistik.tu-dortmund.de>
References: <20150602152411.1CCE81C009F@xmpalantir.wu.ac.at>,
	<556E9DF6.202@stats.ox.ac.uk>	<DUB123-W373BB5C10C2C5EF6AE6EEED5B40@phx.gbl>
	<556EB1EC.8080103@statistik.tu-dortmund.de>
Message-ID: <556EB73E.9010304@ivt.baug.ethz.ch>

Note that current devtools 1.8.0 attempts to use the spell checker when 
you say devtools::check(check_version = TRUE), and warns if no spell 
checker could be found. Perhaps a simpler option is to build on 
win-builder before submission (e.g., by running devtools::build_win() ), 
which is a good idea unless your package doesn't support Windows.


Best regards

Kirill


On 03.06.2015 09:51, Uwe Ligges wrote:
>
>
> On 03.06.2015 09:48, Berry Boessenkool wrote:
>>
>> Hi,
>>
>> after submitting my package update, CRAN (Brian Ripley) found a 
>> couple of warnings / messages.
>> URLs that are not longer existent, a non-ASCII character from 
>> copypasting, incorrect title case.
>> Stuff that I should and could definitely solve before submitting.
>>
>> Why did the latest Rdevel (2015-06-01 r68455) CMD check --as-cran not 
>> find them?
>
> Your R was not libcurl enabled nor had you the spellchecker installed, 
> I guess.
>
> Best,
> Uwe Ligges
>
>
>> Below are the relevant excerpts.
>>
>> Thanks for any hints about what I may have done wrong,
>> Berry
>>
>> ---------
>>
>>> Found the following (possibly) invalid URLs:
>>>     URL: http://cran.r-project.org/web/packages/denstrip (moved to
>>> http://cran.r-project.org/web/packages/denstrip/)
>>>       From: man/betaPlot.Rd
>>>             man/normPlot.Rd
>>>       Status: 200
>>>       Message: OK
>>>       CRAN URL not in canonical form
>>
>>>     URL: http://www.geolinde.musin.de/afrika/pic/klimamuenchen.gif
>>>       From: man/climateGraph.Rd
>>>       Status: 404
>>>       Message: Not Found
>>
>> [...]
>>
>>>     The canonical URL of the CRAN page for a package is
>>>     http://cran.r-project.org/package=pkgname
>>
>>
>>> No package encoding and non-ASCII characters in the following R files:
>>>     R/groupHist.R
>>>       19: # ignore messages like: argument col is not made use of
>>
>>
>>> The Title field should be in title case, current version then in 
>>> title case:
>>> ?Function Collection related to Plotting and Hydrology?
>>> ?Function Collection Related to Plotting and Hydrology?
>>>
>>
>>
>>     [[alternative HTML version deleted]]
>>
>>
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From luca.cerone at gmail.com  Wed Jun  3 12:51:03 2015
From: luca.cerone at gmail.com (Luca Cerone)
Date: Wed, 3 Jun 2015 12:51:03 +0200
Subject: [R-pkg-devel] Running a script after a package has been installed.
Message-ID: <CAFnz2-_aO4BKk6OCy_MskTo8mqX=2r3J08B2nFs_3vRWjxsKpQ@mail.gmail.com>

Dear all,
I am writing a package that contains some binaries that should be
linked in /usr/bin after the package
has been installed (I placed them in Rpackage/inst/bin)

I know I can use a script "configure" or "configure.win" to be run
before the package has been installed, is there a way I can write a
script that is run after the package has been correctly installed?

Thanks a lot in advance for the help,

Cheers,
Luca


From edd at debian.org  Wed Jun  3 14:13:19 2015
From: edd at debian.org (Dirk Eddelbuettel)
Date: Wed, 3 Jun 2015 07:13:19 -0500
Subject: [R-pkg-devel] Running a script after a package has been
	installed.
In-Reply-To: <CAFnz2-_aO4BKk6OCy_MskTo8mqX=2r3J08B2nFs_3vRWjxsKpQ@mail.gmail.com>
References: <CAFnz2-_aO4BKk6OCy_MskTo8mqX=2r3J08B2nFs_3vRWjxsKpQ@mail.gmail.com>
Message-ID: <21870.61279.256366.151692@max.nulle.part>


On 3 June 2015 at 12:51, Luca Cerone wrote:
| Dear all,
| I am writing a package that contains some binaries that should be
| linked in /usr/bin after the package

[ Don't do that, /usr is for your system. Use /usr/local/bin. ]

| has been installed (I placed them in Rpackage/inst/bin)
| 
| I know I can use a script "configure" or "configure.win" to be run
| before the package has been installed, is there a way I can write a
| script that is run after the package has been correctly installed?

You can't. I miss that too.

We do the same thing at work -- scripts (often via Rscript or littler) go
into into/scripts inside a package, we then have to (at least _one time_)
create a softlink from /usr/local/bin into (on our systems with Debian/Ubuntu
paths) /usr/local/lib/R/site-library/PKG/script/SCRIPT where PKG and SCRIPT
vary.

Having more 'hooks' in the R CMD INSTALL ... process would be nice, but it
doesn't exist now.

One alternative is to package the R package as a .deb package to use the
proper postinst.  But that may be overkill / does not help on other OS.

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From edd at debian.org  Wed Jun  3 14:31:12 2015
From: edd at debian.org (Dirk Eddelbuettel)
Date: Wed, 3 Jun 2015 07:31:12 -0500
Subject: [R-pkg-devel] Running a script after a package has
	been	installed.
In-Reply-To: <21870.61279.256366.151692@max.nulle.part>
References: <CAFnz2-_aO4BKk6OCy_MskTo8mqX=2r3J08B2nFs_3vRWjxsKpQ@mail.gmail.com>
	<21870.61279.256366.151692@max.nulle.part>
Message-ID: <21870.62352.224368.637520@max.nulle.part>


On 3 June 2015 at 07:13, Dirk Eddelbuettel wrote:
| 
| On 3 June 2015 at 12:51, Luca Cerone wrote:
| | Dear all,
| | I am writing a package that contains some binaries that should be
| | linked in /usr/bin after the package
| 
| [ Don't do that, /usr is for your system. Use /usr/local/bin. ]
| 
| | has been installed (I placed them in Rpackage/inst/bin)
| | 
| | I know I can use a script "configure" or "configure.win" to be run
| | before the package has been installed, is there a way I can write a
| | script that is run after the package has been correctly installed?
| 
| You can't. I miss that too.
| 
| We do the same thing at work -- scripts (often via Rscript or littler) go
| into into/scripts inside a package, we then have to (at least _one time_)
| create a softlink from /usr/local/bin into (on our systems with Debian/Ubuntu
| paths) /usr/local/lib/R/site-library/PKG/script/SCRIPT where PKG and SCRIPT
| vary.
| 
| Having more 'hooks' in the R CMD INSTALL ... process would be nice, but it
| doesn't exist now.

I just realized that you could abuse configure to create the link described 
above.  Not elegant, and in the wrong order ("don't know yet if build will
succeed") but a hack.

Dirk
 
| One alternative is to package the R package as a .deb package to use the
| proper postinst.  But that may be overkill / does not help on other OS.
| 
| Dirk
| 
| -- 
| http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
| 
| ______________________________________________
| R-package-devel at r-project.org mailing list
| https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From Rik.Verdonck at bio.kuleuven.be  Wed Jun  3 18:16:16 2015
From: Rik.Verdonck at bio.kuleuven.be (Rik Verdonck)
Date: Wed, 3 Jun 2015 16:16:16 +0000
Subject: [R-pkg-devel] Vignette does not show up after loading package
Message-ID: <FCEEA3779CE37C4691254848B5FCEF7B2330AB87@ICTS-S-MBX1.luna.kuleuven.be>

Hi all,




I am developing a package for the interpretation of mass spectrometry data, which can be found here: https://github.com/goat-anti-rabbit/labelpepmatch.R

I wrote a vignette that compiles fine into a .html using knitr in Rstudio.
The output line in the vignette.rmd file looks like :

??output: rmarkdown::html_vignette

However, when I use devtools::install_github("goat-anti-rabbit/labelpepmatch.R") or devtools::install_github("goat-anti-rabbit/labelpepmatch.R",build_vignettes = TRUE), the package loads normally, but no vignette is found when using browseVignettes("labelpepmatch") or vignette("labelpepmatch").

I don't really get this, because as far as I understood, shouldn't the package be able to build the vignette from scratch?

I also tried with these lines for output:

output:
  html_document:
    theme: readable
  pdf_document:
    highlight: default
    toc: yes

And it nicely knits into example html and pdf files, but no real files are created in the labelpepmatch/vignettes directory. Any suggestions here?


So: recap of my questions:
1. Should it be possible for the vignette to be built from scratch and if yes, what is missing in my package for this functionality to work?
2. How can I make knitr output a html AND pdf in my vignettes directory?

Looking forward to your replies.
Many, many thanks!
Rik



	[[alternative HTML version deleted]]


From murdoch.duncan at gmail.com  Wed Jun  3 18:41:18 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Wed, 03 Jun 2015 12:41:18 -0400
Subject: [R-pkg-devel] Vignette does not show up after loading package
In-Reply-To: <FCEEA3779CE37C4691254848B5FCEF7B2330AB87@ICTS-S-MBX1.luna.kuleuven.be>
References: <FCEEA3779CE37C4691254848B5FCEF7B2330AB87@ICTS-S-MBX1.luna.kuleuven.be>
Message-ID: <556F2E2E.9050104@gmail.com>

On 03/06/2015 12:16 PM, Rik Verdonck wrote:
> Hi all,
> 
> 
> 
> 
> I am developing a package for the interpretation of mass spectrometry data, which can be found here: https://github.com/goat-anti-rabbit/labelpepmatch.R

If your vignette is not written in Sweave, you need to tell R what
package handles it.  See the "Non-Sweave vignettes" section 1.4.2 in
Writing R Extensions.

Duncan Murdoch

> I wrote a vignette that compiles fine into a .html using knitr in Rstudio.
> The output line in the vignette.rmd file looks like :
> 
> ??output: rmarkdown::html_vignette
> 
> However, when I use devtools::install_github("goat-anti-rabbit/labelpepmatch.R") or devtools::install_github("goat-anti-rabbit/labelpepmatch.R",build_vignettes = TRUE), the package loads normally, but no vignette is found when using browseVignettes("labelpepmatch") or vignette("labelpepmatch").
> 
> I don't really get this, because as far as I understood, shouldn't the package be able to build the vignette from scratch?
> 
> I also tried with these lines for output:
> 
> output:
>   html_document:
>     theme: readable
>   pdf_document:
>     highlight: default
>     toc: yes
> 
> And it nicely knits into example html and pdf files, but no real files are created in the labelpepmatch/vignettes directory. Any suggestions here?
> 
> 
> So: recap of my questions:
> 1. Should it be possible for the vignette to be built from scratch and if yes, what is missing in my package for this functionality to work?
> 2. How can I make knitr output a html AND pdf in my vignettes directory?
> 
> Looking forward to your replies.
> Many, many thanks!
> Rik
> 
> 
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From carnivorescience at gmail.com  Thu Jun  4 19:47:27 2015
From: carnivorescience at gmail.com (Guillaume Chapron)
Date: Thu, 4 Jun 2015 19:47:27 +0200
Subject: [R-pkg-devel] Managing RNG in C code
Message-ID: <A1D77159-A342-40AE-8ED3-529019DCA70E@gmail.com>

Hello,

I am working on a package where I am passing some computations from R to C and back. The C code runs many stochastic trajectories of a population model (with the RNG from R through multiple calls to GetRNGstate and PutRNGstate). I would like that each trajectory has its own seed. 

My problem is that the guidelines to develop R packages write in the section '6.3 Random number generation' that "The random number generator is private to R; there is no way to select the kind of RNG or set the seed except by evaluating calls to the R functions."

The only way I see to get around this is to set the seed in R, run 1 trajectory in C, get results back in R, increment the seed in R, run a 2nd trajectory in C with this new seed, add the new results to the previous one in R, and repeat this e.g. 1000 times. Does this sound fine or should I be concerned that calling the C library so many times may slow down the computation (even if the library is only loaded 1 time at the beginning), e.g. is there a substantial overhead in interfacing from R to C and back?

Alternatively, is there a hack to get access by force to the private RNG in R from C and set its seed? This way, I could call the C code only 1 time and run the 1000 trajectories within C, updating the seed in R for each new trajectory (this is what I did when I previously used the GSL).

Thanks for any advice on this!

Guillaume

From cdetermanjr at gmail.com  Fri Jun  5 16:42:14 2015
From: cdetermanjr at gmail.com (Charles Determan)
Date: Fri, 5 Jun 2015 09:42:14 -0500
Subject: [R-pkg-devel] Creating a Makevars that includes objects from
	another compiler
Message-ID: <CAKxd1KN_dFz0x0YoiVntn8MvU1N7qsDxShFCfh9VGSex=FLh4g@mail.gmail.com>

Greetings,

Quick context, I have been working on developing a set of packages to make
GPU computing as simple as possible with R.  I have a functional package
that works very nicely with OpenCL based code (gpuR -
https://github.com/cdeterman/gpuR) but I also am building a companion CUDA
backend package (gpuRcuda - https://github.com/cdeterman/gpuRcuda) which is
stripped down to a single function at the moment to work out the compiling
issue described below.

The problem is, CUDA requires me to use the NVCC compiler.  So I cannot
just rely on the magic of Rcpp, I need to create a Makevars file.  I have
done so and I am very close but I cannot get the shared object file to be
created with NVCC.  The individual files compile with NVCC just fine, the
build script just keeps switching back to g++ for the shared object file.

A quick excerpt from my build script

'''
/usr/local/cuda-7.0/bin/nvcc -arch=sm_30 -Xcompiler -fPIC -Xcudafe
--diag_suppress=boolean_controlling_expr_is_constant -I/usr/share/R/include
-I/usr/include
-I/home/cdeterman/R/x86_64-pc-linux-gnu-library/3.2/RViennaCL/include
-I"/home/cdeterman/R/x86_64-pc-linux-gnu-library/3.2/RcppEigen/include"
viennacl_sgemm.cu -c

# NOW IT SWITCHES TO G++?

ccache g++-4.8 -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions
-Wl,-z,relro -o gpuRcuda.so RcppExports.o viennacl_cudaMatrix_sgemm.o
-L/usr/lib/R/lib -lR
'''

You can see my current Makevars file here (
https://github.com/cdeterman/gpuRcuda/blob/master/src/Makevars).

I have read in the 'Writing R Extensions' manual that this is possible with
the OBJECTS macro (
http://cran.r-project.org/doc/manuals/r-release/R-exts.html#Creating-shared-objects)
however I cannot figure out how to use it properly (and haven't been able
to find an example).  I have looked at the other packages on CRAN that also
use CUDA (such as WideLM which I tried to emulate) but I can't seem to
figure out why R keeps defaulting the shared library creation to g++.
Perhaps my shared object section of my Makevars is incorrect?

Any insights would be sincerely appreciated,
Charles

	[[alternative HTML version deleted]]


From cdetermanjr at gmail.com  Fri Jun  5 18:02:42 2015
From: cdetermanjr at gmail.com (Charles Determan)
Date: Fri, 5 Jun 2015 11:02:42 -0500
Subject: [R-pkg-devel] Creating a Makevars that includes objects from
	another compiler
In-Reply-To: <CAKxd1KN_dFz0x0YoiVntn8MvU1N7qsDxShFCfh9VGSex=FLh4g@mail.gmail.com>
References: <CAKxd1KN_dFz0x0YoiVntn8MvU1N7qsDxShFCfh9VGSex=FLh4g@mail.gmail.com>
Message-ID: <CAKxd1KOuc7ONfOhyuxJyLLoDw3uuA9ifYSu+=MqGiXW3iSa3xw@mail.gmail.com>

A quick followup, even when I try and use the g++ I cannot seem to pass the
objects (it keeps omitting the .o file generated from nvcc).  How can I
have my Makevars file pass a defined list of object files to the final
shared library call?

Alternate  gpuRcuda.so block where the build output still doesn't use the
OBJS variable (note, I confirmed that the OBJS variable does contain all .o
files)

gpuRcuda.so: $(OBJS)
        $(CXX) $< -o $@ $(R_LIBS) $(LIBS)

Regards,
Charles

On Fri, Jun 5, 2015 at 9:42 AM, Charles Determan <cdetermanjr at gmail.com>
wrote:

> Greetings,
>
> Quick context, I have been working on developing a set of packages to make
> GPU computing as simple as possible with R.  I have a functional package
> that works very nicely with OpenCL based code (gpuR -
> https://github.com/cdeterman/gpuR) but I also am building a companion
> CUDA backend package (gpuRcuda - https://github.com/cdeterman/gpuRcuda)
> which is stripped down to a single function at the moment to work out the
> compiling issue described below.
>
> The problem is, CUDA requires me to use the NVCC compiler.  So I cannot
> just rely on the magic of Rcpp, I need to create a Makevars file.  I have
> done so and I am very close but I cannot get the shared object file to be
> created with NVCC.  The individual files compile with NVCC just fine, the
> build script just keeps switching back to g++ for the shared object file.
>
> A quick excerpt from my build script
>
> '''
> /usr/local/cuda-7.0/bin/nvcc -arch=sm_30 -Xcompiler -fPIC -Xcudafe
> --diag_suppress=boolean_controlling_expr_is_constant -I/usr/share/R/include
> -I/usr/include
> -I/home/cdeterman/R/x86_64-pc-linux-gnu-library/3.2/RViennaCL/include
> -I"/home/cdeterman/R/x86_64-pc-linux-gnu-library/3.2/RcppEigen/include"
> viennacl_sgemm.cu -c
>
> # NOW IT SWITCHES TO G++?
>
> ccache g++-4.8 -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions
> -Wl,-z,relro -o gpuRcuda.so RcppExports.o viennacl_cudaMatrix_sgemm.o
> -L/usr/lib/R/lib -lR
> '''
>
> You can see my current Makevars file here (
> https://github.com/cdeterman/gpuRcuda/blob/master/src/Makevars).
>
> I have read in the 'Writing R Extensions' manual that this is possible
> with the OBJECTS macro (
> http://cran.r-project.org/doc/manuals/r-release/R-exts.html#Creating-shared-objects)
> however I cannot figure out how to use it properly (and haven't been able
> to find an example).  I have looked at the other packages on CRAN that also
> use CUDA (such as WideLM which I tried to emulate) but I can't seem to
> figure out why R keeps defaulting the shared library creation to g++.
> Perhaps my shared object section of my Makevars is incorrect?
>
> Any insights would be sincerely appreciated,
> Charles
>
>

	[[alternative HTML version deleted]]


From cdetermanjr at gmail.com  Fri Jun  5 20:08:10 2015
From: cdetermanjr at gmail.com (Charles Determan)
Date: Fri, 5 Jun 2015 13:08:10 -0500
Subject: [R-pkg-devel] Creating a Makevars that includes objects from
 another compiler
In-Reply-To: <CAL9B2veBGn7OY4kXcP3dEDE4znuZjvVEj+pNbeJTxFN1S0wz2g@mail.gmail.com>
References: <CAKxd1KN_dFz0x0YoiVntn8MvU1N7qsDxShFCfh9VGSex=FLh4g@mail.gmail.com>
	<CAKxd1KOuc7ONfOhyuxJyLLoDw3uuA9ifYSu+=MqGiXW3iSa3xw@mail.gmail.com>
	<CAL9B2veBGn7OY4kXcP3dEDE4znuZjvVEj+pNbeJTxFN1S0wz2g@mail.gmail.com>
Message-ID: <CAKxd1KNRhqihyX+6Fn0QORUB7q_ewU8HE5btLg5vEA=O+bQapw@mail.gmail.com>

I ultimately found more details in the 'Writing R Extensions' in another
section (http://www.hep.by/gnu/r-patched/r-exts/R-exts_11.html).  I needed
to assign the object files to the OBJECTS variable with an '=' sign and
remove anything below the .so block.  The new block that successfully
compiled looked like this:

OBJECTS = $(cu_sharedlibs) $(cpp_sharedlibs)
...
gpuRcuda.so: $(OBJECTS)

By using OBJECTS instead of OBJS it overwrote R's default assignment of
object files to link.

Cheers,
Charles

On Fri, Jun 5, 2015 at 11:13 AM, Neal Fultz <nfultz at gmail.com> wrote:

> Weird. Maybe it's not using that target at all, and is instead using a
> generic .so target?
>
> On Fri, Jun 5, 2015 at 9:02 AM, Charles Determan <cdetermanjr at gmail.com>
> wrote:
>
>> A quick followup, even when I try and use the g++ I cannot seem to pass
>> the
>> objects (it keeps omitting the .o file generated from nvcc).  How can I
>> have my Makevars file pass a defined list of object files to the final
>> shared library call?
>>
>> Alternate  gpuRcuda.so block where the build output still doesn't use the
>> OBJS variable (note, I confirmed that the OBJS variable does contain all
>> .o
>> files)
>>
>> gpuRcuda.so: $(OBJS)
>>         $(CXX) $< -o $@ $(R_LIBS) $(LIBS)
>>
>> Regards,
>> Charles
>>
>> On Fri, Jun 5, 2015 at 9:42 AM, Charles Determan <cdetermanjr at gmail.com>
>> wrote:
>>
>> > Greetings,
>> >
>> > Quick context, I have been working on developing a set of packages to
>> make
>> > GPU computing as simple as possible with R.  I have a functional package
>> > that works very nicely with OpenCL based code (gpuR -
>> > https://github.com/cdeterman/gpuR) but I also am building a companion
>> > CUDA backend package (gpuRcuda - https://github.com/cdeterman/gpuRcuda)
>> > which is stripped down to a single function at the moment to work out
>> the
>> > compiling issue described below.
>> >
>> > The problem is, CUDA requires me to use the NVCC compiler.  So I cannot
>> > just rely on the magic of Rcpp, I need to create a Makevars file.  I
>> have
>> > done so and I am very close but I cannot get the shared object file to
>> be
>> > created with NVCC.  The individual files compile with NVCC just fine,
>> the
>> > build script just keeps switching back to g++ for the shared object
>> file.
>> >
>> > A quick excerpt from my build script
>> >
>> > '''
>> > /usr/local/cuda-7.0/bin/nvcc -arch=sm_30 -Xcompiler -fPIC -Xcudafe
>> > --diag_suppress=boolean_controlling_expr_is_constant
>> -I/usr/share/R/include
>> > -I/usr/include
>> > -I/home/cdeterman/R/x86_64-pc-linux-gnu-library/3.2/RViennaCL/include
>> > -I"/home/cdeterman/R/x86_64-pc-linux-gnu-library/3.2/RcppEigen/include"
>> > viennacl_sgemm.cu -c
>> >
>> > # NOW IT SWITCHES TO G++?
>> >
>> > ccache g++-4.8 -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions
>> > -Wl,-z,relro -o gpuRcuda.so RcppExports.o viennacl_cudaMatrix_sgemm.o
>> > -L/usr/lib/R/lib -lR
>> > '''
>> >
>> > You can see my current Makevars file here (
>> > https://github.com/cdeterman/gpuRcuda/blob/master/src/Makevars).
>> >
>> > I have read in the 'Writing R Extensions' manual that this is possible
>> > with the OBJECTS macro (
>> >
>> http://cran.r-project.org/doc/manuals/r-release/R-exts.html#Creating-shared-objects
>> )
>> > however I cannot figure out how to use it properly (and haven't been
>> able
>> > to find an example).  I have looked at the other packages on CRAN that
>> also
>> > use CUDA (such as WideLM which I tried to emulate) but I can't seem to
>> > figure out why R keeps defaulting the shared library creation to g++.
>> > Perhaps my shared object section of my Makevars is incorrect?
>> >
>> > Any insights would be sincerely appreciated,
>> > Charles
>> >
>> >
>>
>>         [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>
>

	[[alternative HTML version deleted]]


From charlie at stat.umn.edu  Fri Jun  5 22:55:41 2015
From: charlie at stat.umn.edu (Charles Geyer)
Date: Fri, 5 Jun 2015 15:55:41 -0500
Subject: [R-pkg-devel] Managing RNG in C code
Message-ID: <CAKctRd0+AvVOcpnWhDyMBUT-bok93PqqLDF8HcFP-dXE9whcVw@mail.gmail.com>

The answer is do not try to manage the RNG from C.  Just do

GetRNGstate();

then generate a lot of random variates and then

PutRNGstate();

just before leaving.  There is only one call to each in one call of C from
R.

This is TRT (the Right Thing).  Anything else is TWT (the Wrong Thing).

Starting an RNG a whole bunch of times with lots of different seeds doesn't
do random number generation.  You want one continuous stream.  Only then
does the RNG have the properties claimed for it.

Moreover, you want your code to follow the R way (the tao of R).  Your use
of RNG should be just like every other R function.

The user should be able to save .Random.seed and restore it and get the
same results with another run.  So the user is doing reproducible
research.  The user shouild be able to use RNGkind to change the random
number generator.  If you muck about with this you get in the way of the
users.  Your code is less useful not more.

In my packages that use random number generation (especially mcmc), this is
the policy I follow.  The only thing I do with the random number generator
is save .Random.seed before going from R to C and store the saved value in
the returned object so the user does not have to.

As with many problems, the right answer is don't do that!


Message: 1
> Date: Thu, 4 Jun 2015 19:47:27 +0200
> From: Guillaume Chapron <carnivorescience at gmail.com>
> To: r-package-devel at r-project.org
> Subject: [R-pkg-devel] Managing RNG in C code
> Message-ID: <A1D77159-A342-40AE-8ED3-529019DCA70E at gmail.com>
> Content-Type: text/plain; charset=us-ascii
>
> Hello,
>
> I am working on a package where I am passing some computations from R to C
> and back. The C code runs many stochastic trajectories of a population
> model (with the RNG from R through multiple calls to GetRNGstate and
> PutRNGstate). I would like that each trajectory has its own seed.
>
> My problem is that the guidelines to develop R packages write in the
> section '6.3 Random number generation' that "The random number generator is
> private to R; there is no way to select the kind of RNG or set the seed
> except by evaluating calls to the R functions."
>
> The only way I see to get around this is to set the seed in R, run 1
> trajectory in C, get results back in R, increment the seed in R, run a 2nd
> trajectory in C with this new seed, add the new results to the previous one
> in R, and repeat this e.g. 1000 times. Does this sound fine or should I be
> concerned that calling the C library so many times may slow down the
> computation (even if the library is only loaded 1 time at the beginning),
> e.g. is there a substantial overhead in interfacing from R to C and back?
>
> Alternatively, is there a hack to get access by force to the private RNG
> in R from C and set its seed? This way, I could call the C code only 1 time
> and run the 1000 trajectories within C, updating the seed in R for each new
> trajectory (this is what I did when I previously used the GSL).
>
> Thanks for any advice on this!
>
> Guillaume
>



-- 
Charles Geyer
Professor, School of Statistics
University of Minnesota
charlie at stat.umn.edu

	[[alternative HTML version deleted]]


From nfultz at gmail.com  Sat Jun  6 00:19:49 2015
From: nfultz at gmail.com (Neal Fultz)
Date: Fri, 5 Jun 2015 15:19:49 -0700
Subject: [R-pkg-devel] Keeping secrets in R packages
Message-ID: <CAL9B2vfmonPwHEz3tfO7c3SeQwXqRnPO+taWj-hknfYNyy_gzA@mail.gmail.com>

I am working on updating the RGoogleDocs package to use OAuth2, since the
old api was recently turned off (at my job we use it as a poor mans
database).

As part of the auth process, I need to send google a client key and secret
in order to gain access to a spreadsheet. Is there a 'safe' place to store
the secret?
I would strongly prefer not requiring my end users to have to sign up for
their own google API keys, but I also do not want to store the secret in
the clear.

Any suggestions on best practices?

-Neal Fultz

	[[alternative HTML version deleted]]


From murdoch.duncan at gmail.com  Sat Jun  6 01:02:32 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Fri, 05 Jun 2015 19:02:32 -0400
Subject: [R-pkg-devel] Keeping secrets in R packages
In-Reply-To: <CAL9B2vfmonPwHEz3tfO7c3SeQwXqRnPO+taWj-hknfYNyy_gzA@mail.gmail.com>
References: <CAL9B2vfmonPwHEz3tfO7c3SeQwXqRnPO+taWj-hknfYNyy_gzA@mail.gmail.com>
Message-ID: <55722A88.5040303@gmail.com>

On 05/06/2015 6:19 PM, Neal Fultz wrote:
> I am working on updating the RGoogleDocs package to use OAuth2, since the
> old api was recently turned off (at my job we use it as a poor mans
> database).
> 
> As part of the auth process, I need to send google a client key and secret
> in order to gain access to a spreadsheet. Is there a 'safe' place to store
> the secret?
> I would strongly prefer not requiring my end users to have to sign up for
> their own google API keys, but I also do not want to store the secret in
> the clear.
> 
> Any suggestions on best practices?

I don't think there is any way to do this.  You could tell people that
you will email the key on request, but there's no way to tell them
something without telling them.

Duncan Murdoch


From edd at debian.org  Sat Jun  6 01:06:28 2015
From: edd at debian.org (Dirk Eddelbuettel)
Date: Fri, 5 Jun 2015 18:06:28 -0500
Subject: [R-pkg-devel] Keeping secrets in R packages
In-Reply-To: <CAL9B2vfmonPwHEz3tfO7c3SeQwXqRnPO+taWj-hknfYNyy_gzA@mail.gmail.com>
References: <CAL9B2vfmonPwHEz3tfO7c3SeQwXqRnPO+taWj-hknfYNyy_gzA@mail.gmail.com>
Message-ID: <21874.11124.543918.990023@max.nulle.part>


On 5 June 2015 at 15:19, Neal Fultz wrote:
| I am working on updating the RGoogleDocs package to use OAuth2, since the
| old api was recently turned off (at my job we use it as a poor mans
| database).
| 
| As part of the auth process, I need to send google a client key and secret
| in order to gain access to a spreadsheet. Is there a 'safe' place to store
| the secret?
| I would strongly prefer not requiring my end users to have to sign up for
| their own google API keys, but I also do not want to store the secret in
| the clear.
| 
| Any suggestions on best practices?

I am not sure what you can call 'best' but what is getting common for myself
is to source a file below $HOME, ie ~/.somethingrc, on launch.

See for example the CRAN package RPushBullet which also uses an OAuth2
interface:

  https://github.com/eddelbuettel/rpushbullet/blob/master/R/init.R#L21-L38

It stores the (JSON-encoded, JSON was already a given in the context) object
in a per-package environment, and for ease of other accessors also stores
them in the global options().

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From i.costigan at me.com  Sat Jun  6 02:11:47 2015
From: i.costigan at me.com (Imanuel Costigan)
Date: Sat, 06 Jun 2015 10:11:47 +1000
Subject: [R-pkg-devel] Keeping secrets in R packages
In-Reply-To: <CAL9B2vfmonPwHEz3tfO7c3SeQwXqRnPO+taWj-hknfYNyy_gzA@mail.gmail.com>
References: <CAL9B2vfmonPwHEz3tfO7c3SeQwXqRnPO+taWj-hknfYNyy_gzA@mail.gmail.com>
Message-ID: <8A92633A-56D6-4AD0-B93B-1E973AA0984F@me.com>

Have you checked out Hadley's secret package?


https://github.com/hadley/secure/blob/master/README.md


Sent from my iPhone

On 6 Jun 2015, at 8:19 am, Neal Fultz <nfultz at gmail.com> wrote:

I am working on updating the RGoogleDocs package to use OAuth2, since the
old api was recently turned off (at my job we use it as a poor mans
database).

As part of the auth process, I need to send google a client key and secret
in order to gain access to a spreadsheet. Is there a 'safe' place to store
the secret?
I would strongly prefer not requiring my end users to have to sign up for
their own google API keys, but I also do not want to store the secret in
the clear.

Any suggestions on best practices?

-Neal Fultz

   [[alternative HTML version deleted]]

______________________________________________
R-package-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel

	[[alternative HTML version deleted]]


From h.wickham at gmail.com  Sat Jun  6 15:19:17 2015
From: h.wickham at gmail.com (Hadley Wickham)
Date: Sat, 6 Jun 2015 08:19:17 -0500
Subject: [R-pkg-devel] Keeping secrets in R packages
In-Reply-To: <CAL9B2vfmonPwHEz3tfO7c3SeQwXqRnPO+taWj-hknfYNyy_gzA@mail.gmail.com>
References: <CAL9B2vfmonPwHEz3tfO7c3SeQwXqRnPO+taWj-hknfYNyy_gzA@mail.gmail.com>
Message-ID: <CABdHhvGMiwfhq9ZiR+3JKWUOb32AdGXq+1cpk1CTg8noL+7hJg@mail.gmail.com>

The API key and "secret" aren't actually secrets so you can include in the
package.

Hadley

On Friday, June 5, 2015, Neal Fultz <nfultz at gmail.com> wrote:

> I am working on updating the RGoogleDocs package to use OAuth2, since the
> old api was recently turned off (at my job we use it as a poor mans
> database).
>
> As part of the auth process, I need to send google a client key and secret
> in order to gain access to a spreadsheet. Is there a 'safe' place to store
> the secret?
> I would strongly prefer not requiring my end users to have to sign up for
> their own google API keys, but I also do not want to store the secret in
> the clear.
>
> Any suggestions on best practices?
>
> -Neal Fultz
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org <javascript:;> mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


-- 
http://had.co.nz/

	[[alternative HTML version deleted]]


From 538280 at gmail.com  Sun Jun  7 18:10:54 2015
From: 538280 at gmail.com (Greg Snow)
Date: Sun, 7 Jun 2015 10:10:54 -0600
Subject: [R-pkg-devel] Keeping secrets in R packages
In-Reply-To: <CAL9B2vfmonPwHEz3tfO7c3SeQwXqRnPO+taWj-hknfYNyy_gzA@mail.gmail.com>
References: <CAL9B2vfmonPwHEz3tfO7c3SeQwXqRnPO+taWj-hknfYNyy_gzA@mail.gmail.com>
Message-ID: <CAFEqCdwoaGCyUELucvOy4onRBSau3xf=yQ6t8g+cbesswwb5Qg@mail.gmail.com>

If you just want to protect the secret from casual view (but don't
need strong encryption), then you could just use a basic
encryption/decryption algorithm, include the encrypted secret in the
package and have the function decrypt it before sending.  See the
"petals" function in the TeachingDemos package for one simple example
of doing this.  This would not be strong encryption, an intermediate
level R programmer would be able to print the secret in plain text,
but it does protect from accidental or casual viewing (anyone seeing
it would have to have deliberately set out to do so and would not be
able to claim that they just accidentally saw it).  This is fairly
quick, easy, and self contained in the package.

On Fri, Jun 5, 2015 at 4:19 PM, Neal Fultz <nfultz at gmail.com> wrote:
> I am working on updating the RGoogleDocs package to use OAuth2, since the
> old api was recently turned off (at my job we use it as a poor mans
> database).
>
> As part of the auth process, I need to send google a client key and secret
> in order to gain access to a spreadsheet. Is there a 'safe' place to store
> the secret?
> I would strongly prefer not requiring my end users to have to sign up for
> their own google API keys, but I also do not want to store the secret in
> the clear.
>
> Any suggestions on best practices?
>
> -Neal Fultz
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel



-- 
Gregory (Greg) L. Snow Ph.D.
538280 at gmail.com


From nfultz at gmail.com  Sun Jun  7 18:26:58 2015
From: nfultz at gmail.com (Neal Fultz)
Date: Sun, 7 Jun 2015 09:26:58 -0700
Subject: [R-pkg-devel] Keeping secrets in R packages
In-Reply-To: <CAFEqCdwoaGCyUELucvOy4onRBSau3xf=yQ6t8g+cbesswwb5Qg@mail.gmail.com>
References: <CAL9B2vfmonPwHEz3tfO7c3SeQwXqRnPO+taWj-hknfYNyy_gzA@mail.gmail.com>
	<CAFEqCdwoaGCyUELucvOy4onRBSau3xf=yQ6t8g+cbesswwb5Qg@mail.gmail.com>
Message-ID: <CAL9B2vf5ytLsB+JU88N+FV4jfGmt6ncmpwTsDbtG-xa0Qx7FWA@mail.gmail.com>

Thanks everyone for the replies.

Here's a brief overview of my current plan for what to do with the parts
of  the three way handshake :

1. Client id / secret can/should go in the package, unlike passwords
2. Authorization code is used immediately and discarded
3. Token is cached out to a dotfile, and reread into a package variable in
.onAttach

With a little extra code to deal with expired tokens, I should be able get
our daily cron jobs back up.



On Sun, Jun 7, 2015 at 9:10 AM, Greg Snow <538280 at gmail.com> wrote:

> If you just want to protect the secret from casual view (but don't
> need strong encryption), then you could just use a basic
> encryption/decryption algorithm, include the encrypted secret in the
> package and have the function decrypt it before sending.  See the
> "petals" function in the TeachingDemos package for one simple example
> of doing this.  This would not be strong encryption, an intermediate
> level R programmer would be able to print the secret in plain text,
> but it does protect from accidental or casual viewing (anyone seeing
> it would have to have deliberately set out to do so and would not be
> able to claim that they just accidentally saw it).  This is fairly
> quick, easy, and self contained in the package.
>
> On Fri, Jun 5, 2015 at 4:19 PM, Neal Fultz <nfultz at gmail.com> wrote:
> > I am working on updating the RGoogleDocs package to use OAuth2, since the
> > old api was recently turned off (at my job we use it as a poor mans
> > database).
> >
> > As part of the auth process, I need to send google a client key and
> secret
> > in order to gain access to a spreadsheet. Is there a 'safe' place to
> store
> > the secret?
> > I would strongly prefer not requiring my end users to have to sign up for
> > their own google API keys, but I also do not want to store the secret in
> > the clear.
> >
> > Any suggestions on best practices?
> >
> > -Neal Fultz
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>
>
> --
> Gregory (Greg) L. Snow Ph.D.
> 538280 at gmail.com
>

	[[alternative HTML version deleted]]


From rmh at temple.edu  Sun Jun  7 20:51:05 2015
From: rmh at temple.edu (Richard M. Heiberger)
Date: Sun, 7 Jun 2015 14:51:05 -0400
Subject: [R-pkg-devel] tools::checkReplaceFuns gives results I don't
	understand
Message-ID: <CAGx1TMD23d=V=Fb+GYOgh7Ji0E=6-=H_jN5TXXP-=ciYP_3s4g@mail.gmail.com>

I think this is related to the difficulty I wrote about last week.
This example is with last night's development build and uses only
R-core provided code.

I don't understand this Error message

Error in get(f, envir = code_env) : object '[<-.ts' not found

when I can display the object stats:::`[<-.ts`

I am hoping this is related to these messages that I receive when I do
R CMD check on my package:

* checking replacement functions ... WARNING
Error in validObject(.Object) :
  invalid class "ObjectsWithPackage" object: superclass "atomicVector"
not defined in the environment of the object's class
Calls: <Anonymous> ... metaNameUndo -> new -> initialize -> initialize
-> validObject
Execution halted
The argument of a replacement function which corresponds to the right
hand side must be named 'value'.

Rich




R Under development (unstable) (2015-06-06 r68484) -- "Unsuffered Consequences"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> > options(STERM='iESS', str.dendrogram.last="'", editor='emacsclient', show.error.locations=TRUE)
>
> search()
 [1] ".GlobalEnv"        "ESSR"              "package:stats"
 [4] "package:graphics"  "package:grDevices" "package:utils"
 [7] "package:datasets"  "package:methods"   "Autoloads"
[10] "package:base"
> library(stats)
> for (i in searchpaths()) {cat(i,"\n");try(tools::checkReplaceFuns(dir=i))}
.GlobalEnv
Error in tools::checkReplaceFuns(dir = i) :
  directory '.GlobalEnv' does not exist
ESSR
Error in tools::checkReplaceFuns(dir = i) :
  directory 'ESSR' does not exist
/Library/Frameworks/R.framework/Versions/3.3/Resources/library/stats
Error in get(f, envir = code_env) : object '[<-.ts' not found
/Library/Frameworks/R.framework/Versions/3.3/Resources/library/graphics
/Library/Frameworks/R.framework/Versions/3.3/Resources/library/grDevices
Error in get(f, envir = code_env) : object '[<-.raster' not found
/Library/Frameworks/R.framework/Versions/3.3/Resources/library/utils
Error in get(f, envir = code_env) : object '$<-.bibentry' not found
/Library/Frameworks/R.framework/Versions/3.3/Resources/library/datasets
Error in tools::checkReplaceFuns(dir = i) :
  directory '/Library/Frameworks/R.framework/Versions/3.3/Resources/library/datasets'
does not contain R code
/Library/Frameworks/R.framework/Versions/3.3/Resources/library/methods
Autoloads
Error in tools::checkReplaceFuns(dir = i) :
  directory 'Autoloads' does not exist
/Library/Frameworks/R.framework/Resources/library/base
> search()
 [1] ".GlobalEnv"        "ESSR"              "package:stats"
 [4] "package:graphics"  "package:grDevices" "package:utils"
 [7] "package:datasets"  "package:methods"   "Autoloads"
[10] "package:base"
> stats:::`[<-.ts`
function (x, i, j, value)
{
    y <- NextMethod("[<-")
    if (NROW(y) != NROW(x))
        stop("only replacement of elements is allowed")
    y
}
<bytecode: 0x7f9d349fe830>
<environment: namespace:stats>
>


From wenchel at gmail.com  Tue Jun  9 16:24:02 2015
From: wenchel at gmail.com (Seth Wenchel)
Date: Tue, 9 Jun 2015 10:24:02 -0400
Subject: [R-pkg-devel] CRAN incoming feasibility Error
Message-ID: <CAEFOC2KRifgs-zrNwxrrpMu=6_Eu1X5CZif51H4iRciKSAvVUw@mail.gmail.com>

Hi All,

I'm running into an error with R CMD check --as-cran on R 3.2.0 for
windows.  Obviously i've tried googling but i haven't found this specific
issue.  I was wondering if it is because of my company's network settings.
FWIW, it makes it through devtools::check() just fine.

Cheers,
Seth

c:\Users\itsme\Documents\anAwesomePackge.Rcheck>"c:\Program
Files\R\R-3.2.0\bin\R.exe" -
-no-site-file --vanilla --no-environ --no-save --no-restore CMD check
--as-cran
"../anAwesomePackge_1.0.0.tar.gz"
* using log directory
'c:/Users/itsme/Documents/anAwesomePackge.Rcheck/anAwesomePackge.Rcheck'
* using R version 3.2.0 (2015-04-16)
* using platform: x86_64-w64-mingw32 (64-bit)
* using session charset: ISO8859-1
* using option '--as-cran'
* checking for file 'anAwesomePackge/DESCRIPTION' ... OK
* checking extension type ... Package
* this is package 'anAwesomePackge' version '1.0.0'
* checking CRAN incoming feasibility ...Error in utils::contrib.url(urls,
"source") :
  trying to use CRAN without setting a mirror
Execution halted

	[[alternative HTML version deleted]]


From edd at debian.org  Tue Jun  9 17:27:19 2015
From: edd at debian.org (Dirk Eddelbuettel)
Date: Tue, 9 Jun 2015 10:27:19 -0500
Subject: [R-pkg-devel] CRAN incoming feasibility Error
In-Reply-To: <CAEFOC2KRifgs-zrNwxrrpMu=6_Eu1X5CZif51H4iRciKSAvVUw@mail.gmail.com>
References: <CAEFOC2KRifgs-zrNwxrrpMu=6_Eu1X5CZif51H4iRciKSAvVUw@mail.gmail.com>
Message-ID: <21879.1495.410890.203103@max.nulle.part>


On 9 June 2015 at 10:24, Seth Wenchel wrote:
| Hi All,
| 
| I'm running into an error with R CMD check --as-cran on R 3.2.0 for
| windows.  Obviously i've tried googling but i haven't found this specific
| issue.  I was wondering if it is because of my company's network settings.
| FWIW, it makes it through devtools::check() just fine.
| 
| Cheers,
| Seth
| 
| c:\Users\itsme\Documents\anAwesomePackge.Rcheck>"c:\Program
| Files\R\R-3.2.0\bin\R.exe" -
| -no-site-file --vanilla --no-environ --no-save --no-restore CMD check
| --as-cran
| "../anAwesomePackge_1.0.0.tar.gz"
| * using log directory
| 'c:/Users/itsme/Documents/anAwesomePackge.Rcheck/anAwesomePackge.Rcheck'
| * using R version 3.2.0 (2015-04-16)
| * using platform: x86_64-w64-mingw32 (64-bit)
| * using session charset: ISO8859-1
| * using option '--as-cran'
| * checking for file 'anAwesomePackge/DESCRIPTION' ... OK
| * checking extension type ... Package
| * this is package 'anAwesomePackge' version '1.0.0'
| * checking CRAN incoming feasibility ...Error in utils::contrib.url(urls,
| "source") :
|   trying to use CRAN without setting a mirror

That is pretty explicit. R does not where to find a CRAN mirror, and the
powers that be decided to not set a default.

So do something like

## Example of Rprofile.site
local({
    r <- getOption("repos")
    r["CRAN"] <- "http://cran.rstudio.com"
    options(repos = r)
})

in Rprofile.site or Rprofile -- and let go of some of the switches in

| -no-site-file --vanilla --no-environ --no-save --no-restore CMD check
| --as-cran

as you are being bitten by just that: too vanilla a session.

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From wenchel at gmail.com  Tue Jun  9 17:47:59 2015
From: wenchel at gmail.com (Seth Wenchel)
Date: Tue, 9 Jun 2015 11:47:59 -0400
Subject: [R-pkg-devel] CRAN incoming feasibility Error
In-Reply-To: <21879.1495.410890.203103@max.nulle.part>
References: <CAEFOC2KRifgs-zrNwxrrpMu=6_Eu1X5CZif51H4iRciKSAvVUw@mail.gmail.com>
	<21879.1495.410890.203103@max.nulle.part>
Message-ID: <CAEFOC2JT_xndz5uqMinx7O+O82uTrveXY2ps-CqM1Wm6UqgbUQ@mail.gmail.com>

Actually, all of those switches came in as i was trying to resolve this
issue.I started with just R CMD check --as-cran.  In fact, my Rprofile.site
does have a similar statement and sets a proxy but it doesn't seem good
enough for the CRAN checks.

### Rprofile.site contents
Sys.setenv(http_proxy="http://proxy.mitre.org:80")

local({
  r <- getOption("repos")
  r["CRAN"] <- "http://watson.nci.nih.gov/cran_mirror/"
  r["MITRE"] <- "http://mcran.mitre.org"
  options(repos=r)
})

  options(help_type="html")


### few switches output

c:\Users\itsme\Documents\anAwesomePackge.Rcheck>"c:\Program
Files\R\R-3.2.0\bin\R.exe" C
MD check --as-cran "../anAwesomePackge_1.0.0.tar.gz"
* using log directory
'c:/Users/itsme/Documents/anAwesomePackge.Rcheck/anAwesomePackge.Rcheck'
* using R version 3.2.0 (2015-04-16)
* using platform: x86_64-w64-mingw32 (64-bit)
* using session charset: ISO8859-1
* using option '--as-cran'
* checking for file 'anAwesomePackge/DESCRIPTION' ... OK
* checking extension type ... Package
* this is package 'anAwesomePackge' version '1.0.0'
* checking CRAN incoming feasibility ...Error in utils::contrib.url(urls,
"source") :
  trying to use CRAN without setting a mirror
Execution halted



On Tue, Jun 9, 2015 at 11:27 AM, Dirk Eddelbuettel <edd at debian.org> wrote:

>
> On 9 June 2015 at 10:24, Seth Wenchel wrote:
> | Hi All,
> |
> | I'm running into an error with R CMD check --as-cran on R 3.2.0 for
> | windows.  Obviously i've tried googling but i haven't found this specific
> | issue.  I was wondering if it is because of my company's network
> settings.
> | FWIW, it makes it through devtools::check() just fine.
> |
> | Cheers,
> | Seth
> |
> | c:\Users\itsme\Documents\anAwesomePackge.Rcheck>"c:\Program
> | Files\R\R-3.2.0\bin\R.exe" -
> | -no-site-file --vanilla --no-environ --no-save --no-restore CMD check
> | --as-cran
> | "../anAwesomePackge_1.0.0.tar.gz"
> | * using log directory
> | 'c:/Users/itsme/Documents/anAwesomePackge.Rcheck/anAwesomePackge.Rcheck'
> | * using R version 3.2.0 (2015-04-16)
> | * using platform: x86_64-w64-mingw32 (64-bit)
> | * using session charset: ISO8859-1
> | * using option '--as-cran'
> | * checking for file 'anAwesomePackge/DESCRIPTION' ... OK
> | * checking extension type ... Package
> | * this is package 'anAwesomePackge' version '1.0.0'
> | * checking CRAN incoming feasibility ...Error in utils::contrib.url(urls,
> | "source") :
> |   trying to use CRAN without setting a mirror
>
> That is pretty explicit. R does not where to find a CRAN mirror, and the
> powers that be decided to not set a default.
>
> So do something like
>
> ## Example of Rprofile.site
> local({
>     r <- getOption("repos")
>     r["CRAN"] <- "http://cran.rstudio.com"
>     options(repos = r)
> })
>
> in Rprofile.site or Rprofile -- and let go of some of the switches in
>
> | -no-site-file --vanilla --no-environ --no-save --no-restore CMD check
> | --as-cran
>
> as you are being bitten by just that: too vanilla a session.
>
> Dirk
>
> --
> http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>

	[[alternative HTML version deleted]]


From edd at debian.org  Tue Jun  9 19:06:42 2015
From: edd at debian.org (Dirk Eddelbuettel)
Date: Tue, 9 Jun 2015 12:06:42 -0500
Subject: [R-pkg-devel] CRAN incoming feasibility Error
In-Reply-To: <CAEFOC2JT_xndz5uqMinx7O+O82uTrveXY2ps-CqM1Wm6UqgbUQ@mail.gmail.com>
References: <CAEFOC2KRifgs-zrNwxrrpMu=6_Eu1X5CZif51H4iRciKSAvVUw@mail.gmail.com>
	<21879.1495.410890.203103@max.nulle.part>
	<CAEFOC2JT_xndz5uqMinx7O+O82uTrveXY2ps-CqM1Wm6UqgbUQ@mail.gmail.com>
Message-ID: <21879.7458.253001.262941@max.nulle.part>


On 9 June 2015 at 11:47, Seth Wenchel wrote:
| Actually, all of those switches came in as i was trying to resolve this issue.I
| started with just R CMD check --as-cran.? In fact, my Rprofile.site does have a
| similar statement and sets a proxy but it doesn't seem good enough for the CRAN
| checks.
| 
| ### Rprofile.site contents
| Sys.setenv(http_proxy="http://proxy.mitre.org:80")
| 
| local({
| ? r <- getOption("repos")
| ? r["CRAN"] <- "http://watson.nci.nih.gov/cran_mirror/"
| ? r["MITRE"] <- "http://mcran.mitre.org"
| ? options(repos=r)
| })???
| 
| ? options(help_type="html")

Dang. In which case I bail. I have weird things on Windows too -- it would
never see my external library directory (set via .libPaths in Rprofile.site)
and I think I gave up and copied the libraries I needed for a test into
$R_HOME/library instead.

Maybe someone else can help.

Sorry,  Dirk
 
 
| ### few switches output
| 
| c:\Users\itsme\Documents\anAwesomePackge.Rcheck>"c:\Program Files\R\R-3.2.0\bin
| \R.exe" C
| MD check --as-cran "../anAwesomePackge_1.0.0.tar.gz"
| * using log directory 'c:/Users/itsme/Documents/anAwesomePackge.Rcheck/
| anAwesomePackge.Rcheck'
| * using R version 3.2.0 (2015-04-16)
| * using platform: x86_64-w64-mingw32 (64-bit)
| * using session charset: ISO8859-1
| * using option '--as-cran'
| * checking for file 'anAwesomePackge/DESCRIPTION' ... OK
| * checking extension type ... Package
| * this is package 'anAwesomePackge' version '1.0.0'
| * checking CRAN incoming feasibility ...Error in utils::contrib.url(urls,
| "source") :
| ? trying to use CRAN without setting a mirror
| Execution halted
| 
| 
| 
| On Tue, Jun 9, 2015 at 11:27 AM, Dirk Eddelbuettel <edd at debian.org> wrote:
| 
| 
|     On 9 June 2015 at 10:24, Seth Wenchel wrote:
|     | Hi All,
|     |
|     | I'm running into an error with R CMD check --as-cran on R 3.2.0 for
|     | windows.? Obviously i've tried googling but i haven't found this specific
|     | issue.? I was wondering if it is because of my company's network
|     settings.
|     | FWIW, it makes it through devtools::check() just fine.
|     |
|     | Cheers,
|     | Seth
|     |
|     | c:\Users\itsme\Documents\anAwesomePackge.Rcheck>"c:\Program
|     | Files\R\R-3.2.0\bin\R.exe" -
|     | -no-site-file --vanilla --no-environ --no-save --no-restore CMD check
|     | --as-cran
|     | "../anAwesomePackge_1.0.0.tar.gz"
|     | * using log directory
|     | 'c:/Users/itsme/Documents/anAwesomePackge.Rcheck/anAwesomePackge.Rcheck'
|     | * using R version 3.2.0 (2015-04-16)
|     | * using platform: x86_64-w64-mingw32 (64-bit)
|     | * using session charset: ISO8859-1
|     | * using option '--as-cran'
|     | * checking for file 'anAwesomePackge/DESCRIPTION' ... OK
|     | * checking extension type ... Package
|     | * this is package 'anAwesomePackge' version '1.0.0'
|     | * checking CRAN incoming feasibility ...Error in utils::contrib.url(urls,
|     | "source") :
|     |? ?trying to use CRAN without setting a mirror
| 
|     That is pretty explicit. R does not where to find a CRAN mirror, and the
|     powers that be decided to not set a default.
| 
|     So do something like
| 
|     ## Example of Rprofile.site
|     local({
|     ? ? r <- getOption("repos")
|     ? ? r["CRAN"] <- "http://cran.rstudio.com"
|     ? ? options(repos = r)
|     })
| 
|     in Rprofile.site or Rprofile -- and let go of some of the switches in
|    
|     | -no-site-file --vanilla --no-environ --no-save --no-restore CMD check
|     | --as-cran
| 
|     as you are being bitten by just that: too vanilla a session.
|    
|     Dirk
| 
|     --
|     http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
| 
| 

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From tkeitt at utexas.edu  Tue Jun  9 22:33:23 2015
From: tkeitt at utexas.edu (Tim Keitt)
Date: Tue, 9 Jun 2015 15:33:23 -0500
Subject: [R-pkg-devel] CRAN and CMake
Message-ID: <CANnL8gqisJyDgmCwuC6zO=FZK++P+0ifEVtqx9CF7zY3Je4U-g@mail.gmail.com>

I am thinking of writing an R wrapper for some code that uses cmake. If I
include that code under the src directory (ie in src/<the_other_project>/),
am I likely to run into problems with CRAN? Never been down that road and
would like to know if this is feasible. I guess I would have to call cmake
in the configure script.

I know I can simply keep the other project code separate. Just wondering if
the above setup makes any sense.

THK

http://www.keittlab.org/

	[[alternative HTML version deleted]]


From csardi.gabor at gmail.com  Tue Jun  9 22:54:42 2015
From: csardi.gabor at gmail.com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Tue, 9 Jun 2015 16:54:42 -0400
Subject: [R-pkg-devel] CRAN and CMake
In-Reply-To: <CANnL8gqisJyDgmCwuC6zO=FZK++P+0ifEVtqx9CF7zY3Je4U-g@mail.gmail.com>
References: <CANnL8gqisJyDgmCwuC6zO=FZK++P+0ifEVtqx9CF7zY3Je4U-g@mail.gmail.com>
Message-ID: <CABtg=KnGWuKvZiOjDFVhBU0Vr5r=u6YwDWYWwk2Lta0n3aPsBQ@mail.gmail.com>

I think you will need to declare it as a system requirement, e.g. like
this package:
https://github.com/cran/qtbase/blob/master/DESCRIPTION

But of course I cannot say for sure that this is still accepted on CRAN.

FWIW I was experimenting with putting cmake in an R package, so that
other packages can use it at build/install time, and it seems
possible, so if there is interest I can give it another try.

Gabor

On Tue, Jun 9, 2015 at 4:33 PM, Tim Keitt <tkeitt at utexas.edu> wrote:
> I am thinking of writing an R wrapper for some code that uses cmake. If I
> include that code under the src directory (ie in src/<the_other_project>/),
> am I likely to run into problems with CRAN? Never been down that road and
> would like to know if this is feasible. I guess I would have to call cmake
> in the configure script.
>
> I know I can simply keep the other project code separate. Just wondering if
> the above setup makes any sense.
>
> THK
>
> http://www.keittlab.org/
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From csardi.gabor at gmail.com  Tue Jun  9 23:08:55 2015
From: csardi.gabor at gmail.com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Tue, 9 Jun 2015 17:08:55 -0400
Subject: [R-pkg-devel] CRAN and CMake
In-Reply-To: <EB220004-CDFA-45B8-B6B2-B42B38C56119@mrc-lmb.cam.ac.uk>
References: <CANnL8gqisJyDgmCwuC6zO=FZK++P+0ifEVtqx9CF7zY3Je4U-g@mail.gmail.com>
	<CABtg=KnGWuKvZiOjDFVhBU0Vr5r=u6YwDWYWwk2Lta0n3aPsBQ@mail.gmail.com>
	<EB220004-CDFA-45B8-B6B2-B42B38C56119@mrc-lmb.cam.ac.uk>
Message-ID: <CABtg=KnHf+s0_r4rnqSb6xuJGys+A2avxKfhPtOvMaTZAM+Otg@mail.gmail.com>

On Tue, Jun 9, 2015 at 5:05 PM, Gregory Jefferis
<jefferis at mrc-lmb.cam.ac.uk> wrote:
[...]
> If you look on GitHub you'll find a cmaker package. Attempts to get this onto cran foundered as far as I know. I for one would be interested if it could be made CRAN acceptable. Best,

Thanks! I just looked at it, but it seems that it actually requires an
external system cmake. I am trying to put cmake itself into a package.

Gabor

>
> Greg.
>


From jefferis at mrc-lmb.cam.ac.uk  Tue Jun  9 23:05:35 2015
From: jefferis at mrc-lmb.cam.ac.uk (Gregory Jefferis)
Date: Tue, 9 Jun 2015 22:05:35 +0100
Subject: [R-pkg-devel] CRAN and CMake
In-Reply-To: <CABtg=KnGWuKvZiOjDFVhBU0Vr5r=u6YwDWYWwk2Lta0n3aPsBQ@mail.gmail.com>
References: <CANnL8gqisJyDgmCwuC6zO=FZK++P+0ifEVtqx9CF7zY3Je4U-g@mail.gmail.com>
	<CABtg=KnGWuKvZiOjDFVhBU0Vr5r=u6YwDWYWwk2Lta0n3aPsBQ@mail.gmail.com>
Message-ID: <EB220004-CDFA-45B8-B6B2-B42B38C56119@mrc-lmb.cam.ac.uk>



> On 9 Jun 2015, at 21:54, G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:
> 
> I think you will need to declare it as a system requirement, e.g. like
> this package:
> https://github.com/cran/qtbase/blob/master/DESCRIPTION
> 
> But of course I cannot say for sure that this is still accepted on CRAN.
> 
> FWIW I was experimenting with putting cmake in an R package, so that
> other packages can use it at build/install time, and it seems
> possible, so if there is interest I can give it another try.

If you look on GitHub you'll find a cmaker package. Attempts to get this onto cran foundered as far as I know. I for one would be interested if it could be made CRAN acceptable. Best,

Greg. 


From jefferis at mrc-lmb.cam.ac.uk  Wed Jun 10 00:10:56 2015
From: jefferis at mrc-lmb.cam.ac.uk (Gregory Jefferis)
Date: Tue, 9 Jun 2015 23:10:56 +0100
Subject: [R-pkg-devel] CRAN and CMake
In-Reply-To: <CABtg=KnHf+s0_r4rnqSb6xuJGys+A2avxKfhPtOvMaTZAM+Otg@mail.gmail.com>
References: <CANnL8gqisJyDgmCwuC6zO=FZK++P+0ifEVtqx9CF7zY3Je4U-g@mail.gmail.com>
	<CABtg=KnGWuKvZiOjDFVhBU0Vr5r=u6YwDWYWwk2Lta0n3aPsBQ@mail.gmail.com>
	<EB220004-CDFA-45B8-B6B2-B42B38C56119@mrc-lmb.cam.ac.uk>
	<CABtg=KnHf+s0_r4rnqSb6xuJGys+A2avxKfhPtOvMaTZAM+Otg@mail.gmail.com>
Message-ID: <A3C46320-A80B-4FD6-9D2C-55C3514A0B19@mrc-lmb.cam.ac.uk>



> On 9 Jun 2015, at 22:08, G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:
> 
> Thanks! I just looked at it, but it seems that it actually requires an
> external system cmake. I am trying to put cmake itself into a package.

This one: 

https://github.com/stnava/cmaker

I remember now there is another cmaker!

Best,

Greg. 

From csardi.gabor at gmail.com  Wed Jun 10 00:21:48 2015
From: csardi.gabor at gmail.com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Tue, 9 Jun 2015 18:21:48 -0400
Subject: [R-pkg-devel] CRAN and CMake
In-Reply-To: <A3C46320-A80B-4FD6-9D2C-55C3514A0B19@mrc-lmb.cam.ac.uk>
References: <CANnL8gqisJyDgmCwuC6zO=FZK++P+0ifEVtqx9CF7zY3Je4U-g@mail.gmail.com>
	<CABtg=KnGWuKvZiOjDFVhBU0Vr5r=u6YwDWYWwk2Lta0n3aPsBQ@mail.gmail.com>
	<EB220004-CDFA-45B8-B6B2-B42B38C56119@mrc-lmb.cam.ac.uk>
	<CABtg=KnHf+s0_r4rnqSb6xuJGys+A2avxKfhPtOvMaTZAM+Otg@mail.gmail.com>
	<A3C46320-A80B-4FD6-9D2C-55C3514A0B19@mrc-lmb.cam.ac.uk>
Message-ID: <CABtg=KkerUmW=PNTPfnD0hZmpY=Tb9Z_-DW6k3J-uz3+wNABCA@mail.gmail.com>

Oh, cool, I looked at another one. As I see the problem is windows,
which shouldn't be too hard to fix, the cmake build surely works on
Windows.

Gabor

On Tue, Jun 9, 2015 at 6:10 PM, Gregory Jefferis
<jefferis at mrc-lmb.cam.ac.uk> wrote:
>
>
>> On 9 Jun 2015, at 22:08, G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:
>>
>> Thanks! I just looked at it, but it seems that it actually requires an
>> external system cmake. I am trying to put cmake itself into a package.
>
> This one:
>
> https://github.com/stnava/cmaker
>
> I remember now there is another cmaker!
>
> Best,
>
> Greg.


From murdoch.duncan at gmail.com  Wed Jun 10 00:23:27 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Tue, 09 Jun 2015 18:23:27 -0400
Subject: [R-pkg-devel] CRAN and CMake
In-Reply-To: <A3C46320-A80B-4FD6-9D2C-55C3514A0B19@mrc-lmb.cam.ac.uk>
References: <CANnL8gqisJyDgmCwuC6zO=FZK++P+0ifEVtqx9CF7zY3Je4U-g@mail.gmail.com>	<CABtg=KnGWuKvZiOjDFVhBU0Vr5r=u6YwDWYWwk2Lta0n3aPsBQ@mail.gmail.com>	<EB220004-CDFA-45B8-B6B2-B42B38C56119@mrc-lmb.cam.ac.uk>	<CABtg=KnHf+s0_r4rnqSb6xuJGys+A2avxKfhPtOvMaTZAM+Otg@mail.gmail.com>
	<A3C46320-A80B-4FD6-9D2C-55C3514A0B19@mrc-lmb.cam.ac.uk>
Message-ID: <5577675F.40706@gmail.com>

On 09/06/2015 6:10 PM, Gregory Jefferis wrote:
> 
> 
>> On 9 Jun 2015, at 22:08, G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:
>>
>> Thanks! I just looked at it, but it seems that it actually requires an
>> external system cmake. I am trying to put cmake itself into a package.
> 
> This one: 
> 
> https://github.com/stnava/cmaker
> 
> I remember now there is another cmaker!
> 

The DESCRIPTION file says this:

OS_type: unix
SystemRequirements: clang (recommended)

One of the CRAN policies is "Package authors should make all reasonable
efforts to provide cross-platform portable code."  cmake describes
itself as a cross-platform solution and offers Windows binaries, so does
it really make sense to limit it to Unix?

Also of concern are the export restrictions on this page:

http://www.cmake.org/download/

I suspect CRAN isn't going to want to be involved with those.

Duncan Murdoch


From csardi.gabor at gmail.com  Wed Jun 10 00:39:47 2015
From: csardi.gabor at gmail.com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Tue, 9 Jun 2015 18:39:47 -0400
Subject: [R-pkg-devel] CRAN and CMake
In-Reply-To: <5577675F.40706@gmail.com>
References: <CANnL8gqisJyDgmCwuC6zO=FZK++P+0ifEVtqx9CF7zY3Je4U-g@mail.gmail.com>
	<CABtg=KnGWuKvZiOjDFVhBU0Vr5r=u6YwDWYWwk2Lta0n3aPsBQ@mail.gmail.com>
	<EB220004-CDFA-45B8-B6B2-B42B38C56119@mrc-lmb.cam.ac.uk>
	<CABtg=KnHf+s0_r4rnqSb6xuJGys+A2avxKfhPtOvMaTZAM+Otg@mail.gmail.com>
	<A3C46320-A80B-4FD6-9D2C-55C3514A0B19@mrc-lmb.cam.ac.uk>
	<5577675F.40706@gmail.com>
Message-ID: <CABtg=KkBiy3SXksysavEoCAcsomzgrS77sGDFfKkw1sOMvN-qg@mail.gmail.com>

On Tue, Jun 9, 2015 at 6:23 PM, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
[...]
> The DESCRIPTION file says this:
>
> OS_type: unix
> SystemRequirements: clang (recommended)
>
> One of the CRAN policies is "Package authors should make all reasonable
> efforts to provide cross-platform portable code."  cmake describes
> itself as a cross-platform solution and offers Windows binaries, so does
> it really make sense to limit it to Unix?

That's not needed. I am fairly sure that cmake works on all platforms
R works on, and more. So we can fix that.

> Also of concern are the export restrictions on this page:
>
> http://www.cmake.org/download/
>
> I suspect CRAN isn't going to want to be involved with those.

It does not apply to cmake. This is just a generic disclaimer on their
web page. cmake is included in virtually all Linux distributions and
it is distributed from the US.

Gabor

> Duncan Murdoch


From maechler at stat.math.ethz.ch  Wed Jun 10 09:21:12 2015
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Wed, 10 Jun 2015 09:21:12 +0200
Subject: [R-pkg-devel] CRAN and CMake
In-Reply-To: <CABtg=KkBiy3SXksysavEoCAcsomzgrS77sGDFfKkw1sOMvN-qg@mail.gmail.com>
References: <CANnL8gqisJyDgmCwuC6zO=FZK++P+0ifEVtqx9CF7zY3Je4U-g@mail.gmail.com>
	<CABtg=KnGWuKvZiOjDFVhBU0Vr5r=u6YwDWYWwk2Lta0n3aPsBQ@mail.gmail.com>
	<EB220004-CDFA-45B8-B6B2-B42B38C56119@mrc-lmb.cam.ac.uk>
	<CABtg=KnHf+s0_r4rnqSb6xuJGys+A2avxKfhPtOvMaTZAM+Otg@mail.gmail.com>
	<A3C46320-A80B-4FD6-9D2C-55C3514A0B19@mrc-lmb.cam.ac.uk>
	<5577675F.40706@gmail.com>
	<CABtg=KkBiy3SXksysavEoCAcsomzgrS77sGDFfKkw1sOMvN-qg@mail.gmail.com>
Message-ID: <21879.58728.416501.687592@stat.math.ethz.ch>

>>>>> G?bor Cs?rdi <csardi.gabor at gmail.com>
>>>>>     on Tue, 9 Jun 2015 18:39:47 -0400 writes:

    > On Tue, Jun 9, 2015 at 6:23 PM, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
    > [...]
    >> The DESCRIPTION file says this:
    >> 
    >> OS_type: unix
    >> SystemRequirements: clang (recommended)
    >> 
    >> One of the CRAN policies is "Package authors should make all reasonable
    >> efforts to provide cross-platform portable code."  cmake describes
    >> itself as a cross-platform solution and offers Windows binaries, so does
    >> it really make sense to limit it to Unix?

    > That's not needed. I am fairly sure that cmake works on all platforms
    > R works on, and more. So we can fix that.

very good.

    >> Also of concern are the export restrictions on this page:
    >> 
    >> http://www.cmake.org/download/
    >> 
    >> I suspect CRAN isn't going to want to be involved with those.

    > It does not apply to cmake. This is just a generic disclaimer on their
    > web page. cmake is included in virtually all Linux distributions and
    > it is distributed from the US.

That's good to know, thank you G?bor.
It may still be wise to ensure correct LICENCE file information
as part of that upcoming package.

Martin

    > Gabor

    >> Duncan Murdoch

    > ______________________________________________
    > R-package-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-package-devel


From tkeitt at utexas.edu  Wed Jun 10 01:32:20 2015
From: tkeitt at utexas.edu (Tim Keitt)
Date: Tue, 9 Jun 2015 18:32:20 -0500
Subject: [R-pkg-devel] CRAN and CMake
In-Reply-To: <5577675F.40706@gmail.com>
References: <CANnL8gqisJyDgmCwuC6zO=FZK++P+0ifEVtqx9CF7zY3Je4U-g@mail.gmail.com>
	<CABtg=KnGWuKvZiOjDFVhBU0Vr5r=u6YwDWYWwk2Lta0n3aPsBQ@mail.gmail.com>
	<EB220004-CDFA-45B8-B6B2-B42B38C56119@mrc-lmb.cam.ac.uk>
	<CABtg=KnHf+s0_r4rnqSb6xuJGys+A2avxKfhPtOvMaTZAM+Otg@mail.gmail.com>
	<A3C46320-A80B-4FD6-9D2C-55C3514A0B19@mrc-lmb.cam.ac.uk>
	<5577675F.40706@gmail.com>
Message-ID: <CANnL8gqLUWPwD+b6RxqvbXUc3bxkR2nDOcoMPGBLxs8NDeANOQ@mail.gmail.com>

http://www.keittlab.org/

On Tue, Jun 9, 2015 at 5:23 PM, Duncan Murdoch <murdoch.duncan at gmail.com>
wrote:

> On 09/06/2015 6:10 PM, Gregory Jefferis wrote:
> >
> >
> >> On 9 Jun 2015, at 22:08, G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:
> >>
> >> Thanks! I just looked at it, but it seems that it actually requires an
> >> external system cmake. I am trying to put cmake itself into a package.
> >
> > This one:
> >
> > https://github.com/stnava/cmaker
> >
> > I remember now there is another cmaker!
> >
>
> The DESCRIPTION file says this:
>
> OS_type: unix
> SystemRequirements: clang (recommended)
>
> One of the CRAN policies is "Package authors should make all reasonable
> efforts to provide cross-platform portable code."  cmake describes
> itself as a cross-platform solution and offers Windows binaries, so does
> it really make sense to limit it to Unix?
>
> Also of concern are the export restrictions on this page:
>
> http://www.cmake.org/download/
>
> I suspect CRAN isn't going to want to be involved with those.
>

Their "classification matrix" says that cmake is not subject to EAR.

THK


>
> Duncan Murdoch
>

	[[alternative HTML version deleted]]


From zhanxw at gmail.com  Wed Jun 10 07:29:49 2015
From: zhanxw at gmail.com (Xiaowei Zhan)
Date: Wed, 10 Jun 2015 00:29:49 -0500
Subject: [R-pkg-devel] Package review
Message-ID: <CABVSaDJXTgteZNXStawBmAw6=HLPn0SBNopTCGa-0ACF2Teb2A@mail.gmail.com>

Hello all,


I have submitted a package (seqminer) for bug-fix to CRAN on June 7.
So far I have not heard back from CRAN team about its status
(acceptance/rejection).

Should I re-submit the package or keep waiting? Are there any suggestions?

Thanks,
Xiaowei

	[[alternative HTML version deleted]]


From ligges at statistik.tu-dortmund.de  Wed Jun 10 11:32:55 2015
From: ligges at statistik.tu-dortmund.de (Uwe Ligges)
Date: Wed, 10 Jun 2015 11:32:55 +0200
Subject: [R-pkg-devel] Package review
In-Reply-To: <CABVSaDJXTgteZNXStawBmAw6=HLPn0SBNopTCGa-0ACF2Teb2A@mail.gmail.com>
References: <CABVSaDJXTgteZNXStawBmAw6=HLPn0SBNopTCGa-0ACF2Teb2A@mail.gmail.com>
Message-ID: <55780447.7020902@statistik.tu-dortmund.de>



On 10.06.2015 07:29, Xiaowei Zhan wrote:
> Hello all,
>
>
> I have submitted a package (seqminer) for bug-fix to CRAN on June 7.
> So far I have not heard back from CRAN team about its status
> (acceptance/rejection).
>
> Should I re-submit the package or keep waiting? Are there any suggestions?

Why not ask the CRAN team?

This list can try to help how to solve issues with your package, but 
cannot know about the reasons for minor delays. In this case your 
package needed careful inspection on at least three different OS given 
the history...


Best,
Uwe Ligges




>
> Thanks,
> Xiaowei
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From jfox at mcmaster.ca  Wed Jun 10 16:12:46 2015
From: jfox at mcmaster.ca (John Fox)
Date: Wed, 10 Jun 2015 10:12:46 -0400
Subject: [R-pkg-devel] "apparent S3 methods" note in R CMD check
Message-ID: <000e01d0a387$885ad130$99107390$@mcmaster.ca>

Dear list members,

One of the packages I maintain, effects, generates the following note in R
CMD check:

	* checking S3 generic/method consistency ... NOTE
	Found the following apparent S3 methods exported but not registered:
	  all.effects

The offending function, all.effects(), is deprecated in favour of
allEffects(), but I'd rather not get rid of it for backwards compatibility.
Is there any way to suppress the note without removing all.effects()? 

To be clear, all.effects() is *not* a method of all(), and is defined as

> effects::all.effects
function (...) 
{
    .Deprecated("allEffects")
    allEffects(...)
}
<environment: namespace:effects>

Thanks,
 John

-----------------------------------------------
John Fox, Professor
McMaster University
Hamilton, Ontario, Canada
http://socserv.socsci.mcmaster.ca/jfox/




---
This email has been checked for viruses by Avast antivirus software.
https://www.avast.com/antivirus


From tkeitt at utexas.edu  Wed Jun 10 17:28:08 2015
From: tkeitt at utexas.edu (Tim Keitt)
Date: Wed, 10 Jun 2015 10:28:08 -0500
Subject: [R-pkg-devel] CRAN and CMake
In-Reply-To: <21879.58728.416501.687592@stat.math.ethz.ch>
References: <CANnL8gqisJyDgmCwuC6zO=FZK++P+0ifEVtqx9CF7zY3Je4U-g@mail.gmail.com>
	<CABtg=KnGWuKvZiOjDFVhBU0Vr5r=u6YwDWYWwk2Lta0n3aPsBQ@mail.gmail.com>
	<EB220004-CDFA-45B8-B6B2-B42B38C56119@mrc-lmb.cam.ac.uk>
	<CABtg=KnHf+s0_r4rnqSb6xuJGys+A2avxKfhPtOvMaTZAM+Otg@mail.gmail.com>
	<A3C46320-A80B-4FD6-9D2C-55C3514A0B19@mrc-lmb.cam.ac.uk>
	<5577675F.40706@gmail.com>
	<CABtg=KkBiy3SXksysavEoCAcsomzgrS77sGDFfKkw1sOMvN-qg@mail.gmail.com>
	<21879.58728.416501.687592@stat.math.ethz.ch>
Message-ID: <CANnL8goMW7aPFnR_RdNS4XoQ35F2JV2Lae6KFCGAnn=UZ218Gw@mail.gmail.com>

http://www.keittlab.org/

On Wed, Jun 10, 2015 at 2:21 AM, Martin Maechler <maechler at stat.math.ethz.ch
> wrote:

> >>>>> G?bor Cs?rdi <csardi.gabor at gmail.com>
> >>>>>     on Tue, 9 Jun 2015 18:39:47 -0400 writes:
>
>     > On Tue, Jun 9, 2015 at 6:23 PM, Duncan Murdoch <
> murdoch.duncan at gmail.com> wrote:
>     > [...]
>     >> The DESCRIPTION file says this:
>     >>
>     >> OS_type: unix
>     >> SystemRequirements: clang (recommended)
>     >>
>     >> One of the CRAN policies is "Package authors should make all
> reasonable
>     >> efforts to provide cross-platform portable code."  cmake describes
>     >> itself as a cross-platform solution and offers Windows binaries, so
> does
>     >> it really make sense to limit it to Unix?
>
>     > That's not needed. I am fairly sure that cmake works on all platforms
>     > R works on, and more. So we can fix that.
>

Is there  a way to allow the user to use a system installed cmake if they
choose? The issue is R package dependencies -- a package author may put the
R cmake package in depends and then everyone is forced to install the R
package version even if they already have cmake.

THK


>
> very good.
>
>     >> Also of concern are the export restrictions on this page:
>     >>
>     >> http://www.cmake.org/download/
>     >>
>     >> I suspect CRAN isn't going to want to be involved with those.
>
>     > It does not apply to cmake. This is just a generic disclaimer on
> their
>     > web page. cmake is included in virtually all Linux distributions and
>     > it is distributed from the US.
>
> That's good to know, thank you G?bor.
> It may still be wise to ensure correct LICENCE file information
> as part of that upcoming package.
>
> Martin
>
>     > Gabor
>
>     >> Duncan Murdoch
>
>     > ______________________________________________
>     > R-package-devel at r-project.org mailing list
>     > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From zhanxw at gmail.com  Wed Jun 10 17:58:30 2015
From: zhanxw at gmail.com (Xiaowei Zhan)
Date: Wed, 10 Jun 2015 10:58:30 -0500
Subject: [R-pkg-devel] Package review
In-Reply-To: <55780447.7020902@statistik.tu-dortmund.de>
References: <CABVSaDJXTgteZNXStawBmAw6=HLPn0SBNopTCGa-0ACF2Teb2A@mail.gmail.com>
	<55780447.7020902@statistik.tu-dortmund.de>
Message-ID: <CABVSaDKavC=ao0P0JOLVz0yM6Uii1eCs0ssS47b8Dfpu15+TzA@mail.gmail.com>

Thanks for your help. I did send an email on Jun 6, but no response. Is
this the email address for CRAN team: cran at r-project.org?

The current package supports more than three different OS now: Linux,
Windows, Mac OS X, Solaris 11.
I tried but failed to build R in Solaris 10...


Thanks,
Xiaowei


On Wed, Jun 10, 2015 at 4:32 AM, Uwe Ligges <ligges at statistik.tu-dortmund.de
> wrote:

>
>
> On 10.06.2015 07:29, Xiaowei Zhan wrote:
>
>> Hello all,
>>
>>
>> I have submitted a package (seqminer) for bug-fix to CRAN on June 7.
>> So far I have not heard back from CRAN team about its status
>> (acceptance/rejection).
>>
>> Should I re-submit the package or keep waiting? Are there any suggestions?
>>
>
> Why not ask the CRAN team?
>
> This list can try to help how to solve issues with your package, but
> cannot know about the reasons for minor delays. In this case your package
> needed careful inspection on at least three different OS given the
> history...
>
>
> Best,
> Uwe Ligges
>
>
>
>
>
>> Thanks,
>> Xiaowei
>>
>>         [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>>

	[[alternative HTML version deleted]]


From ligges at statistik.tu-dortmund.de  Wed Jun 10 18:16:30 2015
From: ligges at statistik.tu-dortmund.de (Uwe Ligges)
Date: Wed, 10 Jun 2015 18:16:30 +0200
Subject: [R-pkg-devel] Package review
In-Reply-To: <CABVSaDKavC=ao0P0JOLVz0yM6Uii1eCs0ssS47b8Dfpu15+TzA@mail.gmail.com>
References: <CABVSaDJXTgteZNXStawBmAw6=HLPn0SBNopTCGa-0ACF2Teb2A@mail.gmail.com>
	<55780447.7020902@statistik.tu-dortmund.de>
	<CABVSaDKavC=ao0P0JOLVz0yM6Uii1eCs0ssS47b8Dfpu15+TzA@mail.gmail.com>
Message-ID: <557862DE.2060502@statistik.tu-dortmund.de>



On 10.06.2015 17:58, Xiaowei Zhan wrote:
> Thanks for your help. I did send an email on Jun 6, but no response. Is
> this the email address for CRAN team: cran at r-project.org
> <mailto:cran at r-project.org>?

Yes, and a member called Uwe Ligges answered today that the package is 
on CRAN (since several hours now) ...

Best,
Uwe Ligges


>
> The current package supports more than three different OS now: Linux,
> Windows, Mac OS X, Solaris 11.
> I tried but failed to build R in Solaris 10...
>
>
> Thanks,
> Xiaowei
>
>
> On Wed, Jun 10, 2015 at 4:32 AM, Uwe Ligges
> <ligges at statistik.tu-dortmund.de
> <mailto:ligges at statistik.tu-dortmund.de>> wrote:
>
>
>
>     On 10.06.2015 07:29, Xiaowei Zhan wrote:
>
>         Hello all,
>
>
>         I have submitted a package (seqminer) for bug-fix to CRAN on June 7.
>         So far I have not heard back from CRAN team about its status
>         (acceptance/rejection).
>
>         Should I re-submit the package or keep waiting? Are there any
>         suggestions?
>
>
>     Why not ask the CRAN team?
>
>     This list can try to help how to solve issues with your package, but
>     cannot know about the reasons for minor delays. In this case your
>     package needed careful inspection on at least three different OS
>     given the history...
>
>
>     Best,
>     Uwe Ligges
>
>
>
>
>
>         Thanks,
>         Xiaowei
>
>                  [[alternative HTML version deleted]]
>
>         ______________________________________________
>         R-package-devel at r-project.org
>         <mailto:R-package-devel at r-project.org> mailing list
>         https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>


From zhanxw at gmail.com  Wed Jun 10 18:26:56 2015
From: zhanxw at gmail.com (Xiaowei Zhan)
Date: Wed, 10 Jun 2015 11:26:56 -0500
Subject: [R-pkg-devel] Package review
In-Reply-To: <557862DE.2060502@statistik.tu-dortmund.de>
References: <CABVSaDJXTgteZNXStawBmAw6=HLPn0SBNopTCGa-0ACF2Teb2A@mail.gmail.com>
	<55780447.7020902@statistik.tu-dortmund.de>
	<CABVSaDKavC=ao0P0JOLVz0yM6Uii1eCs0ssS47b8Dfpu15+TzA@mail.gmail.com>
	<557862DE.2060502@statistik.tu-dortmund.de>
Message-ID: <CABVSaDKjme15Sg3LMwhkfE1Eh71mHTgxpZUvePqhNCtMt7VmrQ@mail.gmail.com>

Yes, you're right. Thanks for your help.

Xiaowei


On Wed, Jun 10, 2015 at 11:16 AM, Uwe Ligges <
ligges at statistik.tu-dortmund.de> wrote:

>
>
> On 10.06.2015 17:58, Xiaowei Zhan wrote:
>
>> Thanks for your help. I did send an email on Jun 6, but no response. Is
>> this the email address for CRAN team: cran at r-project.org
>> <mailto:cran at r-project.org>?
>>
>
> Yes, and a member called Uwe Ligges answered today that the package is on
> CRAN (since several hours now) ...
>
> Best,
> Uwe Ligges
>
>
>
>> The current package supports more than three different OS now: Linux,
>> Windows, Mac OS X, Solaris 11.
>> I tried but failed to build R in Solaris 10...
>>
>>
>> Thanks,
>> Xiaowei
>>
>>
>> On Wed, Jun 10, 2015 at 4:32 AM, Uwe Ligges
>> <ligges at statistik.tu-dortmund.de
>> <mailto:ligges at statistik.tu-dortmund.de>> wrote:
>>
>>
>>
>>     On 10.06.2015 07:29, Xiaowei Zhan wrote:
>>
>>         Hello all,
>>
>>
>>         I have submitted a package (seqminer) for bug-fix to CRAN on June
>> 7.
>>         So far I have not heard back from CRAN team about its status
>>         (acceptance/rejection).
>>
>>         Should I re-submit the package or keep waiting? Are there any
>>         suggestions?
>>
>>
>>     Why not ask the CRAN team?
>>
>>     This list can try to help how to solve issues with your package, but
>>     cannot know about the reasons for minor delays. In this case your
>>     package needed careful inspection on at least three different OS
>>     given the history...
>>
>>
>>     Best,
>>     Uwe Ligges
>>
>>
>>
>>
>>
>>         Thanks,
>>         Xiaowei
>>
>>                  [[alternative HTML version deleted]]
>>
>>         ______________________________________________
>>         R-package-devel at r-project.org
>>         <mailto:R-package-devel at r-project.org> mailing list
>>         https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>>
>>

	[[alternative HTML version deleted]]


From csardi.gabor at gmail.com  Wed Jun 10 19:14:33 2015
From: csardi.gabor at gmail.com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Wed, 10 Jun 2015 13:14:33 -0400
Subject: [R-pkg-devel] CRAN and CMake
In-Reply-To: <CANnL8goMW7aPFnR_RdNS4XoQ35F2JV2Lae6KFCGAnn=UZ218Gw@mail.gmail.com>
References: <CANnL8gqisJyDgmCwuC6zO=FZK++P+0ifEVtqx9CF7zY3Je4U-g@mail.gmail.com>
	<CABtg=KnGWuKvZiOjDFVhBU0Vr5r=u6YwDWYWwk2Lta0n3aPsBQ@mail.gmail.com>
	<EB220004-CDFA-45B8-B6B2-B42B38C56119@mrc-lmb.cam.ac.uk>
	<CABtg=KnHf+s0_r4rnqSb6xuJGys+A2avxKfhPtOvMaTZAM+Otg@mail.gmail.com>
	<A3C46320-A80B-4FD6-9D2C-55C3514A0B19@mrc-lmb.cam.ac.uk>
	<5577675F.40706@gmail.com>
	<CABtg=KkBiy3SXksysavEoCAcsomzgrS77sGDFfKkw1sOMvN-qg@mail.gmail.com>
	<21879.58728.416501.687592@stat.math.ethz.ch>
	<CANnL8goMW7aPFnR_RdNS4XoQ35F2JV2Lae6KFCGAnn=UZ218Gw@mail.gmail.com>
Message-ID: <CABtg=KnbG8HVLh3S24M7XR70Bj-18GWURQr=ZtCfhJjzvZEAvA@mail.gmail.com>

On Wed, Jun 10, 2015 at 11:28 AM, Tim Keitt <tkeitt at utexas.edu> wrote:
[...]
>
> Is there  a way to allow the user to use a system installed cmake if they
> choose? The issue is R package dependencies -- a package author may put the
> R cmake package in depends and then everyone is forced to install the R
> package version even if they already have cmake.

It is not easy IMO. You can't declare that you need an R package or a
system package. AFAIK you can't even say that you need either this
package or that package.

cmake is clearly a build time dependency, like knitr for building
vignettes, but you can't explicitly declare build dependencies either.

The closest would be 'Suggests', and then at build time you get an
error message if there is no system cmake and no 'cmaker' package
either. Not quite perfect, though.

Gabor

[...]


From murdoch.duncan at gmail.com  Wed Jun 10 19:56:31 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Wed, 10 Jun 2015 13:56:31 -0400
Subject: [R-pkg-devel] CRAN and CMake
In-Reply-To: <CABtg=KnbG8HVLh3S24M7XR70Bj-18GWURQr=ZtCfhJjzvZEAvA@mail.gmail.com>
References: <CANnL8gqisJyDgmCwuC6zO=FZK++P+0ifEVtqx9CF7zY3Je4U-g@mail.gmail.com>	<CABtg=KnGWuKvZiOjDFVhBU0Vr5r=u6YwDWYWwk2Lta0n3aPsBQ@mail.gmail.com>	<EB220004-CDFA-45B8-B6B2-B42B38C56119@mrc-lmb.cam.ac.uk>	<CABtg=KnHf+s0_r4rnqSb6xuJGys+A2avxKfhPtOvMaTZAM+Otg@mail.gmail.com>	<A3C46320-A80B-4FD6-9D2C-55C3514A0B19@mrc-lmb.cam.ac.uk>	<5577675F.40706@gmail.com>	<CABtg=KkBiy3SXksysavEoCAcsomzgrS77sGDFfKkw1sOMvN-qg@mail.gmail.com>	<21879.58728.416501.687592@stat.math.ethz.ch>	<CANnL8goMW7aPFnR_RdNS4XoQ35F2JV2Lae6KFCGAnn=UZ218Gw@mail.gmail.com>
	<CABtg=KnbG8HVLh3S24M7XR70Bj-18GWURQr=ZtCfhJjzvZEAvA@mail.gmail.com>
Message-ID: <55787A4F.8050201@gmail.com>

On 10/06/2015 1:14 PM, G?bor Cs?rdi wrote:
> On Wed, Jun 10, 2015 at 11:28 AM, Tim Keitt <tkeitt at utexas.edu> wrote:
> [...]
> >
> > Is there  a way to allow the user to use a system installed cmake if they
> > choose? The issue is R package dependencies -- a package author may put the
> > R cmake package in depends and then everyone is forced to install the R
> > package version even if they already have cmake.
>
> It is not easy IMO. You can't declare that you need an R package or a
> system package. AFAIK you can't even say that you need either this
> package or that package.
>
> cmake is clearly a build time dependency, like knitr for building
> vignettes, but you can't explicitly declare build dependencies either.
>
> The closest would be 'Suggests', and then at build time you get an
> error message if there is no system cmake and no 'cmaker' package
> either. Not quite perfect, though.
>
> Gabor
>
> [...]
That's not quite right.  I would guess that cmake would normally be an 
install time dependency:  you need it to compile the code in the 
package.  If so, then listing it in the SystemRequirements field is 
fine.  Only the maintainer needs to build a package (i.e. produce a 
.tar.gz file).  Vignettes are a little weird:  CRAN wants to check that 
they can be built (that's the point of them),
but maintainers may have special resources needed for them.  So they get 
built and installed in the tarball.  And you can declare packages needed 
only for building vignettes:  use Suggests as well as VignetteBuilder.

Generally we want R packages to be open source, so big transformations 
of the code at build time (the kind that lose the source) are discouraged.

If you want to declare a dependence on a system resource at install time 
(when the package code is compiled), use SystemRequirements. There's 
also LinkingTo, to declare that you are linking to code in another 
package.  We don't have something that says "this package is needed to 
install mine", but I suspect one of LinkingTo, Imports or Depends would 
be fine, even though they aren't strictly correct.

Duncan Murdoch


From haixiao990 at aliyun.com  Thu Jun 11 08:10:55 2015
From: haixiao990 at aliyun.com (haixiao990 at aliyun.com)
Date: Thu, 11 Jun 2015 14:10:55 +0800
Subject: [R-pkg-devel] Questions for writing a package
Message-ID: <2015061114105539628926@aliyun.com>

Hi everyone,

I'm now developing a package, which needs to call other released software.
The software include executable files with configuration files for Win/Linux/Mac. There is no need to install or compiling the software.
I know it is possible to call the software  executable files by invoking a system command using the function 'system()', 
but how can I build up a package with these executable files? What directory should I put the software files?  
Does anyone have experience or solutions? 
Thank you so much!

Best regards,
Haixiao



haixiao990 at aliyun.com

	[[alternative HTML version deleted]]


From edd at debian.org  Thu Jun 11 14:02:45 2015
From: edd at debian.org (Dirk Eddelbuettel)
Date: Thu, 11 Jun 2015 07:02:45 -0500
Subject: [R-pkg-devel] Questions for writing a package
In-Reply-To: <2015061114105539628926@aliyun.com>
References: <2015061114105539628926@aliyun.com>
Message-ID: <21881.30949.232065.351419@max.nulle.part>


On 11 June 2015 at 14:10, haixiao990 at aliyun.com wrote:
| I'm now developing a package, which needs to call other released software.
| The software include executable files with configuration files for Win/Linux/Mac. There is no need to install or compiling the software.
| I know it is possible to call the software  executable files by invoking a system command using the function 'system()', 
| but how can I build up a package with these executable files? What directory should I put the software files?  
| Does anyone have experience or solutions? 

Please see

   http://cran.r-project.org/doc/manuals/r-release/R-exts.html#Non_002dR-scripts-in-packages

as well as   help(system.file)   in R to locate such files.

As far as I know CRAN will probably reject a package containing binaries.

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From marc_schwartz at me.com  Thu Jun 11 14:19:00 2015
From: marc_schwartz at me.com (Marc Schwartz)
Date: Thu, 11 Jun 2015 07:19:00 -0500
Subject: [R-pkg-devel] Questions for writing a package
In-Reply-To: <21881.30949.232065.351419@max.nulle.part>
References: <2015061114105539628926@aliyun.com>
	<21881.30949.232065.351419@max.nulle.part>
Message-ID: <B7D2ACFC-31CC-44AF-922F-296F1A75D5B7@me.com>


> On Jun 11, 2015, at 7:02 AM, Dirk Eddelbuettel <edd at debian.org> wrote:
> 
> 
> On 11 June 2015 at 14:10, haixiao990 at aliyun.com wrote:
> | I'm now developing a package, which needs to call other released software.
> | The software include executable files with configuration files for Win/Linux/Mac. There is no need to install or compiling the software.
> | I know it is possible to call the software  executable files by invoking a system command using the function 'system()', 
> | but how can I build up a package with these executable files? What directory should I put the software files?  
> | Does anyone have experience or solutions? 
> 
> Please see
> 
>   http://cran.r-project.org/doc/manuals/r-release/R-exts.html#Non_002dR-scripts-in-packages
> 
> as well as   help(system.file)   in R to locate such files.
> 
> As far as I know CRAN will probably reject a package containing binaries.


That is correct, as per:

  http://cran.r-project.org/doc/manuals/r-release/R-exts.html#Package-structure


"A source package if possible should not contain binary executable files: they are not portable, and a security risk if they are of the appropriate architecture.  R CMD check will warn about them4 unless they are listed (one filepath per line) in a file BinaryFiles at the top level of the package. Note that CRAN will not accept submissions containing binary files even if they are listed.?


Note the last sentence.

Regards,

Marc Schwartz


> 
> Dirk


From kevin.r.coombes at gmail.com  Thu Jun 11 15:15:10 2015
From: kevin.r.coombes at gmail.com (Kevin Coombes)
Date: Thu, 11 Jun 2015 09:15:10 -0400
Subject: [R-pkg-devel] R CMD check "no-nanny" option?
Message-ID: <557989DE.7050204@gmail.com>

Hi,

When I run "R CMD check --as-cran" on my packages in R 3.2.0, I now get 
a new series of NOTE's telling me that (1) the Description field in the 
DESCRIPTION should file should not start with "This package" or with the 
package name, and (2) the Title field in the DESCRIPTION file should be 
in title case.

Question: Is there any way to turn these notes off and still get the 
rest of cran-style checking?

Grumpy Observation: In reaction to (1), I went to CRAN and randomly 
clicked on a dozen packages to see how many of them follow this rule.  
Half of them violate it explicitly, mostly just starting with "This 
package...".  Most of the rest get around it by starting with a sentence 
fragment that omits the subject (which is _implicitly_ "this package").  
Only one of them started with a complete sentence that gave the 
background of the problem the package was intended to solve.

I strongly believe that it's better to write complete sentences than 
sentence fragments in the Description field. And since the empirical 
evidence suggest that almost everyone at least implicitly starts their 
description with "This package", I'm not sure why the NOTE ever got 
added in the first place....

   Kevin

---
This email has been checked for viruses by Avast antivirus software.
https://www.avast.com/antivirus


From murdoch.duncan at gmail.com  Thu Jun 11 15:31:10 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Thu, 11 Jun 2015 09:31:10 -0400
Subject: [R-pkg-devel] R CMD check "no-nanny" option?
In-Reply-To: <557989DE.7050204@gmail.com>
References: <557989DE.7050204@gmail.com>
Message-ID: <55798D9E.10109@gmail.com>

On 11/06/2015 9:15 AM, Kevin Coombes wrote:
> Hi,
>
> When I run "R CMD check --as-cran" on my packages in R 3.2.0, I now get
> a new series of NOTE's telling me that (1) the Description field in the
> DESCRIPTION should file should not start with "This package" or with the
> package name, and (2) the Title field in the DESCRIPTION file should be
> in title case.
>
> Question: Is there any way to turn these notes off and still get the
> rest of cran-style checking?
>
> Grumpy Observation: In reaction to (1), I went to CRAN and randomly
> clicked on a dozen packages to see how many of them follow this rule.
> Half of them violate it explicitly, mostly just starting with "This
> package...".  Most of the rest get around it by starting with a sentence
> fragment that omits the subject (which is _implicitly_ "this package").
> Only one of them started with a complete sentence that gave the
> background of the problem the package was intended to solve.
>
> I strongly believe that it's better to write complete sentences than
> sentence fragments in the Description field. And since the empirical
> evidence suggest that almost everyone at least implicitly starts their
> description with "This package", I'm not sure why the NOTE ever got
> added in the first place....

Presumably those packages were last updated before the tests were added.

I don't know the answer to your question other than the generic "Of 
course there is, R is open source", but I don't really see the point of 
deeper research:  you can certainly ignore the NOTEs more easily than 
suppressing them, so why not do that?

Duncan Murdoch


From plummerm at iarc.fr  Thu Jun 11 16:41:27 2015
From: plummerm at iarc.fr (Martyn Plummer)
Date: Thu, 11 Jun 2015 14:41:27 +0000
Subject: [R-pkg-devel] R CMD check "no-nanny" option?
In-Reply-To: <55798D9E.10109@gmail.com>
References: <557989DE.7050204@gmail.com> <55798D9E.10109@gmail.com>
Message-ID: <1434033674.18536.141.camel@iarc.fr>

On Thu, 2015-06-11 at 09:31 -0400, Duncan Murdoch wrote:
> On 11/06/2015 9:15 AM, Kevin Coombes wrote:
> > Hi,
> >
> > When I run "R CMD check --as-cran" on my packages in R 3.2.0, I now get
> > a new series of NOTE's telling me that (1) the Description field in the
> > DESCRIPTION should file should not start with "This package" or with the
> > package name, and (2) the Title field in the DESCRIPTION file should be
> > in title case.
> >
> > Question: Is there any way to turn these notes off and still get the
> > rest of cran-style checking?
> >
> > Grumpy Observation: In reaction to (1), I went to CRAN and randomly
> > clicked on a dozen packages to see how many of them follow this rule.
> > Half of them violate it explicitly, mostly just starting with "This
> > package...".  Most of the rest get around it by starting with a sentence
> > fragment that omits the subject (which is _implicitly_ "this package").
> > Only one of them started with a complete sentence that gave the
> > background of the problem the package was intended to solve.
> >
> > I strongly believe that it's better to write complete sentences than
> > sentence fragments in the Description field. And since the empirical
> > evidence suggest that almost everyone at least implicitly starts their
> > description with "This package", I'm not sure why the NOTE ever got
> > added in the first place....
> 
> Presumably those packages were last updated before the tests were added.

To expand on Duncan's point, my understanding is that a NOTE does not,
by itself, trigger a request for a package update. However, when you do
send an update to CRAN it should be free of NOTEs, or the ones that do
remain should be explained.

R checks can be customized by setting certain environment variables of
the form _R_CHECK_*_.  See R Internals section 8, which lists them
(including a set that will approximate the CRAN tests) and Writing R
Extensions section 1.3 which tells you how to set them.  But of course
--as-cran is exactly what you need if you intend to submit a package to
CRAN.

Martyn 

> I don't know the answer to your question other than the generic "Of 
> course there is, R is open source", but I don't really see the point of 
> deeper research:  you can certainly ignore the NOTEs more easily than 
> suppressing them, so why not do that?
> 
> Duncan Murdoch
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

-----------------------------------------------------------------------
This message and its attachments are strictly confidenti...{{dropped:8}}


From edd at debian.org  Thu Jun 11 16:55:08 2015
From: edd at debian.org (Dirk Eddelbuettel)
Date: Thu, 11 Jun 2015 09:55:08 -0500
Subject: [R-pkg-devel] R CMD check "no-nanny" option?
In-Reply-To: <557989DE.7050204@gmail.com>
References: <557989DE.7050204@gmail.com>
Message-ID: <21881.41292.692555.616498@max.nulle.part>


On 11 June 2015 at 09:15, Kevin Coombes wrote:
| Grumpy Observation: In reaction to (1), I went to CRAN and randomly 
| clicked on a dozen packages to see how many of them follow this rule.  
| Half of them violate it explicitly, mostly just starting with "This 
| package...".  Most of the rest get around it by starting with a sentence 
| fragment that omits the subject (which is _implicitly_ "this package").  
| Only one of them started with a complete sentence that gave the 
| background of the problem the package was intended to solve.

Also look at the Date: of those packages -- CRAN Policy changes have always
been implemented on a rolling basis.   So new(er) packages conform to new(er)
tests, updates are always never forced on already-uploaded packages.
 
The communication of such changes is not quite what I liked it to be. But
if you care you can subscribe to the output stream of a cron job I have
watching over this:

  https://twitter.com/CRANPolicyWatch
  
If you don't like twitter subscription you can still glance at that page.
I should probably do the same for the SVN source of Writing R Extensions in
R-devel... 

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From haixiao990 at aliyun.com  Fri Jun 12 09:26:18 2015
From: haixiao990 at aliyun.com (haixiao990 at aliyun.com)
Date: Fri, 12 Jun 2015 15:26:18 +0800
Subject: [R-pkg-devel] Questions for writing a package
References: <2015061114105539628926@aliyun.com>, 
	<21881.30949.232065.351419@max.nulle.part>, 
	<B7D2ACFC-31CC-44AF-922F-296F1A75D5B7@me.com>
Message-ID: <2015061215261823770917@aliyun.com>

Thank you so much!
What if I call a matlab function instead? Will CRAN accept such package?
And I used 'RcppOctave' package to call matlab functions. However,  'RcppOctave' is not available on Windows.
'R.matlab' would be a substitute, but it seems clumsy using 'setFunction' as the function has 2000 lines... 
Do you have any good ideas?

Regards,
Haixiao





haixiao990 at aliyun.com
 
From: Marc Schwartz
Date: 2015-06-11 20:19
To: Dirk Eddelbuettel
CC: haixiao990 at aliyun.com; r-package-devel
Subject: Re: [R-pkg-devel] Questions for writing a package
 
> On Jun 11, 2015, at 7:02 AM, Dirk Eddelbuettel <edd at debian.org> wrote:
> 
> 
> On 11 June 2015 at 14:10, haixiao990 at aliyun.com wrote:
> | I'm now developing a package, which needs to call other released software.
> | The software include executable files with configuration files for Win/Linux/Mac. There is no need to install or compiling the software.
> | I know it is possible to call the software  executable files by invoking a system command using the function 'system()', 
> | but how can I build up a package with these executable files? What directory should I put the software files?  
> | Does anyone have experience or solutions? 
> 
> Please see
> 
>   http://cran.r-project.org/doc/manuals/r-release/R-exts.html#Non_002dR-scripts-in-packages
> 
> as well as   help(system.file)   in R to locate such files.
> 
> As far as I know CRAN will probably reject a package containing binaries.
 
 
That is correct, as per:
 
  http://cran.r-project.org/doc/manuals/r-release/R-exts.html#Package-structure
 
 
"A source package if possible should not contain binary executable files: they are not portable, and a security risk if they are of the appropriate architecture.  R CMD check will warn about them4 unless they are listed (one filepath per line) in a file BinaryFiles at the top level of the package. Note that CRAN will not accept submissions containing binary files even if they are listed.?
 
 
Note the last sentence.
 
Regards,
 
Marc Schwartz
 
 
> 
> Dirk
 
 

	[[alternative HTML version deleted]]


From thomas.petzoldt at tu-dresden.de  Fri Jun 12 09:40:02 2015
From: thomas.petzoldt at tu-dresden.de (Thomas Petzoldt)
Date: Fri, 12 Jun 2015 09:40:02 +0200
Subject: [R-pkg-devel] R CMD check "no-nanny" option?
In-Reply-To: <21881.41292.692555.616498@max.nulle.part>
References: <557989DE.7050204@gmail.com>
	<21881.41292.692555.616498@max.nulle.part>
Message-ID: <557A8CD2.10609@tu-dresden.de>

Am 6/11/2015 um 4:55 PM schrieb Dirk Eddelbuettel:
>
> On 11 June 2015 at 09:15, Kevin Coombes wrote:
> | Grumpy Observation: In reaction to (1), I went to CRAN and randomly
> | clicked on a dozen packages to see how many of them follow this rule.
> | Half of them violate it explicitly, mostly just starting with "This
> | package...".  Most of the rest get around it by starting with a sentence
> | fragment that omits the subject (which is _implicitly_ "this package").
> | Only one of them started with a complete sentence that gave the
> | background of the problem the package was intended to solve.
>
> Also look at the Date: of those packages -- CRAN Policy changes have always
> been implemented on a rolling basis.   So new(er) packages conform to new(er)
> tests, updates are always never forced on already-uploaded packages.

Yes, that's true, but may also create headaches to me when regularly 
updating packages. I appreciate high standards and clear rules, given 
that their motivation is obvious or clearly explained.

Therefore, I do not completely understand yet the motivation of "the 
Description field in the DESCRIPTION should file should not start with 
'This package' or with the package name ..." ? Where is it explained?

Now, what is the goal, a relatively long abstract with a general problem 
description and then the solution, like in a scientific paper - or a 
short and efficient paragraph what the package does, especially as 
"Writing R Extensions" tells us:

"Description: A (one paragraph) description of what
the package does and why it may be useful."


I think that the "first sentence is a sentence fragment with implicit 
'this package'" - style is not so bad, cf.:

graphics: R functions for base graphics.

stats:  R statistical functions.

lme4:
Fit linear and generalized linear mixed-effects models.The models and 
their components are represented using S4 classes and methods. The core 
computational algorithms are implemented using the Eigen C++ library for 
numerical linear algebra and RcppEigen "glue".

zoo:
An S3 class with methods for totally ordered indexed
observations. It is particularly aimed at irregular time series
of numeric vectors/matrices and factors. zoo's key design goals
are independence of a particular index/date/time class and
consistency with ts and base R by providing methods to extend
standard generics.

ggplot2: An implementation of the grammar of graphics
in R. It combines the advantages of both base and
lattice graphics: conditioning and shared axes are
handled automatically, and you can still build up a
plot step by step from multiple data sources. It also
implements a sophisticated multidimensional
conditioning system and a consistent interface to map
data to aesthetic attributes. See http://ggplot2.org
for more information, documentation and examples.


I'm still searching for good examples ...

> The communication of such changes is not quite what I liked it to be.

I agree, so it is a big step forward that we now have this list.

> But
> if you care you can subscribe to the output stream of a cron job I have
> watching over this:
>
>    https://twitter.com/CRANPolicyWatch
> If you don't like twitter subscription you can still glance at that page.
> I should probably do the same for the SVN source of Writing R Extensions in
> R-devel...

Yes, that's what I +/- regularly did.

Many Thanks,

Thomas

-- 
Dr. Thomas Petzoldt
Technische Universitaet Dresden
Faculty of Environmental Sciences
Institute of Hydrobiology
01062 Dresden, Germany

E-Mail: thomas.petzoldt at tu-dresden.de
http://tu-dresden.de/Members/thomas.petzoldt


From maechler at stat.math.ethz.ch  Fri Jun 12 09:39:46 2015
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Fri, 12 Jun 2015 09:39:46 +0200
Subject: [R-pkg-devel] "apparent S3 methods" note in R CMD check
In-Reply-To: <000e01d0a387$885ad130$99107390$@mcmaster.ca>
References: <000e01d0a387$885ad130$99107390$@mcmaster.ca>
Message-ID: <21882.36034.941132.636300@stat.math.ethz.ch>

>>>>> John Fox <jfox at mcmaster.ca>
>>>>>     on Wed, 10 Jun 2015 10:12:46 -0400 writes:

    > Dear list members,
    > One of the packages I maintain, effects, generates the following note in R
    > CMD check:

    > * checking S3 generic/method consistency ... NOTE
    > Found the following apparent S3 methods exported but not registered:
    > all.effects

    > The offending function, all.effects(), is deprecated in favour of
    > allEffects(), but I'd rather not get rid of it for backwards compatibility.
    > Is there any way to suppress the note without removing all.effects()? 

    > To be clear, all.effects() is *not* a method of all(), and is defined as

    >> effects::all.effects
    > function (...) 
    > {
    > .Deprecated("allEffects")
    > allEffects(...)
    > }
    > <environment: namespace:effects>

    > Thanks,
    > John

    > -----------------------------------------------
    > John Fox, Professor
    > McMaster University
    > Hamilton, Ontario, Canada
    > http://socserv.socsci.mcmaster.ca/jfox/




    > ---
    > This email has been checked for viruses by Avast antivirus software.
    > https://www.avast.com/antivirus

    > ______________________________________________
    > R-package-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-package-devel


From maechler at stat.math.ethz.ch  Fri Jun 12 09:55:18 2015
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Fri, 12 Jun 2015 09:55:18 +0200
Subject: [R-pkg-devel] "apparent S3 methods" note in R CMD check
In-Reply-To: <000e01d0a387$885ad130$99107390$@mcmaster.ca>
References: <000e01d0a387$885ad130$99107390$@mcmaster.ca>
Message-ID: <21882.36966.429889.227076@stat.math.ethz.ch>

>>>>> John Fox <jfox at mcmaster.ca>
>>>>>     on Wed, 10 Jun 2015 10:12:46 -0400 writes:

    > Dear list members,
    > One of the packages I maintain, effects, generates the following note in R
    > CMD check:

    > * checking S3 generic/method consistency ... NOTE
    > Found the following apparent S3 methods exported but not registered:
    > all.effects

    > The offending function, all.effects(), is deprecated in favour of
    > allEffects(), but I'd rather not get rid of it for backwards compatibility.
    > Is there any way to suppress the note without removing all.effects()? 

    > To be clear, all.effects() is *not* a method of all(), and is defined as

    >> effects::all.effects
    > function (...) 
    > {
    >  .Deprecated("allEffects")
    >  allEffects(...)
    > }

Dear John,
this is a good question without an obvious answer for the
moment.

The check producing it is relatively new *and* has helped to
detect problems in many packages and places,  but I would agree
is a "False Positive" in this case.

One reason for such a check is the following output {in R >= 3.2.0},

 > require("effects")
 Loading required package: effects
 > methods(all)
 [1] all,ddiMatrix-method     all,ldiMatrix-method     all,lsparseMatrix-method
 [4] all,Matrix-method        all,nsparseMatrix-method all.effects             
 see '?methods' for accessing help and source code
 >

which wrongly does list your all.effects() among the all
methods.... and indeed (even worse), it *is* taken as S3 method
for all():
 
 > ex <- structure(FALSE, class="effects")
 > all(ex)
 Error: $ operator is invalid for atomic vectors
 In addition: Warning message:
 'all.effects' is deprecated.
 Use 'allEffects' instead.
 See help("Deprecated") 
 > 

---

Now I agree .. and have e-talked about this with another R core
member .. that it would be desirable for the package author to
effectively declare the fact that such a function is not an S3
method even though it "looks like it" at least if looked from far.

So, ideally, you could have something like

 nonS3method("all.effects")

somewhere in your package source ( in NAMESPACE or R/*.R )
which would tell the package-checking code -- but *ALSO* all the other S3
method code that  all.effects should be treated as a regular R
function.

I would very much like such a feature in R, and for that reason,
I'm cross posting this (as one of the famous exceptions that
accompany real-life rules!!) to R-devel.

There is one current work-around -- some would say "hack" -- in the R sources
for exceptions on a per package basis, and I will now activate
that workaround for you.

Martin


From singmann at psychologie.uzh.ch  Fri Jun 12 00:05:10 2015
From: singmann at psychologie.uzh.ch (Henrik Singmann)
Date: Fri, 12 Jun 2015 00:05:10 +0200
Subject: [R-pkg-devel] R CMD check "no-nanny" option?
In-Reply-To: <1434033674.18536.141.camel@iarc.fr>
References: <557989DE.7050204@gmail.com> <55798D9E.10109@gmail.com>
	<1434033674.18536.141.camel@iarc.fr>
Message-ID: <557A0616.5090903@psychologie.uzh.ch>



To further expand on what has been said before with my own experiences:

After submitting a package and missing those two NOTES (probably because 
I did not use the latest R-devel) my submission was rejected and I was 
asked to change my DESCRIPTION file.

In other words, packages throwing these NOTEs do not seem to be accepted 
on CRAN any more. You probably have to remove "This package..."

Proof: http://cran.r-project.org/web/packages/MPTinR/
(see archive for versions starting with "This package")

Cheers,
Henrik

Am 11.06.2015 um 16:41 schrieb Martyn Plummer:
> On Thu, 2015-06-11 at 09:31 -0400, Duncan Murdoch wrote:
>> On 11/06/2015 9:15 AM, Kevin Coombes wrote:
>>> Hi,
>>>
>>> When I run "R CMD check --as-cran" on my packages in R 3.2.0, I now get
>>> a new series of NOTE's telling me that (1) the Description field in the
>>> DESCRIPTION should file should not start with "This package" or with the
>>> package name, and (2) the Title field in the DESCRIPTION file should be
>>> in title case.
>>>
>>> Question: Is there any way to turn these notes off and still get the
>>> rest of cran-style checking?
>>>
>>> Grumpy Observation: In reaction to (1), I went to CRAN and randomly
>>> clicked on a dozen packages to see how many of them follow this rule.
>>> Half of them violate it explicitly, mostly just starting with "This
>>> package...".  Most of the rest get around it by starting with a sentence
>>> fragment that omits the subject (which is _implicitly_ "this package").
>>> Only one of them started with a complete sentence that gave the
>>> background of the problem the package was intended to solve.
>>>
>>> I strongly believe that it's better to write complete sentences than
>>> sentence fragments in the Description field. And since the empirical
>>> evidence suggest that almost everyone at least implicitly starts their
>>> description with "This package", I'm not sure why the NOTE ever got
>>> added in the first place....
>>
>> Presumably those packages were last updated before the tests were added.
>
> To expand on Duncan's point, my understanding is that a NOTE does not,
> by itself, trigger a request for a package update. However, when you do
> send an update to CRAN it should be free of NOTEs, or the ones that do
> remain should be explained.
>
> R checks can be customized by setting certain environment variables of
> the form _R_CHECK_*_.  See R Internals section 8, which lists them
> (including a set that will approximate the CRAN tests) and Writing R
> Extensions section 1.3 which tells you how to set them.  But of course
> --as-cran is exactly what you need if you intend to submit a package to
> CRAN.
>
> Martyn
>
>> I don't know the answer to your question other than the generic "Of
>> course there is, R is open source", but I don't really see the point of
>> deeper research:  you can certainly ignore the NOTEs more easily than
>> suppressing them, so why not do that?
>>
>> Duncan Murdoch
>>
>> ______________________________________________
>> R-package-devel-0bNBQ1PAWB4BXFe83j6qeQ at public.gmane.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
> -----------------------------------------------------------------------
> This message and its attachments are strictly confidenti...{{dropped:8}}
>
> ______________________________________________
> R-package-devel-0bNBQ1PAWB4BXFe83j6qeQ at public.gmane.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

-- 
Dr. Henrik Singmann
PostDoc
Universit?t Z?rich, Schweiz
http://singmann.org


From thomas.petzoldt at tu-dresden.de  Fri Jun 12 10:11:49 2015
From: thomas.petzoldt at tu-dresden.de (Thomas Petzoldt)
Date: Fri, 12 Jun 2015 10:11:49 +0200
Subject: [R-pkg-devel] "apparent S3 methods" note in R CMD check
In-Reply-To: <21882.36966.429889.227076@stat.math.ethz.ch>
References: <000e01d0a387$885ad130$99107390$@mcmaster.ca>
	<21882.36966.429889.227076@stat.math.ethz.ch>
Message-ID: <557A9445.90401@tu-dresden.de>

Dear Martin, dear package developers,

I had a very similar case three days ago in one of our packages. Our aim
was to provide an S3 method matplot.deSolve and an alternative and more
specific non-S3 function matplot.1D because the .1D follows the naming
scheme of other related functions.

The note of R 3.2.0 could be suppressed by (wrongly) declaring the
non-S3 variant as S3method, but finally I decided to use an
S4-compatibility approach instead:


setGeneric("matplot", function(x, ...) graphics::matplot(x, ...))
setOldClass("deSolve")

setMethod("matplot", list(x = "deSolve"), matplot.deSolve)


... with the downside that deSolve::matplot now masks graphics::matplot


So I would appreciate if matplot could be made a generic. Or is there
another way round?

Thomas


-- 
Dr. Thomas Petzoldt
Technische Universitaet Dresden
Faculty of Environmental Sciences
Institute of Hydrobiology
01062 Dresden, Germany

E-Mail: thomas.petzoldt at tu-dresden.de
http://tu-dresden.de/Members/thomas.petzoldt


From jfox at mcmaster.ca  Fri Jun 12 12:38:17 2015
From: jfox at mcmaster.ca (John Fox)
Date: Fri, 12 Jun 2015 06:38:17 -0400
Subject: [R-pkg-devel] "apparent S3 methods" note in R CMD check
In-Reply-To: <21882.36966.429889.227076@stat.math.ethz.ch>
References: <000e01d0a387$885ad130$99107390$@mcmaster.ca>
	<21882.36966.429889.227076@stat.math.ethz.ch>
Message-ID: <web-562839496@cgpsrv2.cis.mcmaster.ca>

Dear Martin,

Thank you for addressing this issue. Introducing a nonS3method() directive in NAMESPACE seems a reasonable solution. It could replace export() for functions with "."s in their names.

Best,
 John

On Fri, 12 Jun 2015 09:55:18 +0200
 Martin Maechler <maechler at stat.math.ethz.ch> wrote:
> >>>>> John Fox <jfox at mcmaster.ca>
> >>>>>     on Wed, 10 Jun 2015 10:12:46 -0400 writes:
> 
>     > Dear list members,
>     > One of the packages I maintain, effects, generates the following note in R
>     > CMD check:
> 
>     > * checking S3 generic/method consistency ... NOTE
>     > Found the following apparent S3 methods exported but not registered:
>     > all.effects
> 
>     > The offending function, all.effects(), is deprecated in favour of
>     > allEffects(), but I'd rather not get rid of it for backwards compatibility.
>     > Is there any way to suppress the note without removing all.effects()? 
> 
>     > To be clear, all.effects() is *not* a method of all(), and is defined as
> 
>     >> effects::all.effects
>     > function (...) 
>     > {
>     >  .Deprecated("allEffects")
>     >  allEffects(...)
>     > }
> 
> Dear John,
> this is a good question without an obvious answer for the
> moment.
> 
> The check producing it is relatively new *and* has helped to
> detect problems in many packages and places,  but I would agree
> is a "False Positive" in this case.
> 
> One reason for such a check is the following output {in R >= 3.2.0},
> 
>  > require("effects")
>  Loading required package: effects
>  > methods(all)
>  [1] all,ddiMatrix-method     all,ldiMatrix-method     all,lsparseMatrix-method
>  [4] all,Matrix-method        all,nsparseMatrix-method all.effects             
>  see '?methods' for accessing help and source code
>  >
> 
> which wrongly does list your all.effects() among the all
> methods.... and indeed (even worse), it *is* taken as S3 method
> for all():
>  
>  > ex <- structure(FALSE, class="effects")
>  > all(ex)
>  Error: $ operator is invalid for atomic vectors
>  In addition: Warning message:
>  'all.effects' is deprecated.
>  Use 'allEffects' instead.
>  See help("Deprecated") 
>  > 
> 
> ---
> 
> Now I agree .. and have e-talked about this with another R core
> member .. that it would be desirable for the package author to
> effectively declare the fact that such a function is not an S3
> method even though it "looks like it" at least if looked from far.
> 
> So, ideally, you could have something like
> 
>  nonS3method("all.effects")
> 
> somewhere in your package source ( in NAMESPACE or R/*.R )
> which would tell the package-checking code -- but *ALSO* all the other S3
> method code that  all.effects should be treated as a regular R
> function.
> 
> I would very much like such a feature in R, and for that reason,
> I'm cross posting this (as one of the famous exceptions that
> accompany real-life rules!!) to R-devel.
> 
> There is one current work-around -- some would say "hack" -- in the R sources
> for exceptions on a per package basis, and I will now activate
> that workaround for you.
> 
> Martin
>


From robin at lindinglab.org  Fri Jun 12 10:54:14 2015
From: robin at lindinglab.org (Xavier Robin)
Date: Fri, 12 Jun 2015 10:54:14 +0200
Subject: [R-pkg-devel] "apparent S3 methods" note in R CMD check
In-Reply-To: <000e01d0a387$885ad130$99107390$@mcmaster.ca>
References: <000e01d0a387$885ad130$99107390$@mcmaster.ca>
Message-ID: <557A9E36.8050002@lindinglab.org>

On 10/06/15 16:12, John Fox wrote:
> Is there any way to suppress the note without removing all.effects()? 

Dear John,

I raised this question on the Rd list a couple of months ago and didn't
get an answer (when asking the CRAN maintainers directly they suggested
to rename the functions).
https://stat.ethz.ch/pipermail/r-devel/2015-February/070630.html

However I recently realized that the tools:::.make_S3_methods_stop_list
function seems to contain a list of non methods. A quick try seems to
indicate that adding my methods there suppressed the note.
I am not sure how to get a function included in the list or if there is
any policy. I am planning to report a bug on Bugzilla and see what happens.

Best wishes,
Xavier



-- 
Xavier Robin, PhD
Cellular Signal Integration Group (C-SIG) - Linding Lab
Biotech Research and Innovation Center (BRIC) - University of Copenhagen
Office 1.0.22 - Ole Maal?es Vej 5, DK-2200 Copenhagen N, DENMARK
Mobile: +45 42 799 833
www.lindinglab.org - www.bric.ku.dk


From proebuck at mdanderson.org  Fri Jun 12 18:22:08 2015
From: proebuck at mdanderson.org (Roebuck,Paul L)
Date: Fri, 12 Jun 2015 16:22:08 +0000
Subject: [R-pkg-devel] "apparent S3 methods" note in R CMD check
In-Reply-To: <web-562839496@cgpsrv2.cis.mcmaster.ca>
References: <000e01d0a387$885ad130$99107390$@mcmaster.ca>
	<21882.36966.429889.227076@stat.math.ethz.ch>
	<web-562839496@cgpsrv2.cis.mcmaster.ca>
Message-ID: <D1A06F0B.D6A58%proebuck@mdanderson.org>

Actually, between this and other things coming from 'R CMD check' these
days,
I disagree that this is reasonable at all - it's a hack at best that only
fixes
this particular issue. Better would be to introduce lint-like directives
that
turn off certain R CMD check notes/warnings at different scopes
(e.g., #pylint: disable=some-message,another-one) rather than introduce
individual workarounds. Would give us an extensible version of the
"--no-nanny"
option Kevin wants.


On 6/12/15 5:38 AM, "John Fox" <jfox at mcmaster.ca> wrote:

>Dear Martin,
>
>Thank you for addressing this issue. Introducing a nonS3method()
>directive in NAMESPACE
>seems a reasonable solution. It could replace export() for functions with
>"."s in their names.
>
>Best,
> John
>
>On Fri, 12 Jun 2015 09:55:18 +0200
> Martin Maechler <maechler at stat.math.ethz.ch> wrote:
>> >>>>> John Fox <jfox at mcmaster.ca>
>> >>>>>     on Wed, 10 Jun 2015 10:12:46 -0400 writes:
>> 
>>     > Dear list members,
>>     > One of the packages I maintain, effects, generates the following
>>note in R
>>     > CMD check:
>> 
>>     > * checking S3 generic/method consistency ... NOTE
>>     > Found the following apparent S3 methods exported but not
>>registered:
>>     > all.effects
>> 
>>     > The offending function, all.effects(), is deprecated in favour of
>>     > allEffects(), but I'd rather not get rid of it for backwards
>>compatibility.
>>     > Is there any way to suppress the note without removing
>>all.effects()? 
>> 
>>     > To be clear, all.effects() is *not* a method of all(), and is
>>defined as
>> 
>>     >> effects::all.effects
>>     > function (...)
>>     > {
>>     >  .Deprecated("allEffects")
>>     >  allEffects(...)
>>     > }
>> 
>> Dear John,
>> this is a good question without an obvious answer for the
>> moment.
>> 
>> The check producing it is relatively new *and* has helped to
>> detect problems in many packages and places,  but I would agree
>> is a "False Positive" in this case.
>> 
>> One reason for such a check is the following output {in R >= 3.2.0},
>> 
>>  > require("effects")
>>  Loading required package: effects
>>  > methods(all)
>>  [1] all,ddiMatrix-method     all,ldiMatrix-method
>>all,lsparseMatrix-method
>>  [4] all,Matrix-method        all,nsparseMatrix-method all.effects
>>       
>>  see '?methods' for accessing help and source code
>>  >
>> 
>> which wrongly does list your all.effects() among the all
>> methods.... and indeed (even worse), it *is* taken as S3 method
>> for all():
>>  
>>  > ex <- structure(FALSE, class="effects")
>>  > all(ex)
>>  Error: $ operator is invalid for atomic vectors
>>  In addition: Warning message:
>>  'all.effects' is deprecated.
>>  Use 'allEffects' instead.
>>  See help("Deprecated")
>>  > 
>> 
>> ---
>> 
>> Now I agree .. and have e-talked about this with another R core
>> member .. that it would be desirable for the package author to
>> effectively declare the fact that such a function is not an S3
>> method even though it "looks like it" at least if looked from far.
>> 
>> So, ideally, you could have something like
>> 
>>  nonS3method("all.effects")
>> 
>> somewhere in your package source ( in NAMESPACE or R/*.R )
>> which would tell the package-checking code -- but *ALSO* all the other
>>S3
>> method code that  all.effects should be treated as a regular R
>> function.
>> 
>> I would very much like such a feature in R, and for that reason,
>> I'm cross posting this (as one of the famous exceptions that
>> accompany real-life rules!!) to R-devel.
>> 
>> There is one current work-around -- some would say "hack" -- in the R
>>sources
>> for exceptions on a per package basis, and I will now activate
>> that workaround for you.
>> 
>> Martin
>>
>
>______________________________________________
>R-package-devel at r-project.org mailing list
>https://stat.ethz.ch/mailman/listinfo/r-package-devel


From ligges at statistik.tu-dortmund.de  Fri Jun 12 22:58:17 2015
From: ligges at statistik.tu-dortmund.de (Uwe Ligges)
Date: Fri, 12 Jun 2015 22:58:17 +0200
Subject: [R-pkg-devel] "apparent S3 methods" note in R CMD check
In-Reply-To: <D1A06F0B.D6A58%proebuck@mdanderson.org>
References: <000e01d0a387$885ad130$99107390$@mcmaster.ca>	<21882.36966.429889.227076@stat.math.ethz.ch>	<web-562839496@cgpsrv2.cis.mcmaster.ca>
	<D1A06F0B.D6A58%proebuck@mdanderson.org>
Message-ID: <557B47E9.50305@statistik.tu-dortmund.de>



On 12.06.2015 18:22, Roebuck,Paul L wrote:
> Actually, between this and other things coming from 'R CMD check' these
> days,
> I disagree that this is reasonable at all - it's a hack

Why a hack? I am not sure what the right mechanism is, but here the 
check is not the problem but it uncovers the problem that the function 
is actually used as an S3 ethod although it is not.

Best,
Uwe Ligges

> at best that only
> fixes
> this particular issue. Better would be to introduce lint-like directives
> that
> turn off certain R CMD check notes/warnings at different scopes
> (e.g., #pylint: disable=some-message,another-one) rather than introduce
> individual workarounds. Would give us an extensible version of the
> "--no-nanny"
> option Kevin wants.
>
>
> On 6/12/15 5:38 AM, "John Fox" <jfox at mcmaster.ca> wrote:
>
>> Dear Martin,
>>
>> Thank you for addressing this issue. Introducing a nonS3method()
>> directive in NAMESPACE
>> seems a reasonable solution. It could replace export() for functions with
>> "."s in their names.
>>
>> Best,
>> John
>>
>> On Fri, 12 Jun 2015 09:55:18 +0200
>> Martin Maechler <maechler at stat.math.ethz.ch> wrote:
>>>>>>>> John Fox <jfox at mcmaster.ca>
>>>>>>>>      on Wed, 10 Jun 2015 10:12:46 -0400 writes:
>>>
>>>      > Dear list members,
>>>      > One of the packages I maintain, effects, generates the following
>>> note in R
>>>      > CMD check:
>>>
>>>      > * checking S3 generic/method consistency ... NOTE
>>>      > Found the following apparent S3 methods exported but not
>>> registered:
>>>      > all.effects
>>>
>>>      > The offending function, all.effects(), is deprecated in favour of
>>>      > allEffects(), but I'd rather not get rid of it for backwards
>>> compatibility.
>>>      > Is there any way to suppress the note without removing
>>> all.effects()?
>>>
>>>      > To be clear, all.effects() is *not* a method of all(), and is
>>> defined as
>>>
>>>      >> effects::all.effects
>>>      > function (...)
>>>      > {
>>>      >  .Deprecated("allEffects")
>>>      >  allEffects(...)
>>>      > }
>>>
>>> Dear John,
>>> this is a good question without an obvious answer for the
>>> moment.
>>>
>>> The check producing it is relatively new *and* has helped to
>>> detect problems in many packages and places,  but I would agree
>>> is a "False Positive" in this case.
>>>
>>> One reason for such a check is the following output {in R >= 3.2.0},
>>>
>>>   > require("effects")
>>>   Loading required package: effects
>>>   > methods(all)
>>>   [1] all,ddiMatrix-method     all,ldiMatrix-method
>>> all,lsparseMatrix-method
>>>   [4] all,Matrix-method        all,nsparseMatrix-method all.effects
>>>
>>>   see '?methods' for accessing help and source code
>>>   >
>>>
>>> which wrongly does list your all.effects() among the all
>>> methods.... and indeed (even worse), it *is* taken as S3 method
>>> for all():
>>>
>>>   > ex <- structure(FALSE, class="effects")
>>>   > all(ex)
>>>   Error: $ operator is invalid for atomic vectors
>>>   In addition: Warning message:
>>>   'all.effects' is deprecated.
>>>   Use 'allEffects' instead.
>>>   See help("Deprecated")
>>>   >
>>>
>>> ---
>>>
>>> Now I agree .. and have e-talked about this with another R core
>>> member .. that it would be desirable for the package author to
>>> effectively declare the fact that such a function is not an S3
>>> method even though it "looks like it" at least if looked from far.
>>>
>>> So, ideally, you could have something like
>>>
>>>   nonS3method("all.effects")
>>>
>>> somewhere in your package source ( in NAMESPACE or R/*.R )
>>> which would tell the package-checking code -- but *ALSO* all the other
>>> S3
>>> method code that  all.effects should be treated as a regular R
>>> function.
>>>
>>> I would very much like such a feature in R, and for that reason,
>>> I'm cross posting this (as one of the famous exceptions that
>>> accompany real-life rules!!) to R-devel.
>>>
>>> There is one current work-around -- some would say "hack" -- in the R
>>> sources
>>> for exceptions on a per package basis, and I will now activate
>>> that workaround for you.
>>>
>>> Martin
>>>
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From alex.chubaty at gmail.com  Fri Jun 12 23:41:56 2015
From: alex.chubaty at gmail.com (Alex Chubaty)
Date: Fri, 12 Jun 2015 14:41:56 -0700
Subject: [R-pkg-devel] use of `dev.new` across platforms in RStudio
Message-ID: <CAPpe6oROxCZm_ZC0POn=XtG+rcC5ADkwkF1h8j-Yg_=k-h-7gQ@mail.gmail.com>

Dear list members,

Use of platform-specific code to open new plot devices (e.g., `quartz`,
`x11`) is discouraged in favour of using `dev.new`; however, this does not
work in RStudio. A purported solution introduced in R 3.1.1 was to call
`dev.new(noRStudioGD = TRUE)`, which works on Windows, but not OSX and
Ubuntu. On these paltforms `dev.new` does not open a new plotting window,
but instead a PDF device writing to file "Rplots.pdf".

How can I open a new plot window in my package in a CRAN-approved way that
works reliably across platforms when using RStudio? Perhaps this is an
issue to take up with RStudio and/or R-Devel directly, but I'd appreciate
any insights or suggestions any of you may have.

Thank you for your help,

Alex

	[[alternative HTML version deleted]]


From maechler at stat.math.ethz.ch  Sat Jun 13 09:31:22 2015
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Sat, 13 Jun 2015 09:31:22 +0200
Subject: [R-pkg-devel] "apparent S3 methods" note in R CMD check
In-Reply-To: <557B47E9.50305@statistik.tu-dortmund.de>
References: <000e01d0a387$885ad130$99107390$@mcmaster.ca>
	<21882.36966.429889.227076@stat.math.ethz.ch>
	<web-562839496@cgpsrv2.cis.mcmaster.ca>
	<D1A06F0B.D6A58%proebuck@mdanderson.org>
	<557B47E9.50305@statistik.tu-dortmund.de>
Message-ID: <21883.56394.306999.707070@stat.math.ethz.ch>

>>>>> Uwe Ligges <ligges at statistik.tu-dortmund.de>
>>>>>     on Fri, 12 Jun 2015 22:58:17 +0200 writes:

    > On 12.06.2015 18:22, Roebuck,Paul L wrote:
    >> Actually, between this and other things coming from 'R
    >> CMD check' these days, I disagree that this is reasonable
    >> at all - it's a hack

    > Why a hack? I am not sure what the right mechanism is, but
    > here the check is not the problem but it uncovers the
    > problem that the function is actually used as an S3 ethod
    > although it is not.

Indeed. It's really the contrary of hack, namely trying to solve
the underlying problem:
This has been a proposition that is much more than just a way to turn
off some warnings or notes.  It's about a possible improvement in
R in how functions are made into S3 methods, namely allowing at least
for R code in package namespaces (but maybe even outside) to say
that a given  <fn>.<class>  function should *not* be seen as an
S3 method of function <fn> for class <class> .

But please follow up on R-devel -- there's a full thread there.
This list is about helping programmeRs develop their packages ..

Martin

> at best that only fixes this particular issue. Better would be
> to introduce lint-like directives that turn off certain R CMD
> check notes/warnings at different scopes (e.g., #pylint:
> disable=some-message,another-one) rather than introduce
> individual workarounds. Would give us an extensible version of
> the "--no-nanny" option Kevin wants.
>
>
> On 6/12/15 5:38 AM, "John Fox" <jfox at mcmaster.ca> wrote:
>
>> Dear Martin,
>>
>> Thank you for addressing this issue. Introducing a nonS3method()
>> directive in NAMESPACE
>> seems a reasonable solution. It could replace export() for functions with
>> "."s in their names.
>>
>> Best,
>> John
>>
>> On Fri, 12 Jun 2015 09:55:18 +0200
>> Martin Maechler <maechler at stat.math.ethz.ch> wrote:
>>>>>>>> John Fox <jfox at mcmaster.ca>
>>>>>>>>      on Wed, 10 Jun 2015 10:12:46 -0400 writes:
>>>
>>>      > Dear list members,
>>>      > One of the packages I maintain, effects, generates the following
>>> note in R
>>>      > CMD check:
>>>
>>>      > * checking S3 generic/method consistency ... NOTE
>>>      > Found the following apparent S3 methods exported but not
>>> registered:
>>>      > all.effects
>>>
>>>      > The offending function, all.effects(), is deprecated in favour of
>>>      > allEffects(), but I'd rather not get rid of it for backwards
>>> compatibility.
>>>      > Is there any way to suppress the note without removing
>>> all.effects()?
>>>
>>>      > To be clear, all.effects() is *not* a method of all(), and is
>>> defined as
>>>
>>>      >> effects::all.effects
>>>      > function (...)
>>>      > {
>>>      >  .Deprecated("allEffects")
>>>      >  allEffects(...)
>>>      > }
>>>
>>> Dear John,
>>> this is a good question without an obvious answer for the
>>> moment.
>>>
>>> The check producing it is relatively new *and* has helped to
>>> detect problems in many packages and places,  but I would agree
>>> is a "False Positive" in this case.
>>>
>>> One reason for such a check is the following output {in R >= 3.2.0},
>>>
>>>   > require("effects")
>>>   Loading required package: effects
>>>   > methods(all)
>>>   [1] all,ddiMatrix-method     all,ldiMatrix-method
>>> all,lsparseMatrix-method
>>>   [4] all,Matrix-method        all,nsparseMatrix-method all.effects
>>>
>>>   see '?methods' for accessing help and source code
>>>   >
>>>
>>> which wrongly does list your all.effects() among the all
>>> methods.... and indeed (even worse), it *is* taken as S3 method
>>> for all():
>>>
>>>   > ex <- structure(FALSE, class="effects")
>>>   > all(ex)
>>>   Error: $ operator is invalid for atomic vectors
>>>   In addition: Warning message:
>>>   'all.effects' is deprecated.
>>>   Use 'allEffects' instead.
>>>   See help("Deprecated")
>>>   >
>>>
>>> ---
>>>
>>> Now I agree .. and have e-talked about this with another R core
>>> member .. that it would be desirable for the package author to
>>> effectively declare the fact that such a function is not an S3
>>> method even though it "looks like it" at least if looked from far.
>>>
>>> So, ideally, you could have something like
>>>
>>>   nonS3method("all.effects")
>>>
>>> somewhere in your package source ( in NAMESPACE or R/*.R )
>>> which would tell the package-checking code -- but *ALSO* all the other
>>> S3
>>> method code that  all.effects should be treated as a regular R
>>> function.
>>>
>>> I would very much like such a feature in R, and for that reason,
>>> I'm cross posting this (as one of the famous exceptions that
>>> accompany real-life rules!!) to R-devel.
>>>
>>> There is one current work-around -- some would say "hack" -- in the R
>>> sources for exceptions on a per package basis, and I will now activate
>>> that workaround for you.
>>>
>>> Martin


From maechler at stat.math.ethz.ch  Sat Jun 13 14:01:46 2015
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Sat, 13 Jun 2015 14:01:46 +0200
Subject: [R-pkg-devel] use of `dev.new` across platforms in RStudio
In-Reply-To: <CAPpe6oROxCZm_ZC0POn=XtG+rcC5ADkwkF1h8j-Yg_=k-h-7gQ@mail.gmail.com>
References: <CAPpe6oROxCZm_ZC0POn=XtG+rcC5ADkwkF1h8j-Yg_=k-h-7gQ@mail.gmail.com>
Message-ID: <21884.7082.470842.355598@stat.math.ethz.ch>

>>>>> Alex Chubaty <alex.chubaty at gmail.com>
>>>>>     on Fri, 12 Jun 2015 14:41:56 -0700 writes:

    > Dear list members,
    > Use of platform-specific code to open new plot devices (e.g., `quartz`,
    > `x11`) is discouraged in favour of using `dev.new`; however, this does not
    > work in RStudio. A purported solution introduced in R 3.1.1 was to call
    > `dev.new(noRStudioGD = TRUE)`, which works on Windows, but not OSX and
    > Ubuntu. On these paltforms `dev.new` does not open a new plotting window,
    > but instead a PDF device writing to file "Rplots.pdf".

Oh dear..

Of course this is a very good question from you as a package writer

    > How can I open a new plot window in my package in a CRAN-approved way 

I'm not involved in CRAN (but the R project!) but this is really
about tools in R's grDevices package to enable programmeRs to
write platform-portable code. 

Exactly for that reason did we invent and implement dev.new()
even though I was not much envolved in that, I've applauded the
solution (for R 2.7.0, April 2008) quite a bit.   
AFAIK this has become the de facto standard for opening a
graphics device -- "if possible interactive" -- explicitly and
portably.

I have neither been involved in the creation of the
'noRStudioGD' option, but from looking at  dev.new() it is clear
that it *should* work on all three platforms (Windows, Mac,
Linuxen).

It is really unfortunate that this still does not work reliably
(or stopped working with a new release of "something" ?)... 

Honestely, I believe it is primarily RStudio's responsibility to
ensure that something standard R as  dev.new()  keeps working in
their interface to R, and if it does not, at least contact the R
developers (R core) about it.
But yes, I don't have the background info about this and really
don't want to through any rocks... 
==> rather a "friendly" CC to get Rstudio's staff attention to
this issue.

    > that works reliably across platforms when using RStudio?
    > Perhaps this is an issue to take up with RStudio and/or
    > R-Devel directly, but I'd appreciate any insights or
    > suggestions any of you may have.

See above.  I hope this will be resolvable soon.
It's too bad that R 3.2.1 "RC" (release candidate) is basically
deep frozen already;  OTOH, if there's very localized
Rstudio-specific patch which would solve the issue ..


    > Thank you for your help,
    > Alex

You're welcome,
Martin


From jj at rstudio.com  Sun Jun 14 13:41:53 2015
From: jj at rstudio.com (JJ Allaire)
Date: Sun, 14 Jun 2015 07:41:53 -0400
Subject: [R-pkg-devel] use of `dev.new` across platforms in RStudio
	(Martin Maechler)
Message-ID: <CAKw=oCyKsgsCjzVs9sZX52N=J-Yf6han_WmEEDgH8KkJvXdkCQ@mail.gmail.com>

> I have neither been involved in the creation of the
> 'noRStudioGD' option, but from looking at  dev.new() it is clear
> that it *should* work on all three platforms (Windows, Mac,
> Linuxen).
>
> It is really unfortunate that this still does not work reliably
> (or stopped working with a new release of "something" ?)...
>
> Honestely, I believe it is primarily RStudio's responsibility to
> ensure that something standard R as  dev.new()  keeps working in
> their interface to R,= and if it does not, at least contact the R
> developers (R core) about it.

Currently the RStudio graphics device creation function fails if the
RStudio device is already active. We will modify this function to
rather than fail just delegate to the platform-appropriate device
creation function (which will create an external windows, X11, or
quartz graphics device window). This will make dev.new work as
expected within RStudio.

J.J. Allaire


From alex.chubaty at gmail.com  Sun Jun 14 21:46:30 2015
From: alex.chubaty at gmail.com (Alex Chubaty)
Date: Sun, 14 Jun 2015 12:46:30 -0700
Subject: [R-pkg-devel] use of `dev.new` across platforms in RStudio
 (Martin Maechler)
In-Reply-To: <CAKw=oCyKsgsCjzVs9sZX52N=J-Yf6han_WmEEDgH8KkJvXdkCQ@mail.gmail.com>
References: <CAKw=oCyKsgsCjzVs9sZX52N=J-Yf6han_WmEEDgH8KkJvXdkCQ@mail.gmail.com>
Message-ID: <CAPpe6oR31F27KayeC6YL+7iQMqE_-RqVAkXtQwHwgh_Gctfwng@mail.gmail.com>

Thank you Martin for passing this along to RStudio, and thank you JJ for
your reply.

JJ, do you have an estimated timeframe for when this fix will appear?
There's still the issue of RStudio users not updating their software at
each and every release, so it may time some time for `dev.new` to work for
most people.

In the mean time, the best work around I've come up with is as follows. It
checks for RStudio graphics device being set in options and basically
overrides it. The catch is that `setDevice` only works if invoked by the
user in the RStudio console. `unsetDevice` can be put into my package
`.onUnload()`. R CMD check doesn't seem to complain, but I'm not completely
satisfied with this workaround.

setDevice <- function() {
   options(myPackage.device = getOption("device"))  # move this line
to `.onLoad`
   if (getOption("device")=="RStudioGD") {
     if (Sys.info()["sysname"]=="Darwin") {
       options(device="quartz")
     } else if (Sys.info()["sysname"]=="Linux") {
       options(device="x11")
     } else if (Sys.info()["sysname"]=="Windows") {
       options(device="windows") # `dev.new` works on Windows, so
could omit this
     }
   }
  message("Default plot device set to ", getOption("device"), ". ",
          "Remember to reset your default device using `unsetDevice()`.")
}
# unset default graphics device (i.e., return to user's prev setting).
call during `.onUnload`?unsetDevice <- function() {
  if (!is.null(getOption("myPackage.device"))) {
    options(device=getOption("myPackage.device"))
  }
  options(myPackage.device = NULL)
}



Thoughts and suggestions welcome.

Thank you,
Alex

--
amc

On Sun, Jun 14, 2015 at 4:41 AM, JJ Allaire <jj at rstudio.com> wrote:

> > I have neither been involved in the creation of the
> > 'noRStudioGD' option, but from looking at  dev.new() it is clear
> > that it *should* work on all three platforms (Windows, Mac,
> > Linuxen).
> >
> > It is really unfortunate that this still does not work reliably
> > (or stopped working with a new release of "something" ?)...
> >
> > Honestely, I believe it is primarily RStudio's responsibility to
> > ensure that something standard R as  dev.new()  keeps working in
> > their interface to R,= and if it does not, at least contact the R
> > developers (R core) about it.
>
> Currently the RStudio graphics device creation function fails if the
> RStudio device is already active. We will modify this function to
> rather than fail just delegate to the platform-appropriate device
> creation function (which will create an external windows, X11, or
> quartz graphics device window). This will make dev.new work as
> expected within RStudio.
>
> J.J. Allaire
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From jj at rstudio.com  Mon Jun 15 11:05:30 2015
From: jj at rstudio.com (JJ Allaire)
Date: Mon, 15 Jun 2015 05:05:30 -0400
Subject: [R-pkg-devel] use of `dev.new` across platforms in RStudio
 (Martin Maechler)
In-Reply-To: <CAPpe6oR31F27KayeC6YL+7iQMqE_-RqVAkXtQwHwgh_Gctfwng@mail.gmail.com>
References: <CAKw=oCyKsgsCjzVs9sZX52N=J-Yf6han_WmEEDgH8KkJvXdkCQ@mail.gmail.com>
	<CAPpe6oR31F27KayeC6YL+7iQMqE_-RqVAkXtQwHwgh_Gctfwng@mail.gmail.com>
Message-ID: <CAKw=oCzRkJUfR3fN6X3L1Lk4FJLbzhc7f3ozxJRnTQMu-LuJgw@mail.gmail.com>

On Sun, Jun 14, 2015 at 3:46 PM, Alex Chubaty <alex.chubaty at gmail.com> wrote:
> JJ, do you have an estimated timeframe for when this fix will appear?
> There's still the issue of RStudio users not updating their software at each
> and every release, so it may time some time for `dev.new` to work for most
> people.

This is in our daily builds now and will also be included in our next
minor patch release (within a few weeks).

J.J.


From maechler at stat.math.ethz.ch  Mon Jun 15 14:02:20 2015
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Mon, 15 Jun 2015 14:02:20 +0200
Subject: [R-pkg-devel] use of `dev.new` across platforms in RStudio
In-Reply-To: <CAKw=oCyKsgsCjzVs9sZX52N=J-Yf6han_WmEEDgH8KkJvXdkCQ@mail.gmail.com>
References: <CAKw=oCyKsgsCjzVs9sZX52N=J-Yf6han_WmEEDgH8KkJvXdkCQ@mail.gmail.com>
Message-ID: <21886.48844.304485.595397@stat.math.ethz.ch>

>>>>> JJ Allaire <jj at rstudio.com>
>>>>>     on Sun, 14 Jun 2015 07:41:53 -0400 writes:

    >> I have neither been involved in the creation of the
    >> 'noRStudioGD' option, but from looking at dev.new() it is
    >> clear that it *should* work on all three platforms
    >> (Windows, Mac, Linuxen).
    >> 
    >> It is really unfortunate that this still does not work
    >> reliably (or stopped working with a new release of
    >> "something" ?)...
    >> 
    >> Honestely, I believe it is primarily RStudio's
    >> responsibility to ensure that something standard R as
    >> dev.new() keeps working in their interface to R,= and if
    >> it does not, at least contact the R developers (R core)
    >> about it.

    > Currently the RStudio graphics device creation function
    > fails if the RStudio device is already active. We will
    > modify this function to rather than fail just delegate to
    > the platform-appropriate device creation function (which
    > will create an external windows, X11, or quartz graphics
    > device window). This will make dev.new work as expected
    > within RStudio.

    > J.J. Allaire

Thanks a lot indeed, J.J. ... for such a quick and positive
reaction!

In a perfect world we would have communicated about and solved
the issue long ago.....  and I'm sorry that you've not been
contacted about the issue earlier.

Best regards,
Martin


From kevin.r.coombes at gmail.com  Thu Jun 18 14:45:59 2015
From: kevin.r.coombes at gmail.com (Kevin Coombes)
Date: Thu, 18 Jun 2015 08:45:59 -0400
Subject: [R-pkg-devel] R CMD check package subdirectory warning on filenames
Message-ID: <5582BD87.8080004@gmail.com>

Hello,

In putting together my latest package, I'm getting the following warning 
from "R CMD check --as-cran"

* checking package subdirectories ... WARNING
Subdirectory 'inst/doc' contains invalid file names:
   '02oneGeneSims.Rnw' '02oneGeneSims.pdf'
Please remove or rename the files.
See section 'Package subdirectories' in the 'Writing R Extensions'
manual.

Having read the recommended section several times and looked everywhere 
I can to read about valid file names, I had a hard time figuring out why 
I was getting this message. Finally, I tried removing the "02" from the 
beginning of the filename, and the warning went away.

I still can't find anyplace in the manual that says "thou shalt not 
start a filename with a digit" or "thou shalt not start a filename with 
the number '0' followed by another digit". In fact, the second sentence 
of the section on Package subdirectories says "The code files to be 
installed must start with an ASCII (lower or upper case) letter or 
digit...."

[1] Why is this restriction here?

[2] If the restriction must remain, can the warning message be improved 
so it actually tells you what the problem is? Or points to a place in 
the manual that actually tells you what the problem is?

[3] Since vignettes get listed in the help pages in alphabetical order, 
does this mean I have to call my vignettes "a.Rnw", "b.Rnw" and "c.Rnw" 
to get them listed in the order I want?

   Kevin


From bbolker at gmail.com  Thu Jun 18 15:14:54 2015
From: bbolker at gmail.com (Ben Bolker)
Date: Thu, 18 Jun 2015 09:14:54 -0400
Subject: [R-pkg-devel] R CMD check package subdirectory warning on
	filenames
In-Reply-To: <5582BD87.8080004@gmail.com>
References: <5582BD87.8080004@gmail.com>
Message-ID: <5582C44E.6060105@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


  It's specific to doc files. In the current version, section 1.4 says:

Documents in inst/doc can be in arbitrary format, however we strongly
recommend providing them in PDF format, so users on almost all
platforms can easily read them. To ensure that they can be accessed
from a browser (as an HTML index is provided), the file names should
start with an ASCII letter and be comprised entirely of ASCII letters
or digits or hyphen or underscore.

  (I didn't know that browsers had trouble accessing file names that
started with a digit?)

  I don't know when this was added ...

  Ben Bolker


On 15-06-18 08:45 AM, Kevin Coombes wrote:
> Hello,
> 
> In putting together my latest package, I'm getting the following
> warning from "R CMD check --as-cran"
> 
> * checking package subdirectories ... WARNING Subdirectory
> 'inst/doc' contains invalid file names: '02oneGeneSims.Rnw'
> '02oneGeneSims.pdf' Please remove or rename the files. See section
> 'Package subdirectories' in the 'Writing R Extensions' manual.
> 
> Having read the recommended section several times and looked
> everywhere I can to read about valid file names, I had a hard time
> figuring out why I was getting this message. Finally, I tried
> removing the "02" from the beginning of the filename, and the
> warning went away.
> 
> I still can't find anyplace in the manual that says "thou shalt
> not start a filename with a digit" or "thou shalt not start a
> filename with the number '0' followed by another digit". In fact,
> the second sentence of the section on Package subdirectories says
> "The code files to be installed must start with an ASCII (lower or
> upper case) letter or digit...."
> 
> [1] Why is this restriction here?
> 
> [2] If the restriction must remain, can the warning message be
> improved so it actually tells you what the problem is? Or points to
> a place in the manual that actually tells you what the problem is?
> 
> [3] Since vignettes get listed in the help pages in alphabetical
> order, does this mean I have to call my vignettes "a.Rnw", "b.Rnw"
> and "c.Rnw" to get them listed in the order I want?
> 
> Kevin
> 
> ______________________________________________ 
> R-package-devel at r-project.org mailing list 
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.11 (GNU/Linux)

iQEcBAEBAgAGBQJVgsROAAoJEOCV5YRblxUHHtYH/Rv/pnt8LuqnV25r2tIKP2+L
LQJkboYK8OW8doZu0sExS5ObdEMtsNEi60QaIHmGV8I9FTH2J5DdxblgTThyrEsz
Znjr7XAyUiua+05EYeHezxPiSYc7ElOouUiQ3CvPC8YLWOm5vBMxPIKcpJ0mtqiW
XK9DIdvW4pcfLMNiWbPIOyjUKSMGWouN46utRICyIkBQO1z7ZWgAyxEon6bqyoiP
vwpBpdeHtLGo4VFz4D0gLvYUlWpuySG1zGvvzeuMSG25G7WnF6WbqphfCK8jd4GE
PhaqOb6QEpQ1evD7GxoD6uABkgsb8IAGTI88pAsCsTnqNbOtuUtYHlU0stxhOmw=
=fsfi
-----END PGP SIGNATURE-----


From brian at braverock.com  Thu Jun 18 15:26:31 2015
From: brian at braverock.com (Brian G. Peterson)
Date: Thu, 18 Jun 2015 08:26:31 -0500
Subject: [R-pkg-devel] R CMD check package subdirectory warning on
 filenames
In-Reply-To: <5582C44E.6060105@gmail.com>
References: <5582BD87.8080004@gmail.com> <5582C44E.6060105@gmail.com>
Message-ID: <1434633991.6547.25.camel@brian-rcg.priv.dvtrading.co>

On Thu, 2015-06-18 at 09:14 -0400, Ben Bolker wrote:
>   (I didn't know that browsers had trouble accessing file names that
> started with a digit?)

They don't.

the relevant rfc, I think, is this one:
https://www.ietf.org/rfc/rfc3986.txt

the 'unreserved' (allowed) characters are

 unreserved  = ALPHA / DIGIT / "-" / "." / "_" / "~"

(RFC3986, p. 12)

One would assume that R should also allow all unreserved characters in
file names for documents, vignettes, etc.

Regards,

Brian

-- 
Brian G. Peterson
http://braverock.com/brian/
Ph: 773-459-4973
IM: bgpbraverock


From kevin.r.coombes at gmail.com  Thu Jun 18 16:01:00 2015
From: kevin.r.coombes at gmail.com (Kevin Coombes)
Date: Thu, 18 Jun 2015 10:01:00 -0400
Subject: [R-pkg-devel] R CMD check package subdirectory warning on
	filenames
In-Reply-To: <5582C44E.6060105@gmail.com>
References: <5582BD87.8080004@gmail.com> <5582C44E.6060105@gmail.com>
Message-ID: <5582CF1C.80204@gmail.com>

Thanks for pointing me to the correct section. (I failed to find this 
paragraph when I looked more widely since I only searched the PDF manual 
on "filename", which is used sometimes, and not "file name", which is 
also used some times.) And it is worth noting that this description in 
section 1.4 is not the same as section 1.1.5 where the R CMD check 
warning points....

And I'm pretty sure that browsers have no difficulty finding files whose 
name starts with a digit.

Thanks,
   Kevin

On 6/18/2015 9:14 AM, Ben Bolker wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
>
>    It's specific to doc files. In the current version, section 1.4 says:
>
> Documents in inst/doc can be in arbitrary format, however we strongly
> recommend providing them in PDF format, so users on almost all
> platforms can easily read them. To ensure that they can be accessed
> from a browser (as an HTML index is provided), the file names should
> start with an ASCII letter and be comprised entirely of ASCII letters
> or digits or hyphen or underscore.
>
>    (I didn't know that browsers had trouble accessing file names that
> started with a digit?)
>
>    I don't know when this was added ...
>
>    Ben Bolker
>
>
> On 15-06-18 08:45 AM, Kevin Coombes wrote:
>> Hello,
>>
>> In putting together my latest package, I'm getting the following
>> warning from "R CMD check --as-cran"
>>
>> * checking package subdirectories ... WARNING Subdirectory
>> 'inst/doc' contains invalid file names: '02oneGeneSims.Rnw'
>> '02oneGeneSims.pdf' Please remove or rename the files. See section
>> 'Package subdirectories' in the 'Writing R Extensions' manual.
>>
>> Having read the recommended section several times and looked
>> everywhere I can to read about valid file names, I had a hard time
>> figuring out why I was getting this message. Finally, I tried
>> removing the "02" from the beginning of the filename, and the
>> warning went away.
>>
>> I still can't find anyplace in the manual that says "thou shalt
>> not start a filename with a digit" or "thou shalt not start a
>> filename with the number '0' followed by another digit". In fact,
>> the second sentence of the section on Package subdirectories says
>> "The code files to be installed must start with an ASCII (lower or
>> upper case) letter or digit...."
>>
>> [1] Why is this restriction here?
>>
>> [2] If the restriction must remain, can the warning message be
>> improved so it actually tells you what the problem is? Or points to
>> a place in the manual that actually tells you what the problem is?
>>
>> [3] Since vignettes get listed in the help pages in alphabetical
>> order, does this mean I have to call my vignettes "a.Rnw", "b.Rnw"
>> and "c.Rnw" to get them listed in the order I want?
>>
>> Kevin
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.4.11 (GNU/Linux)
>
> iQEcBAEBAgAGBQJVgsROAAoJEOCV5YRblxUHHtYH/Rv/pnt8LuqnV25r2tIKP2+L
> LQJkboYK8OW8doZu0sExS5ObdEMtsNEi60QaIHmGV8I9FTH2J5DdxblgTThyrEsz
> Znjr7XAyUiua+05EYeHezxPiSYc7ElOouUiQ3CvPC8YLWOm5vBMxPIKcpJ0mtqiW
> XK9DIdvW4pcfLMNiWbPIOyjUKSMGWouN46utRICyIkBQO1z7ZWgAyxEon6bqyoiP
> vwpBpdeHtLGo4VFz4D0gLvYUlWpuySG1zGvvzeuMSG25G7WnF6WbqphfCK8jd4GE
> PhaqOb6QEpQ1evD7GxoD6uABkgsb8IAGTI88pAsCsTnqNbOtuUtYHlU0stxhOmw=
> =fsfi
> -----END PGP SIGNATURE-----
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From rdiaz02 at gmail.com  Fri Jun 19 12:01:10 2015
From: rdiaz02 at gmail.com (Ramon Diaz-Uriarte)
Date: Fri, 19 Jun 2015 12:01:10 +0200
Subject: [R-pkg-devel] SystemRequirements and .R/Makevars
Message-ID: <87pp4skoex.fsf@gmail.com>

Dear All,

Some of my packages use

SystemRequirements: C++11

in the DESCRIPTION. But then .R/Makevars seems to be ignored (e.g., flags
such as -Wall or using clang) in all that concerns C++ (only CXX and
CXXFLAGS are ignored, not CC or CFLAGS). So I keep commenting that line for
normal development and uncommenting it for final checking before release.


I vaguely remember reading somewhere this is the way things work, but this
is not what I understand from reading again
http://cran.r-project.org/doc/manuals/r-devel/R-exts.html#Using-C_002b_002b11-code.

After googling I have not been able to locate anything, and since I guess
it is probably common to use both C++11 and a custom .R/Makevars I think
something is wrong somewhere in my setup. But I have no idea what. I am
using Debian (a mix of testing and unstable), both with stock Debian R and
with custom built Rs.


Best,


R.


-- 
Ramon Diaz-Uriarte
Department of Biochemistry, Lab B-25
Facultad de Medicina
Universidad Aut?noma de Madrid 
Arzobispo Morcillo, 4
28029 Madrid
Spain

Phone: +34-91-497-2412

Email: rdiaz02 at gmail.com
       ramon.diaz at iib.uam.es

http://ligarto.org/rdiaz


From plummerm at iarc.fr  Fri Jun 19 14:59:54 2015
From: plummerm at iarc.fr (Martyn Plummer)
Date: Fri, 19 Jun 2015 12:59:54 +0000
Subject: [R-pkg-devel] SystemRequirements and .R/Makevars
In-Reply-To: <87pp4skoex.fsf@gmail.com>
References: <87pp4skoex.fsf@gmail.com>
Message-ID: <1434718778.4876.5.camel@iarc.fr>

Dear Ramon,

You should be able to work around this by putting the line

CXX_STD = CXX11

in the package's Makevars file (or Makevars.win for Windows). The idea
of putting SystemRequirements: C++ in the DESCRIPTION file was to
provide a shortcut for packages that have no Makevars file. From your
description, it sounds like this shortcut has the unintended consequence
of overriding the user's Makevars file.

I will look into it, but you can make this task a lot easier by telling
me which packages using C++11 are affected and give me some examples of
specific Makevars entries that are ignored.

Martyn 

On Fri, 2015-06-19 at 12:01 +0200, Ramon Diaz-Uriarte wrote:
> Dear All,
> 
> Some of my packages use
> 
> SystemRequirements: C++11
> 
> in the DESCRIPTION. But then .R/Makevars seems to be ignored (e.g., flags
> such as -Wall or using clang) in all that concerns C++ (only CXX and
> CXXFLAGS are ignored, not CC or CFLAGS). So I keep commenting that line for
> normal development and uncommenting it for final checking before release.
> 
> 
> I vaguely remember reading somewhere this is the way things work, but this
> is not what I understand from reading again
> http://cran.r-project.org/doc/manuals/r-devel/R-exts.html#Using-C_002b_002b11-code.
> 
> After googling I have not been able to locate anything, and since I guess
> it is probably common to use both C++11 and a custom .R/Makevars I think
> something is wrong somewhere in my setup. But I have no idea what. I am
> using Debian (a mix of testing and unstable), both with stock Debian R and
> with custom built Rs.
> 
> 
> Best,
> 
> 
> R.
> 
> 

-----------------------------------------------------------------------
This message and its attachments are strictly confidenti...{{dropped:8}}


From edd at debian.org  Fri Jun 19 15:04:36 2015
From: edd at debian.org (Dirk Eddelbuettel)
Date: Fri, 19 Jun 2015 08:04:36 -0500
Subject: [R-pkg-devel] SystemRequirements and .R/Makevars
In-Reply-To: <87pp4skoex.fsf@gmail.com>
References: <87pp4skoex.fsf@gmail.com>
Message-ID: <21892.4964.743889.976454@max.nulle.part>


Hi Ramon,

On 19 June 2015 at 12:01, Ramon Diaz-Uriarte wrote:
| Some of my packages use
| 
| SystemRequirements: C++11
| 
| in the DESCRIPTION. But then .R/Makevars seems to be ignored (e.g., flags
| such as -Wall or using clang) in all that concerns C++ (only CXX and
| CXXFLAGS are ignored, not CC or CFLAGS). So I keep commenting that line for
| normal development and uncommenting it for final checking before release.
| 
| 
| I vaguely remember reading somewhere this is the way things work, but this
| is not what I understand from reading again
| http://cran.r-project.org/doc/manuals/r-devel/R-exts.html#Using-C_002b_002b11-code.
| 
| After googling I have not been able to locate anything, and since I guess
| it is probably common to use both C++11 and a custom .R/Makevars I think
| something is wrong somewhere in my setup. But I have no idea what. I am
| using Debian (a mix of testing and unstable), both with stock Debian R and
| with custom built Rs.

I settled pretty early on declaring this in src/Makevars only, partly for
historical reason (as it is where we always set compiler flags) and partly
because I found it to be consistent and reliabel.  Writing R Extensions
offers an alternate, I forget the details.

One tricky bit is that we now have several CXX* variables.  And because "code
is documentation" I often do the following to remind myself of CXX1X:

  edd at max:~$ grep ^CXX /etc/R/Makeconf 
  CXX = g++
  CXXCPP = $(CXX) -E
  CXXFLAGS = -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2 -g $(LTO)
  CXXPICFLAGS = -fpic
  CXX1X = g++
  CXX1XFLAGS = -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2 -g
  CXX1XPICFLAGS = -fpic
  CXX1XSTD =  -std=c++11
  edd at max:~$

I my most recent C++11-only package I did

  edd at max:~$ cat git/rcpptoml/src/Makevars 
  
  ## This is a C++11 package
  CXX_STD = CXX11
  
  ## We need the header in inst/include, and a define
  PKG_CPPFLAGS = -I../inst/include/ -DCPPTOML_USE_MAP
  
  edd at max:~$

which regroups both the the compiler choice, an include directive and a
#define in one place.

Hope this helps, Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From rdiaz02 at gmail.com  Fri Jun 19 18:44:32 2015
From: rdiaz02 at gmail.com (Ramon Diaz-Uriarte)
Date: Fri, 19 Jun 2015 18:44:32 +0200
Subject: [R-pkg-devel] SystemRequirements and .R/Makevars
In-Reply-To: <1434718778.4876.5.camel@iarc.fr>
References: <87pp4skoex.fsf@gmail.com> <1434718778.4876.5.camel@iarc.fr>
Message-ID: <87381n6427.fsf@gmail.com>

Dear Martyn,


On Fri, 19-06-2015, at 14:59, Martyn Plummer <plummerm at iarc.fr> wrote:
> Dear Ramon,
>
> You should be able to work around this by putting the line
>
> CXX_STD = CXX11
>
> in the package's Makevars file (or Makevars.win for Windows). The idea
> of putting SystemRequirements: C++ in the DESCRIPTION file was to

A question here, though: I thought that by using "SystemRequirements:
C++11" we make it easy for the user to know that (e.g., it is explicitly
shown by both CRAN's and BioConductor's information about a package). But
commenting that out, it is no longer explicit (but then, maybe it is not
that big a deal).

> provide a shortcut for packages that have no Makevars file. From your

Aha, I see. I think I removed the Makevars file after Rcpp 0.11 was
released.



I just added a src/Makevars file, and following Dirk's response I also
added entries in .R/Makevars for

CXX1XSTD
CXX1XFLAGS

and these, as well as possible entries for

CC
CXX
CXX1X

all are now followed.

> description, it sounds like this shortcut has the unintended consequence
> of overriding the user's Makevars file.
>
> I will look into it, but you can make this task a lot easier by telling
> me which packages using C++11 are affected and give me some examples of
> specific Makevars entries that are ignored.
>

This is a BioConductor package:
http://www.bioconductor.org/packages/devel/bioc/html/OncoSimulR.html (the
version right now at bioc fails in Windows and Mac but that should be
fixed).

with github repo here: https://github.com/rdiaz02/OncoSimul

I can of course send you the tar.gz with the latest sources that build OK
with both gcc and clang.


Makevars entries ignored:

things such as:

CC=clang
CXX=clang++-libc++

CXXFLAGS= -g -O3 -Wall -Wextra -pedantic 


Best,


R.


> Martyn 
>
> On Fri, 2015-06-19 at 12:01 +0200, Ramon Diaz-Uriarte wrote:
>> Dear All,
>> 
>> Some of my packages use
>> 
>> SystemRequirements: C++11
>> 
>> in the DESCRIPTION. But then .R/Makevars seems to be ignored (e.g., flags
>> such as -Wall or using clang) in all that concerns C++ (only CXX and
>> CXXFLAGS are ignored, not CC or CFLAGS). So I keep commenting that line for
>> normal development and uncommenting it for final checking before release.
>> 
>> 
>> I vaguely remember reading somewhere this is the way things work, but this
>> is not what I understand from reading again
>> http://cran.r-project.org/doc/manuals/r-devel/R-exts.html#Using-C_002b_002b11-code.
>> 
>> After googling I have not been able to locate anything, and since I guess
>> it is probably common to use both C++11 and a custom .R/Makevars I think
>> something is wrong somewhere in my setup. But I have no idea what. I am
>> using Debian (a mix of testing and unstable), both with stock Debian R and
>> with custom built Rs.
>> 
>> 
>> Best,
>> 
>> 
>> R.
>> 
>> 
>
> -----------------------------------------------------------------------
> This message and its attachments are strictly confiden...{{dropped:24}}


From rdiaz02 at gmail.com  Fri Jun 19 18:53:19 2015
From: rdiaz02 at gmail.com (Ramon Diaz-Uriarte)
Date: Fri, 19 Jun 2015 18:53:19 +0200
Subject: [R-pkg-devel] SystemRequirements and .R/Makevars
In-Reply-To: <21892.4964.743889.976454@max.nulle.part>
References: <87pp4skoex.fsf@gmail.com>
	<21892.4964.743889.976454@max.nulle.part>
Message-ID: <871th763nk.fsf@gmail.com>

Hi Dirk,




On Fri, 19-06-2015, at 15:04, Dirk Eddelbuettel <edd at debian.org> wrote:
> Hi Ramon,
>
> On 19 June 2015 at 12:01, Ramon Diaz-Uriarte wrote:
> | Some of my packages use
> | 
> | SystemRequirements: C++11
> | 
> | in the DESCRIPTION. But then .R/Makevars seems to be ignored (e.g., flags
> | such as -Wall or using clang) in all that concerns C++ (only CXX and
> | CXXFLAGS are ignored, not CC or CFLAGS). So I keep commenting that line for
> | normal development and uncommenting it for final checking before release.
> | 
> | 
> | I vaguely remember reading somewhere this is the way things work, but this
> | is not what I understand from reading again
> | http://cran.r-project.org/doc/manuals/r-devel/R-exts.html#Using-C_002b_002b11-code.
> | 
> | After googling I have not been able to locate anything, and since I guess
> | it is probably common to use both C++11 and a custom .R/Makevars I think
> | something is wrong somewhere in my setup. But I have no idea what. I am
> | using Debian (a mix of testing and unstable), both with stock Debian R and
> | with custom built Rs.
>
> I settled pretty early on declaring this in src/Makevars only, partly for
> historical reason (as it is where we always set compiler flags) and partly
> because I found it to be consistent and reliabel.  Writing R Extensions
> offers an alternate, I forget the details.
>
> One tricky bit is that we now have several CXX* variables.  And because "code
> is documentation" I often do the following to remind myself of CXX1X:
>
>   edd at max:~$ grep ^CXX /etc/R/Makeconf 
>   CXX = g++
>   CXXCPP = $(CXX) -E
>   CXXFLAGS = -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2 -g $(LTO)
>   CXXPICFLAGS = -fpic
>   CXX1X = g++
>   CXX1XFLAGS = -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2 -g
>   CXX1XPICFLAGS = -fpic
>   CXX1XSTD =  -std=c++11

Aha! Thanks. I modified them slightly to try it out and have now in .R/Makevars


## If I want clang
# CC=clang
# CXX=clang++-libc++
# CXX1X=clang++-libc++

CFLAGS= -O3 -g0 -Wall -Wextra -pipe -pedantic -std=gnu99 

CXXFLAGS= -isystem /home/ramon/Sources/R-3.2.1-bioc-devel-68530/library/Rcpp/include  -g -O3 -Wall -Wextra -pipe -std=c++11
CXX1XFLAGS= -isystem /home/ramon/Sources/R-3.2.1-bioc-devel-68530/library/Rcpp/include -g -O3  -Wall -Wextra -pipe 
CXX1XSTD= -std=c++11
CXX1XPICFLAGS = -fpic

I added a src/Makevars to the package that contains only

CXX_STD = CXX11


and everything is working now. I can modify flags at will and change
compilers to make sure it works with clang.


>   edd at max:~$
>
> I my most recent C++11-only package I did
>
>   edd at max:~$ cat git/rcpptoml/src/Makevars 
>   
>   ## This is a C++11 package
>   CXX_STD = CXX11
>   
>   ## We need the header in inst/include, and a define
>   PKG_CPPFLAGS = -I../inst/include/ -DCPPTOML_USE_MAP
>
>   edd at max:~$
>
> which regroups both the the compiler choice, an include directive and a
> #define in one place.

Aha! I did not need those right now but it is great to know it is that
easy. 

>
> Hope this helps, Dirk

It certainly does.

Best,

R.

-- 
Ramon Diaz-Uriarte
Department of Biochemistry, Lab B-25
Facultad de Medicina
Universidad Aut?noma de Madrid 
Arzobispo Morcillo, 4
28029 Madrid
Spain

Phone: +34-91-497-2412

Email: rdiaz02 at gmail.com
       ramon.diaz at iib.uam.es

http://ligarto.org/rdiaz


From jenny at stat.ubc.ca  Sun Jun 21 16:46:58 2015
From: jenny at stat.ubc.ca (Jennifer Bryan)
Date: Sun, 21 Jun 2015 07:46:58 -0700
Subject: [R-pkg-devel] how to skip tests on CRAN but NOT on travis-ci?
Message-ID: <D4752047-1DF3-4E70-A856-DACE42249164@stat.ubc.ca>

I hope this is an appropriate to place to ask this. My question involves add-on tools and services, but I think they are in common use and others might have same question.

I am using testthat for testing and Travis (https://travis-ci.org) for continuous integration.

I do not want the vast majority of my tests to run on CRAN. They take a long time, require an internet connection, etc. I believe the official testthat solution for this is to use testthat::skip_on_cran() at the beginning of the body of the test.

However, I DO want these tests to run on Travis. In fact, I'd like to be as crazy strict on Travis as possible. More strict than on CRAN. So running R CMD check on Travis "as CRAN" is no good for me.

I think this coincides with this unanswered question on stackoverflow:
http://stackoverflow.com/questions/27557150/check-as-cran-but-do-not-skip-any-tests?lq=1

Thanks for any suggestions,
Jenny

Jennifer Bryan
Associate Professor
Department of Statistics and
   the Michael Smith Laboratories
University of British Columbia
Vancouver, BC Canada


From edd at debian.org  Sun Jun 21 17:47:11 2015
From: edd at debian.org (Dirk Eddelbuettel)
Date: Sun, 21 Jun 2015 10:47:11 -0500
Subject: [R-pkg-devel] how to skip tests on CRAN but NOT on travis-ci?
In-Reply-To: <D4752047-1DF3-4E70-A856-DACE42249164@stat.ubc.ca>
References: <D4752047-1DF3-4E70-A856-DACE42249164@stat.ubc.ca>
Message-ID: <21894.56447.353724.560019@max.nulle.part>


Hi Jenny,

And a warm welcome here.  I hope you enjoy this place and its ability to form
questions (and answers) beyond the 140 char limit posed elsewhere. :-)

On 21 June 2015 at 07:46, Jennifer Bryan wrote:
| I hope this is an appropriate to place to ask this. My question involves add-on tools and services, but I think they are in common use and others might have same question.
| 
| I am using testthat for testing and Travis (https://travis-ci.org) for continuous integration.
| 
| I do not want the vast majority of my tests to run on CRAN. They take a long time, require an internet connection, etc. I believe the official testthat solution for this is to use testthat::skip_on_cran() at the beginning of the body of the test.
| 
| However, I DO want these tests to run on Travis. In fact, I'd like to be as crazy strict on Travis as possible. More strict than on CRAN. So running R CMD check on Travis "as CRAN" is no good for me.
| 
| I think this coincides with this unanswered question on stackoverflow:
| http://stackoverflow.com/questions/27557150/check-as-cran-but-do-not-skip-any-tests?lq=1


Environment variables are perfect for this.  Eg in RcppRedis I can in fact
assume Redis to be present on Travis (as Travis has a webby-ish focus where
Redis is common) but am fairly certain win-builder and other machines do not.

So in tests/runUnitTests.R I have (with two typos I fixed here)



## if we know a redis server is set up, we can signal this -- cf .travis.yml
if (Sys.getenv("RunRcppRedisTests") == "yes") runTests <- TRUE

## here is a shortcut: if the user is 'edd' we also run tests
## ought to be wrong on CRAN, win-builder, ...
if (Sys.getenv("USER") == "edd") runTests <- TRUE



which shortly later is used in


## Tests for test run
if (runTests) {
    ## Run tests
    tests <- runTestSuite(testSuite)

    ....




This is generic, and you can surely adapt it from testthat.



In Rcpp we do something pretty similar within the set of test files in order
to remain within the one-minute limit.

So in tests/doRUnit.R we do set an environment variable to turn tests on,
else they are off by default:


## force tests to be executed if in dev release which we define as
## having a sub-release, eg 0.9.15.5 is one whereas 0.9.16 is not
if (length(strsplit(packageDescription("Rcpp")$Version, "\\.")[[1]]) > 3) {	
    if (Sys.getenv("RunAllRcppTests") != "no") { 				
        message("Setting \"RunAllRcppTests\"=\"yes\" for development release\n")
        Sys.setenv("RunAllRcppTests"="yes")
    }
}

    
Hope this helps,  Dirk


-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From csardi.gabor at gmail.com  Sun Jun 21 17:51:30 2015
From: csardi.gabor at gmail.com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Sun, 21 Jun 2015 11:51:30 -0400
Subject: [R-pkg-devel] how to skip tests on CRAN but NOT on travis-ci?
In-Reply-To: <D4752047-1DF3-4E70-A856-DACE42249164@stat.ubc.ca>
References: <D4752047-1DF3-4E70-A856-DACE42249164@stat.ubc.ca>
Message-ID: <CABtg=K=L170QkYKKgvHmyM_wYS_imHWzOwUP8v9RgE8gvqUJ3g@mail.gmail.com>

I think you can just use skip_on_cran() for the tests that you want to
skip on CRAN, and set the NOT_CRAN environment variable in your Travis
config.

Gabor

On Sun, Jun 21, 2015 at 10:46 AM, Jennifer Bryan <jenny at stat.ubc.ca> wrote:
> I hope this is an appropriate to place to ask this. My question involves add-on tools and services, but I think they are in common use and others might have same question.
>
> I am using testthat for testing and Travis (https://travis-ci.org) for continuous integration.
>
> I do not want the vast majority of my tests to run on CRAN. They take a long time, require an internet connection, etc. I believe the official testthat solution for this is to use testthat::skip_on_cran() at the beginning of the body of the test.
>
> However, I DO want these tests to run on Travis. In fact, I'd like to be as crazy strict on Travis as possible. More strict than on CRAN. So running R CMD check on Travis "as CRAN" is no good for me.
>
> I think this coincides with this unanswered question on stackoverflow:
> http://stackoverflow.com/questions/27557150/check-as-cran-but-do-not-skip-any-tests?lq=1
>
> Thanks for any suggestions,
> Jenny
>
> Jennifer Bryan
> Associate Professor
> Department of Statistics and
>    the Michael Smith Laboratories
> University of British Columbia
> Vancouver, BC Canada
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From kamvarz at science.oregonstate.edu  Sun Jun 21 17:38:49 2015
From: kamvarz at science.oregonstate.edu (Zhian Kamvar)
Date: Sun, 21 Jun 2015 08:38:49 -0700
Subject: [R-pkg-devel] how to skip tests on CRAN but NOT on travis-ci?
In-Reply-To: <D4752047-1DF3-4E70-A856-DACE42249164@stat.ubc.ca>
References: <D4752047-1DF3-4E70-A856-DACE42249164@stat.ubc.ca>
Message-ID: <997026F1-535E-4A3C-BF73-1142368FC7C4@science.oregonstate.edu>

I don't know if this is the best way to do it, but I've been using the covr package (https://github.com/jimhester/covr) to run all of my tests on codecov.io even when I use testthat::skip_on_cran(). The only downside is that it increases the amount of time needed for the package to build.

HTH,
Zhian

> On Jun 21, 2015, at 07:46 , Jennifer Bryan <jenny at stat.ubc.ca> wrote:
> 
> I hope this is an appropriate to place to ask this. My question involves add-on tools and services, but I think they are in common use and others might have same question.
> 
> I am using testthat for testing and Travis (https://travis-ci.org) for continuous integration.
> 
> I do not want the vast majority of my tests to run on CRAN. They take a long time, require an internet connection, etc. I believe the official testthat solution for this is to use testthat::skip_on_cran() at the beginning of the body of the test.
> 
> However, I DO want these tests to run on Travis. In fact, I'd like to be as crazy strict on Travis as possible. More strict than on CRAN. So running R CMD check on Travis "as CRAN" is no good for me.
> 
> I think this coincides with this unanswered question on stackoverflow:
> http://stackoverflow.com/questions/27557150/check-as-cran-but-do-not-skip-any-tests?lq=1
> 
> Thanks for any suggestions,
> Jenny
> 
> Jennifer Bryan
> Associate Professor
> Department of Statistics and
>   the Michael Smith Laboratories
> University of British Columbia
> Vancouver, BC Canada
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From edd at debian.org  Sun Jun 21 17:56:26 2015
From: edd at debian.org (Dirk Eddelbuettel)
Date: Sun, 21 Jun 2015 10:56:26 -0500
Subject: [R-pkg-devel] how to skip tests on CRAN but NOT on travis-ci?
In-Reply-To: <21894.56447.353724.560019@max.nulle.part>
References: <D4752047-1DF3-4E70-A856-DACE42249164@stat.ubc.ca>
	<21894.56447.353724.560019@max.nulle.part>
Message-ID: <21894.57002.830274.592870@max.nulle.part>


On 21 June 2015 at 10:47, Dirk Eddelbuettel wrote:
| Environment variables are perfect for this.  Eg in RcppRedis I can in fact
| assume Redis to be present on Travis (as Travis has a webby-ish focus where
| Redis is common) but am fairly certain win-builder and other machines do not.
| 
| So in tests/runUnitTests.R I have (with two typos I fixed here)
| 
| 
| 
| ## if we know a redis server is set up, we can signal this -- cf .travis.yml
| if (Sys.getenv("RunRcppRedisTests") == "yes") runTests <- TRUE
| 
| ## here is a shortcut: if the user is 'edd' we also run tests
| ## ought to be wrong on CRAN, win-builder, ...
| if (Sys.getenv("USER") == "edd") runTests <- TRUE
| 

And I forgot to show that in .travis.yml we do of course set this, and also
request a Redis server:


env:
  global:
    - _R_CHECK_FORCE_SUGGESTS_=FALSE
    - RunRcppRedisTests=yes

services:
  - redis-server



Dirk

 
| which shortly later is used in
| 
| 
| ## Tests for test run
| if (runTests) {
|     ## Run tests
|     tests <- runTestSuite(testSuite)
| 
|     ....
| 
| 
| 
| 
| This is generic, and you can surely adapt it from testthat.
| 
| 
| 
| In Rcpp we do something pretty similar within the set of test files in order
| to remain within the one-minute limit.
| 
| So in tests/doRUnit.R we do set an environment variable to turn tests on,
| else they are off by default:
| 
| 
| ## force tests to be executed if in dev release which we define as
| ## having a sub-release, eg 0.9.15.5 is one whereas 0.9.16 is not
| if (length(strsplit(packageDescription("Rcpp")$Version, "\\.")[[1]]) > 3) {	
|     if (Sys.getenv("RunAllRcppTests") != "no") { 				
|         message("Setting \"RunAllRcppTests\"=\"yes\" for development release\n")
|         Sys.setenv("RunAllRcppTests"="yes")
|     }
| }
| 
|     
| Hope this helps,  Dirk
| 
| 
| -- 
| http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
| 
| ______________________________________________
| R-package-devel at r-project.org mailing list
| https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From murdoch.duncan at gmail.com  Sun Jun 21 18:09:17 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Sun, 21 Jun 2015 12:09:17 -0400
Subject: [R-pkg-devel] how to skip tests on CRAN but NOT on travis-ci?
In-Reply-To: <D4752047-1DF3-4E70-A856-DACE42249164@stat.ubc.ca>
References: <D4752047-1DF3-4E70-A856-DACE42249164@stat.ubc.ca>
Message-ID: <5586E1AD.10607@gmail.com>

On 21/06/2015 10:46 AM, Jennifer Bryan wrote:
> I hope this is an appropriate to place to ask this. My question involves add-on tools and services, but I think they are in common use and others might have same question.
> 
> I am using testthat for testing and Travis (https://travis-ci.org) for continuous integration.
> 
> I do not want the vast majority of my tests to run on CRAN. They take a long time, require an internet connection, etc. I believe the official testthat solution for this is to use testthat::skip_on_cran() at the beginning of the body of the test.
> 
> However, I DO want these tests to run on Travis. In fact, I'd like to be as crazy strict on Travis as possible. More strict than on CRAN. So running R CMD check on Travis "as CRAN" is no good for me.
> 
> I think this coincides with this unanswered question on stackoverflow:
> http://stackoverflow.com/questions/27557150/check-as-cran-but-do-not-skip-any-tests?lq=1
> 
> Thanks for any suggestions,

Hi Jenny.

Besides the other suggestions, you can put tests in directories other
than "tests".  By default they won't run, but

R CMD check --test-dir=travisTests

will run them.  So if you can tell travis to add that option to the
command line, you could put all the travis-specific tests into
inst/travisTests, and it will run them instead of the regular ones.

Duncan Murdoch


From csardi.gabor at gmail.com  Sun Jun 21 19:03:22 2015
From: csardi.gabor at gmail.com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Sun, 21 Jun 2015 13:03:22 -0400
Subject: [R-pkg-devel] how to skip tests on CRAN but NOT on travis-ci?
In-Reply-To: <5586E1AD.10607@gmail.com>
References: <D4752047-1DF3-4E70-A856-DACE42249164@stat.ubc.ca>
	<5586E1AD.10607@gmail.com>
Message-ID: <CABtg=K=vGw5_thf+vuM7XmBUU-abr_buSWj5FgMEPFwbmSAE9A@mail.gmail.com>

On Sun, Jun 21, 2015 at 12:09 PM, Duncan Murdoch
<murdoch.duncan at gmail.com> wrote:
> Besides the other suggestions, you can put tests in directories other
> than "tests".  By default they won't run, but
>
> R CMD check --test-dir=travisTests
>
> will run them.  So if you can tell travis to add that option to the
> command line, you could put all the travis-specific tests into
> inst/travisTests, and it will run them instead of the regular ones.

AFAIK this does not play very well with testthat, which the OP is clearly using.

Also, the OP wants run _additional_ tests, not something _instead_ of
the "regular" ones.

G.

[...]


From jenny at stat.ubc.ca  Mon Jun 22 01:17:49 2015
From: jenny at stat.ubc.ca (Jennifer Bryan)
Date: Sun, 21 Jun 2015 16:17:49 -0700
Subject: [R-pkg-devel] how to skip tests on CRAN but NOT on travis-ci?
In-Reply-To: <CABtg=K=L170QkYKKgvHmyM_wYS_imHWzOwUP8v9RgE8gvqUJ3g@mail.gmail.com>
References: <D4752047-1DF3-4E70-A856-DACE42249164@stat.ubc.ca>
	<CABtg=K=L170QkYKKgvHmyM_wYS_imHWzOwUP8v9RgE8gvqUJ3g@mail.gmail.com>
Message-ID: <14E30736-94E5-4155-8899-95B22E6372BF@stat.ubc.ca>

Thanks for all of the responses!

What Gabor says below is true and is the path of least resistance in my particular case. As Dirk suggested, environment variables are the way to go.

If I put this into .travis.yml:

env:
  - NOT_CRAN=true

I get what I want

  * The Travis build still runs with the option --as-cran.
  * The tests harbouring testthat::skip_on_cran() are run locally and on Travis
  * The tests harbouring testthat::skip_on_cran() are NOT run on CRAN (at least, the little experiment I just ran on winbuilder suggests this ? haven't tried with actual CRAN submission)

TIL: the NOT_CRAN environment variable and the --as-cran option for R CMD check are completely independent of each other.

I also confirmed what Zhian said: if you're using skip_on_cran() and *don't* set NOT_CRAN=true in .travis.yml, you can still get some info about the affected tests in the coveralls result. But this doesn't seem a great solution, since you don't get much detail in the case of failure.

-- Jenny

On 2015-06-21, at 8:51 AM, G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:

> I think you can just use skip_on_cran() for the tests that you want to
> skip on CRAN, and set the NOT_CRAN environment variable in your Travis
> config.
> 
> Gabor
> 
> On Sun, Jun 21, 2015 at 10:46 AM, Jennifer Bryan <jenny at stat.ubc.ca> wrote:
>> I hope this is an appropriate to place to ask this. My question involves add-on tools and services, but I think they are in common use and others might have same question.
>> 
>> I am using testthat for testing and Travis (https://travis-ci.org) for continuous integration.
>> 
>> I do not want the vast majority of my tests to run on CRAN. They take a long time, require an internet connection, etc. I believe the official testthat solution for this is to use testthat::skip_on_cran() at the beginning of the body of the test.
>> 
>> However, I DO want these tests to run on Travis. In fact, I'd like to be as crazy strict on Travis as possible. More strict than on CRAN. So running R CMD check on Travis "as CRAN" is no good for me.
>> 
>> I think this coincides with this unanswered question on stackoverflow:
>> http://stackoverflow.com/questions/27557150/check-as-cran-but-do-not-skip-any-tests?lq=1
>> 
>> Thanks for any suggestions,
>> Jenny
>> 
>> Jennifer Bryan
>> Associate Professor
>> Department of Statistics and
>>   the Michael Smith Laboratories
>> University of British Columbia
>> Vancouver, BC Canada
>> 
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel

Jennifer Bryan
Associate Professor
Department of Statistics and
   the Michael Smith Laboratories
University of British Columbia
Vancouver, BC Canada


From murdoch.duncan at gmail.com  Mon Jun 22 02:52:22 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Sun, 21 Jun 2015 20:52:22 -0400
Subject: [R-pkg-devel] how to skip tests on CRAN but NOT on travis-ci?
In-Reply-To: <CABtg=K=vGw5_thf+vuM7XmBUU-abr_buSWj5FgMEPFwbmSAE9A@mail.gmail.com>
References: <D4752047-1DF3-4E70-A856-DACE42249164@stat.ubc.ca>	<5586E1AD.10607@gmail.com>
	<CABtg=K=vGw5_thf+vuM7XmBUU-abr_buSWj5FgMEPFwbmSAE9A@mail.gmail.com>
Message-ID: <55875C46.2070709@gmail.com>

On 21/06/2015 1:03 PM, G?bor Cs?rdi wrote:
> On Sun, Jun 21, 2015 at 12:09 PM, Duncan Murdoch
> <murdoch.duncan at gmail.com> wrote:
>> Besides the other suggestions, you can put tests in directories other
>> than "tests".  By default they won't run, but
>>
>> R CMD check --test-dir=travisTests
>>
>> will run them.  So if you can tell travis to add that option to the
>> command line, you could put all the travis-specific tests into
>> inst/travisTests, and it will run them instead of the regular ones.
> 
> AFAIK this does not play very well with testthat, which the OP is clearly using.

Which seems like a problem with that package...

> 
> Also, the OP wants run _additional_ tests, not something _instead_ of
> the "regular" ones.

But it's trivial to source files from the tests directory.  Or perhaps
(I don't know, I don't use it) it's trivial to tell travis to run the
standard R CMD check, followed by the suggested one.

Duncan Murdoch


From csardi.gabor at gmail.com  Mon Jun 22 03:12:57 2015
From: csardi.gabor at gmail.com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Sun, 21 Jun 2015 21:12:57 -0400
Subject: [R-pkg-devel] how to skip tests on CRAN but NOT on travis-ci?
In-Reply-To: <55875C46.2070709@gmail.com>
References: <D4752047-1DF3-4E70-A856-DACE42249164@stat.ubc.ca>
	<5586E1AD.10607@gmail.com>
	<CABtg=K=vGw5_thf+vuM7XmBUU-abr_buSWj5FgMEPFwbmSAE9A@mail.gmail.com>
	<55875C46.2070709@gmail.com>
Message-ID: <CABtg=KnCJUkB+JzTuFVGm-xPT9meWFEFFpgr7SozyzqMrXjEag@mail.gmail.com>

On Sun, Jun 21, 2015 at 8:52 PM, Duncan Murdoch
<murdoch.duncan at gmail.com> wrote:
[...]
>
> But it's trivial to source files from the tests directory.

It is actually often not trivial at all. E.g. if you have a test with
setup/teardown, and the setup must be run before each test case, the
teardown after, and you want to run each test case in a clean
environment, this really does not play well with source-ing files.

It is definitely possible, and probably works for smaller packages
with simple tests, but imo it is not good practice.

> Or perhaps
> (I don't know, I don't use it) it's trivial to tell travis to run the
> standard R CMD check, followed by the suggested one.

Yes, it is trivial, but I think this is not good practice either. E.g.
testthat gives you a summary in the end, and then you would need to
look at multiple summaries. It is easy to forget about the multiple
summaries, and miss one.

I think it is way easier if you just invoke the testing once, and let
it select what to run based on where it is running, what services are
available, etc.

G.


From murdoch.duncan at gmail.com  Mon Jun 22 03:27:02 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Sun, 21 Jun 2015 21:27:02 -0400
Subject: [R-pkg-devel] how to skip tests on CRAN but NOT on travis-ci?
In-Reply-To: <CABtg=KnCJUkB+JzTuFVGm-xPT9meWFEFFpgr7SozyzqMrXjEag@mail.gmail.com>
References: <D4752047-1DF3-4E70-A856-DACE42249164@stat.ubc.ca>	<5586E1AD.10607@gmail.com>	<CABtg=K=vGw5_thf+vuM7XmBUU-abr_buSWj5FgMEPFwbmSAE9A@mail.gmail.com>	<55875C46.2070709@gmail.com>
	<CABtg=KnCJUkB+JzTuFVGm-xPT9meWFEFFpgr7SozyzqMrXjEag@mail.gmail.com>
Message-ID: <55876466.4020508@gmail.com>

On 21/06/2015 9:12 PM, G?bor Cs?rdi wrote:
> On Sun, Jun 21, 2015 at 8:52 PM, Duncan Murdoch
> <murdoch.duncan at gmail.com> wrote:
> [...]
>>
>> But it's trivial to source files from the tests directory.
> 
> It is actually often not trivial at all. E.g. if you have a test with
> setup/teardown, and the setup must be run before each test case, the
> teardown after, and you want to run each test case in a clean
> environment, this really does not play well with source-ing files.
> 
> It is definitely possible, and probably works for smaller packages
> with simple tests, but imo it is not good practice.
> 
>> Or perhaps
>> (I don't know, I don't use it) it's trivial to tell travis to run the
>> standard R CMD check, followed by the suggested one.
> 
> Yes, it is trivial, but I think this is not good practice either. E.g.
> testthat gives you a summary in the end, and then you would need to
> look at multiple summaries. It is easy to forget about the multiple
> summaries, and miss one.
> 
> I think it is way easier if you just invoke the testing once, and let
> it select what to run based on where it is running, what services are
> available, etc.

As long as the reports tell you what tests were skipped, this seems
reasonable too.

Duncan Murdoch


From maechler at stat.math.ethz.ch  Mon Jun 22 13:26:35 2015
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Mon, 22 Jun 2015 13:26:35 +0200
Subject: [R-pkg-devel] [Rd] NAMESPACE imports
In-Reply-To: <2CC34A93-C798-46EC-9922-B99AECD6798C@illinois.edu>
References: <2CC34A93-C798-46EC-9922-B99AECD6798C@illinois.edu>
Message-ID: <21895.61675.411598.286164@stat.math.ethz.ch>

Dear Roger,

I'm diverting this to the newly appropriate R-package-devel  mailing list
see also http://www.r-project.org/mail.html .
I hope that's fine for you.

>>>>> Roger Koenker <rkoenker at illinois.edu>
>>>>>     on Mon, 22 Jun 2015 12:56:17 +0200 writes:

    >    I need some advice on how to resolve a warning in a revision of my
   > REBayes package.

   > At the moment the package Depends on SparseM and Matrix and does some
   > mildly exotic
   > coercion like this:
   > A <- as(as.matrix.csc(A),"dgCMatrix")
   > that converts a SparseM csr matrix A into a SparseM csc matrix and then
   > into a dgC Matrix. I suppose
   > that I could try to convert all of this sort of thing into pkg::fname
   > calls, but I dont relish the prospect.  

and IIUC, you should not do that ("::") typically, to the contrary.

   > Is there some other strategy?  Actually, to be honest, Im not entirely
   > sure how to do this conversion for the
   > above expression, so if this is the way to go, could someone explain
   > the right way to deal with the first as()?

The above is "fine" (well, I'm pretty sure it is suboptimal, and
you could more directly convert to a "dgCMatrix" ..)
in the sense of the package checks.

   > At the moment Im stuck with the following warning that I cant seem to
   > find a way around:
   > * checking whether package 'REBayes' can be installed ... WARNING
   > Found the following significant warnings:
   >   Warning: replacing previous import by 'SparseM::coerce' when loading
   > REBayes'

As alluded to above, you typically should not use have to use
such explicit "::" calls, but rather make sure -- via your
NAMESPACE file -- to import the corresponding functionality from
the correct places.

One "mistake" many package authors do is to say

  import(pkg_1)
  ...
  import(pkg_n)

for a host of packages instead specifically

  importFrom(pkg_1,  fun1, fun2, fun3)

As you are the maintainer of SparseM and I am of Matrix, we
should really e-talk in trying to resolve this.

Are you developing  REBayes "in public" (i.e. on R-forge,
github, bitorrent,  .. or another such public place), so I could
reproduce what you are seeing?

With best regards,
Martin


From h.wickham at gmail.com  Mon Jun 22 14:09:09 2015
From: h.wickham at gmail.com (Hadley Wickham)
Date: Mon, 22 Jun 2015 07:09:09 -0500
Subject: [R-pkg-devel] how to skip tests on CRAN but NOT on travis-ci?
In-Reply-To: <14E30736-94E5-4155-8899-95B22E6372BF@stat.ubc.ca>
References: <D4752047-1DF3-4E70-A856-DACE42249164@stat.ubc.ca>
	<CABtg=K=L170QkYKKgvHmyM_wYS_imHWzOwUP8v9RgE8gvqUJ3g@mail.gmail.com>
	<14E30736-94E5-4155-8899-95B22E6372BF@stat.ubc.ca>
Message-ID: <CABdHhvFFY2s=Qcn_HRJU1e2+1Az7Yj+XPTthmOto4mZDpE+tYw@mail.gmail.com>

On Sun, Jun 21, 2015 at 6:17 PM, Jennifer Bryan <jenny at stat.ubc.ca> wrote:
> Thanks for all of the responses!
>
> What Gabor says below is true and is the path of least resistance in my particular case. As Dirk suggested, environment variables are the way to go.
>
> If I put this into .travis.yml:
>
> env:
>   - NOT_CRAN=true
>
> I get what I want
>
>   * The Travis build still runs with the option --as-cran.
>   * The tests harbouring testthat::skip_on_cran() are run locally and on Travis
>   * The tests harbouring testthat::skip_on_cran() are NOT run on CRAN (at least, the little experiment I just ran on winbuilder suggests this ? haven't tried with actual CRAN submission)
>
> TIL: the NOT_CRAN environment variable and the --as-cran option for R CMD check are completely independent of each other.

Yeah, NOT_CRAN is just a devtools convention - devtools sets not on
CRAN for you, and skip_on_cran() just tests for that env var (since I
have no control over what env vars are set on cran machines).

I think this used to work on travis because the old travis setup
called devtools::check(), while the new setup calls R CMD check
directly.

Hadley

-- 
http://had.co.nz/


From carloscinelli at hotmail.com  Mon Jun 22 16:33:47 2015
From: carloscinelli at hotmail.com (Carlos Cinelli)
Date: Mon, 22 Jun 2015 14:33:47 +0000
Subject: [R-pkg-devel] r-patched-solaris-sparc error
Message-ID: <SNT146-W465E1DFFE11DE1CA4E29DDA7A10@phx.gbl>

Hi all,
I have written a simple package a while ago and I have noticed that only in solaris-sparc it failed some tests that I wrote with testthat.
http://cran.r-project.org/web/checks/check_results_benford.analysis.html

I plan to (eventually) completely rewrite this package and maybe I will take these tests out of the CRAN version. But I wanted to understand why this errors showed up only in solaris (the Mean relative difference is quite big).Also, if I decided to keep the tests, I wanted to know how could I make sure these will not fail in solaris.
ThanksBest
Carlos
 		 	   		  
	[[alternative HTML version deleted]]


From plummerm at iarc.fr  Tue Jun 23 12:18:13 2015
From: plummerm at iarc.fr (Martyn Plummer)
Date: Tue, 23 Jun 2015 10:18:13 +0000
Subject: [R-pkg-devel] r-patched-solaris-sparc error
In-Reply-To: <SNT146-W465E1DFFE11DE1CA4E29DDA7A10@phx.gbl>
References: <SNT146-W465E1DFFE11DE1CA4E29DDA7A10@phx.gbl>
Message-ID: <1435054680.4876.38.camel@iarc.fr>

Hi Carlos,

The underlying cause is probably some C code that makes assumptions
about byte order or alignment that are not true on Solaris SPARC. Since
your code contains no compiled code that points to one of the package's
dependencies. In fact the data.table package also fails on Solaris
SPARC.

http://cran.r-project.org/web/checks/check_results_data.table.html

So you should contact the maintaner of data.table if you want this
fixed.

Martyn

On Mon, 2015-06-22 at 14:33 +0000, Carlos Cinelli wrote:
> Hi all,
> I have written a simple package a while ago and I have noticed that
> only in solaris-sparc it failed some tests that I wrote with testthat.
> http://cran.r-project.org/web/checks/check_results_benford.analysis.html
> 
> I plan to (eventually) completely rewrite this package and maybe I
> will take these tests out of the CRAN version. But I wanted to
> understand why this errors showed up only in solaris (the Mean
> relative difference is quite big).Also, if I decided to keep the
> tests, I wanted to know how could I make sure these will not fail in
> solaris.
> ThanksBest
> Carlos
-----------------------------------------------------------------------
This message and its attachments are strictly confidenti...{{dropped:8}}


From complexm at gmail.com  Tue Jun 23 13:25:24 2015
From: complexm at gmail.com (code M)
Date: Tue, 23 Jun 2015 13:25:24 +0200
Subject: [R-pkg-devel] debugging problems with valgrind
Message-ID: <CAA2dc0C+g-L=geO53zvfcL7PN93cQz76s8spxVQiqrbEBGXqjQ@mail.gmail.com>

i am developing a little package that basically is a simple wrapper around
some C++ code, that is being called via the RCpp package. Basically the
code works, but i did find out that the results are different for 32bit and
64bit environments, so this might point to problems in the C++ code. The
32bit box is a virtual machine, the 64bit is running native. Both systems
are Ubuntu 15.04 with R 3.1.2. Also, when calling build_win() i get
different results than on my computer.

To debug the situation, i tried to use valgrind as a debugger on the 32bit
virtual machine. So instead of a simple  "R --vanilla <./demo.R" (the demo
calls only the corresponding unit test) i called now "R -d "valgrind"
--vanilla < demo.R". The (very funny) result is that when called with
valgrind, my tests are now running fine, i.e. i get the very same results
as on my 64bit box. So in some ways valgrind seems to change the behaviour
of R, luckily into a 'good' direction-- but which is nothing that i would
have expected. (To make sure, i also did the same two commands on my native
64bit system, there is no such change, i.e. valgrind does not change
anything)

I am not sure if i can make a minimal test script that reproduces the
behaviour. Before i try i would like to hear if anyone ever encountered
something similar with using valgrind and R, and maybe can point out if
this is something related to R, valgrind, Rcpp, C++ code or something
completely different (while i am certain that the C++ code is not really
64bit ready yet).

(In case anyone wants to peek into the code, it can be found at
https://github.com/aydindemircioglu/yakmoR)

Thanks,
Aydin

	[[alternative HTML version deleted]]


From edd at debian.org  Tue Jun 23 19:04:05 2015
From: edd at debian.org (Dirk Eddelbuettel)
Date: Tue, 23 Jun 2015 12:04:05 -0500
Subject: [R-pkg-devel] debugging problems with valgrind
In-Reply-To: <CAA2dc0C+g-L=geO53zvfcL7PN93cQz76s8spxVQiqrbEBGXqjQ@mail.gmail.com>
References: <CAA2dc0C+g-L=geO53zvfcL7PN93cQz76s8spxVQiqrbEBGXqjQ@mail.gmail.com>
Message-ID: <21897.37253.9299.904871@max.nulle.part>


My approach would be to write a small C++ test function and main program
against the C++ library you use, and run it in both 32 and 64 bit.

Without using R. You then know whether the difference you see is due to the
library, or your R wrapping, which should give you an idea about where to
make changes.

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From carloscinelli at hotmail.com  Wed Jun 24 01:28:11 2015
From: carloscinelli at hotmail.com (carlos cinelli)
Date: Tue, 23 Jun 2015 20:28:11 -0300
Subject: [R-pkg-devel] r-patched-solaris-sparc error
In-Reply-To: <1435054680.4876.38.camel@iarc.fr>
References: <SNT146-W465E1DFFE11DE1CA4E29DDA7A10@phx.gbl>
	<1435054680.4876.38.camel@iarc.fr>
Message-ID: <CAP+==UTtoC2aaMCfgv35WPX8J+okw4=0KBfkFXrDtdPao-LPfA@mail.gmail.com>

Thanks a lot, Martyn!

On Tue, Jun 23, 2015 at 7:18 AM, Martyn Plummer <plummerm at iarc.fr> wrote:

> Hi Carlos,
>
> The underlying cause is probably some C code that makes assumptions
> about byte order or alignment that are not true on Solaris SPARC. Since
> your code contains no compiled code that points to one of the package's
> dependencies. In fact the data.table package also fails on Solaris
> SPARC.
>
> http://cran.r-project.org/web/checks/check_results_data.table.html
>
> So you should contact the maintaner of data.table if you want this
> fixed.
>
> Martyn
>
> On Mon, 2015-06-22 at 14:33 +0000, Carlos Cinelli wrote:
> > Hi all,
> > I have written a simple package a while ago and I have noticed that
> > only in solaris-sparc it failed some tests that I wrote with testthat.
> > http://cran.r-project.org/web/checks/check_results_benford.analysis.html
> >
> > I plan to (eventually) completely rewrite this package and maybe I
> > will take these tests out of the CRAN version. But I wanted to
> > understand why this errors showed up only in solaris (the Mean
> > relative difference is quite big).Also, if I decided to keep the
> > tests, I wanted to know how could I make sure these will not fail in
> > solaris.
> > ThanksBest
> > Carlos
> -----------------------------------------------------------------------
> This message and its attachments are strictly confiden...{{dropped:13}}


From milbo at sonic.net  Fri Jun 26 13:29:40 2015
From: milbo at sonic.net (Stephen Milborrow)
Date: Fri, 26 Jun 2015 13:29:40 +0200
Subject: [R-pkg-devel] Guidelines for S3 regression models
Message-ID: <3EDDF9DD076A4DFAA7355BEF21FE8B9C@M6800>

Once we have built a regression model, we typically want to use the model
for further processing, such as making predictions from the model or
plotting the residuals.  Unfortunately, for many packages on CRAN this can
be difficult.

For example, some models don't have a residuals method and don't save the
call or data --- so you can't tell how to generate the residuals from the
model object itself.

A common snag is that for some models the new data for predict() has to be a
matrix; for others it has to be a data.frame.  This places an unnecessary
burden on the user when both data.frames and matrices can easily be
supported by predict.

To mitigate such issues, I'm going out on a limb and presenting some
guidelines for writers of S3 regression model functions (this document is
currently part of the plotmo package):

http://www.milbo.org/doc/modguide.pdf

Your comments would be appreciated.

Stephen Milborrow


From james at jtoll.com  Sun Jun 28 21:13:56 2015
From: james at jtoll.com (James Toll)
Date: Sun, 28 Jun 2015 14:13:56 -0500
Subject: [R-pkg-devel] Issue with closures & devtools::document/check
Message-ID: <C34A4122-37A2-431F-8898-735E894EE8B2@jtoll.com>

Hi,

I?m working on putting together a package of some functions I?ve been using and I?m running into an issue with closures.  I?m using Rstudio and devtools.  Here is a simple example that shows the problem I?m having.

file: R/testClosure.R
#' Test Closure
#'
#' This function is an example of a closure.
#'
#' @param y a number.
#'
#' @return A function.
#' @export
testClosure <- function (y) {
    function (x) {
        x ^ y
    }
}

file: R/square.R
#? Square a number
#'
#' This function squares a number.
#'
#' @param x a number.
#'
#' @return A number.
#' @export
sq <- testClosure(2)


If I try to run document() or check() from devtools, I get these errors.
> document()
Updating pda documentation
Loading pda
Error in eval(expr, envir, enclos) (from square.R#9) : 
  could not find function "testClosure"
> check()
Updating pda documentation
Loading pda
Error in eval(expr, envir, enclos) (from square.R#9) : 
  could not find function ?testClosure"

If I create something similar, that?s not a closure, I don?t have any path issues finding the other function.  This seems to only happen when I try to use a closure.  Any thoughts or suggestions on what might be happening here?  Thank you.

James


From winstonchang1 at gmail.com  Sun Jun 28 21:58:33 2015
From: winstonchang1 at gmail.com (Winston Chang)
Date: Sun, 28 Jun 2015 14:58:33 -0500
Subject: [R-pkg-devel] Issue with closures & devtools::document/check
In-Reply-To: <C34A4122-37A2-431F-8898-735E894EE8B2@jtoll.com>
References: <C34A4122-37A2-431F-8898-735E894EE8B2@jtoll.com>
Message-ID: <CAFOpNVH=JJWYTN+zVqxAxSGBKKtT0aNAHmeA1N-6vAUHHqqA9Q@mail.gmail.com>

This is a devtools-specific question, so it really belongs on the
rdevtools mailing list:
  https://groups.google.com/forum/#!forum/rdevtools


That said, this is probably happening because square.R is being
processed before testClosure.R. By default, the files are processed in
lexicographical order.

If you want to change that, you can add this to the top of square.R:

#' @include testClosure.R


-Winston

On Sun, Jun 28, 2015 at 2:13 PM, James Toll <james at jtoll.com> wrote:
> Hi,
>
> I?m working on putting together a package of some functions I?ve been using and I?m running into an issue with closures.  I?m using Rstudio and devtools.  Here is a simple example that shows the problem I?m having.
>
> file: R/testClosure.R
> #' Test Closure
> #'
> #' This function is an example of a closure.
> #'
> #' @param y a number.
> #'
> #' @return A function.
> #' @export
> testClosure <- function (y) {
>     function (x) {
>         x ^ y
>     }
> }
>
> file: R/square.R
> #? Square a number
> #'
> #' This function squares a number.
> #'
> #' @param x a number.
> #'
> #' @return A number.
> #' @export
> sq <- testClosure(2)
>
>
> If I try to run document() or check() from devtools, I get these errors.
>> document()
> Updating pda documentation
> Loading pda
> Error in eval(expr, envir, enclos) (from square.R#9) :
>   could not find function "testClosure"
>> check()
> Updating pda documentation
> Loading pda
> Error in eval(expr, envir, enclos) (from square.R#9) :
>   could not find function ?testClosure"
>
> If I create something similar, that?s not a closure, I don?t have any path issues finding the other function.  This seems to only happen when I try to use a closure.  Any thoughts or suggestions on what might be happening here?  Thank you.
>
> James
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From james at jtoll.com  Sun Jun 28 22:35:10 2015
From: james at jtoll.com (James Toll)
Date: Sun, 28 Jun 2015 15:35:10 -0500
Subject: [R-pkg-devel] Issue with closures & devtools::document/check
In-Reply-To: <CAFOpNVH=JJWYTN+zVqxAxSGBKKtT0aNAHmeA1N-6vAUHHqqA9Q@mail.gmail.com>
References: <C34A4122-37A2-431F-8898-735E894EE8B2@jtoll.com>
	<CAFOpNVH=JJWYTN+zVqxAxSGBKKtT0aNAHmeA1N-6vAUHHqqA9Q@mail.gmail.com>
Message-ID: <9691A0AB-1FEE-4EDD-AA92-BFF66FBA4866@jtoll.com>


> On Jun 28, 2015, at 2:58 PM, Winston Chang <winstonchang1 at gmail.com> wrote:
> 
> If you want to change that, you can add this to the top of square.R:
> 
> #' @include testClosure.R


Yes, I believe that mostly fixed my issue.  Thank you. 

I also needed to include NULL after that line, so that documentation would build.

#' @include testClosure.R
NULL
?


I guess this was actually more of an roxygen2 issue rather than devtools, but it turns out Hadley has a bit of info on this issue in his ?R Packages? book.

http://r-pkgs.had.co.nz/man.html#man-classes

"By default, R code is loaded in alphabetical order, but that won?t always work for your situation. Rather than relying on alphabetic ordering, roxygen2 provides an explicit way of saying that one file must be loaded before another: @include. The @include tag gives a space separated list of file names that should be loaded before the current file:"

Thanks again for your help.


James


From d.luedecke at uke.de  Mon Jun 29 11:10:23 2015
From: d.luedecke at uke.de (=?iso-8859-1?Q?Daniel_L=FCdecke?=)
Date: Mon, 29 Jun 2015 11:10:23 +0200
Subject: [R-pkg-devel] no visible global function definition
Message-ID: <002601d0b24b$6e47b970$4ad72c50$@uke.de>

Hello,

I'm doing my package check for CRAN, in order to see whether submitting the
package-update passes all checks.
I'm doing the tests under Windows 7, using R-Version "R Under development
(unstable) (2015-06-28 r68602)".

Now I got a quite long list of NOTEs, which are probably no problem,
however, I would like to fix these issues, if possible.

It seems that all base and/or stats function now produce a note concering
the visible global function definition. Here's a short example of my output
from my package check:

sjp.grpfrq: no visible global function definition for 'sd'
sjp.grpfrq: no visible global function definition for 'plot'
sjp.int: no visible global function definition for 'sd'
sjp.int: no visible global function definition for 'quantile'
sjp.int: no visible global function definition for 'plogis'
sjp.likert: no visible global function definition for 'xtabs'
sjp.likert: no visible binding for global variable 'offset'
sjp.likert: no visible global function definition for 'plot'
sjp.lm: no visible global function definition for 'coef'
sjp.lm: no visible global function definition for 'coefficients'
sjp.lm: no visible global function definition for 'confint'
sjp.lm.eff: no visible global function definition for 'model.matrix'

Do I have to import all these namespaces now? I'm using RStudio with
roxygen, so I would add an @importFrom stats <function_x_y> where necessary
- but is this the new requirement as of R >= 3.3?

Best wishes
Daniel




--

_____________________________________________________________________

Universit?tsklinikum Hamburg-Eppendorf; K?rperschaft des ?ffentlichen Rechts; Gerichtsstand: Hamburg | www.uke.de
Vorstandsmitglieder: Prof. Dr. Burkhard G?ke (Vorsitzender), Prof. Dr. Dr. Uwe Koch-Gromus, Joachim Pr?l?, Rainer Schoppik
_____________________________________________________________________

SAVE PAPER - THINK BEFORE PRINTING


From jonathan at mazamascience.com  Mon Jun 29 17:25:03 2015
From: jonathan at mazamascience.com (Jonathan Callahan)
Date: Mon, 29 Jun 2015 08:25:03 -0700
Subject: [R-pkg-devel] appropriate directory for data downloads in examples,
	demos and vignettes
Message-ID: <CAPjNR=Sn1Zjp9VnF-4UnRGB1ous03Mb70RA7nTmA8KH46+pcPg@mail.gmail.com>

Hi,

The MazamaSpatialUtils
<http://cran.r-project.org/package=MazamaSpatialUtils> package has a
required "package state" variable which users set to specify where they
want to store large amounts of GIS data that is being downloaded and
converted by the package. The implementation of this follows Hadley's
advice here:

http://adv-r.had.co.nz/Environments.html#explicit-envs

The functionality is implemented with package environment and getter and
setter functions:

spatialEnv <- new.env(parent = emptyenv())
spatialEnv$dataDir <- NULL


getSpatialDataDir <- function() {
  if (is.null(spatialEnv$dataDir)) {
    stop('No data directory found. Please set a data directory with
setSpatialDataDir("YOUR_DATA_DIR").',call.=FALSE)
  } else {
    return(spatialEnv$dataDir)
  }
}


setSpatialDataDir <- function(dataDir) {
  old <- spatialEnv$dataDir
  dataDir <- path.expand(dataDir)
  tryCatch({
    if (!file.exists(dataDir)) dir.create(dataDir)
    spatialEnv$dataDir <- dataDir
  }, warning = function(warn) {
    warning("Invalid path name.")
  }, error   = function(err) {
    stop(paste0("Error in setSpatialDataDir(",dataDir,")."))
  })
  return(invisible(old))
}


My question is:

*What is an appropriate directory to specify for vignettes (or demos or
examples) that need to go through CRAN testing?*

The R code in vignettes need to specify a directory that is writable during
the package build process but that will also be available to users.

Should we create a /tmp/<hash> directory? Would that be available on all
systems?

Alternatively,

*What is an alternative to vignettes and demos for tutorial scripts that
should not be tested upon submission to CRAN?*


Thanks for any suggestions.

Jon


-- 
Jonathan Callahan, PhD
Mazama Science
206-708-5028
mazamascience.com

	[[alternative HTML version deleted]]


From ligges at statistik.tu-dortmund.de  Mon Jun 29 17:46:46 2015
From: ligges at statistik.tu-dortmund.de (Uwe Ligges)
Date: Mon, 29 Jun 2015 17:46:46 +0200
Subject: [R-pkg-devel] no visible global function definition
In-Reply-To: <002601d0b24b$6e47b970$4ad72c50$@uke.de>
References: <002601d0b24b$6e47b970$4ad72c50$@uke.de>
Message-ID: <55916866.7060604@statistik.tu-dortmund.de>



On 29.06.2015 11:10, Daniel L?decke wrote:
> Hello,
>
> I'm doing my package check for CRAN, in order to see whether submitting the
> package-update passes all checks.
> I'm doing the tests under Windows 7, using R-Version "R Under development
> (unstable) (2015-06-28 r68602)".
>
> Now I got a quite long list of NOTEs, which are probably no problem,
> however, I would like to fix these issues, if possible.
>
> It seems that all base and/or stats function now produce a note concering
> the visible global function definition. Here's a short example of my output
> from my package check:
>
> sjp.grpfrq: no visible global function definition for 'sd'
> sjp.grpfrq: no visible global function definition for 'plot'
> sjp.int: no visible global function definition for 'sd'
> sjp.int: no visible global function definition for 'quantile'
> sjp.int: no visible global function definition for 'plogis'
> sjp.likert: no visible global function definition for 'xtabs'
> sjp.likert: no visible binding for global variable 'offset'
> sjp.likert: no visible global function definition for 'plot'
> sjp.lm: no visible global function definition for 'coef'
> sjp.lm: no visible global function definition for 'coefficients'
> sjp.lm: no visible global function definition for 'confint'
> sjp.lm.eff: no visible global function definition for 'model.matrix'
>
> Do I have to import all these namespaces now? I'm using RStudio with
> roxygen, so I would add an @importFrom stats <function_x_y> where necessary
> - but is this the new requirement as of R >= 3.3?

Yes. And it should have been a requirement before, I believe.

Best,
Uwe Ligges


>
> Best wishes
> Daniel
>
>
>
>
> --
>
> _____________________________________________________________________
>
> Universit?tsklinikum Hamburg-Eppendorf; K?rperschaft des ?ffentlichen Rechts; Gerichtsstand: Hamburg | www.uke.de
> Vorstandsmitglieder: Prof. Dr. Burkhard G?ke (Vorsitzender), Prof. Dr. Dr. Uwe Koch-Gromus, Joachim Pr?l?, Rainer Schoppik
> _____________________________________________________________________
>
> SAVE PAPER - THINK BEFORE PRINTING
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From nfultz at gmail.com  Mon Jun 29 18:05:40 2015
From: nfultz at gmail.com (Neal Fultz)
Date: Mon, 29 Jun 2015 09:05:40 -0700
Subject: [R-pkg-devel] appropriate directory for data downloads in
 examples, demos and vignettes
In-Reply-To: <CAPjNR=Sn1Zjp9VnF-4UnRGB1ous03Mb70RA7nTmA8KH46+pcPg@mail.gmail.com>
References: <CAPjNR=Sn1Zjp9VnF-4UnRGB1ous03Mb70RA7nTmA8KH46+pcPg@mail.gmail.com>
Message-ID: <CAL9B2vduPE3VNKZDzSoPWY2rPmP1Qt5qJg-cSzBijOJKSkFzYQ@mail.gmail.com>

I would use tempfile() instead of /tmp/. That should create a
file/directory that will get cleaned up when the R session ends, instead of
when the machine reboots. AFAIK it also works on windows.

On Mon, Jun 29, 2015 at 8:25 AM, Jonathan Callahan <
jonathan at mazamascience.com> wrote:

> Hi,
>
> The MazamaSpatialUtils
> <http://cran.r-project.org/package=MazamaSpatialUtils> package has a
> required "package state" variable which users set to specify where they
> want to store large amounts of GIS data that is being downloaded and
> converted by the package. The implementation of this follows Hadley's
> advice here:
>
> http://adv-r.had.co.nz/Environments.html#explicit-envs
>
> The functionality is implemented with package environment and getter and
> setter functions:
>
> spatialEnv <- new.env(parent = emptyenv())
> spatialEnv$dataDir <- NULL
>
>
> getSpatialDataDir <- function() {
>   if (is.null(spatialEnv$dataDir)) {
>     stop('No data directory found. Please set a data directory with
> setSpatialDataDir("YOUR_DATA_DIR").',call.=FALSE)
>   } else {
>     return(spatialEnv$dataDir)
>   }
> }
>
>
> setSpatialDataDir <- function(dataDir) {
>   old <- spatialEnv$dataDir
>   dataDir <- path.expand(dataDir)
>   tryCatch({
>     if (!file.exists(dataDir)) dir.create(dataDir)
>     spatialEnv$dataDir <- dataDir
>   }, warning = function(warn) {
>     warning("Invalid path name.")
>   }, error   = function(err) {
>     stop(paste0("Error in setSpatialDataDir(",dataDir,")."))
>   })
>   return(invisible(old))
> }
>
>
> My question is:
>
> *What is an appropriate directory to specify for vignettes (or demos or
> examples) that need to go through CRAN testing?*
>
> The R code in vignettes need to specify a directory that is writable during
> the package build process but that will also be available to users.
>
> Should we create a /tmp/<hash> directory? Would that be available on all
> systems?
>
> Alternatively,
>
> *What is an alternative to vignettes and demos for tutorial scripts that
> should not be tested upon submission to CRAN?*
>
>
> Thanks for any suggestions.
>
> Jon
>
>
> --
> Jonathan Callahan, PhD
> Mazama Science
> 206-708-5028
> mazamascience.com
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From jstachel at sfwmd.gov  Mon Jun 29 18:23:32 2015
From: jstachel at sfwmd.gov (Stachelek, Joseph)
Date: Mon, 29 Jun 2015 16:23:32 +0000
Subject: [R-pkg-devel] appropriate directory for data downloads in
 examples, demos and vignettes
In-Reply-To: <CAL9B2vduPE3VNKZDzSoPWY2rPmP1Qt5qJg-cSzBijOJKSkFzYQ@mail.gmail.com>
References: <CAPjNR=Sn1Zjp9VnF-4UnRGB1ous03Mb70RA7nTmA8KH46+pcPg@mail.gmail.com>
	<CAL9B2vduPE3VNKZDzSoPWY2rPmP1Qt5qJg-cSzBijOJKSkFzYQ@mail.gmail.com>
Message-ID: <D51374C4B889BC47B3C5286047C86DA196F87E2A@whqembx03p.ad.sfwmd.gov>

Following the answer posted by 'James' at: http://stackoverflow.com/questions/12598242/global-variables-in-packages-in-r

I have the user set the data directory by editing a file (yourdatadirpath) which is then read into options() on package load.

.onLoad<-function(libname=find.package("datapkg"),pkgname="datapkg"){
options("yourdatadir"=matrix(utils::read.delim(system.file("yourdatadirpath",package="datapkg"),header=FALSE,stringsAsFactors=FALSE))[[1]][1])
}


-----Original Message-----
From: R-package-devel [mailto:r-package-devel-bounces at r-project.org] On Behalf Of Neal Fultz
Sent: Monday, June 29, 2015 12:06 PM
To: Jonathan Callahan
Cc: r-package-devel at r-project.org
Subject: Re: [R-pkg-devel] appropriate directory for data downloads in examples, demos and vignettes

I would use tempfile() instead of /tmp/. That should create a
file/directory that will get cleaned up when the R session ends, instead of
when the machine reboots. AFAIK it also works on windows.

On Mon, Jun 29, 2015 at 8:25 AM, Jonathan Callahan <
jonathan at mazamascience.com> wrote:

> Hi,
>
> The MazamaSpatialUtils
> <http://cran.r-project.org/package=MazamaSpatialUtils> package has a
> required "package state" variable which users set to specify where they
> want to store large amounts of GIS data that is being downloaded and
> converted by the package. The implementation of this follows Hadley's
> advice here:
>
> http://adv-r.had.co.nz/Environments.html#explicit-envs
>
> The functionality is implemented with package environment and getter and
> setter functions:
>
> spatialEnv <- new.env(parent = emptyenv())
> spatialEnv$dataDir <- NULL
>
>
> getSpatialDataDir <- function() {
>   if (is.null(spatialEnv$dataDir)) {
>     stop('No data directory found. Please set a data directory with
> setSpatialDataDir("YOUR_DATA_DIR").',call.=FALSE)
>   } else {
>     return(spatialEnv$dataDir)
>   }
> }
>
>
> setSpatialDataDir <- function(dataDir) {
>   old <- spatialEnv$dataDir
>   dataDir <- path.expand(dataDir)
>   tryCatch({
>     if (!file.exists(dataDir)) dir.create(dataDir)
>     spatialEnv$dataDir <- dataDir
>   }, warning = function(warn) {
>     warning("Invalid path name.")
>   }, error   = function(err) {
>     stop(paste0("Error in setSpatialDataDir(",dataDir,")."))
>   })
>   return(invisible(old))
> }
>
>
> My question is:
>
> *What is an appropriate directory to specify for vignettes (or demos or
> examples) that need to go through CRAN testing?*
>
> The R code in vignettes need to specify a directory that is writable during
> the package build process but that will also be available to users.
>
> Should we create a /tmp/<hash> directory? Would that be available on all
> systems?
>
> Alternatively,
>
> *What is an alternative to vignettes and demos for tutorial scripts that
> should not be tested upon submission to CRAN?*
>
>
> Thanks for any suggestions.
>
> Jon
>
>
> --
> Jonathan Callahan, PhD
> Mazama Science
> 206-708-5028
> mazamascience.com
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

        [[alternative HTML version deleted]]

______________________________________________
R-package-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel


We value your opinion. Please take a few minutes to shar...{{dropped:5}}


From pgilbert902 at gmail.com  Mon Jun 29 18:22:53 2015
From: pgilbert902 at gmail.com (Paul Gilbert)
Date: Mon, 29 Jun 2015 12:22:53 -0400
Subject: [R-pkg-devel] appropriate directory for data downloads in
 examples, demos and vignettes
In-Reply-To: <CAPjNR=Sn1Zjp9VnF-4UnRGB1ous03Mb70RA7nTmA8KH46+pcPg@mail.gmail.com>
References: <CAPjNR=Sn1Zjp9VnF-4UnRGB1ous03Mb70RA7nTmA8KH46+pcPg@mail.gmail.com>
Message-ID: <559170DD.2050703@gmail.com>

Regarding alternative places for scripts, you can add a directory (eg 
inst/testLocalScripts) and then with a recently added R CMD feature you 
can do

  R CMD check --test-dir=inst/testLocalScripts your-package.tar.gz

This will not (automatically) be checked on CRAN. Beware that you also 
need to run R CMD check without this option to run your regular tests.

Paul


On 06/29/2015 11:25 AM, Jonathan Callahan wrote:
> Hi,
>
> The MazamaSpatialUtils
> <http://cran.r-project.org/package=MazamaSpatialUtils> package has a
> required "package state" variable which users set to specify where they
> want to store large amounts of GIS data that is being downloaded and
> converted by the package. The implementation of this follows Hadley's
> advice here:
>
> http://adv-r.had.co.nz/Environments.html#explicit-envs
>
> The functionality is implemented with package environment and getter and
> setter functions:
>
> spatialEnv <- new.env(parent = emptyenv())
> spatialEnv$dataDir <- NULL
>
>
> getSpatialDataDir <- function() {
>    if (is.null(spatialEnv$dataDir)) {
>      stop('No data directory found. Please set a data directory with
> setSpatialDataDir("YOUR_DATA_DIR").',call.=FALSE)
>    } else {
>      return(spatialEnv$dataDir)
>    }
> }
>
>
> setSpatialDataDir <- function(dataDir) {
>    old <- spatialEnv$dataDir
>    dataDir <- path.expand(dataDir)
>    tryCatch({
>      if (!file.exists(dataDir)) dir.create(dataDir)
>      spatialEnv$dataDir <- dataDir
>    }, warning = function(warn) {
>      warning("Invalid path name.")
>    }, error   = function(err) {
>      stop(paste0("Error in setSpatialDataDir(",dataDir,")."))
>    })
>    return(invisible(old))
> }
>
>
> My question is:
>
> *What is an appropriate directory to specify for vignettes (or demos or
> examples) that need to go through CRAN testing?*
>
> The R code in vignettes need to specify a directory that is writable during
> the package build process but that will also be available to users.
>
> Should we create a /tmp/<hash> directory? Would that be available on all
> systems?
>
> Alternatively,
>
> *What is an alternative to vignettes and demos for tutorial scripts that
> should not be tested upon submission to CRAN?*
>
>
> Thanks for any suggestions.
>
> Jon
>
>


From kevinushey at gmail.com  Mon Jun 29 19:09:33 2015
From: kevinushey at gmail.com (Kevin Ushey)
Date: Mon, 29 Jun 2015 10:09:33 -0700
Subject: [R-pkg-devel] no visible global function definition
In-Reply-To: <55916866.7060604@statistik.tu-dortmund.de>
References: <002601d0b24b$6e47b970$4ad72c50$@uke.de>
	<55916866.7060604@statistik.tu-dortmund.de>
Message-ID: <CAJXgQP3Ap9niUjotUQCNcZ-7Xrb2JNJO8+Bs5Wxp7L1wGUNFpQ@mail.gmail.com>

Hi Uwe,

It seems like this is quite a major change; I imagine it will affect many
packages (since lots of packages implicitly assume other 'base' packages,
like 'utils', will always be available in an R session). IIUC, in the
latest versions of R-devel, only the 'base' package can be assumed
available; everything else must be explicitly imported.

https://github.com/wch/r-source/commit/dba5a49dcae7e9bcb8528cf78fd9d51f092652b2

Is there any chance that such changes could be made in announcements on
R-pkg-devel? Or, as an aside, would it be permissible for non-R-core
members to make such announcements on this list?

Thanks,
Kevin

On Mon, Jun 29, 2015 at 8:46 AM, Uwe Ligges <ligges at statistik.tu-dortmund.de
> wrote:

>
>
> On 29.06.2015 11:10, Daniel L?decke wrote:
>
>> Hello,
>>
>> I'm doing my package check for CRAN, in order to see whether submitting
>> the
>> package-update passes all checks.
>> I'm doing the tests under Windows 7, using R-Version "R Under development
>> (unstable) (2015-06-28 r68602)".
>>
>> Now I got a quite long list of NOTEs, which are probably no problem,
>> however, I would like to fix these issues, if possible.
>>
>> It seems that all base and/or stats function now produce a note concering
>> the visible global function definition. Here's a short example of my
>> output
>> from my package check:
>>
>> sjp.grpfrq: no visible global function definition for 'sd'
>> sjp.grpfrq: no visible global function definition for 'plot'
>> sjp.int: no visible global function definition for 'sd'
>> sjp.int: no visible global function definition for 'quantile'
>> sjp.int: no visible global function definition for 'plogis'
>> sjp.likert: no visible global function definition for 'xtabs'
>> sjp.likert: no visible binding for global variable 'offset'
>> sjp.likert: no visible global function definition for 'plot'
>> sjp.lm: no visible global function definition for 'coef'
>> sjp.lm: no visible global function definition for 'coefficients'
>> sjp.lm: no visible global function definition for 'confint'
>> sjp.lm.eff: no visible global function definition for 'model.matrix'
>>
>> Do I have to import all these namespaces now? I'm using RStudio with
>> roxygen, so I would add an @importFrom stats <function_x_y> where
>> necessary
>> - but is this the new requirement as of R >= 3.3?
>>
>
> Yes. And it should have been a requirement before, I believe.
>
> Best,
> Uwe Ligges
>
>
>
>
>> Best wishes
>> Daniel
>>
>>
>>
>>
>> --
>>
>> _____________________________________________________________________
>>
>> Universit?tsklinikum Hamburg-Eppendorf; K?rperschaft des ?ffentlichen
>> Rechts; Gerichtsstand: Hamburg | www.uke.de
>> Vorstandsmitglieder: Prof. Dr. Burkhard G?ke (Vorsitzender), Prof. Dr.
>> Dr. Uwe Koch-Gromus, Joachim Pr?l?, Rainer Schoppik
>> _____________________________________________________________________
>>
>> SAVE PAPER - THINK BEFORE PRINTING
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From nfultz at gmail.com  Mon Jun 29 19:23:38 2015
From: nfultz at gmail.com (Neal Fultz)
Date: Mon, 29 Jun 2015 10:23:38 -0700
Subject: [R-pkg-devel] no visible global function definition
In-Reply-To: <CAJXgQP3Ap9niUjotUQCNcZ-7Xrb2JNJO8+Bs5Wxp7L1wGUNFpQ@mail.gmail.com>
References: <002601d0b24b$6e47b970$4ad72c50$@uke.de>
	<55916866.7060604@statistik.tu-dortmund.de>
	<CAJXgQP3Ap9niUjotUQCNcZ-7Xrb2JNJO8+Bs5Wxp7L1wGUNFpQ@mail.gmail.com>
Message-ID: <CAL9B2ve1Pp8Zw9cB2kJFPJ96f862Qvh3s3tWmN3AWwB41t4PBg@mail.gmail.com>

There's https://twitter.com/cranpolicywatch

I wouldn't mind if that got forwarded to r-package-devel, as I'm not on
twitter myself.



On Mon, Jun 29, 2015 at 10:09 AM, Kevin Ushey <kevinushey at gmail.com> wrote:

> Hi Uwe,
>
> It seems like this is quite a major change; I imagine it will affect many
> packages (since lots of packages implicitly assume other 'base' packages,
> like 'utils', will always be available in an R session). IIUC, in the
> latest versions of R-devel, only the 'base' package can be assumed
> available; everything else must be explicitly imported.
>
>
> https://github.com/wch/r-source/commit/dba5a49dcae7e9bcb8528cf78fd9d51f092652b2
>
> Is there any chance that such changes could be made in announcements on
> R-pkg-devel? Or, as an aside, would it be permissible for non-R-core
> members to make such announcements on this list?
>
> Thanks,
> Kevin
>
> On Mon, Jun 29, 2015 at 8:46 AM, Uwe Ligges <
> ligges at statistik.tu-dortmund.de
> > wrote:
>
> >
> >
> > On 29.06.2015 11:10, Daniel L?decke wrote:
> >
> >> Hello,
> >>
> >> I'm doing my package check for CRAN, in order to see whether submitting
> >> the
> >> package-update passes all checks.
> >> I'm doing the tests under Windows 7, using R-Version "R Under
> development
> >> (unstable) (2015-06-28 r68602)".
> >>
> >> Now I got a quite long list of NOTEs, which are probably no problem,
> >> however, I would like to fix these issues, if possible.
> >>
> >> It seems that all base and/or stats function now produce a note
> concering
> >> the visible global function definition. Here's a short example of my
> >> output
> >> from my package check:
> >>
> >> sjp.grpfrq: no visible global function definition for 'sd'
> >> sjp.grpfrq: no visible global function definition for 'plot'
> >> sjp.int: no visible global function definition for 'sd'
> >> sjp.int: no visible global function definition for 'quantile'
> >> sjp.int: no visible global function definition for 'plogis'
> >> sjp.likert: no visible global function definition for 'xtabs'
> >> sjp.likert: no visible binding for global variable 'offset'
> >> sjp.likert: no visible global function definition for 'plot'
> >> sjp.lm: no visible global function definition for 'coef'
> >> sjp.lm: no visible global function definition for 'coefficients'
> >> sjp.lm: no visible global function definition for 'confint'
> >> sjp.lm.eff: no visible global function definition for 'model.matrix'
> >>
> >> Do I have to import all these namespaces now? I'm using RStudio with
> >> roxygen, so I would add an @importFrom stats <function_x_y> where
> >> necessary
> >> - but is this the new requirement as of R >= 3.3?
> >>
> >
> > Yes. And it should have been a requirement before, I believe.
> >
> > Best,
> > Uwe Ligges
> >
> >
> >
> >
> >> Best wishes
> >> Daniel
> >>
> >>
> >>
> >>
> >> --
> >>
> >> _____________________________________________________________________
> >>
> >> Universit?tsklinikum Hamburg-Eppendorf; K?rperschaft des ?ffentlichen
> >> Rechts; Gerichtsstand: Hamburg | www.uke.de
> >> Vorstandsmitglieder: Prof. Dr. Burkhard G?ke (Vorsitzender), Prof. Dr.
> >> Dr. Uwe Koch-Gromus, Joachim Pr?l?, Rainer Schoppik
> >> _____________________________________________________________________
> >>
> >> SAVE PAPER - THINK BEFORE PRINTING
> >>
> >> ______________________________________________
> >> R-package-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>
> >>
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From kamvarz at science.oregonstate.edu  Mon Jun 29 19:25:29 2015
From: kamvarz at science.oregonstate.edu (Zhian Kamvar)
Date: Mon, 29 Jun 2015 10:25:29 -0700
Subject: [R-pkg-devel] no visible global function definition
In-Reply-To: <CAJXgQP3Ap9niUjotUQCNcZ-7Xrb2JNJO8+Bs5Wxp7L1wGUNFpQ@mail.gmail.com>
References: <002601d0b24b$6e47b970$4ad72c50$@uke.de>
	<55916866.7060604@statistik.tu-dortmund.de>
	<CAJXgQP3Ap9niUjotUQCNcZ-7Xrb2JNJO8+Bs5Wxp7L1wGUNFpQ@mail.gmail.com>
Message-ID: <004CF03A-95D6-499D-B63C-D39BA7DAC5C0@science.oregonstate.edu>

Does this also mean that we now need to include these packages (stats, graphics, etc) in the Imports field of the DESCRIPTION?

Thanks,
Zhian
> On Jun 29, 2015, at 10:09 , Kevin Ushey <kevinushey at gmail.com> wrote:
> 
> Hi Uwe,
> 
> It seems like this is quite a major change; I imagine it will affect many
> packages (since lots of packages implicitly assume other 'base' packages,
> like 'utils', will always be available in an R session). IIUC, in the
> latest versions of R-devel, only the 'base' package can be assumed
> available; everything else must be explicitly imported.
> 
> https://github.com/wch/r-source/commit/dba5a49dcae7e9bcb8528cf78fd9d51f092652b2
> 
> Is there any chance that such changes could be made in announcements on
> R-pkg-devel? Or, as an aside, would it be permissible for non-R-core
> members to make such announcements on this list?
> 
> Thanks,
> Kevin
> 
> On Mon, Jun 29, 2015 at 8:46 AM, Uwe Ligges <ligges at statistik.tu-dortmund.de
>> wrote:
> 
>> 
>> 
>> On 29.06.2015 11:10, Daniel L?decke wrote:
>> 
>>> Hello,
>>> 
>>> I'm doing my package check for CRAN, in order to see whether submitting
>>> the
>>> package-update passes all checks.
>>> I'm doing the tests under Windows 7, using R-Version "R Under development
>>> (unstable) (2015-06-28 r68602)".
>>> 
>>> Now I got a quite long list of NOTEs, which are probably no problem,
>>> however, I would like to fix these issues, if possible.
>>> 
>>> It seems that all base and/or stats function now produce a note concering
>>> the visible global function definition. Here's a short example of my
>>> output
>>> from my package check:
>>> 
>>> sjp.grpfrq: no visible global function definition for 'sd'
>>> sjp.grpfrq: no visible global function definition for 'plot'
>>> sjp.int: no visible global function definition for 'sd'
>>> sjp.int: no visible global function definition for 'quantile'
>>> sjp.int: no visible global function definition for 'plogis'
>>> sjp.likert: no visible global function definition for 'xtabs'
>>> sjp.likert: no visible binding for global variable 'offset'
>>> sjp.likert: no visible global function definition for 'plot'
>>> sjp.lm: no visible global function definition for 'coef'
>>> sjp.lm: no visible global function definition for 'coefficients'
>>> sjp.lm: no visible global function definition for 'confint'
>>> sjp.lm.eff: no visible global function definition for 'model.matrix'
>>> 
>>> Do I have to import all these namespaces now? I'm using RStudio with
>>> roxygen, so I would add an @importFrom stats <function_x_y> where
>>> necessary
>>> - but is this the new requirement as of R >= 3.3?
>>> 
>> 
>> Yes. And it should have been a requirement before, I believe.
>> 
>> Best,
>> Uwe Ligges
>> 
>> 
>> 
>> 
>>> Best wishes
>>> Daniel
>>> 
>>> 
>>> 
>>> 
>>> --
>>> 
>>> _____________________________________________________________________
>>> 
>>> Universit?tsklinikum Hamburg-Eppendorf; K?rperschaft des ?ffentlichen
>>> Rechts; Gerichtsstand: Hamburg | www.uke.de
>>> Vorstandsmitglieder: Prof. Dr. Burkhard G?ke (Vorsitzender), Prof. Dr.
>>> Dr. Uwe Koch-Gromus, Joachim Pr?l?, Rainer Schoppik
>>> _____________________________________________________________________
>>> 
>>> SAVE PAPER - THINK BEFORE PRINTING
>>> 
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>> 
>>> 
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> 
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From murdoch.duncan at gmail.com  Mon Jun 29 19:40:50 2015
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Mon, 29 Jun 2015 19:40:50 +0200
Subject: [R-pkg-devel] no visible global function definition
In-Reply-To: <CAJXgQP3Ap9niUjotUQCNcZ-7Xrb2JNJO8+Bs5Wxp7L1wGUNFpQ@mail.gmail.com>
References: <002601d0b24b$6e47b970$4ad72c50$@uke.de>	<55916866.7060604@statistik.tu-dortmund.de>
	<CAJXgQP3Ap9niUjotUQCNcZ-7Xrb2JNJO8+Bs5Wxp7L1wGUNFpQ@mail.gmail.com>
Message-ID: <55918322.80407@gmail.com>

On 29/06/2015 7:09 PM, Kevin Ushey wrote:
> Hi Uwe,
> 
> It seems like this is quite a major change; I imagine it will affect many
> packages (since lots of packages implicitly assume other 'base' packages,
> like 'utils', will always be available in an R session). IIUC, in the
> latest versions of R-devel, only the 'base' package can be assumed
> available; everything else must be explicitly imported.
> 
> https://github.com/wch/r-source/commit/dba5a49dcae7e9bcb8528cf78fd9d51f092652b2
> 
> Is there any chance that such changes could be made in announcements on
> R-pkg-devel? Or, as an aside, would it be permissible for non-R-core
> members to make such announcements on this list?

It was announced in the NEWS which is online here:

http://developer.r-project.org/blosxom.cgi/R-devel/NEWS

and available as an RSS feed.  (If you prefer Twitter, feel free to
mirror the RSS feed there, if that's possible.  I don't use Twitter, so
I won't do it.)  It seems to have become known here essentially
immediately, so I'm not sure how an announcement would help.

For the reasoning:  there's been a general trend to making sure packages
work even when other packages don't use library() or require() to attach
them.  This is a logical step in that direction.  If your function foo()
uses the graphics plot() function but doesn't explicitly import it, then
your function will fail if a user tries to run it while graphics isn't
attached.  I suspect dispatch may also be faster if it is imported than
if R has to search through everything on the search list.

Duncan Murdoch

> 
> Thanks,
> Kevin
> 
> On Mon, Jun 29, 2015 at 8:46 AM, Uwe Ligges <ligges at statistik.tu-dortmund.de
>> wrote:
> 
>>
>>
>> On 29.06.2015 11:10, Daniel L?decke wrote:
>>
>>> Hello,
>>>
>>> I'm doing my package check for CRAN, in order to see whether submitting
>>> the
>>> package-update passes all checks.
>>> I'm doing the tests under Windows 7, using R-Version "R Under development
>>> (unstable) (2015-06-28 r68602)".
>>>
>>> Now I got a quite long list of NOTEs, which are probably no problem,
>>> however, I would like to fix these issues, if possible.
>>>
>>> It seems that all base and/or stats function now produce a note concering
>>> the visible global function definition. Here's a short example of my
>>> output
>>> from my package check:
>>>
>>> sjp.grpfrq: no visible global function definition for 'sd'
>>> sjp.grpfrq: no visible global function definition for 'plot'
>>> sjp.int: no visible global function definition for 'sd'
>>> sjp.int: no visible global function definition for 'quantile'
>>> sjp.int: no visible global function definition for 'plogis'
>>> sjp.likert: no visible global function definition for 'xtabs'
>>> sjp.likert: no visible binding for global variable 'offset'
>>> sjp.likert: no visible global function definition for 'plot'
>>> sjp.lm: no visible global function definition for 'coef'
>>> sjp.lm: no visible global function definition for 'coefficients'
>>> sjp.lm: no visible global function definition for 'confint'
>>> sjp.lm.eff: no visible global function definition for 'model.matrix'
>>>
>>> Do I have to import all these namespaces now? I'm using RStudio with
>>> roxygen, so I would add an @importFrom stats <function_x_y> where
>>> necessary
>>> - but is this the new requirement as of R >= 3.3?
>>>
>>
>> Yes. And it should have been a requirement before, I believe.
>>
>> Best,
>> Uwe Ligges
>>
>>
>>
>>
>>> Best wishes
>>> Daniel
>>>
>>>
>>>
>>>
>>> --
>>>
>>> _____________________________________________________________________
>>>
>>> Universit?tsklinikum Hamburg-Eppendorf; K?rperschaft des ?ffentlichen
>>> Rechts; Gerichtsstand: Hamburg | www.uke.de
>>> Vorstandsmitglieder: Prof. Dr. Burkhard G?ke (Vorsitzender), Prof. Dr.
>>> Dr. Uwe Koch-Gromus, Joachim Pr?l?, Rainer Schoppik
>>> _____________________________________________________________________
>>>
>>> SAVE PAPER - THINK BEFORE PRINTING
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From jonathan at mazamascience.com  Mon Jun 29 18:59:54 2015
From: jonathan at mazamascience.com (Jonathan Callahan)
Date: Mon, 29 Jun 2015 09:59:54 -0700
Subject: [R-pkg-devel] no visible global function definition
In-Reply-To: <55916866.7060604@statistik.tu-dortmund.de>
References: <002601d0b24b$6e47b970$4ad72c50$@uke.de>
	<55916866.7060604@statistik.tu-dortmund.de>
Message-ID: <CAPjNR=QT7XrQL81MZ2DjsN+2vUvOcHhOuAG6gPotnsgx7faNnQ@mail.gmail.com>

Dan,

I find it useful to reference external functions as package::function()
throughout all of our R code. This eliminates the need to import namespaces
although you still need to to specify the package in the DESCRIPTION file
"Imports:" section.

Best,

Jon

On Mon, Jun 29, 2015 at 8:46 AM, Uwe Ligges <ligges at statistik.tu-dortmund.de
> wrote:

>
>
> On 29.06.2015 11:10, Daniel L?decke wrote:
>
>> Hello,
>>
>> I'm doing my package check for CRAN, in order to see whether submitting
>> the
>> package-update passes all checks.
>> I'm doing the tests under Windows 7, using R-Version "R Under development
>> (unstable) (2015-06-28 r68602)".
>>
>> Now I got a quite long list of NOTEs, which are probably no problem,
>> however, I would like to fix these issues, if possible.
>>
>> It seems that all base and/or stats function now produce a note concering
>> the visible global function definition. Here's a short example of my
>> output
>> from my package check:
>>
>> sjp.grpfrq: no visible global function definition for 'sd'
>> sjp.grpfrq: no visible global function definition for 'plot'
>> sjp.int: no visible global function definition for 'sd'
>> sjp.int: no visible global function definition for 'quantile'
>> sjp.int: no visible global function definition for 'plogis'
>> sjp.likert: no visible global function definition for 'xtabs'
>> sjp.likert: no visible binding for global variable 'offset'
>> sjp.likert: no visible global function definition for 'plot'
>> sjp.lm: no visible global function definition for 'coef'
>> sjp.lm: no visible global function definition for 'coefficients'
>> sjp.lm: no visible global function definition for 'confint'
>> sjp.lm.eff: no visible global function definition for 'model.matrix'
>>
>> Do I have to import all these namespaces now? I'm using RStudio with
>> roxygen, so I would add an @importFrom stats <function_x_y> where
>> necessary
>> - but is this the new requirement as of R >= 3.3?
>>
>
> Yes. And it should have been a requirement before, I believe.
>
> Best,
> Uwe Ligges
>
>
>
>
>> Best wishes
>> Daniel
>>
>>
>>
>>
>> --
>>
>> _____________________________________________________________________
>>
>> Universit?tsklinikum Hamburg-Eppendorf; K?rperschaft des ?ffentlichen
>> Rechts; Gerichtsstand: Hamburg | www.uke.de
>> Vorstandsmitglieder: Prof. Dr. Burkhard G?ke (Vorsitzender), Prof. Dr.
>> Dr. Uwe Koch-Gromus, Joachim Pr?l?, Rainer Schoppik
>> _____________________________________________________________________
>>
>> SAVE PAPER - THINK BEFORE PRINTING
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>



-- 
Jonathan Callahan, PhD
Mazama Science
206-708-5028
mazamascience.com

	[[alternative HTML version deleted]]


From h.wickham at gmail.com  Mon Jun 29 22:32:36 2015
From: h.wickham at gmail.com (Hadley Wickham)
Date: Mon, 29 Jun 2015 22:32:36 +0200
Subject: [R-pkg-devel] no visible global function definition
In-Reply-To: <55918322.80407@gmail.com>
References: <002601d0b24b$6e47b970$4ad72c50$@uke.de>
	<55916866.7060604@statistik.tu-dortmund.de>
	<CAJXgQP3Ap9niUjotUQCNcZ-7Xrb2JNJO8+Bs5Wxp7L1wGUNFpQ@mail.gmail.com>
	<55918322.80407@gmail.com>
Message-ID: <CABdHhvGV4hfF2XAEXNK+mAeoiC=q2cpXrRfXLCAzOZ4zuDByLw@mail.gmail.com>

> and available as an RSS feed.  (If you prefer Twitter, feel free to
> mirror the RSS feed there, if that's possible.  I don't use Twitter, so
> I won't do it.)  It seems to have become known here essentially
> immediately, so I'm not sure how an announcement would help.
>
> For the reasoning:  there's been a general trend to making sure packages
> work even when other packages don't use library() or require() to attach
> them.  This is a logical step in that direction.  If your function foo()
> uses the graphics plot() function but doesn't explicitly import it, then
> your function will fail if a user tries to run it while graphics isn't
> attached.  I suspect dispatch may also be faster if it is imported than
> if R has to search through everything on the search list.

Or it will fail in unexpected ways if the user has defined their own
plot method in the global environment.  This new check is an important
one to make sure you code works as expected, regardless of what else
is on the search path.

Hadley

-- 
http://had.co.nz/


From jonathan at mazamascience.com  Mon Jun 29 22:27:03 2015
From: jonathan at mazamascience.com (Jonathan Callahan)
Date: Mon, 29 Jun 2015 13:27:03 -0700
Subject: [R-pkg-devel] appropriate directory for data downloads in
 examples, demos and vignettes
In-Reply-To: <CAFDcVCQ80XGsnV15m92=mVX8W++R2isYQfPAcnLu7pGAobU-Ew@mail.gmail.com>
References: <CAPjNR=Sn1Zjp9VnF-4UnRGB1ous03Mb70RA7nTmA8KH46+pcPg@mail.gmail.com>
	<559170DD.2050703@gmail.com>
	<CAFDcVCQ80XGsnV15m92=mVX8W++R2isYQfPAcnLu7pGAobU-Ew@mail.gmail.com>
Message-ID: <CAPjNR=Th_UK0ZyMc=4BDACZbuNU=ktzCbW6qz8LW4PYdzsNnWg@mail.gmail.com>

Henrik,

Thanks for the detailed response! I'll have to look at the R.cache package
and try out your suggestions.

Jon

On Mon, Jun 29, 2015 at 12:48 PM, Henrik Bengtsson <
henrik.bengtsson at ucsf.edu> wrote:

> FYI,
>
> my R.cache package keeps cache files under a specific cache directory.
> To meet the CRAN Policies
> [http://cran.r-project.org/web/packages/policies.html] that:
>
> "Packages should not write in the users? home filespace, nor anywhere
> else on the file system apart from the R session?s temporary directory
> (or during installation in the location pointed to by TMPDIR: and such
> usage should be cleaned up). Installing into the system?s R
> installation (e.g., scripts to its bin directory) is not allowed.
>
> Limited exceptions may be allowed in interactive sessions if the
> package obtains confirmation from the user."
>
> The R.cache root directory is setup as follows:
>
> 1. It can be specified via environment variable R_CACHE_PATH.  If that
> is not given, it defaults to ~/.Rcache/, i.e. effectively: rootpath <-
> Sys.getenv("R_CACHE_PATH", default="~/.Rcache").
>
> 2. Next, if and only if this directory exists, then no "questions
> asked" and this directory will be used as is.
>
> 3. If it does not exist and R runs in an interactive session, then the
> user is prompted whether s/he wish to create the directory given by
> the 'rootpath' rule above, e.g.
>
> > library(R.cache)
> The R.cache package needs to create a directory that will hold cache
> files. It is convenient to use one in the user's home directory,
> because it remains also after restarting R. Do you wish to create the
> '~/.Rcache/' directory? If not, a temporary directory
> (C:\Users\hb\AppData\Local\Temp\Rtmp0udmsF/.Rcache) that is specific
> to this R session will be used. [Y/n]:
>
> If user accepts, then the directory is created and we're back to Step
> 2 above (which will be the case for all future R sessions).
>
> 4. If the user don't want to create this directory, or R runs in a
> non-interactive session (e.g. R CMD check), then a temporary cache
> directory is used, which is rootpath <- file.path(tempdir(),
> ".Rcache").  This directory is only guaranteed to exist for the
> current session.
>
> Comment on ~/.Rcache/: This default was chosen because it can be
> created on all platforms and for all users.  I don't know of any other
> path (except one under tempdir()) for which this is true.  The
> downside is that it adds to the user's quota, will most likely be
> backed up by default etc. However, it is very easy to use file links
> to point it elsewhere, e.g. ln -s /vartmp/$USER/.Rcache ~/.Rcache/.
>
>
> If your GIS data is supposed to live beyond a single R session, then
> you could use a similar approach for your MazamaSpatialUtils package.
> You could emulate the above completely, e.g. MAZAMA_SPATIAL_PATH and
> ~/.mazama_spatial/.  Alternatively, you could leverage the R.cache
> package and simply put all your data in a subdirectory under the
> R.cache root path, e.g. getCachePath(dirs="MazamaSpatialUtils").  For
> most users this will become ~/.Rcache/MazamaSpatialUtils/.  With this,
> all required interactions with the user is taken care of by R.cache
> (as above) and it will also fallback to using a temporary directory
> when run under 'R CMD check'.k
>
>
> Either way, you definitely want to use tempdir() for a
> session-specific temporary directory, e.g.
>
> > tempdir()
> [1] "C:\\Users\\hb\\AppData\\Local\\Temp\\Rtmp0udmsF"
>
> It works on all platforms and you don't have to create your on "hash"
> subdirectory.
>
>
> /Henrik
> (author of R.cache)
>
> On Mon, Jun 29, 2015 at 9:22 AM, Paul Gilbert <pgilbert902 at gmail.com>
> wrote:
> > Regarding alternative places for scripts, you can add a directory (eg
> > inst/testLocalScripts) and then with a recently added R CMD feature you
> can
> > do
> >
> >  R CMD check --test-dir=inst/testLocalScripts your-package.tar.gz
> >
> > This will not (automatically) be checked on CRAN. Beware that you also
> need
> > to run R CMD check without this option to run your regular tests.
> >
> > Paul
> >
> >
> >
> > On 06/29/2015 11:25 AM, Jonathan Callahan wrote:
> >>
> >> Hi,
> >>
> >> The MazamaSpatialUtils
> >> <http://cran.r-project.org/package=MazamaSpatialUtils> package has a
> >> required "package state" variable which users set to specify where they
> >> want to store large amounts of GIS data that is being downloaded and
> >> converted by the package. The implementation of this follows Hadley's
> >> advice here:
> >>
> >> http://adv-r.had.co.nz/Environments.html#explicit-envs
> >>
> >> The functionality is implemented with package environment and getter and
> >> setter functions:
> >>
> >> spatialEnv <- new.env(parent = emptyenv())
> >> spatialEnv$dataDir <- NULL
> >>
> >>
> >> getSpatialDataDir <- function() {
> >>    if (is.null(spatialEnv$dataDir)) {
> >>      stop('No data directory found. Please set a data directory with
> >> setSpatialDataDir("YOUR_DATA_DIR").',call.=FALSE)
> >>    } else {
> >>      return(spatialEnv$dataDir)
> >>    }
> >> }
> >>
> >>
> >> setSpatialDataDir <- function(dataDir) {
> >>    old <- spatialEnv$dataDir
> >>    dataDir <- path.expand(dataDir)
> >>    tryCatch({
> >>      if (!file.exists(dataDir)) dir.create(dataDir)
> >>      spatialEnv$dataDir <- dataDir
> >>    }, warning = function(warn) {
> >>      warning("Invalid path name.")
> >>    }, error   = function(err) {
> >>      stop(paste0("Error in setSpatialDataDir(",dataDir,")."))
> >>    })
> >>    return(invisible(old))
> >> }
> >>
> >>
> >> My question is:
> >>
> >> *What is an appropriate directory to specify for vignettes (or demos or
> >> examples) that need to go through CRAN testing?*
> >>
> >> The R code in vignettes need to specify a directory that is writable
> >> during
> >> the package build process but that will also be available to users.
> >>
> >> Should we create a /tmp/<hash> directory? Would that be available on all
> >> systems?
> >>
> >> Alternatively,
> >>
> >> *What is an alternative to vignettes and demos for tutorial scripts that
> >> should not be tested upon submission to CRAN?*
> >>
> >>
> >> Thanks for any suggestions.
> >>
> >> Jon
> >>
> >>
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>


-- 
Jonathan Callahan, PhD
Mazama Science
206-708-5028
mazamascience.com

	[[alternative HTML version deleted]]


From edd at debian.org  Mon Jun 29 22:36:51 2015
From: edd at debian.org (Dirk Eddelbuettel)
Date: Mon, 29 Jun 2015 15:36:51 -0500
Subject: [R-pkg-devel] no visible global function definition
In-Reply-To: <CAL9B2ve1Pp8Zw9cB2kJFPJ96f862Qvh3s3tWmN3AWwB41t4PBg@mail.gmail.com>
References: <002601d0b24b$6e47b970$4ad72c50$@uke.de>
	<55916866.7060604@statistik.tu-dortmund.de>
	<CAJXgQP3Ap9niUjotUQCNcZ-7Xrb2JNJO8+Bs5Wxp7L1wGUNFpQ@mail.gmail.com>
	<CAL9B2ve1Pp8Zw9cB2kJFPJ96f862Qvh3s3tWmN3AWwB41t4PBg@mail.gmail.com>
Message-ID: <21905.44131.763559.568374@max.nulle.part>


On 29 June 2015 at 10:23, Neal Fultz wrote:
| There's https://twitter.com/cranpolicywatch
| 
| I wouldn't mind if that got forwarded to r-package-devel, as I'm not on
| twitter myself.

CRAN Policy Watch is a simple-ish cronjob and you can also 'watch' (or
subscribe to) the underlying GitHub repo at

   https://github.com/eddelbuettel/crp

A much better way (for R NEWS) is the 'R Devel Changes' RSS feed Duncan set
up (and mentioned):

   http://developer.r-project.org/blosxom.cgi/R-devel

I read this via the Feedly RSS every day (as it posts only daily).  Together
with CRANberries (for packages), these three provide good coverage.

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From ligges at statistik.tu-dortmund.de  Tue Jun 30 01:24:57 2015
From: ligges at statistik.tu-dortmund.de (Uwe Ligges)
Date: Tue, 30 Jun 2015 01:24:57 +0200
Subject: [R-pkg-devel] no visible global function definition
In-Reply-To: <CAJXgQP3Ap9niUjotUQCNcZ-7Xrb2JNJO8+Bs5Wxp7L1wGUNFpQ@mail.gmail.com>
References: <002601d0b24b$6e47b970$4ad72c50$@uke.de>	<55916866.7060604@statistik.tu-dortmund.de>
	<CAJXgQP3Ap9niUjotUQCNcZ-7Xrb2JNJO8+Bs5Wxp7L1wGUNFpQ@mail.gmail.com>
Message-ID: <5591D3C9.1030606@statistik.tu-dortmund.de>

Most of this has been answered by others already. Note that package base 
itself is always imported into the Namespace but names from the other 
packages are not and really need to be if actually used.

Best,
Uwe Ligges

On 29.06.2015 19:09, Kevin Ushey wrote:
> Hi Uwe,
>
> It seems like this is quite a major change; I imagine it will affect
> many packages (since lots of packages implicitly assume other 'base'
> packages, like 'utils', will always be available in an R session). IIUC,
> in the latest versions of R-devel, only the 'base' package can be
> assumed available; everything else must be explicitly imported.
>
> https://github.com/wch/r-source/commit/dba5a49dcae7e9bcb8528cf78fd9d51f092652b2
>
> Is there any chance that such changes could be made in announcements on
> R-pkg-devel? Or, as an aside, would it be permissible for non-R-core
> members to make such announcements on this list?
>
> Thanks,
> Kevin
>
> On Mon, Jun 29, 2015 at 8:46 AM, Uwe Ligges
> <ligges at statistik.tu-dortmund.de
> <mailto:ligges at statistik.tu-dortmund.de>> wrote:
>
>
>
>     On 29.06.2015 11:10, Daniel L?decke wrote:
>
>         Hello,
>
>         I'm doing my package check for CRAN, in order to see whether
>         submitting the
>         package-update passes all checks.
>         I'm doing the tests under Windows 7, using R-Version "R Under
>         development
>         (unstable) (2015-06-28 r68602)".
>
>         Now I got a quite long list of NOTEs, which are probably no problem,
>         however, I would like to fix these issues, if possible.
>
>         It seems that all base and/or stats function now produce a note
>         concering
>         the visible global function definition. Here's a short example
>         of my output
>         from my package check:
>
>         sjp.grpfrq: no visible global function definition for 'sd'
>         sjp.grpfrq: no visible global function definition for 'plot'
>         sjp.int <http://sjp.int>: no visible global function definition
>         for 'sd'
>         sjp.int <http://sjp.int>: no visible global function definition
>         for 'quantile'
>         sjp.int <http://sjp.int>: no visible global function definition
>         for 'plogis'
>         sjp.likert: no visible global function definition for 'xtabs'
>         sjp.likert: no visible binding for global variable 'offset'
>         sjp.likert: no visible global function definition for 'plot'
>         sjp.lm: no visible global function definition for 'coef'
>         sjp.lm: no visible global function definition for 'coefficients'
>         sjp.lm: no visible global function definition for 'confint'
>         sjp.lm.eff: no visible global function definition for 'model.matrix'
>
>         Do I have to import all these namespaces now? I'm using RStudio with
>         roxygen, so I would add an @importFrom stats <function_x_y>
>         where necessary
>         - but is this the new requirement as of R >= 3.3?
>
>
>     Yes. And it should have been a requirement before, I believe.
>
>     Best,
>     Uwe Ligges
>
>
>
>
>         Best wishes
>         Daniel
>
>
>
>
>         --
>
>         _____________________________________________________________________
>
>         Universit?tsklinikum Hamburg-Eppendorf; K?rperschaft des
>         ?ffentlichen Rechts; Gerichtsstand: Hamburg | www.uke.de
>         <http://www.uke.de>
>         Vorstandsmitglieder: Prof. Dr. Burkhard G?ke (Vorsitzender),
>         Prof. Dr. Dr. Uwe Koch-Gromus, Joachim Pr?l?, Rainer Schoppik
>         _____________________________________________________________________
>
>         SAVE PAPER - THINK BEFORE PRINTING
>
>         ______________________________________________
>         R-package-devel at r-project.org
>         <mailto:R-package-devel at r-project.org> mailing list
>         https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>
>     ______________________________________________
>     R-package-devel at r-project.org <mailto:R-package-devel at r-project.org>
>     mailing list
>     https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>


From ligges at statistik.tu-dortmund.de  Tue Jun 30 01:26:01 2015
From: ligges at statistik.tu-dortmund.de (Uwe Ligges)
Date: Tue, 30 Jun 2015 01:26:01 +0200
Subject: [R-pkg-devel] no visible global function definition
In-Reply-To: <B614885B-36B1-43FE-BFC4-BD65C43F6710@gmail.com>
References: <002601d0b24b$6e47b970$4ad72c50$@uke.de>
	<55916866.7060604@statistik.tu-dortmund.de>
	<CAJXgQP3Ap9niUjotUQCNcZ-7Xrb2JNJO8+Bs5Wxp7L1wGUNFpQ@mail.gmail.com>
	<B614885B-36B1-43FE-BFC4-BD65C43F6710@gmail.com>
Message-ID: <5591D409.307@statistik.tu-dortmund.de>



On 29.06.2015 19:19, Zhian Kamvar wrote:
> Does this also mean that we now need to include these packages (stats, graphics, etc) in the Imports field of the DESCRIPTION?

Yes. And by proper import directives in the NAMESPACE file, ideally you 
should be selectively importing via importFrom() directives.

Best,
Uwe Ligges

>
> Thanks,
> Zhian
>> On Jun 29, 2015, at 10:09 , Kevin Ushey <kevinushey at gmail.com> wrote:
>>
>> Hi Uwe,
>>
>> It seems like this is quite a major change; I imagine it will affect many
>> packages (since lots of packages implicitly assume other 'base' packages,
>> like 'utils', will always be available in an R session). IIUC, in the
>> latest versions of R-devel, only the 'base' package can be assumed
>> available; everything else must be explicitly imported.
>>
>> https://github.com/wch/r-source/commit/dba5a49dcae7e9bcb8528cf78fd9d51f092652b2
>>
>> Is there any chance that such changes could be made in announcements on
>> R-pkg-devel? Or, as an aside, would it be permissible for non-R-core
>> members to make such announcements on this list?
>>
>> Thanks,
>> Kevin
>>
>> On Mon, Jun 29, 2015 at 8:46 AM, Uwe Ligges <ligges at statistik.tu-dortmund.de
>>> wrote:
>>
>>>
>>>
>>> On 29.06.2015 11:10, Daniel L?decke wrote:
>>>
>>>> Hello,
>>>>
>>>> I'm doing my package check for CRAN, in order to see whether submitting
>>>> the
>>>> package-update passes all checks.
>>>> I'm doing the tests under Windows 7, using R-Version "R Under development
>>>> (unstable) (2015-06-28 r68602)".
>>>>
>>>> Now I got a quite long list of NOTEs, which are probably no problem,
>>>> however, I would like to fix these issues, if possible.
>>>>
>>>> It seems that all base and/or stats function now produce a note concering
>>>> the visible global function definition. Here's a short example of my
>>>> output
>>>> from my package check:
>>>>
>>>> sjp.grpfrq: no visible global function definition for 'sd'
>>>> sjp.grpfrq: no visible global function definition for 'plot'
>>>> sjp.int: no visible global function definition for 'sd'
>>>> sjp.int: no visible global function definition for 'quantile'
>>>> sjp.int: no visible global function definition for 'plogis'
>>>> sjp.likert: no visible global function definition for 'xtabs'
>>>> sjp.likert: no visible binding for global variable 'offset'
>>>> sjp.likert: no visible global function definition for 'plot'
>>>> sjp.lm: no visible global function definition for 'coef'
>>>> sjp.lm: no visible global function definition for 'coefficients'
>>>> sjp.lm: no visible global function definition for 'confint'
>>>> sjp.lm.eff: no visible global function definition for 'model.matrix'
>>>>
>>>> Do I have to import all these namespaces now? I'm using RStudio with
>>>> roxygen, so I would add an @importFrom stats <function_x_y> where
>>>> necessary
>>>> - but is this the new requirement as of R >= 3.3?
>>>>
>>>
>>> Yes. And it should have been a requirement before, I believe.
>>>
>>> Best,
>>> Uwe Ligges
>>>
>>>
>>>
>>>
>>>> Best wishes
>>>> Daniel
>>>>
>>>>
>>>>
>>>>
>>>> --
>>>>
>>>> _____________________________________________________________________
>>>>
>>>> Universit?tsklinikum Hamburg-Eppendorf; K?rperschaft des ?ffentlichen
>>>> Rechts; Gerichtsstand: Hamburg | www.uke.de
>>>> Vorstandsmitglieder: Prof. Dr. Burkhard G?ke (Vorsitzender), Prof. Dr.
>>>> Dr. Uwe Koch-Gromus, Joachim Pr?l?, Rainer Schoppik
>>>> _____________________________________________________________________
>>>>
>>>> SAVE PAPER - THINK BEFORE PRINTING
>>>>
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>
>>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>>
>> 	[[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


