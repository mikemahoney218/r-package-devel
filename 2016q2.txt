From pedro.aphalo at helsinki.fi  Wed Apr  6 18:26:07 2016
From: pedro.aphalo at helsinki.fi (Pedro Aphalo)
Date: Wed, 6 Apr 2016 19:26:07 +0300
Subject: [R-pkg-devel] Best approach to cascading errors
Message-ID: <5705389F.8090400@helsinki.fi>

Hello,

At the moment three of my CRAN packages are reporting a NOTE. Although 
reported as a NOTE they are errors triggered by yesterday's update to 
'lubridate'.

In reality only one of the packages needs to be updated to resolve the 
problems in the three packages. I am getting ready to submit an updated 
version of package 'photobiology' to solve the problem. My doubt is it 
worthwhile to increase the version number of the two packages that 
depend on it, even they do not need any code changes only changing in 
the version number in the import of 'photobiology'? or is it abusing of 
CRAN's admins patience?

Best regards,

Pedro.

-- 
------------------------------------------------------------------------
Pedro J. Aphalo
University Lecturer, Principal Investigator
(Office 3805, Biocenter 3, Viikinkaari 1)

Department of Biosciences
Plant Biology
P.O. Box 65
00014 University of Helsinki
Finland

e-mail: pedro.aphalo at helsinki.fi <mailto:pedro.aphalo at helsinki.fi>
Tel. (mobile) +358 50 4150623
Tel. (office) +358 2941 57897

------------------------------------------------------------------------
*Web sites and blogs*
Web site (research group): http://blogs.helsinki.fi/senpep-blog/
Web site (own teaching): http://www.helsinki.fi/people/pedro.aphalo/
Blog (for plant science students): 
http://www.r4photobiology.info/blog4students/
Web site (using R in photobiology): http://www.r4photobiology.info/
------------------------------------------------------------------------
*Societies*
UV4Plants <http://www.uv4plants.org/> (communications officer), PSB 
<http://www.plantbehavior.org/> (member), ESP 
<http://www.photobiology.eu/> (member) SEB <http://www.sebiology.org/> 
(member), BES <http://www.britishecologicalsociety.org/> (member), SPPS 
<http://www.spps.fi/> (member), SMS 
<http://www.metsatieteellinenseura.fi/english> (member), TUG 
<http://tug.org/> (member), FOAS <http://www.foastat.org/> (member).
------------------------------------------------------------------------

	[[alternative HTML version deleted]]


From ligges at statistik.tu-dortmund.de  Wed Apr  6 21:08:31 2016
From: ligges at statistik.tu-dortmund.de (Uwe Ligges)
Date: Wed, 6 Apr 2016 21:08:31 +0200
Subject: [R-pkg-devel] Best approach to cascading errors
In-Reply-To: <5705389F.8090400@helsinki.fi>
References: <5705389F.8090400@helsinki.fi>
Message-ID: <57055EAF.6030307@statistik.tu-dortmund.de>



On 06.04.2016 18:26, Pedro Aphalo wrote:
> Hello,
>
> At the moment three of my CRAN packages are reporting a NOTE. Although
> reported as a NOTE they are errors triggered by yesterday's update to
> 'lubridate'.

Right, it was my fault not looking carefully enough at reverse check 
results - and of course the origibal package maintainer should havbe 
looked in advanced anyway.
I wrote him a message earlier this day asking to fix on his end or send 
you an email.


> In reality only one of the packages needs to be updated to resolve the
> problems in the three packages. I am getting ready to submit an updated
> version of package 'photobiology' to solve the problem. My doubt is it
> worthwhile to increase the version number of the two packages that
> depend on it, even they do not need any code changes only changing in
> the version number in the import of 'photobiology'? or is it abusing of
> CRAN's admins patience?

Please only fix the one that needs fixing, all other do not need to be 
changed then.

Best,
Uwe Ligges




> Best regards,
>
> Pedro.
>


From josh.m.ulrich at gmail.com  Mon Apr 11 17:10:46 2016
From: josh.m.ulrich at gmail.com (Joshua Ulrich)
Date: Mon, 11 Apr 2016 10:10:46 -0500
Subject: [R-pkg-devel] [R-SIG-Finance] [VC++ calling R] How to create a
 real-time interactive ticking time-series chart using dygraph via RInside?
In-Reply-To: <CY1PR0201MB1818D3AEBC4F2B87B0A9C328C3940@CY1PR0201MB1818.namprd02.prod.outlook.com>
References: <CY1PR0201MB1818D3AEBC4F2B87B0A9C328C3940@CY1PR0201MB1818.namprd02.prod.outlook.com>
Message-ID: <CAPPM_gSXWwYSY+s8iwaa5G3jxM=72aGwOy3p_+aA7tidZ8qP4g@mail.gmail.com>

Please choose *one* _relevant_ mailing list.  Spamming 5 (!!!!!)
mailing lists fragments the conversation and makes things difficult
for everyone involved.

On Mon, Apr 11, 2016 at 10:03 AM, Mike Deanza <mikedeanza at outlook.com> wrote:
> Hi all,
>
>
> I am trying to figure out how to do this in R and I need your help.
>
>
> My journey started from something like the following:
>
>
> http://stackoverflow.com/questions/11365857/real-time-auto-updating-incremental-plot-in-r/1#1
>
>
> n=1000
> df=data.frame(time=1:n,y=runif(n))
> window=100
> for(i in 1:(n?\window)) {
> flush.console()
> plot(df$time,df$y,type='l',xlim=c(i,i+window))
> Sys.sleep(.09)
> }
>
>
> Then I wanted to make it nicer looking so I went to dygraph.
>
>
> And then, I would like to be able to live send tick data from within Visual C++ so I started to investigate RInside.
>
>
> Following the example code here:
>
>
> http://dirk.eddelbuettel.com/papers/useR2009RcppRInside.pdf
>
>
> I can open an RInside object in VC++, and then send some data to it, and then execute some command in it, and then get data back.
>
>
> It is really great.
>
>
> However, is there a way to have the real-time updating ticking plots to be drawn on dygraph inside RInside?
>
>
> It turns out the dygraph package tends to draw onto a browser. That makes the real-time updating pretty slow.
>
>
> Is there a way to set the dygraph to plot to a GUI window in VC++? For example, a QT or MFC GUI window?
>
>
> My working environment is Win7 64bit ,with VS 2013 and VS2015, QT 5.3 32bit.
>
>
> Could anybody please shed some lights on me?
>
>
> Thanks a lot!
>
>
>
>
>
>
>
>         [[alternative HTML version deleted]]
>
>
> _______________________________________________
> R-SIG-Finance at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> -- Subscriber-posting only. If you want to post, subscribe first.
> -- Also note that this is not the r-help list where general R questions should go.



-- 
Joshua Ulrich  |  about.me/joshuaulrich
FOSS Trading  |  www.fosstrading.com
R/Finance 2016 | www.rinfinance.com


From julia.silge at gmail.com  Mon Apr 11 15:44:30 2016
From: julia.silge at gmail.com (Julia Silge)
Date: Mon, 11 Apr 2016 13:44:30 +0000
Subject: [R-pkg-devel] referencing Project Gutenberg license in my package
Message-ID: <CA+mbi1c36dNFWkOK10SdznuNxN_5yzco=gj6fCoxDrBkprmThQ@mail.gmail.com>

Hello! I am working on my package for the text of Jane Austen's novels:
https://github.com/juliasilge/janeaustenr
I'm getting it ready to submit to CRAN. I think I have it about ready, but
I believe I should add something about the Project Gutenberg license
somewhere (thanks to Bob Rudis for pointing this out to me; I so appreciate
it). I sourced the text files from Project Gutenberg, processed them a bit,
and packaged them together with documentation, a function to make a tidy
data frame, etc.

Here is Project Gutenberg's license:
http://www.gutenberg.org/wiki/Gutenberg:The_Project_Gutenberg_License

My inclination right now is to put the text of the short version of the
license in a "Details" or "Note" in the documentation for each novel:
"This eBook is for the use of anyone anywhere in the United States and most
other parts of the world at no cost and with almost no restrictions
whatsoever. You may copy it, give it away or re-use it under the terms of
the Project Gutenberg License included with this eBook or online at [
www.gutenberg.org]. If you are not located in the United States, you'll
have to check the laws of the country where you are located before using
this ebook."

Thoughts? Advice?

Thanks,
Julia Silge

	[[alternative HTML version deleted]]


From tkeitt at utexas.edu  Fri Apr 15 17:27:35 2016
From: tkeitt at utexas.edu (Tim Keitt)
Date: Fri, 15 Apr 2016 10:27:35 -0500
Subject: [R-pkg-devel] What to do with build-time-only utility scripts in
	package
Message-ID: <CANnL8grjGA0Nryy6u89K5ekzkwcSPuK8SFNAXY6=omRxBNyWvA@mail.gmail.com>

I created a couple of R scripts to assist my package 'configure' script. I
put them in the top-level of the package and that gives a check error
obviously. So I added them to .Rbuildignore and then the package would not
build (at least on Travis CI) saying the script files were not found.
That's counter to how I thought .Rbuildignore worked. Where should these
utility script go? Should they not be in .Rbuildignore?

THK

http://www.keittlab.org/

	[[alternative HTML version deleted]]


From edd at debian.org  Fri Apr 15 18:40:28 2016
From: edd at debian.org (Dirk Eddelbuettel)
Date: Fri, 15 Apr 2016 11:40:28 -0500
Subject: [R-pkg-devel] What to do with build-time-only utility scripts
	in	package
In-Reply-To: <CANnL8grjGA0Nryy6u89K5ekzkwcSPuK8SFNAXY6=omRxBNyWvA@mail.gmail.com>
References: <CANnL8grjGA0Nryy6u89K5ekzkwcSPuK8SFNAXY6=omRxBNyWvA@mail.gmail.com>
Message-ID: <22289.6524.104191.143954@max.nulle.part>


On 15 April 2016 at 10:27, Tim Keitt wrote:
| I created a couple of R scripts to assist my package 'configure' script. I
| put them in the top-level of the package and that gives a check error
| obviously. So I added them to .Rbuildignore and then the package would not
| build (at least on Travis CI) saying the script files were not found.
| That's counter to how I thought .Rbuildignore worked. Where should these
| utility script go? Should they not be in .Rbuildignore?

The legal name of '.Rbuildignore' is 'do not put these files into the tarball'.

As the check uses the tarball as source .... well I guess you can fill in the rest.

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From tkeitt at utexas.edu  Fri Apr 15 20:30:46 2016
From: tkeitt at utexas.edu (Tim Keitt)
Date: Fri, 15 Apr 2016 13:30:46 -0500
Subject: [R-pkg-devel] What to do with build-time-only utility scripts
	in package
In-Reply-To: <22289.6524.104191.143954@max.nulle.part>
References: <CANnL8grjGA0Nryy6u89K5ekzkwcSPuK8SFNAXY6=omRxBNyWvA@mail.gmail.com>
	<22289.6524.104191.143954@max.nulle.part>
Message-ID: <CANnL8gqhRLvHe4zWFvwze-_sSq7AbyR_RtJY_y2O+obNa=qaGg@mail.gmail.com>

http://www.keittlab.org/

On Fri, Apr 15, 2016 at 11:40 AM, Dirk Eddelbuettel <edd at debian.org> wrote:

>
> On 15 April 2016 at 10:27, Tim Keitt wrote:
> | I created a couple of R scripts to assist my package 'configure' script.
> I
> | put them in the top-level of the package and that gives a check error
> | obviously. So I added them to .Rbuildignore and then the package would
> not
> | build (at least on Travis CI) saying the script files were not found.
> | That's counter to how I thought .Rbuildignore worked. Where should these
> | utility script go? Should they not be in .Rbuildignore?
>
> The legal name of '.Rbuildignore' is 'do not put these files into the
> tarball'.
>
> As the check uses the tarball as source .... well I guess you can fill in
> the rest.
>

Got it. Thought it was "do not install these files with package".

I guess I'll stick them in <pkg>/src.

THK


>
> Dirk
>
> --
> http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>

	[[alternative HTML version deleted]]


From ironholds at gmail.com  Mon Apr 18 23:16:35 2016
From: ironholds at gmail.com (Oliver Keyes)
Date: Mon, 18 Apr 2016 17:16:35 -0400
Subject: [R-pkg-devel] Submitting CRAN packages with hard-to-meet
	dependencies
Message-ID: <CADRwj9-sX3QizYpQzPQ3UcAVZ7dbAgfZxhu_FVjWOreDB4OxjA@mail.gmail.com>

Good day,

I've written an Rcpp-backed R package
(https://github.com/Ironholds/poster) that interfaces with the
libpostal (https://github.com/openvenues/libpostal) library, written
in C.

While the two play together perfectly nicely, the problem is
submitting the package to CRAN: libpostal is not a common dependency
and isn't available in a debianised form for CRAN's testing: the
alternative approach, including libpostal *in* the R package, is made
impossible since it downloads gigabyte-sized databases for internal
use.

What's the approach or guidance on submitting packages in this state?
The package includes a configuration script that recognises (in a
user-friendly way) when dependencies aren't met, and warns the user
appropriately, but it is still ultimately an R package that will not
compile on CRAN. Can it be submitted, albeit with installation
skipped, or is this unacceptable?

Best,
Oliver


From bob at rudis.net  Tue Apr 19 02:23:15 2016
From: bob at rudis.net (boB Rudis)
Date: Mon, 18 Apr 2016 20:23:15 -0400
Subject: [R-pkg-devel] Submitting CRAN packages with hard-to-meet
	dependencies
In-Reply-To: <CADRwj9-sX3QizYpQzPQ3UcAVZ7dbAgfZxhu_FVjWOreDB4OxjA@mail.gmail.com>
References: <CADRwj9-sX3QizYpQzPQ3UcAVZ7dbAgfZxhu_FVjWOreDB4OxjA@mail.gmail.com>
Message-ID: <CAJ4QxaMZ1is-mNzVBNRCAYBHn42cWzy0oqZNPYOcw7U78h4_Lw@mail.gmail.com>

I would hope CRAN would let this in with some validation (even to the
point of it possibly adding a new field to DESCRIPTION). It may never
run on Slolaris or Plan 9, and I - who now runs a CRAN mirror in the
hopes to eventually have a MacBuilder equivalent service at some point
in the near future - would also appreciate not having to support large
scale library & database dependencies, even for a potentially useful
package like this. The inclusion in CRAN make packages like it usable
in situations where (for example) github packages would not be (my
previous employer did not allow non-CRAN packages to be used in
sensitive data applications).

On Mon, Apr 18, 2016 at 5:16 PM, Oliver Keyes <ironholds at gmail.com> wrote:
> Good day,
>
> I've written an Rcpp-backed R package
> (https://github.com/Ironholds/poster) that interfaces with the
> libpostal (https://github.com/openvenues/libpostal) library, written
> in C.
>
> While the two play together perfectly nicely, the problem is
> submitting the package to CRAN: libpostal is not a common dependency
> and isn't available in a debianised form for CRAN's testing: the
> alternative approach, including libpostal *in* the R package, is made
> impossible since it downloads gigabyte-sized databases for internal
> use.
>
> What's the approach or guidance on submitting packages in this state?
> The package includes a configuration script that recognises (in a
> user-friendly way) when dependencies aren't met, and warns the user
> appropriately, but it is still ultimately an R package that will not
> compile on CRAN. Can it be submitted, albeit with installation
> skipped, or is this unacceptable?
>
> Best,
> Oliver
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From edd at debian.org  Tue Apr 19 02:36:29 2016
From: edd at debian.org (Dirk Eddelbuettel)
Date: Mon, 18 Apr 2016 19:36:29 -0500
Subject: [R-pkg-devel] Submitting CRAN packages with
	hard-to-meet	dependencies
In-Reply-To: <CAJ4QxaMZ1is-mNzVBNRCAYBHn42cWzy0oqZNPYOcw7U78h4_Lw@mail.gmail.com>
References: <CADRwj9-sX3QizYpQzPQ3UcAVZ7dbAgfZxhu_FVjWOreDB4OxjA@mail.gmail.com>
	<CAJ4QxaMZ1is-mNzVBNRCAYBHn42cWzy0oqZNPYOcw7U78h4_Lw@mail.gmail.com>
Message-ID: <22293.32141.36492.591853@max.nulle.part>


My $0.02:

On 18 April 2016 at 20:23, boB Rudis wrote:
| I would hope CRAN would let this in with some validation (even to the
| point of it possibly adding a new field to DESCRIPTION). It may never
| run on Slolaris or Plan 9, and I - who now runs a CRAN mirror in the
| hopes to eventually have a MacBuilder equivalent service at some point
| in the near future - would also appreciate not having to support large
| scale library & database dependencies, even for a potentially useful
| package like this. The inclusion in CRAN make packages like it usable
| in situations where (for example) github packages would not be (my
| previous employer did not allow non-CRAN packages to be used in
| sensitive data applications).

Won't fly. Wishing and praying alone doesn't make it happen.  You are putting
the burden on CRAN, and the two of them already have 8270+ packages to look after.

Suggestion below.
 
| On Mon, Apr 18, 2016 at 5:16 PM, Oliver Keyes <ironholds at gmail.com> wrote:
| > Good day,
| >
| > I've written an Rcpp-backed R package
| > (https://github.com/Ironholds/poster) that interfaces with the
| > libpostal (https://github.com/openvenues/libpostal) library, written
| > in C.
| >
| > While the two play together perfectly nicely, the problem is
| > submitting the package to CRAN: libpostal is not a common dependency
| > and isn't available in a debianised form for CRAN's testing: the
| > alternative approach, including libpostal *in* the R package, is made
| > impossible since it downloads gigabyte-sized databases for internal
| > use.

How about this:

 -- insert a new layer between poster and libpostal which satisfies the
    build requirements for poster and lets it be installed
    
 -- the layer intercepts calls, and with libpostal not present alerts the
    user

So now postal has a wrapper which may come with its own installer support.

| > What's the approach or guidance on submitting packages in this state?
| > The package includes a configuration script that recognises (in a
| > user-friendly way) when dependencies aren't met, and warns the user
| > appropriately, but it is still ultimately an R package that will not
| > compile on CRAN. Can it be submitted, albeit with installation
| > skipped, or is this unacceptable?

No because it won't build so it cannot be tested.  You can do this, but not
on CRAN.  There is drat ...

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From bob at rudis.net  Tue Apr 19 02:48:08 2016
From: bob at rudis.net (boB Rudis)
Date: Mon, 18 Apr 2016 20:48:08 -0400
Subject: [R-pkg-devel] Submitting CRAN packages with hard-to-meet
	dependencies
In-Reply-To: <22293.32141.36492.591853@max.nulle.part>
References: <CADRwj9-sX3QizYpQzPQ3UcAVZ7dbAgfZxhu_FVjWOreDB4OxjA@mail.gmail.com>
	<CAJ4QxaMZ1is-mNzVBNRCAYBHn42cWzy0oqZNPYOcw7U78h4_Lw@mail.gmail.com>
	<22293.32141.36492.591853@max.nulle.part>
Message-ID: <CAJ4QxaNOBMfFsVneimeA+kawdnrt8Fp3fXHf+=TYDU6dREfegg@mail.gmail.com>

So, how do we create a solid alternative to CRAN? github drat wld have
been impossible at my previous gig (for good reasons). Is it time to
try to get rOpenSci to be a legit CRAN alternative? Add enough process
around it to support things like this (i.e. a less narrowly focused
Bioconductor)? Package complexities are only going to grow, not
shrink. Such is this brave, new data science world we live in.

On Mon, Apr 18, 2016 at 8:36 PM, Dirk Eddelbuettel <edd at debian.org> wrote:
>
> My $0.02:
>
> On 18 April 2016 at 20:23, boB Rudis wrote:
> | I would hope CRAN would let this in with some validation (even to the
> | point of it possibly adding a new field to DESCRIPTION). It may never
> | run on Slolaris or Plan 9, and I - who now runs a CRAN mirror in the
> | hopes to eventually have a MacBuilder equivalent service at some point
> | in the near future - would also appreciate not having to support large
> | scale library & database dependencies, even for a potentially useful
> | package like this. The inclusion in CRAN make packages like it usable
> | in situations where (for example) github packages would not be (my
> | previous employer did not allow non-CRAN packages to be used in
> | sensitive data applications).
>
> Won't fly. Wishing and praying alone doesn't make it happen.  You are putting
> the burden on CRAN, and the two of them already have 8270+ packages to look after.
>
> Suggestion below.
>
> | On Mon, Apr 18, 2016 at 5:16 PM, Oliver Keyes <ironholds at gmail.com> wrote:
> | > Good day,
> | >
> | > I've written an Rcpp-backed R package
> | > (https://github.com/Ironholds/poster) that interfaces with the
> | > libpostal (https://github.com/openvenues/libpostal) library, written
> | > in C.
> | >
> | > While the two play together perfectly nicely, the problem is
> | > submitting the package to CRAN: libpostal is not a common dependency
> | > and isn't available in a debianised form for CRAN's testing: the
> | > alternative approach, including libpostal *in* the R package, is made
> | > impossible since it downloads gigabyte-sized databases for internal
> | > use.
>
> How about this:
>
>  -- insert a new layer between poster and libpostal which satisfies the
>     build requirements for poster and lets it be installed
>
>  -- the layer intercepts calls, and with libpostal not present alerts the
>     user
>
> So now postal has a wrapper which may come with its own installer support.
>
> | > What's the approach or guidance on submitting packages in this state?
> | > The package includes a configuration script that recognises (in a
> | > user-friendly way) when dependencies aren't met, and warns the user
> | > appropriately, but it is still ultimately an R package that will not
> | > compile on CRAN. Can it be submitted, albeit with installation
> | > skipped, or is this unacceptable?
>
> No because it won't build so it cannot be tested.  You can do this, but not
> on CRAN.  There is drat ...
>
> Dirk
>
> --
> http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From antonio.canale at unito.it  Wed Apr 20 14:28:20 2016
From: antonio.canale at unito.it (Antonio Canale)
Date: Wed, 20 Apr 2016 14:28:20 +0200
Subject: [R-pkg-devel] Compiling error with the new R.h header (R-devel
 3.3.0 for Windows) when using the C++ function isnan() of <math.h>
Message-ID: <CAK5DdKHAYj+9O4UwNM9_ckc5g_sTzf_S5bc6Nj=hue8=ER2VQQ@mail.gmail.com>

Dear all,

my problem is related to the new version of my msBP package but it
actually applies also to the current version uploaded on CRAN
(https://cran.r-project.org/web/checks/check_results_msBP.html).

It turns out that the package cannot be compiled under the new R-devel
for windows.

The problem is related to the isnan() function of <math.h> library of
C++ which I call twice in one of my C++ scripts.

Consider the function below as MWE

#include<stdio.h>
#include<stdlib.h>
#include<math.h>
#include<R.h>
#include<Rmath.h>
extern "C"{
void gibbs(double *A)
{
if(isnan(A[i]) || (A[i]<=0))
{ do stuff }
}
}

Precisely, the error that I get is reported at
https://www.r-project.org/nosvn/R.check/r-devel-windows-ix86+x86_64/msBP-00install.html

I've have found in the R-devel blog and check myself that from R
version 3.3.0 the header  file R.h is changed. In particular it is now
going to include the C++ versions of system header ?<cmath>? rather
than the legacy header ?<math.h> which seems to be the source of my
problem.

However I cannot understand why it causes the error and in particular
why it is happening *only under windows* and not under other OS. I've
check my new package both in OS X and Ubuntu (with R-devel) and
everything is OK. It also compiles fine in Windows under R.3.2.5.

Thanks for your help.

Best,
Antonio

--
Antonio Canale
University of Turin and
Collegio Carlo Alberto
sites.carloalberto.org/canale


From edd at debian.org  Wed Apr 20 15:02:14 2016
From: edd at debian.org (Dirk Eddelbuettel)
Date: Wed, 20 Apr 2016 08:02:14 -0500
Subject: [R-pkg-devel] Submitting CRAN packages with hard-to-meet
	dependencies
In-Reply-To: <CAJ4QxaNOBMfFsVneimeA+kawdnrt8Fp3fXHf+=TYDU6dREfegg@mail.gmail.com>
References: <CADRwj9-sX3QizYpQzPQ3UcAVZ7dbAgfZxhu_FVjWOreDB4OxjA@mail.gmail.com>
	<CAJ4QxaMZ1is-mNzVBNRCAYBHn42cWzy0oqZNPYOcw7U78h4_Lw@mail.gmail.com>
	<22293.32141.36492.591853@max.nulle.part>
	<CAJ4QxaNOBMfFsVneimeA+kawdnrt8Fp3fXHf+=TYDU6dREfegg@mail.gmail.com>
Message-ID: <22295.32214.746124.705845@max.nulle.part>


On 18 April 2016 at 20:48, boB Rudis wrote:
| So, how do we create a solid alternative to CRAN? github drat wld have
| been impossible at my previous gig (for good reasons). Is it time to
| try to get rOpenSci to be a legit CRAN alternative? Add enough process
| around it to support things like this (i.e. a less narrowly focused
| Bioconductor)? Package complexities are only going to grow, not
| shrink. Such is this brave, new data science world we live in.

You are just talking the talk which is cheap and doesn't get us anywhere.  If
you believe so strongly that this needs to be done, can you not rent a few gb
of diskspace on S3 and get going?  Walk the walk!

I (greatly) appreciate what CRAN has done for us, and continues to do for
us. It is a gift economy, and with their free labour we get their rules, for
better (mostly) or worse (rarely).  I happen to disagree with one or two
minor aspects and may end up putting a support package or two onto a github
drat rather than CRAN itself.  But as I continue to benefit greatly from CRAN
as both a user and as a package author, I am (mostly) happy to cooperate.
They have executed a pretty relentless drive for higher code quality, more
and better code checks, better licensing conformance and more.

And I honestly don't give a damn if some Brooklyn or Portland hipsters
complain about Title Case nagging as that too has merit (as it makes
aggregation pages more readable).

<end of rant>

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From edd at debian.org  Wed Apr 20 15:04:40 2016
From: edd at debian.org (Dirk Eddelbuettel)
Date: Wed, 20 Apr 2016 08:04:40 -0500
Subject: [R-pkg-devel] Compiling error with the new R.h header (R-devel
 3.3.0 for Windows) when using the C++ function isnan() of <math.h>
In-Reply-To: <CAK5DdKHAYj+9O4UwNM9_ckc5g_sTzf_S5bc6Nj=hue8=ER2VQQ@mail.gmail.com>
References: <CAK5DdKHAYj+9O4UwNM9_ckc5g_sTzf_S5bc6Nj=hue8=ER2VQQ@mail.gmail.com>
Message-ID: <22295.32360.186405.15762@max.nulle.part>


On 20 April 2016 at 14:28, Antonio Canale wrote:
| Dear all,
| 
| my problem is related to the new version of my msBP package but it
| actually applies also to the current version uploaded on CRAN
| (https://cran.r-project.org/web/checks/check_results_msBP.html).
| 
| It turns out that the package cannot be compiled under the new R-devel
| for windows.
| 
| The problem is related to the isnan() function of <math.h> library of
| C++ which I call twice in one of my C++ scripts.
| 
| Consider the function below as MWE
| 
| #include<stdio.h>
| #include<stdlib.h>
| #include<math.h>
| #include<R.h>
| #include<Rmath.h>
| extern "C"{
| void gibbs(double *A)
| {
| if(isnan(A[i]) || (A[i]<=0))
| { do stuff }
| }
| }
| 
| Precisely, the error that I get is reported at
| https://www.r-project.org/nosvn/R.check/r-devel-windows-ix86+x86_64/msBP-00install.html

Newer compilers get you more stringent enforcement of standards, so it is now
std::isnan.  That would be the same with g++-4.9 on other OSs.

You could avoid the whole issue and just use the macros included via the R
headers.  Or you could use a certain package ending in 'pp' which helps with
C++ and R integration as it too gives you a few helpers ...
 
| I've have found in the R-devel blog and check myself that from R
| version 3.3.0 the header  file R.h is changed. In particular it is now
| going to include the C++ versions of system header ?<cmath>? rather
| than the legacy header ?<math.h> which seems to be the source of my
| problem.

That is good C++ practice.
 
| However I cannot understand why it causes the error and in particular
| why it is happening *only under windows* and not under other OS. I've
| check my new package both in OS X and Ubuntu (with R-devel) and
| everything is OK. It also compiles fine in Windows under R.3.2.5.

Not an R version issue but a compiler issue.

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From plummerm at iarc.fr  Wed Apr 20 15:22:05 2016
From: plummerm at iarc.fr (Martyn Plummer)
Date: Wed, 20 Apr 2016 13:22:05 +0000
Subject: [R-pkg-devel] Compiling error with the new R.h header (R-devel
 3.3.0 for Windows) when using the C++ function isnan() of <math.h>
In-Reply-To: <CAK5DdKHAYj+9O4UwNM9_ckc5g_sTzf_S5bc6Nj=hue8=ER2VQQ@mail.gmail.com>
References: <CAK5DdKHAYj+9O4UwNM9_ckc5g_sTzf_S5bc6Nj=hue8=ER2VQQ@mail.gmail.com>
Message-ID: <1461158524.32152.131.camel@iarc.fr>

Short answer: use the R macro ISNAN instead. See the Writing R
Extensions manual for details.

Long answer: The default standard for C++ code in R packages is C++98,
which does not define a function "isnan". The C++11 standard introduced
a std::isnan function to C++. What you were previously getting from the
inclusion of the legacy header <math.h> was a C99 macro. Now the C++
header <cmath> is used instead of the legacy header <math.h> you should
stick to the standard.?

Martyn


On Wed, 2016-04-20 at 14:28 +0200, Antonio Canale wrote:
> Dear all,
> 
> my problem is related to the new version of my msBP package but it
> actually applies also to the current version uploaded on CRAN
> (https://cran.r-project.org/web/checks/check_results_msBP.html).
> 
> It turns out that the package cannot be compiled under the new R-
> devel
> for windows.
> 
> The problem is related to the isnan() function of <math.h> library of
> C++ which I call twice in one of my C++ scripts.
> 
> Consider the function below as MWE
> 
> #include<stdio.h>
> #include<stdlib.h>
> #include<math.h>
> #include<R.h>
> #include<Rmath.h>
> extern "C"{
> void gibbs(double *A)
> {
> if(isnan(A[i]) || (A[i]<=0))
> { do stuff }
> }
> }
> 
> Precisely, the error that I get is reported at
> https://www.r-project.org/nosvn/R.check/r-devel-windows-ix86+x86_64/m
> sBP-00install.html
> 
> I've have found in the R-devel blog and check myself that from R
> version 3.3.0 the header??file R.h is changed. In particular it is
> now
> going to include the C++ versions of system header ?<cmath>? rather
> than the legacy header ?<math.h> which seems to be the source of my
> problem.
> 
> However I cannot understand why it causes the error and in particular
> why it is happening *only under windows* and not under other OS. I've
> check my new package both in OS X and Ubuntu (with R-devel) and
> everything is OK. It also compiles fine in Windows under R.3.2.5.
> 
> Thanks for your help.
> 
> Best,
> Antonio
> 
> --
> Antonio Canale
> University of Turin and
> Collegio Carlo Alberto
> sites.carloalberto.org/canale
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

From ironholds at gmail.com  Wed Apr 20 16:29:00 2016
From: ironholds at gmail.com (Oliver Keyes)
Date: Wed, 20 Apr 2016 10:29:00 -0400
Subject: [R-pkg-devel] Submitting CRAN packages with hard-to-meet
	dependencies
In-Reply-To: <22295.32214.746124.705845@max.nulle.part>
References: <CADRwj9-sX3QizYpQzPQ3UcAVZ7dbAgfZxhu_FVjWOreDB4OxjA@mail.gmail.com>
	<CAJ4QxaMZ1is-mNzVBNRCAYBHn42cWzy0oqZNPYOcw7U78h4_Lw@mail.gmail.com>
	<22293.32141.36492.591853@max.nulle.part>
	<CAJ4QxaNOBMfFsVneimeA+kawdnrt8Fp3fXHf+=TYDU6dREfegg@mail.gmail.com>
	<22295.32214.746124.705845@max.nulle.part>
Message-ID: <CADRwj988zdouij8Sk7POKs8vTgnF1XBUp7aJ+_qZSrWoyyF2SQ@mail.gmail.com>

I must have missed the bit where anyone mentioned Title Case.

CRAN's rules are definitely solid the vast majority of the time, and I've
opted for a GitHub/devtools based release.

On Wednesday, 20 April 2016, Dirk Eddelbuettel <edd at debian.org> wrote:

>
> On 18 April 2016 at 20:48, boB Rudis wrote:
> | So, how do we create a solid alternative to CRAN? github drat wld have
> | been impossible at my previous gig (for good reasons). Is it time to
> | try to get rOpenSci to be a legit CRAN alternative? Add enough process
> | around it to support things like this (i.e. a less narrowly focused
> | Bioconductor)? Package complexities are only going to grow, not
> | shrink. Such is this brave, new data science world we live in.
>
> You are just talking the talk which is cheap and doesn't get us anywhere.
> If
> you believe so strongly that this needs to be done, can you not rent a few
> gb
> of diskspace on S3 and get going?  Walk the walk!
>
> I (greatly) appreciate what CRAN has done for us, and continues to do for
> us. It is a gift economy, and with their free labour we get their rules,
> for
> better (mostly) or worse (rarely).  I happen to disagree with one or two
> minor aspects and may end up putting a support package or two onto a github
> drat rather than CRAN itself.  But as I continue to benefit greatly from
> CRAN
> as both a user and as a package author, I am (mostly) happy to cooperate.
> They have executed a pretty relentless drive for higher code quality, more
> and better code checks, better licensing conformance and more.
>
> And I honestly don't give a damn if some Brooklyn or Portland hipsters
> complain about Title Case nagging as that too has merit (as it makes
> aggregation pages more readable).
>
> <end of rant>
>
> Dirk
>
> --
> http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
> <javascript:;>
>

	[[alternative HTML version deleted]]


From glennmschultz at me.com  Fri Apr 22 17:31:44 2016
From: glennmschultz at me.com (Glenn Schultz)
Date: Fri, 22 Apr 2016 10:31:44 -0500
Subject: [R-pkg-devel] Roxygen help documenting a S4 class
Message-ID: <89832B2C-257A-432C-818B-8510332F0201@me.com>

All,

Below are two classes that I have created Scenario and Mtg.Scenario.

Mtg.Scenario contains Scenario when I run check I get the following warning.

I have gone through my book R Packages and looked at the EPub writing extension but I cannot find an example.

Any help is appreciated
Glenn

* checking for code/documentation mismatches ... WARNING
S4 class codoc mismatches from documentation object 'Mtg.Scenario-class':
Slots for class 'Mtg.Scenario'
 Code: BeginningBal Convexity EffConvexity EffDuration EndingBal
       Formula Horizon HorizonReturn KeyRateConvexity KeyRateDuration
       KeyRateTenor ModDuration Name PassThroughInterest Period
       PmtDate PrepaidPrin SMM ScheduledPrin ShiftType Shiftbps
       SpreadToInterCurve TimePeriod TotalCashFlow Type WAL
       YieldToMaturity forwardrate spotrate
 Inherited: Name Type Horizon ShiftType Shiftbps Formula
 Docs: BeginningBal Convexity EffDuration EndingBal Formula Horizon
       KeyConvexity KeyRateDuration KeyRateTenor ModDuration Name
       PassThroughInterest Period PmtDate PrepaidPrin SMM
       ScheduledPrin ShiftType Shiftbps SpreadToInterCurve TimePeriod
       TotalCashFlow Type WAL YieldToMaturity forwardrate spotrate



 #' An S4 Class representing scenario analysis details
 #' 
 #' The class Scenario is the representation of the 
 #' scenario run by the investor
 #' @slot Name A character the name of the scenario
 #' @slot Type A character the type of the scenario
 #' @slot Horizon A character the time horizon over which the 
 #' scenario is run
 #' @slot ShiftType A character the interest rate shift type (e.g.
 #' twist, parallel, bull flatten, or bull steepen)
 #' @slot Shiftbps A numeric value the scenario shift in basis points
 #' @slot Formula A function represnting the shift which applied to the term structure
 #' @exportClass Scenario
 setClass("Scenario",
        representation(
          Name = "character",
          Type = "character",
          Horizon = "character",
          ShiftType = "character",
          Shiftbps = "numeric",
          Formula = "function"
        ))

 #' An S4 Class representing the results of mortgage return scenario analysis
 #' 
 #' The class Mtg. Scenario holds the results of a scenario analysis run
 #' @slot Period A numeric value the period number forward from current
 #' @slot PmtDate A character the payment date on which the cashflow is expected to be received
 #' @slot TimePeriod A numeric value the period stated as a unit of time
 #' @slot BeginningBal A numeric value the forecasted beginning balance in the period
 #' @slot PassThroughInterest A numeric value the interest paid through to the investor
 #' @slot ScheduledPrin A numeric value the scheduled principal due in the period
 #' @slot PrepaidPrin A numeric value the forecasted prepaid principal in the period
 #' @slot EndingBal A numeric value the forecasted ending balance in the period
 #' @slot TotalCashFlow A numeric value the forecasted total cashflow received by
 #' the investor in the period
 #' @slot spotrate A numeric vector the spot rate curve
 #' @slot forwardrate A numeric vector the forward rate curve
 #' @slot SMM A numeric vector the forecasted SMM vector
 #' @slot YieldToMaturity A numeric value the scenario yield to maturity
 #' @slot WAL A numeric value the scenario weighted average life
 #' @slot SpreadToInterCurve A numeric value the spread to the interpolated curve
 #' @slot ModDuration A numeric value the scenario modified duration
 #' @slot Convexity A numeric value the scenario convexity
 #' @slot EffDuration A numeric value the effective duration which is the sum of the
 #' key rate durations
 #' @slot KeyRateTenor A numeric vector the key rate tenors
 #' @slot KeyRateDuration A numeric vector the duration of each key rate tenor
 #' @slot KeyConvexity A numeric vector the convexity of each each key rate tenor
 #' @exportClass Mtg.Scenario     
 setClass("Mtg.Scenario",
        representation( 
          Period = "numeric",
          PmtDate = "character",
          TimePeriod = "numeric",
          BeginningBal = "numeric",
          PassThroughInterest = "numeric",
          ScheduledPrin = "numeric",
          PrepaidPrin = "numeric",
          EndingBal = "numeric",
          TotalCashFlow = "numeric",
          spotrate = "numeric",
          forwardrate = "numeric",
          SMM = "numeric",
          YieldToMaturity = "numeric",
          WAL = "numeric",
          SpreadToInterCurve = "numeric",
          ModDuration = "numeric",
          Convexity = "numeric", 
          EffDuration = "numeric",
          EffConvexity = "numeric",
          KeyRateTenor = "numeric",
          KeyRateDuration = "numeric",
          KeyRateConvexity = "numeric",
          HorizonReturn = "numeric"),
        contains = "Scenario")


From h.wickham at gmail.com  Sat Apr 23 00:47:12 2016
From: h.wickham at gmail.com (Hadley Wickham)
Date: Fri, 22 Apr 2016 17:47:12 -0500
Subject: [R-pkg-devel] Roxygen help documenting a S4 class
In-Reply-To: <89832B2C-257A-432C-818B-8510332F0201@me.com>
References: <89832B2C-257A-432C-818B-8510332F0201@me.com>
Message-ID: <CABdHhvE8t+d+B-_vn6OqBN-5e=aH3-eu+bLgaffa7yJBzZCbxA@mail.gmail.com>

Does this help?

code <- c("BeginningBal", "Convexity", "EffConvexity", "EffDuration",
"EndingBal",
  "Formula", "Horizon", "HorizonReturn", "KeyRateConvexity", "KeyRateDuration",
  "KeyRateTenor", "ModDuration", "Name", "PassThroughInterest", "Period",
  "PmtDate", "PrepaidPrin", "SMM", "ScheduledPrin", "ShiftType", "Shiftbps",
  "SpreadToInterCurve", "TimePeriod", "TotalCashFlow", "Type", "WAL",
  "YieldToMaturity", "forwardrate", "spotrate")

docs <- c("BeginningBal", "Convexity", "EffDuration", "EndingBal",
"Formula", "Horizon",
"KeyConvexity", "KeyRateDuration", "KeyRateTenor", "ModDuration", "Name",
"PassThroughInterest", "Period", "PmtDate", "PrepaidPrin", "SMM",
"ScheduledPrin", "ShiftType", "Shiftbps", "SpreadToInterCurve", "TimePeriod",
"TotalCashFlow", "Type", "WAL", "YieldToMaturity", "forwardrate", "spotrate" )


setdiff(code, docs)
setdiff(docs, code)

Hadley

On Fri, Apr 22, 2016 at 10:31 AM, Glenn Schultz <glennmschultz at me.com> wrote:
> All,
>
> Below are two classes that I have created Scenario and Mtg.Scenario.
>
> Mtg.Scenario contains Scenario when I run check I get the following warning.
>
> I have gone through my book R Packages and looked at the EPub writing extension but I cannot find an example.
>
> Any help is appreciated
> Glenn
>
> * checking for code/documentation mismatches ... WARNING
> S4 class codoc mismatches from documentation object 'Mtg.Scenario-class':
> Slots for class 'Mtg.Scenario'
>  Code: BeginningBal Convexity EffConvexity EffDuration EndingBal
>        Formula Horizon HorizonReturn KeyRateConvexity KeyRateDuration
>        KeyRateTenor ModDuration Name PassThroughInterest Period
>        PmtDate PrepaidPrin SMM ScheduledPrin ShiftType Shiftbps
>        SpreadToInterCurve TimePeriod TotalCashFlow Type WAL
>        YieldToMaturity forwardrate spotrate
>  Inherited: Name Type Horizon ShiftType Shiftbps Formula
>  Docs: BeginningBal Convexity EffDuration EndingBal Formula Horizon
>        KeyConvexity KeyRateDuration KeyRateTenor ModDuration Name
>        PassThroughInterest Period PmtDate PrepaidPrin SMM
>        ScheduledPrin ShiftType Shiftbps SpreadToInterCurve TimePeriod
>        TotalCashFlow Type WAL YieldToMaturity forwardrate spotrate
>
>
>
>  #' An S4 Class representing scenario analysis details
>  #'
>  #' The class Scenario is the representation of the
>  #' scenario run by the investor
>  #' @slot Name A character the name of the scenario
>  #' @slot Type A character the type of the scenario
>  #' @slot Horizon A character the time horizon over which the
>  #' scenario is run
>  #' @slot ShiftType A character the interest rate shift type (e.g.
>  #' twist, parallel, bull flatten, or bull steepen)
>  #' @slot Shiftbps A numeric value the scenario shift in basis points
>  #' @slot Formula A function represnting the shift which applied to the term structure
>  #' @exportClass Scenario
>  setClass("Scenario",
>         representation(
>           Name = "character",
>           Type = "character",
>           Horizon = "character",
>           ShiftType = "character",
>           Shiftbps = "numeric",
>           Formula = "function"
>         ))
>
>  #' An S4 Class representing the results of mortgage return scenario analysis
>  #'
>  #' The class Mtg. Scenario holds the results of a scenario analysis run
>  #' @slot Period A numeric value the period number forward from current
>  #' @slot PmtDate A character the payment date on which the cashflow is expected to be received
>  #' @slot TimePeriod A numeric value the period stated as a unit of time
>  #' @slot BeginningBal A numeric value the forecasted beginning balance in the period
>  #' @slot PassThroughInterest A numeric value the interest paid through to the investor
>  #' @slot ScheduledPrin A numeric value the scheduled principal due in the period
>  #' @slot PrepaidPrin A numeric value the forecasted prepaid principal in the period
>  #' @slot EndingBal A numeric value the forecasted ending balance in the period
>  #' @slot TotalCashFlow A numeric value the forecasted total cashflow received by
>  #' the investor in the period
>  #' @slot spotrate A numeric vector the spot rate curve
>  #' @slot forwardrate A numeric vector the forward rate curve
>  #' @slot SMM A numeric vector the forecasted SMM vector
>  #' @slot YieldToMaturity A numeric value the scenario yield to maturity
>  #' @slot WAL A numeric value the scenario weighted average life
>  #' @slot SpreadToInterCurve A numeric value the spread to the interpolated curve
>  #' @slot ModDuration A numeric value the scenario modified duration
>  #' @slot Convexity A numeric value the scenario convexity
>  #' @slot EffDuration A numeric value the effective duration which is the sum of the
>  #' key rate durations
>  #' @slot KeyRateTenor A numeric vector the key rate tenors
>  #' @slot KeyRateDuration A numeric vector the duration of each key rate tenor
>  #' @slot KeyConvexity A numeric vector the convexity of each each key rate tenor
>  #' @exportClass Mtg.Scenario
>  setClass("Mtg.Scenario",
>         representation(
>           Period = "numeric",
>           PmtDate = "character",
>           TimePeriod = "numeric",
>           BeginningBal = "numeric",
>           PassThroughInterest = "numeric",
>           ScheduledPrin = "numeric",
>           PrepaidPrin = "numeric",
>           EndingBal = "numeric",
>           TotalCashFlow = "numeric",
>           spotrate = "numeric",
>           forwardrate = "numeric",
>           SMM = "numeric",
>           YieldToMaturity = "numeric",
>           WAL = "numeric",
>           SpreadToInterCurve = "numeric",
>           ModDuration = "numeric",
>           Convexity = "numeric",
>           EffDuration = "numeric",
>           EffConvexity = "numeric",
>           KeyRateTenor = "numeric",
>           KeyRateDuration = "numeric",
>           KeyRateConvexity = "numeric",
>           HorizonReturn = "numeric"),
>         contains = "Scenario")
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel



-- 
http://hadley.nz


From glennmschultz at me.com  Sat Apr 23 01:54:17 2016
From: glennmschultz at me.com (Glenn Schultz)
Date: Fri, 22 Apr 2016 18:54:17 -0500
Subject: [R-pkg-devel] Roxygen help documenting a S4 class
In-Reply-To: <CABdHhvE8t+d+B-_vn6OqBN-5e=aH3-eu+bLgaffa7yJBzZCbxA@mail.gmail.com>
References: <89832B2C-257A-432C-818B-8510332F0201@me.com>
	<CABdHhvE8t+d+B-_vn6OqBN-5e=aH3-eu+bLgaffa7yJBzZCbxA@mail.gmail.com>
Message-ID: <E148A887-5EFE-4F9A-9A9F-FAA5959EA1F7@me.com>

Hi Hadley,

Thank-you for taking the time to help - Ha! nice trick - thanks!  Much better than staring at lines trying to figure out what went wrong.  First time I had seen that warning too. Now, I know what it means.

Thanks,
Glenn 

> On Apr 22, 2016, at 5:47 PM, Hadley Wickham <h.wickham at gmail.com> wrote:
> 
> Does this help?
> 
> code <- c("BeginningBal", "Convexity", "EffConvexity", "EffDuration",
> "EndingBal",
>  "Formula", "Horizon", "HorizonReturn", "KeyRateConvexity", "KeyRateDuration",
>  "KeyRateTenor", "ModDuration", "Name", "PassThroughInterest", "Period",
>  "PmtDate", "PrepaidPrin", "SMM", "ScheduledPrin", "ShiftType", "Shiftbps",
>  "SpreadToInterCurve", "TimePeriod", "TotalCashFlow", "Type", "WAL",
>  "YieldToMaturity", "forwardrate", "spotrate")
> 
> docs <- c("BeginningBal", "Convexity", "EffDuration", "EndingBal",
> "Formula", "Horizon",
> "KeyConvexity", "KeyRateDuration", "KeyRateTenor", "ModDuration", "Name",
> "PassThroughInterest", "Period", "PmtDate", "PrepaidPrin", "SMM",
> "ScheduledPrin", "ShiftType", "Shiftbps", "SpreadToInterCurve", "TimePeriod",
> "TotalCashFlow", "Type", "WAL", "YieldToMaturity", "forwardrate", "spotrate" )
> 
> 
> setdiff(code, docs)
> setdiff(docs, code)
> 
> Hadley
> 
> On Fri, Apr 22, 2016 at 10:31 AM, Glenn Schultz <glennmschultz at me.com> wrote:
>> All,
>> 
>> Below are two classes that I have created Scenario and Mtg.Scenario.
>> 
>> Mtg.Scenario contains Scenario when I run check I get the following warning.
>> 
>> I have gone through my book R Packages and looked at the EPub writing extension but I cannot find an example.
>> 
>> Any help is appreciated
>> Glenn
>> 
>> * checking for code/documentation mismatches ... WARNING
>> S4 class codoc mismatches from documentation object 'Mtg.Scenario-class':
>> Slots for class 'Mtg.Scenario'
>> Code: BeginningBal Convexity EffConvexity EffDuration EndingBal
>>       Formula Horizon HorizonReturn KeyRateConvexity KeyRateDuration
>>       KeyRateTenor ModDuration Name PassThroughInterest Period
>>       PmtDate PrepaidPrin SMM ScheduledPrin ShiftType Shiftbps
>>       SpreadToInterCurve TimePeriod TotalCashFlow Type WAL
>>       YieldToMaturity forwardrate spotrate
>> Inherited: Name Type Horizon ShiftType Shiftbps Formula
>> Docs: BeginningBal Convexity EffDuration EndingBal Formula Horizon
>>       KeyConvexity KeyRateDuration KeyRateTenor ModDuration Name
>>       PassThroughInterest Period PmtDate PrepaidPrin SMM
>>       ScheduledPrin ShiftType Shiftbps SpreadToInterCurve TimePeriod
>>       TotalCashFlow Type WAL YieldToMaturity forwardrate spotrate
>> 
>> 
>> 
>> #' An S4 Class representing scenario analysis details
>> #'
>> #' The class Scenario is the representation of the
>> #' scenario run by the investor
>> #' @slot Name A character the name of the scenario
>> #' @slot Type A character the type of the scenario
>> #' @slot Horizon A character the time horizon over which the
>> #' scenario is run
>> #' @slot ShiftType A character the interest rate shift type (e.g.
>> #' twist, parallel, bull flatten, or bull steepen)
>> #' @slot Shiftbps A numeric value the scenario shift in basis points
>> #' @slot Formula A function represnting the shift which applied to the term structure
>> #' @exportClass Scenario
>> setClass("Scenario",
>>        representation(
>>          Name = "character",
>>          Type = "character",
>>          Horizon = "character",
>>          ShiftType = "character",
>>          Shiftbps = "numeric",
>>          Formula = "function"
>>        ))
>> 
>> #' An S4 Class representing the results of mortgage return scenario analysis
>> #'
>> #' The class Mtg. Scenario holds the results of a scenario analysis run
>> #' @slot Period A numeric value the period number forward from current
>> #' @slot PmtDate A character the payment date on which the cashflow is expected to be received
>> #' @slot TimePeriod A numeric value the period stated as a unit of time
>> #' @slot BeginningBal A numeric value the forecasted beginning balance in the period
>> #' @slot PassThroughInterest A numeric value the interest paid through to the investor
>> #' @slot ScheduledPrin A numeric value the scheduled principal due in the period
>> #' @slot PrepaidPrin A numeric value the forecasted prepaid principal in the period
>> #' @slot EndingBal A numeric value the forecasted ending balance in the period
>> #' @slot TotalCashFlow A numeric value the forecasted total cashflow received by
>> #' the investor in the period
>> #' @slot spotrate A numeric vector the spot rate curve
>> #' @slot forwardrate A numeric vector the forward rate curve
>> #' @slot SMM A numeric vector the forecasted SMM vector
>> #' @slot YieldToMaturity A numeric value the scenario yield to maturity
>> #' @slot WAL A numeric value the scenario weighted average life
>> #' @slot SpreadToInterCurve A numeric value the spread to the interpolated curve
>> #' @slot ModDuration A numeric value the scenario modified duration
>> #' @slot Convexity A numeric value the scenario convexity
>> #' @slot EffDuration A numeric value the effective duration which is the sum of the
>> #' key rate durations
>> #' @slot KeyRateTenor A numeric vector the key rate tenors
>> #' @slot KeyRateDuration A numeric vector the duration of each key rate tenor
>> #' @slot KeyConvexity A numeric vector the convexity of each each key rate tenor
>> #' @exportClass Mtg.Scenario
>> setClass("Mtg.Scenario",
>>        representation(
>>          Period = "numeric",
>>          PmtDate = "character",
>>          TimePeriod = "numeric",
>>          BeginningBal = "numeric",
>>          PassThroughInterest = "numeric",
>>          ScheduledPrin = "numeric",
>>          PrepaidPrin = "numeric",
>>          EndingBal = "numeric",
>>          TotalCashFlow = "numeric",
>>          spotrate = "numeric",
>>          forwardrate = "numeric",
>>          SMM = "numeric",
>>          YieldToMaturity = "numeric",
>>          WAL = "numeric",
>>          SpreadToInterCurve = "numeric",
>>          ModDuration = "numeric",
>>          Convexity = "numeric",
>>          EffDuration = "numeric",
>>          EffConvexity = "numeric",
>>          KeyRateTenor = "numeric",
>>          KeyRateDuration = "numeric",
>>          KeyRateConvexity = "numeric",
>>          HorizonReturn = "numeric"),
>>        contains = "Scenario")
>> 
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> 
> 
> -- 
> http://hadley.nz


From bruce.hoff at sagebase.org  Wed Apr 27 15:00:33 2016
From: bruce.hoff at sagebase.org (Bruce Hoff)
Date: Wed, 27 Apr 2016 06:00:33 -0700
Subject: [R-pkg-devel] Has GitHub been used as a CRAN-style repository?
Message-ID: <CAAeMkWv_pT8G5FJOvBKQgeyLAT49ZC+G4k+4uiMazCAcYoBh0A@mail.gmail.com>

Dear All:

devtools::install_github() is great but, as I understand it, limited to
installing from source code.  Is there any precedent for using a public
repository like GitHub as a CRAN-style repository, so that one can install
like so:

install.packages("mypackage", repos= "https://github.com/myrepo/mypackage")

?
This would allow the distribution of packages that need compilation without
requiring that the user set up a build system and would leverage R's
ability to find and install dependencies (by stringing together multiple
URLs in the 'repos' parameter).  Of course there's a greater burden on the
package provider, who has to build their package for Mac and Windows.

It strikes me that this could be a good way to decentralize CRAN, allowing
it to be maintained by package owners rather than a central authority.

I searched around but could not find examples of people using Github in
this way.

Bruce Hoff
Sage Bionetworks

	[[alternative HTML version deleted]]


From bbolker at gmail.com  Wed Apr 27 15:11:37 2016
From: bbolker at gmail.com (Ben Bolker)
Date: Wed, 27 Apr 2016 09:11:37 -0400
Subject: [R-pkg-devel] Has GitHub been used as a CRAN-style repository?
In-Reply-To: <CAAeMkWv_pT8G5FJOvBKQgeyLAT49ZC+G4k+4uiMazCAcYoBh0A@mail.gmail.com>
References: <CAAeMkWv_pT8G5FJOvBKQgeyLAT49ZC+G4k+4uiMazCAcYoBh0A@mail.gmail.com>
Message-ID: <5720BA89.5090001@gmail.com>


   Check out the drat package.

On 16-04-27 09:00 AM, Bruce Hoff wrote:
> Dear All:
> 
> devtools::install_github() is great but, as I understand it, limited to
> installing from source code.  Is there any precedent for using a public
> repository like GitHub as a CRAN-style repository, so that one can install
> like so:
> 
> install.packages("mypackage", repos= "https://github.com/myrepo/mypackage")
> 
> ?
> This would allow the distribution of packages that need compilation without
> requiring that the user set up a build system and would leverage R's
> ability to find and install dependencies (by stringing together multiple
> URLs in the 'repos' parameter).  Of course there's a greater burden on the
> package provider, who has to build their package for Mac and Windows.
> 
> It strikes me that this could be a good way to decentralize CRAN, allowing
> it to be maintained by package owners rather than a central authority.
> 
> I searched around but could not find examples of people using Github in
> this way.
> 
> Bruce Hoff
> Sage Bionetworks
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From thierry.onkelinx at inbo.be  Wed Apr 27 15:14:55 2016
From: thierry.onkelinx at inbo.be (Thierry Onkelinx)
Date: Wed, 27 Apr 2016 15:14:55 +0200
Subject: [R-pkg-devel] Has GitHub been used as a CRAN-style repository?
In-Reply-To: <CAAeMkWv_pT8G5FJOvBKQgeyLAT49ZC+G4k+4uiMazCAcYoBh0A@mail.gmail.com>
References: <CAAeMkWv_pT8G5FJOvBKQgeyLAT49ZC+G4k+4uiMazCAcYoBh0A@mail.gmail.com>
Message-ID: <CAJuCY5wWSUKD5Hd4sUMndPS4nrONMMrKSJg48A9mAYxsXwWPEQ@mail.gmail.com>

Dear Bruce,

Have a look at drat: http://dirk.eddelbuettel.com/code/drat.html I think
that is what you are looking for.

Best regards,

ir. Thierry Onkelinx
Instituut voor natuur- en bosonderzoek / Research Institute for Nature and
Forest
team Biometrie & Kwaliteitszorg / team Biometrics & Quality Assurance
Kliniekstraat 25
1070 Anderlecht
Belgium

To call in the statistician after the experiment is done may be no more
than asking him to perform a post-mortem examination: he may be able to say
what the experiment died of. ~ Sir Ronald Aylmer Fisher
The plural of anecdote is not data. ~ Roger Brinner
The combination of some data and an aching desire for an answer does not
ensure that a reasonable answer can be extracted from a given body of data.
~ John Tukey

2016-04-27 15:00 GMT+02:00 Bruce Hoff <bruce.hoff at sagebase.org>:

> Dear All:
>
> devtools::install_github() is great but, as I understand it, limited to
> installing from source code.  Is there any precedent for using a public
> repository like GitHub as a CRAN-style repository, so that one can install
> like so:
>
> install.packages("mypackage", repos= "https://github.com/myrepo/mypackage
> ")
>
> ?
> This would allow the distribution of packages that need compilation without
> requiring that the user set up a build system and would leverage R's
> ability to find and install dependencies (by stringing together multiple
> URLs in the 'repos' parameter).  Of course there's a greater burden on the
> package provider, who has to build their package for Mac and Windows.
>
> It strikes me that this could be a good way to decentralize CRAN, allowing
> it to be maintained by package owners rather than a central authority.
>
> I searched around but could not find examples of people using Github in
> this way.
>
> Bruce Hoff
> Sage Bionetworks
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From edd at debian.org  Wed Apr 27 15:37:46 2016
From: edd at debian.org (Dirk Eddelbuettel)
Date: Wed, 27 Apr 2016 08:37:46 -0500
Subject: [R-pkg-devel] Has GitHub been used as a CRAN-style repository?
In-Reply-To: <CAJuCY5wWSUKD5Hd4sUMndPS4nrONMMrKSJg48A9mAYxsXwWPEQ@mail.gmail.com>
References: <CAAeMkWv_pT8G5FJOvBKQgeyLAT49ZC+G4k+4uiMazCAcYoBh0A@mail.gmail.com>
	<CAJuCY5wWSUKD5Hd4sUMndPS4nrONMMrKSJg48A9mAYxsXwWPEQ@mail.gmail.com>
Message-ID: <22304.49322.89140.670324@max.nulle.part>


Bruce,

As Ben and Thierry already mentioned (thanks!!) drat it pretty much designed
to support that out of the box (but also supports repos elsewhere; however
there are reasons such as gh-pages that make GitHub uniquely suited).  I have
some moderately strongly-held beliefs about how install_github is IMHO
unsuitable as a _release-mechanism_ which I think of as, say, tarballs taken
at author-chosen points in time rather then semi-randomly selected commits
you may end with.  And drat supports such releases.  We do have a few
examples on CRAN for mixing CRAN with external releases, and some are in fact
managed by drat.  We also rely on drat extensively at work for a local repo.

When I first wrote drat about a year ago, not everybody "got it" -- so there
are a bunch of vignettes, as well as my talk at useR! 2015 about.  Please
peruse, and should you have questions do come back here (or file issues at it
GitHub repo).

Chaers, Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From omeara.brian at gmail.com  Wed Apr 27 15:21:59 2016
From: omeara.brian at gmail.com (Brian O'Meara)
Date: Wed, 27 Apr 2016 09:21:59 -0400
Subject: [R-pkg-devel] Has GitHub been used as a CRAN-style repository?
In-Reply-To: <5720BA89.5090001@gmail.com>
References: <CAAeMkWv_pT8G5FJOvBKQgeyLAT49ZC+G4k+4uiMazCAcYoBh0A@mail.gmail.com>
	<5720BA89.5090001@gmail.com>
Message-ID: <CAKywhkqeRw0QC-O6vVR_A9i7D=P70VJUPm-rdFj1XWBZOpwi5w@mail.gmail.com>

In addition to drat, R-forge may already do what you want: it's not
completely decentralized, but it still allows distribution of packages,
including binaries, without checking by CRAN maintainers (and it can build
binaries for you for some platforms). Work on R-Hub was funded as the next
generation of CRAN + R-Forge:  https://github.com/r-hub/proposal.

Best,
Brian


_______________________________________
Brian O'Meara
Associate Professor
Dept. of Ecology & Evolutionary Biology
U. of Tennessee, Knoxville
http://www.brianomeara.info



On Wed, Apr 27, 2016 at 9:11 AM, Ben Bolker <bbolker at gmail.com> wrote:

>
>    Check out the drat package.
>
> On 16-04-27 09:00 AM, Bruce Hoff wrote:
> > Dear All:
> >
> > devtools::install_github() is great but, as I understand it, limited to
> > installing from source code.  Is there any precedent for using a public
> > repository like GitHub as a CRAN-style repository, so that one can
> install
> > like so:
> >
> > install.packages("mypackage", repos= "
> https://github.com/myrepo/mypackage")
> >
> > ?
> > This would allow the distribution of packages that need compilation
> without
> > requiring that the user set up a build system and would leverage R's
> > ability to find and install dependencies (by stringing together multiple
> > URLs in the 'repos' parameter).  Of course there's a greater burden on
> the
> > package provider, who has to build their package for Mac and Windows.
> >
> > It strikes me that this could be a good way to decentralize CRAN,
> allowing
> > it to be maintained by package owners rather than a central authority.
> >
> > I searched around but could not find examples of people using Github in
> > this way.
> >
> > Bruce Hoff
> > Sage Bionetworks
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From bruce.hoff at sagebase.org  Wed Apr 27 19:00:19 2016
From: bruce.hoff at sagebase.org (Bruce Hoff)
Date: Wed, 27 Apr 2016 10:00:19 -0700
Subject: [R-pkg-devel] Has GitHub been used as a CRAN-style repository?
In-Reply-To: <22304.49322.89140.670324@max.nulle.part>
References: <CAAeMkWv_pT8G5FJOvBKQgeyLAT49ZC+G4k+4uiMazCAcYoBh0A@mail.gmail.com>
	<CAJuCY5wWSUKD5Hd4sUMndPS4nrONMMrKSJg48A9mAYxsXwWPEQ@mail.gmail.com>
	<22304.49322.89140.670324@max.nulle.part>
Message-ID: <CAAeMkWui50xSji8rb_H08bDpJQgFQPSqmU+1hKAHUHnkfbaS3A@mail.gmail.com>

Following up to my earlier post:  It looks like Dirk Eddelbuettel has in
fact built what I was asking for with 'drat',
https://github.com/eddelbuettel/drat.  The element that I do not see in
'drat' is a way to build Mac and Windows binaries, so I have two follow up
questons:
(1) Has anyone extended 'drat' in this way, to create a continuous build
system, e.g. using Github to host the source of their R package and drat to
publish the binaries, with a source/Windows/MacOS build system in between?;
(2) Has CRAN 'open sourced' how they build on Windows and MacOS to allow
someone to duplicate their build process?  I'm familiar with Rtools,
https://cran.r-project.org/bin/windows/Rtools/installer.html, which is
certainly a key element, but is there a way to somehow clone the CRAN build
process, to have some assurance that one is building package binaries the
same way CRAN does?

Thanks,

Bruce Hoff
Sage Bionetworks


On Wed, Apr 27, 2016 at 6:37 AM, Dirk Eddelbuettel <edd at debian.org> wrote:

>
> Bruce,
>
> As Ben and Thierry already mentioned (thanks!!) drat it pretty much
> designed
> to support that out of the box (but also supports repos elsewhere; however
> there are reasons such as gh-pages that make GitHub uniquely suited).  I
> have
> some moderately strongly-held beliefs about how install_github is IMHO
> unsuitable as a _release-mechanism_ which I think of as, say, tarballs
> taken
> at author-chosen points in time rather then semi-randomly selected commits
> you may end with.  And drat supports such releases.  We do have a few
> examples on CRAN for mixing CRAN with external releases, and some are in
> fact
> managed by drat.  We also rely on drat extensively at work for a local
> repo.
>
> When I first wrote drat about a year ago, not everybody "got it" -- so
> there
> are a bunch of vignettes, as well as my talk at useR! 2015 about.  Please
> peruse, and should you have questions do come back here (or file issues at
> it
> GitHub repo).
>
> Chaers, Dirk
>
> --
> http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>

	[[alternative HTML version deleted]]


From rdiaz02 at gmail.com  Wed Apr 27 21:40:26 2016
From: rdiaz02 at gmail.com (Ramon Diaz-Uriarte)
Date: Wed, 27 Apr 2016 21:40:26 +0200
Subject: [R-pkg-devel] Has GitHub been used as a CRAN-style repository?
In-Reply-To: <CAAeMkWui50xSji8rb_H08bDpJQgFQPSqmU+1hKAHUHnkfbaS3A@mail.gmail.com>
References: <CAAeMkWv_pT8G5FJOvBKQgeyLAT49ZC+G4k+4uiMazCAcYoBh0A@mail.gmail.com>
	<CAJuCY5wWSUKD5Hd4sUMndPS4nrONMMrKSJg48A9mAYxsXwWPEQ@mail.gmail.com>
	<22304.49322.89140.670324@max.nulle.part>
	<CAAeMkWui50xSji8rb_H08bDpJQgFQPSqmU+1hKAHUHnkfbaS3A@mail.gmail.com>
Message-ID: <8760v24z85.fsf@gmail.com>

Dear Bruce,


On Wed, 27-04-2016, at 19:00, Bruce Hoff <bruce.hoff at sagebase.org> wrote:
> Following up to my earlier post:  It looks like Dirk Eddelbuettel has in
> fact built what I was asking for with 'drat',
> https://github.com/eddelbuettel/drat.  The element that I do not see in
> 'drat' is a way to build Mac and Windows binaries, so I have two follow up
> questons:
> (1) Has anyone extended 'drat' in this way, to create a continuous build
> system, e.g. using Github to host the source of their R package and drat to
> publish the binaries, with a source/Windows/MacOS build system in between?;

Maybe appveyor (https://github.com/krlmlr/r-appveyor) could be of help here
for the Windows part? Appveyor takes care of the continuous
integration. But appveyor also allows you to define (at least some)
"artifacts"; they are used regularly to download the package-name.Rcheck to
examine the logs but maybe it could be tweaked to get it to produce the zip
file.

(Note: this is just a quick idea and my experience with appveyor is fairly
limited; I use to check that some of my packages in github work in windows,
so maybe this will not do what you want).

Best,

R.

> (2) Has CRAN 'open sourced' how they build on Windows and MacOS to allow
> someone to duplicate their build process?  I'm familiar with Rtools,
> https://cran.r-project.org/bin/windows/Rtools/installer.html, which is
> certainly a key element, but is there a way to somehow clone the CRAN build
> process, to have some assurance that one is building package binaries the
> same way CRAN does?
>
> Thanks,
>
> Bruce Hoff
> Sage Bionetworks
>
>
> On Wed, Apr 27, 2016 at 6:37 AM, Dirk Eddelbuettel <edd at debian.org> wrote:
>
>>
>> Bruce,
>>
>> As Ben and Thierry already mentioned (thanks!!) drat it pretty much
>> designed
>> to support that out of the box (but also supports repos elsewhere; however
>> there are reasons such as gh-pages that make GitHub uniquely suited).  I
>> have
>> some moderately strongly-held beliefs about how install_github is IMHO
>> unsuitable as a _release-mechanism_ which I think of as, say, tarballs
>> taken
>> at author-chosen points in time rather then semi-randomly selected commits
>> you may end with.  And drat supports such releases.  We do have a few
>> examples on CRAN for mixing CRAN with external releases, and some are in
>> fact
>> managed by drat.  We also rely on drat extensively at work for a local
>> repo.
>>
>> When I first wrote drat about a year ago, not everybody "got it" -- so
>> there
>> are a bunch of vignettes, as well as my talk at useR! 2015 about.  Please
>> peruse, and should you have questions do come back here (or file issues at
>> it
>> GitHub repo).
>>
>> Chaers, Dirk
>>
>> --
>> http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>>
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


-- 
Ramon Diaz-Uriarte
Department of Biochemistry, Lab B-25
Facultad de Medicina
Universidad Aut?noma de Madrid 
Arzobispo Morcillo, 4
28029 Madrid
Spain

Phone: +34-91-497-2412

Email: rdiaz02 at gmail.com
       ramon.diaz at iib.uam.es

http://ligarto.org/rdiaz


From henrik.bengtsson at gmail.com  Wed Apr 27 22:05:40 2016
From: henrik.bengtsson at gmail.com (Henrik Bengtsson)
Date: Wed, 27 Apr 2016 13:05:40 -0700
Subject: [R-pkg-devel] Has GitHub been used as a CRAN-style repository?
In-Reply-To: <8760v24z85.fsf@gmail.com>
References: <CAAeMkWv_pT8G5FJOvBKQgeyLAT49ZC+G4k+4uiMazCAcYoBh0A@mail.gmail.com>
	<CAJuCY5wWSUKD5Hd4sUMndPS4nrONMMrKSJg48A9mAYxsXwWPEQ@mail.gmail.com>
	<22304.49322.89140.670324@max.nulle.part>
	<CAAeMkWui50xSji8rb_H08bDpJQgFQPSqmU+1hKAHUHnkfbaS3A@mail.gmail.com>
	<8760v24z85.fsf@gmail.com>
Message-ID: <CAFDcVCTxxwpSQ-sZrutvwXFNYn7yhJxwZLpzPvBDv4LaDeZu6Q@mail.gmail.com>

On Wed, Apr 27, 2016 at 12:40 PM, Ramon Diaz-Uriarte <rdiaz02 at gmail.com> wrote:
> Dear Bruce,
>
>
> On Wed, 27-04-2016, at 19:00, Bruce Hoff <bruce.hoff at sagebase.org> wrote:
>> Following up to my earlier post:  It looks like Dirk Eddelbuettel has in
>> fact built what I was asking for with 'drat',
>> https://github.com/eddelbuettel/drat.  The element that I do not see in
>> 'drat' is a way to build Mac and Windows binaries, so I have two follow up
>> questons:
>> (1) Has anyone extended 'drat' in this way, to create a continuous build
>> system, e.g. using Github to host the source of their R package and drat to
>> publish the binaries, with a source/Windows/MacOS build system in between?;
>
> Maybe appveyor (https://github.com/krlmlr/r-appveyor) could be of help here
> for the Windows part? Appveyor takes care of the continuous
> integration. But appveyor also allows you to define (at least some)
> "artifacts"; they are used regularly to download the package-name.Rcheck to
> examine the logs but maybe it could be tweaked to get it to produce the zip
> file.

Yes, AppVeyor CI can certainly output R CMD build artifacts, e.g.

   https://ci.appveyor.com/project/HenrikBengtsson/r-utils/build/1.0.86/job/mcosxwjhqy1p7f5m/artifacts

This was using:

   https://github.com/HenrikBengtsson/R.utils/blob/2.3.0/appveyor.yml

/Henrik

>
> (Note: this is just a quick idea and my experience with appveyor is fairly
> limited; I use to check that some of my packages in github work in windows,
> so maybe this will not do what you want).
>
> Best,
>
> R.
>
>> (2) Has CRAN 'open sourced' how they build on Windows and MacOS to allow
>> someone to duplicate their build process?  I'm familiar with Rtools,
>> https://cran.r-project.org/bin/windows/Rtools/installer.html, which is
>> certainly a key element, but is there a way to somehow clone the CRAN build
>> process, to have some assurance that one is building package binaries the
>> same way CRAN does?
>>
>> Thanks,
>>
>> Bruce Hoff
>> Sage Bionetworks
>>
>>
>> On Wed, Apr 27, 2016 at 6:37 AM, Dirk Eddelbuettel <edd at debian.org> wrote:
>>
>>>
>>> Bruce,
>>>
>>> As Ben and Thierry already mentioned (thanks!!) drat it pretty much
>>> designed
>>> to support that out of the box (but also supports repos elsewhere; however
>>> there are reasons such as gh-pages that make GitHub uniquely suited).  I
>>> have
>>> some moderately strongly-held beliefs about how install_github is IMHO
>>> unsuitable as a _release-mechanism_ which I think of as, say, tarballs
>>> taken
>>> at author-chosen points in time rather then semi-randomly selected commits
>>> you may end with.  And drat supports such releases.  We do have a few
>>> examples on CRAN for mixing CRAN with external releases, and some are in
>>> fact
>>> managed by drat.  We also rely on drat extensively at work for a local
>>> repo.
>>>
>>> When I first wrote drat about a year ago, not everybody "got it" -- so
>>> there
>>> are a bunch of vignettes, as well as my talk at useR! 2015 about.  Please
>>> peruse, and should you have questions do come back here (or file issues at
>>> it
>>> GitHub repo).
>>>
>>> Chaers, Dirk
>>>
>>> --
>>> http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>>>
>>
>>       [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>
> --
> Ramon Diaz-Uriarte
> Department of Biochemistry, Lab B-25
> Facultad de Medicina
> Universidad Aut?noma de Madrid
> Arzobispo Morcillo, 4
> 28029 Madrid
> Spain
>
> Phone: +34-91-497-2412
>
> Email: rdiaz02 at gmail.com
>        ramon.diaz at iib.uam.es
>
> http://ligarto.org/rdiaz
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From profjcnash at gmail.com  Tue May  3 21:31:59 2016
From: profjcnash at gmail.com (ProfJCNash)
Date: Tue, 3 May 2016 15:31:59 -0400
Subject: [R-pkg-devel] Definition of "reverse imports"
Message-ID: <5728FCAF.3060603@gmail.com>

I noted that my nlmrt package on CRAN has package usl as a "reverse
imports". In a modest search I have yet to find a definition of the
term. Does anyone have a pointer?

JN


From ligges at statistik.tu-dortmund.de  Tue May  3 21:40:59 2016
From: ligges at statistik.tu-dortmund.de (Uwe Ligges)
Date: Tue, 3 May 2016 21:40:59 +0200
Subject: [R-pkg-devel] Definition of "reverse imports"
In-Reply-To: <5728FCAF.3060603@gmail.com>
References: <5728FCAF.3060603@gmail.com>
Message-ID: <7a352a28-6e2e-e2b2-9b48-5e389cdd3705@statistik.tu-dortmund.de>



On 03.05.2016 21:31, ProfJCNash wrote:
> I noted that my nlmrt package on CRAN has package usl as a "reverse
> imports". In a modest search I have yet to find a definition of the
> term. Does anyone have a pointer?

That means usl imports from your nlmrt package.

Best,
Uwe Ligges


>
> JN
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From profjcnash at gmail.com  Tue May  3 21:55:08 2016
From: profjcnash at gmail.com (ProfJCNash)
Date: Tue, 3 May 2016 15:55:08 -0400
Subject: [R-pkg-devel] Definition of "reverse imports"
In-Reply-To: <7a352a28-6e2e-e2b2-9b48-5e389cdd3705@statistik.tu-dortmund.de>
References: <5728FCAF.3060603@gmail.com>
	<7a352a28-6e2e-e2b2-9b48-5e389cdd3705@statistik.tu-dortmund.de>
Message-ID: <5729021C.4030306@gmail.com>

Thanks. Just wondered if there were something formal in case it could be
important sometime.

For information, I'm working on a presentation on R as an infrastructure
for optimization for the Fields Institute
Workshop on Nonlinear Optimization Algorithms and Industrial Applications

http://www.fields.utoronto.ca/activities/15-16/algorithms

If any developers have something in the pipe that would be worth
communicating, please let me know off-list. The purpose of going is to
build and maintain communications with the optimization crowd.

Also, in my review I've come across a few package glitches e.g., package
"powell" won't install because of something untoward in printf()
functions. I'll report this in detail when R 3.3 comes in the Linux Mint
update if there is still a problem at that time. (CRAN checks are
complaining about such issues, but seem to treat them as warnings rather
than errors. The package date is 2006, so rather old.)

Cheers, JN



On 16-05-03 03:40 PM, Uwe Ligges wrote:
> 
> 
> On 03.05.2016 21:31, ProfJCNash wrote:
>> I noted that my nlmrt package on CRAN has package usl as a "reverse
>> imports". In a modest search I have yet to find a definition of the
>> term. Does anyone have a pointer?
> 
> That means usl imports from your nlmrt package.
> 
> Best,
> Uwe Ligges
> 
> 
>>
>> JN
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>


From maechler at stat.math.ethz.ch  Wed May  4 09:20:40 2016
From: maechler at stat.math.ethz.ch (Martin Maechler)
Date: Wed, 4 May 2016 09:20:40 +0200
Subject: [R-pkg-devel] using printf() in C code (package 'powell')
In-Reply-To: <5729021C.4030306@gmail.com>
References: <5728FCAF.3060603@gmail.com>
	<7a352a28-6e2e-e2b2-9b48-5e389cdd3705@statistik.tu-dortmund.de>
	<5729021C.4030306@gmail.com>
Message-ID: <22313.41672.40408.209616@stat.math.ethz.ch>

>>>>> ProfJCNash  <profjcnash at gmail.com>
>>>>>     on Tue, 3 May 2016 15:55:08 -0400 writes:

 [..........]

    > Also, in my review I've come across a few package glitches e.g., package
    > "powell" won't install because of something untoward in printf()
    > functions. I'll report this in detail when R 3.3 comes in the Linux Mint
    > update if there is still a problem at that time. (CRAN checks are
    > complaining about such issues, but seem to treat them as warnings rather
    > than errors. The package date is 2006, so rather old.)

[Yes, indeed, impressively so, as unchanged non-archived CRAN package.]

Indeed, the C code in powell does printf(<warning_msg>)
which is not good. Rather it should use R's API for warning
messages -- as these work on all platforms, also inside GUIs --
and also as the user can then use  suppresWarnings(.)  etc.

This will definitely not go away with R 3.3.0 or any later
version of R.
But then  maintainer("powell")  is still active, and his e-mail
address at your fingertips,..., right ?

--> I've BCC'ed Sundar, so he is informed.

With best regards,
Martin

Martin Maechler @ ETH Zurich





    > On 16-05-03 03:40 PM, Uwe Ligges wrote:
    >> 
    >> 
    >> On 03.05.2016 21:31, ProfJCNash wrote:
    >>> I noted that my nlmrt package on CRAN has package usl as a "reverse
    >>> imports". In a modest search I have yet to find a definition of the
    >>> term. Does anyone have a pointer?
    >> 
    >> That means usl imports from your nlmrt package.
    >> 
    >> Best,
    >> Uwe Ligges
    >> 
    >> 
    >>> 
    >>> JN
    >>> 
    >>> ______________________________________________
    >>> R-package-devel at r-project.org mailing list
    >>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
    >>> 

    > ______________________________________________
    > R-package-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-package-devel


From carloscinelli at hotmail.com  Sun May  8 16:13:57 2016
From: carloscinelli at hotmail.com (carlos cinelli)
Date: Sun, 8 May 2016 11:13:57 -0300
Subject: [R-pkg-devel] Possibly mis-spelled words in DESCRIPTION
Message-ID: <CAP+==USi9jCttN3poFNFGVsonycYtp=164wDkK_k3fmEQ4yPoQ@mail.gmail.com>

Hi, all!

I am about to do a maintenance update on the benford.analysis package
and when checking the package in Win Builder I get this note:


** checking CRAN incoming feasibility ... NOTE
Maintainer: 'Carlos Cinelli <carloscinelli at hotmail.com
<carloscinelli at hotmail.com>>'

Possibly mis-spelled words in DESCRIPTION:
  Analytics (3:58)
  Benford (3:8)
  Benford's (7:72)*

However, I do not think Analytics is misspelled and Benford is a
proper name (Frank Benford).

How should I proceed in this case?

Thanks!

Best,

Carlos

	[[alternative HTML version deleted]]


From ligges at statistik.tu-dortmund.de  Sun May  8 16:18:07 2016
From: ligges at statistik.tu-dortmund.de (Uwe Ligges)
Date: Sun, 8 May 2016 16:18:07 +0200
Subject: [R-pkg-devel] Possibly mis-spelled words in DESCRIPTION
In-Reply-To: <CAP+==USi9jCttN3poFNFGVsonycYtp=164wDkK_k3fmEQ4yPoQ@mail.gmail.com>
References: <CAP+==USi9jCttN3poFNFGVsonycYtp=164wDkK_k3fmEQ4yPoQ@mail.gmail.com>
Message-ID: <d8c6ce96-6627-2b89-dc63-7be94fdb166b@statistik.tu-dortmund.de>



On 08.05.2016 16:13, carlos cinelli wrote:
> Hi, all!
>
> I am about to do a maintenance update on the benford.analysis package
> and when checking the package in Win Builder I get this note:
>
>
> ** checking CRAN incoming feasibility ... NOTE
> Maintainer: 'Carlos Cinelli <carloscinelli at hotmail.com
> <carloscinelli at hotmail.com>>'
>
> Possibly mis-spelled words in DESCRIPTION:
>   Analytics (3:58)
>   Benford (3:8)
>   Benford's (7:72)*
>
> However, I do not think Analytics is misspelled and Benford is a
> proper name (Frank Benford).
>
> How should I proceed in this case?

Submit to CRAN.

Best,
Uwe Ligges


>
> Thanks!
>
> Best,
>
> Carlos
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From edd at debian.org  Sun May  8 16:47:53 2016
From: edd at debian.org (Dirk Eddelbuettel)
Date: Sun, 8 May 2016 09:47:53 -0500
Subject: [R-pkg-devel] Possible R CMD check extensions (Was: Possibly
	mis-spelled words in DESCRIPTION)
In-Reply-To: <d8c6ce96-6627-2b89-dc63-7be94fdb166b@statistik.tu-dortmund.de>
References: <CAP+==USi9jCttN3poFNFGVsonycYtp=164wDkK_k3fmEQ4yPoQ@mail.gmail.com>
	<d8c6ce96-6627-2b89-dc63-7be94fdb166b@statistik.tu-dortmund.de>
Message-ID: <22319.20889.541402.489971@max.nulle.part>


On 8 May 2016 at 16:18, Uwe Ligges wrote:
| On 08.05.2016 16:13, carlos cinelli wrote:
| > How should I proceed in this case?
| 
| Submit to CRAN.

The deeper question is if 'we all' can have a conversation about extending
the directory layout / format to add things to the packaging infrastructure.
What comes to mind is e.g.

  - a spell-checker white list (per Carlos' initial email)
  
  - more generally, 'white list' of warnings R CMD check can be quiet about [1]

  - more hooks, ie I would like to call roxygen2::roxygenize() as well as
    Rcpp::compileAttributes() when building

  - [ This place intentionally left blank. Let me hear other proposals. ]

We have a year to mess things up for R 3.4.0, so anybody else intereted in
working on this?

Dirk

[1] There is no point in telling me that Rcpp creates a shared library of
over 1 mb. It has been doing so for years.  C++ libraries have a footprint.

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From murdoch.duncan at gmail.com  Sun May  8 17:15:40 2016
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Sun, 8 May 2016 11:15:40 -0400
Subject: [R-pkg-devel] Possible R CMD check extensions (Was: Possibly
 mis-spelled words in DESCRIPTION)
In-Reply-To: <22319.20889.541402.489971@max.nulle.part>
References: <CAP+==USi9jCttN3poFNFGVsonycYtp=164wDkK_k3fmEQ4yPoQ@mail.gmail.com>
	<d8c6ce96-6627-2b89-dc63-7be94fdb166b@statistik.tu-dortmund.de>
	<22319.20889.541402.489971@max.nulle.part>
Message-ID: <572F581C.7080107@gmail.com>

On 08/05/2016 10:47 AM, Dirk Eddelbuettel wrote:
>
> On 8 May 2016 at 16:18, Uwe Ligges wrote:
> | On 08.05.2016 16:13, carlos cinelli wrote:
> | > How should I proceed in this case?
> |
> | Submit to CRAN.
>
> The deeper question is if 'we all' can have a conversation about extending
> the directory layout / format to add things to the packaging infrastructure.
> What comes to mind is e.g.
>
>    - a spell-checker white list (per Carlos' initial email)
>
>    - more generally, 'white list' of warnings R CMD check can be quiet about [1]
>
>    - more hooks, ie I would like to call roxygen2::roxygenize() as well as
>      Rcpp::compileAttributes() when building
>
>    - [ This place intentionally left blank. Let me hear other proposals. ]
>
> We have a year to mess things up for R 3.4.0, so anybody else intereted in
> working on this?
>
> Dirk
>
> [1] There is no point in telling me that Rcpp creates a shared library of
> over 1 mb. It has been doing so for years.  C++ libraries have a footprint.
>

This gets tricky.  You don't want to be told that your shared lib is 
over 1 MB, but I'd imagine you'd like to know if it grew over 1000 MB. 
So really you'd like to tune that note rather than suppress it, just 
like Carlos would like a white list for the spell checker rather than 
suppressing the spell check entirely.

And CRAN has accepted Rcpp even though it generates that note, so it 
probably wouldn't object if you set the limit high enough to suppress 
the note currently, but it would object if you tried to suppress the 
note entirely (because they don't want 1000 MB shared libs either, and 
don't want to have to check your package manually).

So this would require work on CRAN's side to recognize when your 
requested suppressions are acceptable.  And I'm sure there would be 
arguments back and forth, which also suck up CRAN's time and energy.

The technical implementation is much easier than the procedural one.

Duncan Murdoch


From carloscinelli at hotmail.com  Sun May  8 17:37:08 2016
From: carloscinelli at hotmail.com (carlos cinelli)
Date: Sun, 8 May 2016 12:37:08 -0300
Subject: [R-pkg-devel] Possibly mis-spelled words in DESCRIPTION
In-Reply-To: <d8c6ce96-6627-2b89-dc63-7be94fdb166b@statistik.tu-dortmund.de>
References: <CAP+==USi9jCttN3poFNFGVsonycYtp=164wDkK_k3fmEQ4yPoQ@mail.gmail.com>
	<d8c6ce96-6627-2b89-dc63-7be94fdb166b@statistik.tu-dortmund.de>
Message-ID: <CAP+==USXt+LXdq13SMXAJyfOFsjUX5pmOS=fyue038uspeHV9w@mail.gmail.com>

Thanks, Uwe, I will submit then.
Best,
Carlos

On Sun, May 8, 2016 at 11:18 AM, Uwe Ligges <ligges at statistik.tu-dortmund.de
> wrote:

>
>
> On 08.05.2016 16:13, carlos cinelli wrote:
>
>> Hi, all!
>>
>> I am about to do a maintenance update on the benford.analysis package
>> and when checking the package in Win Builder I get this note:
>>
>>
>> ** checking CRAN incoming feasibility ... NOTE
>> Maintainer: 'Carlos Cinelli <carloscinelli at hotmail.com
>> <carloscinelli at hotmail.com>>'
>>
>> Possibly mis-spelled words in DESCRIPTION:
>>   Analytics (3:58)
>>   Benford (3:8)
>>   Benford's (7:72)*
>>
>> However, I do not think Analytics is misspelled and Benford is a
>> proper name (Frank Benford).
>>
>> How should I proceed in this case?
>>
>
> Submit to CRAN.
>
> Best,
> Uwe Ligges
>
>
>
>> Thanks!
>>
>> Best,
>>
>> Carlos
>>
>>         [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>>
>

	[[alternative HTML version deleted]]


From h.wickham at gmail.com  Sun May  8 17:44:27 2016
From: h.wickham at gmail.com (Hadley Wickham)
Date: Sun, 8 May 2016 10:44:27 -0500
Subject: [R-pkg-devel] Possible R CMD check extensions (Was: Possibly
 mis-spelled words in DESCRIPTION)
In-Reply-To: <572F581C.7080107@gmail.com>
References: <CAP+==USi9jCttN3poFNFGVsonycYtp=164wDkK_k3fmEQ4yPoQ@mail.gmail.com>
	<d8c6ce96-6627-2b89-dc63-7be94fdb166b@statistik.tu-dortmund.de>
	<22319.20889.541402.489971@max.nulle.part> <572F581C.7080107@gmail.com>
Message-ID: <CABdHhvHxWcSq1kin05A0DSNuQbqGdFp+mJD7PRc2M=TaMs4fLw@mail.gmail.com>

On Sun, May 8, 2016 at 10:15 AM, Duncan Murdoch
<murdoch.duncan at gmail.com> wrote:
> On 08/05/2016 10:47 AM, Dirk Eddelbuettel wrote:
>>
>>
>> On 8 May 2016 at 16:18, Uwe Ligges wrote:
>> | On 08.05.2016 16:13, carlos cinelli wrote:
>> | > How should I proceed in this case?
>> |
>> | Submit to CRAN.
>>
>> The deeper question is if 'we all' can have a conversation about extending
>> the directory layout / format to add things to the packaging
>> infrastructure.
>> What comes to mind is e.g.
>>
>>    - a spell-checker white list (per Carlos' initial email)
>>
>>    - more generally, 'white list' of warnings R CMD check can be quiet
>> about [1]
>>
>>    - more hooks, ie I would like to call roxygen2::roxygenize() as well as
>>      Rcpp::compileAttributes() when building
>>
>>    - [ This place intentionally left blank. Let me hear other proposals. ]
>>
>> We have a year to mess things up for R 3.4.0, so anybody else intereted in
>> working on this?
>>
>> Dirk
>>
>> [1] There is no point in telling me that Rcpp creates a shared library of
>> over 1 mb. It has been doing so for years.  C++ libraries have a
>> footprint.
>>
>
> This gets tricky.  You don't want to be told that your shared lib is over 1
> MB, but I'd imagine you'd like to know if it grew over 1000 MB. So really
> you'd like to tune that note rather than suppress it, just like Carlos would
> like a white list for the spell checker rather than suppressing the spell
> check entirely.
>
> And CRAN has accepted Rcpp even though it generates that note, so it
> probably wouldn't object if you set the limit high enough to suppress the
> note currently, but it would object if you tried to suppress the note
> entirely (because they don't want 1000 MB shared libs either, and don't want
> to have to check your package manually).
>
> So this would require work on CRAN's side to recognize when your requested
> suppressions are acceptable.  And I'm sure there would be arguments back and
> forth, which also suck up CRAN's time and energy.
>
> The technical implementation is much easier than the procedural one.

Agreed, but currently CRAN has an informal whitelist in their brains
which they have to remember when you resubmit a package.  It is
possible that we could come up with a system that makes life easier
for CRAN because they could see the whitelist in a standard format and
easily diff with the last submission.

This would also make life easier for people like me and Dirk who have
to run R CMD check on 1000's of downstream dependencies. We have no
idea whether or not we're seeing check issues that are expected or
need to be acted upon.

Hadley

-- 
http://hadley.nz


From ligges at statistik.tu-dortmund.de  Sun May  8 19:02:48 2016
From: ligges at statistik.tu-dortmund.de (Uwe Ligges)
Date: Sun, 8 May 2016 19:02:48 +0200
Subject: [R-pkg-devel] Possible R CMD check extensions (Was: Possibly
 mis-spelled words in DESCRIPTION)
In-Reply-To: <CABdHhvHxWcSq1kin05A0DSNuQbqGdFp+mJD7PRc2M=TaMs4fLw@mail.gmail.com>
References: <CAP+==USi9jCttN3poFNFGVsonycYtp=164wDkK_k3fmEQ4yPoQ@mail.gmail.com>
	<d8c6ce96-6627-2b89-dc63-7be94fdb166b@statistik.tu-dortmund.de>
	<22319.20889.541402.489971@max.nulle.part> <572F581C.7080107@gmail.com>
	<CABdHhvHxWcSq1kin05A0DSNuQbqGdFp+mJD7PRc2M=TaMs4fLw@mail.gmail.com>
Message-ID: <fd9fabbb-b404-7c90-68e0-7e74e03f1b1d@statistik.tu-dortmund.de>



On 08.05.2016 17:44, Hadley Wickham wrote:
> On Sun, May 8, 2016 at 10:15 AM, Duncan Murdoch
> <murdoch.duncan at gmail.com> wrote:
>> On 08/05/2016 10:47 AM, Dirk Eddelbuettel wrote:
>>>
>>>
>>> On 8 May 2016 at 16:18, Uwe Ligges wrote:
>>> | On 08.05.2016 16:13, carlos cinelli wrote:
>>> | > How should I proceed in this case?
>>> |
>>> | Submit to CRAN.
>>>
>>> The deeper question is if 'we all' can have a conversation about extending
>>> the directory layout / format to add things to the packaging
>>> infrastructure.
>>> What comes to mind is e.g.
>>>
>>>    - a spell-checker white list (per Carlos' initial email)
>>>
>>>    - more generally, 'white list' of warnings R CMD check can be quiet
>>> about [1]
>>>
>>>    - more hooks, ie I would like to call roxygen2::roxygenize() as well as
>>>      Rcpp::compileAttributes() when building
>>>
>>>    - [ This place intentionally left blank. Let me hear other proposals. ]
>>>
>>> We have a year to mess things up for R 3.4.0, so anybody else intereted in
>>> working on this?
>>>
>>> Dirk
>>>
>>> [1] There is no point in telling me that Rcpp creates a shared library of
>>> over 1 mb. It has been doing so for years.  C++ libraries have a
>>> footprint.
>>>
>>
>> This gets tricky.  You don't want to be told that your shared lib is over 1
>> MB, but I'd imagine you'd like to know if it grew over 1000 MB. So really
>> you'd like to tune that note rather than suppress it, just like Carlos would
>> like a white list for the spell checker rather than suppressing the spell
>> check entirely.
>>
>> And CRAN has accepted Rcpp even though it generates that note, so it
>> probably wouldn't object if you set the limit high enough to suppress the
>> note currently, but it would object if you tried to suppress the note
>> entirely (because they don't want 1000 MB shared libs either, and don't want
>> to have to check your package manually).
>>
>> So this would require work on CRAN's side to recognize when your requested
>> suppressions are acceptable.  And I'm sure there would be arguments back and
>> forth, which also suck up CRAN's time and energy.
>>
>> The technical implementation is much easier than the procedural one.
>
> Agreed, but currently CRAN has an informal whitelist in their brains
> which they have to remember when you resubmit a package.  It is
> possible that we could come up with a system that makes life easier
> for CRAN because they could see the whitelist in a standard format and
> easily diff with the last submission.
>
> This would also make life easier for people like me and Dirk who have
> to run R CMD check on 1000's of downstream dependencies. We have no
> idea whether or not we're seeing check issues that are expected or
> need to be acted upon.


Indeed, such details could be improved.

For spell checking (the original question) I do not care too much, 
because you frequently get false positives and CRAN decides by looking 
on the list. And we do not want to force users to maintain an extra 
list. But perhaps we can discuss whether we add a feature to R that a 
list could be provided within the package.

For Notes about the size: Of course, the package itself cannot say that 
it is OK to include huge components, otherwise all maintainers would 
simply declare that it is OK. So that would need to be maintained on 
CRAN. Not sure it makes sense to do that for the few exceptions we allow.

And as you see, then we need to think about exceptions for all sorts of 
Notes and how to include that both technically as well as procedural 
into the CRAN process.

Anyway, not all CRAN team members are listining here, so perhaps start 
to discuss this with R-core (where the current CRAN team is a subset of).

Best,
Uwe


From richierocks at gmail.com  Wed May 11 08:40:15 2016
From: richierocks at gmail.com (Richard Cotton)
Date: Wed, 11 May 2016 09:40:15 +0300
Subject: [R-pkg-devel] What to do when you can't reproduce CRAN R CMD check
	unit test failures?
Message-ID: <CAPp_+=eU5_af==RiwffHOY7prjdom8zwuLccjmjoGD1ps6o6Zg@mail.gmail.com>

Yesterday I uploaded a new version of the pathological package to
CRAN.  It was initially accepted but today I got a message saying that
some of the tests for the decompose_path function are failing under
Windows.

I've tested the package on a local Windows 10 machine with R-3.3.0 and
R-devel, and in Win 7 and Win 8 compatibility modes, and on Windows
Server 2012 via AppVeyor.  In all cases, all the tests pass.

I tried the CRAN win builder service today, and again, all tests pass.
http://win-builder.r-project.org/0ZrX4I75nvzM/examples_and_tests/tests_i386/testthat.Rout
http://win-builder.r-project.org/0ZrX4I75nvzM/examples_and_tests/tests_x64/testthat.Rout

The failure portion of the output I got from Uwe is as follows:

* checking tests ... ERROR
Running the tests in 'tests/testthat.R' failed.
Last 13 lines of output:
  1. Failure: decompose_path handles paths with no directory and a
single extension in the filename. (@test_decompose_path.R#42)
  2. Failure: decompose_path handles paths with no directory and a
double extension in the filename. (@test_decompose_path.R#72)
  3. Failure: decompose_path handles paths with no directory and no
extension in the filename. (@test_decompose_path.R#103)
  4. Failure: decompose_path handles filenames containing a '.' and an
extension. (@test_decompose_path.R#133)
  5. Failure: decompose_path handles the current directory as '.'.
(@test_decompose_path.R#221)
  6. Failure: decompose_path handles the parent directory as '..'.
(@test_decompose_path.R#236)
  7. Failure: decompose_path handles files inside '.'.
(@test_decompose_path.R#251)
  8. Failure: decompose_path works with a character vector input.
(@test_decompose_path.R#321)
  9. Failure: decompose_path works with a factor input.
(@test_decompose_path.R#333)
  1. ...


Since this isn't hugely informative as to the problem, I'd like
general advice on how I can diagnose a failing test when I can't
reproduce it.

It would also be useful if anyone can run R CMD check and see if they
find test failures.

The CRAN release is here (the problematic version is 0.0-8):
https://cran.r-project.org/web/packages/pathological

and the github version is currently in the same state, available here:
https://github.com/richierocks/pathological

-- 
Regards,
Richie

Learning R
4dpiecharts.com


From bob at rudis.net  Wed May 11 14:46:41 2016
From: bob at rudis.net (boB Rudis)
Date: Wed, 11 May 2016 08:46:41 -0400
Subject: [R-pkg-devel] What to do when you can't reproduce CRAN R CMD
 check unit test failures?
In-Reply-To: <CAPp_+=eU5_af==RiwffHOY7prjdom8zwuLccjmjoGD1ps6o6Zg@mail.gmail.com>
References: <CAPp_+=eU5_af==RiwffHOY7prjdom8zwuLccjmjoGD1ps6o6Zg@mail.gmail.com>
Message-ID: <CAJ4QxaPVmvLwYd1CXi1ywrHsK_u5x0Ut8+qG=Oqw1jDr96iYNQ@mail.gmail.com>

did you try winbuilder R-devel? I occasionally (ok, often) forget to
do that and it sometimes kick out different errors than R-devel on
local systems.

On Wed, May 11, 2016 at 2:40 AM, Richard Cotton <richierocks at gmail.com> wrote:
> Yesterday I uploaded a new version of the pathological package to
> CRAN.  It was initially accepted but today I got a message saying that
> some of the tests for the decompose_path function are failing under
> Windows.
>
> I've tested the package on a local Windows 10 machine with R-3.3.0 and
> R-devel, and in Win 7 and Win 8 compatibility modes, and on Windows
> Server 2012 via AppVeyor.  In all cases, all the tests pass.
>
> I tried the CRAN win builder service today, and again, all tests pass.
> http://win-builder.r-project.org/0ZrX4I75nvzM/examples_and_tests/tests_i386/testthat.Rout
> http://win-builder.r-project.org/0ZrX4I75nvzM/examples_and_tests/tests_x64/testthat.Rout
>
> The failure portion of the output I got from Uwe is as follows:
>
> * checking tests ... ERROR
> Running the tests in 'tests/testthat.R' failed.
> Last 13 lines of output:
>   1. Failure: decompose_path handles paths with no directory and a
> single extension in the filename. (@test_decompose_path.R#42)
>   2. Failure: decompose_path handles paths with no directory and a
> double extension in the filename. (@test_decompose_path.R#72)
>   3. Failure: decompose_path handles paths with no directory and no
> extension in the filename. (@test_decompose_path.R#103)
>   4. Failure: decompose_path handles filenames containing a '.' and an
> extension. (@test_decompose_path.R#133)
>   5. Failure: decompose_path handles the current directory as '.'.
> (@test_decompose_path.R#221)
>   6. Failure: decompose_path handles the parent directory as '..'.
> (@test_decompose_path.R#236)
>   7. Failure: decompose_path handles files inside '.'.
> (@test_decompose_path.R#251)
>   8. Failure: decompose_path works with a character vector input.
> (@test_decompose_path.R#321)
>   9. Failure: decompose_path works with a factor input.
> (@test_decompose_path.R#333)
>   1. ...
>
>
> Since this isn't hugely informative as to the problem, I'd like
> general advice on how I can diagnose a failing test when I can't
> reproduce it.
>
> It would also be useful if anyone can run R CMD check and see if they
> find test failures.
>
> The CRAN release is here (the problematic version is 0.0-8):
> https://cran.r-project.org/web/packages/pathological
>
> and the github version is currently in the same state, available here:
> https://github.com/richierocks/pathological
>
> --
> Regards,
> Richie
>
> Learning R
> 4dpiecharts.com
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From ddalthorp at usgs.gov  Wed May 11 21:56:04 2016
From: ddalthorp at usgs.gov (Dalthorp, Daniel)
Date: Wed, 11 May 2016 12:56:04 -0700
Subject: [R-pkg-devel] develop package with lots of tcltk in it
Message-ID: <CAJeYpE-JFen_rX0n39NsvDP4ce_qUoN2+xqHrN_htOORBKgsSg@mail.gmail.com>

I have an R/tcltk application that is designed for use primarily by people
who don't know R and don't care to learn much about it. I'd like users to
be able to use the software with a bare minimum interaction with R.

Although the application has some 15000 lines of code in a couple dozen .R
files, in essence I don't think it's much more than an elaborate version of
the following:

library(tcltk)
tt <- tktoplevel() # a required container for tk objects (textboxes,
radiobuttons, data tables, etc.)
tk.x <- tclVar() # a tcl version of user variable x
x.edit <- tkentry(tt, textvariable = tk.x, width = 5) # box for user to
enter x value
x.lbl <- tklabel(tt, text = "Enter x value: ") # a fixed label
xcalc <- tkbutton(tt, text = "Calculate", command = function()
tkmessageBox(message = tclvalue(tk.x))) # button that prints x to R console
tkgrid(x.lbl, x.edit, xcalc) # a function that puts the textbox, label, and
button onto the tk window

The following doesn't work:
# tt, x.edit, x.lbl, xcalc all seem to me like an R objects that will not
be modified, so I tried
devtools::use_data(tt, x.edit, x.lbl, xcalc, internal = F, overwrite=T) #
(after defining them)
# tk.x is a variable that I want to assign a value to at the beginning, but
user can later change the value:
devtools::use_data(tt, x.edit, x.lbl, xcalc, internal = F, overwrite=T)

The following does work, but it is not a good solution:
(1) define working directory as package/data
(2) create new tk windows via tkbutton commands = function()
source(filename)
This forces the user to use a pre-defined working directory. My application
fills that wd with several hundred functions and variables. If user changes
wd or changes values of variables that my app needs, the program crashes.

Any help would be greatly appreciated!

Thanks,

-Dan

-- 
Dan Dalthorp, PhD
USGS Forest and Rangeland Ecosystem Science Center
Forest Sciences Lab, Rm 189
3200 SW Jefferson Way
Corvallis, OR 97331
ph: 541-750-0953
ddalthorp at usgs.gov

	[[alternative HTML version deleted]]


From richierocks at gmail.com  Thu May 12 07:37:45 2016
From: richierocks at gmail.com (Richard Cotton)
Date: Thu, 12 May 2016 08:37:45 +0300
Subject: [R-pkg-devel] What to do when you can't reproduce CRAN R CMD
 check unit test failures?
In-Reply-To: <CAJ4QxaPVmvLwYd1CXi1ywrHsK_u5x0Ut8+qG=Oqw1jDr96iYNQ@mail.gmail.com>
References: <CAPp_+=eU5_af==RiwffHOY7prjdom8zwuLccjmjoGD1ps6o6Zg@mail.gmail.com>
	<CAJ4QxaPVmvLwYd1CXi1ywrHsK_u5x0Ut8+qG=Oqw1jDr96iYNQ@mail.gmail.com>
Message-ID: <CAPp_+=f13dqcDKw0zfmN_HM2dG2Md2JfQBcw65rEVu_rJT0SoA@mail.gmail.com>

Thanks Bob,

I'd forgotten about the option to run win-builder against R-devel.

Though it seems that in this case, all the tests are passing there too.

http://win-builder.r-project.org/21kc9XGKdANF/examples_and_tests/tests_i386/testthat.Rout
http://win-builder.r-project.org/21kc9XGKdANF/examples_and_tests/tests_x64/testthat.Rout

I'm now completely out of ideas as to where the problem could be.


On 11 May 2016 at 15:46, boB Rudis <bob at rudis.net> wrote:
> did you try winbuilder R-devel? I occasionally (ok, often) forget to
> do that and it sometimes kick out different errors than R-devel on
> local systems.
>
> On Wed, May 11, 2016 at 2:40 AM, Richard Cotton <richierocks at gmail.com> wrote:
>> Yesterday I uploaded a new version of the pathological package to
>> CRAN.  It was initially accepted but today I got a message saying that
>> some of the tests for the decompose_path function are failing under
>> Windows.
>>
>> I've tested the package on a local Windows 10 machine with R-3.3.0 and
>> R-devel, and in Win 7 and Win 8 compatibility modes, and on Windows
>> Server 2012 via AppVeyor.  In all cases, all the tests pass.
>>
>> I tried the CRAN win builder service today, and again, all tests pass.
>> http://win-builder.r-project.org/0ZrX4I75nvzM/examples_and_tests/tests_i386/testthat.Rout
>> http://win-builder.r-project.org/0ZrX4I75nvzM/examples_and_tests/tests_x64/testthat.Rout
>>
>> The failure portion of the output I got from Uwe is as follows:
>>
>> * checking tests ... ERROR
>> Running the tests in 'tests/testthat.R' failed.
>> Last 13 lines of output:
>>   1. Failure: decompose_path handles paths with no directory and a
>> single extension in the filename. (@test_decompose_path.R#42)
>>   2. Failure: decompose_path handles paths with no directory and a
>> double extension in the filename. (@test_decompose_path.R#72)
>>   3. Failure: decompose_path handles paths with no directory and no
>> extension in the filename. (@test_decompose_path.R#103)
>>   4. Failure: decompose_path handles filenames containing a '.' and an
>> extension. (@test_decompose_path.R#133)
>>   5. Failure: decompose_path handles the current directory as '.'.
>> (@test_decompose_path.R#221)
>>   6. Failure: decompose_path handles the parent directory as '..'.
>> (@test_decompose_path.R#236)
>>   7. Failure: decompose_path handles files inside '.'.
>> (@test_decompose_path.R#251)
>>   8. Failure: decompose_path works with a character vector input.
>> (@test_decompose_path.R#321)
>>   9. Failure: decompose_path works with a factor input.
>> (@test_decompose_path.R#333)
>>   1. ...
>>
>>
>> Since this isn't hugely informative as to the problem, I'd like
>> general advice on how I can diagnose a failing test when I can't
>> reproduce it.
>>
>> It would also be useful if anyone can run R CMD check and see if they
>> find test failures.
>>
>> The CRAN release is here (the problematic version is 0.0-8):
>> https://cran.r-project.org/web/packages/pathological
>>
>> and the github version is currently in the same state, available here:
>> https://github.com/richierocks/pathological
>>
>> --
>> Regards,
>> Richie
>>
>> Learning R
>> 4dpiecharts.com
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel



-- 
Regards,
Richie

Learning R
4dpiecharts.com


From kevinushey at gmail.com  Thu May 12 08:09:08 2016
From: kevinushey at gmail.com (Kevin Ushey)
Date: Thu, 12 May 2016 01:09:08 -0500
Subject: [R-pkg-devel] What to do when you can't reproduce CRAN R CMD
 check unit test failures?
In-Reply-To: <CAPp_+=f13dqcDKw0zfmN_HM2dG2Md2JfQBcw65rEVu_rJT0SoA@mail.gmail.com>
References: <CAPp_+=eU5_af==RiwffHOY7prjdom8zwuLccjmjoGD1ps6o6Zg@mail.gmail.com>
	<CAJ4QxaPVmvLwYd1CXi1ywrHsK_u5x0Ut8+qG=Oqw1jDr96iYNQ@mail.gmail.com>
	<CAPp_+=f13dqcDKw0zfmN_HM2dG2Md2JfQBcw65rEVu_rJT0SoA@mail.gmail.com>
Message-ID: <CAJXgQP2=DRHM9O3H3F6Z+uGo2=TCsKYu2W5=zKa7O04moriYcA@mail.gmail.com>

Is it possible that `getwd()` is reporting something on the CRAN build
servers that your `decompose_path()` doesn't handle? For example, your
tests fail for me if I run them while in the root directory (on OS X).

Kevin

On Thu, May 12, 2016 at 12:37 AM, Richard Cotton <richierocks at gmail.com> wrote:
> Thanks Bob,
>
> I'd forgotten about the option to run win-builder against R-devel.
>
> Though it seems that in this case, all the tests are passing there too.
>
> http://win-builder.r-project.org/21kc9XGKdANF/examples_and_tests/tests_i386/testthat.Rout
> http://win-builder.r-project.org/21kc9XGKdANF/examples_and_tests/tests_x64/testthat.Rout
>
> I'm now completely out of ideas as to where the problem could be.
>
>
> On 11 May 2016 at 15:46, boB Rudis <bob at rudis.net> wrote:
>> did you try winbuilder R-devel? I occasionally (ok, often) forget to
>> do that and it sometimes kick out different errors than R-devel on
>> local systems.
>>
>> On Wed, May 11, 2016 at 2:40 AM, Richard Cotton <richierocks at gmail.com> wrote:
>>> Yesterday I uploaded a new version of the pathological package to
>>> CRAN.  It was initially accepted but today I got a message saying that
>>> some of the tests for the decompose_path function are failing under
>>> Windows.
>>>
>>> I've tested the package on a local Windows 10 machine with R-3.3.0 and
>>> R-devel, and in Win 7 and Win 8 compatibility modes, and on Windows
>>> Server 2012 via AppVeyor.  In all cases, all the tests pass.
>>>
>>> I tried the CRAN win builder service today, and again, all tests pass.
>>> http://win-builder.r-project.org/0ZrX4I75nvzM/examples_and_tests/tests_i386/testthat.Rout
>>> http://win-builder.r-project.org/0ZrX4I75nvzM/examples_and_tests/tests_x64/testthat.Rout
>>>
>>> The failure portion of the output I got from Uwe is as follows:
>>>
>>> * checking tests ... ERROR
>>> Running the tests in 'tests/testthat.R' failed.
>>> Last 13 lines of output:
>>>   1. Failure: decompose_path handles paths with no directory and a
>>> single extension in the filename. (@test_decompose_path.R#42)
>>>   2. Failure: decompose_path handles paths with no directory and a
>>> double extension in the filename. (@test_decompose_path.R#72)
>>>   3. Failure: decompose_path handles paths with no directory and no
>>> extension in the filename. (@test_decompose_path.R#103)
>>>   4. Failure: decompose_path handles filenames containing a '.' and an
>>> extension. (@test_decompose_path.R#133)
>>>   5. Failure: decompose_path handles the current directory as '.'.
>>> (@test_decompose_path.R#221)
>>>   6. Failure: decompose_path handles the parent directory as '..'.
>>> (@test_decompose_path.R#236)
>>>   7. Failure: decompose_path handles files inside '.'.
>>> (@test_decompose_path.R#251)
>>>   8. Failure: decompose_path works with a character vector input.
>>> (@test_decompose_path.R#321)
>>>   9. Failure: decompose_path works with a factor input.
>>> (@test_decompose_path.R#333)
>>>   1. ...
>>>
>>>
>>> Since this isn't hugely informative as to the problem, I'd like
>>> general advice on how I can diagnose a failing test when I can't
>>> reproduce it.
>>>
>>> It would also be useful if anyone can run R CMD check and see if they
>>> find test failures.
>>>
>>> The CRAN release is here (the problematic version is 0.0-8):
>>> https://cran.r-project.org/web/packages/pathological
>>>
>>> and the github version is currently in the same state, available here:
>>> https://github.com/richierocks/pathological
>>>
>>> --
>>> Regards,
>>> Richie
>>>
>>> Learning R
>>> 4dpiecharts.com
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>
>
> --
> Regards,
> Richie
>
> Learning R
> 4dpiecharts.com
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From bob at rudis.net  Thu May 12 11:07:29 2016
From: bob at rudis.net (boB Rudis)
Date: Thu, 12 May 2016 05:07:29 -0400
Subject: [R-pkg-devel] What to do when you can't reproduce CRAN R CMD
 check unit test failures?
In-Reply-To: <CAJXgQP2=DRHM9O3H3F6Z+uGo2=TCsKYu2W5=zKa7O04moriYcA@mail.gmail.com>
References: <CAPp_+=eU5_af==RiwffHOY7prjdom8zwuLccjmjoGD1ps6o6Zg@mail.gmail.com>
	<CAJ4QxaPVmvLwYd1CXi1ywrHsK_u5x0Ut8+qG=Oqw1jDr96iYNQ@mail.gmail.com>
	<CAPp_+=f13dqcDKw0zfmN_HM2dG2Md2JfQBcw65rEVu_rJT0SoA@mail.gmail.com>
	<CAJXgQP2=DRHM9O3H3F6Z+uGo2=TCsKYu2W5=zKa7O04moriYcA@mail.gmail.com>
Message-ID: <CAJ4QxaNxtnq7Cksn6AKLabb9fSRy12Nd_dRoXGKAVO5TZzQ5UQ@mail.gmail.com>

Of course the Great And Powerful Ushey did the super-smart thing and
actually tested the code locally. Apologies for not thinking of doing
the same on my end (though I'm also OS X):

    > getwd()
    [1] "/Users/bob/Development/pathological"

    > test()
    Loading pathological
    Loading required package: testthat
    Testing pathological
    ..................1..2..W...................................................................................................................
    Warnings -----------------------------------------------------------------------
    1. copy_dir works with recursive = TRUE (@test_dir_copy.R#34) -
The files ?javaconf?, ?ldpaths?, ?Makeconf?, ?Renviron?,
?repositories? were not copied successfully.

    Failed -------------------------------------------------------------------------
    1. Failure: decompose_path handles missing paths.
(@test_decompose_path.R#279) -
    `warnings` does not match "Coercing .+ to class
[[:punct:]]character[[:punct:]]\\.".
    Actual value: "Coercing x to class ?character?."


    2. Failure: decompose_path works with a factor input.
(@test_decompose_path.R#329)
    `warnings` does not match "Coercing .+ to class
[[:punct:]]character[[:punct:]]\\.".
    Actual value: "Coercing x to class ?character?."


    DONE ===========================================================================

I'm using R version 3.3.0 RC (2016-05-01 r70572) & testthat 1.0.2
(2016-04-23 CRAN (R 3.3.0)

I also get those same two errors on a slightly out-of-date R-devel on Ubuntu.

On Thu, May 12, 2016 at 2:09 AM, Kevin Ushey <kevinushey at gmail.com> wrote:
> Is it possible that `getwd()` is reporting something on the CRAN build
> servers that your `decompose_path()` doesn't handle? For example, your
> tests fail for me if I run them while in the root directory (on OS X).
>
> Kevin
>
> On Thu, May 12, 2016 at 12:37 AM, Richard Cotton <richierocks at gmail.com> wrote:
>> Thanks Bob,
>>
>> I'd forgotten about the option to run win-builder against R-devel.
>>
>> Though it seems that in this case, all the tests are passing there too.
>>
>> http://win-builder.r-project.org/21kc9XGKdANF/examples_and_tests/tests_i386/testthat.Rout
>> http://win-builder.r-project.org/21kc9XGKdANF/examples_and_tests/tests_x64/testthat.Rout
>>
>> I'm now completely out of ideas as to where the problem could be.
>>
>>
>> On 11 May 2016 at 15:46, boB Rudis <bob at rudis.net> wrote:
>>> did you try winbuilder R-devel? I occasionally (ok, often) forget to
>>> do that and it sometimes kick out different errors than R-devel on
>>> local systems.
>>>
>>> On Wed, May 11, 2016 at 2:40 AM, Richard Cotton <richierocks at gmail.com> wrote:
>>>> Yesterday I uploaded a new version of the pathological package to
>>>> CRAN.  It was initially accepted but today I got a message saying that
>>>> some of the tests for the decompose_path function are failing under
>>>> Windows.
>>>>
>>>> I've tested the package on a local Windows 10 machine with R-3.3.0 and
>>>> R-devel, and in Win 7 and Win 8 compatibility modes, and on Windows
>>>> Server 2012 via AppVeyor.  In all cases, all the tests pass.
>>>>
>>>> I tried the CRAN win builder service today, and again, all tests pass.
>>>> http://win-builder.r-project.org/0ZrX4I75nvzM/examples_and_tests/tests_i386/testthat.Rout
>>>> http://win-builder.r-project.org/0ZrX4I75nvzM/examples_and_tests/tests_x64/testthat.Rout
>>>>
>>>> The failure portion of the output I got from Uwe is as follows:
>>>>
>>>> * checking tests ... ERROR
>>>> Running the tests in 'tests/testthat.R' failed.
>>>> Last 13 lines of output:
>>>>   1. Failure: decompose_path handles paths with no directory and a
>>>> single extension in the filename. (@test_decompose_path.R#42)
>>>>   2. Failure: decompose_path handles paths with no directory and a
>>>> double extension in the filename. (@test_decompose_path.R#72)
>>>>   3. Failure: decompose_path handles paths with no directory and no
>>>> extension in the filename. (@test_decompose_path.R#103)
>>>>   4. Failure: decompose_path handles filenames containing a '.' and an
>>>> extension. (@test_decompose_path.R#133)
>>>>   5. Failure: decompose_path handles the current directory as '.'.
>>>> (@test_decompose_path.R#221)
>>>>   6. Failure: decompose_path handles the parent directory as '..'.
>>>> (@test_decompose_path.R#236)
>>>>   7. Failure: decompose_path handles files inside '.'.
>>>> (@test_decompose_path.R#251)
>>>>   8. Failure: decompose_path works with a character vector input.
>>>> (@test_decompose_path.R#321)
>>>>   9. Failure: decompose_path works with a factor input.
>>>> (@test_decompose_path.R#333)
>>>>   1. ...
>>>>
>>>>
>>>> Since this isn't hugely informative as to the problem, I'd like
>>>> general advice on how I can diagnose a failing test when I can't
>>>> reproduce it.
>>>>
>>>> It would also be useful if anyone can run R CMD check and see if they
>>>> find test failures.
>>>>
>>>> The CRAN release is here (the problematic version is 0.0-8):
>>>> https://cran.r-project.org/web/packages/pathological
>>>>
>>>> and the github version is currently in the same state, available here:
>>>> https://github.com/richierocks/pathological
>>>>
>>>> --
>>>> Regards,
>>>> Richie
>>>>
>>>> Learning R
>>>> 4dpiecharts.com
>>>>
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>>
>>
>> --
>> Regards,
>> Richie
>>
>> Learning R
>> 4dpiecharts.com
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From plummerm at iarc.fr  Thu May 12 12:05:00 2016
From: plummerm at iarc.fr (Martyn Plummer)
Date: Thu, 12 May 2016 10:05:00 +0000
Subject: [R-pkg-devel] What to do when you can't reproduce CRAN R CMD
 check unit test failures?
In-Reply-To: <CAJXgQP2=DRHM9O3H3F6Z+uGo2=TCsKYu2W5=zKa7O04moriYcA@mail.gmail.com>
References: <CAPp_+=eU5_af==RiwffHOY7prjdom8zwuLccjmjoGD1ps6o6Zg@mail.gmail.com>
	<CAJ4QxaPVmvLwYd1CXi1ywrHsK_u5x0Ut8+qG=Oqw1jDr96iYNQ@mail.gmail.com>
	<CAPp_+=f13dqcDKw0zfmN_HM2dG2Md2JfQBcw65rEVu_rJT0SoA@mail.gmail.com>
	<CAJXgQP2=DRHM9O3H3F6Z+uGo2=TCsKYu2W5=zKa7O04moriYcA@mail.gmail.com>
Message-ID: <1463047500.2346.82.camel@iarc.fr>

On Thu, 2016-05-12 at 01:09 -0500, Kevin Ushey wrote:
> Is it possible that `getwd()` is reporting something on the CRAN
> build
> servers that your `decompose_path()` doesn't handle? For example,
> your
> tests fail for me if I run them while in the root directory (on OS
> X).

It does not work on a Windows shared drive:

> setwd("//vboxsrv/duchamp")
> getwd()
[1] "\\\\vboxsrv/duchamp"

whereas:

> decompose_path("foo.tgz")
??????????????????dirname filename extension
foo.tgz //vboxsrv/duchamp??????foo???????tgz

Martyn

> Kevin
> 
> On Thu, May 12, 2016 at 12:37 AM, Richard Cotton <richierocks at gmail.c
> om> wrote:
> > 
> > Thanks Bob,
> > 
> > I'd forgotten about the option to run win-builder against R-devel.
> > 
> > Though it seems that in this case, all the tests are passing there
> > too.
> > 
> > http://win-builder.r-project.org/21kc9XGKdANF/examples_and_tests/te
> > sts_i386/testthat.Rout
> > http://win-builder.r-project.org/21kc9XGKdANF/examples_and_tests/te
> > sts_x64/testthat.Rout
> > 
> > I'm now completely out of ideas as to where the problem could be.
> > 
> > 
> > On 11 May 2016 at 15:46, boB Rudis <bob at rudis.net> wrote:
> > > 
> > > did you try winbuilder R-devel? I occasionally (ok, often) forget
> > > to
> > > do that and it sometimes kick out different errors than R-devel
> > > on
> > > local systems.
> > > 
> > > On Wed, May 11, 2016 at 2:40 AM, Richard Cotton <richierocks at gmai
> > > l.com> wrote:
> > > > 
> > > > Yesterday I uploaded a new version of the pathological package
> > > > to
> > > > CRAN.??It was initially accepted but today I got a message
> > > > saying that
> > > > some of the tests for the decompose_path function are failing
> > > > under
> > > > Windows.
> > > > 
> > > > I've tested the package on a local Windows 10 machine with R-
> > > > 3.3.0 and
> > > > R-devel, and in Win 7 and Win 8 compatibility modes, and on
> > > > Windows
> > > > Server 2012 via AppVeyor.??In all cases, all the tests pass.
> > > > 
> > > > I tried the CRAN win builder service today, and again, all
> > > > tests pass.
> > > > http://win-builder.r-project.org/0ZrX4I75nvzM/examples_and_test
> > > > s/tests_i386/testthat.Rout
> > > > http://win-builder.r-project.org/0ZrX4I75nvzM/examples_and_test
> > > > s/tests_x64/testthat.Rout
> > > > 
> > > > The failure portion of the output I got from Uwe is as follows:
> > > > 
> > > > * checking tests ... ERROR
> > > > Running the tests in 'tests/testthat.R' failed.
> > > > Last 13 lines of output:
> > > > ? 1. Failure: decompose_path handles paths with no directory
> > > > and a
> > > > single extension in the filename. (@test_decompose_path.R#42)
> > > > ? 2. Failure: decompose_path handles paths with no directory
> > > > and a
> > > > double extension in the filename. (@test_decompose_path.R#72)
> > > > ? 3. Failure: decompose_path handles paths with no directory
> > > > and no
> > > > extension in the filename. (@test_decompose_path.R#103)
> > > > ? 4. Failure: decompose_path handles filenames containing a '.'
> > > > and an
> > > > extension. (@test_decompose_path.R#133)
> > > > ? 5. Failure: decompose_path handles the current directory as
> > > > '.'.
> > > > (@test_decompose_path.R#221)
> > > > ? 6. Failure: decompose_path handles the parent directory as
> > > > '..'.
> > > > (@test_decompose_path.R#236)
> > > > ? 7. Failure: decompose_path handles files inside '.'.
> > > > (@test_decompose_path.R#251)
> > > > ? 8. Failure: decompose_path works with a character vector
> > > > input.
> > > > (@test_decompose_path.R#321)
> > > > ? 9. Failure: decompose_path works with a factor input.
> > > > (@test_decompose_path.R#333)
> > > > ? 1. ...
> > > > 
> > > > 
> > > > Since this isn't hugely informative as to the problem, I'd like
> > > > general advice on how I can diagnose a failing test when I
> > > > can't
> > > > reproduce it.
> > > > 
> > > > It would also be useful if anyone can run R CMD check and see
> > > > if they
> > > > find test failures.
> > > > 
> > > > The CRAN release is here (the problematic version is 0.0-8):
> > > > https://cran.r-project.org/web/packages/pathological
> > > > 
> > > > and the github version is currently in the same state,
> > > > available here:
> > > > https://github.com/richierocks/pathological
> > > > 
> > > > --
> > > > Regards,
> > > > Richie
> > > > 
> > > > Learning R
> > > > 4dpiecharts.com
> > > > 
> > > > ______________________________________________
> > > > R-package-devel at r-project.org mailing list
> > > > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> > 
> > 
> > --
> > Regards,
> > Richie
> > 
> > Learning R
> > 4dpiecharts.com
> > 
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel-----------------------------------------------------------------------
This message and its attachments are strictly confidenti...{{dropped:8}}


From glennmschultz at me.com  Thu May 12 17:14:38 2016
From: glennmschultz at me.com (Glenn Schultz)
Date: Thu, 12 May 2016 10:14:38 -0500
Subject: [R-pkg-devel] Object getter, Am I doing this right?
Message-ID: <DA465A50-003A-4BCC-B928-C990A25DBF08@me.com>

All,

I am creating getters and setters for my package which uses S4.  To research getters and setters, I have been looking at the bio conductor website and documentation provided therein.  I came up with the below as a getter for the object PassThrough.  This works PrepaidPrin(PassThrough).  

The passthrough object has 50 slots and I have on the order of about 35 new classes.  Some of which are subclasses as well.  Thus, PrepaidPrin is also a slot in another class ScenarioTotalReturn.  So, I need multiple dispatch but I am still research that.  Before I started down this road I thought I would solicit opinions as to what I propose to make sure I have the basics correct.

Best,
Glenn


 #' A standard generic function to access the slot PrepaidPrin
 #' @param object an object whose method signature is PassThrough
 #' @export
 setGeneric("PrepaidPrin", function(object)
   {standardGeneric("PrepaidPrin")})

 #' Method to extract Prepaid Principal from class PassThrough
 #' @param object the name of the object of type PassThrough
 #' @exportMethod PrepaidPrin
 setMethod("PrepaidPrin", signature("PassThrough"),
           function(object){object at PrepaidPrin})

From edd at debian.org  Thu May 12 17:30:50 2016
From: edd at debian.org (Dirk Eddelbuettel)
Date: Thu, 12 May 2016 10:30:50 -0500
Subject: [R-pkg-devel] develop package with lots of tcltk in it
In-Reply-To: <CAJeYpE-JFen_rX0n39NsvDP4ce_qUoN2+xqHrN_htOORBKgsSg@mail.gmail.com>
References: <CAJeYpE-JFen_rX0n39NsvDP4ce_qUoN2+xqHrN_htOORBKgsSg@mail.gmail.com>
Message-ID: <22324.41386.39777.158812@max.nulle.part>


On 11 May 2016 at 12:56, Dalthorp, Daniel wrote:
| I have an R/tcltk application that is designed for use primarily by people
| who don't know R and don't care to learn much about it. I'd like users to
| be able to use the software with a bare minimum interaction with R.
| 
| Although the application has some 15000 lines of code in a couple dozen .R
| files, in essence I don't think it's much more than an elaborate version of
| the following:
| 
| library(tcltk)
| tt <- tktoplevel() # a required container for tk objects (textboxes,
| radiobuttons, data tables, etc.)
| tk.x <- tclVar() # a tcl version of user variable x
| x.edit <- tkentry(tt, textvariable = tk.x, width = 5) # box for user to
| enter x value
| x.lbl <- tklabel(tt, text = "Enter x value: ") # a fixed label
| xcalc <- tkbutton(tt, text = "Calculate", command = function()
| tkmessageBox(message = tclvalue(tk.x))) # button that prints x to R console
| tkgrid(x.lbl, x.edit, xcalc) # a function that puts the textbox, label, and
| button onto the tk window
| 
| The following doesn't work:
| # tt, x.edit, x.lbl, xcalc all seem to me like an R objects that will not
| be modified, so I tried
| devtools::use_data(tt, x.edit, x.lbl, xcalc, internal = F, overwrite=T) #
| (after defining them)
| # tk.x is a variable that I want to assign a value to at the beginning, but
| user can later change the value:
| devtools::use_data(tt, x.edit, x.lbl, xcalc, internal = F, overwrite=T)
| 
| The following does work, but it is not a good solution:
| (1) define working directory as package/data
| (2) create new tk windows via tkbutton commands = function()
| source(filename)
| This forces the user to use a pre-defined working directory. My application
| fills that wd with several hundred functions and variables. If user changes
| wd or changes values of variables that my app needs, the program crashes.
| 
| Any help would be greatly appreciated!

I haven't seen the obvious stated:  Have you looked into creating a package?

It can contain as much tcl/tk support code as you like,  etc pp.  And as you
state you have '15000 lines of code in a couple dozen .R files' you are well
passed the point where a package really is the best choice.

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From ddalthorp at usgs.gov  Thu May 12 19:25:25 2016
From: ddalthorp at usgs.gov (Dalthorp, Daniel)
Date: Thu, 12 May 2016 10:25:25 -0700
Subject: [R-pkg-devel] develop package with lots of tcltk in it
In-Reply-To: <22324.41386.39777.158812@max.nulle.part>
References: <CAJeYpE-JFen_rX0n39NsvDP4ce_qUoN2+xqHrN_htOORBKgsSg@mail.gmail.com>
	<22324.41386.39777.158812@max.nulle.part>
Message-ID: <CAJeYpE9ird8PCkKfCELCpb3Zhh8a5z5ooK0sh0f-_9rRuXJaaA@mail.gmail.com>

Thanks, Dirk.

Sorry for my lack of clarity. I do want to create a package and have
created one and it works, but the structure is awkward. I'm hoping someone
can help me straighten out the organization.

In package/R folder, I have several files that define standalone functions
that crunch data.
In package/data folder, I have several source files that construct
appropriate tktoplevel() windows with the desired widgets
To start the application, user opens a main tktoplevel() window by entering
a simple command from R.
That main window has several buttons that source() files in package/data
folder to build a new tktoplevel(), depending on user choice

For users who don't know anything about R, this solution may work fine. But
for users that do know R, it is unsatisfactory...program changes the
working directory, fills it with hundreds of alien-looking functions and
data, and crashes if working directory is changed or variables are modified
by hand.

I came up with that goofy solution to get around two issues:
1. I wasn't able to get away with defining tktoplevel windows with
associated widgets and storing in .Rda's packaged in /data or as
devtools::use_data(...internal = T), so I figured they needed to be defined
and created as needed;
2. it is easy to define the tktoplevels via code in source() files, but I
was having trouble with scoping and bookkeeping issues when trying to
define them via functions instead. It would be convenient to have all the
interesting data stored as globals and use the tkwidgets to edit and
manipulate them without having to think specifically about how to pass the
interesting data back and forth.

E.g. is there an easy way to organize the following into a package that
does not use 'source', treats tk.x and tk.y as globals, and does not take
over the user's working directory with a bunch of variables like tt1,
x.edit, tk.x, tk.y, etc.?
tt1 <- tktoplevel()
tk.x <- tclVar()
x.edit <- tkentry(tt1, textvariable = tk.x, width = 5)
x.lbl <- tklabel(tt1, text = "Enter x value: ")
xcalc <- tkbutton(tt1, text = "Calculate", command = function()
tkmessageBox(message = tclvalue(tk.x)))
doMoreStuff <- tkbutton(tt1, text = "Do more...", command = function()
 source('doStuff_form.R'))
tkgrid(x.lbl, x.edit)
tkgrid(xcalc,doMoreStuff)

# in doStuff_form.R:
tt2 <- tktoplevel()
tk.y<-tclVar()
y.edit<- tkentry(tt2, textvariable = tk.y, width = 5)
anscalc <- tkbutton(tt2, text = "calculate answer", command = function()
  tkmessageBox(message=as.numeric(tclvalue(tk.y)) *
as.numeric(tclvalue(tk.x)))
)
tkgrid(y.edit, anscalc)

-Dan

On Thu, May 12, 2016 at 8:30 AM, Dirk Eddelbuettel <edd at debian.org> wrote:

>
> On 11 May 2016 at 12:56, Dalthorp, Daniel wrote:
> | I have an R/tcltk application that is designed for use primarily by
> people
> | who don't know R and don't care to learn much about it. I'd like users to
> | be able to use the software with a bare minimum interaction with R.
> |
> | Although the application has some 15000 lines of code in a couple dozen
> .R
> | files, in essence I don't think it's much more than an elaborate version
> of
> | the following:
> |
> | library(tcltk)
> | tt <- tktoplevel() # a required container for tk objects (textboxes,
> | radiobuttons, data tables, etc.)
> | tk.x <- tclVar() # a tcl version of user variable x
> | x.edit <- tkentry(tt, textvariable = tk.x, width = 5) # box for user to
> | enter x value
> | x.lbl <- tklabel(tt, text = "Enter x value: ") # a fixed label
> | xcalc <- tkbutton(tt, text = "Calculate", command = function()
> | tkmessageBox(message = tclvalue(tk.x))) # button that prints x to R
> console
> | tkgrid(x.lbl, x.edit, xcalc) # a function that puts the textbox, label,
> and
> | button onto the tk window
> |
> | The following doesn't work:
> | # tt, x.edit, x.lbl, xcalc all seem to me like an R objects that will not
> | be modified, so I tried
> | devtools::use_data(tt, x.edit, x.lbl, xcalc, internal = F, overwrite=T) #
> | (after defining them)
> | # tk.x is a variable that I want to assign a value to at the beginning,
> but
> | user can later change the value:
> | devtools::use_data(tt, x.edit, x.lbl, xcalc, internal = F, overwrite=T)
> |
> | The following does work, but it is not a good solution:
> | (1) define working directory as package/data
> | (2) create new tk windows via tkbutton commands = function()
> | source(filename)
> | This forces the user to use a pre-defined working directory. My
> application
> | fills that wd with several hundred functions and variables. If user
> changes
> | wd or changes values of variables that my app needs, the program crashes.
> |
> | Any help would be greatly appreciated!
>
> I haven't seen the obvious stated:  Have you looked into creating a
> package?
>
> It can contain as much tcl/tk support code as you like,  etc pp.  And as
> you
> state you have '15000 lines of code in a couple dozen .R files' you are
> well
> passed the point where a package really is the best choice.
>
> Dirk
>
> --
> http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>



-- 
Dan Dalthorp, PhD
USGS Forest and Rangeland Ecosystem Science Center
Forest Sciences Lab, Rm 189
3200 SW Jefferson Way
Corvallis, OR 97331
ph: 541-750-0953
ddalthorp at usgs.gov

	[[alternative HTML version deleted]]


From wenchel at gmail.com  Thu May 12 19:41:58 2016
From: wenchel at gmail.com (Seth Wenchel)
Date: Thu, 12 May 2016 13:41:58 -0400
Subject: [R-pkg-devel] develop package with lots of tcltk in it
In-Reply-To: <CAJeYpE9ird8PCkKfCELCpb3Zhh8a5z5ooK0sh0f-_9rRuXJaaA@mail.gmail.com>
References: <CAJeYpE-JFen_rX0n39NsvDP4ce_qUoN2+xqHrN_htOORBKgsSg@mail.gmail.com>
	<22324.41386.39777.158812@max.nulle.part>
	<CAJeYpE9ird8PCkKfCELCpb3Zhh8a5z5ooK0sh0f-_9rRuXJaaA@mail.gmail.com>
Message-ID: <CAEFOC2+faw6-F7jJf7AbdLRUr9g7LNSF2=Xzy+bXLnEZY3MK+Q@mail.gmail.com>

>
> "For users who don't know anything about R, this solution may work fine.
> But
> for users that do know R, it is unsatisfactory...program changes the
> working directory, fills it with hundreds of alien-looking functions and
> data, and crashes if working directory is changed or variables are modified
> by hand."


Is this something that can be solved with an environment inside of the
package?  I've done this in the past with good results.  Check out Dirk's
rpushbullet for an example:

https://github.com/eddelbuettel/rpushbullet/blob/master/R/init.R

the first line of code he sets one up
.pkgenv <- new.env(parent=emptyenv())

and then creates and access objects inside of that throughout the rest of
the package.

On Thu, May 12, 2016 at 1:25 PM, Dalthorp, Daniel <ddalthorp at usgs.gov>
wrote:

> Thanks, Dirk.
>
> Sorry for my lack of clarity. I do want to create a package and have
> created one and it works, but the structure is awkward. I'm hoping someone
> can help me straighten out the organization.
>
> In package/R folder, I have several files that define standalone functions
> that crunch data.
> In package/data folder, I have several source files that construct
> appropriate tktoplevel() windows with the desired widgets
> To start the application, user opens a main tktoplevel() window by entering
> a simple command from R.
> That main window has several buttons that source() files in package/data
> folder to build a new tktoplevel(), depending on user choice
>
> For users who don't know anything about R, this solution may work fine. But
> for users that do know R, it is unsatisfactory...program changes the
> working directory, fills it with hundreds of alien-looking functions and
> data, and crashes if working directory is changed or variables are modified
> by hand.
>
> I came up with that goofy solution to get around two issues:
> 1. I wasn't able to get away with defining tktoplevel windows with
> associated widgets and storing in .Rda's packaged in /data or as
> devtools::use_data(...internal = T), so I figured they needed to be defined
> and created as needed;
> 2. it is easy to define the tktoplevels via code in source() files, but I
> was having trouble with scoping and bookkeeping issues when trying to
> define them via functions instead. It would be convenient to have all the
> interesting data stored as globals and use the tkwidgets to edit and
> manipulate them without having to think specifically about how to pass the
> interesting data back and forth.
>
> E.g. is there an easy way to organize the following into a package that
> does not use 'source', treats tk.x and tk.y as globals, and does not take
> over the user's working directory with a bunch of variables like tt1,
> x.edit, tk.x, tk.y, etc.?
> tt1 <- tktoplevel()
> tk.x <- tclVar()
> x.edit <- tkentry(tt1, textvariable = tk.x, width = 5)
> x.lbl <- tklabel(tt1, text = "Enter x value: ")
> xcalc <- tkbutton(tt1, text = "Calculate", command = function()
> tkmessageBox(message = tclvalue(tk.x)))
> doMoreStuff <- tkbutton(tt1, text = "Do more...", command = function()
>  source('doStuff_form.R'))
> tkgrid(x.lbl, x.edit)
> tkgrid(xcalc,doMoreStuff)
>
> # in doStuff_form.R:
> tt2 <- tktoplevel()
> tk.y<-tclVar()
> y.edit<- tkentry(tt2, textvariable = tk.y, width = 5)
> anscalc <- tkbutton(tt2, text = "calculate answer", command = function()
>   tkmessageBox(message=as.numeric(tclvalue(tk.y)) *
> as.numeric(tclvalue(tk.x)))
> )
> tkgrid(y.edit, anscalc)
>
> -Dan
>
> On Thu, May 12, 2016 at 8:30 AM, Dirk Eddelbuettel <edd at debian.org> wrote:
>
> >
> > On 11 May 2016 at 12:56, Dalthorp, Daniel wrote:
> > | I have an R/tcltk application that is designed for use primarily by
> > people
> > | who don't know R and don't care to learn much about it. I'd like users
> to
> > | be able to use the software with a bare minimum interaction with R.
> > |
> > | Although the application has some 15000 lines of code in a couple dozen
> > .R
> > | files, in essence I don't think it's much more than an elaborate
> version
> > of
> > | the following:
> > |
> > | library(tcltk)
> > | tt <- tktoplevel() # a required container for tk objects (textboxes,
> > | radiobuttons, data tables, etc.)
> > | tk.x <- tclVar() # a tcl version of user variable x
> > | x.edit <- tkentry(tt, textvariable = tk.x, width = 5) # box for user to
> > | enter x value
> > | x.lbl <- tklabel(tt, text = "Enter x value: ") # a fixed label
> > | xcalc <- tkbutton(tt, text = "Calculate", command = function()
> > | tkmessageBox(message = tclvalue(tk.x))) # button that prints x to R
> > console
> > | tkgrid(x.lbl, x.edit, xcalc) # a function that puts the textbox, label,
> > and
> > | button onto the tk window
> > |
> > | The following doesn't work:
> > | # tt, x.edit, x.lbl, xcalc all seem to me like an R objects that will
> not
> > | be modified, so I tried
> > | devtools::use_data(tt, x.edit, x.lbl, xcalc, internal = F,
> overwrite=T) #
> > | (after defining them)
> > | # tk.x is a variable that I want to assign a value to at the beginning,
> > but
> > | user can later change the value:
> > | devtools::use_data(tt, x.edit, x.lbl, xcalc, internal = F, overwrite=T)
> > |
> > | The following does work, but it is not a good solution:
> > | (1) define working directory as package/data
> > | (2) create new tk windows via tkbutton commands = function()
> > | source(filename)
> > | This forces the user to use a pre-defined working directory. My
> > application
> > | fills that wd with several hundred functions and variables. If user
> > changes
> > | wd or changes values of variables that my app needs, the program
> crashes.
> > |
> > | Any help would be greatly appreciated!
> >
> > I haven't seen the obvious stated:  Have you looked into creating a
> > package?
> >
> > It can contain as much tcl/tk support code as you like,  etc pp.  And as
> > you
> > state you have '15000 lines of code in a couple dozen .R files' you are
> > well
> > passed the point where a package really is the best choice.
> >
> > Dirk
> >
> > --
> > http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
> >
>
>
>
> --
> Dan Dalthorp, PhD
> USGS Forest and Rangeland Ecosystem Science Center
> Forest Sciences Lab, Rm 189
> 3200 SW Jefferson Way
> Corvallis, OR 97331
> ph: 541-750-0953
> ddalthorp at usgs.gov
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From thosjleeper at gmail.com  Fri May 13 12:28:57 2016
From: thosjleeper at gmail.com (Thomas J. Leeper)
Date: Fri, 13 May 2016 11:28:57 +0100
Subject: [R-pkg-devel] develop package with lots of tcltk in it
Message-ID: <CAOC91MTavxxyBtML6Q+G_Qyfr2xfET=X=+izHeqsvHV6nqqAKw@mail.gmail.com>

Daniel,

It doesn't really sound like you're structuring this in the best way.
Your tcltk code should probably be in your /R folder. I don't know why
you're proposing to put it in /data.

Can you also clarify why your code would generating files in the
working directory? This isn't necessary to create a tcltk interface;
and you shouldn't even need to create any objects in the R global
environment. The suggestion to store all of your tcltk variables in a
package environment is definitely the way to go here.

You may want to look at other packages that use tcltk in order to get
an idea of how this is typically used. Looking through the Rcmdr
source would be a good example.

Best,
-Thomas


> On Thu, May 12, 2016 at 1:25 PM, Dalthorp, Daniel <ddalthorp at usgs.gov>
> wrote:
>
>> Thanks, Dirk.
>>
>> Sorry for my lack of clarity. I do want to create a package and have
>> created one and it works, but the structure is awkward. I'm hoping someone
>> can help me straighten out the organization.
>>
>> In package/R folder, I have several files that define standalone functions
>> that crunch data.
>> In package/data folder, I have several source files that construct
>> appropriate tktoplevel() windows with the desired widgets
>> To start the application, user opens a main tktoplevel() window by entering
>> a simple command from R.
>> That main window has several buttons that source() files in package/data
>> folder to build a new tktoplevel(), depending on user choice
>>
>> For users who don't know anything about R, this solution may work fine. But
>> for users that do know R, it is unsatisfactory...program changes the
>> working directory, fills it with hundreds of alien-looking functions and
>> data, and crashes if working directory is changed or variables are modified
>> by hand.
>>
>> I came up with that goofy solution to get around two issues:
>> 1. I wasn't able to get away with defining tktoplevel windows with
>> associated widgets and storing in .Rda's packaged in /data or as
>> devtools::use_data(...internal = T), so I figured they needed to be defined
>> and created as needed;
>> 2. it is easy to define the tktoplevels via code in source() files, but I
>> was having trouble with scoping and bookkeeping issues when trying to
>> define them via functions instead. It would be convenient to have all the
>> interesting data stored as globals and use the tkwidgets to edit and
>> manipulate them without having to think specifically about how to pass the
>> interesting data back and forth.
>>
>> E.g. is there an easy way to organize the following into a package that
>> does not use 'source', treats tk.x and tk.y as globals, and does not take
>> over the user's working directory with a bunch of variables like tt1,
>> x.edit, tk.x, tk.y, etc.?
>> tt1 <- tktoplevel()
>> tk.x <- tclVar()
>> x.edit <- tkentry(tt1, textvariable = tk.x, width = 5)
>> x.lbl <- tklabel(tt1, text = "Enter x value: ")
>> xcalc <- tkbutton(tt1, text = "Calculate", command = function()
>> tkmessageBox(message = tclvalue(tk.x)))
>> doMoreStuff <- tkbutton(tt1, text = "Do more...", command = function()
>>  source('doStuff_form.R'))
>> tkgrid(x.lbl, x.edit)
>> tkgrid(xcalc,doMoreStuff)
>>
>> # in doStuff_form.R:
>> tt2 <- tktoplevel()
>> tk.y<-tclVar()
>> y.edit<- tkentry(tt2, textvariable = tk.y, width = 5)
>> anscalc <- tkbutton(tt2, text = "calculate answer", command = function()
>>   tkmessageBox(message=as.numeric(tclvalue(tk.y)) *
>> as.numeric(tclvalue(tk.x)))
>> )
>> tkgrid(y.edit, anscalc)
>>
>> -Dan
>>
>> On Thu, May 12, 2016 at 8:30 AM, Dirk Eddelbuettel <edd at debian.org> wrote:
>>
>> >
>> > On 11 May 2016 at 12:56, Dalthorp, Daniel wrote:
>> > | I have an R/tcltk application that is designed for use primarily by
>> > people
>> > | who don't know R and don't care to learn much about it. I'd like users
>> to
>> > | be able to use the software with a bare minimum interaction with R.
>> > |
>> > | Although the application has some 15000 lines of code in a couple dozen
>> > .R
>> > | files, in essence I don't think it's much more than an elaborate
>> version
>> > of
>> > | the following:
>> > |
>> > | library(tcltk)
>> > | tt <- tktoplevel() # a required container for tk objects (textboxes,
>> > | radiobuttons, data tables, etc.)
>> > | tk.x <- tclVar() # a tcl version of user variable x
>> > | x.edit <- tkentry(tt, textvariable = tk.x, width = 5) # box for user to
>> > | enter x value
>> > | x.lbl <- tklabel(tt, text = "Enter x value: ") # a fixed label
>> > | xcalc <- tkbutton(tt, text = "Calculate", command = function()
>> > | tkmessageBox(message = tclvalue(tk.x))) # button that prints x to R
>> > console
>> > | tkgrid(x.lbl, x.edit, xcalc) # a function that puts the textbox, label,
>> > and
>> > | button onto the tk window
>> > |
>> > | The following doesn't work:
>> > | # tt, x.edit, x.lbl, xcalc all seem to me like an R objects that will
>> not
>> > | be modified, so I tried
>> > | devtools::use_data(tt, x.edit, x.lbl, xcalc, internal = F,
>> overwrite=T) #
>> > | (after defining them)
>> > | # tk.x is a variable that I want to assign a value to at the beginning,
>> > but
>> > | user can later change the value:
>> > | devtools::use_data(tt, x.edit, x.lbl, xcalc, internal = F, overwrite=T)
>> > |
>> > | The following does work, but it is not a good solution:
>> > | (1) define working directory as package/data
>> > | (2) create new tk windows via tkbutton commands = function()
>> > | source(filename)
>> > | This forces the user to use a pre-defined working directory. My
>> > application
>> > | fills that wd with several hundred functions and variables. If user
>> > changes
>> > | wd or changes values of variables that my app needs, the program
>> crashes.
>> > |
>> > | Any help would be greatly appreciated!
>> >
>> > I haven't seen the obvious stated:  Have you looked into creating a
>> > package?
>> >
>> > It can contain as much tcl/tk support code as you like,  etc pp.  And as
>> > you
>> > state you have '15000 lines of code in a couple dozen .R files' you are
>> > well
>> > passed the point where a package really is the best choice.
>> >
>> > Dirk
>> >
>> > --
>> > http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>> >
>>
>>
>>
>> --
>> Dan Dalthorp, PhD
>> USGS Forest and Rangeland Ecosystem Science Center
>> Forest Sciences Lab, Rm 189
>> 3200 SW Jefferson Way
>> Corvallis, OR 97331
>> ph: 541-750-0953
>> ddalthorp at usgs.gov
>>
>>         [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>
>         [[alternative HTML version deleted]]
>


From ddalthorp at usgs.gov  Mon May 16 23:52:13 2016
From: ddalthorp at usgs.gov (Dalthorp, Daniel)
Date: Mon, 16 May 2016 14:52:13 -0700
Subject: [R-pkg-devel] develop package with lots of tcltk in it
In-Reply-To: <CAEFOC2+faw6-F7jJf7AbdLRUr9g7LNSF2=Xzy+bXLnEZY3MK+Q@mail.gmail.com>
References: <CAJeYpE-JFen_rX0n39NsvDP4ce_qUoN2+xqHrN_htOORBKgsSg@mail.gmail.com>
	<22324.41386.39777.158812@max.nulle.part>
	<CAJeYpE9ird8PCkKfCELCpb3Zhh8a5z5ooK0sh0f-_9rRuXJaaA@mail.gmail.com>
	<CAEFOC2+faw6-F7jJf7AbdLRUr9g7LNSF2=Xzy+bXLnEZY3MK+Q@mail.gmail.com>
Message-ID: <CAJeYpE_+RGvhMWmykrB9g1s4bsPrH0bsuRUQ2Zpv-+dH=s_hSw@mail.gmail.com>

That looks like a solution, Seth. I think it'll work.

Before I spend a week or so restructuring code and rewriting some of the
critical assignment statements to get the scoping right, I have a couple
questions.

(1) does the following scheme make sense or is there a more sensible way to
pull it together?
i. define tcl variables in package environment (tcl variables declared in
.R file in /R)
ii. define a new environment for error-checked, formatted variables that
can be mixed and matched in numeric calculations
[ See example below.]

(2) Is there a simple way for functions within the package to access
variables in (e.g.) .pkgenv without having to type ".pkgenv$" every time?
How can I access these when working outside the package (as a savvy user
might want to do)? [See example below.]

E.g., Package has Depends: tcltk in DESCRIPTION and .r file in /R:

.pkgenv <- new.env(parent=emptyenv())
tk.x <- tclVar()
tk.y<-tclVar()

inittest<-function(){
  tt <- tktoplevel()
  x.edit <- tkentry(tt, textvariable = tk.x, width = 5)
  x.lbl <- tklabel(tt, text = "Enter x value: ")
  y.edit<- tkentry(tt, textvariable = tk.y, width = 5)
  y.lbl <- tklabel(tt, text = "Enter y value: ")
  calc <- tkbutton(tt, text = "Calculate and save", command = function(){
    print(paste0("answer: product = ",
as.numeric(tclvalue(tk.x))*as.numeric(tclvalue(tk.y))))
    assign("x", as.numeric(tclvalue(tk.x)), envir = .pkgenv)
    assign("y", as.numeric(tclvalue(tk.y)), envir = .pkgenv)
  })
  seeStuff <- tkbutton(tt, text = "View summary", command = see)
  tkgrid(x.lbl, x.edit)
  tkgrid(y.lbl, y.edit)
  tkgrid(calc, columnspan =2)
  tkgrid(seeStuff, columnspan =2)
}
see<-function(){
  print(paste0(.pkgenv$x, " * ", .pkgenv$y, " = ", .pkgenv$x * .pkgenv$y))
}

Many thanks,

-Dan




On Thu, May 12, 2016 at 10:41 AM, Seth Wenchel <wenchel at gmail.com> wrote:

> "For users who don't know anything about R, this solution may work fine.
>> But
>> for users that do know R, it is unsatisfactory...program changes the
>> working directory, fills it with hundreds of alien-looking functions and
>> data, and crashes if working directory is changed or variables are
>> modified
>> by hand."
>
>
> Is this something that can be solved with an environment inside of the
> package?  I've done this in the past with good results.  Check out Dirk's
> rpushbullet for an example:
>
> https://github.com/eddelbuettel/rpushbullet/blob/master/R/init.R
>
> the first line of code he sets one up
> .pkgenv <- new.env(parent=emptyenv())
>
> and then creates and access objects inside of that throughout the rest of
> the package.
>
> On Thu, May 12, 2016 at 1:25 PM, Dalthorp, Daniel <ddalthorp at usgs.gov>
> wrote:
>
>> Thanks, Dirk.
>>
>> Sorry for my lack of clarity. I do want to create a package and have
>> created one and it works, but the structure is awkward. I'm hoping someone
>> can help me straighten out the organization.
>>
>> In package/R folder, I have several files that define standalone functions
>> that crunch data.
>> In package/data folder, I have several source files that construct
>> appropriate tktoplevel() windows with the desired widgets
>> To start the application, user opens a main tktoplevel() window by
>> entering
>> a simple command from R.
>> That main window has several buttons that source() files in package/data
>> folder to build a new tktoplevel(), depending on user choice
>>
>> For users who don't know anything about R, this solution may work fine.
>> But
>> for users that do know R, it is unsatisfactory...program changes the
>> working directory, fills it with hundreds of alien-looking functions and
>> data, and crashes if working directory is changed or variables are
>> modified
>> by hand.
>>
>> I came up with that goofy solution to get around two issues:
>> 1. I wasn't able to get away with defining tktoplevel windows with
>> associated widgets and storing in .Rda's packaged in /data or as
>> devtools::use_data(...internal = T), so I figured they needed to be
>> defined
>> and created as needed;
>> 2. it is easy to define the tktoplevels via code in source() files, but I
>> was having trouble with scoping and bookkeeping issues when trying to
>> define them via functions instead. It would be convenient to have all the
>> interesting data stored as globals and use the tkwidgets to edit and
>> manipulate them without having to think specifically about how to pass the
>> interesting data back and forth.
>>
>> E.g. is there an easy way to organize the following into a package that
>> does not use 'source', treats tk.x and tk.y as globals, and does not take
>> over the user's working directory with a bunch of variables like tt1,
>> x.edit, tk.x, tk.y, etc.?
>> tt1 <- tktoplevel()
>> tk.x <- tclVar()
>> x.edit <- tkentry(tt1, textvariable = tk.x, width = 5)
>> x.lbl <- tklabel(tt1, text = "Enter x value: ")
>> xcalc <- tkbutton(tt1, text = "Calculate", command = function()
>> tkmessageBox(message = tclvalue(tk.x)))
>> doMoreStuff <- tkbutton(tt1, text = "Do more...", command = function()
>>  source('doStuff_form.R'))
>> tkgrid(x.lbl, x.edit)
>> tkgrid(xcalc,doMoreStuff)
>>
>> # in doStuff_form.R:
>> tt2 <- tktoplevel()
>> tk.y<-tclVar()
>> y.edit<- tkentry(tt2, textvariable = tk.y, width = 5)
>> anscalc <- tkbutton(tt2, text = "calculate answer", command = function()
>>   tkmessageBox(message=as.numeric(tclvalue(tk.y)) *
>> as.numeric(tclvalue(tk.x)))
>> )
>> tkgrid(y.edit, anscalc)
>>
>> -Dan
>>
>> On Thu, May 12, 2016 at 8:30 AM, Dirk Eddelbuettel <edd at debian.org>
>> wrote:
>>
>> >
>> > On 11 May 2016 at 12:56, Dalthorp, Daniel wrote:
>> > | I have an R/tcltk application that is designed for use primarily by
>> > people
>> > | who don't know R and don't care to learn much about it. I'd like
>> users to
>> > | be able to use the software with a bare minimum interaction with R.
>> > |
>> > | Although the application has some 15000 lines of code in a couple
>> dozen
>> > .R
>> > | files, in essence I don't think it's much more than an elaborate
>> version
>> > of
>> > | the following:
>> > |
>> > | library(tcltk)
>> > | tt <- tktoplevel() # a required container for tk objects (textboxes,
>> > | radiobuttons, data tables, etc.)
>> > | tk.x <- tclVar() # a tcl version of user variable x
>> > | x.edit <- tkentry(tt, textvariable = tk.x, width = 5) # box for user
>> to
>> > | enter x value
>> > | x.lbl <- tklabel(tt, text = "Enter x value: ") # a fixed label
>> > | xcalc <- tkbutton(tt, text = "Calculate", command = function()
>> > | tkmessageBox(message = tclvalue(tk.x))) # button that prints x to R
>> > console
>> > | tkgrid(x.lbl, x.edit, xcalc) # a function that puts the textbox,
>> label,
>> > and
>> > | button onto the tk window
>> > |
>> > | The following doesn't work:
>> > | # tt, x.edit, x.lbl, xcalc all seem to me like an R objects that will
>> not
>> > | be modified, so I tried
>> > | devtools::use_data(tt, x.edit, x.lbl, xcalc, internal = F,
>> overwrite=T) #
>> > | (after defining them)
>> > | # tk.x is a variable that I want to assign a value to at the
>> beginning,
>> > but
>> > | user can later change the value:
>> > | devtools::use_data(tt, x.edit, x.lbl, xcalc, internal = F,
>> overwrite=T)
>> > |
>> > | The following does work, but it is not a good solution:
>> > | (1) define working directory as package/data
>> > | (2) create new tk windows via tkbutton commands = function()
>> > | source(filename)
>> > | This forces the user to use a pre-defined working directory. My
>> > application
>> > | fills that wd with several hundred functions and variables. If user
>> > changes
>> > | wd or changes values of variables that my app needs, the program
>> crashes.
>> > |
>> > | Any help would be greatly appreciated!
>> >
>> > I haven't seen the obvious stated:  Have you looked into creating a
>> > package?
>> >
>> > It can contain as much tcl/tk support code as you like,  etc pp.  And as
>> > you
>> > state you have '15000 lines of code in a couple dozen .R files' you are
>> > well
>> > passed the point where a package really is the best choice.
>> >
>> > Dirk
>> >
>> > --
>> > http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>> >
>>
>>
>>
>> --
>> Dan Dalthorp, PhD
>> USGS Forest and Rangeland Ecosystem Science Center
>> Forest Sciences Lab, Rm 189
>> 3200 SW Jefferson Way
>> Corvallis, OR 97331
>> ph: 541-750-0953
>> ddalthorp at usgs.gov
>>
>>         [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>
>


-- 
Dan Dalthorp, PhD
USGS Forest and Rangeland Ecosystem Science Center
Forest Sciences Lab, Rm 189
3200 SW Jefferson Way
Corvallis, OR 97331
ph: 541-750-0953
ddalthorp at usgs.gov

	[[alternative HTML version deleted]]


From jpnolan at american.edu  Tue May 17 18:06:17 2016
From: jpnolan at american.edu (John Nolan)
Date: Tue, 17 May 2016 12:06:17 -0400
Subject: [R-pkg-devel] Checking should be performed on sources prepared by
	'R CMD build'?
Message-ID: <OFE13048F5.09C7420A-ON85257FB6.0057E01A-85257FB6.00587773@american.edu>

I'm building a new package and got a warning I have not seen before.  This 
is probably simple, but I don't understand what the warning means.   


I'm using RCMD check from the command line and get the warning:   
"Checking should be performed on sources prepared by 'R CMD build'."    
The full console output is below.  The RCMD build was executed immediately 
before this and had no warnings or errors.


What does this warning mean?  It seems to refer to files "prepared" by R 
CMD build, perhaps .Rd  files?  If the answer to this question doesn't 
make it clear, how do I eliminate the message?

I've tried RSeek and Google, but only find CRAN build logs where many 
packages have this warning. 

A further puzzle:  when I submitted an update to a package that gave this 
warning during a build on my system, the CRAN checks to did not give any 
warnings?


John 

 
...........................................................................

 John P. Nolan
 Math/Stat Department
 227 Gray Hall
 American University
 4400 Massachusetts Avenue, NW
 Washington, DC 20016-8050

 jpnolan at american.edu
 202.885.3140 voice
 202.885.3155 fax
 http://academic2.american.edu/~jpnolan
 
...........................................................................



Console output (running Windows 10):


C:\JohnsWork\R-Packages\gensphere>RCMD build gensphere
* checking for file 'gensphere/DESCRIPTION' ... OK
* preparing 'gensphere':
* checking DESCRIPTION meta-information ... OK
* checking for LF line-endings in source and make files
* checking for empty or unneeded directories
* building 'gensphere_1.0.tar.gz'


C:\JohnsWork\R-Packages\gensphere>RCMD check --as-cran gensphere
* using log directory 'C:/JohnsWork/R-Packages/gensphere/gensphere.Rcheck'
* using R version 3.3.0 (2016-05-03)
* using platform: x86_64-w64-mingw32 (64-bit)
* using session charset: ISO8859-1
* using option '--as-cran'
* checking for file 'gensphere/DESCRIPTION' ... OK
* checking extension type ... Package
* this is package 'gensphere' version '1.0'
* checking CRAN incoming feasibility ... NOTE
Maintainer: 'John P Nolan <jpnolan at american.edu>'

New submission
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for executable files ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking whether package 'gensphere' can be installed ... OK
* checking installed package size ... OK
* checking package directory ... OK
* checking DESCRIPTION meta-information ... NOTE
Checking should be performed on sources prepared by 'R CMD build'. 
****************************  here is the warning *****************
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... 
OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies 
... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking loading without being on the library search path ... OK
* checking use of S3 registration ... OK
* checking dependencies in R code ... OK
* checking S3 generic/method consistency ... OK
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... OK
* checking Rd files ... OK
* checking Rd metadata ... OK
* checking Rd line widths ... OK
* checking Rd cross-references ... OK
* checking for missing documentation entries ... OK
* checking for code/documentation mismatches ... OK
* checking Rd \usage sections ... OK
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking examples ... OK
** found \donttest examples: check also with --run-donttest
* checking PDF version of manual ... OK
* DONE

Status: 2 NOTEs
See
  'C:/JohnsWork/R-Packages/gensphere/gensphere.Rcheck/00check.log'
for details.



	[[alternative HTML version deleted]]


From edd at debian.org  Tue May 17 18:10:31 2016
From: edd at debian.org (Dirk Eddelbuettel)
Date: Tue, 17 May 2016 11:10:31 -0500
Subject: [R-pkg-devel] Checking should be performed on sources prepared
	by	'R CMD build'?
In-Reply-To: <OFE13048F5.09C7420A-ON85257FB6.0057E01A-85257FB6.00587773@american.edu>
References: <OFE13048F5.09C7420A-ON85257FB6.0057E01A-85257FB6.00587773@american.edu>
Message-ID: <22331.17015.79094.846072@max.nulle.part>


On 17 May 2016 at 12:06, John Nolan wrote:
| I'm using RCMD check from the command line and get the warning:   
| "Checking should be performed on sources prepared by 'R CMD build'."    

[...]

| C:\JohnsWork\R-Packages\gensphere>RCMD build gensphere

Good.

| C:\JohnsWork\R-Packages\gensphere>RCMD check --as-cran gensphere

Bad -- typo. Happens to me once in a while too.  Try

    RCMD check --as-cran gensphere_1.0.tar.gz

instead, and the check will indeed use the _file_ you just created as opposed
to the _directory_ it came from.

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From carloscinelli at hotmail.com  Fri May 20 19:45:39 2016
From: carloscinelli at hotmail.com (carlos cinelli)
Date: Fri, 20 May 2016 14:45:39 -0300
Subject: [R-pkg-devel] Data for unit testing in packages
Message-ID: <CAP+==URKD20zfBHWzu-x2JBdW=12qH6Dp1aPhSybTVJFapCgpw@mail.gmail.com>

Do you guys have any suggestions on how to store data for unit testing?

I am implementing some methods to estimate matrix entries from the
marginals.  The input of the function is the row and column sums and the
output is a N x N matrix.

What I am doing today is constructing the expected output by hand.

One example I am testing is a 7 x 7 matrix, which is fine to just put the
code to create it on the test script.

However, I also want to create tests on larger examples, say a 1000 x 1000
matrix, in which it would not be very handy to leave the code on the script.

Do you have any suggestions or best practices for that?

Best,

Carlos

	[[alternative HTML version deleted]]


From bbolker at gmail.com  Fri May 20 20:34:45 2016
From: bbolker at gmail.com (Ben Bolker)
Date: Fri, 20 May 2016 14:34:45 -0400
Subject: [R-pkg-devel] Data for unit testing in packages
In-Reply-To: <CAP+==URKD20zfBHWzu-x2JBdW=12qH6Dp1aPhSybTVJFapCgpw@mail.gmail.com>
References: <CAP+==URKD20zfBHWzu-x2JBdW=12qH6Dp1aPhSybTVJFapCgpw@mail.gmail.com>
Message-ID: <573F58C5.3000504@gmail.com>


  I usually put it in inst/testdata and access it via system.file()


On 16-05-20 01:45 PM, carlos cinelli wrote:
> Do you guys have any suggestions on how to store data for unit testing?
> 
> I am implementing some methods to estimate matrix entries from the
> marginals.  The input of the function is the row and column sums and the
> output is a N x N matrix.
> 
> What I am doing today is constructing the expected output by hand.
> 
> One example I am testing is a 7 x 7 matrix, which is fine to just put the
> code to create it on the test script.
> 
> However, I also want to create tests on larger examples, say a 1000 x 1000
> matrix, in which it would not be very handy to leave the code on the script.
> 
> Do you have any suggestions or best practices for that?
> 
> Best,
> 
> Carlos
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From kasperdanielhansen at gmail.com  Fri May 20 21:01:40 2016
From: kasperdanielhansen at gmail.com (Kasper Daniel Hansen)
Date: Fri, 20 May 2016 15:01:40 -0400
Subject: [R-pkg-devel] Data for unit testing in packages
In-Reply-To: <573F58C5.3000504@gmail.com>
References: <CAP+==URKD20zfBHWzu-x2JBdW=12qH6Dp1aPhSybTVJFapCgpw@mail.gmail.com>
	<573F58C5.3000504@gmail.com>
Message-ID: <CAC2h7utrJ8CaAw9nWxR36_Aa-YdhxE+i5OuCaTtqcedRMmfqKA@mail.gmail.com>

Very similar here.  I use the RUnit framework, which has testing scripts in
  inst/unitTests

I put scripts for creating the test data in
  inst/testData
and save rda files into
  inst/unitTests

I create the data set by R CMD BATCH and I save the .Rout file which
creates the test data, so I have a record of which packages / versions was
used to create it.

Kasper

On Fri, May 20, 2016 at 2:34 PM, Ben Bolker <bbolker at gmail.com> wrote:

>
>   I usually put it in inst/testdata and access it via system.file()
>
>
> On 16-05-20 01:45 PM, carlos cinelli wrote:
> > Do you guys have any suggestions on how to store data for unit testing?
> >
> > I am implementing some methods to estimate matrix entries from the
> > marginals.  The input of the function is the row and column sums and the
> > output is a N x N matrix.
> >
> > What I am doing today is constructing the expected output by hand.
> >
> > One example I am testing is a 7 x 7 matrix, which is fine to just put the
> > code to create it on the test script.
> >
> > However, I also want to create tests on larger examples, say a 1000 x
> 1000
> > matrix, in which it would not be very handy to leave the code on the
> script.
> >
> > Do you have any suggestions or best practices for that?
> >
> > Best,
> >
> > Carlos
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From h.wickham at gmail.com  Fri May 20 21:03:02 2016
From: h.wickham at gmail.com (Hadley Wickham)
Date: Fri, 20 May 2016 21:03:02 +0200
Subject: [R-pkg-devel] Data for unit testing in packages
In-Reply-To: <CAP+==URKD20zfBHWzu-x2JBdW=12qH6Dp1aPhSybTVJFapCgpw@mail.gmail.com>
References: <CAP+==URKD20zfBHWzu-x2JBdW=12qH6Dp1aPhSybTVJFapCgpw@mail.gmail.com>
Message-ID: <CABdHhvFj3BTPY3HdzUq1yWFfUbn-ktuDx=RFvkH=0Hr3FKdkNA@mail.gmail.com>

If you're using testthat, check out expect_equal_to_reference.

Hadley

On Fri, May 20, 2016 at 7:45 PM, carlos cinelli
<carloscinelli at hotmail.com> wrote:
> Do you guys have any suggestions on how to store data for unit testing?
>
> I am implementing some methods to estimate matrix entries from the
> marginals.  The input of the function is the row and column sums and the
> output is a N x N matrix.
>
> What I am doing today is constructing the expected output by hand.
>
> One example I am testing is a 7 x 7 matrix, which is fine to just put the
> code to create it on the test script.
>
> However, I also want to create tests on larger examples, say a 1000 x 1000
> matrix, in which it would not be very handy to leave the code on the script.
>
> Do you have any suggestions or best practices for that?
>
> Best,
>
> Carlos
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel



-- 
http://hadley.nz


From lucasmation at gmail.com  Fri May 20 21:39:28 2016
From: lucasmation at gmail.com (Lucas Ferreira Mation)
Date: Fri, 20 May 2016 16:39:28 -0300
Subject: [R-pkg-devel] Bilingual (English and Portuguese) documentation in
	an R package
Message-ID: <CAA+7z9FSVF-T74bSSe3dtyjPZCN93Y6_fS97GVs3uQjK4BZYaw@mail.gmail.com>

Note: this was posted in this Stack Overflow
<http://stackoverflow.com/questions/37288823/bilingual-english-and-portuguese-documentation-in-an-r-package?noredirect=1#comment62102883_37288823>
question, where I was advised to cross post here.


I am writing a package to facilitate importing Brazilian socio-economic
microdata sets (Census, PNAD, etc). I foresee two distinct groups of users
of the package:

   -

   Users in Brazil, who may feel more at ease with the documentation in
   Portuguese. The probably can understand English to some extent, but a
   foreign language would probably make the package feel less "ergonomic".
   -

   The broader international users community, from whom English
   documentation may be a necessary condition.

Is it possible to write a package in a way that the documentation is
"bilingual" (English and Portuguese), and that the language shown to the
user will depend on their country/language settings?

Also,

Is that doable within the roxygen2 documentation framework?

I realise there is a tradeoff of making the package more user-friendly by
making it bilingual vs. the increased complexity and difficulty to
maintain. General comments on this tradeoff from previous expirience are
also welcome.

	[[alternative HTML version deleted]]


From murdoch.duncan at gmail.com  Sat May 21 01:06:01 2016
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Fri, 20 May 2016 19:06:01 -0400
Subject: [R-pkg-devel] Bilingual (English and Portuguese) documentation
 in an R package
In-Reply-To: <CAA+7z9FSVF-T74bSSe3dtyjPZCN93Y6_fS97GVs3uQjK4BZYaw@mail.gmail.com>
References: <CAA+7z9FSVF-T74bSSe3dtyjPZCN93Y6_fS97GVs3uQjK4BZYaw@mail.gmail.com>
Message-ID: <2ea06472-9622-44b8-01e2-74435a981ecd@gmail.com>

On 20/05/2016 3:39 PM, Lucas Ferreira Mation wrote:
> Note: this was posted in this Stack Overflow
> <http://stackoverflow.com/questions/37288823/bilingual-english-and-portuguese-documentation-in-an-r-package?noredirect=1#comment62102883_37288823>
> question, where I was advised to cross post here.
>
>
> I am writing a package to facilitate importing Brazilian socio-economic
> microdata sets (Census, PNAD, etc). I foresee two distinct groups of users
> of the package:
>
>    -
>
>    Users in Brazil, who may feel more at ease with the documentation in
>    Portuguese. The probably can understand English to some extent, but a
>    foreign language would probably make the package feel less "ergonomic".
>    -
>
>    The broader international users community, from whom English
>    documentation may be a necessary condition.
>
> Is it possible to write a package in a way that the documentation is
> "bilingual" (English and Portuguese), and that the language shown to the
> user will depend on their country/language settings?
>
> Also,
>
> Is that doable within the roxygen2 documentation framework?
>
> I realise there is a tradeoff of making the package more user-friendly by
> making it bilingual vs. the increased complexity and difficulty to
> maintain. General comments on this tradeoff from previous expirience are
> also welcome.

I don't think so.  It is possible (and has been supported for a long 
time, due to work by Brian Ripley) to have error and warning messages 
translated, but we don't currently have a way to have other 
documentation in multiple languages.

I would suggest that you write a vignette in Portuguese, which is 
definitely possible, though there is no special support for that.

There has been some effort among the translation teams to implement 
regular help files in other languages, but I don't know if it has 
progressed.

You could also write all your documentation in Portuguese in a separate 
version of the package, and your Brazilian users would install that version.

Duncan Murdoch


From carloscinelli at hotmail.com  Sat May 21 03:57:15 2016
From: carloscinelli at hotmail.com (carlos cinelli)
Date: Fri, 20 May 2016 22:57:15 -0300
Subject: [R-pkg-devel] Data for unit testing in packages
In-Reply-To: <CABdHhvFj3BTPY3HdzUq1yWFfUbn-ktuDx=RFvkH=0Hr3FKdkNA@mail.gmail.com>
References: <CAP+==URKD20zfBHWzu-x2JBdW=12qH6Dp1aPhSybTVJFapCgpw@mail.gmail.com>
	<CABdHhvFj3BTPY3HdzUq1yWFfUbn-ktuDx=RFvkH=0Hr3FKdkNA@mail.gmail.com>
Message-ID: <CAP+==UQfrnaEhTWWx8hgpZzMhBK4SAkyGsyEbUv0xDX772EAEw@mail.gmail.com>

Thank you guys, your answers helped me get started.
Best,
Carlos

On Fri, May 20, 2016 at 4:03 PM, Hadley Wickham <h.wickham at gmail.com> wrote:

> If you're using testthat, check out expect_equal_to_reference.
>
> Hadley
>
> On Fri, May 20, 2016 at 7:45 PM, carlos cinelli
> <carloscinelli at hotmail.com> wrote:
> > Do you guys have any suggestions on how to store data for unit testing?
> >
> > I am implementing some methods to estimate matrix entries from the
> > marginals.  The input of the function is the row and column sums and the
> > output is a N x N matrix.
> >
> > What I am doing today is constructing the expected output by hand.
> >
> > One example I am testing is a 7 x 7 matrix, which is fine to just put the
> > code to create it on the test script.
> >
> > However, I also want to create tests on larger examples, say a 1000 x
> 1000
> > matrix, in which it would not be very handy to leave the code on the
> script.
> >
> > Do you have any suggestions or best practices for that?
> >
> > Best,
> >
> > Carlos
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>
>
> --
> http://hadley.nz
>
>

	[[alternative HTML version deleted]]


From marius.hofert at uwaterloo.ca  Sat May 21 17:22:30 2016
From: marius.hofert at uwaterloo.ca (Marius Hofert)
Date: Sat, 21 May 2016 11:22:30 -0400
Subject: [R-pkg-devel] What's recommended to do on "Suggests or Enhances not
 in mainstream repositories: ..."?
Message-ID: <CAM3-KjbgUgzgGKHn9QEdwSU2yuDn+tKY9AGRK2mBKuSHPcUW=A@mail.gmail.com>

Hi,

I have (co-)developed two packages: 'qrmtools' and 'qrmdata'. The
latter contains data sets and is currently only available on R-Forge
(as it is larger than 5MB and thus not accepted for CRAN [although
there are much larger packages, but that's a different story...]).
'qrmtools' contains mainly tools that show what can be done with data
such as the one contained in 'qrmdata' -- and thus has 'qrmdata' in
Suggests. The check shows 'Suggests or Enhances not in mainstream
repositories: qrmdata'; I also added 'Additional_repositories:
http://r-forge.r-project.org/' to DESCRIPTION.... but of course
winbuilder reports errors as it can't find 'qrmdata'.

I'm wondering about what I am supposed to do: Remove everything about
'qrmdata' from 'qrmtools'? Clearly, the easiest solution, but that's a
bit dull as the 'qrmtools' can be nicely used to deal with the data
from 'qrmdata'.

How 'severe' is this issue for vignettes? I guess since they are
checked as well, one would run into the same problem. But then a
vignette even more so should show/replicate the functionality of a
paper, say, and there one would definitely like to work with the
data...

The only partially related thread I found was
https://stat.ethz.ch/pipermail/r-package-devel/2015q2/000002.html

In any case, I continue to pray to the R gods in the hope that the 5MB
limit will change for data-related packages (which are updated very
rarely) at some point in the future... Some 'adaptive limits' would be
nice: The less often you submit, the larger the data package can be
(for example), up to a certain larger limit more suitable for
data-related packages.

Any ideas on (all of) that?

Cheers,
Marius


From henrik.bengtsson at gmail.com  Sun May 22 01:45:19 2016
From: henrik.bengtsson at gmail.com (Henrik Bengtsson)
Date: Sat, 21 May 2016 16:45:19 -0700
Subject: [R-pkg-devel] What's recommended to do on "Suggests or Enhances
 not in mainstream repositories: ..."?
In-Reply-To: <CAM3-KjbgUgzgGKHn9QEdwSU2yuDn+tKY9AGRK2mBKuSHPcUW=A@mail.gmail.com>
References: <CAM3-KjbgUgzgGKHn9QEdwSU2yuDn+tKY9AGRK2mBKuSHPcUW=A@mail.gmail.com>
Message-ID: <CAFDcVCTDi=ko2RMC7aup3J_6DRc=_E2T0498J+SQYts04FsN-g@mail.gmail.com>

On Sat, May 21, 2016 at 8:22 AM, Marius Hofert
<marius.hofert at uwaterloo.ca> wrote:
> Hi,
>
> I have (co-)developed two packages: 'qrmtools' and 'qrmdata'. The
> latter contains data sets and is currently only available on R-Forge
> (as it is larger than 5MB and thus not accepted for CRAN [although
> there are much larger packages, but that's a different story...]).
> 'qrmtools' contains mainly tools that show what can be done with data
> such as the one contained in 'qrmdata' -- and thus has 'qrmdata' in
> Suggests. The check shows 'Suggests or Enhances not in mainstream
> repositories: qrmdata'; I also added 'Additional_repositories:
> http://r-forge.r-project.org/' to DESCRIPTION.... but of course
> winbuilder reports errors as it can't find 'qrmdata'.

First, there are plenty of CRAN package using:

Additional_repositories: http://r-forge.r-project.org/

is used, cf. https://github.com/search?q=org%3Acran+Additional_repositories%3A+http%3A%2F%2Fr-forge.r-project.org&type=Code

so this should be ok. I'm using it too.

>
> I'm wondering about what I am supposed to do: Remove everything about
> 'qrmdata' from 'qrmtools'? Clearly, the easiest solution, but that's a
> bit dull as the 'qrmtools' can be nicely used to deal with the data
> from 'qrmdata'.

It sounds that one of your vignettes, examples or package tests
requires the qrmdata package.  It is ok to use:

Suggests: qrmdata

but then you should make sure it is truly optional throughout, i.e. use

if (require("qrmdata")) {
  ## Use qrmdata functions here
}

in your tests, examples etc.

This is common practice. See also Writing R Extensions.

Maybe there's something else to it?  It would help clarify your
problem if we could see the R CMD check issues and the code (online
repository?).

My $.02

Henrik

>
> How 'severe' is this issue for vignettes? I guess since they are
> checked as well, one would run into the same problem. But then a
> vignette even more so should show/replicate the functionality of a
> paper, say, and there one would definitely like to work with the
> data...
>
> The only partially related thread I found was
> https://stat.ethz.ch/pipermail/r-package-devel/2015q2/000002.html
>
> In any case, I continue to pray to the R gods in the hope that the 5MB
> limit will change for data-related packages (which are updated very
> rarely) at some point in the future... Some 'adaptive limits' would be
> nice: The less often you submit, the larger the data package can be
> (for example), up to a certain larger limit more suitable for
> data-related packages.
>
> Any ideas on (all of) that?
>
> Cheers,
> Marius
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From marius.hofert at uwaterloo.ca  Sun May 22 05:35:27 2016
From: marius.hofert at uwaterloo.ca (Marius Hofert)
Date: Sat, 21 May 2016 23:35:27 -0400
Subject: [R-pkg-devel] What's recommended to do on "Suggests or Enhances
 not in mainstream repositories: ..."?
In-Reply-To: <08ecf74341704e9d85b0ffb2afda3645@CONNHUB4.connect.uwaterloo.ca>
References: <CAM3-KjbgUgzgGKHn9QEdwSU2yuDn+tKY9AGRK2mBKuSHPcUW=A@mail.gmail.com>
	<08ecf74341704e9d85b0ffb2afda3645@CONNHUB4.connect.uwaterloo.ca>
Message-ID: <CAM3-KjYQQaL5SLbvyH=GDDqfmFwh2vQL0rBWRbiTnBwxZ9rMHA@mail.gmail.com>

On Sat, May 21, 2016 at 7:45 PM, Henrik Bengtsson
<henrik.bengtsson at gmail.com> wrote:
> On Sat, May 21, 2016 at 8:22 AM, Marius Hofert
> <marius.hofert at uwaterloo.ca> wrote:
>> Hi,
>>
>> I have (co-)developed two packages: 'qrmtools' and 'qrmdata'. The
>> latter contains data sets and is currently only available on R-Forge
>> (as it is larger than 5MB and thus not accepted for CRAN [although
>> there are much larger packages, but that's a different story...]).
>> 'qrmtools' contains mainly tools that show what can be done with data
>> such as the one contained in 'qrmdata' -- and thus has 'qrmdata' in
>> Suggests. The check shows 'Suggests or Enhances not in mainstream
>> repositories: qrmdata'; I also added 'Additional_repositories:
>> http://r-forge.r-project.org/' to DESCRIPTION.... but of course
>> winbuilder reports errors as it can't find 'qrmdata'.
>
> First, there are plenty of CRAN package using:
>
> Additional_repositories: http://r-forge.r-project.org/
>
> is used, cf. https://github.com/search?q=org%3Acran+Additional_repositories%3A+http%3A%2F%2Fr-forge.r-project.org&type=Code
>
> so this should be ok. I'm using it too.
>
>>
>> I'm wondering about what I am supposed to do: Remove everything about
>> 'qrmdata' from 'qrmtools'? Clearly, the easiest solution, but that's a
>> bit dull as the 'qrmtools' can be nicely used to deal with the data
>> from 'qrmdata'.
>
> It sounds that one of your vignettes, examples or package tests
> requires the qrmdata package.  It is ok to use:
>
> Suggests: qrmdata
>
> but then you should make sure it is truly optional throughout, i.e. use
>
> if (require("qrmdata")) {
>   ## Use qrmdata functions here
> }

Hi Henrik,

Thanks a lot. That's indeed a good idea.

Cheers,
Marius


>
> in your tests, examples etc.
>
> This is common practice. See also Writing R Extensions.
>
> Maybe there's something else to it?  It would help clarify your
> problem if we could see the R CMD check issues and the code (online
> repository?).
>
> My $.02
>
> Henrik
>
>>
>> How 'severe' is this issue for vignettes? I guess since they are
>> checked as well, one would run into the same problem. But then a
>> vignette even more so should show/replicate the functionality of a
>> paper, say, and there one would definitely like to work with the
>> data...
>>
>> The only partially related thread I found was
>> https://stat.ethz.ch/pipermail/r-package-devel/2015q2/000002.html
>>
>> In any case, I continue to pray to the R gods in the hope that the 5MB
>> limit will change for data-related packages (which are updated very
>> rarely) at some point in the future... Some 'adaptive limits' would be
>> nice: The less often you submit, the larger the data package can be
>> (for example), up to a certain larger limit more suitable for
>> data-related packages.
>>
>> Any ideas on (all of) that?
>>
>> Cheers,
>> Marius
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From pedro.aphalo at helsinki.fi  Sun May 22 09:58:03 2016
From: pedro.aphalo at helsinki.fi (Pedro Aphalo)
Date: Sat, 21 May 2016 21:58:03 -1000
Subject: [R-pkg-devel] testthat and locales / tz
Message-ID: <4714f3f8-b3bc-8794-d408-9e8b72fe3d15@helsinki.fi>

Is there a way of making automatic and portable across OSs the running 
of testthat test cases in a package under more than one time zone or locale?

One of my packages was passing tests locally but not on CRAN winbuilder. 
The bug was real but would not be diagnosed under my own time zone.

Thanks!

Pedro.

-- 
------------------------------------------------------------------------
Pedro J. Aphalo
University Lecturer, Principal Investigator
(Office 3805, Biocenter 3, Viikinkaari 1)

Department of Biosciences
Plant Biology
P.O. Box 65
00014 University of Helsinki
Finland

e-mail: pedro.aphalo at helsinki.fi <mailto:pedro.aphalo at helsinki.fi>
Tel. (mobile) +358 50 4150623
Tel. (office) +358 2941 57897

------------------------------------------------------------------------
*Web sites and blogs*
Web site (research group): http://blogs.helsinki.fi/senpep-blog/
Web site (own teaching): http://www.helsinki.fi/people/pedro.aphalo/
Blog (for plant science students): 
http://www.r4photobiology.info/blog4students/
Web site (using R in photobiology): http://www.r4photobiology.info/
------------------------------------------------------------------------
*Societies*
UV4Plants <http://www.uv4plants.org/> (communications officer), PSB 
<http://www.plantbehavior.org/> (member), ESP 
<http://www.photobiology.eu/> (member) SEB <http://www.sebiology.org/> 
(member), BES <http://www.britishecologicalsociety.org/> (member), SPPS 
<http://www.spps.fi/> (member), SMS 
<http://www.metsatieteellinenseura.fi/english> (member), TUG 
<http://tug.org/> (member), FOAS <http://www.foastat.org/> (member).
------------------------------------------------------------------------

	[[alternative HTML version deleted]]


From balamut2 at illinois.edu  Sun May 22 02:49:46 2016
From: balamut2 at illinois.edu (Balamuta, James Joseph)
Date: Sun, 22 May 2016 00:49:46 +0000
Subject: [R-pkg-devel] What's recommended to do on "Suggests or Enhances
 not in mainstream repositories: ..."?
In-Reply-To: <CAM3-KjbgUgzgGKHn9QEdwSU2yuDn+tKY9AGRK2mBKuSHPcUW=A@mail.gmail.com>
References: <CAM3-KjbgUgzgGKHn9QEdwSU2yuDn+tKY9AGRK2mBKuSHPcUW=A@mail.gmail.com>
Message-ID: <E56C8B45-4922-4034-898B-52E531EDA02C@illinois.edu>

Greetings and Salutations Marius,

For implementation help with ?Additional_repositories?, which lacks a bit of documentation, please see: 
http://thecoatlessprofessor.com/programming/r-data-packages-in-external-data-repositories-using-the-additional_repositories-field/

Under this approach, I am able use `imudata` package [https://github.com/smac-group/imudata] to build the vignettes within the `gmwm` package [https://github.com/smac-group/gmwm] with the suggests field filled in as: ?Suggests: imudata?. Otherwise, CRAN would not accept the `gmwm` package as-is. 

(Regarding the package size claim, there really are not that many packages greater than 5 mb? For some figures on this, see: http://thecoatlessprofessor.com/programming/size-and-limitations-of-packages-on-cran/ )

Sincerely,

JJB

On 5/21/16, 10:22 AM, "R-package-devel on behalf of Marius Hofert" <r-package-devel-bounces at r-project.org on behalf of marius.hofert at uwaterloo.ca> wrote:

>Hi,
>
>I have (co-)developed two packages: 'qrmtools' and 'qrmdata'. The
>latter contains data sets and is currently only available on R-Forge
>(as it is larger than 5MB and thus not accepted for CRAN [although
>there are much larger packages, but that's a different story...]).
>'qrmtools' contains mainly tools that show what can be done with data
>such as the one contained in 'qrmdata' -- and thus has 'qrmdata' in
>Suggests. The check shows 'Suggests or Enhances not in mainstream
>repositories: qrmdata'; I also added 'Additional_repositories:
>http://r-forge.r-project.org/' to DESCRIPTION.... but of course
>winbuilder reports errors as it can't find 'qrmdata'.
>
>I'm wondering about what I am supposed to do: Remove everything about
>'qrmdata' from 'qrmtools'? Clearly, the easiest solution, but that's a
>bit dull as the 'qrmtools' can be nicely used to deal with the data
>from 'qrmdata'.
>
>How 'severe' is this issue for vignettes? I guess since they are
>checked as well, one would run into the same problem. But then a
>vignette even more so should show/replicate the functionality of a
>paper, say, and there one would definitely like to work with the
>data...
>
>The only partially related thread I found was
>https://stat.ethz.ch/pipermail/r-package-devel/2015q2/000002.html
>
>In any case, I continue to pray to the R gods in the hope that the 5MB
>limit will change for data-related packages (which are updated very
>rarely) at some point in the future... Some 'adaptive limits' would be
>nice: The less often you submit, the larger the data package can be
>(for example), up to a certain larger limit more suitable for
>data-related packages.
>
>Any ideas on (all of) that?
>
>Cheers,
>Marius
>
>______________________________________________
>R-package-devel at r-project.org mailing list
>https://stat.ethz.ch/mailman/listinfo/r-package-devel


From glennmschultz at me.com  Tue May 24 21:53:27 2016
From: glennmschultz at me.com (Glenn Schultz)
Date: Tue, 24 May 2016 14:53:27 -0500
Subject: [R-pkg-devel] Which is correct ImportFrom or ImportMethodsFrom
Message-ID: <63505139-19B3-404A-B157-84F0370F537B@me.com>

All,

My question is 

ImportMethodsFrom package foo
-or-
ImportFrom package foo

Which is correct?

I have a package BondLab.  I am creating new package which uses BondLab classes, generics, and methods.  The new package extends S4 classes to a S4 new class.  The getters are created per BioConductor getting started with S4.  I can either: 

importMethodsFrom BondLab foo 
-or- 
importFrom BondLab foo.  

Both work as far a R CMD check not giving a warning and the getters work as well in the new package for either case.  Given that both seem to work what is the technically correct way to do this ImportMethodsFrom or ImportFrom.  This maybe a trivial question but I want to make sure I am following the correct protocol.  What is the difference between the two?

Thanks,
Glenn

From ddalthorp at usgs.gov  Wed May 25 23:59:53 2016
From: ddalthorp at usgs.gov (Dalthorp, Daniel)
Date: Wed, 25 May 2016 14:59:53 -0700
Subject: [R-pkg-devel] "not resolved from current namespace"...sometimes!
Message-ID: <CAJeYpE8i_1GECsKttB0f5+jg1ggVyGWA=g_bjq9Os9zgzUMmiw@mail.gmail.com>

Hi all,
I'm trying to build a package that makes use of the function
actual::pllogis. Sometimes the build works fine and I can use the function
without any problems. After other builds I get:

Error in .External("actuar_do_dpq", "pllogis", q, shape, scale, lower.tail,
 :    "actuar_do_dpq" not resolved from current namespace (actuar)

when I try to use the function. Can anyone help me understand what's going
on here?

[I'm working in Windows 7 and using devtools::build(binary = T) with R
3.2.3 and actuar built under R 3.2.5.]

Thanks.

-Dan

-- 
Dan Dalthorp, PhD
USGS Forest and Rangeland Ecosystem Science Center
Forest Sciences Lab, Rm 189
3200 SW Jefferson Way
Corvallis, OR 97331
ph: 541-750-0953
ddalthorp at usgs.gov

	[[alternative HTML version deleted]]


From roy.mendelssohn at noaa.gov  Tue May 31 01:10:13 2016
From: roy.mendelssohn at noaa.gov (Roy Mendelssohn - NOAA Federal)
Date: Mon, 30 May 2016 16:10:13 -0700
Subject: [R-pkg-devel] Getting a package ready for CRAN - some questions
Message-ID: <825D75C5-C58F-4201-AF48-533356C69527@noaa.gov>

Hi All:

I am in the midst of some minor revisions to my xtractomatic package, which up till now has only been on github.  Since ncdf4 for Windows is now available from CRAN  (and many thanks to whomever is responsible for that) I thought I would try to get it into CRAN.  Some questions:

1.  The vignette uses a lot of packages that the main code does not - I put those in the DESCRIPTION file, under  ?Suggests?, is this correct?

2. The vignette uses ggfortify, which was in CRAN for 3.2.x, but is not in CRAN for 3.3.x.  Do I assume then that a submission will fail, or will the submission work but just without the vignette?  Or can I include in the vignette the command to install from github  (using devtools), and then that will build?

3. On a remote build, my vignette is likely to fail to build.  That is because the vignette downloads a large amount of data in many requests, and if for any reason any one of the downloads fail or times out, the vignette build will fail.  As above, will this cause the entire submission to fail, or just the vignette to fail?  And is there anyway to provide a pre-built vignette in the submission?

I am asking all of this so I am certain of the answers.  I know the CRAN team does a lot of work, and the more I can be certain that my submission will work the easier it will be for everybody.

Thanks,

-Roy



**********************
"The contents of this message do not reflect any position of the U.S. Government or NOAA."
**********************
Roy Mendelssohn
Supervisory Operations Research Analyst
NOAA/NMFS
Environmental Research Division
Southwest Fisheries Science Center
***Note new address and phone***
110 Shaffer Road
Santa Cruz, CA 95060
Phone: (831)-420-3666
Fax: (831) 420-3980
e-mail: Roy.Mendelssohn at noaa.gov www: http://www.pfeg.noaa.gov/

"Old age and treachery will overcome youth and skill."
"From those who have been given much, much will be expected" 
"the arc of the moral universe is long, but it bends toward justice" -MLK Jr.


From h.wickham at gmail.com  Tue May 31 19:21:42 2016
From: h.wickham at gmail.com (Hadley Wickham)
Date: Tue, 31 May 2016 13:21:42 -0400
Subject: [R-pkg-devel] Getting a package ready for CRAN - some questions
In-Reply-To: <825D75C5-C58F-4201-AF48-533356C69527@noaa.gov>
References: <825D75C5-C58F-4201-AF48-533356C69527@noaa.gov>
Message-ID: <CABdHhvFu6O9jB94OhUubYYAhSaNTp9OsqHG435W8+sYV=HXr0w@mail.gmail.com>

On Mon, May 30, 2016 at 7:10 PM, Roy Mendelssohn - NOAA Federal
<roy.mendelssohn at noaa.gov> wrote:
> Hi All:
>
> I am in the midst of some minor revisions to my xtractomatic package, which up till now has only been on github.  Since ncdf4 for Windows is now available from CRAN  (and many thanks to whomever is responsible for that) I thought I would try to get it into CRAN.  Some questions:
>
> 1.  The vignette uses a lot of packages that the main code does not - I put those in the DESCRIPTION file, under  ?Suggests?, is this correct?

Yes.

> 2. The vignette uses ggfortify, which was in CRAN for 3.2.x, but is not in CRAN for 3.3.x.  Do I assume then that a submission will fail, or will the submission work but just without the vignette?  Or can I include in the vignette the command to install from github  (using devtools), and then that will build?

You definitely do not want to install packages when running a vignette.

Given that ggfortify has been archived
(https://cran.r-project.org/web/packages/ggfortify/index.html), I'd
recommend using a different package (maybe broom?).

> 3. On a remote build, my vignette is likely to fail to build.  That is because the vignette downloads a large amount of data in many requests, and if for any reason any one of the downloads fail or times out, the vignette build will fail.  As above, will this cause the entire submission to fail, or just the vignette to fail?  And is there anyway to provide a pre-built vignette in the submission?

You shouldn't be downloading data in a vignette. Can you make a
separate data package that just bundles the data?

Hadley

-- 
http://hadley.nz


From berryboessenkool at hotmail.com  Wed Jun  1 11:01:11 2016
From: berryboessenkool at hotmail.com (Berry Boessenkool)
Date: Wed, 1 Jun 2016 11:01:11 +0200
Subject: [R-pkg-devel] Getting a package ready for CRAN - some questions
In-Reply-To: <CABdHhvFu6O9jB94OhUubYYAhSaNTp9OsqHG435W8+sYV=HXr0w@mail.gmail.com>
References: <825D75C5-C58F-4201-AF48-533356C69527@noaa.gov>,
	<CABdHhvFu6O9jB94OhUubYYAhSaNTp9OsqHG435W8+sYV=HXr0w@mail.gmail.com>
Message-ID: <DUB127-W4007C1FC894D2D9C99455CD5470@phx.gbl>


Regarding data in vignettes:

In one of my vignettes I have a simulation that takes too much computing time.
The code is excluded from being executed when building the vignette, but if it's run manually, it saves the result as an Rdata file (in the folder "vignettes").
The next (executed) block of code then loads this small file and visualizes it.
https://cran.r-project.org/web/packages/extremeStat/vignettes/extremeStat.html#truncation-effect

I'm absolutely NOT sure if this is good practice, but it worked well for me...

Berry

PS: If I'm doing stupid stuff, feel free to tell me...




> From: h.wickham at gmail.com
> Date: Tue, 31 May 2016 13:21:42 -0400
> To: roy.mendelssohn at noaa.gov
> CC: r-package-devel at r-project.org
> Subject: Re: [R-pkg-devel] Getting a package ready for CRAN - some questions
> 
> On Mon, May 30, 2016 at 7:10 PM, Roy Mendelssohn - NOAA Federal
> <roy.mendelssohn at noaa.gov> wrote:
> > Hi All:
> >
> > I am in the midst of some minor revisions to my xtractomatic package, which up till now has only been on github.  Since ncdf4 for Windows is now available from CRAN  (and many thanks to whomever is responsible for that) I thought I would try to get it into CRAN.  Some questions:
> >
> > 1.  The vignette uses a lot of packages that the main code does not - I put those in the DESCRIPTION file, under  ?Suggests?, is this correct?
> 
> Yes.
> 
> > 2. The vignette uses ggfortify, which was in CRAN for 3.2.x, but is not in CRAN for 3.3.x.  Do I assume then that a submission will fail, or will the submission work but just without the vignette?  Or can I include in the vignette the command to install from github  (using devtools), and then that will build?
> 
> You definitely do not want to install packages when running a vignette.
> 
> Given that ggfortify has been archived
> (https://cran.r-project.org/web/packages/ggfortify/index.html), I'd
> recommend using a different package (maybe broom?).
> 
> > 3. On a remote build, my vignette is likely to fail to build.  That is because the vignette downloads a large amount of data in many requests, and if for any reason any one of the downloads fail or times out, the vignette build will fail.  As above, will this cause the entire submission to fail, or just the vignette to fail?  And is there anyway to provide a pre-built vignette in the submission?
> 
> You shouldn't be downloading data in a vignette. Can you make a
> separate data package that just bundles the data?
> 
> Hadley
> 
> -- 
> http://hadley.nz
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
 		 	   		  
	[[alternative HTML version deleted]]


From daattali at gmail.com  Wed Jun  1 10:55:00 2016
From: daattali at gmail.com (Dean Attali)
Date: Wed, 1 Jun 2016 01:55:00 -0700
Subject: [R-pkg-devel] Package was removed from CRAN "despite reminders" --
 but I did not receive any such messages
Message-ID: <CA+j8Z+naEhVTrmBB_-eWPTNnWmiTgwTk97wQZNS6c4x6rfdBgA@mail.gmail.com>

My package 'ddpcr' was accepted into CRAN in 2016-02-19 and then updated on
2016-03-17.  There were no errors or warnings or notes in my submission and
it was accepted right away.

I just tried going to its CRAN page and I found out that the package was
removed a month ago.
https://cran.r-project.org/web/packages/ddpcr/index.html

The text on the page reads "Archived on 2016-05-02 as check problems were
not corrected despite reminders."  I'm not sure what check problems it's
referring to as I never received any communication from CRAN or from
anybody else about this.  Neither did I receive any "reminders".

Is there any way for me to see what problems exactly it was having?  Is it
ok for me to try to just re-submit the package?

Thanks

---
http://deanattali.com

	[[alternative HTML version deleted]]


From mark.vanderloo at gmail.com  Wed Jun  1 15:31:52 2016
From: mark.vanderloo at gmail.com (Mark van der Loo)
Date: Wed, 01 Jun 2016 13:31:52 +0000
Subject: [R-pkg-devel] Package was removed from CRAN "despite reminders"
 -- but I did not receive any such messages
In-Reply-To: <CA+j8Z+naEhVTrmBB_-eWPTNnWmiTgwTk97wQZNS6c4x6rfdBgA@mail.gmail.com>
References: <CA+j8Z+naEhVTrmBB_-eWPTNnWmiTgwTk97wQZNS6c4x6rfdBgA@mail.gmail.com>
Message-ID: <CAOKDuOh9443CmW-F9TGczd_7j8vY4FHjJruqpw5te0TLFi+uKA@mail.gmail.com>

Mail the CRAN team.

On Wed, Jun 1, 2016, 10:24 Dean Attali <daattali at gmail.com> wrote:

> My package 'ddpcr' was accepted into CRAN in 2016-02-19 and then updated on
> 2016-03-17.  There were no errors or warnings or notes in my submission and
> it was accepted right away.
>
> I just tried going to its CRAN page and I found out that the package was
> removed a month ago.
> https://cran.r-project.org/web/packages/ddpcr/index.html
>
> The text on the page reads "Archived on 2016-05-02 as check problems were
> not corrected despite reminders."  I'm not sure what check problems it's
> referring to as I never received any communication from CRAN or from
> anybody else about this.  Neither did I receive any "reminders".
>
> Is there any way for me to see what problems exactly it was having?  Is it
> ok for me to try to just re-submit the package?
>
> Thanks
>
> ---
> http://deanattali.com
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From pdalgd at gmail.com  Wed Jun  1 16:50:37 2016
From: pdalgd at gmail.com (peter dalgaard)
Date: Wed, 1 Jun 2016 16:50:37 +0200
Subject: [R-pkg-devel] Package was removed from CRAN "despite reminders"
	-- but I did not receive any such messages
In-Reply-To: <CAOKDuOh9443CmW-F9TGczd_7j8vY4FHjJruqpw5te0TLFi+uKA@mail.gmail.com>
References: <CA+j8Z+naEhVTrmBB_-eWPTNnWmiTgwTk97wQZNS6c4x6rfdBgA@mail.gmail.com>
	<CAOKDuOh9443CmW-F9TGczd_7j8vY4FHjJruqpw5te0TLFi+uKA@mail.gmail.com>
Message-ID: <90FDBE23-1E1E-4018-BC13-F229F8E4F3B8@gmail.com>

& check your spam folders...

-pd

> On 01 Jun 2016, at 15:31 , Mark van der Loo <mark.vanderloo at gmail.com> wrote:
> 
> Mail the CRAN team.
> 
> On Wed, Jun 1, 2016, 10:24 Dean Attali <daattali at gmail.com> wrote:
> 
>> My package 'ddpcr' was accepted into CRAN in 2016-02-19 and then updated on
>> 2016-03-17.  There were no errors or warnings or notes in my submission and
>> it was accepted right away.
>> 
>> I just tried going to its CRAN page and I found out that the package was
>> removed a month ago.
>> https://cran.r-project.org/web/packages/ddpcr/index.html
>> 
>> The text on the page reads "Archived on 2016-05-02 as check problems were
>> not corrected despite reminders."  I'm not sure what check problems it's
>> referring to as I never received any communication from CRAN or from
>> anybody else about this.  Neither did I receive any "reminders".
>> 
>> Is there any way for me to see what problems exactly it was having?  Is it
>> ok for me to try to just re-submit the package?
>> 
>> Thanks
>> 
>> ---
>> http://deanattali.com
>> 
>>        [[alternative HTML version deleted]]
>> 
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> 
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From henrik.bengtsson at gmail.com  Thu Jun  2 00:20:52 2016
From: henrik.bengtsson at gmail.com (Henrik Bengtsson)
Date: Wed, 1 Jun 2016 15:20:52 -0700
Subject: [R-pkg-devel] Getting a package ready for CRAN - some questions
In-Reply-To: <DUB127-W4007C1FC894D2D9C99455CD5470@phx.gbl>
References: <825D75C5-C58F-4201-AF48-533356C69527@noaa.gov>
	<CABdHhvFu6O9jB94OhUubYYAhSaNTp9OsqHG435W8+sYV=HXr0w@mail.gmail.com>
	<DUB127-W4007C1FC894D2D9C99455CD5470@phx.gbl>
Message-ID: <CAFDcVCQw2U4Yni2Z5x4wCg4Rxf+L_=kLW02BdANHtPKmd4XKCQ@mail.gmail.com>

If it's not feasible to create a fast vignette or to avoid downloading
files, an alternative is to pre-generate the vignette and include it
as a static PDF/HTML vignette, cf.
https://cran.r-project.org/package=R.rsp.  If it's a LaTeX-based
vignette (e.g. Sweave/knitr), you could pre-generate the LaTeX
document and any figures and the use a plain-LaTeX vignette to include
it in the package (also supported by the R.rsp package).  For
reproducibility, I would include the root/source vignette in the
package as well, e.g. in inst/full-vignettes/ with instructions and/or
a function on how to rebuild it.

I second Hadley's recommendation on adjusting it such that you don't
depend on deprecated/archived CRAN packages (unless there is a plan
for that package to reappear on CRAN any time soon).


Berry, it sounds like you're caching computational expensive results
on file such that succeeding runs will load the cached results instead
of redoing them from scratch each time.  This sounds like a perfectly
fine solution to me.  To me it would be fine to also include that
cached file in the package itself (e.g. inst/cache/) so that it is
picked up also the first time the vignette is built.  You can make it
conditional on a system environment variable such that it is possible
to build it completely from scratch, e.g.

if (Sys.getenv("_R_VIGNETTE_FULL_") != "TRUE") {
  # Load cached data here
}

Some may argue that you're package is not fully tested this way, but
that depends on how well your package tests/ are written.  I tend to
look at examples() and vignettes as demos, and tests/ as actually
tests.  All should of course pass R CMD check and run, but the tests/
are what really test the package.

/Henrik

On Wed, Jun 1, 2016 at 2:01 AM, Berry Boessenkool
<berryboessenkool at hotmail.com> wrote:
>
> Regarding data in vignettes:
>
> In one of my vignettes I have a simulation that takes too much computing time.
> The code is excluded from being executed when building the vignette, but if it's run manually, it saves the result as an Rdata file (in the folder "vignettes").
> The next (executed) block of code then loads this small file and visualizes it.
> https://cran.r-project.org/web/packages/extremeStat/vignettes/extremeStat.html#truncation-effect
>
> I'm absolutely NOT sure if this is good practice, but it worked well for me...
>
> Berry
>
> PS: If I'm doing stupid stuff, feel free to tell me...
>
>
>
>
>> From: h.wickham at gmail.com
>> Date: Tue, 31 May 2016 13:21:42 -0400
>> To: roy.mendelssohn at noaa.gov
>> CC: r-package-devel at r-project.org
>> Subject: Re: [R-pkg-devel] Getting a package ready for CRAN - some questions
>>
>> On Mon, May 30, 2016 at 7:10 PM, Roy Mendelssohn - NOAA Federal
>> <roy.mendelssohn at noaa.gov> wrote:
>> > Hi All:
>> >
>> > I am in the midst of some minor revisions to my xtractomatic package, which up till now has only been on github.  Since ncdf4 for Windows is now available from CRAN  (and many thanks to whomever is responsible for that) I thought I would try to get it into CRAN.  Some questions:
>> >
>> > 1.  The vignette uses a lot of packages that the main code does not - I put those in the DESCRIPTION file, under  ?Suggests?, is this correct?
>>
>> Yes.
>>
>> > 2. The vignette uses ggfortify, which was in CRAN for 3.2.x, but is not in CRAN for 3.3.x.  Do I assume then that a submission will fail, or will the submission work but just without the vignette?  Or can I include in the vignette the command to install from github  (using devtools), and then that will build?
>>
>> You definitely do not want to install packages when running a vignette.
>>
>> Given that ggfortify has been archived
>> (https://cran.r-project.org/web/packages/ggfortify/index.html), I'd
>> recommend using a different package (maybe broom?).
>>
>> > 3. On a remote build, my vignette is likely to fail to build.  That is because the vignette downloads a large amount of data in many requests, and if for any reason any one of the downloads fail or times out, the vignette build will fail.  As above, will this cause the entire submission to fail, or just the vignette to fail?  And is there anyway to provide a pre-built vignette in the submission?
>>
>> You shouldn't be downloading data in a vignette. Can you make a
>> separate data package that just bundles the data?
>>
>> Hadley
>>
>> --
>> http://hadley.nz
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>         [[alternative HTML version deleted]]
>
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From dmarcelino at live.com  Sat Jun  4 22:13:05 2016
From: dmarcelino at live.com (Daniel Marcelino)
Date: Sat, 4 Jun 2016 17:13:05 -0300
Subject: [R-pkg-devel] Build fails at Travis CI
Message-ID: <CAAjbdiJYUJkBdeoirFPiNrjZ6TDcV608cZ_cCV1dQ4Di4VcNbQ@mail.gmail.com>

Hi,
I wonder if anyone has experienced this issue with Travis CI. The
package I'm committing is just fine, it passes all the CRAN devel
checks, but fails at Travis building checks.
I realized that if I git commit without  the "Collate" section, it
passes. However, I've no clue why.
I will appreciate any help on this.

Daniel
----
"Nam et ipsa scientia potestas est"


From luckbuttered at gmail.com  Sat Jun  4 18:49:02 2016
From: luckbuttered at gmail.com (Luck Buttered)
Date: Sat, 4 Jun 2016 11:49:02 -0500
Subject: [R-pkg-devel] Submit second version of R package to CRAN
Message-ID: <CAGRPoRRJmqsgJoQaAcC=rzUDPHD22Q2oNJogOiK=VOk7bgCYzw@mail.gmail.com>

I am updating the version of an R package I submitted last year on CRAN and
came across one question that I would be grateful to seek any input about:

I have never submitted an updated version of a package to CRAN. I am
considering following a similar process to what I did to submit my original
version of the package to CRAN. That is, I plan to use devtools::release()
and include a note in a file called cran-comments.md to indicate that this
is not an original version submission, but rather, an updated version
submission. I found this advice on Hadley Wickham's site (
http://r-pkgs.had.co.nz/release.html), although it was recommended for
first-time submission, and I was not sure whether this advice could extend
to update submissions as well.

Thank you for any advice!...

L.

	[[alternative HTML version deleted]]


From ligges at statistik.tu-dortmund.de  Sun Jun  5 08:53:06 2016
From: ligges at statistik.tu-dortmund.de (Uwe Ligges)
Date: Sun, 5 Jun 2016 08:53:06 +0200
Subject: [R-pkg-devel] Submit second version of R package to CRAN
In-Reply-To: <CAGRPoRRJmqsgJoQaAcC=rzUDPHD22Q2oNJogOiK=VOk7bgCYzw@mail.gmail.com>
References: <CAGRPoRRJmqsgJoQaAcC=rzUDPHD22Q2oNJogOiK=VOk7bgCYzw@mail.gmail.com>
Message-ID: <0e3d6bcb-5cca-a54b-83fa-28d4815723ae@statistik.tu-dortmund.de>

I do not know devtools:
If it worked for you for the initial submission and the CRAN team did 
not complain, please resubmit in the same way - and keep in mind you 
want to check the package in advance using a very recent version of R.

Best,
Uwe Ligges

On 04.06.2016 18:49, Luck Buttered wrote:
> I am updating the version of an R package I submitted last year on CRAN and
> came across one question that I would be grateful to seek any input about:
>
> I have never submitted an updated version of a package to CRAN. I am
> considering following a similar process to what I did to submit my original
> version of the package to CRAN. That is, I plan to use devtools::release()
> and include a note in a file called cran-comments.md to indicate that this
> is not an original version submission, but rather, an updated version
> submission. I found this advice on Hadley Wickham's site (
> http://r-pkgs.had.co.nz/release.html), although it was recommended for
> first-time submission, and I was not sure whether this advice could extend
> to update submissions as well.
>
> Thank you for any advice!...
>
> L.
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From jeblundell at doctors.org.uk  Sun Jun  5 17:32:27 2016
From: jeblundell at doctors.org.uk (Jim Blundell)
Date: Sun, 5 Jun 2016 16:32:27 +0100
Subject: [R-pkg-devel] Build fails at Travis CI
In-Reply-To: <CAAjbdiJYUJkBdeoirFPiNrjZ6TDcV608cZ_cCV1dQ4Di4VcNbQ@mail.gmail.com>
References: <CAAjbdiJYUJkBdeoirFPiNrjZ6TDcV608cZ_cCV1dQ4Di4VcNbQ@mail.gmail.com>
Message-ID: <CAFyD0NtaT+YFTxFZngLajdSKfYHHXY4JQXOk4WZaB3EPjgXV3Q@mail.gmail.com>

If it's open source, would you mind posting the link to github/travis?
On 4 Jun 2016 21:13, "Daniel Marcelino" <dmarcelino at live.com> wrote:

> Hi,
> I wonder if anyone has experienced this issue with Travis CI. The
> package I'm committing is just fine, it passes all the CRAN devel
> checks, but fails at Travis building checks.
> I realized that if I git commit without  the "Collate" section, it
> passes. However, I've no clue why.
> I will appreciate any help on this.
>
> Daniel
> ----
> "Nam et ipsa scientia potestas est"
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From brian at braverock.com  Sun Jun  5 17:38:58 2016
From: brian at braverock.com (Brian G. Peterson)
Date: Sun, 5 Jun 2016 10:38:58 -0500
Subject: [R-pkg-devel] Build fails at Travis CI
In-Reply-To: <CAAjbdiJYUJkBdeoirFPiNrjZ6TDcV608cZ_cCV1dQ4Di4VcNbQ@mail.gmail.com>
References: <CAAjbdiJYUJkBdeoirFPiNrjZ6TDcV608cZ_cCV1dQ4Di4VcNbQ@mail.gmail.com>
Message-ID: <57544792.8060901@braverock.com>

On 06/04/2016 03:13 PM, Daniel Marcelino wrote:
> I wonder if anyone has experienced this issue with Travis CI. The
> package I'm committing is just fine, it passes all the CRAN devel
> checks, but fails at Travis building checks.
> I realized that if I git commit without  the "Collate" section, it
> passes. However, I've no clue why.
> I will appreciate any help on this.

I have roxygen set to not Collate on all my development machines. 
Unless you're using S4 with complicated inheritance, you shouldn't need 
it, and it has caused me many headaches.

Regards,

Brian

-- 
Brian G. Peterson
http://braverock.com/brian/
Ph: 773-459-4973
IM: bgpbraverock


From edd at debian.org  Sun Jun  5 17:54:49 2016
From: edd at debian.org (Dirk Eddelbuettel)
Date: Sun, 5 Jun 2016 10:54:49 -0500
Subject: [R-pkg-devel] Build fails at Travis CI
In-Reply-To: <57544792.8060901@braverock.com>
References: <CAAjbdiJYUJkBdeoirFPiNrjZ6TDcV608cZ_cCV1dQ4Di4VcNbQ@mail.gmail.com>
	<57544792.8060901@braverock.com>
Message-ID: <22356.19273.892613.787419@max.nulle.part>


On 5 June 2016 at 10:38, Brian G. Peterson wrote:
| On 06/04/2016 03:13 PM, Daniel Marcelino wrote:
| > I wonder if anyone has experienced this issue with Travis CI. The
| > package I'm committing is just fine, it passes all the CRAN devel
| > checks, but fails at Travis building checks.
| > I realized that if I git commit without  the "Collate" section, it
| > passes. However, I've no clue why.
| > I will appreciate any help on this.
| 
| I have roxygen set to not Collate on all my development machines. 
| Unless you're using S4 with complicated inheritance, you shouldn't need 
| it, and it has caused me many headaches.

I always tell roxygen2 to not touch NAMESPACE or DESCRIPTION and to only deal
with Rd creation.  Your mileage (and preferences) may of course differ.

In RStudio this is done via the preferences, on the commandline via something
like this which I keep as 'roxy.r' in the path:


#!/usr/bin/r
#
# Simple helper script for roxygen2::roxygenize() 
#
# Dirk Eddelbuettel, August 2013
#
# GPL-2 or later

## load roxygen
library(roxygen2)

## check all command-line arguments (if any are given) for directory status
argv <- Filter(function(x) file.info(x)$is.dir, argv)

## loop over all argument, with fallback of the current directory, and
## call roxygenize() on the given directory with roclets="rd" set
sapply(ifelse(length(argv) > 0, argv, "."), FUN=roxygenize, roclets="rd")


Hope this helps,  Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From dmarcelino at live.com  Sun Jun  5 22:15:15 2016
From: dmarcelino at live.com (Daniel Marcelino)
Date: Sun, 5 Jun 2016 18:15:15 -0200
Subject: [R-pkg-devel] Build fails at Travis CI
In-Reply-To: <CAFyD0NtaT+YFTxFZngLajdSKfYHHXY4JQXOk4WZaB3EPjgXV3Q@mail.gmail.com>
References: <CAAjbdiJYUJkBdeoirFPiNrjZ6TDcV608cZ_cCV1dQ4Di4VcNbQ@mail.gmail.com>,
	<CAFyD0NtaT+YFTxFZngLajdSKfYHHXY4JQXOk4WZaB3EPjgXV3Q@mail.gmail.com>
Message-ID: <SNT146-W21E6A269C8414651FB08C2BB5B0@phx.gbl>

Sure, it's indeed open source.
https://github.com/danielmarcelino/SciencesPo
ThanksDaniel

---"Nam et ipsa scientia potestas est"

Date: Sun, 5 Jun 2016 16:32:27 +0100
Subject: Re: [R-pkg-devel] Build fails at Travis CI
From: jeblundell at doctors.org.uk
To: dmarcelino at live.com
CC: r-package-devel at r-project.org

If it's open source, would you mind posting the link to github/travis? 
On 4 Jun 2016 21:13, "Daniel Marcelino" <dmarcelino at live.com> wrote:
Hi,

I wonder if anyone has experienced this issue with Travis CI. The

package I'm committing is just fine, it passes all the CRAN devel

checks, but fails at Travis building checks.

I realized that if I git commit without  the "Collate" section, it

passes. However, I've no clue why.

I will appreciate any help on this.



Daniel

----

"Nam et ipsa scientia potestas est"



______________________________________________

R-package-devel at r-project.org mailing list

https://stat.ethz.ch/mailman/listinfo/r-package-devel

 		 	   		  
	[[alternative HTML version deleted]]


From h.wickham at gmail.com  Tue Jun  7 00:39:03 2016
From: h.wickham at gmail.com (Hadley Wickham)
Date: Mon, 6 Jun 2016 17:39:03 -0500
Subject: [R-pkg-devel] Submit second version of R package to CRAN
In-Reply-To: <0e3d6bcb-5cca-a54b-83fa-28d4815723ae@statistik.tu-dortmund.de>
References: <CAGRPoRRJmqsgJoQaAcC=rzUDPHD22Q2oNJogOiK=VOk7bgCYzw@mail.gmail.com>
	<0e3d6bcb-5cca-a54b-83fa-28d4815723ae@statistik.tu-dortmund.de>
Message-ID: <CABdHhvEvHgc6=5MLFi8KSRcrnNZNGRicuNbeW+ROk3fN5BwMBw@mail.gmail.com>

On Sun, Jun 5, 2016 at 1:53 AM, Uwe Ligges
<ligges at statistik.tu-dortmund.de> wrote:
> I do not know devtools:
> If it worked for you for the initial submission and the CRAN team did not
> complain, please resubmit in the same way - and keep in mind you want to
> check the package in advance using a very recent version of R.

And since you do use devtools, the easiest way to do that is to run
devtools::build_win() which builds the package and sends it to the
excellent win-buider service run by Uwe. You'll get an email 10-20
minutes later with the results of the checks.

Hadley

-- 
http://hadley.nz


From dmarcelino at live.com  Wed Jun  8 14:14:36 2016
From: dmarcelino at live.com (Daniel Marcelino)
Date: Wed, 8 Jun 2016 09:14:36 -0300
Subject: [R-pkg-devel] Problem with \Sexpr{} expressions
Message-ID: <CAAjbdiLM+G1GSP3CFZNxDaqy3jHZXLQBoZcQhFcgDfjpD_TKgA@mail.gmail.com>

Hi, I'm receiving the following note from CRAN check.

Package has help file(s) containing install/render-stage \Sexpr{}
expressions but no prebuilt PDF manual.

I went through all files having the expression, but couldn't find
where the offending part is. Is there any way I could try to pin-down
where this issue occurs?

Daniel


From georgi.boshnakov at manchester.ac.uk  Wed Jun  8 17:11:58 2016
From: georgi.boshnakov at manchester.ac.uk (Georgi Boshnakov)
Date: Wed, 8 Jun 2016 15:11:58 +0000
Subject: [R-pkg-devel] Problem with \Sexpr{} expressions
In-Reply-To: <CAAjbdiLM+G1GSP3CFZNxDaqy3jHZXLQBoZcQhFcgDfjpD_TKgA@mail.gmail.com>
References: <CAAjbdiLM+G1GSP3CFZNxDaqy3jHZXLQBoZcQhFcgDfjpD_TKgA@mail.gmail.com>
Message-ID: <438D2EC9EAFE5946B2D5864670EA468E0179C8147E@MBXP01.ds.man.ac.uk>

Hi,

Check the source directory of your package. It may contain files created during installation that should not be included in the tar.gz package source.  If so, just delete the offending files before building the tar.gz source or use file  .Rbuildignore to instruct the builder not to include them.

Georgi

-----Original Message-----
From: R-package-devel [mailto:r-package-devel-bounces at r-project.org] On Behalf Of Daniel Marcelino
Sent: 08 June 2016 13:15
To: R-list Package Devel
Subject: [R-pkg-devel] Problem with \Sexpr{} expressions

Hi, I'm receiving the following note from CRAN check.

Package has help file(s) containing install/render-stage \Sexpr{} expressions but no prebuilt PDF manual.

I went through all files having the expression, but couldn't find where the offending part is. Is there any way I could try to pin-down where this issue occurs?

Daniel

______________________________________________
R-package-devel at r-project.org mailing list https://stat.ethz.ch/mailman/listinfo/r-package-devel


From 66292259 at qq.com  Thu Jun  9 19:27:44 2016
From: 66292259 at qq.com (=?ISO-8859-1?B?WGlhbyBMaXU=?=)
Date: Fri, 10 Jun 2016 01:27:44 +0800
Subject: [R-pkg-devel] R 3.3.0 installing a package on Windows: gcc not
	found error
Message-ID: <tencent_38FA48EF1BD423D75DCF4599@qq.com>

Hi Folks,



I am trying to install an R package which contains some C code under Windows. I have R 3.3.0 installed and also Rtools version 3.3.0.1959 installed on my computer's D: disk. And "d:\Rtools\bin;" and "d:\Rtools\mingw_64\bin;" are all in PATH. I also checked gcc command under command window, and it is working. But when I am installing the package, it always trying to use "c:/Rtools/mingw_64/bin/gcc", which should be in d: disk, then it gives "c:/Rtools/mingw_64/bin/gcc: not found" error. Can anyone help on this issue?

Thanks!

Liu
	[[alternative HTML version deleted]]


From ligges at statistik.tu-dortmund.de  Fri Jun 10 00:32:02 2016
From: ligges at statistik.tu-dortmund.de (Uwe Ligges)
Date: Fri, 10 Jun 2016 00:32:02 +0200
Subject: [R-pkg-devel] [SUSPECTED SPAM] R 3.3.0 installing a package on
 Windows: gcc not found error
In-Reply-To: <tencent_38FA48EF1BD423D75DCF4599@qq.com>
References: <tencent_38FA48EF1BD423D75DCF4599@qq.com>
Message-ID: <ca39b227-1251-e343-9544-f4d5af2e177a@statistik.tu-dortmund.de>

Please adapt your BINPREF variable in R/etc/$Arch/Makeconf files 
appropriately to point to the coresponding compiler for each 
architecture - this is new with the new toolchain we use with R >= 3.3.0.


Best,
Uwe Ligges



On 09.06.2016 19:27, Xiao Liu wrote:
> Hi Folks,
>
>
>
> I am trying to install an R package which contains some C code under Windows. I have R 3.3.0 installed and also Rtools version 3.3.0.1959 installed on my computer's D: disk. And "d:\Rtools\bin;" and "d:\Rtools\mingw_64\bin;" are all in PATH. I also checked gcc command under command window, and it is working. But when I am installing the package, it always trying to use "c:/Rtools/mingw_64/bin/gcc", which should be in d: disk, then it gives "c:/Rtools/mingw_64/bin/gcc: not found" error. Can anyone help on this issue?
>
> Thanks!
>
> Liu
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From 66292259 at qq.com  Fri Jun 10 03:08:27 2016
From: 66292259 at qq.com (=?gb18030?B?WGlhbyBMaXU=?=)
Date: Fri, 10 Jun 2016 09:08:27 +0800
Subject: [R-pkg-devel] =?gb18030?b?u9i4tKO6IFtTVVNQRUNURUQgU1BBTV0gIFIg?=
 =?gb18030?q?3=2E3=2E0_installing_a_package_onWindows=3A_gcc_not_found_err?=
 =?gb18030?q?or?=
In-Reply-To: <ca39b227-1251-e343-9544-f4d5af2e177a@statistik.tu-dortmund.de>
References: <tencent_38FA48EF1BD423D75DCF4599@qq.com>
	<ca39b227-1251-e343-9544-f4d5af2e177a@statistik.tu-dortmund.de>
Message-ID: <tencent_796D78F8327703DC452F2487@qq.com>

Dear Uwe,


Highly appreciate your suggestion! It does work!


BTW, is there anyway to do this by setting some options in the command line window when installing the package?


Thanks again,


Zhe Liu


------------------ ???????? ------------------
??????: "Uwe Ligges";<ligges at statistik.tu-dortmund.de>;
????????: 2016??6??10??(??????) ????6:32
??????: "Xiao Liu"<66292259 at qq.com>; "R-package-devel"<R-package-devel at r-project.org>; 

????: Re: [SUSPECTED SPAM] [R-pkg-devel] R 3.3.0 installing a package onWindows: gcc not found error



Please adapt your BINPREF variable in R/etc/$Arch/Makeconf files 
appropriately to point to the coresponding compiler for each 
architecture - this is new with the new toolchain we use with R >= 3.3.0.


Best,
Uwe Ligges



On 09.06.2016 19:27, Xiao Liu wrote:
> Hi Folks,
>
>
>
> I am trying to install an R package which contains some C code under Windows. I have R 3.3.0 installed and also Rtools version 3.3.0.1959 installed on my computer's D: disk. And "d:\Rtools\bin;" and "d:\Rtools\mingw_64\bin;" are all in PATH. I also checked gcc command under command window, and it is working. But when I am installing the package, it always trying to use "c:/Rtools/mingw_64/bin/gcc", which should be in d: disk, then it gives "c:/Rtools/mingw_64/bin/gcc: not found" error. Can anyone help on this issue?
>
> Thanks!
>
> Liu
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
	[[alternative HTML version deleted]]


From rhelp at krueger-family.de  Fri Jun 10 09:04:09 2016
From: rhelp at krueger-family.de (Knut Krueger)
Date: Fri, 10 Jun 2016 09:04:09 +0200
Subject: [R-pkg-devel] Roxygen and Namespace
Message-ID: <575A6669.7030008@krueger-family.de>

how can I tell Roxygen to write the namespace like

exportPattern("^[[:alpha:]]+")
import(igraph,chron,gdata,XLConnect)
   importFrom("grDevices", "dev.off", "heat.colors", "postscript",
      "rainbow")
importFrom("graphics", "arrows", "lines", "par", "plot", "text",
      "title")
importFrom("stats", "na.omit")




by the way what does exportPattern("^[[:alpha:]]+") means?


Knut


From rhelp at krueger-family.de  Fri Jun 10 12:56:27 2016
From: rhelp at krueger-family.de (Knut Krueger)
Date: Fri, 10 Jun 2016 12:56:27 +0200
Subject: [R-pkg-devel] r-release-osx-x86_64-mavericks - CRAN Package Check
	Results - ERROR
Message-ID: <575A9CDB.3040409@krueger-family.de>

I have an error only on the maverichs flavour:
https://cran.r-project.org/web/checks/check_results_Dominance.html
as I have no Mac I do not know how I could fix it:

>  Invalid MIT-MAGIC-COOKIE-1 keyWarning in fun(libname, pkgname) : couldn't connect to display ":0"
> Error in structure(.External(.C_dotTclObjv, objv), class = "tclObj") :
> [tcl] invalid command name "font".
> Calls: Sociogram ... .tkplot.convert.font -> <Anonymous> -> tcl -> .Tcl.objv -> structure
> Execution halted

Knut


From jenny at stat.ubc.ca  Fri Jun 10 17:51:57 2016
From: jenny at stat.ubc.ca (Jenny Bryan)
Date: Fri, 10 Jun 2016 08:51:57 -0700
Subject: [R-pkg-devel] Roxygen and Namespace
In-Reply-To: <575A6669.7030008@krueger-family.de>
References: <575A6669.7030008@krueger-family.de>
Message-ID: <6D5242F8-966B-4222-98D9-D7AC6A1B0516@stat.ubc.ca>

> exportPattern("^[[:alpha:]]+") means

It is a regular expression that basically says "export all the things", meaning the functions provided by your package. I regard it as a placeholder to make things work temporarily, while you get yourself organized for more proactive management of NAMESPACE.

I don't feel like you'll ever see that combined with import directives (as you have below), once you really begin to use roxygen? 

You should put 
#' @export
directives in the roxygen header of every function that should be exported and they will appear in NAMESPACE individually after you roxygenize or run devtools::document().

Somewhere you will also need import directives corresponding to all those imports you want to do. They can go in any roxygen header.

-- Jenny

> On Jun 10, 2016, at 12:04 AM, Knut Krueger <rhelp at krueger-family.de> wrote:
> 
> how can I tell Roxygen to write the namespace like
> 
> exportPattern("^[[:alpha:]]+")
> import(igraph,chron,gdata,XLConnect)
>  importFrom("grDevices", "dev.off", "heat.colors", "postscript",
>     "rainbow")
> importFrom("graphics", "arrows", "lines", "par", "plot", "text",
>     "title")
> importFrom("stats", "na.omit")
> 
> 
> 
> 
> by the way what does exportPattern("^[[:alpha:]]+") means?
> 
> 
> Knut
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From luckbuttered at gmail.com  Sat Jun 11 22:35:42 2016
From: luckbuttered at gmail.com (Luck Buttered)
Date: Sat, 11 Jun 2016 15:35:42 -0500
Subject: [R-pkg-devel] Submit second version of R package to CRAN
In-Reply-To: <CABdHhvEvHgc6=5MLFi8KSRcrnNZNGRicuNbeW+ROk3fN5BwMBw@mail.gmail.com>
References: <CAGRPoRRJmqsgJoQaAcC=rzUDPHD22Q2oNJogOiK=VOk7bgCYzw@mail.gmail.com>
	<0e3d6bcb-5cca-a54b-83fa-28d4815723ae@statistik.tu-dortmund.de>
	<CABdHhvEvHgc6=5MLFi8KSRcrnNZNGRicuNbeW+ROk3fN5BwMBw@mail.gmail.com>
Message-ID: <CAGRPoRS79xrEbTP8h9PVTT8FzkmixXwU7nbhFWP4fPjNa6FaNw@mail.gmail.com>

Thank you both for your help!

On Mon, Jun 6, 2016 at 5:39 PM, Hadley Wickham <h.wickham at gmail.com> wrote:

> On Sun, Jun 5, 2016 at 1:53 AM, Uwe Ligges
> <ligges at statistik.tu-dortmund.de> wrote:
> > I do not know devtools:
> > If it worked for you for the initial submission and the CRAN team did not
> > complain, please resubmit in the same way - and keep in mind you want to
> > check the package in advance using a very recent version of R.
>
> And since you do use devtools, the easiest way to do that is to run
> devtools::build_win() which builds the package and sends it to the
> excellent win-buider service run by Uwe. You'll get an email 10-20
> minutes later with the results of the checks.
>
> Hadley
>
> --
> http://hadley.nz
>

	[[alternative HTML version deleted]]


From rhelp at krueger-family.de  Tue Jun 14 08:32:52 2016
From: rhelp at krueger-family.de (Knut Krueger)
Date: Tue, 14 Jun 2016 08:32:52 +0200
Subject: [R-pkg-devel]  Roxygen and Template
Message-ID: <575FA514.6000605@krueger-family.de>

I found in packgae ply - file adply.r:

#' @template ply
#' @template a-
#' @template -d

but no documentation about the template functionality, especially how to 
create the template file. (I tried to find it with google - of course)

Is there any complete documentation about roxgen?


Knut


From marius.hofert at uwaterloo.ca  Tue Jun 14 20:24:33 2016
From: marius.hofert at uwaterloo.ca (Marius Hofert)
Date: Tue, 14 Jun 2016 14:24:33 -0400
Subject: [R-pkg-devel] =?utf-8?q?=22multiple_local_function_definitions_fo?=
	=?utf-8?q?r_=E2=80=98FUN=E2=80=99_with_different_formal_arguments?=
	=?utf-8?q?=22?=
Message-ID: <CAM3-Kjbkiq3QVhiA9ym_GPEOdc4DttnpyXjmEXwcrt61RKBevA@mail.gmail.com>

Hi,

I have a function A which calls a function B. B accepts an argument
'FUN' (a function). Depending on the choice of package, A constructs
FUN and passes it on to B:

A <- function(x, pkg = c("pkg1", "pkg2", "pkg3"), ...) {
    pkg <- match.arg(pkg)
    FUN <- switch(pkg,
    "pkg1" = {
        function(x, arg1, arg2) { }
    },
    "pkg2" = {
        function(x, arg3, arg4, arg5) { }
    },
    "pkg3" = {
        function(x, arg6) { }
    },
    stop("Wrong 'pkg'"))
    B(x, pkg = pkg, FUN = FUN, ...)
}

Since different packages require a different structure of FUN, 'R CMD
check' shows:

* checking R code for possible problems ... NOTE
A: multiple local function definitions for ?FUN? with
  different formal arguments

I can avoid the note by using three different names for FUN and then
another switch once B is called...
... but is there a more elegant solution? Also, is this a 'critical'
note for package submission to CRAN?

Cheers,
M


From jenny at stat.ubc.ca  Wed Jun 15 03:54:54 2016
From: jenny at stat.ubc.ca (Jenny Bryan)
Date: Tue, 14 Jun 2016 18:54:54 -0700
Subject: [R-pkg-devel] Roxygen and Template
In-Reply-To: <575FA514.6000605@krueger-family.de>
References: <575FA514.6000605@krueger-family.de>
Message-ID: <725603FE-6C91-47BA-872F-99D48E433256@stat.ubc.ca>

The "Generating Rd files" vignette has a paragraph on "Roxygen templates".

vignette("rd", package = "roxygen2")

but I grant you it's not terribly detailed.

In these situations it can be helpful to search GitHub for other packages that do the thing you want to do.

This search finds >1400 examples of roxygen templates in the wild:

https://github.com/search?utf8=?&q=man-roxygen+in%3Apath&type=Code&ref=searchresults

> On Jun 13, 2016, at 11:32 PM, Knut Krueger <rhelp at krueger-family.de> wrote:
> 
> I found in packgae ply - file adply.r:
> 
> #' @template ply
> #' @template a-
> #' @template -d
> 
> but no documentation about the template functionality, especially how to create the template file. (I tried to find it with google - of course)
> 
> Is there any complete documentation about roxgen?
> 
> 
> Knut
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From Ross.Boylan at ucsf.edu  Wed Jun 15 04:43:32 2016
From: Ross.Boylan at ucsf.edu (Boylan, Ross)
Date: Wed, 15 Jun 2016 02:43:32 +0000
Subject: [R-pkg-devel] DLL 'cmprsk' not found: maybe not installed for this
	architecture?
Message-ID: <F1F13E14A610474196571953929C02090C2918C6@ex08.net.ucsf.edu>

I keeping getting the error in the subject when I try to install a package from source on Windows 7.
When using the same code outside of a package there is no problem; the cmprsk package is installed and its dll is present (in both the x64 and i386 directories).

Our package is attempting to call the cmprsk dll directly, e.g.,
            z <- .Fortran("cinc", as.double(d$time[cgind]), as.integer(censind[cgind]), 
                as.integer(causeind[cgind]), as.integer(ncg), 
                x = tmp, f = tmp, v = tmp, PACKAGE = "cmprsk")

We've tried a number of variants.  Currently NAMESPACE is 
import(cmprsk)
useDynLib(cmprsk)
export(mainfun)

and the DESCRIPTION file includes
     Depends: cmprsk

Any ideas?


From carnivorescience at gmail.com  Wed Jun 15 21:39:51 2016
From: carnivorescience at gmail.com (Guillaume Chapron)
Date: Wed, 15 Jun 2016 21:39:51 +0200
Subject: [R-pkg-devel] scripting R through lldb
Message-ID: <48D2912E-FA6A-4457-89E7-5CE0CB033995@gmail.com>

Hello,

I am debugging a package that contains some compiled C code. The C code uses R random number generator so I cannot (or have not figured out how to) debug it without running it through R. What I do is to type the following in the terminal:

R --debugger=lldb

then in the lldb prompt

r

and within R

source("~/Desktop/test.R?)

which is the file calling the C library. When the library crashes I can navigate the C memory to see where is the problem.

My question is whether there is a way to have this in single line or script to run from the terminal. I have looked on stackoverflow but could not find.

Many thanks

Guillaume

From kevinushey at gmail.com  Wed Jun 15 21:49:20 2016
From: kevinushey at gmail.com (Kevin Ushey)
Date: Wed, 15 Jun 2016 12:49:20 -0700
Subject: [R-pkg-devel] scripting R through lldb
In-Reply-To: <48D2912E-FA6A-4457-89E7-5CE0CB033995@gmail.com>
References: <48D2912E-FA6A-4457-89E7-5CE0CB033995@gmail.com>
Message-ID: <CAJXgQP1Q16iH44eEX51eQ0+hz7gcyp783S1sNcA1q-0jmbs6OQ@mail.gmail.com>

Hi Guillaume,

I have a script that does this (for OS X) here, taking advantage of
the new '--batch' argument to lldb:

    https://github.com/kevinushey/etc/blob/master/lang/r/mac/bin/r-lldb

Note that, on recent versions of OS X due to system integrity
protection, this may not work with the system lldb, as it appears
there are restrictions on how certain environment variables, e.g.
DYLD_FALLBACK_LIBRARY_PATH, can be set for system executables. (If you
are indeed on OS X, you can try building your own version of lldb --
see e.g. https://github.com/kevinushey/etc/blob/master/platform/mac/install-llvm.sh
for that)

In the end, you should be able to use this script as e.g.

    r-lldb -f test.R

and this will launch lldb, set R as the target process, with '-f
test.R' passed to the R executable.

Depending on your OS / configuration, you might need to tweak the
script, but it will hopefully either 'work out of the box' or at least
serve as a starting point for your version.

Best,
Kevin

On Wed, Jun 15, 2016 at 12:39 PM, Guillaume Chapron
<carnivorescience at gmail.com> wrote:
> Hello,
>
> I am debugging a package that contains some compiled C code. The C code uses R random number generator so I cannot (or have not figured out how to) debug it without running it through R. What I do is to type the following in the terminal:
>
> R --debugger=lldb
>
> then in the lldb prompt
>
> r
>
> and within R
>
> source("~/Desktop/test.R?)
>
> which is the file calling the C library. When the library crashes I can navigate the C memory to see where is the problem.
>
> My question is whether there is a way to have this in single line or script to run from the terminal. I have looked on stackoverflow but could not find.
>
> Many thanks
>
> Guillaume
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From carnivorescience at gmail.com  Wed Jun 15 21:56:35 2016
From: carnivorescience at gmail.com (Guillaume Chapron)
Date: Wed, 15 Jun 2016 21:56:35 +0200
Subject: [R-pkg-devel] scripting R through lldb
In-Reply-To: <CAJXgQP1Q16iH44eEX51eQ0+hz7gcyp783S1sNcA1q-0jmbs6OQ@mail.gmail.com>
References: <48D2912E-FA6A-4457-89E7-5CE0CB033995@gmail.com>
	<CAJXgQP1Q16iH44eEX51eQ0+hz7gcyp783S1sNcA1q-0jmbs6OQ@mail.gmail.com>
Message-ID: <A2A07560-EB67-40EB-87A2-1D7DB1DFBF04@gmail.com>

Fantastic, it works perfectly, many thanks!

Guillaume

> On 15 Jun 2016, at 21:49, Kevin Ushey <kevinushey at gmail.com> wrote:
> 
> Hi Guillaume,
> 
> I have a script that does this (for OS X) here, taking advantage of
> the new '--batch' argument to lldb:
> 
>    https://github.com/kevinushey/etc/blob/master/lang/r/mac/bin/r-lldb
> 
> Note that, on recent versions of OS X due to system integrity
> protection, this may not work with the system lldb, as it appears
> there are restrictions on how certain environment variables, e.g.
> DYLD_FALLBACK_LIBRARY_PATH, can be set for system executables. (If you
> are indeed on OS X, you can try building your own version of lldb --
> see e.g. https://github.com/kevinushey/etc/blob/master/platform/mac/install-llvm.sh
> for that)
> 
> In the end, you should be able to use this script as e.g.
> 
>    r-lldb -f test.R
> 
> and this will launch lldb, set R as the target process, with '-f
> test.R' passed to the R executable.
> 
> Depending on your OS / configuration, you might need to tweak the
> script, but it will hopefully either 'work out of the box' or at least
> serve as a starting point for your version.
> 
> Best,
> Kevin
> 
> On Wed, Jun 15, 2016 at 12:39 PM, Guillaume Chapron
> <carnivorescience at gmail.com> wrote:
>> Hello,
>> 
>> I am debugging a package that contains some compiled C code. The C code uses R random number generator so I cannot (or have not figured out how to) debug it without running it through R. What I do is to type the following in the terminal:
>> 
>> R --debugger=lldb
>> 
>> then in the lldb prompt
>> 
>> r
>> 
>> and within R
>> 
>> source("~/Desktop/test.R?)
>> 
>> which is the file calling the C library. When the library crashes I can navigate the C memory to see where is the problem.
>> 
>> My question is whether there is a way to have this in single line or script to run from the terminal. I have looked on stackoverflow but could not find.
>> 
>> Many thanks
>> 
>> Guillaume
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From cysouw at mac.com  Thu Jun 16 15:56:31 2016
From: cysouw at mac.com (Michael Cysouw)
Date: Thu, 16 Jun 2016 15:56:31 +0200
Subject: [R-pkg-devel] How to link executables for non-R-users?
Message-ID: <98ED4107-F6AA-4F4E-B63A-5DFB6DBB5F7B@mac.com>

I really like the possibility of projects like docopt <http://docopt.org>, providing a bash interface to R functionality. IMHO this is a great way to allow non-R-users to include R functionality in their workflows. There is a docopt package for R which is not yet perfect for my liking, but already goes a long way. <https://cran.r-project.org/web/packages/docopt/index.html> 

I have been experimenting a bit with including docopt scripts into my R packages, and I would like to ask for some feedback how to handle the distribution of such bash-interfaces with R packages.

Ideally, such bash-interfaces like docopt should be distributed together with the R packages, and the ?exec? folder seems destined for that goal. Simply adding the package docopt as a requirement in DESCRIPTION also assures that everything just works after installing the package!

The main remaining problem is the following: How do non-R-users actually find the bash-executable? The location is rather hidden away :-). Is there a way to link the path to the exec folder to PATH on installing a package? Or is there an easy way to allow people to make an alias in their .bashrc?

From within R this is not that difficult, using something based on ?find.package?:
`file.path(find.package(package_name), "exec", docopt_file_name)`

However, I am more thinking about an option for R CMD INSTALL to link an executable to PATH. Would that be sensible? How should that be done?

Further note that to prevent clogging the PATH with executable, I would propose that package developers only include a single bash-interface to a package, named identically to the package, with multiple functions available as (sub)commands, so a bash user could simply access a function ?bla? from package ?foo? as 

$ foo bla -OPTIONS [ARGUMENTS]

thanks for any feedback
michael


From murdoch.duncan at gmail.com  Thu Jun 16 16:24:01 2016
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Thu, 16 Jun 2016 10:24:01 -0400
Subject: [R-pkg-devel] How to link executables for non-R-users?
In-Reply-To: <98ED4107-F6AA-4F4E-B63A-5DFB6DBB5F7B@mac.com>
References: <98ED4107-F6AA-4F4E-B63A-5DFB6DBB5F7B@mac.com>
Message-ID: <47b7ec04-5e84-075c-d711-a72f5c5a4ef5@gmail.com>

On 16/06/2016 9:56 AM, Michael Cysouw wrote:
> I really like the possibility of projects like docopt <http://docopt.org>, providing a bash interface to R functionality. IMHO this is a great way to allow non-R-users to include R functionality in their workflows. There is a docopt package for R which is not yet perfect for my liking, but already goes a long way. <https://cran.r-project.org/web/packages/docopt/index.html>
>
> I have been experimenting a bit with including docopt scripts into my R packages, and I would like to ask for some feedback how to handle the distribution of such bash-interfaces with R packages.
>
> Ideally, such bash-interfaces like docopt should be distributed together with the R packages, and the ?exec? folder seems destined for that goal. Simply adding the package docopt as a requirement in DESCRIPTION also assures that everything just works after installing the package!
>
> The main remaining problem is the following: How do non-R-users actually find the bash-executable? The location is rather hidden away :-). Is there a way to link the path to the exec folder to PATH on installing a package? Or is there an easy way to allow people to make an alias in their .bashrc?

Just put a description of what to do into your vignette.
>
>  From within R this is not that difficult, using something based on ?find.package?:
> `file.path(find.package(package_name), "exec", docopt_file_name)`
>
> However, I am more thinking about an option for R CMD INSTALL to link an executable to PATH. Would that be sensible? How should that be done?

I don't think packages should be messing with users' PATHs. Document 
what is necessary, even provide functions in your package to do the 
work, but don't do it automatically.  I think you were suggesting 
something optional, but I really see no point in that: it is no more 
work for you to write a function to do the work than it would be for you 
to handle a request from INSTALL to do the work, but it is a lot more 
work for us.

Duncan Murdoch
>
> Further note that to prevent clogging the PATH with executable, I would propose that package developers only include a single bash-interface to a package, named identically to the package, with multiple functions available as (sub)commands, so a bash user could simply access a function ?bla? from package ?foo? as
>
> $ foo bla -OPTIONS [ARGUMENTS]
>
> thanks for any feedback
> michael
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From edd at debian.org  Thu Jun 16 16:39:29 2016
From: edd at debian.org (Dirk Eddelbuettel)
Date: Thu, 16 Jun 2016 09:39:29 -0500
Subject: [R-pkg-devel] How to link executables for non-R-users?
In-Reply-To: <98ED4107-F6AA-4F4E-B63A-5DFB6DBB5F7B@mac.com>
References: <98ED4107-F6AA-4F4E-B63A-5DFB6DBB5F7B@mac.com>
Message-ID: <22370.47649.845100.651298@max.nulle.part>


On 16 June 2016 at 15:56, Michael Cysouw wrote:
| I really like the possibility of projects like docopt <http://docopt.org>, providing a bash interface to R functionality. IMHO this is a great way to allow non-R-users to include R functionality in their workflows. There is a docopt package for R which is not yet perfect for my liking, but already goes a long way. <https://cran.r-project.org/web/packages/docopt/index.html> 

Exactly what is missing in the (wonderful, in my book) docopt package, and
could you file an issue ticket at the corresponding GitHub repo, please?

FWIW it 'works for me' eg here
  https://github.com/eddelbuettel/littler/blob/master/inst/examples/install2.r
(and also on CRAN in this 'littler' package).

| I have been experimenting a bit with including docopt scripts into my R packages, and I would like to ask for some feedback how to handle the distribution of such bash-interfaces with R packages.

There is no bash interface. Just write scripts for '#!/usr/bin/env Rscript'
or (my preference) '#!/usr/bin/env r'  (or use the path directly).

R is perfectly well suited for shebang scripting.
 
| Ideally, such bash-interfaces like docopt should be distributed together with the R packages, and the ?exec? folder seems destined for that goal. Simply adding the package docopt as a requirement in DESCRIPTION also assures that everything just works after installing the package!
| 
| The main remaining problem is the following: How do non-R-users actually find the bash-executable? The location is rather hidden away :-). Is there a way to link the path to the exec folder to PATH on installing a package? Or is there an easy way to allow people to make an alias in their .bashrc?

We do this at work *a lot* and generally place them into inst/scripts/ and
then have a _one-time_ need for a soft-link from /usr/local/bin/ into the
packages' scripts/ directory.
 
| From within R this is not that difficult, using something based on ?find.package?:
| `file.path(find.package(package_name), "exec", docopt_file_name)`
| 
| However, I am more thinking about an option for R CMD INSTALL to link an executable to PATH. Would that be sensible? How should that be done?

You would need to convince R Core to let you run post-install hooks.  AFAICR
only one or two packages do this; Simon's Rserve I think gets allows into R's
bin/ directory.

| Further note that to prevent clogging the PATH with executable, I would propose that package developers only include a single bash-interface to a package, named identically to the package, with multiple functions available as (sub)commands, so a bash user could simply access a function ?bla? from package ?foo? as 
| 
| $ foo bla -OPTIONS [ARGUMENTS]
| 
| thanks for any feedback

Why do you think you need bash?  It makes your approach less portable (as
Windoze generally does not have it).   Other systems have other shells,
sometimes a lot smaller than bash.

Dirk

--
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From kingaa at umich.edu  Thu Jun 23 00:07:16 2016
From: kingaa at umich.edu (Aaron King)
Date: Wed, 22 Jun 2016 18:07:16 -0400
Subject: [R-pkg-devel] modification of warning messages
Message-ID: <CAGPRvNA=zYc-DnKVvsVkA6mHNVuN=2XdaMAojjSdOuBxO8q+Kw@mail.gmail.com>

I am in the midst of trying to improve error and warning messages in a
complex package.  I find myself wanting to modify R's default behavior when
printing warnings.  Specifically, it frequently happens for me that the
call that is printed with the warning message is not informative.  When the
warning arises in R code, I have the ability to suppress the printing of
the call by setting 'call.=FALSE'.  However, when the warning arises in C
code (via the 'warning()' function), I have no such option.

'tryCatch' and 'withCallingHandlers' are of no use (or at least, if they
are, I haven't figured out how).

Consider the following simple example:

Contents of file 'example.c':
--------------------------------------------------
#include <R.h>

void example (int *x) {
  if (*x>0)
    error("ouch");
  else if (*x<0) {
    warning("duck!");
    *x = 22;
  } else {
    *x = 11;
  }
}
--------------------------------------------------

Compile and load the C code:
--------------------------------------------------
system2(R.home("bin/R"),args=c("CMD","SHLIB","example.c"))
dyn.load(paste0("example",.Platform$dynlib.ext))
--------------------------------------------------

The function 'f' calls 'example' as defined above.  On an error, it
modifies the error message using 'tryCatch'.
--------------------------------------------------
f <- function (x) {
    y <- tryCatch(
        .C("example",x=as.integer(x))$x,
        error = function (e) {
            stop("in f: ",conditionMessage(e),call.=FALSE)
        }
    )
    y
}
--------------------------------------------------

Get an error:

> f(1)
Error: in f: ouch!

Get a warning:

> f(-1)
[1] 22
Warning message:
In doTryCatch(return(expr), name, parentenv, handler) : duck!

It's the fact that 'doTryCatch(return(expr), name, parentenv, handler)' is
meaningless to the user that bothers me.  How can I modify the warning?

Thanks in advance for any insight.

-- 
Professor Aaron A. King
Ecology & Evolutionary Biology
Mathematics
Center for the Study of Complex Systems
University of Michigan
GPG Public Key: 0x15780975

	[[alternative HTML version deleted]]


From h.wickham at gmail.com  Thu Jun 23 01:29:52 2016
From: h.wickham at gmail.com (Hadley Wickham)
Date: Wed, 22 Jun 2016 18:29:52 -0500
Subject: [R-pkg-devel] modification of warning messages
In-Reply-To: <CAGPRvNA=zYc-DnKVvsVkA6mHNVuN=2XdaMAojjSdOuBxO8q+Kw@mail.gmail.com>
References: <CAGPRvNA=zYc-DnKVvsVkA6mHNVuN=2XdaMAojjSdOuBxO8q+Kw@mail.gmail.com>
Message-ID: <CABdHhvEZQbKBk8fDgzHh3T6b9NkVz0gbz7xkpkw_Qe+zwaEiaQ@mail.gmail.com>

Try warningcall(R_NilValue, "message")

Hadley

On Wednesday, June 22, 2016, Aaron King <kingaa at umich.edu> wrote:

> I am in the midst of trying to improve error and warning messages in a
> complex package.  I find myself wanting to modify R's default behavior when
> printing warnings.  Specifically, it frequently happens for me that the
> call that is printed with the warning message is not informative.  When the
> warning arises in R code, I have the ability to suppress the printing of
> the call by setting 'call.=FALSE'.  However, when the warning arises in C
> code (via the 'warning()' function), I have no such option.
>
> 'tryCatch' and 'withCallingHandlers' are of no use (or at least, if they
> are, I haven't figured out how).
>
> Consider the following simple example:
>
> Contents of file 'example.c':
> --------------------------------------------------
> #include <R.h>
>
> void example (int *x) {
>   if (*x>0)
>     error("ouch");
>   else if (*x<0) {
>     warning("duck!");
>     *x = 22;
>   } else {
>     *x = 11;
>   }
> }
> --------------------------------------------------
>
> Compile and load the C code:
> --------------------------------------------------
> system2(R.home("bin/R"),args=c("CMD","SHLIB","example.c"))
> dyn.load(paste0("example",.Platform$dynlib.ext))
> --------------------------------------------------
>
> The function 'f' calls 'example' as defined above.  On an error, it
> modifies the error message using 'tryCatch'.
> --------------------------------------------------
> f <- function (x) {
>     y <- tryCatch(
>         .C("example",x=as.integer(x))$x,
>         error = function (e) {
>             stop("in f: ",conditionMessage(e),call.=FALSE)
>         }
>     )
>     y
> }
> --------------------------------------------------
>
> Get an error:
>
> > f(1)
> Error: in f: ouch!
>
> Get a warning:
>
> > f(-1)
> [1] 22
> Warning message:
> In doTryCatch(return(expr), name, parentenv, handler) : duck!
>
> It's the fact that 'doTryCatch(return(expr), name, parentenv, handler)' is
> meaningless to the user that bothers me.  How can I modify the warning?
>
> Thanks in advance for any insight.
>
> --
> Professor Aaron A. King
> Ecology & Evolutionary Biology
> Mathematics
> Center for the Study of Complex Systems
> University of Michigan
> GPG Public Key: 0x15780975
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org <javascript:;> mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


-- 
http://hadley.nz

	[[alternative HTML version deleted]]


From edd at debian.org  Thu Jun 23 01:57:43 2016
From: edd at debian.org (Dirk Eddelbuettel)
Date: Wed, 22 Jun 2016 18:57:43 -0500
Subject: [R-pkg-devel] modification of warning messages
In-Reply-To: <CABdHhvEZQbKBk8fDgzHh3T6b9NkVz0gbz7xkpkw_Qe+zwaEiaQ@mail.gmail.com>
References: <CAGPRvNA=zYc-DnKVvsVkA6mHNVuN=2XdaMAojjSdOuBxO8q+Kw@mail.gmail.com>
	<CABdHhvEZQbKBk8fDgzHh3T6b9NkVz0gbz7xkpkw_Qe+zwaEiaQ@mail.gmail.com>
Message-ID: <22379.9719.963503.574538@max.nulle.part>


On 22 June 2016 at 18:29, Hadley Wickham wrote:
| Try warningcall(R_NilValue, "message")

Nice one:

  R> cppFunction("void foo(std::string txt) { Rf_warningcall(R_NilValue, txt.c_str()); }")
  R> foo("magic!")
  Warning message:
  magic! 
  R> 

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From kingaa at umich.edu  Thu Jun 23 04:02:31 2016
From: kingaa at umich.edu (Aaron King)
Date: Wed, 22 Jun 2016 22:02:31 -0400
Subject: [R-pkg-devel] modification of warning messages
In-Reply-To: <CABdHhvEZQbKBk8fDgzHh3T6b9NkVz0gbz7xkpkw_Qe+zwaEiaQ@mail.gmail.com>
References: <CAGPRvNA=zYc-DnKVvsVkA6mHNVuN=2XdaMAojjSdOuBxO8q+Kw@mail.gmail.com>
	<CABdHhvEZQbKBk8fDgzHh3T6b9NkVz0gbz7xkpkw_Qe+zwaEiaQ@mail.gmail.com>
Message-ID: <CAGPRvNCOW5gU9Ew+=4KCc2zk3Q=VZevWVqgHg0jk0Lcoegdu2g@mail.gmail.com>

Perfect!  Thanks!

A.

On Wed, Jun 22, 2016 at 7:29 PM, Hadley Wickham <h.wickham at gmail.com> wrote:

> Try warningcall(R_NilValue, "message")
>
> Hadley
>
>
> On Wednesday, June 22, 2016, Aaron King <kingaa at umich.edu> wrote:
>
>> I am in the midst of trying to improve error and warning messages in a
>> complex package.  I find myself wanting to modify R's default behavior
>> when
>> printing warnings.  Specifically, it frequently happens for me that the
>> call that is printed with the warning message is not informative.  When
>> the
>> warning arises in R code, I have the ability to suppress the printing of
>> the call by setting 'call.=FALSE'.  However, when the warning arises in C
>> code (via the 'warning()' function), I have no such option.
>>
>> 'tryCatch' and 'withCallingHandlers' are of no use (or at least, if they
>> are, I haven't figured out how).
>>
>> Consider the following simple example:
>>
>> Contents of file 'example.c':
>> --------------------------------------------------
>> #include <R.h>
>>
>> void example (int *x) {
>>   if (*x>0)
>>     error("ouch");
>>   else if (*x<0) {
>>     warning("duck!");
>>     *x = 22;
>>   } else {
>>     *x = 11;
>>   }
>> }
>> --------------------------------------------------
>>
>> Compile and load the C code:
>> --------------------------------------------------
>> system2(R.home("bin/R"),args=c("CMD","SHLIB","example.c"))
>> dyn.load(paste0("example",.Platform$dynlib.ext))
>> --------------------------------------------------
>>
>> The function 'f' calls 'example' as defined above.  On an error, it
>> modifies the error message using 'tryCatch'.
>> --------------------------------------------------
>> f <- function (x) {
>>     y <- tryCatch(
>>         .C("example",x=as.integer(x))$x,
>>         error = function (e) {
>>             stop("in f: ",conditionMessage(e),call.=FALSE)
>>         }
>>     )
>>     y
>> }
>> --------------------------------------------------
>>
>> Get an error:
>>
>> > f(1)
>> Error: in f: ouch!
>>
>> Get a warning:
>>
>> > f(-1)
>> [1] 22
>> Warning message:
>> In doTryCatch(return(expr), name, parentenv, handler) : duck!
>>
>> It's the fact that 'doTryCatch(return(expr), name, parentenv, handler)' is
>> meaningless to the user that bothers me.  How can I modify the warning?
>>
>> Thanks in advance for any insight.
>>
>> --
>> Professor Aaron A. King
>> Ecology & Evolutionary Biology
>> Mathematics
>> Center for the Study of Complex Systems
>> University of Michigan
>> GPG Public Key: 0x15780975
>>
>>         [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>
>
> --
> http://hadley.nz
>



-- 
Professor Aaron A. King
Ecology & Evolutionary Biology
Mathematics
Center for the Study of Complex Systems
University of Michigan
GPG Public Key: 0x15780975

	[[alternative HTML version deleted]]


From kristian.liland at nmbu.no  Tue Jun 21 09:00:35 2016
From: kristian.liland at nmbu.no (Kristian Hovde Liland)
Date: Tue, 21 Jun 2016 07:00:35 +0000
Subject: [R-pkg-devel] Documenting dependencies on Bioconductor packages
Message-ID: <1466492434477.59004@nmbu.no>

?Dear package developers.

We are developing a set of R packages that perform statistics and classification on nucleotide sequence data. For efficient reading and writing of such data the package depends on the Biostrings package hosted by Bioconductor.

Being a mainstream repository, dependencies on Bioconductor packages have been considered okay; minus out-of-sync package updates and different hosting structure (separate devel branch at Biostrings and different recommended installation strategy).

CRAN policy enforcing is becoming stricter (which is very good considering the sheer amount of new packages arriving and future proofing), and thus we received a reply after submitting one of our packages as follows:
"Can you pls improve the Description to make clearer that you refer to the 'Biostrings' package from BioC?". 

I haven't found any good examples on how to include such information in the descriptions. Is it sufficient to write at the end: "This package depends on the Biostrings package hosted by Bioconductor.", or is there a formal or more elegant way of including this information? I find documentation and CRAN policies to be a bit sparse on the subject. From other previous mailing list and forum discussions I gather that Bioconductor should not be added to the Additional_repositories list.

Best regards,
Kristian Hovde Liland

From tkeitt at utexas.edu  Sun Jun 26 19:23:28 2016
From: tkeitt at utexas.edu (Tim Keitt)
Date: Sun, 26 Jun 2016 12:23:28 -0500
Subject: [R-pkg-devel] Force namespace prefix for a loaded package function
Message-ID: <CANnL8gr-YpDKevL=kEjRCvVDB-nEmRn_vz1s3p90rC+u+VPx6w@mail.gmail.com>

It would be rather nice if we could define functions in our packages that
must be called with the namespace prefix.

I'd like to do

#' @protected (or some such)
f = function(...) list(...)

in package scope and then

library(x)
f(1)             # fails
x::f(1)         # succeeds

Currently unless I am missing something, a function is either exported to
global scope or not available. This could be done if package loading made
two environments, one in the path and another not in the path, and then
have the namespace prefix search both in succession.

Yes, you could do

#' @export
x_f = function(...) list(...)

library(x)
x_f(1)

but I would prefer reusing the namespace prefix syntax.

This would also avoid name collisions between package, which ideally is the
purpose of a namespace.

I suppose also you could make two packages and list one in Imports: but I
find that less satisfying because it requires a different namespace prefix.

Or am I missing something obvious here.

THK

http://www.keittlab.org/

	[[alternative HTML version deleted]]


From russell-lenth at uiowa.edu  Mon Jun 27 15:22:47 2016
From: russell-lenth at uiowa.edu (Lenth, Russell V)
Date: Mon, 27 Jun 2016 13:22:47 +0000
Subject: [R-pkg-devel] Absent variables and tibble
Message-ID: <BY2PR0401MB0919D5A98E5F6CF2824682F6F1210@BY2PR0401MB0919.namprd04.prod.outlook.com>

My package 'lsmeans' is now suddenly broken because of a new provision in the 'tibble' package (loaded by 'dplyr' 0.5.0), whereby the "[[" and "$" methods for 'tbl_df' objects - as documented - throw an error if a variable is not found. 

The problem is that my code uses tests like this:

	if (is.null (x$var)) {...}

to see whether 'x' has a variable 'var'. Obviously, I can work around this using

	if (!("var" %in% names(x))) {...}

but (a) I like the first version better, in terms of the code being understandable; and (b) isn't there a long history whereby we can expect a NULL result when accessing an absent member of a list (and hence a data.frame)? (c) the code base for 'lsmeans' has about 50 instances of such tests.

Anyway, I wonder if a lot of other package developers test for absent variables in that first way; if so, they too are in for a rude awakening if their users provide a tbl_df instead of a data.frame. And what is considered the best practice for testing absence of a list member? Apparently, not either of the above; and because of (c), I want to do these many tedious corrections only once.

Thanks for any light you can shed.

Russ

Russell V. Lenth  -  Professor Emeritus
Department of Statistics and Actuarial Science   
The University of Iowa  -  Iowa City, IA 52242  USA   
Voice (319)335-0712 (Dept. office)  -  FAX (319)335-3017

Just because you have numbers, that doesn't necessarily mean you have data.


From murdoch.duncan at gmail.com  Mon Jun 27 16:03:35 2016
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Mon, 27 Jun 2016 10:03:35 -0400
Subject: [R-pkg-devel] Absent variables and tibble
In-Reply-To: <BY2PR0401MB0919D5A98E5F6CF2824682F6F1210@BY2PR0401MB0919.namprd04.prod.outlook.com>
References: <BY2PR0401MB0919D5A98E5F6CF2824682F6F1210@BY2PR0401MB0919.namprd04.prod.outlook.com>
Message-ID: <4dee6bac-6ffa-4597-e033-1e5a89dc83d1@gmail.com>

On 27/06/2016 9:22 AM, Lenth, Russell V wrote:
> My package 'lsmeans' is now suddenly broken because of a new provision in the 'tibble' package (loaded by 'dplyr' 0.5.0), whereby the "[[" and "$" methods for 'tbl_df' objects - as documented - throw an error if a variable is not found.
>
> The problem is that my code uses tests like this:
>
> 	if (is.null (x$var)) {...}
>
> to see whether 'x' has a variable 'var'. Obviously, I can work around this using
>
> 	if (!("var" %in% names(x))) {...}
>
> but (a) I like the first version better, in terms of the code being understandable; and (b) isn't there a long history whereby we can expect a NULL result when accessing an absent member of a list (and hence a data.frame)? (c) the code base for 'lsmeans' has about 50 instances of such tests.
>
> Anyway, I wonder if a lot of other package developers test for absent variables in that first way; if so, they too are in for a rude awakening if their users provide a tbl_df instead of a data.frame. And what is considered the best practice for testing absence of a list member? Apparently, not either of the above; and because of (c), I want to do these many tedious corrections only once.
>
> Thanks for any light you can shed.

This is why CRAN asks that people test reverse dependencies.

I think the most defensive thing you can do is to write a small function

name_missing <- function(x, name)
     !(name %in% names(x))

and use name_missing(x, "var") in your tests.  (Pick your own name to 
make your code understandable if you don't like my choice.)

You could suggest to the tibble maintainers that they add a function 
like this.

Duncan Murdoch


From jranke at uni-bremen.de  Mon Jun 27 16:30:50 2016
From: jranke at uni-bremen.de (Johannes Ranke)
Date: Mon, 27 Jun 2016 16:30:50 +0200
Subject: [R-pkg-devel] Absent variables and tibble
In-Reply-To: <4dee6bac-6ffa-4597-e033-1e5a89dc83d1@gmail.com>
References: <BY2PR0401MB0919D5A98E5F6CF2824682F6F1210@BY2PR0401MB0919.namprd04.prod.outlook.com>
	<4dee6bac-6ffa-4597-e033-1e5a89dc83d1@gmail.com>
Message-ID: <1653766.cb4A46JfSx@tux>

Am Montag, 27. Juni 2016, 10:03:35 schrieb Duncan Murdoch:
> On 27/06/2016 9:22 AM, Lenth, Russell V wrote:
> > My package 'lsmeans' is now suddenly broken because of a new provision in
> > the 'tibble' package (loaded by 'dplyr' 0.5.0), whereby the "[[" and "$"
> > methods for 'tbl_df' objects - as documented - throw an error if a
> > variable is not found.> 
> > The problem is that my code uses tests like this:
> > 	if (is.null (x$var)) {...}
> > 
> > to see whether 'x' has a variable 'var'. Obviously, I can work around this
> > using> 
> > 	if (!("var" %in% names(x))) {...}
> > 
> > but (a) I like the first version better, in terms of the code being
> > understandable; and (b) isn't there a long history whereby we can expect
> > a NULL result when accessing an absent member of a list (and hence a
> > data.frame)? (c) the code base for 'lsmeans' has about 50 instances of
> > such tests.
> > 
> > Anyway, I wonder if a lot of other package developers test for absent
> > variables in that first way; if so, they too are in for a rude awakening
> > if their users provide a tbl_df instead of a data.frame. And what is
> > considered the best practice for testing absence of a list member?
> > Apparently, not either of the above; and because of (c), I want to do
> > these many tedious corrections only once.
> > 
> > Thanks for any light you can shed.
> 
> This is why CRAN asks that people test reverse dependencies.
> 
> I think the most defensive thing you can do is to write a small function
> 
> name_missing <- function(x, name)
>      !(name %in% names(x))
> 
> and use name_missing(x, "var") in your tests.  (Pick your own name to
> make your code understandable if you don't like my choice.)
> 
> You could suggest to the tibble maintainers that they add a function
> like this.

This is also being discussed here:

https://github.com/hadley/tibble/issues/91

Kind regards,

Johannes Ranke


From h.wickham at gmail.com  Mon Jun 27 16:46:45 2016
From: h.wickham at gmail.com (Hadley Wickham)
Date: Mon, 27 Jun 2016 09:46:45 -0500
Subject: [R-pkg-devel] Absent variables and tibble
In-Reply-To: <4dee6bac-6ffa-4597-e033-1e5a89dc83d1@gmail.com>
References: <BY2PR0401MB0919D5A98E5F6CF2824682F6F1210@BY2PR0401MB0919.namprd04.prod.outlook.com>
	<4dee6bac-6ffa-4597-e033-1e5a89dc83d1@gmail.com>
Message-ID: <CABdHhvH3kcyJemis8oTVtzRQCo7HbqNO+SjYNGVWvnincOUEMg@mail.gmail.com>

On Mon, Jun 27, 2016 at 9:03 AM, Duncan Murdoch
<murdoch.duncan at gmail.com> wrote:
> On 27/06/2016 9:22 AM, Lenth, Russell V wrote:
>>
>> My package 'lsmeans' is now suddenly broken because of a new provision in
>> the 'tibble' package (loaded by 'dplyr' 0.5.0), whereby the "[[" and "$"
>> methods for 'tbl_df' objects - as documented - throw an error if a variable
>> is not found.
>>
>> The problem is that my code uses tests like this:
>>
>>         if (is.null (x$var)) {...}
>>
>> to see whether 'x' has a variable 'var'. Obviously, I can work around this
>> using
>>
>>         if (!("var" %in% names(x))) {...}
>>
>> but (a) I like the first version better, in terms of the code being
>> understandable; and (b) isn't there a long history whereby we can expect a
>> NULL result when accessing an absent member of a list (and hence a
>> data.frame)? (c) the code base for 'lsmeans' has about 50 instances of such
>> tests.
>>
>> Anyway, I wonder if a lot of other package developers test for absent
>> variables in that first way; if so, they too are in for a rude awakening if
>> their users provide a tbl_df instead of a data.frame. And what is considered
>> the best practice for testing absence of a list member? Apparently, not
>> either of the above; and because of (c), I want to do these many tedious
>> corrections only once.
>>
>> Thanks for any light you can shed.
>
>
> This is why CRAN asks that people test reverse dependencies.

Which we did do - the problem is that this is actually caused by a
recursive reverse dependency (lsmeans -> dplyr -> tibble), and we
didn't correctly anticipate how much pain this would cause.

> I think the most defensive thing you can do is to write a small function
>
> name_missing <- function(x, name)
>     !(name %in% names(x))
>
> and use name_missing(x, "var") in your tests.  (Pick your own name to make
> your code understandable if you don't like my choice.)
>
> You could suggest to the tibble maintainers that they add a function like
> this.

We're definitely going to add this.

And I think we'll make df[["var"]] return NULL too, so at least
there's one easy way to opt out.

The motivation for this change was that returning NULL + recycling
rules means it's very easy for errors to silently propagate. But I
think this approach might be somewhat too aggressive - I hadn't
considered that people use `is.null()` to check for missing columns.

We'll try and get an update to tibble out soon after useR.  Thoughts
on what we should do are greatly appreciated.

Hadley

-- 
http://hadley.nz


From russell-lenth at uiowa.edu  Mon Jun 27 17:05:37 2016
From: russell-lenth at uiowa.edu (Lenth, Russell V)
Date: Mon, 27 Jun 2016 15:05:37 +0000
Subject: [R-pkg-devel] Absent variables and tibble
In-Reply-To: <CABdHhvH3kcyJemis8oTVtzRQCo7HbqNO+SjYNGVWvnincOUEMg@mail.gmail.com>
References: <BY2PR0401MB0919D5A98E5F6CF2824682F6F1210@BY2PR0401MB0919.namprd04.prod.outlook.com>
	<4dee6bac-6ffa-4597-e033-1e5a89dc83d1@gmail.com>,
	<CABdHhvH3kcyJemis8oTVtzRQCo7HbqNO+SjYNGVWvnincOUEMg@mail.gmail.com>
Message-ID: <644033AD-70EE-4AD5-A36B-371D04297B7F@uiowa.edu>

Thanks, Hadley. I do understand why you'd want more careful checking. 

If you're going to provide a variable-existing function, may I suggest a short name like 'has'? I.e., has(x, var) returns TRUE if x has var in it. 

Thanks

Russ

> On Jun 27, 2016, at 9:47 AM, Hadley Wickham <h.wickham at gmail.com> wrote:
> 
> On Mon, Jun 27, 2016 at 9:03 AM, Duncan Murdoch
> <murdoch.duncan at gmail.com> wrote:
>> On 27/06/2016 9:22 AM, Lenth, Russell V wrote:
>>> 
>>> My package 'lsmeans' is now suddenly broken because of a new provision in
>>> the 'tibble' package (loaded by 'dplyr' 0.5.0), whereby the "[[" and "$"
>>> methods for 'tbl_df' objects - as documented - throw an error if a variable
>>> is not found.
>>> 
>>> The problem is that my code uses tests like this:
>>> 
>>>        if (is.null (x$var)) {...}
>>> 
>>> to see whether 'x' has a variable 'var'. Obviously, I can work around this
>>> using
>>> 
>>>        if (!("var" %in% names(x))) {...}
>>> 
>>> but (a) I like the first version better, in terms of the code being
>>> understandable; and (b) isn't there a long history whereby we can expect a
>>> NULL result when accessing an absent member of a list (and hence a
>>> data.frame)? (c) the code base for 'lsmeans' has about 50 instances of such
>>> tests.
>>> 
>>> Anyway, I wonder if a lot of other package developers test for absent
>>> variables in that first way; if so, they too are in for a rude awakening if
>>> their users provide a tbl_df instead of a data.frame. And what is considered
>>> the best practice for testing absence of a list member? Apparently, not
>>> either of the above; and because of (c), I want to do these many tedious
>>> corrections only once.
>>> 
>>> Thanks for any light you can shed.
>> 
>> 
>> This is why CRAN asks that people test reverse dependencies.
> 
> Which we did do - the problem is that this is actually caused by a
> recursive reverse dependency (lsmeans -> dplyr -> tibble), and we
> didn't correctly anticipate how much pain this would cause.
> 
>> I think the most defensive thing you can do is to write a small function
>> 
>> name_missing <- function(x, name)
>>    !(name %in% names(x))
>> 
>> and use name_missing(x, "var") in your tests.  (Pick your own name to make
>> your code understandable if you don't like my choice.)
>> 
>> You could suggest to the tibble maintainers that they add a function like
>> this.
> 
> We're definitely going to add this.
> 
> And I think we'll make df[["var"]] return NULL too, so at least
> there's one easy way to opt out.
> 
> The motivation for this change was that returning NULL + recycling
> rules means it's very easy for errors to silently propagate. But I
> think this approach might be somewhat too aggressive - I hadn't
> considered that people use `is.null()` to check for missing columns.
> 
> We'll try and get an update to tibble out soon after useR.  Thoughts
> on what we should do are greatly appreciated.
> 
> Hadley
> 
> -- 
> http://hadley.nz


From tkeitt at utexas.edu  Mon Jun 27 17:08:15 2016
From: tkeitt at utexas.edu (Tim Keitt)
Date: Mon, 27 Jun 2016 10:08:15 -0500
Subject: [R-pkg-devel] Force namespace prefix for a loaded package
	function
In-Reply-To: <CAO1zAVZ_Q1DLhbOMZhzpb3eovMKUPeKjAgGgXsOq1sDop7yn+w@mail.gmail.com>
References: <CANnL8gr-YpDKevL=kEjRCvVDB-nEmRn_vz1s3p90rC+u+VPx6w@mail.gmail.com>
	<CAO1zAVZ_Q1DLhbOMZhzpb3eovMKUPeKjAgGgXsOq1sDop7yn+w@mail.gmail.com>
Message-ID: <CANnL8grcvXRfNQEaXO_Q+Y_KboGd=TG=-79UMo4ZcBHkX22TBw@mail.gmail.com>

http://www.keittlab.org/

On Mon, Jun 27, 2016 at 3:22 AM, Joris Meys <jorismeys at gmail.com> wrote:

> If you want to call a non exported function, you need three colons
>
> X:::f ()
>
> And frankly, that is a bad idea.
>
I think you missed the point (and stated the obvious).

A well-designed namespace feature would give control of imports to the code
user, not the code writer.

Right now, I have to avoid all the function names in base because I will
cause a collision. If I want to have an "options" function in my package, I
have to make it "pkgname_options" rather than pkgname::options, which is
greatly preferable and would allow the user to decide whether they want to
import it and then simply use "options" and "base::options".

I've always considered this all-or-nothing approach to imports a bug in the
implementation of namespaces in R. I was trying to suggest that it be
fixed. (Probably should have sent this to r-devel actually.)

THK



> Cheers
> Joris
> On 26 Jun 2016 19:37, "Tim Keitt" <tkeitt at utexas.edu> wrote:
>
>> It would be rather nice if we could define functions in our packages that
>> must be called with the namespace prefix.
>>
>> I'd like to do
>>
>> #' @protected (or some such)
>> f = function(...) list(...)
>>
>> in package scope and then
>>
>> library(x)
>> f(1)             # fails
>> x::f(1)         # succeeds
>>
>> Currently unless I am missing something, a function is either exported to
>> global scope or not available. This could be done if package loading made
>> two environments, one in the path and another not in the path, and then
>> have the namespace prefix search both in succession.
>>
>> Yes, you could do
>>
>> #' @export
>> x_f = function(...) list(...)
>>
>> library(x)
>> x_f(1)
>>
>> but I would prefer reusing the namespace prefix syntax.
>>
>> This would also avoid name collisions between package, which ideally is
>> the
>> purpose of a namespace.
>>
>> I suppose also you could make two packages and list one in Imports: but I
>> find that less satisfying because it requires a different namespace
>> prefix.
>>
>> Or am I missing something obvious here.
>>
>> THK
>>
>> http://www.keittlab.org/
>>
>>         [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>

	[[alternative HTML version deleted]]


From murdoch.duncan at gmail.com  Mon Jun 27 17:19:39 2016
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Mon, 27 Jun 2016 11:19:39 -0400
Subject: [R-pkg-devel] Force namespace prefix for a loaded package
 function
In-Reply-To: <CANnL8grcvXRfNQEaXO_Q+Y_KboGd=TG=-79UMo4ZcBHkX22TBw@mail.gmail.com>
References: <CANnL8gr-YpDKevL=kEjRCvVDB-nEmRn_vz1s3p90rC+u+VPx6w@mail.gmail.com>
	<CAO1zAVZ_Q1DLhbOMZhzpb3eovMKUPeKjAgGgXsOq1sDop7yn+w@mail.gmail.com>
	<CANnL8grcvXRfNQEaXO_Q+Y_KboGd=TG=-79UMo4ZcBHkX22TBw@mail.gmail.com>
Message-ID: <122b1ce5-413a-c585-8c9d-fdc7d7cc52fd@gmail.com>

On 27/06/2016 11:08 AM, Tim Keitt wrote:
> http://www.keittlab.org/
>
> On Mon, Jun 27, 2016 at 3:22 AM, Joris Meys <jorismeys at gmail.com> wrote:
>
> > If you want to call a non exported function, you need three colons
> >
> > X:::f ()
> >
> > And frankly, that is a bad idea.
> >
> I think you missed the point (and stated the obvious).
>
> A well-designed namespace feature would give control of imports to the code
> user, not the code writer.
>
> Right now, I have to avoid all the function names in base because I will
> cause a collision. If I want to have an "options" function in my package, I
> have to make it "pkgname_options" rather than pkgname::options, which is
> greatly preferable and would allow the user to decide whether they want to
> import it and then simply use "options" and "base::options".
>
> I've always considered this all-or-nothing approach to imports a bug in the
> implementation of namespaces in R. I was trying to suggest that it be
> fixed. (Probably should have sent this to r-devel actually.)

The base package is special, but for all other packages there's no 
"all-or-nothing" approach to imports, so your statement about a function 
named "options" doesn't really make sense.  If you want to do that, just 
do it, and other packages that prefer your implementation to the base 
one can import just that one function, or do the import at run time by 
calling it as pkgname::options().

Duncan Murdoch

>
> THK
>
>
>
> > Cheers
> > Joris
> > On 26 Jun 2016 19:37, "Tim Keitt" <tkeitt at utexas.edu> wrote:
> >
> >> It would be rather nice if we could define functions in our packages that
> >> must be called with the namespace prefix.
> >>
> >> I'd like to do
> >>
> >> #' @protected (or some such)
> >> f = function(...) list(...)
> >>
> >> in package scope and then
> >>
> >> library(x)
> >> f(1)             # fails
> >> x::f(1)         # succeeds
> >>
> >> Currently unless I am missing something, a function is either exported to
> >> global scope or not available. This could be done if package loading made
> >> two environments, one in the path and another not in the path, and then
> >> have the namespace prefix search both in succession.
> >>
> >> Yes, you could do
> >>
> >> #' @export
> >> x_f = function(...) list(...)
> >>
> >> library(x)
> >> x_f(1)
> >>
> >> but I would prefer reusing the namespace prefix syntax.
> >>
> >> This would also avoid name collisions between package, which ideally is
> >> the
> >> purpose of a namespace.
> >>
> >> I suppose also you could make two packages and list one in Imports: but I
> >> find that less satisfying because it requires a different namespace
> >> prefix.
> >>
> >> Or am I missing something obvious here.
> >>
> >> THK
> >>
> >> http://www.keittlab.org/
> >>
> >>         [[alternative HTML version deleted]]
> >>
> >> ______________________________________________
> >> R-package-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>
> >
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From thierry.onkelinx at inbo.be  Mon Jun 27 17:40:02 2016
From: thierry.onkelinx at inbo.be (Thierry Onkelinx)
Date: Mon, 27 Jun 2016 17:40:02 +0200
Subject: [R-pkg-devel] Absent variables and tibble
In-Reply-To: <644033AD-70EE-4AD5-A36B-371D04297B7F@uiowa.edu>
References: <BY2PR0401MB0919D5A98E5F6CF2824682F6F1210@BY2PR0401MB0919.namprd04.prod.outlook.com>
	<4dee6bac-6ffa-4597-e033-1e5a89dc83d1@gmail.com>
	<CABdHhvH3kcyJemis8oTVtzRQCo7HbqNO+SjYNGVWvnincOUEMg@mail.gmail.com>
	<644033AD-70EE-4AD5-A36B-371D04297B7F@uiowa.edu>
Message-ID: <CAJuCY5xxoJ6QTu0-4SWteyojhJ-RePEQqTR64BCLs7QZVgkmdw@mail.gmail.com>

Dear Russell.

The assertthat package (by Hadley) provides a has_name() function.

> library(assertthat)
> x <- data.frame(y = NA)
> has_name(x, "y")
[1] TRUE
> has_name(x, "x")
[1] FALSE

Best regards,

ir. Thierry Onkelinx
Instituut voor natuur- en bosonderzoek / Research Institute for Nature and
Forest
team Biometrie & Kwaliteitszorg / team Biometrics & Quality Assurance
Kliniekstraat 25
1070 Anderlecht
Belgium

To call in the statistician after the experiment is done may be no more
than asking him to perform a post-mortem examination: he may be able to say
what the experiment died of. ~ Sir Ronald Aylmer Fisher
The plural of anecdote is not data. ~ Roger Brinner
The combination of some data and an aching desire for an answer does not
ensure that a reasonable answer can be extracted from a given body of data.
~ John Tukey

2016-06-27 17:05 GMT+02:00 Lenth, Russell V <russell-lenth at uiowa.edu>:

> Thanks, Hadley. I do understand why you'd want more careful checking.
>
> If you're going to provide a variable-existing function, may I suggest a
> short name like 'has'? I.e., has(x, var) returns TRUE if x has var in it.
>
> Thanks
>
> Russ
>
> > On Jun 27, 2016, at 9:47 AM, Hadley Wickham <h.wickham at gmail.com> wrote:
> >
> > On Mon, Jun 27, 2016 at 9:03 AM, Duncan Murdoch
> > <murdoch.duncan at gmail.com> wrote:
> >> On 27/06/2016 9:22 AM, Lenth, Russell V wrote:
> >>>
> >>> My package 'lsmeans' is now suddenly broken because of a new provision
> in
> >>> the 'tibble' package (loaded by 'dplyr' 0.5.0), whereby the "[[" and
> "$"
> >>> methods for 'tbl_df' objects - as documented - throw an error if a
> variable
> >>> is not found.
> >>>
> >>> The problem is that my code uses tests like this:
> >>>
> >>>        if (is.null (x$var)) {...}
> >>>
> >>> to see whether 'x' has a variable 'var'. Obviously, I can work around
> this
> >>> using
> >>>
> >>>        if (!("var" %in% names(x))) {...}
> >>>
> >>> but (a) I like the first version better, in terms of the code being
> >>> understandable; and (b) isn't there a long history whereby we can
> expect a
> >>> NULL result when accessing an absent member of a list (and hence a
> >>> data.frame)? (c) the code base for 'lsmeans' has about 50 instances of
> such
> >>> tests.
> >>>
> >>> Anyway, I wonder if a lot of other package developers test for absent
> >>> variables in that first way; if so, they too are in for a rude
> awakening if
> >>> their users provide a tbl_df instead of a data.frame. And what is
> considered
> >>> the best practice for testing absence of a list member? Apparently, not
> >>> either of the above; and because of (c), I want to do these many
> tedious
> >>> corrections only once.
> >>>
> >>> Thanks for any light you can shed.
> >>
> >>
> >> This is why CRAN asks that people test reverse dependencies.
> >
> > Which we did do - the problem is that this is actually caused by a
> > recursive reverse dependency (lsmeans -> dplyr -> tibble), and we
> > didn't correctly anticipate how much pain this would cause.
> >
> >> I think the most defensive thing you can do is to write a small function
> >>
> >> name_missing <- function(x, name)
> >>    !(name %in% names(x))
> >>
> >> and use name_missing(x, "var") in your tests.  (Pick your own name to
> make
> >> your code understandable if you don't like my choice.)
> >>
> >> You could suggest to the tibble maintainers that they add a function
> like
> >> this.
> >
> > We're definitely going to add this.
> >
> > And I think we'll make df[["var"]] return NULL too, so at least
> > there's one easy way to opt out.
> >
> > The motivation for this change was that returning NULL + recycling
> > rules means it's very easy for errors to silently propagate. But I
> > think this approach might be somewhat too aggressive - I hadn't
> > considered that people use `is.null()` to check for missing columns.
> >
> > We'll try and get an update to tibble out soon after useR.  Thoughts
> > on what we should do are greatly appreciated.
> >
> > Hadley
> >
> > --
> > http://hadley.nz
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From murdoch.duncan at gmail.com  Mon Jun 27 18:33:13 2016
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Mon, 27 Jun 2016 12:33:13 -0400
Subject: [R-pkg-devel] Absent variables and tibble
In-Reply-To: <CABdHhvH3kcyJemis8oTVtzRQCo7HbqNO+SjYNGVWvnincOUEMg@mail.gmail.com>
References: <BY2PR0401MB0919D5A98E5F6CF2824682F6F1210@BY2PR0401MB0919.namprd04.prod.outlook.com>
	<4dee6bac-6ffa-4597-e033-1e5a89dc83d1@gmail.com>
	<CABdHhvH3kcyJemis8oTVtzRQCo7HbqNO+SjYNGVWvnincOUEMg@mail.gmail.com>
Message-ID: <b8641e67-00d4-a060-763e-55fefc7c11fd@gmail.com>

On 27/06/2016 10:46 AM, Hadley Wickham wrote:
> On Mon, Jun 27, 2016 at 9:03 AM, Duncan Murdoch
> <murdoch.duncan at gmail.com> wrote:
> > On 27/06/2016 9:22 AM, Lenth, Russell V wrote:
> >>
> >> My package 'lsmeans' is now suddenly broken because of a new provision in
> >> the 'tibble' package (loaded by 'dplyr' 0.5.0), whereby the "[[" and "$"
> >> methods for 'tbl_df' objects - as documented - throw an error if a variable
> >> is not found.
> >>
> >> The problem is that my code uses tests like this:
> >>
> >>         if (is.null (x$var)) {...}
> >>
> >> to see whether 'x' has a variable 'var'. Obviously, I can work around this
> >> using
> >>
> >>         if (!("var" %in% names(x))) {...}
> >>
> >> but (a) I like the first version better, in terms of the code being
> >> understandable; and (b) isn't there a long history whereby we can expect a
> >> NULL result when accessing an absent member of a list (and hence a
> >> data.frame)? (c) the code base for 'lsmeans' has about 50 instances of such
> >> tests.
> >>
> >> Anyway, I wonder if a lot of other package developers test for absent
> >> variables in that first way; if so, they too are in for a rude awakening if
> >> their users provide a tbl_df instead of a data.frame. And what is considered
> >> the best practice for testing absence of a list member? Apparently, not
> >> either of the above; and because of (c), I want to do these many tedious
> >> corrections only once.
> >>
> >> Thanks for any light you can shed.
> >
> >
> > This is why CRAN asks that people test reverse dependencies.
>
> Which we did do - the problem is that this is actually caused by a
> recursive reverse dependency (lsmeans -> dplyr -> tibble), and we
> didn't correctly anticipate how much pain this would cause.

In fact, it's even harder than that, according to a message Russell sent 
me in private.  Neither package depends on the other; it happens when a 
user passes a 'tbl_df' object to Russell's package, and the tibble 
methods get called for it.  This is an unfortunate consequence of the S3 
system:  there's no place to define exactly what S3 methods are supposed 
to do, and no easy way for a package writer to test against all possible 
objects that might get passed in.

I guess my advice would be not to trigger an error in a case like this, 
though you might want to lobby for the base "[[" and "$" methods to 
(optionally?) do so.

Duncan Murdoch


From h.wickham at gmail.com  Mon Jun 27 19:09:56 2016
From: h.wickham at gmail.com (Hadley Wickham)
Date: Mon, 27 Jun 2016 12:09:56 -0500
Subject: [R-pkg-devel] Absent variables and tibble
In-Reply-To: <644033AD-70EE-4AD5-A36B-371D04297B7F@uiowa.edu>
References: <BY2PR0401MB0919D5A98E5F6CF2824682F6F1210@BY2PR0401MB0919.namprd04.prod.outlook.com>
	<4dee6bac-6ffa-4597-e033-1e5a89dc83d1@gmail.com>
	<CABdHhvH3kcyJemis8oTVtzRQCo7HbqNO+SjYNGVWvnincOUEMg@mail.gmail.com>
	<644033AD-70EE-4AD5-A36B-371D04297B7F@uiowa.edu>
Message-ID: <CABdHhvHkQ48VrauyxrYiVjYAAAnsC9ef4gu36iXPh7QvEZSWEg@mail.gmail.com>

The other thing you need to be aware of it you're using the other
approach is partial matching:

df <- data.frame(xyz = 1)
is.null(df$x)
#> [1] FALSE

Duncan - I think that argues for including a has_name() (hasName() ?)
function in base R. Is that something you'd consider?

Hadley

On Mon, Jun 27, 2016 at 10:05 AM, Lenth, Russell V
<russell-lenth at uiowa.edu> wrote:
> Thanks, Hadley. I do understand why you'd want more careful checking.
>
> If you're going to provide a variable-existing function, may I suggest a short name like 'has'? I.e., has(x, var) returns TRUE if x has var in it.
>
> Thanks
>
> Russ
>
>> On Jun 27, 2016, at 9:47 AM, Hadley Wickham <h.wickham at gmail.com> wrote:
>>
>> On Mon, Jun 27, 2016 at 9:03 AM, Duncan Murdoch
>> <murdoch.duncan at gmail.com> wrote:
>>> On 27/06/2016 9:22 AM, Lenth, Russell V wrote:
>>>>
>>>> My package 'lsmeans' is now suddenly broken because of a new provision in
>>>> the 'tibble' package (loaded by 'dplyr' 0.5.0), whereby the "[[" and "$"
>>>> methods for 'tbl_df' objects - as documented - throw an error if a variable
>>>> is not found.
>>>>
>>>> The problem is that my code uses tests like this:
>>>>
>>>>        if (is.null (x$var)) {...}
>>>>
>>>> to see whether 'x' has a variable 'var'. Obviously, I can work around this
>>>> using
>>>>
>>>>        if (!("var" %in% names(x))) {...}
>>>>
>>>> but (a) I like the first version better, in terms of the code being
>>>> understandable; and (b) isn't there a long history whereby we can expect a
>>>> NULL result when accessing an absent member of a list (and hence a
>>>> data.frame)? (c) the code base for 'lsmeans' has about 50 instances of such
>>>> tests.
>>>>
>>>> Anyway, I wonder if a lot of other package developers test for absent
>>>> variables in that first way; if so, they too are in for a rude awakening if
>>>> their users provide a tbl_df instead of a data.frame. And what is considered
>>>> the best practice for testing absence of a list member? Apparently, not
>>>> either of the above; and because of (c), I want to do these many tedious
>>>> corrections only once.
>>>>
>>>> Thanks for any light you can shed.
>>>
>>>
>>> This is why CRAN asks that people test reverse dependencies.
>>
>> Which we did do - the problem is that this is actually caused by a
>> recursive reverse dependency (lsmeans -> dplyr -> tibble), and we
>> didn't correctly anticipate how much pain this would cause.
>>
>>> I think the most defensive thing you can do is to write a small function
>>>
>>> name_missing <- function(x, name)
>>>    !(name %in% names(x))
>>>
>>> and use name_missing(x, "var") in your tests.  (Pick your own name to make
>>> your code understandable if you don't like my choice.)
>>>
>>> You could suggest to the tibble maintainers that they add a function like
>>> this.
>>
>> We're definitely going to add this.
>>
>> And I think we'll make df[["var"]] return NULL too, so at least
>> there's one easy way to opt out.
>>
>> The motivation for this change was that returning NULL + recycling
>> rules means it's very easy for errors to silently propagate. But I
>> think this approach might be somewhat too aggressive - I hadn't
>> considered that people use `is.null()` to check for missing columns.
>>
>> We'll try and get an update to tibble out soon after useR.  Thoughts
>> on what we should do are greatly appreciated.
>>
>> Hadley
>>
>> --
>> http://hadley.nz



-- 
http://hadley.nz


From murdoch.duncan at gmail.com  Mon Jun 27 19:50:28 2016
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Mon, 27 Jun 2016 13:50:28 -0400
Subject: [R-pkg-devel] Absent variables and tibble
In-Reply-To: <CABdHhvHkQ48VrauyxrYiVjYAAAnsC9ef4gu36iXPh7QvEZSWEg@mail.gmail.com>
References: <BY2PR0401MB0919D5A98E5F6CF2824682F6F1210@BY2PR0401MB0919.namprd04.prod.outlook.com>
	<4dee6bac-6ffa-4597-e033-1e5a89dc83d1@gmail.com>
	<CABdHhvH3kcyJemis8oTVtzRQCo7HbqNO+SjYNGVWvnincOUEMg@mail.gmail.com>
	<644033AD-70EE-4AD5-A36B-371D04297B7F@uiowa.edu>
	<CABdHhvHkQ48VrauyxrYiVjYAAAnsC9ef4gu36iXPh7QvEZSWEg@mail.gmail.com>
Message-ID: <f77d5ab8-6d94-08e2-13e2-752961b3faa4@gmail.com>

On 27/06/2016 1:09 PM, Hadley Wickham wrote:
> The other thing you need to be aware of it you're using the other
> approach is partial matching:
>
> df <- data.frame(xyz = 1)
> is.null(df$x)
> #> [1] FALSE
>
> Duncan - I think that argues for including a has_name() (hasName() ?)
> function in base R. Is that something you'd consider?

Yes, I'd consider it.  I think hasName() would be more consistent with 
other has*() functions in the R sources.

I guess the implementation should be defined to be equivalent to

hasName <- function(x, name)
   name %in% names(x)

though it would make sense to make a faster internal implementation; 
!is.null(df$x) is quite a bit faster than "x" %in% names(df).

Duncan Murdoch


>
> Hadley
>
> On Mon, Jun 27, 2016 at 10:05 AM, Lenth, Russell V
> <russell-lenth at uiowa.edu> wrote:
> > Thanks, Hadley. I do understand why you'd want more careful checking.
> >
> > If you're going to provide a variable-existing function, may I suggest a short name like 'has'? I.e., has(x, var) returns TRUE if x has var in it.
> >
> > Thanks
> >
> > Russ
> >
> >> On Jun 27, 2016, at 9:47 AM, Hadley Wickham <h.wickham at gmail.com> wrote:
> >>
> >> On Mon, Jun 27, 2016 at 9:03 AM, Duncan Murdoch
> >> <murdoch.duncan at gmail.com> wrote:
> >>> On 27/06/2016 9:22 AM, Lenth, Russell V wrote:
> >>>>
> >>>> My package 'lsmeans' is now suddenly broken because of a new provision in
> >>>> the 'tibble' package (loaded by 'dplyr' 0.5.0), whereby the "[[" and "$"
> >>>> methods for 'tbl_df' objects - as documented - throw an error if a variable
> >>>> is not found.
> >>>>
> >>>> The problem is that my code uses tests like this:
> >>>>
> >>>>        if (is.null (x$var)) {...}
> >>>>
> >>>> to see whether 'x' has a variable 'var'. Obviously, I can work around this
> >>>> using
> >>>>
> >>>>        if (!("var" %in% names(x))) {...}
> >>>>
> >>>> but (a) I like the first version better, in terms of the code being
> >>>> understandable; and (b) isn't there a long history whereby we can expect a
> >>>> NULL result when accessing an absent member of a list (and hence a
> >>>> data.frame)? (c) the code base for 'lsmeans' has about 50 instances of such
> >>>> tests.
> >>>>
> >>>> Anyway, I wonder if a lot of other package developers test for absent
> >>>> variables in that first way; if so, they too are in for a rude awakening if
> >>>> their users provide a tbl_df instead of a data.frame. And what is considered
> >>>> the best practice for testing absence of a list member? Apparently, not
> >>>> either of the above; and because of (c), I want to do these many tedious
> >>>> corrections only once.
> >>>>
> >>>> Thanks for any light you can shed.
> >>>
> >>>
> >>> This is why CRAN asks that people test reverse dependencies.
> >>
> >> Which we did do - the problem is that this is actually caused by a
> >> recursive reverse dependency (lsmeans -> dplyr -> tibble), and we
> >> didn't correctly anticipate how much pain this would cause.
> >>
> >>> I think the most defensive thing you can do is to write a small function
> >>>
> >>> name_missing <- function(x, name)
> >>>    !(name %in% names(x))
> >>>
> >>> and use name_missing(x, "var") in your tests.  (Pick your own name to make
> >>> your code understandable if you don't like my choice.)
> >>>
> >>> You could suggest to the tibble maintainers that they add a function like
> >>> this.
> >>
> >> We're definitely going to add this.
> >>
> >> And I think we'll make df[["var"]] return NULL too, so at least
> >> there's one easy way to opt out.
> >>
> >> The motivation for this change was that returning NULL + recycling
> >> rules means it's very easy for errors to silently propagate. But I
> >> think this approach might be somewhat too aggressive - I hadn't
> >> considered that people use `is.null()` to check for missing columns.
> >>
> >> We'll try and get an update to tibble out soon after useR.  Thoughts
> >> on what we should do are greatly appreciated.
> >>
> >> Hadley
> >>
> >> --
> >> http://hadley.nz
>
>
>


From tkeitt at utexas.edu  Mon Jun 27 23:46:21 2016
From: tkeitt at utexas.edu (Tim Keitt)
Date: Mon, 27 Jun 2016 16:46:21 -0500
Subject: [R-pkg-devel] Force namespace prefix for a loaded package
	function
In-Reply-To: <122b1ce5-413a-c585-8c9d-fdc7d7cc52fd@gmail.com>
References: <CANnL8gr-YpDKevL=kEjRCvVDB-nEmRn_vz1s3p90rC+u+VPx6w@mail.gmail.com>
	<CAO1zAVZ_Q1DLhbOMZhzpb3eovMKUPeKjAgGgXsOq1sDop7yn+w@mail.gmail.com>
	<CANnL8grcvXRfNQEaXO_Q+Y_KboGd=TG=-79UMo4ZcBHkX22TBw@mail.gmail.com>
	<122b1ce5-413a-c585-8c9d-fdc7d7cc52fd@gmail.com>
Message-ID: <CANnL8gpZDcoV0fwOhau=x5NMWoD94Z90oCgTqrVDR8QukUovVQ@mail.gmail.com>

http://www.keittlab.org/

On Mon, Jun 27, 2016 at 10:19 AM, Duncan Murdoch <murdoch.duncan at gmail.com>
wrote:

> On 27/06/2016 11:08 AM, Tim Keitt wrote:
>
>> http://www.keittlab.org/
>>
>> On Mon, Jun 27, 2016 at 3:22 AM, Joris Meys <jorismeys at gmail.com> wrote:
>>
>> > If you want to call a non exported function, you need three colons
>> >
>> > X:::f ()
>> >
>> > And frankly, that is a bad idea.
>> >
>> I think you missed the point (and stated the obvious).
>>
>> A well-designed namespace feature would give control of imports to the
>> code
>> user, not the code writer.
>>
>> Right now, I have to avoid all the function names in base because I will
>> cause a collision. If I want to have an "options" function in my package,
>> I
>> have to make it "pkgname_options" rather than pkgname::options, which is
>> greatly preferable and would allow the user to decide whether they want to
>> import it and then simply use "options" and "base::options".
>>
>> I've always considered this all-or-nothing approach to imports a bug in
>> the
>> implementation of namespaces in R. I was trying to suggest that it be
>> fixed. (Probably should have sent this to r-devel actually.)
>>
>
> The base package is special, but for all other packages there's no
> "all-or-nothing" approach to imports, so your statement about a function
> named "options" doesn't really make sense.  If you want to do that, just do
> it, and other packages that prefer your implementation to the base one can
> import just that one function, or do the import at run time by calling it
> as pkgname::options().
>

I know that. I mean for someone writing a script, not a package.

Its all good for package writers. Its quite simple to control imports
there. But not so much for someone using the package in R to write a
script. You either go with package_name::object for everything or you call
"library" and you get everything the packager exported.

It would be nice to 1) be able to hold back some functions from being fully
exported in a package and (maybe or) 2) extend the functionality of the
NAMESPACE file to the user session via a set of functions.

Does that make any more sense?

THK


>
> Duncan Murdoch
>
>
>> THK
>>
>>
>>
>> > Cheers
>> > Joris
>> > On 26 Jun 2016 19:37, "Tim Keitt" <tkeitt at utexas.edu> wrote:
>> >
>> >> It would be rather nice if we could define functions in our packages
>> that
>> >> must be called with the namespace prefix.
>> >>
>> >> I'd like to do
>> >>
>> >> #' @protected (or some such)
>> >> f = function(...) list(...)
>> >>
>> >> in package scope and then
>> >>
>> >> library(x)
>> >> f(1)             # fails
>> >> x::f(1)         # succeeds
>> >>
>> >> Currently unless I am missing something, a function is either exported
>> to
>> >> global scope or not available. This could be done if package loading
>> made
>> >> two environments, one in the path and another not in the path, and then
>> >> have the namespace prefix search both in succession.
>> >>
>> >> Yes, you could do
>> >>
>> >> #' @export
>> >> x_f = function(...) list(...)
>> >>
>> >> library(x)
>> >> x_f(1)
>> >>
>> >> but I would prefer reusing the namespace prefix syntax.
>> >>
>> >> This would also avoid name collisions between package, which ideally is
>> >> the
>> >> purpose of a namespace.
>> >>
>> >> I suppose also you could make two packages and list one in Imports:
>> but I
>> >> find that less satisfying because it requires a different namespace
>> >> prefix.
>> >>
>> >> Or am I missing something obvious here.
>> >>
>> >> THK
>> >>
>> >> http://www.keittlab.org/
>> >>
>> >>         [[alternative HTML version deleted]]
>> >>
>> >> ______________________________________________
>> >> R-package-devel at r-project.org mailing list
>> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> >>
>> >
>>
>>         [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>
>
>

	[[alternative HTML version deleted]]


From murdoch.duncan at gmail.com  Tue Jun 28 00:18:06 2016
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Mon, 27 Jun 2016 18:18:06 -0400
Subject: [R-pkg-devel] Force namespace prefix for a loaded package
 function
In-Reply-To: <CANnL8gpZDcoV0fwOhau=x5NMWoD94Z90oCgTqrVDR8QukUovVQ@mail.gmail.com>
References: <CANnL8gr-YpDKevL=kEjRCvVDB-nEmRn_vz1s3p90rC+u+VPx6w@mail.gmail.com>
	<CAO1zAVZ_Q1DLhbOMZhzpb3eovMKUPeKjAgGgXsOq1sDop7yn+w@mail.gmail.com>
	<CANnL8grcvXRfNQEaXO_Q+Y_KboGd=TG=-79UMo4ZcBHkX22TBw@mail.gmail.com>
	<122b1ce5-413a-c585-8c9d-fdc7d7cc52fd@gmail.com>
	<CANnL8gpZDcoV0fwOhau=x5NMWoD94Z90oCgTqrVDR8QukUovVQ@mail.gmail.com>
Message-ID: <878ad15e-45b3-5c89-d7b1-bb1bc5686126@gmail.com>

On 27/06/2016 5:46 PM, Tim Keitt wrote:
>
>
> http://www.keittlab.org/
>
> On Mon, Jun 27, 2016 at 10:19 AM, Duncan Murdoch
> <murdoch.duncan at gmail.com <mailto:murdoch.duncan at gmail.com>> wrote:
>
>     On 27/06/2016 11:08 AM, Tim Keitt wrote:
>
>         http://www.keittlab.org/
>
>         On Mon, Jun 27, 2016 at 3:22 AM, Joris Meys <jorismeys at gmail.com
>         <mailto:jorismeys at gmail.com>> wrote:
>
>         > If you want to call a non exported function, you need three colons
>         >
>         > X:::f ()
>         >
>         > And frankly, that is a bad idea.
>         >
>         I think you missed the point (and stated the obvious).
>
>         A well-designed namespace feature would give control of imports
>         to the code
>         user, not the code writer.
>
>         Right now, I have to avoid all the function names in base
>         because I will
>         cause a collision. If I want to have an "options" function in my
>         package, I
>         have to make it "pkgname_options" rather than pkgname::options,
>         which is
>         greatly preferable and would allow the user to decide whether
>         they want to
>         import it and then simply use "options" and "base::options".
>
>         I've always considered this all-or-nothing approach to imports a
>         bug in the
>         implementation of namespaces in R. I was trying to suggest that
>         it be
>         fixed. (Probably should have sent this to r-devel actually.)
>
>
>     The base package is special, but for all other packages there's no
>     "all-or-nothing" approach to imports, so your statement about a
>     function named "options" doesn't really make sense.  If you want to
>     do that, just do it, and other packages that prefer your
>     implementation to the base one can import just that one function, or
>     do the import at run time by calling it as pkgname::options().
>
>
> I know that. I mean for someone writing a script, not a package.
>
> Its all good for package writers. Its quite simple to control imports
> there. But not so much for someone using the package in R to write a
> script. You either go with package_name::object for everything or you
> call "library" and you get everything the packager exported.
>
> It would be nice to 1) be able to hold back some functions from being
> fully exported in a package and (maybe or) 2) extend the functionality
> of the NAMESPACE file to the user session via a set of functions.
>
> Does that make any more sense?

It makes a little more sense, but it's still not correct.  If you want 
to do the equivalent of importing foo::options, just add the line

options <- foo::options

at the start of your script.  This "imports" that one function, and 
nothing else from the foo namespace.

It has the side effect of leaving the options object in the current 
workspace afterwards.  If that concerns you, use local():

local( {
   options <- foo::options
   # Lots of calculations, computing result
   result
})

Duncan Murdoch


>
> THK
>
>
>
>     Duncan Murdoch
>
>
>         THK
>
>
>
>         > Cheers
>         > Joris
>         > On 26 Jun 2016 19:37, "Tim Keitt" <tkeitt at utexas.edu
>         <mailto:tkeitt at utexas.edu>> wrote:
>         >
>         >> It would be rather nice if we could define functions in our
>         packages that
>         >> must be called with the namespace prefix.
>         >>
>         >> I'd like to do
>         >>
>         >> #' @protected (or some such)
>         >> f = function(...) list(...)
>         >>
>         >> in package scope and then
>         >>
>         >> library(x)
>         >> f(1)             # fails
>         >> x::f(1)         # succeeds
>         >>
>         >> Currently unless I am missing something, a function is either
>         exported to
>         >> global scope or not available. This could be done if package
>         loading made
>         >> two environments, one in the path and another not in the
>         path, and then
>         >> have the namespace prefix search both in succession.
>         >>
>         >> Yes, you could do
>         >>
>         >> #' @export
>         >> x_f = function(...) list(...)
>         >>
>         >> library(x)
>         >> x_f(1)
>         >>
>         >> but I would prefer reusing the namespace prefix syntax.
>         >>
>         >> This would also avoid name collisions between package, which
>         ideally is
>         >> the
>         >> purpose of a namespace.
>         >>
>         >> I suppose also you could make two packages and list one in
>         Imports: but I
>         >> find that less satisfying because it requires a different
>         namespace
>         >> prefix.
>         >>
>         >> Or am I missing something obvious here.
>         >>
>         >> THK
>         >>
>         >> http://www.keittlab.org/
>         >>
>         >>         [[alternative HTML version deleted]]
>         >>
>         >> ______________________________________________
>         >> R-package-devel at r-project.org
>         <mailto:R-package-devel at r-project.org> mailing list
>         >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>         >>
>         >
>
>                 [[alternative HTML version deleted]]
>
>         ______________________________________________
>         R-package-devel at r-project.org
>         <mailto:R-package-devel at r-project.org> mailing list
>         https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>
>
>


From tkeitt at utexas.edu  Tue Jun 28 00:01:19 2016
From: tkeitt at utexas.edu (Tim Keitt)
Date: Mon, 27 Jun 2016 17:01:19 -0500
Subject: [R-pkg-devel] Force namespace prefix for a loaded package
	function
In-Reply-To: <CANnL8gpZDcoV0fwOhau=x5NMWoD94Z90oCgTqrVDR8QukUovVQ@mail.gmail.com>
References: <CANnL8gr-YpDKevL=kEjRCvVDB-nEmRn_vz1s3p90rC+u+VPx6w@mail.gmail.com>
	<CAO1zAVZ_Q1DLhbOMZhzpb3eovMKUPeKjAgGgXsOq1sDop7yn+w@mail.gmail.com>
	<CANnL8grcvXRfNQEaXO_Q+Y_KboGd=TG=-79UMo4ZcBHkX22TBw@mail.gmail.com>
	<122b1ce5-413a-c585-8c9d-fdc7d7cc52fd@gmail.com>
	<CANnL8gpZDcoV0fwOhau=x5NMWoD94Z90oCgTqrVDR8QukUovVQ@mail.gmail.com>
Message-ID: <CANnL8grP6w3=Gh8MQiv7ZSJ9+jgA5k0_i3cM-=pMXRvrBrzLmQ@mail.gmail.com>

http://www.keittlab.org/

On Mon, Jun 27, 2016 at 4:46 PM, Tim Keitt <tkeitt at utexas.edu> wrote:

>
>
> http://www.keittlab.org/
>
> On Mon, Jun 27, 2016 at 10:19 AM, Duncan Murdoch <murdoch.duncan at gmail.com
> > wrote:
>
>> On 27/06/2016 11:08 AM, Tim Keitt wrote:
>>
>>> http://www.keittlab.org/
>>>
>>> On Mon, Jun 27, 2016 at 3:22 AM, Joris Meys <jorismeys at gmail.com> wrote:
>>>
>>> > If you want to call a non exported function, you need three colons
>>> >
>>> > X:::f ()
>>> >
>>> > And frankly, that is a bad idea.
>>> >
>>> I think you missed the point (and stated the obvious).
>>>
>>> A well-designed namespace feature would give control of imports to the
>>> code
>>> user, not the code writer.
>>>
>>> Right now, I have to avoid all the function names in base because I will
>>> cause a collision. If I want to have an "options" function in my
>>> package, I
>>> have to make it "pkgname_options" rather than pkgname::options, which is
>>> greatly preferable and would allow the user to decide whether they want
>>> to
>>> import it and then simply use "options" and "base::options".
>>>
>>> I've always considered this all-or-nothing approach to imports a bug in
>>> the
>>> implementation of namespaces in R. I was trying to suggest that it be
>>> fixed. (Probably should have sent this to r-devel actually.)
>>>
>>
>> The base package is special, but for all other packages there's no
>> "all-or-nothing" approach to imports, so your statement about a function
>> named "options" doesn't really make sense.  If you want to do that, just do
>> it, and other packages that prefer your implementation to the base one can
>> import just that one function, or do the import at run time by calling it
>> as pkgname::options().
>>
>
> I know that. I mean for someone writing a script, not a package.
>
> Its all good for package writers. Its quite simple to control imports
> there. But not so much for someone using the package in R to write a
> script. You either go with package_name::object for everything or you call
> "library" and you get everything the packager exported.
>
> It would be nice to 1) be able to hold back some functions from being
> fully exported in a package and (maybe or) 2) extend the functionality of
> the NAMESPACE file to the user session via a set of functions.
>

Actually, now I see that those functions are available to the user in base
(although discouraged). I'll have to study them a bit.

THK


>
> Does that make any more sense?
>
> THK
>
>
>>
>> Duncan Murdoch
>>
>>
>>> THK
>>>
>>>
>>>
>>> > Cheers
>>> > Joris
>>> > On 26 Jun 2016 19:37, "Tim Keitt" <tkeitt at utexas.edu> wrote:
>>> >
>>> >> It would be rather nice if we could define functions in our packages
>>> that
>>> >> must be called with the namespace prefix.
>>> >>
>>> >> I'd like to do
>>> >>
>>> >> #' @protected (or some such)
>>> >> f = function(...) list(...)
>>> >>
>>> >> in package scope and then
>>> >>
>>> >> library(x)
>>> >> f(1)             # fails
>>> >> x::f(1)         # succeeds
>>> >>
>>> >> Currently unless I am missing something, a function is either
>>> exported to
>>> >> global scope or not available. This could be done if package loading
>>> made
>>> >> two environments, one in the path and another not in the path, and
>>> then
>>> >> have the namespace prefix search both in succession.
>>> >>
>>> >> Yes, you could do
>>> >>
>>> >> #' @export
>>> >> x_f = function(...) list(...)
>>> >>
>>> >> library(x)
>>> >> x_f(1)
>>> >>
>>> >> but I would prefer reusing the namespace prefix syntax.
>>> >>
>>> >> This would also avoid name collisions between package, which ideally
>>> is
>>> >> the
>>> >> purpose of a namespace.
>>> >>
>>> >> I suppose also you could make two packages and list one in Imports:
>>> but I
>>> >> find that less satisfying because it requires a different namespace
>>> >> prefix.
>>> >>
>>> >> Or am I missing something obvious here.
>>> >>
>>> >> THK
>>> >>
>>> >> http://www.keittlab.org/
>>> >>
>>> >>         [[alternative HTML version deleted]]
>>> >>
>>> >> ______________________________________________
>>> >> R-package-devel at r-project.org mailing list
>>> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>> >>
>>> >
>>>
>>>         [[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>>
>>
>>
>

	[[alternative HTML version deleted]]


From russell-lenth at uiowa.edu  Tue Jun 28 04:15:08 2016
From: russell-lenth at uiowa.edu (Lenth, Russell V)
Date: Tue, 28 Jun 2016 02:15:08 +0000
Subject: [R-pkg-devel] Absent variables and tibble
In-Reply-To: <f77d5ab8-6d94-08e2-13e2-752961b3faa4@gmail.com>
References: <BY2PR0401MB0919D5A98E5F6CF2824682F6F1210@BY2PR0401MB0919.namprd04.prod.outlook.com>
	<4dee6bac-6ffa-4597-e033-1e5a89dc83d1@gmail.com>
	<CABdHhvH3kcyJemis8oTVtzRQCo7HbqNO+SjYNGVWvnincOUEMg@mail.gmail.com>
	<644033AD-70EE-4AD5-A36B-371D04297B7F@uiowa.edu>
	<CABdHhvHkQ48VrauyxrYiVjYAAAnsC9ef4gu36iXPh7QvEZSWEg@mail.gmail.com>
	<f77d5ab8-6d94-08e2-13e2-752961b3faa4@gmail.com>
Message-ID: <BY2PR0401MB0919DE33CF9AE685F0666C47F1220@BY2PR0401MB0919.namprd04.prod.outlook.com>

Hadley's note on partial matching has me scared the most concerning the as.null() coding. So the need for a hasName() (or whatever) function seems all the more compelling, and that it be in base R. Perhaps it should be generic, with a default method that searches in the names attribute, potentially extensible to other classes.

Thanks so much, several of you, for your positive and helpful responses.

Russ

-----Original Message-----
From: Duncan Murdoch [mailto:murdoch.duncan at gmail.com] 
Sent: Monday, June 27, 2016 12:50 PM
To: Hadley Wickham <h.wickham at gmail.com>; Lenth, Russell V <russell-lenth at uiowa.edu>
Cc: r-package-devel at r-project.org
Subject: Re: [R-pkg-devel] Absent variables and tibble

On 27/06/2016 1:09 PM, Hadley Wickham wrote:
> The other thing you need to be aware of it you're using the other 
> approach is partial matching:
>
> df <- data.frame(xyz = 1)
> is.null(df$x)
> #> [1] FALSE
>
> Duncan - I think that argues for including a has_name() (hasName() ?) 
> function in base R. Is that something you'd consider?

Yes, I'd consider it.  I think hasName() would be more consistent with other has*() functions in the R sources.

I guess the implementation should be defined to be equivalent to

hasName <- function(x, name)
   name %in% names(x)

though it would make sense to make a faster internal implementation;
!is.null(df$x) is quite a bit faster than "x" %in% names(df).

Duncan Murdoch


>
> Hadley
>
> On Mon, Jun 27, 2016 at 10:05 AM, Lenth, Russell V 
> <russell-lenth at uiowa.edu> wrote:
> > Thanks, Hadley. I do understand why you'd want more careful checking.
> >
> > If you're going to provide a variable-existing function, may I suggest a short name like 'has'? I.e., has(x, var) returns TRUE if x has var in it.
> >
> > Thanks
> >
> > Russ
> >
> >> On Jun 27, 2016, at 9:47 AM, Hadley Wickham <h.wickham at gmail.com> wrote:
> >>
> >> On Mon, Jun 27, 2016 at 9:03 AM, Duncan Murdoch 
> >> <murdoch.duncan at gmail.com> wrote:
> >>> On 27/06/2016 9:22 AM, Lenth, Russell V wrote:
> >>>>
> >>>> My package 'lsmeans' is now suddenly broken because of a new 
> >>>> provision in the 'tibble' package (loaded by 'dplyr' 0.5.0), whereby the "[[" and "$"
> >>>> methods for 'tbl_df' objects - as documented - throw an error if 
> >>>> a variable is not found.
> >>>>
> >>>> The problem is that my code uses tests like this:
> >>>>
> >>>>        if (is.null (x$var)) {...}
> >>>>
> >>>> to see whether 'x' has a variable 'var'. Obviously, I can work 
> >>>> around this using
> >>>>
> >>>>        if (!("var" %in% names(x))) {...}
> >>>>
> >>>> but (a) I like the first version better, in terms of the code 
> >>>> being understandable; and (b) isn't there a long history whereby 
> >>>> we can expect a NULL result when accessing an absent member of a 
> >>>> list (and hence a data.frame)? (c) the code base for 'lsmeans' 
> >>>> has about 50 instances of such tests.
> >>>>
> >>>> Anyway, I wonder if a lot of other package developers test for 
> >>>> absent variables in that first way; if so, they too are in for a 
> >>>> rude awakening if their users provide a tbl_df instead of a 
> >>>> data.frame. And what is considered the best practice for testing 
> >>>> absence of a list member? Apparently, not either of the above; 
> >>>> and because of (c), I want to do these many tedious corrections only once.
> >>>>
> >>>> Thanks for any light you can shed.
> >>>
> >>>
> >>> This is why CRAN asks that people test reverse dependencies.
> >>
> >> Which we did do - the problem is that this is actually caused by a 
> >> recursive reverse dependency (lsmeans -> dplyr -> tibble), and we 
> >> didn't correctly anticipate how much pain this would cause.
> >>
> >>> I think the most defensive thing you can do is to write a small 
> >>> function
> >>>
> >>> name_missing <- function(x, name)
> >>>    !(name %in% names(x))
> >>>
> >>> and use name_missing(x, "var") in your tests.  (Pick your own name 
> >>> to make your code understandable if you don't like my choice.)
> >>>
> >>> You could suggest to the tibble maintainers that they add a 
> >>> function like this.
> >>
> >> We're definitely going to add this.
> >>
> >> And I think we'll make df[["var"]] return NULL too, so at least 
> >> there's one easy way to opt out.
> >>
> >> The motivation for this change was that returning NULL + recycling 
> >> rules means it's very easy for errors to silently propagate. But I 
> >> think this approach might be somewhat too aggressive - I hadn't 
> >> considered that people use `is.null()` to check for missing columns.
> >>
> >> We'll try and get an update to tibble out soon after useR.  
> >> Thoughts on what we should do are greatly appreciated.
> >>
> >> Hadley
> >>
> >> --
> >> http://hadley.nz
>
>
>


From tkeitt at utexas.edu  Tue Jun 28 02:04:57 2016
From: tkeitt at utexas.edu (Tim Keitt)
Date: Mon, 27 Jun 2016 19:04:57 -0500
Subject: [R-pkg-devel] Force namespace prefix for a loaded package
	function
In-Reply-To: <878ad15e-45b3-5c89-d7b1-bb1bc5686126@gmail.com>
References: <CANnL8gr-YpDKevL=kEjRCvVDB-nEmRn_vz1s3p90rC+u+VPx6w@mail.gmail.com>
	<CAO1zAVZ_Q1DLhbOMZhzpb3eovMKUPeKjAgGgXsOq1sDop7yn+w@mail.gmail.com>
	<CANnL8grcvXRfNQEaXO_Q+Y_KboGd=TG=-79UMo4ZcBHkX22TBw@mail.gmail.com>
	<122b1ce5-413a-c585-8c9d-fdc7d7cc52fd@gmail.com>
	<CANnL8gpZDcoV0fwOhau=x5NMWoD94Z90oCgTqrVDR8QukUovVQ@mail.gmail.com>
	<878ad15e-45b3-5c89-d7b1-bb1bc5686126@gmail.com>
Message-ID: <CANnL8goa7WPq1sCcaU27JyDP5sCwqGmHa80Fwmh+dpoMYO4K=Q@mail.gmail.com>

http://www.keittlab.org/

On Mon, Jun 27, 2016 at 5:18 PM, Duncan Murdoch <murdoch.duncan at gmail.com>
wrote:

> On 27/06/2016 5:46 PM, Tim Keitt wrote:
>
>>
>>
>> http://www.keittlab.org/
>>
>> On Mon, Jun 27, 2016 at 10:19 AM, Duncan Murdoch
>> <murdoch.duncan at gmail.com <mailto:murdoch.duncan at gmail.com>> wrote:
>>
>>     On 27/06/2016 11:08 AM, Tim Keitt wrote:
>>
>>         http://www.keittlab.org/
>>
>>         On Mon, Jun 27, 2016 at 3:22 AM, Joris Meys <jorismeys at gmail.com
>>         <mailto:jorismeys at gmail.com>> wrote:
>>
>>         > If you want to call a non exported function, you need three
>> colons
>>         >
>>         > X:::f ()
>>         >
>>         > And frankly, that is a bad idea.
>>         >
>>         I think you missed the point (and stated the obvious).
>>
>>         A well-designed namespace feature would give control of imports
>>         to the code
>>         user, not the code writer.
>>
>>         Right now, I have to avoid all the function names in base
>>         because I will
>>         cause a collision. If I want to have an "options" function in my
>>         package, I
>>         have to make it "pkgname_options" rather than pkgname::options,
>>         which is
>>         greatly preferable and would allow the user to decide whether
>>         they want to
>>         import it and then simply use "options" and "base::options".
>>
>>         I've always considered this all-or-nothing approach to imports a
>>         bug in the
>>         implementation of namespaces in R. I was trying to suggest that
>>         it be
>>         fixed. (Probably should have sent this to r-devel actually.)
>>
>>
>>     The base package is special, but for all other packages there's no
>>     "all-or-nothing" approach to imports, so your statement about a
>>     function named "options" doesn't really make sense.  If you want to
>>     do that, just do it, and other packages that prefer your
>>     implementation to the base one can import just that one function, or
>>     do the import at run time by calling it as pkgname::options().
>>
>>
>> I know that. I mean for someone writing a script, not a package.
>>
>> Its all good for package writers. Its quite simple to control imports
>> there. But not so much for someone using the package in R to write a
>> script. You either go with package_name::object for everything or you
>> call "library" and you get everything the packager exported.
>>
>> It would be nice to 1) be able to hold back some functions from being
>> fully exported in a package and (maybe or) 2) extend the functionality
>> of the NAMESPACE file to the user session via a set of functions.
>>
>> Does that make any more sense?
>>
>
> It makes a little more sense, but it's still not correct.  If you want to
> do the equivalent of importing foo::options, just add the line
>
> options <- foo::options
>
> at the start of your script.  This "imports" that one function, and
> nothing else from the foo namespace.
>
> It has the side effect of leaving the options object in the current
> workspace afterwards.  If that concerns you, use local():
>
> local( {
>   options <- foo::options
>   # Lots of calculations, computing result
>   result
> })
>

Good one. Yes, that is more of what I had in mind.

I suppose I really want C++-like namespaces because I tend to think that
way.

THK


>
> Duncan Murdoch
>
>
>
>> THK
>>
>>
>>
>>     Duncan Murdoch
>>
>>
>>         THK
>>
>>
>>
>>         > Cheers
>>         > Joris
>>         > On 26 Jun 2016 19:37, "Tim Keitt" <tkeitt at utexas.edu
>>         <mailto:tkeitt at utexas.edu>> wrote:
>>         >
>>         >> It would be rather nice if we could define functions in our
>>         packages that
>>         >> must be called with the namespace prefix.
>>         >>
>>         >> I'd like to do
>>         >>
>>         >> #' @protected (or some such)
>>         >> f = function(...) list(...)
>>         >>
>>         >> in package scope and then
>>         >>
>>         >> library(x)
>>         >> f(1)             # fails
>>         >> x::f(1)         # succeeds
>>         >>
>>         >> Currently unless I am missing something, a function is either
>>         exported to
>>         >> global scope or not available. This could be done if package
>>         loading made
>>         >> two environments, one in the path and another not in the
>>         path, and then
>>         >> have the namespace prefix search both in succession.
>>         >>
>>         >> Yes, you could do
>>         >>
>>         >> #' @export
>>         >> x_f = function(...) list(...)
>>         >>
>>         >> library(x)
>>         >> x_f(1)
>>         >>
>>         >> but I would prefer reusing the namespace prefix syntax.
>>         >>
>>         >> This would also avoid name collisions between package, which
>>         ideally is
>>         >> the
>>         >> purpose of a namespace.
>>         >>
>>         >> I suppose also you could make two packages and list one in
>>         Imports: but I
>>         >> find that less satisfying because it requires a different
>>         namespace
>>         >> prefix.
>>         >>
>>         >> Or am I missing something obvious here.
>>         >>
>>         >> THK
>>         >>
>>         >> http://www.keittlab.org/
>>         >>
>>         >>         [[alternative HTML version deleted]]
>>         >>
>>         >> ______________________________________________
>>         >> R-package-devel at r-project.org
>>         <mailto:R-package-devel at r-project.org> mailing list
>>         >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>         >>
>>         >
>>
>>                 [[alternative HTML version deleted]]
>>
>>         ______________________________________________
>>         R-package-devel at r-project.org
>>         <mailto:R-package-devel at r-project.org> mailing list
>>         https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>>
>>
>>
>>
>

	[[alternative HTML version deleted]]


From murdoch.duncan at gmail.com  Tue Jun 28 13:08:49 2016
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Tue, 28 Jun 2016 07:08:49 -0400
Subject: [R-pkg-devel] Absent variables and tibble
In-Reply-To: <BY2PR0401MB0919DE33CF9AE685F0666C47F1220@BY2PR0401MB0919.namprd04.prod.outlook.com>
References: <BY2PR0401MB0919D5A98E5F6CF2824682F6F1210@BY2PR0401MB0919.namprd04.prod.outlook.com>
	<4dee6bac-6ffa-4597-e033-1e5a89dc83d1@gmail.com>
	<CABdHhvH3kcyJemis8oTVtzRQCo7HbqNO+SjYNGVWvnincOUEMg@mail.gmail.com>
	<644033AD-70EE-4AD5-A36B-371D04297B7F@uiowa.edu>
	<CABdHhvHkQ48VrauyxrYiVjYAAAnsC9ef4gu36iXPh7QvEZSWEg@mail.gmail.com>
	<f77d5ab8-6d94-08e2-13e2-752961b3faa4@gmail.com>
	<BY2PR0401MB0919DE33CF9AE685F0666C47F1220@BY2PR0401MB0919.namprd04.prod.outlook.com>
Message-ID: <d2e5e179-f47f-794a-4c56-99f3fc6526d6@gmail.com>

On 27/06/2016 10:15 PM, Lenth, Russell V wrote:
> Hadley's note on partial matching has me scared the most concerning the as.null() coding. So the need for a hasName() (or whatever) function seems all the more compelling, and that it be in base R. Perhaps it should be generic, with a default method that searches in the names attribute, potentially extensible to other classes.

I am thinking of putting it in, but if I do the definition will be 
equivalent to the one-liner down below.  That's already slower than the 
is.null() test; making it generic would slow it down too much.

Duncan Murdoch


> Thanks so much, several of you, for your positive and helpful responses.
>
> Russ
>
> -----Original Message-----
> From: Duncan Murdoch [mailto:murdoch.duncan at gmail.com]
> Sent: Monday, June 27, 2016 12:50 PM
> To: Hadley Wickham <h.wickham at gmail.com>; Lenth, Russell V <russell-lenth at uiowa.edu>
> Cc: r-package-devel at r-project.org
> Subject: Re: [R-pkg-devel] Absent variables and tibble
>
> On 27/06/2016 1:09 PM, Hadley Wickham wrote:
>> The other thing you need to be aware of it you're using the other
>> approach is partial matching:
>>
>> df <- data.frame(xyz = 1)
>> is.null(df$x)
>> #> [1] FALSE
>>
>> Duncan - I think that argues for including a has_name() (hasName() ?)
>> function in base R. Is that something you'd consider?
>
> Yes, I'd consider it.  I think hasName() would be more consistent with other has*() functions in the R sources.
>
> I guess the implementation should be defined to be equivalent to
>
> hasName <- function(x, name)
>    name %in% names(x)
>
> though it would make sense to make a faster internal implementation;
> !is.null(df$x) is quite a bit faster than "x" %in% names(df).
>
> Duncan Murdoch
>
>
>>
>> Hadley
>>
>> On Mon, Jun 27, 2016 at 10:05 AM, Lenth, Russell V
>> <russell-lenth at uiowa.edu> wrote:
>>> Thanks, Hadley. I do understand why you'd want more careful checking.
>>>
>>> If you're going to provide a variable-existing function, may I suggest a short name like 'has'? I.e., has(x, var) returns TRUE if x has var in it.
>>>
>>> Thanks
>>>
>>> Russ
>>>
>>>> On Jun 27, 2016, at 9:47 AM, Hadley Wickham <h.wickham at gmail.com> wrote:
>>>>
>>>> On Mon, Jun 27, 2016 at 9:03 AM, Duncan Murdoch
>>>> <murdoch.duncan at gmail.com> wrote:
>>>>> On 27/06/2016 9:22 AM, Lenth, Russell V wrote:
>>>>>>
>>>>>> My package 'lsmeans' is now suddenly broken because of a new
>>>>>> provision in the 'tibble' package (loaded by 'dplyr' 0.5.0), whereby the "[[" and "$"
>>>>>> methods for 'tbl_df' objects - as documented - throw an error if
>>>>>> a variable is not found.
>>>>>>
>>>>>> The problem is that my code uses tests like this:
>>>>>>
>>>>>>        if (is.null (x$var)) {...}
>>>>>>
>>>>>> to see whether 'x' has a variable 'var'. Obviously, I can work
>>>>>> around this using
>>>>>>
>>>>>>        if (!("var" %in% names(x))) {...}
>>>>>>
>>>>>> but (a) I like the first version better, in terms of the code
>>>>>> being understandable; and (b) isn't there a long history whereby
>>>>>> we can expect a NULL result when accessing an absent member of a
>>>>>> list (and hence a data.frame)? (c) the code base for 'lsmeans'
>>>>>> has about 50 instances of such tests.
>>>>>>
>>>>>> Anyway, I wonder if a lot of other package developers test for
>>>>>> absent variables in that first way; if so, they too are in for a
>>>>>> rude awakening if their users provide a tbl_df instead of a
>>>>>> data.frame. And what is considered the best practice for testing
>>>>>> absence of a list member? Apparently, not either of the above;
>>>>>> and because of (c), I want to do these many tedious corrections only once.
>>>>>>
>>>>>> Thanks for any light you can shed.
>>>>>
>>>>>
>>>>> This is why CRAN asks that people test reverse dependencies.
>>>>
>>>> Which we did do - the problem is that this is actually caused by a
>>>> recursive reverse dependency (lsmeans -> dplyr -> tibble), and we
>>>> didn't correctly anticipate how much pain this would cause.
>>>>
>>>>> I think the most defensive thing you can do is to write a small
>>>>> function
>>>>>
>>>>> name_missing <- function(x, name)
>>>>>    !(name %in% names(x))
>>>>>
>>>>> and use name_missing(x, "var") in your tests.  (Pick your own name
>>>>> to make your code understandable if you don't like my choice.)
>>>>>
>>>>> You could suggest to the tibble maintainers that they add a
>>>>> function like this.
>>>>
>>>> We're definitely going to add this.
>>>>
>>>> And I think we'll make df[["var"]] return NULL too, so at least
>>>> there's one easy way to opt out.
>>>>
>>>> The motivation for this change was that returning NULL + recycling
>>>> rules means it's very easy for errors to silently propagate. But I
>>>> think this approach might be somewhat too aggressive - I hadn't
>>>> considered that people use `is.null()` to check for missing columns.
>>>>
>>>> We'll try and get an update to tibble out soon after useR.
>>>> Thoughts on what we should do are greatly appreciated.
>>>>
>>>> Hadley
>>>>
>>>> --
>>>> http://hadley.nz
>>
>>
>>
>


From hhoeflin at gmail.com  Tue Jun 28 13:55:43 2016
From: hhoeflin at gmail.com (Holger Hoefling)
Date: Tue, 28 Jun 2016 13:55:43 +0200
Subject: [R-pkg-devel] Package requiring cmake;
	windows only package dependency?
Message-ID: <CAFDswJs=zuQgNg3mWUzT341ds057N4egcX8byggoWUdp2LVe=w@mail.gmail.com>

Hi,

I am currently preparing a package for hdf5 that ships and compiles from
source on windows. The intention here is to avoid having to ship or
download a binary from an unknown source. As a dependency, I need the cmake
program installed.

Here my question:
1. Is cmake installed on win-builder? If not, could it be installed? If
yes, in a specified standard location or available through the PATH
variable?
2. How do I specify that a package is only intended for a specific OS?

On another note here:
The package I am preparing would only compile the binaries on windows. On
other systems, I would prefer to have people install them thought native
services (e.g. apt-get) to make configuration etc. more manageable for
system administrators (even though that puts a little more burden on the
end-user on these systems).

Second question:
Is there a way to specify an OS-specific dependency? As the hdf5lib package
is rather large and intended for windows only, I would prefer if it isn't
downloaded anywhere else.

thanks for your help

Holger

	[[alternative HTML version deleted]]


From wdunlap at tibco.com  Tue Jun 28 16:03:36 2016
From: wdunlap at tibco.com (William Dunlap)
Date: Tue, 28 Jun 2016 07:03:36 -0700
Subject: [R-pkg-devel] Absent variables and tibble
In-Reply-To: <d2e5e179-f47f-794a-4c56-99f3fc6526d6@gmail.com>
References: <BY2PR0401MB0919D5A98E5F6CF2824682F6F1210@BY2PR0401MB0919.namprd04.prod.outlook.com>
	<4dee6bac-6ffa-4597-e033-1e5a89dc83d1@gmail.com>
	<CABdHhvH3kcyJemis8oTVtzRQCo7HbqNO+SjYNGVWvnincOUEMg@mail.gmail.com>
	<644033AD-70EE-4AD5-A36B-371D04297B7F@uiowa.edu>
	<CABdHhvHkQ48VrauyxrYiVjYAAAnsC9ef4gu36iXPh7QvEZSWEg@mail.gmail.com>
	<f77d5ab8-6d94-08e2-13e2-752961b3faa4@gmail.com>
	<BY2PR0401MB0919DE33CF9AE685F0666C47F1220@BY2PR0401MB0919.namprd04.prod.outlook.com>
	<d2e5e179-f47f-794a-4c56-99f3fc6526d6@gmail.com>
Message-ID: <CAF8bMcZE65kor3T3uw9H-JXHvwzt--GKW+NHBRtyBodc7LCWXQ@mail.gmail.com>

Currently exists("someName", where=someDataFrame) reports if "someName" is
an column
of the data.frame 'someDataFrame' and the 'where=' may be omitted.  If we
have an
environment we use exsts("someName", envir=someEnvironment).  It might be
nice to
continue using exists() instead of introducing a new function has(),
although, since we
want the same syntax to work for environments, data.frames, tbl_dfs,
data.tables, etc.,
we may need the new function.


Bill Dunlap
TIBCO Software
wdunlap tibco.com

On Tue, Jun 28, 2016 at 4:08 AM, Duncan Murdoch <murdoch.duncan at gmail.com>
wrote:

> On 27/06/2016 10:15 PM, Lenth, Russell V wrote:
>
>> Hadley's note on partial matching has me scared the most concerning the
>> as.null() coding. So the need for a hasName() (or whatever) function seems
>> all the more compelling, and that it be in base R. Perhaps it should be
>> generic, with a default method that searches in the names attribute,
>> potentially extensible to other classes.
>>
>
> I am thinking of putting it in, but if I do the definition will be
> equivalent to the one-liner down below.  That's already slower than the
> is.null() test; making it generic would slow it down too much.
>
> Duncan Murdoch
>
>
> Thanks so much, several of you, for your positive and helpful responses.
>>
>> Russ
>>
>> -----Original Message-----
>> From: Duncan Murdoch [mailto:murdoch.duncan at gmail.com]
>> Sent: Monday, June 27, 2016 12:50 PM
>> To: Hadley Wickham <h.wickham at gmail.com>; Lenth, Russell V <
>> russell-lenth at uiowa.edu>
>> Cc: r-package-devel at r-project.org
>> Subject: Re: [R-pkg-devel] Absent variables and tibble
>>
>> On 27/06/2016 1:09 PM, Hadley Wickham wrote:
>>
>>> The other thing you need to be aware of it you're using the other
>>> approach is partial matching:
>>>
>>> df <- data.frame(xyz = 1)
>>> is.null(df$x)
>>> #> [1] FALSE
>>>
>>> Duncan - I think that argues for including a has_name() (hasName() ?)
>>> function in base R. Is that something you'd consider?
>>>
>>
>> Yes, I'd consider it.  I think hasName() would be more consistent with
>> other has*() functions in the R sources.
>>
>> I guess the implementation should be defined to be equivalent to
>>
>> hasName <- function(x, name)
>>    name %in% names(x)
>>
>> though it would make sense to make a faster internal implementation;
>> !is.null(df$x) is quite a bit faster than "x" %in% names(df).
>>
>> Duncan Murdoch
>>
>>
>>
>>> Hadley
>>>
>>> On Mon, Jun 27, 2016 at 10:05 AM, Lenth, Russell V
>>> <russell-lenth at uiowa.edu> wrote:
>>>
>>>> Thanks, Hadley. I do understand why you'd want more careful checking.
>>>>
>>>> If you're going to provide a variable-existing function, may I suggest
>>>> a short name like 'has'? I.e., has(x, var) returns TRUE if x has var in it.
>>>>
>>>> Thanks
>>>>
>>>> Russ
>>>>
>>>> On Jun 27, 2016, at 9:47 AM, Hadley Wickham <h.wickham at gmail.com>
>>>>> wrote:
>>>>>
>>>>> On Mon, Jun 27, 2016 at 9:03 AM, Duncan Murdoch
>>>>> <murdoch.duncan at gmail.com> wrote:
>>>>>
>>>>>> On 27/06/2016 9:22 AM, Lenth, Russell V wrote:
>>>>>>
>>>>>>>
>>>>>>> My package 'lsmeans' is now suddenly broken because of a new
>>>>>>> provision in the 'tibble' package (loaded by 'dplyr' 0.5.0), whereby
>>>>>>> the "[[" and "$"
>>>>>>> methods for 'tbl_df' objects - as documented - throw an error if
>>>>>>> a variable is not found.
>>>>>>>
>>>>>>> The problem is that my code uses tests like this:
>>>>>>>
>>>>>>>        if (is.null (x$var)) {...}
>>>>>>>
>>>>>>> to see whether 'x' has a variable 'var'. Obviously, I can work
>>>>>>> around this using
>>>>>>>
>>>>>>>        if (!("var" %in% names(x))) {...}
>>>>>>>
>>>>>>> but (a) I like the first version better, in terms of the code
>>>>>>> being understandable; and (b) isn't there a long history whereby
>>>>>>> we can expect a NULL result when accessing an absent member of a
>>>>>>> list (and hence a data.frame)? (c) the code base for 'lsmeans'
>>>>>>> has about 50 instances of such tests.
>>>>>>>
>>>>>>> Anyway, I wonder if a lot of other package developers test for
>>>>>>> absent variables in that first way; if so, they too are in for a
>>>>>>> rude awakening if their users provide a tbl_df instead of a
>>>>>>> data.frame. And what is considered the best practice for testing
>>>>>>> absence of a list member? Apparently, not either of the above;
>>>>>>> and because of (c), I want to do these many tedious corrections only
>>>>>>> once.
>>>>>>>
>>>>>>> Thanks for any light you can shed.
>>>>>>>
>>>>>>
>>>>>>
>>>>>> This is why CRAN asks that people test reverse dependencies.
>>>>>>
>>>>>
>>>>> Which we did do - the problem is that this is actually caused by a
>>>>> recursive reverse dependency (lsmeans -> dplyr -> tibble), and we
>>>>> didn't correctly anticipate how much pain this would cause.
>>>>>
>>>>> I think the most defensive thing you can do is to write a small
>>>>>> function
>>>>>>
>>>>>> name_missing <- function(x, name)
>>>>>>    !(name %in% names(x))
>>>>>>
>>>>>> and use name_missing(x, "var") in your tests.  (Pick your own name
>>>>>> to make your code understandable if you don't like my choice.)
>>>>>>
>>>>>> You could suggest to the tibble maintainers that they add a
>>>>>> function like this.
>>>>>>
>>>>>
>>>>> We're definitely going to add this.
>>>>>
>>>>> And I think we'll make df[["var"]] return NULL too, so at least
>>>>> there's one easy way to opt out.
>>>>>
>>>>> The motivation for this change was that returning NULL + recycling
>>>>> rules means it's very easy for errors to silently propagate. But I
>>>>> think this approach might be somewhat too aggressive - I hadn't
>>>>> considered that people use `is.null()` to check for missing columns.
>>>>>
>>>>> We'll try and get an update to tibble out soon after useR.
>>>>> Thoughts on what we should do are greatly appreciated.
>>>>>
>>>>> Hadley
>>>>>
>>>>> --
>>>>> http://hadley.nz
>>>>>
>>>>
>>>
>>>
>>>
>>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From murdoch.duncan at gmail.com  Tue Jun 28 16:55:38 2016
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Tue, 28 Jun 2016 10:55:38 -0400
Subject: [R-pkg-devel] Absent variables and tibble
In-Reply-To: <CAF8bMcZE65kor3T3uw9H-JXHvwzt--GKW+NHBRtyBodc7LCWXQ@mail.gmail.com>
References: <BY2PR0401MB0919D5A98E5F6CF2824682F6F1210@BY2PR0401MB0919.namprd04.prod.outlook.com>
	<4dee6bac-6ffa-4597-e033-1e5a89dc83d1@gmail.com>
	<CABdHhvH3kcyJemis8oTVtzRQCo7HbqNO+SjYNGVWvnincOUEMg@mail.gmail.com>
	<644033AD-70EE-4AD5-A36B-371D04297B7F@uiowa.edu>
	<CABdHhvHkQ48VrauyxrYiVjYAAAnsC9ef4gu36iXPh7QvEZSWEg@mail.gmail.com>
	<f77d5ab8-6d94-08e2-13e2-752961b3faa4@gmail.com>
	<BY2PR0401MB0919DE33CF9AE685F0666C47F1220@BY2PR0401MB0919.namprd04.prod.outlook.com>
	<d2e5e179-f47f-794a-4c56-99f3fc6526d6@gmail.com>
	<CAF8bMcZE65kor3T3uw9H-JXHvwzt--GKW+NHBRtyBodc7LCWXQ@mail.gmail.com>
Message-ID: <e6f527a1-1754-d845-8af8-d5e555ec9ad5@gmail.com>

On 28/06/2016 10:03 AM, William Dunlap wrote:
> Currently exists("someName", where=someDataFrame) reports if 
> "someName" is an column
> of the data.frame 'someDataFrame' and the 'where=' may be omitted.  If 
> we have an
> environment we use exsts("someName", envir=someEnvironment).  It might 
> be nice to
> continue using exists() instead of introducing a new function has(), 
> although, since we
> want the same syntax to work for environments, data.frames, tbl_dfs, 
> data.tables, etc.,
> we may need the new function.

One issue with exists("someName", someDataFrame) is that it's quite a 
bit slower.  (I think it converts the dataframe to an environment.) On 
the other hand, getting the names from an environment requires more work 
than checking for one, so exists("someName", someEnvironment) is faster 
than checking for the name in the obvious way.  The slow operations
could be sped up, but is that worth the effort?

The other issue with exists() is that it has a complicated definition 
and hard to follow argument list (with args "where", "envir", "frame" 
that all do related things); the thing I like about hasName() is that it 
is very clear what it does.  A criticism of it is that it is hardly any 
shorter than just doing

   name %in% names(x)

so is there really any point in making a function for this?

Duncan Murdoch

>
>
> Bill Dunlap
> TIBCO Software
> wdunlap tibco.com <http://tibco.com>
>
> On Tue, Jun 28, 2016 at 4:08 AM, Duncan Murdoch 
> <murdoch.duncan at gmail.com <mailto:murdoch.duncan at gmail.com>> wrote:
>
>     On 27/06/2016 10:15 PM, Lenth, Russell V wrote:
>
>         Hadley's note on partial matching has me scared the most
>         concerning the as.null() coding. So the need for a hasName()
>         (or whatever) function seems all the more compelling, and that
>         it be in base R. Perhaps it should be generic, with a default
>         method that searches in the names attribute, potentially
>         extensible to other classes.
>
>
>     I am thinking of putting it in, but if I do the definition will be
>     equivalent to the one-liner down below.  That's already slower
>     than the is.null() test; making it generic would slow it down too
>     much.
>
>     Duncan Murdoch
>
>
>         Thanks so much, several of you, for your positive and helpful
>         responses.
>
>         Russ
>
>         -----Original Message-----
>         From: Duncan Murdoch [mailto:murdoch.duncan at gmail.com
>         <mailto:murdoch.duncan at gmail.com>]
>         Sent: Monday, June 27, 2016 12:50 PM
>         To: Hadley Wickham <h.wickham at gmail.com
>         <mailto:h.wickham at gmail.com>>; Lenth, Russell V
>         <russell-lenth at uiowa.edu <mailto:russell-lenth at uiowa.edu>>
>         Cc: r-package-devel at r-project.org
>         <mailto:r-package-devel at r-project.org>
>         Subject: Re: [R-pkg-devel] Absent variables and tibble
>
>         On 27/06/2016 1:09 PM, Hadley Wickham wrote:
>
>             The other thing you need to be aware of it you're using
>             the other
>             approach is partial matching:
>
>             df <- data.frame(xyz = 1)
>             is.null(df$x)
>             #> [1] FALSE
>
>             Duncan - I think that argues for including a has_name()
>             (hasName() ?)
>             function in base R. Is that something you'd consider?
>
>
>         Yes, I'd consider it.  I think hasName() would be more
>         consistent with other has*() functions in the R sources.
>
>         I guess the implementation should be defined to be equivalent to
>
>         hasName <- function(x, name)
>            name %in% names(x)
>
>         though it would make sense to make a faster internal
>         implementation;
>         !is.null(df$x) is quite a bit faster than "x" %in% names(df).
>
>         Duncan Murdoch
>
>
>
>             Hadley
>
>             On Mon, Jun 27, 2016 at 10:05 AM, Lenth, Russell V
>             <russell-lenth at uiowa.edu <mailto:russell-lenth at uiowa.edu>>
>             wrote:
>
>                 Thanks, Hadley. I do understand why you'd want more
>                 careful checking.
>
>                 If you're going to provide a variable-existing
>                 function, may I suggest a short name like 'has'? I.e.,
>                 has(x, var) returns TRUE if x has var in it.
>
>                 Thanks
>
>                 Russ
>
>                     On Jun 27, 2016, at 9:47 AM, Hadley Wickham
>                     <h.wickham at gmail.com <mailto:h.wickham at gmail.com>>
>                     wrote:
>
>                     On Mon, Jun 27, 2016 at 9:03 AM, Duncan Murdoch
>                     <murdoch.duncan at gmail.com
>                     <mailto:murdoch.duncan at gmail.com>> wrote:
>
>                         On 27/06/2016 9:22 AM, Lenth, Russell V wrote:
>
>
>                             My package 'lsmeans' is now suddenly
>                             broken because of a new
>                             provision in the 'tibble' package (loaded
>                             by 'dplyr' 0.5.0), whereby the "[[" and "$"
>                             methods for 'tbl_df' objects - as
>                             documented - throw an error if
>                             a variable is not found.
>
>                             The problem is that my code uses tests
>                             like this:
>
>                                    if (is.null (x$var)) {...}
>
>                             to see whether 'x' has a variable 'var'.
>                             Obviously, I can work
>                             around this using
>
>                                    if (!("var" %in% names(x))) {...}
>
>                             but (a) I like the first version better,
>                             in terms of the code
>                             being understandable; and (b) isn't there
>                             a long history whereby
>                             we can expect a NULL result when accessing
>                             an absent member of a
>                             list (and hence a data.frame)? (c) the
>                             code base for 'lsmeans'
>                             has about 50 instances of such tests.
>
>                             Anyway, I wonder if a lot of other package
>                             developers test for
>                             absent variables in that first way; if so,
>                             they too are in for a
>                             rude awakening if their users provide a
>                             tbl_df instead of a
>                             data.frame. And what is considered the
>                             best practice for testing
>                             absence of a list member? Apparently, not
>                             either of the above;
>                             and because of (c), I want to do these
>                             many tedious corrections only once.
>
>                             Thanks for any light you can shed.
>
>
>
>                         This is why CRAN asks that people test reverse
>                         dependencies.
>
>
>                     Which we did do - the problem is that this is
>                     actually caused by a
>                     recursive reverse dependency (lsmeans -> dplyr ->
>                     tibble), and we
>                     didn't correctly anticipate how much pain this
>                     would cause.
>
>                         I think the most defensive thing you can do is
>                         to write a small
>                         function
>
>                         name_missing <- function(x, name)
>                            !(name %in% names(x))
>
>                         and use name_missing(x, "var") in your tests.
>                         (Pick your own name
>                         to make your code understandable if you don't
>                         like my choice.)
>
>                         You could suggest to the tibble maintainers
>                         that they add a
>                         function like this.
>
>
>                     We're definitely going to add this.
>
>                     And I think we'll make df[["var"]] return NULL
>                     too, so at least
>                     there's one easy way to opt out.
>
>                     The motivation for this change was that returning
>                     NULL + recycling
>                     rules means it's very easy for errors to silently
>                     propagate. But I
>                     think this approach might be somewhat too
>                     aggressive - I hadn't
>                     considered that people use `is.null()` to check
>                     for missing columns.
>
>                     We'll try and get an update to tibble out soon
>                     after useR.
>                     Thoughts on what we should do are greatly appreciated.
>
>                     Hadley
>
>                     --
>                     http://hadley.nz
>
>
>
>
>
>
>     ______________________________________________
>     R-package-devel at r-project.org
>     <mailto:R-package-devel at r-project.org> mailing list
>     https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>


From tkeitt at utexas.edu  Tue Jun 28 18:07:05 2016
From: tkeitt at utexas.edu (Tim Keitt)
Date: Tue, 28 Jun 2016 11:07:05 -0500
Subject: [R-pkg-devel] Force namespace prefix for a loaded package
	function
In-Reply-To: <CANnL8goa7WPq1sCcaU27JyDP5sCwqGmHa80Fwmh+dpoMYO4K=Q@mail.gmail.com>
References: <CANnL8gr-YpDKevL=kEjRCvVDB-nEmRn_vz1s3p90rC+u+VPx6w@mail.gmail.com>
	<CAO1zAVZ_Q1DLhbOMZhzpb3eovMKUPeKjAgGgXsOq1sDop7yn+w@mail.gmail.com>
	<CANnL8grcvXRfNQEaXO_Q+Y_KboGd=TG=-79UMo4ZcBHkX22TBw@mail.gmail.com>
	<122b1ce5-413a-c585-8c9d-fdc7d7cc52fd@gmail.com>
	<CANnL8gpZDcoV0fwOhau=x5NMWoD94Z90oCgTqrVDR8QukUovVQ@mail.gmail.com>
	<878ad15e-45b3-5c89-d7b1-bb1bc5686126@gmail.com>
	<CANnL8goa7WPq1sCcaU27JyDP5sCwqGmHa80Fwmh+dpoMYO4K=Q@mail.gmail.com>
Message-ID: <CANnL8gr1fnL7NBd=_eSk-FbzqAK4y0MuCAguEML0VQUma+C2Nw@mail.gmail.com>

http://www.keittlab.org/

On Mon, Jun 27, 2016 at 7:04 PM, Tim Keitt <tkeitt at utexas.edu> wrote:

>
>
> http://www.keittlab.org/
>
> On Mon, Jun 27, 2016 at 5:18 PM, Duncan Murdoch <murdoch.duncan at gmail.com>
> wrote:
>
>> On 27/06/2016 5:46 PM, Tim Keitt wrote:
>>
>>>
>>>
>>> http://www.keittlab.org/
>>>
>>> On Mon, Jun 27, 2016 at 10:19 AM, Duncan Murdoch
>>> <murdoch.duncan at gmail.com <mailto:murdoch.duncan at gmail.com>> wrote:
>>>
>>>     On 27/06/2016 11:08 AM, Tim Keitt wrote:
>>>
>>>         http://www.keittlab.org/
>>>
>>>         On Mon, Jun 27, 2016 at 3:22 AM, Joris Meys <jorismeys at gmail.com
>>>         <mailto:jorismeys at gmail.com>> wrote:
>>>
>>>         > If you want to call a non exported function, you need three
>>> colons
>>>         >
>>>         > X:::f ()
>>>         >
>>>         > And frankly, that is a bad idea.
>>>         >
>>>         I think you missed the point (and stated the obvious).
>>>
>>>         A well-designed namespace feature would give control of imports
>>>         to the code
>>>         user, not the code writer.
>>>
>>>         Right now, I have to avoid all the function names in base
>>>         because I will
>>>         cause a collision. If I want to have an "options" function in my
>>>         package, I
>>>         have to make it "pkgname_options" rather than pkgname::options,
>>>         which is
>>>         greatly preferable and would allow the user to decide whether
>>>         they want to
>>>         import it and then simply use "options" and "base::options".
>>>
>>>         I've always considered this all-or-nothing approach to imports a
>>>         bug in the
>>>         implementation of namespaces in R. I was trying to suggest that
>>>         it be
>>>         fixed. (Probably should have sent this to r-devel actually.)
>>>
>>>
>>>     The base package is special, but for all other packages there's no
>>>     "all-or-nothing" approach to imports, so your statement about a
>>>     function named "options" doesn't really make sense.  If you want to
>>>     do that, just do it, and other packages that prefer your
>>>     implementation to the base one can import just that one function, or
>>>     do the import at run time by calling it as pkgname::options().
>>>
>>>
>>> I know that. I mean for someone writing a script, not a package.
>>>
>>> Its all good for package writers. Its quite simple to control imports
>>> there. But not so much for someone using the package in R to write a
>>> script. You either go with package_name::object for everything or you
>>> call "library" and you get everything the packager exported.
>>>
>>> It would be nice to 1) be able to hold back some functions from being
>>> fully exported in a package and (maybe or) 2) extend the functionality
>>> of the NAMESPACE file to the user session via a set of functions.
>>>
>>> Does that make any more sense?
>>>
>>
>> It makes a little more sense, but it's still not correct.  If you want to
>> do the equivalent of importing foo::options, just add the line
>>
>> options <- foo::options
>>
>> at the start of your script.  This "imports" that one function, and
>> nothing else from the foo namespace.
>>
>> It has the side effect of leaving the options object in the current
>> workspace afterwards.  If that concerns you, use local():
>>
>> local( {
>>   options <- foo::options
>>   # Lots of calculations, computing result
>>   result
>> })
>>
>
> Good one. Yes, that is more of what I had in mind.
>
> I suppose I really want C++-like namespaces because I tend to think that
> way.
>


Here's a prototype package implementing some ideas:
https://github.com/thk686/using

THK



>
> THK
>
>
>>
>> Duncan Murdoch
>>
>>
>>
>>> THK
>>>
>>>
>>>
>>>     Duncan Murdoch
>>>
>>>
>>>         THK
>>>
>>>
>>>
>>>         > Cheers
>>>         > Joris
>>>         > On 26 Jun 2016 19:37, "Tim Keitt" <tkeitt at utexas.edu
>>>         <mailto:tkeitt at utexas.edu>> wrote:
>>>         >
>>>         >> It would be rather nice if we could define functions in our
>>>         packages that
>>>         >> must be called with the namespace prefix.
>>>         >>
>>>         >> I'd like to do
>>>         >>
>>>         >> #' @protected (or some such)
>>>         >> f = function(...) list(...)
>>>         >>
>>>         >> in package scope and then
>>>         >>
>>>         >> library(x)
>>>         >> f(1)             # fails
>>>         >> x::f(1)         # succeeds
>>>         >>
>>>         >> Currently unless I am missing something, a function is either
>>>         exported to
>>>         >> global scope or not available. This could be done if package
>>>         loading made
>>>         >> two environments, one in the path and another not in the
>>>         path, and then
>>>         >> have the namespace prefix search both in succession.
>>>         >>
>>>         >> Yes, you could do
>>>         >>
>>>         >> #' @export
>>>         >> x_f = function(...) list(...)
>>>         >>
>>>         >> library(x)
>>>         >> x_f(1)
>>>         >>
>>>         >> but I would prefer reusing the namespace prefix syntax.
>>>         >>
>>>         >> This would also avoid name collisions between package, which
>>>         ideally is
>>>         >> the
>>>         >> purpose of a namespace.
>>>         >>
>>>         >> I suppose also you could make two packages and list one in
>>>         Imports: but I
>>>         >> find that less satisfying because it requires a different
>>>         namespace
>>>         >> prefix.
>>>         >>
>>>         >> Or am I missing something obvious here.
>>>         >>
>>>         >> THK
>>>         >>
>>>         >> http://www.keittlab.org/
>>>         >>
>>>         >>         [[alternative HTML version deleted]]
>>>         >>
>>>         >> ______________________________________________
>>>         >> R-package-devel at r-project.org
>>>         <mailto:R-package-devel at r-project.org> mailing list
>>>         >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>         >>
>>>         >
>>>
>>>                 [[alternative HTML version deleted]]
>>>
>>>         ______________________________________________
>>>         R-package-devel at r-project.org
>>>         <mailto:R-package-devel at r-project.org> mailing list
>>>         https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>>>
>>>
>>>
>>>
>>
>

	[[alternative HTML version deleted]]


From murdoch.duncan at gmail.com  Tue Jun 28 19:15:24 2016
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Tue, 28 Jun 2016 13:15:24 -0400
Subject: [R-pkg-devel] Absent variables and tibble
In-Reply-To: <e6f527a1-1754-d845-8af8-d5e555ec9ad5@gmail.com>
References: <BY2PR0401MB0919D5A98E5F6CF2824682F6F1210@BY2PR0401MB0919.namprd04.prod.outlook.com>
	<4dee6bac-6ffa-4597-e033-1e5a89dc83d1@gmail.com>
	<CABdHhvH3kcyJemis8oTVtzRQCo7HbqNO+SjYNGVWvnincOUEMg@mail.gmail.com>
	<644033AD-70EE-4AD5-A36B-371D04297B7F@uiowa.edu>
	<CABdHhvHkQ48VrauyxrYiVjYAAAnsC9ef4gu36iXPh7QvEZSWEg@mail.gmail.com>
	<f77d5ab8-6d94-08e2-13e2-752961b3faa4@gmail.com>
	<BY2PR0401MB0919DE33CF9AE685F0666C47F1220@BY2PR0401MB0919.namprd04.prod.outlook.com>
	<d2e5e179-f47f-794a-4c56-99f3fc6526d6@gmail.com>
	<CAF8bMcZE65kor3T3uw9H-JXHvwzt--GKW+NHBRtyBodc7LCWXQ@mail.gmail.com>
	<e6f527a1-1754-d845-8af8-d5e555ec9ad5@gmail.com>
Message-ID: <91c23933-3732-19e0-5bef-c49d294e3423@gmail.com>

I've now added a simple implementation of hasName to R-devel and 
R-patched.  When I find the time, I'll go through the base packages and 
change the !is.null(x$name) idiom to hasName.  (All but "base", that 
is:  hasName is in utils, and it is better if base remains self-contained.)

If any bottlenecks turn up, I could make hasName faster by redoing it in 
C code, but so far it is just R code very similar to the %in% 
implementation.

Duncan Murdoch


From murdoch.duncan at gmail.com  Tue Jun 28 21:17:23 2016
From: murdoch.duncan at gmail.com (Duncan Murdoch)
Date: Tue, 28 Jun 2016 15:17:23 -0400
Subject: [R-pkg-devel] Absent variables and tibble
In-Reply-To: <91c23933-3732-19e0-5bef-c49d294e3423@gmail.com>
References: <BY2PR0401MB0919D5A98E5F6CF2824682F6F1210@BY2PR0401MB0919.namprd04.prod.outlook.com>
	<4dee6bac-6ffa-4597-e033-1e5a89dc83d1@gmail.com>
	<CABdHhvH3kcyJemis8oTVtzRQCo7HbqNO+SjYNGVWvnincOUEMg@mail.gmail.com>
	<644033AD-70EE-4AD5-A36B-371D04297B7F@uiowa.edu>
	<CABdHhvHkQ48VrauyxrYiVjYAAAnsC9ef4gu36iXPh7QvEZSWEg@mail.gmail.com>
	<f77d5ab8-6d94-08e2-13e2-752961b3faa4@gmail.com>
	<BY2PR0401MB0919DE33CF9AE685F0666C47F1220@BY2PR0401MB0919.namprd04.prod.outlook.com>
	<d2e5e179-f47f-794a-4c56-99f3fc6526d6@gmail.com>
	<CAF8bMcZE65kor3T3uw9H-JXHvwzt--GKW+NHBRtyBodc7LCWXQ@mail.gmail.com>
	<e6f527a1-1754-d845-8af8-d5e555ec9ad5@gmail.com>
	<91c23933-3732-19e0-5bef-c49d294e3423@gmail.com>
Message-ID: <14795e98-d12d-9cc8-f55e-8c232ac53734@gmail.com>

On 28/06/2016 1:15 PM, Duncan Murdoch wrote:
> I've now added a simple implementation of hasName to R-devel and
> R-patched.  When I find the time, I'll go through the base packages and
> change the !is.null(x$name) idiom to hasName.  (All but "base", that
> is:  hasName is in utils, and it is better if base remains self-contained.)

After looking at a few cases, I don't think I'll do that.  Often the 
test is used to find out if x$name will work.  hasName(x, "name") is not 
sufficient for that:  x might have that as a name, but x$name won't 
work, e.g. in a named numeric vector.  I don't think we have a simple 
test corresponding to

!is.null(x$name) && hasName(x, "name")

Probably the best approach is to run tests with 
options(warnPartialMatchDollar = TRUE), and just use the simple 
!is.null(x$name).

Duncan Murdoch


From ligges at statistik.tu-dortmund.de  Wed Jun 29 15:16:52 2016
From: ligges at statistik.tu-dortmund.de (Uwe Ligges)
Date: Wed, 29 Jun 2016 15:16:52 +0200
Subject: [R-pkg-devel] Package requiring cmake;
 windows only package dependency?
In-Reply-To: <CAFDswJs=zuQgNg3mWUzT341ds057N4egcX8byggoWUdp2LVe=w@mail.gmail.com>
References: <CAFDswJs=zuQgNg3mWUzT341ds057N4egcX8byggoWUdp2LVe=w@mail.gmail.com>
Message-ID: <6daf9edb-e2af-2302-8424-bfb81cc18bc0@statistik.tu-dortmund.de>

On 28.06.2016 13:55, Holger Hoefling wrote:
> Hi,
>
> I am currently preparing a package for hdf5 that ships and compiles from
> source on windows. The intention here is to avoid having to ship or
> download a binary from an unknown source. As a dependency, I need the cmake
> program installed.
>
> Here my question:
> 1. Is cmake installed on win-builder? If not, could it be installed? If
> yes, in a specified standard location or available through the PATH
> variable?

It is not. I could do that if you tell me which version I need.


> 2. How do I specify that a package is only intended for a specific OS?

See WRE, in the DESCRIPTION file you can specify:

OS_type: unix

would make it non-Windows and vice versa.


> On another note here:
> The package I am preparing would only compile the binaries on windows. On
> other systems, I would prefer to have people install them thought native
> services (e.g. apt-get) to make configuration etc. more manageable for
> system administrators (even though that puts a little more burden on the
> end-user on these systems).

Be careful to get licenses and copyright information right if you 
include thirs party sources.

> Second question:
> Is there a way to specify an OS-specific dependency? As the hdf5lib package
> is rather large and intended for windows only, I would prefer if it isn't
> downloaded anywhere else.

You can only have one version of the package sources on CRAN.


Best,
Uwe Ligges


>
> thanks for your help
>
> Holger
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


