From greg @end|ng |rom ||rm@n@y@h@com  Fri Jul  1 00:31:15 2022
From: greg @end|ng |rom ||rm@n@y@h@com (Greg Hunt)
Date: Fri, 1 Jul 2022 08:31:15 +1000
Subject: [R-pkg-devel] Slowdown running examples since 4.2 on Windows
In-Reply-To: <d76c5510-7f48-8a47-afff-5dd35d0c825d@mtholyoke.edu>
References: <be553b98-2057-49e0-1922-37679544eb81@mtholyoke.edu>
 <676322ff-0d24-ece2-ae0d-e7c536373dea@gmail.com>
 <d76c5510-7f48-8a47-afff-5dd35d0c825d@mtholyoke.edu>
Message-ID: <CAAS8PA+EO-ZqdZm0az4_9KMLo04oMD6TxtZNwin7kRwmn3QARw@mail.gmail.com>

Tomas,
Do you have any logging in the build environment that could tell you
whether the environment is running into resource constraints?  I can
imagine IO (disk or network) or CPU contention with that kind of workload
and memory pressure would be easy to identify.

Greg

On Fri, 1 Jul 2022 at 01:45, Barbara Lerner <blerner at mtholyoke.edu> wrote:

> Thanks for these suggestions.  I attempted to submit a slightly earlier
> version of my package a few weeks ago and saw the slowdown on winbuilder
> then, too.  I did not look into any further at that point.
>
> I have tested it on a local Windows computer running 4.2.0 and I did not
> see the slowdown there.  Here are those results:
>
> Name         user    system   elapsed
>
> prov.json 1.11   0.24 2.19
>
> prov.run    0.99    0.06 1.93
>
> version  R version 4.2.0 (2022-04-22 ucrt)
>
> os       Windows 10 x64 (build 19044)
>
> system   x86_64, mingw32
>
>
> Tomas Kalibera wrote on 6/30/22 10:09 AM:
> >
> > On 6/29/22 22:25, Barbara Lerner wrote:
> >> I have a package that I want to submit an updated version for but the
> >> examples run too slowly on win-builder since 4.2 came out.  I just
> >> submitted the exact same tar.gz file to all 3 versions of R available on
> >> win-builder and got the results shown below.  Notice the dramatic
> >> slowdown from 4.1.3 to 4.2.1.
> >>
> >> I don't know how to go about tracking down the cause of this slowdown.
> >> The examples are quite small.  I am reluctant to use \dontrun, but I am
> >> not sure what else to do.
> >
> > Could you perhaps submit to Winbuilder several times (with some
> > non-trivial delay between the runs) to see if the very long execution
> > is reproducible?
> >
> > If so, the next step could be trying on a Windows machine with
> > interactive access, to reproduce, and if it is still so slow, checking
> > where the time is spent, using an R profiler, using some C profiler
> > (e.g. VerySleepy is free), comparing possibly to 4.1.3. It might be
> > useful or necessary to also do the profiling with a debug build of
> > Windows and/or the package, while the performance numbers will be
> > skewed, one would see the symbol names.
> >
> > If you wanted specific help, please send a reproducible example -
> > instructions how to run the code and which code.
> >
> > Best
> > Tomas
> >
> >>
> >> June 29 2:33 PM  - old release
> >> * using R version 4.1.3 (2022-03-10)
> >> i386 timings
> >> name    user    system    elapsed
> >> prov.json    3.28    0.33    5.19
> >> prov.run    2.70    0.27    4.18
> >>
> >> x64 timings
> >> name    user    system    elapsed
> >> prov.json    3.51    0.27    4.93
> >> prov.run    3.05    0.28    4.48
> >>
> >>
> >> June 29 2:19 PM  - release
> >> * using R version 4.2.1 (2022-06-23 ucrt)
> >> * using platform: x86_64-w64-mingw32 (64-bit)
> >> name    user    system    elapsed
> >> prov.json    16.98    8.81    26.82
> >> prov.run    3.53    0.42    4.89
> >>
> >>
> >> June 29  1:52 PM - devel
> >> * using R Under development (unstable) (2022-06-28 r82534 ucrt)
> >> * using platform: x86_64-w64-mingw32 (64-bit)
> >> name    user    system    elapsed
> >> prov.json    16.60     9.09    26.66
> >> prov.run    3.57    0.22    4.70 I then ran the same timing script as
> >> win-builder uses on my Mac,
> >> using Rscript and got these results: name    user    system  elapsed
> >> prov.json       1.105   0.159   1.329 prov.run        0.890   0.103
> >> 1.053 session_info reports:  version  R version 4.2.0 (2022-04-22)
> >>    os       macOS Catalina 10.15.7  system   x86_64, darwin17.0 I then
> >> installed 4.2.1 on my Mac. The time is a little slower but nothing like
> >> the slowdown on Windows.
> >> name    user    system  elapsed prov.json       1.286   0.230 3.080
> >> prov.run        0.940   0.108   1.131  version  R version 4.2.1
> >> (2022-06-23)  os       macOS Catalina 10.15.7  system   x86_64,
> >> darwin17.0
> >>
>
> --
> <http://www.getpostbox.com>Barbara Lerner (she / her)
> Professor
> Computer Science Department
> Mount Holyoke College
>
> <http://www.getpostbox.com>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Fri Jul  1 09:23:30 2022
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Fri, 1 Jul 2022 09:23:30 +0200
Subject: [R-pkg-devel] Slowdown running examples since 4.2 on Windows
In-Reply-To: <d76c5510-7f48-8a47-afff-5dd35d0c825d@mtholyoke.edu>
References: <be553b98-2057-49e0-1922-37679544eb81@mtholyoke.edu>
 <676322ff-0d24-ece2-ae0d-e7c536373dea@gmail.com>
 <d76c5510-7f48-8a47-afff-5dd35d0c825d@mtholyoke.edu>
Message-ID: <9e64db22-a8ee-977b-e0d5-394cb8805bab@gmail.com>


On 6/30/22 17:45, Barbara Lerner wrote:
> Thanks for these suggestions.? I attempted to submit a slightly 
> earlier version of my package a few weeks ago and saw the slowdown on 
> winbuilder then, too.? I did not look into any further at that point.

I was curious about repeatability to rule out the option that it was 
simply that Winbuilder was overloaded at the time of checking the package.

Is the current version that also caused the problem available anywhere?

>
> I have tested it on a local Windows computer running 4.2.0 and I did 
> not see the slowdown there.? Here are those results:
>
> Name ????????user?? ?system elapsed
>
> prov.json 1.11 ??0.24 2.19
>
> prov.run??? 0.99? ??0.06 1.93
>
> version? R version 4.2.0 (2022-04-22 ucrt)
>
> os?????? Windows 10 x64 (build 19044)
>
> system?? x86_64, mingw32

It would be difficult to profile without being able to reproduce on a 
machine that can be used interactively and exclusively for the profiling.
Still, you could try narrowing it down by instrumenting the package - 
adding some timings, printing the outputs, and sending such instrumented 
package to Winbuilder

Tomas


>
>
> Tomas Kalibera wrote on 6/30/22 10:09 AM:
>>
>> On 6/29/22 22:25, Barbara Lerner wrote:
>>> I have a package that I want to submit an updated version for but the
>>> examples run too slowly on win-builder since 4.2 came out.? I just
>>> submitted the exact same tar.gz file to all 3 versions of R 
>>> available on
>>> win-builder and got the results shown below.? Notice the dramatic
>>> slowdown from 4.1.3 to 4.2.1.
>>>
>>> I don't know how to go about tracking down the cause of this slowdown.
>>> The examples are quite small.? I am reluctant to use \dontrun, but I am
>>> not sure what else to do.
>>
>> Could you perhaps submit to Winbuilder several times (with some 
>> non-trivial delay between the runs) to see if the very long execution 
>> is reproducible?
>>
>> If so, the next step could be trying on a Windows machine with 
>> interactive access, to reproduce, and if it is still so slow, 
>> checking where the time is spent, using an R profiler, using some C 
>> profiler (e.g. VerySleepy is free), comparing possibly to 4.1.3. It 
>> might be useful or necessary to also do the profiling with a debug 
>> build of Windows and/or the package, while the performance numbers 
>> will be skewed, one would see the symbol names.
>>
>> If you wanted specific help, please send a reproducible example - 
>> instructions how to run the code and which code.
>>
>> Best
>> Tomas
>>
>>>
>>> June 29 2:33 PM? - old release
>>> * using R version 4.1.3 (2022-03-10)
>>> i386 timings
>>> name??? user??? system??? elapsed
>>> prov.json??? 3.28??? 0.33??? 5.19
>>> prov.run??? 2.70??? 0.27??? 4.18
>>>
>>> x64 timings
>>> name??? user??? system??? elapsed
>>> prov.json??? 3.51??? 0.27??? 4.93
>>> prov.run??? 3.05??? 0.28??? 4.48
>>>
>>>
>>> June 29 2:19 PM? - release
>>> * using R version 4.2.1 (2022-06-23 ucrt)
>>> * using platform: x86_64-w64-mingw32 (64-bit)
>>> name??? user??? system??? elapsed
>>> prov.json??? 16.98??? 8.81??? 26.82
>>> prov.run??? 3.53??? 0.42??? 4.89
>>>
>>>
>>> June 29? 1:52 PM - devel
>>> * using R Under development (unstable) (2022-06-28 r82534 ucrt)
>>> * using platform: x86_64-w64-mingw32 (64-bit)
>>> name??? user??? system??? elapsed
>>> prov.json??? 16.60???? 9.09??? 26.66
>>> prov.run??? 3.57??? 0.22??? 4.70 I then ran the same timing script 
>>> as win-builder uses on my Mac,
>>> using Rscript and got these results: name??? user??? system elapsed
>>> prov.json?????? 1.105?? 0.159?? 1.329 prov.run??????? 0.890 0.103
>>> 1.053 session_info reports: ?version? R version 4.2.0 (2022-04-22)
>>> ? ?os?????? macOS Catalina 10.15.7 ?system?? x86_64, darwin17.0 I then
>>> installed 4.2.1 on my Mac. The time is a little slower but nothing like
>>> the slowdown on Windows.
>>> name??? user??? system? elapsed prov.json?????? 1.286 0.230?? 3.080
>>> prov.run??????? 0.940?? 0.108?? 1.131 ?version? R version 4.2.1
>>> (2022-06-23) ?os?????? macOS Catalina 10.15.7 ?system x86_64, 
>>> darwin17.0
>>>
>
> -- 
> <http://www.getpostbox.com>Barbara Lerner (she / her)
> Professor
> Computer Science Department
> Mount Holyoke College
>
> <http://www.getpostbox.com>
	[[alternative HTML version deleted]]


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Fri Jul  1 09:49:23 2022
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Fri, 1 Jul 2022 09:49:23 +0200
Subject: [R-pkg-devel] Slowdown running examples since 4.2 on Windows
In-Reply-To: <9e64db22-a8ee-977b-e0d5-394cb8805bab@gmail.com>
References: <be553b98-2057-49e0-1922-37679544eb81@mtholyoke.edu>
 <676322ff-0d24-ece2-ae0d-e7c536373dea@gmail.com>
 <d76c5510-7f48-8a47-afff-5dd35d0c825d@mtholyoke.edu>
 <9e64db22-a8ee-977b-e0d5-394cb8805bab@gmail.com>
Message-ID: <47e31581-1866-e06c-b6fb-83f6a98b7149@statistik.tu-dortmund.de>

And if you told us what the package is you are tasking about or gave us 
access to the package sources, we could easily check that. Without 
reproducible examples we really cannot help.

Best,
Uwe Ligges


On 01.07.2022 09:23, Tomas Kalibera wrote:
> 
> On 6/30/22 17:45, Barbara Lerner wrote:
>> Thanks for these suggestions.? I attempted to submit a slightly
>> earlier version of my package a few weeks ago and saw the slowdown on
>> winbuilder then, too.? I did not look into any further at that point.
> 
> I was curious about repeatability to rule out the option that it was
> simply that Winbuilder was overloaded at the time of checking the package.
> 
> Is the current version that also caused the problem available anywhere?
> 
>>
>> I have tested it on a local Windows computer running 4.2.0 and I did
>> not see the slowdown there.? Here are those results:
>>
>> Name ????????user?? ?system elapsed
>>
>> prov.json 1.11 ??0.24 2.19
>>
>> prov.run??? 0.99? ??0.06 1.93
>>
>> version? R version 4.2.0 (2022-04-22 ucrt)
>>
>> os?????? Windows 10 x64 (build 19044)
>>
>> system?? x86_64, mingw32
> 
> It would be difficult to profile without being able to reproduce on a
> machine that can be used interactively and exclusively for the profiling.
> Still, you could try narrowing it down by instrumenting the package -
> adding some timings, printing the outputs, and sending such instrumented
> package to Winbuilder
> 
> Tomas
> 
> 
>>
>>
>> Tomas Kalibera wrote on 6/30/22 10:09 AM:
>>>
>>> On 6/29/22 22:25, Barbara Lerner wrote:
>>>> I have a package that I want to submit an updated version for but the
>>>> examples run too slowly on win-builder since 4.2 came out.? I just
>>>> submitted the exact same tar.gz file to all 3 versions of R
>>>> available on
>>>> win-builder and got the results shown below.? Notice the dramatic
>>>> slowdown from 4.1.3 to 4.2.1.
>>>>
>>>> I don't know how to go about tracking down the cause of this slowdown.
>>>> The examples are quite small.? I am reluctant to use \dontrun, but I am
>>>> not sure what else to do.
>>>
>>> Could you perhaps submit to Winbuilder several times (with some
>>> non-trivial delay between the runs) to see if the very long execution
>>> is reproducible?
>>>
>>> If so, the next step could be trying on a Windows machine with
>>> interactive access, to reproduce, and if it is still so slow,
>>> checking where the time is spent, using an R profiler, using some C
>>> profiler (e.g. VerySleepy is free), comparing possibly to 4.1.3. It
>>> might be useful or necessary to also do the profiling with a debug
>>> build of Windows and/or the package, while the performance numbers
>>> will be skewed, one would see the symbol names.
>>>
>>> If you wanted specific help, please send a reproducible example -
>>> instructions how to run the code and which code.
>>>
>>> Best
>>> Tomas
>>>
>>>>
>>>> June 29 2:33 PM? - old release
>>>> * using R version 4.1.3 (2022-03-10)
>>>> i386 timings
>>>> name??? user??? system??? elapsed
>>>> prov.json??? 3.28??? 0.33??? 5.19
>>>> prov.run??? 2.70??? 0.27??? 4.18
>>>>
>>>> x64 timings
>>>> name??? user??? system??? elapsed
>>>> prov.json??? 3.51??? 0.27??? 4.93
>>>> prov.run??? 3.05??? 0.28??? 4.48
>>>>
>>>>
>>>> June 29 2:19 PM? - release
>>>> * using R version 4.2.1 (2022-06-23 ucrt)
>>>> * using platform: x86_64-w64-mingw32 (64-bit)
>>>> name??? user??? system??? elapsed
>>>> prov.json??? 16.98??? 8.81??? 26.82
>>>> prov.run??? 3.53??? 0.42??? 4.89
>>>>
>>>>
>>>> June 29? 1:52 PM - devel
>>>> * using R Under development (unstable) (2022-06-28 r82534 ucrt)
>>>> * using platform: x86_64-w64-mingw32 (64-bit)
>>>> name??? user??? system??? elapsed
>>>> prov.json??? 16.60???? 9.09??? 26.66
>>>> prov.run??? 3.57??? 0.22??? 4.70 I then ran the same timing script
>>>> as win-builder uses on my Mac,
>>>> using Rscript and got these results: name??? user??? system elapsed
>>>> prov.json?????? 1.105?? 0.159?? 1.329 prov.run??????? 0.890 0.103
>>>> 1.053 session_info reports: ?version? R version 4.2.0 (2022-04-22)
>>>>  ? ?os?????? macOS Catalina 10.15.7 ?system?? x86_64, darwin17.0 I then
>>>> installed 4.2.1 on my Mac. The time is a little slower but nothing like
>>>> the slowdown on Windows.
>>>> name??? user??? system? elapsed prov.json?????? 1.286 0.230?? 3.080
>>>> prov.run??????? 0.940?? 0.108?? 1.131 ?version? R version 4.2.1
>>>> (2022-06-23) ?os?????? macOS Catalina 10.15.7 ?system x86_64,
>>>> darwin17.0
>>>>
>>
>> -- 
>> <http://www.getpostbox.com>Barbara Lerner (she / her)
>> Professor
>> Computer Science Department
>> Mount Holyoke College
>>
>> <http://www.getpostbox.com>
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From b|erner @end|ng |rom mtho|yoke@edu  Fri Jul  1 18:04:57 2022
From: b|erner @end|ng |rom mtho|yoke@edu (Barbara Lerner)
Date: Fri, 1 Jul 2022 12:04:57 -0400
Subject: [R-pkg-devel] Slowdown running examples since 4.2 on Windows
In-Reply-To: <47e31581-1866-e06c-b6fb-83f6a98b7149@statistik.tu-dortmund.de>
References: <be553b98-2057-49e0-1922-37679544eb81@mtholyoke.edu>
 <676322ff-0d24-ece2-ae0d-e7c536373dea@gmail.com>
 <d76c5510-7f48-8a47-afff-5dd35d0c825d@mtholyoke.edu>
 <9e64db22-a8ee-977b-e0d5-394cb8805bab@gmail.com>
 <47e31581-1866-e06c-b6fb-83f6a98b7149@statistik.tu-dortmund.de>
Message-ID: <0253c20b-11ab-4855-096e-74720586d228@mtholyoke.edu>

The package can be downloaded from github:

https://github.com/End-to-end-provenance/rdtLite

Barbara

Uwe Ligges wrote on 7/1/22 3:49 AM:
> And if you told us what the package is you are tasking about or gave 
> us access to the package sources, we could easily check that. Without 
> reproducible examples we really cannot help.
>
> Best,
> Uwe Ligges
>
>
> On 01.07.2022 09:23, Tomas Kalibera wrote:
>>
>> On 6/30/22 17:45, Barbara Lerner wrote:
>>> Thanks for these suggestions.? I attempted to submit a slightly
>>> earlier version of my package a few weeks ago and saw the slowdown on
>>> winbuilder then, too.? I did not look into any further at that point.
>>
>> I was curious about repeatability to rule out the option that it was
>> simply that Winbuilder was overloaded at the time of checking the 
>> package.
>>
>> Is the current version that also caused the problem available anywhere?
>>
>>>
>>> I have tested it on a local Windows computer running 4.2.0 and I did
>>> not see the slowdown there.? Here are those results:
>>>
>>> Name ????????user?? ?system elapsed
>>>
>>> prov.json 1.11 ??0.24 2.19
>>>
>>> prov.run??? 0.99? ??0.06 1.93
>>>
>>> version? R version 4.2.0 (2022-04-22 ucrt)
>>>
>>> os?????? Windows 10 x64 (build 19044)
>>>
>>> system?? x86_64, mingw32
>>
>> It would be difficult to profile without being able to reproduce on a
>> machine that can be used interactively and exclusively for the 
>> profiling.
>> Still, you could try narrowing it down by instrumenting the package -
>> adding some timings, printing the outputs, and sending such instrumented
>> package to Winbuilder
>>
>> Tomas
>>
>>
>>>
>>>
>>> Tomas Kalibera wrote on 6/30/22 10:09 AM:
>>>>
>>>> On 6/29/22 22:25, Barbara Lerner wrote:
>>>>> I have a package that I want to submit an updated version for but the
>>>>> examples run too slowly on win-builder since 4.2 came out.? I just
>>>>> submitted the exact same tar.gz file to all 3 versions of R
>>>>> available on
>>>>> win-builder and got the results shown below.? Notice the dramatic
>>>>> slowdown from 4.1.3 to 4.2.1.
>>>>>
>>>>> I don't know how to go about tracking down the cause of this 
>>>>> slowdown.
>>>>> The examples are quite small.? I am reluctant to use \dontrun, but 
>>>>> I am
>>>>> not sure what else to do.
>>>>
>>>> Could you perhaps submit to Winbuilder several times (with some
>>>> non-trivial delay between the runs) to see if the very long execution
>>>> is reproducible?
>>>>
>>>> If so, the next step could be trying on a Windows machine with
>>>> interactive access, to reproduce, and if it is still so slow,
>>>> checking where the time is spent, using an R profiler, using some C
>>>> profiler (e.g. VerySleepy is free), comparing possibly to 4.1.3. It
>>>> might be useful or necessary to also do the profiling with a debug
>>>> build of Windows and/or the package, while the performance numbers
>>>> will be skewed, one would see the symbol names.
>>>>
>>>> If you wanted specific help, please send a reproducible example -
>>>> instructions how to run the code and which code.
>>>>
>>>> Best
>>>> Tomas
>>>>
>>>>>
>>>>> June 29 2:33 PM? - old release
>>>>> * using R version 4.1.3 (2022-03-10)
>>>>> i386 timings
>>>>> name??? user??? system??? elapsed
>>>>> prov.json??? 3.28??? 0.33??? 5.19
>>>>> prov.run??? 2.70??? 0.27??? 4.18
>>>>>
>>>>> x64 timings
>>>>> name??? user??? system??? elapsed
>>>>> prov.json??? 3.51??? 0.27??? 4.93
>>>>> prov.run??? 3.05??? 0.28??? 4.48
>>>>>
>>>>>
>>>>> June 29 2:19 PM? - release
>>>>> * using R version 4.2.1 (2022-06-23 ucrt)
>>>>> * using platform: x86_64-w64-mingw32 (64-bit)
>>>>> name??? user??? system??? elapsed
>>>>> prov.json??? 16.98??? 8.81??? 26.82
>>>>> prov.run??? 3.53??? 0.42??? 4.89
>>>>>
>>>>>
>>>>> June 29? 1:52 PM - devel
>>>>> * using R Under development (unstable) (2022-06-28 r82534 ucrt)
>>>>> * using platform: x86_64-w64-mingw32 (64-bit)
>>>>> name??? user??? system??? elapsed
>>>>> prov.json??? 16.60???? 9.09??? 26.66
>>>>> prov.run??? 3.57??? 0.22??? 4.70 I then ran the same timing script
>>>>> as win-builder uses on my Mac,
>>>>> using Rscript and got these results: name??? user??? system elapsed
>>>>> prov.json?????? 1.105?? 0.159?? 1.329 prov.run??????? 0.890 0.103
>>>>> 1.053 session_info reports: ?version? R version 4.2.0 (2022-04-22)
>>>>> ?? ?os?????? macOS Catalina 10.15.7 ?system?? x86_64, darwin17.0 I 
>>>>> then
>>>>> installed 4.2.1 on my Mac. The time is a little slower but nothing 
>>>>> like
>>>>> the slowdown on Windows.
>>>>> name??? user??? system? elapsed prov.json?????? 1.286 0.230?? 3.080
>>>>> prov.run??????? 0.940?? 0.108?? 1.131 ?version? R version 4.2.1
>>>>> (2022-06-23) ?os?????? macOS Catalina 10.15.7 ?system x86_64,
>>>>> darwin17.0
>>>>>
>>>
>>> -- 
>>> <http://www.getpostbox.com>Barbara Lerner (she / her)
>>> Professor
>>> Computer Science Department
>>> Mount Holyoke College
>>>
>>> <http://www.getpostbox.com>
>> ????[[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
<http://www.getpostbox.com>Barbara Lerner (she / her)
Professor
Computer Science Department
Mount Holyoke College

<http://www.getpostbox.com>

	[[alternative HTML version deleted]]


From joh@nne@@r@nke @end|ng |rom jrwb@de  Fri Jul  1 11:10:03 2022
From: joh@nne@@r@nke @end|ng |rom jrwb@de (Johannes Ranke)
Date: Fri, 01 Jul 2022 11:10:03 +0200
Subject: [R-pkg-devel] Slow down in R 4.2.x
Message-ID: <13505960.q0Az33yFfb@ryz>

Dear list,

independent of the thread on this list about slow examples on R 4.2 on windows 
I have discovered over the last few days that some of my benchmarks (look for 
t4 and t9) run by a factor of 3 slower on R 4.2.x than on R 4.1.3 [1].

This is on Linux, using my own backported R packages for R 4.2.x and locally 
compiled versions (with default configure options) of R-4-1-branch on two 
different CPUs. The results for R 4.2.1 are only slightly modulated by the use 
of different BLAS version (openblas-serial versus atlas versus lapack).

I also tested the R 4.0.4 version that is part of Debian bullseye, it is as 
fast as the locally compiled R 4.1.3.

I went through the NEWS for R 4.2.0 (because the first slow results were 
obtained using that version), but the only change I could imagine causing such 
a change is the additional check of the length of the arguments && and ||.

Any other thoughts?

Johannes

[1] https://pkgdown.jrwb.de/mkin/articles/web_only/benchmarks.html#results 



	[[alternative HTML version deleted]]


From t@r@@@z@kh@rko @end|ng |rom uzh@ch  Fri Jul  1 14:59:22 2022
From: t@r@@@z@kh@rko @end|ng |rom uzh@ch (Taras Zakharko)
Date: Fri, 1 Jul 2022 12:59:22 +0000
Subject: [R-pkg-devel] Seeking feedback on a package before submitting to
 CRAN
Message-ID: <GV0P278MB0417D418D560D7E2519E6BEAECBD9@GV0P278MB0417.CHEP278.PROD.OUTLOOK.COM>

Dear all,?

I have written a small?lightweight utility package for R developers that implements opinionated assertion checking routines. This is mostly a drop-in replacement for base::stopifnot() but with some additional features that simplify debugging and error location. Before submitting the package on CRAN I was hoping that someone here would be so kind to have a quick look and maybe offer some feedback. The package is called "precondition" and can be found on GitHub here:

? https://github.com/tzakharko/precondition?

If you would like to leave some feedback I have created a GitHub issue just for that:?

  https://github.com/tzakharko/precondition/issues/1

Here is a quick summary as to what this package is about: it implements a thematic collection of assertion routines that check some conditions and report an informative error if the conditions are not TRUE. The routines have been inspired by similar mechanisms in the Swift programming language and discussion on the Swift design mailing lists. There are three assertion routines:

- precondition(x>0) to check inputs/environment before executing some code (to be used to check function arguments, for example)

- postcondition(.value. > 0) to check the function result?

- sanity_check(!is.null(x)) to check internal assumptions/invariants of the algorithm and guard against bugs, will immediately abort the program bypassing error handling when failed. Sanity checks are internal assertions and failing them always mean that there is a critical bug ?in the code which would make any attempt at error recovery futile

Parts of the assertion predicate can be "embraced", which will print them on assertion failure, making it easier to see what went wrong, e.g.?

? x <- 0
? precondition({{x}} > 0)
??# Error:
? # ! precondition failure
? # ! `x > 0` is not TRUE
? # ?
? # ?`x` = dbl 10

The package README has some usage examples and background discussion.?

Thank you in advance for your help,?

Taras

P.S. To anticipate the mandatory (and justified) question, the reason why I decided to roll my own solution instead of using one of the existing packages (like the popular assertthat) is because I needed something very simple and with low performance overhead to help me debug my code and document program invariants.?

From r@||@hero|d @end|ng |rom gmx@net  Sat Jul  2 12:01:38 2022
From: r@||@hero|d @end|ng |rom gmx@net (Ralf Herold)
Date: Sat, 2 Jul 2022 12:01:38 +0200
Subject: [R-pkg-devel] R CMD checks URLs formatted for LaTeX instead of
 using the non-LaTeX URLs, and fails
Message-ID: <DBA296A1-ABF8-496E-A3D2-6A2FF8B4294A@gmx.net>

Hello, in my package documentation I want to include URLs with query string parameters and anchors, within a table. A minimally reproducible example is this content in file "man/mre.Rd":

\name{mre}
\title{mre}
\description{mre}
\details{
\tabular{l}{
  \ifelse{latex}{\href{https://clinicaltrials.gov/ct2/results?cond=Infections\&rslt=With\#tableTop}{latex link}}{\href{https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop}{non-latex link}}
}}

The ifelse{}{}{} construct is necessary since ampersands in a table need to be escaped for LaTeX rendering.

Each of the following commands checks and renders the respective output correctly:

tools::checkRd("man/mre.Rd")
tools::Rd2txt("man/mre.Rd")
tools::Rd2latex("man/mre.Rd")
tools::Rd2HTML("man/mre.Rd")
system2("R", c("CMD", "Rd2pdf", "man/mre.Rd"))

However, rhub::check_for_cran() results in NOTES:

Found the following (possibly) invalid URLs:
  URL: https://clinicaltrials.gov/ct2/results?cond=Infections\&rslt=With\#tableTop
    From: man/mre.Rd
    Status: 400
    Message: Bad Request

Subsequently, CRAN maintainers refused accepting the package.

However, the underlying cause is that, during such checks, all apparent URLs are extracted from .Rd files, irrespective of any \ifelse{}{}{} constructs. This in turn is due to such checks involving calls to function ".get_urls_from_Rd" without setting its argument "ifdef" to TRUE.

Here is how to see this behaviour:

db <- tools::Rd_db(dir = ".")

# get functions
source("https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R")
source("https://svn.r-project.org/R/trunk/src/library/tools/R/utils.R")
.Rd_deparse <- tools:::.Rd_deparse
RdTags <- tools:::RdTags

# default, leading to invalid url in [1]
# > .get_urls_from_Rd(db)
# [1] "https://clinicaltrials.gov/ct2/results?cond=Infections\\&rslt=With\\#tableTop"
# [2] "https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop"

# returning relevant valid url
#> .get_urls_from_Rd(db, ifdef = TRUE)
# [1] "https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop"

This can be addressed by either:

-- changing the signature of ".get_urls_from_Rd" in line 50 in https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R to read "ifdef = TRUE". Of note, this function has a code block to handle such ifdef constructs which indicates it should be possible to use them in Rd files.

-- changing the calling function "url_db_from_package_Rd_db" to include "ifdef = TRUE" on line 178 in https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R

Please advise how to advance on this issue, thank you very much.

Greetings
Ralf


From @eb@meyer @end|ng |rom |@u@de  Sun Jul  3 01:51:05 2022
From: @eb@meyer @end|ng |rom |@u@de (Sebastian Meyer)
Date: Sun, 3 Jul 2022 01:51:05 +0200
Subject: [R-pkg-devel] R CMD checks URLs formatted for LaTeX instead of
 using the non-LaTeX URLs, and fails
In-Reply-To: <DBA296A1-ABF8-496E-A3D2-6A2FF8B4294A@gmx.net>
References: <DBA296A1-ABF8-496E-A3D2-6A2FF8B4294A@gmx.net>
Message-ID: <f4be4bbf-4ae8-e2fc-1d12-bf56bffab6b1@fau.de>

Am 02.07.22 um 12:01 schrieb Ralf Herold:
> Hello, in my package documentation I want to include URLs with query string parameters and anchors, within a table. A minimally reproducible example is this content in file "man/mre.Rd":
> 
> \name{mre}
> \title{mre}
> \description{mre}
> \details{
> \tabular{l}{
>    \ifelse{latex}{\href{https://clinicaltrials.gov/ct2/results?cond=Infections\&rslt=With\#tableTop}{latex link}}{\href{https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop}{non-latex link}}
> }}
> 
> The ifelse{}{}{} construct is necessary since ampersands in a table need to be escaped for LaTeX rendering.

This is a red herring. Ampersands do *not* need to be escaped in \href 
URLs. The problem is the hash symbol, which needs to be escaped if \href 
is nested within another markup macro, here \Tabular (from Rd.sty). This 
is a known limitation; Rd2latex will probably do the escaping in the 
future. It's good to see a use case.

I think currently the best solutions for you are to simply omit the 
#tableTop part in the LaTeX version or to not use such URLs inside a 
\tabular.

Hope this helps.
Best regards,

	Sebastian Meyer

> 
> Each of the following commands checks and renders the respective output correctly:
> 
> tools::checkRd("man/mre.Rd")
> tools::Rd2txt("man/mre.Rd")
> tools::Rd2latex("man/mre.Rd")
> tools::Rd2HTML("man/mre.Rd")
> system2("R", c("CMD", "Rd2pdf", "man/mre.Rd"))
> 
> However, rhub::check_for_cran() results in NOTES:
> 
> Found the following (possibly) invalid URLs:
>    URL: https://clinicaltrials.gov/ct2/results?cond=Infections\&rslt=With\#tableTop
>      From: man/mre.Rd
>      Status: 400
>      Message: Bad Request
> 
> Subsequently, CRAN maintainers refused accepting the package.
> 
> However, the underlying cause is that, during such checks, all apparent URLs are extracted from .Rd files, irrespective of any \ifelse{}{}{} constructs. This in turn is due to such checks involving calls to function ".get_urls_from_Rd" without setting its argument "ifdef" to TRUE.
> 
> Here is how to see this behaviour:
> 
> db <- tools::Rd_db(dir = ".")
> 
> # get functions
> source("https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R")
> source("https://svn.r-project.org/R/trunk/src/library/tools/R/utils.R")
> .Rd_deparse <- tools:::.Rd_deparse
> RdTags <- tools:::RdTags
> 
> # default, leading to invalid url in [1]
> # > .get_urls_from_Rd(db)
> # [1] "https://clinicaltrials.gov/ct2/results?cond=Infections\\&rslt=With\\#tableTop"
> # [2] "https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop"
> 
> # returning relevant valid url
> #> .get_urls_from_Rd(db, ifdef = TRUE)
> # [1] "https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop"
> 
> This can be addressed by either:
> 
> -- changing the signature of ".get_urls_from_Rd" in line 50 in https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R to read "ifdef = TRUE". Of note, this function has a code block to handle such ifdef constructs which indicates it should be possible to use them in Rd files.
> 
> -- changing the calling function "url_db_from_package_Rd_db" to include "ifdef = TRUE" on line 178 in https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R
> 
> Please advise how to advance on this issue, thank you very much.
> 
> Greetings
> Ralf
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From r@||@hero|d @end|ng |rom gmx@net  Sun Jul  3 08:27:28 2022
From: r@||@hero|d @end|ng |rom gmx@net (Ralf Herold)
Date: Sun, 3 Jul 2022 08:27:28 +0200
Subject: [R-pkg-devel] R CMD checks URLs formatted for LaTeX instead of
 using the non-LaTeX URLs, and fails
In-Reply-To: <f4be4bbf-4ae8-e2fc-1d12-bf56bffab6b1@fau.de>
References: <DBA296A1-ABF8-496E-A3D2-6A2FF8B4294A@gmx.net>
 <f4be4bbf-4ae8-e2fc-1d12-bf56bffab6b1@fau.de>
Message-ID: <F44171D0-CCE4-4049-9C52-BCC3625C2B2A@gmx.net>

Thanks Sebastian, 

but not only hash, also ampersand in \href in a tabular environment does need to be escaped, otherwise it does not latex (example below). I was not aware it is a known limitation for .Rd files despite searching for it. 

My use case (with eventually more meaningful query parameters and possibly anchors) would work if the existing R code block for handling \ifelse in urltools.R was activated as shown below, and this is my suggestion. How could I propose this? 

Kind regards,
Ralf


\name{mre}
\title{mre}
\description{mre}
\details{
\tabular{l}{
  \href{https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With}{link}
}}


LaTeX errors:

! Argument of \href at split has an extra }.
<inserted text> 
                \par 
l.24 }
      
Runaway argument?
https://clinicaltrials.gov/ct2/results?cond=Infections\unskip \hfil 
! Paragraph ended before \href at split was complete.
<to be read again> 
                   \par 
l.24 }
      
! Extra }, or forgotten \endgroup.
<recently read> }


> Am 03.07.2022 um 01:51 schrieb Sebastian Meyer <seb.meyer at fau.de>:
> 
> Am 02.07.22 um 12:01 schrieb Ralf Herold:
>> Hello, in my package documentation I want to include URLs with query string parameters and anchors, within a table. A minimally reproducible example is this content in file "man/mre.Rd":
>> \name{mre}
>> \title{mre}
>> \description{mre}
>> \details{
>> \tabular{l}{
>>   \ifelse{latex}{\href{https://clinicaltrials.gov/ct2/results?cond=Infections\&rslt=With\#tableTop}{latex link}}{\href{https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop}{non-latex link}}
>> }}
>> The ifelse{}{}{} construct is necessary since ampersands in a table need to be escaped for LaTeX rendering.
> 
> This is a red herring. Ampersands do *not* need to be escaped in \href URLs. The problem is the hash symbol, which needs to be escaped if \href is nested within another markup macro, here \Tabular (from Rd.sty). This is a known limitation; Rd2latex will probably do the escaping in the future. It's good to see a use case.
> 
> I think currently the best solutions for you are to simply omit the #tableTop part in the LaTeX version or to not use such URLs inside a \tabular.
> 
> Hope this helps.
> Best regards,
> 
> 	Sebastian Meyer
> 
>> Each of the following commands checks and renders the respective output correctly:
>> tools::checkRd("man/mre.Rd")
>> tools::Rd2txt("man/mre.Rd")
>> tools::Rd2latex("man/mre.Rd")
>> tools::Rd2HTML("man/mre.Rd")
>> system2("R", c("CMD", "Rd2pdf", "man/mre.Rd"))
>> However, rhub::check_for_cran() results in NOTES:
>> Found the following (possibly) invalid URLs:
>>   URL: https://clinicaltrials.gov/ct2/results?cond=Infections\&rslt=With\#tableTop
>>     From: man/mre.Rd
>>     Status: 400
>>     Message: Bad Request
>> Subsequently, CRAN maintainers refused accepting the package.
>> However, the underlying cause is that, during such checks, all apparent URLs are extracted from .Rd files, irrespective of any \ifelse{}{}{} constructs. This in turn is due to such checks involving calls to function ".get_urls_from_Rd" without setting its argument "ifdef" to TRUE.
>> Here is how to see this behaviour:
>> db <- tools::Rd_db(dir = ".")
>> # get functions
>> source("https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R")
>> source("https://svn.r-project.org/R/trunk/src/library/tools/R/utils.R")
>> .Rd_deparse <- tools:::.Rd_deparse
>> RdTags <- tools:::RdTags
>> # default, leading to invalid url in [1]
>> # > .get_urls_from_Rd(db)
>> # [1] "https://clinicaltrials.gov/ct2/results?cond=Infections\\&rslt=With\\#tableTop"
>> # [2] "https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop"
>> # returning relevant valid url
>> #> .get_urls_from_Rd(db, ifdef = TRUE)
>> # [1] "https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop"
>> This can be addressed by either:
>> -- changing the signature of ".get_urls_from_Rd" in line 50 in https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R to read "ifdef = TRUE". Of note, this function has a code block to handle such ifdef constructs which indicates it should be possible to use them in Rd files.
>> -- changing the calling function "url_db_from_package_Rd_db" to include "ifdef = TRUE" on line 178 in https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R
>> Please advise how to advance on this issue, thank you very much.
>> Greetings
>> Ralf
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel


	[[alternative HTML version deleted]]


From @eb@meyer @end|ng |rom |@u@de  Mon Jul  4 00:08:01 2022
From: @eb@meyer @end|ng |rom |@u@de (Sebastian Meyer)
Date: Mon, 4 Jul 2022 00:08:01 +0200
Subject: [R-pkg-devel] R CMD checks URLs formatted for LaTeX instead of
 using the non-LaTeX URLs, and fails
In-Reply-To: <F44171D0-CCE4-4049-9C52-BCC3625C2B2A@gmx.net>
References: <DBA296A1-ABF8-496E-A3D2-6A2FF8B4294A@gmx.net>
 <f4be4bbf-4ae8-e2fc-1d12-bf56bffab6b1@fau.de>
 <F44171D0-CCE4-4049-9C52-BCC3625C2B2A@gmx.net>
Message-ID: <a6797515-d9ce-06b4-ef49-83f473954e5f@fau.de>

Am 03.07.22 um 08:27 schrieb Ralf Herold:
> Thanks Sebastian,
> 
> but not only hash, also ampersand in \href in a tabular environment does 
> need to be escaped, otherwise it does not latex (example below). I was 
> not aware it is a known limitation for .Rd files despite searching for it.

I stumbled over that problem a while ago and found that the escaping 
issue for the hash symbol is documented in the hyperref manual (but 
currently not accounted for by Rd2latex):

> The special characters # and ~ do *not* need to be escaped in any way (unless the command is used in the argument of another command). 

For example, this LaTeX code fails to compile:
\emph{\href{https://example.org/#}{hash}}
In contrast, an ampersand would not need to be escaped in that LaTeX 
example.

However, I can confirm that a LaTeX error results if an ampersand is 
used in a \href URL (but not in \url} that is passed to the special 
\Tabular LaTeX command from Rd.sty that is used by Rd2latex() for 
\tabular Rd input. Thank you for the heads-up.

I think it would be good to improve Rd2latex() / Rd.sty for URLs in 
\tabular that contain & or # rather than require special LaTeX treatment 
in the Rd source. My preliminary testing shows that hyperref is happy if 
[&%#] are always escaped in URLs (sometimes it is not necessary but it 
also does not seem to hurt).

Best regards,

	Sebastian Meyer

> 
> My use case (with eventually more meaningful query parameters and 
> possibly anchors) would work if the existing R code block for handling 
> \ifelse in urltools.R was activated as shown below, and this is my 
> suggestion. How could I propose this?
> 
> Kind regards,
> Ralf
> 
> 
> \name{mre}
> \title{mre}
> \description{mre}
> \details{
> \tabular{l}{
>    
> \href{https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With 
> <https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With>}{link}
> }}
> 
> 
> LaTeX errors:
> 
> ! Argument of \href at split has an extra }.
> <inserted text>
>  ? ? ? ? ? ? ? ? \par
> l.24 }
> Runaway argument?
> https://clinicaltrials.gov/ct2/results?cond=Infections\unskip 
> <https://clinicaltrials.gov/ct2/results?cond=Infections\unskip> \hfil
> ! Paragraph ended before \href at split was complete.
> <to be read again>
>  ? ? ? ? ? ? ? ? ? ?\par
> l.24 }
> ! Extra }, or forgotten \endgroup.
> <recently read> }
> 
> 
>> Am 03.07.2022 um 01:51 schrieb Sebastian Meyer <seb.meyer at fau.de 
>> <mailto:seb.meyer at fau.de>>:
>>
>> Am 02.07.22 um 12:01 schrieb Ralf Herold:
>>> Hello, in my package documentation I want to include URLs with query 
>>> string parameters and anchors, within a table. A minimally 
>>> reproducible example is this content in file "man/mre.Rd":
>>> \name{mre}
>>> \title{mre}
>>> \description{mre}
>>> \details{
>>> \tabular{l}{
>>> ??\ifelse{latex}{\href{https://clinicaltrials.gov/ct2/results?cond=Infections\&rslt=With\#tableTop 
>>> <https://clinicaltrials.gov/ct2/results?cond=Infections\&rslt=With\#tableTop>}{latex 
>>> link}}{\href{https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop 
>>> <https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop>}{non-latex 
>>> link}}
>>> }}
>>> The ifelse{}{}{} construct is necessary since ampersands in a table 
>>> need to be escaped for LaTeX rendering.
>>
>> This is a red herring. Ampersands do *not* need to be escaped in \href 
>> URLs. The problem is the hash symbol, which needs to be escaped if 
>> \href is nested within another markup macro, here \Tabular (from 
>> Rd.sty). This is a known limitation; Rd2latex will probably do the 
>> escaping in the future. It's good to see a use case.
>>
>> I think currently the best solutions for you are to simply omit the 
>> #tableTop part in the LaTeX version or to not use such URLs inside a 
>> \tabular.
>>
>> Hope this helps.
>> Best regards,
>>
>> Sebastian Meyer
>>
>>> Each of the following commands checks and renders the respective 
>>> output correctly:
>>> tools::checkRd("man/mre.Rd")
>>> tools::Rd2txt("man/mre.Rd")
>>> tools::Rd2latex("man/mre.Rd")
>>> tools::Rd2HTML("man/mre.Rd")
>>> system2("R", c("CMD", "Rd2pdf", "man/mre.Rd"))
>>> However, rhub::check_for_cran() results in NOTES:
>>> Found the following (possibly) invalid URLs:
>>> ??URL: 
>>> https://clinicaltrials.gov/ct2/results?cond=Infections\&rslt=With\#tableTop 
>>> <https://clinicaltrials.gov/ct2/results?cond=Infections\&rslt=With\#tableTop>
>>> ????From: man/mre.Rd
>>> ????Status: 400
>>> ????Message: Bad Request
>>> Subsequently, CRAN maintainers refused accepting the package.
>>> However, the underlying cause is that, during such checks, all 
>>> apparent URLs are extracted from .Rd files, irrespective of any 
>>> \ifelse{}{}{} constructs. This in turn is due to such checks 
>>> involving calls to function ".get_urls_from_Rd" without setting its 
>>> argument "ifdef" to TRUE.
>>> Here is how to see this behaviour:
>>> db <- tools::Rd_db(dir = ".")
>>> # get functions
>>> source("https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R 
>>> <https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R>")
>>> source("https://svn.r-project.org/R/trunk/src/library/tools/R/utils.R 
>>> <https://svn.r-project.org/R/trunk/src/library/tools/R/utils.R>")
>>> .Rd_deparse <- tools:::.Rd_deparse
>>> RdTags <- tools:::RdTags
>>> # default, leading to invalid url in [1]
>>> # > .get_urls_from_Rd(db)
>>> # [1] 
>>> "https://clinicaltrials.gov/ct2/results?cond=Infections\\&rslt=With\\#tableTop 
>>> <https://clinicaltrials.gov/ct2/results?cond=Infections\\&rslt=With\\#tableTop>"
>>> # [2] 
>>> "https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop 
>>> <https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop>"
>>> # returning relevant valid url
>>> #> .get_urls_from_Rd(db, ifdef = TRUE)
>>> # [1] 
>>> "https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop 
>>> <https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop>"
>>> This can be addressed by either:
>>> -- changing the signature of ".get_urls_from_Rd" in line 50 in 
>>> https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R 
>>> <https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R> to 
>>> read "ifdef = TRUE". Of note, this function has a code block to 
>>> handle such ifdef constructs which indicates it should be possible to 
>>> use them in Rd files.
>>> -- changing the calling function "url_db_from_package_Rd_db" to 
>>> include "ifdef = TRUE" on line 178 in 
>>> https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R 
>>> <https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R>
>>> Please advise how to advance on this issue, thank you very much.
>>> Greetings
>>> Ralf
>>> ______________________________________________
>>> R-package-devel at r-project.org <mailto:R-package-devel at r-project.org> 
>>> mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel 
>>> <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
>


From A@J@God|rey @end|ng |rom m@@@ey@@c@nz  Tue Jul  5 03:59:43 2022
From: A@J@God|rey @end|ng |rom m@@@ey@@c@nz (Jonathan Godfrey)
Date: Tue, 5 Jul 2022 01:59:43 +0000
Subject: [R-pkg-devel] problem with regdmp finding v4.2.x under Windows
Message-ID: <MEAPR01MB3829E66FE3C79E43E78A401693819@MEAPR01MB3829.ausprd01.prod.outlook.com>

Hi all,

In order to support my local students and other blind users, I install every version of R and re-build every document used, almost all of which are R markdown documents.

That means re-installing or updating packages as if I was a novice user following instructions. I try to give my students a clean start experience at the beginning of semester so that we're all using the same versions, and gives me time to sort out the messes before semester begins.

To do all of that efficiently, I make extensive use of batch files (Windows user alert) and a key ingredient of those batch files is that I avoid having to edit the R version number with each installation.

I've been using a Windows utility called regdmp to look in the registry for the highest version number. Up to v4.1.3, that was working extremely well for me.

In addition, I've been investigating quarto, and have struck the same problem because quarto looks for the path to Rscript.exe using the regdmp utility. I've had help from the quarto team, and we've established that the regdmp utility should be finding a version of R if one exists. On my newish laptop where there is just one R installation (4.2.0) regdmp fails to find any installation because it has an "Access denied" error message.

On my older desktop which has multiple R installations, I do not get an "Access denied" error, quarto finds the path to the 4.2.0 installation via brute force, but regdmp via my batch files gives me 4.1.x instead.

I'm currently able to provide the service to my students I want, but only by doing all R work by explicitly naming the version of R I want used. I really do want to get back to my previous workflow so that I just install new versions of R and carry on.

I'm now seeking your advice on the differences in installation of versions 4.2.x and 4.1.x that could have an impact on the Windows registry and therefore regdmp's ability to find the relevant entries there.


Many thanks,
Jonathan








	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Tue Jul  5 10:15:05 2022
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Tue, 5 Jul 2022 11:15:05 +0300
Subject: [R-pkg-devel] problem with regdmp finding v4.2.x under Windows
In-Reply-To: <MEAPR01MB3829E66FE3C79E43E78A401693819@MEAPR01MB3829.ausprd01.prod.outlook.com>
References: <MEAPR01MB3829E66FE3C79E43E78A401693819@MEAPR01MB3829.ausprd01.prod.outlook.com>
Message-ID: <20220705111505.0ead2d07@Tarkus>

Hi Jonathan,

Since we don't have a separate "R on Windows" or "R installation
and administration" mailing list, I think that this question is a
better fit for R-help, not R-package-devel. Although R-devel could be
an option too (if we determine that the R installer is doing something
wrong), the last time R installer has been significantly changed is
2020, so the problem is likely elsewhere.

On Tue, 5 Jul 2022 01:59:43 +0000
Jonathan Godfrey <A.J.Godfrey at massey.ac.nz> wrote:

> To do all of that efficiently, I make extensive use of batch files
> (Windows user alert) and a key ingredient of those batch files is
> that I avoid having to edit the R version number with each
> installation.

Can you show us the relevant parts of the batch files?
 
> On my older desktop which has multiple R installations, I do not get
> an "Access denied" error, quarto finds the path to the 4.2.0
> installation via brute force, but regdmp via my batch files gives me
> 4.1.x instead.

What is the output of the following commands on the machines where you
have troubles finding R-4.2.x?

reg query "HKEY_LOCAL_MACHINE\Software\R-core"
reg query "HKEY_CURRENT_USER\Software\R-core"

> 	[[alternative HTML version deleted]]

This mailing list removes the HTML parts from our messages, so we only
see the automatically-generated plain text part. In this case, I think
that your message wasn't damaged at all, but sometimes (especially when
pasting code or output examples) the results can be undesirable.

-- 
Best regards,
Ivan


From murdoch@dunc@n @end|ng |rom gm@||@com  Tue Jul  5 15:35:05 2022
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Tue, 5 Jul 2022 09:35:05 -0400
Subject: [R-pkg-devel] Changing optimization level when building package?
Message-ID: <2fe007d4-f575-34e6-714c-aa28edf86887@gmail.com>

I'm trying to track down a segfault in rgl on macOS, so I need to load R 
under lldb and set breakpoints in the C++ code, examine local variables, 
etc.  Reading WRE, I thought setting CXXFLAGS=-O0 in ~/.R/Makevars would 
do minimal optimization, but I'm still getting messages about local 
variables being optimized out.  For example, here's what I see during 
compiling:

   clang++ -mmacosx-version-min=10.13 -std=gnu++11 
-I"/Library/Frameworks/R.framework/Resources/include" -DNDEBUG 
-DHAVE_PNG_H -I/usr/local/Cellar/libpng/1.6.37/include/libpng16 -DDarwin 
-I/opt/X11/include -DHAVE_FREETYPE -Iext/ftgl 
-I/usr/local/opt/freetype/include/freetype2 -Iext  -I/usr/local/include 
-O0 -fPIC  -Wall -g -O2  -c x11gui.cpp -o x11gui.o

I see the -O0 option that I added, but afterwards -O2 coming from 
somewhere in R.  I believe the second one has precedence, because I see 
this in lldb:

   (lldb) p fontnames
   error: Couldn't materialize: couldn't get the value of variable 
fontnames: no location, value may have been optimized out

If I manually run the clang++ line after editing the -O2 to -O0 before 
rebuilding, I don't have this problem, but that's really tedious.

So, my question:  how should I be asking R CMD INSTALL to use -O0?

Duncan Murdoch


From @ergue|@@oko| @end|ng |rom gm@||@com  Tue Jul  5 15:53:42 2022
From: @ergue|@@oko| @end|ng |rom gm@||@com (Sokol Serguei)
Date: Tue, 5 Jul 2022 15:53:42 +0200
Subject: [R-pkg-devel] 
 Changing optimization level when building package?
In-Reply-To: <2fe007d4-f575-34e6-714c-aa28edf86887@gmail.com>
References: <2fe007d4-f575-34e6-714c-aa28edf86887@gmail.com>
Message-ID: <b3526dc5-921d-9148-ef56-da8fdf630241@gmail.com>

Le 05/07/2022 ? 15:35, Duncan Murdoch a ?crit?:
> I'm trying to track down a segfault in rgl on macOS, so I need to load 
> R under lldb and set breakpoints in the C++ code, examine local 
> variables, etc.? Reading WRE, I thought setting CXXFLAGS=-O0 in 
> ~/.R/Makevars would do minimal optimization, but I'm still getting 
> messages about local variables being optimized out.? For example, 
> here's what I see during compiling:
>
> ? clang++ -mmacosx-version-min=10.13 -std=gnu++11 
> -I"/Library/Frameworks/R.framework/Resources/include" -DNDEBUG 
> -DHAVE_PNG_H -I/usr/local/Cellar/libpng/1.6.37/include/libpng16 
> -DDarwin -I/opt/X11/include -DHAVE_FREETYPE -Iext/ftgl 
> -I/usr/local/opt/freetype/include/freetype2 -Iext -I/usr/local/include 
> -O0 -fPIC? -Wall -g -O2? -c x11gui.cpp -o x11gui.o
>
> I see the -O0 option that I added, but afterwards -O2 coming from 
> somewhere in R.? I believe the second one has precedence, because I 
> see this in lldb:
>
> ? (lldb) p fontnames
> ? error: Couldn't materialize: couldn't get the value of variable 
> fontnames: no location, value may have been optimized out
>
> If I manually run the clang++ line after editing the -O2 to -O0 before 
> rebuilding, I don't have this problem, but that's really tedious.
>
> So, my question:? how should I be asking R CMD INSTALL to use -O0?

I use the following "hakish" solution: add in your Makevars something 
similar to:

MYFLAGS=-g -O0
%.o: %.cpp
 ?? ?$(CXX) $(ALL_CPPFLAGS) $(ALL_CXXFLAGS) $(MYFLAGS) -c $< -o $@
%.o: %.c
 ?? ?$(CC) $(ALL_CPPFLAGS) $(ALL_CFLAGS) $(MYFLAGS) -c $< -o $@
%.o: %.F
 ?? ?$(FC) $(ALL_FCFLAGS) $(MYFLAGS) -c $< -o $@

Best,
Serguei.

>
> Duncan Murdoch
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From kry|ov@r00t @end|ng |rom gm@||@com  Tue Jul  5 16:11:52 2022
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Tue, 5 Jul 2022 17:11:52 +0300
Subject: [R-pkg-devel] 
 Changing optimization level when building package?
In-Reply-To: <2fe007d4-f575-34e6-714c-aa28edf86887@gmail.com>
References: <2fe007d4-f575-34e6-714c-aa28edf86887@gmail.com>
Message-ID: <20220705171152.48710915@arachnoid>

On Tue, 5 Jul 2022 09:35:05 -0400
Duncan Murdoch <murdoch.duncan at gmail.com> wrote:

> I see the -O0 option that I added, but afterwards -O2 coming from 
> somewhere in R.

It seems to come from the CXXFLAGS macro defined in /etc/R/Makeconf.
It's the last to be added to ALL_CXXFLAGS, so you probably have to
overwrite it in ~/.R/Makevars.

-- 
Best regards,
Ivan


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Tue Jul  5 17:00:29 2022
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Tue, 5 Jul 2022 17:00:29 +0200
Subject: [R-pkg-devel] problem with regdmp finding v4.2.x under Windows
In-Reply-To: <20220705111505.0ead2d07@Tarkus>
References: <MEAPR01MB3829E66FE3C79E43E78A401693819@MEAPR01MB3829.ausprd01.prod.outlook.com>
 <20220705111505.0ead2d07@Tarkus>
Message-ID: <e113b07d-59d6-598b-2e13-d31d367820b3@statistik.tu-dortmund.de>

The installer asks you

"Save Version in Registry" with Description "Save the R version and 
install path in the Registry". If this is checked in the installation 
wizard, it should work, otherwise not.

Best,
Uwe Ligges


On 05.07.2022 10:15, Ivan Krylov wrote:
> Hi Jonathan,
> 
> Since we don't have a separate "R on Windows" or "R installation
> and administration" mailing list, I think that this question is a
> better fit for R-help, not R-package-devel. Although R-devel could be
> an option too (if we determine that the R installer is doing something
> wrong), the last time R installer has been significantly changed is
> 2020, so the problem is likely elsewhere.
> 
> On Tue, 5 Jul 2022 01:59:43 +0000
> Jonathan Godfrey <A.J.Godfrey at massey.ac.nz> wrote:
> 
>> To do all of that efficiently, I make extensive use of batch files
>> (Windows user alert) and a key ingredient of those batch files is
>> that I avoid having to edit the R version number with each
>> installation.
> 
> Can you show us the relevant parts of the batch files?
>   
>> On my older desktop which has multiple R installations, I do not get
>> an "Access denied" error, quarto finds the path to the 4.2.0
>> installation via brute force, but regdmp via my batch files gives me
>> 4.1.x instead.
> 
> What is the output of the following commands on the machines where you
> have troubles finding R-4.2.x?
> 
> reg query "HKEY_LOCAL_MACHINE\Software\R-core"
> reg query "HKEY_CURRENT_USER\Software\R-core"
> 
>> 	[[alternative HTML version deleted]]
> 
> This mailing list removes the HTML parts from our messages, so we only
> see the automatically-generated plain text part. In this case, I think
> that your message wasn't damaged at all, but sometimes (especially when
> pasting code or output examples) the results can be undesirable.
>


From kev|nu@hey @end|ng |rom gm@||@com  Tue Jul  5 19:27:55 2022
From: kev|nu@hey @end|ng |rom gm@||@com (Kevin Ushey)
Date: Tue, 5 Jul 2022 10:27:55 -0700
Subject: [R-pkg-devel] problem with regdmp finding v4.2.x under Windows
In-Reply-To: <e113b07d-59d6-598b-2e13-d31d367820b3@statistik.tu-dortmund.de>
References: <MEAPR01MB3829E66FE3C79E43E78A401693819@MEAPR01MB3829.ausprd01.prod.outlook.com>
 <20220705111505.0ead2d07@Tarkus>
 <e113b07d-59d6-598b-2e13-d31d367820b3@statistik.tu-dortmund.de>
Message-ID: <CAJXgQP0YomJOW3eiNOMqGC86yPfrRjx9ziV8PD5Rb6T50QW38Q@mail.gmail.com>

Hi Jonathan,

I'm not certain if this is the issue you're encountering, but I've
noticed that different versions of R may write to different locations
in the registry.

Right now, on my machine, I see entries for R 4.1.3 installed at:

    Computer\HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\R-core\R

And for my installation of R 4.2.1, I see it at:

    Computer\HKEY_LOCAL_MACHINE\SOFTWARE\R-core\R

Note that the registry location for R 4.2.1 is no longer part of the
WOW6432Node.

I'm not sure if this is a hiccup unique to my own local machine, but
perhaps you're seeing something similar? A way to verify would be to
check and compare what you see with:

    reg query HKEY_LOCAL_MACHINE\SOFTWARE\R-core\R /reg:32
    reg query HKEY_LOCAL_MACHINE\SOFTWARE\R-core\R /reg:64

In my case, I see:

C:\Users\kevin>reg query HKEY_LOCAL_MACHINE\SOFTWARE\R-core\R /reg:32

HKEY_LOCAL_MACHINE\SOFTWARE\R-core\R
    InstallPath    REG_SZ    C:\R\R-4.1.3
    Current Version    REG_SZ    4.1.3

C:\Users\kevin>reg query HKEY_LOCAL_MACHINE\SOFTWARE\R-core\R /reg:64

HKEY_LOCAL_MACHINE\SOFTWARE\R-core\R
    InstallPath    REG_SZ    C:\R\R-4.2.1
    Current Version    REG_SZ    4.2.1

Best,
Kevin

On Tue, Jul 5, 2022 at 8:00 AM Uwe Ligges
<ligges at statistik.tu-dortmund.de> wrote:
>
> The installer asks you
>
> "Save Version in Registry" with Description "Save the R version and
> install path in the Registry". If this is checked in the installation
> wizard, it should work, otherwise not.
>
> Best,
> Uwe Ligges
>
>
> On 05.07.2022 10:15, Ivan Krylov wrote:
> > Hi Jonathan,
> >
> > Since we don't have a separate "R on Windows" or "R installation
> > and administration" mailing list, I think that this question is a
> > better fit for R-help, not R-package-devel. Although R-devel could be
> > an option too (if we determine that the R installer is doing something
> > wrong), the last time R installer has been significantly changed is
> > 2020, so the problem is likely elsewhere.
> >
> > On Tue, 5 Jul 2022 01:59:43 +0000
> > Jonathan Godfrey <A.J.Godfrey at massey.ac.nz> wrote:
> >
> >> To do all of that efficiently, I make extensive use of batch files
> >> (Windows user alert) and a key ingredient of those batch files is
> >> that I avoid having to edit the R version number with each
> >> installation.
> >
> > Can you show us the relevant parts of the batch files?
> >
> >> On my older desktop which has multiple R installations, I do not get
> >> an "Access denied" error, quarto finds the path to the 4.2.0
> >> installation via brute force, but regdmp via my batch files gives me
> >> 4.1.x instead.
> >
> > What is the output of the following commands on the machines where you
> > have troubles finding R-4.2.x?
> >
> > reg query "HKEY_LOCAL_MACHINE\Software\R-core"
> > reg query "HKEY_CURRENT_USER\Software\R-core"
> >
> >>      [[alternative HTML version deleted]]
> >
> > This mailing list removes the HTML parts from our messages, so we only
> > see the automatically-generated plain text part. In this case, I think
> > that your message wasn't damaged at all, but sometimes (especially when
> > pasting code or output examples) the results can be undesirable.
> >
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From r@||@hero|d @end|ng |rom gmx@net  Tue Jul  5 19:56:03 2022
From: r@||@hero|d @end|ng |rom gmx@net (Ralf Herold)
Date: Tue, 5 Jul 2022 19:56:03 +0200
Subject: [R-pkg-devel] R CMD checks URLs formatted for LaTeX instead of
 using the non-LaTeX URLs, and fails
In-Reply-To: <a6797515-d9ce-06b4-ef49-83f473954e5f@fau.de>
References: <DBA296A1-ABF8-496E-A3D2-6A2FF8B4294A@gmx.net>
 <f4be4bbf-4ae8-e2fc-1d12-bf56bffab6b1@fau.de>
 <F44171D0-CCE4-4049-9C52-BCC3625C2B2A@gmx.net>
 <a6797515-d9ce-06b4-ef49-83f473954e5f@fau.de>
Message-ID: <B0D5C060-C722-46D0-BFE5-5888D352BE17@gmx.net>

Thanks and I would like to define the follow-up actions: 

1) change function "writeURL" on line 207 to read, for example, url <- fsub("([%#&])", "\\\\1",  url) in https://svn.r-project.org/R/trunk/src/library/tools/R/Rd2latex.R <https://svn.r-project.org/R/trunk/src/library/tools/R/Rd2latex.R> to always escape URLs as you mention. 

How can this be moved forward? This seems R core code, thus needs to be reported in R Bugzilla by one of its members (I am not one): https://www.r-project.org/bugs.html#where-to-submit-bug-reports-and-patches <https://www.r-project.org/bugs.html#where-to-submit-bug-reports-and-patches>. 

Could someone from this list do this? Many thanks

2) change function "url_db_from_package_Rd_db" to call  ".get_urls_from_Rd" with parameter "ifdef = TRUE" on line 178 in https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R <https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R>. This will activate the existing code that is intended to handle ifdef{}{}{}. This seems important for the issue I have reported and beyond. Same procedure as above? 

3) change Rd.sty, not sure, 1) seems more relevant. 

Please advise, thanks 

Ralf



> Am 04.07.2022 um 00:08 schrieb Sebastian Meyer <seb.meyer at fau.de>:
> 
> Am 03.07.22 um 08:27 schrieb Ralf Herold:
>> Thanks Sebastian,
>> but not only hash, also ampersand in \href in a tabular environment does need to be escaped, otherwise it does not latex (example below). I was not aware it is a known limitation for .Rd files despite searching for it.
> 
> I stumbled over that problem a while ago and found that the escaping issue for the hash symbol is documented in the hyperref manual (but currently not accounted for by Rd2latex):
> 
>> The special characters # and ~ do *not* need to be escaped in any way (unless the command is used in the argument of another command). 
> 
> For example, this LaTeX code fails to compile:
> \emph{\href{https://example.org/#}{hash}}
> In contrast, an ampersand would not need to be escaped in that LaTeX example.
> 
> However, I can confirm that a LaTeX error results if an ampersand is used in a \href URL (but not in \url} that is passed to the special \Tabular LaTeX command from Rd.sty that is used by Rd2latex() for \tabular Rd input. Thank you for the heads-up.
> 
> I think it would be good to improve Rd2latex() / Rd.sty for URLs in \tabular that contain & or # rather than require special LaTeX treatment in the Rd source. My preliminary testing shows that hyperref is happy if [&%#] are always escaped in URLs (sometimes it is not necessary but it also does not seem to hurt).
> 
> Best regards,
> 
> 	Sebastian Meyer
> 
>> My use case (with eventually more meaningful query parameters and possibly anchors) would work if the existing R code block for handling \ifelse in urltools.R was activated as shown below, and this is my suggestion. How could I propose this?
>> Kind regards,
>> Ralf
>> \name{mre}
>> \title{mre}
>> \description{mre}
>> \details{
>> \tabular{l}{
>>   \href{https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With <https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With>}{link}
>> }}
>> LaTeX errors:
>> ! Argument of \href at split has an extra }.
>> <inserted text>
>>                 \par
>> l.24 }
>> Runaway argument?
>> https://clinicaltrials.gov/ct2/results?cond=Infections\unskip <https://clinicaltrials.gov/ct2/results?cond=Infections\unskip> \hfil
>> ! Paragraph ended before \href at split was complete.
>> <to be read again>
>>                    \par
>> l.24 }
>> ! Extra }, or forgotten \endgroup.
>> <recently read> }
>>> Am 03.07.2022 um 01:51 schrieb Sebastian Meyer <seb.meyer at fau.de <mailto:seb.meyer at fau.de>>:
>>> 
>>> Am 02.07.22 um 12:01 schrieb Ralf Herold:
>>>> Hello, in my package documentation I want to include URLs with query string parameters and anchors, within a table. A minimally reproducible example is this content in file "man/mre.Rd":
>>>> \name{mre}
>>>> \title{mre}
>>>> \description{mre}
>>>> \details{
>>>> \tabular{l}{
>>>>   \ifelse{latex}{\href{https://clinicaltrials.gov/ct2/results?cond=Infections\&rslt=With\#tableTop <https://clinicaltrials.gov/ct2/results?cond=Infections\&rslt=With\#tableTop>}{latex link}}{\href{https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop <https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop>}{non-latex link}}
>>>> }}
>>>> The ifelse{}{}{} construct is necessary since ampersands in a table need to be escaped for LaTeX rendering.
>>> 
>>> This is a red herring. Ampersands do *not* need to be escaped in \href URLs. The problem is the hash symbol, which needs to be escaped if \href is nested within another markup macro, here \Tabular (from Rd.sty). This is a known limitation; Rd2latex will probably do the escaping in the future. It's good to see a use case.
>>> 
>>> I think currently the best solutions for you are to simply omit the #tableTop part in the LaTeX version or to not use such URLs inside a \tabular.
>>> 
>>> Hope this helps.
>>> Best regards,
>>> 
>>> Sebastian Meyer
>>> 
>>>> Each of the following commands checks and renders the respective output correctly:
>>>> tools::checkRd("man/mre.Rd")
>>>> tools::Rd2txt("man/mre.Rd")
>>>> tools::Rd2latex("man/mre.Rd")
>>>> tools::Rd2HTML("man/mre.Rd")
>>>> system2("R", c("CMD", "Rd2pdf", "man/mre.Rd"))
>>>> However, rhub::check_for_cran() results in NOTES:
>>>> Found the following (possibly) invalid URLs:
>>>>   URL: https://clinicaltrials.gov/ct2/results?cond=Infections\&rslt=With\#tableTop <https://clinicaltrials.gov/ct2/results?cond=Infections\&rslt=With\#tableTop>
>>>>     From: man/mre.Rd
>>>>     Status: 400
>>>>     Message: Bad Request
>>>> Subsequently, CRAN maintainers refused accepting the package.
>>>> However, the underlying cause is that, during such checks, all apparent URLs are extracted from .Rd files, irrespective of any \ifelse{}{}{} constructs. This in turn is due to such checks involving calls to function ".get_urls_from_Rd" without setting its argument "ifdef" to TRUE.
>>>> Here is how to see this behaviour:
>>>> db <- tools::Rd_db(dir = ".")
>>>> # get functions
>>>> source("https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R <https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R>")
>>>> source("https://svn.r-project.org/R/trunk/src/library/tools/R/utils.R <https://svn.r-project.org/R/trunk/src/library/tools/R/utils.R>")
>>>> .Rd_deparse <- tools:::.Rd_deparse
>>>> RdTags <- tools:::RdTags
>>>> # default, leading to invalid url in [1]
>>>> # > .get_urls_from_Rd(db)
>>>> # [1] "https://clinicaltrials.gov/ct2/results?cond=Infections\\&rslt=With\\#tableTop <https://clinicaltrials.gov/ct2/results?cond=Infections\\&rslt=With\\#tableTop>"
>>>> # [2] "https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop <https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop>"
>>>> # returning relevant valid url
>>>> #> .get_urls_from_Rd(db, ifdef = TRUE)
>>>> # [1] "https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop <https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop>"
>>>> This can be addressed by either:
>>>> -- changing the signature of ".get_urls_from_Rd" in line 50 in https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R <https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R> to read "ifdef = TRUE". Of note, this function has a code block to handle such ifdef constructs which indicates it should be possible to use them in Rd files.
>>>> -- changing the calling function "url_db_from_package_Rd_db" to include "ifdef = TRUE" on line 178 in https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R <https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R>
>>>> Please advise how to advance on this issue, thank you very much.
>>>> Greetings
>>>> Ralf
>>>> ______________________________________________
>>>> R-package-devel at r-project.org <mailto:R-package-devel at r-project.org> mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel <https://stat.ethz.ch/mailman/listinfo/r-package-devel>


	[[alternative HTML version deleted]]


From greg @end|ng |rom ||rm@n@y@h@com  Wed Jul  6 09:27:06 2022
From: greg @end|ng |rom ||rm@n@y@h@com (Greg Hunt)
Date: Wed, 6 Jul 2022 17:27:06 +1000
Subject: [R-pkg-devel] problem with regdmp finding v4.2.x under Windows
In-Reply-To: <MEAPR01MB3829E66FE3C79E43E78A401693819@MEAPR01MB3829.ausprd01.prod.outlook.com>
References: <MEAPR01MB3829E66FE3C79E43E78A401693819@MEAPR01MB3829.ausprd01.prod.outlook.com>
Message-ID: <CAAS8PA+TmJZT6bBKKjOc5b5=BUA_d8tPuBM-YVR4YmW9oSP8hg@mail.gmail.com>

Jonathon,
Are you using a very old version of regdump?  Could it be a 32 bit
version?

Greg

On Tue, 5 Jul 2022 at 12:00, Jonathan Godfrey <A.J.Godfrey at massey.ac.nz>
wrote:

> Hi all,
>
> In order to support my local students and other blind users, I install
> every version of R and re-build every document used, almost all of which
> are R markdown documents.
>
> That means re-installing or updating packages as if I was a novice user
> following instructions. I try to give my students a clean start experience
> at the beginning of semester so that we're all using the same versions, and
> gives me time to sort out the messes before semester begins.
>
> To do all of that efficiently, I make extensive use of batch files
> (Windows user alert) and a key ingredient of those batch files is that I
> avoid having to edit the R version number with each installation.
>
> I've been using a Windows utility called regdmp to look in the registry
> for the highest version number. Up to v4.1.3, that was working extremely
> well for me.
>
> In addition, I've been investigating quarto, and have struck the same
> problem because quarto looks for the path to Rscript.exe using the regdmp
> utility. I've had help from the quarto team, and we've established that the
> regdmp utility should be finding a version of R if one exists. On my newish
> laptop where there is just one R installation (4.2.0) regdmp fails to find
> any installation because it has an "Access denied" error message.
>
> On my older desktop which has multiple R installations, I do not get an
> "Access denied" error, quarto finds the path to the 4.2.0 installation via
> brute force, but regdmp via my batch files gives me 4.1.x instead.
>
> I'm currently able to provide the service to my students I want, but only
> by doing all R work by explicitly naming the version of R I want used. I
> really do want to get back to my previous workflow so that I just install
> new versions of R and carry on.
>
> I'm now seeking your advice on the differences in installation of versions
> 4.2.x and 4.1.x that could have an impact on the Windows registry and
> therefore regdmp's ability to find the relevant entries there.
>
>
> Many thanks,
> Jonathan
>
>
>
>
>
>
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Thu Jul  7 09:41:20 2022
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Thu, 7 Jul 2022 09:41:20 +0200
Subject: [R-pkg-devel] 
 Changing optimization level when building package?
In-Reply-To: <20220705171152.48710915@arachnoid>
References: <2fe007d4-f575-34e6-714c-aa28edf86887@gmail.com>
 <20220705171152.48710915@arachnoid>
Message-ID: <8a3450df-fff4-bba1-2802-97a21cd74240@gmail.com>


On 7/5/22 16:11, Ivan Krylov wrote:
> On Tue, 5 Jul 2022 09:35:05 -0400
> Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>
>> I see the -O0 option that I added, but afterwards -O2 coming from
>> somewhere in R.
> It seems to come from the CXXFLAGS macro defined in /etc/R/Makeconf.
> It's the last to be added to ALL_CXXFLAGS, so you probably have to
> overwrite it in ~/.R/Makevars.
>
Yes. I set both CFLAGS and CXXFLAGS in my Makevars_dbg0 file and let R 
use it via R_MAKEVARS_USER.
See R-Admin, 6.3.3, Customizing package compilation, for more.

Tomas


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu Jul  7 12:04:54 2022
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 7 Jul 2022 06:04:54 -0400
Subject: [R-pkg-devel] 
 Changing optimization level when building package?
In-Reply-To: <8a3450df-fff4-bba1-2802-97a21cd74240@gmail.com>
References: <2fe007d4-f575-34e6-714c-aa28edf86887@gmail.com>
 <20220705171152.48710915@arachnoid>
 <8a3450df-fff4-bba1-2802-97a21cd74240@gmail.com>
Message-ID: <45df63d4-3fe2-abed-157a-52649f185d4e@gmail.com>

On 07/07/2022 3:41 a.m., Tomas Kalibera wrote:
> 
> On 7/5/22 16:11, Ivan Krylov wrote:
>> On Tue, 5 Jul 2022 09:35:05 -0400
>> Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>>
>>> I see the -O0 option that I added, but afterwards -O2 coming from
>>> somewhere in R.
>> It seems to come from the CXXFLAGS macro defined in /etc/R/Makeconf.
>> It's the last to be added to ALL_CXXFLAGS, so you probably have to
>> overwrite it in ~/.R/Makevars.
>>
> Yes. I set both CFLAGS and CXXFLAGS in my Makevars_dbg0 file and let R
> use it via R_MAKEVARS_USER.
> See R-Admin, 6.3.3, Customizing package compilation, for more.
> 
> Tomas
> 

In my case, the necessary settings needed to be put in CXX11FLAGS, 
because rgl defines CXX_STD = CXX11.  Thanks to Kevin Ushey and Prof. 
Brian Ripley for spotting this.

Duncan Murdoch


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Thu Jul  7 13:28:44 2022
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Thu, 7 Jul 2022 13:28:44 +0200
Subject: [R-pkg-devel] problem with regdmp finding v4.2.x under Windows
In-Reply-To: <CAJXgQP0YomJOW3eiNOMqGC86yPfrRjx9ziV8PD5Rb6T50QW38Q@mail.gmail.com>
References: <MEAPR01MB3829E66FE3C79E43E78A401693819@MEAPR01MB3829.ausprd01.prod.outlook.com>
 <20220705111505.0ead2d07@Tarkus>
 <e113b07d-59d6-598b-2e13-d31d367820b3@statistik.tu-dortmund.de>
 <CAJXgQP0YomJOW3eiNOMqGC86yPfrRjx9ziV8PD5Rb6T50QW38Q@mail.gmail.com>
Message-ID: <e9a0aa19-eb05-392e-848d-5ad66a225a7c@gmail.com>


On 7/5/22 19:27, Kevin Ushey wrote:
> Hi Jonathan,
>
> I'm not certain if this is the issue you're encountering, but I've
> noticed that different versions of R may write to different locations
> in the registry.

The R installer does not write R version information to the 32-bit view 
of the registry when installing only 64-bit files. This is the same with 
previous versions of R as can be seen from the code. I've tested with 
4.1.3 - when you opt out from installing 32-bit files, version 
information won't appear in the 32-bit view. In principle, one could 
still write something to the 32-bit view, though I think this decision 
was intentional as it required an extra condition in the sources.

R 4.2.x doesn't support 32-bit files anymore, hence? for users using the 
defaults, it is R 4.2.0 when the version information no longer appears 
in the 32-bit view.

One could proceed by searching both the 32-bit and the 64-bit views when 
looking for the newest installed version, preferring 64-bit. For 
practical use on current systems, using the 64-bit view only should 
probably do.

Best,
Tomas

>
> Right now, on my machine, I see entries for R 4.1.3 installed at:
>
>      Computer\HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\R-core\R
>
> And for my installation of R 4.2.1, I see it at:
>
>      Computer\HKEY_LOCAL_MACHINE\SOFTWARE\R-core\R
>
> Note that the registry location for R 4.2.1 is no longer part of the
> WOW6432Node.
>
> I'm not sure if this is a hiccup unique to my own local machine, but
> perhaps you're seeing something similar? A way to verify would be to
> check and compare what you see with:
>
>      reg query HKEY_LOCAL_MACHINE\SOFTWARE\R-core\R /reg:32
>      reg query HKEY_LOCAL_MACHINE\SOFTWARE\R-core\R /reg:64
>
> In my case, I see:
>
> C:\Users\kevin>reg query HKEY_LOCAL_MACHINE\SOFTWARE\R-core\R /reg:32
>
> HKEY_LOCAL_MACHINE\SOFTWARE\R-core\R
>      InstallPath    REG_SZ    C:\R\R-4.1.3
>      Current Version    REG_SZ    4.1.3
>
> C:\Users\kevin>reg query HKEY_LOCAL_MACHINE\SOFTWARE\R-core\R /reg:64
>
> HKEY_LOCAL_MACHINE\SOFTWARE\R-core\R
>      InstallPath    REG_SZ    C:\R\R-4.2.1
>      Current Version    REG_SZ    4.2.1
>
> Best,
> Kevin
>
> On Tue, Jul 5, 2022 at 8:00 AM Uwe Ligges
> <ligges at statistik.tu-dortmund.de> wrote:
>> The installer asks you
>>
>> "Save Version in Registry" with Description "Save the R version and
>> install path in the Registry". If this is checked in the installation
>> wizard, it should work, otherwise not.
>>
>> Best,
>> Uwe Ligges
>>
>>
>> On 05.07.2022 10:15, Ivan Krylov wrote:
>>> Hi Jonathan,
>>>
>>> Since we don't have a separate "R on Windows" or "R installation
>>> and administration" mailing list, I think that this question is a
>>> better fit for R-help, not R-package-devel. Although R-devel could be
>>> an option too (if we determine that the R installer is doing something
>>> wrong), the last time R installer has been significantly changed is
>>> 2020, so the problem is likely elsewhere.
>>>
>>> On Tue, 5 Jul 2022 01:59:43 +0000
>>> Jonathan Godfrey <A.J.Godfrey at massey.ac.nz> wrote:
>>>
>>>> To do all of that efficiently, I make extensive use of batch files
>>>> (Windows user alert) and a key ingredient of those batch files is
>>>> that I avoid having to edit the R version number with each
>>>> installation.
>>> Can you show us the relevant parts of the batch files?
>>>
>>>> On my older desktop which has multiple R installations, I do not get
>>>> an "Access denied" error, quarto finds the path to the 4.2.0
>>>> installation via brute force, but regdmp via my batch files gives me
>>>> 4.1.x instead.
>>> What is the output of the following commands on the machines where you
>>> have troubles finding R-4.2.x?
>>>
>>> reg query "HKEY_LOCAL_MACHINE\Software\R-core"
>>> reg query "HKEY_CURRENT_USER\Software\R-core"
>>>
>>>>       [[alternative HTML version deleted]]
>>> This mailing list removes the HTML parts from our messages, so we only
>>> see the automatically-generated plain text part. In this case, I think
>>> that your message wasn't damaged at all, but sometimes (especially when
>>> pasting code or output examples) the results can be undesirable.
>>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From p|@men@m|r@zch|y@k| @end|ng |rom |ner|@org  Thu Jul  7 21:55:06 2022
From: p|@men@m|r@zch|y@k| @end|ng |rom |ner|@org (Plamen Mirazchiyski)
Date: Thu, 7 Jul 2022 21:55:06 +0200
Subject: [R-pkg-devel] No news entries found
Message-ID: <45a5fb16-f07e-7760-ed2e-bfe67a93946e@ineri.org>

Hi,

Today I have submitted a new version of the RALSA package. Soon after I 
received an automatic email letting me know that the package did not 
pass some of the pre-tests:

> package RALSA_1.3.0.tar.gz does not pass the incoming checks automatically, please see the following pre-tests:
> Windows:<https://win-builder.r-project.org/incoming_pretest/RALSA_1.3.0_20220707_190307/Windows/00check.log>
> Status: 2 NOTEs
> Debian:<https://win-builder.r-project.org/incoming_pretest/RALSA_1.3.0_20220707_190307/Debian/00check.log>
> Status: 1 NOTE
>   
> Last released version's CRAN status: OK: 9, NOTE: 4
> See:<https://CRAN.R-project.org/web/checks/check_results_RALSA.html>

To summarize:

1. Windows checks found possibly invalid DOIs. This is to be ignored, as 
stated here: 
https://www.mail-archive.com/r-package-devel at r-project.org/msg07116.html

2. Windows, Debian (gcc) and Fedora (clang and gcc) drop the following note:

checking package subdirectories ... NOTE
Problems with news in 'NEWS.md':
No news entries found.

This is rather strange because I have added one of the largest news 
updates I ever made for this package in the NEWS.md file with this 
submission. Further, this note appears only in these four of the 13 
platforms where the package is checked.

Apparently, this is beyond my control and I can do nothing to fix it on 
my end. I have already replied to the email to notify the 
CRAN-submissions at R-project.org this is a false-positive as advised in 
the email itself, but I thought the mailing list should also be aware of 
this issue.

Best,
Plamen

-- 
======================
Plamen Mirazchiyski, PhD
International Educational Research and Evaluation Institute
24 Tehnolo?ki park
SI-1000 Ljubljana
Slovenia
tel.: +386 51 303 817
email: plamen.mirazchiyski at ineri.org


From @eb@meyer @end|ng |rom |@u@de  Thu Jul  7 22:41:23 2022
From: @eb@meyer @end|ng |rom |@u@de (Sebastian Meyer)
Date: Thu, 7 Jul 2022 22:41:23 +0200
Subject: [R-pkg-devel] R CMD checks URLs formatted for LaTeX instead of
 using the non-LaTeX URLs, and fails
In-Reply-To: <B0D5C060-C722-46D0-BFE5-5888D352BE17@gmx.net>
References: <DBA296A1-ABF8-496E-A3D2-6A2FF8B4294A@gmx.net>
 <f4be4bbf-4ae8-e2fc-1d12-bf56bffab6b1@fau.de>
 <F44171D0-CCE4-4049-9C52-BCC3625C2B2A@gmx.net>
 <a6797515-d9ce-06b4-ef49-83f473954e5f@fau.de>
 <B0D5C060-C722-46D0-BFE5-5888D352BE17@gmx.net>
Message-ID: <bb4e57b8-088f-3d40-1150-125c3194ec6b@fau.de>

Am 05.07.22 um 19:56 schrieb Ralf Herold:
> Thanks and I would like to define the follow-up actions:
> 
> 1) change function "writeURL" on line 207 to read, for example, url <- 
> fsub("([%#&])", "\\\\1", ?url) in 
> https://svn.r-project.org/R/trunk/src/library/tools/R/Rd2latex.R 
> <https://svn.r-project.org/R/trunk/src/library/tools/R/Rd2latex.R>?to 
> always escape URLs as you mention.
> 
> How can this be moved forward? This seems R core code, thus needs to be 
> reported in R Bugzilla by one of its members (I am not one): 
> https://www.r-project.org/bugs.html#where-to-submit-bug-reports-and-patches 
> <https://www.r-project.org/bugs.html#where-to-submit-bug-reports-and-patches>. 
> 

A Bugzilla entry would have been nice for future reference but is no 
longer necessary. The Rd2latex() bug is now fixed in the development 
version of R (>= r82557) such that URLs with & or # characters can then 
also be used inside \tabular and give the same link as in the HTML 
version: \tabular{l}{\url{https://example.org/a&b#c}} should just work.
In other words, Rd2latex() now correctly handles the input URL as 
'verbatim' text (as specified in WRE Section 2.3), which also means that 
backslashes in the input that do not escape percent or braces (Rd 
specials) are preserved in the output (as was already the case for HTML).

It is planned to port the fix to R-patched (future R 4.2.2).

In package development I'd probably avoid such URLs inside \tabular 
until after that release. Otherwise, if you want to support building the 
PDF manual in current and future R, you'd need to use \out{} and do all 
the escaping there yourself, for example:

\name{test}
\title{test}
\description{
\tabular{l}{
    \ifelse{latex}{
      \out{\href{https://example.org/a\&b\#c}{link}}
    }{
      \href{https://example.org/a&b#c}{link}
    }
}
}

AFAICS, the below points are obsolete.

Best regards,

	Sebastian Meyer

> 
> Could someone from this list do this? Many thanks
> 
> 2) change function "url_db_from_package_Rd_db" to call 
>  ?".get_urls_from_Rd" with parameter "ifdef = TRUE" on line 178 in 
> https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R 
> <https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R>. This 
> will activate the existing code that is intended to handle ifdef{}{}{}. 
> This seems important for the issue I have reported and beyond. Same 
> procedure as above?
> 
> 3) change Rd.sty, not sure, 1) seems more relevant.
> 
> Please advise, thanks
> 
> Ralf
> 
> 
> 
>> Am 04.07.2022 um 00:08 schrieb Sebastian Meyer <seb.meyer at fau.de 
>> <mailto:seb.meyer at fau.de>>:
>>
>> Am 03.07.22 um 08:27 schrieb Ralf Herold:
>>> Thanks Sebastian,
>>> but not only hash, also ampersand in \href in a tabular environment 
>>> does need to be escaped, otherwise it does not latex (example below). 
>>> I was not aware it is a known limitation for .Rd files despite 
>>> searching for it.
>>
>> I stumbled over that problem a while ago and found that the escaping 
>> issue for the hash symbol is documented in the hyperref manual (but 
>> currently not accounted for by Rd2latex):
>>
>>> The special characters # and ~ do *not* need to be escaped in any way 
>>> (unless the command is used in the argument of another command).
>>
>> For example, this LaTeX code fails to compile:
>> \emph{\href{https://example.org/# <https://example.org/#>}{hash}}
>> In contrast, an ampersand would not need to be escaped in that LaTeX 
>> example.
>>
>> However, I can confirm that a LaTeX error results if an ampersand is 
>> used in a \href URL (but not in \url} that is passed to the special 
>> \Tabular LaTeX command from Rd.sty that is used by Rd2latex() for 
>> \tabular Rd input. Thank you for the heads-up.
>>
>> I think it would be good to improve Rd2latex() / Rd.sty for URLs in 
>> \tabular that contain & or # rather than require special LaTeX 
>> treatment in the Rd source. My preliminary testing shows that hyperref 
>> is happy if [&%#] are always escaped in URLs (sometimes it is not 
>> necessary but it also does not seem to hurt).
>>
>> Best regards,
>>
>> Sebastian Meyer
>>
>>> My use case (with eventually more meaningful query parameters and 
>>> possibly anchors) would work if the existing R code block for 
>>> handling \ifelse in urltools.R was activated as shown below, and this 
>>> is my suggestion. How could I propose this?
>>> Kind regards,
>>> Ralf
>>> \name{mre}
>>> \title{mre}
>>> \description{mre}
>>> \details{
>>> \tabular{l}{
>>> ??\href{https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With 
>>> <https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With> 
>>> <https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With 
>>> <https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With>>}{link}
>>> }}
>>> LaTeX errors:
>>> ! Argument of \href at split has an extra }.
>>> <inserted text>
>>> ? ? ? ? ? ? ? ? \par
>>> l.24 }
>>> Runaway argument?
>>> https://clinicaltrials.gov/ct2/results?cond=Infections\unskip 
>>> <https://clinicaltrials.gov/ct2/results?cond=Infections\unskip> 
>>> <https://clinicaltrials.gov/ct2/results?cond=Infections\unskip 
>>> <https://clinicaltrials.gov/ct2/results?cond=Infections\unskip>> \hfil
>>> ! Paragraph ended before \href at split was complete.
>>> <to be read again>
>>> ? ? ? ? ? ? ? ? ? ?\par
>>> l.24 }
>>> ! Extra }, or forgotten \endgroup.
>>> <recently read> }
>>>> Am 03.07.2022 um 01:51 schrieb Sebastian Meyer <seb.meyer at fau.de 
>>>> <mailto:seb.meyer at fau.de> <mailto:seb.meyer at fau.de 
>>>> <mailto:seb.meyer at fau.de>>>:
>>>>
>>>> Am 02.07.22 um 12:01 schrieb Ralf Herold:
>>>>> Hello, in my package documentation I want to include URLs with 
>>>>> query string parameters and anchors, within a table. A minimally 
>>>>> reproducible example is this content in file "man/mre.Rd":
>>>>> \name{mre}
>>>>> \title{mre}
>>>>> \description{mre}
>>>>> \details{
>>>>> \tabular{l}{
>>>>> ??\ifelse{latex}{\href{https://clinicaltrials.gov/ct2/results?cond=Infections\&rslt=With\#tableTop 
>>>>> <https://clinicaltrials.gov/ct2/results?cond=Infections\&rslt=With\#tableTop> 
>>>>> <https://clinicaltrials.gov/ct2/results?cond=Infections\&rslt=With\#tableTop 
>>>>> <https://clinicaltrials.gov/ct2/results?cond=Infections\&rslt=With\#tableTop>>}{latex 
>>>>> link}}{\href{https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop 
>>>>> <https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop> 
>>>>> <https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop 
>>>>> <https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop>>}{non-latex 
>>>>> link}}
>>>>> }}
>>>>> The ifelse{}{}{} construct is necessary since ampersands in a table 
>>>>> need to be escaped for LaTeX rendering.
>>>>
>>>> This is a red herring. Ampersands do *not* need to be escaped in 
>>>> \href URLs. The problem is the hash symbol, which needs to be 
>>>> escaped if \href is nested within another markup macro, here 
>>>> \Tabular (from Rd.sty). This is a known limitation; Rd2latex will 
>>>> probably do the escaping in the future. It's good to see a use case.
>>>>
>>>> I think currently the best solutions for you are to simply omit the 
>>>> #tableTop part in the LaTeX version or to not use such URLs inside a 
>>>> \tabular.
>>>>
>>>> Hope this helps.
>>>> Best regards,
>>>>
>>>> Sebastian Meyer
>>>>
>>>>> Each of the following commands checks and renders the respective 
>>>>> output correctly:
>>>>> tools::checkRd("man/mre.Rd")
>>>>> tools::Rd2txt("man/mre.Rd")
>>>>> tools::Rd2latex("man/mre.Rd")
>>>>> tools::Rd2HTML("man/mre.Rd")
>>>>> system2("R", c("CMD", "Rd2pdf", "man/mre.Rd"))
>>>>> However, rhub::check_for_cran() results in NOTES:
>>>>> Found the following (possibly) invalid URLs:
>>>>> ??URL: 
>>>>> https://clinicaltrials.gov/ct2/results?cond=Infections\&rslt=With\#tableTop 
>>>>> <https://clinicaltrials.gov/ct2/results?cond=Infections\&rslt=With\#tableTop> 
>>>>> <https://clinicaltrials.gov/ct2/results?cond=Infections\&rslt=With\#tableTop 
>>>>> <https://clinicaltrials.gov/ct2/results?cond=Infections\&rslt=With\#tableTop>>
>>>>> ????From: man/mre.Rd
>>>>> ????Status: 400
>>>>> ????Message: Bad Request
>>>>> Subsequently, CRAN maintainers refused accepting the package.
>>>>> However, the underlying cause is that, during such checks, all 
>>>>> apparent URLs are extracted from .Rd files, irrespective of any 
>>>>> \ifelse{}{}{} constructs. This in turn is due to such checks 
>>>>> involving calls to function ".get_urls_from_Rd" without setting its 
>>>>> argument "ifdef" to TRUE.
>>>>> Here is how to see this behaviour:
>>>>> db <- tools::Rd_db(dir = ".")
>>>>> # get functions
>>>>> source("https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R 
>>>>> <https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R> 
>>>>> <https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R 
>>>>> <https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R>>")
>>>>> source("https://svn.r-project.org/R/trunk/src/library/tools/R/utils.R 
>>>>> <https://svn.r-project.org/R/trunk/src/library/tools/R/utils.R> 
>>>>> <https://svn.r-project.org/R/trunk/src/library/tools/R/utils.R 
>>>>> <https://svn.r-project.org/R/trunk/src/library/tools/R/utils.R>>")
>>>>> .Rd_deparse <- tools:::.Rd_deparse
>>>>> RdTags <- tools:::RdTags
>>>>> # default, leading to invalid url in [1]
>>>>> # > .get_urls_from_Rd(db)
>>>>> # [1] 
>>>>> "https://clinicaltrials.gov/ct2/results?cond=Infections\\&rslt=With\\#tableTop 
>>>>> <https://clinicaltrials.gov/ct2/results?cond=Infections\\&rslt=With\\#tableTop> 
>>>>> <https://clinicaltrials.gov/ct2/results?cond=Infections\\&rslt=With\\#tableTop 
>>>>> <https://clinicaltrials.gov/ct2/results?cond=Infections\\&rslt=With\\#tableTop>>"
>>>>> # [2] 
>>>>> "https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop 
>>>>> <https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop> 
>>>>> <https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop 
>>>>> <https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop>>"
>>>>> # returning relevant valid url
>>>>> #> .get_urls_from_Rd(db, ifdef = TRUE)
>>>>> # [1] 
>>>>> "https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop 
>>>>> <https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop> 
>>>>> <https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop 
>>>>> <https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop>>"
>>>>> This can be addressed by either:
>>>>> -- changing the signature of ".get_urls_from_Rd" in line 50 in 
>>>>> https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R 
>>>>> <https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R> 
>>>>> <https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R 
>>>>> <https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R>> 
>>>>> to read "ifdef = TRUE". Of note, this function has a code block to 
>>>>> handle such ifdef constructs which indicates it should be possible 
>>>>> to use them in Rd files.
>>>>> -- changing the calling function "url_db_from_package_Rd_db" to 
>>>>> include "ifdef = TRUE" on line 178 in 
>>>>> https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R 
>>>>> <https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R> 
>>>>> <https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R 
>>>>> <https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R>>
>>>>> Please advise how to advance on this issue, thank you very much.
>>>>> Greetings
>>>>> Ralf
>>>>> ______________________________________________
>>>>> R-package-devel at r-project.org 
>>>>> <mailto:R-package-devel at r-project.org> 
>>>>> <mailto:R-package-devel at r-project.org 
>>>>> <mailto:R-package-devel at r-project.org>> mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel 
>>>>> <https://stat.ethz.ch/mailman/listinfo/r-package-devel> 
>>>>> <https://stat.ethz.ch/mailman/listinfo/r-package-devel 
>>>>> <https://stat.ethz.ch/mailman/listinfo/r-package-devel>>
>


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu Jul  7 23:37:05 2022
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 7 Jul 2022 17:37:05 -0400
Subject: [R-pkg-devel] No news entries found
In-Reply-To: <45a5fb16-f07e-7760-ed2e-bfe67a93946e@ineri.org>
References: <45a5fb16-f07e-7760-ed2e-bfe67a93946e@ineri.org>
Message-ID: <2216f174-35ec-08cf-89da-87f9f4dbaca4@gmail.com>

On 07/07/2022 3:55 p.m., Plamen Mirazchiyski wrote:
> Hi,
> 
> Today I have submitted a new version of the RALSA package. Soon after I
> received an automatic email letting me know that the package did not
> pass some of the pre-tests:

It would be helpful to let us know where to see the troublesome NEWS.md 
file.  Maybe a small change in formatting is causing these false positives.

Duncan Murdoch


> 
>> package RALSA_1.3.0.tar.gz does not pass the incoming checks automatically, please see the following pre-tests:
>> Windows:<https://win-builder.r-project.org/incoming_pretest/RALSA_1.3.0_20220707_190307/Windows/00check.log>
>> Status: 2 NOTEs
>> Debian:<https://win-builder.r-project.org/incoming_pretest/RALSA_1.3.0_20220707_190307/Debian/00check.log>
>> Status: 1 NOTE
>>    
>> Last released version's CRAN status: OK: 9, NOTE: 4
>> See:<https://CRAN.R-project.org/web/checks/check_results_RALSA.html>
> 
> To summarize:
> 
> 1. Windows checks found possibly invalid DOIs. This is to be ignored, as
> stated here:
> https://www.mail-archive.com/r-package-devel at r-project.org/msg07116.html
> 
> 2. Windows, Debian (gcc) and Fedora (clang and gcc) drop the following note:
> 
> checking package subdirectories ... NOTE
> Problems with news in 'NEWS.md':
> No news entries found.
> 
> This is rather strange because I have added one of the largest news
> updates I ever made for this package in the NEWS.md file with this
> submission. Further, this note appears only in these four of the 13
> platforms where the package is checked.
> 
> Apparently, this is beyond my control and I can do nothing to fix it on
> my end. I have already replied to the email to notify the
> CRAN-submissions at R-project.org this is a false-positive as advised in
> the email itself, but I thought the mailing list should also be aware of
> this issue.
> 
> Best,
> Plamen
>


From henr|k@bengt@@on @end|ng |rom gm@||@com  Fri Jul  8 00:21:49 2022
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Fri, 8 Jul 2022 00:21:49 +0200
Subject: [R-pkg-devel] No news entries found
In-Reply-To: <2216f174-35ec-08cf-89da-87f9f4dbaca4@gmail.com>
References: <45a5fb16-f07e-7760-ed2e-bfe67a93946e@ineri.org>
 <2216f174-35ec-08cf-89da-87f9f4dbaca4@gmail.com>
Message-ID: <CAFDcVCRidRMRdB7_nJprrXYsKZ=Y1ES7YHUmRohm5k-2Lu+u1g@mail.gmail.com>

)There's been recent updates in R-devel
(https://github.com/wch/r-source/commit/baf375d8b65414daebf85e226a1e5103a93ab138
that do more validation of the syntax/format in NEWS and NEWS.md
files. This was done to make sure news() works in more cases (e.g. it
may return just NULL if the NEWS.md file is not formatted as the tool
expect).  I guess it will also help render NEWS/NEWS.md files on the
CRAN package pages.

If you run,

news(package = "RALSA")

and see the NEWS entries, then the format should be correct, otherwise
not.  You can use:

news <- tools:::.build_news_db_from_package_NEWS_md("NEWS.md")
if (is.null(news)) stop("Syntax error in NEWS.md")

to troubleshoot.  If you get an error, i.e. 'news' is NULL, then you
need to fix up your NEWS.md file.  I don't think the format is
documented yet, so you might have to do some trial error to figure it
out.  Although it's not an official format, if you follow
https://pkgdown.r-lib.org/reference/build_news.html, it typically
works.  When I did it some weeks ago, I started with a minimal
NEWS.md, e.g. the top version, and then I added the other entries back
to find which ones were problematic.  See
https://raw.githubusercontent.com/HenrikBengtsson/progressr/0.10.1/NEWS.md
for an example that works on CRAN
(https://cran.r-project.org/web/packages/progressr/news/news.html) and
with news(package = "progressr").

Hope this helps,

Henrik

On Thu, Jul 7, 2022 at 11:37 PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>
> On 07/07/2022 3:55 p.m., Plamen Mirazchiyski wrote:
> > Hi,
> >
> > Today I have submitted a new version of the RALSA package. Soon after I
> > received an automatic email letting me know that the package did not
> > pass some of the pre-tests:
>
> It would be helpful to let us know where to see the troublesome NEWS.md
> file.  Maybe a small change in formatting is causing these false positives.
>
> Duncan Murdoch
>
>
> >
> >> package RALSA_1.3.0.tar.gz does not pass the incoming checks automatically, please see the following pre-tests:
> >> Windows:<https://win-builder.r-project.org/incoming_pretest/RALSA_1.3.0_20220707_190307/Windows/00check.log>
> >> Status: 2 NOTEs
> >> Debian:<https://win-builder.r-project.org/incoming_pretest/RALSA_1.3.0_20220707_190307/Debian/00check.log>
> >> Status: 1 NOTE
> >>
> >> Last released version's CRAN status: OK: 9, NOTE: 4
> >> See:<https://CRAN.R-project.org/web/checks/check_results_RALSA.html>
> >
> > To summarize:
> >
> > 1. Windows checks found possibly invalid DOIs. This is to be ignored, as
> > stated here:
> > https://www.mail-archive.com/r-package-devel at r-project.org/msg07116.html
> >
> > 2. Windows, Debian (gcc) and Fedora (clang and gcc) drop the following note:
> >
> > checking package subdirectories ... NOTE
> > Problems with news in 'NEWS.md':
> > No news entries found.
> >
> > This is rather strange because I have added one of the largest news
> > updates I ever made for this package in the NEWS.md file with this
> > submission. Further, this note appears only in these four of the 13
> > platforms where the package is checked.
> >
> > Apparently, this is beyond my control and I can do nothing to fix it on
> > my end. I have already replied to the email to notify the
> > CRAN-submissions at R-project.org this is a false-positive as advised in
> > the email itself, but I thought the mailing list should also be aware of
> > this issue.
> >
> > Best,
> > Plamen
> >
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From kry|ov@r00t @end|ng |rom gm@||@com  Fri Jul  8 00:22:57 2022
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Fri, 8 Jul 2022 01:22:57 +0300
Subject: [R-pkg-devel] No news entries found
In-Reply-To: <45a5fb16-f07e-7760-ed2e-bfe67a93946e@ineri.org>
References: <45a5fb16-f07e-7760-ed2e-bfe67a93946e@ineri.org>
Message-ID: <20220708012257.0d5b0c87@Tarkus>

On Thu, 7 Jul 2022 21:55:06 +0200
Plamen Mirazchiyski <plamen.mirazchiyski at ineri.org> wrote:

> Problems with news in 'NEWS.md':
> No news entries found.

This is a new check in R-devel:
https://github.com/r-devel/r-svn/commit/b1dce2cd3a59b80e870dc218dc668d90ff2a50fa
https://github.com/r-devel/r-svn/commit/be94aacfbc62c211e765e00bcb9a4749d5be31c6

R can parse plain text and Markdown NEWS files and build news databases
out of those, but the files are expected to follow a certain format
documented in ?news. Do your headings look like "Changes in version
1.2-3 (2022-07-08)"? Try looking at the output of news(package =
'RALSA'), maybe it would tell you what R thinks is wrong with your
NEWS.md.

-- 
Best regards,
Ivan


From r@||@hero|d @end|ng |rom gmx@net  Fri Jul  8 07:17:59 2022
From: r@||@hero|d @end|ng |rom gmx@net (Ralf Herold)
Date: Fri, 8 Jul 2022 07:17:59 +0200
Subject: [R-pkg-devel] R CMD checks URLs formatted for LaTeX instead of
 using the non-LaTeX URLs, and fails
In-Reply-To: <bb4e57b8-088f-3d40-1150-125c3194ec6b@fau.de>
References: <DBA296A1-ABF8-496E-A3D2-6A2FF8B4294A@gmx.net>
 <f4be4bbf-4ae8-e2fc-1d12-bf56bffab6b1@fau.de>
 <F44171D0-CCE4-4049-9C52-BCC3625C2B2A@gmx.net>
 <a6797515-d9ce-06b4-ef49-83f473954e5f@fau.de>
 <B0D5C060-C722-46D0-BFE5-5888D352BE17@gmx.net>
 <bb4e57b8-088f-3d40-1150-125c3194ec6b@fau.de>
Message-ID: <DF257022-0396-45E5-9840-A1EE4FD9ADF0@gmx.net>

Great, thanks -- 

using \out{} to wrap \href{} in .Rd for latex rendering does circumvent the issue that I reported, which is that .get_urls_from_Rd() is called such that it cannot handle \ifelse{} even though there is code in that R function for handling \ifelse{}.

The \out{} wrapper is useful, thanks. 

Not sure if the issue or the code is obsolete, but thanks again and happy to close this thread. 

Best,
Ralf


> Am 07.07.2022 um 22:41 schrieb Sebastian Meyer <seb.meyer at fau.de>:
> 
> Am 05.07.22 um 19:56 schrieb Ralf Herold:
>> Thanks and I would like to define the follow-up actions:
>> 1) change function "writeURL" on line 207 to read, for example, url <- fsub("([%#&])", "\\\\1",  url) in https://svn.r-project.org/R/trunk/src/library/tools/R/Rd2latex.R <https://svn.r-project.org/R/trunk/src/library/tools/R/Rd2latex.R> to always escape URLs as you mention.
>> How can this be moved forward? This seems R core code, thus needs to be reported in R Bugzilla by one of its members (I am not one): https://www.r-project.org/bugs.html#where-to-submit-bug-reports-and-patches <https://www.r-project.org/bugs.html#where-to-submit-bug-reports-and-patches>. 
> 
> A Bugzilla entry would have been nice for future reference but is no longer necessary. The Rd2latex() bug is now fixed in the development version of R (>= r82557) such that URLs with & or # characters can then also be used inside \tabular and give the same link as in the HTML version: \tabular{l}{\url{https://example.org/a&b#c}} should just work.
> In other words, Rd2latex() now correctly handles the input URL as 'verbatim' text (as specified in WRE Section 2.3), which also means that backslashes in the input that do not escape percent or braces (Rd specials) are preserved in the output (as was already the case for HTML).
> 
> It is planned to port the fix to R-patched (future R 4.2.2).
> 
> In package development I'd probably avoid such URLs inside \tabular until after that release. Otherwise, if you want to support building the PDF manual in current and future R, you'd need to use \out{} and do all the escaping there yourself, for example:
> 
> \name{test}
> \title{test}
> \description{
> \tabular{l}{
>   \ifelse{latex}{
>     \out{\href{https://example.org/a\&b\#c}{link}}
>   }{
>     \href{https://example.org/a&b#c}{link}
>   }
> }
> }
> 
> AFAICS, the below points are obsolete.
> 
> Best regards,
> 
> 	Sebastian Meyer
> 
>> Could someone from this list do this? Many thanks
>> 2) change function "url_db_from_package_Rd_db" to call   ".get_urls_from_Rd" with parameter "ifdef = TRUE" on line 178 in https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R <https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R>. This will activate the existing code that is intended to handle ifdef{}{}{}. This seems important for the issue I have reported and beyond. Same procedure as above?
>> 3) change Rd.sty, not sure, 1) seems more relevant.
>> Please advise, thanks
>> Ralf
>>> Am 04.07.2022 um 00:08 schrieb Sebastian Meyer <seb.meyer at fau.de <mailto:seb.meyer at fau.de>>:
>>> 
>>> Am 03.07.22 um 08:27 schrieb Ralf Herold:
>>>> Thanks Sebastian,
>>>> but not only hash, also ampersand in \href in a tabular environment does need to be escaped, otherwise it does not latex (example below). I was not aware it is a known limitation for .Rd files despite searching for it.
>>> 
>>> I stumbled over that problem a while ago and found that the escaping issue for the hash symbol is documented in the hyperref manual (but currently not accounted for by Rd2latex):
>>> 
>>>> The special characters # and ~ do *not* need to be escaped in any way (unless the command is used in the argument of another command).
>>> 
>>> For example, this LaTeX code fails to compile:
>>> \emph{\href{https://example.org/# <https://example.org/#>}{hash}}
>>> In contrast, an ampersand would not need to be escaped in that LaTeX example.
>>> 
>>> However, I can confirm that a LaTeX error results if an ampersand is used in a \href URL (but not in \url} that is passed to the special \Tabular LaTeX command from Rd.sty that is used by Rd2latex() for \tabular Rd input. Thank you for the heads-up.
>>> 
>>> I think it would be good to improve Rd2latex() / Rd.sty for URLs in \tabular that contain & or # rather than require special LaTeX treatment in the Rd source. My preliminary testing shows that hyperref is happy if [&%#] are always escaped in URLs (sometimes it is not necessary but it also does not seem to hurt).
>>> 
>>> Best regards,
>>> 
>>> Sebastian Meyer
>>> 
>>>> My use case (with eventually more meaningful query parameters and possibly anchors) would work if the existing R code block for handling \ifelse in urltools.R was activated as shown below, and this is my suggestion. How could I propose this?
>>>> Kind regards,
>>>> Ralf
>>>> \name{mre}
>>>> \title{mre}
>>>> \description{mre}
>>>> \details{
>>>> \tabular{l}{
>>>>   \href{https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With <https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With> <https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With <https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With>>}{link}
>>>> }}
>>>> LaTeX errors:
>>>> ! Argument of \href at split has an extra }.
>>>> <inserted text>
>>>>                 \par
>>>> l.24 }
>>>> Runaway argument?
>>>> https://clinicaltrials.gov/ct2/results?cond=Infections\unskip <https://clinicaltrials.gov/ct2/results?cond=Infections\unskip> <https://clinicaltrials.gov/ct2/results?cond=Infections\unskip <https://clinicaltrials.gov/ct2/results?cond=Infections\unskip>> \hfil
>>>> ! Paragraph ended before \href at split was complete.
>>>> <to be read again>
>>>>                    \par
>>>> l.24 }
>>>> ! Extra }, or forgotten \endgroup.
>>>> <recently read> }
>>>>> Am 03.07.2022 um 01:51 schrieb Sebastian Meyer <seb.meyer at fau.de <mailto:seb.meyer at fau.de> <mailto:seb.meyer at fau.de <mailto:seb.meyer at fau.de>>>:
>>>>> 
>>>>> Am 02.07.22 um 12:01 schrieb Ralf Herold:
>>>>>> Hello, in my package documentation I want to include URLs with query string parameters and anchors, within a table. A minimally reproducible example is this content in file "man/mre.Rd":
>>>>>> \name{mre}
>>>>>> \title{mre}
>>>>>> \description{mre}
>>>>>> \details{
>>>>>> \tabular{l}{
>>>>>>   \ifelse{latex}{\href{https://clinicaltrials.gov/ct2/results?cond=Infections\&rslt=With\#tableTop <https://clinicaltrials.gov/ct2/results?cond=Infections\&rslt=With\#tableTop> <https://clinicaltrials.gov/ct2/results?cond=Infections\&rslt=With\#tableTop <https://clinicaltrials.gov/ct2/results?cond=Infections\&rslt=With\#tableTop>>}{latex link}}{\href{https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop <https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop> <https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop <https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop>>}{non-latex link}}
>>>>>> }}
>>>>>> The ifelse{}{}{} construct is necessary since ampersands in a table need to be escaped for LaTeX rendering.
>>>>> 
>>>>> This is a red herring. Ampersands do *not* need to be escaped in \href URLs. The problem is the hash symbol, which needs to be escaped if \href is nested within another markup macro, here \Tabular (from Rd.sty). This is a known limitation; Rd2latex will probably do the escaping in the future. It's good to see a use case.
>>>>> 
>>>>> I think currently the best solutions for you are to simply omit the #tableTop part in the LaTeX version or to not use such URLs inside a \tabular.
>>>>> 
>>>>> Hope this helps.
>>>>> Best regards,
>>>>> 
>>>>> Sebastian Meyer
>>>>> 
>>>>>> Each of the following commands checks and renders the respective output correctly:
>>>>>> tools::checkRd("man/mre.Rd")
>>>>>> tools::Rd2txt("man/mre.Rd")
>>>>>> tools::Rd2latex("man/mre.Rd")
>>>>>> tools::Rd2HTML("man/mre.Rd")
>>>>>> system2("R", c("CMD", "Rd2pdf", "man/mre.Rd"))
>>>>>> However, rhub::check_for_cran() results in NOTES:
>>>>>> Found the following (possibly) invalid URLs:
>>>>>>   URL: https://clinicaltrials.gov/ct2/results?cond=Infections\&rslt=With\#tableTop <https://clinicaltrials.gov/ct2/results?cond=Infections\&rslt=With\#tableTop> <https://clinicaltrials.gov/ct2/results?cond=Infections\&rslt=With\#tableTop <https://clinicaltrials.gov/ct2/results?cond=Infections\&rslt=With\#tableTop>>
>>>>>>     From: man/mre.Rd
>>>>>>     Status: 400
>>>>>>     Message: Bad Request
>>>>>> Subsequently, CRAN maintainers refused accepting the package.
>>>>>> However, the underlying cause is that, during such checks, all apparent URLs are extracted from .Rd files, irrespective of any \ifelse{}{}{} constructs. This in turn is due to such checks involving calls to function ".get_urls_from_Rd" without setting its argument "ifdef" to TRUE.
>>>>>> Here is how to see this behaviour:
>>>>>> db <- tools::Rd_db(dir = ".")
>>>>>> # get functions
>>>>>> source("https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R <https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R> <https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R <https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R>>")
>>>>>> source("https://svn.r-project.org/R/trunk/src/library/tools/R/utils.R <https://svn.r-project.org/R/trunk/src/library/tools/R/utils.R> <https://svn.r-project.org/R/trunk/src/library/tools/R/utils.R <https://svn.r-project.org/R/trunk/src/library/tools/R/utils.R>>")
>>>>>> .Rd_deparse <- tools:::.Rd_deparse
>>>>>> RdTags <- tools:::RdTags
>>>>>> # default, leading to invalid url in [1]
>>>>>> # > .get_urls_from_Rd(db)
>>>>>> # [1] "https://clinicaltrials.gov/ct2/results?cond=Infections\\&rslt=With\\#tableTop <https://clinicaltrials.gov/ct2/results?cond=Infections\\&rslt=With\\#tableTop> <https://clinicaltrials.gov/ct2/results?cond=Infections\\&rslt=With\\#tableTop <https://clinicaltrials.gov/ct2/results?cond=Infections\\&rslt=With\\#tableTop>>"
>>>>>> # [2] "https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop <https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop> <https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop <https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop>>"
>>>>>> # returning relevant valid url
>>>>>> #> .get_urls_from_Rd(db, ifdef = TRUE)
>>>>>> # [1] "https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop <https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop> <https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop <https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop>>"
>>>>>> This can be addressed by either:
>>>>>> -- changing the signature of ".get_urls_from_Rd" in line 50 in https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R <https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R> <https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R <https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R>> to read "ifdef = TRUE". Of note, this function has a code block to handle such ifdef constructs which indicates it should be possible to use them in Rd files.
>>>>>> -- changing the calling function "url_db_from_package_Rd_db" to include "ifdef = TRUE" on line 178 in https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R <https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R> <https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R <https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R>>
>>>>>> Please advise how to advance on this issue, thank you very much.
>>>>>> Greetings
>>>>>> Ralf
>>>>>> ______________________________________________
>>>>>> R-package-devel at r-project.org <mailto:R-package-devel at r-project.org> <mailto:R-package-devel at r-project.org <mailto:R-package-devel at r-project.org>> mailing list
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel <https://stat.ethz.ch/mailman/listinfo/r-package-devel> <https://stat.ethz.ch/mailman/listinfo/r-package-devel <https://stat.ethz.ch/mailman/listinfo/r-package-devel>>
> 


	[[alternative HTML version deleted]]


From p|@men@m|r@zch|y@k| @end|ng |rom |ner|@org  Fri Jul  8 14:23:14 2022
From: p|@men@m|r@zch|y@k| @end|ng |rom |ner|@org (Plamen Mirazchiyski)
Date: Fri, 8 Jul 2022 14:23:14 +0200
Subject: [R-pkg-devel] No news entries found
In-Reply-To: <CAFDcVCRidRMRdB7_nJprrXYsKZ=Y1ES7YHUmRohm5k-2Lu+u1g@mail.gmail.com>
References: <45a5fb16-f07e-7760-ed2e-bfe67a93946e@ineri.org>
 <2216f174-35ec-08cf-89da-87f9f4dbaca4@gmail.com>
 <CAFDcVCRidRMRdB7_nJprrXYsKZ=Y1ES7YHUmRohm5k-2Lu+u1g@mail.gmail.com>
Message-ID: <00068109-285b-ce42-282a-2632915f7c7e@ineri.org>

Thank you all for your help.

I have found the problem - I had accented characters in names of people 
I was thanking for discovering bugs. After replacing them with 
non-accented characters everything went just fine and the package is on 
its way to CRAN.

I do find, though, the message "No news entries found." quite 
misleading. Yes, there is a problem, but the message is not even close 
to what actual the problem is. Unfortunately, the r-svn repository on 
GitHub does not have the possibility to report this as an issue.

Thank you once again.

Best,
Plamen

On 7/8/2022 12:21 AM, Henrik Bengtsson wrote:
> )There's been recent updates in R-devel
> (https://github.com/wch/r-source/commit/baf375d8b65414daebf85e226a1e5103a93ab138
> that do more validation of the syntax/format in NEWS and NEWS.md
> files. This was done to make sure news() works in more cases (e.g. it
> may return just NULL if the NEWS.md file is not formatted as the tool
> expect).  I guess it will also help render NEWS/NEWS.md files on the
> CRAN package pages.
>
> If you run,
>
> news(package = "RALSA")
>
> and see the NEWS entries, then the format should be correct, otherwise
> not.  You can use:
>
> news <- tools:::.build_news_db_from_package_NEWS_md("NEWS.md")
> if (is.null(news)) stop("Syntax error in NEWS.md")
>
> to troubleshoot.  If you get an error, i.e. 'news' is NULL, then you
> need to fix up your NEWS.md file.  I don't think the format is
> documented yet, so you might have to do some trial error to figure it
> out.  Although it's not an official format, if you follow
> https://pkgdown.r-lib.org/reference/build_news.html, it typically
> works.  When I did it some weeks ago, I started with a minimal
> NEWS.md, e.g. the top version, and then I added the other entries back
> to find which ones were problematic.  See
> https://raw.githubusercontent.com/HenrikBengtsson/progressr/0.10.1/NEWS.md
> for an example that works on CRAN
> (https://cran.r-project.org/web/packages/progressr/news/news.html) and
> with news(package = "progressr").
>
> Hope this helps,
>
> Henrik
>
> On Thu, Jul 7, 2022 at 11:37 PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>> On 07/07/2022 3:55 p.m., Plamen Mirazchiyski wrote:
>>> Hi,
>>>
>>> Today I have submitted a new version of the RALSA package. Soon after I
>>> received an automatic email letting me know that the package did not
>>> pass some of the pre-tests:
>> It would be helpful to let us know where to see the troublesome NEWS.md
>> file.  Maybe a small change in formatting is causing these false positives.
>>
>> Duncan Murdoch
>>
>>
>>>> package RALSA_1.3.0.tar.gz does not pass the incoming checks automatically, please see the following pre-tests:
>>>> Windows:<https://win-builder.r-project.org/incoming_pretest/RALSA_1.3.0_20220707_190307/Windows/00check.log>
>>>> Status: 2 NOTEs
>>>> Debian:<https://win-builder.r-project.org/incoming_pretest/RALSA_1.3.0_20220707_190307/Debian/00check.log>
>>>> Status: 1 NOTE
>>>>
>>>> Last released version's CRAN status: OK: 9, NOTE: 4
>>>> See:<https://CRAN.R-project.org/web/checks/check_results_RALSA.html>
>>> To summarize:
>>>
>>> 1. Windows checks found possibly invalid DOIs. This is to be ignored, as
>>> stated here:
>>> https://www.mail-archive.com/r-package-devel at r-project.org/msg07116.html
>>>
>>> 2. Windows, Debian (gcc) and Fedora (clang and gcc) drop the following note:
>>>
>>> checking package subdirectories ... NOTE
>>> Problems with news in 'NEWS.md':
>>> No news entries found.
>>>
>>> This is rather strange because I have added one of the largest news
>>> updates I ever made for this package in the NEWS.md file with this
>>> submission. Further, this note appears only in these four of the 13
>>> platforms where the package is checked.
>>>
>>> Apparently, this is beyond my control and I can do nothing to fix it on
>>> my end. I have already replied to the email to notify the
>>> CRAN-submissions at R-project.org this is a false-positive as advised in
>>> the email itself, but I thought the mailing list should also be aware of
>>> this issue.
>>>
>>> Best,
>>> Plamen
>>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
======================
Plamen Mirazchiyski, PhD
International Educational Research and Evaluation Institute
24 Tehnolo?ki park
SI-1000 Ljubljana
Slovenia
tel.: +386 51 303 817
email: plamen.mirazchiyski at ineri.org


From henr|k@bengt@@on @end|ng |rom gm@||@com  Fri Jul  8 14:30:39 2022
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Fri, 8 Jul 2022 14:30:39 +0200
Subject: [R-pkg-devel] No news entries found
In-Reply-To: <00068109-285b-ce42-282a-2632915f7c7e@ineri.org>
References: <45a5fb16-f07e-7760-ed2e-bfe67a93946e@ineri.org>
 <2216f174-35ec-08cf-89da-87f9f4dbaca4@gmail.com>
 <CAFDcVCRidRMRdB7_nJprrXYsKZ=Y1ES7YHUmRohm5k-2Lu+u1g@mail.gmail.com>
 <00068109-285b-ce42-282a-2632915f7c7e@ineri.org>
Message-ID: <CAFDcVCTJpwoaTbHO5gNkBsS5h2kGndwssumC0DDXjqSdX+D4dQ@mail.gmail.com>

Good you figured it out. If you can share a minimal NEWS.md illustrating
the problem here, it'll probably help lots of others who run into the same
problem. It might even be bug that your have discovered, but without
details no one can improve on it.

/Henrik

On Fri, Jul 8, 2022, 14:23 Plamen Mirazchiyski <
plamen.mirazchiyski at ineri.org> wrote:

> Thank you all for your help.
>
> I have found the problem - I had accented characters in names of people
> I was thanking for discovering bugs. After replacing them with
> non-accented characters everything went just fine and the package is on
> its way to CRAN.
>
> I do find, though, the message "No news entries found." quite
> misleading. Yes, there is a problem, but the message is not even close
> to what actual the problem is. Unfortunately, the r-svn repository on
> GitHub does not have the possibility to report this as an issue.
>
> Thank you once again.
>
> Best,
> Plamen
>
> On 7/8/2022 12:21 AM, Henrik Bengtsson wrote:
> > )There's been recent updates in R-devel
> > (
> https://github.com/wch/r-source/commit/baf375d8b65414daebf85e226a1e5103a93ab138
> > that do more validation of the syntax/format in NEWS and NEWS.md
> > files. This was done to make sure news() works in more cases (e.g. it
> > may return just NULL if the NEWS.md file is not formatted as the tool
> > expect).  I guess it will also help render NEWS/NEWS.md files on the
> > CRAN package pages.
> >
> > If you run,
> >
> > news(package = "RALSA")
> >
> > and see the NEWS entries, then the format should be correct, otherwise
> > not.  You can use:
> >
> > news <- tools:::.build_news_db_from_package_NEWS_md("NEWS.md")
> > if (is.null(news)) stop("Syntax error in NEWS.md")
> >
> > to troubleshoot.  If you get an error, i.e. 'news' is NULL, then you
> > need to fix up your NEWS.md file.  I don't think the format is
> > documented yet, so you might have to do some trial error to figure it
> > out.  Although it's not an official format, if you follow
> > https://pkgdown.r-lib.org/reference/build_news.html, it typically
> > works.  When I did it some weeks ago, I started with a minimal
> > NEWS.md, e.g. the top version, and then I added the other entries back
> > to find which ones were problematic.  See
> >
> https://raw.githubusercontent.com/HenrikBengtsson/progressr/0.10.1/NEWS.md
> > for an example that works on CRAN
> > (https://cran.r-project.org/web/packages/progressr/news/news.html) and
> > with news(package = "progressr").
> >
> > Hope this helps,
> >
> > Henrik
> >
> > On Thu, Jul 7, 2022 at 11:37 PM Duncan Murdoch <murdoch.duncan at gmail.com>
> wrote:
> >> On 07/07/2022 3:55 p.m., Plamen Mirazchiyski wrote:
> >>> Hi,
> >>>
> >>> Today I have submitted a new version of the RALSA package. Soon after I
> >>> received an automatic email letting me know that the package did not
> >>> pass some of the pre-tests:
> >> It would be helpful to let us know where to see the troublesome NEWS.md
> >> file.  Maybe a small change in formatting is causing these false
> positives.
> >>
> >> Duncan Murdoch
> >>
> >>
> >>>> package RALSA_1.3.0.tar.gz does not pass the incoming checks
> automatically, please see the following pre-tests:
> >>>> Windows:<
> https://win-builder.r-project.org/incoming_pretest/RALSA_1.3.0_20220707_190307/Windows/00check.log
> >
> >>>> Status: 2 NOTEs
> >>>> Debian:<
> https://win-builder.r-project.org/incoming_pretest/RALSA_1.3.0_20220707_190307/Debian/00check.log
> >
> >>>> Status: 1 NOTE
> >>>>
> >>>> Last released version's CRAN status: OK: 9, NOTE: 4
> >>>> See:<https://CRAN.R-project.org/web/checks/check_results_RALSA.html>
> >>> To summarize:
> >>>
> >>> 1. Windows checks found possibly invalid DOIs. This is to be ignored,
> as
> >>> stated here:
> >>>
> https://www.mail-archive.com/r-package-devel at r-project.org/msg07116.html
> >>>
> >>> 2. Windows, Debian (gcc) and Fedora (clang and gcc) drop the following
> note:
> >>>
> >>> checking package subdirectories ... NOTE
> >>> Problems with news in 'NEWS.md':
> >>> No news entries found.
> >>>
> >>> This is rather strange because I have added one of the largest news
> >>> updates I ever made for this package in the NEWS.md file with this
> >>> submission. Further, this note appears only in these four of the 13
> >>> platforms where the package is checked.
> >>>
> >>> Apparently, this is beyond my control and I can do nothing to fix it on
> >>> my end. I have already replied to the email to notify the
> >>> CRAN-submissions at R-project.org this is a false-positive as advised in
> >>> the email itself, but I thought the mailing list should also be aware
> of
> >>> this issue.
> >>>
> >>> Best,
> >>> Plamen
> >>>
> >> ______________________________________________
> >> R-package-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
> --
> ======================
> Plamen Mirazchiyski, PhD
> International Educational Research and Evaluation Institute
> 24 Tehnolo?ki park
> SI-1000 Ljubljana
> Slovenia
> tel.: +386 51 303 817
> email: plamen.mirazchiyski at ineri.org
>
>

	[[alternative HTML version deleted]]


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Fri Jul  8 14:52:27 2022
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Fri, 8 Jul 2022 14:52:27 +0200
Subject: [R-pkg-devel] Slow down in R 4.2.x
In-Reply-To: <13505960.q0Az33yFfb@ryz>
References: <13505960.q0Az33yFfb@ryz>
Message-ID: <f110f828-c011-8a15-3236-f2ccb4e9e6ee@gmail.com>


On 7/1/22 11:10, Johannes Ranke wrote:
> Dear list,
>
> independent of the thread on this list about slow examples on R 4.2 on windows
> I have discovered over the last few days that some of my benchmarks (look for
> t4 and t9) run by a factor of 3 slower on R 4.2.x than on R 4.1.3 [1].
>
> This is on Linux, using my own backported R packages for R 4.2.x and locally
> compiled versions (with default configure options) of R-4-1-branch on two
> different CPUs. The results for R 4.2.1 are only slightly modulated by the use
> of different BLAS version (openblas-serial versus atlas versus lapack).
>
> I also tested the R 4.0.4 version that is part of Debian bullseye, it is as
> fast as the locally compiled R 4.1.3.
>
> I went through the NEWS for R 4.2.0 (because the first slow results were
> obtained using that version), but the only change I could imagine causing such
> a change is the additional check of the length of the arguments && and ||.
>
> Any other thoughts?

I can reproduce slowdown in one of your tests:

library(mkin)
FOCUS_D <- subset(FOCUS_2006_D, value != 0)
SFO_SFO <- mkinmod(
 ? parent = mkinsub("SFO", "m1"),
 ? m1 = mkinsub("SFO"))
FOMC_SFO <- mkinmod(
 ? parent = mkinsub("FOMC", "m1"),
 ? m1 = mkinsub("SFO"))
DFOP_SFO <- mkinmod(
 ? parent = mkinsub("FOMC", "m1"),
 ? m1 = mkinsub("SFO"))

mmkin_bench <- function(models, datasets, error_model = "const") {
 ? mmkin(models, datasets, error_model = error_model, cores = 1, quiet = 
TRUE)
}

t4 <- system.time(mmkin_bench(list(SFO_SFO, FOMC_SFO, DFOP_SFO), 
list(FOCUS_D), error_model = "tc"))[["elapsed"]]

This is slower in R 4-devel than R 4.1 because of bug fixes in DLL info 
interface (PR#16446, r80285). "perf" tool on Linux shows extra time 
spent in R_registerSymbolEptr and R_WeakRefKey. This is because of 
repeated calls to getLoadedDLLs(), via repeated calls to 
inline::getDynLib(x$cf)[["name"]]

Perhaps one could save dll_info, once computed in mkin, alongside "cf" 
in the model, instead of re-computing it every time?

Best
Tomas


>
> Johannes
>
> [1] https://pkgdown.jrwb.de/mkin/articles/web_only/benchmarks.html#results
>
>
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From edd @end|ng |rom deb|@n@org  Fri Jul  8 14:55:40 2022
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Fri, 8 Jul 2022 07:55:40 -0500
Subject: [R-pkg-devel] No news entries found
In-Reply-To: <00068109-285b-ce42-282a-2632915f7c7e@ineri.org>
References: <45a5fb16-f07e-7760-ed2e-bfe67a93946e@ineri.org>
 <2216f174-35ec-08cf-89da-87f9f4dbaca4@gmail.com>
 <CAFDcVCRidRMRdB7_nJprrXYsKZ=Y1ES7YHUmRohm5k-2Lu+u1g@mail.gmail.com>
 <00068109-285b-ce42-282a-2632915f7c7e@ineri.org>
Message-ID: <25288.10572.792507.993341@rob.eddelbuettel.com>


On 8 July 2022 at 14:23, Plamen Mirazchiyski wrote:
| to what actual the problem is. Unfortunately, the r-svn repository on 
| GitHub does not have the possibility to report this as an issue.

Please see  https://bugs.r-project.org/    but also see old mailing list (and
elsewhere) posts on how to create a bugzilla account for which you need a human.

The R FAQ is also there for you:

  9.2 How to report a bug
      https://cran.r-project.org/doc/FAQ/R-FAQ.html#How-to-report-a-bug

which could arguably do with a paragraph on how to get a bugzilla account ...

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From p|@men@m|r@zch|y@k| @end|ng |rom |ner|@org  Fri Jul  8 14:58:37 2022
From: p|@men@m|r@zch|y@k| @end|ng |rom |ner|@org (Plamen Mirazchiyski)
Date: Fri, 8 Jul 2022 14:58:37 +0200
Subject: [R-pkg-devel] No news entries found
In-Reply-To: <CAFDcVCTJpwoaTbHO5gNkBsS5h2kGndwssumC0DDXjqSdX+D4dQ@mail.gmail.com>
References: <45a5fb16-f07e-7760-ed2e-bfe67a93946e@ineri.org>
 <2216f174-35ec-08cf-89da-87f9f4dbaca4@gmail.com>
 <CAFDcVCRidRMRdB7_nJprrXYsKZ=Y1ES7YHUmRohm5k-2Lu+u1g@mail.gmail.com>
 <00068109-285b-ce42-282a-2632915f7c7e@ineri.org>
 <CAFDcVCTJpwoaTbHO5gNkBsS5h2kGndwssumC0DDXjqSdX+D4dQ@mail.gmail.com>
Message-ID: <23691b0e-10e8-fb57-bad7-652a3dd3c37a@ineri.org>

Yes, here is an excerpt from the NEWS.md with a problematic case at the end:

#######################################################

# RALSA v1.3.0 (2022-07-08)

This update focuses mainly on bugfixes and improvements in the GUI and 
its workflow, but also introduces some new features.

## Bug fixes
* All analysis functions, as well `lsa.data.diag`, `lsa.recode.vars` and 
`lsa.vars.dict` crash with an error message `Error in 
exists(all.vars(match.call())) : first argument has length > 1` when any 
of the arguments specifying analysis variables point to objects which 
contain character vectors containing them. Thanks to Rodolfo Ilizaliturri.

* `lsa.prctls` - The percentiles on the x-axis are not properly added 
for every percentile computed. Thanks to Someone ?ome?ne.

#######################################################

If I remove the accented characters at the very last word, it all works 
fine when the package is submitted at CRAN.

Best,
Plamen

On 7/8/2022 2:30 PM, Henrik Bengtsson wrote:
> Good you figured it out. If you can share a minimal NEWS.md 
> illustrating the problem here, it'll probably help lots of others who 
> run into the same problem. It might even be bug that your have 
> discovered, but without details no one can improve on it.
>
> /Henrik
>
> On Fri, Jul 8, 2022, 14:23 Plamen Mirazchiyski 
> <plamen.mirazchiyski at ineri.org> wrote:
>
>     Thank you all for your help.
>
>     I have found the problem - I had accented characters in names of
>     people
>     I was thanking for discovering bugs. After replacing them with
>     non-accented characters everything went just fine and the package
>     is on
>     its way to CRAN.
>
>     I do find, though, the message "No news entries found." quite
>     misleading. Yes, there is a problem, but the message is not even
>     close
>     to what actual the problem is. Unfortunately, the r-svn repository on
>     GitHub does not have the possibility to report this as an issue.
>
>     Thank you once again.
>
>     Best,
>     Plamen
>
>     On 7/8/2022 12:21 AM, Henrik Bengtsson wrote:
>     > )There's been recent updates in R-devel
>     >
>     (https://github.com/wch/r-source/commit/baf375d8b65414daebf85e226a1e5103a93ab138
>     > that do more validation of the syntax/format in NEWS and NEWS.md
>     > files. This was done to make sure news() works in more cases
>     (e.g. it
>     > may return just NULL if the NEWS.md file is not formatted as the
>     tool
>     > expect).? I guess it will also help render NEWS/NEWS.md files on the
>     > CRAN package pages.
>     >
>     > If you run,
>     >
>     > news(package = "RALSA")
>     >
>     > and see the NEWS entries, then the format should be correct,
>     otherwise
>     > not.? You can use:
>     >
>     > news <- tools:::.build_news_db_from_package_NEWS_md("NEWS.md")
>     > if (is.null(news)) stop("Syntax error in NEWS.md")
>     >
>     > to troubleshoot.? If you get an error, i.e. 'news' is NULL, then you
>     > need to fix up your NEWS.md file.? I don't think the format is
>     > documented yet, so you might have to do some trial error to
>     figure it
>     > out.? Although it's not an official format, if you follow
>     > https://pkgdown.r-lib.org/reference/build_news.html, it typically
>     > works.? When I did it some weeks ago, I started with a minimal
>     > NEWS.md, e.g. the top version, and then I added the other
>     entries back
>     > to find which ones were problematic.? See
>     >
>     https://raw.githubusercontent.com/HenrikBengtsson/progressr/0.10.1/NEWS.md
>     > for an example that works on CRAN
>     >
>     (https://cran.r-project.org/web/packages/progressr/news/news.html) and
>     > with news(package = "progressr").
>     >
>     > Hope this helps,
>     >
>     > Henrik
>     >
>     > On Thu, Jul 7, 2022 at 11:37 PM Duncan Murdoch
>     <murdoch.duncan at gmail.com> wrote:
>     >> On 07/07/2022 3:55 p.m., Plamen Mirazchiyski wrote:
>     >>> Hi,
>     >>>
>     >>> Today I have submitted a new version of the RALSA package.
>     Soon after I
>     >>> received an automatic email letting me know that the package
>     did not
>     >>> pass some of the pre-tests:
>     >> It would be helpful to let us know where to see the troublesome
>     NEWS.md
>     >> file.? Maybe a small change in formatting is causing these
>     false positives.
>     >>
>     >> Duncan Murdoch
>     >>
>     >>
>     >>>> package RALSA_1.3.0.tar.gz does not pass the incoming checks
>     automatically, please see the following pre-tests:
>     >>>>
>     Windows:<https://win-builder.r-project.org/incoming_pretest/RALSA_1.3.0_20220707_190307/Windows/00check.log>
>     >>>> Status: 2 NOTEs
>     >>>>
>     Debian:<https://win-builder.r-project.org/incoming_pretest/RALSA_1.3.0_20220707_190307/Debian/00check.log>
>     >>>> Status: 1 NOTE
>     >>>>
>     >>>> Last released version's CRAN status: OK: 9, NOTE: 4
>     >>>>
>     See:<https://CRAN.R-project.org/web/checks/check_results_RALSA.html
>     <https://CRAN.R-project.org/web/checks/check_results_RALSA.html>>
>     >>> To summarize:
>     >>>
>     >>> 1. Windows checks found possibly invalid DOIs. This is to be
>     ignored, as
>     >>> stated here:
>     >>>
>     https://www.mail-archive.com/r-package-devel at r-project.org/msg07116.html
>     >>>
>     >>> 2. Windows, Debian (gcc) and Fedora (clang and gcc) drop the
>     following note:
>     >>>
>     >>> checking package subdirectories ... NOTE
>     >>> Problems with news in 'NEWS.md':
>     >>> No news entries found.
>     >>>
>     >>> This is rather strange because I have added one of the largest
>     news
>     >>> updates I ever made for this package in the NEWS.md file with this
>     >>> submission. Further, this note appears only in these four of
>     the 13
>     >>> platforms where the package is checked.
>     >>>
>     >>> Apparently, this is beyond my control and I can do nothing to
>     fix it on
>     >>> my end. I have already replied to the email to notify the
>     >>> CRAN-submissions at R-project.org this is a false-positive as
>     advised in
>     >>> the email itself, but I thought the mailing list should also
>     be aware of
>     >>> this issue.
>     >>>
>     >>> Best,
>     >>> Plamen
>     >>>
>     >> ______________________________________________
>     >> R-package-devel at r-project.org mailing list
>     >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>     -- 
>     ======================
>     Plamen Mirazchiyski, PhD
>     International Educational Research and Evaluation Institute
>     24 Tehnolo?ki park
>     SI-1000 Ljubljana
>     Slovenia
>     tel.: +386 51 303 817
>     email: plamen.mirazchiyski at ineri.org
>

-- 
======================
Plamen Mirazchiyski, PhD
International Educational Research and Evaluation Institute
24 Tehnolo?ki park
SI-1000 Ljubljana
Slovenia
tel.: +386 51 303 817
email:plamen.mirazchiyski at ineri.org

	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Fri Jul  8 15:00:57 2022
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Fri, 8 Jul 2022 16:00:57 +0300
Subject: [R-pkg-devel] No news entries found
In-Reply-To: <25288.10572.792507.993341@rob.eddelbuettel.com>
References: <45a5fb16-f07e-7760-ed2e-bfe67a93946e@ineri.org>
 <2216f174-35ec-08cf-89da-87f9f4dbaca4@gmail.com>
 <CAFDcVCRidRMRdB7_nJprrXYsKZ=Y1ES7YHUmRohm5k-2Lu+u1g@mail.gmail.com>
 <00068109-285b-ce42-282a-2632915f7c7e@ineri.org>
 <25288.10572.792507.993341@rob.eddelbuettel.com>
Message-ID: <20220708160057.3092a69c@arachnoid>

On Fri, 8 Jul 2022 07:55:40 -0500
Dirk Eddelbuettel <edd at debian.org> wrote:

> which could arguably do with a paragraph on how to get a bugzilla
> account ...

Perhaps the FAQ could link to the https://www.r-project.org/bugs.html
web page, which is also linked from the front page.

-- 
Best regards,
Ivan


From kry|ov@r00t @end|ng |rom gm@||@com  Fri Jul  8 15:28:25 2022
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Fri, 8 Jul 2022 16:28:25 +0300
Subject: [R-pkg-devel] No news entries found
In-Reply-To: <23691b0e-10e8-fb57-bad7-652a3dd3c37a@ineri.org>
References: <45a5fb16-f07e-7760-ed2e-bfe67a93946e@ineri.org>
 <2216f174-35ec-08cf-89da-87f9f4dbaca4@gmail.com>
 <CAFDcVCRidRMRdB7_nJprrXYsKZ=Y1ES7YHUmRohm5k-2Lu+u1g@mail.gmail.com>
 <00068109-285b-ce42-282a-2632915f7c7e@ineri.org>
 <CAFDcVCTJpwoaTbHO5gNkBsS5h2kGndwssumC0DDXjqSdX+D4dQ@mail.gmail.com>
 <23691b0e-10e8-fb57-bad7-652a3dd3c37a@ineri.org>
Message-ID: <20220708162825.28e16346@arachnoid>

On Fri, 8 Jul 2022 14:58:37 +0200
Plamen Mirazchiyski <plamen.mirazchiyski at ineri.org> wrote:

> Yes, here is an excerpt from the NEWS.md with a problematic case at
> the end:

Interesting. The "No news entries found." branch is taken by R CMD
check in case when the news-reading function returns something that
doesn't inherit from 'news_db' or has zero rows without producing any
warning or error messages. Yet if I save this excerpt to a file and
feed it to tools:::.build_news_db_from_package_NEWS_md, I get a valid
news_db object. Can you see any difference in its output between the
NEWS.md that causes a NOTE and the one that doesn't?

-- 
Best regards,
Ivan


From @@mue|@gr@nje@ud @end|ng |rom |n@erm@|r  Fri Jul  8 15:50:07 2022
From: @@mue|@gr@nje@ud @end|ng |rom |n@erm@|r (Samuel Granjeaud)
Date: Fri, 8 Jul 2022 15:50:07 +0200
Subject: [R-pkg-devel] Unused data is silently kept in the environment of a
 function
Message-ID: <81e9fea1-5752-6e8a-097e-44acf079ec7d@inserm.fr>

Dear all,

I want to compute processing functions to apply to the data.
I apply the functions to the data in a second step.
proc_0 increases the memory, proc_1 is safe.
reprex below.

If this behavior is known, could you tell me a workaround before I try 
to guess the best one?

Best,
Samuel

``` r
# for memory tracking
library(pryr)

# a class
setClass(
 ? "fb",
 ? slots = list(d = "numeric", f = "list"),
 ? prototype=list(d = NULL, f = NULL)
)

# memory increased: keep dat somewhere and link it back to the returned 
value
proc_0 <- function(x) {
 ? dat = sample(x at d)
 ? cofactors = c(mean(dat), median(dat), IQR(dat))
 ? model = sapply(cofactors, function(cofactor) function(z) z / cofactor)
 ? x at f = list(model)
 ? x
}

# init data
mem_used()
#> 47 MB
a = new("fb")
a at d = sample(rnorm(1e7))
a at f = list()
mem_used()
#> 127 MB
# memory increased of 80 MB
# process
b = proc_0(a)
mem_used()
#> 207 MB
# memory increased of 80 MB again
rm(a)
mem_used()
#> 207 MB
# memory didn't decreased
b at d = b at d + 1
mem_used()
#> 287 MB
# memory increased
# b at d was really pointing to a at d before increment
sapply(1:3, function(i) ls(environment(b at f[[1]][[i]])))
#> [1] "cofactor" "cofactor" "cofactor"
sapply(1:3, function(i) get("cofactor", environment(b at f[[1]][[i]])))
#> [1] -0.0003085559? 0.0001107148? 1.3485980291
# environments look fine
rm(b)
mem_used()
#> 47.5 MB
# memory released back


# memory safe
proc_1 <- function(x) {
 ? cofactors = c(mean(x at d), median(x at d), IQR(x at d))
 ? model = sapply(cofactors, function(cofactor) function(z) z / cofactor)
 ? x at f = list(model)
 ? x
}

# init data
mem_used()
#> 47.5 MB
a = new("fb")
a at d = sample(rnorm(1e7))
a at f = list()
mem_used()
#> 128 MB
b = proc_1(a)
mem_used()
#> 128 MB
# memory didn't increased; b at d points to a at d; functions weight a few KB
rm(a)
mem_used()
#> 128 MB
sapply(1:3, function(i) ls(environment(b at f[[1]][[i]])))
#> [1] "cofactor" "cofactor" "cofactor"
sapply(1:3, function(i) get("cofactor", environment(b at f[[1]][[i]])))
#> [1] -0.0003133312 -0.0002510665? 1.3491459433

rm(b)
mem_used()
#> 47.5 MB

```

<sup>Created on 2022-07-08 by the [reprex 
package](https://reprex.tidyverse.org) (v2.0.1)</sup>

<details style="margin-bottom:10px;">
<summary>
Session info
</summary>

``` r
sessionInfo()
#> R version 4.2.1 (2022-06-23 ucrt)
#> Platform: x86_64-w64-mingw32/x64 (64-bit)
#> Running under: Windows 10 x64 (build 19044)
#>
#> Matrix products: default
#>
#> locale:
#> [1] LC_COLLATE=French_France.utf8 LC_CTYPE=French_France.utf8
#> [3] LC_MONETARY=French_France.utf8 LC_NUMERIC=C
#> [5] LC_TIME=French_France.utf8
#>
#> attached base packages:
#> [1] stats???? graphics? grDevices utils???? datasets methods?? base
#>
#> other attached packages:
#> [1] pryr_0.1.5
#>
#> loaded via a namespace (and not attached):
#>? [1] Rcpp_1.0.8.3???? codetools_0.2-18 digest_0.6.29 withr_2.5.0
#>? [5] magrittr_2.0.3?? reprex_2.0.1???? evaluate_0.15 highr_0.9
#>? [9] stringi_1.7.6??? rlang_1.0.3????? cli_3.3.0 rstudioapi_0.13
#> [13] fs_1.5.2???????? lobstr_1.1.2???? rmarkdown_2.14 tools_4.2.1
#> [17] stringr_1.4.0??? glue_1.6.2?????? xfun_0.31 yaml_2.3.5
#> [21] fastmap_1.1.0??? compiler_4.2.1?? htmltools_0.5.2 knitr_1.39
```

</details>


From murdoch@dunc@n @end|ng |rom gm@||@com  Fri Jul  8 17:01:23 2022
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Fri, 8 Jul 2022 11:01:23 -0400
Subject: [R-pkg-devel] 
 Unused data is silently kept in the environment of a function
In-Reply-To: <81e9fea1-5752-6e8a-097e-44acf079ec7d@inserm.fr>
References: <81e9fea1-5752-6e8a-097e-44acf079ec7d@inserm.fr>
Message-ID: <ef370207-e029-1916-36f6-eb406dd48c4f@gmail.com>

I accidentally replied privately to this message.  Here is the reply 
that I intended to send to the list, along with an addition based on 
Samuel's reply to me.

On 08/07/2022 9:50 a.m., Samuel Granjeaud wrote:
 > > Dear all,
 > >
 > > I want to compute processing functions to apply to the data.
 > > I apply the functions to the data in a second step.
 > > proc_0 increases the memory, proc_1 is safe.
 > > reprex below.
 > >
 > > If this behavior is known, could you tell me a workaround before I try
 > > to guess the best one?

When a function is called, it creates an environment that holds the
arguments and all local variables.  If the function returns that
environment, or a value that references it, all the local variables will
still be there.

In your function I believe the anonymous functions you create in `model`
are catching the environment.  Since those functions are created as part
of the evaluation of proc_0, each of them will have the evaluation
environment attached.

NEW addition:  In R, functions have an associated environment set as the 
parent of the evaluation environment mentioned above.  Those are called 
"the environment of the function", and can be retrieved from function fn 
using `environment(fn)`.  For top-level functions like proc_0, 
environment(proc_0) would be the global environment, but for functions 
created within another function, it would be the evaluation environment 
active at the time of creation.

Your code has

   sapply(cofactors, function(cofactor) function(z) z / cofactor)

This creates the function with definition

   function(cofactor) function(z) z / cofactor

The environment of that function will be the evaluation environment of 
proc_0.  When that function is called by sapply(), it will create an 
evaluation environment holding cofactor, and that environment will be 
used by the function returned, i.e. the result of

   function(z) z / cofactor

So you'll end up with this chain of environments:

   environment(function(z) z / cofactor) is the evaluation environment 
of function(cofactor) function(z) z / cofactor;

   its parent is the evaluation environment of proc_0, containing dat;

   its parent is environment(proc_0), which is the global environment.

The global environment isn't captured, but the others are, so you save a 
copy of dat every time you call proc_0.

But none of those functions need access to dat, so there's no need to 
keep it, and after your last use of it in proc_0, just run rm(dat) to 
get rid of it.

OLD part again:

By the way, mem_used() isn't a great way to measure memory use, because
it will count things that will be cleaned up in a future garbage
collection.  When I added "rm(dat)" to your function, I saw this:

  > a = new("fb")
  > a at d = sample(rnorm(1e7))
  > a at f = list()
  > mem_used()
363 MB
  > b = proc_0(a)
  > mem_used()
283 MB

i.e. *less* memory was used after b was created, presumably because a gc
happened.

It's better to use object.size() or pryr::object_size() to measure the
size of individual objects.  Neither one is perfect: they use different
rules to decide what to include, and in some cases, memory used in one
object is counted again as part of another.  The way R allocated memory
means there is *no* perfect definition of the size of an object.

Duncan Murdoch


 > >
 > > Best,
 > > Samuel
 > >
 > > ``` r
 > > # for memory tracking
 > > library(pryr)
 > >
 > > # a class
 > > setClass(
 > >     "fb",
 > >     slots = list(d = "numeric", f = "list"),
 > >     prototype=list(d = NULL, f = NULL)
 > > )
 > >
 > > # memory increased: keep dat somewhere and link it back to the returned
 > > value
 > > proc_0 <- function(x) {
 > >     dat = sample(x at d)
 > >     cofactors = c(mean(dat), median(dat), IQR(dat))
 > >     model = sapply(cofactors, function(cofactor) function(z) z / 
cofactor)
 > >     x at f = list(model)
 > >     x
 > > }
 > >
 > > # init data
 > > mem_used()
 > > #> 47 MB
 > > a = new("fb")
 > > a at d = sample(rnorm(1e7))
 > > a at f = list()
 > > mem_used()
 > > #> 127 MB
 > > # memory increased of 80 MB
 > > # process
 > > b = proc_0(a)
 > > mem_used()
 > > #> 207 MB
 > > # memory increased of 80 MB again
 > > rm(a)
 > > mem_used()
 > > #> 207 MB
 > > # memory didn't decreased
 > > b at d = b at d + 1
 > > mem_used()
 > > #> 287 MB
 > > # memory increased
 > > # b at d was really pointing to a at d before increment
 > > sapply(1:3, function(i) ls(environment(b at f[[1]][[i]])))
 > > #> [1] "cofactor" "cofactor" "cofactor"
 > > sapply(1:3, function(i) get("cofactor", environment(b at f[[1]][[i]])))
 > > #> [1] -0.0003085559  0.0001107148  1.3485980291
 > > # environments look fine
 > > rm(b)
 > > mem_used()
 > > #> 47.5 MB
 > > # memory released back
 > >
 > >
 > > # memory safe
 > > proc_1 <- function(x) {
 > >     cofactors = c(mean(x at d), median(x at d), IQR(x at d))
 > >     model = sapply(cofactors, function(cofactor) function(z) z / 
cofactor)
 > >     x at f = list(model)
 > >     x
 > > }
 > >
 > > # init data
 > > mem_used()
 > > #> 47.5 MB
 > > a = new("fb")
 > > a at d = sample(rnorm(1e7))
 > > a at f = list()
 > > mem_used()
 > > #> 128 MB
 > > b = proc_1(a)
 > > mem_used()
 > > #> 128 MB
 > > # memory didn't increased; b at d points to a at d; functions weight a few KB
 > > rm(a)
 > > mem_used()
 > > #> 128 MB
 > > sapply(1:3, function(i) ls(environment(b at f[[1]][[i]])))
 > > #> [1] "cofactor" "cofactor" "cofactor"
 > > sapply(1:3, function(i) get("cofactor", environment(b at f[[1]][[i]])))
 > > #> [1] -0.0003133312 -0.0002510665  1.3491459433
 > >
 > > rm(b)
 > > mem_used()
 > > #> 47.5 MB
 > >
 > > ```
 > >
 > > <sup>Created on 2022-07-08 by the [reprex
 > > package](https://reprex.tidyverse.org) (v2.0.1)</sup>
 > >
 > > <details style="margin-bottom:10px;">
 > > <summary>
 > > Session info
 > > </summary>
 > >
 > > ``` r
 > > sessionInfo()
 > > #> R version 4.2.1 (2022-06-23 ucrt)
 > > #> Platform: x86_64-w64-mingw32/x64 (64-bit)
 > > #> Running under: Windows 10 x64 (build 19044)
 > > #>
 > > #> Matrix products: default
 > > #>
 > > #> locale:
 > > #> [1] LC_COLLATE=French_France.utf8 LC_CTYPE=French_France.utf8
 > > #> [3] LC_MONETARY=French_France.utf8 LC_NUMERIC=C
 > > #> [5] LC_TIME=French_France.utf8
 > > #>
 > > #> attached base packages:
 > > #> [1] stats     graphics  grDevices utils     datasets methods   base
 > > #>
 > > #> other attached packages:
 > > #> [1] pryr_0.1.5
 > > #>
 > > #> loaded via a namespace (and not attached):
 > > #>  [1] Rcpp_1.0.8.3     codetools_0.2-18 digest_0.6.29 withr_2.5.0
 > > #>  [5] magrittr_2.0.3   reprex_2.0.1     evaluate_0.15 highr_0.9
 > > #>  [9] stringi_1.7.6    rlang_1.0.3      cli_3.3.0 rstudioapi_0.13
 > > #> [13] fs_1.5.2         lobstr_1.1.2     rmarkdown_2.14 tools_4.2.1
 > > #> [17] stringr_1.4.0    glue_1.6.2       xfun_0.31 yaml_2.3.5
 > > #> [21] fastmap_1.1.0    compiler_4.2.1   htmltools_0.5.2 knitr_1.39
 > > ```
 > >
 > > </details>
 > >
 > > ______________________________________________
 > > R-package-devel at r-project.org mailing list
 > > https://stat.ethz.ch/mailman/listinfo/r-package-devel


From murdoch@dunc@n @end|ng |rom gm@||@com  Fri Jul  8 17:10:20 2022
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Fri, 8 Jul 2022 11:10:20 -0400
Subject: [R-pkg-devel] 
 Unused data is silently kept in the environment of a function
In-Reply-To: <ef370207-e029-1916-36f6-eb406dd48c4f@gmail.com>
References: <81e9fea1-5752-6e8a-097e-44acf079ec7d@inserm.fr>
 <ef370207-e029-1916-36f6-eb406dd48c4f@gmail.com>
Message-ID: <235a9cc8-5b3a-d02d-dc50-3943f9beb177@gmail.com>

On 08/07/2022 11:01 a.m., Duncan Murdoch wrote:
  ... lots deleted

> So you'll end up with this chain of environments:
> 
>     environment(function(z) z / cofactor) is the evaluation environment
> of function(cofactor) function(z) z / cofactor;
> 
>     its parent is the evaluation environment of proc_0, containing dat;
> 
>     its parent is environment(proc_0), which is the global environment.
> 
> The global environment isn't captured, but the others are, so you save a
> copy of dat every time you call proc_0.

This may be misleading.  The reference to the global environment will be 
there; what I meant is that there's no extra copy of the global 
environment.  If we didn't have the references in the chain above, the 
evaluation environments would all have been garbage collected after 
proc_0 finished, but because we still have references to them, they are 
"captured", so we keep a copy until those references go away when the 
result of the proc_0 call is deleted.

Duncan Murdoch


From @@mue|@gr@nje@ud @end|ng |rom |n@erm@|r  Fri Jul  8 17:34:24 2022
From: @@mue|@gr@nje@ud @end|ng |rom |n@erm@|r (Samuel Granjeaud)
Date: Fri, 8 Jul 2022 17:34:24 +0200
Subject: [R-pkg-devel] 
 Unused data is silently kept in the environment of a function
In-Reply-To: <235a9cc8-5b3a-d02d-dc50-3943f9beb177@gmail.com>
References: <81e9fea1-5752-6e8a-097e-44acf079ec7d@inserm.fr>
 <ef370207-e029-1916-36f6-eb406dd48c4f@gmail.com>
 <235a9cc8-5b3a-d02d-dc50-3943f9beb177@gmail.com>
Message-ID: <67f9adfc-7675-cd62-06c9-c2457073a231@inserm.fr>

Great answer. I think I missed the point on the parent environment 
although I did my best to care about the environment.

What Ducan removed from my reply is the following and I share it with you:

> Great to have feedback from persons like you,
> Samuel


From joh@nne@@r@nke @end|ng |rom jrwb@de  Fri Jul  8 19:39:32 2022
From: joh@nne@@r@nke @end|ng |rom jrwb@de (Johannes Ranke)
Date: Fri, 08 Jul 2022 19:39:32 +0200
Subject: [R-pkg-devel] Slow down in R 4.2.x; Solved
In-Reply-To: <f110f828-c011-8a15-3236-f2ccb4e9e6ee@gmail.com>
References: <13505960.q0Az33yFfb@ryz>
 <f110f828-c011-8a15-3236-f2ccb4e9e6ee@gmail.com>
Message-ID: <15645492.6oDDn9FRUE@tux>

Am Freitag, 8. Juli 2022, 14:52:27 CEST schrieb Tomas Kalibera:
> On 7/1/22 11:10, Johannes Ranke wrote:
> > Dear list,
> > 
> > independent of the thread on this list about slow examples on R 4.2 on
> > windows I have discovered over the last few days that some of my
> > benchmarks (look for t4 and t9) run by a factor of 3 slower on R 4.2.x
> > than on R 4.1.3 [1].
> > 
> > This is on Linux, using my own backported R packages for R 4.2.x and
> > locally compiled versions (with default configure options) of
> > R-4-1-branch on two different CPUs. The results for R 4.2.1 are only
> > slightly modulated by the use of different BLAS version (openblas-serial
> > versus atlas versus lapack).
> > 
> > I also tested the R 4.0.4 version that is part of Debian bullseye, it is
> > as
> > fast as the locally compiled R 4.1.3.
> > 
> > I went through the NEWS for R 4.2.0 (because the first slow results were
> > obtained using that version), but the only change I could imagine causing
> > such a change is the additional check of the length of the arguments &&
> > and ||.
> > 
> > Any other thoughts?
> 
> I can reproduce slowdown in one of your tests:
> 
> library(mkin)
> FOCUS_D <- subset(FOCUS_2006_D, value != 0)
> SFO_SFO <- mkinmod(
>    parent = mkinsub("SFO", "m1"),
>    m1 = mkinsub("SFO"))
> FOMC_SFO <- mkinmod(
>    parent = mkinsub("FOMC", "m1"),
>    m1 = mkinsub("SFO"))
> DFOP_SFO <- mkinmod(
>    parent = mkinsub("FOMC", "m1"),
>    m1 = mkinsub("SFO"))
> 
> mmkin_bench <- function(models, datasets, error_model = "const") {
>    mmkin(models, datasets, error_model = error_model, cores = 1, quiet =
> TRUE)
> }
> 
> t4 <- system.time(mmkin_bench(list(SFO_SFO, FOMC_SFO, DFOP_SFO),
> list(FOCUS_D), error_model = "tc"))[["elapsed"]]
> 
> This is slower in R 4-devel than R 4.1 because of bug fixes in DLL info
> interface (PR#16446, r80285). "perf" tool on Linux shows extra time
> spent in R_registerSymbolEptr and R_WeakRefKey. This is because of
> repeated calls to getLoadedDLLs(), via repeated calls to
> inline::getDynLib(x$cf)[["name"]]

Thanks a lot for this concise analysis...

> Perhaps one could save dll_info, once computed in mkin, alongside "cf"
> in the model, instead of re-computing it every time?

... and for this excellent suggestion - I did so and the benchmarks are better 
than ever [1].
 
Cheers

Johannes

[1] https://pkgdown.jrwb.de/mkin/articles/web_only/benchmarks.html#results


From bbo|ker @end|ng |rom gm@||@com  Sat Jul  9 22:29:57 2022
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Sat, 9 Jul 2022 16:29:57 -0400
Subject: [R-pkg-devel] help/advice on debugging
Message-ID: <d2a61bd8-1b87-a2b2-8f24-14ba72b9e6f0@mcmaster.ca>

   For some stupid reason I agreed to take over maintenance of the 
now-orphaned `gtools` package ("how much trouble could that be, after 
all?"), which has 203 strong reverse dependencies.

   CRAN is reporting that exactly **one** of them, dnapath, is
failing reverse dependency checks ("changed to worse").

   I am having trouble replicating this (I'm running R-devel, can't 
install bioconductor packages on R-devel, working on doing everything in 
a Docker container, blah blah blah ...)

   In any case I am mystified as to how my new version of the package 
could be breaking something in the downstream package, since AFAICT the 
*only* functionality that `dnapath` is using from gtools is `permute()`, 
which is (1) a one-line wrapper for sample() and (2) hasn't changed in 
many years.

    I will try to figure out how much more time to invest in this rabbit 
hole before continuing the conversation with the CRAN maintainers, but 
in the meantime any insights or advice would be welcome.

   The problem is in vignette rebuilding, errors of this form in both of 
the package vignettes:

   Can't join on `x$entrezgene_id` x `y$entrezgene_id` because of
   incompatible types.
   ? `x$entrezgene_id` is of type <double>>.
   ? `y$entrezgene_id` is of type <character>>.

References:

https://win-builder.r-project.org/incoming_pretest/gtools_3.9.3_20220709_010826/reverseDependencies/summary.txt

https://github.com/r-gregmisc/gtools

  cheers
    Ben Bolker


From p|@men@m|r@zch|y@k| @end|ng |rom |ner|@org  Sun Jul 10 13:08:21 2022
From: p|@men@m|r@zch|y@k| @end|ng |rom |ner|@org (Plamen Mirazchiyski)
Date: Sun, 10 Jul 2022 13:08:21 +0200
Subject: [R-pkg-devel] No news entries found
In-Reply-To: <25288.10572.792507.993341@rob.eddelbuettel.com>
References: <45a5fb16-f07e-7760-ed2e-bfe67a93946e@ineri.org>
 <2216f174-35ec-08cf-89da-87f9f4dbaca4@gmail.com>
 <CAFDcVCRidRMRdB7_nJprrXYsKZ=Y1ES7YHUmRohm5k-2Lu+u1g@mail.gmail.com>
 <00068109-285b-ce42-282a-2632915f7c7e@ineri.org>
 <25288.10572.792507.993341@rob.eddelbuettel.com>
Message-ID: <fda4f633-a583-f852-ce75-483eed35a4f1@ineri.org>

Thank you, I contacted R-Bugzilla to create an account for me, 
explaining the reason. The answer was that this is related with CRAN 
incoming packages' checks which does not mean it is an R bug which is to 
be reported and that the CRAN checks are performed using R-devel 
version, not the released, so it is not a bug that shall be reported.

I actually agree with the answer, especially given that the issue I 
encountered was with four out of the 10 platforms where the package was 
checked and not all, so I don't really think it is an R-bug that should 
be reported to R-Bugzilla.

Plamen

On 7/8/2022 2:55 PM, Dirk Eddelbuettel wrote:
> On 8 July 2022 at 14:23, Plamen Mirazchiyski wrote:
> | to what actual the problem is. Unfortunately, the r-svn repository on
> | GitHub does not have the possibility to report this as an issue.
>
> Please see  https://bugs.r-project.org/    but also see old mailing list (and
> elsewhere) posts on how to create a bugzilla account for which you need a human.
>
> The R FAQ is also there for you:
>
>    9.2 How to report a bug
>        https://cran.r-project.org/doc/FAQ/R-FAQ.html#How-to-report-a-bug
>
> which could arguably do with a paragraph on how to get a bugzilla account ...
>
> Dirk
>

-- 
======================
Plamen Mirazchiyski, PhD
International Educational Research and Evaluation Institute
24 Tehnolo?ki park
SI-1000 Ljubljana
Slovenia
tel.: +386 51 303 817
email: plamen.mirazchiyski at ineri.org


From kry|ov@r00t @end|ng |rom gm@||@com  Sun Jul 10 17:54:16 2022
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Sun, 10 Jul 2022 18:54:16 +0300
Subject: [R-pkg-devel] help/advice on debugging
In-Reply-To: <d2a61bd8-1b87-a2b2-8f24-14ba72b9e6f0@mcmaster.ca>
References: <d2a61bd8-1b87-a2b2-8f24-14ba72b9e6f0@mcmaster.ca>
Message-ID: <20220710185416.6ad0a7ea@trisector>

On Sat, 9 Jul 2022 16:29:57 -0400
Ben Bolker <bbolker at gmail.com> wrote:

>    The problem is in vignette rebuilding, errors of this form in both
> of the package vignettes:
> 
>    Can't join on `x$entrezgene_id` x `y$entrezgene_id` because of
>    incompatible types.
>    ? `x$entrezgene_id` is of type <double>>.
>    ? `y$entrezgene_id` is of type <character>>.

I'd hazard a guess that both vignettes crash in a call to
entrez_to_symbol (a direct one or via rename_genes). Specifically, its
first argument (`x`) is converted to numeric, then the following
happens:

    df <- data.frame(entrezgene_id = x)
    df <- dplyr::left_join(df, gene_info, by = "entrezgene_id")

gene_info is obtained above, using the following:

  gene_info <- get_biomart_mapping(species, symbol_name, dir_save,
                                   verbose) %>%
    dplyr::group_by(entrezgene_id) %>%
    dplyr::summarise(dplyr::across(dplyr::everything(), dplyr::first))

get_biomart_mapping accesses the Internet using biomaRt::getBM if it
can, but otherwise uses a copy of the information for human genome
cached inside the package.

There doesn't seem to be any mention of special cases for
"entrezgene_id" in the code of the biomaRt package. biomaRt::getBM
POSTs XML queries to ensembl.org/biomart/martservice?... and parses the
resulting tab-separated values using read.table.

My guess is, ensembl.org started returning something that isn't a
number in the entrezgene_id column, and you were the first one to
rebuild the vignette and notice that.

-- 
Best regards,
Ivan


From edwwe|2020 @end|ng |rom gm@||@com  Sun Jul 10 22:41:12 2022
From: edwwe|2020 @end|ng |rom gm@||@com (Edward Wei)
Date: Sun, 10 Jul 2022 13:41:12 -0700
Subject: [R-pkg-devel] Unsure why my package failed pre-check
Message-ID: <CAEf_eRBeAnOw3DY-Rt_UmN_tD5XabDUL89ovTm05AMQAoHuqNg@mail.gmail.com>

Is the reason my package failed because the functions assign global
variables? If this is the case, can I see where it says that functions
should not assign global variables?



* using log directory 'd:/RCompile/CRANincoming/R-devel/avfintools.Rcheck'
* using R Under development (unstable) (2022-07-09 r82572 ucrt)
* using platform: x86_64-w64-mingw32 (64-bit)
* using session charset: UTF-8
* checking for file 'avfintools/DESCRIPTION' ... OK
* checking extension type ... Package
* this is package 'avfintools' version '0.1.0'
* package encoding: UTF-8
* checking CRAN incoming feasibility ... NOTE
Maintainer: 'Edward Wei <edwwei2020 at gmail.com>'

New submission

Possibly misspelled words in DESCRIPTION:
  Avfintools (10:18)
  CRAN (9:34)
  Vantager (3:55, 10:46, 11:56)
  alphavantager (8:3, 9:7)
  api (7:49)
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking whether package 'avfintools' can be installed ... OK
* checking installed package size ... OK
* checking package directory ... OK
* checking for future file timestamps ... OK
* checking DESCRIPTION meta-information ... OK
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies ... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking loading without being on the library search path ... OK
* checking use of S3 registration ... OK
* checking dependencies in R code ... OK
* checking S3 generic/method consistency ... OK
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... [8s] NOTE
Found the following assignments to the global environment:
File 'avfintools/R/avfintools.R':
  assign(paste0(ticker, "daily"), addreturns(retdata), envir = .GlobalEnv)
  assign(paste0(ticker, "15"), addreturns(retdata), envir = .GlobalEnv)
  assign(paste0(ticker, "15"), addreturns(retdata), envir = .GlobalEnv)
  assign(paste0(ticker, "wk"), addreturns(retdata), envir = .GlobalEnv)
  assign(paste0(ticker, "60"), addreturns(retdata), envir = .GlobalEnv)
  assign(paste0(ticker, "60"), addreturns(retdata), envir = .GlobalEnv)
  assign(paste0(ticker, "5"), addreturns(retdata), envir = .GlobalEnv)
  assign(paste0(ticker, "5"), addreturns(retdata), envir = .GlobalEnv)
  assign(paste0(coin_name, "60"), addreturns(retdata), envir = .GlobalEnv)
  assign(paste0(coin_name, "daily"), retdata, envir = .GlobalEnv)
* checking Rd files ... [1s] OK
* checking Rd metadata ... OK
* checking Rd line widths ... OK
* checking Rd cross-references ... OK
* checking for missing documentation entries ... OK
* checking for code/documentation mismatches ... OK
* checking Rd \usage sections ... OK
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking contents of 'data' directory ... OK
* checking data for non-ASCII characters ... OK
* checking LazyData ... OK
* checking data for ASCII and uncompressed saves ... OK
* checking examples ... [9s] OK
* checking PDF version of manual ... OK
* checking for detritus in the temp directory ... OK
* DONE
Status: 2 NOTEs

	[[alternative HTML version deleted]]


From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Sun Jul 10 23:11:19 2022
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Sun, 10 Jul 2022 14:11:19 -0700
Subject: [R-pkg-devel] Unsure why my package failed pre-check
In-Reply-To: <CAEf_eRBeAnOw3DY-Rt_UmN_tD5XabDUL89ovTm05AMQAoHuqNg@mail.gmail.com>
References: <CAEf_eRBeAnOw3DY-Rt_UmN_tD5XabDUL89ovTm05AMQAoHuqNg@mail.gmail.com>
Message-ID: <B677D5C8-0435-456A-ABA4-ECFDF0C63549@dcn.davis.ca.us>

https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Package-namespaces

Namespaces are sealed after loading. Workaround is to create a global variable that is an environment in an `.onLoad` hook, and modify variables in that environment instead.

On July 10, 2022 1:41:12 PM PDT, Edward Wei <edwwei2020 at gmail.com> wrote:
>Is the reason my package failed because the functions assign global
>variables? If this is the case, can I see where it says that functions
>should not assign global variables?
>
>
>
>* using log directory 'd:/RCompile/CRANincoming/R-devel/avfintools.Rcheck'
>* using R Under development (unstable) (2022-07-09 r82572 ucrt)
>* using platform: x86_64-w64-mingw32 (64-bit)
>* using session charset: UTF-8
>* checking for file 'avfintools/DESCRIPTION' ... OK
>* checking extension type ... Package
>* this is package 'avfintools' version '0.1.0'
>* package encoding: UTF-8
>* checking CRAN incoming feasibility ... NOTE
>Maintainer: 'Edward Wei <edwwei2020 at gmail.com>'
>
>New submission
>
>Possibly misspelled words in DESCRIPTION:
>  Avfintools (10:18)
>  CRAN (9:34)
>  Vantager (3:55, 10:46, 11:56)
>  alphavantager (8:3, 9:7)
>  api (7:49)
>* checking package namespace information ... OK
>* checking package dependencies ... OK
>* checking if this is a source package ... OK
>* checking if there is a namespace ... OK
>* checking for hidden files and directories ... OK
>* checking for portable file names ... OK
>* checking whether package 'avfintools' can be installed ... OK
>* checking installed package size ... OK
>* checking package directory ... OK
>* checking for future file timestamps ... OK
>* checking DESCRIPTION meta-information ... OK
>* checking top-level files ... OK
>* checking for left-over files ... OK
>* checking index information ... OK
>* checking package subdirectories ... OK
>* checking R files for non-ASCII characters ... OK
>* checking R files for syntax errors ... OK
>* checking whether the package can be loaded ... OK
>* checking whether the package can be loaded with stated dependencies ... OK
>* checking whether the package can be unloaded cleanly ... OK
>* checking whether the namespace can be loaded with stated dependencies ... OK
>* checking whether the namespace can be unloaded cleanly ... OK
>* checking loading without being on the library search path ... OK
>* checking use of S3 registration ... OK
>* checking dependencies in R code ... OK
>* checking S3 generic/method consistency ... OK
>* checking replacement functions ... OK
>* checking foreign function calls ... OK
>* checking R code for possible problems ... [8s] NOTE
>Found the following assignments to the global environment:
>File 'avfintools/R/avfintools.R':
>  assign(paste0(ticker, "daily"), addreturns(retdata), envir = .GlobalEnv)
>  assign(paste0(ticker, "15"), addreturns(retdata), envir = .GlobalEnv)
>  assign(paste0(ticker, "15"), addreturns(retdata), envir = .GlobalEnv)
>  assign(paste0(ticker, "wk"), addreturns(retdata), envir = .GlobalEnv)
>  assign(paste0(ticker, "60"), addreturns(retdata), envir = .GlobalEnv)
>  assign(paste0(ticker, "60"), addreturns(retdata), envir = .GlobalEnv)
>  assign(paste0(ticker, "5"), addreturns(retdata), envir = .GlobalEnv)
>  assign(paste0(ticker, "5"), addreturns(retdata), envir = .GlobalEnv)
>  assign(paste0(coin_name, "60"), addreturns(retdata), envir = .GlobalEnv)
>  assign(paste0(coin_name, "daily"), retdata, envir = .GlobalEnv)
>* checking Rd files ... [1s] OK
>* checking Rd metadata ... OK
>* checking Rd line widths ... OK
>* checking Rd cross-references ... OK
>* checking for missing documentation entries ... OK
>* checking for code/documentation mismatches ... OK
>* checking Rd \usage sections ... OK
>* checking Rd contents ... OK
>* checking for unstated dependencies in examples ... OK
>* checking contents of 'data' directory ... OK
>* checking data for non-ASCII characters ... OK
>* checking LazyData ... OK
>* checking data for ASCII and uncompressed saves ... OK
>* checking examples ... [9s] OK
>* checking PDF version of manual ... OK
>* checking for detritus in the temp directory ... OK
>* DONE
>Status: 2 NOTEs
>
>	[[alternative HTML version deleted]]
>
>______________________________________________
>R-package-devel at r-project.org mailing list
>https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
Sent from my phone. Please excuse my brevity.


From murdoch@dunc@n @end|ng |rom gm@||@com  Mon Jul 11 01:31:36 2022
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sun, 10 Jul 2022 19:31:36 -0400
Subject: [R-pkg-devel] Unsure why my package failed pre-check
In-Reply-To: <CAEf_eRBeAnOw3DY-Rt_UmN_tD5XabDUL89ovTm05AMQAoHuqNg@mail.gmail.com>
References: <CAEf_eRBeAnOw3DY-Rt_UmN_tD5XabDUL89ovTm05AMQAoHuqNg@mail.gmail.com>
Message-ID: <f0b1843c-d3a7-bc60-a9da-ee9c0c73b383@gmail.com>

On 10/07/2022 4:41 p.m., Edward Wei wrote:
> Is the reason my package failed because the functions assign global
> variables? If this is the case, can I see where it says that functions
> should not assign global variables?

It's in the CRAN repository policy:

"- Packages should not modify the global environment (user?s workspace)."

Duncan Murdoch

> 
> 
> 
> * using log directory 'd:/RCompile/CRANincoming/R-devel/avfintools.Rcheck'
> * using R Under development (unstable) (2022-07-09 r82572 ucrt)
> * using platform: x86_64-w64-mingw32 (64-bit)
> * using session charset: UTF-8
> * checking for file 'avfintools/DESCRIPTION' ... OK
> * checking extension type ... Package
> * this is package 'avfintools' version '0.1.0'
> * package encoding: UTF-8
> * checking CRAN incoming feasibility ... NOTE
> Maintainer: 'Edward Wei <edwwei2020 at gmail.com>'
> 
> New submission
> 
> Possibly misspelled words in DESCRIPTION:
>    Avfintools (10:18)
>    CRAN (9:34)
>    Vantager (3:55, 10:46, 11:56)
>    alphavantager (8:3, 9:7)
>    api (7:49)
> * checking package namespace information ... OK
> * checking package dependencies ... OK
> * checking if this is a source package ... OK
> * checking if there is a namespace ... OK
> * checking for hidden files and directories ... OK
> * checking for portable file names ... OK
> * checking whether package 'avfintools' can be installed ... OK
> * checking installed package size ... OK
> * checking package directory ... OK
> * checking for future file timestamps ... OK
> * checking DESCRIPTION meta-information ... OK
> * checking top-level files ... OK
> * checking for left-over files ... OK
> * checking index information ... OK
> * checking package subdirectories ... OK
> * checking R files for non-ASCII characters ... OK
> * checking R files for syntax errors ... OK
> * checking whether the package can be loaded ... OK
> * checking whether the package can be loaded with stated dependencies ... OK
> * checking whether the package can be unloaded cleanly ... OK
> * checking whether the namespace can be loaded with stated dependencies ... OK
> * checking whether the namespace can be unloaded cleanly ... OK
> * checking loading without being on the library search path ... OK
> * checking use of S3 registration ... OK
> * checking dependencies in R code ... OK
> * checking S3 generic/method consistency ... OK
> * checking replacement functions ... OK
> * checking foreign function calls ... OK
> * checking R code for possible problems ... [8s] NOTE
> Found the following assignments to the global environment:
> File 'avfintools/R/avfintools.R':
>    assign(paste0(ticker, "daily"), addreturns(retdata), envir = .GlobalEnv)
>    assign(paste0(ticker, "15"), addreturns(retdata), envir = .GlobalEnv)
>    assign(paste0(ticker, "15"), addreturns(retdata), envir = .GlobalEnv)
>    assign(paste0(ticker, "wk"), addreturns(retdata), envir = .GlobalEnv)
>    assign(paste0(ticker, "60"), addreturns(retdata), envir = .GlobalEnv)
>    assign(paste0(ticker, "60"), addreturns(retdata), envir = .GlobalEnv)
>    assign(paste0(ticker, "5"), addreturns(retdata), envir = .GlobalEnv)
>    assign(paste0(ticker, "5"), addreturns(retdata), envir = .GlobalEnv)
>    assign(paste0(coin_name, "60"), addreturns(retdata), envir = .GlobalEnv)
>    assign(paste0(coin_name, "daily"), retdata, envir = .GlobalEnv)
> * checking Rd files ... [1s] OK
> * checking Rd metadata ... OK
> * checking Rd line widths ... OK
> * checking Rd cross-references ... OK
> * checking for missing documentation entries ... OK
> * checking for code/documentation mismatches ... OK
> * checking Rd \usage sections ... OK
> * checking Rd contents ... OK
> * checking for unstated dependencies in examples ... OK
> * checking contents of 'data' directory ... OK
> * checking data for non-ASCII characters ... OK
> * checking LazyData ... OK
> * checking data for ASCII and uncompressed saves ... OK
> * checking examples ... [9s] OK
> * checking PDF version of manual ... OK
> * checking for detritus in the temp directory ... OK
> * DONE
> Status: 2 NOTEs
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From bertc@rne|| @end|ng |rom gm@||@com  Sun Jul 10 14:03:54 2022
From: bertc@rne|| @end|ng |rom gm@||@com (Rob C)
Date: Sun, 10 Jul 2022 08:03:54 -0400
Subject: [R-pkg-devel] help/advice on debugging
In-Reply-To: <mailman.8255.3.1657447202.42275.r-package-devel@r-project.org>
References: <mailman.8255.3.1657447202.42275.r-package-devel@r-project.org>
Message-ID: <CAPtunJYVcj1wpGMRB-jQhuE5_0CVHaLERudwLkKcprAu2=P3EQ@mail.gmail.com>

Comments in-line:

> Date: Sat, 9 Jul 2022 16:29:57 -0400
> From: Ben Bolker <bbolker at gmail.com>
> To: R Package Development <r-package-devel at r-project.org>
> Subject: [R-pkg-devel] help/advice on debugging
> Message-ID: <d2a61bd8-1b87-a2b2-8f24-14ba72b9e6f0 at mcmaster.ca>
> Content-Type: text/plain; charset="utf-8"; Format="flowed"
>
>    For some stupid reason I agreed to take over maintenance of the
> now-orphaned `gtools` package ("how much trouble could that be, after
> all?"), which has 203 strong reverse dependencies.

Thanks for taking over an orphaned package.  Not an easy task!

>
>    CRAN is reporting that exactly **one** of them, dnapath, is
> failing reverse dependency checks ("changed to worse").
>
>    I am having trouble replicating this (I'm running R-devel, can't
> install bioconductor packages on R-devel, working on doing everything in
> a Docker container, blah blah blah ...)
>
>    In any case I am mystified as to how my new version of the package
> could be breaking something in the downstream package, since AFAICT the
> *only* functionality that `dnapath` is using from gtools is `permute()`,
> which is (1) a one-line wrapper for sample() and (2) hasn't changed in
> many years.

I think that dnapath is calling `gtools::permutations` from
`dnapath.R` around lines 339-343 [1], not `gtools::permute`.

Changes to  the file `combinations.R` in `gtools` where `permutations`
resides were made in June 2021 [2].

>
>     I will try to figure out how much more time to invest in this rabbit
> hole before continuing the conversation with the CRAN maintainers, but
> in the meantime any insights or advice would be welcome.
>
>    The problem is in vignette rebuilding, errors of this form in both of
> the package vignettes:
>
>    Can't join on `x$entrezgene_id` x `y$entrezgene_id` because of
>    incompatible types.
>    ? `x$entrezgene_id` is of type <double>>.
>    ? `y$entrezgene_id` is of type <character>>.
>

I could not find an obvious place where the join above is happening in
the vignette, unfortunately, so I can't be of more help than just
pointing you in a different direction.

> References:
>
> https://win-builder.r-project.org/incoming_pretest/gtools_3.9.3_20220709_010826/reverseDependencies/summary.txt
>
> https://github.com/r-gregmisc/gtools
>
>   cheers
>     Ben Bolker

Rob Carnell

[1] https://github.com/cran/dnapath/blob/34089ec1f3c505692554dcaa49b55d0ce36a91e2/R/dna.R
[2] https://github.com/r-gregmisc/gtools/blob/62e599c3f634f0bc0f99f586e39200a850ef186c/R/combinations.R


