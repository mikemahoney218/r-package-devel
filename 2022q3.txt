From greg @end|ng |rom ||rm@n@y@h@com  Fri Jul  1 00:31:15 2022
From: greg @end|ng |rom ||rm@n@y@h@com (Greg Hunt)
Date: Fri, 1 Jul 2022 08:31:15 +1000
Subject: [R-pkg-devel] Slowdown running examples since 4.2 on Windows
In-Reply-To: <d76c5510-7f48-8a47-afff-5dd35d0c825d@mtholyoke.edu>
References: <be553b98-2057-49e0-1922-37679544eb81@mtholyoke.edu>
 <676322ff-0d24-ece2-ae0d-e7c536373dea@gmail.com>
 <d76c5510-7f48-8a47-afff-5dd35d0c825d@mtholyoke.edu>
Message-ID: <CAAS8PA+EO-ZqdZm0az4_9KMLo04oMD6TxtZNwin7kRwmn3QARw@mail.gmail.com>

Tomas,
Do you have any logging in the build environment that could tell you
whether the environment is running into resource constraints?  I can
imagine IO (disk or network) or CPU contention with that kind of workload
and memory pressure would be easy to identify.

Greg

On Fri, 1 Jul 2022 at 01:45, Barbara Lerner <blerner at mtholyoke.edu> wrote:

> Thanks for these suggestions.  I attempted to submit a slightly earlier
> version of my package a few weeks ago and saw the slowdown on winbuilder
> then, too.  I did not look into any further at that point.
>
> I have tested it on a local Windows computer running 4.2.0 and I did not
> see the slowdown there.  Here are those results:
>
> Name         user    system   elapsed
>
> prov.json 1.11   0.24 2.19
>
> prov.run    0.99    0.06 1.93
>
> version  R version 4.2.0 (2022-04-22 ucrt)
>
> os       Windows 10 x64 (build 19044)
>
> system   x86_64, mingw32
>
>
> Tomas Kalibera wrote on 6/30/22 10:09 AM:
> >
> > On 6/29/22 22:25, Barbara Lerner wrote:
> >> I have a package that I want to submit an updated version for but the
> >> examples run too slowly on win-builder since 4.2 came out.  I just
> >> submitted the exact same tar.gz file to all 3 versions of R available on
> >> win-builder and got the results shown below.  Notice the dramatic
> >> slowdown from 4.1.3 to 4.2.1.
> >>
> >> I don't know how to go about tracking down the cause of this slowdown.
> >> The examples are quite small.  I am reluctant to use \dontrun, but I am
> >> not sure what else to do.
> >
> > Could you perhaps submit to Winbuilder several times (with some
> > non-trivial delay between the runs) to see if the very long execution
> > is reproducible?
> >
> > If so, the next step could be trying on a Windows machine with
> > interactive access, to reproduce, and if it is still so slow, checking
> > where the time is spent, using an R profiler, using some C profiler
> > (e.g. VerySleepy is free), comparing possibly to 4.1.3. It might be
> > useful or necessary to also do the profiling with a debug build of
> > Windows and/or the package, while the performance numbers will be
> > skewed, one would see the symbol names.
> >
> > If you wanted specific help, please send a reproducible example -
> > instructions how to run the code and which code.
> >
> > Best
> > Tomas
> >
> >>
> >> June 29 2:33 PM  - old release
> >> * using R version 4.1.3 (2022-03-10)
> >> i386 timings
> >> name    user    system    elapsed
> >> prov.json    3.28    0.33    5.19
> >> prov.run    2.70    0.27    4.18
> >>
> >> x64 timings
> >> name    user    system    elapsed
> >> prov.json    3.51    0.27    4.93
> >> prov.run    3.05    0.28    4.48
> >>
> >>
> >> June 29 2:19 PM  - release
> >> * using R version 4.2.1 (2022-06-23 ucrt)
> >> * using platform: x86_64-w64-mingw32 (64-bit)
> >> name    user    system    elapsed
> >> prov.json    16.98    8.81    26.82
> >> prov.run    3.53    0.42    4.89
> >>
> >>
> >> June 29  1:52 PM - devel
> >> * using R Under development (unstable) (2022-06-28 r82534 ucrt)
> >> * using platform: x86_64-w64-mingw32 (64-bit)
> >> name    user    system    elapsed
> >> prov.json    16.60     9.09    26.66
> >> prov.run    3.57    0.22    4.70 I then ran the same timing script as
> >> win-builder uses on my Mac,
> >> using Rscript and got these results: name    user    system  elapsed
> >> prov.json       1.105   0.159   1.329 prov.run        0.890   0.103
> >> 1.053 session_info reports:  version  R version 4.2.0 (2022-04-22)
> >>    os       macOS Catalina 10.15.7  system   x86_64, darwin17.0 I then
> >> installed 4.2.1 on my Mac. The time is a little slower but nothing like
> >> the slowdown on Windows.
> >> name    user    system  elapsed prov.json       1.286   0.230 3.080
> >> prov.run        0.940   0.108   1.131  version  R version 4.2.1
> >> (2022-06-23)  os       macOS Catalina 10.15.7  system   x86_64,
> >> darwin17.0
> >>
>
> --
> <http://www.getpostbox.com>Barbara Lerner (she / her)
> Professor
> Computer Science Department
> Mount Holyoke College
>
> <http://www.getpostbox.com>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Fri Jul  1 09:23:30 2022
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Fri, 1 Jul 2022 09:23:30 +0200
Subject: [R-pkg-devel] Slowdown running examples since 4.2 on Windows
In-Reply-To: <d76c5510-7f48-8a47-afff-5dd35d0c825d@mtholyoke.edu>
References: <be553b98-2057-49e0-1922-37679544eb81@mtholyoke.edu>
 <676322ff-0d24-ece2-ae0d-e7c536373dea@gmail.com>
 <d76c5510-7f48-8a47-afff-5dd35d0c825d@mtholyoke.edu>
Message-ID: <9e64db22-a8ee-977b-e0d5-394cb8805bab@gmail.com>


On 6/30/22 17:45, Barbara Lerner wrote:
> Thanks for these suggestions.? I attempted to submit a slightly 
> earlier version of my package a few weeks ago and saw the slowdown on 
> winbuilder then, too.? I did not look into any further at that point.

I was curious about repeatability to rule out the option that it was 
simply that Winbuilder was overloaded at the time of checking the package.

Is the current version that also caused the problem available anywhere?

>
> I have tested it on a local Windows computer running 4.2.0 and I did 
> not see the slowdown there.? Here are those results:
>
> Name ????????user?? ?system elapsed
>
> prov.json 1.11 ??0.24 2.19
>
> prov.run??? 0.99? ??0.06 1.93
>
> version? R version 4.2.0 (2022-04-22 ucrt)
>
> os?????? Windows 10 x64 (build 19044)
>
> system?? x86_64, mingw32

It would be difficult to profile without being able to reproduce on a 
machine that can be used interactively and exclusively for the profiling.
Still, you could try narrowing it down by instrumenting the package - 
adding some timings, printing the outputs, and sending such instrumented 
package to Winbuilder

Tomas


>
>
> Tomas Kalibera wrote on 6/30/22 10:09 AM:
>>
>> On 6/29/22 22:25, Barbara Lerner wrote:
>>> I have a package that I want to submit an updated version for but the
>>> examples run too slowly on win-builder since 4.2 came out.? I just
>>> submitted the exact same tar.gz file to all 3 versions of R 
>>> available on
>>> win-builder and got the results shown below.? Notice the dramatic
>>> slowdown from 4.1.3 to 4.2.1.
>>>
>>> I don't know how to go about tracking down the cause of this slowdown.
>>> The examples are quite small.? I am reluctant to use \dontrun, but I am
>>> not sure what else to do.
>>
>> Could you perhaps submit to Winbuilder several times (with some 
>> non-trivial delay between the runs) to see if the very long execution 
>> is reproducible?
>>
>> If so, the next step could be trying on a Windows machine with 
>> interactive access, to reproduce, and if it is still so slow, 
>> checking where the time is spent, using an R profiler, using some C 
>> profiler (e.g. VerySleepy is free), comparing possibly to 4.1.3. It 
>> might be useful or necessary to also do the profiling with a debug 
>> build of Windows and/or the package, while the performance numbers 
>> will be skewed, one would see the symbol names.
>>
>> If you wanted specific help, please send a reproducible example - 
>> instructions how to run the code and which code.
>>
>> Best
>> Tomas
>>
>>>
>>> June 29 2:33 PM? - old release
>>> * using R version 4.1.3 (2022-03-10)
>>> i386 timings
>>> name??? user??? system??? elapsed
>>> prov.json??? 3.28??? 0.33??? 5.19
>>> prov.run??? 2.70??? 0.27??? 4.18
>>>
>>> x64 timings
>>> name??? user??? system??? elapsed
>>> prov.json??? 3.51??? 0.27??? 4.93
>>> prov.run??? 3.05??? 0.28??? 4.48
>>>
>>>
>>> June 29 2:19 PM? - release
>>> * using R version 4.2.1 (2022-06-23 ucrt)
>>> * using platform: x86_64-w64-mingw32 (64-bit)
>>> name??? user??? system??? elapsed
>>> prov.json??? 16.98??? 8.81??? 26.82
>>> prov.run??? 3.53??? 0.42??? 4.89
>>>
>>>
>>> June 29? 1:52 PM - devel
>>> * using R Under development (unstable) (2022-06-28 r82534 ucrt)
>>> * using platform: x86_64-w64-mingw32 (64-bit)
>>> name??? user??? system??? elapsed
>>> prov.json??? 16.60???? 9.09??? 26.66
>>> prov.run??? 3.57??? 0.22??? 4.70 I then ran the same timing script 
>>> as win-builder uses on my Mac,
>>> using Rscript and got these results: name??? user??? system elapsed
>>> prov.json?????? 1.105?? 0.159?? 1.329 prov.run??????? 0.890 0.103
>>> 1.053 session_info reports: ?version? R version 4.2.0 (2022-04-22)
>>> ? ?os?????? macOS Catalina 10.15.7 ?system?? x86_64, darwin17.0 I then
>>> installed 4.2.1 on my Mac. The time is a little slower but nothing like
>>> the slowdown on Windows.
>>> name??? user??? system? elapsed prov.json?????? 1.286 0.230?? 3.080
>>> prov.run??????? 0.940?? 0.108?? 1.131 ?version? R version 4.2.1
>>> (2022-06-23) ?os?????? macOS Catalina 10.15.7 ?system x86_64, 
>>> darwin17.0
>>>
>
> -- 
> <http://www.getpostbox.com>Barbara Lerner (she / her)
> Professor
> Computer Science Department
> Mount Holyoke College
>
> <http://www.getpostbox.com>
	[[alternative HTML version deleted]]


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Fri Jul  1 09:49:23 2022
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Fri, 1 Jul 2022 09:49:23 +0200
Subject: [R-pkg-devel] Slowdown running examples since 4.2 on Windows
In-Reply-To: <9e64db22-a8ee-977b-e0d5-394cb8805bab@gmail.com>
References: <be553b98-2057-49e0-1922-37679544eb81@mtholyoke.edu>
 <676322ff-0d24-ece2-ae0d-e7c536373dea@gmail.com>
 <d76c5510-7f48-8a47-afff-5dd35d0c825d@mtholyoke.edu>
 <9e64db22-a8ee-977b-e0d5-394cb8805bab@gmail.com>
Message-ID: <47e31581-1866-e06c-b6fb-83f6a98b7149@statistik.tu-dortmund.de>

And if you told us what the package is you are tasking about or gave us 
access to the package sources, we could easily check that. Without 
reproducible examples we really cannot help.

Best,
Uwe Ligges


On 01.07.2022 09:23, Tomas Kalibera wrote:
> 
> On 6/30/22 17:45, Barbara Lerner wrote:
>> Thanks for these suggestions.? I attempted to submit a slightly
>> earlier version of my package a few weeks ago and saw the slowdown on
>> winbuilder then, too.? I did not look into any further at that point.
> 
> I was curious about repeatability to rule out the option that it was
> simply that Winbuilder was overloaded at the time of checking the package.
> 
> Is the current version that also caused the problem available anywhere?
> 
>>
>> I have tested it on a local Windows computer running 4.2.0 and I did
>> not see the slowdown there.? Here are those results:
>>
>> Name ????????user?? ?system elapsed
>>
>> prov.json 1.11 ??0.24 2.19
>>
>> prov.run??? 0.99? ??0.06 1.93
>>
>> version? R version 4.2.0 (2022-04-22 ucrt)
>>
>> os?????? Windows 10 x64 (build 19044)
>>
>> system?? x86_64, mingw32
> 
> It would be difficult to profile without being able to reproduce on a
> machine that can be used interactively and exclusively for the profiling.
> Still, you could try narrowing it down by instrumenting the package -
> adding some timings, printing the outputs, and sending such instrumented
> package to Winbuilder
> 
> Tomas
> 
> 
>>
>>
>> Tomas Kalibera wrote on 6/30/22 10:09 AM:
>>>
>>> On 6/29/22 22:25, Barbara Lerner wrote:
>>>> I have a package that I want to submit an updated version for but the
>>>> examples run too slowly on win-builder since 4.2 came out.? I just
>>>> submitted the exact same tar.gz file to all 3 versions of R
>>>> available on
>>>> win-builder and got the results shown below.? Notice the dramatic
>>>> slowdown from 4.1.3 to 4.2.1.
>>>>
>>>> I don't know how to go about tracking down the cause of this slowdown.
>>>> The examples are quite small.? I am reluctant to use \dontrun, but I am
>>>> not sure what else to do.
>>>
>>> Could you perhaps submit to Winbuilder several times (with some
>>> non-trivial delay between the runs) to see if the very long execution
>>> is reproducible?
>>>
>>> If so, the next step could be trying on a Windows machine with
>>> interactive access, to reproduce, and if it is still so slow,
>>> checking where the time is spent, using an R profiler, using some C
>>> profiler (e.g. VerySleepy is free), comparing possibly to 4.1.3. It
>>> might be useful or necessary to also do the profiling with a debug
>>> build of Windows and/or the package, while the performance numbers
>>> will be skewed, one would see the symbol names.
>>>
>>> If you wanted specific help, please send a reproducible example -
>>> instructions how to run the code and which code.
>>>
>>> Best
>>> Tomas
>>>
>>>>
>>>> June 29 2:33 PM? - old release
>>>> * using R version 4.1.3 (2022-03-10)
>>>> i386 timings
>>>> name??? user??? system??? elapsed
>>>> prov.json??? 3.28??? 0.33??? 5.19
>>>> prov.run??? 2.70??? 0.27??? 4.18
>>>>
>>>> x64 timings
>>>> name??? user??? system??? elapsed
>>>> prov.json??? 3.51??? 0.27??? 4.93
>>>> prov.run??? 3.05??? 0.28??? 4.48
>>>>
>>>>
>>>> June 29 2:19 PM? - release
>>>> * using R version 4.2.1 (2022-06-23 ucrt)
>>>> * using platform: x86_64-w64-mingw32 (64-bit)
>>>> name??? user??? system??? elapsed
>>>> prov.json??? 16.98??? 8.81??? 26.82
>>>> prov.run??? 3.53??? 0.42??? 4.89
>>>>
>>>>
>>>> June 29? 1:52 PM - devel
>>>> * using R Under development (unstable) (2022-06-28 r82534 ucrt)
>>>> * using platform: x86_64-w64-mingw32 (64-bit)
>>>> name??? user??? system??? elapsed
>>>> prov.json??? 16.60???? 9.09??? 26.66
>>>> prov.run??? 3.57??? 0.22??? 4.70 I then ran the same timing script
>>>> as win-builder uses on my Mac,
>>>> using Rscript and got these results: name??? user??? system elapsed
>>>> prov.json?????? 1.105?? 0.159?? 1.329 prov.run??????? 0.890 0.103
>>>> 1.053 session_info reports: ?version? R version 4.2.0 (2022-04-22)
>>>>  ? ?os?????? macOS Catalina 10.15.7 ?system?? x86_64, darwin17.0 I then
>>>> installed 4.2.1 on my Mac. The time is a little slower but nothing like
>>>> the slowdown on Windows.
>>>> name??? user??? system? elapsed prov.json?????? 1.286 0.230?? 3.080
>>>> prov.run??????? 0.940?? 0.108?? 1.131 ?version? R version 4.2.1
>>>> (2022-06-23) ?os?????? macOS Catalina 10.15.7 ?system x86_64,
>>>> darwin17.0
>>>>
>>
>> -- 
>> <http://www.getpostbox.com>Barbara Lerner (she / her)
>> Professor
>> Computer Science Department
>> Mount Holyoke College
>>
>> <http://www.getpostbox.com>
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From b|erner @end|ng |rom mtho|yoke@edu  Fri Jul  1 18:04:57 2022
From: b|erner @end|ng |rom mtho|yoke@edu (Barbara Lerner)
Date: Fri, 1 Jul 2022 12:04:57 -0400
Subject: [R-pkg-devel] Slowdown running examples since 4.2 on Windows
In-Reply-To: <47e31581-1866-e06c-b6fb-83f6a98b7149@statistik.tu-dortmund.de>
References: <be553b98-2057-49e0-1922-37679544eb81@mtholyoke.edu>
 <676322ff-0d24-ece2-ae0d-e7c536373dea@gmail.com>
 <d76c5510-7f48-8a47-afff-5dd35d0c825d@mtholyoke.edu>
 <9e64db22-a8ee-977b-e0d5-394cb8805bab@gmail.com>
 <47e31581-1866-e06c-b6fb-83f6a98b7149@statistik.tu-dortmund.de>
Message-ID: <0253c20b-11ab-4855-096e-74720586d228@mtholyoke.edu>

The package can be downloaded from github:

https://github.com/End-to-end-provenance/rdtLite

Barbara

Uwe Ligges wrote on 7/1/22 3:49 AM:
> And if you told us what the package is you are tasking about or gave 
> us access to the package sources, we could easily check that. Without 
> reproducible examples we really cannot help.
>
> Best,
> Uwe Ligges
>
>
> On 01.07.2022 09:23, Tomas Kalibera wrote:
>>
>> On 6/30/22 17:45, Barbara Lerner wrote:
>>> Thanks for these suggestions.? I attempted to submit a slightly
>>> earlier version of my package a few weeks ago and saw the slowdown on
>>> winbuilder then, too.? I did not look into any further at that point.
>>
>> I was curious about repeatability to rule out the option that it was
>> simply that Winbuilder was overloaded at the time of checking the 
>> package.
>>
>> Is the current version that also caused the problem available anywhere?
>>
>>>
>>> I have tested it on a local Windows computer running 4.2.0 and I did
>>> not see the slowdown there.? Here are those results:
>>>
>>> Name ????????user?? ?system elapsed
>>>
>>> prov.json 1.11 ??0.24 2.19
>>>
>>> prov.run??? 0.99? ??0.06 1.93
>>>
>>> version? R version 4.2.0 (2022-04-22 ucrt)
>>>
>>> os?????? Windows 10 x64 (build 19044)
>>>
>>> system?? x86_64, mingw32
>>
>> It would be difficult to profile without being able to reproduce on a
>> machine that can be used interactively and exclusively for the 
>> profiling.
>> Still, you could try narrowing it down by instrumenting the package -
>> adding some timings, printing the outputs, and sending such instrumented
>> package to Winbuilder
>>
>> Tomas
>>
>>
>>>
>>>
>>> Tomas Kalibera wrote on 6/30/22 10:09 AM:
>>>>
>>>> On 6/29/22 22:25, Barbara Lerner wrote:
>>>>> I have a package that I want to submit an updated version for but the
>>>>> examples run too slowly on win-builder since 4.2 came out.? I just
>>>>> submitted the exact same tar.gz file to all 3 versions of R
>>>>> available on
>>>>> win-builder and got the results shown below.? Notice the dramatic
>>>>> slowdown from 4.1.3 to 4.2.1.
>>>>>
>>>>> I don't know how to go about tracking down the cause of this 
>>>>> slowdown.
>>>>> The examples are quite small.? I am reluctant to use \dontrun, but 
>>>>> I am
>>>>> not sure what else to do.
>>>>
>>>> Could you perhaps submit to Winbuilder several times (with some
>>>> non-trivial delay between the runs) to see if the very long execution
>>>> is reproducible?
>>>>
>>>> If so, the next step could be trying on a Windows machine with
>>>> interactive access, to reproduce, and if it is still so slow,
>>>> checking where the time is spent, using an R profiler, using some C
>>>> profiler (e.g. VerySleepy is free), comparing possibly to 4.1.3. It
>>>> might be useful or necessary to also do the profiling with a debug
>>>> build of Windows and/or the package, while the performance numbers
>>>> will be skewed, one would see the symbol names.
>>>>
>>>> If you wanted specific help, please send a reproducible example -
>>>> instructions how to run the code and which code.
>>>>
>>>> Best
>>>> Tomas
>>>>
>>>>>
>>>>> June 29 2:33 PM? - old release
>>>>> * using R version 4.1.3 (2022-03-10)
>>>>> i386 timings
>>>>> name??? user??? system??? elapsed
>>>>> prov.json??? 3.28??? 0.33??? 5.19
>>>>> prov.run??? 2.70??? 0.27??? 4.18
>>>>>
>>>>> x64 timings
>>>>> name??? user??? system??? elapsed
>>>>> prov.json??? 3.51??? 0.27??? 4.93
>>>>> prov.run??? 3.05??? 0.28??? 4.48
>>>>>
>>>>>
>>>>> June 29 2:19 PM? - release
>>>>> * using R version 4.2.1 (2022-06-23 ucrt)
>>>>> * using platform: x86_64-w64-mingw32 (64-bit)
>>>>> name??? user??? system??? elapsed
>>>>> prov.json??? 16.98??? 8.81??? 26.82
>>>>> prov.run??? 3.53??? 0.42??? 4.89
>>>>>
>>>>>
>>>>> June 29? 1:52 PM - devel
>>>>> * using R Under development (unstable) (2022-06-28 r82534 ucrt)
>>>>> * using platform: x86_64-w64-mingw32 (64-bit)
>>>>> name??? user??? system??? elapsed
>>>>> prov.json??? 16.60???? 9.09??? 26.66
>>>>> prov.run??? 3.57??? 0.22??? 4.70 I then ran the same timing script
>>>>> as win-builder uses on my Mac,
>>>>> using Rscript and got these results: name??? user??? system elapsed
>>>>> prov.json?????? 1.105?? 0.159?? 1.329 prov.run??????? 0.890 0.103
>>>>> 1.053 session_info reports: ?version? R version 4.2.0 (2022-04-22)
>>>>> ?? ?os?????? macOS Catalina 10.15.7 ?system?? x86_64, darwin17.0 I 
>>>>> then
>>>>> installed 4.2.1 on my Mac. The time is a little slower but nothing 
>>>>> like
>>>>> the slowdown on Windows.
>>>>> name??? user??? system? elapsed prov.json?????? 1.286 0.230?? 3.080
>>>>> prov.run??????? 0.940?? 0.108?? 1.131 ?version? R version 4.2.1
>>>>> (2022-06-23) ?os?????? macOS Catalina 10.15.7 ?system x86_64,
>>>>> darwin17.0
>>>>>
>>>
>>> -- 
>>> <http://www.getpostbox.com>Barbara Lerner (she / her)
>>> Professor
>>> Computer Science Department
>>> Mount Holyoke College
>>>
>>> <http://www.getpostbox.com>
>> ????[[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
<http://www.getpostbox.com>Barbara Lerner (she / her)
Professor
Computer Science Department
Mount Holyoke College

<http://www.getpostbox.com>

	[[alternative HTML version deleted]]


From joh@nne@@r@nke @end|ng |rom jrwb@de  Fri Jul  1 11:10:03 2022
From: joh@nne@@r@nke @end|ng |rom jrwb@de (Johannes Ranke)
Date: Fri, 01 Jul 2022 11:10:03 +0200
Subject: [R-pkg-devel] Slow down in R 4.2.x
Message-ID: <13505960.q0Az33yFfb@ryz>

Dear list,

independent of the thread on this list about slow examples on R 4.2 on windows 
I have discovered over the last few days that some of my benchmarks (look for 
t4 and t9) run by a factor of 3 slower on R 4.2.x than on R 4.1.3 [1].

This is on Linux, using my own backported R packages for R 4.2.x and locally 
compiled versions (with default configure options) of R-4-1-branch on two 
different CPUs. The results for R 4.2.1 are only slightly modulated by the use 
of different BLAS version (openblas-serial versus atlas versus lapack).

I also tested the R 4.0.4 version that is part of Debian bullseye, it is as 
fast as the locally compiled R 4.1.3.

I went through the NEWS for R 4.2.0 (because the first slow results were 
obtained using that version), but the only change I could imagine causing such 
a change is the additional check of the length of the arguments && and ||.

Any other thoughts?

Johannes

[1] https://pkgdown.jrwb.de/mkin/articles/web_only/benchmarks.html#results 



	[[alternative HTML version deleted]]


From t@r@@@z@kh@rko @end|ng |rom uzh@ch  Fri Jul  1 14:59:22 2022
From: t@r@@@z@kh@rko @end|ng |rom uzh@ch (Taras Zakharko)
Date: Fri, 1 Jul 2022 12:59:22 +0000
Subject: [R-pkg-devel] Seeking feedback on a package before submitting to
 CRAN
Message-ID: <GV0P278MB0417D418D560D7E2519E6BEAECBD9@GV0P278MB0417.CHEP278.PROD.OUTLOOK.COM>

Dear all,?

I have written a small?lightweight utility package for R developers that implements opinionated assertion checking routines. This is mostly a drop-in replacement for base::stopifnot() but with some additional features that simplify debugging and error location. Before submitting the package on CRAN I was hoping that someone here would be so kind to have a quick look and maybe offer some feedback. The package is called "precondition" and can be found on GitHub here:

? https://github.com/tzakharko/precondition?

If you would like to leave some feedback I have created a GitHub issue just for that:?

  https://github.com/tzakharko/precondition/issues/1

Here is a quick summary as to what this package is about: it implements a thematic collection of assertion routines that check some conditions and report an informative error if the conditions are not TRUE. The routines have been inspired by similar mechanisms in the Swift programming language and discussion on the Swift design mailing lists. There are three assertion routines:

- precondition(x>0) to check inputs/environment before executing some code (to be used to check function arguments, for example)

- postcondition(.value. > 0) to check the function result?

- sanity_check(!is.null(x)) to check internal assumptions/invariants of the algorithm and guard against bugs, will immediately abort the program bypassing error handling when failed. Sanity checks are internal assertions and failing them always mean that there is a critical bug ?in the code which would make any attempt at error recovery futile

Parts of the assertion predicate can be "embraced", which will print them on assertion failure, making it easier to see what went wrong, e.g.?

? x <- 0
? precondition({{x}} > 0)
??# Error:
? # ! precondition failure
? # ! `x > 0` is not TRUE
? # ?
? # ?`x` = dbl 10

The package README has some usage examples and background discussion.?

Thank you in advance for your help,?

Taras

P.S. To anticipate the mandatory (and justified) question, the reason why I decided to roll my own solution instead of using one of the existing packages (like the popular assertthat) is because I needed something very simple and with low performance overhead to help me debug my code and document program invariants.?

From r@||@hero|d @end|ng |rom gmx@net  Sat Jul  2 12:01:38 2022
From: r@||@hero|d @end|ng |rom gmx@net (Ralf Herold)
Date: Sat, 2 Jul 2022 12:01:38 +0200
Subject: [R-pkg-devel] R CMD checks URLs formatted for LaTeX instead of
 using the non-LaTeX URLs, and fails
Message-ID: <DBA296A1-ABF8-496E-A3D2-6A2FF8B4294A@gmx.net>

Hello, in my package documentation I want to include URLs with query string parameters and anchors, within a table. A minimally reproducible example is this content in file "man/mre.Rd":

\name{mre}
\title{mre}
\description{mre}
\details{
\tabular{l}{
  \ifelse{latex}{\href{https://clinicaltrials.gov/ct2/results?cond=Infections\&rslt=With\#tableTop}{latex link}}{\href{https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop}{non-latex link}}
}}

The ifelse{}{}{} construct is necessary since ampersands in a table need to be escaped for LaTeX rendering.

Each of the following commands checks and renders the respective output correctly:

tools::checkRd("man/mre.Rd")
tools::Rd2txt("man/mre.Rd")
tools::Rd2latex("man/mre.Rd")
tools::Rd2HTML("man/mre.Rd")
system2("R", c("CMD", "Rd2pdf", "man/mre.Rd"))

However, rhub::check_for_cran() results in NOTES:

Found the following (possibly) invalid URLs:
  URL: https://clinicaltrials.gov/ct2/results?cond=Infections\&rslt=With\#tableTop
    From: man/mre.Rd
    Status: 400
    Message: Bad Request

Subsequently, CRAN maintainers refused accepting the package.

However, the underlying cause is that, during such checks, all apparent URLs are extracted from .Rd files, irrespective of any \ifelse{}{}{} constructs. This in turn is due to such checks involving calls to function ".get_urls_from_Rd" without setting its argument "ifdef" to TRUE.

Here is how to see this behaviour:

db <- tools::Rd_db(dir = ".")

# get functions
source("https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R")
source("https://svn.r-project.org/R/trunk/src/library/tools/R/utils.R")
.Rd_deparse <- tools:::.Rd_deparse
RdTags <- tools:::RdTags

# default, leading to invalid url in [1]
# > .get_urls_from_Rd(db)
# [1] "https://clinicaltrials.gov/ct2/results?cond=Infections\\&rslt=With\\#tableTop"
# [2] "https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop"

# returning relevant valid url
#> .get_urls_from_Rd(db, ifdef = TRUE)
# [1] "https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop"

This can be addressed by either:

-- changing the signature of ".get_urls_from_Rd" in line 50 in https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R to read "ifdef = TRUE". Of note, this function has a code block to handle such ifdef constructs which indicates it should be possible to use them in Rd files.

-- changing the calling function "url_db_from_package_Rd_db" to include "ifdef = TRUE" on line 178 in https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R

Please advise how to advance on this issue, thank you very much.

Greetings
Ralf


From @eb@meyer @end|ng |rom |@u@de  Sun Jul  3 01:51:05 2022
From: @eb@meyer @end|ng |rom |@u@de (Sebastian Meyer)
Date: Sun, 3 Jul 2022 01:51:05 +0200
Subject: [R-pkg-devel] R CMD checks URLs formatted for LaTeX instead of
 using the non-LaTeX URLs, and fails
In-Reply-To: <DBA296A1-ABF8-496E-A3D2-6A2FF8B4294A@gmx.net>
References: <DBA296A1-ABF8-496E-A3D2-6A2FF8B4294A@gmx.net>
Message-ID: <f4be4bbf-4ae8-e2fc-1d12-bf56bffab6b1@fau.de>

Am 02.07.22 um 12:01 schrieb Ralf Herold:
> Hello, in my package documentation I want to include URLs with query string parameters and anchors, within a table. A minimally reproducible example is this content in file "man/mre.Rd":
> 
> \name{mre}
> \title{mre}
> \description{mre}
> \details{
> \tabular{l}{
>    \ifelse{latex}{\href{https://clinicaltrials.gov/ct2/results?cond=Infections\&rslt=With\#tableTop}{latex link}}{\href{https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop}{non-latex link}}
> }}
> 
> The ifelse{}{}{} construct is necessary since ampersands in a table need to be escaped for LaTeX rendering.

This is a red herring. Ampersands do *not* need to be escaped in \href 
URLs. The problem is the hash symbol, which needs to be escaped if \href 
is nested within another markup macro, here \Tabular (from Rd.sty). This 
is a known limitation; Rd2latex will probably do the escaping in the 
future. It's good to see a use case.

I think currently the best solutions for you are to simply omit the 
#tableTop part in the LaTeX version or to not use such URLs inside a 
\tabular.

Hope this helps.
Best regards,

	Sebastian Meyer

> 
> Each of the following commands checks and renders the respective output correctly:
> 
> tools::checkRd("man/mre.Rd")
> tools::Rd2txt("man/mre.Rd")
> tools::Rd2latex("man/mre.Rd")
> tools::Rd2HTML("man/mre.Rd")
> system2("R", c("CMD", "Rd2pdf", "man/mre.Rd"))
> 
> However, rhub::check_for_cran() results in NOTES:
> 
> Found the following (possibly) invalid URLs:
>    URL: https://clinicaltrials.gov/ct2/results?cond=Infections\&rslt=With\#tableTop
>      From: man/mre.Rd
>      Status: 400
>      Message: Bad Request
> 
> Subsequently, CRAN maintainers refused accepting the package.
> 
> However, the underlying cause is that, during such checks, all apparent URLs are extracted from .Rd files, irrespective of any \ifelse{}{}{} constructs. This in turn is due to such checks involving calls to function ".get_urls_from_Rd" without setting its argument "ifdef" to TRUE.
> 
> Here is how to see this behaviour:
> 
> db <- tools::Rd_db(dir = ".")
> 
> # get functions
> source("https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R")
> source("https://svn.r-project.org/R/trunk/src/library/tools/R/utils.R")
> .Rd_deparse <- tools:::.Rd_deparse
> RdTags <- tools:::RdTags
> 
> # default, leading to invalid url in [1]
> # > .get_urls_from_Rd(db)
> # [1] "https://clinicaltrials.gov/ct2/results?cond=Infections\\&rslt=With\\#tableTop"
> # [2] "https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop"
> 
> # returning relevant valid url
> #> .get_urls_from_Rd(db, ifdef = TRUE)
> # [1] "https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop"
> 
> This can be addressed by either:
> 
> -- changing the signature of ".get_urls_from_Rd" in line 50 in https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R to read "ifdef = TRUE". Of note, this function has a code block to handle such ifdef constructs which indicates it should be possible to use them in Rd files.
> 
> -- changing the calling function "url_db_from_package_Rd_db" to include "ifdef = TRUE" on line 178 in https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R
> 
> Please advise how to advance on this issue, thank you very much.
> 
> Greetings
> Ralf
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From r@||@hero|d @end|ng |rom gmx@net  Sun Jul  3 08:27:28 2022
From: r@||@hero|d @end|ng |rom gmx@net (Ralf Herold)
Date: Sun, 3 Jul 2022 08:27:28 +0200
Subject: [R-pkg-devel] R CMD checks URLs formatted for LaTeX instead of
 using the non-LaTeX URLs, and fails
In-Reply-To: <f4be4bbf-4ae8-e2fc-1d12-bf56bffab6b1@fau.de>
References: <DBA296A1-ABF8-496E-A3D2-6A2FF8B4294A@gmx.net>
 <f4be4bbf-4ae8-e2fc-1d12-bf56bffab6b1@fau.de>
Message-ID: <F44171D0-CCE4-4049-9C52-BCC3625C2B2A@gmx.net>

Thanks Sebastian, 

but not only hash, also ampersand in \href in a tabular environment does need to be escaped, otherwise it does not latex (example below). I was not aware it is a known limitation for .Rd files despite searching for it. 

My use case (with eventually more meaningful query parameters and possibly anchors) would work if the existing R code block for handling \ifelse in urltools.R was activated as shown below, and this is my suggestion. How could I propose this? 

Kind regards,
Ralf


\name{mre}
\title{mre}
\description{mre}
\details{
\tabular{l}{
  \href{https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With}{link}
}}


LaTeX errors:

! Argument of \href at split has an extra }.
<inserted text> 
                \par 
l.24 }
      
Runaway argument?
https://clinicaltrials.gov/ct2/results?cond=Infections\unskip \hfil 
! Paragraph ended before \href at split was complete.
<to be read again> 
                   \par 
l.24 }
      
! Extra }, or forgotten \endgroup.
<recently read> }


> Am 03.07.2022 um 01:51 schrieb Sebastian Meyer <seb.meyer at fau.de>:
> 
> Am 02.07.22 um 12:01 schrieb Ralf Herold:
>> Hello, in my package documentation I want to include URLs with query string parameters and anchors, within a table. A minimally reproducible example is this content in file "man/mre.Rd":
>> \name{mre}
>> \title{mre}
>> \description{mre}
>> \details{
>> \tabular{l}{
>>   \ifelse{latex}{\href{https://clinicaltrials.gov/ct2/results?cond=Infections\&rslt=With\#tableTop}{latex link}}{\href{https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop}{non-latex link}}
>> }}
>> The ifelse{}{}{} construct is necessary since ampersands in a table need to be escaped for LaTeX rendering.
> 
> This is a red herring. Ampersands do *not* need to be escaped in \href URLs. The problem is the hash symbol, which needs to be escaped if \href is nested within another markup macro, here \Tabular (from Rd.sty). This is a known limitation; Rd2latex will probably do the escaping in the future. It's good to see a use case.
> 
> I think currently the best solutions for you are to simply omit the #tableTop part in the LaTeX version or to not use such URLs inside a \tabular.
> 
> Hope this helps.
> Best regards,
> 
> 	Sebastian Meyer
> 
>> Each of the following commands checks and renders the respective output correctly:
>> tools::checkRd("man/mre.Rd")
>> tools::Rd2txt("man/mre.Rd")
>> tools::Rd2latex("man/mre.Rd")
>> tools::Rd2HTML("man/mre.Rd")
>> system2("R", c("CMD", "Rd2pdf", "man/mre.Rd"))
>> However, rhub::check_for_cran() results in NOTES:
>> Found the following (possibly) invalid URLs:
>>   URL: https://clinicaltrials.gov/ct2/results?cond=Infections\&rslt=With\#tableTop
>>     From: man/mre.Rd
>>     Status: 400
>>     Message: Bad Request
>> Subsequently, CRAN maintainers refused accepting the package.
>> However, the underlying cause is that, during such checks, all apparent URLs are extracted from .Rd files, irrespective of any \ifelse{}{}{} constructs. This in turn is due to such checks involving calls to function ".get_urls_from_Rd" without setting its argument "ifdef" to TRUE.
>> Here is how to see this behaviour:
>> db <- tools::Rd_db(dir = ".")
>> # get functions
>> source("https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R")
>> source("https://svn.r-project.org/R/trunk/src/library/tools/R/utils.R")
>> .Rd_deparse <- tools:::.Rd_deparse
>> RdTags <- tools:::RdTags
>> # default, leading to invalid url in [1]
>> # > .get_urls_from_Rd(db)
>> # [1] "https://clinicaltrials.gov/ct2/results?cond=Infections\\&rslt=With\\#tableTop"
>> # [2] "https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop"
>> # returning relevant valid url
>> #> .get_urls_from_Rd(db, ifdef = TRUE)
>> # [1] "https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop"
>> This can be addressed by either:
>> -- changing the signature of ".get_urls_from_Rd" in line 50 in https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R to read "ifdef = TRUE". Of note, this function has a code block to handle such ifdef constructs which indicates it should be possible to use them in Rd files.
>> -- changing the calling function "url_db_from_package_Rd_db" to include "ifdef = TRUE" on line 178 in https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R
>> Please advise how to advance on this issue, thank you very much.
>> Greetings
>> Ralf
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel


	[[alternative HTML version deleted]]


From @eb@meyer @end|ng |rom |@u@de  Mon Jul  4 00:08:01 2022
From: @eb@meyer @end|ng |rom |@u@de (Sebastian Meyer)
Date: Mon, 4 Jul 2022 00:08:01 +0200
Subject: [R-pkg-devel] R CMD checks URLs formatted for LaTeX instead of
 using the non-LaTeX URLs, and fails
In-Reply-To: <F44171D0-CCE4-4049-9C52-BCC3625C2B2A@gmx.net>
References: <DBA296A1-ABF8-496E-A3D2-6A2FF8B4294A@gmx.net>
 <f4be4bbf-4ae8-e2fc-1d12-bf56bffab6b1@fau.de>
 <F44171D0-CCE4-4049-9C52-BCC3625C2B2A@gmx.net>
Message-ID: <a6797515-d9ce-06b4-ef49-83f473954e5f@fau.de>

Am 03.07.22 um 08:27 schrieb Ralf Herold:
> Thanks Sebastian,
> 
> but not only hash, also ampersand in \href in a tabular environment does 
> need to be escaped, otherwise it does not latex (example below). I was 
> not aware it is a known limitation for .Rd files despite searching for it.

I stumbled over that problem a while ago and found that the escaping 
issue for the hash symbol is documented in the hyperref manual (but 
currently not accounted for by Rd2latex):

> The special characters # and ~ do *not* need to be escaped in any way (unless the command is used in the argument of another command). 

For example, this LaTeX code fails to compile:
\emph{\href{https://example.org/#}{hash}}
In contrast, an ampersand would not need to be escaped in that LaTeX 
example.

However, I can confirm that a LaTeX error results if an ampersand is 
used in a \href URL (but not in \url} that is passed to the special 
\Tabular LaTeX command from Rd.sty that is used by Rd2latex() for 
\tabular Rd input. Thank you for the heads-up.

I think it would be good to improve Rd2latex() / Rd.sty for URLs in 
\tabular that contain & or # rather than require special LaTeX treatment 
in the Rd source. My preliminary testing shows that hyperref is happy if 
[&%#] are always escaped in URLs (sometimes it is not necessary but it 
also does not seem to hurt).

Best regards,

	Sebastian Meyer

> 
> My use case (with eventually more meaningful query parameters and 
> possibly anchors) would work if the existing R code block for handling 
> \ifelse in urltools.R was activated as shown below, and this is my 
> suggestion. How could I propose this?
> 
> Kind regards,
> Ralf
> 
> 
> \name{mre}
> \title{mre}
> \description{mre}
> \details{
> \tabular{l}{
>    
> \href{https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With 
> <https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With>}{link}
> }}
> 
> 
> LaTeX errors:
> 
> ! Argument of \href at split has an extra }.
> <inserted text>
>  ? ? ? ? ? ? ? ? \par
> l.24 }
> Runaway argument?
> https://clinicaltrials.gov/ct2/results?cond=Infections\unskip 
> <https://clinicaltrials.gov/ct2/results?cond=Infections\unskip> \hfil
> ! Paragraph ended before \href at split was complete.
> <to be read again>
>  ? ? ? ? ? ? ? ? ? ?\par
> l.24 }
> ! Extra }, or forgotten \endgroup.
> <recently read> }
> 
> 
>> Am 03.07.2022 um 01:51 schrieb Sebastian Meyer <seb.meyer at fau.de 
>> <mailto:seb.meyer at fau.de>>:
>>
>> Am 02.07.22 um 12:01 schrieb Ralf Herold:
>>> Hello, in my package documentation I want to include URLs with query 
>>> string parameters and anchors, within a table. A minimally 
>>> reproducible example is this content in file "man/mre.Rd":
>>> \name{mre}
>>> \title{mre}
>>> \description{mre}
>>> \details{
>>> \tabular{l}{
>>> ??\ifelse{latex}{\href{https://clinicaltrials.gov/ct2/results?cond=Infections\&rslt=With\#tableTop 
>>> <https://clinicaltrials.gov/ct2/results?cond=Infections\&rslt=With\#tableTop>}{latex 
>>> link}}{\href{https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop 
>>> <https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop>}{non-latex 
>>> link}}
>>> }}
>>> The ifelse{}{}{} construct is necessary since ampersands in a table 
>>> need to be escaped for LaTeX rendering.
>>
>> This is a red herring. Ampersands do *not* need to be escaped in \href 
>> URLs. The problem is the hash symbol, which needs to be escaped if 
>> \href is nested within another markup macro, here \Tabular (from 
>> Rd.sty). This is a known limitation; Rd2latex will probably do the 
>> escaping in the future. It's good to see a use case.
>>
>> I think currently the best solutions for you are to simply omit the 
>> #tableTop part in the LaTeX version or to not use such URLs inside a 
>> \tabular.
>>
>> Hope this helps.
>> Best regards,
>>
>> Sebastian Meyer
>>
>>> Each of the following commands checks and renders the respective 
>>> output correctly:
>>> tools::checkRd("man/mre.Rd")
>>> tools::Rd2txt("man/mre.Rd")
>>> tools::Rd2latex("man/mre.Rd")
>>> tools::Rd2HTML("man/mre.Rd")
>>> system2("R", c("CMD", "Rd2pdf", "man/mre.Rd"))
>>> However, rhub::check_for_cran() results in NOTES:
>>> Found the following (possibly) invalid URLs:
>>> ??URL: 
>>> https://clinicaltrials.gov/ct2/results?cond=Infections\&rslt=With\#tableTop 
>>> <https://clinicaltrials.gov/ct2/results?cond=Infections\&rslt=With\#tableTop>
>>> ????From: man/mre.Rd
>>> ????Status: 400
>>> ????Message: Bad Request
>>> Subsequently, CRAN maintainers refused accepting the package.
>>> However, the underlying cause is that, during such checks, all 
>>> apparent URLs are extracted from .Rd files, irrespective of any 
>>> \ifelse{}{}{} constructs. This in turn is due to such checks 
>>> involving calls to function ".get_urls_from_Rd" without setting its 
>>> argument "ifdef" to TRUE.
>>> Here is how to see this behaviour:
>>> db <- tools::Rd_db(dir = ".")
>>> # get functions
>>> source("https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R 
>>> <https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R>")
>>> source("https://svn.r-project.org/R/trunk/src/library/tools/R/utils.R 
>>> <https://svn.r-project.org/R/trunk/src/library/tools/R/utils.R>")
>>> .Rd_deparse <- tools:::.Rd_deparse
>>> RdTags <- tools:::RdTags
>>> # default, leading to invalid url in [1]
>>> # > .get_urls_from_Rd(db)
>>> # [1] 
>>> "https://clinicaltrials.gov/ct2/results?cond=Infections\\&rslt=With\\#tableTop 
>>> <https://clinicaltrials.gov/ct2/results?cond=Infections\\&rslt=With\\#tableTop>"
>>> # [2] 
>>> "https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop 
>>> <https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop>"
>>> # returning relevant valid url
>>> #> .get_urls_from_Rd(db, ifdef = TRUE)
>>> # [1] 
>>> "https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop 
>>> <https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop>"
>>> This can be addressed by either:
>>> -- changing the signature of ".get_urls_from_Rd" in line 50 in 
>>> https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R 
>>> <https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R> to 
>>> read "ifdef = TRUE". Of note, this function has a code block to 
>>> handle such ifdef constructs which indicates it should be possible to 
>>> use them in Rd files.
>>> -- changing the calling function "url_db_from_package_Rd_db" to 
>>> include "ifdef = TRUE" on line 178 in 
>>> https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R 
>>> <https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R>
>>> Please advise how to advance on this issue, thank you very much.
>>> Greetings
>>> Ralf
>>> ______________________________________________
>>> R-package-devel at r-project.org <mailto:R-package-devel at r-project.org> 
>>> mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel 
>>> <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
>


From A@J@God|rey @end|ng |rom m@@@ey@@c@nz  Tue Jul  5 03:59:43 2022
From: A@J@God|rey @end|ng |rom m@@@ey@@c@nz (Jonathan Godfrey)
Date: Tue, 5 Jul 2022 01:59:43 +0000
Subject: [R-pkg-devel] problem with regdmp finding v4.2.x under Windows
Message-ID: <MEAPR01MB3829E66FE3C79E43E78A401693819@MEAPR01MB3829.ausprd01.prod.outlook.com>

Hi all,

In order to support my local students and other blind users, I install every version of R and re-build every document used, almost all of which are R markdown documents.

That means re-installing or updating packages as if I was a novice user following instructions. I try to give my students a clean start experience at the beginning of semester so that we're all using the same versions, and gives me time to sort out the messes before semester begins.

To do all of that efficiently, I make extensive use of batch files (Windows user alert) and a key ingredient of those batch files is that I avoid having to edit the R version number with each installation.

I've been using a Windows utility called regdmp to look in the registry for the highest version number. Up to v4.1.3, that was working extremely well for me.

In addition, I've been investigating quarto, and have struck the same problem because quarto looks for the path to Rscript.exe using the regdmp utility. I've had help from the quarto team, and we've established that the regdmp utility should be finding a version of R if one exists. On my newish laptop where there is just one R installation (4.2.0) regdmp fails to find any installation because it has an "Access denied" error message.

On my older desktop which has multiple R installations, I do not get an "Access denied" error, quarto finds the path to the 4.2.0 installation via brute force, but regdmp via my batch files gives me 4.1.x instead.

I'm currently able to provide the service to my students I want, but only by doing all R work by explicitly naming the version of R I want used. I really do want to get back to my previous workflow so that I just install new versions of R and carry on.

I'm now seeking your advice on the differences in installation of versions 4.2.x and 4.1.x that could have an impact on the Windows registry and therefore regdmp's ability to find the relevant entries there.


Many thanks,
Jonathan








	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Tue Jul  5 10:15:05 2022
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Tue, 5 Jul 2022 11:15:05 +0300
Subject: [R-pkg-devel] problem with regdmp finding v4.2.x under Windows
In-Reply-To: <MEAPR01MB3829E66FE3C79E43E78A401693819@MEAPR01MB3829.ausprd01.prod.outlook.com>
References: <MEAPR01MB3829E66FE3C79E43E78A401693819@MEAPR01MB3829.ausprd01.prod.outlook.com>
Message-ID: <20220705111505.0ead2d07@Tarkus>

Hi Jonathan,

Since we don't have a separate "R on Windows" or "R installation
and administration" mailing list, I think that this question is a
better fit for R-help, not R-package-devel. Although R-devel could be
an option too (if we determine that the R installer is doing something
wrong), the last time R installer has been significantly changed is
2020, so the problem is likely elsewhere.

On Tue, 5 Jul 2022 01:59:43 +0000
Jonathan Godfrey <A.J.Godfrey at massey.ac.nz> wrote:

> To do all of that efficiently, I make extensive use of batch files
> (Windows user alert) and a key ingredient of those batch files is
> that I avoid having to edit the R version number with each
> installation.

Can you show us the relevant parts of the batch files?
 
> On my older desktop which has multiple R installations, I do not get
> an "Access denied" error, quarto finds the path to the 4.2.0
> installation via brute force, but regdmp via my batch files gives me
> 4.1.x instead.

What is the output of the following commands on the machines where you
have troubles finding R-4.2.x?

reg query "HKEY_LOCAL_MACHINE\Software\R-core"
reg query "HKEY_CURRENT_USER\Software\R-core"

> 	[[alternative HTML version deleted]]

This mailing list removes the HTML parts from our messages, so we only
see the automatically-generated plain text part. In this case, I think
that your message wasn't damaged at all, but sometimes (especially when
pasting code or output examples) the results can be undesirable.

-- 
Best regards,
Ivan


From murdoch@dunc@n @end|ng |rom gm@||@com  Tue Jul  5 15:35:05 2022
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Tue, 5 Jul 2022 09:35:05 -0400
Subject: [R-pkg-devel] Changing optimization level when building package?
Message-ID: <2fe007d4-f575-34e6-714c-aa28edf86887@gmail.com>

I'm trying to track down a segfault in rgl on macOS, so I need to load R 
under lldb and set breakpoints in the C++ code, examine local variables, 
etc.  Reading WRE, I thought setting CXXFLAGS=-O0 in ~/.R/Makevars would 
do minimal optimization, but I'm still getting messages about local 
variables being optimized out.  For example, here's what I see during 
compiling:

   clang++ -mmacosx-version-min=10.13 -std=gnu++11 
-I"/Library/Frameworks/R.framework/Resources/include" -DNDEBUG 
-DHAVE_PNG_H -I/usr/local/Cellar/libpng/1.6.37/include/libpng16 -DDarwin 
-I/opt/X11/include -DHAVE_FREETYPE -Iext/ftgl 
-I/usr/local/opt/freetype/include/freetype2 -Iext  -I/usr/local/include 
-O0 -fPIC  -Wall -g -O2  -c x11gui.cpp -o x11gui.o

I see the -O0 option that I added, but afterwards -O2 coming from 
somewhere in R.  I believe the second one has precedence, because I see 
this in lldb:

   (lldb) p fontnames
   error: Couldn't materialize: couldn't get the value of variable 
fontnames: no location, value may have been optimized out

If I manually run the clang++ line after editing the -O2 to -O0 before 
rebuilding, I don't have this problem, but that's really tedious.

So, my question:  how should I be asking R CMD INSTALL to use -O0?

Duncan Murdoch


From @ergue|@@oko| @end|ng |rom gm@||@com  Tue Jul  5 15:53:42 2022
From: @ergue|@@oko| @end|ng |rom gm@||@com (Sokol Serguei)
Date: Tue, 5 Jul 2022 15:53:42 +0200
Subject: [R-pkg-devel] 
 Changing optimization level when building package?
In-Reply-To: <2fe007d4-f575-34e6-714c-aa28edf86887@gmail.com>
References: <2fe007d4-f575-34e6-714c-aa28edf86887@gmail.com>
Message-ID: <b3526dc5-921d-9148-ef56-da8fdf630241@gmail.com>

Le 05/07/2022 ? 15:35, Duncan Murdoch a ?crit?:
> I'm trying to track down a segfault in rgl on macOS, so I need to load 
> R under lldb and set breakpoints in the C++ code, examine local 
> variables, etc.? Reading WRE, I thought setting CXXFLAGS=-O0 in 
> ~/.R/Makevars would do minimal optimization, but I'm still getting 
> messages about local variables being optimized out.? For example, 
> here's what I see during compiling:
>
> ? clang++ -mmacosx-version-min=10.13 -std=gnu++11 
> -I"/Library/Frameworks/R.framework/Resources/include" -DNDEBUG 
> -DHAVE_PNG_H -I/usr/local/Cellar/libpng/1.6.37/include/libpng16 
> -DDarwin -I/opt/X11/include -DHAVE_FREETYPE -Iext/ftgl 
> -I/usr/local/opt/freetype/include/freetype2 -Iext -I/usr/local/include 
> -O0 -fPIC? -Wall -g -O2? -c x11gui.cpp -o x11gui.o
>
> I see the -O0 option that I added, but afterwards -O2 coming from 
> somewhere in R.? I believe the second one has precedence, because I 
> see this in lldb:
>
> ? (lldb) p fontnames
> ? error: Couldn't materialize: couldn't get the value of variable 
> fontnames: no location, value may have been optimized out
>
> If I manually run the clang++ line after editing the -O2 to -O0 before 
> rebuilding, I don't have this problem, but that's really tedious.
>
> So, my question:? how should I be asking R CMD INSTALL to use -O0?

I use the following "hakish" solution: add in your Makevars something 
similar to:

MYFLAGS=-g -O0
%.o: %.cpp
 ?? ?$(CXX) $(ALL_CPPFLAGS) $(ALL_CXXFLAGS) $(MYFLAGS) -c $< -o $@
%.o: %.c
 ?? ?$(CC) $(ALL_CPPFLAGS) $(ALL_CFLAGS) $(MYFLAGS) -c $< -o $@
%.o: %.F
 ?? ?$(FC) $(ALL_FCFLAGS) $(MYFLAGS) -c $< -o $@

Best,
Serguei.

>
> Duncan Murdoch
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From kry|ov@r00t @end|ng |rom gm@||@com  Tue Jul  5 16:11:52 2022
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Tue, 5 Jul 2022 17:11:52 +0300
Subject: [R-pkg-devel] 
 Changing optimization level when building package?
In-Reply-To: <2fe007d4-f575-34e6-714c-aa28edf86887@gmail.com>
References: <2fe007d4-f575-34e6-714c-aa28edf86887@gmail.com>
Message-ID: <20220705171152.48710915@arachnoid>

On Tue, 5 Jul 2022 09:35:05 -0400
Duncan Murdoch <murdoch.duncan at gmail.com> wrote:

> I see the -O0 option that I added, but afterwards -O2 coming from 
> somewhere in R.

It seems to come from the CXXFLAGS macro defined in /etc/R/Makeconf.
It's the last to be added to ALL_CXXFLAGS, so you probably have to
overwrite it in ~/.R/Makevars.

-- 
Best regards,
Ivan


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Tue Jul  5 17:00:29 2022
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Tue, 5 Jul 2022 17:00:29 +0200
Subject: [R-pkg-devel] problem with regdmp finding v4.2.x under Windows
In-Reply-To: <20220705111505.0ead2d07@Tarkus>
References: <MEAPR01MB3829E66FE3C79E43E78A401693819@MEAPR01MB3829.ausprd01.prod.outlook.com>
 <20220705111505.0ead2d07@Tarkus>
Message-ID: <e113b07d-59d6-598b-2e13-d31d367820b3@statistik.tu-dortmund.de>

The installer asks you

"Save Version in Registry" with Description "Save the R version and 
install path in the Registry". If this is checked in the installation 
wizard, it should work, otherwise not.

Best,
Uwe Ligges


On 05.07.2022 10:15, Ivan Krylov wrote:
> Hi Jonathan,
> 
> Since we don't have a separate "R on Windows" or "R installation
> and administration" mailing list, I think that this question is a
> better fit for R-help, not R-package-devel. Although R-devel could be
> an option too (if we determine that the R installer is doing something
> wrong), the last time R installer has been significantly changed is
> 2020, so the problem is likely elsewhere.
> 
> On Tue, 5 Jul 2022 01:59:43 +0000
> Jonathan Godfrey <A.J.Godfrey at massey.ac.nz> wrote:
> 
>> To do all of that efficiently, I make extensive use of batch files
>> (Windows user alert) and a key ingredient of those batch files is
>> that I avoid having to edit the R version number with each
>> installation.
> 
> Can you show us the relevant parts of the batch files?
>   
>> On my older desktop which has multiple R installations, I do not get
>> an "Access denied" error, quarto finds the path to the 4.2.0
>> installation via brute force, but regdmp via my batch files gives me
>> 4.1.x instead.
> 
> What is the output of the following commands on the machines where you
> have troubles finding R-4.2.x?
> 
> reg query "HKEY_LOCAL_MACHINE\Software\R-core"
> reg query "HKEY_CURRENT_USER\Software\R-core"
> 
>> 	[[alternative HTML version deleted]]
> 
> This mailing list removes the HTML parts from our messages, so we only
> see the automatically-generated plain text part. In this case, I think
> that your message wasn't damaged at all, but sometimes (especially when
> pasting code or output examples) the results can be undesirable.
>


From kev|nu@hey @end|ng |rom gm@||@com  Tue Jul  5 19:27:55 2022
From: kev|nu@hey @end|ng |rom gm@||@com (Kevin Ushey)
Date: Tue, 5 Jul 2022 10:27:55 -0700
Subject: [R-pkg-devel] problem with regdmp finding v4.2.x under Windows
In-Reply-To: <e113b07d-59d6-598b-2e13-d31d367820b3@statistik.tu-dortmund.de>
References: <MEAPR01MB3829E66FE3C79E43E78A401693819@MEAPR01MB3829.ausprd01.prod.outlook.com>
 <20220705111505.0ead2d07@Tarkus>
 <e113b07d-59d6-598b-2e13-d31d367820b3@statistik.tu-dortmund.de>
Message-ID: <CAJXgQP0YomJOW3eiNOMqGC86yPfrRjx9ziV8PD5Rb6T50QW38Q@mail.gmail.com>

Hi Jonathan,

I'm not certain if this is the issue you're encountering, but I've
noticed that different versions of R may write to different locations
in the registry.

Right now, on my machine, I see entries for R 4.1.3 installed at:

    Computer\HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\R-core\R

And for my installation of R 4.2.1, I see it at:

    Computer\HKEY_LOCAL_MACHINE\SOFTWARE\R-core\R

Note that the registry location for R 4.2.1 is no longer part of the
WOW6432Node.

I'm not sure if this is a hiccup unique to my own local machine, but
perhaps you're seeing something similar? A way to verify would be to
check and compare what you see with:

    reg query HKEY_LOCAL_MACHINE\SOFTWARE\R-core\R /reg:32
    reg query HKEY_LOCAL_MACHINE\SOFTWARE\R-core\R /reg:64

In my case, I see:

C:\Users\kevin>reg query HKEY_LOCAL_MACHINE\SOFTWARE\R-core\R /reg:32

HKEY_LOCAL_MACHINE\SOFTWARE\R-core\R
    InstallPath    REG_SZ    C:\R\R-4.1.3
    Current Version    REG_SZ    4.1.3

C:\Users\kevin>reg query HKEY_LOCAL_MACHINE\SOFTWARE\R-core\R /reg:64

HKEY_LOCAL_MACHINE\SOFTWARE\R-core\R
    InstallPath    REG_SZ    C:\R\R-4.2.1
    Current Version    REG_SZ    4.2.1

Best,
Kevin

On Tue, Jul 5, 2022 at 8:00 AM Uwe Ligges
<ligges at statistik.tu-dortmund.de> wrote:
>
> The installer asks you
>
> "Save Version in Registry" with Description "Save the R version and
> install path in the Registry". If this is checked in the installation
> wizard, it should work, otherwise not.
>
> Best,
> Uwe Ligges
>
>
> On 05.07.2022 10:15, Ivan Krylov wrote:
> > Hi Jonathan,
> >
> > Since we don't have a separate "R on Windows" or "R installation
> > and administration" mailing list, I think that this question is a
> > better fit for R-help, not R-package-devel. Although R-devel could be
> > an option too (if we determine that the R installer is doing something
> > wrong), the last time R installer has been significantly changed is
> > 2020, so the problem is likely elsewhere.
> >
> > On Tue, 5 Jul 2022 01:59:43 +0000
> > Jonathan Godfrey <A.J.Godfrey at massey.ac.nz> wrote:
> >
> >> To do all of that efficiently, I make extensive use of batch files
> >> (Windows user alert) and a key ingredient of those batch files is
> >> that I avoid having to edit the R version number with each
> >> installation.
> >
> > Can you show us the relevant parts of the batch files?
> >
> >> On my older desktop which has multiple R installations, I do not get
> >> an "Access denied" error, quarto finds the path to the 4.2.0
> >> installation via brute force, but regdmp via my batch files gives me
> >> 4.1.x instead.
> >
> > What is the output of the following commands on the machines where you
> > have troubles finding R-4.2.x?
> >
> > reg query "HKEY_LOCAL_MACHINE\Software\R-core"
> > reg query "HKEY_CURRENT_USER\Software\R-core"
> >
> >>      [[alternative HTML version deleted]]
> >
> > This mailing list removes the HTML parts from our messages, so we only
> > see the automatically-generated plain text part. In this case, I think
> > that your message wasn't damaged at all, but sometimes (especially when
> > pasting code or output examples) the results can be undesirable.
> >
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From r@||@hero|d @end|ng |rom gmx@net  Tue Jul  5 19:56:03 2022
From: r@||@hero|d @end|ng |rom gmx@net (Ralf Herold)
Date: Tue, 5 Jul 2022 19:56:03 +0200
Subject: [R-pkg-devel] R CMD checks URLs formatted for LaTeX instead of
 using the non-LaTeX URLs, and fails
In-Reply-To: <a6797515-d9ce-06b4-ef49-83f473954e5f@fau.de>
References: <DBA296A1-ABF8-496E-A3D2-6A2FF8B4294A@gmx.net>
 <f4be4bbf-4ae8-e2fc-1d12-bf56bffab6b1@fau.de>
 <F44171D0-CCE4-4049-9C52-BCC3625C2B2A@gmx.net>
 <a6797515-d9ce-06b4-ef49-83f473954e5f@fau.de>
Message-ID: <B0D5C060-C722-46D0-BFE5-5888D352BE17@gmx.net>

Thanks and I would like to define the follow-up actions: 

1) change function "writeURL" on line 207 to read, for example, url <- fsub("([%#&])", "\\\\1",  url) in https://svn.r-project.org/R/trunk/src/library/tools/R/Rd2latex.R <https://svn.r-project.org/R/trunk/src/library/tools/R/Rd2latex.R> to always escape URLs as you mention. 

How can this be moved forward? This seems R core code, thus needs to be reported in R Bugzilla by one of its members (I am not one): https://www.r-project.org/bugs.html#where-to-submit-bug-reports-and-patches <https://www.r-project.org/bugs.html#where-to-submit-bug-reports-and-patches>. 

Could someone from this list do this? Many thanks

2) change function "url_db_from_package_Rd_db" to call  ".get_urls_from_Rd" with parameter "ifdef = TRUE" on line 178 in https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R <https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R>. This will activate the existing code that is intended to handle ifdef{}{}{}. This seems important for the issue I have reported and beyond. Same procedure as above? 

3) change Rd.sty, not sure, 1) seems more relevant. 

Please advise, thanks 

Ralf



> Am 04.07.2022 um 00:08 schrieb Sebastian Meyer <seb.meyer at fau.de>:
> 
> Am 03.07.22 um 08:27 schrieb Ralf Herold:
>> Thanks Sebastian,
>> but not only hash, also ampersand in \href in a tabular environment does need to be escaped, otherwise it does not latex (example below). I was not aware it is a known limitation for .Rd files despite searching for it.
> 
> I stumbled over that problem a while ago and found that the escaping issue for the hash symbol is documented in the hyperref manual (but currently not accounted for by Rd2latex):
> 
>> The special characters # and ~ do *not* need to be escaped in any way (unless the command is used in the argument of another command). 
> 
> For example, this LaTeX code fails to compile:
> \emph{\href{https://example.org/#}{hash}}
> In contrast, an ampersand would not need to be escaped in that LaTeX example.
> 
> However, I can confirm that a LaTeX error results if an ampersand is used in a \href URL (but not in \url} that is passed to the special \Tabular LaTeX command from Rd.sty that is used by Rd2latex() for \tabular Rd input. Thank you for the heads-up.
> 
> I think it would be good to improve Rd2latex() / Rd.sty for URLs in \tabular that contain & or # rather than require special LaTeX treatment in the Rd source. My preliminary testing shows that hyperref is happy if [&%#] are always escaped in URLs (sometimes it is not necessary but it also does not seem to hurt).
> 
> Best regards,
> 
> 	Sebastian Meyer
> 
>> My use case (with eventually more meaningful query parameters and possibly anchors) would work if the existing R code block for handling \ifelse in urltools.R was activated as shown below, and this is my suggestion. How could I propose this?
>> Kind regards,
>> Ralf
>> \name{mre}
>> \title{mre}
>> \description{mre}
>> \details{
>> \tabular{l}{
>>   \href{https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With <https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With>}{link}
>> }}
>> LaTeX errors:
>> ! Argument of \href at split has an extra }.
>> <inserted text>
>>                 \par
>> l.24 }
>> Runaway argument?
>> https://clinicaltrials.gov/ct2/results?cond=Infections\unskip <https://clinicaltrials.gov/ct2/results?cond=Infections\unskip> \hfil
>> ! Paragraph ended before \href at split was complete.
>> <to be read again>
>>                    \par
>> l.24 }
>> ! Extra }, or forgotten \endgroup.
>> <recently read> }
>>> Am 03.07.2022 um 01:51 schrieb Sebastian Meyer <seb.meyer at fau.de <mailto:seb.meyer at fau.de>>:
>>> 
>>> Am 02.07.22 um 12:01 schrieb Ralf Herold:
>>>> Hello, in my package documentation I want to include URLs with query string parameters and anchors, within a table. A minimally reproducible example is this content in file "man/mre.Rd":
>>>> \name{mre}
>>>> \title{mre}
>>>> \description{mre}
>>>> \details{
>>>> \tabular{l}{
>>>>   \ifelse{latex}{\href{https://clinicaltrials.gov/ct2/results?cond=Infections\&rslt=With\#tableTop <https://clinicaltrials.gov/ct2/results?cond=Infections\&rslt=With\#tableTop>}{latex link}}{\href{https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop <https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop>}{non-latex link}}
>>>> }}
>>>> The ifelse{}{}{} construct is necessary since ampersands in a table need to be escaped for LaTeX rendering.
>>> 
>>> This is a red herring. Ampersands do *not* need to be escaped in \href URLs. The problem is the hash symbol, which needs to be escaped if \href is nested within another markup macro, here \Tabular (from Rd.sty). This is a known limitation; Rd2latex will probably do the escaping in the future. It's good to see a use case.
>>> 
>>> I think currently the best solutions for you are to simply omit the #tableTop part in the LaTeX version or to not use such URLs inside a \tabular.
>>> 
>>> Hope this helps.
>>> Best regards,
>>> 
>>> Sebastian Meyer
>>> 
>>>> Each of the following commands checks and renders the respective output correctly:
>>>> tools::checkRd("man/mre.Rd")
>>>> tools::Rd2txt("man/mre.Rd")
>>>> tools::Rd2latex("man/mre.Rd")
>>>> tools::Rd2HTML("man/mre.Rd")
>>>> system2("R", c("CMD", "Rd2pdf", "man/mre.Rd"))
>>>> However, rhub::check_for_cran() results in NOTES:
>>>> Found the following (possibly) invalid URLs:
>>>>   URL: https://clinicaltrials.gov/ct2/results?cond=Infections\&rslt=With\#tableTop <https://clinicaltrials.gov/ct2/results?cond=Infections\&rslt=With\#tableTop>
>>>>     From: man/mre.Rd
>>>>     Status: 400
>>>>     Message: Bad Request
>>>> Subsequently, CRAN maintainers refused accepting the package.
>>>> However, the underlying cause is that, during such checks, all apparent URLs are extracted from .Rd files, irrespective of any \ifelse{}{}{} constructs. This in turn is due to such checks involving calls to function ".get_urls_from_Rd" without setting its argument "ifdef" to TRUE.
>>>> Here is how to see this behaviour:
>>>> db <- tools::Rd_db(dir = ".")
>>>> # get functions
>>>> source("https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R <https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R>")
>>>> source("https://svn.r-project.org/R/trunk/src/library/tools/R/utils.R <https://svn.r-project.org/R/trunk/src/library/tools/R/utils.R>")
>>>> .Rd_deparse <- tools:::.Rd_deparse
>>>> RdTags <- tools:::RdTags
>>>> # default, leading to invalid url in [1]
>>>> # > .get_urls_from_Rd(db)
>>>> # [1] "https://clinicaltrials.gov/ct2/results?cond=Infections\\&rslt=With\\#tableTop <https://clinicaltrials.gov/ct2/results?cond=Infections\\&rslt=With\\#tableTop>"
>>>> # [2] "https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop <https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop>"
>>>> # returning relevant valid url
>>>> #> .get_urls_from_Rd(db, ifdef = TRUE)
>>>> # [1] "https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop <https://clinicaltrials.gov/ct2/results?cond=Infections&rslt=With#tableTop>"
>>>> This can be addressed by either:
>>>> -- changing the signature of ".get_urls_from_Rd" in line 50 in https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R <https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R> to read "ifdef = TRUE". Of note, this function has a code block to handle such ifdef constructs which indicates it should be possible to use them in Rd files.
>>>> -- changing the calling function "url_db_from_package_Rd_db" to include "ifdef = TRUE" on line 178 in https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R <https://svn.r-project.org/R/trunk/src/library/tools/R/urltools.R>
>>>> Please advise how to advance on this issue, thank you very much.
>>>> Greetings
>>>> Ralf
>>>> ______________________________________________
>>>> R-package-devel at r-project.org <mailto:R-package-devel at r-project.org> mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel <https://stat.ethz.ch/mailman/listinfo/r-package-devel>


	[[alternative HTML version deleted]]


From greg @end|ng |rom ||rm@n@y@h@com  Wed Jul  6 09:27:06 2022
From: greg @end|ng |rom ||rm@n@y@h@com (Greg Hunt)
Date: Wed, 6 Jul 2022 17:27:06 +1000
Subject: [R-pkg-devel] problem with regdmp finding v4.2.x under Windows
In-Reply-To: <MEAPR01MB3829E66FE3C79E43E78A401693819@MEAPR01MB3829.ausprd01.prod.outlook.com>
References: <MEAPR01MB3829E66FE3C79E43E78A401693819@MEAPR01MB3829.ausprd01.prod.outlook.com>
Message-ID: <CAAS8PA+TmJZT6bBKKjOc5b5=BUA_d8tPuBM-YVR4YmW9oSP8hg@mail.gmail.com>

Jonathon,
Are you using a very old version of regdump?  Could it be a 32 bit
version?

Greg

On Tue, 5 Jul 2022 at 12:00, Jonathan Godfrey <A.J.Godfrey at massey.ac.nz>
wrote:

> Hi all,
>
> In order to support my local students and other blind users, I install
> every version of R and re-build every document used, almost all of which
> are R markdown documents.
>
> That means re-installing or updating packages as if I was a novice user
> following instructions. I try to give my students a clean start experience
> at the beginning of semester so that we're all using the same versions, and
> gives me time to sort out the messes before semester begins.
>
> To do all of that efficiently, I make extensive use of batch files
> (Windows user alert) and a key ingredient of those batch files is that I
> avoid having to edit the R version number with each installation.
>
> I've been using a Windows utility called regdmp to look in the registry
> for the highest version number. Up to v4.1.3, that was working extremely
> well for me.
>
> In addition, I've been investigating quarto, and have struck the same
> problem because quarto looks for the path to Rscript.exe using the regdmp
> utility. I've had help from the quarto team, and we've established that the
> regdmp utility should be finding a version of R if one exists. On my newish
> laptop where there is just one R installation (4.2.0) regdmp fails to find
> any installation because it has an "Access denied" error message.
>
> On my older desktop which has multiple R installations, I do not get an
> "Access denied" error, quarto finds the path to the 4.2.0 installation via
> brute force, but regdmp via my batch files gives me 4.1.x instead.
>
> I'm currently able to provide the service to my students I want, but only
> by doing all R work by explicitly naming the version of R I want used. I
> really do want to get back to my previous workflow so that I just install
> new versions of R and carry on.
>
> I'm now seeking your advice on the differences in installation of versions
> 4.2.x and 4.1.x that could have an impact on the Windows registry and
> therefore regdmp's ability to find the relevant entries there.
>
>
> Many thanks,
> Jonathan
>
>
>
>
>
>
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


