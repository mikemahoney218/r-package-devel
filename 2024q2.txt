From greg @end|ng |rom ||rm@n@y@h@com  Mon Apr  1 02:07:50 2024
From: greg @end|ng |rom ||rm@n@y@h@com (Greg Hunt)
Date: Mon, 1 Apr 2024 11:07:50 +1100
Subject: [R-pkg-devel] Order of repo access from options("repos")
In-Reply-To: <DS7PR10MB72772B725366224EBC69FD08FA382@DS7PR10MB7277.namprd10.prod.outlook.com>
References: <CAAS8PAJPuwDoWWJ1at5py49o0OA6GvuMxd7DW3Xy8Ze17X73Gg@mail.gmail.com>
 <26121.17883.118636.415791@rob.eddelbuettel.com>
 <CAAS8PAJP60tT2sZou4gcHFV2rynCiF1eDFDWu6Ba_trPb8hQuQ@mail.gmail.com>
 <DS7PR10MB72772B725366224EBC69FD08FA382@DS7PR10MB7277.namprd10.prod.outlook.com>
Message-ID: <CAAS8PALv8D6bq3U7J=Re0v0HX=26GzxaZM7ENAmzXW6VavZFng@mail.gmail.com>

Martin, Dirk, Kevin,
Thanks for your help.  To summarise: the order of access is undefined, and
every repo URL is accessed.   I'm working in an environment
where "known-good" is more important than "latest", so what follows is an
explanation of the problem space from my perspective.

What I am experimenting with is pinning down the versions of the packages
that a moderately complex solution is built against using a combination of
an internal repository of cached packages (internally written packages, our
own hopefully transient copies of packages archived from CRAN,
packages live on CRAN, and packages present in both Github and CRAN which
we build and cache locally) and a proxy that separately populates that
cache in specific build processes by intercepting requests to CRAN.  I'd
like to use the base R function if possible and I want to let the version
numbers in the dependencies float because a) we do need to maintain
approximate currency in what versions of packages we use and b) I have no
business monkeying around with third party's dependencies.  Renv looks
helpful but has some assumptions about disk access to its cache that I'd
rather avoid by running an internal repo.  The team is spread around the
world, so shared cache volumes are not a great idea.

The business with the multiple repo addresses is one approach to working
around Docker's inability to understand that people need to access the
Docker host's ports from inside a container or a build, and that the
current Docker treatment of the host's internal IP is far from transparent
(I have scripts that run both inside and outside of Docker containers and
they used to be able to work out for themselves what environment they run
in, thats got harder lately).  That led down a path in which one set of
addresses did not reject connection attempts, making each package
installation (and there are hundreds) take some number of minutes for the
connections to time out.  Thankfully I don't actually have to deal with
that.

We have had a few cases where our dependencies have been archived from CRAN
and we have maintained our own copy for a period of days to months, a
period in which we do not know what the next package version number is.  It
would be convenient to not have to think about that - a deterministic,
terminating search of a sequence of repos looked like a nice idea for that,
but I may have to do something different.

There was a recent case where a package made a breaking change in its
interface in a release (not version) update that broke another package we
depend on.  It would be nice to be able to temporarily pin that package at
its previous version (without updating the source of the third party
package that depends on it) to preserve our own build-ability while those
packages sort themselves out.

There is one case where a pull request for a CRAN-hosted package was
verbally accepted but never actioned so we have our own forked version of a
CRAN-hosted package which I need to decide what to do with one day soon.
Another case where the package version number is different in CRAN from the
one we want.

We have a dependency on a package that we build from a Git repo but which
is also present in CRAN.  I don't want to be dependent on the maintainers
keeping the package version in the Git copy of the DESCRIPTION file higher
than the version in CRAN.  Ideally I'd like to build and push to the
internal repo and not have to think about it after that. Same issue as
before arises, as it stands today I have to either worry about, and
probably edit, the version number in the build or manage the cache
population process so the internal package instance is added after any
CRAN-sourced dependencies and make sure that the public CRAN instances are
not accessed in the build.

All of these problems are soluble by special-casing the affected installs,
specifically managing the cache population (with a requirement that the
cache and CRAN not be searched at the same time), or editing version
numbers whose next values I do not control, but I would like to try for the
simplest approach first. I know I'm not going to get a clean solution here,
the relative weights of "known-good" and "latest" are different
depending on where you stand.


Greg

On Sun, 31 Mar 2024 at 22:43, Martin Morgan <mtmorgan.xyz at gmail.com> wrote:

> available.packages indicates that
>
>
>
>      By default, the return value includes only packages whose version
>
>      and OS requirements are met by the running version of R, and only
>
>      gives information on the latest versions of packages.
>
>
>
> So all repositories are consulted and then the result filtered to contain
> just the most recent version of each. Does it matter then what order the
> repositories are visited?
>
>
>
> Martin Morgan
>
>
>
> *From: *R-package-devel <r-package-devel-bounces at r-project.org> on behalf
> of Greg Hunt <greg at firmansyah.com>
> *Date: *Sunday, March 31, 2024 at 7:35?AM
> *To: *Dirk Eddelbuettel <edd at debian.org>
> *Cc: *List r-package-devel <r-package-devel at r-project.org>
> *Subject: *Re: [R-pkg-devel] Order of repo access from options("repos")
>
> Dirk,
> Sadly I can't use localhost for all of those.  172.17.0.1 is an internal
> Docker IP, not the localhost address (127.0.0.1), they are there to handle
> two different scenarios and different ones will fail to resolve in
> different scenarios.  Are you saying that the DNS lookup adds a timing
> issue to the search order?  Isn't the list deterministically ordered?
>
>
> Greg
>
> On Sun, 31 Mar 2024 at 22:15, Dirk Eddelbuettel <edd at debian.org> wrote:
>
> >
> > Greg,
> >
> > There are AFAICT two issues here: how R unrolls the named vector that is
> > the
> > 'repos' element in the list 'options', and how your computer resolves DNS
> > for
> > localhost vs 172.17.0.1.  I would try something like
> >
> >    options(repos = c(CRAN = "http://localhost:3001/proxy",
> >                      C = "http://localhost:3002",
> >                      B = "http://localhost:3003/proxy",
> >                      A = "http://localhost:3004"))
> >
> > or the equivalent with 172.17.0.1. When I do that here I get errors from
> > first to last as we expect:
> >
> >    > options(repos = c(CRAN = "http://localhost:3001/proxy",
> >                      C = "http://localhost:3002",
> >                      B = "http://localhost:3003/proxy",
> >                      A = "http://localhost:3004"))
> >    > available.packages()
> >    Warning: unable to access index for repository
> > http://localhost:3001/proxy/src/contrib:
> >      cannot open URL 'http://localhost:3001/proxy/src/contrib/PACKAGES'
> >    Warning: unable to access index for repository
> > http://localhost:3002/src/contrib:
> >      cannot open URL 'http://localhost:3002/src/contrib/PACKAGES'
> >    Warning: unable to access index for repository
> > http://localhost:3003/proxy/src/contrib:
> >      cannot open URL 'http://localhost:3003/proxy/src/contrib/PACKAGES'
> >    Warning: unable to access index for repository
> > http://localhost:3004/src/contrib:
> >      cannot open URL 'http://localhost:3004/src/contrib/PACKAGES'
> >         Package Version Priority Depends Imports LinkingTo Suggests
> > Enhances License License_is_FOSS License_restricts_use OS_type Archs
> MD5sum
> > NeedsCompilation File Repository
> >    >
> >
> > Dirk
> >
> > --
> > dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
> >
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Mon Apr  1 17:44:43 2024
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Mon, 1 Apr 2024 17:44:43 +0200
Subject: [R-pkg-devel] Order of repo access from options("repos")
In-Reply-To: <CAAS8PALv8D6bq3U7J=Re0v0HX=26GzxaZM7ENAmzXW6VavZFng@mail.gmail.com>
References: <CAAS8PAJPuwDoWWJ1at5py49o0OA6GvuMxd7DW3Xy8Ze17X73Gg@mail.gmail.com>
 <26121.17883.118636.415791@rob.eddelbuettel.com>
 <CAAS8PAJP60tT2sZou4gcHFV2rynCiF1eDFDWu6Ba_trPb8hQuQ@mail.gmail.com>
 <DS7PR10MB72772B725366224EBC69FD08FA382@DS7PR10MB7277.namprd10.prod.outlook.com>
 <CAAS8PALv8D6bq3U7J=Re0v0HX=26GzxaZM7ENAmzXW6VavZFng@mail.gmail.com>
Message-ID: <f3047920-6cc0-4b21-aabe-70f9a811c4ed@statistik.tu-dortmund.de>

Untested:

install.packages() calls available.packages() to find out which packages 
are available - and passes a "filters" argument if supplied.
That can be a user defined filter. It should be possible to write a user 
defined filter which prefers the packages in your local repo.

Best,
Uwe Ligges




On 01.04.2024 02:07, Greg Hunt wrote:
> Martin, Dirk, Kevin,
> Thanks for your help.  To summarise: the order of access is undefined, and
> every repo URL is accessed.   I'm working in an environment
> where "known-good" is more important than "latest", so what follows is an
> explanation of the problem space from my perspective.
> 
> What I am experimenting with is pinning down the versions of the packages
> that a moderately complex solution is built against using a combination of
> an internal repository of cached packages (internally written packages, our
> own hopefully transient copies of packages archived from CRAN,
> packages live on CRAN, and packages present in both Github and CRAN which
> we build and cache locally) and a proxy that separately populates that
> cache in specific build processes by intercepting requests to CRAN.  I'd
> like to use the base R function if possible and I want to let the version
> numbers in the dependencies float because a) we do need to maintain
> approximate currency in what versions of packages we use and b) I have no
> business monkeying around with third party's dependencies.  Renv looks
> helpful but has some assumptions about disk access to its cache that I'd
> rather avoid by running an internal repo.  The team is spread around the
> world, so shared cache volumes are not a great idea.
> 
> The business with the multiple repo addresses is one approach to working
> around Docker's inability to understand that people need to access the
> Docker host's ports from inside a container or a build, and that the
> current Docker treatment of the host's internal IP is far from transparent
> (I have scripts that run both inside and outside of Docker containers and
> they used to be able to work out for themselves what environment they run
> in, thats got harder lately).  That led down a path in which one set of
> addresses did not reject connection attempts, making each package
> installation (and there are hundreds) take some number of minutes for the
> connections to time out.  Thankfully I don't actually have to deal with
> that.
> 
> We have had a few cases where our dependencies have been archived from CRAN
> and we have maintained our own copy for a period of days to months, a
> period in which we do not know what the next package version number is.  It
> would be convenient to not have to think about that - a deterministic,
> terminating search of a sequence of repos looked like a nice idea for that,
> but I may have to do something different.
> 
> There was a recent case where a package made a breaking change in its
> interface in a release (not version) update that broke another package we
> depend on.  It would be nice to be able to temporarily pin that package at
> its previous version (without updating the source of the third party
> package that depends on it) to preserve our own build-ability while those
> packages sort themselves out.
> 
> There is one case where a pull request for a CRAN-hosted package was
> verbally accepted but never actioned so we have our own forked version of a
> CRAN-hosted package which I need to decide what to do with one day soon.
> Another case where the package version number is different in CRAN from the
> one we want.
> 
> We have a dependency on a package that we build from a Git repo but which
> is also present in CRAN.  I don't want to be dependent on the maintainers
> keeping the package version in the Git copy of the DESCRIPTION file higher
> than the version in CRAN.  Ideally I'd like to build and push to the
> internal repo and not have to think about it after that. Same issue as
> before arises, as it stands today I have to either worry about, and
> probably edit, the version number in the build or manage the cache
> population process so the internal package instance is added after any
> CRAN-sourced dependencies and make sure that the public CRAN instances are
> not accessed in the build.
> 
> All of these problems are soluble by special-casing the affected installs,
> specifically managing the cache population (with a requirement that the
> cache and CRAN not be searched at the same time), or editing version
> numbers whose next values I do not control, but I would like to try for the
> simplest approach first. I know I'm not going to get a clean solution here,
> the relative weights of "known-good" and "latest" are different
> depending on where you stand.
> 
> 
> Greg
> 
> On Sun, 31 Mar 2024 at 22:43, Martin Morgan <mtmorgan.xyz at gmail.com> wrote:
> 
>> available.packages indicates that
>>
>>
>>
>>       By default, the return value includes only packages whose version
>>
>>       and OS requirements are met by the running version of R, and only
>>
>>       gives information on the latest versions of packages.
>>
>>
>>
>> So all repositories are consulted and then the result filtered to contain
>> just the most recent version of each. Does it matter then what order the
>> repositories are visited?
>>
>>
>>
>> Martin Morgan
>>
>>
>>
>> *From: *R-package-devel <r-package-devel-bounces at r-project.org> on behalf
>> of Greg Hunt <greg at firmansyah.com>
>> *Date: *Sunday, March 31, 2024 at 7:35?AM
>> *To: *Dirk Eddelbuettel <edd at debian.org>
>> *Cc: *List r-package-devel <r-package-devel at r-project.org>
>> *Subject: *Re: [R-pkg-devel] Order of repo access from options("repos")
>>
>> Dirk,
>> Sadly I can't use localhost for all of those.  172.17.0.1 is an internal
>> Docker IP, not the localhost address (127.0.0.1), they are there to handle
>> two different scenarios and different ones will fail to resolve in
>> different scenarios.  Are you saying that the DNS lookup adds a timing
>> issue to the search order?  Isn't the list deterministically ordered?
>>
>>
>> Greg
>>
>> On Sun, 31 Mar 2024 at 22:15, Dirk Eddelbuettel <edd at debian.org> wrote:
>>
>>>
>>> Greg,
>>>
>>> There are AFAICT two issues here: how R unrolls the named vector that is
>>> the
>>> 'repos' element in the list 'options', and how your computer resolves DNS
>>> for
>>> localhost vs 172.17.0.1.  I would try something like
>>>
>>>     options(repos = c(CRAN = "http://localhost:3001/proxy",
>>>                       C = "http://localhost:3002",
>>>                       B = "http://localhost:3003/proxy",
>>>                       A = "http://localhost:3004"))
>>>
>>> or the equivalent with 172.17.0.1. When I do that here I get errors from
>>> first to last as we expect:
>>>
>>>     > options(repos = c(CRAN = "http://localhost:3001/proxy",
>>>                       C = "http://localhost:3002",
>>>                       B = "http://localhost:3003/proxy",
>>>                       A = "http://localhost:3004"))
>>>     > available.packages()
>>>     Warning: unable to access index for repository
>>> http://localhost:3001/proxy/src/contrib:
>>>       cannot open URL 'http://localhost:3001/proxy/src/contrib/PACKAGES'
>>>     Warning: unable to access index for repository
>>> http://localhost:3002/src/contrib:
>>>       cannot open URL 'http://localhost:3002/src/contrib/PACKAGES'
>>>     Warning: unable to access index for repository
>>> http://localhost:3003/proxy/src/contrib:
>>>       cannot open URL 'http://localhost:3003/proxy/src/contrib/PACKAGES'
>>>     Warning: unable to access index for repository
>>> http://localhost:3004/src/contrib:
>>>       cannot open URL 'http://localhost:3004/src/contrib/PACKAGES'
>>>          Package Version Priority Depends Imports LinkingTo Suggests
>>> Enhances License License_is_FOSS License_restricts_use OS_type Archs
>> MD5sum
>>> NeedsCompilation File Repository
>>>     >
>>>
>>> Dirk
>>>
>>> --
>>> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>>>
>>
>>          [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

From edd @end|ng |rom deb|@n@org  Tue Apr  2 14:07:14 2024
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Tue, 2 Apr 2024 07:07:14 -0500
Subject: [R-pkg-devel] Order of repo access from options("repos")
In-Reply-To: <f3047920-6cc0-4b21-aabe-70f9a811c4ed@statistik.tu-dortmund.de>
References: <CAAS8PAJPuwDoWWJ1at5py49o0OA6GvuMxd7DW3Xy8Ze17X73Gg@mail.gmail.com>
 <26121.17883.118636.415791@rob.eddelbuettel.com>
 <CAAS8PAJP60tT2sZou4gcHFV2rynCiF1eDFDWu6Ba_trPb8hQuQ@mail.gmail.com>
 <DS7PR10MB72772B725366224EBC69FD08FA382@DS7PR10MB7277.namprd10.prod.outlook.com>
 <CAAS8PALv8D6bq3U7J=Re0v0HX=26GzxaZM7ENAmzXW6VavZFng@mail.gmail.com>
 <f3047920-6cc0-4b21-aabe-70f9a811c4ed@statistik.tu-dortmund.de>
Message-ID: <26123.62706.319538.46397@rob.eddelbuettel.com>


On 1 April 2024 at 17:44, Uwe Ligges wrote:
| Untested:
| 
| install.packages() calls available.packages() to find out which packages 
| are available - and passes a "filters" argument if supplied.
| That can be a user defined filter. It should be possible to write a user 
| defined filter which prefers the packages in your local repo.

Intriguing.  Presumably that would work for update.packages() too?

(We actually have a use case at work, and as one way out I created another
side-repo to place a package with an incremented version number so it would
'win' on hightest version; this is due to some non-trivial issues with the
underlying dependencies.)

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From rhe|p @end|ng |rom eoo@@dd@@n|  Tue Apr  2 16:05:27 2024
From: rhe|p @end|ng |rom eoo@@dd@@n| (Jan van der Laan)
Date: Tue, 2 Apr 2024 16:05:27 +0200
Subject: [R-pkg-devel] Order of repo access from options("repos")
In-Reply-To: <CAAS8PALv8D6bq3U7J=Re0v0HX=26GzxaZM7ENAmzXW6VavZFng@mail.gmail.com>
References: <CAAS8PAJPuwDoWWJ1at5py49o0OA6GvuMxd7DW3Xy8Ze17X73Gg@mail.gmail.com>
 <26121.17883.118636.415791@rob.eddelbuettel.com>
 <CAAS8PAJP60tT2sZou4gcHFV2rynCiF1eDFDWu6Ba_trPb8hQuQ@mail.gmail.com>
 <DS7PR10MB72772B725366224EBC69FD08FA382@DS7PR10MB7277.namprd10.prod.outlook.com>
 <CAAS8PALv8D6bq3U7J=Re0v0HX=26GzxaZM7ENAmzXW6VavZFng@mail.gmail.com>
Message-ID: <411a7cb8-9090-472c-a2b3-64644688aa62@eoos.dds.nl>

Interesting. That would also mean that putting a company repo first does 
not protect against dependency confusion attacks (people intentionally 
uploading packages with the same name as company internal packages on 
CRAN; 
https://arstechnica.com/information-technology/2021/02/supply-chain-attack-that-fooled-apple-and-microsoft-is-attracting-copycats/) 


Jan



On 01-04-2024 02:07, Greg Hunt wrote:
> Martin, Dirk, Kevin,
> Thanks for your help.  To summarise: the order of access is undefined, and
> every repo URL is accessed.   I'm working in an environment
> where "known-good" is more important than "latest", so what follows is an
> explanation of the problem space from my perspective.
> 
> What I am experimenting with is pinning down the versions of the packages
> that a moderately complex solution is built against using a combination of
> an internal repository of cached packages (internally written packages, our
> own hopefully transient copies of packages archived from CRAN,
> packages live on CRAN, and packages present in both Github and CRAN which
> we build and cache locally) and a proxy that separately populates that
> cache in specific build processes by intercepting requests to CRAN.  I'd
> like to use the base R function if possible and I want to let the version
> numbers in the dependencies float because a) we do need to maintain
> approximate currency in what versions of packages we use and b) I have no
> business monkeying around with third party's dependencies.  Renv looks
> helpful but has some assumptions about disk access to its cache that I'd
> rather avoid by running an internal repo.  The team is spread around the
> world, so shared cache volumes are not a great idea.
> 
> The business with the multiple repo addresses is one approach to working
> around Docker's inability to understand that people need to access the
> Docker host's ports from inside a container or a build, and that the
> current Docker treatment of the host's internal IP is far from transparent
> (I have scripts that run both inside and outside of Docker containers and
> they used to be able to work out for themselves what environment they run
> in, thats got harder lately).  That led down a path in which one set of
> addresses did not reject connection attempts, making each package
> installation (and there are hundreds) take some number of minutes for the
> connections to time out.  Thankfully I don't actually have to deal with
> that.
> 
> We have had a few cases where our dependencies have been archived from CRAN
> and we have maintained our own copy for a period of days to months, a
> period in which we do not know what the next package version number is.  It
> would be convenient to not have to think about that - a deterministic,
> terminating search of a sequence of repos looked like a nice idea for that,
> but I may have to do something different.
> 
> There was a recent case where a package made a breaking change in its
> interface in a release (not version) update that broke another package we
> depend on.  It would be nice to be able to temporarily pin that package at
> its previous version (without updating the source of the third party
> package that depends on it) to preserve our own build-ability while those
> packages sort themselves out.
> 
> There is one case where a pull request for a CRAN-hosted package was
> verbally accepted but never actioned so we have our own forked version of a
> CRAN-hosted package which I need to decide what to do with one day soon.
> Another case where the package version number is different in CRAN from the
> one we want.
> 
> We have a dependency on a package that we build from a Git repo but which
> is also present in CRAN.  I don't want to be dependent on the maintainers
> keeping the package version in the Git copy of the DESCRIPTION file higher
> than the version in CRAN.  Ideally I'd like to build and push to the
> internal repo and not have to think about it after that. Same issue as
> before arises, as it stands today I have to either worry about, and
> probably edit, the version number in the build or manage the cache
> population process so the internal package instance is added after any
> CRAN-sourced dependencies and make sure that the public CRAN instances are
> not accessed in the build.
> 
> All of these problems are soluble by special-casing the affected installs,
> specifically managing the cache population (with a requirement that the
> cache and CRAN not be searched at the same time), or editing version
> numbers whose next values I do not control, but I would like to try for the
> simplest approach first. I know I'm not going to get a clean solution here,
> the relative weights of "known-good" and "latest" are different
> depending on where you stand.
> 
> 
> Greg
> 
> On Sun, 31 Mar 2024 at 22:43, Martin Morgan <mtmorgan.xyz at gmail.com> wrote:
> 
>> available.packages indicates that
>>
>>
>>
>>       By default, the return value includes only packages whose version
>>
>>       and OS requirements are met by the running version of R, and only
>>
>>       gives information on the latest versions of packages.
>>
>>
>>
>> So all repositories are consulted and then the result filtered to contain
>> just the most recent version of each. Does it matter then what order the
>> repositories are visited?
>>
>>
>>
>> Martin Morgan
>>
>>
>>
>> *From: *R-package-devel <r-package-devel-bounces at r-project.org> on behalf
>> of Greg Hunt <greg at firmansyah.com>
>> *Date: *Sunday, March 31, 2024 at 7:35?AM
>> *To: *Dirk Eddelbuettel <edd at debian.org>
>> *Cc: *List r-package-devel <r-package-devel at r-project.org>
>> *Subject: *Re: [R-pkg-devel] Order of repo access from options("repos")
>>
>> Dirk,
>> Sadly I can't use localhost for all of those.  172.17.0.1 is an internal
>> Docker IP, not the localhost address (127.0.0.1), they are there to handle
>> two different scenarios and different ones will fail to resolve in
>> different scenarios.  Are you saying that the DNS lookup adds a timing
>> issue to the search order?  Isn't the list deterministically ordered?
>>
>>
>> Greg
>>
>> On Sun, 31 Mar 2024 at 22:15, Dirk Eddelbuettel <edd at debian.org> wrote:
>>
>>>
>>> Greg,
>>>
>>> There are AFAICT two issues here: how R unrolls the named vector that is
>>> the
>>> 'repos' element in the list 'options', and how your computer resolves DNS
>>> for
>>> localhost vs 172.17.0.1.  I would try something like
>>>
>>>     options(repos = c(CRAN = "http://localhost:3001/proxy",
>>>                       C = "http://localhost:3002",
>>>                       B = "http://localhost:3003/proxy",
>>>                       A = "http://localhost:3004"))
>>>
>>> or the equivalent with 172.17.0.1. When I do that here I get errors from
>>> first to last as we expect:
>>>
>>>     > options(repos = c(CRAN = "http://localhost:3001/proxy",
>>>                       C = "http://localhost:3002",
>>>                       B = "http://localhost:3003/proxy",
>>>                       A = "http://localhost:3004"))
>>>     > available.packages()
>>>     Warning: unable to access index for repository
>>> http://localhost:3001/proxy/src/contrib:
>>>       cannot open URL 'http://localhost:3001/proxy/src/contrib/PACKAGES'
>>>     Warning: unable to access index for repository
>>> http://localhost:3002/src/contrib:
>>>       cannot open URL 'http://localhost:3002/src/contrib/PACKAGES'
>>>     Warning: unable to access index for repository
>>> http://localhost:3003/proxy/src/contrib:
>>>       cannot open URL 'http://localhost:3003/proxy/src/contrib/PACKAGES'
>>>     Warning: unable to access index for repository
>>> http://localhost:3004/src/contrib:
>>>       cannot open URL 'http://localhost:3004/src/contrib/PACKAGES'
>>>          Package Version Priority Depends Imports LinkingTo Suggests
>>> Enhances License License_is_FOSS License_restricts_use OS_type Archs
>> MD5sum
>>> NeedsCompilation File Repository
>>>     >
>>>
>>> Dirk
>>>
>>> --
>>> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>>>
>>
>>          [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From greg @end|ng |rom ||rm@n@y@h@com  Wed Apr  3 01:24:22 2024
From: greg @end|ng |rom ||rm@n@y@h@com (Greg Hunt)
Date: Wed, 3 Apr 2024 10:24:22 +1100
Subject: [R-pkg-devel] Order of repo access from options("repos")
In-Reply-To: <411a7cb8-9090-472c-a2b3-64644688aa62@eoos.dds.nl>
References: <CAAS8PAJPuwDoWWJ1at5py49o0OA6GvuMxd7DW3Xy8Ze17X73Gg@mail.gmail.com>
 <26121.17883.118636.415791@rob.eddelbuettel.com>
 <CAAS8PAJP60tT2sZou4gcHFV2rynCiF1eDFDWu6Ba_trPb8hQuQ@mail.gmail.com>
 <DS7PR10MB72772B725366224EBC69FD08FA382@DS7PR10MB7277.namprd10.prod.outlook.com>
 <CAAS8PALv8D6bq3U7J=Re0v0HX=26GzxaZM7ENAmzXW6VavZFng@mail.gmail.com>
 <411a7cb8-9090-472c-a2b3-64644688aa62@eoos.dds.nl>
Message-ID: <CAAS8PAJXMaX8C9CB0-hDQNLZD2NTgsTtpQL8DEnMJiLf0Kez0g@mail.gmail.com>

Jan,
Thats only the case if you want to allow later version numbers to override
the versions in the internal repository, the "known-good" is more important
than "latest" point above.

Having a defined set of dependencies while still maintaining currency is a
difficult problem.  Always fetching dependencies from a public source is a
very bad idea (which is why I am looking at these issues), but not doing it
accumulates future costs as interfaces and sets of bugs evolve and need to
be remediated.  Those future costs can become very large indeed in a large
system.

Compounding the problem, CRAN caching is not supported universally by
commercial infrastructure.  I think Artifactory and Nexus do it, the AWS
and Azure offerings don't.


Greg

On Wed, 3 Apr 2024 at 01:05, Jan van der Laan <rhelp at eoos.dds.nl> wrote:

> Interesting. That would also mean that putting a company repo first does
> not protect against dependency confusion attacks (people intentionally
> uploading packages with the same name as company internal packages on
> CRAN;
>
> https://arstechnica.com/information-technology/2021/02/supply-chain-attack-that-fooled-apple-and-microsoft-is-attracting-copycats/)
>
>
>
> Jan
>
>
>
> On 01-04-2024 02:07, Greg Hunt wrote:
> > Martin, Dirk, Kevin,
> > Thanks for your help.  To summarise: the order of access is undefined,
> and
> > every repo URL is accessed.   I'm working in an environment
> > where "known-good" is more important than "latest", so what follows is an
> > explanation of the problem space from my perspective.
> >
> > What I am experimenting with is pinning down the versions of the packages
> > that a moderately complex solution is built against using a combination
> of
> > an internal repository of cached packages (internally written packages,
> our
> > own hopefully transient copies of packages archived from CRAN,
> > packages live on CRAN, and packages present in both Github and CRAN which
> > we build and cache locally) and a proxy that separately populates that
> > cache in specific build processes by intercepting requests to CRAN.  I'd
> > like to use the base R function if possible and I want to let the version
> > numbers in the dependencies float because a) we do need to maintain
> > approximate currency in what versions of packages we use and b) I have no
> > business monkeying around with third party's dependencies.  Renv looks
> > helpful but has some assumptions about disk access to its cache that I'd
> > rather avoid by running an internal repo.  The team is spread around the
> > world, so shared cache volumes are not a great idea.
> >
> > The business with the multiple repo addresses is one approach to working
> > around Docker's inability to understand that people need to access the
> > Docker host's ports from inside a container or a build, and that the
> > current Docker treatment of the host's internal IP is far from
> transparent
> > (I have scripts that run both inside and outside of Docker containers and
> > they used to be able to work out for themselves what environment they run
> > in, thats got harder lately).  That led down a path in which one set of
> > addresses did not reject connection attempts, making each package
> > installation (and there are hundreds) take some number of minutes for the
> > connections to time out.  Thankfully I don't actually have to deal with
> > that.
> >
> > We have had a few cases where our dependencies have been archived from
> CRAN
> > and we have maintained our own copy for a period of days to months, a
> > period in which we do not know what the next package version number is.
> It
> > would be convenient to not have to think about that - a deterministic,
> > terminating search of a sequence of repos looked like a nice idea for
> that,
> > but I may have to do something different.
> >
> > There was a recent case where a package made a breaking change in its
> > interface in a release (not version) update that broke another package we
> > depend on.  It would be nice to be able to temporarily pin that package
> at
> > its previous version (without updating the source of the third party
> > package that depends on it) to preserve our own build-ability while those
> > packages sort themselves out.
> >
> > There is one case where a pull request for a CRAN-hosted package was
> > verbally accepted but never actioned so we have our own forked version
> of a
> > CRAN-hosted package which I need to decide what to do with one day soon.
> > Another case where the package version number is different in CRAN from
> the
> > one we want.
> >
> > We have a dependency on a package that we build from a Git repo but which
> > is also present in CRAN.  I don't want to be dependent on the maintainers
> > keeping the package version in the Git copy of the DESCRIPTION file
> higher
> > than the version in CRAN.  Ideally I'd like to build and push to the
> > internal repo and not have to think about it after that. Same issue as
> > before arises, as it stands today I have to either worry about, and
> > probably edit, the version number in the build or manage the cache
> > population process so the internal package instance is added after any
> > CRAN-sourced dependencies and make sure that the public CRAN instances
> are
> > not accessed in the build.
> >
> > All of these problems are soluble by special-casing the affected
> installs,
> > specifically managing the cache population (with a requirement that the
> > cache and CRAN not be searched at the same time), or editing version
> > numbers whose next values I do not control, but I would like to try for
> the
> > simplest approach first. I know I'm not going to get a clean solution
> here,
> > the relative weights of "known-good" and "latest" are different
> > depending on where you stand.
> >
> >
> > Greg
> >
> > On Sun, 31 Mar 2024 at 22:43, Martin Morgan <mtmorgan.xyz at gmail.com>
> wrote:
> >
> >> available.packages indicates that
> >>
> >>
> >>
> >>       By default, the return value includes only packages whose version
> >>
> >>       and OS requirements are met by the running version of R, and only
> >>
> >>       gives information on the latest versions of packages.
> >>
> >>
> >>
> >> So all repositories are consulted and then the result filtered to
> contain
> >> just the most recent version of each. Does it matter then what order the
> >> repositories are visited?
> >>
> >>
> >>
> >> Martin Morgan
> >>
> >>
> >>
> >> *From: *R-package-devel <r-package-devel-bounces at r-project.org> on
> behalf
> >> of Greg Hunt <greg at firmansyah.com>
> >> *Date: *Sunday, March 31, 2024 at 7:35?AM
> >> *To: *Dirk Eddelbuettel <edd at debian.org>
> >> *Cc: *List r-package-devel <r-package-devel at r-project.org>
> >> *Subject: *Re: [R-pkg-devel] Order of repo access from options("repos")
> >>
> >> Dirk,
> >> Sadly I can't use localhost for all of those.  172.17.0.1 is an internal
> >> Docker IP, not the localhost address (127.0.0.1), they are there to
> handle
> >> two different scenarios and different ones will fail to resolve in
> >> different scenarios.  Are you saying that the DNS lookup adds a timing
> >> issue to the search order?  Isn't the list deterministically ordered?
> >>
> >>
> >> Greg
> >>
> >> On Sun, 31 Mar 2024 at 22:15, Dirk Eddelbuettel <edd at debian.org> wrote:
> >>
> >>>
> >>> Greg,
> >>>
> >>> There are AFAICT two issues here: how R unrolls the named vector that
> is
> >>> the
> >>> 'repos' element in the list 'options', and how your computer resolves
> DNS
> >>> for
> >>> localhost vs 172.17.0.1.  I would try something like
> >>>
> >>>     options(repos = c(CRAN = "http://localhost:3001/proxy",
> >>>                       C = "http://localhost:3002",
> >>>                       B = "http://localhost:3003/proxy",
> >>>                       A = "http://localhost:3004"))
> >>>
> >>> or the equivalent with 172.17.0.1. When I do that here I get errors
> from
> >>> first to last as we expect:
> >>>
> >>>     > options(repos = c(CRAN = "http://localhost:3001/proxy",
> >>>                       C = "http://localhost:3002",
> >>>                       B = "http://localhost:3003/proxy",
> >>>                       A = "http://localhost:3004"))
> >>>     > available.packages()
> >>>     Warning: unable to access index for repository
> >>> http://localhost:3001/proxy/src/contrib:
> >>>       cannot open URL '
> http://localhost:3001/proxy/src/contrib/PACKAGES'
> >>>     Warning: unable to access index for repository
> >>> http://localhost:3002/src/contrib:
> >>>       cannot open URL 'http://localhost:3002/src/contrib/PACKAGES'
> >>>     Warning: unable to access index for repository
> >>> http://localhost:3003/proxy/src/contrib:
> >>>       cannot open URL '
> http://localhost:3003/proxy/src/contrib/PACKAGES'
> >>>     Warning: unable to access index for repository
> >>> http://localhost:3004/src/contrib:
> >>>       cannot open URL 'http://localhost:3004/src/contrib/PACKAGES'
> >>>          Package Version Priority Depends Imports LinkingTo Suggests
> >>> Enhances License License_is_FOSS License_restricts_use OS_type Archs
> >> MD5sum
> >>> NeedsCompilation File Repository
> >>>     >
> >>>
> >>> Dirk
> >>>
> >>> --
> >>> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
> >>>
> >>
> >>          [[alternative HTML version deleted]]
> >>
> >> ______________________________________________
> >> R-package-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Wed Apr  3 01:30:55 2024
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Wed, 3 Apr 2024 01:30:55 +0200
Subject: [R-pkg-devel] Order of repo access from options("repos")
In-Reply-To: <26123.62706.319538.46397@rob.eddelbuettel.com>
References: <CAAS8PAJPuwDoWWJ1at5py49o0OA6GvuMxd7DW3Xy8Ze17X73Gg@mail.gmail.com>
 <26121.17883.118636.415791@rob.eddelbuettel.com>
 <CAAS8PAJP60tT2sZou4gcHFV2rynCiF1eDFDWu6Ba_trPb8hQuQ@mail.gmail.com>
 <DS7PR10MB72772B725366224EBC69FD08FA382@DS7PR10MB7277.namprd10.prod.outlook.com>
 <CAAS8PALv8D6bq3U7J=Re0v0HX=26GzxaZM7ENAmzXW6VavZFng@mail.gmail.com>
 <f3047920-6cc0-4b21-aabe-70f9a811c4ed@statistik.tu-dortmund.de>
 <26123.62706.319538.46397@rob.eddelbuettel.com>
Message-ID: <48c6194f-5534-4437-bd3b-b8b558fb6610@statistik.tu-dortmund.de>



On 02.04.2024 14:07, Dirk Eddelbuettel wrote:
> 
> On 1 April 2024 at 17:44, Uwe Ligges wrote:
> | Untested:
> |
> | install.packages() calls available.packages() to find out which packages
> | are available - and passes a "filters" argument if supplied.
> | That can be a user defined filter. It should be possible to write a user
> | defined filter which prefers the packages in your local repo.
> 
> Intriguing.  Presumably that would work for update.packages() too?

Yes. I think so.

Best,
Uwe


> 
> (We actually have a use case at work, and as one way out I created another
> side-repo to place a package with an incremented version number so it would
> 'win' on hightest version; this is due to some non-trivial issues with the
> underlying dependencies.)
> 
> Dirk
> 

From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Wed Apr  3 01:40:09 2024
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Wed, 3 Apr 2024 01:40:09 +0200
Subject: [R-pkg-devel] Order of repo access from options("repos")
In-Reply-To: <411a7cb8-9090-472c-a2b3-64644688aa62@eoos.dds.nl>
References: <CAAS8PAJPuwDoWWJ1at5py49o0OA6GvuMxd7DW3Xy8Ze17X73Gg@mail.gmail.com>
 <26121.17883.118636.415791@rob.eddelbuettel.com>
 <CAAS8PAJP60tT2sZou4gcHFV2rynCiF1eDFDWu6Ba_trPb8hQuQ@mail.gmail.com>
 <DS7PR10MB72772B725366224EBC69FD08FA382@DS7PR10MB7277.namprd10.prod.outlook.com>
 <CAAS8PALv8D6bq3U7J=Re0v0HX=26GzxaZM7ENAmzXW6VavZFng@mail.gmail.com>
 <411a7cb8-9090-472c-a2b3-64644688aa62@eoos.dds.nl>
Message-ID: <eb8fa103-cd4f-4267-8705-a26c6736a1f3@statistik.tu-dortmund.de>

If your company is going to ensure that a package called pkgCompany is 
only looked for in a local repo by installl.packages() and friends,
I think in your cpmpany wide R installation you can set the option 
"available_packages_filters" to a self written one that is exclusively 
reporting results from the local repo for 'pkgCompany'.

Of course, this is not safe and can be overwritten by e user etc., but 
it needs quite some effort to trick people this way in using a malicious 
package from another repo. It would be simpler for attackers to persuade 
people to install the malicious software directly, I believe.

Best,
Uwe Ligges









On 02.04.2024 16:05, Jan van der Laan wrote:
> Interesting. That would also mean that putting a company repo first does 
> not protect against dependency confusion attacks (people intentionally 
> uploading packages with the same name as company internal packages on 
> CRAN; 
> https://arstechnica.com/information-technology/2021/02/supply-chain-attack-that-fooled-apple-and-microsoft-is-attracting-copycats/)
> 
> Jan
> 
> 
> 
> On 01-04-2024 02:07, Greg Hunt wrote:
>> Martin, Dirk, Kevin,
>> Thanks for your help.? To summarise: the order of access is undefined, 
>> and
>> every repo URL is accessed.?? I'm working in an environment
>> where "known-good" is more important than "latest", so what follows is an
>> explanation of the problem space from my perspective.
>>
>> What I am experimenting with is pinning down the versions of the packages
>> that a moderately complex solution is built against using a 
>> combination of
>> an internal repository of cached packages (internally written 
>> packages, our
>> own hopefully transient copies of packages archived from CRAN,
>> packages live on CRAN, and packages present in both Github and CRAN which
>> we build and cache locally) and a proxy that separately populates that
>> cache in specific build processes by intercepting requests to CRAN.? I'd
>> like to use the base R function if possible and I want to let the version
>> numbers in the dependencies float because a) we do need to maintain
>> approximate currency in what versions of packages we use and b) I have no
>> business monkeying around with third party's dependencies.? Renv looks
>> helpful but has some assumptions about disk access to its cache that I'd
>> rather avoid by running an internal repo.? The team is spread around the
>> world, so shared cache volumes are not a great idea.
>>
>> The business with the multiple repo addresses is one approach to working
>> around Docker's inability to understand that people need to access the
>> Docker host's ports from inside a container or a build, and that the
>> current Docker treatment of the host's internal IP is far from 
>> transparent
>> (I have scripts that run both inside and outside of Docker containers and
>> they used to be able to work out for themselves what environment they run
>> in, thats got harder lately).? That led down a path in which one set of
>> addresses did not reject connection attempts, making each package
>> installation (and there are hundreds) take some number of minutes for the
>> connections to time out.? Thankfully I don't actually have to deal with
>> that.
>>
>> We have had a few cases where our dependencies have been archived from 
>> CRAN
>> and we have maintained our own copy for a period of days to months, a
>> period in which we do not know what the next package version number 
>> is.? It
>> would be convenient to not have to think about that - a deterministic,
>> terminating search of a sequence of repos looked like a nice idea for 
>> that,
>> but I may have to do something different.
>>
>> There was a recent case where a package made a breaking change in its
>> interface in a release (not version) update that broke another package we
>> depend on.? It would be nice to be able to temporarily pin that 
>> package at
>> its previous version (without updating the source of the third party
>> package that depends on it) to preserve our own build-ability while those
>> packages sort themselves out.
>>
>> There is one case where a pull request for a CRAN-hosted package was
>> verbally accepted but never actioned so we have our own forked version 
>> of a
>> CRAN-hosted package which I need to decide what to do with one day soon.
>> Another case where the package version number is different in CRAN 
>> from the
>> one we want.
>>
>> We have a dependency on a package that we build from a Git repo but which
>> is also present in CRAN.? I don't want to be dependent on the maintainers
>> keeping the package version in the Git copy of the DESCRIPTION file 
>> higher
>> than the version in CRAN.? Ideally I'd like to build and push to the
>> internal repo and not have to think about it after that. Same issue as
>> before arises, as it stands today I have to either worry about, and
>> probably edit, the version number in the build or manage the cache
>> population process so the internal package instance is added after any
>> CRAN-sourced dependencies and make sure that the public CRAN instances 
>> are
>> not accessed in the build.
>>
>> All of these problems are soluble by special-casing the affected 
>> installs,
>> specifically managing the cache population (with a requirement that the
>> cache and CRAN not be searched at the same time), or editing version
>> numbers whose next values I do not control, but I would like to try 
>> for the
>> simplest approach first. I know I'm not going to get a clean solution 
>> here,
>> the relative weights of "known-good" and "latest" are different
>> depending on where you stand.
>>
>>
>> Greg
>>
>> On Sun, 31 Mar 2024 at 22:43, Martin Morgan <mtmorgan.xyz at gmail.com> 
>> wrote:
>>
>>> available.packages indicates that
>>>
>>>
>>>
>>> ????? By default, the return value includes only packages whose version
>>>
>>> ????? and OS requirements are met by the running version of R, and only
>>>
>>> ????? gives information on the latest versions of packages.
>>>
>>>
>>>
>>> So all repositories are consulted and then the result filtered to 
>>> contain
>>> just the most recent version of each. Does it matter then what order the
>>> repositories are visited?
>>>
>>>
>>>
>>> Martin Morgan
>>>
>>>
>>>
>>> *From: *R-package-devel <r-package-devel-bounces at r-project.org> on 
>>> behalf
>>> of Greg Hunt <greg at firmansyah.com>
>>> *Date: *Sunday, March 31, 2024 at 7:35?AM
>>> *To: *Dirk Eddelbuettel <edd at debian.org>
>>> *Cc: *List r-package-devel <r-package-devel at r-project.org>
>>> *Subject: *Re: [R-pkg-devel] Order of repo access from options("repos")
>>>
>>> Dirk,
>>> Sadly I can't use localhost for all of those.? 172.17.0.1 is an internal
>>> Docker IP, not the localhost address (127.0.0.1), they are there to 
>>> handle
>>> two different scenarios and different ones will fail to resolve in
>>> different scenarios.? Are you saying that the DNS lookup adds a timing
>>> issue to the search order?? Isn't the list deterministically ordered?
>>>
>>>
>>> Greg
>>>
>>> On Sun, 31 Mar 2024 at 22:15, Dirk Eddelbuettel <edd at debian.org> wrote:
>>>
>>>>
>>>> Greg,
>>>>
>>>> There are AFAICT two issues here: how R unrolls the named vector 
>>>> that is
>>>> the
>>>> 'repos' element in the list 'options', and how your computer 
>>>> resolves DNS
>>>> for
>>>> localhost vs 172.17.0.1.? I would try something like
>>>>
>>>> ??? options(repos = c(CRAN = "http://localhost:3001/proxy",
>>>> ????????????????????? C = "http://localhost:3002",
>>>> ????????????????????? B = "http://localhost:3003/proxy",
>>>> ????????????????????? A = "http://localhost:3004"))
>>>>
>>>> or the equivalent with 172.17.0.1. When I do that here I get errors 
>>>> from
>>>> first to last as we expect:
>>>>
>>>> ??? > options(repos = c(CRAN = "http://localhost:3001/proxy",
>>>> ????????????????????? C = "http://localhost:3002",
>>>> ????????????????????? B = "http://localhost:3003/proxy",
>>>> ????????????????????? A = "http://localhost:3004"))
>>>> ??? > available.packages()
>>>> ??? Warning: unable to access index for repository
>>>> http://localhost:3001/proxy/src/contrib:
>>>> ????? cannot open URL 
>>>> 'http://localhost:3001/proxy/src/contrib/PACKAGES'
>>>> ??? Warning: unable to access index for repository
>>>> http://localhost:3002/src/contrib:
>>>> ????? cannot open URL 'http://localhost:3002/src/contrib/PACKAGES'
>>>> ??? Warning: unable to access index for repository
>>>> http://localhost:3003/proxy/src/contrib:
>>>> ????? cannot open URL 
>>>> 'http://localhost:3003/proxy/src/contrib/PACKAGES'
>>>> ??? Warning: unable to access index for repository
>>>> http://localhost:3004/src/contrib:
>>>> ????? cannot open URL 'http://localhost:3004/src/contrib/PACKAGES'
>>>> ???????? Package Version Priority Depends Imports LinkingTo Suggests
>>>> Enhances License License_is_FOSS License_restricts_use OS_type Archs
>>> MD5sum
>>>> NeedsCompilation File Repository
>>>> ??? >
>>>>
>>>> Dirk
>>>>
>>>> -- 
>>>> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>>>>
>>>
>>> ???????? [[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>>
>> ????[[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

From greg @end|ng |rom ||rm@n@y@h@com  Wed Apr  3 22:37:36 2024
From: greg @end|ng |rom ||rm@n@y@h@com (Greg Hunt)
Date: Thu, 4 Apr 2024 07:37:36 +1100
Subject: [R-pkg-devel] Package vulnerabilities
In-Reply-To: <eb8fa103-cd4f-4267-8705-a26c6736a1f3@statistik.tu-dortmund.de>
References: <CAAS8PAJPuwDoWWJ1at5py49o0OA6GvuMxd7DW3Xy8Ze17X73Gg@mail.gmail.com>
 <26121.17883.118636.415791@rob.eddelbuettel.com>
 <CAAS8PAJP60tT2sZou4gcHFV2rynCiF1eDFDWu6Ba_trPb8hQuQ@mail.gmail.com>
 <DS7PR10MB72772B725366224EBC69FD08FA382@DS7PR10MB7277.namprd10.prod.outlook.com>
 <CAAS8PALv8D6bq3U7J=Re0v0HX=26GzxaZM7ENAmzXW6VavZFng@mail.gmail.com>
 <411a7cb8-9090-472c-a2b3-64644688aa62@eoos.dds.nl>
 <eb8fa103-cd4f-4267-8705-a26c6736a1f3@statistik.tu-dortmund.de>
Message-ID: <CAAS8PAKjxRUsTrPsLUEN2s967m6Pc2ZDmtVLKeoQp_+8_45Mmw@mail.gmail.com>

Uwe,
Whether it takes a lot of effort to get malicious code into a company
depends on the pay-off, which can be large relative to the effort.  The
example of the hack before was largely interesting because the priorities
of the package users were fundamentally insecure (higher version number
wins, defaulting to public repositories) and the specific package names
meant that the hack was narrowly targeted, making it less likely to be
discovered than exfiltration code inserted into a widely used package.
Having an identifiable set of package dependencies at any point in time is
a beginning.  Its difficult to effectively control developer behaviour, so
there is a risk there, but what makes it into production can in principle
be identified and controlled.

I had a look at the CVE database, its difficult to identify R package
vulnerabilities there.  Some other searching turned up a couple of
vulnerabilities and some rather promotional blog posts, one of which
asserted that R code is almost always run in controlled environments, which
was sadly hilarious.

Is there a source of vulnerability information for R packages?  Are there
or have there been examples of actually malicious R packages in the wild?


Greg

	[[alternative HTML version deleted]]


From bbo|ker @end|ng |rom gm@||@com  Wed Apr  3 23:20:25 2024
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Wed, 3 Apr 2024 17:20:25 -0400
Subject: [R-pkg-devel] Package vulnerabilities
In-Reply-To: <CAAS8PAKjxRUsTrPsLUEN2s967m6Pc2ZDmtVLKeoQp_+8_45Mmw@mail.gmail.com>
References: <CAAS8PAJPuwDoWWJ1at5py49o0OA6GvuMxd7DW3Xy8Ze17X73Gg@mail.gmail.com>
 <26121.17883.118636.415791@rob.eddelbuettel.com>
 <CAAS8PAJP60tT2sZou4gcHFV2rynCiF1eDFDWu6Ba_trPb8hQuQ@mail.gmail.com>
 <DS7PR10MB72772B725366224EBC69FD08FA382@DS7PR10MB7277.namprd10.prod.outlook.com>
 <CAAS8PALv8D6bq3U7J=Re0v0HX=26GzxaZM7ENAmzXW6VavZFng@mail.gmail.com>
 <411a7cb8-9090-472c-a2b3-64644688aa62@eoos.dds.nl>
 <eb8fa103-cd4f-4267-8705-a26c6736a1f3@statistik.tu-dortmund.de>
 <CAAS8PAKjxRUsTrPsLUEN2s967m6Pc2ZDmtVLKeoQp_+8_45Mmw@mail.gmail.com>
Message-ID: <81c96bf9-0b8b-403d-994b-46aa57793b99@gmail.com>

   FWIW there is a repo for R advisories.

https://github.com/RConsortium/r-advisory-database

  with a front-end here

https://osv.dev/list?ecosystem=CRAN&q=

   At present all of the *reported* vulnerabilities seem to be caused by 
problems with underlying/bundled libraries ...

On 2024-04-03 4:37 p.m., Greg Hunt wrote:
> Uwe,
> Whether it takes a lot of effort to get malicious code into a company
> depends on the pay-off, which can be large relative to the effort.  The
> example of the hack before was largely interesting because the priorities
> of the package users were fundamentally insecure (higher version number
> wins, defaulting to public repositories) and the specific package names
> meant that the hack was narrowly targeted, making it less likely to be
> discovered than exfiltration code inserted into a widely used package.
> Having an identifiable set of package dependencies at any point in time is
> a beginning.  Its difficult to effectively control developer behaviour, so
> there is a risk there, but what makes it into production can in principle
> be identified and controlled.
> 
> I had a look at the CVE database, its difficult to identify R package
> vulnerabilities there.  Some other searching turned up a couple of
> vulnerabilities and some rather promotional blog posts, one of which
> asserted that R code is almost always run in controlled environments, which
> was sadly hilarious.
> 
> Is there a source of vulnerability information for R packages?  Are there
> or have there been examples of actually malicious R packages in the wild?
> 
> 
> Greg
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From Sergej@Ru|| @end|ng |rom t|ho-h@nnover@de  Sat Apr  6 20:27:24 2024
From: Sergej@Ru|| @end|ng |rom t|ho-h@nnover@de (Ruff, Sergej)
Date: Sat, 6 Apr 2024 18:27:24 +0000
Subject: [R-pkg-devel] Linking Tutorial Site to CRAN Package site.
Message-ID: <e9892ae5abbd41048cb770db27f5e927@tiho-hannover.de>

Hello,


I was wondering if its possible to link the toturial site for a package on the CRAN Cite to the package?

I want to publish the next version of our package.

The CRAN site (https://cran.r-project.org/web/packages/RepeatedHighDim/index.html) has a "documentation" part with the refrence pdf.

Can I link to our tutorial site (https://software.klausjung-lab.de/.) under documentation?


Sergej

	[[alternative HTML version deleted]]


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Sun Apr  7 01:20:40 2024
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Sun, 7 Apr 2024 01:20:40 +0200
Subject: [R-pkg-devel] Linking Tutorial Site to CRAN Package site.
In-Reply-To: <e9892ae5abbd41048cb770db27f5e927@tiho-hannover.de>
References: <e9892ae5abbd41048cb770db27f5e927@tiho-hannover.de>
Message-ID: <9b657250-0b14-477c-b609-a844f9680610@statistik.tu-dortmund.de>

Use the URL firld of the package.

Best,
Uwe Ligges


On 06.04.2024 20:27, Ruff, Sergej wrote:
> Hello,
> 
> 
> I was wondering if its possible to link the toturial site for a package on the CRAN Cite to the package?
> 
> I want to publish the next version of our package.
> 
> The CRAN site (https://cran.r-project.org/web/packages/RepeatedHighDim/index.html) has a "documentation" part with the refrence pdf.
> 
> Can I link to our tutorial site (https://software.klausjung-lab.de/.) under documentation?
> 
> 
> Sergej
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

From |kry|ov @end|ng |rom d|@root@org  Sun Apr  7 09:45:47 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Sun, 7 Apr 2024 10:45:47 +0300
Subject: [R-pkg-devel] Linking Tutorial Site to CRAN Package site.
In-Reply-To: <e9892ae5abbd41048cb770db27f5e927@tiho-hannover.de>
References: <e9892ae5abbd41048cb770db27f5e927@tiho-hannover.de>
Message-ID: <20240407104547.465a154a@Tarkus>

? Sat, 6 Apr 2024 18:27:24 +0000
"Ruff, Sergej" <Sergej.Ruff at tiho-hannover.de> ?????:

> The CRAN site
> (https://cran.r-project.org/web/packages/RepeatedHighDim/index.html)
> has a "documentation" part with the refrence pdf.
> 
> Can I link to our tutorial site (https://software.klausjung-lab.de/.)
> under documentation?

Since your tutorial is relatively short and contains R code intermixed
with the results of running it, it could make a great vignette.
Vignettes are linked on the CRAN page for a package right under the
PDF reference manual. For example, the BiocManager package has one
vignette: https://cran.r-project.org/package=BiocManager

Vignettes are a part of the package and their code is automatically
checked together with your examples. For the users of your package,
this will help keep the tutorial available (even if the website moves
in the future) and compatible with the current version of the package
(even if the package evolves and the tutorial website evolves together
with it).

R has built-in support for PDF vignettes via LaTeX using Sweave [*].
HTML vignettes can be much more accessible than PDF files, but there is
no built-in HTML vignette engine in R [**]. The 'markdown' package is
reasonably lightweight and has an HTML vignette engine. Markdown tries
to be a superset of HTML, so it should be possible to keep most of your
original HTML, including the styling, while rewriting the tutorial as
an executable vignette.

-- 
Best regards,
Ivan

[*]
https://cran.r-project.org/doc/manuals/R-exts.html#Writing-package-vignettes

[**]
It's possible to write a crude HTML vignette engine in ~100 lines of R
code, but we cannot expect every package author to do that.


From @di@@o m@iii@g oii pdx@edu  Sun Apr  7 05:58:57 2024
From: @di@@o m@iii@g oii pdx@edu (@di@@o m@iii@g oii pdx@edu)
Date: Sat, 6 Apr 2024 20:58:57 -0700 (PDT)
Subject: [R-pkg-devel] Need help with "Lost braces" in R under development
 checks
Message-ID: <alpine.DEB.2.21.2404062047010.31629@anzu.alexisdinno.com>


Hello,

I would appreciate help with two build NOTEs:


First, On the Winbuilder check, the check for R version 4.4.0 alpha 
(2024-04-05 r86346 ucrt) and also under the Debian R Under development 
(unstable) (2024-04-05 r86348) I got a NOTE about a bunch of 'Lost 
braces' in my .Rd files. I am confused because my braces appear to match 
when I count them, and I don't *think* I am runing into an item/itemize 
situation. Here's an example (all the reported issues in this NOTE are 
within \references sections ):

  checkRd: (-1) LoopAnalyst-package.Rd:14: Lost braces
    14 |  Dambacher, J. M. and Li, H. W. and Rossignol, P. A. (2002) 
  \doi{10.2307/3071950}{Relevance of community structure in assessing 
  indeterminacy of ecological predictions}. \emph{Ecology}, 
  \bold{83(5)},1372--1385.

Here's the Winbuilder log:
https://win-builder.r-project.org/incoming_pretest/LoopAnalyst_1.2-7_20240406_215835/Windows/00check.log

And here's the Debian log:
https://win-builder.r-project.org/incoming_pretest/LoopAnalyst_1.2-7_20240406_215835/Debian/00check.log


The second NOTE is about "(possibly) invalid URLs:"
  URL: https://www.journals.uchicago.edu/doi/10.1086/367590
    Status: 403
    Message: Forbidden

However, when I follow this URL in my browser it appears to link 
appropriately to the intended page. If I use a \doi{10.1086/367590} 
instead of an \href I get the same behavior: check says "(possibly) 
invalid URLs" but https://doi.org/10.1086/367590 appears to work just 
fine in the browser. Not sure what I am doing wrong here.



Thank you!


Alexis Dinno
Associate Professor
OHSU-PSU School of Public Health
Pronouns: she/her/hers

610-R Vanport Building
1810 SW 5th Avenue, Suite 610
Portland, OR 97201-5202

p: (503) 725-3076
f: (503) 725-5100
e: alexis.dinno at pdx.edu

Note: I do not use a networked calendar, so meeting dates should be communicated directly via email.


From georg|@bo@hn@kov @end|ng |rom m@nche@ter@@c@uk  Sun Apr  7 17:04:40 2024
From: georg|@bo@hn@kov @end|ng |rom m@nche@ter@@c@uk (Georgi Boshnakov)
Date: Sun, 7 Apr 2024 15:04:40 +0000
Subject: [R-pkg-devel] 
 Need help with "Lost braces" in R under development checks
In-Reply-To: <alpine.DEB.2.21.2404062047010.31629@anzu.alexisdinno.com>
References: <alpine.DEB.2.21.2404062047010.31629@anzu.alexisdinno.com>
Message-ID: <LO0P265MB6325FA997460EB4BEBC5DB52AE012@LO0P265MB6325.GBRP265.PROD.OUTLOOK.COM>

The braces are lost in the sense that they are superfluous (not typeset in the pdf manual but may be typeset in other formats. In your example \doi has one argument, so the braces enclosing the following phrase are superfluous.

This may not be harmful here but since CRAN introduced the NOTE it has uncovered thousands of actual typos and similar.

As to the 'invalid url', you can ignore it when you are sure that it is correct - some sites don't like being accessed programatically and start blocking the caller (eg if you run R checks several times in succession).


Georgi Boshnakov

Sent from Outlook for Android<https://aka.ms/AAb9ysg>
________________________________
From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of adinno at pdx.edu <adinno at pdx.edu>
Sent: Sunday, April 7, 2024 5:58:57 AM
To: r-package-devel at r-project.org <r-package-devel at r-project.org>
Subject: [R-pkg-devel] Need help with "Lost braces" in R under development checks


Hello,

I would appreciate help with two build NOTEs:


First, On the Winbuilder check, the check for R version 4.4.0 alpha
(2024-04-05 r86346 ucrt) and also under the Debian R Under development
(unstable) (2024-04-05 r86348) I got a NOTE about a bunch of 'Lost
braces' in my .Rd files. I am confused because my braces appear to match
when I count them, and I don't *think* I am runing into an item/itemize
situation. Here's an example (all the reported issues in this NOTE are
within \references sections ):

  checkRd: (-1) LoopAnalyst-package.Rd:14: Lost braces
    14 |  Dambacher, J. M. and Li, H. W. and Rossignol, P. A. (2002)
  \doi{10.2307/3071950}{Relevance of community structure in assessing
  indeterminacy of ecological predictions}. \emph{Ecology},
  \bold{83(5)},1372--1385.

Here's the Winbuilder log:
https://urldefense.com/v3/__https://win-builder.r-project.org/incoming_pretest/LoopAnalyst_1.2-7_20240406_215835/Windows/00check.log__;!!PDiH4ENfjr2_Jw!A109ZbFKcZjQ25lSt1JJSlLziJ-IyfouQzdKPv5pnUKRq_3-RoKd52MVDkHUoho-VQ5Ld85q6WmdGwh5eSSWPstUjY95nA$ [win-builder[.]r-project[.]org]

And here's the Debian log:
https://urldefense.com/v3/__https://win-builder.r-project.org/incoming_pretest/LoopAnalyst_1.2-7_20240406_215835/Debian/00check.log__;!!PDiH4ENfjr2_Jw!A109ZbFKcZjQ25lSt1JJSlLziJ-IyfouQzdKPv5pnUKRq_3-RoKd52MVDkHUoho-VQ5Ld85q6WmdGwh5eSSWPstlRfRWeA$ [win-builder[.]r-project[.]org]


The second NOTE is about "(possibly) invalid URLs:"
  URL: https://urldefense.com/v3/__https://www.journals.uchicago.edu/doi/10.1086/367590__;!!PDiH4ENfjr2_Jw!A109ZbFKcZjQ25lSt1JJSlLziJ-IyfouQzdKPv5pnUKRq_3-RoKd52MVDkHUoho-VQ5Ld85q6WmdGwh5eSSWPsuMHqle7Q$ [journals[.]uchicago[.]edu]
    Status: 403
    Message: Forbidden

However, when I follow this URL in my browser it appears to link
appropriately to the intended page. If I use a \doi{10.1086/367590}
instead of an \href I get the same behavior: check says "(possibly)
invalid URLs" but https://urldefense.com/v3/__https://doi.org/10.1086/367590__;!!PDiH4ENfjr2_Jw!A109ZbFKcZjQ25lSt1JJSlLziJ-IyfouQzdKPv5pnUKRq_3-RoKd52MVDkHUoho-VQ5Ld85q6WmdGwh5eSSWPstaKkb77Q$ [doi[.]org] appears to work just
fine in the browser. Not sure what I am doing wrong here.



Thank you!


Alexis Dinno
Associate Professor
OHSU-PSU School of Public Health
Pronouns: she/her/hers

610-R Vanport Building
1810 SW 5th Avenue, Suite 610
Portland, OR 97201-5202

p: (503) 725-3076
f: (503) 725-5100
e: alexis.dinno at pdx.edu

Note: I do not use a networked calendar, so meeting dates should be communicated directly via email.

______________________________________________
R-package-devel at r-project.org mailing list
https://urldefense.com/v3/__https://stat.ethz.ch/mailman/listinfo/r-package-devel__;!!PDiH4ENfjr2_Jw!A109ZbFKcZjQ25lSt1JJSlLziJ-IyfouQzdKPv5pnUKRq_3-RoKd52MVDkHUoho-VQ5Ld85q6WmdGwh5eSSWPssk-Dl_sw$ [stat[.]ethz[.]ch]

	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Sun Apr  7 17:05:59 2024
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sun, 7 Apr 2024 11:05:59 -0400
Subject: [R-pkg-devel] 
 Need help with "Lost braces" in R under development checks
In-Reply-To: <alpine.DEB.2.21.2404062047010.31629@anzu.alexisdinno.com>
References: <alpine.DEB.2.21.2404062047010.31629@anzu.alexisdinno.com>
Message-ID: <4937dd63-ff8a-473f-add8-8fb2cfc5015e@gmail.com>

On 06/04/2024 11:58 p.m., adinno at pdx.edu wrote:
> 
> Hello,
> 
> I would appreciate help with two build NOTEs:
> 
> 
> First, On the Winbuilder check, the check for R version 4.4.0 alpha
> (2024-04-05 r86346 ucrt) and also under the Debian R Under development
> (unstable) (2024-04-05 r86348) I got a NOTE about a bunch of 'Lost
> braces' in my .Rd files. I am confused because my braces appear to match
> when I count them, and I don't *think* I am runing into an item/itemize
> situation. Here's an example (all the reported issues in this NOTE are
> within \references sections ):
> 
>    checkRd: (-1) LoopAnalyst-package.Rd:14: Lost braces
>      14 |  Dambacher, J. M. and Li, H. W. and Rossignol, P. A. (2002)
>    \doi{10.2307/3071950}{Relevance of community structure in assessing
>    indeterminacy of ecological predictions}. \emph{Ecology},
>    \bold{83(5)},1372--1385.

It appears you are trying to pass two arguments to \doi, but it only 
takes one.  I would have thought that would be fine, but apparently not.

So add a space after "\doi{10.2307/3071950}" and/or remove the braces 
around "{Relevance of community structure in assessing indeterminacy of 
ecological predictions}".

Duncan Murdoch

> 
> Here's the Winbuilder log:
> https://win-builder.r-project.org/incoming_pretest/LoopAnalyst_1.2-7_20240406_215835/Windows/00check.log
> 
> And here's the Debian log:
> https://win-builder.r-project.org/incoming_pretest/LoopAnalyst_1.2-7_20240406_215835/Debian/00check.log
> 
> 
> The second NOTE is about "(possibly) invalid URLs:"
>    URL: https://www.journals.uchicago.edu/doi/10.1086/367590
>      Status: 403
>      Message: Forbidden
> 
> However, when I follow this URL in my browser it appears to link
> appropriately to the intended page. If I use a \doi{10.1086/367590}
> instead of an \href I get the same behavior: check says "(possibly)
> invalid URLs" but https://doi.org/10.1086/367590 appears to work just
> fine in the browser. Not sure what I am doing wrong here.
> 
> 
> 
> Thank you!
> 
> 
> Alexis Dinno
> Associate Professor
> OHSU-PSU School of Public Health
> Pronouns: she/her/hers
> 
> 610-R Vanport Building
> 1810 SW 5th Avenue, Suite 610
> Portland, OR 97201-5202
> 
> p: (503) 725-3076
> f: (503) 725-5100
> e: alexis.dinno at pdx.edu
> 
> Note: I do not use a networked calendar, so meeting dates should be communicated directly via email.
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From t|m@t@y|or @end|ng |rom h|ddene|eph@nt@@co@uk  Wed Apr 10 11:37:00 2024
From: t|m@t@y|or @end|ng |rom h|ddene|eph@nt@@co@uk (Tim Taylor)
Date: Wed, 10 Apr 2024 10:37:00 +0100
Subject: [R-pkg-devel] Matrix 1.7-0 to be released in March with
 ABI-breaking SuiteSparse update
In-Reply-To: <85c8662e-4658-482e-93b6-07975c8b9e85@gmail.com>
References: <85c8662e-4658-482e-93b6-07975c8b9e85@gmail.com>
Message-ID: <db516b50-eebe-497d-a581-a12e9d515720@app.fastmail.com>

Hi Mikael

Revisiting this. Have the plans changed for 1.7-0 release?

Tim

On Mon, 12 Feb 2024, at 6:36 PM, Mikael Jagan wrote:
> Dear users and binary repository maintainers,
> 
> We are preparing Matrix version 1.7-0 for CRAN submission on March 11, ahead
> of the spring release of R version 4.4.0.  The only significant change from
> Matrix 1.6-5 is an update of the internal SuiteSparse libraries
> (5.10.1 -> 7.6.0).  Unfortunately, the old and new SuiteSparse versions are 
> binary incompatible, hence so too will be the old and new Matrix versions.
> 
> A corollary is that users and binary repository maintainers switching between
> Matrix < 1.7-0 and Matrix >= 1.7-0 must rebuild _from sources_ packages that
> link Matrix:
> 
> > tools::package_dependencies("Matrix", which = "LinkingTo", reverse = TRUE)[[1L]]
>   [1] "ahMLE"               "bayesWatch"          "cplm"
>   [4] "GeneralizedWendland" "geostatsp"           "irlba"
>   [7] "lme4"                "mcmcsae"             "OpenMx"
> [10] "PRIMME"              "PUlasso"             "robustlmm"
> [13] "spGARCH"             "TMB"                 "bcSeq"
> 
> For users, that means doing, e.g.,
> 
>      install.packages("lme4", type = "source")
> 
> but an alternative for Windows and macOS users without the required tools is
> 
>      oo <- options(repos = "https://cran.r-project.org/")
>      install.packages("Matrix")
>      install.packages("lme4")
>      options(oo)
> 
> where we trust CRAN to provide binaries compatible with the latest Matrix
> version (because we notify CRAN upon submission about required rebuilds).
> Once other repositories react with rebuilds, they can be used instead of
> CRAN.
> 
> Our reverse dependency checks (and history, intuition, ...) show that most
> problems (caught segfaults in this case) can be traced to a binary incompatible
> lme4 and not to one of the other packages linking Matrix.  Still, we recommend
> rebuilds for all 15 packages.
> 
> Maintainers of packages that link Matrix can implement an .onLoad test for
> possible binary incompatibility by comparing the value of
> 
>      if (utils::packageVersion("Matrix") >= "1.6.2")
>          Matrix::Matrix.Version()[["abi"]]
>      else numeric_version("0")
> 
> at install time and at load time, warning the user if the values differ.
> But please do look at the above and not at packageVersion("Matrix") directly,
> as the ABI version is incremented less often than the package version.
> 
> Mikael {on behalf of citation("Matrix")$author}
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 

	[[alternative HTML version deleted]]


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Wed Apr 10 12:52:25 2024
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Wed, 10 Apr 2024 12:52:25 +0200
Subject: [R-pkg-devel] Matrix 1.7-0 to be released in March with
 ABI-breaking SuiteSparse update
In-Reply-To: <db516b50-eebe-497d-a581-a12e9d515720@app.fastmail.com>
References: <85c8662e-4658-482e-93b6-07975c8b9e85@gmail.com>
 <db516b50-eebe-497d-a581-a12e9d515720@app.fastmail.com>
Message-ID: <26134.28521.469748.126031@stat.math.ethz.ch>

>>>>> Tim Taylor 
>>>>>     on Wed, 10 Apr 2024 10:37:00 +0100 writes:

    > Hi Mikael Revisiting this. Have the plans changed for
    > 1.7-0 release?

    > Tim

Yes.  Matrix 1.7-0 *has* been on CRAN now for while
(i.e. 'March' has remained as announced), *but*
-- because of the ABI change and the problem it can cause for
   *some* users --

we have made it  'Depends: R (>= 4.4.0)'
i.e., you *see* the new Matrix only once you use R 4.4.0
which has been available as "alpha" already and is now in
"beta" already, e.g.,

  R version 4.4.0 beta (2024-04-10 r86393) -- "Puppy Cup"


Best regards,
Martin

--
Martin Maechler
ETH Zurich  and  R Core Team


    > On Mon, 12 Feb 2024, at 6:36 PM, Mikael Jagan wrote:
    >> Dear users and binary repository maintainers,
    >> 
    >> We are preparing Matrix version 1.7-0 for CRAN submission
    >> on March 11, ahead of the spring release of R version
    >> 4.4.0.  The only significant change from Matrix 1.6-5 is
    >> an update of the internal SuiteSparse libraries (5.10.1
    >> -> 7.6.0).  Unfortunately, the old and new SuiteSparse
    >> versions are binary incompatible, hence so too will be
    >> the old and new Matrix versions.
    >> 
    >> A corollary is that users and binary repository
    >> maintainers switching between Matrix < 1.7-0 and Matrix
    >> >= 1.7-0 must rebuild _from sources_ packages that link
    >> Matrix:
    >> 
    >> > tools::package_dependencies("Matrix", which =
    >> "LinkingTo", reverse = TRUE)[[1L]] [1] "ahMLE"
    >> "bayesWatch" "cplm" [4] "GeneralizedWendland" "geostatsp"
    >> "irlba" [7] "lme4" "mcmcsae" "OpenMx" [10] "PRIMME"
    >> "PUlasso" "robustlmm" [13] "spGARCH" "TMB" "bcSeq"
    >> 
    >> For users, that means doing, e.g.,
    >> 
    >> install.packages("lme4", type = "source")
    >> 
    >> but an alternative for Windows and macOS users without
    >> the required tools is
    >> 
    >> oo <- options(repos = "https://cran.r-project.org/")
    >> install.packages("Matrix") install.packages("lme4")
    >> options(oo)
    >> 
    >> where we trust CRAN to provide binaries compatible with
    >> the latest Matrix version (because we notify CRAN upon
    >> submission about required rebuilds).  Once other
    >> repositories react with rebuilds, they can be used
    >> instead of CRAN.
    >> 
    >> Our reverse dependency checks (and history, intuition,
    >> ...) show that most problems (caught segfaults in this
    >> case) can be traced to a binary incompatible lme4 and not
    >> to one of the other packages linking Matrix.  Still, we
    >> recommend rebuilds for all 15 packages.
    >> 
    >> Maintainers of packages that link Matrix can implement an
    >> .onLoad test for possible binary incompatibility by
    >> comparing the value of
    >> 
    >> if (utils::packageVersion("Matrix") >= "1.6.2")
    >> Matrix::Matrix.Version()[["abi"]] else
    >> numeric_version("0")
    >> 
    >> at install time and at load time, warning the user if the
    >> values differ.  But please do look at the above and not
    >> at packageVersion("Matrix") directly, as the ABI version
    >> is incremented less often than the package version.
    >> 
    >> Mikael {on behalf of citation("Matrix")$author}
    >> 
    >> ______________________________________________
    >> R-package-devel at r-project.org mailing list
    >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
    >> 

    > 	[[alternative HTML version deleted]]

    > ______________________________________________
    > R-package-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-package-devel


From t|m@t@y|or @end|ng |rom h|ddene|eph@nt@@co@uk  Wed Apr 10 13:00:55 2024
From: t|m@t@y|or @end|ng |rom h|ddene|eph@nt@@co@uk (Tim Taylor)
Date: Wed, 10 Apr 2024 12:00:55 +0100
Subject: [R-pkg-devel] Matrix 1.7-0 to be released in March with
 ABI-breaking SuiteSparse update
In-Reply-To: <26134.28521.469748.126031@stat.math.ethz.ch>
References: <85c8662e-4658-482e-93b6-07975c8b9e85@gmail.com>
 <db516b50-eebe-497d-a581-a12e9d515720@app.fastmail.com>
 <26134.28521.469748.126031@stat.math.ethz.ch>
Message-ID: <3ae4118b-1338-4d83-870d-2981ca6c626e@app.fastmail.com>

On Wed, 10 Apr 2024, at 11:52 AM, Martin Maechler wrote:
>>>>>> Tim Taylor 
>>>>>>     on Wed, 10 Apr 2024 10:37:00 +0100 writes:
>
>     > Hi Mikael Revisiting this. Have the plans changed for
>     > 1.7-0 release?
>
>     > Tim
>
> Yes.  Matrix 1.7-0 *has* been on CRAN now for while
> (i.e. 'March' has remained as announced), *but*
> -- because of the ABI change and the problem it can cause for
>    *some* users --
>
> we have made it  'Depends: R (>= 4.4.0)'
> i.e., you *see* the new Matrix only once you use R 4.4.0
> which has been available as "alpha" already and is now in
> "beta" already, e.g.,
>
>   R version 4.4.0 beta (2024-04-10 r86393) -- "Puppy Cup"
>
>
> Best regards,
> Martin
>
> --
> Martin Maechler
> ETH Zurich  and  R Core Team

Thank you Martin.

Indeed, I should have dug further.

Rdevel> packageVersion("Matrix")
[1] '1.7.0'

Cheers

Tim


From ckno|| @end|ng |rom ohd@|@org  Wed Apr 10 16:11:53 2024
From: ckno|| @end|ng |rom ohd@|@org (Chris Knoll)
Date: Wed, 10 Apr 2024 14:11:53 +0000
Subject: [R-pkg-devel] Question about CRAN submission resulting in 1 note
Message-ID: <DM6PR13MB29530C143E809E031845541EDE062@DM6PR13MB2953.namprd13.prod.outlook.com>

Hello,

I'm tryign to resolve a note that is preventing my cran submission. This is from the detail log:


Flavor: r-devel-linux-x86_64-debian-gcc, r-devel-windows-x86_64
Check: CRAN incoming feasibility, Result: NOTE
  Maintainer: 'Chris Knoll <cknoll at ohdsi.org>'

  New submission

  Package has a VignetteBuilder field but no prebuilt vignette index.

  Package has FOSS license, installs .class/.jar but has no 'java' directory.

  Found the following (possibly) invalid URLs:
    URL: http://ohdsi.github.io/CirceR/ (moved to https://ohdsi.github.io/CirceR/)
      From: README.md
      Status: 301
      Message: Moved Permanently
    URL: https://codecov.io/github/OHDSI/CirceR?branch=main (moved to https://app.codecov.io/github/OHDSI/CirceR?branch=main)
      From: README.md
      Status: 301
      Message: Moved Permanently
    URL: https://www.github.com/OHDSI/circe-be (moved to https://github.com/OHDSI/circe-be)
      From: README.md
      Status: 301
      Message: Moved Permanently
    For content that is 'Moved Permanently', please change http to https,
    add trailing slashes, or replace the old by the new URL.


The URL changes are easy enough, but I'm curious about the first 2 notes:

For "Package has VignetteBuilder field but no prebuilt vignette index", how would this be resolved?

For "Package ahs FOSS license, installs .class/.jar but has no 'java directory'':  This is custom code that I've written in Java plus has a few maven dependencies and I'm not sure if they are asking me to bundle the source code of all Java dependencies (that have classes in the jar file).   That could be hard to do, and was hoping if anyone had experience in this, is it enough to put into the Readme where such source code could be found?

Thank you for your guidance.

-Chris


	[[alternative HTML version deleted]]


From |kry|ov @end|ng |rom d|@root@org  Wed Apr 10 21:05:41 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Wed, 10 Apr 2024 22:05:41 +0300
Subject: [R-pkg-devel] 
 Question about CRAN submission resulting in 1 note
In-Reply-To: <DM6PR13MB29530C143E809E031845541EDE062@DM6PR13MB2953.namprd13.prod.outlook.com>
References: <DM6PR13MB29530C143E809E031845541EDE062@DM6PR13MB2953.namprd13.prod.outlook.com>
Message-ID: <20240410220541.1dea3101@Tarkus>

? Wed, 10 Apr 2024 14:11:53 +0000
Chris Knoll <cknoll at ohdsi.org> ?????:

> For "Package has VignetteBuilder field but no prebuilt vignette
> index", how would this be resolved?

The package at https://github.com/OHDSI/CirceR/ doesn't seem to have any
vignettes. Without vignettes, there's no need for VignetteBuilder:
knitr.

> For "Package ahs FOSS license, installs .class/.jar but has no 'java
> directory'':  This is custom code that I've written in Java plus has
> a few maven dependencies and I'm not sure if they are asking me to
> bundle the source code of all Java dependencies (that have classes in
> the jar file).   That could be hard to do, and was hoping if anyone
> had experience in this, is it enough to put into the Readme where
> such source code could be found?

Here's what the policy has to say:

>> For Java .class and .jar files, the sources should be in a top-level
>> java directory in the source package (or that directory should
>> explain how they can be obtained).

<https://cran.r-project.org/web/packages/policies.html>

At the very least, XLconnect seems to be fine supplying just the
README. If it's not too much trouble, shipping your custom source code
(definitely not all of the maven dependencies) would be the kind thing
to do, I think. (Feel free to disregard this part if a more experienced
Java package developer says otherwise.)

-- 
Best regards,
Ivan


From g@br|e|@b|@|n @end|ng |rom @p@gov@br  Thu Apr 11 13:57:00 2024
From: g@br|e|@b|@|n @end|ng |rom @p@gov@br (Gabriel Constantino Blain)
Date: Thu, 11 Apr 2024 11:57:00 +0000
Subject: [R-pkg-devel] Old references in the Description file.
Message-ID: <CPYP284MB1543988AB4DFDEC9535E1FBDA7052@CPYP284MB1543.BRAP284.PROD.OUTLOOK.COM>

Hello everyone,
I need to write references in the description of my package Description file in the form authors (year) <doi:>.
The problem is that it is a paper from the 70's (Priestley and Taylor, 1972) and its DOI has very uncommon symbols, such as <>. The DOI is:
10.1175/1520-0493(1972)100<0081:OTAOSH>2.3.CO;2.
Therefore, when I write it in the description, I mean
Priestley and Taylor (1972) <doi:10.1175/1520-0493(1972)100<0081:OTAOSH>2.3.CO;2>  the devtools::check_win_devel() returns the following message:
"Found the following (possibly) invalid DOIs:
  DOI: 10.1175/1520-0493(1972)100<0081:OTAOSH
    From: DESCRIPTION
          man/CropWaterBalance-package.Rd
    Status: 404
    Message: Not Found"
Even though the doi is available, should I replace the doi by the authors (year) <[https:...]https:...> ?
If yes, would the reference become?
Priestley and Taylor (1972) <[https://journals.ametsoc.org/view/journals/mwre/100/2/1520-0493_1972_100_0081_otaosh_2_3_co_2.xml]https://journals.ametsoc.org/view/journals/mwre/100/2/1520-0493_1972_100_0081_otaosh_2_3_co_2.xml> ?
Thank you
Bests
Gabriel

	[[alternative HTML version deleted]]


From |kry|ov @end|ng |rom d|@root@org  Thu Apr 11 14:33:32 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Thu, 11 Apr 2024 15:33:32 +0300
Subject: [R-pkg-devel] Old references in the Description file.
In-Reply-To: <CPYP284MB1543988AB4DFDEC9535E1FBDA7052@CPYP284MB1543.BRAP284.PROD.OUTLOOK.COM>
References: <CPYP284MB1543988AB4DFDEC9535E1FBDA7052@CPYP284MB1543.BRAP284.PROD.OUTLOOK.COM>
Message-ID: <20240411153332.57166b1b@arachnoid>

? Thu, 11 Apr 2024 11:57:00 +0000
Gabriel Constantino Blain <gabriel.blain at sp.gov.br> ?????:

> The problem is that it is a paper from the 70's (Priestley and
> Taylor, 1972) and its DOI has very uncommon symbols, such as <>. The
> DOI is: 10.1175/1520-0493(1972)100<0081:OTAOSH>2.3.CO;2.

Since the R CMD check function responsible for locating and checking
the DOIs from the package metadata expects to see them URL-encoded, it
should be possible to put your DOI through paste0('<doi:',
utils::URLencode(doi), '>') in order to generate the correct link.

Another workaround is to generate a shortDOI that would redirect to the
same place as the original DOI:
https://shortdoi.org/10.1175/1520-0493(1972)100%3C0081:OTAOSH%3E2.3.CO;2
Now <doi:10/cr3qwn> should work like the original DOI.

-- 
Best regards,
Ivan


From g@br|e|@b|@|n @end|ng |rom @p@gov@br  Fri Apr 12 15:18:48 2024
From: g@br|e|@b|@|n @end|ng |rom @p@gov@br (Gabriel Constantino Blain)
Date: Fri, 12 Apr 2024 13:18:48 +0000
Subject: [R-pkg-devel] Avoid Possibly misspelled words in DESCRIPTION
Message-ID: <CPYP284MB1543E696E57C78EC2AEEBD22A7042@CPYP284MB1543.BRAP284.PROD.OUTLOOK.COM>

Hello,
When I apply the devtools::check_win_devel() to my package it shows the following message:
----------------
Possibly misspelled words in DESCRIPTION:
  Samani (40:21)
  al (38:45)
  et (38:42)
-----------------
I already inserted these words in the WORDLIST.
Should I use 'Samani' and 'et al.' to prevent this message in the text below?

Description: Calculates daily climate water balance for irrigation purposes.  The package also calculates the reference 'evapotranspiration' using three methods, ('Penman and Monteith') Allen et al. (1998,ISBN:92-5-104219-5),
 Priestley and Taylor (1972) <doi:10/cr3qwn>,
  or Hargreaves and Samani (1985) <doi:10.13031/2013.26773>.
  Users may specify a management allowed depletion ('MAD'), which is
  used by the package to suggest when irrigate. It also allows the use of crop and water stress coefficients.

Thanks in advance.

	[[alternative HTML version deleted]]


From bbo|ker @end|ng |rom gm@||@com  Fri Apr 12 15:29:26 2024
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Fri, 12 Apr 2024 09:29:26 -0400
Subject: [R-pkg-devel] Avoid Possibly misspelled words in DESCRIPTION
In-Reply-To: <CPYP284MB1543E696E57C78EC2AEEBD22A7042@CPYP284MB1543.BRAP284.PROD.OUTLOOK.COM>
References: <CPYP284MB1543E696E57C78EC2AEEBD22A7042@CPYP284MB1543.BRAP284.PROD.OUTLOOK.COM>
Message-ID: <9a4e0a5c-75b2-425f-8443-a6ddd0d85abf@gmail.com>

   Based on the information in this thread,

https://stat.ethz.ch/pipermail/r-package-devel/2024q1/010558.html

   I don't think there is any way to suppress these notes. (I have been 
meaning to submit a documentation for _Writing R Extensions_ that talks 
about spell-checking options, which AFAICT isn't actually mentioned 
anywhere in the docs ...)

   What do you mean by "already inserted these words in the WORDLIST"?

   cheers
    Ben Bolker


On 2024-04-12 9:18 a.m., Gabriel Constantino Blain wrote:
> Hello,
> When I apply the devtools::check_win_devel() to my package it shows the following message:
> ----------------
> Possibly misspelled words in DESCRIPTION:
>    Samani (40:21)
>    al (38:45)
>    et (38:42)
> -----------------
> I already inserted these words in the WORDLIST.
> Should I use 'Samani' and 'et al.' to prevent this message in the text below?
> 
> Description: Calculates daily climate water balance for irrigation purposes.  The package also calculates the reference 'evapotranspiration' using three methods, ('Penman and Monteith') Allen et al. (1998,ISBN:92-5-104219-5),
>   Priestley and Taylor (1972) <doi:10/cr3qwn>,
>    or Hargreaves and Samani (1985) <doi:10.13031/2013.26773>.
>    Users may specify a management allowed depletion ('MAD'), which is
>    used by the package to suggest when irrigate. It also allows the use of crop and water stress coefficients.
> 
> Thanks in advance.
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From tony_@_w||ke@ @end|ng |rom out|ook@com  Sat Apr 13 11:35:18 2024
From: tony_@_w||ke@ @end|ng |rom out|ook@com (Tony Wilkes)
Date: Sat, 13 Apr 2024 09:35:18 +0000
Subject: [R-pkg-devel] error in windows R-devel builder,
 but not anywhere else
Message-ID: <AS4P195MB143048FFE27E4C642158B035BE0B2@AS4P195MB1430.EURP195.PROD.OUTLOOK.COM>

Hi everyone,

I am updating my R package (tinycodet), and I have checked my R-package in all operating systems (Linux, Mac, Windows). All examples and tests run correctly for Linux, Mac, and Windows.  Rcmd checks also finds no issues on GitHub (I use rather strict Rcmdcheck workflows on GitHub, so any issues should be found quickly on GitHub; see https://github.com/tony-aw/tinycodet). But on the Win R-devel builder, I get an error. I use a Windows computer myself, and I can see where the error takes place on the win R-devel-builder, but I cannot reproduce the error. The error should not even be there.

The error takes place in the function `strfind(x, p, ..., i, rt)<-`. When the user specifies an incorrect string for the optional argument `rt`, the error message "improper `rt?`given" is called. This is also the error message that occurs in Win R-devel Builder, but it shouldn't be there, since no incorrect string is specified for "rt" there - otherwise, all operating systems would give an error there.
Link to win R-devel builder results: https://win-builder.r-project.org/2mG2vk48tri3/

My package has no Operating System specific functionality.

The fact that this error ONLY happens on win R-devel builder, and not when I run it on my windows laptop, nor on any other OS, nor on the many checks on GitHub, implies the issue might be on the Windows R-devel builder. But I don't want to jump to conclusions. Hence my question is:
Is there currently an issue in win R-devel-builder? If not, why is the error only on win R-devel-builder, and not anywhere else?

Thanks in advance for your help.

Kind regards,

Tony

	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Sat Apr 13 11:51:18 2024
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sat, 13 Apr 2024 05:51:18 -0400
Subject: [R-pkg-devel] error in windows R-devel builder,
 but not anywhere else
In-Reply-To: <AS4P195MB143048FFE27E4C642158B035BE0B2@AS4P195MB1430.EURP195.PROD.OUTLOOK.COM>
References: <AS4P195MB143048FFE27E4C642158B035BE0B2@AS4P195MB1430.EURP195.PROD.OUTLOOK.COM>
Message-ID: <428bcb7d-427b-4960-ad97-fe7ba1bfb483@gmail.com>

Looks like this recent change to R-devel has caught you:

       \code{is.atomic(NULL)} now returns \code{FALSE}, as \code{NULL}
       is not an atomic vector.  Strict back-compatibility would
       replace \code{is.atomic(foo)} by \code{(is.null(foo) || 
is.atomic(foo))}
       but should happen only sparingly.

I don't know why you didn't see this on the other platforms; maybe they 
just haven't been rebuilt recently.

Duncan Murdoch

On 13/04/2024 5:35 a.m., Tony Wilkes wrote:
> Hi everyone,
> 
> I am updating my R package (tinycodet), and I have checked my R-package in all operating systems (Linux, Mac, Windows). All examples and tests run correctly for Linux, Mac, and Windows.  Rcmd checks also finds no issues on GitHub (I use rather strict Rcmdcheck workflows on GitHub, so any issues should be found quickly on GitHub; see https://github.com/tony-aw/tinycodet). But on the Win R-devel builder, I get an error. I use a Windows computer myself, and I can see where the error takes place on the win R-devel-builder, but I cannot reproduce the error. The error should not even be there.
> 
> The error takes place in the function `strfind(x, p, ..., i, rt)<-`. When the user specifies an incorrect string for the optional argument `rt`, the error message "improper `rt?`given" is called. This is also the error message that occurs in Win R-devel Builder, but it shouldn't be there, since no incorrect string is specified for "rt" there - otherwise, all operating systems would give an error there.
> Link to win R-devel builder results: https://win-builder.r-project.org/2mG2vk48tri3/
> 
> My package has no Operating System specific functionality.
> 
> The fact that this error ONLY happens on win R-devel builder, and not when I run it on my windows laptop, nor on any other OS, nor on the many checks on GitHub, implies the issue might be on the Windows R-devel builder. But I don't want to jump to conclusions. Hence my question is:
> Is there currently an issue in win R-devel-builder? If not, why is the error only on win R-devel-builder, and not anywhere else?
> 
> Thanks in advance for your help.
> 
> Kind regards,
> 
> Tony
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From bbo|ker @end|ng |rom gm@||@com  Thu Apr 18 15:04:34 2024
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Thu, 18 Apr 2024 09:04:34 -0400
Subject: [R-pkg-devel] puzzling removal of 'dotwhisker' from CRAN
Message-ID: <8d9ab8de-476e-4e9e-92ab-9120f21b06f1@gmail.com>

   The 'dotwhisker' package was archived on CRAN: from 
https://cran.r-project.org/web/packages/dotwhisker/index.html

     Package ?dotwhisker? was removed from the CRAN repository
     ...

     Archived on 2024-04-12 as requires archived package 'prediction'.

    However, I can't for the life of me see where this dependence could 
come from. Neither the DESCRIPTION file of the last-archived version on 
CRAN 
<https://cran.r-project.org/src/contrib/Archive/dotwhisker/dotwhisker_0.8.1.tar.gz>, 
nor the version on github <https://github.com/fsolt/dotwhisker>, seem to 
show any signs of importing prediction ... ?? I suppose there's a 
possibility of a recursive dependence, but in that case why wouldn't the 
direct dependence be reported?

Depends: R (>= 3.2.0), ggplot2 (>= 2.2.1),
Imports: grid, gtable, gridExtra, stats, parameters, performance,
         patchwork, margins, dplyr, stringr, ggstance, rlang, purrr
Suggests: ordinal, tibble, knitr, rmarkdown, broom

   What am I missing?

   (I'm concerned because I have packages that Suggest: dotwhisker, and 
the absence of the package from repos is breaking GitHub Actions checks ...)


   (This is cross-posted from an issue on the dotwhisker GH repository: 
https://github.com/fsolt/dotwhisker/issues/115)


From jo@|@h@p@rry @end|ng |rom gm@||@com  Thu Apr 18 15:11:03 2024
From: jo@|@h@p@rry @end|ng |rom gm@||@com (Josiah Parry)
Date: Thu, 18 Apr 2024 09:11:03 -0400
Subject: [R-pkg-devel] puzzling removal of 'dotwhisker' from CRAN
In-Reply-To: <8d9ab8de-476e-4e9e-92ab-9120f21b06f1@gmail.com>
References: <8d9ab8de-476e-4e9e-92ab-9120f21b06f1@gmail.com>
Message-ID: <CAL3ufULYvR_0EAeomibgBS9fCbGgBsgz_9tPfuCo91_uhgh1YA@mail.gmail.com>

Well, after trying to install the package, I believe the issue is because
margins has been archived.

https://cran.r-project.org/web/packages/margins/index.html

You can check recursive dependencies using
`tools::package_dependencies("pkg", recursive = TRUE)` which would help you
in this case. I couldn't run it since the package is not available on CRAN,
however.


On Thu, Apr 18, 2024 at 9:05?AM Ben Bolker <bbolker at gmail.com> wrote:

>    The 'dotwhisker' package was archived on CRAN: from
> https://cran.r-project.org/web/packages/dotwhisker/index.html
>
>      Package ?dotwhisker? was removed from the CRAN repository
>      ...
>
>      Archived on 2024-04-12 as requires archived package 'prediction'.
>
>     However, I can't for the life of me see where this dependence could
> come from. Neither the DESCRIPTION file of the last-archived version on
> CRAN
> <
> https://cran.r-project.org/src/contrib/Archive/dotwhisker/dotwhisker_0.8.1.tar.gz>,
>
> nor the version on github <https://github.com/fsolt/dotwhisker>, seem to
> show any signs of importing prediction ... ?? I suppose there's a
> possibility of a recursive dependence, but in that case why wouldn't the
> direct dependence be reported?
>
> Depends: R (>= 3.2.0), ggplot2 (>= 2.2.1),
> Imports: grid, gtable, gridExtra, stats, parameters, performance,
>          patchwork, margins, dplyr, stringr, ggstance, rlang, purrr
> Suggests: ordinal, tibble, knitr, rmarkdown, broom
>
>    What am I missing?
>
>    (I'm concerned because I have packages that Suggest: dotwhisker, and
> the absence of the package from repos is breaking GitHub Actions checks
> ...)
>
>
>    (This is cross-posted from an issue on the dotwhisker GH repository:
> https://github.com/fsolt/dotwhisker/issues/115)
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From bbo|ker @end|ng |rom gm@||@com  Thu Apr 18 15:14:46 2024
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Thu, 18 Apr 2024 09:14:46 -0400
Subject: [R-pkg-devel] puzzling removal of 'dotwhisker' from CRAN
In-Reply-To: <CAL3ufULYvR_0EAeomibgBS9fCbGgBsgz_9tPfuCo91_uhgh1YA@mail.gmail.com>
References: <8d9ab8de-476e-4e9e-92ab-9120f21b06f1@gmail.com>
 <CAL3ufULYvR_0EAeomibgBS9fCbGgBsgz_9tPfuCo91_uhgh1YA@mail.gmail.com>
Message-ID: <afaa3b39-20a2-46cf-980b-95d11357679b@gmail.com>

   Thank you! (I know about package_dependencies() but ran into 
precisely the same problem and didn't want to re-implement it ...)

On 2024-04-18 9:11 a.m., Josiah Parry wrote:
> Well, after trying to install the package, I believe the issue is 
> because margins has been archived.
> 
> https://cran.r-project.org/web/packages/margins/index.html 
> <https://cran.r-project.org/web/packages/margins/index.html>
> 
> You can check recursive dependencies using 
> `tools::package_dependencies("pkg", recursive = TRUE)` which would help 
> you in this case. I couldn't run it since the package is not available 
> on CRAN, however.
> 
> 
> On Thu, Apr 18, 2024 at 9:05?AM Ben Bolker <bbolker at gmail.com 
> <mailto:bbolker at gmail.com>> wrote:
> 
>      ? ?The 'dotwhisker' package was archived on CRAN: from
>     https://cran.r-project.org/web/packages/dotwhisker/index.html
>     <https://cran.r-project.org/web/packages/dotwhisker/index.html>
> 
>      ? ? ?Package ?dotwhisker? was removed from the CRAN repository
>      ? ? ?...
> 
>      ? ? ?Archived on 2024-04-12 as requires archived package 'prediction'.
> 
>      ? ? However, I can't for the life of me see where this dependence
>     could
>     come from. Neither the DESCRIPTION file of the last-archived version on
>     CRAN
>     <https://cran.r-project.org/src/contrib/Archive/dotwhisker/dotwhisker_0.8.1.tar.gz <https://cran.r-project.org/src/contrib/Archive/dotwhisker/dotwhisker_0.8.1.tar.gz>>,
>     nor the version on github <https://github.com/fsolt/dotwhisker
>     <https://github.com/fsolt/dotwhisker>>, seem to
>     show any signs of importing prediction ... ?? I suppose there's a
>     possibility of a recursive dependence, but in that case why wouldn't
>     the
>     direct dependence be reported?
> 
>     Depends: R (>= 3.2.0), ggplot2 (>= 2.2.1),
>     Imports: grid, gtable, gridExtra, stats, parameters, performance,
>      ? ? ? ? ?patchwork, margins, dplyr, stringr, ggstance, rlang, purrr
>     Suggests: ordinal, tibble, knitr, rmarkdown, broom
> 
>      ? ?What am I missing?
> 
>      ? ?(I'm concerned because I have packages that Suggest: dotwhisker,
>     and
>     the absence of the package from repos is breaking GitHub Actions
>     checks ...)
> 
> 
>      ? ?(This is cross-posted from an issue on the dotwhisker GH
>     repository:
>     https://github.com/fsolt/dotwhisker/issues/115
>     <https://github.com/fsolt/dotwhisker/issues/115>)
> 
>     ______________________________________________
>     R-package-devel at r-project.org <mailto:R-package-devel at r-project.org>
>     mailing list
>     https://stat.ethz.ch/mailman/listinfo/r-package-devel
>     <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
> 

-- 
Dr. Benjamin Bolker
Professor, Mathematics & Statistics and Biology, McMaster University
Director, School of Computational Science and Engineering
(Acting) Graduate chair, Mathematics & Statistics
 > E-mail is sent at my convenience; I don't expect replies outside of 
working hours.


From th|erry@onke||nx @end|ng |rom |nbo@be  Thu Apr 18 15:28:24 2024
From: th|erry@onke||nx @end|ng |rom |nbo@be (Thierry Onkelinx)
Date: Thu, 18 Apr 2024 15:28:24 +0200
Subject: [R-pkg-devel] puzzling removal of 'dotwhisker' from CRAN
In-Reply-To: <afaa3b39-20a2-46cf-980b-95d11357679b@gmail.com>
References: <8d9ab8de-476e-4e9e-92ab-9120f21b06f1@gmail.com>
 <CAL3ufULYvR_0EAeomibgBS9fCbGgBsgz_9tPfuCo91_uhgh1YA@mail.gmail.com>
 <afaa3b39-20a2-46cf-980b-95d11357679b@gmail.com>
Message-ID: <CAJuCY5zMvc4inwBz2YNNEwQ8y+7jE+QW1dbGHzw8EFDx8YRE_A@mail.gmail.com>

The cascade is even longer. prediction got archived because ffbase was no
longer available. https://cran.r-project.org/web/packages/ffbase/

ir. Thierry Onkelinx
Statisticus / Statistician

Vlaamse Overheid / Government of Flanders
INSTITUUT VOOR NATUUR- EN BOSONDERZOEK / RESEARCH INSTITUTE FOR NATURE AND
FOREST
Team Biometrie & Kwaliteitszorg / Team Biometrics & Quality Assurance
thierry.onkelinx at inbo.be
Havenlaan 88 bus 73, 1000 Brussel
*Postadres:* Koning Albert II-laan 15 bus 186, 1210 Brussel
*Poststukken die naar dit adres worden gestuurd, worden ingescand en
digitaal aan de geadresseerde bezorgd. Zo kan de Vlaamse overheid haar
dossiers volledig digitaal behandelen. Poststukken met de vermelding
?vertrouwelijk? worden niet ingescand, maar ongeopend aan de geadresseerde
bezorgd.*
www.inbo.be

///////////////////////////////////////////////////////////////////////////////////////////
To call in the statistician after the experiment is done may be no more
than asking him to perform a post-mortem examination: he may be able to say
what the experiment died of. ~ Sir Ronald Aylmer Fisher
The plural of anecdote is not data. ~ Roger Brinner
The combination of some data and an aching desire for an answer does not
ensure that a reasonable answer can be extracted from a given body of data.
~ John Tukey
///////////////////////////////////////////////////////////////////////////////////////////

<https://www.inbo.be>


Op do 18 apr 2024 om 15:25 schreef Ben Bolker <bbolker at gmail.com>:

>    Thank you! (I know about package_dependencies() but ran into
> precisely the same problem and didn't want to re-implement it ...)
>
> On 2024-04-18 9:11 a.m., Josiah Parry wrote:
> > Well, after trying to install the package, I believe the issue is
> > because margins has been archived.
> >
> > https://cran.r-project.org/web/packages/margins/index.html
> > <https://cran.r-project.org/web/packages/margins/index.html>
> >
> > You can check recursive dependencies using
> > `tools::package_dependencies("pkg", recursive = TRUE)` which would help
> > you in this case. I couldn't run it since the package is not available
> > on CRAN, however.
> >
> >
> > On Thu, Apr 18, 2024 at 9:05?AM Ben Bolker <bbolker at gmail.com
> > <mailto:bbolker at gmail.com>> wrote:
> >
> >         The 'dotwhisker' package was archived on CRAN: from
> >     https://cran.r-project.org/web/packages/dotwhisker/index.html
> >     <https://cran.r-project.org/web/packages/dotwhisker/index.html>
> >
> >           Package ?dotwhisker? was removed from the CRAN repository
> >           ...
> >
> >           Archived on 2024-04-12 as requires archived package
> 'prediction'.
> >
> >          However, I can't for the life of me see where this dependence
> >     could
> >     come from. Neither the DESCRIPTION file of the last-archived version
> on
> >     CRAN
> >     <
> https://cran.r-project.org/src/contrib/Archive/dotwhisker/dotwhisker_0.8.1.tar.gz
> <
> https://cran.r-project.org/src/contrib/Archive/dotwhisker/dotwhisker_0.8.1.tar.gz
> >>,
> >     nor the version on github <https://github.com/fsolt/dotwhisker
> >     <https://github.com/fsolt/dotwhisker>>, seem to
> >     show any signs of importing prediction ... ?? I suppose there's a
> >     possibility of a recursive dependence, but in that case why wouldn't
> >     the
> >     direct dependence be reported?
> >
> >     Depends: R (>= 3.2.0), ggplot2 (>= 2.2.1),
> >     Imports: grid, gtable, gridExtra, stats, parameters, performance,
> >               patchwork, margins, dplyr, stringr, ggstance, rlang, purrr
> >     Suggests: ordinal, tibble, knitr, rmarkdown, broom
> >
> >         What am I missing?
> >
> >         (I'm concerned because I have packages that Suggest: dotwhisker,
> >     and
> >     the absence of the package from repos is breaking GitHub Actions
> >     checks ...)
> >
> >
> >         (This is cross-posted from an issue on the dotwhisker GH
> >     repository:
> >     https://github.com/fsolt/dotwhisker/issues/115
> >     <https://github.com/fsolt/dotwhisker/issues/115>)
> >
> >     ______________________________________________
> >     R-package-devel at r-project.org <mailto:R-package-devel at r-project.org>
> >     mailing list
> >     https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >     <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
> >
>
> --
> Dr. Benjamin Bolker
> Professor, Mathematics & Statistics and Biology, McMaster University
> Director, School of Computational Science and Engineering
> (Acting) Graduate chair, Mathematics & Statistics
>  > E-mail is sent at my convenience; I don't expect replies outside of
> working hours.
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From bbo|ker @end|ng |rom gm@||@com  Thu Apr 18 15:35:32 2024
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Thu, 18 Apr 2024 09:35:32 -0400
Subject: [R-pkg-devel] puzzling removal of 'dotwhisker' from CRAN
In-Reply-To: <CAJuCY5zMvc4inwBz2YNNEwQ8y+7jE+QW1dbGHzw8EFDx8YRE_A@mail.gmail.com>
References: <8d9ab8de-476e-4e9e-92ab-9120f21b06f1@gmail.com>
 <CAL3ufULYvR_0EAeomibgBS9fCbGgBsgz_9tPfuCo91_uhgh1YA@mail.gmail.com>
 <afaa3b39-20a2-46cf-980b-95d11357679b@gmail.com>
 <CAJuCY5zMvc4inwBz2YNNEwQ8y+7jE+QW1dbGHzw8EFDx8YRE_A@mail.gmail.com>
Message-ID: <a4b6dc0c-d9de-43c3-bade-118d691e8e18@gmail.com>

    Yes, but ffbase was archived a long time ago (2022-04-04) and CRAN 
has apparently just caught up to checking.  What's a little frustrating 
(to me) is that the dependence of prediction on ffbase is *very* soft 
("enhances") ...

On 2024-04-18 9:28 a.m., Thierry Onkelinx wrote:
> The cascade is even longer. prediction got archived because ffbase was 
> no longer available. https://cran.r-project.org/web/packages/ffbase/ 
> <https://cran.r-project.org/web/packages/ffbase/>
> 
> ir. Thierry Onkelinx
> Statisticus / Statistician
> 
> Vlaamse Overheid / Government of Flanders
> INSTITUUT VOOR NATUUR- EN BOSONDERZOEK / RESEARCH INSTITUTE FOR NATURE 
> AND FOREST
> Team Biometrie & Kwaliteitszorg / Team Biometrics & Quality Assurance
> thierry.onkelinx at inbo.be <mailto:thierry.onkelinx at inbo.be>
> Havenlaan 88 bus 73, 1000 Brussel
> *Postadres:* Koning Albert II-laan 15 bus 186, 1210 Brussel
> /Poststukken die naar dit adres worden gestuurd, worden ingescand en 
> digitaal aan de geadresseerde bezorgd. Zo kan de Vlaamse overheid haar 
> dossiers volledig digitaal behandelen. Poststukken met de vermelding 
> ?vertrouwelijk? worden niet ingescand, maar ongeopend aan de 
> geadresseerde bezorgd./
> www.inbo.be <http://www.inbo.be>
> 
> ///////////////////////////////////////////////////////////////////////////////////////////
> To call in the statistician after the experiment is done may be no more 
> than asking him to perform a post-mortem examination: he may be able to 
> say what the experiment died of. ~ Sir Ronald Aylmer Fisher
> The plural of anecdote is not data. ~ Roger Brinner
> The combination of some data and an aching desire for an answer does not 
> ensure that a reasonable answer can be extracted from a given body of 
> data. ~ John Tukey
> ///////////////////////////////////////////////////////////////////////////////////////////
> 
> <https://www.inbo.be>
> 
> 
> Op do 18 apr 2024 om 15:25 schreef Ben Bolker <bbolker at gmail.com 
> <mailto:bbolker at gmail.com>>:
> 
>      ? ?Thank you! (I know about package_dependencies() but ran into
>     precisely the same problem and didn't want to re-implement it ...)
> 
>     On 2024-04-18 9:11 a.m., Josiah Parry wrote:
>      > Well, after trying to install the package, I believe the issue is
>      > because margins has been archived.
>      >
>      > https://cran.r-project.org/web/packages/margins/index.html
>     <https://cran.r-project.org/web/packages/margins/index.html>
>      > <https://cran.r-project.org/web/packages/margins/index.html
>     <https://cran.r-project.org/web/packages/margins/index.html>>
>      >
>      > You can check recursive dependencies using
>      > `tools::package_dependencies("pkg", recursive = TRUE)` which
>     would help
>      > you in this case. I couldn't run it since the package is not
>     available
>      > on CRAN, however.
>      >
>      >
>      > On Thu, Apr 18, 2024 at 9:05?AM Ben Bolker <bbolker at gmail.com
>     <mailto:bbolker at gmail.com>
>      > <mailto:bbolker at gmail.com <mailto:bbolker at gmail.com>>> wrote:
>      >
>      >? ? ? ? ?The 'dotwhisker' package was archived on CRAN: from
>      > https://cran.r-project.org/web/packages/dotwhisker/index.html
>     <https://cran.r-project.org/web/packages/dotwhisker/index.html>
>      >   
>      ?<https://cran.r-project.org/web/packages/dotwhisker/index.html
>     <https://cran.r-project.org/web/packages/dotwhisker/index.html>>
>      >
>      >? ? ? ? ? ?Package ?dotwhisker? was removed from the CRAN repository
>      >? ? ? ? ? ?...
>      >
>      >? ? ? ? ? ?Archived on 2024-04-12 as requires archived package
>     'prediction'.
>      >
>      >? ? ? ? ? However, I can't for the life of me see where this
>     dependence
>      >? ? ?could
>      >? ? ?come from. Neither the DESCRIPTION file of the last-archived
>     version on
>      >? ? ?CRAN
>      >   
>      ?<https://cran.r-project.org/src/contrib/Archive/dotwhisker/dotwhisker_0.8.1.tar.gz <https://cran.r-project.org/src/contrib/Archive/dotwhisker/dotwhisker_0.8.1.tar.gz> <https://cran.r-project.org/src/contrib/Archive/dotwhisker/dotwhisker_0.8.1.tar.gz <https://cran.r-project.org/src/contrib/Archive/dotwhisker/dotwhisker_0.8.1.tar.gz>>>,
>      >? ? ?nor the version on github
>     <https://github.com/fsolt/dotwhisker
>     <https://github.com/fsolt/dotwhisker>
>      >? ? ?<https://github.com/fsolt/dotwhisker
>     <https://github.com/fsolt/dotwhisker>>>, seem to
>      >? ? ?show any signs of importing prediction ... ?? I suppose there's a
>      >? ? ?possibility of a recursive dependence, but in that case why
>     wouldn't
>      >? ? ?the
>      >? ? ?direct dependence be reported?
>      >
>      >? ? ?Depends: R (>= 3.2.0), ggplot2 (>= 2.2.1),
>      >? ? ?Imports: grid, gtable, gridExtra, stats, parameters, performance,
>      >? ? ? ? ? ? ? ?patchwork, margins, dplyr, stringr, ggstance,
>     rlang, purrr
>      >? ? ?Suggests: ordinal, tibble, knitr, rmarkdown, broom
>      >
>      >? ? ? ? ?What am I missing?
>      >
>      >? ? ? ? ?(I'm concerned because I have packages that Suggest:
>     dotwhisker,
>      >? ? ?and
>      >? ? ?the absence of the package from repos is breaking GitHub Actions
>      >? ? ?checks ...)
>      >
>      >
>      >? ? ? ? ?(This is cross-posted from an issue on the dotwhisker GH
>      >? ? ?repository:
>      > https://github.com/fsolt/dotwhisker/issues/115
>     <https://github.com/fsolt/dotwhisker/issues/115>
>      >? ? ?<https://github.com/fsolt/dotwhisker/issues/115
>     <https://github.com/fsolt/dotwhisker/issues/115>>)
>      >
>      >? ? ?______________________________________________
>      > R-package-devel at r-project.org
>     <mailto:R-package-devel at r-project.org>
>     <mailto:R-package-devel at r-project.org
>     <mailto:R-package-devel at r-project.org>>
>      >? ? ?mailing list
>      > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>     <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
>      >? ? ?<https://stat.ethz.ch/mailman/listinfo/r-package-devel
>     <https://stat.ethz.ch/mailman/listinfo/r-package-devel>>
>      >
> 
>     -- 
>     Dr. Benjamin Bolker
>     Professor, Mathematics & Statistics and Biology, McMaster University
>     Director, School of Computational Science and Engineering
>     (Acting) Graduate chair, Mathematics & Statistics
>      ?> E-mail is sent at my convenience; I don't expect replies outside of
>     working hours.
> 
>     ______________________________________________
>     R-package-devel at r-project.org <mailto:R-package-devel at r-project.org>
>     mailing list
>     https://stat.ethz.ch/mailman/listinfo/r-package-devel
>     <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
> 

-- 
Dr. Benjamin Bolker
Professor, Mathematics & Statistics and Biology, McMaster University
Director, School of Computational Science and Engineering
(Acting) Graduate chair, Mathematics & Statistics
 > E-mail is sent at my convenience; I don't expect replies outside of 
working hours.


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Thu Apr 18 15:41:18 2024
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Thu, 18 Apr 2024 15:41:18 +0200
Subject: [R-pkg-devel] puzzling removal of 'dotwhisker' from CRAN
In-Reply-To: <a4b6dc0c-d9de-43c3-bade-118d691e8e18@gmail.com>
References: <8d9ab8de-476e-4e9e-92ab-9120f21b06f1@gmail.com>
 <CAL3ufULYvR_0EAeomibgBS9fCbGgBsgz_9tPfuCo91_uhgh1YA@mail.gmail.com>
 <afaa3b39-20a2-46cf-980b-95d11357679b@gmail.com>
 <CAJuCY5zMvc4inwBz2YNNEwQ8y+7jE+QW1dbGHzw8EFDx8YRE_A@mail.gmail.com>
 <a4b6dc0c-d9de-43c3-bade-118d691e8e18@gmail.com>
Message-ID: <fc4072e2-d087-419e-8a1d-d77bc495f520@statistik.tu-dortmund.de>



On 18.04.2024 15:35, Ben Bolker wrote:
>  ?? Yes, but ffbase was archived a long time ago (2022-04-04) and CRAN 
> has apparently just caught up to checking.? What's a little frustrating 
> (to me) is that the dependence of prediction on ffbase is *very* soft 
> ("enhances") ...

No, but CRAN  has still not received an update and asked for this each 
month this year, so in Jan, Feb, and March without a response, so we 
assume prediction is unmaintained. Also, this was escalated to reverse 
depends.

Best,
Uwe Ligges


> 
> On 2024-04-18 9:28 a.m., Thierry Onkelinx wrote:
>> The cascade is even longer. prediction got archived because ffbase was 
>> no longer available. https://cran.r-project.org/web/packages/ffbase/ 
>> <https://cran.r-project.org/web/packages/ffbase/>
>>
>> ir. Thierry Onkelinx
>> Statisticus / Statistician
>>
>> Vlaamse Overheid / Government of Flanders
>> INSTITUUT VOOR NATUUR- EN BOSONDERZOEK / RESEARCH INSTITUTE FOR NATURE 
>> AND FOREST
>> Team Biometrie & Kwaliteitszorg / Team Biometrics & Quality Assurance
>> thierry.onkelinx at inbo.be <mailto:thierry.onkelinx at inbo.be>
>> Havenlaan 88 bus 73, 1000 Brussel
>> *Postadres:* Koning Albert II-laan 15 bus 186, 1210 Brussel
>> /Poststukken die naar dit adres worden gestuurd, worden ingescand en 
>> digitaal aan de geadresseerde bezorgd. Zo kan de Vlaamse overheid haar 
>> dossiers volledig digitaal behandelen. Poststukken met de vermelding 
>> ?vertrouwelijk? worden niet ingescand, maar ongeopend aan de 
>> geadresseerde bezorgd./
>> www.inbo.be <http://www.inbo.be>
>>
>> ///////////////////////////////////////////////////////////////////////////////////////////
>> To call in the statistician after the experiment is done may be no 
>> more than asking him to perform a post-mortem examination: he may be 
>> able to say what the experiment died of. ~ Sir Ronald Aylmer Fisher
>> The plural of anecdote is not data. ~ Roger Brinner
>> The combination of some data and an aching desire for an answer does 
>> not ensure that a reasonable answer can be extracted from a given body 
>> of data. ~ John Tukey
>> ///////////////////////////////////////////////////////////////////////////////////////////
>>
>> <https://www.inbo.be>
>>
>>
>> Op do 18 apr 2024 om 15:25 schreef Ben Bolker <bbolker at gmail.com 
>> <mailto:bbolker at gmail.com>>:
>>
>> ???? ? ?Thank you! (I know about package_dependencies() but ran into
>> ??? precisely the same problem and didn't want to re-implement it ...)
>>
>> ??? On 2024-04-18 9:11 a.m., Josiah Parry wrote:
>> ???? > Well, after trying to install the package, I believe the issue is
>> ???? > because margins has been archived.
>> ???? >
>> ???? > https://cran.r-project.org/web/packages/margins/index.html
>> ??? <https://cran.r-project.org/web/packages/margins/index.html>
>> ???? > <https://cran.r-project.org/web/packages/margins/index.html
>> ??? <https://cran.r-project.org/web/packages/margins/index.html>>
>> ???? >
>> ???? > You can check recursive dependencies using
>> ???? > `tools::package_dependencies("pkg", recursive = TRUE)` which
>> ??? would help
>> ???? > you in this case. I couldn't run it since the package is not
>> ??? available
>> ???? > on CRAN, however.
>> ???? >
>> ???? >
>> ???? > On Thu, Apr 18, 2024 at 9:05?AM Ben Bolker <bbolker at gmail.com
>> ??? <mailto:bbolker at gmail.com>
>> ???? > <mailto:bbolker at gmail.com <mailto:bbolker at gmail.com>>> wrote:
>> ???? >
>> ???? >? ? ? ? ?The 'dotwhisker' package was archived on CRAN: from
>> ???? > https://cran.r-project.org/web/packages/dotwhisker/index.html
>> ??? <https://cran.r-project.org/web/packages/dotwhisker/index.html>
>> ???? >      
>> ?<https://cran.r-project.org/web/packages/dotwhisker/index.html
>> ??? <https://cran.r-project.org/web/packages/dotwhisker/index.html>>
>> ???? >
>> ???? >? ? ? ? ? ?Package ?dotwhisker? was removed from the CRAN 
>> repository
>> ???? >? ? ? ? ? ?...
>> ???? >
>> ???? >? ? ? ? ? ?Archived on 2024-04-12 as requires archived package
>> ??? 'prediction'.
>> ???? >
>> ???? >? ? ? ? ? However, I can't for the life of me see where this
>> ??? dependence
>> ???? >? ? ?could
>> ???? >? ? ?come from. Neither the DESCRIPTION file of the last-archived
>> ??? version on
>> ???? >? ? ?CRAN
>> ???? >      
>> ?<https://cran.r-project.org/src/contrib/Archive/dotwhisker/dotwhisker_0.8.1.tar.gz <https://cran.r-project.org/src/contrib/Archive/dotwhisker/dotwhisker_0.8.1.tar.gz> <https://cran.r-project.org/src/contrib/Archive/dotwhisker/dotwhisker_0.8.1.tar.gz <https://cran.r-project.org/src/contrib/Archive/dotwhisker/dotwhisker_0.8.1.tar.gz>>>,
>> ???? >? ? ?nor the version on github
>> ??? <https://github.com/fsolt/dotwhisker
>> ??? <https://github.com/fsolt/dotwhisker>
>> ???? >? ? ?<https://github.com/fsolt/dotwhisker
>> ??? <https://github.com/fsolt/dotwhisker>>>, seem to
>> ???? >? ? ?show any signs of importing prediction ... ?? I suppose 
>> there's a
>> ???? >? ? ?possibility of a recursive dependence, but in that case why
>> ??? wouldn't
>> ???? >? ? ?the
>> ???? >? ? ?direct dependence be reported?
>> ???? >
>> ???? >? ? ?Depends: R (>= 3.2.0), ggplot2 (>= 2.2.1),
>> ???? >? ? ?Imports: grid, gtable, gridExtra, stats, parameters, 
>> performance,
>> ???? >? ? ? ? ? ? ? ?patchwork, margins, dplyr, stringr, ggstance,
>> ??? rlang, purrr
>> ???? >? ? ?Suggests: ordinal, tibble, knitr, rmarkdown, broom
>> ???? >
>> ???? >? ? ? ? ?What am I missing?
>> ???? >
>> ???? >? ? ? ? ?(I'm concerned because I have packages that Suggest:
>> ??? dotwhisker,
>> ???? >? ? ?and
>> ???? >? ? ?the absence of the package from repos is breaking GitHub 
>> Actions
>> ???? >? ? ?checks ...)
>> ???? >
>> ???? >
>> ???? >? ? ? ? ?(This is cross-posted from an issue on the dotwhisker GH
>> ???? >? ? ?repository:
>> ???? > https://github.com/fsolt/dotwhisker/issues/115
>> ??? <https://github.com/fsolt/dotwhisker/issues/115>
>> ???? >? ? ?<https://github.com/fsolt/dotwhisker/issues/115
>> ??? <https://github.com/fsolt/dotwhisker/issues/115>>)
>> ???? >
>> ???? >? ? ?______________________________________________
>> ???? > R-package-devel at r-project.org
>> ??? <mailto:R-package-devel at r-project.org>
>> ??? <mailto:R-package-devel at r-project.org
>> ??? <mailto:R-package-devel at r-project.org>>
>> ???? >? ? ?mailing list
>> ???? > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> ??? <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
>> ???? >? ? ?<https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> ??? <https://stat.ethz.ch/mailman/listinfo/r-package-devel>>
>> ???? >
>>
>> ??? -- ??? Dr. Benjamin Bolker
>> ??? Professor, Mathematics & Statistics and Biology, McMaster University
>> ??? Director, School of Computational Science and Engineering
>> ??? (Acting) Graduate chair, Mathematics & Statistics
>> ???? ?> E-mail is sent at my convenience; I don't expect replies 
>> outside of
>> ??? working hours.
>>
>> ??? ______________________________________________
>> ??? R-package-devel at r-project.org <mailto:R-package-devel at r-project.org>
>> ??? mailing list
>> ??? https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> ??? <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
>>
> 

From bbo|ker @end|ng |rom gm@||@com  Thu Apr 18 15:43:29 2024
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Thu, 18 Apr 2024 09:43:29 -0400
Subject: [R-pkg-devel] puzzling removal of 'dotwhisker' from CRAN
In-Reply-To: <a4b6dc0c-d9de-43c3-bade-118d691e8e18@gmail.com>
References: <8d9ab8de-476e-4e9e-92ab-9120f21b06f1@gmail.com>
 <CAL3ufULYvR_0EAeomibgBS9fCbGgBsgz_9tPfuCo91_uhgh1YA@mail.gmail.com>
 <afaa3b39-20a2-46cf-980b-95d11357679b@gmail.com>
 <CAJuCY5zMvc4inwBz2YNNEwQ8y+7jE+QW1dbGHzw8EFDx8YRE_A@mail.gmail.com>
 <a4b6dc0c-d9de-43c3-bade-118d691e8e18@gmail.com>
Message-ID: <aa185629-0726-42e1-adb6-ec7364b1ea0e@gmail.com>

  To clarify, from an off-list conversation:

   AFAICT the chain is

   dotwhisker Imports
      margins, which Imports
        prediction, which Enhances
          ffbase  (archived in 2022 for 'coercion to logical' problems)

  (that conversation also pointed out that Enhances is a dependency *in 
the opposite direction* -- i.e. if A Enhances B, it's not entirely clear 
why the disappearance of B should matter at all ...)



On 2024-04-18 9:35 a.m., Ben Bolker wrote:
>  ?? Yes, but ffbase was archived a long time ago (2022-04-04) and CRAN 
> has apparently just caught up to checking.? What's a little frustrating 
> (to me) is that the dependence of prediction on ffbase is *very* soft 
> ("enhances") ...
> 
> On 2024-04-18 9:28 a.m., Thierry Onkelinx wrote:
>> The cascade is even longer. prediction got archived because ffbase was 
>> no longer available. https://cran.r-project.org/web/packages/ffbase/ 
>> <https://cran.r-project.org/web/packages/ffbase/>
>>
>> ir. Thierry Onkelinx
>> Statisticus / Statistician
>>
>> Vlaamse Overheid / Government of Flanders
>> INSTITUUT VOOR NATUUR- EN BOSONDERZOEK / RESEARCH INSTITUTE FOR NATURE 
>> AND FOREST
>> Team Biometrie & Kwaliteitszorg / Team Biometrics & Quality Assurance
>> thierry.onkelinx at inbo.be <mailto:thierry.onkelinx at inbo.be>
>> Havenlaan 88 bus 73, 1000 Brussel
>> *Postadres:* Koning Albert II-laan 15 bus 186, 1210 Brussel
>> /Poststukken die naar dit adres worden gestuurd, worden ingescand en 
>> digitaal aan de geadresseerde bezorgd. Zo kan de Vlaamse overheid haar 
>> dossiers volledig digitaal behandelen. Poststukken met de vermelding 
>> ?vertrouwelijk? worden niet ingescand, maar ongeopend aan de 
>> geadresseerde bezorgd./
>> www.inbo.be <http://www.inbo.be>
>>
>> ///////////////////////////////////////////////////////////////////////////////////////////
>> To call in the statistician after the experiment is done may be no 
>> more than asking him to perform a post-mortem examination: he may be 
>> able to say what the experiment died of. ~ Sir Ronald Aylmer Fisher
>> The plural of anecdote is not data. ~ Roger Brinner
>> The combination of some data and an aching desire for an answer does 
>> not ensure that a reasonable answer can be extracted from a given body 
>> of data. ~ John Tukey
>> ///////////////////////////////////////////////////////////////////////////////////////////
>>
>> <https://www.inbo.be>
>>
>>
>> Op do 18 apr 2024 om 15:25 schreef Ben Bolker <bbolker at gmail.com 
>> <mailto:bbolker at gmail.com>>:
>>
>> ???? ? ?Thank you! (I know about package_dependencies() but ran into
>> ??? precisely the same problem and didn't want to re-implement it ...)
>>
>> ??? On 2024-04-18 9:11 a.m., Josiah Parry wrote:
>> ???? > Well, after trying to install the package, I believe the issue is
>> ???? > because margins has been archived.
>> ???? >
>> ???? > https://cran.r-project.org/web/packages/margins/index.html
>> ??? <https://cran.r-project.org/web/packages/margins/index.html>
>> ???? > <https://cran.r-project.org/web/packages/margins/index.html
>> ??? <https://cran.r-project.org/web/packages/margins/index.html>>
>> ???? >
>> ???? > You can check recursive dependencies using
>> ???? > `tools::package_dependencies("pkg", recursive = TRUE)` which
>> ??? would help
>> ???? > you in this case. I couldn't run it since the package is not
>> ??? available
>> ???? > on CRAN, however.
>> ???? >
>> ???? >
>> ???? > On Thu, Apr 18, 2024 at 9:05?AM Ben Bolker <bbolker at gmail.com
>> ??? <mailto:bbolker at gmail.com>
>> ???? > <mailto:bbolker at gmail.com <mailto:bbolker at gmail.com>>> wrote:
>> ???? >
>> ???? >? ? ? ? ?The 'dotwhisker' package was archived on CRAN: from
>> ???? > https://cran.r-project.org/web/packages/dotwhisker/index.html
>> ??? <https://cran.r-project.org/web/packages/dotwhisker/index.html>
>> ???? >      
>> ?<https://cran.r-project.org/web/packages/dotwhisker/index.html
>> ??? <https://cran.r-project.org/web/packages/dotwhisker/index.html>>
>> ???? >
>> ???? >? ? ? ? ? ?Package ?dotwhisker? was removed from the CRAN 
>> repository
>> ???? >? ? ? ? ? ?...
>> ???? >
>> ???? >? ? ? ? ? ?Archived on 2024-04-12 as requires archived package
>> ??? 'prediction'.
>> ???? >
>> ???? >? ? ? ? ? However, I can't for the life of me see where this
>> ??? dependence
>> ???? >? ? ?could
>> ???? >? ? ?come from. Neither the DESCRIPTION file of the last-archived
>> ??? version on
>> ???? >? ? ?CRAN
>> ???? >      
>> ?<https://cran.r-project.org/src/contrib/Archive/dotwhisker/dotwhisker_0.8.1.tar.gz <https://cran.r-project.org/src/contrib/Archive/dotwhisker/dotwhisker_0.8.1.tar.gz> <https://cran.r-project.org/src/contrib/Archive/dotwhisker/dotwhisker_0.8.1.tar.gz <https://cran.r-project.org/src/contrib/Archive/dotwhisker/dotwhisker_0.8.1.tar.gz>>>,
>> ???? >? ? ?nor the version on github
>> ??? <https://github.com/fsolt/dotwhisker
>> ??? <https://github.com/fsolt/dotwhisker>
>> ???? >? ? ?<https://github.com/fsolt/dotwhisker
>> ??? <https://github.com/fsolt/dotwhisker>>>, seem to
>> ???? >? ? ?show any signs of importing prediction ... ?? I suppose 
>> there's a
>> ???? >? ? ?possibility of a recursive dependence, but in that case why
>> ??? wouldn't
>> ???? >? ? ?the
>> ???? >? ? ?direct dependence be reported?
>> ???? >
>> ???? >? ? ?Depends: R (>= 3.2.0), ggplot2 (>= 2.2.1),
>> ???? >? ? ?Imports: grid, gtable, gridExtra, stats, parameters, 
>> performance,
>> ???? >? ? ? ? ? ? ? ?patchwork, margins, dplyr, stringr, ggstance,
>> ??? rlang, purrr
>> ???? >? ? ?Suggests: ordinal, tibble, knitr, rmarkdown, broom
>> ???? >
>> ???? >? ? ? ? ?What am I missing?
>> ???? >
>> ???? >? ? ? ? ?(I'm concerned because I have packages that Suggest:
>> ??? dotwhisker,
>> ???? >? ? ?and
>> ???? >? ? ?the absence of the package from repos is breaking GitHub 
>> Actions
>> ???? >? ? ?checks ...)
>> ???? >
>> ???? >
>> ???? >? ? ? ? ?(This is cross-posted from an issue on the dotwhisker GH
>> ???? >? ? ?repository:
>> ???? > https://github.com/fsolt/dotwhisker/issues/115
>> ??? <https://github.com/fsolt/dotwhisker/issues/115>
>> ???? >? ? ?<https://github.com/fsolt/dotwhisker/issues/115
>> ??? <https://github.com/fsolt/dotwhisker/issues/115>>)
>> ???? >
>> ???? >? ? ?______________________________________________
>> ???? > R-package-devel at r-project.org
>> ??? <mailto:R-package-devel at r-project.org>
>> ??? <mailto:R-package-devel at r-project.org
>> ??? <mailto:R-package-devel at r-project.org>>
>> ???? >? ? ?mailing list
>> ???? > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> ??? <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
>> ???? >? ? ?<https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> ??? <https://stat.ethz.ch/mailman/listinfo/r-package-devel>>
>> ???? >
>>
>> ??? -- ??? Dr. Benjamin Bolker
>> ??? Professor, Mathematics & Statistics and Biology, McMaster University
>> ??? Director, School of Computational Science and Engineering
>> ??? (Acting) Graduate chair, Mathematics & Statistics
>> ???? ?> E-mail is sent at my convenience; I don't expect replies 
>> outside of
>> ??? working hours.
>>
>> ??? ______________________________________________
>> ??? R-package-devel at r-project.org <mailto:R-package-devel at r-project.org>
>> ??? mailing list
>> ??? https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> ??? <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
>>
> 

-- 
Dr. Benjamin Bolker
Professor, Mathematics & Statistics and Biology, McMaster University
Director, School of Computational Science and Engineering
(Acting) Graduate chair, Mathematics & Statistics
 > E-mail is sent at my convenience; I don't expect replies outside of 
working hours.


From bbo|ker @end|ng |rom gm@||@com  Thu Apr 18 15:47:20 2024
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Thu, 18 Apr 2024 09:47:20 -0400
Subject: [R-pkg-devel] puzzling removal of 'dotwhisker' from CRAN
In-Reply-To: <fc4072e2-d087-419e-8a1d-d77bc495f520@statistik.tu-dortmund.de>
References: <8d9ab8de-476e-4e9e-92ab-9120f21b06f1@gmail.com>
 <CAL3ufULYvR_0EAeomibgBS9fCbGgBsgz_9tPfuCo91_uhgh1YA@mail.gmail.com>
 <afaa3b39-20a2-46cf-980b-95d11357679b@gmail.com>
 <CAJuCY5zMvc4inwBz2YNNEwQ8y+7jE+QW1dbGHzw8EFDx8YRE_A@mail.gmail.com>
 <a4b6dc0c-d9de-43c3-bade-118d691e8e18@gmail.com>
 <fc4072e2-d087-419e-8a1d-d77bc495f520@statistik.tu-dortmund.de>
Message-ID: <ed83ad02-ce4b-46a1-943e-d276174f1ef1@gmail.com>



On 2024-04-18 9:41 a.m., Uwe Ligges wrote:
> 
> 
> On 18.04.2024 15:35, Ben Bolker wrote:
>> ??? Yes, but ffbase was archived a long time ago (2022-04-04) and CRAN 
>> has apparently just caught up to checking.? What's a little 
>> frustrating (to me) is that the dependence of prediction on ffbase is 
>> *very* soft ("enhances") ...
> 
> No, but CRAN? has still not received an update and asked for this each 
> month this year, so in Jan, Feb, and March without a response, so we 
> assume prediction is unmaintained. Also, this was escalated to reverse 
> depends.
> 
> Best,
> Uwe Ligges

   Fair enough.  I'm not sure what the last sentence ("this was 
escalated to reverse depends") means though ...

   FWIW I did get an e-mail response from the maintainer two days ago 
suggesting that they were preparing a resubmission ...

> 
> 
>>
>> On 2024-04-18 9:28 a.m., Thierry Onkelinx wrote:
>>> The cascade is even longer. prediction got archived because ffbase 
>>> was no longer available. 
>>> https://cran.r-project.org/web/packages/ffbase/ 
>>> <https://cran.r-project.org/web/packages/ffbase/>
>>>
>>> ir. Thierry Onkelinx
>>> Statisticus / Statistician
>>>
>>> Vlaamse Overheid / Government of Flanders
>>> INSTITUUT VOOR NATUUR- EN BOSONDERZOEK / RESEARCH INSTITUTE FOR 
>>> NATURE AND FOREST
>>> Team Biometrie & Kwaliteitszorg / Team Biometrics & Quality Assurance
>>> thierry.onkelinx at inbo.be <mailto:thierry.onkelinx at inbo.be>
>>> Havenlaan 88 bus 73, 1000 Brussel
>>> *Postadres:* Koning Albert II-laan 15 bus 186, 1210 Brussel
>>> /Poststukken die naar dit adres worden gestuurd, worden ingescand en 
>>> digitaal aan de geadresseerde bezorgd. Zo kan de Vlaamse overheid 
>>> haar dossiers volledig digitaal behandelen. Poststukken met de 
>>> vermelding ?vertrouwelijk? worden niet ingescand, maar ongeopend aan 
>>> de geadresseerde bezorgd./
>>> www.inbo.be <http://www.inbo.be>
>>>
>>> ///////////////////////////////////////////////////////////////////////////////////////////
>>> To call in the statistician after the experiment is done may be no 
>>> more than asking him to perform a post-mortem examination: he may be 
>>> able to say what the experiment died of. ~ Sir Ronald Aylmer Fisher
>>> The plural of anecdote is not data. ~ Roger Brinner
>>> The combination of some data and an aching desire for an answer does 
>>> not ensure that a reasonable answer can be extracted from a given 
>>> body of data. ~ John Tukey
>>> ///////////////////////////////////////////////////////////////////////////////////////////
>>>
>>> <https://www.inbo.be>
>>>
>>>
>>> Op do 18 apr 2024 om 15:25 schreef Ben Bolker <bbolker at gmail.com 
>>> <mailto:bbolker at gmail.com>>:
>>>
>>> ???? ? ?Thank you! (I know about package_dependencies() but ran into
>>> ??? precisely the same problem and didn't want to re-implement it ...)
>>>
>>> ??? On 2024-04-18 9:11 a.m., Josiah Parry wrote:
>>> ???? > Well, after trying to install the package, I believe the issue is
>>> ???? > because margins has been archived.
>>> ???? >
>>> ???? > https://cran.r-project.org/web/packages/margins/index.html
>>> ??? <https://cran.r-project.org/web/packages/margins/index.html>
>>> ???? > <https://cran.r-project.org/web/packages/margins/index.html
>>> ??? <https://cran.r-project.org/web/packages/margins/index.html>>
>>> ???? >
>>> ???? > You can check recursive dependencies using
>>> ???? > `tools::package_dependencies("pkg", recursive = TRUE)` which
>>> ??? would help
>>> ???? > you in this case. I couldn't run it since the package is not
>>> ??? available
>>> ???? > on CRAN, however.
>>> ???? >
>>> ???? >
>>> ???? > On Thu, Apr 18, 2024 at 9:05?AM Ben Bolker <bbolker at gmail.com
>>> ??? <mailto:bbolker at gmail.com>
>>> ???? > <mailto:bbolker at gmail.com <mailto:bbolker at gmail.com>>> wrote:
>>> ???? >
>>> ???? >? ? ? ? ?The 'dotwhisker' package was archived on CRAN: from
>>> ???? > https://cran.r-project.org/web/packages/dotwhisker/index.html
>>> ??? <https://cran.r-project.org/web/packages/dotwhisker/index.html>
>>> ???? > ?<https://cran.r-project.org/web/packages/dotwhisker/index.html
>>> ??? <https://cran.r-project.org/web/packages/dotwhisker/index.html>>
>>> ???? >
>>> ???? >? ? ? ? ? ?Package ?dotwhisker? was removed from the CRAN 
>>> repository
>>> ???? >? ? ? ? ? ?...
>>> ???? >
>>> ???? >? ? ? ? ? ?Archived on 2024-04-12 as requires archived package
>>> ??? 'prediction'.
>>> ???? >
>>> ???? >? ? ? ? ? However, I can't for the life of me see where this
>>> ??? dependence
>>> ???? >? ? ?could
>>> ???? >? ? ?come from. Neither the DESCRIPTION file of the last-archived
>>> ??? version on
>>> ???? >? ? ?CRAN
>>> ???? > 
>>> ?<https://cran.r-project.org/src/contrib/Archive/dotwhisker/dotwhisker_0.8.1.tar.gz <https://cran.r-project.org/src/contrib/Archive/dotwhisker/dotwhisker_0.8.1.tar.gz> <https://cran.r-project.org/src/contrib/Archive/dotwhisker/dotwhisker_0.8.1.tar.gz <https://cran.r-project.org/src/contrib/Archive/dotwhisker/dotwhisker_0.8.1.tar.gz>>>,
>>> ???? >? ? ?nor the version on github
>>> ??? <https://github.com/fsolt/dotwhisker
>>> ??? <https://github.com/fsolt/dotwhisker>
>>> ???? >? ? ?<https://github.com/fsolt/dotwhisker
>>> ??? <https://github.com/fsolt/dotwhisker>>>, seem to
>>> ???? >? ? ?show any signs of importing prediction ... ?? I suppose 
>>> there's a
>>> ???? >? ? ?possibility of a recursive dependence, but in that case why
>>> ??? wouldn't
>>> ???? >? ? ?the
>>> ???? >? ? ?direct dependence be reported?
>>> ???? >
>>> ???? >? ? ?Depends: R (>= 3.2.0), ggplot2 (>= 2.2.1),
>>> ???? >? ? ?Imports: grid, gtable, gridExtra, stats, parameters, 
>>> performance,
>>> ???? >? ? ? ? ? ? ? ?patchwork, margins, dplyr, stringr, ggstance,
>>> ??? rlang, purrr
>>> ???? >? ? ?Suggests: ordinal, tibble, knitr, rmarkdown, broom
>>> ???? >
>>> ???? >? ? ? ? ?What am I missing?
>>> ???? >
>>> ???? >? ? ? ? ?(I'm concerned because I have packages that Suggest:
>>> ??? dotwhisker,
>>> ???? >? ? ?and
>>> ???? >? ? ?the absence of the package from repos is breaking GitHub 
>>> Actions
>>> ???? >? ? ?checks ...)
>>> ???? >
>>> ???? >
>>> ???? >? ? ? ? ?(This is cross-posted from an issue on the dotwhisker GH
>>> ???? >? ? ?repository:
>>> ???? > https://github.com/fsolt/dotwhisker/issues/115
>>> ??? <https://github.com/fsolt/dotwhisker/issues/115>
>>> ???? >? ? ?<https://github.com/fsolt/dotwhisker/issues/115
>>> ??? <https://github.com/fsolt/dotwhisker/issues/115>>)
>>> ???? >
>>> ???? >? ? ?______________________________________________
>>> ???? > R-package-devel at r-project.org
>>> ??? <mailto:R-package-devel at r-project.org>
>>> ??? <mailto:R-package-devel at r-project.org
>>> ??? <mailto:R-package-devel at r-project.org>>
>>> ???? >? ? ?mailing list
>>> ???? > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>> ??? <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
>>> ???? >? ? ?<https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>> ??? <https://stat.ethz.ch/mailman/listinfo/r-package-devel>>
>>> ???? >
>>>
>>> ??? -- ??? Dr. Benjamin Bolker
>>> ??? Professor, Mathematics & Statistics and Biology, McMaster University
>>> ??? Director, School of Computational Science and Engineering
>>> ??? (Acting) Graduate chair, Mathematics & Statistics
>>> ???? ?> E-mail is sent at my convenience; I don't expect replies 
>>> outside of
>>> ??? working hours.
>>>
>>> ??? ______________________________________________
>>> ??? R-package-devel at r-project.org <mailto:R-package-devel at r-project.org>
>>> ??? mailing list
>>> ??? https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>> ??? <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
>>>
>>

-- 
Dr. Benjamin Bolker
Professor, Mathematics & Statistics and Biology, McMaster University
Director, School of Computational Science and Engineering
(Acting) Graduate chair, Mathematics & Statistics
 > E-mail is sent at my convenience; I don't expect replies outside of 
working hours.


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Thu Apr 18 15:48:30 2024
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Thu, 18 Apr 2024 15:48:30 +0200
Subject: [R-pkg-devel] puzzling removal of 'dotwhisker' from CRAN
In-Reply-To: <aa185629-0726-42e1-adb6-ec7364b1ea0e@gmail.com>
References: <8d9ab8de-476e-4e9e-92ab-9120f21b06f1@gmail.com>
 <CAL3ufULYvR_0EAeomibgBS9fCbGgBsgz_9tPfuCo91_uhgh1YA@mail.gmail.com>
 <afaa3b39-20a2-46cf-980b-95d11357679b@gmail.com>
 <CAJuCY5zMvc4inwBz2YNNEwQ8y+7jE+QW1dbGHzw8EFDx8YRE_A@mail.gmail.com>
 <a4b6dc0c-d9de-43c3-bade-118d691e8e18@gmail.com>
 <aa185629-0726-42e1-adb6-ec7364b1ea0e@gmail.com>
Message-ID: <2bfafd04-5f4e-4c25-ab49-fbcbec6ef929@statistik.tu-dortmund.de>



On 18.04.2024 15:43, Ben Bolker wrote:
>  ?To clarify, from an off-list conversation:
> 
>  ? AFAICT the chain is
> 
>  ? dotwhisker Imports
>  ???? margins, which Imports
>  ?????? prediction, which Enhances
>  ???????? ffbase? (archived in 2022 for 'coercion to logical' problems)
> 
>  ?(that conversation also pointed out that Enhances is a dependency *in 
> the opposite direction* -- i.e. if A Enhances B, it's not entirely clear 
> why the disappearance of B should matter at all ...)

The year old check notes in prediciton matter, not the level of any 
dependencies.

Best,
Uwe Ligges




> 
> 
> 
> On 2024-04-18 9:35 a.m., Ben Bolker wrote:
>> ??? Yes, but ffbase was archived a long time ago (2022-04-04) and CRAN 
>> has apparently just caught up to checking.? What's a little 
>> frustrating (to me) is that the dependence of prediction on ffbase is 
>> *very* soft ("enhances") ...
>>
>> On 2024-04-18 9:28 a.m., Thierry Onkelinx wrote:
>>> The cascade is even longer. prediction got archived because ffbase 
>>> was no longer available. 
>>> https://cran.r-project.org/web/packages/ffbase/ 
>>> <https://cran.r-project.org/web/packages/ffbase/>
>>>
>>> ir. Thierry Onkelinx
>>> Statisticus / Statistician
>>>
>>> Vlaamse Overheid / Government of Flanders
>>> INSTITUUT VOOR NATUUR- EN BOSONDERZOEK / RESEARCH INSTITUTE FOR 
>>> NATURE AND FOREST
>>> Team Biometrie & Kwaliteitszorg / Team Biometrics & Quality Assurance
>>> thierry.onkelinx at inbo.be <mailto:thierry.onkelinx at inbo.be>
>>> Havenlaan 88 bus 73, 1000 Brussel
>>> *Postadres:* Koning Albert II-laan 15 bus 186, 1210 Brussel
>>> /Poststukken die naar dit adres worden gestuurd, worden ingescand en 
>>> digitaal aan de geadresseerde bezorgd. Zo kan de Vlaamse overheid 
>>> haar dossiers volledig digitaal behandelen. Poststukken met de 
>>> vermelding ?vertrouwelijk? worden niet ingescand, maar ongeopend aan 
>>> de geadresseerde bezorgd./
>>> www.inbo.be <http://www.inbo.be>
>>>
>>> ///////////////////////////////////////////////////////////////////////////////////////////
>>> To call in the statistician after the experiment is done may be no 
>>> more than asking him to perform a post-mortem examination: he may be 
>>> able to say what the experiment died of. ~ Sir Ronald Aylmer Fisher
>>> The plural of anecdote is not data. ~ Roger Brinner
>>> The combination of some data and an aching desire for an answer does 
>>> not ensure that a reasonable answer can be extracted from a given 
>>> body of data. ~ John Tukey
>>> ///////////////////////////////////////////////////////////////////////////////////////////
>>>
>>> <https://www.inbo.be>
>>>
>>>
>>> Op do 18 apr 2024 om 15:25 schreef Ben Bolker <bbolker at gmail.com 
>>> <mailto:bbolker at gmail.com>>:
>>>
>>> ???? ? ?Thank you! (I know about package_dependencies() but ran into
>>> ??? precisely the same problem and didn't want to re-implement it ...)
>>>
>>> ??? On 2024-04-18 9:11 a.m., Josiah Parry wrote:
>>> ???? > Well, after trying to install the package, I believe the issue is
>>> ???? > because margins has been archived.
>>> ???? >
>>> ???? > https://cran.r-project.org/web/packages/margins/index.html
>>> ??? <https://cran.r-project.org/web/packages/margins/index.html>
>>> ???? > <https://cran.r-project.org/web/packages/margins/index.html
>>> ??? <https://cran.r-project.org/web/packages/margins/index.html>>
>>> ???? >
>>> ???? > You can check recursive dependencies using
>>> ???? > `tools::package_dependencies("pkg", recursive = TRUE)` which
>>> ??? would help
>>> ???? > you in this case. I couldn't run it since the package is not
>>> ??? available
>>> ???? > on CRAN, however.
>>> ???? >
>>> ???? >
>>> ???? > On Thu, Apr 18, 2024 at 9:05?AM Ben Bolker <bbolker at gmail.com
>>> ??? <mailto:bbolker at gmail.com>
>>> ???? > <mailto:bbolker at gmail.com <mailto:bbolker at gmail.com>>> wrote:
>>> ???? >
>>> ???? >? ? ? ? ?The 'dotwhisker' package was archived on CRAN: from
>>> ???? > https://cran.r-project.org/web/packages/dotwhisker/index.html
>>> ??? <https://cran.r-project.org/web/packages/dotwhisker/index.html>
>>> ???? > ?<https://cran.r-project.org/web/packages/dotwhisker/index.html
>>> ??? <https://cran.r-project.org/web/packages/dotwhisker/index.html>>
>>> ???? >
>>> ???? >? ? ? ? ? ?Package ?dotwhisker? was removed from the CRAN 
>>> repository
>>> ???? >? ? ? ? ? ?...
>>> ???? >
>>> ???? >? ? ? ? ? ?Archived on 2024-04-12 as requires archived package
>>> ??? 'prediction'.
>>> ???? >
>>> ???? >? ? ? ? ? However, I can't for the life of me see where this
>>> ??? dependence
>>> ???? >? ? ?could
>>> ???? >? ? ?come from. Neither the DESCRIPTION file of the last-archived
>>> ??? version on
>>> ???? >? ? ?CRAN
>>> ???? > 
>>> ?<https://cran.r-project.org/src/contrib/Archive/dotwhisker/dotwhisker_0.8.1.tar.gz <https://cran.r-project.org/src/contrib/Archive/dotwhisker/dotwhisker_0.8.1.tar.gz> <https://cran.r-project.org/src/contrib/Archive/dotwhisker/dotwhisker_0.8.1.tar.gz <https://cran.r-project.org/src/contrib/Archive/dotwhisker/dotwhisker_0.8.1.tar.gz>>>,
>>> ???? >? ? ?nor the version on github
>>> ??? <https://github.com/fsolt/dotwhisker
>>> ??? <https://github.com/fsolt/dotwhisker>
>>> ???? >? ? ?<https://github.com/fsolt/dotwhisker
>>> ??? <https://github.com/fsolt/dotwhisker>>>, seem to
>>> ???? >? ? ?show any signs of importing prediction ... ?? I suppose 
>>> there's a
>>> ???? >? ? ?possibility of a recursive dependence, but in that case why
>>> ??? wouldn't
>>> ???? >? ? ?the
>>> ???? >? ? ?direct dependence be reported?
>>> ???? >
>>> ???? >? ? ?Depends: R (>= 3.2.0), ggplot2 (>= 2.2.1),
>>> ???? >? ? ?Imports: grid, gtable, gridExtra, stats, parameters, 
>>> performance,
>>> ???? >? ? ? ? ? ? ? ?patchwork, margins, dplyr, stringr, ggstance,
>>> ??? rlang, purrr
>>> ???? >? ? ?Suggests: ordinal, tibble, knitr, rmarkdown, broom
>>> ???? >
>>> ???? >? ? ? ? ?What am I missing?
>>> ???? >
>>> ???? >? ? ? ? ?(I'm concerned because I have packages that Suggest:
>>> ??? dotwhisker,
>>> ???? >? ? ?and
>>> ???? >? ? ?the absence of the package from repos is breaking GitHub 
>>> Actions
>>> ???? >? ? ?checks ...)
>>> ???? >
>>> ???? >
>>> ???? >? ? ? ? ?(This is cross-posted from an issue on the dotwhisker GH
>>> ???? >? ? ?repository:
>>> ???? > https://github.com/fsolt/dotwhisker/issues/115
>>> ??? <https://github.com/fsolt/dotwhisker/issues/115>
>>> ???? >? ? ?<https://github.com/fsolt/dotwhisker/issues/115
>>> ??? <https://github.com/fsolt/dotwhisker/issues/115>>)
>>> ???? >
>>> ???? >? ? ?______________________________________________
>>> ???? > R-package-devel at r-project.org
>>> ??? <mailto:R-package-devel at r-project.org>
>>> ??? <mailto:R-package-devel at r-project.org
>>> ??? <mailto:R-package-devel at r-project.org>>
>>> ???? >? ? ?mailing list
>>> ???? > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>> ??? <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
>>> ???? >? ? ?<https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>> ??? <https://stat.ethz.ch/mailman/listinfo/r-package-devel>>
>>> ???? >
>>>
>>> ??? -- ??? Dr. Benjamin Bolker
>>> ??? Professor, Mathematics & Statistics and Biology, McMaster University
>>> ??? Director, School of Computational Science and Engineering
>>> ??? (Acting) Graduate chair, Mathematics & Statistics
>>> ???? ?> E-mail is sent at my convenience; I don't expect replies 
>>> outside of
>>> ??? working hours.
>>>
>>> ??? ______________________________________________
>>> ??? R-package-devel at r-project.org <mailto:R-package-devel at r-project.org>
>>> ??? mailing list
>>> ??? https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>> ??? <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
>>>
>>
> 

From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Thu Apr 18 15:49:02 2024
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Thu, 18 Apr 2024 15:49:02 +0200
Subject: [R-pkg-devel] puzzling removal of 'dotwhisker' from CRAN
In-Reply-To: <2bfafd04-5f4e-4c25-ab49-fbcbec6ef929@statistik.tu-dortmund.de>
References: <8d9ab8de-476e-4e9e-92ab-9120f21b06f1@gmail.com>
 <CAL3ufULYvR_0EAeomibgBS9fCbGgBsgz_9tPfuCo91_uhgh1YA@mail.gmail.com>
 <afaa3b39-20a2-46cf-980b-95d11357679b@gmail.com>
 <CAJuCY5zMvc4inwBz2YNNEwQ8y+7jE+QW1dbGHzw8EFDx8YRE_A@mail.gmail.com>
 <a4b6dc0c-d9de-43c3-bade-118d691e8e18@gmail.com>
 <aa185629-0726-42e1-adb6-ec7364b1ea0e@gmail.com>
 <2bfafd04-5f4e-4c25-ab49-fbcbec6ef929@statistik.tu-dortmund.de>
Message-ID: <c2a8f81e-0801-461f-a682-cafa223723d0@statistik.tu-dortmund.de>



On 18.04.2024 15:48, Uwe Ligges wrote:
> 
> 
> On 18.04.2024 15:43, Ben Bolker wrote:
>> ??To clarify, from an off-list conversation:
>>
>> ?? AFAICT the chain is
>>
>> ?? dotwhisker Imports
>> ????? margins, which Imports
>> ??????? prediction, which Enhances
>> ????????? ffbase? (archived in 2022 for 'coercion to logical' problems)
>>
>> ??(that conversation also pointed out that Enhances is a dependency 
>> *in the opposite direction* -- i.e. if A Enhances B, it's not entirely 
>> clear why the disappearance of B should matter at all ...)
> 
> The year old check notes in prediciton matter, not the level of any 
> dependencies.

.. and even more the non-maintainance state of prediction.

Best,
Uwe Ligges


> 
> Best,
> Uwe Ligges
> 
> 
> 
> 
>>
>>
>>
>> On 2024-04-18 9:35 a.m., Ben Bolker wrote:
>>> ??? Yes, but ffbase was archived a long time ago (2022-04-04) and 
>>> CRAN has apparently just caught up to checking.? What's a little 
>>> frustrating (to me) is that the dependence of prediction on ffbase is 
>>> *very* soft ("enhances") ...
>>>
>>> On 2024-04-18 9:28 a.m., Thierry Onkelinx wrote:
>>>> The cascade is even longer. prediction got archived because ffbase 
>>>> was no longer available. 
>>>> https://cran.r-project.org/web/packages/ffbase/ 
>>>> <https://cran.r-project.org/web/packages/ffbase/>
>>>>
>>>> ir. Thierry Onkelinx
>>>> Statisticus / Statistician
>>>>
>>>> Vlaamse Overheid / Government of Flanders
>>>> INSTITUUT VOOR NATUUR- EN BOSONDERZOEK / RESEARCH INSTITUTE FOR 
>>>> NATURE AND FOREST
>>>> Team Biometrie & Kwaliteitszorg / Team Biometrics & Quality Assurance
>>>> thierry.onkelinx at inbo.be <mailto:thierry.onkelinx at inbo.be>
>>>> Havenlaan 88 bus 73, 1000 Brussel
>>>> *Postadres:* Koning Albert II-laan 15 bus 186, 1210 Brussel
>>>> /Poststukken die naar dit adres worden gestuurd, worden ingescand en 
>>>> digitaal aan de geadresseerde bezorgd. Zo kan de Vlaamse overheid 
>>>> haar dossiers volledig digitaal behandelen. Poststukken met de 
>>>> vermelding ?vertrouwelijk? worden niet ingescand, maar ongeopend aan 
>>>> de geadresseerde bezorgd./
>>>> www.inbo.be <http://www.inbo.be>
>>>>
>>>> ///////////////////////////////////////////////////////////////////////////////////////////
>>>> To call in the statistician after the experiment is done may be no 
>>>> more than asking him to perform a post-mortem examination: he may be 
>>>> able to say what the experiment died of. ~ Sir Ronald Aylmer Fisher
>>>> The plural of anecdote is not data. ~ Roger Brinner
>>>> The combination of some data and an aching desire for an answer does 
>>>> not ensure that a reasonable answer can be extracted from a given 
>>>> body of data. ~ John Tukey
>>>> ///////////////////////////////////////////////////////////////////////////////////////////
>>>>
>>>> <https://www.inbo.be>
>>>>
>>>>
>>>> Op do 18 apr 2024 om 15:25 schreef Ben Bolker <bbolker at gmail.com 
>>>> <mailto:bbolker at gmail.com>>:
>>>>
>>>> ???? ? ?Thank you! (I know about package_dependencies() but ran into
>>>> ??? precisely the same problem and didn't want to re-implement it ...)
>>>>
>>>> ??? On 2024-04-18 9:11 a.m., Josiah Parry wrote:
>>>> ???? > Well, after trying to install the package, I believe the 
>>>> issue is
>>>> ???? > because margins has been archived.
>>>> ???? >
>>>> ???? > https://cran.r-project.org/web/packages/margins/index.html
>>>> ??? <https://cran.r-project.org/web/packages/margins/index.html>
>>>> ???? > <https://cran.r-project.org/web/packages/margins/index.html
>>>> ??? <https://cran.r-project.org/web/packages/margins/index.html>>
>>>> ???? >
>>>> ???? > You can check recursive dependencies using
>>>> ???? > `tools::package_dependencies("pkg", recursive = TRUE)` which
>>>> ??? would help
>>>> ???? > you in this case. I couldn't run it since the package is not
>>>> ??? available
>>>> ???? > on CRAN, however.
>>>> ???? >
>>>> ???? >
>>>> ???? > On Thu, Apr 18, 2024 at 9:05?AM Ben Bolker <bbolker at gmail.com
>>>> ??? <mailto:bbolker at gmail.com>
>>>> ???? > <mailto:bbolker at gmail.com <mailto:bbolker at gmail.com>>> wrote:
>>>> ???? >
>>>> ???? >? ? ? ? ?The 'dotwhisker' package was archived on CRAN: from
>>>> ???? > https://cran.r-project.org/web/packages/dotwhisker/index.html
>>>> ??? <https://cran.r-project.org/web/packages/dotwhisker/index.html>
>>>> ???? > ?<https://cran.r-project.org/web/packages/dotwhisker/index.html
>>>> ??? <https://cran.r-project.org/web/packages/dotwhisker/index.html>>
>>>> ???? >
>>>> ???? >? ? ? ? ? ?Package ?dotwhisker? was removed from the CRAN 
>>>> repository
>>>> ???? >? ? ? ? ? ?...
>>>> ???? >
>>>> ???? >? ? ? ? ? ?Archived on 2024-04-12 as requires archived package
>>>> ??? 'prediction'.
>>>> ???? >
>>>> ???? >? ? ? ? ? However, I can't for the life of me see where this
>>>> ??? dependence
>>>> ???? >? ? ?could
>>>> ???? >? ? ?come from. Neither the DESCRIPTION file of the last-archived
>>>> ??? version on
>>>> ???? >? ? ?CRAN
>>>> ???? > 
>>>> ?<https://cran.r-project.org/src/contrib/Archive/dotwhisker/dotwhisker_0.8.1.tar.gz <https://cran.r-project.org/src/contrib/Archive/dotwhisker/dotwhisker_0.8.1.tar.gz> <https://cran.r-project.org/src/contrib/Archive/dotwhisker/dotwhisker_0.8.1.tar.gz <https://cran.r-project.org/src/contrib/Archive/dotwhisker/dotwhisker_0.8.1.tar.gz>>>,
>>>> ???? >? ? ?nor the version on github
>>>> ??? <https://github.com/fsolt/dotwhisker
>>>> ??? <https://github.com/fsolt/dotwhisker>
>>>> ???? >? ? ?<https://github.com/fsolt/dotwhisker
>>>> ??? <https://github.com/fsolt/dotwhisker>>>, seem to
>>>> ???? >? ? ?show any signs of importing prediction ... ?? I suppose 
>>>> there's a
>>>> ???? >? ? ?possibility of a recursive dependence, but in that case why
>>>> ??? wouldn't
>>>> ???? >? ? ?the
>>>> ???? >? ? ?direct dependence be reported?
>>>> ???? >
>>>> ???? >? ? ?Depends: R (>= 3.2.0), ggplot2 (>= 2.2.1),
>>>> ???? >? ? ?Imports: grid, gtable, gridExtra, stats, parameters, 
>>>> performance,
>>>> ???? >? ? ? ? ? ? ? ?patchwork, margins, dplyr, stringr, ggstance,
>>>> ??? rlang, purrr
>>>> ???? >? ? ?Suggests: ordinal, tibble, knitr, rmarkdown, broom
>>>> ???? >
>>>> ???? >? ? ? ? ?What am I missing?
>>>> ???? >
>>>> ???? >? ? ? ? ?(I'm concerned because I have packages that Suggest:
>>>> ??? dotwhisker,
>>>> ???? >? ? ?and
>>>> ???? >? ? ?the absence of the package from repos is breaking GitHub 
>>>> Actions
>>>> ???? >? ? ?checks ...)
>>>> ???? >
>>>> ???? >
>>>> ???? >? ? ? ? ?(This is cross-posted from an issue on the dotwhisker GH
>>>> ???? >? ? ?repository:
>>>> ???? > https://github.com/fsolt/dotwhisker/issues/115
>>>> ??? <https://github.com/fsolt/dotwhisker/issues/115>
>>>> ???? >? ? ?<https://github.com/fsolt/dotwhisker/issues/115
>>>> ??? <https://github.com/fsolt/dotwhisker/issues/115>>)
>>>> ???? >
>>>> ???? >? ? ?______________________________________________
>>>> ???? > R-package-devel at r-project.org
>>>> ??? <mailto:R-package-devel at r-project.org>
>>>> ??? <mailto:R-package-devel at r-project.org
>>>> ??? <mailto:R-package-devel at r-project.org>>
>>>> ???? >? ? ?mailing list
>>>> ???? > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>> ??? <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
>>>> ???? >? ? ?<https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>> ??? <https://stat.ethz.ch/mailman/listinfo/r-package-devel>>
>>>> ???? >
>>>>
>>>> ??? -- ??? Dr. Benjamin Bolker
>>>> ??? Professor, Mathematics & Statistics and Biology, McMaster 
>>>> University
>>>> ??? Director, School of Computational Science and Engineering
>>>> ??? (Acting) Graduate chair, Mathematics & Statistics
>>>> ???? ?> E-mail is sent at my convenience; I don't expect replies 
>>>> outside of
>>>> ??? working hours.
>>>>
>>>> ??? ______________________________________________
>>>> ??? R-package-devel at r-project.org 
>>>> <mailto:R-package-devel at r-project.org>
>>>> ??? mailing list
>>>> ??? https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>> ??? <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
>>>>
>>>
>>

From henr|k@bengt@@on @end|ng |rom gm@||@com  Thu Apr 18 18:51:06 2024
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Thu, 18 Apr 2024 09:51:06 -0700
Subject: [R-pkg-devel] puzzling removal of 'dotwhisker' from CRAN
In-Reply-To: <fc4072e2-d087-419e-8a1d-d77bc495f520@statistik.tu-dortmund.de>
References: <8d9ab8de-476e-4e9e-92ab-9120f21b06f1@gmail.com>
 <CAL3ufULYvR_0EAeomibgBS9fCbGgBsgz_9tPfuCo91_uhgh1YA@mail.gmail.com>
 <afaa3b39-20a2-46cf-980b-95d11357679b@gmail.com>
 <CAJuCY5zMvc4inwBz2YNNEwQ8y+7jE+QW1dbGHzw8EFDx8YRE_A@mail.gmail.com>
 <a4b6dc0c-d9de-43c3-bade-118d691e8e18@gmail.com>
 <fc4072e2-d087-419e-8a1d-d77bc495f520@statistik.tu-dortmund.de>
Message-ID: <CAFDcVCT0b_QqvqJ_XPXHxPn2abquRFyiSudtt3U_D8g7Rp_baQ@mail.gmail.com>

On Thu, Apr 18, 2024 at 6:41?AM Uwe Ligges
<ligges at statistik.tu-dortmund.de> wrote:
>
> On 18.04.2024 15:35, Ben Bolker wrote:
> >     Yes, but ffbase was archived a long time ago (2022-04-04) and CRAN
> > has apparently just caught up to checking.  What's a little frustrating
> > (to me) is that the dependence of prediction on ffbase is *very* soft
> > ("enhances") ...
>
> No, but CRAN  has still not received an update and asked for this each
> month this year, so in Jan, Feb, and March without a response, so we
> assume prediction is unmaintained. Also, this was escalated to reverse
> depends.

Uwe, has the CRAN Team ever considered making these request-for-update
email messages from CRAN public in real-time? For instance, there
could be a public "read-only" mailing list that anyone can subscribe
to, but not send/reply to. I see several advantages with such an
approach, e.g.

* maintainers of reverse dependencies would be aware of potential
problems much sooner,
* so would end-users who rely on the package (who often only notice
when a package is archived),
* the community could early on offer their help to the package maintainer, and
* the community could help locate and notify maintainers whose email
addresses are no longer working.

I'd imagine this would help lower the workload on the CRAN Team, so a
win-win for everyone. I, for sure, would find that useful.

Thanks,

Henrik

>> Best,
> Uwe Ligges
>
>
> >
> > On 2024-04-18 9:28 a.m., Thierry Onkelinx wrote:
> >> The cascade is even longer. prediction got archived because ffbase was
> >> no longer available. https://cran.r-project.org/web/packages/ffbase/
> >> <https://cran.r-project.org/web/packages/ffbase/>
> >>
> >> ir. Thierry Onkelinx
> >> Statisticus / Statistician
> >>
> >> Vlaamse Overheid / Government of Flanders
> >> INSTITUUT VOOR NATUUR- EN BOSONDERZOEK / RESEARCH INSTITUTE FOR NATURE
> >> AND FOREST
> >> Team Biometrie & Kwaliteitszorg / Team Biometrics & Quality Assurance
> >> thierry.onkelinx at inbo.be <mailto:thierry.onkelinx at inbo.be>
> >> Havenlaan 88 bus 73, 1000 Brussel
> >> *Postadres:* Koning Albert II-laan 15 bus 186, 1210 Brussel
> >> /Poststukken die naar dit adres worden gestuurd, worden ingescand en
> >> digitaal aan de geadresseerde bezorgd. Zo kan de Vlaamse overheid haar
> >> dossiers volledig digitaal behandelen. Poststukken met de vermelding
> >> ?vertrouwelijk? worden niet ingescand, maar ongeopend aan de
> >> geadresseerde bezorgd./
> >> www.inbo.be <http://www.inbo.be>
> >>
> >> ///////////////////////////////////////////////////////////////////////////////////////////
> >> To call in the statistician after the experiment is done may be no
> >> more than asking him to perform a post-mortem examination: he may be
> >> able to say what the experiment died of. ~ Sir Ronald Aylmer Fisher
> >> The plural of anecdote is not data. ~ Roger Brinner
> >> The combination of some data and an aching desire for an answer does
> >> not ensure that a reasonable answer can be extracted from a given body
> >> of data. ~ John Tukey
> >> ///////////////////////////////////////////////////////////////////////////////////////////
> >>
> >> <https://www.inbo.be>
> >>
> >>
> >> Op do 18 apr 2024 om 15:25 schreef Ben Bolker <bbolker at gmail.com
> >> <mailto:bbolker at gmail.com>>:
> >>
> >>         Thank you! (I know about package_dependencies() but ran into
> >>     precisely the same problem and didn't want to re-implement it ...)
> >>
> >>     On 2024-04-18 9:11 a.m., Josiah Parry wrote:
> >>      > Well, after trying to install the package, I believe the issue is
> >>      > because margins has been archived.
> >>      >
> >>      > https://cran.r-project.org/web/packages/margins/index.html
> >>     <https://cran.r-project.org/web/packages/margins/index.html>
> >>      > <https://cran.r-project.org/web/packages/margins/index.html
> >>     <https://cran.r-project.org/web/packages/margins/index.html>>
> >>      >
> >>      > You can check recursive dependencies using
> >>      > `tools::package_dependencies("pkg", recursive = TRUE)` which
> >>     would help
> >>      > you in this case. I couldn't run it since the package is not
> >>     available
> >>      > on CRAN, however.
> >>      >
> >>      >
> >>      > On Thu, Apr 18, 2024 at 9:05?AM Ben Bolker <bbolker at gmail.com
> >>     <mailto:bbolker at gmail.com>
> >>      > <mailto:bbolker at gmail.com <mailto:bbolker at gmail.com>>> wrote:
> >>      >
> >>      >         The 'dotwhisker' package was archived on CRAN: from
> >>      > https://cran.r-project.org/web/packages/dotwhisker/index.html
> >>     <https://cran.r-project.org/web/packages/dotwhisker/index.html>
> >>      >
> >>  <https://cran.r-project.org/web/packages/dotwhisker/index.html
> >>     <https://cran.r-project.org/web/packages/dotwhisker/index.html>>
> >>      >
> >>      >           Package ?dotwhisker? was removed from the CRAN
> >> repository
> >>      >           ...
> >>      >
> >>      >           Archived on 2024-04-12 as requires archived package
> >>     'prediction'.
> >>      >
> >>      >          However, I can't for the life of me see where this
> >>     dependence
> >>      >     could
> >>      >     come from. Neither the DESCRIPTION file of the last-archived
> >>     version on
> >>      >     CRAN
> >>      >
> >>  <https://cran.r-project.org/src/contrib/Archive/dotwhisker/dotwhisker_0.8.1.tar.gz <https://cran.r-project.org/src/contrib/Archive/dotwhisker/dotwhisker_0.8.1.tar.gz> <https://cran.r-project.org/src/contrib/Archive/dotwhisker/dotwhisker_0.8.1.tar.gz <https://cran.r-project.org/src/contrib/Archive/dotwhisker/dotwhisker_0.8.1.tar.gz>>>,
> >>      >     nor the version on github
> >>     <https://github.com/fsolt/dotwhisker
> >>     <https://github.com/fsolt/dotwhisker>
> >>      >     <https://github.com/fsolt/dotwhisker
> >>     <https://github.com/fsolt/dotwhisker>>>, seem to
> >>      >     show any signs of importing prediction ... ?? I suppose
> >> there's a
> >>      >     possibility of a recursive dependence, but in that case why
> >>     wouldn't
> >>      >     the
> >>      >     direct dependence be reported?
> >>      >
> >>      >     Depends: R (>= 3.2.0), ggplot2 (>= 2.2.1),
> >>      >     Imports: grid, gtable, gridExtra, stats, parameters,
> >> performance,
> >>      >               patchwork, margins, dplyr, stringr, ggstance,
> >>     rlang, purrr
> >>      >     Suggests: ordinal, tibble, knitr, rmarkdown, broom
> >>      >
> >>      >         What am I missing?
> >>      >
> >>      >         (I'm concerned because I have packages that Suggest:
> >>     dotwhisker,
> >>      >     and
> >>      >     the absence of the package from repos is breaking GitHub
> >> Actions
> >>      >     checks ...)
> >>      >
> >>      >
> >>      >         (This is cross-posted from an issue on the dotwhisker GH
> >>      >     repository:
> >>      > https://github.com/fsolt/dotwhisker/issues/115
> >>     <https://github.com/fsolt/dotwhisker/issues/115>
> >>      >     <https://github.com/fsolt/dotwhisker/issues/115
> >>     <https://github.com/fsolt/dotwhisker/issues/115>>)
> >>      >
> >>      >     ______________________________________________
> >>      > R-package-devel at r-project.org
> >>     <mailto:R-package-devel at r-project.org>
> >>     <mailto:R-package-devel at r-project.org
> >>     <mailto:R-package-devel at r-project.org>>
> >>      >     mailing list
> >>      > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>     <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
> >>      >     <https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>     <https://stat.ethz.ch/mailman/listinfo/r-package-devel>>
> >>      >
> >>
> >>     --     Dr. Benjamin Bolker
> >>     Professor, Mathematics & Statistics and Biology, McMaster University
> >>     Director, School of Computational Science and Engineering
> >>     (Acting) Graduate chair, Mathematics & Statistics
> >>       > E-mail is sent at my convenience; I don't expect replies
> >> outside of
> >>     working hours.
> >>
> >>     ______________________________________________
> >>     R-package-devel at r-project.org <mailto:R-package-devel at r-project.org>
> >>     mailing list
> >>     https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>     <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
> >>
> >
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From |@@@c-t-peter@en @end|ng |rom u|ow@@edu  Mon Apr 22 19:00:27 2024
From: |@@@c-t-peter@en @end|ng |rom u|ow@@edu (Petersen, Isaac T)
Date: Mon, 22 Apr 2024 17:00:27 +0000
Subject: [R-pkg-devel] Package submission to CRAN not passing incoming checks
Message-ID: <DM8PR04MB7960BD13680B61AC4567E1FEC6122@DM8PR04MB7960.namprd04.prod.outlook.com>

Dear R-package-devel,

This my first post--I read the posting guidelines, but my apologies in advance if I make a mistake.

I am trying to post my R package to CRAN. I just submitted it to CRAN but received a note that the package "does not pass the incoming checks automatically".

Here are the results from win-builder: https://win-builder.r-project.org/incoming_pretest/petersenlab_0.1.2-9033_20240415_212322/

As far as I can tell, there are 3 notes to address. However, I'm not sure how to address them.

1) The first note appears to be "Version contains large components", which includes the contents of the LICENSE file (CC BY 4.0). I'm not sure if this is a problem that needs to be addressed (or how to address it).

2) The second note says:

"Found the following (possibly) invalid file URIs:
  URI: 10.1177/0146621613475471
    From: man/itemInformation.Rd
  URI: 10.1177/0146621613475471
    From: man/standardErrorIRT.Rd"

However, I verified that those DOIs resolve correctly, so I'm not sure how to address this note.

3) The third note (in the Debian but not Windows version) says:

"* checking for non-standard things in the check directory ... NOTE
Found the following files/directories:
  ?encryptionKey.RData? ?encrypytedCredentials.txt?"

These files are generated in the examples for one of the functions to demonstrate how to read data using an encryption key: https://github.com/DevPsyLab/petersenlab/blob/9ece9d7dc32727c1315a03bc2810cc9c957971d1/R/readEncryptedData.R#L24. I'm not sure if this is a problem that needs to be addressed (or how to address it).

The source code for my R package (petersenlab) is here: https://github.com/DevPsyLab/petersenlab

Thanks very much in advance,
Isaac

	[[alternative HTML version deleted]]


From k@@perd@n|e|h@n@en @end|ng |rom gm@||@com  Tue Apr 23 04:09:04 2024
From: k@@perd@n|e|h@n@en @end|ng |rom gm@||@com (Kasper Daniel Hansen)
Date: Mon, 22 Apr 2024 22:09:04 -0400
Subject: [R-pkg-devel] Package submission to CRAN not passing incoming
 checks
In-Reply-To: <DM8PR04MB7960BD13680B61AC4567E1FEC6122@DM8PR04MB7960.namprd04.prod.outlook.com>
References: <DM8PR04MB7960BD13680B61AC4567E1FEC6122@DM8PR04MB7960.namprd04.prod.outlook.com>
Message-ID: <CAC2h7utv9a0kuVqWmK_WxjM7yg4Fb9TJUT+LrbC1hNNe-yMP-A@mail.gmail.com>

1. The version number complaint is the use of 0.1.2-9033. It is complaining
about 9033. Personally, I would not use the -XXXX style, but that is a
personal choice I guess. R-exts says
  "The mandatory ?Version? field gives the version of the package. This is
a sequence of at least *two* (and usually three) non-negative integers
separated by single ?.? or ?-? characters. The canonical form is as shown
in the example, and a version such as ?0.01? or ?0.01.0? will be handled as
if it were ?0.1-0?. It is *not* a decimal number, so for example 0.9 < 0.75
since 9 < 75."
2. Those are not URLs, they are DOIs. The Rd format has a \doi{} command
you should use
3. If your examples generate files, I would use the tempfile() command from
base R.

On Mon, Apr 22, 2024 at 8:25?PM Petersen, Isaac T <
isaac-t-petersen at uiowa.edu> wrote:

> Dear R-package-devel,
>
> This my first post--I read the posting guidelines, but my apologies in
> advance if I make a mistake.
>
> I am trying to post my R package to CRAN. I just submitted it to CRAN but
> received a note that the package "does not pass the incoming checks
> automatically".
>
> Here are the results from win-builder:
> https://win-builder.r-project.org/incoming_pretest/petersenlab_0.1.2-9033_20240415_212322/
>
> As far as I can tell, there are 3 notes to address. However, I'm not sure
> how to address them.
>
> 1) The first note appears to be "Version contains large components", which
> includes the contents of the LICENSE file (CC BY 4.0). I'm not sure if this
> is a problem that needs to be addressed (or how to address it).
>
> 2) The second note says:
>
> "Found the following (possibly) invalid file URIs:
>   URI: 10.1177/0146621613475471
>     From: man/itemInformation.Rd
>   URI: 10.1177/0146621613475471
>     From: man/standardErrorIRT.Rd"
>
> However, I verified that those DOIs resolve correctly, so I'm not sure how
> to address this note.
>
> 3) The third note (in the Debian but not Windows version) says:
>
> "* checking for non-standard things in the check directory ... NOTE
> Found the following files/directories:
>   ?encryptionKey.RData? ?encrypytedCredentials.txt?"
>
> These files are generated in the examples for one of the functions to
> demonstrate how to read data using an encryption key:
> https://github.com/DevPsyLab/petersenlab/blob/9ece9d7dc32727c1315a03bc2810cc9c957971d1/R/readEncryptedData.R#L24.
> I'm not sure if this is a problem that needs to be addressed (or how to
> address it).
>
> The source code for my R package (petersenlab) is here:
> https://github.com/DevPsyLab/petersenlab
>
> Thanks very much in advance,
> Isaac
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


-- 
Best,
Kasper

	[[alternative HTML version deleted]]


From |kry|ov @end|ng |rom d|@root@org  Tue Apr 23 08:46:04 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Tue, 23 Apr 2024 09:46:04 +0300
Subject: [R-pkg-devel] Package submission to CRAN not passing incoming
 checks
In-Reply-To: <DM8PR04MB7960BD13680B61AC4567E1FEC6122@DM8PR04MB7960.namprd04.prod.outlook.com>
References: <DM8PR04MB7960BD13680B61AC4567E1FEC6122@DM8PR04MB7960.namprd04.prod.outlook.com>
Message-ID: <20240423094604.1da0617e@Tarkus>

Dear Isaac,

? Mon, 22 Apr 2024 17:00:27 +0000
"Petersen, Isaac T" <isaac-t-petersen at uiowa.edu> ?????:

> This my first post--I read the posting guidelines, but my apologies
> in advance if I make a mistake.

Welcome to R-package-devel! You're doing just fine.

> 1) The first note <...> includes the contents of the LICENSE file

It's multiple NOTEs in a trench coat. Kasper has addressed the "large
version components" and the DOIs interpreted as file URIs, but there's
one more.

The '<standard license code> + file LICENSE' syntax has two uses: (1)
for when the terms of the license is a template, requiring the author
of the software to substitute some information (e.g. the year and the
copyright holder for MIT) and (2) for when a package puts additional
restrictions on the base license.

(Hmm. Only case (2) is currently described at
<https://cran.r-project.org/doc/manuals/R-exts.html#Licensing>; case
(1) is only described inside the license files.)

The CRAN team has expressed a preference for the package authors not to
put 20000 twisty little copies of standard licenses, all slightly
different, inside their packages. Since you're not restricting CC BY
4.0, it's enough to say 'License: CC BY 4.0'. If you'd like a full copy
of the license text in your source code repository, that's fine, but
you'll need to list the file in .Rbuildignore:
https://cran.r-project.org/doc/manuals/R-exts.html#Building-package-tarballs

Speaking of the Creative Commons license: the choice of a license for
your code is obviously yours, but Creative Commons themselves recommend
against using their licenses for software:
<https://creativecommons.org/faq/#can-i-apply-a-creative-commons-license-to-software>.
I can't recommend you a license - that would be politically motivated
meddling in foreign affairs - but the lists linked by the CC FAQ and
Writing R Extensions section 1.1.2 should provide a good starting point.

> Here are the results from win-builder:
> https://win-builder.r-project.org/incoming_pretest/petersenlab_0.1.2-9033_20240415_212322/

There is one more NOTE:

>> * checking examples ... [437s/438s] NOTE
>> Examples with CPU (user + system) or elapsed time > 5s
>>                    user system elapsed
>> load_or_install 349.410 37.410 387.233
>> vwReg            35.199  0.379  35.606
 
The examples are not only for the user to read in the help page; they
are also for the user to run example(vwReg) and see your code in action
(and for R CMD check to see whether they crash, including regularly on
CRAN).

For vwReg, try reducing the number of regressions you are running
(since your dataset is mtcars, which is already very compact).

For load_or_install, we have the additional issue that running
example(load_or_install) modifies the contents of the R library and the
search path, which belong to the user. The CRAN policy forbids such
modifications: <https://cran.r-project.org/web/packages/policies.html>

Examples in general should change as little of the global state of the
R session and the underlying computer as possible. I suggest wrapping
the example in \dontrun{} (since everything about load_or_install() is
about altering global state) and creating a test for the function in
tests/*.R.

The test should set up a new library under tempdir(), run
load_or_install(), check the outcomes (that the desired package is
attached, etc.) and clean up after itself. There's also the matter of
the package not failing without a connection to the Internet, which is
another CRAN policy requirement. You might have to bring a very small
test package in inst/extdata just for load_or_install() to install and
load it, so that R CMD check won't fail when running offline.

-- 
Best regards,
Ivan


From |@@@c-t-peter@en @end|ng |rom u|ow@@edu  Wed Apr 24 02:17:28 2024
From: |@@@c-t-peter@en @end|ng |rom u|ow@@edu (Petersen, Isaac T)
Date: Wed, 24 Apr 2024 00:17:28 +0000
Subject: [R-pkg-devel] 
 [External] Re: Package submission to CRAN not passing
 incoming checks
In-Reply-To: <20240423094604.1da0617e@Tarkus>
References: <DM8PR04MB7960BD13680B61AC4567E1FEC6122@DM8PR04MB7960.namprd04.prod.outlook.com>
 <20240423094604.1da0617e@Tarkus>
Message-ID: <DM8PR04MB7960B8B42AD56D8735973BAFC6102@DM8PR04MB7960.namprd04.prod.outlook.com>

Dear Ivan and Kasper,



Thanks very much for the helpful guidance. I made the changes you described, including changing the version number (to 1.0.0), changing the URL codes to DOI codes, using the tempfile() command when generating files, changing the license to MIT (and excluding the license file in the .Rbuildignore file), and enclosing some examples with \dontrun{}.



Following Ivan?s suggestion, I created a test file to verify that the load_or_install() function works as expected, and included two small test packages to verify that the function can install and load them without needing access to the internet. However, I receive an error when running the test locally (the error is enclosed below this email). The error suggests to me that the test cannot load the packages with library() after installing them.



My test file is here:

https://github.com/DevPsyLab/petersenlab/blob/main/tests/testthat/test_load_or_install.R



I included the packages (including the raw package folders and their .tar.gz files) in the /inst/extdata folder.



Any help would be greatly appreciated.



Many thanks,

Isaac



?? Test failures ??????????????????????????????????????????????????????? testthat ????



> # This file is part of the standard setup for testthat.

> # It is recommended that you do not modify it.

> #

> # Where should you do additional test configuration?

> # Learn more about the roles of various files in:

> # * https://r-pkgs.org/testing-design.html#sec-tests-files-overview

> # * https://testthat.r-lib.org/articles/special-files.html

>

> library(testthat)

Warning message:

package 'testthat' was built under R version 4.3.3

> library(petersenlab)

>

> test_check("petersenlab")

Installing package into 'C:/Users/itpetersen/AppData/Local/Temp/RtmpCEqqMl/working_dir/Rtmp0uuccD'

(as 'lib' is unspecified)

Warning: invalid package 'testpackage1'

Error: ERROR: no packages specified

[ FAIL 2 | WARN 1 | SKIP 0 | PASS 0 ]



?? Warnings ????????????????????????????????????????????????????????????????????

?? Warning ('test_load_or_install.R:19:3'): load_or_install installs and loads packages correctly ??

installation of package 'testpackage1' had non-zero exit status

Backtrace:

    ?

 1. ??petersenlab::load_or_install(...) at test_load_or_install.R:19:3

 2.   ??utils::install.packages(package_name, ...)



?? Failed tests ????????????????????????????????????????????????????????????????

?? Error ('test_load_or_install.R:19:3'): load_or_install installs and loads packages correctly ??

<packageNotFoundError/error/condition>

Error in `library(package_name, character.only = TRUE, quietly = TRUE,

    verbose = FALSE)`: there is no package called 'testpackage1'

Backtrace:

    ?

 1. ??petersenlab::load_or_install(...) at test_load_or_install.R:19:3

 2.   ??base::library(...)

?? Error ('test_load_or_install.R:4:1'): (code run outside of `test_that()`) ???

<packageNotFoundError/error/condition>

Error in `loadNamespace(x)`: there is no package called 'waldo'

Backtrace:

     ?

  1. ??testthat::test_check("petersenlab")

  2. ? ??testthat::test_dir(...)

  3. ?   ??testthat:::test_files(...)

  4. ?     ??testthat:::test_files_serial(...)

  5. ?       ??testthat::with_reporter(...)

  6. ?       ? ??base::tryCatch(...)

  7. ?       ?   ??base (local) tryCatchList(expr, classes, parentenv, handlers)

  8. ?       ?     ??base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])

  9. ?       ?       ??base (local) doTryCatch(return(expr), name, parentenv, handler)

 10. ?       ??base::lapply(...)

 11. ?         ??testthat (local) FUN(X[[i]], ...)

 12. ?           ??testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)

 13. ?             ??testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())

 14. ?               ??base::tryCatch(...)

 15. ?               ? ??base (local) tryCatchList(expr, classes, parentenv, handlers)

 16. ?               ?   ??base (local) tryCatchOne(...)

 17. ?               ?   ? ??base (local) doTryCatch(return(expr), name, parentenv, handler)

 18. ?               ?   ??base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])

 19. ?               ?     ??base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])

 20. ?               ?       ??base (local) doTryCatch(return(expr), name, parentenv, handler)

 21. ?               ??base::withCallingHandlers(...)

 22. ?               ??base::eval(code, test_env)

 23. ?                 ??base::eval(code, test_env)

 24. ?                   ??testthat::test_that(...) at test_load_or_install.R:4:1

 25. ?                     ??testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())

 26. ?                       ??testthat:::testthat_state_condition(before, after, call = sys.call(-1))

 27. ?                         ??testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")

 28. ??base::loadNamespace(x)

 29.   ??base::withRestarts(stop(cond), retry_loadNamespace = function() NULL)

 30.     ??base (local) withOneRestart(expr, restarts[[1L]])

 31.       ??base (local) doWithOneRestart(return(expr), restart)



[ FAIL 2 | WARN 1 | SKIP 0 | PASS 0 ]

Error: Test failures

Execution halted



1 error ? | 0 warnings ? | 1 note ?

Error: R CMD check found ERRORs

Execution halted



Exited with status 1.

________________________________
From: Ivan Krylov <ikrylov at disroot.org>
Sent: Tuesday, April 23, 2024 1:46 AM
To: Petersen, Isaac T <isaac-t-petersen at uiowa.edu>
Cc: r-package-devel at r-project.org <r-package-devel at r-project.org>
Subject: [External] Re: [R-pkg-devel] Package submission to CRAN not passing incoming checks

[You don't often get email from ikrylov at disroot.org. Learn why this is important at https://aka.ms/LearnAboutSenderIdentification ]

Dear Isaac,

? Mon, 22 Apr 2024 17:00:27 +0000
"Petersen, Isaac T" <isaac-t-petersen at uiowa.edu> ?????:

> This my first post--I read the posting guidelines, but my apologies
> in advance if I make a mistake.

Welcome to R-package-devel! You're doing just fine.

> 1) The first note <...> includes the contents of the LICENSE file

It's multiple NOTEs in a trench coat. Kasper has addressed the "large
version components" and the DOIs interpreted as file URIs, but there's
one more.

The '<standard license code> + file LICENSE' syntax has two uses: (1)
for when the terms of the license is a template, requiring the author
of the software to substitute some information (e.g. the year and the
copyright holder for MIT) and (2) for when a package puts additional
restrictions on the base license.

(Hmm. Only case (2) is currently described at
<https://nam12.safelinks.protection.outlook.com/?url=https%3A%2F%2Fcran.r-project.org%2Fdoc%2Fmanuals%2FR-exts.html%23Licensing&data=05%7C02%7Cisaac-t-petersen%40uiowa.edu%7C3a0f2254132f4cd6205608dc63610e82%7C1bc445959aba4fc3b8ec7b94a5586fdc%7C1%7C1%7C638494515735410190%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C40000%7C%7C%7C&sdata=rm%2Fp2SXR6CN%2FysfsiP1i2acQcrYlxPfUgxMF6NQdvlA%3D&reserved=0<https://cran.r-project.org/doc/manuals/R-exts.html#Licensing>>; case
(1) is only described inside the license files.)

The CRAN team has expressed a preference for the package authors not to
put 20000 twisty little copies of standard licenses, all slightly
different, inside their packages. Since you're not restricting CC BY
4.0, it's enough to say 'License: CC BY 4.0'. If you'd like a full copy
of the license text in your source code repository, that's fine, but
you'll need to list the file in .Rbuildignore:
https://nam12.safelinks.protection.outlook.com/?url=https%3A%2F%2Fcran.r-project.org%2Fdoc%2Fmanuals%2FR-exts.html%23Building-package-tarballs&data=05%7C02%7Cisaac-t-petersen%40uiowa.edu%7C3a0f2254132f4cd6205608dc63610e82%7C1bc445959aba4fc3b8ec7b94a5586fdc%7C1%7C1%7C638494515735420011%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C40000%7C%7C%7C&sdata=kslE9klwZD%2BvBHX3I%2FkBewpNLnr14cgnxOc%2FQIZBLR0%3D&reserved=0<https://cran.r-project.org/doc/manuals/R-exts.html#Building-package-tarballs>

Speaking of the Creative Commons license: the choice of a license for
your code is obviously yours, but Creative Commons themselves recommend
against using their licenses for software:
<https://nam12.safelinks.protection.outlook.com/?url=https%3A%2F%2Fcreativecommons.org%2Ffaq%2F%23can-i-apply-a-creative-commons-license-to-software&data=05%7C02%7Cisaac-t-petersen%40uiowa.edu%7C3a0f2254132f4cd6205608dc63610e82%7C1bc445959aba4fc3b8ec7b94a5586fdc%7C1%7C1%7C638494515735426275%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C40000%7C%7C%7C&sdata=lwWu6xa1gXzXUU%2BqwxU5CLM1cMkO9jqefYr1T5L%2FyGo%3D&reserved=0<https://creativecommons.org/faq/#can-i-apply-a-creative-commons-license-to-software>>.
I can't recommend you a license - that would be politically motivated
meddling in foreign affairs - but the lists linked by the CC FAQ and
Writing R Extensions section 1.1.2 should provide a good starting point.

> Here are the results from win-builder:
> https://nam12.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwin-builder.r-project.org%2Fincoming_pretest%2Fpetersenlab_0.1.2-9033_20240415_212322%2F&data=05%7C02%7Cisaac-t-petersen%40uiowa.edu%7C3a0f2254132f4cd6205608dc63610e82%7C1bc445959aba4fc3b8ec7b94a5586fdc%7C1%7C1%7C638494515735430793%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C40000%7C%7C%7C&sdata=S%2F18W%2Bh15GDI5dQRlBlvqhPVoEeP67MAwSIAsnIw4yw%3D&reserved=0<https://win-builder.r-project.org/incoming_pretest/petersenlab_0.1.2-9033_20240415_212322/>

There is one more NOTE:

>> * checking examples ... [437s/438s] NOTE
>> Examples with CPU (user + system) or elapsed time > 5s
>>                    user system elapsed
>> load_or_install 349.410 37.410 387.233
>> vwReg            35.199  0.379  35.606

The examples are not only for the user to read in the help page; they
are also for the user to run example(vwReg) and see your code in action
(and for R CMD check to see whether they crash, including regularly on
CRAN).

For vwReg, try reducing the number of regressions you are running
(since your dataset is mtcars, which is already very compact).

For load_or_install, we have the additional issue that running
example(load_or_install) modifies the contents of the R library and the
search path, which belong to the user. The CRAN policy forbids such
modifications: <https://nam12.safelinks.protection.outlook.com/?url=https%3A%2F%2Fcran.r-project.org%2Fweb%2Fpackages%2Fpolicies.html&data=05%7C02%7Cisaac-t-petersen%40uiowa.edu%7C3a0f2254132f4cd6205608dc63610e82%7C1bc445959aba4fc3b8ec7b94a5586fdc%7C1%7C1%7C638494515735435075%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C40000%7C%7C%7C&sdata=QsZYMJlK4%2FaYz0H%2FZxc%2B2mItfRxHOSj8hLnIzmiCUT4%3D&reserved=0<https://cran.r-project.org/web/packages/policies.html>>

Examples in general should change as little of the global state of the
R session and the underlying computer as possible. I suggest wrapping
the example in \dontrun{} (since everything about load_or_install() is
about altering global state) and creating a test for the function in
tests/*.R.

The test should set up a new library under tempdir(), run
load_or_install(), check the outcomes (that the desired package is
attached, etc.) and clean up after itself. There's also the matter of
the package not failing without a connection to the Internet, which is
another CRAN policy requirement. You might have to bring a very small
test package in inst/extdata just for load_or_install() to install and
load it, so that R CMD check won't fail when running offline.

--
Best regards,
Ivan

	[[alternative HTML version deleted]]


From |kry|ov @end|ng |rom d|@root@org  Wed Apr 24 10:29:57 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Wed, 24 Apr 2024 11:29:57 +0300
Subject: [R-pkg-devel] 
 [External] Re: Package submission to CRAN not passing
 incoming checks
In-Reply-To: <DM8PR04MB7960B8B42AD56D8735973BAFC6102@DM8PR04MB7960.namprd04.prod.outlook.com>
References: <DM8PR04MB7960BD13680B61AC4567E1FEC6122@DM8PR04MB7960.namprd04.prod.outlook.com>
 <20240423094604.1da0617e@Tarkus>
 <DM8PR04MB7960B8B42AD56D8735973BAFC6102@DM8PR04MB7960.namprd04.prod.outlook.com>
Message-ID: <20240424112957.1669adb2@Tarkus>

? Wed, 24 Apr 2024 00:17:28 +0000
"Petersen, Isaac T" <isaac-t-petersen at uiowa.edu> ?????:

> I included the packages (including the raw package folders and their
> .tar.gz files) in the /inst/extdata folder.

Would you prefer your test to install them from the source directories
(as you currently do, in which case the *.tar.gz files can be omitted)
or the *.tar.gz files (in which case you can set the `repos` argument
to a file:/// URI and omit the package directories and the setwd()
calls)?

I think (but haven't tested) that the two problems that are currently
breaking your test are with .libPaths() and setwd().

.libPaths(temp_lib) overwrites the library paths with `temp_lib` and
the system libraries, the ones in %PROGRAMFILES%\R\R-*\library. In
particular, this removes %LOCALAPPDATA%\R\win-library\* from the list
of library paths, so the packages installed by the user (including
'waldo', which is needed by 'testthat') stop being available.

In order to add temp_lib to the list of the paths, use
.libPaths(c(temp_lib, .libPaths())).

Since setwd() returns the previous directory, one that was current
before setwd() was called, the code newpath <- setwd(filepath);
setwd(newpath) will keep the current directory, not set it to
`filepath`. Use oldpath <- setwd(filepath) instead.

Since you're already using 'testthat' and it already depends on
'withr', you may find it easier to use withr::local_dir(...) and
withr::local_temp_libpaths(...).

In order to test for a package being attached by load_or_install() (and
not just installed and loadable), check for 'package:testpackage1'
being present in the return value of search(). (This check is good
enough and much easier to write than comparing environments on the
search path with the package exports or comparing searchpaths() with
the paths under the temporary library.)

Finally, I think that there is no need for the test_load_or_install()
call because I don't see the function being defined anywhere. Doesn't
test_that(...) run the tests by itself?

-- 
Best regards,
Ivan


From h@n@on @end|ng |rom dep@uw@edu  Thu Apr 25 17:54:41 2024
From: h@n@on @end|ng |rom dep@uw@edu (Bryan Hanson)
Date: Thu, 25 Apr 2024 08:54:41 -0700
Subject: [R-pkg-devel] Some, but not all vignettes compressed
Message-ID: <C616093F-CCCC-40A6-99E1-C91754261ACF@depauw.edu>

I have a peculiar problem regarding vignette compaction. Package LearnPCA has 8 vignettes.  I am working on the devel branch with code at https://github.com/bryanhanson/LearnPCA/tree/devel.

The problem is that at CRAN and on win-builder they detect that 5/8 vignettes need to be compacted.  Locally however, 2/8 vignettes, not overlapping with the 5/8 identified at CRAN, are compacted during build.  When I try to compact manually, compactPDF() reports it is not necesssary.

I have looked at a related question by Ben Bolker (https://stat.ethz.ch/pipermail/r-package-devel/2020q4/006086.html) but that doesn't seem resolved.  I am already taking the steps listed in this question: https://stat.ethz.ch/pipermail/r-package-devel/2023q4/009831.html as well as several others.

Regarding versions, I get

gs --version
10.03.0

qpdf --version
qpdf version 11.9.0

Which seem to be the latest.  Note these were installed with HomeBrew but I think R ships with at its own version of qpdf:

Sys.which(Sys.getenv("R_QPDF", "qpdf"))
  /Library/Frameworks/R.framework/Resources/bin/qpdf 
"/Library/Frameworks/R.framework/Resources/bin/qpdf" 

I did not try the HomeBrew versions until I ran into trouble.

Here are the steps I am taking.  I am on MacOS 14.4.1, an M1 chip.

1. Build via a makefile, with this command:

R --no-init-file CMD build --resave-data --compact-vignettes=both $(PKG_NAME)

The build process reports:

* creating vignettes ... OK
* compacting vignettes and other PDF files
    compacted ?Vig_01_Start_Here.pdf? from 244Kb to 44Kb
    compacted ?Vig_08_Notes.pdf? from 239Kb to 38Kb     

Fine so far.

I also tried to force the path to gs:

export R_GSCMD="/opt/homebrew/bin/gs"; \
export GS_QUALITY="ebook"; \
R --no-init-file CMD build --resave-data --compact-vignettes=both $(PKG_NAME)

With the same result.  I did this because it seems R doesn't see my installation of GhostScript.

And I tried to force a path to both compacting services:

export R_GSCMD="/opt/homebrew/bin/gs"; \
export GS_QUALITY="ebook"; \
export R_QPDF="/opt/homebrew/bin/qpdf"; \
R --no-init-file CMD build --resave-data --compact-vignettes=both $(PKG_NAME)

With the same results.

2. Submit to win-builder (same result seen on actual CRAN submission).  The (partial) report is:

* checking sizes of PDF files under 'inst/doc' ... WARNING
  'gs+qpdf' made some significant size reductions:
     compacted 'Vig_02_Conceptual_Intro_PCA.pdf' from 432Kb to 143Kb
     compacted 'Vig_03_Step_By_Step_PCA.pdf' from 414Kb to 101Kb
     compacted 'Vig_04_Scores_Loadings.pdf' from 334Kb to 78Kb
     compacted 'Vig_06_Math_Behind_PCA.pdf' from 558Kb to 147Kb
     compacted 'Vig_07_Functions_PCA.pdf' from 381Kb to 90Kb
  consider running tools::compactPDF(gs_quality = "ebook") on these files,
  or build the source package with --compact-vignettes=both

Note that these are *different* vignettes than those compacted during build, so build seems to have missed some (?).

3. If I expand the tarball locally, point to the inst directory, and run

tools::compactPDF("doc", gs_quality = "ebook", gs_cmd = "/opt/homebrew/bin/gs", verbose = TRUE)

I get this:

qs_quality="ebook" : use_gs=TRUE, use_qpdf=TRUE
#{pdf}s = length(paths) = 8
- doc/Vig_01_Start_Here.pdf:    gs: res=0;  + qpdf: res=0; 
    ==> (new=49942)/(old=45101) = 1.10734 .. not worth using
- doc/Vig_02_Conceptual_Intro_PCA.pdf:    gs: res=0;  + qpdf: res=0; 
    ==> (new=1.00061e+07)/(old=442210) = 22.6275 .. not worth using
- doc/Vig_03_Step_By_Step_PCA.pdf:    gs: res=0;  + qpdf: res=0; 
    ==> (new=5.763e+06)/(old=423484) = 13.6085 .. not worth using
- doc/Vig_04_Scores_Loadings.pdf:    gs: res=0;  + qpdf: res=0; 
    ==> (new=5.41409e+06)/(old=341680) = 15.8455 .. not worth using
- doc/Vig_05_Visualizing_PCA_3D.pdf:    gs: res=0;  + qpdf: res=0; 
    ==> (new=1.23622e+07)/(old=692901) = 17.8412 .. not worth using
- doc/Vig_06_Math_Behind_PCA.pdf:    gs: res=0;  + qpdf: res=0; 
    ==> (new=816690)/(old=571493) = 1.42905 .. not worth using
- doc/Vig_07_Functions_PCA.pdf:    gs: res=0;  + qpdf: res=0; 
    ==> (new=1.36419e+06)/(old=389478) = 3.50262 .. not worth using
- doc/Vig_08_Notes.pdf:    gs: res=0;  + qpdf: res=0; 
    ==> (new=40919)/(old=38953) = 1.05047 .. not worth using

Any suggestions as to what is going on here and how to fix it?

sessionInfo():

R version 4.4.0 RC (2024-04-16 r86468)
Platform: aarch64-apple-darwin20
Running under: macOS Sonoma 14.4.1

Matrix products: default
BLAS:   /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRblas.0.dylib 
LAPACK: /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

time zone: America/Phoenix
tzcode source: internal

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

loaded via a namespace (and not attached):
 [1] foghorn_1.5.2    utf8_1.2.4       R6_2.5.1         rvest_1.0.4      magrittr_2.0.3  
 [6] rappdirs_0.3.3   glue_1.7.0       stringr_1.5.1    tibble_3.2.1     clisymbols_1.2.0
[11] pkgconfig_2.0.3  lifecycle_1.0.4  xml2_1.3.6       cli_3.6.2        fansi_1.0.6     
[16] vctrs_0.6.5      compiler_4.4.0   httr_1.4.7       tools_4.4.0      curl_5.2.1      
[21] pillar_1.9.0     httr2_1.0.1      rlang_1.1.3      crayon_1.5.2     stringi_1.8.3   
[26] selectr_0.4-2   


=============
Bryan A. Hanson
Prof. Emeritus, DePauw University
Chemistry & Biochemistry
hanson at depauw.edu
profbryanhanson at gmail.com
Nerdy blog: ChemoSpec.org
I?m at GMT -7 year round







	[[alternative HTML version deleted]]


From |kry|ov @end|ng |rom d|@root@org  Thu Apr 25 20:26:40 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Thu, 25 Apr 2024 21:26:40 +0300
Subject: [R-pkg-devel] Some, but not all vignettes compressed
In-Reply-To: <C616093F-CCCC-40A6-99E1-C91754261ACF@depauw.edu>
References: <C616093F-CCCC-40A6-99E1-C91754261ACF@depauw.edu>
Message-ID: <20240425212640.39a2f275@Tarkus>

? Thu, 25 Apr 2024 08:54:41 -0700
Bryan Hanson <hanson at depauw.edu> ?????:

>   'gs+qpdf' made some significant size reductions:
>      compacted 'Vig_02_Conceptual_Intro_PCA.pdf' from 432Kb to 143Kb
>      compacted 'Vig_03_Step_By_Step_PCA.pdf' from 414Kb to 101Kb
>      compacted 'Vig_04_Scores_Loadings.pdf' from 334Kb to 78Kb
>      compacted 'Vig_06_Math_Behind_PCA.pdf' from 558Kb to 147Kb
>      compacted 'Vig_07_Functions_PCA.pdf' from 381Kb to 90Kb

I'm getting similar (but not same) results on Debian Stable, gs 10.00.0
& qpdf 11.3.0:

# R CMD build --no-resave-data --compact-vignettes=both
    compacted ?Vig_01_Start_Here.pdf? from 244Kb to 45Kb           
    compacted ?Vig_02_Conceptual_Intro_PCA.pdf? from 432Kb to 143Kb
    compacted ?Vig_03_Step_By_Step_PCA.pdf? from 411Kb to 100Kb    
    compacted ?Vig_04_Scores_Loadings.pdf? from 335Kb to 78Kb      
    compacted ?Vig_05_Visualizing_PCA_3D.pdf? from 679Kb to 478Kb  
    compacted ?Vig_06_Math_Behind_PCA.pdf? from 556Kb to 145Kb     
    compacted ?Vig_07_Functions_PCA.pdf? from 378Kb to 89Kb        
    compacted ?Vig_08_Notes.pdf? from 239Kb to 39Kb                

 
> - doc/Vig_01_Start_Here.pdf:    gs: res=0;  + qpdf: res=0; 
>     ==> (new=49942)/(old=45101) = 1.10734 .. not worth using  
> - doc/Vig_02_Conceptual_Intro_PCA.pdf:    gs: res=0;  + qpdf: res=0; 
>     ==> (new=1.00061e+07)/(old=442210) = 22.6275 .. not worth using  
> - doc/Vig_03_Step_By_Step_PCA.pdf:    gs: res=0;  + qpdf: res=0; 
>     ==> (new=5.763e+06)/(old=423484) = 13.6085 .. not worth using  
> - doc/Vig_04_Scores_Loadings.pdf:    gs: res=0;  + qpdf: res=0; 
>     ==> (new=5.41409e+06)/(old=341680) = 15.8455 .. not worth using  
> - doc/Vig_05_Visualizing_PCA_3D.pdf:    gs: res=0;  + qpdf: res=0; 
>     ==> (new=1.23622e+07)/(old=692901) = 17.8412 .. not worth using  
> - doc/Vig_06_Math_Behind_PCA.pdf:    gs: res=0;  + qpdf: res=0; 
>     ==> (new=816690)/(old=571493) = 1.42905 .. not worth using  
> - doc/Vig_07_Functions_PCA.pdf:    gs: res=0;  + qpdf: res=0; 
>     ==> (new=1.36419e+06)/(old=389478) = 3.50262 .. not worth using  
> - doc/Vig_08_Notes.pdf:    gs: res=0;  + qpdf: res=0; 
>     ==> (new=40919)/(old=38953) = 1.05047 .. not worth using  

Thank you for providing this data! Somehow, instead of compacting the
PDFs, one of the tools manages to blow them up in size, as much as ~23
times.

Can you try tools::compactPDF() separately with gs_quality = 'none'
(isolating qpdf) and with qpdf = '' (isolating GhostScript)?

If the culprit turns out to be GhostScript, it may be due to their
rewritten PDF rendering engine (now in C instead of PostScript with
special extensions) not being up to par when the PDF file needs to be
compressed. If it turns out to be qpdf, we might have to extract the
exact command lines and compare results further.

-- 
Best regards,
Ivan


From h@n@on @end|ng |rom dep@uw@edu  Thu Apr 25 20:54:49 2024
From: h@n@on @end|ng |rom dep@uw@edu (Bryan Hanson)
Date: Thu, 25 Apr 2024 11:54:49 -0700
Subject: [R-pkg-devel] Some, but not all vignettes compressed
In-Reply-To: <20240425212640.39a2f275@Tarkus>
References: <C616093F-CCCC-40A6-99E1-C91754261ACF@depauw.edu>
 <20240425212640.39a2f275@Tarkus>
Message-ID: <57FFC3BD-7767-4A8D-BD17-5C4B29421057@depauw.edu>

Thank you so much Ivan for investigating.  I didn?t even notice the *increase*!  The results of the tests you requested are very interesting:

R > tools::compactPDF("doc", gs_quality = "none", verbose = TRUE)
qs_quality="none" : use_gs=FALSE, use_qpdf=TRUE
#{pdf}s = length(paths) = 8
- doc/Vig_01_Start_Here.pdf:  only qpdf: res=0; 
    ==> (new=45281)/(old=45281) = 1 .. not worth using
- doc/Vig_02_Conceptual_Intro_PCA.pdf:  only qpdf: res=0; 
    ==> (new=441808)/(old=442464) = 0.998517 .. not worth using
- doc/Vig_03_Step_By_Step_PCA.pdf:  only qpdf: res=0; 
    ==> (new=422940)/(old=423750) = 0.998088 .. not worth using
- doc/Vig_04_Scores_Loadings.pdf:  only qpdf: res=0; 
    ==> (new=342335)/(old=341955) = 1.00111 .. not worth using
- doc/Vig_05_Visualizing_PCA_3D.pdf:  only qpdf: res=0; 
    ==> (new=692950)/(old=693206) = 0.999631 .. not worth using
- doc/Vig_06_Math_Behind_PCA.pdf:  only qpdf: res=0; 
    ==> (new=571600)/(old=571761) = 0.999718 .. not worth using
- doc/Vig_07_Functions_PCA.pdf:  only qpdf: res=0; 
    ==> (new=389451)/(old=389747) = 0.999241 .. not worth using
- doc/Vig_08_Notes.pdf:  only qpdf: res=0; 
    ==> (new=39131)/(old=39131) = 1 .. not worth using

Looks like my version of qpdf (which I think shipped with R) can?t reduce the sizes.

R > tools::compactPDF("doc", gs_quality = "ebook", gs_cmd = "/opt/homebrew/bin/gs", verbose = TRUE, qpdf = "")
qs_quality="ebook" : use_gs=TRUE, use_qpdf=FALSE
#{pdf}s = length(paths) = 8
- doc/Vig_01_Start_Here.pdf:    gs: res=0; 
    ==> (new=50865)/(old=45281) = 1.12332 .. not worth using
- doc/Vig_02_Conceptual_Intro_PCA.pdf:    gs: res=0; 
    ==> (new=1.00061e+07)/(old=442464) = 22.6146 .. not worth using
- doc/Vig_03_Step_By_Step_PCA.pdf:    gs: res=0; 
    ==> (new=5.76371e+06)/(old=423750) = 13.6017 .. not worth using
- doc/Vig_04_Scores_Loadings.pdf:    gs: res=0; 
    ==> (new=5.41358e+06)/(old=341955) = 15.8312 .. not worth using
- doc/Vig_05_Visualizing_PCA_3D.pdf:    gs: res=0; 
    ==> (new=1.23619e+07)/(old=693206) = 17.833 .. not worth using
- doc/Vig_06_Math_Behind_PCA.pdf:    gs: res=0; 
    ==> (new=818313)/(old=571761) = 1.43122 .. not worth using
- doc/Vig_07_Functions_PCA.pdf:    gs: res=0; 
    ==> (new=1.36534e+06)/(old=389747) = 3.50315 .. not worth using
- doc/Vig_08_Notes.pdf:    gs: res=0; 
    ==> (new=41780)/(old=39131) = 1.0677 .. not worth using

So my version of gs blows things up!

Also modified the above using gs_quality = ?printer? or ?screen? and the results are very similar.

Bryan


> On Apr 25, 2024, at 11:26?AM, Ivan Krylov <ikrylov at disroot.org> wrote:
> 
> ? Thu, 25 Apr 2024 08:54:41 -0700
> Bryan Hanson <hanson at depauw.edu> ?????:
> 
>>  'gs+qpdf' made some significant size reductions:
>>     compacted 'Vig_02_Conceptual_Intro_PCA.pdf' from 432Kb to 143Kb
>>     compacted 'Vig_03_Step_By_Step_PCA.pdf' from 414Kb to 101Kb
>>     compacted 'Vig_04_Scores_Loadings.pdf' from 334Kb to 78Kb
>>     compacted 'Vig_06_Math_Behind_PCA.pdf' from 558Kb to 147Kb
>>     compacted 'Vig_07_Functions_PCA.pdf' from 381Kb to 90Kb
> 
> I'm getting similar (but not same) results on Debian Stable, gs 10.00.0
> & qpdf 11.3.0:
> 
> # R CMD build --no-resave-data --compact-vignettes=both
>    compacted ?Vig_01_Start_Here.pdf? from 244Kb to 45Kb           
>    compacted ?Vig_02_Conceptual_Intro_PCA.pdf? from 432Kb to 143Kb
>    compacted ?Vig_03_Step_By_Step_PCA.pdf? from 411Kb to 100Kb    
>    compacted ?Vig_04_Scores_Loadings.pdf? from 335Kb to 78Kb      
>    compacted ?Vig_05_Visualizing_PCA_3D.pdf? from 679Kb to 478Kb  
>    compacted ?Vig_06_Math_Behind_PCA.pdf? from 556Kb to 145Kb     
>    compacted ?Vig_07_Functions_PCA.pdf? from 378Kb to 89Kb        
>    compacted ?Vig_08_Notes.pdf? from 239Kb to 39Kb                
> 
> 
>> - doc/Vig_01_Start_Here.pdf:    gs: res=0;  + qpdf: res=0; 
>>    ==> (new=49942)/(old=45101) = 1.10734 .. not worth using  
>> - doc/Vig_02_Conceptual_Intro_PCA.pdf:    gs: res=0;  + qpdf: res=0; 
>>    ==> (new=1.00061e+07)/(old=442210) = 22.6275 .. not worth using  
>> - doc/Vig_03_Step_By_Step_PCA.pdf:    gs: res=0;  + qpdf: res=0; 
>>    ==> (new=5.763e+06)/(old=423484) = 13.6085 .. not worth using  
>> - doc/Vig_04_Scores_Loadings.pdf:    gs: res=0;  + qpdf: res=0; 
>>    ==> (new=5.41409e+06)/(old=341680) = 15.8455 .. not worth using  
>> - doc/Vig_05_Visualizing_PCA_3D.pdf:    gs: res=0;  + qpdf: res=0; 
>>    ==> (new=1.23622e+07)/(old=692901) = 17.8412 .. not worth using  
>> - doc/Vig_06_Math_Behind_PCA.pdf:    gs: res=0;  + qpdf: res=0; 
>>    ==> (new=816690)/(old=571493) = 1.42905 .. not worth using  
>> - doc/Vig_07_Functions_PCA.pdf:    gs: res=0;  + qpdf: res=0; 
>>    ==> (new=1.36419e+06)/(old=389478) = 3.50262 .. not worth using  
>> - doc/Vig_08_Notes.pdf:    gs: res=0;  + qpdf: res=0; 
>>    ==> (new=40919)/(old=38953) = 1.05047 .. not worth using  
> 
> Thank you for providing this data! Somehow, instead of compacting the
> PDFs, one of the tools manages to blow them up in size, as much as ~23
> times.
> 
> Can you try tools::compactPDF() separately with gs_quality = 'none'
> (isolating qpdf) and with qpdf = '' (isolating GhostScript)?
> 
> If the culprit turns out to be GhostScript, it may be due to their
> rewritten PDF rendering engine (now in C instead of PostScript with
> special extensions) not being up to par when the PDF file needs to be
> compressed. If it turns out to be qpdf, we might have to extract the
> exact command lines and compare results further.
> 
> -- 
> Best regards,
> Ivan

=============
Bryan A. Hanson
Prof. Emeritus, DePauw University
Chemistry & Biochemistry
hanson at depauw.edu
profbryanhanson at gmail.com
Nerdy blog: ChemoSpec.org
I?m at GMT -7 year round







	[[alternative HTML version deleted]]


From |kry|ov @end|ng |rom d|@root@org  Thu Apr 25 21:36:51 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Thu, 25 Apr 2024 22:36:51 +0300
Subject: [R-pkg-devel] Some, but not all vignettes compressed
In-Reply-To: <57FFC3BD-7767-4A8D-BD17-5C4B29421057@depauw.edu>
References: <C616093F-CCCC-40A6-99E1-C91754261ACF@depauw.edu>
 <20240425212640.39a2f275@Tarkus>
 <57FFC3BD-7767-4A8D-BD17-5C4B29421057@depauw.edu>
Message-ID: <20240425223651.79574bb7@Tarkus>

? Thu, 25 Apr 2024 11:54:49 -0700
Bryan Hanson <hanson at depauw.edu> ?????:

> So my version of gs blows things up!

The relatively good news is that GhostScript is not solely to blame. A
fresh build of "GPL Ghostscript 10.03.0 (2024-03-06)" was able to
reduce the files to 16..70% of their original size on my computer. But
I just typed ./configure && make and relied on the dependencies already
present on my system.

We can try to compare the build settings (which will involve compiling
things by hand) or ask the Homebrew people [*] (and they will probably
ask for a PDF file and a specific command line that works on some
builds of gs-10.03.0 but not with Homebrew).

What would you rather do?

qpdf, on the other hand, results in no size reduction (99.7% or worse),
just like on your system.

-- 
Best regards,
Ivan

[*]
https://docs.brew.sh/Troubleshooting
https://github.com/Homebrew/homebrew-core/issues?q=ghostscript


From |eo@m@d@ @end|ng |rom @yon|c@eu  Fri Apr 26 23:49:47 2024
From: |eo@m@d@ @end|ng |rom @yon|c@eu (Leo Mada)
Date: Fri, 26 Apr 2024 21:49:47 +0000
Subject: [R-pkg-devel] Extending proj with proj.line3d methods and
 overloading the methods
Message-ID: <DBAP192MB09568DD96FD61DDD801196DB84162@DBAP192MB0956.EURP192.PROD.OUTLOOK.COM>

Dear List-Members,

I try to implement a proj.line3d method and to overload this method as follows:

proj.line3d <- function(p, x, y, z, ...)
  UseMethod("proj.line3d")

proj.line3d.numeric = function(p, x, y, z, ...) {
  # ...
}

proj.line3d.matrix = function(p, x, y, z, ...) {
  # ...
}

The code is available on GitHub, specifically in:
https://github.com/discoleo/Rpdb/blob/main/R/proj.R


However, I encountered various issues both with running proj.line3d and with documenting the functions in order to pass the CRAN-checks.

# ERROR: Executing function

p = c(1,2,3)
line = matrix(c(0,5,2,3,1,4), 2)
proj.line3d(p, line)
#  Error in UseMethod("proj.line3d") :
#   no applicable method for 'proj.line3d' applied to an object of class "c('double', 'numeric')"

I do prefer to have the methods named as "proj._name_" so that they are easily searchable using methods(proj). It's possible to project a point on a line, or a point on a plane, or other more complex projections. Therefore, more methods are possible in the future.

methods(proj)
# [1] proj.aov*           proj.aovlist*       proj.default*       proj.line3d
# [5] proj.line3d.matrix  proj.line3d.numeric proj.lm

I think it is wise to solve first this issue before solving the documentation issues.

Many thnaks,

Leonard



	[[alternative HTML version deleted]]


From |kry|ov @end|ng |rom d|@root@org  Sat Apr 27 09:08:57 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Sat, 27 Apr 2024 10:08:57 +0300
Subject: [R-pkg-devel] Extending proj with proj.line3d methods and
 overloading the methods
In-Reply-To: <DBAP192MB09568DD96FD61DDD801196DB84162@DBAP192MB0956.EURP192.PROD.OUTLOOK.COM>
References: <DBAP192MB09568DD96FD61DDD801196DB84162@DBAP192MB0956.EURP192.PROD.OUTLOOK.COM>
Message-ID: <31316745-EAB3-4083-B4B9-757142718797@disroot.org>

27 ?????? 2024 ?. 00:49:47 GMT+03:00, Leo Mada via R-package-devel <r-package-devel at r-project.org> ?????:
>Dear List-Members,
>
>I try to implement a proj.line3d method and to overload this method as follows:
>
>proj.line3d <- function(p, x, y, z, ...)
>  UseMethod("proj.line3d")
>
>proj.line3d.numeric = function(p, x, y, z, ...) {
>  # ...
>}
>
>proj.line3d.matrix = function(p, x, y, z, ...) {
>  # ...
>}

>p = c(1,2,3)
>line = matrix(c(0,5,2,3,1,4), 2)
>proj.line3d(p, line)
>#  Error in UseMethod("proj.line3d") :
>#   no applicable method for 'proj.line3d' applied to an object of class "c('double', 'numeric')"

>methods(proj)
># [1] proj.aov*           proj.aovlist*       proj.default*       proj.line3d
># [5] proj.line3d.matrix  proj.line3d.numeric proj.lm

In your NAMESPACE, you've registered methods for the generic function 'proj', classes 'line3d.matrix' and 'line3d.numeric', but above you are calling a different generic, 'proj.line3d', for which no methods are registered.

For proj.line3d(<numeric>, <matrix>) to work, you'll have to register the methods for the proj.line3d generic. If you need a visible connection to the proj() generic, you can try registering a method on the 'proj' generic, class 'line3d' *and* creating a class 'line3d' that would wrap your vectors and matrices:

proj(line3d(p), line) -> call lands in proj.line3d -> maybe additional dispatch on the remaining classes of 'p'?

This seems to work, but I haven't tested it extensively:

> proj.line3d <- \(x, ...) UseMethod('proj.line3d')
> proj.line3d.numeric <- \(x, ...) { message('proj.line3d.numeric'); x }
> line3d <- \(x) structure(x, class = c('line3d', class(x)))
> proj(line3d(pi))
proj.line3d.numeric
[1] 3.141593
attr(,"class")
[1] "line3d"  "numeric"

-- 
Best regards,
Ivan


From |eo@m@d@ @end|ng |rom @yon|c@eu  Sun Apr 28 17:15:06 2024
From: |eo@m@d@ @end|ng |rom @yon|c@eu (Leo Mada)
Date: Sun, 28 Apr 2024 15:15:06 +0000
Subject: [R-pkg-devel] Extending proj with proj.line3d methods and
 overloading the methods
In-Reply-To: <31316745-EAB3-4083-B4B9-757142718797@disroot.org>
References: <DBAP192MB09568DD96FD61DDD801196DB84162@DBAP192MB0956.EURP192.PROD.OUTLOOK.COM>
 <31316745-EAB3-4083-B4B9-757142718797@disroot.org>
Message-ID: <DBAP192MB09565433A654533CDC6650F484142@DBAP192MB0956.EURP192.PROD.OUTLOOK.COM>

Dear Ivan,

Thank you very much for the response.

Indeed, I was skeptical how R interprets class names and I have supposed it a little bit different.

S3 methods are more like overloaded functions; while S4 methods are more like true methods implemented for a class. But this is very approximate (with many exceptions and anomalies); and many programmers are not used to think like this.

The "proj" class could have both overloaded functions (e.g. for aov class, ...), and also new methods like projection of a point on a line, or projection of a point on a plane (which are still projections).

This is why I intended to define a new method "proj.line3d" and overload this method. But it seems that R interprets "line3d.numeric" as a class - which originates probably from the "data,frame" class.

How can I define a real method "proj.line3d"?
There might be some limitations from Roxygen as well (as I use it for the package); but it might be easier to proceed, once I understand how to do it in R.

I thought that this solves the problem:
proj.line3d <- function(p, x, y, z, ...)
  UseMethod("proj.line3d")

And maybe it did what I intended. But I need to "register" the overloaded functions somehow differently?

The other solution, as you pointed out, is more cumbersome; and it needs 2 separate classes, so I would need to define "proj" as an S4 class (as S3 does not handle 2 classes at once).


Thank you very much,

Leonard



________________________________
From: Ivan Krylov <ikrylov at disroot.org>
Sent: Saturday, April 27, 2024 10:08 AM
To: Leo Mada <leo.mada at syonic.eu>; r-package-devel at r-project.org <r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] Extending proj with proj.line3d methods and overloading the methods

27 ?????? 2024 ?. 00:49:47 GMT+03:00, Leo Mada via R-package-devel <r-package-devel at r-project.org> ?????:
>Dear List-Members,
>
>I try to implement a proj.line3d method and to overload this method as follows:
>
>proj.line3d <- function(p, x, y, z, ...)
>  UseMethod("proj.line3d")
>
>proj.line3d.numeric = function(p, x, y, z, ...) {
>  # ...
>}
>
>proj.line3d.matrix = function(p, x, y, z, ...) {
>  # ...
>}

>p = c(1,2,3)
>line = matrix(c(0,5,2,3,1,4), 2)
>proj.line3d(p, line)
>#  Error in UseMethod("proj.line3d") :
>#   no applicable method for 'proj.line3d' applied to an object of class "c('double', 'numeric')"

>methods(proj)
># [1] proj.aov*           proj.aovlist*       proj.default*       proj.line3d
># [5] proj.line3d.matrix  proj.line3d.numeric proj.lm

In your NAMESPACE, you've registered methods for the generic function 'proj', classes 'line3d.matrix' and 'line3d.numeric', but above you are calling a different generic, 'proj.line3d', for which no methods are registered.

For proj.line3d(<numeric>, <matrix>) to work, you'll have to register the methods for the proj.line3d generic. If you need a visible connection to the proj() generic, you can try registering a method on the 'proj' generic, class 'line3d' *and* creating a class 'line3d' that would wrap your vectors and matrices:

proj(line3d(p), line) -> call lands in proj.line3d -> maybe additional dispatch on the remaining classes of 'p'?

This seems to work, but I haven't tested it extensively:

> proj.line3d <- \(x, ...) UseMethod('proj.line3d')
> proj.line3d.numeric <- \(x, ...) { message('proj.line3d.numeric'); x }
> line3d <- \(x) structure(x, class = c('line3d', class(x)))
> proj(line3d(pi))
proj.line3d.numeric
[1] 3.141593
attr(,"class")
[1] "line3d"  "numeric"

--
Best regards,
Ivan

	[[alternative HTML version deleted]]


From |kry|ov @end|ng |rom d|@root@org  Sun Apr 28 20:15:42 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Sun, 28 Apr 2024 21:15:42 +0300
Subject: [R-pkg-devel] Extending proj with proj.line3d methods and
 overloading the methods
In-Reply-To: <DBAP192MB09565433A654533CDC6650F484142@DBAP192MB0956.EURP192.PROD.OUTLOOK.COM>
References: <DBAP192MB09568DD96FD61DDD801196DB84162@DBAP192MB0956.EURP192.PROD.OUTLOOK.COM>
 <31316745-EAB3-4083-B4B9-757142718797@disroot.org>
 <DBAP192MB09565433A654533CDC6650F484142@DBAP192MB0956.EURP192.PROD.OUTLOOK.COM>
Message-ID: <20240428211542.29f82804@trisector>

? Sun, 28 Apr 2024 15:15:06 +0000
Leo Mada <leo.mada at syonic.eu> ?????:

> This is why I intended to define a new method "proj.line3d" and
> overload this method. But it seems that R interprets "line3d.numeric"
> as a class - which originates probably from the "data,frame" class.

It may help to call the original 'proj' function and your new
'proj.line3d' function "generics", because that's what most S3
literature calls these functions that you overload. This separates them
from the "methods" 'proj.line3d.numeric' and 'proj.line3d.matrix' that
can be said to "implement" or "overload" the generic.

A concise but very readable guide to S3 and other built-in OOP systems
in R can be found in Advanced R by Hadley Wickham:
http://adv-r.had.co.nz/OO-essentials.html#s3

> How can I define a real method "proj.line3d"?

In order to export an S3 generic and register methods for it from a
package, you need the following directives in your NAMESPACE:

export(proj.line3d)
S3method(proj.line3d, numeric) # will use function proj.line3d.numeric
S3method(proj.line3d, matrix) # similar

<https://cran.r-project.org/doc/manuals/R-exts.html#Registering-S3-methods>

> There might be some limitations from Roxygen as well (as I use it for
> the package); but it might be easier to proceed, once I understand
> how to do it in R.

The roxygen2 documentation says that if there are multiple dots in the
name of a function, you need to use the two-argument form of the
@method keyword: @method proj.line3d numeric (untested).
<https://roxygen2.r-lib.org/articles/rd-other.html#s3>

> I thought that this solves the problem:
> proj.line3d <- function(p, x, y, z, ...)
>   UseMethod("proj.line3d")

Right. This is the definition of an S3 generic generic in R. As long as
all the methods will also accept arguments (p, x, y, z, <maybe extra
arguments here>, <dots>), all will be fine.

> The other solution, as you pointed out, is more cumbersome; and it
> needs 2 separate classes, so I would need to define "proj" as an S4
> class (as S3 does not handle 2 classes at once).

Moreover, you still need an exported generic proj.line3d and registered
methods for it to work. Inheritance does work in S3 (see NextMethod()),
but it alone won't help you call proj.line3d.numeric() from proj() and
'numeric' x.

-- 
Best regards,
Ivan


From ro||turner @end|ng |rom po@teo@net  Mon Apr 29 03:19:50 2024
From: ro||turner @end|ng |rom po@teo@net (Rolf Turner)
Date: Mon, 29 Apr 2024 01:19:50 +0000
Subject: [R-pkg-devel] Problem with loading package "devtools" from CRAN.
Message-ID: <20240429131950.43264267@rolf-Latitude-E7470>


Executive summary:

> The devtools package on CRAN appears to be broken.
> Installing devtools from github (using remotes::install_github())
> seems to give satisfactory results.

This morning my software up-dater (Ubuntu 22.04.4) prompted me to
install updated versions of some software, including r-base.  I thereby
obtained what I believe is the latest version of R (4.4.0 (2024-04-24)).

Then I could not load the "devtools" package, which is fairly crucial to
my work.

A bit of web-searching got me to a post on github by Henrik Bengtsson,
which referred to the devtools problem.  I therefore decided to try
installing devtools from github:

    remotes::install_github("r-lib/devtools",lib="/home/rolf/Rlib")

Some 50-odd packages seemed to require up-dating.  I went for it, and
after a fairly long wait, while messages about the updating flowed by,
devtools seemed to get installed.  Now "library(devtools)" runs without
error, so I am happy with my own situation.  However there seems to be
a problem with the devtools package on CRAN, which ought to be fixed.

cheers,

Rolf Turner

-- 
Honorary Research Fellow
Department of Statistics
University of Auckland
Stats. Dep't. (secretaries) phone:
         +64-9-373-7599 ext. 89622
Home phone: +64-9-480-4619


From berw|n@tur|@ch @end|ng |rom gm@||@com  Mon Apr 29 08:27:42 2024
From: berw|n@tur|@ch @end|ng |rom gm@||@com (Berwin A Turlach)
Date: Mon, 29 Apr 2024 14:27:42 +0800
Subject: [R-pkg-devel] 
 Problem with loading package "devtools" from CRAN.
In-Reply-To: <20240429131950.43264267@rolf-Latitude-E7470>
References: <20240429131950.43264267@rolf-Latitude-E7470>
Message-ID: <20240429142742.7e355d89@dep59159.uniwa.uwa.edu.au>

G'day Rolf,

hope all is well.

On Mon, 29 Apr 2024 01:19:50 +0000
Rolf Turner <rolfturner at posteo.net> wrote:

> Executive summary:
> 
> > The devtools package on CRAN appears to be broken.
> > Installing devtools from github (using remotes::install_github())
> > seems to give satisfactory results.  

I somehow have not shared this experience.  But then I compile on my
machines (Ubuntu 22.04.4) R and packages from source.

For me the devtools package from CRAN seems to work fine with R 4.4.0

> [...] I thereby obtained what I believe is the latest version of R
> (4.4.0 (2024-04-24)).

Well, what happens if you start R and enter "R.version"?  That should
confirm whether you run R 4.4.0. :)

If you run R 4.4.0 but previously ran R 4.3.x then you are running now
a version with a new minor version number.  AFAIK, there is no
guarantee that at the interface level to compiled code R versions
remain compatible when the minor version number changes.

So on machines where I do not compile from source, I usually run
"update.packages(checkBuilt=TRUE)" whenever I upgrade R on those
machines, definitely if the upgrade involves a change in the major or
minor version number. 

Did you try updating your packages?

Well, you probably first want to find out where exactly the Debian R
distribution installs additional packages (Dirk might help there), and
it might be that you have to run either (or all) of:

update.packages(lib="/usr/local/lib/R/site-library", checkBuilt=TRUE)
update.packages(lib="/usr/lib/R/site-library", checkBuilt=TRUE)
update.packages(lib="/usr/lib/R/library", checkBuilt=TRUE)

though, by a short look at my Ubuntu machine, it may be that the last
two locations are not writeable for you as user, and the first one only
if you belong to the group "staff" as normal user on your machine.

> A bit of web-searching got me to a post on github by Henrik Bengtsson,
> which referred to the devtools problem. 

Could you provide a link?  I could not find anything relevant. :)

> However there seems to be a problem with the devtools package on
> CRAN, which ought to be fixed.

Or, perhaps, just that the interface to compiled code changed from R
3.6.x to R 4.4.0 and, hence, all packages that rely on compiled code
must be reinstalled.

Stay safe.

Cheers,

	Berwin


From @|mon@urb@nek @end|ng |rom R-project@org  Mon Apr 29 08:33:55 2024
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Mon, 29 Apr 2024 18:33:55 +1200
Subject: [R-pkg-devel] 
 Problem with loading package "devtools" from CRAN.
In-Reply-To: <20240429131950.43264267@rolf-Latitude-E7470>
References: <20240429131950.43264267@rolf-Latitude-E7470>
Message-ID: <3CB83F57-1943-4FF3-AF77-61F3DC111991@R-project.org>

Rolf,

what do you mean by "broken"? Since you failed to include any proof nor details it's unlikely that anyone can help you, but chances are pretty high that it was a problem on your end. I just checked with R 4.4.0 on Ubuntu 22.04 and devtools install and load just fine, so it is certainly broken on CRAN.

Make sure you don't have packages for old R version in your local libraries - that is a most common mistake - always remove them when upgrading R and re-install if still need them. You can check the locations of your libraries with .libPaths() in R. Sometimes, update.packages(checkBuilt=TRUE) can do the trick as well, but I prefer clean re-installs for safety as it also helps you clean up old cruft that is not longer needed.

Cheers,
Simon



> On Apr 29, 2024, at 1:19 PM, Rolf Turner <rolfturner at posteo.net> wrote:
> 
> 
> Executive summary:
> 
>> The devtools package on CRAN appears to be broken.
>> Installing devtools from github (using remotes::install_github())
>> seems to give satisfactory results.
> 
> This morning my software up-dater (Ubuntu 22.04.4) prompted me to
> install updated versions of some software, including r-base.  I thereby
> obtained what I believe is the latest version of R (4.4.0 (2024-04-24)).
> 
> Then I could not load the "devtools" package, which is fairly crucial to
> my work.
> 
> A bit of web-searching got me to a post on github by Henrik Bengtsson,
> which referred to the devtools problem.  I therefore decided to try
> installing devtools from github:
> 
>    remotes::install_github("r-lib/devtools",lib="/home/rolf/Rlib")
> 
> Some 50-odd packages seemed to require up-dating.  I went for it, and
> after a fairly long wait, while messages about the updating flowed by,
> devtools seemed to get installed.  Now "library(devtools)" runs without
> error, so I am happy with my own situation.  However there seems to be
> a problem with the devtools package on CRAN, which ought to be fixed.
> 
> cheers,
> 
> Rolf Turner
> 
> -- 
> Honorary Research Fellow
> Department of Statistics
> University of Auckland
> Stats. Dep't. (secretaries) phone:
>         +64-9-373-7599 ext. 89622
> Home phone: +64-9-480-4619
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 


From georg|@bo@hn@kov @end|ng |rom m@nche@ter@@c@uk  Mon Apr 29 08:54:16 2024
From: georg|@bo@hn@kov @end|ng |rom m@nche@ter@@c@uk (Georgi Boshnakov)
Date: Mon, 29 Apr 2024 06:54:16 +0000
Subject: [R-pkg-devel] 
 Problem with loading package "devtools" from CRAN.
In-Reply-To: <3CB83F57-1943-4FF3-AF77-61F3DC111991@R-project.org>
References: <20240429131950.43264267@rolf-Latitude-E7470>
 <3CB83F57-1943-4FF3-AF77-61F3DC111991@R-project.org>
Message-ID: <LO0P265MB63254270048C9422B9094A9BAE1B2@LO0P265MB6325.GBRP265.PROD.OUTLOOK.COM>

I also had the problem that devtools didn't install.

I used update.packages(ask =FALSE) and that solved the problem.

Before that I tried to locate the culprit but it was not one of the direct dependencies of devtools.

Georgi Boshnakov

Sent from Outlook for Android<https://aka.ms/AAb9ysg>
________________________________
From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Simon Urbanek <simon.urbanek at R-project.org>
Sent: Monday, April 29, 2024 7:33:55 AM
To: Rolf Turner <rolfturner at posteo.net>
Cc: jenny at posit.co <jenny at posit.co>; r-package-devel at r-project.org <r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] Problem with loading package "devtools" from CRAN.

Rolf,

what do you mean by "broken"? Since you failed to include any proof nor details it's unlikely that anyone can help you, but chances are pretty high that it was a problem on your end. I just checked with R 4.4.0 on Ubuntu 22.04 and devtools install and load just fine, so it is certainly broken on CRAN.

Make sure you don't have packages for old R version in your local libraries - that is a most common mistake - always remove them when upgrading R and re-install if still need them. You can check the locations of your libraries with .libPaths() in R. Sometimes, update.packages(checkBuilt=TRUE) can do the trick as well, but I prefer clean re-installs for safety as it also helps you clean up old cruft that is not longer needed.

Cheers,
Simon



> On Apr 29, 2024, at 1:19 PM, Rolf Turner <rolfturner at posteo.net> wrote:
>
>
> Executive summary:
>
>> The devtools package on CRAN appears to be broken.
>> Installing devtools from github (using remotes::install_github())
>> seems to give satisfactory results.
>
> This morning my software up-dater (Ubuntu 22.04.4) prompted me to
> install updated versions of some software, including r-base.  I thereby
> obtained what I believe is the latest version of R (4.4.0 (2024-04-24)).
>
> Then I could not load the "devtools" package, which is fairly crucial to
> my work.
>
> A bit of web-searching got me to a post on github by Henrik Bengtsson,
> which referred to the devtools problem.  I therefore decided to try
> installing devtools from github:
>
>    remotes::install_github("r-lib/devtools",lib="/home/rolf/Rlib")
>
> Some 50-odd packages seemed to require up-dating.  I went for it, and
> after a fairly long wait, while messages about the updating flowed by,
> devtools seemed to get installed.  Now "library(devtools)" runs without
> error, so I am happy with my own situation.  However there seems to be
> a problem with the devtools package on CRAN, which ought to be fixed.
>
> cheers,
>
> Rolf Turner
>
> --
> Honorary Research Fellow
> Department of Statistics
> University of Auckland
> Stats. Dep't. (secretaries) phone:
>         +64-9-373-7599 ext. 89622
> Home phone: +64-9-480-4619
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://urldefense.com/v3/__https://stat.ethz.ch/mailman/listinfo/r-package-devel__;!!PDiH4ENfjr2_Jw!D1bv6hCvIc_G_5ay6dqpVMj1roESgfSV8NT0AaMD8kJ92-7-YAkFg6c4TaVx-GXHEj7yieujSDu7LATDgtP-aSPQ7C2b745lri9DbFpH$ [stat[.]ethz[.]ch]
>

______________________________________________
R-package-devel at r-project.org mailing list
https://urldefense.com/v3/__https://stat.ethz.ch/mailman/listinfo/r-package-devel__;!!PDiH4ENfjr2_Jw!D1bv6hCvIc_G_5ay6dqpVMj1roESgfSV8NT0AaMD8kJ92-7-YAkFg6c4TaVx-GXHEj7yieujSDu7LATDgtP-aSPQ7C2b745lri9DbFpH$ [stat[.]ethz[.]ch]

	[[alternative HTML version deleted]]


From edd @end|ng |rom deb|@n@org  Mon Apr 29 13:30:20 2024
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Mon, 29 Apr 2024 06:30:20 -0500
Subject: [R-pkg-devel] 
 Problem with loading package "devtools" from CRAN.
In-Reply-To: <LO0P265MB63254270048C9422B9094A9BAE1B2@LO0P265MB6325.GBRP265.PROD.OUTLOOK.COM>
References: <20240429131950.43264267@rolf-Latitude-E7470>
 <3CB83F57-1943-4FF3-AF77-61F3DC111991@R-project.org>
 <LO0P265MB63254270048C9422B9094A9BAE1B2@LO0P265MB6325.GBRP265.PROD.OUTLOOK.COM>
Message-ID: <26159.33996.203015.970788@rob.eddelbuettel.com>


Rolf,

This question might have been more appropriate for r-sig-debian than here.
But as Simon noted, the lack of detail makes is difficult to say anything to
aid. It likely was an issue local to your setup and use.

These days, I strongly recommend r2u [1].  As you already use R via CRAN
through apt, r2u adds one more repository after which _all_ R packages are
handled via the same apt operations that you already trust to get you R from
CRAN (as well as anything else on your machine).  This covers all 20+
thousand CRAN packages along with 400 key BioC packages. Handling your
packages with your system package managed guarantees all dependencies are
resolved reliably and quickly. It makes installing, upgrading, managing CRAN
package easier, faster and more reliable.

To double-check, I just spot-checked 'devtools' on an r2u container (on top
of Ubuntu 22.04) and of course devtools install and runs fine (as a binary).
So maybe give r2u a go. "Sixteen million packages served" in two years ...

Cheers, Dirk

[1] https://eddelbuettel.github.io/r2u

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From ro||turner @end|ng |rom po@teo@net  Tue Apr 30 03:21:15 2024
From: ro||turner @end|ng |rom po@teo@net (Rolf Turner)
Date: Tue, 30 Apr 2024 01:21:15 +0000
Subject: [R-pkg-devel] 
 Problem with loading package "devtools" from CRAN.
In-Reply-To: <26159.33996.203015.970788@rob.eddelbuettel.com>
References: <20240429131950.43264267@rolf-Latitude-E7470>
 <3CB83F57-1943-4FF3-AF77-61F3DC111991@R-project.org>
 <LO0P265MB63254270048C9422B9094A9BAE1B2@LO0P265MB6325.GBRP265.PROD.OUTLOOK.COM>
 <26159.33996.203015.970788@rob.eddelbuettel.com>
Message-ID: <20240430132115.7b9fab83@rolf-Latitude-E7470>


Well, I just uninstalled the devtools that I had installed from github
and ran

   install.packages("devtools",lib="/home/rolf/Rlib")  
 
No error message this time; the install went just fine.
The explanation may lie in the plethora of packages that I re-installed
when I invoked

   remotes::install_github("r-lib/devtools",lib="/home/rolf/Rlib")

This probably relates to Simon Urbanek's advice to re-install all
packages in my local library.  Which I will make sure to do in future.

Previously I got an error message from

    install.packages("devtools",lib="/home/rolf/Rlib")  
 
but now of course I cannot reproduce it.

On Mon, 29 Apr 2024 06:30:20 -0500
Dirk Eddelbuettel <edd at debian.org> wrote:

<SNIP>

> These days, I strongly recommend r2u [1].  As you already use R via
> CRAN through apt, r2u adds one more repository after which _all_ R
> packages are handled via the same apt operations that you already
> trust to get you R from CRAN (as well as anything else on your
> machine).  This covers all 20+ thousand CRAN packages along with 400
> key BioC packages. Handling your packages with your system package
> managed guarantees all dependencies are resolved reliably and
> quickly. It makes installing, upgrading, managing CRAN package
> easier, faster and more reliable.

<SNIP>

> [1] https://eddelbuettel.github.io/r2u

<SNIP>

Sounds promising, but I cannot follow what "r2u" is actually
all about.  What *is* r2u?  And how do I go about using it?  Do I
invoke it (or invoke something) from within R?  Or do I invoke
something from the OS?  E.g. something like

sudo apt-get install <what???>

???

I have downloaded the file add_cranapt_jammy.sh and executed

   sudo sh add_cranapt_jammy.sh

which seemed to run OK.  What now?

cheers,

Rolf

-- 
Honorary Research Fellow
Department of Statistics
University of Auckland
Stats. Dep't. (secretaries) phone:
         +64-9-373-7599 ext. 89622
Home phone: +64-9-480-4619


From edd @end|ng |rom deb|@n@org  Tue Apr 30 03:39:33 2024
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Mon, 29 Apr 2024 20:39:33 -0500
Subject: [R-pkg-devel] 
 Problem with loading package "devtools" from CRAN.
In-Reply-To: <20240430132115.7b9fab83@rolf-Latitude-E7470>
References: <20240429131950.43264267@rolf-Latitude-E7470>
 <3CB83F57-1943-4FF3-AF77-61F3DC111991@R-project.org>
 <LO0P265MB63254270048C9422B9094A9BAE1B2@LO0P265MB6325.GBRP265.PROD.OUTLOOK.COM>
 <26159.33996.203015.970788@rob.eddelbuettel.com>
 <20240430132115.7b9fab83@rolf-Latitude-E7470>
Message-ID: <26160.19413.125681.947133@rob.eddelbuettel.com>


On 30 April 2024 at 01:21, Rolf Turner wrote:
| On Mon, 29 Apr 2024 06:30:20 -0500
| Dirk Eddelbuettel <edd at debian.org> wrote:
| 
| <SNIP>
| 
| > These days, I strongly recommend r2u [1].  As you already use R via
| > CRAN through apt, r2u adds one more repository after which _all_ R
| > packages are handled via the same apt operations that you already
| > trust to get you R from CRAN (as well as anything else on your
| > machine).  This covers all 20+ thousand CRAN packages along with 400
| > key BioC packages. Handling your packages with your system package
| > managed guarantees all dependencies are resolved reliably and
| > quickly. It makes installing, upgrading, managing CRAN package
| > easier, faster and more reliable.
| 
| <SNIP>
| 
| > [1] https://eddelbuettel.github.io/r2u
| 
| <SNIP>
| 
| Sounds promising, but I cannot follow what "r2u" is actually
| all about.  What *is* r2u?  And how do I go about using it?  Do I
| invoke it (or invoke something) from within R?  Or do I invoke
| something from the OS?  E.g. something like
| 
| sudo apt-get install <what???>
| 
| ???

You could peruse the documentation at

  https://eddelbuettel.github.io/r2u

and / or the blogposts I have especially below

  https://dirk.eddelbuettel.com/blog/code/r4/

(and you may have to read 'in reverse order').

| I have downloaded the file add_cranapt_jammy.sh and executed
| 
|    sudo sh add_cranapt_jammy.sh
| 
| which seemed to run OK.  What now?

Briefly, when you setup r2u you set up new a new apt repo AND a new way to
access them from R (using the lovely `bspm` package).  So in R saying
`install.packages("devtools")` will seamlessly fetch r-cran-devtools and
about 100 other files it depends upon (if you start from an 'empty' system as
I did in a container last eve before replying to you). That works in mere
seconds. You can then say `library(devtools)` as if you compiled locally.

Naturally, using binaries both way faster and easier when it works (as this
generally does). See the blog posts, see the demos, see the r2u site, try in
(risklessly !!) in a container or at gitpod or in continuous integration or
in codespaces or ...
 
The docs try to get to that. Maybe start small and aim `install.packages()`
at a package you know you do not have see what what happens?

Follow-ups may be more appropriate for r-sig-debian, and/or an issue ticket
at the r2u github repo depending on nature of the follow-up.

Good luck,  Dirk


-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From berw|n@tur|@ch @end|ng |rom gm@||@com  Tue Apr 30 03:43:31 2024
From: berw|n@tur|@ch @end|ng |rom gm@||@com (Berwin A Turlach)
Date: Tue, 30 Apr 2024 09:43:31 +0800
Subject: [R-pkg-devel] 
 Problem with loading package "devtools" from CRAN.
In-Reply-To: <20240430132115.7b9fab83@rolf-Latitude-E7470>
References: <20240429131950.43264267@rolf-Latitude-E7470>
 <3CB83F57-1943-4FF3-AF77-61F3DC111991@R-project.org>
 <LO0P265MB63254270048C9422B9094A9BAE1B2@LO0P265MB6325.GBRP265.PROD.OUTLOOK.COM>
 <26159.33996.203015.970788@rob.eddelbuettel.com>
 <20240430132115.7b9fab83@rolf-Latitude-E7470>
Message-ID: <20240430094331.6fb0cf60@absentia>

G'day Rolf,

On Tue, 30 Apr 2024 01:21:15 +0000
Rolf Turner <rolfturner at posteo.net> wrote:

> Previously I got an error message from
> 
>     install.packages("devtools",lib="/home/rolf/Rlib")  
>  
> but now of course I cannot reproduce it.

Presumably the install.packages() invocation did not produce an error
message but a subsequent "library(devtools)" did?

I am not sure how remotes::install_github() behaves.  Are you using R
directly or via RStudio?  RStudio redefines the behaviour of
install.packages() so I am not sure what would happen if you type that
command into an R session running in RStudio.

As far as I remember, R's install.packages(), as you would invoke it if
you used R directly, installs the requested packages and any of its
(Depends/Imports) dependencies if these dependencies do not exist in
your libraries.  As devtool's dependencies must have existed on your
system, your command only re-installed devtools but none of the
dependencies.  

And it must be one of the dependencies that uses compiled code and
created the problem, as a "packageDescription("devtools")" actually
shows "NeedsCompilation: no".

You should really execute an
	update.packages(lib="/home/rolf/Rlib", checkBuilt=TRUE)
whenever you upgrade your R version, definitely when the upgrade
involves changing the major/minor version. 

Cheers,

	Berwin


From kev|n@r@coombe@ @end|ng |rom gm@||@com  Tue Apr 30 20:03:31 2024
From: kev|n@r@coombe@ @end|ng |rom gm@||@com (Kevin R. Coombes)
Date: Tue, 30 Apr 2024 14:03:31 -0400
Subject: [R-pkg-devel] re-exporting plot method?
Message-ID: <422b1f93-c779-40fd-a492-c6656960b354@gmail.com>

Hi,

I am working on a new package that primarily makes use of "igraph" 
representations of certain mathematical graphs, in order to apply lots 
of the comp sci algorithms already implemented in that package. For 
display purposes, my "igraph" objects already include information that 
defines node shapes and colors and edge styles and colors. But, I 
believe that the "graph" - "Rgraphviz" - "graphNEL" set of tools will 
produce better plots of the graphs.

So, I wrote my own "as.graphNEL" function that converts the "igraph" 
objects I want to use into graphNEL (or maybe into "Ragraph") format in 
order to be able to use their graph layout and rendering routines. This 
function is smart enough to translate the node and edge attributes from 
igraph into something that works correctly when plotted using the tools 
in Rgraphviz. (My DESCRIPTION and NAMESPACE files already import the set 
of functions from Rgraphviz necessary to make this happen.)

In principle, I'd like the eventual user to simply do something like

library("KevinsNewPackage")
IG <- makeIgraphFromFile(sourcefile)
GN <- as.graphNEL(IG)
plot(GN)

The first three lines work fine, but the "plot" function only works if 
the user also explicitly includes the line

library("Rgraphviz")

I suspect that there is a way with imports and exports in the NAMESPACE 
to make this work without having to remind the user to load the other 
package. But (in part because the plot function in Rgraphviz is actually 
an S4 method, which I don't need to alter in any way), I'm not sure 
exactly what needs to be imported or exported.

Helpful suggestion would be greatly appreciated.

Best,
 ? Kevin


From @|mon@urb@nek @end|ng |rom R-project@org  Wed May  1 05:46:32 2024
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Wed, 1 May 2024 15:46:32 +1200
Subject: [R-pkg-devel] re-exporting plot method?
In-Reply-To: <422b1f93-c779-40fd-a492-c6656960b354@gmail.com>
References: <422b1f93-c779-40fd-a492-c6656960b354@gmail.com>
Message-ID: <D333808A-E2F7-4A37-A203-5C4BD8AE168C@R-project.org>

Kevin,

welcome to the S4 world! ;) There is really no good solution since S4 only works at all if you attach the package since it relies on replacing the base S3 generic with its own - so the question remains what are your options to do it.

The most obvious is to simply add Depends: Rgraphviz which makes sure that any generics required are attached so your package doesn't need to worry. This is the most reliable in a way as you are not limiting the functionality to methods you know about. The side-effect, though, (beside exposing functions the user may not care about) is that such package cannot be on CRAN since Rgraphics is not on CRAN (that said, you mentioned you are already importing then you seem not to worry about that).

The next option is to simply ignore Rgraphviz and instead add setGeneric("plot") to your package and add methods to Depends and importFrom(methods, setGeneric) + exportMethods(plot) to the namespace. This allows you to forget about any dependencies - you are just creating the S4 generic from base::plot to make the dispatch work. This is the most light-weight solution as you only cherry-pick methods you need and there are no dependencies other than "methods". However, it is limited to just the functions you care about.

Finally, you could re-export the S4 plot generic from Rgraphviz, but I'd say that is the least sensible option, since it doesn't have any benefit over doing it yourself and only adds a hard dependency for no good reason. Also copying functions from another package opens up a can of worms with versions etc. - even if the risk is likely minimal.

Just for completeness - a really sneaky way would be to export an S3 plot method from your package - it would be only called in the case where the plot generic has not been replaced yet, so you could "fix" things on the fly by calling the generic from Rgraphviz, but that sounds a little hacky even for my taste ;).

Cheers,
Simon



> On 1/05/2024, at 6:03 AM, Kevin R. Coombes <kevin.r.coombes at gmail.com> wrote:
> 
> Hi,
> 
> I am working on a new package that primarily makes use of "igraph" representations of certain mathematical graphs, in order to apply lots of the comp sci algorithms already implemented in that package. For display purposes, my "igraph" objects already include information that defines node shapes and colors and edge styles and colors. But, I believe that the "graph" - "Rgraphviz" - "graphNEL" set of tools will produce better plots of the graphs.
> 
> So, I wrote my own "as.graphNEL" function that converts the "igraph" objects I want to use into graphNEL (or maybe into "Ragraph") format in order to be able to use their graph layout and rendering routines. This function is smart enough to translate the node and edge attributes from igraph into something that works correctly when plotted using the tools in Rgraphviz. (My DESCRIPTION and NAMESPACE files already import the set of functions from Rgraphviz necessary to make this happen.)
> 
> In principle, I'd like the eventual user to simply do something like
> 
> library("KevinsNewPackage")
> IG <- makeIgraphFromFile(sourcefile)
> GN <- as.graphNEL(IG)
> plot(GN)
> 
> The first three lines work fine, but the "plot" function only works if the user also explicitly includes the line
> 
> library("Rgraphviz")
> 
> I suspect that there is a way with imports and exports in the NAMESPACE to make this work without having to remind the user to load the other package. But (in part because the plot function in Rgraphviz is actually an S4 method, which I don't need to alter in any way), I'm not sure exactly what needs to be imported or exported.
> 
> Helpful suggestion would be greatly appreciated.
> 
> Best,
>   Kevin
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 


From konr@d@rudo|ph @end|ng |rom gm@||@com  Wed May  1 13:02:45 2024
From: konr@d@rudo|ph @end|ng |rom gm@||@com (Konrad Rudolph)
Date: Wed, 1 May 2024 13:02:45 +0200
Subject: [R-pkg-devel] May .External2() be used in packages?
Message-ID: <CAM2gKPbHwVi4PiDOYK=r5NCVozN-4sJonp5FqeL0Jy5Xpm6N8g@mail.gmail.com>

Hello,

Is the `.External2()` function part of the public API, and can it be used
in R packages submitted to CRAN? I would like to start using it in a
package, and there *are* packages on CRAN which use it. But its man page
[1] calls it ?internal?, R-exts doesn?t mention it at all (unlike `.C()`,
`.Call()` and `.External()`), and it doesn?t have any actual documentation.
In the context of the recent tightening of the C API CRAN rules, this makes
me concerned that `.External2()` might be next on the chopping block.

[1]
https://stat.ethz.ch/R-manual/R-devel/library/base/html/Foreign-internal.html

Cheers,

-- 
Konrad Rudolph // @klmr

	[[alternative HTML version deleted]]


From iuke-tier@ey m@iii@g oii uiow@@edu  Wed May  1 20:35:48 2024
From: iuke-tier@ey m@iii@g oii uiow@@edu (iuke-tier@ey m@iii@g oii uiow@@edu)
Date: Wed, 1 May 2024 13:35:48 -0500 (CDT)
Subject: [R-pkg-devel] [External]  May .External2() be used in packages?
In-Reply-To: <CAM2gKPbHwVi4PiDOYK=r5NCVozN-4sJonp5FqeL0Jy5Xpm6N8g@mail.gmail.com>
References: <CAM2gKPbHwVi4PiDOYK=r5NCVozN-4sJonp5FqeL0Jy5Xpm6N8g@mail.gmail.com>
Message-ID: <421bdf2-aa7c-983d-2687-1e83dc20bfcd@uiowa.edu>

.External2() is not in the API and is not intended to be used in
packages.  Packages that for whatever reason have chosen to use it
could instead use .External(), and that is what yo should use. I don't
expect that to be enforced by the check code soon, but it might be.

[.External2() exists for historical reason to ease moving things that
used to be primitives in base out into packages where they fit more
naturally. It could be removed now, but I don't think that is high on
anyone's priority list.]

Best,

luke

On Wed, 1 May 2024, Konrad Rudolph wrote:

> Hello,
>
> Is the `.External2()` function part of the public API, and can it be used
> in R packages submitted to CRAN? I would like to start using it in a
> package, and there *are* packages on CRAN which use it. But its man page
> [1] calls it ?internal?, R-exts doesn?t mention it at all (unlike `.C()`,
> `.Call()` and `.External()`), and it doesn?t have any actual documentation.
> In the context of the recent tightening of the C API CRAN rules, this makes
> me concerned that `.External2()` might be next on the chopping block.
>
> [1]
> https://stat.ethz.ch/R-manual/R-devel/library/base/html/Foreign-internal.html
>
> Cheers,
>
>

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu/

From konr@d@rudo|ph @end|ng |rom gm@||@com  Wed May  1 21:06:23 2024
From: konr@d@rudo|ph @end|ng |rom gm@||@com (Konrad Rudolph)
Date: Wed, 1 May 2024 21:06:23 +0200
Subject: [R-pkg-devel] [External]  May .External2() be used in packages?
In-Reply-To: <421bdf2-aa7c-983d-2687-1e83dc20bfcd@uiowa.edu>
References: <CAM2gKPbHwVi4PiDOYK=r5NCVozN-4sJonp5FqeL0Jy5Xpm6N8g@mail.gmail.com>
 <421bdf2-aa7c-983d-2687-1e83dc20bfcd@uiowa.edu>
Message-ID: <CAM2gKPaYYcaqLGyL7RQueB-YsL4VVbAZKtXf0Z-9aiDeJrF8LA@mail.gmail.com>

Thanks,

That?s a shame but good to know.

Packages that for whatever reason have chosen to use it
> could instead use .External(), and that is what yo should use.


Unfortunately .External() is not a replacement (in general, or for my
purpose) since it?s missing the `call` and `rho` arguments, and computing
the same information without these arguments in C code is far from trivial.

-- 
Konrad Rudolph // @klmr

	[[alternative HTML version deleted]]


From iuke-tier@ey m@iii@g oii uiow@@edu  Wed May  1 21:32:17 2024
From: iuke-tier@ey m@iii@g oii uiow@@edu (iuke-tier@ey m@iii@g oii uiow@@edu)
Date: Wed, 1 May 2024 14:32:17 -0500 (CDT)
Subject: [R-pkg-devel] [External]  May .External2() be used in packages?
In-Reply-To: <CAM2gKPaYYcaqLGyL7RQueB-YsL4VVbAZKtXf0Z-9aiDeJrF8LA@mail.gmail.com>
References: <CAM2gKPbHwVi4PiDOYK=r5NCVozN-4sJonp5FqeL0Jy5Xpm6N8g@mail.gmail.com>
 <421bdf2-aa7c-983d-2687-1e83dc20bfcd@uiowa.edu>
 <CAM2gKPaYYcaqLGyL7RQueB-YsL4VVbAZKtXf0Z-9aiDeJrF8LA@mail.gmail.com>
Message-ID: <d4ca5af-8c2e-ebc3-de78-2cccea4e72b@uiowa.edu>

yOn Wed, 1 May 2024, Konrad Rudolph wrote:

> Thanks,
> 
> That?s a shame but good to know.
>
>       Packages that for whatever reason have chosen to use it
>       could instead use .External(), and that is what yo should use.
> 
> 
> Unfortunately .External() is not a replacement (in general, or for my
> purpose) since it?s missing the `call` and `rho` arguments, and computing
> the same information without these arguments in C code is far from trivial.

The call you would get is not likely to be all that useful, but it is
the one you wrote. The environment is the one you get from environment()
at the point where you would call .External2. So instead of

.External2("foo", x, y)

do

.External("foo", quote(.External2("foo", x, y)), environment(), x, y)

and adjust your C function accordingly.

Best,

luke

> --
> Konrad Rudolph // @klmr
> 
>

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu

From konr@d@rudo|ph @end|ng |rom gm@||@com  Wed May  1 21:59:05 2024
From: konr@d@rudo|ph @end|ng |rom gm@||@com (Konrad Rudolph)
Date: Wed, 1 May 2024 21:59:05 +0200
Subject: [R-pkg-devel] [External]  May .External2() be used in packages?
In-Reply-To: <d4ca5af-8c2e-ebc3-de78-2cccea4e72b@uiowa.edu>
References: <CAM2gKPbHwVi4PiDOYK=r5NCVozN-4sJonp5FqeL0Jy5Xpm6N8g@mail.gmail.com>
 <421bdf2-aa7c-983d-2687-1e83dc20bfcd@uiowa.edu>
 <CAM2gKPaYYcaqLGyL7RQueB-YsL4VVbAZKtXf0Z-9aiDeJrF8LA@mail.gmail.com>
 <d4ca5af-8c2e-ebc3-de78-2cccea4e72b@uiowa.edu>
Message-ID: <CAM2gKPYLqBwh7Oe9-zrFz1u3_yqNC-bkjrCo7y38rrS1jEdLiw@mail.gmail.com>

Hi Luke,

Thanks, obviously that will work and I didn?t think of it.

In my defence I had previously used match.call() to capture the call on the
R side, and representative microbenchmarks show that it adds a prohibitive
overhead for my use-case. On the C side I only need the caller information
in the non-performance sensitive path (for error message formatting) so I
can compute it on demand. And I hadn?t included .External2() in that
benchmark yet. I assume that it?ll be no faster than the way you proposed,
so it isn?t actually needed in my case ? just as you said.


On Wed, 1 May 2024 at 21:32, <luke-tierney at uiowa.edu> wrote:

> yOn Wed, 1 May 2024, Konrad Rudolph wrote:
>
> > Thanks,
> >
> > That?s a shame but good to know.
> >
> >       Packages that for whatever reason have chosen to use it
> >       could instead use .External(), and that is what yo should use.
> >
> >
> > Unfortunately .External() is not a replacement (in general, or for my
> > purpose) since it?s missing the `call` and `rho` arguments, and computing
> > the same information without these arguments in C code is far from
> trivial.
>
> The call you would get is not likely to be all that useful, but it is
> the one you wrote. The environment is the one you get from environment()
> at the point where you would call .External2. So instead of
>
> .External2("foo", x, y)
>
> do
>
> .External("foo", quote(.External2("foo", x, y)), environment(), x, y)
>
> and adjust your C function accordingly.
>
> Best,
>
> luke
>
> > --
> > Konrad Rudolph // @klmr
> >
> >
>
> --
> Luke Tierney
> Ralph E. Wareham Professor of Mathematical Sciences
> University of Iowa                  Phone:             319-335-3386
> Department of Statistics and        Fax:               319-335-3017
>     Actuarial Science
> 241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
> Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu



-- 
Konrad Rudolph // @klmr

	[[alternative HTML version deleted]]


From kev|n@r@coombe@ @end|ng |rom gm@||@com  Wed May  1 22:56:31 2024
From: kev|n@r@coombe@ @end|ng |rom gm@||@com (Kevin R. Coombes)
Date: Wed, 1 May 2024 16:56:31 -0400
Subject: [R-pkg-devel] re-exporting plot method?
In-Reply-To: <D333808A-E2F7-4A37-A203-5C4BD8AE168C@R-project.org>
References: <422b1f93-c779-40fd-a492-c6656960b354@gmail.com>
 <D333808A-E2F7-4A37-A203-5C4BD8AE168C@R-project.org>
Message-ID: <46021147-bd1f-4955-9bf9-657a22b7f029@gmail.com>

Hi Simon,

Thanks for the detailed answer. I had considered all those 
possibilities, and was hoping that I had just missed something obvious.

I have been using S4 classes in my own packages for quite a while. But 
here, I didn't see any need to create my own class. Now, I may make my 
own, which presents a more abstract "graph" that can have realizations 
both as 'igraph' or "graphNEL' - 'Rargaph'. I'll have to think about, 
but that seems like the only reliable way to prevent putting al of 
Rgraphviz into the user's namespace.

Oh, and CRAN doesn't complain about importing Rgraphviz, since 
BioConductor is one of the "standard mainstream" repositories.

Best,
 ? Kevin

On 4/30/2024 11:46 PM, Simon Urbanek wrote:
> Kevin,
>
> welcome to the S4 world! ;) There is really no good solution since S4 only works at all if you attach the package since it relies on replacing the base S3 generic with its own - so the question remains what are your options to do it.
>
> The most obvious is to simply add Depends: Rgraphviz which makes sure that any generics required are attached so your package doesn't need to worry. This is the most reliable in a way as you are not limiting the functionality to methods you know about. The side-effect, though, (beside exposing functions the user may not care about) is that such package cannot be on CRAN since Rgraphics is not on CRAN (that said, you mentioned you are already importing then you seem not to worry about that).
>
> The next option is to simply ignore Rgraphviz and instead add setGeneric("plot") to your package and add methods to Depends and importFrom(methods, setGeneric) + exportMethods(plot) to the namespace. This allows you to forget about any dependencies - you are just creating the S4 generic from base::plot to make the dispatch work. This is the most light-weight solution as you only cherry-pick methods you need and there are no dependencies other than "methods". However, it is limited to just the functions you care about.
>
> Finally, you could re-export the S4 plot generic from Rgraphviz, but I'd say that is the least sensible option, since it doesn't have any benefit over doing it yourself and only adds a hard dependency for no good reason. Also copying functions from another package opens up a can of worms with versions etc. - even if the risk is likely minimal.
>
> Just for completeness - a really sneaky way would be to export an S3 plot method from your package - it would be only called in the case where the plot generic has not been replaced yet, so you could "fix" things on the fly by calling the generic from Rgraphviz, but that sounds a little hacky even for my taste ;).
>
> Cheers,
> Simon
>
>
>
>> On 1/05/2024, at 6:03 AM, Kevin R. Coombes <kevin.r.coombes at gmail.com> wrote:
>>
>> Hi,
>>
>> I am working on a new package that primarily makes use of "igraph" representations of certain mathematical graphs, in order to apply lots of the comp sci algorithms already implemented in that package. For display purposes, my "igraph" objects already include information that defines node shapes and colors and edge styles and colors. But, I believe that the "graph" - "Rgraphviz" - "graphNEL" set of tools will produce better plots of the graphs.
>>
>> So, I wrote my own "as.graphNEL" function that converts the "igraph" objects I want to use into graphNEL (or maybe into "Ragraph") format in order to be able to use their graph layout and rendering routines. This function is smart enough to translate the node and edge attributes from igraph into something that works correctly when plotted using the tools in Rgraphviz. (My DESCRIPTION and NAMESPACE files already import the set of functions from Rgraphviz necessary to make this happen.)
>>
>> In principle, I'd like the eventual user to simply do something like
>>
>> library("KevinsNewPackage")
>> IG <- makeIgraphFromFile(sourcefile)
>> GN <- as.graphNEL(IG)
>> plot(GN)
>>
>> The first three lines work fine, but the "plot" function only works if the user also explicitly includes the line
>>
>> library("Rgraphviz")
>>
>> I suspect that there is a way with imports and exports in the NAMESPACE to make this work without having to remind the user to load the other package. But (in part because the plot function in Rgraphviz is actually an S4 method, which I don't need to alter in any way), I'm not sure exactly what needs to be imported or exported.
>>
>> Helpful suggestion would be greatly appreciated.
>>
>> Best,
>>    Kevin
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>


From n@@|n@k|@m@c|ej @end|ng |rom gm@||@com  Fri May  3 11:37:57 2024
From: n@@|n@k|@m@c|ej @end|ng |rom gm@||@com (Maciej Nasinski)
Date: Fri, 3 May 2024 11:37:57 +0200
Subject: [R-pkg-devel] Urgent Review of R Packages in Light of Recent RDS
 Exploit
Message-ID: <CA+h+x0bDA3oOprQbB4pkA3WvqHOTR156zAikXhrs0OS7uAcP1g@mail.gmail.com>

I hope this message finds you well.

Following the recent announcement of a vulnerability related to the
RDS exploit in R
(https://hiddenlayer.com/research/r-bitrary-code-execution/).
Recent discussions on social media have raised concerns about the
credibility of the R language. Any code, including pure R code, can
potentially be malicious if it is executed without proper scrutiny.
It is worth noting that a similar problem was reported for the Python
pickle a few years ago:
https://hiddenlayer.com/research/weaponizing-machine-learning-models-with-ransomware/#Exploiting-Serialization.

In my opinion, not an exploit is a central problem, but if it is
introduced in any CRAN package.

I believe we must conduct a comprehensive review of all existing CRAN
packages. Additionally, I will expect an introduction of an additional
step in the R CMD check process. It is stated that R Team is aware of
that, and the exploit is fixed in R 4.4.0, but I can not find any
clear bullet point in the NEWS file for 4.4.0
(https://cran.r-project.org/doc/manuals/r-release/NEWS.html).

I look forward to your thoughts and collaborating closely on this urgent review.

KR
Maciej Nasinski
University of Warsaw


From |kry|ov @end|ng |rom d|@root@org  Fri May  3 11:52:47 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Fri, 3 May 2024 12:52:47 +0300
Subject: [R-pkg-devel] 
 Urgent Review of R Packages in Light of Recent RDS Exploit
In-Reply-To: <CA+h+x0bDA3oOprQbB4pkA3WvqHOTR156zAikXhrs0OS7uAcP1g@mail.gmail.com>
References: <CA+h+x0bDA3oOprQbB4pkA3WvqHOTR156zAikXhrs0OS7uAcP1g@mail.gmail.com>
Message-ID: <20240503125247.55c2ef6b@arachnoid>

Dear Maciej Nasinski,

On Fri, 3 May 2024 11:37:57 +0200
Maciej Nasinski <nasinski.maciej at gmail.com> wrote:

> I believe we must conduct a comprehensive review of all existing CRAN
> packages.

Why now? R packages are already code. You don't need poisoned RDS files
to wreak havoc using an R package.

On the other hand, R data files contain R objects, which contain code.
You don't need exploits to smuggle code inside an R object.

> Additionally, I will expect an introduction of an additional
> step in the R CMD check process.

What exactly would you like this step to be?

> It is stated that R Team is aware of
> that, and the exploit is fixed in R 4.4.0, but I can not find any
> clear bullet point in the NEWS file for 4.4.0
> (https://cran.r-project.org/doc/manuals/r-release/NEWS.html).

This has recently been discussed in the R-help thread:
https://stat.ethz.ch/pipermail/r-help/2024-May/479287.html

> I look forward to your thoughts and collaborating closely on this
> urgent review.

It may be worth teaching people that in general, R data files should be
as trusted as R code.

It may also be worth setting aside a strict subset of the R data format
to carry data only, without any executable code [*], but it may turn
out to be much less useful than it sounds. For example, you won't be
able to save many kinds of model objects using this plain data format,
which makes it unrealistic to require plain data only inside data files
in CRAN packages.

An independent review of the whole >20000 packages on CRAN for
malicious behaviour is a noble endeavour, but it will require people
and funding. Perhaps you could try to apply for an R Consortium
infrastructure grant to do that.

-- 
Best regards,
Ivan

[*] https://aitap.github.io/2024/05/02/unserialize.html#subset


From n@@|n@k|@m@c|ej @end|ng |rom gm@||@com  Fri May  3 12:04:27 2024
From: n@@|n@k|@m@c|ej @end|ng |rom gm@||@com (Maciej Nasinski)
Date: Fri, 3 May 2024 12:04:27 +0200
Subject: [R-pkg-devel] 
 Urgent Review of R Packages in Light of Recent RDS Exploit
In-Reply-To: <20240503125247.55c2ef6b@arachnoid>
References: <20240503125247.55c2ef6b@arachnoid>
Message-ID: <A3CB9A7E-5205-4455-AD01-D95823D3EB37@gmail.com>

Dear Ivan,

Thank you for such a quick response.
?It may be worth teaching people that, in general, R data files should be
as trusted as R code.? I totally agree and that why I wrote that any code can be dangerous if run without proper scrutiny. 
A few linkedin post generated most probably by Chat GPT (a lot of icons in them) make a lot of harm lastly. For sure I will try to make a post in my community and will remind that any code can be dangerous. 

BTW. we can limit the possible scan with crandb downloads stats to only those which have more than x downloads a day:) I image it will be a demanding project.

KR
Maciej Nasinski
University of Warsaw

> On 3 May 2024, at 11:52, Ivan Krylov <ikrylov at disroot.org> wrote:
> 
> It may be worth teaching people that in general, R data files should be
> as trusted as R code.


From n@@|n@k|@m@c|ej @end|ng |rom gm@||@com  Fri May  3 12:22:55 2024
From: n@@|n@k|@m@c|ej @end|ng |rom gm@||@com (Maciej Nasinski)
Date: Fri, 3 May 2024 12:22:55 +0200
Subject: [R-pkg-devel] 
 Urgent Review of R Packages in Light of Recent RDS Exploit
In-Reply-To: <A3CB9A7E-5205-4455-AD01-D95823D3EB37@gmail.com>
References: <A3CB9A7E-5205-4455-AD01-D95823D3EB37@gmail.com>
Message-ID: <47868CD6-5AE5-4FF4-BC4B-B93D8B87BBE4@gmail.com>

Dear Ivan,

Your blog post is fantastic and I already start to promote it on LinkedIn with full credit to you.

KR
Maciej Nasinski
University of Warsaw

> On 3 May 2024, at 12:04, Maciej Nasinski <nasinski.maciej at gmail.com> wrote:
> 
> ?Dear Ivan,
> 
> Thank you for such a quick response.
> ?It may be worth teaching people that, in general, R data files should be
> as trusted as R code.? I totally agree and that why I wrote that any code can be dangerous if run without proper scrutiny.
> A few linkedin post generated most probably by Chat GPT (a lot of icons in them) make a lot of harm lastly. For sure I will try to make a post in my community and will remind that any code can be dangerous.
> 
> BTW. we can limit the possible scan with crandb downloads stats to only those which have more than x downloads a day:) I image it will be a demanding project.
> 
> KR
> Maciej Nasinski
> University of Warsaw
> 
>> On 3 May 2024, at 11:52, Ivan Krylov <ikrylov at disroot.org> wrote:
>> 
>> It may be worth teaching people that in general, R data files should be
>> as trusted as R code.


From n@@|n@k|@m@c|ej @end|ng |rom gm@||@com  Fri May  3 18:17:52 2024
From: n@@|n@k|@m@c|ej @end|ng |rom gm@||@com (Maciej Nasinski)
Date: Fri, 3 May 2024 18:17:52 +0200
Subject: [R-pkg-devel] 
 Urgent Review of R Packages in Light of Recent RDS Exploit
In-Reply-To: <47868CD6-5AE5-4FF4-BC4B-B93D8B87BBE4@gmail.com>
References: <A3CB9A7E-5205-4455-AD01-D95823D3EB37@gmail.com>
 <47868CD6-5AE5-4FF4-BC4B-B93D8B87BBE4@gmail.com>
Message-ID: <CA+h+x0abhBOJk_6L0czbuFGYDngk+X8P48SM9KThZu3Virwp+w@mail.gmail.com>

Hey All,

Once more, Ivan, thank you for your great blog post.
I found the https://github.com/hrbrmstr/rdaradar solution and ran it on the
100 most downloaded R packages.
Happily, all data/inst rda files are safe/non-exposed to RDS exploit (using
the linked solution).
Please access my fork for the results
https://github.com/Polkas/rdaradar/blob/main/cran_top_results.txt and the
run https://github.com/Polkas/rdaradar/blob/main/iter_all.R

It will be great to run it on all CRAN packages, but I imagine we should be
sure that the check is decent enough to not overload the servers without a
need.

KR
Maciej Nasinski
University of Warsaw

On Fri, 3 May 2024 at 12:23, Maciej Nasinski <nasinski.maciej at gmail.com>
wrote:

> Dear Ivan,
>
> Your blog post is fantastic and I already start to promote it on LinkedIn
> with full credit to you.
>
> KR
> Maciej Nasinski
> University of Warsaw
>
> > On 3 May 2024, at 12:04, Maciej Nasinski <nasinski.maciej at gmail.com>
> wrote:
> >
> > ?Dear Ivan,
> >
> > Thank you for such a quick response.
> > ?It may be worth teaching people that, in general, R data files should be
> > as trusted as R code.? I totally agree and that why I wrote that any
> code can be dangerous if run without proper scrutiny.
> > A few linkedin post generated most probably by Chat GPT (a lot of icons
> in them) make a lot of harm lastly. For sure I will try to make a post in
> my community and will remind that any code can be dangerous.
> >
> > BTW. we can limit the possible scan with crandb downloads stats to only
> those which have more than x downloads a day:) I image it will be a
> demanding project.
> >
> > KR
> > Maciej Nasinski
> > University of Warsaw
> >
> >> On 3 May 2024, at 11:52, Ivan Krylov <ikrylov at disroot.org> wrote:
> >>
> >> It may be worth teaching people that in general, R data files should be
> >> as trusted as R code.
>

	[[alternative HTML version deleted]]


From j@h@d||e|d @end|ng |rom ed@@c@uk  Fri May  3 17:17:13 2024
From: j@h@d||e|d @end|ng |rom ed@@c@uk (Jarrod Hadfield)
Date: Fri, 3 May 2024 15:17:13 +0000
Subject: [R-pkg-devel] Error handling in C code
Message-ID: <DU2PR05MB10863FF6B2A05EFDB63B7D731AC1F2@DU2PR05MB10863.eurprd05.prod.outlook.com>

Hi,

I have an R library with C code in it. It has failed the CRAN checks for Debian.  The problem is with the error function being undefined. Section 6.2 of the Writing R extensions (see below) suggests error handling can be handled by error and the appropriate header file is included in R.h, but this seems not to be the case?

Any help would be appreciated!

Thanks,

Jarrod

6.2 Error signaling

The basic error signaling routines are the equivalents of stop and warning in R code, and use the same interface.

void error(const char * format, ...);
void warning(const char * format, ...);
void errorcall(SEXP call, const char * format, ...);
void warningcall(SEXP call, const char * format, ...);
void warningcall_immediate(SEXP call, const char * format, ...);

These have the same call sequences as calls to printf, but in the simplest case can be called with a single character string argument giving the error message. (Don?t do this if the string contains ?%? or might otherwise be interpreted as a format.)

These are defined in header R_ext/Error.h included by R.h.
The University of Edinburgh is a charitable body, registered in Scotland, with registration number SC005336. Is e buidheann carthannais a th? ann an Oilthigh Dh?n ?ideann, cl?raichte an Alba, ?ireamh cl?raidh SC005336.

	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Fri May  3 20:12:53 2024
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Fri, 3 May 2024 14:12:53 -0400
Subject: [R-pkg-devel] Error handling in C code
In-Reply-To: <DU2PR05MB10863FF6B2A05EFDB63B7D731AC1F2@DU2PR05MB10863.eurprd05.prod.outlook.com>
References: <DU2PR05MB10863FF6B2A05EFDB63B7D731AC1F2@DU2PR05MB10863.eurprd05.prod.outlook.com>
Message-ID: <89a82bc6-814b-4486-b76c-bbb1cbc79f94@gmail.com>

Most functions in R have a prefix on their name, with aliases defined so 
you can use the function without the prefix.  But you can turn off the 
aliasing, in which case you need the true name.  I think for all of the 
functions you list the prefix is "Rf_", so they are "Rf_error", etc.

Perhaps you turned off the aliasing?

Duncan Murdoch

On 03/05/2024 11:17 a.m., Jarrod Hadfield wrote:
> Hi,
> 
> I have an R library with C code in it. It has failed the CRAN checks for Debian.  The problem is with the error function being undefined. Section 6.2 of the Writing R extensions (see below) suggests error handling can be handled by error and the appropriate header file is included in R.h, but this seems not to be the case?
> 
> Any help would be appreciated!
> 
> Thanks,
> 
> Jarrod
> 
> 6.2 Error signaling
> 
> The basic error signaling routines are the equivalents of stop and warning in R code, and use the same interface.
> 
> void error(const char * format, ...);
> void warning(const char * format, ...);
> void errorcall(SEXP call, const char * format, ...);
> void warningcall(SEXP call, const char * format, ...);
> void warningcall_immediate(SEXP call, const char * format, ...);
> 
> These have the same call sequences as calls to printf, but in the simplest case can be called with a single character string argument giving the error message. (Don?t do this if the string contains ?%? or might otherwise be interpreted as a format.)
> 
> These are defined in header R_ext/Error.h included by R.h.
> The University of Edinburgh is a charitable body, registered in Scotland, with registration number SC005336. Is e buidheann carthannais a th? ann an Oilthigh Dh?n ?ideann, cl?raichte an Alba, ?ireamh cl?raidh SC005336.
> 
> 	[[alternative HTML version deleted]]
> 
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From |kry|ov @end|ng |rom d|@root@org  Fri May  3 22:57:09 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Fri, 3 May 2024 23:57:09 +0300
Subject: [R-pkg-devel] 
 Urgent Review of R Packages in Light of Recent RDS Exploit
In-Reply-To: <CA+h+x0abhBOJk_6L0czbuFGYDngk+X8P48SM9KThZu3Virwp+w@mail.gmail.com>
References: <A3CB9A7E-5205-4455-AD01-D95823D3EB37@gmail.com>
 <47868CD6-5AE5-4FF4-BC4B-B93D8B87BBE4@gmail.com>
 <CA+h+x0abhBOJk_6L0czbuFGYDngk+X8P48SM9KThZu3Virwp+w@mail.gmail.com>
Message-ID: <20240503235709.564e2930@Tarkus>

On Fri, 3 May 2024 18:17:52 +0200
Maciej Nasinski <nasinski.maciej at gmail.com> wrote:

> I found the https://github.com/hrbrmstr/rdaradar solution and ran it
> on the 100 most downloaded R packages.
> Happily, all data/inst rda files are safe/non-exposed to RDS exploit
> (using the linked solution).

This is a bit useful - knowing that there are no obvious exploits in
the 100 most downloaded CRAN packages is better that not knowing that - 
but it is important to keep the big picture in mind. Bob himself said
that the script is "super basic". Currently, it only checks whether an
*.rda file, when loaded in the global environment, would shadow certain
important functions. This is not an attack a package author would
perform; this is something one would send directly to the victim.

In order to defeat an attacker, you must think like an attacker.

Here's someone jokingly describing how they would trojan the world's
online shop checkout systems if they wanted to commit financial crimes:
https://archive.ph/FCdBu
(With kindness and pull requests.)

Here's someone spending two years to plant a fake maintainer with a
backdoor in a key free software project:
https://lwn.net/Articles/967192/
(The backdoor was assembled from obfuscated "test files for the
decompressor".)

Here's the 2015 Underhanded C Contest, where people competed in writing
the most harmless-looking code that would instead do something
nefarious: http://www.underhanded-c.org/

On the one hand, hiding the bad functions in a data file (which is
compressed and binary) instead of the R files (which are plain text and
indexed everywhere) would be the obvious first step, so it may be
useful to flag data files with functions in them for human review.

On the other hand, an evil package author has so many tools at their
disposal that they may not need this one in particular. There are CRAN
packages with tens of megabytes of compiled code inside. Sneaking a
little extra something in a file starting with "// This is generated
grammar parser. Do not edit!" followed by an impenetrable wall of C
could be easier and stay undetected for longer. How many packages use
Java? You don't even have to ship the Java source together with an R
package, so one of your *.jars could have a poisoned dependency with
nobody being the wiser.

Attackers are very cunning, and we don't even know what exactly we are
looking for. We can automate some of it, but the kind of code review
that will spot an evil function tucked 50 layers inside a giant
auxiliary data object is a lot of effort, hours to days per package.

> It will be great to run it on all CRAN packages, but I imagine we
> should be sure that the check is decent enough to not overload the
> servers without a need.

This probably counts as creating an unofficial CRAN mirror:
https://cran.r-project.org/mirror-howto.html

(I remember someone sending too many requests to download packages one
my one and losing access from a university address to CRAN as a result.)

You'll need 12.7 Gb for the current versions of the packages or >400 Gb
for the whole archive.

-- 
Best regards,
Ivan


From jo@|@h@p@rry @end|ng |rom gm@||@com  Fri May  3 23:24:33 2024
From: jo@|@h@p@rry @end|ng |rom gm@||@com (Josiah Parry)
Date: Fri, 3 May 2024 17:24:33 -0400
Subject: [R-pkg-devel] 
 Urgent Review of R Packages in Light of Recent RDS Exploit
In-Reply-To: <20240503235709.564e2930@Tarkus>
References: <A3CB9A7E-5205-4455-AD01-D95823D3EB37@gmail.com>
 <47868CD6-5AE5-4FF4-BC4B-B93D8B87BBE4@gmail.com>
 <CA+h+x0abhBOJk_6L0czbuFGYDngk+X8P48SM9KThZu3Virwp+w@mail.gmail.com>
 <20240503235709.564e2930@Tarkus>
Message-ID: <CAL3ufUKa5XnUTGr7JRhGW2T_K+-8HkX8kkzpGOwfy7gRNGSdaw@mail.gmail.com>

I agree with Ivan here. And more generally, R is a fully featured
programming language. You don't need just this one "exploit" (though, it
really does feel like a feature to some degree lol!) to be a bad guy with
R.

You can link to a pre-compiled binary (like my team makes for an R package
that contains proprietary code
https://github.com/R-ArcGIS/r-bridge/tree/master/libs/x64) and call
completely compiled function that have bad side effects. You can initialize
a logger in `.onLoad()` or have a function that sends your data to someone
using httr quietly while doing something actually useful.

There are also fairly widely used R packages that exist on GitHub/Lab or
r-universe or elsewhere.

You'd be taking on a  sisyphean task trying to route out all the evil code
from the R world.
There's also likely little to none of it (shouts out to CRAN maintainers
for being really good at what they do even if it does grind my gears
sometimes ??)



On Fri, May 3, 2024 at 4:57?PM Ivan Krylov via R-package-devel <
r-package-devel at r-project.org> wrote:

> On Fri, 3 May 2024 18:17:52 +0200
> Maciej Nasinski <nasinski.maciej at gmail.com> wrote:
>
> > I found the https://github.com/hrbrmstr/rdaradar solution and ran it
> > on the 100 most downloaded R packages.
> > Happily, all data/inst rda files are safe/non-exposed to RDS exploit
> > (using the linked solution).
>
> This is a bit useful - knowing that there are no obvious exploits in
> the 100 most downloaded CRAN packages is better that not knowing that -
> but it is important to keep the big picture in mind. Bob himself said
> that the script is "super basic". Currently, it only checks whether an
> *.rda file, when loaded in the global environment, would shadow certain
> important functions. This is not an attack a package author would
> perform; this is something one would send directly to the victim.
>
> In order to defeat an attacker, you must think like an attacker.
>
> Here's someone jokingly describing how they would trojan the world's
> online shop checkout systems if they wanted to commit financial crimes:
> https://archive.ph/FCdBu
> (With kindness and pull requests.)
>
> Here's someone spending two years to plant a fake maintainer with a
> backdoor in a key free software project:
> https://lwn.net/Articles/967192/
> (The backdoor was assembled from obfuscated "test files for the
> decompressor".)
>
> Here's the 2015 Underhanded C Contest, where people competed in writing
> the most harmless-looking code that would instead do something
> nefarious: http://www.underhanded-c.org/
>
> On the one hand, hiding the bad functions in a data file (which is
> compressed and binary) instead of the R files (which are plain text and
> indexed everywhere) would be the obvious first step, so it may be
> useful to flag data files with functions in them for human review.
>
> On the other hand, an evil package author has so many tools at their
> disposal that they may not need this one in particular. There are CRAN
> packages with tens of megabytes of compiled code inside. Sneaking a
> little extra something in a file starting with "// This is generated
> grammar parser. Do not edit!" followed by an impenetrable wall of C
> could be easier and stay undetected for longer. How many packages use
> Java? You don't even have to ship the Java source together with an R
> package, so one of your *.jars could have a poisoned dependency with
> nobody being the wiser.
>
> Attackers are very cunning, and we don't even know what exactly we are
> looking for. We can automate some of it, but the kind of code review
> that will spot an evil function tucked 50 layers inside a giant
> auxiliary data object is a lot of effort, hours to days per package.
>
> > It will be great to run it on all CRAN packages, but I imagine we
> > should be sure that the check is decent enough to not overload the
> > servers without a need.
>
> This probably counts as creating an unofficial CRAN mirror:
> https://cran.r-project.org/mirror-howto.html
>
> (I remember someone sending too many requests to download packages one
> my one and losing access from a university address to CRAN as a result.)
>
> You'll need 12.7 Gb for the current versions of the packages or >400 Gb
> for the whole archive.
>
> --
> Best regards,
> Ivan
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From @vi@e@gross m@iii@g oii gm@ii@com  Sat May  4 01:04:43 2024
From: @vi@e@gross m@iii@g oii gm@ii@com (@vi@e@gross m@iii@g oii gm@ii@com)
Date: Fri, 3 May 2024 19:04:43 -0400
Subject: [R-pkg-devel] 
 Urgent Review of R Packages in Light of Recent RDS Exploit
In-Reply-To: <CAL3ufUKa5XnUTGr7JRhGW2T_K+-8HkX8kkzpGOwfy7gRNGSdaw@mail.gmail.com>
References: <A3CB9A7E-5205-4455-AD01-D95823D3EB37@gmail.com>
 <47868CD6-5AE5-4FF4-BC4B-B93D8B87BBE4@gmail.com>
 <CA+h+x0abhBOJk_6L0czbuFGYDngk+X8P48SM9KThZu3Virwp+w@mail.gmail.com>
 <20240503235709.564e2930@Tarkus>
 <CAL3ufUKa5XnUTGr7JRhGW2T_K+-8HkX8kkzpGOwfy7gRNGSdaw@mail.gmail.com>
Message-ID: <005f01da9dae$49725170$dc56f450$@gmail.com>

Yes, this may have hit the news as a problem but any code anywhere can be a security issue.

If you want to read lots of R code and also the code for add-ins from libraries and compile everything from scratch with a  trusted set of tools, and refuse to open any of the files being discussed and so on, and only use packages on your machine and already examined, sure. You can be a tad safer.

But as shown for years, it is quite possible to obfuscate the code in many languages to the point where you may not easily figure out what the code will do! And most people cannot and will not read source code as at some point it is easier to do what they want another way.

What is sort of new here is a level of indirection that happens because of the way you can store things in a file and read them in so they execute. But is it all that much more dangerous than regular R code that opens up some remote file or reads records from a database and then does an eval() on the random text?

Having said that, this is a bit like the Virus Detection industry. You may scan files in endless ways to recognize a KNOWN signature and then find lots of false positives too. Obviously places like CRAN might be able to do a scan on files in packages, or maybe you could open files with a wrapper that checks the innards for known dangers. But unless this becomes a widely used exploitation before it is fixed, ...


-----Original Message-----
From: R-package-devel <r-package-devel-bounces at r-project.org> On Behalf Of Josiah Parry
Sent: Friday, May 3, 2024 5:25 PM
To: Ivan Krylov <ikrylov at disroot.org>
Cc: r-package-devel at r-project.org
Subject: Re: [R-pkg-devel] Urgent Review of R Packages in Light of Recent RDS Exploit

I agree with Ivan here. And more generally, R is a fully featured
programming language. You don't need just this one "exploit" (though, it
really does feel like a feature to some degree lol!) to be a bad guy with
R.

You can link to a pre-compiled binary (like my team makes for an R package
that contains proprietary code
https://github.com/R-ArcGIS/r-bridge/tree/master/libs/x64) and call
completely compiled function that have bad side effects. You can initialize
a logger in `.onLoad()` or have a function that sends your data to someone
using httr quietly while doing something actually useful.

There are also fairly widely used R packages that exist on GitHub/Lab or
r-universe or elsewhere.

You'd be taking on a  sisyphean task trying to route out all the evil code
from the R world.
There's also likely little to none of it (shouts out to CRAN maintainers
for being really good at what they do even if it does grind my gears
sometimes ??)



On Fri, May 3, 2024 at 4:57?PM Ivan Krylov via R-package-devel <
r-package-devel at r-project.org> wrote:

> On Fri, 3 May 2024 18:17:52 +0200
> Maciej Nasinski <nasinski.maciej at gmail.com> wrote:
>
> > I found the https://github.com/hrbrmstr/rdaradar solution and ran it
> > on the 100 most downloaded R packages.
> > Happily, all data/inst rda files are safe/non-exposed to RDS exploit
> > (using the linked solution).
>
> This is a bit useful - knowing that there are no obvious exploits in
> the 100 most downloaded CRAN packages is better that not knowing that -
> but it is important to keep the big picture in mind. Bob himself said
> that the script is "super basic". Currently, it only checks whether an
> *.rda file, when loaded in the global environment, would shadow certain
> important functions. This is not an attack a package author would
> perform; this is something one would send directly to the victim.
>
> In order to defeat an attacker, you must think like an attacker.
>
> Here's someone jokingly describing how they would trojan the world's
> online shop checkout systems if they wanted to commit financial crimes:
> https://archive.ph/FCdBu
> (With kindness and pull requests.)
>
> Here's someone spending two years to plant a fake maintainer with a
> backdoor in a key free software project:
> https://lwn.net/Articles/967192/
> (The backdoor was assembled from obfuscated "test files for the
> decompressor".)
>
> Here's the 2015 Underhanded C Contest, where people competed in writing
> the most harmless-looking code that would instead do something
> nefarious: http://www.underhanded-c.org/
>
> On the one hand, hiding the bad functions in a data file (which is
> compressed and binary) instead of the R files (which are plain text and
> indexed everywhere) would be the obvious first step, so it may be
> useful to flag data files with functions in them for human review.
>
> On the other hand, an evil package author has so many tools at their
> disposal that they may not need this one in particular. There are CRAN
> packages with tens of megabytes of compiled code inside. Sneaking a
> little extra something in a file starting with "// This is generated
> grammar parser. Do not edit!" followed by an impenetrable wall of C
> could be easier and stay undetected for longer. How many packages use
> Java? You don't even have to ship the Java source together with an R
> package, so one of your *.jars could have a poisoned dependency with
> nobody being the wiser.
>
> Attackers are very cunning, and we don't even know what exactly we are
> looking for. We can automate some of it, but the kind of code review
> that will spot an evil function tucked 50 layers inside a giant
> auxiliary data object is a lot of effort, hours to days per package.
>
> > It will be great to run it on all CRAN packages, but I imagine we
> > should be sure that the check is decent enough to not overload the
> > servers without a need.
>
> This probably counts as creating an unofficial CRAN mirror:
> https://cran.r-project.org/mirror-howto.html
>
> (I remember someone sending too many requests to download packages one
> my one and losing access from a university address to CRAN as a result.)
>
> You'll need 12.7 Gb for the current versions of the packages or >400 Gb
> for the whole archive.
>
> --
> Best regards,
> Ivan
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]

______________________________________________
R-package-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel


From vo|ody@ @end|ng |rom m|nd@pr|ng@com  Sat May  4 07:17:34 2024
From: vo|ody@ @end|ng |rom m|nd@pr|ng@com (Vladimir Dergachev)
Date: Sat, 4 May 2024 01:17:34 -0400 (EDT)
Subject: [R-pkg-devel] 
 Urgent Review of R Packages in Light of Recent RDS Exploit
In-Reply-To: <20240503125247.55c2ef6b@arachnoid>
References: <CA+h+x0bDA3oOprQbB4pkA3WvqHOTR156zAikXhrs0OS7uAcP1g@mail.gmail.com>
 <20240503125247.55c2ef6b@arachnoid>
Message-ID: <alpine.DEB.2.22.394.2405040111240.3559@iridium>



On Fri, 3 May 2024, Ivan Krylov via R-package-devel wrote:

> Dear Maciej Nasinski,
>
> On Fri, 3 May 2024 11:37:57 +0200
> Maciej Nasinski <nasinski.maciej at gmail.com> wrote:
>
>> I believe we must conduct a comprehensive review of all existing CRAN
>> packages.
>
> Why now? R packages are already code. You don't need poisoned RDS files
> to wreak havoc using an R package.
>
> On the other hand, R data files contain R objects, which contain code.
> You don't need exploits to smuggle code inside an R object.
>

I think the confusion arises because users expect "R data files" to only 
contain data, i.e. numbers, but they can contain any R object, including 
functions.

I, personally, never use them out of concern that accidentally saved 
function can override some functionality and be difficult to debug. And, 
of course, I never save R sessions.

If you need to pass data it is a good idea to use some common format like 
tab-separated CSV files with column names. One can also use MVL files 
(RMVL package).

best

Vladimir Dergachev


From n@@|n@k|@m@c|ej @end|ng |rom gm@||@com  Sat May  4 08:09:28 2024
From: n@@|n@k|@m@c|ej @end|ng |rom gm@||@com (Maciej Nasinski)
Date: Sat, 4 May 2024 08:09:28 +0200
Subject: [R-pkg-devel] 
 Urgent Review of R Packages in Light of Recent RDS Exploit
In-Reply-To: <alpine.DEB.2.22.394.2405040111240.3559@iridium>
References: <CA+h+x0bDA3oOprQbB4pkA3WvqHOTR156zAikXhrs0OS7uAcP1g@mail.gmail.com>
 <20240503125247.55c2ef6b@arachnoid>
 <alpine.DEB.2.22.394.2405040111240.3559@iridium>
Message-ID: <CA+h+x0a1WDnhwsqUMvLm848VTnnF5e750=UN0N9Ps51nxMLp2g@mail.gmail.com>

Thank you all for the discussion.
Then, we should promote "code awareness" and count on the CRAN Team to
continue their great work:)

What do you think about promoting containers?
Nowadays, containers are more accessible, with GitHub codespaces being more
affordable (mostly free for students and the educational sector).
I feel containers can help a little bit in making the R work more
secure, but once more when used properly.

KR
Maciej Nasinski
University of Warsaw

On Sat, 4 May 2024 at 07:17, Vladimir Dergachev <volodya at mindspring.com>
wrote:

>
>
> On Fri, 3 May 2024, Ivan Krylov via R-package-devel wrote:
>
> > Dear Maciej Nasinski,
> >
> > On Fri, 3 May 2024 11:37:57 +0200
> > Maciej Nasinski <nasinski.maciej at gmail.com> wrote:
> >
> >> I believe we must conduct a comprehensive review of all existing CRAN
> >> packages.
> >
> > Why now? R packages are already code. You don't need poisoned RDS files
> > to wreak havoc using an R package.
> >
> > On the other hand, R data files contain R objects, which contain code.
> > You don't need exploits to smuggle code inside an R object.
> >
>
> I think the confusion arises because users expect "R data files" to only
> contain data, i.e. numbers, but they can contain any R object, including
> functions.
>
> I, personally, never use them out of concern that accidentally saved
> function can override some functionality and be difficult to debug. And,
> of course, I never save R sessions.
>
> If you need to pass data it is a good idea to use some common format like
> tab-separated CSV files with column names. One can also use MVL files
> (RMVL package).
>
> best
>
> Vladimir Dergachev
>
>

	[[alternative HTML version deleted]]


From |kry|ov @end|ng |rom d|@root@org  Sat May  4 11:49:51 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Sat, 4 May 2024 12:49:51 +0300
Subject: [R-pkg-devel] 
 Urgent Review of R Packages in Light of Recent RDS Exploit
In-Reply-To: <CA+h+x0a1WDnhwsqUMvLm848VTnnF5e750=UN0N9Ps51nxMLp2g@mail.gmail.com>
References: <CA+h+x0bDA3oOprQbB4pkA3WvqHOTR156zAikXhrs0OS7uAcP1g@mail.gmail.com>
 <20240503125247.55c2ef6b@arachnoid>
 <alpine.DEB.2.22.394.2405040111240.3559@iridium>
 <CA+h+x0a1WDnhwsqUMvLm848VTnnF5e750=UN0N9Ps51nxMLp2g@mail.gmail.com>
Message-ID: <20240504124951.3b5e7df4@Tarkus>

On Sat, 4 May 2024 08:09:28 +0200
Maciej Nasinski <nasinski.maciej at gmail.com> wrote:

> What do you think about promoting containers?

Containers have an attack surface too, have user experience problems
(how's Docker on Windows?) and may bring in more third-party code than
what you're trying to protect against (whole operating system images!).
Even Firejail and Bubblewrap, containers specifically designed to
sandbox untrusted code, have bugs in their setup or implementation
every now and then.

Still, you are welcome to run third-party code in a virtual machine or
a container. It may be not everyone's favourite trade-off, but is a net
increase in security over running untrusted code directly. Feel free to
search for a point on the Pareto optimal line between security and
convenience that you'll be comfortable with: https://xkcd.com/2044/

> Nowadays, containers are more accessible, with GitHub codespaces
> being more affordable (mostly free for students and the educational
> sector).

The GitHub-isation of the development process is kind of a
vulnerability too, or at the very least has a cost. I'm a few
handshakes away from several people who have been disappeared from
GitHub and couldn't get their accounts back. Microsoft is too big to
have real tech support [*], so once you fall foul of their AI
moderation systems, you'll have to be a Hacker News celebrity to
attract attention of a human on the inside.

I've got an ageing ThinkPad that I cannot afford to replace. It can
process all the data I've been gathering during my PhD and then some,
least squares, inverse problems, you name it, all while playing music
and having Quake I open. But the moment I try to launch Codespaces, it
downloads more bytes of JavaScript than the whole Quake I installation
takes in size, and then the browser overheats the laptop.

Maybe programming other people's computers in the browser is the
future, but then you need a fancy laptop and maybe a friend in
Microsoft just to be admitted into that future. A solution for some,
but not for all.

-- 
Best regards,
Ivan

[*] https://danluu.com/diseconomies-scale/


From @bew|ck @end|ng |rom c|em@on@edu  Sat May  4 17:53:25 2024
From: @bew|ck @end|ng |rom c|em@on@edu (Sharon Bewick)
Date: Sat, 4 May 2024 15:53:25 +0000
Subject: [R-pkg-devel] Trouble with dependencies on phyloseq and microViz
Message-ID: <1FB885FF-2DA6-4CB6-A987-38858C3AF7FA@clemson.edu>

I?m having trouble with:
r-oldrel-macos-arm64 <https://cran.r-project.org/web/checks/check_flavors.html#r-oldrel-macos-arm64>
and
r-oldrel-macos-x86_64 <https://cran.r-project.org/web/checks/check_flavors.html#r-oldrel-macos-x86_64>

flagging an error because I have a dependency on phyloseq, which is available through GitHub but not on the CRAN site. I have a similar problem with microViz, however I?ve managed to make it suggested, rather than required. There is no way to get around the phyloseq requirement. How do I fix this problem so that I can upload my package to the CRAN website? I feel like I had this problem with microViz in the past, but now it?s coming up with phylseq too, and I can?t remove that dependency.

Thanks!
Sharon

From murdoch@dunc@n @end|ng |rom gm@||@com  Sat May  4 18:06:14 2024
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sat, 4 May 2024 12:06:14 -0400
Subject: [R-pkg-devel] 
 Trouble with dependencies on phyloseq and microViz
In-Reply-To: <1FB885FF-2DA6-4CB6-A987-38858C3AF7FA@clemson.edu>
References: <1FB885FF-2DA6-4CB6-A987-38858C3AF7FA@clemson.edu>
Message-ID: <7d0fbfd9-db95-4e13-add9-a7bd79bce7bb@gmail.com>

On 04/05/2024 11:53 a.m., Sharon Bewick wrote:
> I?m having trouble with:
> r-oldrel-macos-arm64 <https://cran.r-project.org/web/checks/check_flavors.html#r-oldrel-macos-arm64>
> and
> r-oldrel-macos-x86_64 <https://cran.r-project.org/web/checks/check_flavors.html#r-oldrel-macos-x86_64>
> 
> flagging an error because I have a dependency on phyloseq, which is available through GitHub but not on the CRAN site. I have a similar problem with microViz, however I?ve managed to make it suggested, rather than required. There is no way to get around the phyloseq requirement. How do I fix this problem so that I can upload my package to the CRAN website? I feel like I had this problem with microViz in the past, but now it?s coming up with phylseq too, and I can?t remove that dependency.
> 

phyloseq is a Bioconductor package. It appears to be available from 
BioConductor, so it doesn't matter that it's not on CRAN.

Have you tried submitting your package to CRAN?  If so, could you show 
us the error you received?

Duncan Murdoch


From |kry|ov @end|ng |rom d|@root@org  Sat May  4 18:32:10 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Sat, 4 May 2024 19:32:10 +0300
Subject: [R-pkg-devel] 
 Trouble with dependencies on phyloseq and microViz
In-Reply-To: <1FB885FF-2DA6-4CB6-A987-38858C3AF7FA@clemson.edu>
References: <1FB885FF-2DA6-4CB6-A987-38858C3AF7FA@clemson.edu>
Message-ID: <20240504193210.0332d714@Tarkus>

? Sat, 4 May 2024 15:53:25 +0000
Sharon Bewick <sbewick at clemson.edu> ?????:

> I have a dependency on phyloseq, which is available through GitHub
> but not on the CRAN site. I have a similar problem with microViz,
> however I?ve managed to make it suggested, rather than required.
> There is no way to get around the phyloseq requirement. How do I fix
> this problem so that I can upload my package to the CRAN website?

Did a human reviewer tell you to get rid of the dependencies? There is
at least 444 packages on CRAN with strong dependencies on Bioconductor
packages, so your phyloseq dependency should work. In fact, 14 of them
depend on phyloseq.

What you need is an Additional_repositories field in your DESCRIPTION
specifying the source package repository where microViz could be
installed from. I think that

Additional_repositories: https://david-barnett.r-universe.dev

...should work.

Besides that, you'll need to increment the version and list the *.Rproj
file in .Rbuildignore:
https://win-builder.r-project.org/incoming_pretest/HybridMicrobiomes_0.1.1_20240504_173331/Debian/00check.log

-- 
Best regards,
Ivan


From vo|ody@ @end|ng |rom m|nd@pr|ng@com  Sat May  4 18:53:07 2024
From: vo|ody@ @end|ng |rom m|nd@pr|ng@com (Vladimir Dergachev)
Date: Sat, 4 May 2024 12:53:07 -0400 (EDT)
Subject: [R-pkg-devel] 
 Urgent Review of R Packages in Light of Recent RDS Exploit
In-Reply-To: <CA+h+x0a1WDnhwsqUMvLm848VTnnF5e750=UN0N9Ps51nxMLp2g@mail.gmail.com>
References: <CA+h+x0bDA3oOprQbB4pkA3WvqHOTR156zAikXhrs0OS7uAcP1g@mail.gmail.com>
 <20240503125247.55c2ef6b@arachnoid>
 <alpine.DEB.2.22.394.2405040111240.3559@iridium>
 <CA+h+x0a1WDnhwsqUMvLm848VTnnF5e750=UN0N9Ps51nxMLp2g@mail.gmail.com>
Message-ID: <alpine.DEB.2.22.394.2405041238460.3559@iridium>



On Sat, 4 May 2024, Maciej Nasinski wrote:

> Thank you all for the discussion.Then, we should promote "code awareness" and count on the CRAN Team to continue their great work:)
> 
> What do you think about promoting containers?
> Nowadays, containers are more accessible, with GitHub codespaces being more affordable (mostly free for students and the educational sector).
> I feel containers can help a little bit in making the R work more secure,?but once more when used properly.

I think it is not a good idea to focus on one use case. Some people will 
find containers more convenient some don't.

If you want security, I am sure containers are not the right approach - 
get a separate physical computer instead.

>From a convenience point of view containers are only ok as long as you 
don't need to interface with outside software, then it gets tricky as the 
security keeping things containerized starts interfering with getting work 
done. (Prime example: firefox snap on ubuntu)

One situation where containers can be helpful is distribution of 
commercial applications. Containers allow you to freeze library versions, 
so your app can still run with old C library or a specific version of 
Python. You can then _hope_ that containers will have fewer compatibility 
issues, or at least you can sell containers to your management on this 
idea.

But this is not really a good thing for an open source project like R.

best

Vladimir Dergachev

> 
> KR
> Maciej Nasinski
> University of Warsaw
> 
> On Sat, 4 May 2024 at 07:17, Vladimir Dergachev <volodya at mindspring.com> wrote:
> 
>
>       On Fri, 3 May 2024, Ivan Krylov via R-package-devel wrote:
>
>       > Dear Maciej Nasinski,
>       >
>       > On Fri, 3 May 2024 11:37:57 +0200
>       > Maciej Nasinski <nasinski.maciej at gmail.com> wrote:
>       >
>       >> I believe we must conduct a comprehensive review of all existing CRAN
>       >> packages.
>       >
>       > Why now? R packages are already code. You don't need poisoned RDS files
>       > to wreak havoc using an R package.
>       >
>       > On the other hand, R data files contain R objects, which contain code.
>       > You don't need exploits to smuggle code inside an R object.
>       >
>
>       I think the confusion arises because users expect "R data files" to only
>       contain data, i.e. numbers, but they can contain any R object, including
>       functions.
>
>       I, personally, never use them out of concern that accidentally saved
>       function can override some functionality and be difficult to debug. And,
>       of course, I never save R sessions.
>
>       If you need to pass data it is a good idea to use some common format like
>       tab-separated CSV files with column names. One can also use MVL files
>       (RMVL package).
>
>       best
>
>       Vladimir Dergachev
> 
> 
>

From n@@|n@k|@m@c|ej @end|ng |rom gm@||@com  Sat May  4 19:43:58 2024
From: n@@|n@k|@m@c|ej @end|ng |rom gm@||@com (Maciej Nasinski)
Date: Sat, 4 May 2024 19:43:58 +0200
Subject: [R-pkg-devel] 
 Urgent Review of R Packages in Light of Recent RDS Exploit
In-Reply-To: <alpine.DEB.2.22.394.2405041238460.3559@iridium>
References: <CA+h+x0bDA3oOprQbB4pkA3WvqHOTR156zAikXhrs0OS7uAcP1g@mail.gmail.com>
 <20240503125247.55c2ef6b@arachnoid>
 <alpine.DEB.2.22.394.2405040111240.3559@iridium>
 <CA+h+x0a1WDnhwsqUMvLm848VTnnF5e750=UN0N9Ps51nxMLp2g@mail.gmail.com>
 <alpine.DEB.2.22.394.2405041238460.3559@iridium>
Message-ID: <CA+h+x0Zo3cPd_NoTDa2Kuy+9HHWWt9NOCQteG+Yv7gyoqzZcOA@mail.gmail.com>

Hey Vladimir,

Thank you for your answer.
GitHub codespaces are "a separate computer" and are free for students and
the educational sector.
The GitHub codespaces are a cloud service that can be created anytime, with
a specific setup behind it (Dockerfile, settings.json, renv.lock,  ...).
The machines GitHub codespaces offer are quite decent (4core 16GB RAM 32GB
Memory).
You can destroy and recreate it anytime you want to.
You run GitHub codespaces from a web browser, but as Ivan stated, you may
need a decent computer to handle them, even if all calculations are done on
the cloud.
I use GitHub codespaces for all my University projects with my friends.  It
is great that I do not have to explain many things nowadays to older stuff
as many things are automatic on GitHub codespaces.

KR
Maciej Nasinski
University of Warsaw

On Sat, 4 May 2024 at 18:53, Vladimir Dergachev <volodya at mindspring.com>
wrote:

>
>
> On Sat, 4 May 2024, Maciej Nasinski wrote:
>
> > Thank you all for the discussion.Then, we should promote "code
> awareness" and count on the CRAN Team to continue their great work:)
> >
> > What do you think about promoting containers?
> > Nowadays, containers are more accessible, with GitHub codespaces being
> more affordable (mostly free for students and the educational sector).
> > I feel containers can help a little bit in making the R work more
> secure, but once more when used properly.
>
> I think it is not a good idea to focus on one use case. Some people will
> find containers more convenient some don't.
>
> If you want security, I am sure containers are not the right approach -
> get a separate physical computer instead.
>
> From a convenience point of view containers are only ok as long as you
> don't need to interface with outside software, then it gets tricky as the
> security keeping things containerized starts interfering with getting work
> done. (Prime example: firefox snap on ubuntu)
>
> One situation where containers can be helpful is distribution of
> commercial applications. Containers allow you to freeze library versions,
> so your app can still run with old C library or a specific version of
> Python. You can then _hope_ that containers will have fewer compatibility
> issues, or at least you can sell containers to your management on this
> idea.
>
> But this is not really a good thing for an open source project like R.
>
> best
>
> Vladimir Dergachev
>
> >
> > KR
> > Maciej Nasinski
> > University of Warsaw
> >
> > On Sat, 4 May 2024 at 07:17, Vladimir Dergachev <volodya at mindspring.com>
> wrote:
> >
> >
> >       On Fri, 3 May 2024, Ivan Krylov via R-package-devel wrote:
> >
> >       > Dear Maciej Nasinski,
> >       >
> >       > On Fri, 3 May 2024 11:37:57 +0200
> >       > Maciej Nasinski <nasinski.maciej at gmail.com> wrote:
> >       >
> >       >> I believe we must conduct a comprehensive review of all
> existing CRAN
> >       >> packages.
> >       >
> >       > Why now? R packages are already code. You don't need poisoned
> RDS files
> >       > to wreak havoc using an R package.
> >       >
> >       > On the other hand, R data files contain R objects, which contain
> code.
> >       > You don't need exploits to smuggle code inside an R object.
> >       >
> >
> >       I think the confusion arises because users expect "R data files"
> to only
> >       contain data, i.e. numbers, but they can contain any R object,
> including
> >       functions.
> >
> >       I, personally, never use them out of concern that accidentally
> saved
> >       function can override some functionality and be difficult to
> debug. And,
> >       of course, I never save R sessions.
> >
> >       If you need to pass data it is a good idea to use some common
> format like
> >       tab-separated CSV files with column names. One can also use MVL
> files
> >       (RMVL package).
> >
> >       best
> >
> >       Vladimir Dergachev
> >
> >
> >

	[[alternative HTML version deleted]]


From bbo|ker @end|ng |rom gm@||@com  Sat May  4 20:03:42 2024
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Sat, 4 May 2024 14:03:42 -0400
Subject: [R-pkg-devel] 
 Urgent Review of R Packages in Light of Recent RDS Exploit
In-Reply-To: <CA+h+x0Zo3cPd_NoTDa2Kuy+9HHWWt9NOCQteG+Yv7gyoqzZcOA@mail.gmail.com>
References: <CA+h+x0bDA3oOprQbB4pkA3WvqHOTR156zAikXhrs0OS7uAcP1g@mail.gmail.com>
 <20240503125247.55c2ef6b@arachnoid>
 <alpine.DEB.2.22.394.2405040111240.3559@iridium>
 <CA+h+x0a1WDnhwsqUMvLm848VTnnF5e750=UN0N9Ps51nxMLp2g@mail.gmail.com>
 <alpine.DEB.2.22.394.2405041238460.3559@iridium>
 <CA+h+x0Zo3cPd_NoTDa2Kuy+9HHWWt9NOCQteG+Yv7gyoqzZcOA@mail.gmail.com>
Message-ID: <0a7d3fe4-6902-4e4c-8c75-7e5d9fc7caaf@gmail.com>

  This is true, and useful.

   Many old-school R users are nervous about coming to rely on tools 
that are controlled by a company that may rescind that availability in 
the future, or may possibly use your code in ways you don't want (I have 
not gone all the way through 
https://docs.github.com/en/site-policy/privacy-policies/github-general-privacy-statement 
...)

    For example, Travis was great for CI for a while then pulled the 
plug on free use for public repos, then everyone jumped to GitHub 
actions ...; Microsoft Open R and MRAN were around for a while and then 
weren't ...

   That doesn't mean one should necessarily avoid these tools; it just 
explains why some people do.

On 2024-05-04 1:43 p.m., Maciej Nasinski wrote:
> Hey Vladimir,
> 
> Thank you for your answer.
> GitHub codespaces are "a separate computer" and are free for students and
> the educational sector.
> The GitHub codespaces are a cloud service that can be created anytime, with
> a specific setup behind it (Dockerfile, settings.json, renv.lock,  ...).
> The machines GitHub codespaces offer are quite decent (4core 16GB RAM 32GB
> Memory).
> You can destroy and recreate it anytime you want to.
> You run GitHub codespaces from a web browser, but as Ivan stated, you may
> need a decent computer to handle them, even if all calculations are done on
> the cloud.
> I use GitHub codespaces for all my University projects with my friends.  It
> is great that I do not have to explain many things nowadays to older stuff
> as many things are automatic on GitHub codespaces.
> 
> KR
> Maciej Nasinski
> University of Warsaw
> 
> On Sat, 4 May 2024 at 18:53, Vladimir Dergachev <volodya at mindspring.com>
> wrote:
> 
>>
>>
>> On Sat, 4 May 2024, Maciej Nasinski wrote:
>>
>>> Thank you all for the discussion.Then, we should promote "code
>> awareness" and count on the CRAN Team to continue their great work:)
>>>
>>> What do you think about promoting containers?
>>> Nowadays, containers are more accessible, with GitHub codespaces being
>> more affordable (mostly free for students and the educational sector).
>>> I feel containers can help a little bit in making the R work more
>> secure, but once more when used properly.
>>
>> I think it is not a good idea to focus on one use case. Some people will
>> find containers more convenient some don't.
>>
>> If you want security, I am sure containers are not the right approach -
>> get a separate physical computer instead.
>>
>>  From a convenience point of view containers are only ok as long as you
>> don't need to interface with outside software, then it gets tricky as the
>> security keeping things containerized starts interfering with getting work
>> done. (Prime example: firefox snap on ubuntu)
>>
>> One situation where containers can be helpful is distribution of
>> commercial applications. Containers allow you to freeze library versions,
>> so your app can still run with old C library or a specific version of
>> Python. You can then _hope_ that containers will have fewer compatibility
>> issues, or at least you can sell containers to your management on this
>> idea.
>>
>> But this is not really a good thing for an open source project like R.
>>
>> best
>>
>> Vladimir Dergachev
>>
>>>
>>> KR
>>> Maciej Nasinski
>>> University of Warsaw
>>>
>>> On Sat, 4 May 2024 at 07:17, Vladimir Dergachev <volodya at mindspring.com>
>> wrote:
>>>
>>>
>>>        On Fri, 3 May 2024, Ivan Krylov via R-package-devel wrote:
>>>
>>>        > Dear Maciej Nasinski,
>>>        >
>>>        > On Fri, 3 May 2024 11:37:57 +0200
>>>        > Maciej Nasinski <nasinski.maciej at gmail.com> wrote:
>>>        >
>>>        >> I believe we must conduct a comprehensive review of all
>> existing CRAN
>>>        >> packages.
>>>        >
>>>        > Why now? R packages are already code. You don't need poisoned
>> RDS files
>>>        > to wreak havoc using an R package.
>>>        >
>>>        > On the other hand, R data files contain R objects, which contain
>> code.
>>>        > You don't need exploits to smuggle code inside an R object.
>>>        >
>>>
>>>        I think the confusion arises because users expect "R data files"
>> to only
>>>        contain data, i.e. numbers, but they can contain any R object,
>> including
>>>        functions.
>>>
>>>        I, personally, never use them out of concern that accidentally
>> saved
>>>        function can override some functionality and be difficult to
>> debug. And,
>>>        of course, I never save R sessions.
>>>
>>>        If you need to pass data it is a good idea to use some common
>> format like
>>>        tab-separated CSV files with column names. One can also use MVL
>> files
>>>        (RMVL package).
>>>
>>>        best
>>>
>>>        Vladimir Dergachev
>>>
>>>
>>>
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
Dr. Benjamin Bolker
Professor, Mathematics & Statistics and Biology, McMaster University
Director, School of Computational Science and Engineering
(Acting) Graduate chair, Mathematics & Statistics
 > E-mail is sent at my convenience; I don't expect replies outside of 
working hours.


From vo|ody@ @end|ng |rom m|nd@pr|ng@com  Sat May  4 20:08:18 2024
From: vo|ody@ @end|ng |rom m|nd@pr|ng@com (Vladimir Dergachev)
Date: Sat, 4 May 2024 14:08:18 -0400 (EDT)
Subject: [R-pkg-devel] 
 Urgent Review of R Packages in Light of Recent RDS Exploit
In-Reply-To: <CA+h+x0Zo3cPd_NoTDa2Kuy+9HHWWt9NOCQteG+Yv7gyoqzZcOA@mail.gmail.com>
References: <CA+h+x0bDA3oOprQbB4pkA3WvqHOTR156zAikXhrs0OS7uAcP1g@mail.gmail.com>
 <20240503125247.55c2ef6b@arachnoid>
 <alpine.DEB.2.22.394.2405040111240.3559@iridium>
 <CA+h+x0a1WDnhwsqUMvLm848VTnnF5e750=UN0N9Ps51nxMLp2g@mail.gmail.com>
 <alpine.DEB.2.22.394.2405041238460.3559@iridium>
 <CA+h+x0Zo3cPd_NoTDa2Kuy+9HHWWt9NOCQteG+Yv7gyoqzZcOA@mail.gmail.com>
Message-ID: <alpine.DEB.2.22.394.2405041403560.3559@iridium>



On Sat, 4 May 2024, Maciej Nasinski wrote:

> Hey Vladimir,
> Thank you for your answer.
> GitHub codespaces are "a separate computer" and are free for students and the educational sector.

Hi Maciej,

    What I was suggesting is that instead of encapsulating the application 
in a container that runs on the same physical hardware as other 
containers, you would be more secure to use a dedicated computer for the 
application.

    best

Vladimir Dergachev


> The GitHub codespaces are a cloud service that can be created anytime, with a specific setup behind it (Dockerfile, settings.json, renv.lock,? ...).
> The machines GitHub codespaces offer are quite decent (4core 16GB RAM?32GB Memory).?
> You can destroy and recreate it anytime you want to.
> You run GitHub codespaces from a web browser, but as Ivan stated, you may need a decent computer to handle them, even if all calculations are done on the cloud.
> I use GitHub codespaces for all my University projects with my friends.? It is great that I do not have to explain?many things nowadays to older stuff as many things are automatic on GitHub
> codespaces.
> 
> KR
> Maciej Nasinski
> University of Warsaw
> 
> On Sat, 4 May 2024 at 18:53, Vladimir Dergachev <volodya at mindspring.com> wrote:
> 
>
>       On Sat, 4 May 2024, Maciej Nasinski wrote:
>
>       > Thank you all for the discussion.Then, we should promote "code awareness" and count on the CRAN Team to continue their great work:)
>       >
>       > What do you think about promoting containers?
>       > Nowadays, containers are more accessible, with GitHub codespaces being more affordable (mostly free for students and the educational sector).
>       > I feel containers can help a little bit in making the R work more secure,?but once more when used properly.
>
>       I think it is not a good idea to focus on one use case. Some people will
>       find containers more convenient some don't.
>
>       If you want security, I am sure containers are not the right approach -
>       get a separate physical computer instead.
>
>       >From a convenience point of view containers are only ok as long as you
>       don't need to interface with outside software, then it gets tricky as the
>       security keeping things containerized starts interfering with getting work
>       done. (Prime example: firefox snap on ubuntu)
>
>       One situation where containers can be helpful is distribution of
>       commercial applications. Containers allow you to freeze library versions,
>       so your app can still run with old C library or a specific version of
>       Python. You can then _hope_ that containers will have fewer compatibility
>       issues, or at least you can sell containers to your management on this
>       idea.
>
>       But this is not really a good thing for an open source project like R.
>
>       best
>
>       Vladimir Dergachev
>
>       >
>       > KR
>       > Maciej Nasinski
>       > University of Warsaw
>       >
>       > On Sat, 4 May 2024 at 07:17, Vladimir Dergachev <volodya at mindspring.com> wrote:
>       >
>       >
>       >? ? ? ?On Fri, 3 May 2024, Ivan Krylov via R-package-devel wrote:
>       >
>       >? ? ? ?> Dear Maciej Nasinski,
>       >? ? ? ?>
>       >? ? ? ?> On Fri, 3 May 2024 11:37:57 +0200
>       >? ? ? ?> Maciej Nasinski <nasinski.maciej at gmail.com> wrote:
>       >? ? ? ?>
>       >? ? ? ?>> I believe we must conduct a comprehensive review of all existing CRAN
>       >? ? ? ?>> packages.
>       >? ? ? ?>
>       >? ? ? ?> Why now? R packages are already code. You don't need poisoned RDS files
>       >? ? ? ?> to wreak havoc using an R package.
>       >? ? ? ?>
>       >? ? ? ?> On the other hand, R data files contain R objects, which contain code.
>       >? ? ? ?> You don't need exploits to smuggle code inside an R object.
>       >? ? ? ?>
>       >
>       >? ? ? ?I think the confusion arises because users expect "R data files" to only
>       >? ? ? ?contain data, i.e. numbers, but they can contain any R object, including
>       >? ? ? ?functions.
>       >
>       >? ? ? ?I, personally, never use them out of concern that accidentally saved
>       >? ? ? ?function can override some functionality and be difficult to debug. And,
>       >? ? ? ?of course, I never save R sessions.
>       >
>       >? ? ? ?If you need to pass data it is a good idea to use some common format like
>       >? ? ? ?tab-separated CSV files with column names. One can also use MVL files
>       >? ? ? ?(RMVL package).
>       >
>       >? ? ? ?best
>       >
>       >? ? ? ?Vladimir Dergachev
>       >
>       >
>       >
> 
> 
>

From vo|ody@ @end|ng |rom m|nd@pr|ng@com  Sat May  4 20:13:58 2024
From: vo|ody@ @end|ng |rom m|nd@pr|ng@com (Vladimir Dergachev)
Date: Sat, 4 May 2024 14:13:58 -0400 (EDT)
Subject: [R-pkg-devel] SETLENGTH()
Message-ID: <alpine.DEB.2.22.394.2405041409470.3559@iridium>


I noticed a note on RMVL package check page for development version of R:

Found non-API call to R: ?SETLENGTH?

Is this something that is work-in-progress for the development version, or 
has SETLENGTH() been deprecated ? What should I use instead ?

thank you very much

Vladimir Dergachev

From iuke-tier@ey m@iii@g oii uiow@@edu  Sun May  5 01:30:32 2024
From: iuke-tier@ey m@iii@g oii uiow@@edu (iuke-tier@ey m@iii@g oii uiow@@edu)
Date: Sat, 4 May 2024 18:30:32 -0500 (CDT)
Subject: [R-pkg-devel] [External]  SETLENGTH()
In-Reply-To: <alpine.DEB.2.22.394.2405041409470.3559@iridium>
References: <alpine.DEB.2.22.394.2405041409470.3559@iridium>
Message-ID: <7451301c-236e-a685-058e-9fa6da633659@uiowa.edu>

On Sat, 4 May 2024, Vladimir Dergachev wrote:

> [Some people who received this message don't often get email from 
> volodya at mindspring.com. Learn why this is important at 
> https://aka.ms/LearnAboutSenderIdentification ]
>
> I noticed a note on RMVL package check page for development version of R:
>
> Found non-API call to R: ?SETLENGTH?
>
> Is this something that is work-in-progress for the development version, or
> has SETLENGTH() been deprecated ? What should I use instead ?

SETLENGTH has never been part of the API. It is not safe to use except
in a very, very limited set of circumstances. Using it in other
settings will confuse the memory manager, leading at least to
mis-calculation of memory use information and possibly to
segfaults. For most uses I have seen, copying to a new vector of the
right size is the only safe option.

The one context where something along these lines might be OK is for
growable vectors. This concept is emphatically not in the API at this
point, and the way it is currently implemented in base is not robust
enough to become an API (even though some packages have used it). It
is possible that a proper API for this will be added; at that point
SETLENGTH will be removed from the accessible entry points on
platforms that allow this.

So if you are getting a note about SETLENGTH, either stop using it or
be prepared to make some changes at fairly short notice.

[Similar considerations apply to SET_TRUELENGT. In most but not all
cases using it is less dangerous, but you should still look for other
options if you want your code to continue to work.]

Best,

luke

>
> thank you very much
>
> Vladimir Dergachev
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From vo|ody@ @end|ng |rom m|nd@pr|ng@com  Sun May  5 03:45:01 2024
From: vo|ody@ @end|ng |rom m|nd@pr|ng@com (Vladimir Dergachev)
Date: Sat, 4 May 2024 21:45:01 -0400 (EDT)
Subject: [R-pkg-devel] [External]  SETLENGTH()
In-Reply-To: <7451301c-236e-a685-058e-9fa6da633659@uiowa.edu>
References: <alpine.DEB.2.22.394.2405041409470.3559@iridium>
 <7451301c-236e-a685-058e-9fa6da633659@uiowa.edu>
Message-ID: <alpine.DEB.2.22.394.2405042140090.3559@iridium>



On Sat, 4 May 2024, luke-tierney at uiowa.edu wrote:

> On Sat, 4 May 2024, Vladimir Dergachev wrote:
>
>> [Some people who received this message don't often get email from 
>> volodya at mindspring.com. Learn why this is important at 
>> https://aka.ms/LearnAboutSenderIdentification ]
>> 
>> I noticed a note on RMVL package check page for development version of R:
>> 
>> Found non-API call to R: ?SETLENGTH?
>> 
>> Is this something that is work-in-progress for the development version, or
>> has SETLENGTH() been deprecated ? What should I use instead ?
>
> SETLENGTH has never been part of the API. It is not safe to use except
> in a very, very limited set of circumstances. Using it in other
> settings will confuse the memory manager, leading at least to
> mis-calculation of memory use information and possibly to
> segfaults. For most uses I have seen, copying to a new vector of the
> right size is the only safe option.
>
> The one context where something along these lines might be OK is for
> growable vectors. This concept is emphatically not in the API at this
> point, and the way it is currently implemented in base is not robust
> enough to become an API (even though some packages have used it). It
> is possible that a proper API for this will be added; at that point
> SETLENGTH will be removed from the accessible entry points on
> platforms that allow this.
>
> So if you are getting a note about SETLENGTH, either stop using it or
> be prepared to make some changes at fairly short notice.
>
> [Similar considerations apply to SET_TRUELENGT. In most but not all
> cases using it is less dangerous, but you should still look for other
> options if you want your code to continue to work.]

Great, thank you for the explanation ! I will rewrite the code to not use 
SETLENGTH().

My use case was to allocate a vector of some size N_max and then 
repeatedly populate it with variable number of elements. Since the vector 
was protected during the loop, I would have expected to save on memory 
allocation calls.

best

Vladimir Dergachev

>
> Best,
>
> luke
>
>> 
>> thank you very much
>> 
>> Vladimir Dergachev
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> 
>
> -- 
> Luke Tierney
> Ralph E. Wareham Professor of Mathematical Sciences
> University of Iowa                  Phone:             319-335-3386
> Department of Statistics and        Fax:               319-335-3017
>   Actuarial Science
> 241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
> Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu
>


From @|mon@urb@nek @end|ng |rom R-project@org  Mon May  6 04:37:49 2024
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Mon, 6 May 2024 14:37:49 +1200
Subject: [R-pkg-devel] Error handling in C code
In-Reply-To: <DU2PR05MB10863FF6B2A05EFDB63B7D731AC1F2@DU2PR05MB10863.eurprd05.prod.outlook.com>
References: <DU2PR05MB10863FF6B2A05EFDB63B7D731AC1F2@DU2PR05MB10863.eurprd05.prod.outlook.com>
Message-ID: <49818A23-B5E0-480B-8F6D-25BE759424A4@R-project.org>

Jarrod,

could you point us to the code? There is not much to go by based on your email. One thing just in general: it's always safer to not re-map function names, especially since "error" can be defined in many random other headers, so it's better to use Rf_error() instead to avoid confusions with 3rd party headers that may (re-)define the "error" macro (depending on the order you include them in).

Cheers,
Simon


> On 4/05/2024, at 3:17 AM, Jarrod Hadfield <j.hadfield at ed.ac.uk> wrote:
> 
> Hi,
> 
> I have an R library with C code in it. It has failed the CRAN checks for Debian.  The problem is with the error function being undefined. Section 6.2 of the Writing R extensions (see below) suggests error handling can be handled by error and the appropriate header file is included in R.h, but this seems not to be the case?
> 
> Any help would be appreciated!
> 
> Thanks,
> 
> Jarrod
> 
> 6.2 Error signaling
> 
> The basic error signaling routines are the equivalents of stop and warning in R code, and use the same interface.
> 
> void error(const char * format, ...);
> void warning(const char * format, ...);
> void errorcall(SEXP call, const char * format, ...);
> void warningcall(SEXP call, const char * format, ...);
> void warningcall_immediate(SEXP call, const char * format, ...);
> 
> These have the same call sequences as calls to printf, but in the simplest case can be called with a single character string argument giving the error message. (Don?t do this if the string contains ?%? or might otherwise be interpreted as a format.)
> 
> These are defined in header R_ext/Error.h included by R.h.
> The University of Edinburgh is a charitable body, registered in Scotland, with registration number SC005336. Is e buidheann carthannais a th? ann an Oilthigh Dh?n ?ideann, cl?raichte an Alba, ?ireamh cl?raidh SC005336.
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From j@h@d||e|d @end|ng |rom ed@@c@uk  Mon May  6 16:41:16 2024
From: j@h@d||e|d @end|ng |rom ed@@c@uk (Jarrod Hadfield)
Date: Mon, 6 May 2024 14:41:16 +0000
Subject: [R-pkg-devel] Error handling in C code
In-Reply-To: <49818A23-B5E0-480B-8F6D-25BE759424A4@R-project.org>
References: <DU2PR05MB10863FF6B2A05EFDB63B7D731AC1F2@DU2PR05MB10863.eurprd05.prod.outlook.com>
 <49818A23-B5E0-480B-8F6D-25BE759424A4@R-project.org>
Message-ID: <DU2PR05MB10863884D33D94D0E1FECF98AAC1C2@DU2PR05MB10863.eurprd05.prod.outlook.com>

Hi,

Using Rf_error() rather than error() fixed the problem. Not sure why the problem was only flagged on Debian, but it seems to have been triggered by R_NO_REMAP being defined (which will be default in R 4.5.0).

Thanks for the help.

Jarrod

From: Simon Urbanek <simon.urbanek at R-project.org>
Date: Monday, 6 May 2024 at 03:38
To: Jarrod Hadfield <j.hadfield at ed.ac.uk>
Cc: r-package-devel at r-project.org <r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] Error handling in C code
This email was sent to you by someone outside the University.
You should only click on links or attachments if you are certain that the email is genuine and the content is safe.

Jarrod,

could you point us to the code? There is not much to go by based on your email. One thing just in general: it's always safer to not re-map function names, especially since "error" can be defined in many random other headers, so it's better to use Rf_error() instead to avoid confusions with 3rd party headers that may (re-)define the "error" macro (depending on the order you include them in).

Cheers,
Simon


> On 4/05/2024, at 3:17 AM, Jarrod Hadfield <j.hadfield at ed.ac.uk> wrote:
>
> Hi,
>
> I have an R library with C code in it. It has failed the CRAN checks for Debian.  The problem is with the error function being undefined. Section 6.2 of the Writing R extensions (see below) suggests error handling can be handled by error and the appropriate header file is included in R.h, but this seems not to be the case?
>
> Any help would be appreciated!
>
> Thanks,
>
> Jarrod
>
> 6.2 Error signaling
>
> The basic error signaling routines are the equivalents of stop and warning in R code, and use the same interface.
>
> void error(const char * format, ...);
> void warning(const char * format, ...);
> void errorcall(SEXP call, const char * format, ...);
> void warningcall(SEXP call, const char * format, ...);
> void warningcall_immediate(SEXP call, const char * format, ...);
>
> These have the same call sequences as calls to printf, but in the simplest case can be called with a single character string argument giving the error message. (Don?t do this if the string contains ?%? or might otherwise be interpreted as a format.)
>
> These are defined in header R_ext/Error.h included by R.h.
> The University of Edinburgh is a charitable body, registered in Scotland, with registration number SC005336. Is e buidheann carthannais a th? ann an Oilthigh Dh?n ?ideann, cl?raichte an Alba, ?ireamh cl?raidh SC005336.
>
>       [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://eur02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-package-devel&data=05%7C02%7C%7C27d13d00316a466dc91f08dc6d759134%7C2e9f06b016694589878910a06934dc61%7C0%7C0%7C638505599232790068%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7C%7C&sdata=bhr0SQN0UJq4FQgEgboltgm6dH1wo5aonYTDqRvsf2g%3D&reserved=0<https://stat.ethz.ch/mailman/listinfo/r-package-devel>

	[[alternative HTML version deleted]]


From @|mon@urb@nek @end|ng |rom R-project@org  Tue May  7 00:07:59 2024
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Tue, 7 May 2024 10:07:59 +1200
Subject: [R-pkg-devel] 
 Trouble with dependencies on phyloseq and microViz
In-Reply-To: <20240504193210.0332d714@Tarkus>
References: <1FB885FF-2DA6-4CB6-A987-38858C3AF7FA@clemson.edu>
 <20240504193210.0332d714@Tarkus>
Message-ID: <7205534A-6666-4EDE-B613-68AAAFED2F2D@R-project.org>



> On 5/05/2024, at 4:32 AM, Ivan Krylov via R-package-devel <r-package-devel at r-project.org> wrote:
> 
> ? Sat, 4 May 2024 15:53:25 +0000
> Sharon Bewick <sbewick at clemson.edu> ?????:
> 
>> I have a dependency on phyloseq, which is available through GitHub
>> but not on the CRAN site. I have a similar problem with microViz,
>> however I?ve managed to make it suggested, rather than required.
>> There is no way to get around the phyloseq requirement. How do I fix
>> this problem so that I can upload my package to the CRAN website?
> 
> Did a human reviewer tell you to get rid of the dependencies? There is
> at least 444 packages on CRAN with strong dependencies on Bioconductor
> packages, so your phyloseq dependency should work. In fact, 14 of them
> depend on phyloseq.
> 
> What you need is an Additional_repositories field in your DESCRIPTION
> specifying the source package repository where microViz could be
> installed from. I think that
> 
> Additional_repositories: https://david-barnett.r-universe.dev
> 
> ...should work.
> 

That doesn't work - additional repositories are not allowed on CRAN other than in very exceptional cases, because it means the package cannot be installed by users making it somewhat pointless. Bioconductor doesn't need to be flagged in Additional_repositories, but not all packages are available - only those that do no depend on the data repository.

As for the OP, can you post the name of the package and/or the link to the errors so I can have a look?

Cheers,
Simon



> Besides that, you'll need to increment the version and list the *.Rproj
> file in .Rbuildignore:
> https://win-builder.r-project.org/incoming_pretest/HybridMicrobiomes_0.1.1_20240504_173331/Debian/00check.log
> 
> -- 
> Best regards,
> Ivan
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 


From |kry|ov @end|ng |rom d|@root@org  Tue May  7 08:15:52 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Tue, 7 May 2024 09:15:52 +0300
Subject: [R-pkg-devel] 
 Trouble with dependencies on phyloseq and microViz
In-Reply-To: <7205534A-6666-4EDE-B613-68AAAFED2F2D@R-project.org>
References: <1FB885FF-2DA6-4CB6-A987-38858C3AF7FA@clemson.edu>
 <20240504193210.0332d714@Tarkus>
 <7205534A-6666-4EDE-B613-68AAAFED2F2D@R-project.org>
Message-ID: <20240507091552.090ad6ec@Tarkus>

On Tue, 7 May 2024 10:07:59 +1200
Simon Urbanek <simon.urbanek at R-project.org> wrote:

> That doesn't work - additional repositories are not allowed on CRAN
> other than in very exceptional cases, because it means the package
> cannot be installed by users making it somewhat pointless.

I suppose that with(tools::CRAN_package_db(),
sum(!is.na(Additional_repositories)) / length(Additional_repositories))
= 0.7% does make it very rare. But not even for a weak dependency? Is
it for data packages only, as seems to be the focus of
[10.32614/RJ-2017-026]? The current wording of the CRAN policy makes it
sound like Additional_repositories is preferred to explaining the
non-mainstream weak dependencies in Description.

So what should be done about the non-Bioconductor weak dependency
microViz?

> As for the OP, can you post the name of the package and/or the link
> to the errors so I can have a look?

Sharon has since got rid of the WARNING and now only has NOTEs due to
microViz and a URL to its repo in the Description:
https://win-builder.r-project.org/incoming_pretest/HybridMicrobiomes_0.1.2_20240504_185748/Debian/00check.log

If Additional_repositories: is the correct way to specify a
non-mainstream weak dependency for a CRAN package, the URL must be
specified as https://david-barnett.r-universe.dev/src/contrib, not just
https://david-barnett.r-universe.dev/. I am sorry for not getting it
right the first time.

-- 
Best regards,
Ivan


From @|mon@urb@nek @end|ng |rom R-project@org  Tue May  7 08:56:03 2024
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Tue, 7 May 2024 18:56:03 +1200
Subject: [R-pkg-devel] 
 Trouble with dependencies on phyloseq and microViz
In-Reply-To: <20240507091552.090ad6ec@Tarkus>
References: <1FB885FF-2DA6-4CB6-A987-38858C3AF7FA@clemson.edu>
 <20240504193210.0332d714@Tarkus>
 <7205534A-6666-4EDE-B613-68AAAFED2F2D@R-project.org>
 <20240507091552.090ad6ec@Tarkus>
Message-ID: <DDFCF8F0-E664-4814-9A88-85ACC63ECB47@R-project.org>

Ivan,

sorry if it wasn't clear, but this thread was about strong dependencies -- Sharon noted that phyloseq must remain strong dependency and asked how to deal with that (see all the parts you cut from this thread). Now that I finally have the package name I can check the details - apparently this only affects R-oldrel so presumable Bioc upgrade may fix this so I'll have a look tomorrow.

Cheers,
Simon



> On May 7, 2024, at 6:15 PM, Ivan Krylov <ikrylov at disroot.org> wrote:
> 
> On Tue, 7 May 2024 10:07:59 +1200
> Simon Urbanek <simon.urbanek at R-project.org> wrote:
> 
>> That doesn't work - additional repositories are not allowed on CRAN
>> other than in very exceptional cases, because it means the package
>> cannot be installed by users making it somewhat pointless.
> 
> I suppose that with(tools::CRAN_package_db(),
> sum(!is.na(Additional_repositories)) / length(Additional_repositories))
> = 0.7% does make it very rare. But not even for a weak dependency? Is
> it for data packages only, as seems to be the focus of
> [10.32614/RJ-2017-026]? The current wording of the CRAN policy makes it
> sound like Additional_repositories is preferred to explaining the
> non-mainstream weak dependencies in Description.
> 
> So what should be done about the non-Bioconductor weak dependency
> microViz?
> 
>> As for the OP, can you post the name of the package and/or the link
>> to the errors so I can have a look?
> 
> Sharon has since got rid of the WARNING and now only has NOTEs due to
> microViz and a URL to its repo in the Description:
> https://win-builder.r-project.org/incoming_pretest/HybridMicrobiomes_0.1.2_20240504_185748/Debian/00check.log
> 
> If Additional_repositories: is the correct way to specify a
> non-mainstream weak dependency for a CRAN package, the URL must be
> specified as https://david-barnett.r-universe.dev/src/contrib, not just
> https://david-barnett.r-universe.dev/. I am sorry for not getting it
> right the first time.
> 
> -- 
> Best regards,
> Ivan
> 


From jo@|@h@p@rry @end|ng |rom gm@||@com  Tue May  7 15:55:30 2024
From: jo@|@h@p@rry @end|ng |rom gm@||@com (Josiah Parry)
Date: Tue, 7 May 2024 09:55:30 -0400
Subject: [R-pkg-devel] Linker / System Requirement
Message-ID: <CAL3ufUJCzADFW4wD9QyWAQynuCSnrW8XTse=JW-niwxW6sboHw@mail.gmail.com>

In my Makevars file (linked below) I link to ssl by adding `-lssl` to
`PKG_LIBS`. Since I do this, does libssl need to be added to the System
Requirements field?

Makevars:
https://github.com/R-ArcGIS/arcgisgeocode/blob/8194a478a616f7ddc3a25bcb024c0534007bcd51/src/Makevars#L4

If so, is there a place that contains the standardized descriptions for
some of these more common system requirements? I suspect that means my
SystemRequirements would look a bit like:


SystemRequirements: Cargo (Rust's package manager), rustc, libssl

Is that correct?

Thanks all! I'm a bit out of my depth here!

	[[alternative HTML version deleted]]


From jo@|@h@p@rry @end|ng |rom gm@||@com  Tue May  7 20:03:42 2024
From: jo@|@h@p@rry @end|ng |rom gm@||@com (Josiah Parry)
Date: Tue, 7 May 2024 14:03:42 -0400
Subject: [R-pkg-devel] Cannot repro failing CRAN autochecks
Message-ID: <CAL3ufU+Y8qxMOz9WJhuBkmcTWweXKFBRv8E52rNSgLKYsTjWYg@mail.gmail.com>

I've submitted an R package to CRAN and am failing checks *only on Debian*

https://win-builder.r-project.org/incoming_pretest/arcgisutils_0.3.0_20240507_194020/Debian/00check.log


This NOTE does not appear in Ubuntu, Mac, or Windows checks
https://github.com/R-ArcGIS/arcgisutils/actions/runs/8989812276/job/24693685840

I've made an edit to the Makevars to specifically remove this directory,
but it seems to continue to persist.

https://github.com/R-ArcGIS/arcgisutils/blob/ff8a0a1b936e27be16ac866aa16605b973d435c7/src/Makevars#L31-L35

Does anyone know how I can repro this NOTE or have an idea about what is
happening?

I'm a bit at a loss and do not want to use CRAN as if it is a CI
system--its challenging enough as is.

Thanks!

Josiah

	[[alternative HTML version deleted]]


From kev|nu@hey @end|ng |rom gm@||@com  Tue May  7 20:21:59 2024
From: kev|nu@hey @end|ng |rom gm@||@com (Kevin Ushey)
Date: Tue, 7 May 2024 11:21:59 -0700
Subject: [R-pkg-devel] Linker / System Requirement
In-Reply-To: <CAL3ufUJCzADFW4wD9QyWAQynuCSnrW8XTse=JW-niwxW6sboHw@mail.gmail.com>
References: <CAL3ufUJCzADFW4wD9QyWAQynuCSnrW8XTse=JW-niwxW6sboHw@mail.gmail.com>
Message-ID: <CAJXgQP2FjvMmKSMgcU6WP0JDWdg7mkxYj6_KxEW8aHvZVTDTJQ@mail.gmail.com>

Hi Josiah,

Indeed, the right thing to do is to declare the library in the
SystemRequirements file. However, other than some specific documented
usages which affect how R builds the package (e.g. C++ standards and
GNU make), I believe the field is meant more just to inform users of
the external dependencies required, so they could install those
themselves before attempting to install the package. The R extensions
manual has:

https://cran.r-project.org/doc/manuals/R-exts.html#The-DESCRIPTION-file
> Dependencies external to the R system should be listed in the ?SystemRequirements? field, possibly amplified in a separate README file. This includes specifying a non-default C++ standard and the need for GNU make.

Also note that, for any external dependency required by the package,
you should also check its existence in the package configure script.

https://cran.r-project.org/doc/manuals/R-exts.html#Configure-and-cleanup
> Use this to detect if any nonstandard libraries are present such that corresponding code in the package can be disabled at install time rather than giving error messages when the package is compiled or used.

The curl package (and its dependency on libcurl) is the first thing
that comes to mind and could be a useful reference.

https://github.com/jeroen/curl/blob/master/DESCRIPTION#L21
https://github.com/jeroen/curl/blob/master/configure

Best,
Kevin

On Tue, May 7, 2024 at 6:56?AM Josiah Parry <josiah.parry at gmail.com> wrote:
>
> In my Makevars file (linked below) I link to ssl by adding `-lssl` to
> `PKG_LIBS`. Since I do this, does libssl need to be added to the System
> Requirements field?
>
> Makevars:
> https://github.com/R-ArcGIS/arcgisgeocode/blob/8194a478a616f7ddc3a25bcb024c0534007bcd51/src/Makevars#L4
>
> If so, is there a place that contains the standardized descriptions for
> some of these more common system requirements? I suspect that means my
> SystemRequirements would look a bit like:
>
>
> SystemRequirements: Cargo (Rust's package manager), rustc, libssl
>
> Is that correct?
>
> Thanks all! I'm a bit out of my depth here!
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From |kry|ov @end|ng |rom d|@root@org  Tue May  7 20:40:31 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Tue, 7 May 2024 21:40:31 +0300
Subject: [R-pkg-devel] Cannot repro failing CRAN autochecks
In-Reply-To: <CAL3ufU+Y8qxMOz9WJhuBkmcTWweXKFBRv8E52rNSgLKYsTjWYg@mail.gmail.com>
References: <CAL3ufU+Y8qxMOz9WJhuBkmcTWweXKFBRv8E52rNSgLKYsTjWYg@mail.gmail.com>
Message-ID: <20240507214031.0df7e144@Tarkus>

? Tue, 7 May 2024 14:03:42 -0400
Josiah Parry <josiah.parry at gmail.com> ?????:

> This NOTE does not appear in Ubuntu, Mac, or Windows checks
> https://github.com/R-ArcGIS/arcgisutils/actions/runs/8989812276/job/24693685840

That's a bit strange. It fires for me in a local R CMD check for a test
package even without --as-cran. The code performing the check has been
in R since ~2010.

> I've made an edit to the Makevars to specifically remove this
> directory, but it seems to continue to persist.

It's too late for Makevars to exclude files from the source package
tarball. Use .Rbuildignore instead:
https://cran.r-project.org/doc/manuals/R-exts.html#Building-binary-packages

I think that the line src/vendor/chrono/CITATION\\.cff will prevent the
file from appearing in the package tarball.

-- 
Best regards,
Ivan


From |kry|ov @end|ng |rom d|@root@org  Tue May  7 20:58:49 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Tue, 7 May 2024 21:58:49 +0300
Subject: [R-pkg-devel] Cannot repro failing CRAN autochecks
In-Reply-To: <20240507214031.0df7e144@Tarkus>
References: <CAL3ufU+Y8qxMOz9WJhuBkmcTWweXKFBRv8E52rNSgLKYsTjWYg@mail.gmail.com>
 <20240507214031.0df7e144@Tarkus>
Message-ID: <20240507215849.05e8c9c1@Tarkus>

? Tue, 7 May 2024 21:40:31 +0300
Ivan Krylov via R-package-devel <r-package-devel at r-project.org> ?????:

> It's too late for Makevars to exclude files from the source package
> tarball. Use .Rbuildignore instead:

Sorry, that was mostly misguided. .Rbuildignore won't help with the
contents of the Rust vendor tarball.

1. Can you omit the .cff file from src/rust/vendor.tar.xz when building
it?

2. I think that there is --exclude in both GNU tar and BSD tar. How
about tar --exclude="*.cff" -x -f rust/vendor.tar.xz ?

3. From
<https://win-builder.r-project.org/incoming_pretest/arcgisutils_0.3.0_20240507_194020/Debian/00install.out>,
it can be seen that the "clean" target does not get called. Can you
remove the *.cff file in the same Make target?

-- 
Best regards,
Ivan


From jo@|@h@p@rry @end|ng |rom gm@||@com  Tue May  7 20:59:35 2024
From: jo@|@h@p@rry @end|ng |rom gm@||@com (Josiah Parry)
Date: Tue, 7 May 2024 14:59:35 -0400
Subject: [R-pkg-devel] Cannot repro failing CRAN autochecks
In-Reply-To: <20240507214031.0df7e144@Tarkus>
References: <CAL3ufU+Y8qxMOz9WJhuBkmcTWweXKFBRv8E52rNSgLKYsTjWYg@mail.gmail.com>
 <20240507214031.0df7e144@Tarkus>
Message-ID: <CAL3ufU+PEOC48NLGH5M0hbcG5J-eFpH0X9vLojLSxT1ALa-bAQ@mail.gmail.com>

Thanks, Ivan!

As you can see, the directory is ignored already
https://github.com/R-ArcGIS/arcgisutils/blob/ff8a0a1b936e27be16ac866aa16605b973d435c7/.Rbuildignore#L14

The directory is created in the Makevars after the zip is untarred:

https://github.com/R-ArcGIS/arcgisutils/blob/ff8a0a1b936e27be16ac866aa16605b973d435c7/src/Makevars#L17

Then the directory is removed during the clean phase I believe as well.

I have other packages that use a similar makevars that are in CRAN.

Since I can?t repro it I?m not sure how to debug it without submitting to
CRAN again.



On Tue, May 7, 2024 at 14:40 Ivan Krylov <ikrylov at disroot.org> wrote:

> ? Tue, 7 May 2024 14:03:42 -0400
> Josiah Parry <josiah.parry at gmail.com> ?????:
>
> > This NOTE does not appear in Ubuntu, Mac, or Windows checks
> >
> https://github.com/R-ArcGIS/arcgisutils
> /actions/runs/8989812276/job/24693685840
> <https://github.com/R-ArcGIS/arcgisutils/actions/runs/8989812276/job/24693685840>
>
> That's a bit strange. It fires for me in a local R CMD check for a test
> package even without --as-cran. The code performing the check has been
> in R since ~2010.
>
> > I've made an edit to the Makevars to specifically remove this
> > directory, but it seems to continue to persist.
>
> It's too late for Makevars to exclude files from the source package
> tarball. Use .Rbuildignore instead:
> https://cran.r-project.org/doc/manuals/R-exts.html#Building-binary-packages
>
> I think that the line src/vendor/chrono/CITATION\\.cff will prevent the
> file from appearing in the package tarball.
>
> --
> Best regards,
> Ivan
>

	[[alternative HTML version deleted]]


From jo@|@h@p@rry @end|ng |rom gm@||@com  Wed May  8 14:53:00 2024
From: jo@|@h@p@rry @end|ng |rom gm@||@com (Josiah Parry)
Date: Wed, 8 May 2024 08:53:00 -0400
Subject: [R-pkg-devel] Cannot repro failing CRAN autochecks
In-Reply-To: <20240507215849.05e8c9c1@Tarkus>
References: <CAL3ufU+Y8qxMOz9WJhuBkmcTWweXKFBRv8E52rNSgLKYsTjWYg@mail.gmail.com>
 <20240507214031.0df7e144@Tarkus> <20240507215849.05e8c9c1@Tarkus>
Message-ID: <CAL3ufU+vm3__WWRz5ZJJUAD3KaUTmH3WsOZv5xaM6FMuKLzjtg@mail.gmail.com>

Thanks to @yutannihilation for pointing out that the issue repros on
r-universe
https://github.com/r-universe/r-arcgis/actions/runs/8990426306/job/24695887245
.

Do folks know if there are any templates for the linux CRAN check? It
appears that the r-lib/actions linux checks don't cover all of the same
bases. I tried cribbing the r-universe one but it is a bit like unwinding a
cat's cradle.

Waiting an hour for each r-universe check is not really an effective
strategy! ?

On Tue, May 7, 2024 at 2:58?PM Ivan Krylov <ikrylov at disroot.org> wrote:

> ? Tue, 7 May 2024 21:40:31 +0300
> Ivan Krylov via R-package-devel <r-package-devel at r-project.org> ?????:
>
> > It's too late for Makevars to exclude files from the source package
> > tarball. Use .Rbuildignore instead:
>
> Sorry, that was mostly misguided. .Rbuildignore won't help with the
> contents of the Rust vendor tarball.
>
> 1. Can you omit the .cff file from src/rust/vendor.tar.xz when building
> it?
>
> 2. I think that there is --exclude in both GNU tar and BSD tar. How
> about tar --exclude="*.cff" -x -f rust/vendor.tar.xz ?
>
> 3. From
> <
> https://win-builder.r-project.org/incoming_pretest/arcgisutils_0.3.0_20240507_194020/Debian/00install.out
> >,
> it can be seen that the "clean" target does not get called. Can you
> remove the *.cff file in the same Make target?
>
> --
> Best regards,
> Ivan
>

	[[alternative HTML version deleted]]


From jo@|@h@p@rry @end|ng |rom gm@||@com  Wed May  8 17:02:20 2024
From: jo@|@h@p@rry @end|ng |rom gm@||@com (Josiah Parry)
Date: Wed, 8 May 2024 11:02:20 -0400
Subject: [R-pkg-devel] Overcoming CRAN's 5mb vendoring requirement
Message-ID: <CAL3ufULZDHv9aVAnmrE4m-fF_z=UvhkPGiKMYR3ZkQYN7=z+5A@mail.gmail.com>

I am sorry for blowing up this thread lately.

I've submitted a package to CRAN that uses Rust which thus requires
dependencies to be vendored. https://github.com/R-ArcGIS/arcgisutils/

The vendored dependencies are 18mb when zipped and 16.4mb when zipped with
XZ -9e. The *installed package size is 1.2mb* on my Mac.

CRAN has rejected this package with:

*   Size of tarball: 18099770 bytes*

*Please reudce to less than 5 MB for a CRAN package.*


Due to the requirement to vendor my dependencies. I do not see any possible
way to compress 250mb of source code to <= 5mb.

I suspect there are alternatives which have been handled in one-off
situations given that other packages require fairly large system
dependencies e.g. Arrow, DuckDB, torch etc.

How do others handle this?

	[[alternative HTML version deleted]]


From ne@|@p@r|ch@rd@on @end|ng |rom gm@||@com  Wed May  8 17:13:31 2024
From: ne@|@p@r|ch@rd@on @end|ng |rom gm@||@com (Neal Richardson)
Date: Wed, 8 May 2024 11:13:31 -0400
Subject: [R-pkg-devel] Overcoming CRAN's 5mb vendoring requirement
In-Reply-To: <CAL3ufULZDHv9aVAnmrE4m-fF_z=UvhkPGiKMYR3ZkQYN7=z+5A@mail.gmail.com>
References: <CAL3ufULZDHv9aVAnmrE4m-fF_z=UvhkPGiKMYR3ZkQYN7=z+5A@mail.gmail.com>
Message-ID: <CAOCv4hgS24JSWpxy=Ljxp6_VTW7Gx6a5WJKWvg_ryhbbyqJe8g@mail.gmail.com>

CRAN policy [1] says: "If the sources are too large, it is acceptable
to download them as part of installation, but do ensure that the
download is of a fixed version rather than the latest." So you could
try downloading the source in your configure script. Though be careful
not to be bitten by this other line from the policy: "Packages which
use Internet resources should fail gracefully with an informative
message if the resource is not available or has changed (and not give
a check warning nor error)."

Neal

[1]: https://cran.r-project.org/web/packages/policies.html


On Wed, May 8, 2024 at 11:03?AM Josiah Parry <josiah.parry at gmail.com> wrote:
>
> I am sorry for blowing up this thread lately.
>
> I've submitted a package to CRAN that uses Rust which thus requires
> dependencies to be vendored. https://github.com/R-ArcGIS/arcgisutils/
>
> The vendored dependencies are 18mb when zipped and 16.4mb when zipped with
> XZ -9e. The *installed package size is 1.2mb* on my Mac.
>
> CRAN has rejected this package with:
>
> *   Size of tarball: 18099770 bytes*
>
> *Please reudce to less than 5 MB for a CRAN package.*
>
>
> Due to the requirement to vendor my dependencies. I do not see any possible
> way to compress 250mb of source code to <= 5mb.
>
> I suspect there are alternatives which have been handled in one-off
> situations given that other packages require fairly large system
> dependencies e.g. Arrow, DuckDB, torch etc.
>
> How do others handle this?
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From z42d|r@j @end|ng |rom uco@e@  Wed May  8 17:30:46 2024
From: z42d|r@j @end|ng |rom uco@e@ (Jose V. Die Ramon)
Date: Wed, 8 May 2024 17:30:46 +0200
Subject: [R-pkg-devel] package removed from CRAN
Message-ID: <C6A4D596-999E-4654-B020-080B1EB0BF25@uco.es>

Hello, 

I just discovered that my package 'refseqR' was removed from the CRAN repository on April 30th. 
https://cran.r-project.org/web/packages/refseqR/index.html?

This news is extremely upsetting, especially because I did not receive any communication or warning regarding the issue. Could anyone please help me understand the reasons behind this, or suggest any steps I should take to resolve it?

Thanks, 
Jose 

From @vr@h@m@@d|er @end|ng |rom gm@||@com  Wed May  8 17:40:14 2024
From: @vr@h@m@@d|er @end|ng |rom gm@||@com (Avraham Adler)
Date: Wed, 8 May 2024 11:40:14 -0400
Subject: [R-pkg-devel] package removed from CRAN
In-Reply-To: <C6A4D596-999E-4654-B020-080B1EB0BF25@uco.es>
References: <C6A4D596-999E-4654-B020-080B1EB0BF25@uco.es>
Message-ID: <CAL6gwnKn5xNAV1aeZf3ydECwhigiyj_JXeQ1mwNA6wkioqOdQQ@mail.gmail.com>

According to the CRAN links
<https://cran-archive.r-project.org/web/checks/2024/2024-04-30_check_results_refseqR.html>,
your package had an error on r-devel-windows-x86_64 and
r-patched-linux-x86_64 which was not addressed. Specifically, some
examples failed. See
<https://cran-archive.r-project.org/web/checks/2024/2024-04-30_check_results_refseqR.html>
for more specific details. Usually, fixing the problem and
incrementing the version is enough to resubmit it to CRAN.

Thanks,

Avi

On Wed, May 8, 2024 at 11:33?AM Jose V. Die Ramon <z42diraj at uco.es> wrote:
>
> Hello,
>
> I just discovered that my package 'refseqR' was removed from the CRAN repository on April 30th.
> https://cran.r-project.org/web/packages/refseqR/index.html?
>
> This news is extremely upsetting, especially because I did not receive any communication or warning regarding the issue. Could anyone please help me understand the reasons behind this, or suggest any steps I should take to resolve it?
>
> Thanks,
> Jose
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From |kry|ov @end|ng |rom d|@root@org  Wed May  8 17:50:44 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Wed, 8 May 2024 18:50:44 +0300
Subject: [R-pkg-devel] package removed from CRAN
In-Reply-To: <C6A4D596-999E-4654-B020-080B1EB0BF25@uco.es>
References: <C6A4D596-999E-4654-B020-080B1EB0BF25@uco.es>
Message-ID: <20240508185044.02c15ecd@arachnoid>

? Wed, 8 May 2024 17:30:46 +0200
"Jose V. Die Ramon" <z42diraj at uco.es> ?????:

> Could anyone please help me understand the reasons behind this, or
> suggest any steps I should take to resolve it?

Here's what I could find in
https://cran.r-project.org/src/contrib/PACKAGES.in:

>> X-CRAN-Comment: Archived on 2024-04-30 for policy violation.
>>  .
>>  On Internet access.  Also other errors.

So Avi is right, this is about the tests and/or examples failing
(possibly due to problems on the remote server).

If possible, try to emit errors with a special class set for
Internet-related errors. This will make it possible for your examples
and tests to catch them, as in:

tests/*.R:

tryCatch(
 <expression potentially accessing the Internet using your package>,
 refseqR_internet_error = function(e)
  message("Caught Internet-related error")
)

-- 
Best regards,
Ivan


From edd @end|ng |rom deb|@n@org  Wed May  8 17:51:33 2024
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Wed, 8 May 2024 10:51:33 -0500
Subject: [R-pkg-devel] Overcoming CRAN's 5mb vendoring requirement
In-Reply-To: <CAL3ufULZDHv9aVAnmrE4m-fF_z=UvhkPGiKMYR3ZkQYN7=z+5A@mail.gmail.com>
References: <CAL3ufULZDHv9aVAnmrE4m-fF_z=UvhkPGiKMYR3ZkQYN7=z+5A@mail.gmail.com>
Message-ID: <26171.40837.306936.873386@rob.eddelbuettel.com>


On 8 May 2024 at 11:02, Josiah Parry wrote:
| CRAN has rejected this package with:
| 
| *   Size of tarball: 18099770 bytes*
| 
| *Please reudce to less than 5 MB for a CRAN package.*

Are you by chance confusing a NOTE (issued, but can be overruled) with a
WARNING (more severe, likely a must-be-addressed) or ERROR?

There are lots and lots of packages larger than 5mb -- see eg

   https://cran.r-project.org/src/contrib/?C=S;O=D

which has a top-5 of

   rcdklibs       19mb
   fastrmodels    15mb
   prqlr          15mb
   RFlocalfdr     14mb
   acss.data      14mb

and at least one of those is also Rust-using and hence a possible template.

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From jo@|@h@p@rry @end|ng |rom gm@||@com  Wed May  8 17:56:27 2024
From: jo@|@h@p@rry @end|ng |rom gm@||@com (Josiah Parry)
Date: Wed, 8 May 2024 11:56:27 -0400
Subject: [R-pkg-devel] Overcoming CRAN's 5mb vendoring requirement
In-Reply-To: <26171.40837.306936.873386@rob.eddelbuettel.com>
References: <CAL3ufULZDHv9aVAnmrE4m-fF_z=UvhkPGiKMYR3ZkQYN7=z+5A@mail.gmail.com>
 <26171.40837.306936.873386@rob.eddelbuettel.com>
Message-ID: <CAL3ufUL=LTxtu2PgO9nyPGE7hpU2nred0KHDz3HcymXG5Zg7Tg@mail.gmail.com>

Thank you, Dirk. This was a direct email from a CRAN member and not part of
the automatic checks. The whole email is below. I think the intent of the
message is "please resubmit."

Thanks, we see:


>    Size of tarball: 18099770 bytes



Please reudce to less than 5 MB for a CRAN package.



Best,


Yes, prqlr is a great Rust-based package! My other Rust based packages that
are on CRAN are based, in part on prqlr.


On Wed, May 8, 2024 at 11:51?AM Dirk Eddelbuettel <edd at debian.org> wrote:

>
> On 8 May 2024 at 11:02, Josiah Parry wrote:
> | CRAN has rejected this package with:
> |
> | *   Size of tarball: 18099770 bytes*
> |
> | *Please reudce to less than 5 MB for a CRAN package.*
>
> Are you by chance confusing a NOTE (issued, but can be overruled) with a
> WARNING (more severe, likely a must-be-addressed) or ERROR?
>
> There are lots and lots of packages larger than 5mb -- see eg
>
>    https://cran.r-project.org/src/contrib/?C=S;O=D
>
> which has a top-5 of
>
>    rcdklibs       19mb
>    fastrmodels    15mb
>    prqlr          15mb
>    RFlocalfdr     14mb
>    acss.data      14mb
>
> and at least one of those is also Rust-using and hence a possible template.
>
> Dirk
>
> --
> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>

	[[alternative HTML version deleted]]


From jo@|@h@p@rry @end|ng |rom gm@||@com  Wed May  8 20:08:36 2024
From: jo@|@h@p@rry @end|ng |rom gm@||@com (Josiah Parry)
Date: Wed, 8 May 2024 14:08:36 -0400
Subject: [R-pkg-devel] Overcoming CRAN's 5mb vendoring requirement
In-Reply-To: <CAOCv4hgS24JSWpxy=Ljxp6_VTW7Gx6a5WJKWvg_ryhbbyqJe8g@mail.gmail.com>
References: <CAL3ufULZDHv9aVAnmrE4m-fF_z=UvhkPGiKMYR3ZkQYN7=z+5A@mail.gmail.com>
 <CAOCv4hgS24JSWpxy=Ljxp6_VTW7Gx6a5WJKWvg_ryhbbyqJe8g@mail.gmail.com>
Message-ID: <CAL3ufULVrsZT-znYKa1wPgHud+fG4+KpPOe6XGNy7AcE9NZwyg@mail.gmail.com>

Thank you, Neal!

I took some inspiration from the arrow-r github repo and ch 1.2 of the
manual

*If your configure script needs auxiliary files, it is recommended that you
> ship them in a tools directory (as R itself does).*


With ChatGPT's ability to write autoconf, I *think *I have something that
can work.

The configure file runs tools/get-deps.R which will download the
dependencies from the repo if available and verify the checksums.
If the checksums don't match, an error is thrown, otherwise it can
continue. I believe this meets the requirements of CRAN?

Repo: https://github.com/R-ArcGIS/arcgisutils/tree/main/tools

On Wed, May 8, 2024 at 11:13?AM Neal Richardson <neal.p.richardson at gmail.com>
wrote:

> CRAN policy [1] says: "If the sources are too large, it is acceptable
> to download them as part of installation, but do ensure that the
> download is of a fixed version rather than the latest." So you could
> try downloading the source in your configure script. Though be careful
> not to be bitten by this other line from the policy: "Packages which
> use Internet resources should fail gracefully with an informative
> message if the resource is not available or has changed (and not give
> a check warning nor error)."
>
> Neal
>
> [1]: https://cran.r-project.org/web/packages/policies.html
>
>
> On Wed, May 8, 2024 at 11:03?AM Josiah Parry <josiah.parry at gmail.com>
> wrote:
> >
> > I am sorry for blowing up this thread lately.
> >
> > I've submitted a package to CRAN that uses Rust which thus requires
> > dependencies to be vendored. https://github.com/R-ArcGIS/arcgisutils/
> >
> > The vendored dependencies are 18mb when zipped and 16.4mb when zipped
> with
> > XZ -9e. The *installed package size is 1.2mb* on my Mac.
> >
> > CRAN has rejected this package with:
> >
> > *   Size of tarball: 18099770 bytes*
> >
> > *Please reudce to less than 5 MB for a CRAN package.*
> >
> >
> > Due to the requirement to vendor my dependencies. I do not see any
> possible
> > way to compress 250mb of source code to <= 5mb.
> >
> > I suspect there are alternatives which have been handled in one-off
> > situations given that other packages require fairly large system
> > dependencies e.g. Arrow, DuckDB, torch etc.
> >
> > How do others handle this?
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From |kry|ov @end|ng |rom d|@root@org  Wed May  8 21:32:00 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Wed, 8 May 2024 22:32:00 +0300
Subject: [R-pkg-devel] Overcoming CRAN's 5mb vendoring requirement
In-Reply-To: <CAL3ufULVrsZT-znYKa1wPgHud+fG4+KpPOe6XGNy7AcE9NZwyg@mail.gmail.com>
References: <CAL3ufULZDHv9aVAnmrE4m-fF_z=UvhkPGiKMYR3ZkQYN7=z+5A@mail.gmail.com>
 <CAOCv4hgS24JSWpxy=Ljxp6_VTW7Gx6a5WJKWvg_ryhbbyqJe8g@mail.gmail.com>
 <CAL3ufULVrsZT-znYKa1wPgHud+fG4+KpPOe6XGNy7AcE9NZwyg@mail.gmail.com>
Message-ID: <20240508223200.4d659fe4@Tarkus>

? Wed, 8 May 2024 14:08:36 -0400
Josiah Parry <josiah.parry at gmail.com> ?????:

> With ChatGPT's ability to write autoconf, I *think *I have something
> that can work.

You don't have to write autoconf if your configure.ac is mostly a plain
shell script. You can write the configure script itself. Set the PATH
and then exec "${R_HOME}/bin/Rscript" tools/configure.R (in the
regular, non-multiarch configure for Unix-like systems) or exec
"${R_HOME}/bin${R_ARCH_BIN}/Rscript.exe" tools/configure.R (in
configure.win, which you'll also need). You've already wrote the rest
of the code in a language you know well: R.

Autoconf would be useful if you had system-specific dependencies with
the need to perform lots of compile tests. Those would have been a pain
to set up in R. Here you mostly need sys.which() instead of
AC_CHECK_PROGS and command -v.

> The configure file runs tools/get-deps.R which will download the
> dependencies from the repo if available and verify the checksums.

One of the pain points is the need for a strong, cryptographically
secure hash. MD5 is, unfortunately, no longer such a hash. In a cmake
build, you would be able to use cmake's built in strong hashes (such as
SHA-2 or SHA-3). The CRAN policy doesn't explicitly forbid MD5; it only
requires a "checksum". If you figure out a way to use a strong hash
from tools/configure.R for the downloaded tarball, please let us know.

> If the checksums don't match, an error is thrown, otherwise it can
> continue. I believe this meets the requirements of CRAN?

The other important CRAN requirement is to store the vendor tarball
somewhere as permanent as CRAN itself (see the caveats at the bottom of
https://cran.r-project.org/web/packages/using_rust.html), that is, not
GitHub. I think that Zenodo counts as a sufficiently reliable store.

-- 
Best regards,
Ivan


From jo@|@h@p@rry @end|ng |rom gm@||@com  Wed May  8 22:01:23 2024
From: jo@|@h@p@rry @end|ng |rom gm@||@com (Josiah Parry)
Date: Wed, 8 May 2024 16:01:23 -0400
Subject: [R-pkg-devel] Overcoming CRAN's 5mb vendoring requirement
In-Reply-To: <20240508223200.4d659fe4@Tarkus>
References: <CAL3ufULZDHv9aVAnmrE4m-fF_z=UvhkPGiKMYR3ZkQYN7=z+5A@mail.gmail.com>
 <CAOCv4hgS24JSWpxy=Ljxp6_VTW7Gx6a5WJKWvg_ryhbbyqJe8g@mail.gmail.com>
 <CAL3ufULVrsZT-znYKa1wPgHud+fG4+KpPOe6XGNy7AcE9NZwyg@mail.gmail.com>
 <20240508223200.4d659fe4@Tarkus>
Message-ID: <CAL3ufU+GEjfJ+WznZ+59wxZBkjJ2wUdrfMV3GU_xWj17MtsJjw@mail.gmail.com>

Thank you, Ivan, for your really thoughtful feedback! I really appreciate
it!

   - I'll see if there are any base R packages that support SHA-2 or SHA-3.
   - I'll see if I can get the configure.ac to make the appropriate Rscript
   call for configure.win.
      - I think the idea of having a single `confgure.ac` file to generate
      both configure and configure.win is nice. Guidance with GitHub
actions and
      ChatGPT is essentially a must for me since my bash is remedial at best.

Regarding the permanent storage requirement, I find it to be very strange.
I've personally never heard of Zenodo until just now! Does the CRAN team
have recommendations for what is considered "as sufficiently reliable?" I
have repos that have persisted for almost 10 years. I think that is
sufficiently reliable!

The requirement to avoid GitHub feels surprisingly anachronistic given how
central it is to the vast majority of software development. The alternative
I can think of is to create a CDN on cloudflare or something to store the
file independently.

Are there any avenues to have CRAN clarify their positions outside of
one-off processes? It would be quite unfortunate to go through all the work
of creating a way to build, store, and retrieve the dependencies only for
CRAN to decide they don't support it.


On Wed, May 8, 2024 at 3:32?PM Ivan Krylov <ikrylov at disroot.org> wrote:

> ? Wed, 8 May 2024 14:08:36 -0400
> Josiah Parry <josiah.parry at gmail.com> ?????:
>
> > With ChatGPT's ability to write autoconf, I *think *I have something
> > that can work.
>
> You don't have to write autoconf if your configure.ac is mostly a plain
> shell script. You can write the configure script itself. Set the PATH
> and then exec "${R_HOME}/bin/Rscript" tools/configure.R (in the
> regular, non-multiarch configure for Unix-like systems) or exec
> "${R_HOME}/bin${R_ARCH_BIN}/Rscript.exe" tools/configure.R (in
> configure.win, which you'll also need). You've already wrote the rest
> of the code in a language you know well: R.
>
> Autoconf would be useful if you had system-specific dependencies with
> the need to perform lots of compile tests. Those would have been a pain
> to set up in R. Here you mostly need sys.which() instead of
> AC_CHECK_PROGS and command -v.
>
> > The configure file runs tools/get-deps.R which will download the
> > dependencies from the repo if available and verify the checksums.
>
> One of the pain points is the need for a strong, cryptographically
> secure hash. MD5 is, unfortunately, no longer such a hash. In a cmake
> build, you would be able to use cmake's built in strong hashes (such as
> SHA-2 or SHA-3). The CRAN policy doesn't explicitly forbid MD5; it only
> requires a "checksum". If you figure out a way to use a strong hash
> from tools/configure.R for the downloaded tarball, please let us know.
>
> > If the checksums don't match, an error is thrown, otherwise it can
> > continue. I believe this meets the requirements of CRAN?
>
> The other important CRAN requirement is to store the vendor tarball
> somewhere as permanent as CRAN itself (see the caveats at the bottom of
> https://cran.r-project.org/web/packages/using_rust.html), that is, not
> GitHub. I think that Zenodo counts as a sufficiently reliable store.
>
> --
> Best regards,
> Ivan
>

	[[alternative HTML version deleted]]


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Wed May  8 22:06:04 2024
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Wed, 8 May 2024 22:06:04 +0200
Subject: [R-pkg-devel] Overcoming CRAN's 5mb vendoring requirement
In-Reply-To: <CAL3ufUL=LTxtu2PgO9nyPGE7hpU2nred0KHDz3HcymXG5Zg7Tg@mail.gmail.com>
References: <CAL3ufULZDHv9aVAnmrE4m-fF_z=UvhkPGiKMYR3ZkQYN7=z+5A@mail.gmail.com>
 <26171.40837.306936.873386@rob.eddelbuettel.com>
 <CAL3ufUL=LTxtu2PgO9nyPGE7hpU2nred0KHDz3HcymXG5Zg7Tg@mail.gmail.com>
Message-ID: <5b19835e-e8c7-4cda-8034-9a03c067dbfd@statistik.tu-dortmund.de>



On 08.05.2024 17:56, Josiah Parry wrote:
> Thank you, Dirk. This was a direct email from a CRAN member and not part of
> the automatic checks. The whole email is below. I think the intent of the
> message is "please resubmit."


Well, the CRAN maintainer has not spotted this is abour rust code. This 
was not indicated in your mail, hence you got  direct rejection.

Best,
Uwe Ligges





> Thanks, we see:
> 
> 
>>     Size of tarball: 18099770 bytes
> 
> 
> 
> Please reudce to less than 5 MB for a CRAN package.
> 
> 
> 
> Best,
> 
> 
> Yes, prqlr is a great Rust-based package! My other Rust based packages that
> are on CRAN are based, in part on prqlr.
> 
> 
> On Wed, May 8, 2024 at 11:51?AM Dirk Eddelbuettel <edd at debian.org> wrote:
> 
>>
>> On 8 May 2024 at 11:02, Josiah Parry wrote:
>> | CRAN has rejected this package with:
>> |
>> | *   Size of tarball: 18099770 bytes*
>> |
>> | *Please reudce to less than 5 MB for a CRAN package.*
>>
>> Are you by chance confusing a NOTE (issued, but can be overruled) with a
>> WARNING (more severe, likely a must-be-addressed) or ERROR?
>>
>> There are lots and lots of packages larger than 5mb -- see eg
>>
>>     https://cran.r-project.org/src/contrib/?C=S;O=D
>>
>> which has a top-5 of
>>
>>     rcdklibs       19mb
>>     fastrmodels    15mb
>>     prqlr          15mb
>>     RFlocalfdr     14mb
>>     acss.data      14mb
>>
>> and at least one of those is also Rust-using and hence a possible template.
>>
>> Dirk
>>
>> --
>> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>>
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

From jo@|@h@p@rry @end|ng |rom gm@||@com  Wed May  8 22:10:15 2024
From: jo@|@h@p@rry @end|ng |rom gm@||@com (Josiah Parry)
Date: Wed, 8 May 2024 16:10:15 -0400
Subject: [R-pkg-devel] Overcoming CRAN's 5mb vendoring requirement
In-Reply-To: <5b19835e-e8c7-4cda-8034-9a03c067dbfd@statistik.tu-dortmund.de>
References: <CAL3ufULZDHv9aVAnmrE4m-fF_z=UvhkPGiKMYR3ZkQYN7=z+5A@mail.gmail.com>
 <26171.40837.306936.873386@rob.eddelbuettel.com>
 <CAL3ufUL=LTxtu2PgO9nyPGE7hpU2nred0KHDz3HcymXG5Zg7Tg@mail.gmail.com>
 <5b19835e-e8c7-4cda-8034-9a03c067dbfd@statistik.tu-dortmund.de>
Message-ID: <CAL3ufUJ8jv1muOU+CbY1Oh4cVmPfeOHzo=apYQf6LrrTvmZt+Q@mail.gmail.com>

That's a good point! My apologies for not making that abundantly clear.

Regardless, I think it is a fair ask to not submit massive tarballs of
dependencies.
Clarifying how we might be able to store the dependencies *outside *of CRAN
would be good to figure out.
This would help packages like polars be able to exist on CRAN.

On Wed, May 8, 2024 at 4:06?PM Uwe Ligges <ligges at statistik.tu-dortmund.de>
wrote:

>
>
> On 08.05.2024 17:56, Josiah Parry wrote:
> > Thank you, Dirk. This was a direct email from a CRAN member and not part
> of
> > the automatic checks. The whole email is below. I think the intent of the
> > message is "please resubmit."
>
>
> Well, the CRAN maintainer has not spotted this is abour rust code. This
> was not indicated in your mail, hence you got  direct rejection.
>
> Best,
> Uwe Ligges
>
>
>
>
>
> > Thanks, we see:
> >
> >
> >>     Size of tarball: 18099770 bytes
> >
> >
> >
> > Please reudce to less than 5 MB for a CRAN package.
> >
> >
> >
> > Best,
> >
> >
> > Yes, prqlr is a great Rust-based package! My other Rust based packages
> that
> > are on CRAN are based, in part on prqlr.
> >
> >
> > On Wed, May 8, 2024 at 11:51?AM Dirk Eddelbuettel <edd at debian.org>
> wrote:
> >
> >>
> >> On 8 May 2024 at 11:02, Josiah Parry wrote:
> >> | CRAN has rejected this package with:
> >> |
> >> | *   Size of tarball: 18099770 bytes*
> >> |
> >> | *Please reudce to less than 5 MB for a CRAN package.*
> >>
> >> Are you by chance confusing a NOTE (issued, but can be overruled) with a
> >> WARNING (more severe, likely a must-be-addressed) or ERROR?
> >>
> >> There are lots and lots of packages larger than 5mb -- see eg
> >>
> >>     https://cran.r-project.org/src/contrib/?C=S;O=D
> >>
> >> which has a top-5 of
> >>
> >>     rcdklibs       19mb
> >>     fastrmodels    15mb
> >>     prqlr          15mb
> >>     RFlocalfdr     14mb
> >>     acss.data      14mb
> >>
> >> and at least one of those is also Rust-using and hence a possible
> template.
> >>
> >> Dirk
> >>
> >> --
> >> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
> >>
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From bbo|ker @end|ng |rom gm@||@com  Wed May  8 22:12:31 2024
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Wed, 8 May 2024 16:12:31 -0400
Subject: [R-pkg-devel] Overcoming CRAN's 5mb vendoring requirement
In-Reply-To: <CAL3ufU+GEjfJ+WznZ+59wxZBkjJ2wUdrfMV3GU_xWj17MtsJjw@mail.gmail.com>
References: <CAL3ufULZDHv9aVAnmrE4m-fF_z=UvhkPGiKMYR3ZkQYN7=z+5A@mail.gmail.com>
 <CAOCv4hgS24JSWpxy=Ljxp6_VTW7Gx6a5WJKWvg_ryhbbyqJe8g@mail.gmail.com>
 <CAL3ufULVrsZT-znYKa1wPgHud+fG4+KpPOe6XGNy7AcE9NZwyg@mail.gmail.com>
 <20240508223200.4d659fe4@Tarkus>
 <CAL3ufU+GEjfJ+WznZ+59wxZBkjJ2wUdrfMV3GU_xWj17MtsJjw@mail.gmail.com>
Message-ID: <eecab680-62fb-41e2-9dca-9df487486b3d@gmail.com>

    Zenodo and OSF (see e.g. 
<https://fairsharing.org/FAIRsharing.g4z879>) are both non-profit 
organizations that support archiving -- that is, they both make stronger 
guarantees of permanent availability than GitHub does. Possibly Software 
Heritage https://www.softwareheritage.org/features/ ?

   Zenodo has convenient GitHub integration.

On 2024-05-08 4:01 p.m., Josiah Parry wrote:
> Thank you, Ivan, for your really thoughtful feedback! I really appreciate
> it!
> 
>     - I'll see if there are any base R packages that support SHA-2 or SHA-3.
>     - I'll see if I can get the configure.ac to make the appropriate Rscript
>     call for configure.win.
>        - I think the idea of having a single `confgure.ac` file to generate
>        both configure and configure.win is nice. Guidance with GitHub
> actions and
>        ChatGPT is essentially a must for me since my bash is remedial at best.
> 
> Regarding the permanent storage requirement, I find it to be very strange.
> I've personally never heard of Zenodo until just now! Does the CRAN team
> have recommendations for what is considered "as sufficiently reliable?" I
> have repos that have persisted for almost 10 years. I think that is
> sufficiently reliable!
> 
> The requirement to avoid GitHub feels surprisingly anachronistic given how
> central it is to the vast majority of software development. The alternative
> I can think of is to create a CDN on cloudflare or something to store the
> file independently.
> 
> Are there any avenues to have CRAN clarify their positions outside of
> one-off processes? It would be quite unfortunate to go through all the work
> of creating a way to build, store, and retrieve the dependencies only for
> CRAN to decide they don't support it.
> 
> 
> On Wed, May 8, 2024 at 3:32?PM Ivan Krylov <ikrylov at disroot.org> wrote:
> 
>> ? Wed, 8 May 2024 14:08:36 -0400
>> Josiah Parry <josiah.parry at gmail.com> ?????:
>>
>>> With ChatGPT's ability to write autoconf, I *think *I have something
>>> that can work.
>>
>> You don't have to write autoconf if your configure.ac is mostly a plain
>> shell script. You can write the configure script itself. Set the PATH
>> and then exec "${R_HOME}/bin/Rscript" tools/configure.R (in the
>> regular, non-multiarch configure for Unix-like systems) or exec
>> "${R_HOME}/bin${R_ARCH_BIN}/Rscript.exe" tools/configure.R (in
>> configure.win, which you'll also need). You've already wrote the rest
>> of the code in a language you know well: R.
>>
>> Autoconf would be useful if you had system-specific dependencies with
>> the need to perform lots of compile tests. Those would have been a pain
>> to set up in R. Here you mostly need sys.which() instead of
>> AC_CHECK_PROGS and command -v.
>>
>>> The configure file runs tools/get-deps.R which will download the
>>> dependencies from the repo if available and verify the checksums.
>>
>> One of the pain points is the need for a strong, cryptographically
>> secure hash. MD5 is, unfortunately, no longer such a hash. In a cmake
>> build, you would be able to use cmake's built in strong hashes (such as
>> SHA-2 or SHA-3). The CRAN policy doesn't explicitly forbid MD5; it only
>> requires a "checksum". If you figure out a way to use a strong hash
>> from tools/configure.R for the downloaded tarball, please let us know.
>>
>>> If the checksums don't match, an error is thrown, otherwise it can
>>> continue. I believe this meets the requirements of CRAN?
>>
>> The other important CRAN requirement is to store the vendor tarball
>> somewhere as permanent as CRAN itself (see the caveats at the bottom of
>> https://cran.r-project.org/web/packages/using_rust.html), that is, not
>> GitHub. I think that Zenodo counts as a sufficiently reliable store.
>>
>> --
>> Best regards,
>> Ivan
>>
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
Dr. Benjamin Bolker
Professor, Mathematics & Statistics and Biology, McMaster University
Director, School of Computational Science and Engineering
(Acting) Graduate chair, Mathematics & Statistics
 > E-mail is sent at my convenience; I don't expect replies outside of 
working hours.


From vo|ody@ @end|ng |rom m|nd@pr|ng@com  Wed May  8 23:48:17 2024
From: vo|ody@ @end|ng |rom m|nd@pr|ng@com (Vladimir Dergachev)
Date: Wed, 8 May 2024 17:48:17 -0400 (EDT)
Subject: [R-pkg-devel] Overcoming CRAN's 5mb vendoring requirement
In-Reply-To: <CAL3ufUL=LTxtu2PgO9nyPGE7hpU2nred0KHDz3HcymXG5Zg7Tg@mail.gmail.com>
References: <CAL3ufULZDHv9aVAnmrE4m-fF_z=UvhkPGiKMYR3ZkQYN7=z+5A@mail.gmail.com>
 <26171.40837.306936.873386@rob.eddelbuettel.com>
 <CAL3ufUL=LTxtu2PgO9nyPGE7hpU2nred0KHDz3HcymXG5Zg7Tg@mail.gmail.com>
Message-ID: <alpine.DEB.2.22.394.2405081739300.3559@iridium>



On Wed, 8 May 2024, Josiah Parry wrote:

>
>
> Yes, prqlr is a great Rust-based package! My other Rust based packages that
> are on CRAN are based, in part on prqlr.
>
>

If there are many packages based on Rust that require common code, would 
it make sense to make a single "rust" compatibility package that they can 
depend on ?

best

Vladimir Dergachev


From j|@c@@hu|@m@n @end|ng |rom gm@||@com  Wed May  8 10:37:28 2024
From: j|@c@@hu|@m@n @end|ng |rom gm@||@com (Jisca Huisman)
Date: Wed, 8 May 2024 10:37:28 +0200
Subject: [R-pkg-devel] is Fortran write still strictly forbidden?
Message-ID: <95b62a98-7920-4a36-8339-fce63a89e3e5@gmail.com>

Hello,

I like to use write() in Fortran code to combine text with some integers 
& doubles, to pass runtime information to R in a way that is prettier 
and more legible than with intpr() & dblepr(). In the past any calls to 
write() were strictly forbidden in Fortran code, as apparently it messed 
something up internally (I cannot recall the details). But from 'writing 
R extensions' it seems that there have been quite a few changes with 
respect to support for Fortran code, and it currently reads:


6.5.1 Printing from Fortran

On many systems Fortran|write|and|print|statements can be used, but the 
output may not interleave well with that of C, and may be invisible 
onGUIinterfaces. They are not portable and best avoided.


To be more specific, would the subroutine below be allowed? Is it needed 
to declare R >= 4.0 (?) in the package DESCRIPTION (& then use labelpr() 
instead of intpr() ?) Is there an alternative without write() to get the 
same result?


subroutine Rprint_pretty(iter, x)
 ??? integer, intent(IN) :: iter
 ??? double precision, intent(IN) :: x
 ??? integer :: date_time_values(8), nchar, IntDummy(0)
 ??? character(len=8) :: time_now
 ??? character(len=200) :: msg_to_R

 ??? call date_and_time(VALUES=date_time_values)
 ??? write(time_now, '(i2.2,":",i2.2,":",i2.2)') date_time_values(5:7)
 ??? write(msg_to_R, '(a8, " i: ", i5, "? value: ", f8.2)') time_now, 
iter, x

 ??? nchar = len(trim(msg_to_R))
 ?? call intpr(trim(msg_to_R), nchar, IntDummy, 0)

 ? end subroutine Rprint_pretty


Thanks!


	[[alternative HTML version deleted]]


From othm@n@e|@h@mmouch| @end|ng |rom protonm@||@com  Wed May  8 18:52:51 2024
From: othm@n@e|@h@mmouch| @end|ng |rom protonm@||@com (Othman El Hammouchi)
Date: Wed, 08 May 2024 16:52:51 +0000
Subject: [R-pkg-devel] flang doesn't support derived types
Message-ID: <6ffdcf71-8ebf-4af3-ac53-fc166092b07b@protonmail.com>

Hello everyone, this is my first post on the mailing list (as well as the first package I'm attempting to publish), so please forgive any obvious errors.

I'm using a lot of Fortran code which relies on derived types to manage data structures. The package compiles fine on Windows, Linux and Mac and passes all checks, including the CI pipeline on GitHub provided by the RStudio folks. However, upon submission I received an automatic reply shortly afterwards saying the build had failed on CRAN's servers for Debian. The log gives the following error:

flang/lib/Lower/CallInterface.cpp:949: not yet implemented: support for polymorphic types

I tried searching this mailing list as well as the llvm docs for a precedent or explanation, without much success. The baffling thing is that my code doesn't use polymorphism at all as far as I can tell, they're just DTs with bound procedures (I don't think the Fortran standard considers this polymorphic?). My question is: what can I do about it? This is a compiler issue, but I doesn't seem from "Writing R Extensions" that CRAN allows you to check the installed compiler and abort the install if an unsupported one is detected. However, it's not really a package developer's fault that the compiler doesn't support the standard.

Thanks in advance,

Othman El Hammouchi
	[[alternative HTML version deleted]]


From er|nm@hodge@@ @end|ng |rom gm@||@com  Thu May  9 02:51:46 2024
From: er|nm@hodge@@ @end|ng |rom gm@||@com (Erin Hodgess)
Date: Wed, 8 May 2024 18:51:46 -0600
Subject: [R-pkg-devel] is Fortran write still strictly forbidden?
In-Reply-To: <95b62a98-7920-4a36-8339-fce63a89e3e5@gmail.com>
References: <95b62a98-7920-4a36-8339-fce63a89e3e5@gmail.com>
Message-ID: <CACxE24kZY8Rf7PtyVYfaExmzyYCsvaqvmiCFZrbaTrkodL_LVw@mail.gmail.com>

Hi Jisca:

I have used the write successfully.  I?m not sure if this matters or not,
but I am using WSL 2 with Ubuntu 22.04 installed.  It works fine with R =>
4.0.

Hope this helps.

Sincerely,
Erin

Erin Hodgess, PhD
mailto: erinm.hodgess at gmail.com


On Wed, May 8, 2024 at 6:49?PM Jisca Huisman <jisca.huisman at gmail.com>
wrote:

> Hello,
>
> I like to use write() in Fortran code to combine text with some integers
> & doubles, to pass runtime information to R in a way that is prettier
> and more legible than with intpr() & dblepr(). In the past any calls to
> write() were strictly forbidden in Fortran code, as apparently it messed
> something up internally (I cannot recall the details). But from 'writing
> R extensions' it seems that there have been quite a few changes with
> respect to support for Fortran code, and it currently reads:
>
>
> 6.5.1 Printing from Fortran
>
> On many systems Fortran|write|and|print|statements can be used, but the
> output may not interleave well with that of C, and may be invisible
> onGUIinterfaces. They are not portable and best avoided.
>
>
> To be more specific, would the subroutine below be allowed? Is it needed
> to declare R >= 4.0 (?) in the package DESCRIPTION (& then use labelpr()
> instead of intpr() ?) Is there an alternative without write() to get the
> same result?
>
>
> subroutine Rprint_pretty(iter, x)
>      integer, intent(IN) :: iter
>      double precision, intent(IN) :: x
>      integer :: date_time_values(8), nchar, IntDummy(0)
>      character(len=8) :: time_now
>      character(len=200) :: msg_to_R
>
>      call date_and_time(VALUES=date_time_values)
>      write(time_now, '(i2.2,":",i2.2,":",i2.2)') date_time_values(5:7)
>      write(msg_to_R, '(a8, " i: ", i5, "  value: ", f8.2)') time_now,
> iter, x
>
>      nchar = len(trim(msg_to_R))
>     call intpr(trim(msg_to_R), nchar, IntDummy, 0)
>
>    end subroutine Rprint_pretty
>
>
> Thanks!
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From @@meh@@bdu|@h @end|ng |rom k@u@t@edu@@@  Thu May  9 05:20:58 2024
From: @@meh@@bdu|@h @end|ng |rom k@u@t@edu@@@ (Sameh Abdulah)
Date: Thu, 9 May 2024 03:20:58 +0000
Subject: [R-pkg-devel] Fast Matrix Serialization in R?
Message-ID: <VI1P192MB028541BF45707A413F9210BBFBE62@VI1P192MB0285.EURP192.PROD.OUTLOOK.COM>

Hi,

I need to serialize and save a 20K x 20K matrix as a binary file. This process is significantly slower in R compared to Python (4X slower).

I'm not sure about the best approach to optimize the below code. Is it possible to parallelize the serialization function to enhance performance?


  n <- 20000^2
  cat("Generating matrices ... ")
  INI.TIME <- proc.time()
  A <- matrix(runif(n), ncol = m)
  END_GEN.TIME <- proc.time()
  arg_ser <- serialize(object = A, connection = NULL)

  END_SER.TIME <- proc.time()
  con <- file(description = "matrix_file", open = "wb")
  writeBin(object = arg_ser, con = con)
  close(con)
  END_WRITE.TIME <- proc.time()
  con <- file(description = "matrix_file", open = "rb")
  par_raw <- readBin(con, what = raw(), n = file.info("matrix_file")$size)
  END_READ.TIME <- proc.time()
  B <- unserialize(connection = par_raw)
  close(con)
  END_DES.TIME <- proc.time()
  TIME <- END_GEN.TIME - INI.TIME
  cat("Generation time", TIME[3], " seconds.")

  TIME <- END_SER.TIME - END_GEN.TIME
  cat("Serialization time", TIME[3], " seconds.")

  TIME <- END_WRITE.TIME - END_SER.TIME
  cat("Writting time", TIME[3], " seconds.")

  TIME <- END_READ.TIME - END_WRITE.TIME
  cat("Read time", TIME[3], " seconds.")

  TIME <- END_DES.TIME - END_READ.TIME
  cat("Deserialize time", TIME[3], " seconds.")




Best,
--Sameh

-- 

This message and its contents, including attachments are intended solely 
for the original recipient. If you are not the intended recipient or have 
received this message in error, please notify me immediately and delete 
this message from your computer system. Any unauthorized use or 
distribution is prohibited. Please consider the environment before printing 
this email.

	[[alternative HTML version deleted]]


From edd @end|ng |rom deb|@n@org  Thu May  9 05:35:34 2024
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Wed, 8 May 2024 22:35:34 -0500
Subject: [R-pkg-devel] Fast Matrix Serialization in R?
In-Reply-To: <VI1P192MB028541BF45707A413F9210BBFBE62@VI1P192MB0285.EURP192.PROD.OUTLOOK.COM>
References: <VI1P192MB028541BF45707A413F9210BBFBE62@VI1P192MB0285.EURP192.PROD.OUTLOOK.COM>
Message-ID: <26172.17542.683175.713755@rob.eddelbuettel.com>


On 9 May 2024 at 03:20, Sameh Abdulah wrote:
| I need to serialize and save a 20K x 20K matrix as a binary file.

Hm that is an incomplete specification: _what_ do you want to do with it?
Read it back in R?  Share it with other languages (like Python) ? I.e. what
really is your use case?  Also, you only seem to use readBin / writeBin. Why
not readRDS / saveRDS which at least give you compression?

If it is to read/write from / to R look into the qs package. It is good. The
README.md at its repo has benchmarks: https://github.com/traversc/qs If you
want to index into the stored data look into fst. Else also look at databases

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From @@meh@@bdu|@h @end|ng |rom k@u@t@edu@@@  Thu May  9 05:56:25 2024
From: @@meh@@bdu|@h @end|ng |rom k@u@t@edu@@@ (Sameh Abdulah)
Date: Thu, 9 May 2024 03:56:25 +0000
Subject: [R-pkg-devel] [EXTERNAL] Re:  Fast Matrix Serialization in R?
In-Reply-To: <26172.17542.683175.713755@rob.eddelbuettel.com>
References: <VI1P192MB028541BF45707A413F9210BBFBE62@VI1P192MB0285.EURP192.PROD.OUTLOOK.COM>
 <26172.17542.683175.713755@rob.eddelbuettel.com>
Message-ID: <VI1P192MB02854B877B90BA3C40408505FBE62@VI1P192MB0285.EURP192.PROD.OUTLOOK.COM>

Thanks!


I want to save data from a matrix to a file and then retrieve it later while running R code, all within R.

As long as the compression doesn't result in data loss, it should be suitable for my needs.


Best,
--Sameh



From: Dirk Eddelbuettel <edd at debian.org>
Date: Thursday, May 9, 2024 at 6:35?AM
To: Sameh Abdulah <sameh.abdulah at kaust.edu.sa>
Cc: r-package-devel at r-project.org <r-package-devel at r-project.org>
Subject: [EXTERNAL] Re: [R-pkg-devel] Fast Matrix Serialization in R?

On 9 May 2024 at 03:20, Sameh Abdulah wrote:
| I need to serialize and save a 20K x 20K matrix as a binary file.

Hm that is an incomplete specification: _what_ do you want to do with it?
Read it back in R?  Share it with other languages (like Python) ? I.e. what
really is your use case?  Also, you only seem to use readBin / writeBin. Why
not readRDS / saveRDS which at least give you compression?

If it is to read/write from / to R look into the qs package. It is good. The
README.md at its repo has benchmarks: https://urldefense.com/v3/__https://github.com/traversc/qs__;!!Nmw4Hv0!zZitnMd5aMqDWhLShhC5Npmd8pkisFVejC3grX2YGSGWFZihVaHAezYyo5nXbAwIdqCj2T8Nbk-Yofxa-y8$<https://urldefense.com/v3/__https:/github.com/traversc/qs__;!!Nmw4Hv0!zZitnMd5aMqDWhLShhC5Npmd8pkisFVejC3grX2YGSGWFZihVaHAezYyo5nXbAwIdqCj2T8Nbk-Yofxa-y8$>  If you
want to index into the stored data look into fst. Else also look at databases

Dirk

--
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org

-- 

This message and its contents, including attachments are intended solely 
for the original recipient. If you are not the intended recipient or have 
received this message in error, please notify me immediately and delete 
this message from your computer system. Any unauthorized use or 
distribution is prohibited. Please consider the environment before printing 
this email.

	[[alternative HTML version deleted]]


From berw|n@tur|@ch @end|ng |rom gm@||@com  Thu May  9 06:30:52 2024
From: berw|n@tur|@ch @end|ng |rom gm@||@com (Berwin A Turlach)
Date: Thu, 9 May 2024 12:30:52 +0800
Subject: [R-pkg-devel] is Fortran write still strictly forbidden?
In-Reply-To: <95b62a98-7920-4a36-8339-fce63a89e3e5@gmail.com>
References: <95b62a98-7920-4a36-8339-fce63a89e3e5@gmail.com>
Message-ID: <20240509123052.3f1d5c3b@dep59159.uniwa.uwa.edu.au>

Hi Jisca,

On Wed, 8 May 2024 10:37:28 +0200
Jisca Huisman <jisca.huisman at gmail.com> wrote:

> I like to use write() in Fortran code [...] But from 'writing R
> extensions' it seems that there have been quite a few changes with
> respect to support for Fortran code, and it currently reads:
> 
> 6.5.1 Printing from Fortran
> 
> On many systems Fortran|write|and|print|statements can be used, but
> the output may not interleave well with that of C, and may be
> invisible onGUIinterfaces. They are not portable and best avoided.

I am not aware that there were any recent changes regarding printing
from Fortran recently, or that it was every strictly forbidden (perhaps
it is for packages that are submitted to CRAN?).  In fact, R-exts.texi
for R 1.0.0 states pretty much the same as what you quoted from the
current WRE manual:

  @subsection Printing from Fortran
  @cindex Printing from C

  In theory Fortran @code{write} and @code{print} statements can be
  used, but the output may not interleave well with that of C, and will
  be invisible on GUI interfaces.  They are best avoided.

  Three subroutines are provided to ease the output of information from
  Fortran code.

  @example
  subroutine dblepr(@var{label}, @var{nchar}, @var{data}, @var{ndata})
  subroutine realpr(@var{label}, @var{nchar}, @var{data}, @var{ndata})
  subroutine intpr (@var{label}, @var{nchar}, @var{data}, @var{ndata})
  @end example

Cheers,
	
	Berwin


From @|mon@urb@nek @end|ng |rom R-project@org  Thu May  9 07:26:45 2024
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Thu, 9 May 2024 17:26:45 +1200
Subject: [R-pkg-devel] Fast Matrix Serialization in R?
In-Reply-To: <VI1P192MB028541BF45707A413F9210BBFBE62@VI1P192MB0285.EURP192.PROD.OUTLOOK.COM>
References: <VI1P192MB028541BF45707A413F9210BBFBE62@VI1P192MB0285.EURP192.PROD.OUTLOOK.COM>
Message-ID: <3517F470-4DA5-4146-ADF9-5B26002AC650@R-project.org>

Sameh,

if it's a matrix, that's easy as you can write it directly which is the fastest possible way without compression - e.g. quick proof of concept:

n <- 20000^2
A <- matrix(runif(n), ncol = sqrt(n))

## write (dim + payload)
con <- file(description = "matrix_file", open = "wb")
system.time({
writeBin(d <- dim(A), con)
dim(A)=NULL
writeBin(A, con)
dim(A)=d
})
close(con)

## read
con <- file(description = "matrix_file", open = "rb")
system.time({
d <- readBin(con, 1L, 2)
A1 <- readBin(con, 1, d[1] * d[2])
dim(A1) <- d
})
close(con)
identical(A, A1)

   user  system elapsed 
  0.931   2.713   3.644 
   user  system elapsed 
  0.089   1.360   1.451 
[1] TRUE

So it's really just limited by the speed of your disk, parallelization won't help here.

Note that in general you get faster read times by using compression as most data is reasonably compressible, so that's where parallelization can be useful. There are plenty of package with more tricks like mmapping the files etc., but the above is just base R.

Cheers,
Simon



> On 9/05/2024, at 3:20 PM, Sameh Abdulah <sameh.abdulah at kaust.edu.sa> wrote:
> 
> Hi,
> 
> I need to serialize and save a 20K x 20K matrix as a binary file. This process is significantly slower in R compared to Python (4X slower).
> 
> I'm not sure about the best approach to optimize the below code. Is it possible to parallelize the serialization function to enhance performance?
> 
> 
>  n <- 20000^2
>  cat("Generating matrices ... ")
>  INI.TIME <- proc.time()
>  A <- matrix(runif(n), ncol = m)
>  END_GEN.TIME <- proc.time()
>  arg_ser <- serialize(object = A, connection = NULL)
> 
>  END_SER.TIME <- proc.time()
>  con <- file(description = "matrix_file", open = "wb")
>  writeBin(object = arg_ser, con = con)
>  close(con)
>  END_WRITE.TIME <- proc.time()
>  con <- file(description = "matrix_file", open = "rb")
>  par_raw <- readBin(con, what = raw(), n = file.info("matrix_file")$size)
>  END_READ.TIME <- proc.time()
>  B <- unserialize(connection = par_raw)
>  close(con)
>  END_DES.TIME <- proc.time()
>  TIME <- END_GEN.TIME - INI.TIME
>  cat("Generation time", TIME[3], " seconds.")
> 
>  TIME <- END_SER.TIME - END_GEN.TIME
>  cat("Serialization time", TIME[3], " seconds.")
> 
>  TIME <- END_WRITE.TIME - END_SER.TIME
>  cat("Writting time", TIME[3], " seconds.")
> 
>  TIME <- END_READ.TIME - END_WRITE.TIME
>  cat("Read time", TIME[3], " seconds.")
> 
>  TIME <- END_DES.TIME - END_READ.TIME
>  cat("Deserialize time", TIME[3], " seconds.")
> 
> 
> 
> 
> Best,
> --Sameh
> 
> -- 
> 
> This message and its contents, including attachments are intended solely 
> for the original recipient. If you are not the intended recipient or have 
> received this message in error, please notify me immediately and delete 
> this message from your computer system. Any unauthorized use or 
> distribution is prohibited. Please consider the environment before printing 
> this email.
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 


From j|@c@@hu|@m@n @end|ng |rom gm@||@com  Thu May  9 08:33:34 2024
From: j|@c@@hu|@m@n @end|ng |rom gm@||@com (Jisca Huisman)
Date: Thu, 9 May 2024 08:33:34 +0200
Subject: [R-pkg-devel] is Fortran write still strictly forbidden?
In-Reply-To: <20240509123052.3f1d5c3b@dep59159.uniwa.uwa.edu.au>
References: <95b62a98-7920-4a36-8339-fce63a89e3e5@gmail.com>
 <20240509123052.3f1d5c3b@dep59159.uniwa.uwa.edu.au>
Message-ID: <a0275573-309d-4d47-8182-efba2b04fe87@gmail.com>

Dear Berwin & Erin,

Thanks for your replies. I should perhaps have clarified - this is for a 
package on CRAN.

In my experience anything with Fortran write will get a NOTE from CRAN's 
auto-check:

Check: compiled code, Result: NOTE
   File 'sequoia/libs/sequoia.so':
     Found '_gfortran_st_write', possibly from 'write' (Fortran), 'print'
       (Fortran)
       Object: 'sequoia.o'
   
   Compiled code should not call entry points which might terminate R nor
   write to stdout/stderr instead of to the console, nor use Fortran I/O
   nor system RNGs.


In the past (2018) I've tried to `write` the iteration number to a char 
to then combine into the message send to R with `dplepr`, but when I 
tried to argue this was a false positive as it wasn't writing to a file 
I got the following reply from UL:


> The manual says
>
> <quote>
> In particular, any package that makes use of Fortran I/O will when 
> compiled on Windows interfere with C I/O: when the Fortran I/O support 
> code is initialized (typically when the package is loaded) the C 
> stdout and stderr are switched to LF line endings.
> </quote>
>
> and both of us read too quickly: when the Fortran I/O support code is 
> initialized (typically when the package is loaded) the C stdout and 
> stderr are switched to LF line endings.
> This happens alway, even if you write to another variable.
>
> You could of course write C interface code to do the conversion if you 
> have to rely on write(). 

So what I'm wondering now - has the issue with the switch to LF line 
endings been fixed, and is it OK to use non-file `write`? Because I 
don't really want to make the time to figure out how to 'write C 
interface code to do the conversion' just for some prettier messages...


Thanks for your help!




On Thu, 09/05/2024 06:30, Berwin A Turlach wrote:
> Hi Jisca,
>
> On Wed, 8 May 2024 10:37:28 +0200
> Jisca Huisman <jisca.huisman at gmail.com> wrote:
>
>> I like to use write() in Fortran code [...] But from 'writing R
>> extensions' it seems that there have been quite a few changes with
>> respect to support for Fortran code, and it currently reads:
>>
>> 6.5.1 Printing from Fortran
>>
>> On many systems Fortran|write|and|print|statements can be used, but
>> the output may not interleave well with that of C, and may be
>> invisible onGUIinterfaces. They are not portable and best avoided.
> I am not aware that there were any recent changes regarding printing
> from Fortran recently, or that it was every strictly forbidden (perhaps
> it is for packages that are submitted to CRAN?).  In fact, R-exts.texi
> for R 1.0.0 states pretty much the same as what you quoted from the
> current WRE manual:
>
>    @subsection Printing from Fortran
>    @cindex Printing from C
>
>    In theory Fortran @code{write} and @code{print} statements can be
>    used, but the output may not interleave well with that of C, and will
>    be invisible on GUI interfaces.  They are best avoided.
>
>    Three subroutines are provided to ease the output of information from
>    Fortran code.
>
>    @example
>    subroutine dblepr(@var{label}, @var{nchar}, @var{data}, @var{ndata})
>    subroutine realpr(@var{label}, @var{nchar}, @var{data}, @var{ndata})
>    subroutine intpr (@var{label}, @var{nchar}, @var{data}, @var{ndata})
>    @end example
>
> Cheers,
> 	
> 	Berwin


From bhh @end|ng |rom x@4@||@n|  Thu May  9 13:08:10 2024
From: bhh @end|ng |rom x@4@||@n| (Berend Hasselman)
Date: Thu, 9 May 2024 13:08:10 +0200
Subject: [R-pkg-devel] is Fortran write still strictly forbidden?
In-Reply-To: <95b62a98-7920-4a36-8339-fce63a89e3e5@gmail.com>
References: <95b62a98-7920-4a36-8339-fce63a89e3e5@gmail.com>
Message-ID: <7A4A5FF4-26B6-49EA-BB4A-F916A2EC981A@xs4all.nl>


Hi,

Have a look at package nleqslv to see how you can avoid Fortran write completely.
Look at the file src/nwout.c and the calls of various functions therein in the other fortran files.

regards,

Berend Hasselman

> On 08-05-2024, at 10:37, Jisca Huisman <jisca.huisman at gmail.com> wrote:
> 
> Hello,
> 
> I like to use write() in Fortran code to combine text with some integers 
> & doubles, to pass runtime information to R in a way that is prettier 
> and more legible than with intpr() & dblepr(). In the past any calls to 
> write() were strictly forbidden in Fortran code, as apparently it messed 
> something up internally (I cannot recall the details). But from 'writing 
> R extensions' it seems that there have been quite a few changes with 
> respect to support for Fortran code, and it currently reads:
> 
> 
> 6.5.1 Printing from Fortran
> 
> On many systems Fortran|write|and|print|statements can be used, but the 
> output may not interleave well with that of C, and may be invisible 
> onGUIinterfaces. They are not portable and best avoided.
> 
> 
> To be more specific, would the subroutine below be allowed? Is it needed 
> to declare R >= 4.0 (?) in the package DESCRIPTION (& then use labelpr() 
> instead of intpr() ?) Is there an alternative without write() to get the 
> same result?
> 
> 
> subroutine Rprint_pretty(iter, x)
>     integer, intent(IN) :: iter
>     double precision, intent(IN) :: x
>     integer :: date_time_values(8), nchar, IntDummy(0)
>     character(len=8) :: time_now
>     character(len=200) :: msg_to_R
> 
>     call date_and_time(VALUES=date_time_values)
>     write(time_now, '(i2.2,":",i2.2,":",i2.2)') date_time_values(5:7)
>     write(msg_to_R, '(a8, " i: ", i5, "  value: ", f8.2)') time_now, 
> iter, x
> 
>     nchar = len(trim(msg_to_R))
>    call intpr(trim(msg_to_R), nchar, IntDummy, 0)
> 
>   end subroutine Rprint_pretty
> 
> 
> Thanks!
> 
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From j|@c@@hu|@m@n @end|ng |rom gm@||@com  Thu May  9 13:40:00 2024
From: j|@c@@hu|@m@n @end|ng |rom gm@||@com (Jisca Huisman)
Date: Thu, 9 May 2024 13:40:00 +0200
Subject: [R-pkg-devel] is Fortran write still strictly forbidden?
In-Reply-To: <7A4A5FF4-26B6-49EA-BB4A-F916A2EC981A@xs4all.nl>
References: <95b62a98-7920-4a36-8339-fce63a89e3e5@gmail.com>
 <7A4A5FF4-26B6-49EA-BB4A-F916A2EC981A@xs4all.nl>
Message-ID: <ae9dfc80-aa6b-4372-9067-b2b0324af61c@gmail.com>

Hello Berend,

Fantastic, thank you! I'm fairly sure I'll be able to figure something 
out with your code as a guide.

best,

Jisca


On Thu, 09/05/2024 13:08, Berend Hasselman wrote:
> Hi,
>
> Have a look at package nleqslv to see how you can avoid Fortran write completely.
> Look at the file src/nwout.c and the calls of various functions therein in the other fortran files.
>
> regards,
>
> Berend Hasselman
>
>> On 08-05-2024, at 10:37, Jisca Huisman <jisca.huisman at gmail.com> wrote:
>>
>> Hello,
>>
>> I like to use write() in Fortran code to combine text with some integers
>> & doubles, to pass runtime information to R in a way that is prettier
>> and more legible than with intpr() & dblepr(). In the past any calls to
>> write() were strictly forbidden in Fortran code, as apparently it messed
>> something up internally (I cannot recall the details). But from 'writing
>> R extensions' it seems that there have been quite a few changes with
>> respect to support for Fortran code, and it currently reads:
>>
>>
>> 6.5.1 Printing from Fortran
>>
>> On many systems Fortran|write|and|print|statements can be used, but the
>> output may not interleave well with that of C, and may be invisible
>> onGUIinterfaces. They are not portable and best avoided.
>>
>>
>> To be more specific, would the subroutine below be allowed? Is it needed
>> to declare R >= 4.0 (?) in the package DESCRIPTION (& then use labelpr()
>> instead of intpr() ?) Is there an alternative without write() to get the
>> same result?
>>
>>
>> subroutine Rprint_pretty(iter, x)
>>      integer, intent(IN) :: iter
>>      double precision, intent(IN) :: x
>>      integer :: date_time_values(8), nchar, IntDummy(0)
>>      character(len=8) :: time_now
>>      character(len=200) :: msg_to_R
>>
>>      call date_and_time(VALUES=date_time_values)
>>      write(time_now, '(i2.2,":",i2.2,":",i2.2)') date_time_values(5:7)
>>      write(msg_to_R, '(a8, " i: ", i5, "  value: ", f8.2)') time_now,
>> iter, x
>>
>>      nchar = len(trim(msg_to_R))
>>     call intpr(trim(msg_to_R), nchar, IntDummy, 0)
>>
>>    end subroutine Rprint_pretty
>>
>>
>> Thanks!
>>
>>
>> 	[[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From vo|ody@ @end|ng |rom m|nd@pr|ng@com  Thu May  9 13:58:43 2024
From: vo|ody@ @end|ng |rom m|nd@pr|ng@com (Vladimir Dergachev)
Date: Thu, 9 May 2024 07:58:43 -0400 (EDT)
Subject: [R-pkg-devel] Fast Matrix Serialization in R?
In-Reply-To: <VI1P192MB028541BF45707A413F9210BBFBE62@VI1P192MB0285.EURP192.PROD.OUTLOOK.COM>
References: <VI1P192MB028541BF45707A413F9210BBFBE62@VI1P192MB0285.EURP192.PROD.OUTLOOK.COM>
Message-ID: <alpine.DEB.2.22.394.2405090752230.3559@iridium>



On Thu, 9 May 2024, Sameh Abdulah wrote:

> Hi,
>
> I need to serialize and save a 20K x 20K matrix as a binary file. This process is significantly slower in R compared to Python (4X slower).
>
> I'm not sure about the best approach to optimize the below code. Is it possible to parallelize the serialization function to enhance performance?

Parallelization should not help - a single CPU thread should be able to 
saturate your disk or your network, assuming you have a typical computer.

The problem is possibly the conversion to text, writing it as binary 
should be much faster.

To add to other suggestions, you might want to try my package "RMVL" - 
aside from fast writes, it also gives you ability to share data between 
ultimate users of the package.

best

Vladimir Dergachev

PS Example:

library("RMVL")

M<-mvl_open("test1.mvl", append=TRUE, create=TRUE)

n <- 20000^2
cat("Generating matrices ... ")
INI.TIME <- proc.time()
A <- matrix(runif(n), ncol = m)
END_GEN.TIME <- proc.time()

mvl_write(M, A, name="A")

mvl_close(M)

END_SER.TIME <- proc.time()


# Use in another script:

library("RMVL")

M2<-mvl_open("test1.mvl")

print(M2$A[1:10, 1:10])


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Thu May  9 15:38:27 2024
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Thu, 9 May 2024 15:38:27 +0200
Subject: [R-pkg-devel] package removed from CRAN
In-Reply-To: <C6A4D596-999E-4654-B020-080B1EB0BF25@uco.es>
References: <C6A4D596-999E-4654-B020-080B1EB0BF25@uco.es>
Message-ID: <daf7c5cf-078b-4a95-a39b-bff7fc4a4376@statistik.tu-dortmund.de>



On 08.05.2024 17:30, Jose V. Die Ramon wrote:
> Hello,
> 
> I just discovered that my package 'refseqR' was removed from the CRAN repository on April 30th.
> https://cran.r-project.org/web/packages/refseqR/index.html?
> 
> This news is extremely upsetting, especially because I did not receive any communication or warning regarding the issue. Could anyone please help me understand the reasons behind this, or suggest any steps I should take to resolve it?
> 
> Thanks,
> Jose

Professor Ripley sent you email on April 16 and asked for a fix within 2 
weeks --- to your maintainer address which is apparently different from 
the one you are using here.

Best,
Uwe Ligges

From |kry|ov @end|ng |rom d|@root@org  Thu May  9 16:41:01 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Thu, 9 May 2024 17:41:01 +0300
Subject: [R-pkg-devel] flang doesn't support derived types
In-Reply-To: <6ffdcf71-8ebf-4af3-ac53-fc166092b07b@protonmail.com>
References: <6ffdcf71-8ebf-4af3-ac53-fc166092b07b@protonmail.com>
Message-ID: <20240509174101.0c7edfd9@trisector>

Dear Othman El Hammouchi,

Welcome to R-package-devel!

? Wed, 08 May 2024 16:52:51 +0000
Othman El Hammouchi <othman.el.hammouchi at protonmail.com> ?????:

> However, upon submission I received an automatic reply shortly
> afterwards saying the build had failed on CRAN's servers for Debian.
> The log gives the following error:
> 
> flang/lib/Lower/CallInterface.cpp:949: not yet implemented: support
> for polymorphic types

Your use of contained procedures in class(t_mack_triangle) and
class(t_cl_res) signifies the derived types as being extensible and
thus potentially polymorphic. You'll have to replace class(...) with
type(...) and move the contained procedures out of the type definitions
(and maybe additionally make the types 'sequence' or 'bind(C)' to
signify them being non-extensible) to make the code work with flang-18.
I'm afraid this will also prevent you from defining destructors for
these types.

flang-new can be a very disappointing compiler at times [*], but it's
what people do use in the real world, especially for 64-bit ARM
processors, so in order to keep our packages portable, we have to cater
to its whims.

-- 
Best regards,
Ivan

[*] https://stat.ethz.ch/pipermail/r-package-devel/2023q4/009987.html


From othm@n@e|@h@mmouch| @end|ng |rom protonm@||@com  Thu May  9 17:31:25 2024
From: othm@n@e|@h@mmouch| @end|ng |rom protonm@||@com (Othman El Hammouchi)
Date: Thu, 09 May 2024 15:31:25 +0000
Subject: [R-pkg-devel] flang doesn't support derived types
In-Reply-To: <20240509174101.0c7edfd9@trisector>
References: <6ffdcf71-8ebf-4af3-ac53-fc166092b07b@protonmail.com>
 <20240509174101.0c7edfd9@trisector>
Message-ID: <Q7tjMuOB9hopqEEI5GxgOrVM0PysRZxQ3QDh4Y0utotv5owykqcineoZKG53vJI4UYGEt8Ez2dQ8Z3fOwaalTllQE9Ybin9usoKAxFLfPnI=@protonmail.com>

Dear Ivan,

Thank you so much for taking the time. I'd already figured out my misunderstanding on polymorphism in the mean time. The flang limitations are quite unfortunate, especially since there's no way to know this in development. The CI pipeline provided by the RStudio folks uses gfortran, and as far as I know it's the standard compiler in most distributions. Do I understand it correctly that there is no way to specify a Fortran standard in the SystemRequirements? I had resubmitted my package in the mean time with a configure script that aborts the install if the compiler does not support polymorphism, but I understand that this is a fruitless avenue for CRAN?

On the practical side, I did experiment with what you suggested. However, I'm now getting other errors about initialisation of allocatable arrays and the use of intrinsics like isnan, which would be impossible to take out. I should point out my local flang install is version 16, but I cannot install 18 on my system since it's in unstable (this again underscores the problem of developing under these constraints).

What would you advise? And don't you think these Fortran constraints should be better documenten.

Thanks for bearing with me,

Othman El Hammouchi

Sent from Proton Mail mobile

-------- Original Message --------
On 9 May 2024, 16:41, Ivan Krylov wrote:

> Dear Othman El Hammouchi, Welcome to R-package-devel! ? Wed, 08 May 2024 16:52:51 +0000 Othman El Hammouchi  ?????: > However, upon submission I received an automatic reply shortly > afterwards saying the build had failed on CRAN's servers for Debian. > The log gives the following error: > > flang/lib/Lower/CallInterface.cpp:949: not yet implemented: support > for polymorphic types Your use of contained procedures in class(t_mack_triangle) and class(t_cl_res) signifies the derived types as being extensible and thus potentially polymorphic. You'll have to replace class(...) with type(...) and move the contained procedures out of the type definitions (and maybe additionally make the types 'sequence' or 'bind(C)' to signify them being non-extensible) to make the code work with flang-18. I'm afraid this will also prevent you from defining destructors for these types. flang-new can be a very disappointing compiler at times [*], but it's what people do use in the real world, especially for 64-bit ARM processors, so in order to keep our packages portable, we have to cater to its whims. -- Best regards, Ivan [*] https://stat.ethz.ch/pipermail/r-package-devel/2023q4/009987.html
	[[alternative HTML version deleted]]


From |kry|ov @end|ng |rom d|@root@org  Thu May  9 18:34:30 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Thu, 9 May 2024 19:34:30 +0300
Subject: [R-pkg-devel] flang doesn't support derived types
In-Reply-To: <Q7tjMuOB9hopqEEI5GxgOrVM0PysRZxQ3QDh4Y0utotv5owykqcineoZKG53vJI4UYGEt8Ez2dQ8Z3fOwaalTllQE9Ybin9usoKAxFLfPnI=@protonmail.com>
References: <6ffdcf71-8ebf-4af3-ac53-fc166092b07b@protonmail.com>
 <20240509174101.0c7edfd9@trisector>
 <Q7tjMuOB9hopqEEI5GxgOrVM0PysRZxQ3QDh4Y0utotv5owykqcineoZKG53vJI4UYGEt8Ez2dQ8Z3fOwaalTllQE9Ybin9usoKAxFLfPnI=@protonmail.com>
Message-ID: <20240509193430.1998b917@Tarkus>

? Thu, 09 May 2024 15:31:25 +0000
Othman El Hammouchi <othman.el.hammouchi at protonmail.com> ?????:

> Do I understand it correctly that there is no way to specify a
> Fortran standard in the SystemRequirements?

It's possible (and even recommended) to describe the Fortran version
requirement in SystemRequirements [1], but this field is for now mostly
informational. I think I remember efforts to standardise it, but they
are far from complete.

> I had resubmitted my package in the mean time with a configure script
> that aborts the install if the compiler does not support
> polymorphism, but I understand that this is a fruitless avenue for
> CRAN?

Signs point to yes, at least judging by a previous time we had
flang-related problems [2]. On the other hand, there were relatively
easy workarounds that time, and here I'm not seeing anything as simple.

> I should point out my local flang install is version 16, but I cannot
> install 18 on my system since it's in unstable (this again
> underscores the problem of developing under these constraints).

Would you consider containers for this purpose? I was able to reproduce
the problem relatively quickly by starting podman run --rm -it
debian:sid and installing flang-18 in there. (Unlike Docker a few years
ago, podman can be installed straight from the repository, at least on
Debian, and doesn't require adding users to special groups in order to
work. Maybe Docker has also improved.) I don't like containers as a
basis for software distribution, but I can't deny that they are being
great at letting me quickly reproduce problems without installing 10
different GNU/Linux distros.

> What would you advise? And don't you think these Fortran constraints
> should be better documenten.

I'm afraid I don't have any more specific advice besides testing your
workarounds with Debian Sid in a container or a virtual machine or a
chroot. I can try to take a look at more concrete problems. I hope you
will be able to find a relatively painless workaround.

I do wish that flang-new would be a better compiler or at least a
better documented one, but instead of a list of features on their
website, I can only see "Getting Involved [3] for tips on how to get in
touch <...> and to learn more about the current status". There is only
so many projects one can get involved in.

-- 
Best regards,
Ivan

[1]
https://cran.r-project.org/doc/manuals/R-exts.html#Using-modern-Fortran-code

[2]
https://stat.ethz.ch/pipermail/r-package-devel/2023q4/010065.html

[3]
https://flang.llvm.org/docs/GettingInvolved.html


From |kry|ov @end|ng |rom d|@root@org  Thu May  9 19:07:21 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Thu, 9 May 2024 20:07:21 +0300
Subject: [R-pkg-devel] Overcoming CRAN's 5mb vendoring requirement
In-Reply-To: <CAL3ufU+GEjfJ+WznZ+59wxZBkjJ2wUdrfMV3GU_xWj17MtsJjw@mail.gmail.com>
References: <CAL3ufULZDHv9aVAnmrE4m-fF_z=UvhkPGiKMYR3ZkQYN7=z+5A@mail.gmail.com>
 <CAOCv4hgS24JSWpxy=Ljxp6_VTW7Gx6a5WJKWvg_ryhbbyqJe8g@mail.gmail.com>
 <CAL3ufULVrsZT-znYKa1wPgHud+fG4+KpPOe6XGNy7AcE9NZwyg@mail.gmail.com>
 <20240508223200.4d659fe4@Tarkus>
 <CAL3ufU+GEjfJ+WznZ+59wxZBkjJ2wUdrfMV3GU_xWj17MtsJjw@mail.gmail.com>
Message-ID: <20240509200721.2209bad4@Tarkus>

? Wed, 8 May 2024 16:01:23 -0400
Josiah Parry <josiah.parry at gmail.com> ?????:

>    - I'll see if I can get the configure.ac to make the appropriate
> Rscript call for configure.win.
>       - I think the idea of having a single `confgure.ac` file to
> generate both configure and configure.win is nice. Guidance with
> GitHub actions and ChatGPT is essentially a must for me since my bash
> is remedial at best.

Then you might like Kevin Ushey's configure
<https://github.com/kevinushey/configure>, which is like autoconf
redone in R. The only few lines of bash are the system-specific bits in
{configure,cleanup}{.win,} to run the R scripts under tools/, and they
are already written for you.

Generating two system-specific configures from one configure.ac might
be possible - GNU m4 is very versatile - but to implement that, you
would have to program m4, which is even more niche than bash.

> The requirement to avoid GitHub feels surprisingly anachronistic
> given how central it is to the vast majority of software development.

I think that Ben Bolker's answer explains it very well. Part of the
goal of the CRAN archive is to be able to take a package, a
period-appropriate version of R and install the former on the latter.
The URL carrying the code must be able to survive as long. Unlike
Zenodo, GitHub's goal is not directly to provide storage forever, and
its current owners have a reputation [*] that could have played a part
in the requirement to avoid them.

I wonder if it would be ethical to use Archive.org for this.

In an ideal world, CRAN would be able to directly archive larger
software packages (just like PyPI is currently hosting more than a
terabyte of Tensorflow builds and a few terabytes more of other
GPU-related code [**]) without requiring the maintainers to swim
between the Scylla of vendoring the dependencies and the Charybdis of
making the build depend on an external URL, but that's a luxury someone
would have to pay for.

-- 
Best regards,
Ivan

[*]
https://stat.ethz.ch/pipermail/r-package-devel/2024q2/010708.html

[**]
https://discuss.python.org/t/what-to-do-about-gpus-and-the-built-distributions-that-support-them/7125/16


From edd @end|ng |rom deb|@n@org  Thu May  9 19:21:42 2024
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Thu, 9 May 2024 12:21:42 -0500
Subject: [R-pkg-devel] Overcoming CRAN's 5mb vendoring requirement
In-Reply-To: <20240509200721.2209bad4@Tarkus>
References: <CAL3ufULZDHv9aVAnmrE4m-fF_z=UvhkPGiKMYR3ZkQYN7=z+5A@mail.gmail.com>
 <CAOCv4hgS24JSWpxy=Ljxp6_VTW7Gx6a5WJKWvg_ryhbbyqJe8g@mail.gmail.com>
 <CAL3ufULVrsZT-znYKa1wPgHud+fG4+KpPOe6XGNy7AcE9NZwyg@mail.gmail.com>
 <20240508223200.4d659fe4@Tarkus>
 <CAL3ufU+GEjfJ+WznZ+59wxZBkjJ2wUdrfMV3GU_xWj17MtsJjw@mail.gmail.com>
 <20240509200721.2209bad4@Tarkus>
Message-ID: <26173.1574.43304.738024@rob.eddelbuettel.com>


Software Heritage (see [1] for their website and [2] for a brief intro I gave
at useR! 2019 in Toulouse) covers GitHub and CRAN [3]. It is by now 'in
collaboration with UNESCO', supported by a long and posh list of sponsors [4]
and about as good as it gets to 'ensure longevity of artifacts'.

It is of course not meant for downloads during frequent builds.

But given the 'quasi-institutional nature' and sponsorship, we could think of
using GitHub as an 'active cache'. But CRAN is CRAN and as it now stands
GitHub is not trusted.  ?\_(?)_/?

Dirk


[1] https://www.softwareheritage.org/
[2] https://dirk.eddelbuettel.com/papers/useR2019_swh_cran_talk.pdf
[3] https://www.softwareheritage.org/faq/ question 2.1
[4] https://www.softwareheritage.org/support/sponsors/
-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From jo@|@h@p@rry @end|ng |rom gm@||@com  Thu May  9 20:29:29 2024
From: jo@|@h@p@rry @end|ng |rom gm@||@com (Josiah Parry)
Date: Thu, 9 May 2024 14:29:29 -0400
Subject: [R-pkg-devel] Overcoming CRAN's 5mb vendoring requirement
In-Reply-To: <26173.1574.43304.738024@rob.eddelbuettel.com>
References: <CAL3ufULZDHv9aVAnmrE4m-fF_z=UvhkPGiKMYR3ZkQYN7=z+5A@mail.gmail.com>
 <CAOCv4hgS24JSWpxy=Ljxp6_VTW7Gx6a5WJKWvg_ryhbbyqJe8g@mail.gmail.com>
 <CAL3ufULVrsZT-znYKa1wPgHud+fG4+KpPOe6XGNy7AcE9NZwyg@mail.gmail.com>
 <20240508223200.4d659fe4@Tarkus>
 <CAL3ufU+GEjfJ+WznZ+59wxZBkjJ2wUdrfMV3GU_xWj17MtsJjw@mail.gmail.com>
 <20240509200721.2209bad4@Tarkus>
 <26173.1574.43304.738024@rob.eddelbuettel.com>
Message-ID: <CAL3ufULanwXzEVb-w7AGSkKm1-GV5PN1fTib-HxMUUFT73+6BA@mail.gmail.com>

>
> ...but that's a luxury someone would have to pay for.
>

I'd happily give up my Netflix subscription for this. I suspect the
R-foundation/consortium could assist as well?

Referring to the "Using Rust in CRAN packages" document we must be able to

...download a specific version from a secure and reliable site


but, as far as I can tell, there is no definition of "secure" or "reliable"
or examples of these.
Is there a specification of availability / uptime for the site? Or
otherwise.

*What venues do we have for working on this issue in a formal manner?*

I think that these small issues add up and really do hamper the ability for
R to grow as a language.
Talented developers (that adjective does not apply to myself) spend *a lot* of
time trying to resolve
these issues. And too many (one is too many) have given up on CRAN and
consequently their
contributions to R have dwindled.

There are a number of really great tools that have to handle this
independently (arrow R packages and DuckDB
are good examples) but they have teams and funding behind them. If the bar
is going to be so high to publish
a package, we need to at least make a ladder (tools, packages, templates
etc) to get there.


----

 https://cran.r-project.org/web/packages/using_rust.html




On Thu, May 9, 2024 at 1:21?PM Dirk Eddelbuettel <edd at debian.org> wrote:

>
> Software Heritage (see [1] for their website and [2] for a brief intro I
> gave
> at useR! 2019 in Toulouse) covers GitHub and CRAN [3]. It is by now 'in
> collaboration with UNESCO', supported by a long and posh list of sponsors
> [4]
> and about as good as it gets to 'ensure longevity of artifacts'.
>
> It is of course not meant for downloads during frequent builds.
>
> But given the 'quasi-institutional nature' and sponsorship, we could think
> of
> using GitHub as an 'active cache'. But CRAN is CRAN and as it now stands
> GitHub is not trusted.  ?\_(?)_/?
>
> Dirk
>
>
> [1] https://www.softwareheritage.org/
> [2] https://dirk.eddelbuettel.com/papers/useR2019_swh_cran_talk.pdf
> [3] https://www.softwareheritage.org/faq/ question 2.1
> [4] https://www.softwareheritage.org/support/sponsors/
> --
> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>

	[[alternative HTML version deleted]]


From @|mon@urb@nek @end|ng |rom R-project@org  Fri May 10 00:45:44 2024
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Fri, 10 May 2024 10:45:44 +1200
Subject: [R-pkg-devel] Fast Matrix Serialization in R?
In-Reply-To: <alpine.DEB.2.22.394.2405090752230.3559@iridium>
References: <VI1P192MB028541BF45707A413F9210BBFBE62@VI1P192MB0285.EURP192.PROD.OUTLOOK.COM>
 <alpine.DEB.2.22.394.2405090752230.3559@iridium>
Message-ID: <82807F66-5421-4C62-ADB0-6B60B17BCA14@R-project.org>



> On 9/05/2024, at 11:58 PM, Vladimir Dergachev <volodya at mindspring.com> wrote:
> 
> 
> 
> On Thu, 9 May 2024, Sameh Abdulah wrote:
> 
>> Hi,
>> 
>> I need to serialize and save a 20K x 20K matrix as a binary file. This process is significantly slower in R compared to Python (4X slower).
>> 
>> I'm not sure about the best approach to optimize the below code. Is it possible to parallelize the serialization function to enhance performance?
> 
> Parallelization should not help - a single CPU thread should be able to saturate your disk or your network, assuming you have a typical computer.
> 
> The problem is possibly the conversion to text, writing it as binary should be much faster.
> 


FWIW serialize() is binary so there is no conversion to text:

> serialize(1:10+0L, NULL)
 [1] 58 0a 00 00 00 03 00 04 02 00 00 03 05 00 00 00 00 05 55 54 46 2d 38 00 00
[26] 00 0d 00 00 00 0a 00 00 00 01 00 00 00 02 00 00 00 03 00 00 00 04 00 00 00
[51] 05 00 00 00 06 00 00 00 07 00 00 00 08 00 00 00 09 00 00 00 0a

It uses the native representation so it is actually not as bad as it sounds.

One aspect I forgot to mention in the earlier thread is that if you don't need to exchange the serialized objects between machines with different endianness then avoiding the swap makes it faster. E.g, on Intel (which is little-endian and thus needs swapping):

> a=1:1e8/2
> system.time(serialize(a, NULL))
   user  system elapsed 
  2.123   0.468   2.661 
> system.time(serialize(a, NULL, xdr=FALSE))
   user  system elapsed 
  0.393   0.348   0.742 

Cheers,
Simon


From henr|k@bengt@@on @end|ng |rom gm@||@com  Fri May 10 02:31:06 2024
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Thu, 9 May 2024 17:31:06 -0700
Subject: [R-pkg-devel] Fast Matrix Serialization in R?
In-Reply-To: <82807F66-5421-4C62-ADB0-6B60B17BCA14@R-project.org>
References: <VI1P192MB028541BF45707A413F9210BBFBE62@VI1P192MB0285.EURP192.PROD.OUTLOOK.COM>
 <alpine.DEB.2.22.394.2405090752230.3559@iridium>
 <82807F66-5421-4C62-ADB0-6B60B17BCA14@R-project.org>
Message-ID: <CAFDcVCTc9Mkg5QF0BQe8xT3xk5oCQBG9jzJk4jesk8eehbAd3w@mail.gmail.com>

On Thu, May 9, 2024 at 3:46?PM Simon Urbanek
<simon.urbanek at r-project.org> wrote:
>
>
>
> > On 9/05/2024, at 11:58 PM, Vladimir Dergachev <volodya at mindspring.com> wrote:
> >
> >
> >
> > On Thu, 9 May 2024, Sameh Abdulah wrote:
> >
> >> Hi,
> >>
> >> I need to serialize and save a 20K x 20K matrix as a binary file. This process is significantly slower in R compared to Python (4X slower).
> >>
> >> I'm not sure about the best approach to optimize the below code. Is it possible to parallelize the serialization function to enhance performance?
> >
> > Parallelization should not help - a single CPU thread should be able to saturate your disk or your network, assuming you have a typical computer.
> >
> > The problem is possibly the conversion to text, writing it as binary should be much faster.
> >
>
>
> FWIW serialize() is binary so there is no conversion to text:
>
> > serialize(1:10+0L, NULL)
>  [1] 58 0a 00 00 00 03 00 04 02 00 00 03 05 00 00 00 00 05 55 54 46 2d 38 00 00
> [26] 00 0d 00 00 00 0a 00 00 00 01 00 00 00 02 00 00 00 03 00 00 00 04 00 00 00
> [51] 05 00 00 00 06 00 00 00 07 00 00 00 08 00 00 00 09 00 00 00 0a
>
> It uses the native representation so it is actually not as bad as it sounds.
>
> One aspect I forgot to mention in the earlier thread is that if you don't need to exchange the serialized objects between machines with different endianness then avoiding the swap makes it faster. E.g, on Intel (which is little-endian and thus needs swapping):
>
> > a=1:1e8/2
> > system.time(serialize(a, NULL))
>    user  system elapsed
>   2.123   0.468   2.661
> > system.time(serialize(a, NULL, xdr=FALSE))
>    user  system elapsed
>   0.393   0.348   0.742

Would it be worth looking into making xdr=FALSE the default? From
help("serialize"):

xdr: a logical: if a binary representation is used, should a
big-endian one (XDR) be used?
...
As almost all systems in current use are little-endian, xdr = FALSE
can be used to avoid byte-shuffling at both ends when transferring
data from one little-endian machine to another (or between processes
on the same machine). Depending on the system, this can speed up
serialization and unserialization by a factor of up to 3x.

This seems like a low-hanging fruit that could spare the world from
wasting unnecessary CPU cycles.

/Henrik



>
> Cheers,
> Simon
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From @|mon@urb@nek @end|ng |rom R-project@org  Fri May 10 05:12:17 2024
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Fri, 10 May 2024 15:12:17 +1200
Subject: [R-pkg-devel] Fast Matrix Serialization in R?
In-Reply-To: <CAFDcVCTc9Mkg5QF0BQe8xT3xk5oCQBG9jzJk4jesk8eehbAd3w@mail.gmail.com>
References: <VI1P192MB028541BF45707A413F9210BBFBE62@VI1P192MB0285.EURP192.PROD.OUTLOOK.COM>
 <alpine.DEB.2.22.394.2405090752230.3559@iridium>
 <82807F66-5421-4C62-ADB0-6B60B17BCA14@R-project.org>
 <CAFDcVCTc9Mkg5QF0BQe8xT3xk5oCQBG9jzJk4jesk8eehbAd3w@mail.gmail.com>
Message-ID: <BA52E392-AB6E-4D81-A6C2-7B992248D43F@R-project.org>



> On 10/05/2024, at 12:31 PM, Henrik Bengtsson <henrik.bengtsson at gmail.com> wrote:
> 
> On Thu, May 9, 2024 at 3:46?PM Simon Urbanek
> <simon.urbanek at r-project.org> wrote:
>> 
>> FWIW serialize() is binary so there is no conversion to text:
>> 
>>> serialize(1:10+0L, NULL)
>> [1] 58 0a 00 00 00 03 00 04 02 00 00 03 05 00 00 00 00 05 55 54 46 2d 38 00 00
>> [26] 00 0d 00 00 00 0a 00 00 00 01 00 00 00 02 00 00 00 03 00 00 00 04 00 00 00
>> [51] 05 00 00 00 06 00 00 00 07 00 00 00 08 00 00 00 09 00 00 00 0a
>> 
>> It uses the native representation so it is actually not as bad as it sounds.
>> 
>> One aspect I forgot to mention in the earlier thread is that if you don't need to exchange the serialized objects between machines with different endianness then avoiding the swap makes it faster. E.g, on Intel (which is little-endian and thus needs swapping):
>> 
>>> a=1:1e8/2
>>> system.time(serialize(a, NULL))
>>   user  system elapsed
>>  2.123   0.468   2.661
>>> system.time(serialize(a, NULL, xdr=FALSE))
>>   user  system elapsed
>>  0.393   0.348   0.742
> 
> Would it be worth looking into making xdr=FALSE the default? From
> help("serialize"):
> 
> xdr: a logical: if a binary representation is used, should a
> big-endian one (XDR) be used?
> ...
> As almost all systems in current use are little-endian, xdr = FALSE
> can be used to avoid byte-shuffling at both ends when transferring
> data from one little-endian machine to another (or between processes
> on the same machine). Depending on the system, this can speed up
> serialization and unserialization by a factor of up to 3x.
> 
> This seems like a low-hanging fruit that could spare the world from
> wasting unnecessary CPU cycles.
> 


I thought about it before, but the main problem here is (as often) compatibility. The current default guarantees that the output can be safely read on any machine while xdr=FALSE only works if used on machines with the same endianness and will fail horribly otherwise. R cannot really know whether the user intends to transport the serialized data to another machine or not, so it cannot assume it is safe unless the user indicates so. Therefore all we can safely do is tell the users that they should use it where appropriate -- and the documentation explicitly says so:

     As almost all systems in current use are little-endian, ?xdr =
     FALSE? can be used to avoid byte-shuffling at both ends when
     transferring data from one little-endian machine to another (or
     between processes on the same machine).  Depending on the system,
     this can speed up serialization and unserialization by a factor of
     up to 3x.

Unfortunately, no one bothers to reads the documentation so it is not as effective as changing the default, but for reasons above it is just not as easy to change. I do acknowledge that the risk is relatively low since big-endian machines are becoming rare, but it's not zero.

That said, what worries me a bit more is that some derived functions such as saveRDS() don't expose the xdr option, so you actually have no way to use the native binary format. I understand the logic - see above, but as you said, that makes them unnecessarily slow. I wonder if it may be worth doing something a bit smarter and tag officially a "reverse XDR" format instead - that way it would be well-defined and could be made the default. Interestingly, the de-serialization part actually doesn't care, so you can use readRDS() on the binary serialization even in current R versions, so just adding the option would still be backwards-compatible. Definitely something to think about...

Cheers,
Simon


> 
> 
>> 
>> Cheers,
>> Simon
>> 
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 


From othm@n@e|@h@mmouch| @end|ng |rom protonm@||@com  Fri May 10 08:04:16 2024
From: othm@n@e|@h@mmouch| @end|ng |rom protonm@||@com (Othman El Hammouchi)
Date: Fri, 10 May 2024 06:04:16 +0000
Subject: [R-pkg-devel] flang doesn't support derived types
In-Reply-To: <20240509193430.1998b917@Tarkus>
References: <6ffdcf71-8ebf-4af3-ac53-fc166092b07b@protonmail.com>
 <20240509174101.0c7edfd9@trisector>
 <Q7tjMuOB9hopqEEI5GxgOrVM0PysRZxQ3QDh4Y0utotv5owykqcineoZKG53vJI4UYGEt8Ez2dQ8Z3fOwaalTllQE9Ybin9usoKAxFLfPnI=@protonmail.com>
 <20240509193430.1998b917@Tarkus>
Message-ID: <56070879-a6bb-4e7d-8454-f1145085625f@protonmail.com>

Dear Ivan,


Thanks again for the help, you've given me some great pointers to 
pursue. I will keep you posted on what CRAN responds and whether I find 
a workaround.

 > I do wish that flang-new would be a better compiler or at least a
 > better documented one, but instead of a list of features on their
 > website, I can only see "Getting Involved [3] for tips on how to get in
 > touch <...> and to learn more about the current status". There is only
 > so many projects one can get involved in.

The problem is not the quality of the compiler so much as the fact that 
it's not finished. They don't make a big secret of the fact that it's 
still under development. It may be the standard in industry as you say, 
but it would greatly surprise me if it was the default for most ordinary 
users. Most distros and platforms seem to ship the (much more complete) 
gfortran.


Yours,


Othman El Hammouchi

On 09/05/2024 18:34, Ivan Krylov wrote:
> ? Thu, 09 May 2024 15:31:25 +0000
> Othman El Hammouchi <othman.el.hammouchi at protonmail.com> ?????:
>
>> Do I understand it correctly that there is no way to specify a
>> Fortran standard in the SystemRequirements?
> It's possible (and even recommended) to describe the Fortran version
> requirement in SystemRequirements [1], but this field is for now mostly
> informational. I think I remember efforts to standardise it, but they
> are far from complete.
>
>> I had resubmitted my package in the mean time with a configure script
>> that aborts the install if the compiler does not support
>> polymorphism, but I understand that this is a fruitless avenue for
>> CRAN?
> Signs point to yes, at least judging by a previous time we had
> flang-related problems [2]. On the other hand, there were relatively
> easy workarounds that time, and here I'm not seeing anything as simple.
>
>> I should point out my local flang install is version 16, but I cannot
>> install 18 on my system since it's in unstable (this again
>> underscores the problem of developing under these constraints).
> Would you consider containers for this purpose? I was able to reproduce
> the problem relatively quickly by starting podman run --rm -it
> debian:sid and installing flang-18 in there. (Unlike Docker a few years
> ago, podman can be installed straight from the repository, at least on
> Debian, and doesn't require adding users to special groups in order to
> work. Maybe Docker has also improved.) I don't like containers as a
> basis for software distribution, but I can't deny that they are being
> great at letting me quickly reproduce problems without installing 10
> different GNU/Linux distros.
>
>> What would you advise? And don't you think these Fortran constraints
>> should be better documenten.
> I'm afraid I don't have any more specific advice besides testing your
> workarounds with Debian Sid in a container or a virtual machine or a
> chroot. I can try to take a look at more concrete problems. I hope you
> will be able to find a relatively painless workaround.
>
> I do wish that flang-new would be a better compiler or at least a
> better documented one, but instead of a list of features on their
> website, I can only see "Getting Involved [3] for tips on how to get in
> touch <...> and to learn more about the current status". There is only
> so many projects one can get involved in.
>
> --
> Best regards,
> Ivan
>
> [1]
> https://cran.r-project.org/doc/manuals/R-exts.html#Using-modern-Fortran-code
>
> [2]
> https://stat.ethz.ch/pipermail/r-package-devel/2023q4/010065.html
>
> [3]
> https://flang.llvm.org/docs/GettingInvolved.html


From |kry|ov @end|ng |rom d|@root@org  Fri May 10 17:38:43 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Fri, 10 May 2024 18:38:43 +0300
Subject: [R-pkg-devel] Fast Matrix Serialization in R?
In-Reply-To: <BA52E392-AB6E-4D81-A6C2-7B992248D43F@R-project.org>
References: <VI1P192MB028541BF45707A413F9210BBFBE62@VI1P192MB0285.EURP192.PROD.OUTLOOK.COM>
 <alpine.DEB.2.22.394.2405090752230.3559@iridium>
 <82807F66-5421-4C62-ADB0-6B60B17BCA14@R-project.org>
 <CAFDcVCTc9Mkg5QF0BQe8xT3xk5oCQBG9jzJk4jesk8eehbAd3w@mail.gmail.com>
 <BA52E392-AB6E-4D81-A6C2-7B992248D43F@R-project.org>
Message-ID: <20240510183843.5c60cfe1@Tarkus>

On Fri, 10 May 2024 15:12:17 +1200
Simon Urbanek <simon.urbanek at R-project.org> wrote:

> I wonder if it may be worth doing something a bit smarter and tag
> officially a "reverse XDR" format instead - that way it would be
> well-defined and could be made the default.

Do you mean changing R so that when reading a "B\n" serialized stream,
a format code read as 0x02000000 or 0x03000000 would mean regular
formats 2 or 3 but byte-swapped? That would be backwards-compatible,
and we probably weren't going to have >= 65536 format versions anyway...

-- 
Best regards,
Ivan


From k@||eng|u @end|ng |rom gm@||@com  Sun May 12 20:43:18 2024
From: k@||eng|u @end|ng |rom gm@||@com (Kaifeng Lu)
Date: Sun, 12 May 2024 14:43:18 -0400
Subject: [R-pkg-devel] clang-UBSAN
Message-ID: <CAAsVnm+Tis8hyByXCtRdatsXukCz4Pa6tZPB3iYEvDTh51_ZVA@mail.gmail.com>

Dear friends,

I am developing an R package built with Rcpp. The package passed the test
with devtools::check() before submission to CRAN, but failed with the
following clang-UBSAN issue after submission to CRAN:

/data/gannet/ripley/R/test-clang/Rcpp/include/Rcpp/internal/caster.h:30:25:
runtime error: nan is outside the range of representable values of type
'int'

Is there any way to reproduce the error before submitting the package to
CRAN?

Thank you very much for helping!

Regards,
Kaifeng

	[[alternative HTML version deleted]]


From @|mon@urb@nek @end|ng |rom R-project@org  Mon May 13 00:46:56 2024
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Mon, 13 May 2024 10:46:56 +1200
Subject: [R-pkg-devel] 
 Trouble with dependencies on phyloseq and microViz
In-Reply-To: <DDFCF8F0-E664-4814-9A88-85ACC63ECB47@R-project.org>
References: <1FB885FF-2DA6-4CB6-A987-38858C3AF7FA@clemson.edu>
 <20240504193210.0332d714@Tarkus>
 <7205534A-6666-4EDE-B613-68AAAFED2F2D@R-project.org>
 <20240507091552.090ad6ec@Tarkus>
 <DDFCF8F0-E664-4814-9A88-85ACC63ECB47@R-project.org>
Message-ID: <C360FF3C-8942-4AF3-B819-D7CFFD416325@R-project.org>

Sharon,

I have upgraded Bioc on the R-oldrel build machines and that seems to have taken care of the problem as far as I can tell:
https://cran.r-project.org/web/checks/check_results_HybridMicrobiomes.html

If you have reports like that, it's a better idea to ask us first and always supply the name of the package, otherwise the thread can quickly degrade to wild guesswork and misleading or incorrect answers from unrelated parties.

Cheers,
Simon


> On 7/05/2024, at 6:56 PM, Simon Urbanek <simon.urbanek at R-project.org> wrote:
> 
> Ivan,
> 
> sorry if it wasn't clear, but this thread was about strong dependencies -- Sharon noted that phyloseq must remain strong dependency and asked how to deal with that (see all the parts you cut from this thread). Now that I finally have the package name I can check the details - apparently this only affects R-oldrel so presumable Bioc upgrade may fix this so I'll have a look tomorrow.
> 
> Cheers,
> Simon
> 


From |kry|ov @end|ng |rom d|@root@org  Mon May 13 09:03:21 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Mon, 13 May 2024 10:03:21 +0300
Subject: [R-pkg-devel] clang-UBSAN
In-Reply-To: <CAAsVnm+Tis8hyByXCtRdatsXukCz4Pa6tZPB3iYEvDTh51_ZVA@mail.gmail.com>
References: <CAAsVnm+Tis8hyByXCtRdatsXukCz4Pa6tZPB3iYEvDTh51_ZVA@mail.gmail.com>
Message-ID: <20240513100321.297ae1da@Tarkus>

? Sun, 12 May 2024 14:43:18 -0400
Kaifeng Lu <kaifenglu at gmail.com> ?????:

> /data/gannet/ripley/R/test-clang/Rcpp/include/Rcpp/internal/caster.h:30:25:
> runtime error: nan is outside the range of representable values of
> type 'int'

On line 4618 of src/misc.cpp of the lrstat package, you have a
suspicious default parameter value:

>> const int n = NA_REAL

NA_REAL is a special kind of NaN, and C++ signed integers cannot
represent NaNs. You probably meant NA_INTEGER.

I think that Rcpp::traits::input_parameter<const int> takes care of
asking R to cast NA_REAL to NA_INTEGER, so this shouldn't directly
cause problems, but without a link to the code and the full error
report we have to resort to forbidden OSINT techniques [1], which don't
always work reliably and may attract the wrong kind of attention on the
darknet [2].

> Is there any way to reproduce the error before submitting the package
> to CRAN?

Yes.

If you use containers, try the rocker/r-devel-ubsan-clang [3] image
that should already contain a "sanitized" build of R produced with the
clang compiler.

If that doesn't help, start with a Fedoda 36 installation and follow
the description [4] to install clang and compile R from source with
sanitizers enabled. This procedure is described in more detail in WRE
4.3.4 [5].

If you start having problems using the Docker/podman image or compiling
R from source, don't hesitate to ask further questions.

-- 
Best regards,
Ivan

[1]
Such as searching your name on CRAN and GitHub.

[2]
Such as Google suggesting AI-powered results.

[3]
https://rocker-project.org/images/

[4]
https://www.stats.ox.ac.uk/pub/bdr/memtests/README.txt

[5]
https://cran.r-project.org/doc/manuals/R-exts.html#Using-Undefined-Behaviour-Sanitizer


From c@@rd|@g@bor @end|ng |rom gm@||@com  Mon May 13 09:24:20 2024
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Mon, 13 May 2024 09:24:20 +0200
Subject: [R-pkg-devel] clang-UBSAN
In-Reply-To: <CAAsVnm+Tis8hyByXCtRdatsXukCz4Pa6tZPB3iYEvDTh51_ZVA@mail.gmail.com>
References: <CAAsVnm+Tis8hyByXCtRdatsXukCz4Pa6tZPB3iYEvDTh51_ZVA@mail.gmail.com>
Message-ID: <CABtg=K=sb58Fm3w7tBA1wnQw4Pjepaej1V8vWSaSEkpFQK-BRQ@mail.gmail.com>

The rhub package should be able to reproduce that, see
https://github.com/r-hub/rhub#readme

Or you can use the clang-asan container directly:
https://r-hub.github.io/containers/

Gabor

On Mon, May 13, 2024 at 12:31?AM Kaifeng Lu <kaifenglu at gmail.com> wrote:
>
> Dear friends,
>
> I am developing an R package built with Rcpp. The package passed the test
> with devtools::check() before submission to CRAN, but failed with the
> following clang-UBSAN issue after submission to CRAN:
>
> /data/gannet/ripley/R/test-clang/Rcpp/include/Rcpp/internal/caster.h:30:25:
> runtime error: nan is outside the range of representable values of type
> 'int'
>
> Is there any way to reproduce the error before submitting the package to
> CRAN?
>
> Thank you very much for helping!
>
> Regards,
> Kaifeng
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From ruw@n|r@@@nj@||h @end|ng |rom gm@||@com  Mon May 13 15:33:04 2024
From: ruw@n|r@@@nj@||h @end|ng |rom gm@||@com (Ruwani Herath)
Date: Mon, 13 May 2024 08:33:04 -0500
Subject: [R-pkg-devel] An issue regarding the authors field in DESCRIPTION
Message-ID: <CAHNarzP5YgXF6UjRoirv87LQTW9P6QwW5FLVFOwm_J2C97nBwg@mail.gmail.com>

Hi,
I have submitted an R package and I got the following notes from the CRAN
test. I couldn't find what should be the change I have to do to correct
this issue. Please check this and guide me to solve the issue.

* checking CRAN incoming feasibility ... NOTE
Maintainer: 'Ruwani Herath <ruwanirasanjalih at gmail.com>'

* checking DESCRIPTION meta-information ... NOTE

Author field differs from that derived from Authors at R
  Author:    'Ruwani Herath [aut,cre,cph,com], Leila Amiri [ctb],
Mahmoud Torabi [ctb]'
  Authors at R: 'Ruwani Herath [aut, cre, cph, com], Leila Amiri [ctb],
Mahmoud Torabi [ctb]'


This is what I entered in DESCRIPTION field.

Authors at R: c(person(given = "Ruwani", family = "Herath", role = c("aut","cre"),
                    email = "ruwanirasanjalih at gmail.com"),
	     person(given = "Leila", family = "Amiri",  role = "ctb"),
             person(given = "Mahmoud", family = "Torabi", role = "ctb"))

Authors: Ruwani Herath [aut, cre],
  Leila Amiri [ctb],
  Mahmoud Torabi [ctb]
Maintainer: Ruwani Herath <ruwanirasanjalih at gmail.com>


Thank you.

Regards,

Ruwani

	[[alternative HTML version deleted]]


From |kry|ov @end|ng |rom d|@root@org  Mon May 13 15:54:08 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Mon, 13 May 2024 16:54:08 +0300
Subject: [R-pkg-devel] 
 An issue regarding the authors field in DESCRIPTION
In-Reply-To: <CAHNarzP5YgXF6UjRoirv87LQTW9P6QwW5FLVFOwm_J2C97nBwg@mail.gmail.com>
References: <CAHNarzP5YgXF6UjRoirv87LQTW9P6QwW5FLVFOwm_J2C97nBwg@mail.gmail.com>
Message-ID: <20240513165408.460c1e79@arachnoid>

? Mon, 13 May 2024 08:33:04 -0500
Ruwani Herath <ruwanirasanjalih at gmail.com> ?????:

> This is what I entered in DESCRIPTION field.
> 
> Authors at R: c(person(given = "Ruwani", family = "Herath", role =
> c("aut","cre"), email = "ruwanirasanjalih at gmail.com"),
> 	     person(given = "Leila", family = "Amiri",  role = "ctb"),
>              person(given = "Mahmoud", family = "Torabi", role =
> "ctb"))
> 
> Authors: Ruwani Herath [aut, cre],
>   Leila Amiri [ctb],
>   Mahmoud Torabi [ctb]
> Maintainer: Ruwani Herath <ruwanirasanjalih at gmail.com>

R CMD build generates the fields "Authors" and "Maintainers" from the
field "Authors at R", so the easiest way forward is to delete Authors: and
Maintainer: from your DESCRIPTION. Next time you run R CMD build, the
DESCRIPTION file inside the resulting *.tar.gz file will contain the
correct fields "Authors" and "Maintainers".

-- 
Best regards,
Ivan


