From mlevy79 @ending from gm@il@com  Sun Jul  1 02:49:00 2018
From: mlevy79 @ending from gm@il@com (Michael Levy)
Date: Sat, 30 Jun 2018 18:49:00 -0600
Subject: [R-pkg-devel] Tests hang only on win-builder x64
In-Reply-To: <5fd75373-7b98-d1a5-8f14-005da21f1fe0@statistik.tu-dortmund.de>
References: <CAENSEbWhkprACZZjHm200AzPaRjp29tPo2ouhSzAh29EPU3NKg@mail.gmail.com>
 <5fd75373-7b98-d1a5-8f14-005da21f1fe0@statistik.tu-dortmund.de>
Message-ID: <CAENSEbUy_oXqf199co-BtoYXiQ7vA1ZxGCVnGyBgdMZs8BEZzg@mail.gmail.com>

Thanks Uwe. Seems I need to overhaul my tests...

--
Michael Levy
970-426-5389


On Sat, Jun 30, 2018 at 2:59 PM Uwe Ligges <ligges at statistik.tu-dortmund.de>
wrote:

> Wekk, after 20 min the process is killed. If you spend 17 min in i386,
> and some time in the previous part of the checks, there is not much time
> left for the 64-bit checks ....
>
>
> If you aim to submit the package to CRAN, note that the overall check
> time (including both architectures) should not exceed 10 minutes.
>
> Best,
> Uwe Ligges
>
>
>
>
> On 30.06.2018 20:36, Michael Levy wrote:
> > Hi all,
> >
> >
> >
> > My package's tests seem to be hanging on win-builder's x64 build for all
> > three R releases, but they complete okay on win-builder i386 and on
> > AppVeyor x64 (and on other platforms). The tests take a while to
> complete,
> > so I've split them into multiple files so that some output comes back
> every
> > few minutes. Any idea how I might fix this? Thanks.
> >
> >
> >
> > ** running tests for arch 'i386' ... [17m] OK
> >
> >    Running 'testthat-1.R' [103s]
> >
> >    Running 'testthat-2.R' [477s]
> >
> >    Running 'testthat-3.R' [425s]
> >
> >    Running 'testthat-4.R' [7s]
> >
> > ** running tests for arch 'x64' ... ERROR
> >
> > Check process probably crashed or hung up for 20 minutes ... killed
> >
> > Most likely this happened in the example checks (?),
> >
> > if not, ignore the following last lines of example output:
> >
> >
> >
> > ======== End of example output (where/before crash/hang up occured ?)
> > ========
> >
> >
> >
> >
> > ?
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
>

	[[alternative HTML version deleted]]


From ligge@ @ending from @t@ti@tik@tu-dortmund@de  Sun Jul  1 08:14:51 2018
From: ligge@ @ending from @t@ti@tik@tu-dortmund@de (Uwe Ligges)
Date: Sun, 1 Jul 2018 08:14:51 +0200
Subject: [R-pkg-devel] Tests hang only on win-builder x64
In-Reply-To: <CAENSEbUy_oXqf199co-BtoYXiQ7vA1ZxGCVnGyBgdMZs8BEZzg@mail.gmail.com>
References: <CAENSEbWhkprACZZjHm200AzPaRjp29tPo2ouhSzAh29EPU3NKg@mail.gmail.com>
 <5fd75373-7b98-d1a5-8f14-005da21f1fe0@statistik.tu-dortmund.de>
 <CAENSEbUy_oXqf199co-BtoYXiQ7vA1ZxGCVnGyBgdMZs8BEZzg@mail.gmail.com>
Message-ID: <009afaa7-6ed7-4eca-14dc-b3d279e877f9@statistik.tu-dortmund.de>



On 01.07.2018 02:49, Michael Levy wrote:
> Thanks Uwe. Seems I need to overhaul my tests...

Of course you can keep these for yourself and skip less important tests 
unless some env var is set that you only define on your machine.

Best,
Uwe Ligges


> 
> --
> Michael Levy
> 970-426-5389
> 
> 
> On Sat, Jun 30, 2018 at 2:59 PM Uwe Ligges 
> <ligges at statistik.tu-dortmund.de 
> <mailto:ligges at statistik.tu-dortmund.de>> wrote:
> 
>     Wekk, after 20 min the process is killed. If you spend 17 min in i386,
>     and some time in the previous part of the checks, there is not much
>     time
>     left for the 64-bit checks ....
> 
> 
>     If you aim to submit the package to CRAN, note that the overall check
>     time (including both architectures) should not exceed 10 minutes.
> 
>     Best,
>     Uwe Ligges
> 
> 
> 
> 
>     On 30.06.2018 20:36, Michael Levy wrote:
>      > Hi all,
>      >
>      >
>      >
>      > My package's tests seem to be hanging on win-builder's x64 build
>     for all
>      > three R releases, but they complete okay on win-builder i386 and on
>      > AppVeyor x64 (and on other platforms). The tests take a while to
>     complete,
>      > so I've split them into multiple files so that some output comes
>     back every
>      > few minutes. Any idea how I might fix this? Thanks.
>      >
>      >
>      >
>      > ** running tests for arch 'i386' ... [17m] OK
>      >
>      >? ? Running 'testthat-1.R' [103s]
>      >
>      >? ? Running 'testthat-2.R' [477s]
>      >
>      >? ? Running 'testthat-3.R' [425s]
>      >
>      >? ? Running 'testthat-4.R' [7s]
>      >
>      > ** running tests for arch 'x64' ... ERROR
>      >
>      > Check process probably crashed or hung up for 20 minutes ... killed
>      >
>      > Most likely this happened in the example checks (?),
>      >
>      > if not, ignore the following last lines of example output:
>      >
>      >
>      >
>      > ======== End of example output (where/before crash/hang up occured ?)
>      > ========
>      >
>      >
>      >
>      >
>      > ?
>      >
>      >? ? ? ?[[alternative HTML version deleted]]
>      >
>      > ______________________________________________
>      > R-package-devel at r-project.org
>     <mailto:R-package-devel at r-project.org> mailing list
>      > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>      >
>


From throm @ending from wu@tl@edu  Mon Jul  2 22:18:12 2018
From: throm @ending from wu@tl@edu (Throm, Allison)
Date: Mon, 2 Jul 2018 20:18:12 +0000
Subject: [R-pkg-devel] Errors from Suggests or Enhances not in mainstream
 repositories
Message-ID: <DM2PR0201MB08626B6269801778CFBEDBCFA5430@DM2PR0201MB0862.namprd02.prod.outlook.com>

Hi all,


I'm trying to submit a package to the CRAN that further examines results from the "citrus" package as done for an accepted publication (available on Github: <https://github.com/nolanlab/citrus>).


I do not get any errors when using devtools::check() on my Mac, which already has the citrus package installed. However, I am getting errors during the CRAN submission check <https://win-builder.r-project.org/incoming_pretest/mineCitrus_1.0.0_20180702_172340/>.


I've tried searching Stack Overload and other CRAN packages with Additional_repositories fields, but none of the applicable solutions have worked. I'm pretty sure it's the loading of the citrus package that is causing the error and have added the Additional_repositories field with a link the package on Github, but still haven't been able to resolve the issue. There are very specific installation instructions for the package <https://github.com/nolanlab/citrus/wiki/Installing-Citrus>, which may be contributing to issues.


How should I properly specify dependencies on the nolanlab/citrus<https://github.com/nolanlab/citrus> Github package for my CRAN package?


Thank you in advance,

Allison






	[[alternative HTML version deleted]]


From bbolker @ending from gm@il@com  Tue Jul  3 00:13:50 2018
From: bbolker @ending from gm@il@com (Ben Bolker)
Date: Mon, 2 Jul 2018 18:13:50 -0400
Subject: [R-pkg-devel] 
 Errors from Suggests or Enhances not in mainstream repositories
In-Reply-To: <DM2PR0201MB08626B6269801778CFBEDBCFA5430@DM2PR0201MB0862.namprd02.prod.outlook.com>
References: <DM2PR0201MB08626B6269801778CFBEDBCFA5430@DM2PR0201MB0862.namprd02.prod.outlook.com>
Message-ID: <CABghstTEDG5cq5efY3e_5eiiFaXtBJqSyFqu9BLSAvJmyo2DCA@mail.gmail.com>

I got something similar.  I have a few thoughts:

(1) you should use  "if (require(citrus)) { ... }" in your examples;
"Suggests" and "Enhances" packages are supposed to be *optional*, i.e.
examples and tests should be able to run even if they're not installed
(I would imagine that "Writing R Extensions" and/or the CRAN policies
say something to this effect, but I haven't checked)
(2) I can imagine that win-builder is looking for *binary* versions of
the package (I'm not sure why this would be the default, and why it
couldn't fall back and install from source, but that would be my
guess); do you have binary versions, for the appropriate major R
version (i.e. 3.5 for release, maybe?? 3.4 for oldrelease??), in your
repo. (In my example, I don't; I was going to try compiling a binary
version and putting it in the repo. This is a bit of a chicken-and-egg
problem if you can't get a binary built because the examples fail, but
if you implement step #1 I think it should work).

My point (3) is a follow-on question that I would love an answer to,
or hints. I get a *message* similar to the one found in throm's
win-builder logs, i.e. "Suggests or Enhances not in mainstream
repositories: ..." - but since it's not labeled as a WARNING or an
ERROR (or even a NOTE), I am wondering what its status is in the
CRAN-maintainers' eyes - is it a CRAN-submission-blocking problem? Or
a "we'd rather you didn't do that but we'll accept it this time?" or
...

   I'm not asking anyone (except possibly CRAN maintainers) to speak
for the CRAN maintainers, but if anyone has any experience or guesses
(or pointers to parts of the CRAN policies/Writing R Extensions
document that I overlooked) I'd appreciate hearing about it.

  cheers
     Ben Bolker
On Mon, Jul 2, 2018 at 5:28 PM Throm, Allison <throm at wustl.edu> wrote:
>
> Hi all,
>
>
> I'm trying to submit a package to the CRAN that further examines results from the "citrus" package as done for an accepted publication (available on Github: <https://github.com/nolanlab/citrus>).
>
>
> I do not get any errors when using devtools::check() on my Mac, which already has the citrus package installed. However, I am getting errors during the CRAN submission check <https://win-builder.r-project.org/incoming_pretest/mineCitrus_1.0.0_20180702_172340/>.
>
>
> I've tried searching Stack Overload and other CRAN packages with Additional_repositories fields, but none of the applicable solutions have worked. I'm pretty sure it's the loading of the citrus package that is causing the error and have added the Additional_repositories field with a link the package on Github, but still haven't been able to resolve the issue. There are very specific installation instructions for the package <https://github.com/nolanlab/citrus/wiki/Installing-Citrus>, which may be contributing to issues.
>
>
> How should I properly specify dependencies on the nolanlab/citrus<https://github.com/nolanlab/citrus> Github package for my CRAN package?
>
>
> Thank you in advance,
>
> Allison
>
>
>
>
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From ligge@ @ending from @t@ti@tik@tu-dortmund@de  Tue Jul  3 00:23:48 2018
From: ligge@ @ending from @t@ti@tik@tu-dortmund@de (Uwe Ligges)
Date: Tue, 3 Jul 2018 00:23:48 +0200
Subject: [R-pkg-devel] 
 Errors from Suggests or Enhances not in mainstream repositories
In-Reply-To: <CABghstTEDG5cq5efY3e_5eiiFaXtBJqSyFqu9BLSAvJmyo2DCA@mail.gmail.com>
References: <DM2PR0201MB08626B6269801778CFBEDBCFA5430@DM2PR0201MB0862.namprd02.prod.outlook.com>
 <CABghstTEDG5cq5efY3e_5eiiFaXtBJqSyFqu9BLSAvJmyo2DCA@mail.gmail.com>
Message-ID: <800b7369-554d-2c64-ea70-771d7afe7d18@statistik.tu-dortmund.de>



On 03.07.2018 00:13, Ben Bolker wrote:
> I got something similar.  I have a few thoughts:
> 
> (1) you should use  "if (require(citrus)) { ... }" in your examples;
> "Suggests" and "Enhances" packages are supposed to be *optional*, i.e.
> examples and tests should be able to run even if they're not installed
> (I would imagine that "Writing R Extensions" and/or the CRAN policies
> say something to this effect, but I haven't checked)
> (2) I can imagine that win-builder is looking for *binary* versions of
> the package (I'm not sure why this would be the default, and why it
> couldn't fall back and install from source, but that would be my
> guess); do you have binary versions, for the appropriate major R
> version (i.e. 3.5 for release, maybe?? 3.4 for oldrelease??), in your
> repo. (In my example, I don't; I was going to try compiling a binary
> version and putting it in the repo. This is a bit of a chicken-and-egg
> problem if you can't get a binary built because the examples fail, but
> if you implement step #1 I think it should work).
> 
> My point (3) is a follow-on question that I would love an answer to,
> or hints. I get a *message* similar to the one found in throm's
> win-builder logs, i.e. "Suggests or Enhances not in mainstream
> repositories: ..." - but since it's not labeled as a WARNING or an
> ERROR (or even a NOTE), I am wondering what its status is in the
> CRAN-maintainers' eyes - is it a CRAN-submission-blocking problem? Or
> a "we'd rather you didn't do that but we'll accept it this time?" or
> ...

Ideally packages are in mainstream repositories.
For waek dependencies such as Suggests or Enhances, and if the package 
is in some repository, you can declare it via the 
Additional_Repositories field.
Finally, if not even in a repository, explain in the Descripton field 
how to get it.

Best,
Uwe Ligges

> 
>     I'm not asking anyone (except possibly CRAN maintainers) to speak
> for the CRAN maintainers, but if anyone has any experience or guesses
> (or pointers to parts of the CRAN policies/Writing R Extensions
> document that I overlooked) I'd appreciate hearing about it.
> 
>    cheers
>       Ben Bolker
> On Mon, Jul 2, 2018 at 5:28 PM Throm, Allison <throm at wustl.edu> wrote:
>>
>> Hi all,
>>
>>
>> I'm trying to submit a package to the CRAN that further examines results from the "citrus" package as done for an accepted publication (available on Github: <https://github.com/nolanlab/citrus>).
>>
>>
>> I do not get any errors when using devtools::check() on my Mac, which already has the citrus package installed. However, I am getting errors during the CRAN submission check <https://win-builder.r-project.org/incoming_pretest/mineCitrus_1.0.0_20180702_172340/>.
>>
>>
>> I've tried searching Stack Overload and other CRAN packages with Additional_repositories fields, but none of the applicable solutions have worked. I'm pretty sure it's the loading of the citrus package that is causing the error and have added the Additional_repositories field with a link the package on Github, but still haven't been able to resolve the issue. There are very specific installation instructions for the package <https://github.com/nolanlab/citrus/wiki/Installing-Citrus>, which may be contributing to issues.
>>
>>
>> How should I properly specify dependencies on the nolanlab/citrus<https://github.com/nolanlab/citrus> Github package for my CRAN package?
>>
>>
>> Thank you in advance,
>>
>> Allison
>>
>>
>>
>>
>>
>>
>>          [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From bbolker @ending from gm@il@com  Tue Jul  3 00:41:19 2018
From: bbolker @ending from gm@il@com (Ben Bolker)
Date: Mon, 2 Jul 2018 18:41:19 -0400
Subject: [R-pkg-devel] 
 Errors from Suggests or Enhances not in mainstream repositories
In-Reply-To: <800b7369-554d-2c64-ea70-771d7afe7d18@statistik.tu-dortmund.de>
References: <DM2PR0201MB08626B6269801778CFBEDBCFA5430@DM2PR0201MB0862.namprd02.prod.outlook.com>
 <CABghstTEDG5cq5efY3e_5eiiFaXtBJqSyFqu9BLSAvJmyo2DCA@mail.gmail.com>
 <800b7369-554d-2c64-ea70-771d7afe7d18@statistik.tu-dortmund.de>
Message-ID: <CABghstQY0hJYe06UFvEJKpb_V36Bzt9mpvbKvj9j4UK9U+GSxw@mail.gmail.com>

Thanks, Uwe.  Responses inline.

On Mon, Jul 2, 2018 at 6:23 PM Uwe Ligges
<ligges at statistik.tu-dortmund.de> wrote:
>
>
>
> On 03.07.2018 00:13, Ben Bolker wrote:
> > I got something similar.  I have a few thoughts:
> >
> > (1) you should use  "if (require(citrus)) { ... }" in your examples;
> > "Suggests" and "Enhances" packages are supposed to be *optional*, i.e.
> > examples and tests should be able to run even if they're not installed
> > (I would imagine that "Writing R Extensions" and/or the CRAN policies
> > say something to this effect, but I haven't checked)
> > (2) I can imagine that win-builder is looking for *binary* versions of
> > the package (I'm not sure why this would be the default, and why it
> > couldn't fall back and install from source, but that would be my
> > guess); do you have binary versions, for the appropriate major R
> > version (i.e. 3.5 for release, maybe?? 3.4 for oldrelease??), in your
> > repo. (In my example, I don't; I was going to try compiling a binary
> > version and putting it in the repo. This is a bit of a chicken-and-egg
> > problem if you can't get a binary built because the examples fail, but
> > if you implement step #1 I think it should work).
> >
> > My point (3) is a follow-on question that I would love an answer to,
> > or hints. I get a *message* similar to the one found in throm's
> > win-builder logs, i.e. "Suggests or Enhances not in mainstream
> > repositories: ..." - but since it's not labeled as a WARNING or an
> > ERROR (or even a NOTE), I am wondering what its status is in the
> > CRAN-maintainers' eyes - is it a CRAN-submission-blocking problem? Or
> > a "we'd rather you didn't do that but we'll accept it this time?" or
> > ...
>
Uwe> Ideally packages are in mainstream repositories.

  Agreed.

Uwe> For waek dependencies such as Suggests or Enhances, and if the package
Uwe> is in some repository, you can declare it via the
Uwe> Additional_Repositories field.

  I did that (so did the OP). Speaking for myself (since I'm not sure
of the OP's exact situation), I know that the source tarball is in my
repo, and it gets installed successfully on Linux and MacOS. On
Windows (win-builder), the package is not detected in the repo. I can
try adding a Windows binary to the repo to see if that solves the
problem.

  FWIW, one of the off-CRAN packages I Suggest: is INLA (which is
beyond my control). The other is glmmADMB, which includes a binary
blob and can't go on CRAN.  I would like to offer some support for
these packages, if at all possible.

I just don't know if the message about the package *not* being found
in the repo suggested by Additional_repositories: will be
CRAN-blocking (and would prefer not to waste everyone's time by
submitting if it is ...)

Uwe> Finally, if not even in a repository, explain in the Descripton field
Uwe> how to get it.
>
> Best,
> Uwe Ligges
>
> >
> >     I'm not asking anyone (except possibly CRAN maintainers) to speak
> > for the CRAN maintainers, but if anyone has any experience or guesses
> > (or pointers to parts of the CRAN policies/Writing R Extensions
> > document that I overlooked) I'd appreciate hearing about it.
> >
> >    cheers
> >       Ben Bolker
> > On Mon, Jul 2, 2018 at 5:28 PM Throm, Allison <throm at wustl.edu> wrote:
> >>
> >> Hi all,
> >>
> >>
> >> I'm trying to submit a package to the CRAN that further examines results from the "citrus" package as done for an accepted publication (available on Github: <https://github.com/nolanlab/citrus>).
> >>
> >>
> >> I do not get any errors when using devtools::check() on my Mac, which already has the citrus package installed. However, I am getting errors during the CRAN submission check <https://win-builder.r-project.org/incoming_pretest/mineCitrus_1.0.0_20180702_172340/>.
> >>
> >>
> >> I've tried searching Stack Overload and other CRAN packages with Additional_repositories fields, but none of the applicable solutions have worked. I'm pretty sure it's the loading of the citrus package that is causing the error and have added the Additional_repositories field with a link the package on Github, but still haven't been able to resolve the issue. There are very specific installation instructions for the package <https://github.com/nolanlab/citrus/wiki/Installing-Citrus>, which may be contributing to issues.
> >>
> >>
> >> How should I properly specify dependencies on the nolanlab/citrus<https://github.com/nolanlab/citrus> Github package for my CRAN package?
> >>
> >>
> >> Thank you in advance,
> >>
> >> Allison
> >>
> >>
> >>
> >>
> >>
> >>
> >>          [[alternative HTML version deleted]]
> >>
> >> ______________________________________________
> >> R-package-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >


From ligge@ @ending from @t@ti@tik@tu-dortmund@de  Tue Jul  3 01:02:29 2018
From: ligge@ @ending from @t@ti@tik@tu-dortmund@de (Uwe Ligges)
Date: Tue, 3 Jul 2018 01:02:29 +0200
Subject: [R-pkg-devel] 
 Errors from Suggests or Enhances not in mainstream repositories
In-Reply-To: <CABghstQY0hJYe06UFvEJKpb_V36Bzt9mpvbKvj9j4UK9U+GSxw@mail.gmail.com>
References: <DM2PR0201MB08626B6269801778CFBEDBCFA5430@DM2PR0201MB0862.namprd02.prod.outlook.com>
 <CABghstTEDG5cq5efY3e_5eiiFaXtBJqSyFqu9BLSAvJmyo2DCA@mail.gmail.com>
 <800b7369-554d-2c64-ea70-771d7afe7d18@statistik.tu-dortmund.de>
 <CABghstQY0hJYe06UFvEJKpb_V36Bzt9mpvbKvj9j4UK9U+GSxw@mail.gmail.com>
Message-ID: <f010f6d4-8e44-337e-e5eb-15054b61c575@statistik.tu-dortmund.de>



On 03.07.2018 00:41, Ben Bolker wrote:
> Thanks, Uwe.  Responses inline.
> 
> On Mon, Jul 2, 2018 at 6:23 PM Uwe Ligges
> <ligges at statistik.tu-dortmund.de> wrote:
>>
>>
>>
>> On 03.07.2018 00:13, Ben Bolker wrote:
>>> I got something similar.  I have a few thoughts:
>>>
>>> (1) you should use  "if (require(citrus)) { ... }" in your examples;
>>> "Suggests" and "Enhances" packages are supposed to be *optional*, i.e.
>>> examples and tests should be able to run even if they're not installed
>>> (I would imagine that "Writing R Extensions" and/or the CRAN policies
>>> say something to this effect, but I haven't checked)
>>> (2) I can imagine that win-builder is looking for *binary* versions of
>>> the package (I'm not sure why this would be the default, and why it
>>> couldn't fall back and install from source, but that would be my
>>> guess); do you have binary versions, for the appropriate major R
>>> version (i.e. 3.5 for release, maybe?? 3.4 for oldrelease??), in your
>>> repo. (In my example, I don't; I was going to try compiling a binary
>>> version and putting it in the repo. This is a bit of a chicken-and-egg
>>> problem if you can't get a binary built because the examples fail, but
>>> if you implement step #1 I think it should work).
>>>
>>> My point (3) is a follow-on question that I would love an answer to,
>>> or hints. I get a *message* similar to the one found in throm's
>>> win-builder logs, i.e. "Suggests or Enhances not in mainstream
>>> repositories: ..." - but since it's not labeled as a WARNING or an
>>> ERROR (or even a NOTE), I am wondering what its status is in the
>>> CRAN-maintainers' eyes - is it a CRAN-submission-blocking problem? Or
>>> a "we'd rather you didn't do that but we'll accept it this time?" or
>>> ...
>>
> Uwe> Ideally packages are in mainstream repositories.
> 
>    Agreed.
> 
> Uwe> For waek dependencies such as Suggests or Enhances, and if the package
> Uwe> is in some repository, you can declare it via the
> Uwe> Additional_Repositories field.
> 
>    I did that (so did the OP). Speaking for myself (since I'm not sure
> of the OP's exact situation), I know that the source tarball is in my
> repo, and it gets installed successfully on Linux and MacOS. On
> Windows (win-builder), the package is not detected in the repo. I can
> try adding a Windows binary to the repo to see if that solves the
> problem.

Ah, no, it won't be installed. We only isntall from mainstream repositories.



>    FWIW, one of the off-CRAN packages I Suggest: is INLA (which is
> beyond my control). The other is glmmADMB, which includes a binary
> blob and can't go on CRAN.  I would like to offer some support for
> these packages, if at all possible.
> 
> I just don't know if the message about the package *not* being found
> in the repo suggested by Additional_repositories: will be
> CRAN-blocking (and would prefer not to waste everyone's time by
> submitting if it is ...)

If it is correctly declared, it is not blocking.

Best,
Uwe

> Uwe> Finally, if not even in a repository, explain in the Descripton field
> Uwe> how to get it.
>>
>> Best,
>> Uwe Ligges
>>
>>>
>>>      I'm not asking anyone (except possibly CRAN maintainers) to speak
>>> for the CRAN maintainers, but if anyone has any experience or guesses
>>> (or pointers to parts of the CRAN policies/Writing R Extensions
>>> document that I overlooked) I'd appreciate hearing about it.
>>>
>>>     cheers
>>>        Ben Bolker
>>> On Mon, Jul 2, 2018 at 5:28 PM Throm, Allison <throm at wustl.edu> wrote:
>>>>
>>>> Hi all,
>>>>
>>>>
>>>> I'm trying to submit a package to the CRAN that further examines results from the "citrus" package as done for an accepted publication (available on Github: <https://github.com/nolanlab/citrus>).
>>>>
>>>>
>>>> I do not get any errors when using devtools::check() on my Mac, which already has the citrus package installed. However, I am getting errors during the CRAN submission check <https://win-builder.r-project.org/incoming_pretest/mineCitrus_1.0.0_20180702_172340/>.
>>>>
>>>>
>>>> I've tried searching Stack Overload and other CRAN packages with Additional_repositories fields, but none of the applicable solutions have worked. I'm pretty sure it's the loading of the citrus package that is causing the error and have added the Additional_repositories field with a link the package on Github, but still haven't been able to resolve the issue. There are very specific installation instructions for the package <https://github.com/nolanlab/citrus/wiki/Installing-Citrus>, which may be contributing to issues.
>>>>
>>>>
>>>> How should I properly specify dependencies on the nolanlab/citrus<https://github.com/nolanlab/citrus> Github package for my CRAN package?
>>>>
>>>>
>>>> Thank you in advance,
>>>>
>>>> Allison
>>>>
>>>>
>>>>
>>>>
>>>>
>>>>
>>>>           [[alternative HTML version deleted]]
>>>>
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>


From murdoch@dunc@n @ending from gm@il@com  Tue Jul  3 12:52:13 2018
From: murdoch@dunc@n @ending from gm@il@com (Duncan Murdoch)
Date: Tue, 3 Jul 2018 06:52:13 -0400
Subject: [R-pkg-devel] 
 Errors from Suggests or Enhances not in mainstream repositories
In-Reply-To: <DM2PR0201MB08626B6269801778CFBEDBCFA5430@DM2PR0201MB0862.namprd02.prod.outlook.com>
References: <DM2PR0201MB08626B6269801778CFBEDBCFA5430@DM2PR0201MB0862.namprd02.prod.outlook.com>
Message-ID: <2d5cdb75-7619-1319-9dea-ffcce10271d1@gmail.com>

On 02/07/2018 4:18 PM, Throm, Allison wrote:
> Hi all,
> 
> 
> I'm trying to submit a package to the CRAN that further examines results from the "citrus" package as done for an accepted publication (available on Github: <https://github.com/nolanlab/citrus>).
> 
> 
> I do not get any errors when using devtools::check() on my Mac, which already has the citrus package installed. However, I am getting errors during the CRAN submission check <https://win-builder.r-project.org/incoming_pretest/mineCitrus_1.0.0_20180702_172340/>.
> 
> 
> I've tried searching Stack Overload and other CRAN packages with Additional_repositories fields, but none of the applicable solutions have worked. I'm pretty sure it's the loading of the citrus package that is causing the error and have added the Additional_repositories field with a link the package on Github, but still haven't been able to resolve the issue. There are very specific installation instructions for the package <https://github.com/nolanlab/citrus/wiki/Installing-Citrus>, which may be contributing to issues.
> 
> 
> How should I properly specify dependencies on the nolanlab/citrus<https://github.com/nolanlab/citrus> Github package for my CRAN package?

I don't think you posted your DESCRIPTION file, but the likely problem 
based on the check log is that your "Additional_repositories" field 
points to something that CRAN doesn't recognize as an R package repository.

Probably the easiest way to create the right structure is to use the 
drat package; see  https://github.com/eddelbuettel/drat  for instructions.

Duncan Murdoch


From murdoch@dunc@n @ending from gm@il@com  Tue Jul  3 12:57:44 2018
From: murdoch@dunc@n @ending from gm@il@com (Duncan Murdoch)
Date: Tue, 3 Jul 2018 06:57:44 -0400
Subject: [R-pkg-devel] 
 Errors from Suggests or Enhances not in mainstream repositories
In-Reply-To: <CABghstTEDG5cq5efY3e_5eiiFaXtBJqSyFqu9BLSAvJmyo2DCA@mail.gmail.com>
References: <DM2PR0201MB08626B6269801778CFBEDBCFA5430@DM2PR0201MB0862.namprd02.prod.outlook.com>
 <CABghstTEDG5cq5efY3e_5eiiFaXtBJqSyFqu9BLSAvJmyo2DCA@mail.gmail.com>
Message-ID: <ddb512d3-e03c-0d15-d115-f20cfd25c022@gmail.com>

On 02/07/2018 6:13 PM, Ben Bolker wrote:
> I got something similar.  I have a few thoughts:
> 
> (1) you should use  "if (require(citrus)) { ... }" in your examples;
> "Suggests" and "Enhances" packages are supposed to be *optional*, i.e.
> examples and tests should be able to run even if they're not installed

Nowadays 'if (requireNamespace("citrus")) { ... }' would be preferred in 
tests and examples, along with a 'citrus::' prefix on the objects from 
that package that are needed.  This has milder side effects than 
`require()`.

Duncan Murdoch


From h@wickh@m @ending from gm@il@com  Tue Jul  3 15:27:22 2018
From: h@wickh@m @ending from gm@il@com (Hadley Wickham)
Date: Tue, 3 Jul 2018 08:27:22 -0500
Subject: [R-pkg-devel] 
 Errors from Suggests or Enhances not in mainstream repositories
In-Reply-To: <ddb512d3-e03c-0d15-d115-f20cfd25c022@gmail.com>
References: <DM2PR0201MB08626B6269801778CFBEDBCFA5430@DM2PR0201MB0862.namprd02.prod.outlook.com>
 <CABghstTEDG5cq5efY3e_5eiiFaXtBJqSyFqu9BLSAvJmyo2DCA@mail.gmail.com>
 <ddb512d3-e03c-0d15-d115-f20cfd25c022@gmail.com>
Message-ID: <CABdHhvFuPT2fyZpZk7uCDDQxQ_mWyJZtDr68GQcKRWB3KYwjXA@mail.gmail.com>

On Tue, Jul 3, 2018 at 5:57 AM, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> On 02/07/2018 6:13 PM, Ben Bolker wrote:
>>
>> I got something similar.  I have a few thoughts:
>>
>> (1) you should use  "if (require(citrus)) { ... }" in your examples;
>> "Suggests" and "Enhances" packages are supposed to be *optional*, i.e.
>> examples and tests should be able to run even if they're not installed
>
>
> Nowadays 'if (requireNamespace("citrus")) { ... }' would be preferred in
> tests and examples, along with a 'citrus::' prefix on the objects from that
> package that are needed.  This has milder side effects than `require()`.

And requireNamespace("citrus", quietly = TRUE) is even slightly better
since it avoids one more side-effect ;)

Hadley

-- 
http://hadley.nz


From d@vidhughjone@ @ending from gm@il@com  Wed Jul  4 16:00:36 2018
From: d@vidhughjone@ @ending from gm@il@com (David Hugh-Jones)
Date: Wed, 4 Jul 2018 15:00:36 +0100
Subject: [R-pkg-devel] Weird error on CRAN linux check
Message-ID: <CAARY7kiVSKGYwzLzPx1M456HEKQwHnuyBo6R9S66Th+JUodsVg@mail.gmail.com>

Hi all,

The following shows an error for my package:
https://www.r-project.org/nosvn/R.check/r-release-linux-x86_64/huxtable-00check.html

Here's an excerpt:

> ### ** Examples
>
>
> ht <- huxtable(a = 1:3, b = 1:3)
> align(ht) <- 'right'
Error in UseMethod("align<-") :
  no applicable method for 'align<-' applied to an object of class
"c('huxtable', 'data.frame')"
Calls: align<-


The error didn't show up on win-builder, travis, appveyor or my own
computer (a mac). The package defines an `align<-.huxtable` method which is
correctly loaded on my computer, and the NAMESPACE file contains these
lines:

S3method("align<-",huxtable)
export("align<-")
export("align<-.huxtable")

Has anyone got any ideas?

David

	[[alternative HTML version deleted]]


From h@wickh@m @ending from gm@il@com  Wed Jul  4 16:22:48 2018
From: h@wickh@m @ending from gm@il@com (Hadley Wickham)
Date: Wed, 4 Jul 2018 09:22:48 -0500
Subject: [R-pkg-devel] Weird error on CRAN linux check
In-Reply-To: <CAARY7kiVSKGYwzLzPx1M456HEKQwHnuyBo6R9S66Th+JUodsVg@mail.gmail.com>
References: <CAARY7kiVSKGYwzLzPx1M456HEKQwHnuyBo6R9S66Th+JUodsVg@mail.gmail.com>
Message-ID: <CABdHhvE6dvb3x_8K2O-GzB4Pt7+xmU3nv1zZNv0uV62trSWkUA@mail.gmail.com>

I don't think it's related to the error, but you shouldn't be exporting this:

export("align<-.huxtable")

You should generally only export the method.

Hadley

On Wed, Jul 4, 2018 at 9:00 AM, David Hugh-Jones
<davidhughjones at gmail.com> wrote:
> Hi all,
>
> The following shows an error for my package:
> https://www.r-project.org/nosvn/R.check/r-release-linux-x86_64/huxtable-00check.html
>
> Here's an excerpt:
>
>> ### ** Examples
>>
>>
>> ht <- huxtable(a = 1:3, b = 1:3)
>> align(ht) <- 'right'
> Error in UseMethod("align<-") :
>   no applicable method for 'align<-' applied to an object of class
> "c('huxtable', 'data.frame')"
> Calls: align<-
>
>
> The error didn't show up on win-builder, travis, appveyor or my own
> computer (a mac). The package defines an `align<-.huxtable` method which is
> correctly loaded on my computer, and the NAMESPACE file contains these
> lines:
>
> S3method("align<-",huxtable)
> export("align<-")
> export("align<-.huxtable")
>
> Has anyone got any ideas?
>
> David
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel



-- 
http://hadley.nz


From Jori@@Mey@ @ending from ugent@be  Wed Jul  4 17:12:04 2018
From: Jori@@Mey@ @ending from ugent@be (Joris Meys)
Date: Wed, 4 Jul 2018 17:12:04 +0200
Subject: [R-pkg-devel] Weird error on CRAN linux check
In-Reply-To: <CABdHhvE6dvb3x_8K2O-GzB4Pt7+xmU3nv1zZNv0uV62trSWkUA@mail.gmail.com>
References: <CAARY7kiVSKGYwzLzPx1M456HEKQwHnuyBo6R9S66Th+JUodsVg@mail.gmail.com>
 <CABdHhvE6dvb3x_8K2O-GzB4Pt7+xmU3nv1zZNv0uV62trSWkUA@mail.gmail.com>
Message-ID: <CAO1zAVZ71v93G_rrRy6W_mMX1M1=36VZGQTB1Pv+xCVZ+sxykw@mail.gmail.com>

On Wed, Jul 4, 2018 at 4:22 PM, Hadley Wickham <h.wickham at gmail.com> wrote:

> I don't think it's related to the error, but you shouldn't be exporting
> this:
>
> export("align<-.huxtable")
>
> You should generally only export the method.
>

Hadley means to say that you should generally only export the generic, not
the individual methods.
More information here:

https://cran.r-project.org/doc/manuals/R-exts.html#Registering-S3-methods

Cheers
Joris
-- 
Joris Meys
Statistical consultant

Department of Data Analysis and Mathematical Modelling
Ghent University
Coupure Links 653, B-9000 Gent (Belgium)
<https://maps.google.com/?q=Coupure+links+653,%C2%A0B-9000+Gent,%C2%A0Belgium&entry=gmail&source=g>

tel: +32 (0)9 264 61 79
-----------
Biowiskundedagen 2017-2018
http://www.biowiskundedagen.ugent.be/

-------------------------------
Disclaimer : http://helpdesk.ugent.be/e-maildisclaimer.php

	[[alternative HTML version deleted]]


From d@vidhughjone@ @ending from gm@il@com  Wed Jul  4 20:12:36 2018
From: d@vidhughjone@ @ending from gm@il@com (David Hugh-Jones)
Date: Wed, 4 Jul 2018 19:12:36 +0100
Subject: [R-pkg-devel] Weird error on CRAN linux check
In-Reply-To: <CAO1zAVZ71v93G_rrRy6W_mMX1M1=36VZGQTB1Pv+xCVZ+sxykw@mail.gmail.com>
References: <CAARY7kiVSKGYwzLzPx1M456HEKQwHnuyBo6R9S66Th+JUodsVg@mail.gmail.com>
 <CABdHhvE6dvb3x_8K2O-GzB4Pt7+xmU3nv1zZNv0uV62trSWkUA@mail.gmail.com>
 <CAO1zAVZ71v93G_rrRy6W_mMX1M1=36VZGQTB1Pv+xCVZ+sxykw@mail.gmail.com>
Message-ID: <CAARY7kizG58Yf6fo3dqKZLvQpv2g6P7Y1CBuAmx4jXP175U2EQ@mail.gmail.com>

I figured that. Actually I just tried this. I now get the interesting
result that all calls to a generic fail with the UseMethod error...?

On Wed, 4 Jul 2018 at 16:12, Joris Meys <Joris.Meys at ugent.be> wrote:

> On Wed, Jul 4, 2018 at 4:22 PM, Hadley Wickham <h.wickham at gmail.com>
> wrote:
>
>> I don't think it's related to the error, but you shouldn't be exporting
>> this:
>>
>> export("align<-.huxtable")
>>
>> You should generally only export the method.
>>
>
> Hadley means to say that you should generally only export the generic, not
> the individual methods.
> More information here:
>
> https://cran.r-project.org/doc/manuals/R-exts.html#Registering-S3-methods
>
> Cheers
> Joris
> --
> Joris Meys
> Statistical consultant
>
> Department of Data Analysis and Mathematical Modelling
> Ghent University
> Coupure Links 653, B-9000 Gent (Belgium)
>
> <https://maps.google.com/?q=Coupure+links+653,%C2%A0B-9000+Gent,%C2%A0Belgium&entry=gmail&source=g>
>
> tel: +32 (0)9 264 61 79
> -----------
> Biowiskundedagen 2017-2018
> http://www.biowiskundedagen.ugent.be/
>
> -------------------------------
> Disclaimer : http://helpdesk.ugent.be/e-maildisclaimer.php
>
-- 
Sent from Gmail Mobile

	[[alternative HTML version deleted]]


From Jori@@Mey@ @ending from ugent@be  Wed Jul  4 21:23:57 2018
From: Jori@@Mey@ @ending from ugent@be (Joris Meys)
Date: Wed, 4 Jul 2018 21:23:57 +0200
Subject: [R-pkg-devel] Weird error on CRAN linux check
In-Reply-To: <CAARY7kizG58Yf6fo3dqKZLvQpv2g6P7Y1CBuAmx4jXP175U2EQ@mail.gmail.com>
References: <CAARY7kiVSKGYwzLzPx1M456HEKQwHnuyBo6R9S66Th+JUodsVg@mail.gmail.com>
 <CABdHhvE6dvb3x_8K2O-GzB4Pt7+xmU3nv1zZNv0uV62trSWkUA@mail.gmail.com>
 <CAO1zAVZ71v93G_rrRy6W_mMX1M1=36VZGQTB1Pv+xCVZ+sxykw@mail.gmail.com>
 <CAARY7kizG58Yf6fo3dqKZLvQpv2g6P7Y1CBuAmx4jXP175U2EQ@mail.gmail.com>
Message-ID: <CAO1zAVYa4_757hao0tBdtcpfgVxRfnhtFfc4HboFs92j3bRt1g@mail.gmail.com>

I just took a look at your repo, and two remarks:

- you use roxygen, and used both @export and @S3method. The latter one is
deprecated, so you should use only @export, or @method (see eg Hadley's
answer here : https://github.com/klutometis/roxygen/issues/741 )

- You're using some code in attributes.R that should generate all the
getters and setters automatically, but it looks as if these objects aren't
generated in the right order/environment/... to be registered correctly.

The part where I get confused, is the following. After installing:

> ht <- huxtable(a = 1:3, b = 1:3)
> align(ht)
Error in UseMethod("align") :
  no applicable method for 'align' applied to an object of class
"c('huxtable', 'data.frame')"
> methods(align)
[1] align.huxtable*
see '?methods' for accessing help and source code
> getFromNamespace("align.huxtable","huxtable")
function (ht)
attr(ht, "align")
<bytecode: 0x0000000015f8bb88>
<environment: 0x0000000016840c18>

The last line is what bothers me. That should be
<environment:namespace:huxtable>, like this:

> environment(huxtable)
<environment: namespace:huxtable>

So you generate the functions, they somehow get registered but they get
created in the wrong environment as far as I can tell. That's where I would
start looking.

CHeers
Joris


On Wed, Jul 4, 2018 at 8:12 PM, David Hugh-Jones <davidhughjones at gmail.com>
wrote:

> I figured that. Actually I just tried this. I now get the interesting
> result that all calls to a generic fail with the UseMethod error...?
>
> On Wed, 4 Jul 2018 at 16:12, Joris Meys <Joris.Meys at ugent.be> wrote:
>
>> On Wed, Jul 4, 2018 at 4:22 PM, Hadley Wickham <h.wickham at gmail.com>
>> wrote:
>>
>>> I don't think it's related to the error, but you shouldn't be exporting
>>> this:
>>>
>>> export("align<-.huxtable")
>>>
>>> You should generally only export the method.
>>>
>>
>> Hadley means to say that you should generally only export the generic,
>> not the individual methods.
>> More information here:
>>
>> https://cran.r-project.org/doc/manuals/R-exts.html#Registering-S3-methods
>>
>> Cheers
>> Joris
>> --
>> Joris Meys
>> Statistical consultant
>>
>> Department of Data Analysis and Mathematical Modelling
>> Ghent University
>> Coupure Links 653, B-9000 Gent (Belgium)
>>
>> <https://maps.google.com/?q=Coupure+links+653,%C2%A0B-9000+Gent,%C2%A0Belgium&entry=gmail&source=g>
>>
>> tel: +32 (0)9 264 61 79
>> -----------
>> Biowiskundedagen 2017-2018
>> http://www.biowiskundedagen.ugent.be/
>>
>> -------------------------------
>> Disclaimer : http://helpdesk.ugent.be/e-maildisclaimer.php
>>
> --
> Sent from Gmail Mobile
>



-- 
Joris Meys
Statistical consultant

Department of Data Analysis and Mathematical Modelling
Ghent University
Coupure Links 653, B-9000 Gent (Belgium)
<https://maps.google.com/?q=Coupure+links+653,%C2%A0B-9000+Gent,%C2%A0Belgium&entry=gmail&source=g>

tel: +32 (0)9 264 61 79
-----------
Biowiskundedagen 2017-2018
http://www.biowiskundedagen.ugent.be/

-------------------------------
Disclaimer : http://helpdesk.ugent.be/e-maildisclaimer.php

	[[alternative HTML version deleted]]


From murdoch@dunc@n @ending from gm@il@com  Wed Jul  4 21:31:46 2018
From: murdoch@dunc@n @ending from gm@il@com (Duncan Murdoch)
Date: Wed, 4 Jul 2018 15:31:46 -0400
Subject: [R-pkg-devel] Weird error on CRAN linux check
In-Reply-To: <CAO1zAVYa4_757hao0tBdtcpfgVxRfnhtFfc4HboFs92j3bRt1g@mail.gmail.com>
References: <CAARY7kiVSKGYwzLzPx1M456HEKQwHnuyBo6R9S66Th+JUodsVg@mail.gmail.com>
 <CABdHhvE6dvb3x_8K2O-GzB4Pt7+xmU3nv1zZNv0uV62trSWkUA@mail.gmail.com>
 <CAO1zAVZ71v93G_rrRy6W_mMX1M1=36VZGQTB1Pv+xCVZ+sxykw@mail.gmail.com>
 <CAARY7kizG58Yf6fo3dqKZLvQpv2g6P7Y1CBuAmx4jXP175U2EQ@mail.gmail.com>
 <CAO1zAVYa4_757hao0tBdtcpfgVxRfnhtFfc4HboFs92j3bRt1g@mail.gmail.com>
Message-ID: <a719f423-eecc-4b94-d04d-e7a1d953a987@gmail.com>

On 04/07/2018 3:23 PM, Joris Meys wrote:
> I just took a look at your repo, and two remarks:
> 
> - you use roxygen, and used both @export and @S3method. The latter one is
> deprecated, so you should use only @export, or @method (see eg Hadley's
> answer here : https://github.com/klutometis/roxygen/issues/741 )
> 
> - You're using some code in attributes.R that should generate all the
> getters and setters automatically, but it looks as if these objects aren't
> generated in the right order/environment/... to be registered correctly.
> 
> The part where I get confused, is the following. After installing:
> 
>> ht <- huxtable(a = 1:3, b = 1:3)
>> align(ht)
> Error in UseMethod("align") :
>    no applicable method for 'align' applied to an object of class
> "c('huxtable', 'data.frame')"
>> methods(align)
> [1] align.huxtable*
> see '?methods' for accessing help and source code
>> getFromNamespace("align.huxtable","huxtable")
> function (ht)
> attr(ht, "align")
> <bytecode: 0x0000000015f8bb88>
> <environment: 0x0000000016840c18>
> 
> The last line is what bothers me. That should be
> <environment:namespace:huxtable>, like this:
> 
>> environment(huxtable)
> <environment: namespace:huxtable>
> 
> So you generate the functions, they somehow get registered but they get
> created in the wrong environment as far as I can tell. That's where I would
> start looking.
> 

That shouldn't matter.  That function was created in a local environment 
whose parent is <environment: namespace:huxtable> (probably by the 
huxtable:::make_setter_getters function, but I didn't check).

Duncan Murdoch



> CHeers
> Joris
> 
> 
> On Wed, Jul 4, 2018 at 8:12 PM, David Hugh-Jones <davidhughjones at gmail.com>
> wrote:
> 
>> I figured that. Actually I just tried this. I now get the interesting
>> result that all calls to a generic fail with the UseMethod error...?
>>
>> On Wed, 4 Jul 2018 at 16:12, Joris Meys <Joris.Meys at ugent.be> wrote:
>>
>>> On Wed, Jul 4, 2018 at 4:22 PM, Hadley Wickham <h.wickham at gmail.com>
>>> wrote:
>>>
>>>> I don't think it's related to the error, but you shouldn't be exporting
>>>> this:
>>>>
>>>> export("align<-.huxtable")
>>>>
>>>> You should generally only export the method.
>>>>
>>>
>>> Hadley means to say that you should generally only export the generic,
>>> not the individual methods.
>>> More information here:
>>>
>>> https://cran.r-project.org/doc/manuals/R-exts.html#Registering-S3-methods
>>>
>>> Cheers
>>> Joris
>>> --
>>> Joris Meys
>>> Statistical consultant
>>>
>>> Department of Data Analysis and Mathematical Modelling
>>> Ghent University
>>> Coupure Links 653, B-9000 Gent (Belgium)
>>>
>>> <https://maps.google.com/?q=Coupure+links+653,%C2%A0B-9000+Gent,%C2%A0Belgium&entry=gmail&source=g>
>>>
>>> tel: +32 (0)9 264 61 79
>>> -----------
>>> Biowiskundedagen 2017-2018
>>> http://www.biowiskundedagen.ugent.be/
>>>
>>> -------------------------------
>>> Disclaimer : http://helpdesk.ugent.be/e-maildisclaimer.php
>>>
>> --
>> Sent from Gmail Mobile
>>
> 
> 
>


From i@uc@r86 @ending from gm@il@com  Wed Jul  4 21:44:18 2018
From: i@uc@r86 @ending from gm@il@com (=?UTF-8?B?ScOxYWtpIMOaY2Fy?=)
Date: Wed, 4 Jul 2018 21:44:18 +0200
Subject: [R-pkg-devel] Weird error on CRAN linux check
In-Reply-To: <a719f423-eecc-4b94-d04d-e7a1d953a987@gmail.com>
References: <CAARY7kiVSKGYwzLzPx1M456HEKQwHnuyBo6R9S66Th+JUodsVg@mail.gmail.com>
 <CABdHhvE6dvb3x_8K2O-GzB4Pt7+xmU3nv1zZNv0uV62trSWkUA@mail.gmail.com>
 <CAO1zAVZ71v93G_rrRy6W_mMX1M1=36VZGQTB1Pv+xCVZ+sxykw@mail.gmail.com>
 <CAARY7kizG58Yf6fo3dqKZLvQpv2g6P7Y1CBuAmx4jXP175U2EQ@mail.gmail.com>
 <CAO1zAVYa4_757hao0tBdtcpfgVxRfnhtFfc4HboFs92j3bRt1g@mail.gmail.com>
 <a719f423-eecc-4b94-d04d-e7a1d953a987@gmail.com>
Message-ID: <CALEXWq2=b0e6B2941KKWoWBmTOi6e-T=i0PEzuTVGwHc3+Mu+A@mail.gmail.com>

It seems Joris is right. The following patch seems to solve the issue for me:

diff --git a/R/attributes.R b/R/attributes.R
index e7f4ab9..18ebdab 100644
--- a/R/attributes.R
+++ b/R/attributes.R
@@ -156,6 +156,7 @@ make_getter_setters <- function(attr_name,
attr_type = c('cell', 'row', 'col', '
   ) # end switch

   lapply(names(funs), function (x) {
+    environment(funs[[x]]) <- getNamespace('huxtable')
     assign(x, funs[[x]], envir = getNamespace('huxtable'))
   })

I?aki
El mi?., 4 jul. 2018 a las 21:34, Duncan Murdoch
(<murdoch.duncan at gmail.com>) escribi?:
>
> On 04/07/2018 3:23 PM, Joris Meys wrote:
> > I just took a look at your repo, and two remarks:
> >
> > - you use roxygen, and used both @export and @S3method. The latter one is
> > deprecated, so you should use only @export, or @method (see eg Hadley's
> > answer here : https://github.com/klutometis/roxygen/issues/741 )
> >
> > - You're using some code in attributes.R that should generate all the
> > getters and setters automatically, but it looks as if these objects aren't
> > generated in the right order/environment/... to be registered correctly.
> >
> > The part where I get confused, is the following. After installing:
> >
> >> ht <- huxtable(a = 1:3, b = 1:3)
> >> align(ht)
> > Error in UseMethod("align") :
> >    no applicable method for 'align' applied to an object of class
> > "c('huxtable', 'data.frame')"
> >> methods(align)
> > [1] align.huxtable*
> > see '?methods' for accessing help and source code
> >> getFromNamespace("align.huxtable","huxtable")
> > function (ht)
> > attr(ht, "align")
> > <bytecode: 0x0000000015f8bb88>
> > <environment: 0x0000000016840c18>
> >
> > The last line is what bothers me. That should be
> > <environment:namespace:huxtable>, like this:
> >
> >> environment(huxtable)
> > <environment: namespace:huxtable>
> >
> > So you generate the functions, they somehow get registered but they get
> > created in the wrong environment as far as I can tell. That's where I would
> > start looking.
> >
>
> That shouldn't matter.  That function was created in a local environment
> whose parent is <environment: namespace:huxtable> (probably by the
> huxtable:::make_setter_getters function, but I didn't check).
>
> Duncan Murdoch
>
>
>
> > CHeers
> > Joris
> >
> >
> > On Wed, Jul 4, 2018 at 8:12 PM, David Hugh-Jones <davidhughjones at gmail.com>
> > wrote:
> >
> >> I figured that. Actually I just tried this. I now get the interesting
> >> result that all calls to a generic fail with the UseMethod error...?
> >>
> >> On Wed, 4 Jul 2018 at 16:12, Joris Meys <Joris.Meys at ugent.be> wrote:
> >>
> >>> On Wed, Jul 4, 2018 at 4:22 PM, Hadley Wickham <h.wickham at gmail.com>
> >>> wrote:
> >>>
> >>>> I don't think it's related to the error, but you shouldn't be exporting
> >>>> this:
> >>>>
> >>>> export("align<-.huxtable")
> >>>>
> >>>> You should generally only export the method.
> >>>>
> >>>
> >>> Hadley means to say that you should generally only export the generic,
> >>> not the individual methods.
> >>> More information here:
> >>>
> >>> https://cran.r-project.org/doc/manuals/R-exts.html#Registering-S3-methods
> >>>
> >>> Cheers
> >>> Joris
> >>> --
> >>> Joris Meys
> >>> Statistical consultant
> >>>
> >>> Department of Data Analysis and Mathematical Modelling
> >>> Ghent University
> >>> Coupure Links 653, B-9000 Gent (Belgium)
> >>>
> >>> <https://maps.google.com/?q=Coupure+links+653,%C2%A0B-9000+Gent,%C2%A0Belgium&entry=gmail&source=g>
> >>>
> >>> tel: +32 (0)9 264 61 79
> >>> -----------
> >>> Biowiskundedagen 2017-2018
> >>> http://www.biowiskundedagen.ugent.be/
> >>>
> >>> -------------------------------
> >>> Disclaimer : http://helpdesk.ugent.be/e-maildisclaimer.php
> >>>
> >> --
> >> Sent from Gmail Mobile
> >>
> >
> >
> >
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel



-- 
I?aki ?car
http://www.enchufa2.es
@Enchufa2


From Jori@@Mey@ @ending from ugent@be  Wed Jul  4 22:04:19 2018
From: Jori@@Mey@ @ending from ugent@be (Joris Meys)
Date: Wed, 4 Jul 2018 22:04:19 +0200
Subject: [R-pkg-devel] Weird error on CRAN linux check
In-Reply-To: <a719f423-eecc-4b94-d04d-e7a1d953a987@gmail.com>
References: <CAARY7kiVSKGYwzLzPx1M456HEKQwHnuyBo6R9S66Th+JUodsVg@mail.gmail.com>
 <CABdHhvE6dvb3x_8K2O-GzB4Pt7+xmU3nv1zZNv0uV62trSWkUA@mail.gmail.com>
 <CAO1zAVZ71v93G_rrRy6W_mMX1M1=36VZGQTB1Pv+xCVZ+sxykw@mail.gmail.com>
 <CAARY7kizG58Yf6fo3dqKZLvQpv2g6P7Y1CBuAmx4jXP175U2EQ@mail.gmail.com>
 <CAO1zAVYa4_757hao0tBdtcpfgVxRfnhtFfc4HboFs92j3bRt1g@mail.gmail.com>
 <a719f423-eecc-4b94-d04d-e7a1d953a987@gmail.com>
Message-ID: <CAO1zAVZej0De_uzynnLwvo8hKSo32N4Y_BJb-KL=TASvHUNNyg@mail.gmail.com>

On Wed, Jul 4, 2018 at 9:31 PM, Duncan Murdoch <murdoch.duncan at gmail.com>
wrote:

>
> That shouldn't matter.  That function was created in a local environment
> whose parent is <environment: namespace:huxtable> (probably by the
> huxtable:::make_setter_getters function, but I didn't check).
>
> Duncan Murdoch
>
> I would think it does matter. Methods are found on the search path, but
the environment where the methods are defined is not on the search path.
It's a child environment of the namespace, and hence cannot be reached from
either the global environment or the namespace if I understood it correctly.

Cheers
Joris


-- 
Joris Meys
Statistical consultant

Department of Data Analysis and Mathematical Modelling
Ghent University
Coupure Links 653, B-9000 Gent (Belgium)
<https://maps.google.com/?q=Coupure+links+653,%C2%A0B-9000+Gent,%C2%A0Belgium&entry=gmail&source=g>

tel: +32 (0)9 264 61 79
-----------
Biowiskundedagen 2017-2018
http://www.biowiskundedagen.ugent.be/

-------------------------------
Disclaimer : http://helpdesk.ugent.be/e-maildisclaimer.php

	[[alternative HTML version deleted]]


From murdoch@dunc@n @ending from gm@il@com  Wed Jul  4 22:37:13 2018
From: murdoch@dunc@n @ending from gm@il@com (Duncan Murdoch)
Date: Wed, 4 Jul 2018 16:37:13 -0400
Subject: [R-pkg-devel] Weird error on CRAN linux check
In-Reply-To: <CALEXWq2=b0e6B2941KKWoWBmTOi6e-T=i0PEzuTVGwHc3+Mu+A@mail.gmail.com>
References: <CAARY7kiVSKGYwzLzPx1M456HEKQwHnuyBo6R9S66Th+JUodsVg@mail.gmail.com>
 <CABdHhvE6dvb3x_8K2O-GzB4Pt7+xmU3nv1zZNv0uV62trSWkUA@mail.gmail.com>
 <CAO1zAVZ71v93G_rrRy6W_mMX1M1=36VZGQTB1Pv+xCVZ+sxykw@mail.gmail.com>
 <CAARY7kizG58Yf6fo3dqKZLvQpv2g6P7Y1CBuAmx4jXP175U2EQ@mail.gmail.com>
 <CAO1zAVYa4_757hao0tBdtcpfgVxRfnhtFfc4HboFs92j3bRt1g@mail.gmail.com>
 <a719f423-eecc-4b94-d04d-e7a1d953a987@gmail.com>
 <CALEXWq2=b0e6B2941KKWoWBmTOi6e-T=i0PEzuTVGwHc3+Mu+A@mail.gmail.com>
Message-ID: <510ed128-4cc9-6788-cb20-73147e702a8f@gmail.com>

On 04/07/2018 3:44 PM, I?aki ?car wrote:
> It seems Joris is right. The following patch seems to solve the issue for me:
> 
> diff --git a/R/attributes.R b/R/attributes.R
> index e7f4ab9..18ebdab 100644
> --- a/R/attributes.R
> +++ b/R/attributes.R
> @@ -156,6 +156,7 @@ make_getter_setters <- function(attr_name,
> attr_type = c('cell', 'row', 'col', '
>     ) # end switch
> 
>     lapply(names(funs), function (x) {
> +    environment(funs[[x]]) <- getNamespace('huxtable')
>       assign(x, funs[[x]], envir = getNamespace('huxtable'))
>     })
> 

That looks like a harmless change for huxtable::align.huxtable, but it 
might mess up other methods if they make use of the objects in that 
environment.

Duncan Murdoch


> I?aki
> El mi?., 4 jul. 2018 a las 21:34, Duncan Murdoch
> (<murdoch.duncan at gmail.com>) escribi?:
>>
>> On 04/07/2018 3:23 PM, Joris Meys wrote:
>>> I just took a look at your repo, and two remarks:
>>>
>>> - you use roxygen, and used both @export and @S3method. The latter one is
>>> deprecated, so you should use only @export, or @method (see eg Hadley's
>>> answer here : https://github.com/klutometis/roxygen/issues/741 )
>>>
>>> - You're using some code in attributes.R that should generate all the
>>> getters and setters automatically, but it looks as if these objects aren't
>>> generated in the right order/environment/... to be registered correctly.
>>>
>>> The part where I get confused, is the following. After installing:
>>>
>>>> ht <- huxtable(a = 1:3, b = 1:3)
>>>> align(ht)
>>> Error in UseMethod("align") :
>>>     no applicable method for 'align' applied to an object of class
>>> "c('huxtable', 'data.frame')"
>>>> methods(align)
>>> [1] align.huxtable*
>>> see '?methods' for accessing help and source code
>>>> getFromNamespace("align.huxtable","huxtable")
>>> function (ht)
>>> attr(ht, "align")
>>> <bytecode: 0x0000000015f8bb88>
>>> <environment: 0x0000000016840c18>
>>>
>>> The last line is what bothers me. That should be
>>> <environment:namespace:huxtable>, like this:
>>>
>>>> environment(huxtable)
>>> <environment: namespace:huxtable>
>>>
>>> So you generate the functions, they somehow get registered but they get
>>> created in the wrong environment as far as I can tell. That's where I would
>>> start looking.
>>>
>>
>> That shouldn't matter.  That function was created in a local environment
>> whose parent is <environment: namespace:huxtable> (probably by the
>> huxtable:::make_setter_getters function, but I didn't check).
>>
>> Duncan Murdoch
>>
>>
>>
>>> CHeers
>>> Joris
>>>
>>>
>>> On Wed, Jul 4, 2018 at 8:12 PM, David Hugh-Jones <davidhughjones at gmail.com>
>>> wrote:
>>>
>>>> I figured that. Actually I just tried this. I now get the interesting
>>>> result that all calls to a generic fail with the UseMethod error...?
>>>>
>>>> On Wed, 4 Jul 2018 at 16:12, Joris Meys <Joris.Meys at ugent.be> wrote:
>>>>
>>>>> On Wed, Jul 4, 2018 at 4:22 PM, Hadley Wickham <h.wickham at gmail.com>
>>>>> wrote:
>>>>>
>>>>>> I don't think it's related to the error, but you shouldn't be exporting
>>>>>> this:
>>>>>>
>>>>>> export("align<-.huxtable")
>>>>>>
>>>>>> You should generally only export the method.
>>>>>>
>>>>>
>>>>> Hadley means to say that you should generally only export the generic,
>>>>> not the individual methods.
>>>>> More information here:
>>>>>
>>>>> https://cran.r-project.org/doc/manuals/R-exts.html#Registering-S3-methods
>>>>>
>>>>> Cheers
>>>>> Joris
>>>>> --
>>>>> Joris Meys
>>>>> Statistical consultant
>>>>>
>>>>> Department of Data Analysis and Mathematical Modelling
>>>>> Ghent University
>>>>> Coupure Links 653, B-9000 Gent (Belgium)
>>>>>
>>>>> <https://maps.google.com/?q=Coupure+links+653,%C2%A0B-9000+Gent,%C2%A0Belgium&entry=gmail&source=g>
>>>>>
>>>>> tel: +32 (0)9 264 61 79
>>>>> -----------
>>>>> Biowiskundedagen 2017-2018
>>>>> http://www.biowiskundedagen.ugent.be/
>>>>>
>>>>> -------------------------------
>>>>> Disclaimer : http://helpdesk.ugent.be/e-maildisclaimer.php
>>>>>
>>>> --
>>>> Sent from Gmail Mobile
>>>>
>>>
>>>
>>>
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> 
>


From murdoch@dunc@n @ending from gm@il@com  Wed Jul  4 22:39:37 2018
From: murdoch@dunc@n @ending from gm@il@com (Duncan Murdoch)
Date: Wed, 4 Jul 2018 16:39:37 -0400
Subject: [R-pkg-devel] Weird error on CRAN linux check
In-Reply-To: <CAO1zAVZej0De_uzynnLwvo8hKSo32N4Y_BJb-KL=TASvHUNNyg@mail.gmail.com>
References: <CAARY7kiVSKGYwzLzPx1M456HEKQwHnuyBo6R9S66Th+JUodsVg@mail.gmail.com>
 <CABdHhvE6dvb3x_8K2O-GzB4Pt7+xmU3nv1zZNv0uV62trSWkUA@mail.gmail.com>
 <CAO1zAVZ71v93G_rrRy6W_mMX1M1=36VZGQTB1Pv+xCVZ+sxykw@mail.gmail.com>
 <CAARY7kizG58Yf6fo3dqKZLvQpv2g6P7Y1CBuAmx4jXP175U2EQ@mail.gmail.com>
 <CAO1zAVYa4_757hao0tBdtcpfgVxRfnhtFfc4HboFs92j3bRt1g@mail.gmail.com>
 <a719f423-eecc-4b94-d04d-e7a1d953a987@gmail.com>
 <CAO1zAVZej0De_uzynnLwvo8hKSo32N4Y_BJb-KL=TASvHUNNyg@mail.gmail.com>
Message-ID: <b401235f-9233-c8f1-396d-9c91ac842fd5@gmail.com>

On 04/07/2018 4:04 PM, Joris Meys wrote:
> 
> 
> On Wed, Jul 4, 2018 at 9:31 PM, Duncan Murdoch <murdoch.duncan at gmail.com 
> <mailto:murdoch.duncan at gmail.com>> wrote:
> 
> 
>     That shouldn't matter.? That function was created in a local
>     environment whose parent is <environment: namespace:huxtable>
>     (probably by the huxtable:::make_setter_getters function, but I
>     didn't check).
> 
>     Duncan Murdoch
> 
> I would think it does matter. Methods are found on the search path, but 
> the environment where the methods are defined is not on the search path. 
> It's a child environment of the namespace, and hence cannot be reached 
> from either the global environment or the namespace if I understood it 
> correctly.
> 

The environment of a function is where it looks for objects, not where
it is stored.  That method is stored in the huxtable namespace, and 
exported from it.  That's why 
getFromNamespace("align.huxtable","huxtable") (or even
huxtable::align.huxtable) finds it.

I don't know the source of the original error.

Duncan Murdoch


From i@uc@r86 @ending from gm@il@com  Thu Jul  5 10:07:01 2018
From: i@uc@r86 @ending from gm@il@com (=?UTF-8?B?ScOxYWtpIMOaY2Fy?=)
Date: Thu, 5 Jul 2018 10:07:01 +0200
Subject: [R-pkg-devel] Weird error on CRAN linux check
In-Reply-To: <b401235f-9233-c8f1-396d-9c91ac842fd5@gmail.com>
References: <CAARY7kiVSKGYwzLzPx1M456HEKQwHnuyBo6R9S66Th+JUodsVg@mail.gmail.com>
 <CABdHhvE6dvb3x_8K2O-GzB4Pt7+xmU3nv1zZNv0uV62trSWkUA@mail.gmail.com>
 <CAO1zAVZ71v93G_rrRy6W_mMX1M1=36VZGQTB1Pv+xCVZ+sxykw@mail.gmail.com>
 <CAARY7kizG58Yf6fo3dqKZLvQpv2g6P7Y1CBuAmx4jXP175U2EQ@mail.gmail.com>
 <CAO1zAVYa4_757hao0tBdtcpfgVxRfnhtFfc4HboFs92j3bRt1g@mail.gmail.com>
 <a719f423-eecc-4b94-d04d-e7a1d953a987@gmail.com>
 <CAO1zAVZej0De_uzynnLwvo8hKSo32N4Y_BJb-KL=TASvHUNNyg@mail.gmail.com>
 <b401235f-9233-c8f1-396d-9c91ac842fd5@gmail.com>
Message-ID: <CALEXWq2+XmNw+Q2cUxs72WqMgg15dOEOmyAUnZj27BX0ngWZgg@mail.gmail.com>

El mi?., 4 jul. 2018 a las 22:47, Duncan Murdoch
(<murdoch.duncan at gmail.com>) escribi?:
>
> On 04/07/2018 4:04 PM, Joris Meys wrote:
> >
> >
> > On Wed, Jul 4, 2018 at 9:31 PM, Duncan Murdoch <murdoch.duncan at gmail.com
> > <mailto:murdoch.duncan at gmail.com>> wrote:
> >
> >
> >     That shouldn't matter.  That function was created in a local
> >     environment whose parent is <environment: namespace:huxtable>
> >     (probably by the huxtable:::make_setter_getters function, but I
> >     didn't check).
> >
> >     Duncan Murdoch
> >
> > I would think it does matter. Methods are found on the search path, but
> > the environment where the methods are defined is not on the search path.
> > It's a child environment of the namespace, and hence cannot be reached
> > from either the global environment or the namespace if I understood it
> > correctly.
> >
>
> The environment of a function is where it looks for objects, not where
> it is stored.  That method is stored in the huxtable namespace, and
> exported from it.  That's why
> getFromNamespace("align.huxtable","huxtable") (or even
> huxtable::align.huxtable) finds it.
>
> I don't know the source of the original error.

I don't know either. But obviously it has something to do with the
function environment and how UseMethod looks for methods when they are
exported from a namespace (I tested a similar "layout" in the global
environment and the method is correctly found). So maybe this thread
belongs to r-devel instead.

I?aki

>
> Duncan Murdoch
>


From d@vidhughjone@ @ending from gm@il@com  Thu Jul  5 11:22:19 2018
From: d@vidhughjone@ @ending from gm@il@com (David Hugh-Jones)
Date: Thu, 5 Jul 2018 10:22:19 +0100
Subject: [R-pkg-devel] Weird error on CRAN linux check
In-Reply-To: <CALEXWq2+XmNw+Q2cUxs72WqMgg15dOEOmyAUnZj27BX0ngWZgg@mail.gmail.com>
References: <CAARY7kiVSKGYwzLzPx1M456HEKQwHnuyBo6R9S66Th+JUodsVg@mail.gmail.com>
 <CABdHhvE6dvb3x_8K2O-GzB4Pt7+xmU3nv1zZNv0uV62trSWkUA@mail.gmail.com>
 <CAO1zAVZ71v93G_rrRy6W_mMX1M1=36VZGQTB1Pv+xCVZ+sxykw@mail.gmail.com>
 <CAARY7kizG58Yf6fo3dqKZLvQpv2g6P7Y1CBuAmx4jXP175U2EQ@mail.gmail.com>
 <CAO1zAVYa4_757hao0tBdtcpfgVxRfnhtFfc4HboFs92j3bRt1g@mail.gmail.com>
 <a719f423-eecc-4b94-d04d-e7a1d953a987@gmail.com>
 <CAO1zAVZej0De_uzynnLwvo8hKSo32N4Y_BJb-KL=TASvHUNNyg@mail.gmail.com>
 <b401235f-9233-c8f1-396d-9c91ac842fd5@gmail.com>
 <CALEXWq2+XmNw+Q2cUxs72WqMgg15dOEOmyAUnZj27BX0ngWZgg@mail.gmail.com>
Message-ID: <CAARY7ki-ZEaE6A101FBp9XC7ePns9+Eo+F_EL6YDjkVEazcBaA@mail.gmail.com>

Wow, this is extremely helpful. I've applied Joris' patch. By the way, the
github master has the change that I stopped exporting methods, as per
Hadley's suggestion; this caused *all* functions created via
make_getter_setters to fail. Version 4.0.1 on CRAN has the methods
exported, which was masking the error in most cases. I don't know why
bold() was failing in certain cases only... in any case, the patch seems to
fix things.

Here is a brief test case that shows the original problem. I don't know
whether this reveals any problem in base R:

# in package mypackage:
#' @export
foo <- function (x, ...) UseMethod('foo')
make_a_method <- function () assign("foo.bar", function (x, ...) cat("In
foo.bar"), pos = getNamespace('mypackage'))
make_a_method()

# in the console:
library(mypackage)
mypackage:::foo.bar
## function (x, ...) cat("In foo.bar")
## <bytecode: 0x109a0ab80>
## <environment: 0x109a0ba28>
x <- structure(1, class='bar')
foo(x)
## Error in UseMethod("foo") :
##  no applicable method for 'foo' applied to an object of class "bar"

Also, I know I shouldn't be using @s3method ... it's on the TODO list... !

Cheers,
David


On Thu, 5 Jul 2018 at 09:07, I?aki ?car <i.ucar86 at gmail.com> wrote:

> El mi?., 4 jul. 2018 a las 22:47, Duncan Murdoch
> (<murdoch.duncan at gmail.com>) escribi?:
> >
> > On 04/07/2018 4:04 PM, Joris Meys wrote:
> > >
> > >
> > > On Wed, Jul 4, 2018 at 9:31 PM, Duncan Murdoch <
> murdoch.duncan at gmail.com
> > > <mailto:murdoch.duncan at gmail.com>> wrote:
> > >
> > >
> > >     That shouldn't matter.  That function was created in a local
> > >     environment whose parent is <environment: namespace:huxtable>
> > >     (probably by the huxtable:::make_setter_getters function, but I
> > >     didn't check).
> > >
> > >     Duncan Murdoch
> > >
> > > I would think it does matter. Methods are found on the search path, but
> > > the environment where the methods are defined is not on the search
> path.
> > > It's a child environment of the namespace, and hence cannot be reached
> > > from either the global environment or the namespace if I understood it
> > > correctly.
> > >
> >
> > The environment of a function is where it looks for objects, not where
> > it is stored.  That method is stored in the huxtable namespace, and
> > exported from it.  That's why
> > getFromNamespace("align.huxtable","huxtable") (or even
> > huxtable::align.huxtable) finds it.
> >
> > I don't know the source of the original error.
>
> I don't know either. But obviously it has something to do with the
> function environment and how UseMethod looks for methods when they are
> exported from a namespace (I tested a similar "layout" in the global
> environment and the method is correctly found). So maybe this thread
> belongs to r-devel instead.
>
> I?aki
>
> >
> > Duncan Murdoch
> >
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From murdoch@dunc@n @ending from gm@il@com  Thu Jul  5 13:19:58 2018
From: murdoch@dunc@n @ending from gm@il@com (Duncan Murdoch)
Date: Thu, 5 Jul 2018 07:19:58 -0400
Subject: [R-pkg-devel] Weird error on CRAN linux check
In-Reply-To: <CAARY7ki-ZEaE6A101FBp9XC7ePns9+Eo+F_EL6YDjkVEazcBaA@mail.gmail.com>
References: <CAARY7kiVSKGYwzLzPx1M456HEKQwHnuyBo6R9S66Th+JUodsVg@mail.gmail.com>
 <CABdHhvE6dvb3x_8K2O-GzB4Pt7+xmU3nv1zZNv0uV62trSWkUA@mail.gmail.com>
 <CAO1zAVZ71v93G_rrRy6W_mMX1M1=36VZGQTB1Pv+xCVZ+sxykw@mail.gmail.com>
 <CAARY7kizG58Yf6fo3dqKZLvQpv2g6P7Y1CBuAmx4jXP175U2EQ@mail.gmail.com>
 <CAO1zAVYa4_757hao0tBdtcpfgVxRfnhtFfc4HboFs92j3bRt1g@mail.gmail.com>
 <a719f423-eecc-4b94-d04d-e7a1d953a987@gmail.com>
 <CAO1zAVZej0De_uzynnLwvo8hKSo32N4Y_BJb-KL=TASvHUNNyg@mail.gmail.com>
 <b401235f-9233-c8f1-396d-9c91ac842fd5@gmail.com>
 <CALEXWq2+XmNw+Q2cUxs72WqMgg15dOEOmyAUnZj27BX0ngWZgg@mail.gmail.com>
 <CAARY7ki-ZEaE6A101FBp9XC7ePns9+Eo+F_EL6YDjkVEazcBaA@mail.gmail.com>
Message-ID: <033007e3-1664-6f8a-e14f-f62a07a9ce93@gmail.com>

On 05/07/2018 5:22 AM, David Hugh-Jones wrote:
> 
> Wow, this is extremely helpful. I've applied Joris' patch. By the way, 
> the github master has the change that I stopped exporting methods, as 
> per Hadley's suggestion; this caused *all* functions created via 
> make_getter_setters to fail. Version 4.0.1 on CRAN has the methods 
> exported, which was masking the error in most cases. I don't know why 
> bold() was failing in certain cases only... in any case, the patch seems 
> to fix things.
> 

That's a roxygen2 bug or misuse.  If you use the code below without the 
roxygen2 processing, and manually build the NAMESPACE file as

export(foo)
S3method(foo, bar)

then things are fine.  I don't know roxygen2 well enough to know what 
else you should have done to get your NAMESPACE file to look like that.

Duncan Murdoch


> Here is a brief test case that shows the original problem. I don't know 
> whether this reveals any problem in base R:
> 
> # in package mypackage:
> #' @export
> foo <- function (x, ...) UseMethod('foo')
> make_a_method <- function () assign("foo.bar", function (x, ...) cat("In 
> foo.bar"), pos = getNamespace('mypackage'))
> make_a_method()
> 
> # in the console:
> library(mypackage)
> mypackage:::foo.bar
> ## function (x, ...) cat("In foo.bar")
> ## <bytecode: 0x109a0ab80>
> ## <environment: 0x109a0ba28>
> x <- structure(1, class='bar')
> foo(x)
> ## Error in UseMethod("foo") :
> ##? no applicable method for 'foo' applied to an object of class "bar"
> 
> Also, I know I shouldn't be using @s3method ... it's on the TODO list... !
> 
> Cheers,
> David
> 
> 
> On Thu, 5 Jul 2018 at 09:07, I?aki ?car <i.ucar86 at gmail.com 
> <mailto:i.ucar86 at gmail.com>> wrote:
> 
>     El mi?., 4 jul. 2018 a las 22:47, Duncan Murdoch
>     (<murdoch.duncan at gmail.com <mailto:murdoch.duncan at gmail.com>>) escribi?:
>      >
>      > On 04/07/2018 4:04 PM, Joris Meys wrote:
>      > >
>      > >
>      > > On Wed, Jul 4, 2018 at 9:31 PM, Duncan Murdoch
>     <murdoch.duncan at gmail.com <mailto:murdoch.duncan at gmail.com>
>      > > <mailto:murdoch.duncan at gmail.com
>     <mailto:murdoch.duncan at gmail.com>>> wrote:
>      > >
>      > >
>      > >? ? ?That shouldn't matter.? That function was created in a local
>      > >? ? ?environment whose parent is <environment: namespace:huxtable>
>      > >? ? ?(probably by the huxtable:::make_setter_getters function, but I
>      > >? ? ?didn't check).
>      > >
>      > >? ? ?Duncan Murdoch
>      > >
>      > > I would think it does matter. Methods are found on the search
>     path, but
>      > > the environment where the methods are defined is not on the
>     search path.
>      > > It's a child environment of the namespace, and hence cannot be
>     reached
>      > > from either the global environment or the namespace if I
>     understood it
>      > > correctly.
>      > >
>      >
>      > The environment of a function is where it looks for objects, not
>     where
>      > it is stored.? That method is stored in the huxtable namespace, and
>      > exported from it.? That's why
>      > getFromNamespace("align.huxtable","huxtable") (or even
>      > huxtable::align.huxtable) finds it.
>      >
>      > I don't know the source of the original error.
> 
>     I don't know either. But obviously it has something to do with the
>     function environment and how UseMethod looks for methods when they are
>     exported from a namespace (I tested a similar "layout" in the global
>     environment and the method is correctly found). So maybe this thread
>     belongs to r-devel instead.
> 
>     I?aki
> 
>      >
>      > Duncan Murdoch
>      >
> 
>     ______________________________________________
>     R-package-devel at r-project.org <mailto:R-package-devel at r-project.org>
>     mailing list
>     https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From d@vidhughjone@ @ending from gm@il@com  Thu Jul  5 15:11:25 2018
From: d@vidhughjone@ @ending from gm@il@com (David Hugh-Jones)
Date: Thu, 5 Jul 2018 14:11:25 +0100
Subject: [R-pkg-devel] Weird error on CRAN linux check
In-Reply-To: <033007e3-1664-6f8a-e14f-f62a07a9ce93@gmail.com>
References: <CAARY7kiVSKGYwzLzPx1M456HEKQwHnuyBo6R9S66Th+JUodsVg@mail.gmail.com>
 <CABdHhvE6dvb3x_8K2O-GzB4Pt7+xmU3nv1zZNv0uV62trSWkUA@mail.gmail.com>
 <CAO1zAVZ71v93G_rrRy6W_mMX1M1=36VZGQTB1Pv+xCVZ+sxykw@mail.gmail.com>
 <CAARY7kizG58Yf6fo3dqKZLvQpv2g6P7Y1CBuAmx4jXP175U2EQ@mail.gmail.com>
 <CAO1zAVYa4_757hao0tBdtcpfgVxRfnhtFfc4HboFs92j3bRt1g@mail.gmail.com>
 <a719f423-eecc-4b94-d04d-e7a1d953a987@gmail.com>
 <CAO1zAVZej0De_uzynnLwvo8hKSo32N4Y_BJb-KL=TASvHUNNyg@mail.gmail.com>
 <b401235f-9233-c8f1-396d-9c91ac842fd5@gmail.com>
 <CALEXWq2+XmNw+Q2cUxs72WqMgg15dOEOmyAUnZj27BX0ngWZgg@mail.gmail.com>
 <CAARY7ki-ZEaE6A101FBp9XC7ePns9+Eo+F_EL6YDjkVEazcBaA@mail.gmail.com>
 <033007e3-1664-6f8a-e14f-f62a07a9ce93@gmail.com>
Message-ID: <CAARY7khaJApX7PWEEtM5zzMXjNgVhsVWw-X-9jO3n9YzPb7L_w@mail.gmail.com>

Agreed. I fixed the roxygen2 and it works fine. But yet, the original
v4.0.1 on CRAN has a namespace file which contains

S3method(bold,huxtable)
export(bold)
export(bold.huxtable)

and

S3method("align<-",huxtable)
export("align<-")
export("align<-.huxtable")

yet still fails on linux-patched and linux-release, with "no applicable
method" errors for align<- and bold. Unfortunately, I don't know how to
reproduce the error on any other platform....

Anyway, meanwhile, my problem is fixed and I have learned something about
function environments.

Cheers,
David




On Thu, 5 Jul 2018 at 12:20, Duncan Murdoch <murdoch.duncan at gmail.com>
wrote:

>
> That's a roxygen2 bug or misuse.  If you use the code below without the
> roxygen2 processing, and manually build the NAMESPACE file as
>
> export(foo)
> S3method(foo, bar)
>
> then things are fine.  I don't know roxygen2 well enough to know what
> else you should have done to get your NAMESPACE file to look like that.
>
> Duncan Murdoch
>
>

	[[alternative HTML version deleted]]


From gor@n@bro@trom @ending from umu@@e  Thu Jul  5 16:10:44 2018
From: gor@n@bro@trom @ending from umu@@e (=?UTF-8?Q?G=c3=b6ran_Brostr=c3=b6m?=)
Date: Thu, 5 Jul 2018 16:10:44 +0200
Subject: [R-pkg-devel] compilation flags WARNING
Message-ID: <87dd8d02-baa6-ff3c-8606-99e937b0e4ec@umu.se>

I am preparing a CRAN release of eha (a trivial change due to a change 
in the survival package), but when checking the build I get:

goran at M6800:~/R$ R CMD check --as-cran eha_2.5.2.tar.gz
...
* checking compilation flags used ... WARNING
Compilation used the following non-portable flag(s):
   ?-Wdate-time? ?-Werror=format-security? ?-Wformat?
...

I have never seen this before and I haven't (to my knowledge) set any 
compilation flags. It is my first build and check on a newly upgraded 
ubuntu 18.04 (no issues on 17.10). Should I perhaps ask on r-sig-debian, 
or is that observation irrelevant?

G?ran Brostr?m


From Jori@@Mey@ @ending from ugent@be  Thu Jul  5 16:18:02 2018
From: Jori@@Mey@ @ending from ugent@be (Joris Meys)
Date: Thu, 5 Jul 2018 16:18:02 +0200
Subject: [R-pkg-devel] Weird error on CRAN linux check
In-Reply-To: <033007e3-1664-6f8a-e14f-f62a07a9ce93@gmail.com>
References: <CAARY7kiVSKGYwzLzPx1M456HEKQwHnuyBo6R9S66Th+JUodsVg@mail.gmail.com>
 <CABdHhvE6dvb3x_8K2O-GzB4Pt7+xmU3nv1zZNv0uV62trSWkUA@mail.gmail.com>
 <CAO1zAVZ71v93G_rrRy6W_mMX1M1=36VZGQTB1Pv+xCVZ+sxykw@mail.gmail.com>
 <CAARY7kizG58Yf6fo3dqKZLvQpv2g6P7Y1CBuAmx4jXP175U2EQ@mail.gmail.com>
 <CAO1zAVYa4_757hao0tBdtcpfgVxRfnhtFfc4HboFs92j3bRt1g@mail.gmail.com>
 <a719f423-eecc-4b94-d04d-e7a1d953a987@gmail.com>
 <CAO1zAVZej0De_uzynnLwvo8hKSo32N4Y_BJb-KL=TASvHUNNyg@mail.gmail.com>
 <b401235f-9233-c8f1-396d-9c91ac842fd5@gmail.com>
 <CALEXWq2+XmNw+Q2cUxs72WqMgg15dOEOmyAUnZj27BX0ngWZgg@mail.gmail.com>
 <CAARY7ki-ZEaE6A101FBp9XC7ePns9+Eo+F_EL6YDjkVEazcBaA@mail.gmail.com>
 <033007e3-1664-6f8a-e14f-f62a07a9ce93@gmail.com>
Message-ID: <CAO1zAVb=cWuFwo0RhhGE55cq3_oto8=S6-pW9XbeXhtkd977pw@mail.gmail.com>

I see that you realized it was Inaki who gave you he patch, not me :-)

I've been looking into this further, and the toy example David put up is
actually not the right one to look at. In that example the generic is
created in the namespace.  But in the original huxtable that was not the
case. Try the following :

foo.barrista <- function(x, ...){
  cat("In barrista\n")
}

make_a_method <- function (x){
  assign("foo", function(x, ...){
    UseMethod("foo")
  } ,envir = getNamespace('testMethod'))

  assign("foo.bar", function (x, ...) cat("In foo.bar"),
         envir = getNamespace('testMethod'))
}
make_a_method()

With a namespace:

S3method(foo,bar)
S3method(foo,barrista)
export(foo)

And test code :

thebar <- structure(1, class = c("bar", "data.frame"))
thebarrista <- structure(1, class = "barrista")

foo(thebarrista)
foo(thebar)

In both cases the correct method cannot be found. When the methods are both
exported and registered (i.e. add export(foo.bar) and export(foo.barrista)
to NAMESPACE), everything goes fine again on Windows.I went back to the
original version you sent to CRAN, and that doesn't cause any problems on
Windows either. So when the methods are exported and registered, the
problem apparently only exists on Linux.

The other thing I've noticed, is that align() is called from within the
function huxtable() without problem. So the method is found when the
generic is called by a function in the namespace, but not when the generic
is called from the global env. The patch of Inaki makes sure that the
_generic_ is assigned in the namespace itself instead of a child
environment.

To the previous minimal example, add:

baz <- function(x) foo(x)

and to the NAMESPACE:

export(baz)

If you try now:

baz(thebar)
baz(thebarrista)

the correct methods are found. But foo(thebar) etc still doesn't find the
correct ones.

On a sidenote: roxygen is really not helping here. @export literally
exports all these methods as they're not recognized as S3methods. So here
you actually need the deprecated tag @S3method. I wish Hadley would revert
the deprecation, as @export fails to recognize S3 methods correctly in
other cases as well.


On Thu, Jul 5, 2018 at 1:19 PM, Duncan Murdoch <murdoch.duncan at gmail.com>
wrote:

> On 05/07/2018 5:22 AM, David Hugh-Jones wrote:
>
>>
>> Wow, this is extremely helpful. I've applied Joris' patch. By the way,
>> the github master has the change that I stopped exporting methods, as per
>> Hadley's suggestion; this caused *all* functions created via
>> make_getter_setters to fail. Version 4.0.1 on CRAN has the methods
>> exported, which was masking the error in most cases. I don't know why
>> bold() was failing in certain cases only... in any case, the patch seems to
>> fix things.
>>
>>
> That's a roxygen2 bug or misuse.  If you use the code below without the
> roxygen2 processing, and manually build the NAMESPACE file as
>
> export(foo)
> S3method(foo, bar)
>
> then things are fine.  I don't know roxygen2 well enough to know what else
> you should have done to get your NAMESPACE file to look like that.
>
> Duncan Murdoch
>
>
> Here is a brief test case that shows the original problem. I don't know
>> whether this reveals any problem in base R:
>>
>> # in package mypackage:
>> #' @export
>> foo <- function (x, ...) UseMethod('foo')
>> make_a_method <- function () assign("foo.bar", function (x, ...) cat("In
>> foo.bar"), pos = getNamespace('mypackage'))
>> make_a_method()
>>
>> # in the console:
>> library(mypackage)
>> mypackage:::foo.bar
>> ## function (x, ...) cat("In foo.bar")
>> ## <bytecode: 0x109a0ab80>
>> ## <environment: 0x109a0ba28>
>> x <- structure(1, class='bar')
>> foo(x)
>> ## Error in UseMethod("foo") :
>> ##  no applicable method for 'foo' applied to an object of class "bar"
>>
>> Also, I know I shouldn't be using @s3method ... it's on the TODO list... !
>>
>> Cheers,
>> David
>>
>>
>> On Thu, 5 Jul 2018 at 09:07, I?aki ?car <i.ucar86 at gmail.com <mailto:
>> i.ucar86 at gmail.com>> wrote:
>>
>>     El mi?., 4 jul. 2018 a las 22:47, Duncan Murdoch
>>     (<murdoch.duncan at gmail.com <mailto:murdoch.duncan at gmail.com>>)
>> escribi?:
>>      >
>>      > On 04/07/2018 4:04 PM, Joris Meys wrote:
>>      > >
>>      > >
>>      > > On Wed, Jul 4, 2018 at 9:31 PM, Duncan Murdoch
>>     <murdoch.duncan at gmail.com <mailto:murdoch.duncan at gmail.com>
>>      > > <mailto:murdoch.duncan at gmail.com
>>
>>     <mailto:murdoch.duncan at gmail.com>>> wrote:
>>      > >
>>      > >
>>      > >     That shouldn't matter.  That function was created in a local
>>      > >     environment whose parent is <environment: namespace:huxtable>
>>      > >     (probably by the huxtable:::make_setter_getters function,
>> but I
>>      > >     didn't check).
>>      > >
>>      > >     Duncan Murdoch
>>      > >
>>      > > I would think it does matter. Methods are found on the search
>>     path, but
>>      > > the environment where the methods are defined is not on the
>>     search path.
>>      > > It's a child environment of the namespace, and hence cannot be
>>     reached
>>      > > from either the global environment or the namespace if I
>>     understood it
>>      > > correctly.
>>      > >
>>      >
>>      > The environment of a function is where it looks for objects, not
>>     where
>>      > it is stored.  That method is stored in the huxtable namespace, and
>>      > exported from it.  That's why
>>      > getFromNamespace("align.huxtable","huxtable") (or even
>>      > huxtable::align.huxtable) finds it.
>>      >
>>      > I don't know the source of the original error.
>>
>>     I don't know either. But obviously it has something to do with the
>>     function environment and how UseMethod looks for methods when they are
>>     exported from a namespace (I tested a similar "layout" in the global
>>     environment and the method is correctly found). So maybe this thread
>>     belongs to r-devel instead.
>>
>>     I?aki
>>
>>      >
>>      > Duncan Murdoch
>>      >
>>
>>     ______________________________________________
>>     R-package-devel at r-project.org <mailto:R-package-devel at r-project.org>
>>     mailing list
>>     https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>



-- 
Joris Meys
Statistical consultant

Department of Data Analysis and Mathematical Modelling
Ghent University
Coupure Links 653, B-9000 Gent (Belgium)
<https://maps.google.com/?q=Coupure+links+653,%C2%A0B-9000+Gent,%C2%A0Belgium&entry=gmail&source=g>

-----------
Biowiskundedagen 2017-2018
http://www.biowiskundedagen.ugent.be/

-------------------------------
Disclaimer : http://helpdesk.ugent.be/e-maildisclaimer.php

	[[alternative HTML version deleted]]


From i@uc@r86 @ending from gm@il@com  Thu Jul  5 16:39:49 2018
From: i@uc@r86 @ending from gm@il@com (=?UTF-8?B?ScOxYWtpIMOaY2Fy?=)
Date: Thu, 5 Jul 2018 16:39:49 +0200
Subject: [R-pkg-devel] compilation flags WARNING
In-Reply-To: <87dd8d02-baa6-ff3c-8606-99e937b0e4ec@umu.se>
References: <87dd8d02-baa6-ff3c-8606-99e937b0e4ec@umu.se>
Message-ID: <CALEXWq3KQSo_BGabwUVksJ7Z6Cq35dYtX0Fsdi6SFOe7B5GFLA@mail.gmail.com>

El jue., 5 jul. 2018 a las 16:11, G?ran Brostr?m
(<goran.brostrom at umu.se>) escribi?:
>
> I am preparing a CRAN release of eha (a trivial change due to a change
> in the survival package), but when checking the build I get:
>
> goran at M6800:~/R$ R CMD check --as-cran eha_2.5.2.tar.gz
> ...
> * checking compilation flags used ... WARNING
> Compilation used the following non-portable flag(s):
>    ?-Wdate-time? ?-Werror=format-security? ?-Wformat?
> ...

AFAIK, these are new checks. I get similar warnings on Fedora for
different flags.

> I have never seen this before and I haven't (to my knowledge) set any
> compilation flags. It is my first build and check on a newly upgraded
> ubuntu 18.04 (no issues on 17.10). Should I perhaps ask on r-sig-debian,
> or is that observation irrelevant?

Again AFAIK (there are package maintainers for several distros here
that can correct me if I'm wrong), each distro defines some policies
regarding compilation flags that are applied to all packages by
default. So these warnings can be safely ignored locally (or you may
override them), because those flags won't be defined on CRAN.

I?aki

>
> G?ran Brostr?m


From Jori@@Mey@ @ending from ugent@be  Thu Jul  5 16:50:43 2018
From: Jori@@Mey@ @ending from ugent@be (Joris Meys)
Date: Thu, 5 Jul 2018 16:50:43 +0200
Subject: [R-pkg-devel] Weird error on CRAN linux check
In-Reply-To: <CAO1zAVb=cWuFwo0RhhGE55cq3_oto8=S6-pW9XbeXhtkd977pw@mail.gmail.com>
References: <CAARY7kiVSKGYwzLzPx1M456HEKQwHnuyBo6R9S66Th+JUodsVg@mail.gmail.com>
 <CABdHhvE6dvb3x_8K2O-GzB4Pt7+xmU3nv1zZNv0uV62trSWkUA@mail.gmail.com>
 <CAO1zAVZ71v93G_rrRy6W_mMX1M1=36VZGQTB1Pv+xCVZ+sxykw@mail.gmail.com>
 <CAARY7kizG58Yf6fo3dqKZLvQpv2g6P7Y1CBuAmx4jXP175U2EQ@mail.gmail.com>
 <CAO1zAVYa4_757hao0tBdtcpfgVxRfnhtFfc4HboFs92j3bRt1g@mail.gmail.com>
 <a719f423-eecc-4b94-d04d-e7a1d953a987@gmail.com>
 <CAO1zAVZej0De_uzynnLwvo8hKSo32N4Y_BJb-KL=TASvHUNNyg@mail.gmail.com>
 <b401235f-9233-c8f1-396d-9c91ac842fd5@gmail.com>
 <CALEXWq2+XmNw+Q2cUxs72WqMgg15dOEOmyAUnZj27BX0ngWZgg@mail.gmail.com>
 <CAARY7ki-ZEaE6A101FBp9XC7ePns9+Eo+F_EL6YDjkVEazcBaA@mail.gmail.com>
 <033007e3-1664-6f8a-e14f-f62a07a9ce93@gmail.com>
 <CAO1zAVb=cWuFwo0RhhGE55cq3_oto8=S6-pW9XbeXhtkd977pw@mail.gmail.com>
Message-ID: <CAO1zAVbQzctR5vKHVJNe8Q5XfTQ1dShMqFJF+aJRwACM0Pv9ow@mail.gmail.com>

For the record: I've checked this in R 3.5.0 and R 3.4.4, and in both cases
this problem exists.

Also, I need to correct myself: The correct way to document with roxygen is
to use _both_ the @method and @export tag:

@method foo bar
@export

That registers the S3 method correctly (and hence doesn't export the method
itself).

On Thu, Jul 5, 2018 at 4:18 PM, Joris Meys <Joris.Meys at ugent.be> wrote:

> I see that you realized it was Inaki who gave you he patch, not me :-)
>
> I've been looking into this further, and the toy example David put up is
> actually not the right one to look at. In that example the generic is
> created in the namespace.  But in the original huxtable that was not the
> case. Try the following :
>
> foo.barrista <- function(x, ...){
>   cat("In barrista\n")
> }
>
> make_a_method <- function (x){
>   assign("foo", function(x, ...){
>     UseMethod("foo")
>   } ,envir = getNamespace('testMethod'))
>
>   assign("foo.bar", function (x, ...) cat("In foo.bar"),
>          envir = getNamespace('testMethod'))
> }
> make_a_method()
>
> With a namespace:
>
> S3method(foo,bar)
> S3method(foo,barrista)
> export(foo)
>
> And test code :
>
> thebar <- structure(1, class = c("bar", "data.frame"))
> thebarrista <- structure(1, class = "barrista")
>
> foo(thebarrista)
> foo(thebar)
>
> In both cases the correct method cannot be found. When the methods are
> both exported and registered (i.e. add export(foo.bar) and
> export(foo.barrista) to NAMESPACE), everything goes fine again on Windows.I
> went back to the original version you sent to CRAN, and that doesn't cause
> any problems on Windows either. So when the methods are exported and
> registered, the problem apparently only exists on Linux.
>
> The other thing I've noticed, is that align() is called from within the
> function huxtable() without problem. So the method is found when the
> generic is called by a function in the namespace, but not when the generic
> is called from the global env. The patch of Inaki makes sure that the
> _generic_ is assigned in the namespace itself instead of a child
> environment.
>
> To the previous minimal example, add:
>
> baz <- function(x) foo(x)
>
> and to the NAMESPACE:
>
> export(baz)
>
> If you try now:
>
> baz(thebar)
> baz(thebarrista)
>
> the correct methods are found. But foo(thebar) etc still doesn't find the
> correct ones.
>
> On a sidenote: roxygen is really not helping here. @export literally
> exports all these methods as they're not recognized as S3methods. So here
> you actually need the deprecated tag @S3method. I wish Hadley would revert
> the deprecation, as @export fails to recognize S3 methods correctly in
> other cases as well.
>
>
> On Thu, Jul 5, 2018 at 1:19 PM, Duncan Murdoch <murdoch.duncan at gmail.com>
> wrote:
>
>> On 05/07/2018 5:22 AM, David Hugh-Jones wrote:
>>
>>>
>>> Wow, this is extremely helpful. I've applied Joris' patch. By the way,
>>> the github master has the change that I stopped exporting methods, as per
>>> Hadley's suggestion; this caused *all* functions created via
>>> make_getter_setters to fail. Version 4.0.1 on CRAN has the methods
>>> exported, which was masking the error in most cases. I don't know why
>>> bold() was failing in certain cases only... in any case, the patch seems to
>>> fix things.
>>>
>>>
>> That's a roxygen2 bug or misuse.  If you use the code below without the
>> roxygen2 processing, and manually build the NAMESPACE file as
>>
>> export(foo)
>> S3method(foo, bar)
>>
>> then things are fine.  I don't know roxygen2 well enough to know what
>> else you should have done to get your NAMESPACE file to look like that.
>>
>> Duncan Murdoch
>>
>>
>> Here is a brief test case that shows the original problem. I don't know
>>> whether this reveals any problem in base R:
>>>
>>> # in package mypackage:
>>> #' @export
>>> foo <- function (x, ...) UseMethod('foo')
>>> make_a_method <- function () assign("foo.bar", function (x, ...) cat("In
>>> foo.bar"), pos = getNamespace('mypackage'))
>>> make_a_method()
>>>
>>> # in the console:
>>> library(mypackage)
>>> mypackage:::foo.bar
>>> ## function (x, ...) cat("In foo.bar")
>>> ## <bytecode: 0x109a0ab80>
>>> ## <environment: 0x109a0ba28>
>>> x <- structure(1, class='bar')
>>> foo(x)
>>> ## Error in UseMethod("foo") :
>>> ##  no applicable method for 'foo' applied to an object of class "bar"
>>>
>>> Also, I know I shouldn't be using @s3method ... it's on the TODO list...
>>> !
>>>
>>> Cheers,
>>> David
>>>
>>>
>>> On Thu, 5 Jul 2018 at 09:07, I?aki ?car <i.ucar86 at gmail.com <mailto:
>>> i.ucar86 at gmail.com>> wrote:
>>>
>>>     El mi?., 4 jul. 2018 a las 22:47, Duncan Murdoch
>>>     (<murdoch.duncan at gmail.com <mailto:murdoch.duncan at gmail.com>>)
>>> escribi?:
>>>      >
>>>      > On 04/07/2018 4:04 PM, Joris Meys wrote:
>>>      > >
>>>      > >
>>>      > > On Wed, Jul 4, 2018 at 9:31 PM, Duncan Murdoch
>>>     <murdoch.duncan at gmail.com <mailto:murdoch.duncan at gmail.com>
>>>      > > <mailto:murdoch.duncan at gmail.com
>>>
>>>     <mailto:murdoch.duncan at gmail.com>>> wrote:
>>>      > >
>>>      > >
>>>      > >     That shouldn't matter.  That function was created in a local
>>>      > >     environment whose parent is <environment:
>>> namespace:huxtable>
>>>      > >     (probably by the huxtable:::make_setter_getters function,
>>> but I
>>>      > >     didn't check).
>>>      > >
>>>      > >     Duncan Murdoch
>>>      > >
>>>      > > I would think it does matter. Methods are found on the search
>>>     path, but
>>>      > > the environment where the methods are defined is not on the
>>>     search path.
>>>      > > It's a child environment of the namespace, and hence cannot be
>>>     reached
>>>      > > from either the global environment or the namespace if I
>>>     understood it
>>>      > > correctly.
>>>      > >
>>>      >
>>>      > The environment of a function is where it looks for objects, not
>>>     where
>>>      > it is stored.  That method is stored in the huxtable namespace,
>>> and
>>>      > exported from it.  That's why
>>>      > getFromNamespace("align.huxtable","huxtable") (or even
>>>      > huxtable::align.huxtable) finds it.
>>>      >
>>>      > I don't know the source of the original error.
>>>
>>>     I don't know either. But obviously it has something to do with the
>>>     function environment and how UseMethod looks for methods when they
>>> are
>>>     exported from a namespace (I tested a similar "layout" in the global
>>>     environment and the method is correctly found). So maybe this thread
>>>     belongs to r-devel instead.
>>>
>>>     I?aki
>>>
>>>      >
>>>      > Duncan Murdoch
>>>      >
>>>
>>>     ______________________________________________
>>>     R-package-devel at r-project.org <mailto:R-package-devel at r-project.org>
>>>     mailing list
>>>     https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>
>
>
> --
> Joris Meys
> Statistical consultant
>
> Department of Data Analysis and Mathematical Modelling
> Ghent University
> Coupure Links 653, B-9000 Gent (Belgium)
>
> <https://maps.google.com/?q=Coupure+links+653,%C2%A0B-9000+Gent,%C2%A0Belgium&entry=gmail&source=g>
>
> -----------
> Biowiskundedagen 2017-2018
> http://www.biowiskundedagen.ugent.be/
>
> -------------------------------
> Disclaimer : http://helpdesk.ugent.be/e-maildisclaimer.php
>



-- 
Joris Meys
Statistical consultant

Department of Data Analysis and Mathematical Modelling
Ghent University
Coupure Links 653, B-9000 Gent (Belgium)
<https://maps.google.com/?q=Coupure+links+653,%C2%A0B-9000+Gent,%C2%A0Belgium&entry=gmail&source=g>

tel: +32 (0)9 264 61 79
-----------
Biowiskundedagen 2017-2018
http://www.biowiskundedagen.ugent.be/

-------------------------------
Disclaimer : http://helpdesk.ugent.be/e-maildisclaimer.php

	[[alternative HTML version deleted]]


From ht @ending from he@therturner@net  Thu Jul  5 17:43:19 2018
From: ht @ending from he@therturner@net (Heather Turner)
Date: Thu, 05 Jul 2018 16:43:19 +0100
Subject: [R-pkg-devel] compilation flags WARNING
In-Reply-To: <CALEXWq3KQSo_BGabwUVksJ7Z6Cq35dYtX0Fsdi6SFOe7B5GFLA@mail.gmail.com>
References: <87dd8d02-baa6-ff3c-8606-99e937b0e4ec@umu.se>
 <CALEXWq3KQSo_BGabwUVksJ7Z6Cq35dYtX0Fsdi6SFOe7B5GFLA@mail.gmail.com>
Message-ID: <1530805399.943327.1431053672.7C2A6A02@webmail.messagingengine.com>



On Thu, Jul 5, 2018, at 3:39 PM, I?aki ?car wrote:
> El jue., 5 jul. 2018 a las 16:11, G?ran Brostr?m
> (<goran.brostrom at umu.se>) escribi?:
> >
> > I am preparing a CRAN release of eha (a trivial change due to a change
> > in the survival package), but when checking the build I get:
> >
> > goran at M6800:~/R$ R CMD check --as-cran eha_2.5.2.tar.gz
> > ...
> > * checking compilation flags used ... WARNING
> > Compilation used the following non-portable flag(s):
> >    ?-Wdate-time? ?-Werror=format-security? ?-Wformat?
> > ...
> 
> AFAIK, these are new checks. I get similar warnings on Fedora for
> different flags.
> 
> > I have never seen this before and I haven't (to my knowledge) set any
> > compilation flags. It is my first build and check on a newly upgraded
> > ubuntu 18.04 (no issues on 17.10). Should I perhaps ask on r-sig-debian,
> > or is that observation irrelevant?
> 
> Again AFAIK (there are package maintainers for several distros here
> that can correct me if I'm wrong), each distro defines some policies
> regarding compilation flags that are applied to all packages by
> default. So these warnings can be safely ignored locally (or you may
> override them), because those flags won't be defined on CRAN.
> 
Yes, by default the compilation flags are those set when R was installed. You can see the current flags via

R CMD config CFLAGS

which in your case should include  ?-Wdate-time? etc.

As I?aki says you can safely ignore the warning, but if you prefer to not to have any warnings you can solve this by creating a Makevars.site file with CFLAGS excluding the non-portable ones, e.g.

CFLAGS=-Wall -g O0 -fPIC

This should be saved in the /etc directory of R.home(), e.g. /usr/lib/R/etc.

See https://cran.r-project.org/doc/manuals/r-release/R-admin.html#Customizing-package-compilation for more information.

Heather

> I?aki
> 
> >
> > G?ran Brostr?m
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From murdoch@dunc@n @ending from gm@il@com  Thu Jul  5 20:06:49 2018
From: murdoch@dunc@n @ending from gm@il@com (Duncan Murdoch)
Date: Thu, 5 Jul 2018 14:06:49 -0400
Subject: [R-pkg-devel] Weird error on CRAN linux check
In-Reply-To: <CAARY7khaJApX7PWEEtM5zzMXjNgVhsVWw-X-9jO3n9YzPb7L_w@mail.gmail.com>
References: <CAARY7kiVSKGYwzLzPx1M456HEKQwHnuyBo6R9S66Th+JUodsVg@mail.gmail.com>
 <CABdHhvE6dvb3x_8K2O-GzB4Pt7+xmU3nv1zZNv0uV62trSWkUA@mail.gmail.com>
 <CAO1zAVZ71v93G_rrRy6W_mMX1M1=36VZGQTB1Pv+xCVZ+sxykw@mail.gmail.com>
 <CAARY7kizG58Yf6fo3dqKZLvQpv2g6P7Y1CBuAmx4jXP175U2EQ@mail.gmail.com>
 <CAO1zAVYa4_757hao0tBdtcpfgVxRfnhtFfc4HboFs92j3bRt1g@mail.gmail.com>
 <a719f423-eecc-4b94-d04d-e7a1d953a987@gmail.com>
 <CAO1zAVZej0De_uzynnLwvo8hKSo32N4Y_BJb-KL=TASvHUNNyg@mail.gmail.com>
 <b401235f-9233-c8f1-396d-9c91ac842fd5@gmail.com>
 <CALEXWq2+XmNw+Q2cUxs72WqMgg15dOEOmyAUnZj27BX0ngWZgg@mail.gmail.com>
 <CAARY7ki-ZEaE6A101FBp9XC7ePns9+Eo+F_EL6YDjkVEazcBaA@mail.gmail.com>
 <033007e3-1664-6f8a-e14f-f62a07a9ce93@gmail.com>
 <CAARY7khaJApX7PWEEtM5zzMXjNgVhsVWw-X-9jO3n9YzPb7L_w@mail.gmail.com>
Message-ID: <d8e63ee6-a1f6-cb72-4eae-74cf77ccd629@gmail.com>

On 05/07/2018 9:11 AM, David Hugh-Jones wrote:
> 
> Agreed. I fixed the roxygen2 and it works fine. But yet, the original 
> v4.0.1 on CRAN has a namespace file which contains
> 
> S3method(bold,huxtable)
> export(bold)
> export(bold.huxtable)
> 
> and
> 
> S3method("align<-",huxtable)
> export("align<-")
> export("align<-.huxtable")
> 
> yet still fails on linux-patched and linux-release, with "no applicable 
> method" errors for align<- and bold. Unfortunately, I don't know how to 
> reproduce the error on any other platform....

I just got R installed on an Ubuntu VM, and ran "R CMD check 
huxtable_4.0.1.tar.gz" both with and without "--as-cran", without seeing 
the error you quoted.  (I did see other problems, related to not having 
things like pandoc installed; nothing that looked like a problem with 
the package rather than a problem with my R installation.)

That looks like a bug, but without having a system that can reproduce 
it, it's hard to narrow down where:

  - In R's checks?  Seems unlikely, given it is so system specific.
  - In CRAN's scripts?  Really unlikely, since all the tests are in R.
  - In huxtable or some package used by huxtable?  Seems possible: 
maybe memory got corrupted.  Perhaps running under some memory checker 
would be more informative.

Perhaps the CRAN team could be helpful here.

> 
> Anyway, meanwhile, my problem is fixed and I have learned something 
> about function environments.

Given that the error is unrelated to the solution, it really looks like 
memory corruption somewhere or other.

Duncan Murdoch


From murdoch@dunc@n @ending from gm@il@com  Thu Jul  5 20:15:28 2018
From: murdoch@dunc@n @ending from gm@il@com (Duncan Murdoch)
Date: Thu, 5 Jul 2018 14:15:28 -0400
Subject: [R-pkg-devel] Weird error on CRAN linux check
In-Reply-To: <d8e63ee6-a1f6-cb72-4eae-74cf77ccd629@gmail.com>
References: <CAARY7kiVSKGYwzLzPx1M456HEKQwHnuyBo6R9S66Th+JUodsVg@mail.gmail.com>
 <CABdHhvE6dvb3x_8K2O-GzB4Pt7+xmU3nv1zZNv0uV62trSWkUA@mail.gmail.com>
 <CAO1zAVZ71v93G_rrRy6W_mMX1M1=36VZGQTB1Pv+xCVZ+sxykw@mail.gmail.com>
 <CAARY7kizG58Yf6fo3dqKZLvQpv2g6P7Y1CBuAmx4jXP175U2EQ@mail.gmail.com>
 <CAO1zAVYa4_757hao0tBdtcpfgVxRfnhtFfc4HboFs92j3bRt1g@mail.gmail.com>
 <a719f423-eecc-4b94-d04d-e7a1d953a987@gmail.com>
 <CAO1zAVZej0De_uzynnLwvo8hKSo32N4Y_BJb-KL=TASvHUNNyg@mail.gmail.com>
 <b401235f-9233-c8f1-396d-9c91ac842fd5@gmail.com>
 <CALEXWq2+XmNw+Q2cUxs72WqMgg15dOEOmyAUnZj27BX0ngWZgg@mail.gmail.com>
 <CAARY7ki-ZEaE6A101FBp9XC7ePns9+Eo+F_EL6YDjkVEazcBaA@mail.gmail.com>
 <033007e3-1664-6f8a-e14f-f62a07a9ce93@gmail.com>
 <CAARY7khaJApX7PWEEtM5zzMXjNgVhsVWw-X-9jO3n9YzPb7L_w@mail.gmail.com>
 <d8e63ee6-a1f6-cb72-4eae-74cf77ccd629@gmail.com>
Message-ID: <1603a385-a7ee-70c1-7c5e-106ace6d31bc@gmail.com>

On 05/07/2018 2:06 PM, Duncan Murdoch wrote:
> On 05/07/2018 9:11 AM, David Hugh-Jones wrote:
>>
>> Agreed. I fixed the roxygen2 and it works fine. But yet, the original
>> v4.0.1 on CRAN has a namespace file which contains
>>
>> S3method(bold,huxtable)
>> export(bold)
>> export(bold.huxtable)
>>
>> and
>>
>> S3method("align<-",huxtable)
>> export("align<-")
>> export("align<-.huxtable")
>>
>> yet still fails on linux-patched and linux-release, with "no applicable
>> method" errors for align<- and bold. Unfortunately, I don't know how to
>> reproduce the error on any other platform....
> 
> I just got R installed on an Ubuntu VM, and ran "R CMD check
> huxtable_4.0.1.tar.gz" both with and without "--as-cran", without seeing
> the error you quoted.  (I did see other problems, related to not having
> things like pandoc installed; nothing that looked like a problem with
> the package rather than a problem with my R installation.)
> 
> That looks like a bug, but without having a system that can reproduce
> it, it's hard to narrow down where:
> 
>    - In R's checks?  Seems unlikely, given it is so system specific.
>    - In CRAN's scripts?  Really unlikely, since all the tests are in R.
>    - In huxtable or some package used by huxtable?  Seems possible:
> maybe memory got corrupted.  Perhaps running under some memory checker
> would be more informative.

I just tried valgrind on Ubuntu and it didn't see anything.

Duncan Murdoch

> 
> Perhaps the CRAN team could be helpful here.
> 
>>
>> Anyway, meanwhile, my problem is fixed and I have learned something
>> about function environments.
> 
> Given that the error is unrelated to the solution, it really looks like
> memory corruption somewhere or other.
> 
> Duncan Murdoch
>


From i@uc@r86 @ending from gm@il@com  Thu Jul  5 21:32:48 2018
From: i@uc@r86 @ending from gm@il@com (=?UTF-8?B?ScOxYWtpIMOaY2Fy?=)
Date: Thu, 5 Jul 2018 21:32:48 +0200
Subject: [R-pkg-devel] Weird error on CRAN linux check
In-Reply-To: <d8e63ee6-a1f6-cb72-4eae-74cf77ccd629@gmail.com>
References: <CAARY7kiVSKGYwzLzPx1M456HEKQwHnuyBo6R9S66Th+JUodsVg@mail.gmail.com>
 <CABdHhvE6dvb3x_8K2O-GzB4Pt7+xmU3nv1zZNv0uV62trSWkUA@mail.gmail.com>
 <CAO1zAVZ71v93G_rrRy6W_mMX1M1=36VZGQTB1Pv+xCVZ+sxykw@mail.gmail.com>
 <CAARY7kizG58Yf6fo3dqKZLvQpv2g6P7Y1CBuAmx4jXP175U2EQ@mail.gmail.com>
 <CAO1zAVYa4_757hao0tBdtcpfgVxRfnhtFfc4HboFs92j3bRt1g@mail.gmail.com>
 <a719f423-eecc-4b94-d04d-e7a1d953a987@gmail.com>
 <CAO1zAVZej0De_uzynnLwvo8hKSo32N4Y_BJb-KL=TASvHUNNyg@mail.gmail.com>
 <b401235f-9233-c8f1-396d-9c91ac842fd5@gmail.com>
 <CALEXWq2+XmNw+Q2cUxs72WqMgg15dOEOmyAUnZj27BX0ngWZgg@mail.gmail.com>
 <CAARY7ki-ZEaE6A101FBp9XC7ePns9+Eo+F_EL6YDjkVEazcBaA@mail.gmail.com>
 <033007e3-1664-6f8a-e14f-f62a07a9ce93@gmail.com>
 <CAARY7khaJApX7PWEEtM5zzMXjNgVhsVWw-X-9jO3n9YzPb7L_w@mail.gmail.com>
 <d8e63ee6-a1f6-cb72-4eae-74cf77ccd629@gmail.com>
Message-ID: <CALEXWq2LZr7oQuyYa2UTwyFpxJeQ_akVSLpxOtvPWgG4iFkjTg@mail.gmail.com>

I installed huxtable in two environments, my own Fedora installation with R
3.5.0 and all my packages and in a fresh Ubuntu system with R 3.4.4 and an
empty library. In both cases, huxtable is unusable: every example I try
fails because it doesn't find the methods.

So it has nothing to do with R checks or CRAN scripts, and it seems
improbable to me that the error comes from a corrupted dependency.

I?aki

El jue., 5 jul. 2018 20:06, Duncan Murdoch <murdoch.duncan at gmail.com>
escribi?:

> On 05/07/2018 9:11 AM, David Hugh-Jones wrote:
> >
> > Agreed. I fixed the roxygen2 and it works fine. But yet, the original
> > v4.0.1 on CRAN has a namespace file which contains
> >
> > S3method(bold,huxtable)
> > export(bold)
> > export(bold.huxtable)
> >
> > and
> >
> > S3method("align<-",huxtable)
> > export("align<-")
> > export("align<-.huxtable")
> >
> > yet still fails on linux-patched and linux-release, with "no applicable
> > method" errors for align<- and bold. Unfortunately, I don't know how to
> > reproduce the error on any other platform....
>
> I just got R installed on an Ubuntu VM, and ran "R CMD check
> huxtable_4.0.1.tar.gz" both with and without "--as-cran", without seeing
> the error you quoted.  (I did see other problems, related to not having
> things like pandoc installed; nothing that looked like a problem with
> the package rather than a problem with my R installation.)
>
> That looks like a bug, but without having a system that can reproduce
> it, it's hard to narrow down where:
>
>   - In R's checks?  Seems unlikely, given it is so system specific.
>   - In CRAN's scripts?  Really unlikely, since all the tests are in R.
>   - In huxtable or some package used by huxtable?  Seems possible:
> maybe memory got corrupted.  Perhaps running under some memory checker
> would be more informative.
>
> Perhaps the CRAN team could be helpful here.
>
> >
> > Anyway, meanwhile, my problem is fixed and I have learned something
> > about function environments.
>
> Given that the error is unrelated to the solution, it really looks like
> memory corruption somewhere or other.
>
> Duncan Murdoch
>

	[[alternative HTML version deleted]]


From d@vidhughjone@ @ending from gm@il@com  Thu Jul  5 21:35:35 2018
From: d@vidhughjone@ @ending from gm@il@com (David Hugh-Jones)
Date: Thu, 5 Jul 2018 20:35:35 +0100
Subject: [R-pkg-devel] Weird error on CRAN linux check
In-Reply-To: <CALEXWq2LZr7oQuyYa2UTwyFpxJeQ_akVSLpxOtvPWgG4iFkjTg@mail.gmail.com>
References: <CAARY7kiVSKGYwzLzPx1M456HEKQwHnuyBo6R9S66Th+JUodsVg@mail.gmail.com>
 <CABdHhvE6dvb3x_8K2O-GzB4Pt7+xmU3nv1zZNv0uV62trSWkUA@mail.gmail.com>
 <CAO1zAVZ71v93G_rrRy6W_mMX1M1=36VZGQTB1Pv+xCVZ+sxykw@mail.gmail.com>
 <CAARY7kizG58Yf6fo3dqKZLvQpv2g6P7Y1CBuAmx4jXP175U2EQ@mail.gmail.com>
 <CAO1zAVYa4_757hao0tBdtcpfgVxRfnhtFfc4HboFs92j3bRt1g@mail.gmail.com>
 <a719f423-eecc-4b94-d04d-e7a1d953a987@gmail.com>
 <CAO1zAVZej0De_uzynnLwvo8hKSo32N4Y_BJb-KL=TASvHUNNyg@mail.gmail.com>
 <b401235f-9233-c8f1-396d-9c91ac842fd5@gmail.com>
 <CALEXWq2+XmNw+Q2cUxs72WqMgg15dOEOmyAUnZj27BX0ngWZgg@mail.gmail.com>
 <CAARY7ki-ZEaE6A101FBp9XC7ePns9+Eo+F_EL6YDjkVEazcBaA@mail.gmail.com>
 <033007e3-1664-6f8a-e14f-f62a07a9ce93@gmail.com>
 <CAARY7khaJApX7PWEEtM5zzMXjNgVhsVWw-X-9jO3n9YzPb7L_w@mail.gmail.com>
 <d8e63ee6-a1f6-cb72-4eae-74cf77ccd629@gmail.com>
 <CALEXWq2LZr7oQuyYa2UTwyFpxJeQ_akVSLpxOtvPWgG4iFkjTg@mail.gmail.com>
Message-ID: <CAARY7kjTi02XQN0F50ptSgD2VGAcsFWH3fmR1AqvsmD8=PD2-Q@mail.gmail.com>

Installed from CRAN or github? CRAN should be OK - I hope!

On Thu, 5 Jul 2018 at 20:33, I?aki ?car <i.ucar86 at gmail.com> wrote:

> I installed huxtable in two environments, my own Fedora installation with
> R 3.5.0 and all my packages and in a fresh Ubuntu system with R 3.4.4 and
> an empty library. In both cases, huxtable is unusable: every example I try
> fails because it doesn't find the methods.
>
> So it has nothing to do with R checks or CRAN scripts, and it seems
> improbable to me that the error comes from a corrupted dependency.
>
> I?aki
>
>
> El jue., 5 jul. 2018 20:06, Duncan Murdoch <murdoch.duncan at gmail.com>
> escribi?:
>
>> On 05/07/2018 9:11 AM, David Hugh-Jones wrote:
>> >
>> > Agreed. I fixed the roxygen2 and it works fine. But yet, the original
>> > v4.0.1 on CRAN has a namespace file which contains
>> >
>> > S3method(bold,huxtable)
>> > export(bold)
>> > export(bold.huxtable)
>> >
>> > and
>> >
>> > S3method("align<-",huxtable)
>> > export("align<-")
>> > export("align<-.huxtable")
>> >
>> > yet still fails on linux-patched and linux-release, with "no applicable
>> > method" errors for align<- and bold. Unfortunately, I don't know how to
>> > reproduce the error on any other platform....
>>
>> I just got R installed on an Ubuntu VM, and ran "R CMD check
>> huxtable_4.0.1.tar.gz" both with and without "--as-cran", without seeing
>> the error you quoted.  (I did see other problems, related to not having
>> things like pandoc installed; nothing that looked like a problem with
>> the package rather than a problem with my R installation.)
>>
>> That looks like a bug, but without having a system that can reproduce
>> it, it's hard to narrow down where:
>>
>>   - In R's checks?  Seems unlikely, given it is so system specific.
>>   - In CRAN's scripts?  Really unlikely, since all the tests are in R.
>>   - In huxtable or some package used by huxtable?  Seems possible:
>> maybe memory got corrupted.  Perhaps running under some memory checker
>> would be more informative.
>>
>> Perhaps the CRAN team could be helpful here.
>>
>> >
>> > Anyway, meanwhile, my problem is fixed and I have learned something
>> > about function environments.
>>
>> Given that the error is unrelated to the solution, it really looks like
>> memory corruption somewhere or other.
>>
>> Duncan Murdoch
>>
> --
Sent from Gmail Mobile

	[[alternative HTML version deleted]]


From i@uc@r86 @ending from gm@il@com  Thu Jul  5 21:42:52 2018
From: i@uc@r86 @ending from gm@il@com (=?UTF-8?B?ScOxYWtpIMOaY2Fy?=)
Date: Thu, 5 Jul 2018 21:42:52 +0200
Subject: [R-pkg-devel] Weird error on CRAN linux check
In-Reply-To: <CAARY7kjTi02XQN0F50ptSgD2VGAcsFWH3fmR1AqvsmD8=PD2-Q@mail.gmail.com>
References: <CAARY7kiVSKGYwzLzPx1M456HEKQwHnuyBo6R9S66Th+JUodsVg@mail.gmail.com>
 <CABdHhvE6dvb3x_8K2O-GzB4Pt7+xmU3nv1zZNv0uV62trSWkUA@mail.gmail.com>
 <CAO1zAVZ71v93G_rrRy6W_mMX1M1=36VZGQTB1Pv+xCVZ+sxykw@mail.gmail.com>
 <CAARY7kizG58Yf6fo3dqKZLvQpv2g6P7Y1CBuAmx4jXP175U2EQ@mail.gmail.com>
 <CAO1zAVYa4_757hao0tBdtcpfgVxRfnhtFfc4HboFs92j3bRt1g@mail.gmail.com>
 <a719f423-eecc-4b94-d04d-e7a1d953a987@gmail.com>
 <CAO1zAVZej0De_uzynnLwvo8hKSo32N4Y_BJb-KL=TASvHUNNyg@mail.gmail.com>
 <b401235f-9233-c8f1-396d-9c91ac842fd5@gmail.com>
 <CALEXWq2+XmNw+Q2cUxs72WqMgg15dOEOmyAUnZj27BX0ngWZgg@mail.gmail.com>
 <CAARY7ki-ZEaE6A101FBp9XC7ePns9+Eo+F_EL6YDjkVEazcBaA@mail.gmail.com>
 <033007e3-1664-6f8a-e14f-f62a07a9ce93@gmail.com>
 <CAARY7khaJApX7PWEEtM5zzMXjNgVhsVWw-X-9jO3n9YzPb7L_w@mail.gmail.com>
 <d8e63ee6-a1f6-cb72-4eae-74cf77ccd629@gmail.com>
 <CALEXWq2LZr7oQuyYa2UTwyFpxJeQ_akVSLpxOtvPWgG4iFkjTg@mail.gmail.com>
 <CAARY7kjTi02XQN0F50ptSgD2VGAcsFWH3fmR1AqvsmD8=PD2-Q@mail.gmail.com>
Message-ID: <CALEXWq0YxYDNSPGZAj=4GMrznrNpZj+6p5_3p=oPT6uTOyQtcg@mail.gmail.com>

El jue., 5 jul. 2018 21:35, David Hugh-Jones <davidhughjones at gmail.com>
escribi?:

> Installed from CRAN or github? CRAN should be OK - I hope!
>

From GitHub before the patch.


> On Thu, 5 Jul 2018 at 20:33, I?aki ?car <i.ucar86 at gmail.com> wrote:
>
>> I installed huxtable in two environments, my own Fedora installation with
>> R 3.5.0 and all my packages and in a fresh Ubuntu system with R 3.4.4 and
>> an empty library. In both cases, huxtable is unusable: every example I try
>> fails because it doesn't find the methods.
>>
>> So it has nothing to do with R checks or CRAN scripts, and it seems
>> improbable to me that the error comes from a corrupted dependency.
>>
>> I?aki
>>
>>
>> El jue., 5 jul. 2018 20:06, Duncan Murdoch <murdoch.duncan at gmail.com>
>> escribi?:
>>
>>> On 05/07/2018 9:11 AM, David Hugh-Jones wrote:
>>> >
>>> > Agreed. I fixed the roxygen2 and it works fine. But yet, the original
>>> > v4.0.1 on CRAN has a namespace file which contains
>>> >
>>> > S3method(bold,huxtable)
>>> > export(bold)
>>> > export(bold.huxtable)
>>> >
>>> > and
>>> >
>>> > S3method("align<-",huxtable)
>>> > export("align<-")
>>> > export("align<-.huxtable")
>>> >
>>> > yet still fails on linux-patched and linux-release, with "no
>>> applicable
>>> > method" errors for align<- and bold. Unfortunately, I don't know how
>>> to
>>> > reproduce the error on any other platform....
>>>
>>> I just got R installed on an Ubuntu VM, and ran "R CMD check
>>> huxtable_4.0.1.tar.gz" both with and without "--as-cran", without seeing
>>> the error you quoted.  (I did see other problems, related to not having
>>> things like pandoc installed; nothing that looked like a problem with
>>> the package rather than a problem with my R installation.)
>>>
>>> That looks like a bug, but without having a system that can reproduce
>>> it, it's hard to narrow down where:
>>>
>>>   - In R's checks?  Seems unlikely, given it is so system specific.
>>>   - In CRAN's scripts?  Really unlikely, since all the tests are in R.
>>>   - In huxtable or some package used by huxtable?  Seems possible:
>>> maybe memory got corrupted.  Perhaps running under some memory checker
>>> would be more informative.
>>>
>>> Perhaps the CRAN team could be helpful here.
>>>
>>> >
>>> > Anyway, meanwhile, my problem is fixed and I have learned something
>>> > about function environments.
>>>
>>> Given that the error is unrelated to the solution, it really looks like
>>> memory corruption somewhere or other.
>>>
>>> Duncan Murdoch
>>>
>> --
> Sent from Gmail Mobile
>

	[[alternative HTML version deleted]]


From d@vidhughjone@ @ending from gm@il@com  Thu Jul  5 21:51:16 2018
From: d@vidhughjone@ @ending from gm@il@com (David Hugh-Jones)
Date: Thu, 5 Jul 2018 20:51:16 +0100
Subject: [R-pkg-devel] Weird error on CRAN linux check
In-Reply-To: <CALEXWq0YxYDNSPGZAj=4GMrznrNpZj+6p5_3p=oPT6uTOyQtcg@mail.gmail.com>
References: <CAARY7kiVSKGYwzLzPx1M456HEKQwHnuyBo6R9S66Th+JUodsVg@mail.gmail.com>
 <CABdHhvE6dvb3x_8K2O-GzB4Pt7+xmU3nv1zZNv0uV62trSWkUA@mail.gmail.com>
 <CAO1zAVZ71v93G_rrRy6W_mMX1M1=36VZGQTB1Pv+xCVZ+sxykw@mail.gmail.com>
 <CAARY7kizG58Yf6fo3dqKZLvQpv2g6P7Y1CBuAmx4jXP175U2EQ@mail.gmail.com>
 <CAO1zAVYa4_757hao0tBdtcpfgVxRfnhtFfc4HboFs92j3bRt1g@mail.gmail.com>
 <a719f423-eecc-4b94-d04d-e7a1d953a987@gmail.com>
 <CAO1zAVZej0De_uzynnLwvo8hKSo32N4Y_BJb-KL=TASvHUNNyg@mail.gmail.com>
 <b401235f-9233-c8f1-396d-9c91ac842fd5@gmail.com>
 <CALEXWq2+XmNw+Q2cUxs72WqMgg15dOEOmyAUnZj27BX0ngWZgg@mail.gmail.com>
 <CAARY7ki-ZEaE6A101FBp9XC7ePns9+Eo+F_EL6YDjkVEazcBaA@mail.gmail.com>
 <033007e3-1664-6f8a-e14f-f62a07a9ce93@gmail.com>
 <CAARY7khaJApX7PWEEtM5zzMXjNgVhsVWw-X-9jO3n9YzPb7L_w@mail.gmail.com>
 <d8e63ee6-a1f6-cb72-4eae-74cf77ccd629@gmail.com>
 <CALEXWq2LZr7oQuyYa2UTwyFpxJeQ_akVSLpxOtvPWgG4iFkjTg@mail.gmail.com>
 <CAARY7kjTi02XQN0F50ptSgD2VGAcsFWH3fmR1AqvsmD8=PD2-Q@mail.gmail.com>
 <CALEXWq0YxYDNSPGZAj=4GMrznrNpZj+6p5_3p=oPT6uTOyQtcg@mail.gmail.com>
Message-ID: <CAARY7kghG0u4-JNcMVsAddB9kUN3WVR4C=gRR32z2ArwOHqVhA@mail.gmail.com>

That will indeed fail everywhere.  The puzzle is why it fails (only
sometimes) when the methods are all exported. The GitHub equivalent is tag
v4.0.1-rc1.

On Thu, 5 Jul 2018 at 20:43, I?aki ?car <i.ucar86 at gmail.com> wrote:

>
>
> El jue., 5 jul. 2018 21:35, David Hugh-Jones <davidhughjones at gmail.com>
> escribi?:
>
>> Installed from CRAN or github? CRAN should be OK - I hope!
>>
>
> From GitHub before the patch.
>
>
>> On Thu, 5 Jul 2018 at 20:33, I?aki ?car <i.ucar86 at gmail.com> wrote:
>>
>>> I installed huxtable in two environments, my own Fedora installation
>>> with R 3.5.0 and all my packages and in a fresh Ubuntu system with R 3.4.4
>>> and an empty library. In both cases, huxtable is unusable: every example I
>>> try fails because it doesn't find the methods.
>>>
>>> So it has nothing to do with R checks or CRAN scripts, and it seems
>>> improbable to me that the error comes from a corrupted dependency.
>>>
>>> I?aki
>>>
>>>
>>> El jue., 5 jul. 2018 20:06, Duncan Murdoch <murdoch.duncan at gmail.com>
>>> escribi?:
>>>
>>>> On 05/07/2018 9:11 AM, David Hugh-Jones wrote:
>>>> >
>>>> > Agreed. I fixed the roxygen2 and it works fine. But yet, the original
>>>> > v4.0.1 on CRAN has a namespace file which contains
>>>> >
>>>> > S3method(bold,huxtable)
>>>> > export(bold)
>>>> > export(bold.huxtable)
>>>> >
>>>> > and
>>>> >
>>>> > S3method("align<-",huxtable)
>>>> > export("align<-")
>>>> > export("align<-.huxtable")
>>>> >
>>>> > yet still fails on linux-patched and linux-release, with "no
>>>> applicable
>>>> > method" errors for align<- and bold. Unfortunately, I don't know how
>>>> to
>>>> > reproduce the error on any other platform....
>>>>
>>>> I just got R installed on an Ubuntu VM, and ran "R CMD check
>>>> huxtable_4.0.1.tar.gz" both with and without "--as-cran", without
>>>> seeing
>>>> the error you quoted.  (I did see other problems, related to not having
>>>> things like pandoc installed; nothing that looked like a problem with
>>>> the package rather than a problem with my R installation.)
>>>>
>>>> That looks like a bug, but without having a system that can reproduce
>>>> it, it's hard to narrow down where:
>>>>
>>>>   - In R's checks?  Seems unlikely, given it is so system specific.
>>>>   - In CRAN's scripts?  Really unlikely, since all the tests are in R.
>>>>   - In huxtable or some package used by huxtable?  Seems possible:
>>>> maybe memory got corrupted.  Perhaps running under some memory checker
>>>> would be more informative.
>>>>
>>>> Perhaps the CRAN team could be helpful here.
>>>>
>>>> >
>>>> > Anyway, meanwhile, my problem is fixed and I have learned something
>>>> > about function environments.
>>>>
>>>> Given that the error is unrelated to the solution, it really looks like
>>>> memory corruption somewhere or other.
>>>>
>>>> Duncan Murdoch
>>>>
>>> --
>> Sent from Gmail Mobile
>>
> --
Sent from Gmail Mobile

	[[alternative HTML version deleted]]


From i@uc@r86 @ending from gm@il@com  Thu Jul  5 21:53:53 2018
From: i@uc@r86 @ending from gm@il@com (=?UTF-8?B?ScOxYWtpIMOaY2Fy?=)
Date: Thu, 5 Jul 2018 21:53:53 +0200
Subject: [R-pkg-devel] Weird error on CRAN linux check
In-Reply-To: <CAARY7kghG0u4-JNcMVsAddB9kUN3WVR4C=gRR32z2ArwOHqVhA@mail.gmail.com>
References: <CAARY7kiVSKGYwzLzPx1M456HEKQwHnuyBo6R9S66Th+JUodsVg@mail.gmail.com>
 <CABdHhvE6dvb3x_8K2O-GzB4Pt7+xmU3nv1zZNv0uV62trSWkUA@mail.gmail.com>
 <CAO1zAVZ71v93G_rrRy6W_mMX1M1=36VZGQTB1Pv+xCVZ+sxykw@mail.gmail.com>
 <CAARY7kizG58Yf6fo3dqKZLvQpv2g6P7Y1CBuAmx4jXP175U2EQ@mail.gmail.com>
 <CAO1zAVYa4_757hao0tBdtcpfgVxRfnhtFfc4HboFs92j3bRt1g@mail.gmail.com>
 <a719f423-eecc-4b94-d04d-e7a1d953a987@gmail.com>
 <CAO1zAVZej0De_uzynnLwvo8hKSo32N4Y_BJb-KL=TASvHUNNyg@mail.gmail.com>
 <b401235f-9233-c8f1-396d-9c91ac842fd5@gmail.com>
 <CALEXWq2+XmNw+Q2cUxs72WqMgg15dOEOmyAUnZj27BX0ngWZgg@mail.gmail.com>
 <CAARY7ki-ZEaE6A101FBp9XC7ePns9+Eo+F_EL6YDjkVEazcBaA@mail.gmail.com>
 <033007e3-1664-6f8a-e14f-f62a07a9ce93@gmail.com>
 <CAARY7khaJApX7PWEEtM5zzMXjNgVhsVWw-X-9jO3n9YzPb7L_w@mail.gmail.com>
 <d8e63ee6-a1f6-cb72-4eae-74cf77ccd629@gmail.com>
 <CALEXWq2LZr7oQuyYa2UTwyFpxJeQ_akVSLpxOtvPWgG4iFkjTg@mail.gmail.com>
 <CAARY7kjTi02XQN0F50ptSgD2VGAcsFWH3fmR1AqvsmD8=PD2-Q@mail.gmail.com>
 <CALEXWq0YxYDNSPGZAj=4GMrznrNpZj+6p5_3p=oPT6uTOyQtcg@mail.gmail.com>
 <CAARY7kghG0u4-JNcMVsAddB9kUN3WVR4C=gRR32z2ArwOHqVhA@mail.gmail.com>
Message-ID: <CALEXWq3A=6m=0c1=0m0DRH+kz5+wkYxP8Hdfr7DE922y=3F0og@mail.gmail.com>

El jue., 5 jul. 2018 21:51, David Hugh-Jones <davidhughjones at gmail.com>
escribi?:

> That will indeed fail everywhere.  The puzzle is why it fails (only
> sometimes) when the methods are all exported. The GitHub equivalent is tag
> v4.0.1-rc1.
>

Yeap, but the point is that exporting the methods with 'export' should be
superfluous if S3method is used.


> On Thu, 5 Jul 2018 at 20:43, I?aki ?car <i.ucar86 at gmail.com> wrote:
>
>>
>>
>> El jue., 5 jul. 2018 21:35, David Hugh-Jones <davidhughjones at gmail.com>
>> escribi?:
>>
>>> Installed from CRAN or github? CRAN should be OK - I hope!
>>>
>>
>> From GitHub before the patch.
>>
>>
>>> On Thu, 5 Jul 2018 at 20:33, I?aki ?car <i.ucar86 at gmail.com> wrote:
>>>
>>>> I installed huxtable in two environments, my own Fedora installation
>>>> with R 3.5.0 and all my packages and in a fresh Ubuntu system with R 3.4.4
>>>> and an empty library. In both cases, huxtable is unusable: every example I
>>>> try fails because it doesn't find the methods.
>>>>
>>>> So it has nothing to do with R checks or CRAN scripts, and it seems
>>>> improbable to me that the error comes from a corrupted dependency.
>>>>
>>>> I?aki
>>>>
>>>>
>>>> El jue., 5 jul. 2018 20:06, Duncan Murdoch <murdoch.duncan at gmail.com>
>>>> escribi?:
>>>>
>>>>> On 05/07/2018 9:11 AM, David Hugh-Jones wrote:
>>>>> >
>>>>> > Agreed. I fixed the roxygen2 and it works fine. But yet, the
>>>>> original
>>>>> > v4.0.1 on CRAN has a namespace file which contains
>>>>> >
>>>>> > S3method(bold,huxtable)
>>>>> > export(bold)
>>>>> > export(bold.huxtable)
>>>>> >
>>>>> > and
>>>>> >
>>>>> > S3method("align<-",huxtable)
>>>>> > export("align<-")
>>>>> > export("align<-.huxtable")
>>>>> >
>>>>> > yet still fails on linux-patched and linux-release, with "no
>>>>> applicable
>>>>> > method" errors for align<- and bold. Unfortunately, I don't know how
>>>>> to
>>>>> > reproduce the error on any other platform....
>>>>>
>>>>> I just got R installed on an Ubuntu VM, and ran "R CMD check
>>>>> huxtable_4.0.1.tar.gz" both with and without "--as-cran", without
>>>>> seeing
>>>>> the error you quoted.  (I did see other problems, related to not
>>>>> having
>>>>> things like pandoc installed; nothing that looked like a problem with
>>>>> the package rather than a problem with my R installation.)
>>>>>
>>>>> That looks like a bug, but without having a system that can reproduce
>>>>> it, it's hard to narrow down where:
>>>>>
>>>>>   - In R's checks?  Seems unlikely, given it is so system specific.
>>>>>   - In CRAN's scripts?  Really unlikely, since all the tests are in R.
>>>>>   - In huxtable or some package used by huxtable?  Seems possible:
>>>>> maybe memory got corrupted.  Perhaps running under some memory checker
>>>>> would be more informative.
>>>>>
>>>>> Perhaps the CRAN team could be helpful here.
>>>>>
>>>>> >
>>>>> > Anyway, meanwhile, my problem is fixed and I have learned something
>>>>> > about function environments.
>>>>>
>>>>> Given that the error is unrelated to the solution, it really looks
>>>>> like
>>>>> memory corruption somewhere or other.
>>>>>
>>>>> Duncan Murdoch
>>>>>
>>>> --
>>> Sent from Gmail Mobile
>>>
>> --
> Sent from Gmail Mobile
>

	[[alternative HTML version deleted]]


From gor@n@bro@trom @ending from umu@@e  Thu Jul  5 22:19:36 2018
From: gor@n@bro@trom @ending from umu@@e (=?UTF-8?Q?G=c3=b6ran_Brostr=c3=b6m?=)
Date: Thu, 5 Jul 2018 22:19:36 +0200
Subject: [R-pkg-devel] compilation flags WARNING
In-Reply-To: <1530805399.943327.1431053672.7C2A6A02@webmail.messagingengine.com>
References: <87dd8d02-baa6-ff3c-8606-99e937b0e4ec@umu.se>
 <CALEXWq3KQSo_BGabwUVksJ7Z6Cq35dYtX0Fsdi6SFOe7B5GFLA@mail.gmail.com>
 <1530805399.943327.1431053672.7C2A6A02@webmail.messagingengine.com>
Message-ID: <1730a3e8-ab32-fe37-6b55-b05a6f1c9800@umu.se>

Thanks Heather and I?aki: I understand.

I have an old Makevars file in the src directory of the package.  I 
guess I can set the flags there? Now it only contains

# PKG_CFLAGS = -Wall
# PKG_FFLAGS = -Wall -fbounds-check
PKG_LIBS = $(LAPACK_LIBS) $(BLAS_LIBS) $(FLIBS)

G?ran

On 2018-07-05 17:43, Heather Turner wrote:
> 
> 
> On Thu, Jul 5, 2018, at 3:39 PM, I?aki ?car wrote:
>> El jue., 5 jul. 2018 a las 16:11, G?ran Brostr?m
>> (<goran.brostrom at umu.se>) escribi?:
>>>
>>> I am preparing a CRAN release of eha (a trivial change due to a change
>>> in the survival package), but when checking the build I get:
>>>
>>> goran at M6800:~/R$ R CMD check --as-cran eha_2.5.2.tar.gz
>>> ...
>>> * checking compilation flags used ... WARNING
>>> Compilation used the following non-portable flag(s):
>>>     ?-Wdate-time? ?-Werror=format-security? ?-Wformat?
>>> ...
>>
>> AFAIK, these are new checks. I get similar warnings on Fedora for
>> different flags.
>>
>>> I have never seen this before and I haven't (to my knowledge) set any
>>> compilation flags. It is my first build and check on a newly upgraded
>>> ubuntu 18.04 (no issues on 17.10). Should I perhaps ask on r-sig-debian,
>>> or is that observation irrelevant?
>>
>> Again AFAIK (there are package maintainers for several distros here
>> that can correct me if I'm wrong), each distro defines some policies
>> regarding compilation flags that are applied to all packages by
>> default. So these warnings can be safely ignored locally (or you may
>> override them), because those flags won't be defined on CRAN.
>>
> Yes, by default the compilation flags are those set when R was installed. You can see the current flags via
> 
> R CMD config CFLAGS
> 
> which in your case should include  ?-Wdate-time? etc.
> 
> As I?aki says you can safely ignore the warning, but if you prefer to not to have any warnings you can solve this by creating a Makevars.site file with CFLAGS excluding the non-portable ones, e.g.
> 
> CFLAGS=-Wall -g O0 -fPIC
> 
> This should be saved in the /etc directory of R.home(), e.g. /usr/lib/R/etc.
> 
> See https://cran.r-project.org/doc/manuals/r-release/R-admin.html#Customizing-package-compilation for more information.
> 
> Heather
> 
>> I?aki
>>
>>>
>>> G?ran Brostr?m
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From i@uc@r86 @ending from gm@il@com  Thu Jul  5 22:27:41 2018
From: i@uc@r86 @ending from gm@il@com (=?UTF-8?B?ScOxYWtpIMOaY2Fy?=)
Date: Thu, 5 Jul 2018 22:27:41 +0200
Subject: [R-pkg-devel] compilation flags WARNING
In-Reply-To: <1730a3e8-ab32-fe37-6b55-b05a6f1c9800@umu.se>
References: <87dd8d02-baa6-ff3c-8606-99e937b0e4ec@umu.se>
 <CALEXWq3KQSo_BGabwUVksJ7Z6Cq35dYtX0Fsdi6SFOe7B5GFLA@mail.gmail.com>
 <1530805399.943327.1431053672.7C2A6A02@webmail.messagingengine.com>
 <1730a3e8-ab32-fe37-6b55-b05a6f1c9800@umu.se>
Message-ID: <CALEXWq03TBJ2Dwi4LtFNhapkjuwJfBchuZc94XYt_ZZNOo-upQ@mail.gmail.com>

El jue., 5 jul. 2018 a las 22:23, G?ran Brostr?m
(<goran.brostrom at umu.se>) escribi?:
>
> Thanks Heather and I?aki: I understand.
>
> I have an old Makevars file in the src directory of the package.  I
> guess I can set the flags there? Now it only contains
>
> # PKG_CFLAGS = -Wall
> # PKG_FFLAGS = -Wall -fbounds-check
> PKG_LIBS = $(LAPACK_LIBS) $(BLAS_LIBS) $(FLIBS)

IMHO it's better to do it outside the package. The best way, without
changing the system settings, is to place a Makevars under ~/.R/

I?aki

>
> G?ran
>
> On 2018-07-05 17:43, Heather Turner wrote:
> >
> >
> > On Thu, Jul 5, 2018, at 3:39 PM, I?aki ?car wrote:
> >> El jue., 5 jul. 2018 a las 16:11, G?ran Brostr?m
> >> (<goran.brostrom at umu.se>) escribi?:
> >>>
> >>> I am preparing a CRAN release of eha (a trivial change due to a change
> >>> in the survival package), but when checking the build I get:
> >>>
> >>> goran at M6800:~/R$ R CMD check --as-cran eha_2.5.2.tar.gz
> >>> ...
> >>> * checking compilation flags used ... WARNING
> >>> Compilation used the following non-portable flag(s):
> >>>     ?-Wdate-time? ?-Werror=format-security? ?-Wformat?
> >>> ...
> >>
> >> AFAIK, these are new checks. I get similar warnings on Fedora for
> >> different flags.
> >>
> >>> I have never seen this before and I haven't (to my knowledge) set any
> >>> compilation flags. It is my first build and check on a newly upgraded
> >>> ubuntu 18.04 (no issues on 17.10). Should I perhaps ask on r-sig-debian,
> >>> or is that observation irrelevant?
> >>
> >> Again AFAIK (there are package maintainers for several distros here
> >> that can correct me if I'm wrong), each distro defines some policies
> >> regarding compilation flags that are applied to all packages by
> >> default. So these warnings can be safely ignored locally (or you may
> >> override them), because those flags won't be defined on CRAN.
> >>
> > Yes, by default the compilation flags are those set when R was installed. You can see the current flags via
> >
> > R CMD config CFLAGS
> >
> > which in your case should include  ?-Wdate-time? etc.
> >
> > As I?aki says you can safely ignore the warning, but if you prefer to not to have any warnings you can solve this by creating a Makevars.site file with CFLAGS excluding the non-portable ones, e.g.
> >
> > CFLAGS=-Wall -g O0 -fPIC
> >
> > This should be saved in the /etc directory of R.home(), e.g. /usr/lib/R/etc.
> >
> > See https://cran.r-project.org/doc/manuals/r-release/R-admin.html#Customizing-package-compilation for more information.
> >
> > Heather
> >
> >> I?aki
> >>
> >>>
> >>> G?ran Brostr?m
> >>
> >> ______________________________________________
> >> R-package-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel



-- 
I?aki ?car
http://www.enchufa2.es
@Enchufa2


From ht @ending from he@therturner@net  Thu Jul  5 22:34:39 2018
From: ht @ending from he@therturner@net (Heather Turner)
Date: Thu, 05 Jul 2018 21:34:39 +0100
Subject: [R-pkg-devel] compilation flags WARNING
In-Reply-To: <1730a3e8-ab32-fe37-6b55-b05a6f1c9800@umu.se>
References: <87dd8d02-baa6-ff3c-8606-99e937b0e4ec@umu.se>
 <CALEXWq3KQSo_BGabwUVksJ7Z6Cq35dYtX0Fsdi6SFOe7B5GFLA@mail.gmail.com>
 <1530805399.943327.1431053672.7C2A6A02@webmail.messagingengine.com>
 <1730a3e8-ab32-fe37-6b55-b05a6f1c9800@umu.se>
Message-ID: <1530822879.665057.1431344784.507980AF@webmail.messagingengine.com>

I would suggest not to set the CFLAGS in the package itself - at least not exclusively. R-admin 6.3.3 (the section I linked before) recommends "to  enable a reasonable amount of diagnostic messaging (?warnings?) when compiling, such as e.g. -Wall -pedantic for tools from GCC", while R-exts 1.2.1 says"When writing a Makevars file for a package you intend to distribute, take care to ensure that it is not specific to your compiler: flags such as -O2 -Wall -pedantic (and all other -W flags: for the Oracle compilers these are used to pass arguments to compiler phases) are all specific to GCC." Since these are contradictory, you can't satisfy both via PKG_CFLAGS alone. That is why I suggest to use the Makevars.site file to set pedantic flags for local use that are not distributed with the package (if you don't want to set them at a site-wide level R-admin 6.3.3 gives alternatives for setting at user-level).

Heather

On Thu, Jul 5, 2018, at 9:19 PM, G?ran Brostr?m wrote:
> Thanks Heather and I?aki: I understand.
> 
> I have an old Makevars file in the src directory of the package.  I 
> guess I can set the flags there? Now it only contains
> 
> # PKG_CFLAGS = -Wall
> # PKG_FFLAGS = -Wall -fbounds-check
> PKG_LIBS = $(LAPACK_LIBS) $(BLAS_LIBS) $(FLIBS)
> 
> G?ran
> 
> On 2018-07-05 17:43, Heather Turner wrote:
> > 
> > 
> > On Thu, Jul 5, 2018, at 3:39 PM, I?aki ?car wrote:
> >> El jue., 5 jul. 2018 a las 16:11, G?ran Brostr?m
> >> (<goran.brostrom at umu.se>) escribi?:
> >>>
> >>> I am preparing a CRAN release of eha (a trivial change due to a change
> >>> in the survival package), but when checking the build I get:
> >>>
> >>> goran at M6800:~/R$ R CMD check --as-cran eha_2.5.2.tar.gz
> >>> ...
> >>> * checking compilation flags used ... WARNING
> >>> Compilation used the following non-portable flag(s):
> >>>     ?-Wdate-time? ?-Werror=format-security? ?-Wformat?
> >>> ...
> >>
> >> AFAIK, these are new checks. I get similar warnings on Fedora for
> >> different flags.
> >>
> >>> I have never seen this before and I haven't (to my knowledge) set any
> >>> compilation flags. It is my first build and check on a newly upgraded
> >>> ubuntu 18.04 (no issues on 17.10). Should I perhaps ask on r-sig-debian,
> >>> or is that observation irrelevant?
> >>
> >> Again AFAIK (there are package maintainers for several distros here
> >> that can correct me if I'm wrong), each distro defines some policies
> >> regarding compilation flags that are applied to all packages by
> >> default. So these warnings can be safely ignored locally (or you may
> >> override them), because those flags won't be defined on CRAN.
> >>
> > Yes, by default the compilation flags are those set when R was installed. You can see the current flags via
> > 
> > R CMD config CFLAGS
> > 
> > which in your case should include  ?-Wdate-time? etc.
> > 
> > As I?aki says you can safely ignore the warning, but if you prefer to not to have any warnings you can solve this by creating a Makevars.site file with CFLAGS excluding the non-portable ones, e.g.
> > 
> > CFLAGS=-Wall -g O0 -fPIC
> > 
> > This should be saved in the /etc directory of R.home(), e.g. /usr/lib/R/etc.
> > 
> > See https://cran.r-project.org/doc/manuals/r-release/R-admin.html#Customizing-package-compilation for more information.
> > 
> > Heather
> > 
> >> I?aki
> >>
> >>>
> >>> G?ran Brostr?m
> >>
> >> ______________________________________________
> >> R-package-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> > 
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From edd @ending from debi@n@org  Thu Jul  5 22:43:59 2018
From: edd @ending from debi@n@org (Dirk Eddelbuettel)
Date: Thu, 5 Jul 2018 15:43:59 -0500
Subject: [R-pkg-devel] compilation flags WARNING
In-Reply-To: <1730a3e8-ab32-fe37-6b55-b05a6f1c9800@umu.se>
References: <87dd8d02-baa6-ff3c-8606-99e937b0e4ec@umu.se>
 <CALEXWq3KQSo_BGabwUVksJ7Z6Cq35dYtX0Fsdi6SFOe7B5GFLA@mail.gmail.com>
 <1530805399.943327.1431053672.7C2A6A02@webmail.messagingengine.com>
 <1730a3e8-ab32-fe37-6b55-b05a6f1c9800@umu.se>
Message-ID: <23358.33551.896616.339046@rob.eddelbuettel.com>


On 5 July 2018 at 22:19, G?ran Brostr?m wrote:
| Thanks Heather and I?aki: I understand.
| 
| I have an old Makevars file in the src directory of the package.  I 
| guess I can set the flags there?

No, because those get scanned by R CMD check and friends.

For the one you do not want, Heather's suggestion was spot. Supply a new
(cleaner) system-wide default.  Those values are not checked.

I sometimes do the opposite and add (what would be "non-portable") options in
~/.R/Makevars to make very noisy builds quieter etc.

| Now it only contains
| 
| # PKG_CFLAGS = -Wall
| # PKG_FFLAGS = -Wall -fbounds-check
| PKG_LIBS = $(LAPACK_LIBS) $(BLAS_LIBS) $(FLIBS)

As we said no issues as nothing not allowed by R here.

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From cdeterm@njr @ending from gm@il@com  Fri Jul  6 17:58:10 2018
From: cdeterm@njr @ending from gm@il@com (Charles Determan)
Date: Fri, 6 Jul 2018 10:58:10 -0500
Subject: [R-pkg-devel] S4 generics package?
Message-ID: <CAKxd1KP5vzug-hZ=6QecePSfbW1w7SW-KgH4TomaAsBGr_Xjcw@mail.gmail.com>

Greetings,

I know in Bioconductor there is the BiocGenerics package (
https://bioconductor.org/packages/release/bioc/html/BiocGenerics.html).  I
have not been able to find any similar package on CRAN.  I use S4 methods
quite often and a package like this would be very useful for future
packages I am developing.

My question generally is, should I consider using BiocGenerics as a
dependency if I normally submit to CRAN?  My understanding is that I would
need to submit any package which uses BiocGenerics to Bioconductor to meet
dependency requirements.  I have no issue with Bioconductor, I even have
another package published on there.  However, the packages I am developing
are not specific to bioinformatics.

That said, if no such 'generics' package exists on CRAN I am curious what
people would think of me possibly developing a 'peer' package similar to
BiocGenerics for CRAN packages.

Regards,
Charles

	[[alternative HTML version deleted]]


From ligge@ @ending from @t@ti@tik@tu-dortmund@de  Fri Jul  6 18:06:14 2018
From: ligge@ @ending from @t@ti@tik@tu-dortmund@de (Uwe Ligges)
Date: Fri, 6 Jul 2018 18:06:14 +0200
Subject: [R-pkg-devel] S4 generics package?
In-Reply-To: <CAKxd1KP5vzug-hZ=6QecePSfbW1w7SW-KgH4TomaAsBGr_Xjcw@mail.gmail.com>
References: <CAKxd1KP5vzug-hZ=6QecePSfbW1w7SW-KgH4TomaAsBGr_Xjcw@mail.gmail.com>
Message-ID: <ae164743-ab22-f93c-40f7-ff870b05b937@statistik.tu-dortmund.de>

You can submit to CRAN: strong dependencies must be available from a 
mainstream repository such as CRAN and BioC.

Best,
Uwe Ligges

On 06.07.2018 17:58, Charles Determan wrote:
> Greetings,
> 
> I know in Bioconductor there is the BiocGenerics package (
> https://bioconductor.org/packages/release/bioc/html/BiocGenerics.html).  I
> have not been able to find any similar package on CRAN.  I use S4 methods
> quite often and a package like this would be very useful for future
> packages I am developing.
> 
> My question generally is, should I consider using BiocGenerics as a
> dependency if I normally submit to CRAN?  My understanding is that I would
> need to submit any package which uses BiocGenerics to Bioconductor to meet
> dependency requirements.  I have no issue with Bioconductor, I even have
> another package published on there.  However, the packages I am developing
> are not specific to bioinformatics.
> 
> That said, if no such 'generics' package exists on CRAN I am curious what
> people would think of me possibly developing a 'peer' package similar to
> BiocGenerics for CRAN packages.
> 
> Regards,
> Charles
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From @n248 @ending from cornell@edu  Sat Jul  7 06:53:31 2018
From: @n248 @ending from cornell@edu (SN248)
Date: Sat, 7 Jul 2018 00:53:31 -0400
Subject: [R-pkg-devel] Help with reproducing (and solving) clang-UBSAN and
 Solaris installation errors
Message-ID: <CAP6q79FyPnP=LrRxF6VeLfVoigG9J+eyeCGvrXDUk2VonG7DNw@mail.gmail.com>

Dear all

I recently submitted an R package to CRAN which was accepted. However, the
package is failing additional tests, i.e., it fails to install on Solaris
and also produces a clang-UBSAN issue. These can be seen here

https://cran.r-project.org/web/checks/check_results_sundialr.html

I tried to reproduce the installation error for Solaris and clang-UBSAN
issue using rhub (R package). However, in both cases, I don't see any error
reported by rhub.

Solaris installation went fine (Oracle Solaris 10, x86, 32 bit, R-patched
(experimental)). See the report below:

https://builder.r-hub.io/status/original/sundialr_0.1.0.tar.gz-b13f34c036448a13cbc147f4fb2cf37b

and

No errors were reported when I run 'check_with_sanitizers()' command (I
assume that is the right command to generate clang-UBSAN errors, though the
Platform information is - Debian Linux, R-devel, GCC ASAN/UBSAN). See the
report of the test below:

https://builder.r-hub.io/status/original/sundialr_0.1.0.tar.gz-a38aa86e16494f41b6f2e2e093547b7b

I am not sure how to proceed with debugging those errors as I am not able
to reproduce them. Is there any way to test installation on Solaris (I
don't have access to one, unfortunately) and reproduce clang-UBSAN issue.

The clang-UBSAN issue _may_ be related to Rcpp::XPtr and _may_ remain
unresolved (based on the thread in Rcpp-devel forum earlier (I could have
mis-interpreted the whole discussion there) -
http://lists.r-forge.r-project.org/pipermail/rcpp-devel/2017-July/009656.html
)

Any help in how to reproduce these issues will be highly appreciated.

On a separate note - in case these issues remain unresolved, is the package
doomed to go to CRAN archives then? The package installation and running
examples went without error/warning/note on all the platforms in rhub.

Thanks
SN

	[[alternative HTML version deleted]]


From ch@rlie @ending from @t@t@umn@edu  Sun Jul  8 17:48:27 2018
From: ch@rlie @ending from @t@t@umn@edu (Charles Geyer)
Date: Sun, 8 Jul 2018 10:48:27 -0500
Subject: [R-pkg-devel] Determine subset from glm object
Message-ID: <CAKctRd0gT1yMxnjXrv+hB0_ze1ujmWptMFn+ha6v2apWZ_KCXQ@mail.gmail.com>

I need to find out from an object returned by R function glm with argument
x = TRUE
what the subsetting was.  It appears that if gout is that object, then

as.integer(rownames(gout$x))

is a subset vector equivalent to the one actually used.

I do also have the call to glm (as a call object) so can determine the
actual subset argument, but this seems to be not so useful because I don't
know the length of the original variables before subsetting.

So now my questions.  Is this idea above (using rownames) OK even though I
cannot find where (if anywhere) it is documented?  Is there a better way?
One more guaranteed to be correct in the future?

-- 
Charles Geyer
Professor, School of Statistics
Resident Fellow, Minnesota Center for Philosophy of Science
University of Minnesota
charlie at stat.umn.edu

	[[alternative HTML version deleted]]


From murdoch@dunc@n @ending from gm@il@com  Sun Jul  8 19:10:54 2018
From: murdoch@dunc@n @ending from gm@il@com (Duncan Murdoch)
Date: Sun, 8 Jul 2018 13:10:54 -0400
Subject: [R-pkg-devel] Determine subset from glm object
In-Reply-To: <CAKctRd0gT1yMxnjXrv+hB0_ze1ujmWptMFn+ha6v2apWZ_KCXQ@mail.gmail.com>
References: <CAKctRd0gT1yMxnjXrv+hB0_ze1ujmWptMFn+ha6v2apWZ_KCXQ@mail.gmail.com>
Message-ID: <3f30ddb7-8fa3-79bb-68fd-a5063e5b7293@gmail.com>

On 08/07/2018 11:48 AM, Charles Geyer wrote:
> I need to find out from an object returned by R function glm with argument
> x = TRUE
> what the subsetting was.  It appears that if gout is that object, then
> 
> as.integer(rownames(gout$x))
> 
> is a subset vector equivalent to the one actually used.

You don't want the "as.integer".  If the dataframe had rownames to start 
with, the x component of the fit will have row labels consisting of 
those labels, so as.integer may fail.  Even if it doesn't, the rownames 
aren't necessarily sequential integers.   You can index the dataframe by 
the character versions of the default numbers, so simply
rownames(gout$x) should always work.

More generally, I'm not sure your question is well posed.  What do you 
mean by "the subsetting"?  If you have something like

df <- data.frame(letters, x = 1:26, y = rbinom(26, 1, 0.5))

df1 <- subset(df, letters > "b" & letters < "y")

gout <- glm(y ~ x, data = df1, subset = letters < "q", x = TRUE)

the rownames(gout$x) are going to be numbers for rows of df, because df1 
will get a subset of those as row labels.


> I do also have the call to glm (as a call object) so can determine the
> actual subset argument, but this seems to be not so useful because I don't
> know the length of the original variables before subsetting.

You should be able to evaluate the subset expression in the environment 
of the formula, i.e.

eval(gout$call$subset, envir = environment(gout$formula))

This may give incorrect results if the variables used in subsetting 
aren't in the dataframe and have changed since glm() was called.


> So now my questions.  Is this idea above (using rownames) OK even though I
> cannot find where (if anywhere) it is documented?  Is there a better way?
> One more guaranteed to be correct in the future?
> 

I would trust evaluating the subset more than grabbing row labels from 
gout$x, but I don't know for sure it is likely to be more robust.

Duncan Murdoch


From ch@rlie @ending from @t@t@umn@edu  Sun Jul  8 20:04:12 2018
From: ch@rlie @ending from @t@t@umn@edu (Charles Geyer)
Date: Sun, 8 Jul 2018 13:04:12 -0500
Subject: [R-pkg-devel] Determine subset from glm object
In-Reply-To: <3f30ddb7-8fa3-79bb-68fd-a5063e5b7293@gmail.com>
References: <CAKctRd0gT1yMxnjXrv+hB0_ze1ujmWptMFn+ha6v2apWZ_KCXQ@mail.gmail.com>
 <3f30ddb7-8fa3-79bb-68fd-a5063e5b7293@gmail.com>
Message-ID: <CAKctRd1PsLceniK5Yi-etFMXrwj3stDG7kOkZxqTixfLVM_WJA@mail.gmail.com>

I think your second option sounds better because this is all happening
inside one function I'm writing so users won't be able mess with the glm
object. Many thanks.

On Sun, Jul 8, 2018, 12:10 PM Duncan Murdoch <murdoch.duncan at gmail.com>
wrote:

> On 08/07/2018 11:48 AM, Charles Geyer wrote:
> > I need to find out from an object returned by R function glm with
> argument
> > x = TRUE
> > what the subsetting was.  It appears that if gout is that object, then
> >
> > as.integer(rownames(gout$x))
> >
> > is a subset vector equivalent to the one actually used.
>
> You don't want the "as.integer".  If the dataframe had rownames to start
> with, the x component of the fit will have row labels consisting of
> those labels, so as.integer may fail.  Even if it doesn't, the rownames
> aren't necessarily sequential integers.   You can index the dataframe by
> the character versions of the default numbers, so simply
> rownames(gout$x) should always work.
>
> More generally, I'm not sure your question is well posed.  What do you
> mean by "the subsetting"?  If you have something like
>
> df <- data.frame(letters, x = 1:26, y = rbinom(26, 1, 0.5))
>
> df1 <- subset(df, letters > "b" & letters < "y")
>
> gout <- glm(y ~ x, data = df1, subset = letters < "q", x = TRUE)
>
> the rownames(gout$x) are going to be numbers for rows of df, because df1
> will get a subset of those as row labels.
>
>
> > I do also have the call to glm (as a call object) so can determine the
> > actual subset argument, but this seems to be not so useful because I
> don't
> > know the length of the original variables before subsetting.
>
> You should be able to evaluate the subset expression in the environment
> of the formula, i.e.
>
> eval(gout$call$subset, envir = environment(gout$formula))
>
> This may give incorrect results if the variables used in subsetting
> aren't in the dataframe and have changed since glm() was called.
>
>
> > So now my questions.  Is this idea above (using rownames) OK even though
> I
> > cannot find where (if anywhere) it is documented?  Is there a better way?
> > One more guaranteed to be correct in the future?
> >
>
> I would trust evaluating the subset more than grabbing row labels from
> gout$x, but I don't know for sure it is likely to be more robust.
>
> Duncan Murdoch
>

	[[alternative HTML version deleted]]


From wdunl@p @ending from tibco@com  Sun Jul  8 20:08:28 2018
From: wdunl@p @ending from tibco@com (William Dunlap)
Date: Sun, 8 Jul 2018 11:08:28 -0700
Subject: [R-pkg-devel] Determine subset from glm object
In-Reply-To: <CAKctRd1PsLceniK5Yi-etFMXrwj3stDG7kOkZxqTixfLVM_WJA@mail.gmail.com>
References: <CAKctRd0gT1yMxnjXrv+hB0_ze1ujmWptMFn+ha6v2apWZ_KCXQ@mail.gmail.com>
 <3f30ddb7-8fa3-79bb-68fd-a5063e5b7293@gmail.com>
 <CAKctRd1PsLceniK5Yi-etFMXrwj3stDG7kOkZxqTixfLVM_WJA@mail.gmail.com>
Message-ID: <CAF8bMcbMuK-+ONzJNNWLwE6ESD701ApAjQ5R3Q2Pci9wFjT8pw@mail.gmail.com>

If there might be NA's in the response or predictors so na.exclude or
na.omit would remove
some rows as well, then using the row.names might be an easier way to match
up rows in
the original data with rows in gout$x.

Bill Dunlap
TIBCO Software
wdunlap tibco.com

On Sun, Jul 8, 2018 at 11:04 AM, Charles Geyer <charlie at stat.umn.edu> wrote:

> I think your second option sounds better because this is all happening
> inside one function I'm writing so users won't be able mess with the glm
> object. Many thanks.
>
> On Sun, Jul 8, 2018, 12:10 PM Duncan Murdoch <murdoch.duncan at gmail.com>
> wrote:
>
> > On 08/07/2018 11:48 AM, Charles Geyer wrote:
> > > I need to find out from an object returned by R function glm with
> > argument
> > > x = TRUE
> > > what the subsetting was.  It appears that if gout is that object, then
> > >
> > > as.integer(rownames(gout$x))
> > >
> > > is a subset vector equivalent to the one actually used.
> >
> > You don't want the "as.integer".  If the dataframe had rownames to start
> > with, the x component of the fit will have row labels consisting of
> > those labels, so as.integer may fail.  Even if it doesn't, the rownames
> > aren't necessarily sequential integers.   You can index the dataframe by
> > the character versions of the default numbers, so simply
> > rownames(gout$x) should always work.
> >
> > More generally, I'm not sure your question is well posed.  What do you
> > mean by "the subsetting"?  If you have something like
> >
> > df <- data.frame(letters, x = 1:26, y = rbinom(26, 1, 0.5))
> >
> > df1 <- subset(df, letters > "b" & letters < "y")
> >
> > gout <- glm(y ~ x, data = df1, subset = letters < "q", x = TRUE)
> >
> > the rownames(gout$x) are going to be numbers for rows of df, because df1
> > will get a subset of those as row labels.
> >
> >
> > > I do also have the call to glm (as a call object) so can determine the
> > > actual subset argument, but this seems to be not so useful because I
> > don't
> > > know the length of the original variables before subsetting.
> >
> > You should be able to evaluate the subset expression in the environment
> > of the formula, i.e.
> >
> > eval(gout$call$subset, envir = environment(gout$formula))
> >
> > This may give incorrect results if the variables used in subsetting
> > aren't in the dataframe and have changed since glm() was called.
> >
> >
> > > So now my questions.  Is this idea above (using rownames) OK even
> though
> > I
> > > cannot find where (if anywhere) it is documented?  Is there a better
> way?
> > > One more guaranteed to be correct in the future?
> > >
> >
> > I would trust evaluating the subset more than grabbing row labels from
> > gout$x, but I don't know for sure it is likely to be more robust.
> >
> > Duncan Murdoch
> >
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From ch@rlie @ending from @t@t@umn@edu  Sun Jul  8 21:25:14 2018
From: ch@rlie @ending from @t@t@umn@edu (Charles Geyer)
Date: Sun, 8 Jul 2018 14:25:14 -0500
Subject: [R-pkg-devel] Determine subset from glm object
In-Reply-To: <CAKctRd1PsLceniK5Yi-etFMXrwj3stDG7kOkZxqTixfLVM_WJA@mail.gmail.com>
References: <CAKctRd0gT1yMxnjXrv+hB0_ze1ujmWptMFn+ha6v2apWZ_KCXQ@mail.gmail.com>
 <3f30ddb7-8fa3-79bb-68fd-a5063e5b7293@gmail.com>
 <CAKctRd1PsLceniK5Yi-etFMXrwj3stDG7kOkZxqTixfLVM_WJA@mail.gmail.com>
Message-ID: <CAKctRd0Ax4roibN6cncmKNGqeDJQyZ=N=b8CmV0FTwGWa=_TZA@mail.gmail.com>

I spoke too soon.  The problem isn't that I don't know how to get the
subset argument. I am just calling glm (via eval) with (mostly) the
same arguments as the call to my function, so subset is (if not
missing) an argument to my function too.  So I can just use it.

The problem is that I then want to call glm again fitting a subset of
the original subset (if there was one).  And when I do that glm will
refer to the original data wherever it is, and I don't have that.

if this isn't clear, here is the code as it stands now
https://github.com/cjgeyer/glmdr/blob/master/package/glmdr/R/glmdr.R.

The issue is with the lines (very near the end)

subset.lcm <- as.integer(rownames(modmat))
subset.lcm <- subset.lcm[linearity]
# call glm again
call.glm$subset <- subset.lcm
gout.lcm <- eval(call.glm, parent.frame())

I can see from what Duncan said that I really don't want the
as.integer around rownames.  But it is not clear what would be better.

I just had another thought that I could get the original data with
another call to glm with subset removed from the call and method =
"model.frame" added.  And I think (maybe, have to try it) that it
would have NA's removed or whatever na.action says to do.
But that seems redundant.



On Sun, Jul 8, 2018, 1:04 PM Charles Geyer <charlie at stat.umn.edu> wrote:
>
> I think your second option sounds better because this is all happening inside one function I'm writing so users won't be able mess with the glm object. Many thanks.
>
> On Sun, Jul 8, 2018, 12:10 PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>>
>> On 08/07/2018 11:48 AM, Charles Geyer wrote:
>> > I need to find out from an object returned by R function glm with argument
>> > x = TRUE
>> > what the subsetting was.  It appears that if gout is that object, then
>> >
>> > as.integer(rownames(gout$x))
>> >
>> > is a subset vector equivalent to the one actually used.
>>
>> You don't want the "as.integer".  If the dataframe had rownames to start
>> with, the x component of the fit will have row labels consisting of
>> those labels, so as.integer may fail.  Even if it doesn't, the rownames
>> aren't necessarily sequential integers.   You can index the dataframe by
>> the character versions of the default numbers, so simply
>> rownames(gout$x) should always work.
>>
>> More generally, I'm not sure your question is well posed.  What do you
>> mean by "the subsetting"?  If you have something like
>>
>> df <- data.frame(letters, x = 1:26, y = rbinom(26, 1, 0.5))
>>
>> df1 <- subset(df, letters > "b" & letters < "y")
>>
>> gout <- glm(y ~ x, data = df1, subset = letters < "q", x = TRUE)
>>
>> the rownames(gout$x) are going to be numbers for rows of df, because df1
>> will get a subset of those as row labels.
>>
>>
>> > I do also have the call to glm (as a call object) so can determine the
>> > actual subset argument, but this seems to be not so useful because I don't
>> > know the length of the original variables before subsetting.
>>
>> You should be able to evaluate the subset expression in the environment
>> of the formula, i.e.
>>
>> eval(gout$call$subset, envir = environment(gout$formula))
>>
>> This may give incorrect results if the variables used in subsetting
>> aren't in the dataframe and have changed since glm() was called.
>>
>>
>> > So now my questions.  Is this idea above (using rownames) OK even though I
>> > cannot find where (if anywhere) it is documented?  Is there a better way?
>> > One more guaranteed to be correct in the future?
>> >
>>
>> I would trust evaluating the subset more than grabbing row labels from
>> gout$x, but I don't know for sure it is likely to be more robust.
>>
>> Duncan Murdoch


From r@turner @ending from @uckl@nd@@c@nz  Mon Jul  9 00:57:46 2018
From: r@turner @ending from @uckl@nd@@c@nz (Rolf Turner)
Date: Mon, 9 Jul 2018 10:57:46 +1200
Subject: [R-pkg-devel] Puzzled about "locked environments".
Message-ID: <53ac4e41-a2cb-f4a3-9e19-106aa544188f@auckland.ac.nz>


Recently I experimented with assigning a variable within the environment 
of a function in a package that I am developing.  Slightly more explicitly:

In a function "foo()" in the package, I have lines like:

    big <- 42
    assign("big",big,envir=environment(bar))

where "bar()" is another function in the package.

This causes an error to be thrown:

> Error in assign("big", big, envir = environment(bar)) : 
>   cannot add bindings to a locked environment

The reason that I am puzzled about this is that I used this syntax 
repeatedly in my CRAN package "AssetPricing".  In this latter package 
the syntax seems to work flawlessly.  No errors are thrown.  No mention 
of "locked environments".

Why would environments get "locked" in the package that I am currently 
fooling about with, but not in the AssetPricing package?  Is there 
anything that I  can do to keep environments from getting "locked"?

Can anyone suggest where I should start looking for differences in the 
nature of the two packages?

I could possibly give more detail, but I have no idea as to what might 
be relevant.

One difference is that AssetPricing involves no dynamically loaded 
Fortran code, whereas the package that I am currently fooling about with 
*does* involve such code.  (But neither "foo()" not "bar()" make direct 
calls to .Fortran().)

Grateful for any insights.

cheers,

Rolf Turner

-- 
Technical Editor ANZJS
Department of Statistics
University of Auckland
Phone: +64-9-373-7599 ext. 88276


From murdoch@dunc@n @ending from gm@il@com  Mon Jul  9 01:23:28 2018
From: murdoch@dunc@n @ending from gm@il@com (Duncan Murdoch)
Date: Sun, 8 Jul 2018 19:23:28 -0400
Subject: [R-pkg-devel] Puzzled about "locked environments".
In-Reply-To: <53ac4e41-a2cb-f4a3-9e19-106aa544188f@auckland.ac.nz>
References: <53ac4e41-a2cb-f4a3-9e19-106aa544188f@auckland.ac.nz>
Message-ID: <6e51a2a5-b29b-e14d-85f9-7a87dbbaaded@gmail.com>

On 08/07/2018 6:57 PM, Rolf Turner wrote:
> 
> Recently I experimented with assigning a variable within the environment
> of a function in a package that I am developing.  Slightly more explicitly:
> 
> In a function "foo()" in the package, I have lines like:
> 
>      big <- 42
>      assign("big",big,envir=environment(bar))
> 
> where "bar()" is another function in the package.
> 
> This causes an error to be thrown:
> 
>> Error in assign("big", big, envir = environment(bar)) :
>>    cannot add bindings to a locked environment
> 
> The reason that I am puzzled about this is that I used this syntax
> repeatedly in my CRAN package "AssetPricing".  In this latter package
> the syntax seems to work flawlessly.  No errors are thrown.  No mention
> of "locked environments".
> 
> Why would environments get "locked" in the package that I am currently
> fooling about with, but not in the AssetPricing package?  Is there
> anything that I  can do to keep environments from getting "locked"?

It may be the timing.  When R is installing a package, it executes all 
of the code in the .R files (which has been consolidated into one file, 
but that doesn't matter).  This produces all of the objects and 
functions in the package.

Then it locks the environment, so that things don't change.

Then it compiles the functions.  If they were allowed to change, then 
the compilation would have to be redone.

So perhaps AssetPricing makes the change in the .R file, processed 
before locking, and your new package does it in a function, executed by 
the user after locking.

Or maybe not.

Duncan Murdoch

> 
> Can anyone suggest where I should start looking for differences in the
> nature of the two packages?
> 
> I could possibly give more detail, but I have no idea as to what might
> be relevant.
> 
> One difference is that AssetPricing involves no dynamically loaded
> Fortran code, whereas the package that I am currently fooling about with
> *does* involve such code.  (But neither "foo()" not "bar()" make direct
> calls to .Fortran().)
> 
> Grateful for any insights.
> 
> cheers,
> 
> Rolf Turner
>


From m@rtin@morg@n @ending from ro@wellp@rk@org  Mon Jul  9 01:42:59 2018
From: m@rtin@morg@n @ending from ro@wellp@rk@org (Martin Morgan)
Date: Sun, 8 Jul 2018 19:42:59 -0400
Subject: [R-pkg-devel] Puzzled about "locked environments".
In-Reply-To: <6e51a2a5-b29b-e14d-85f9-7a87dbbaaded@gmail.com>
References: <53ac4e41-a2cb-f4a3-9e19-106aa544188f@auckland.ac.nz>
 <6e51a2a5-b29b-e14d-85f9-7a87dbbaaded@gmail.com>
Message-ID: <fc5e0bab-428b-2a4f-9626-29e80cb7b146@roswellpark.org>



On 07/08/2018 07:23 PM, Duncan Murdoch wrote:
> On 08/07/2018 6:57 PM, Rolf Turner wrote:
>>
>> Recently I experimented with assigning a variable within the environment
>> of a function in a package that I am developing.? Slightly more 
>> explicitly:
>>
>> In a function "foo()" in the package, I have lines like:
>>
>> ???? big <- 42
>> ???? assign("big",big,envir=environment(bar))
>>
>> where "bar()" is another function in the package.
>>
>> This causes an error to be thrown:
>>
>>> Error in assign("big", big, envir = environment(bar)) :
>>> ?? cannot add bindings to a locked environment
>>
>> The reason that I am puzzled about this is that I used this syntax
>> repeatedly in my CRAN package "AssetPricing".? In this latter package
>> the syntax seems to work flawlessly.? No errors are thrown.? No mention
>> of "locked environments".
>>
>> Why would environments get "locked" in the package that I am currently
>> fooling about with, but not in the AssetPricing package?? Is there
>> anything that I? can do to keep environments from getting "locked"?
> 
> It may be the timing.? When R is installing a package, it executes all 
> of the code in the .R files (which has been consolidated into one file, 
> but that doesn't matter).? This produces all of the objects and 
> functions in the package.
> 
> Then it locks the environment, so that things don't change.
> 
> Then it compiles the functions.? If they were allowed to change, then 
> the compilation would have to be redone.
> 
> So perhaps AssetPricing makes the change in the .R file, processed 
> before locking, and your new package does it in a function, executed by 
> the user after locking.

AssetPricing does, at least some of the time, in the body of a function 
(the indentation is confusing)

environment(vupdate) <- new.env()
environment(scrG) <- new.env()
environment(initx) <- new.env()
environment(cev) <- new.env()

#
     assign("dS",dS,envir=environment(vupdate))
     assign("dS",dS,envir=environment(scrG))
     assign("dS",dS,envir=environment(initx))
     assign("dS",dS,envir=environment(cev))

so that assignment is to the unlocked new.env(). Presumably the new code 
assigns to bar's original environment, which is the (locked, once the 
package is loaded) package name space.

Martin Morgan

> 
> Or maybe not.
> 
> Duncan Murdoch
> 
>>
>> Can anyone suggest where I should start looking for differences in the
>> nature of the two packages?
>>
>> I could possibly give more detail, but I have no idea as to what might
>> be relevant.
>>
>> One difference is that AssetPricing involves no dynamically loaded
>> Fortran code, whereas the package that I am currently fooling about with
>> *does* involve such code.? (But neither "foo()" not "bar()" make direct
>> calls to .Fortran().)
>>
>> Grateful for any insights.
>>
>> cheers,
>>
>> Rolf Turner
>>
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


This email message may contain legally privileged and/or...{{dropped:2}}


From r@turner @ending from @uckl@nd@@c@nz  Mon Jul  9 02:29:10 2018
From: r@turner @ending from @uckl@nd@@c@nz (Rolf Turner)
Date: Mon, 9 Jul 2018 12:29:10 +1200
Subject: [R-pkg-devel] 
 [FORGED] Re:  Puzzled about "locked environments".
In-Reply-To: <fc5e0bab-428b-2a4f-9626-29e80cb7b146@roswellpark.org>
References: <53ac4e41-a2cb-f4a3-9e19-106aa544188f@auckland.ac.nz>
 <6e51a2a5-b29b-e14d-85f9-7a87dbbaaded@gmail.com>
 <fc5e0bab-428b-2a4f-9626-29e80cb7b146@roswellpark.org>
Message-ID: <de25eda9-6e00-cdb7-26ca-f54c481ae48f@auckland.ac.nz>


Thank you hugely.  Your suggestion nailed it.  I was *sure* that I
had tried doing

    environment(bar) <- new.env()

prior to doing the assignment and that it didn't help.  I was also sure
that in AssetPricing I done assignments into environments that *weren't* 
new.  Wrong on both counts. :-(  Jeez, it's tough being mentally 
handicapped!

Thanks very much for delving into this and for looking at the code in 
AssetPricing more carefully and perspicaciously than I did.

cheers,

Rolf

On 09/07/18 11:42, Martin Morgan wrote:
> 
> 
> On 07/08/2018 07:23 PM, Duncan Murdoch wrote:
>> On 08/07/2018 6:57 PM, Rolf Turner wrote:
>>>
>>> Recently I experimented with assigning a variable within the environment
>>> of a function in a package that I am developing.? Slightly more 
>>> explicitly:
>>>
>>> In a function "foo()" in the package, I have lines like:
>>>
>>> ???? big <- 42
>>> ???? assign("big",big,envir=environment(bar))
>>>
>>> where "bar()" is another function in the package.
>>>
>>> This causes an error to be thrown:
>>>
>>>> Error in assign("big", big, envir = environment(bar)) :
>>>> ?? cannot add bindings to a locked environment
>>>
>>> The reason that I am puzzled about this is that I used this syntax
>>> repeatedly in my CRAN package "AssetPricing".? In this latter package
>>> the syntax seems to work flawlessly.? No errors are thrown.? No mention
>>> of "locked environments".
>>>
>>> Why would environments get "locked" in the package that I am currently
>>> fooling about with, but not in the AssetPricing package?? Is there
>>> anything that I? can do to keep environments from getting "locked"?
>>
>> It may be the timing.? When R is installing a package, it executes all 
>> of the code in the .R files (which has been consolidated into one 
>> file, but that doesn't matter).? This produces all of the objects and 
>> functions in the package.
>>
>> Then it locks the environment, so that things don't change.
>>
>> Then it compiles the functions.? If they were allowed to change, then 
>> the compilation would have to be redone.
>>
>> So perhaps AssetPricing makes the change in the .R file, processed 
>> before locking, and your new package does it in a function, executed 
>> by the user after locking.
> 
> AssetPricing does, at least some of the time, in the body of a function 
> (the indentation is confusing)
> 
> environment(vupdate) <- new.env()
> environment(scrG) <- new.env()
> environment(initx) <- new.env()
> environment(cev) <- new.env()
> 
> #
>  ??? assign("dS",dS,envir=environment(vupdate))
>  ??? assign("dS",dS,envir=environment(scrG))
>  ??? assign("dS",dS,envir=environment(initx))
>  ??? assign("dS",dS,envir=environment(cev))
> 
> so that assignment is to the unlocked new.env(). Presumably the new code 
> assigns to bar's original environment, which is the (locked, once the 
> package is loaded) package name space.
> 
> Martin Morgan
> 
>>
>> Or maybe not.
>>
>> Duncan Murdoch
>>
>>>
>>> Can anyone suggest where I should start looking for differences in the
>>> nature of the two packages?
>>>
>>> I could possibly give more detail, but I have no idea as to what might
>>> be relevant.
>>>
>>> One difference is that AssetPricing involves no dynamically loaded
>>> Fortran code, whereas the package that I am currently fooling about with
>>> *does* involve such code.? (But neither "foo()" not "bar()" make direct
>>> calls to .Fortran().)
>>>
>>> Grateful for any insights.


From ht @ending from he@therturner@net  Mon Jul  9 17:20:15 2018
From: ht @ending from he@therturner@net (Heather Turner)
Date: Mon, 09 Jul 2018 16:20:15 +0100
Subject: [R-pkg-devel] Determine subset from glm object
In-Reply-To: <CAKctRd0Ax4roibN6cncmKNGqeDJQyZ=N=b8CmV0FTwGWa=_TZA@mail.gmail.com>
References: <CAKctRd0gT1yMxnjXrv+hB0_ze1ujmWptMFn+ha6v2apWZ_KCXQ@mail.gmail.com>
 <3f30ddb7-8fa3-79bb-68fd-a5063e5b7293@gmail.com>
 <CAKctRd1PsLceniK5Yi-etFMXrwj3stDG7kOkZxqTixfLVM_WJA@mail.gmail.com>
 <CAKctRd0Ax4roibN6cncmKNGqeDJQyZ=N=b8CmV0FTwGWa=_TZA@mail.gmail.com>
Message-ID: <1531149615.3019714.1434756968.76FF6D4E@webmail.messagingengine.com>



On Sun, Jul 8, 2018, at 8:25 PM, Charles Geyer wrote:
> I spoke too soon.  The problem isn't that I don't know how to get the
> subset argument. I am just calling glm (via eval) with (mostly) the
> same arguments as the call to my function, so subset is (if not
> missing) an argument to my function too.  So I can just use it.
> 
> The problem is that I then want to call glm again fitting a subset of
> the original subset (if there was one).  And when I do that glm will
> refer to the original data wherever it is, and I don't have that.
> 
> if this isn't clear, here is the code as it stands now
> https://github.com/cjgeyer/glmdr/blob/master/package/glmdr/R/glmdr.R.
> 
> The issue is with the lines (very near the end)
> 
> subset.lcm <- as.integer(rownames(modmat))
> subset.lcm <- subset.lcm[linearity]
> # call glm again
> call.glm$subset <- subset.lcm
> gout.lcm <- eval(call.glm, parent.frame())
> 
> I can see from what Duncan said that I really don't want the
> as.integer around rownames.  But it is not clear what would be better.
> 
> I just had another thought that I could get the original data with
> another call to glm with subset removed from the call and method =
> "model.frame" added.  And I think (maybe, have to try it) that it
> would have NA's removed or whatever na.action says to do.
> But that seems redundant.
> 
> 
As you are calling stats::glm, you can use `model.frame` to get the data used to fit the model after applying subset and na.action. So then you can do:

call.glm$subset <- linearity
call.glm$data <- model.frame(gout)

I think this is what you are after?

Heather

> 
> On Sun, Jul 8, 2018, 1:04 PM Charles Geyer <charlie at stat.umn.edu> wrote:
> >
> > I think your second option sounds better because this is all happening inside one function I'm writing so users won't be able mess with the glm object. Many thanks.
> >
> > On Sun, Jul 8, 2018, 12:10 PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> >>
> >> On 08/07/2018 11:48 AM, Charles Geyer wrote:
> >> > I need to find out from an object returned by R function glm with argument
> >> > x = TRUE
> >> > what the subsetting was.  It appears that if gout is that object, then
> >> >
> >> > as.integer(rownames(gout$x))
> >> >
> >> > is a subset vector equivalent to the one actually used.
> >>
> >> You don't want the "as.integer".  If the dataframe had rownames to start
> >> with, the x component of the fit will have row labels consisting of
> >> those labels, so as.integer may fail.  Even if it doesn't, the rownames
> >> aren't necessarily sequential integers.   You can index the dataframe by
> >> the character versions of the default numbers, so simply
> >> rownames(gout$x) should always work.
> >>
> >> More generally, I'm not sure your question is well posed.  What do you
> >> mean by "the subsetting"?  If you have something like
> >>
> >> df <- data.frame(letters, x = 1:26, y = rbinom(26, 1, 0.5))
> >>
> >> df1 <- subset(df, letters > "b" & letters < "y")
> >>
> >> gout <- glm(y ~ x, data = df1, subset = letters < "q", x = TRUE)
> >>
> >> the rownames(gout$x) are going to be numbers for rows of df, because df1
> >> will get a subset of those as row labels.
> >>
> >>
> >> > I do also have the call to glm (as a call object) so can determine the
> >> > actual subset argument, but this seems to be not so useful because I don't
> >> > know the length of the original variables before subsetting.
> >>
> >> You should be able to evaluate the subset expression in the environment
> >> of the formula, i.e.
> >>
> >> eval(gout$call$subset, envir = environment(gout$formula))
> >>
> >> This may give incorrect results if the variables used in subsetting
> >> aren't in the dataframe and have changed since glm() was called.
> >>
> >>
> >> > So now my questions.  Is this idea above (using rownames) OK even though I
> >> > cannot find where (if anywhere) it is documented?  Is there a better way?
> >> > One more guaranteed to be correct in the future?
> >> >
> >>
> >> I would trust evaluating the subset more than grabbing row labels from
> >> gout$x, but I don't know for sure it is likely to be more robust.
> >>
> >> Duncan Murdoch
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From bbolker @ending from gm@il@com  Mon Jul  9 18:06:23 2018
From: bbolker @ending from gm@il@com (Ben Bolker)
Date: Mon, 9 Jul 2018 12:06:23 -0400
Subject: [R-pkg-devel] Determine subset from glm object
In-Reply-To: <1531149615.3019714.1434756968.76FF6D4E@webmail.messagingengine.com>
References: <CAKctRd0gT1yMxnjXrv+hB0_ze1ujmWptMFn+ha6v2apWZ_KCXQ@mail.gmail.com>
 <3f30ddb7-8fa3-79bb-68fd-a5063e5b7293@gmail.com>
 <CAKctRd1PsLceniK5Yi-etFMXrwj3stDG7kOkZxqTixfLVM_WJA@mail.gmail.com>
 <CAKctRd0Ax4roibN6cncmKNGqeDJQyZ=N=b8CmV0FTwGWa=_TZA@mail.gmail.com>
 <1531149615.3019714.1434756968.76FF6D4E@webmail.messagingengine.com>
Message-ID: <0ddf447b-4bd6-e5b0-25f4-fa847a6f31c6@gmail.com>


  From painful experience: model.frame() does *NOT* necessarily return a
data frame that can be successfully used as the data= argument for models.

  - transformed variables (e.g. log(x)) will be in the model frame
rather than the original variables,  so when model.frame() is called
again within glm(), it won't find the original variables
  - variables with data-dependent bases (poly(), ns(), etc.) get
computed and stuck in the model frame - again, the original variables
are inaccessible


On 2018-07-09 11:20 AM, Heather Turner wrote:
> 
> 
> On Sun, Jul 8, 2018, at 8:25 PM, Charles Geyer wrote:
>> I spoke too soon.  The problem isn't that I don't know how to get the
>> subset argument. I am just calling glm (via eval) with (mostly) the
>> same arguments as the call to my function, so subset is (if not
>> missing) an argument to my function too.  So I can just use it.
>>
>> The problem is that I then want to call glm again fitting a subset of
>> the original subset (if there was one).  And when I do that glm will
>> refer to the original data wherever it is, and I don't have that.
>>
>> if this isn't clear, here is the code as it stands now
>> https://github.com/cjgeyer/glmdr/blob/master/package/glmdr/R/glmdr.R.
>>
>> The issue is with the lines (very near the end)
>>
>> subset.lcm <- as.integer(rownames(modmat))
>> subset.lcm <- subset.lcm[linearity]
>> # call glm again
>> call.glm$subset <- subset.lcm
>> gout.lcm <- eval(call.glm, parent.frame())
>>
>> I can see from what Duncan said that I really don't want the
>> as.integer around rownames.  But it is not clear what would be better.
>>
>> I just had another thought that I could get the original data with
>> another call to glm with subset removed from the call and method =
>> "model.frame" added.  And I think (maybe, have to try it) that it
>> would have NA's removed or whatever na.action says to do.
>> But that seems redundant.
>>
>>
> As you are calling stats::glm, you can use `model.frame` to get the data used to fit the model after applying subset and na.action. So then you can do:
> 
> call.glm$subset <- linearity
> call.glm$data <- model.frame(gout)
> 
> I think this is what you are after?
> 
> Heather
> 
>>
>> On Sun, Jul 8, 2018, 1:04 PM Charles Geyer <charlie at stat.umn.edu> wrote:
>>>
>>> I think your second option sounds better because this is all happening inside one function I'm writing so users won't be able mess with the glm object. Many thanks.
>>>
>>> On Sun, Jul 8, 2018, 12:10 PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>>>>
>>>> On 08/07/2018 11:48 AM, Charles Geyer wrote:
>>>>> I need to find out from an object returned by R function glm with argument
>>>>> x = TRUE
>>>>> what the subsetting was.  It appears that if gout is that object, then
>>>>>
>>>>> as.integer(rownames(gout$x))
>>>>>
>>>>> is a subset vector equivalent to the one actually used.
>>>>
>>>> You don't want the "as.integer".  If the dataframe had rownames to start
>>>> with, the x component of the fit will have row labels consisting of
>>>> those labels, so as.integer may fail.  Even if it doesn't, the rownames
>>>> aren't necessarily sequential integers.   You can index the dataframe by
>>>> the character versions of the default numbers, so simply
>>>> rownames(gout$x) should always work.
>>>>
>>>> More generally, I'm not sure your question is well posed.  What do you
>>>> mean by "the subsetting"?  If you have something like
>>>>
>>>> df <- data.frame(letters, x = 1:26, y = rbinom(26, 1, 0.5))
>>>>
>>>> df1 <- subset(df, letters > "b" & letters < "y")
>>>>
>>>> gout <- glm(y ~ x, data = df1, subset = letters < "q", x = TRUE)
>>>>
>>>> the rownames(gout$x) are going to be numbers for rows of df, because df1
>>>> will get a subset of those as row labels.
>>>>
>>>>
>>>>> I do also have the call to glm (as a call object) so can determine the
>>>>> actual subset argument, but this seems to be not so useful because I don't
>>>>> know the length of the original variables before subsetting.
>>>>
>>>> You should be able to evaluate the subset expression in the environment
>>>> of the formula, i.e.
>>>>
>>>> eval(gout$call$subset, envir = environment(gout$formula))
>>>>
>>>> This may give incorrect results if the variables used in subsetting
>>>> aren't in the dataframe and have changed since glm() was called.
>>>>
>>>>
>>>>> So now my questions.  Is this idea above (using rownames) OK even though I
>>>>> cannot find where (if anywhere) it is documented?  Is there a better way?
>>>>> One more guaranteed to be correct in the future?
>>>>>
>>>>
>>>> I would trust evaluating the subset more than grabbing row labels from
>>>> gout$x, but I don't know for sure it is likely to be more robust.
>>>>
>>>> Duncan Murdoch
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From ht @ending from he@therturner@net  Mon Jul  9 23:14:39 2018
From: ht @ending from he@therturner@net (Heather Turner)
Date: Mon, 09 Jul 2018 22:14:39 +0100
Subject: [R-pkg-devel] Determine subset from glm object
In-Reply-To: <0ddf447b-4bd6-e5b0-25f4-fa847a6f31c6@gmail.com>
References: <CAKctRd0gT1yMxnjXrv+hB0_ze1ujmWptMFn+ha6v2apWZ_KCXQ@mail.gmail.com>
 <3f30ddb7-8fa3-79bb-68fd-a5063e5b7293@gmail.com>
 <CAKctRd1PsLceniK5Yi-etFMXrwj3stDG7kOkZxqTixfLVM_WJA@mail.gmail.com>
 <CAKctRd0Ax4roibN6cncmKNGqeDJQyZ=N=b8CmV0FTwGWa=_TZA@mail.gmail.com>
 <1531149615.3019714.1434756968.76FF6D4E@webmail.messagingengine.com>
 <0ddf447b-4bd6-e5b0-25f4-fa847a6f31c6@gmail.com>
Message-ID: <1531170879.3954402.1435156640.3A4E2665@webmail.messagingengine.com>

Good point. In that case a solution might be to create a model frame based on the named variables, e.g.

#  general formula
f <- ~ log(x) + ns(v, df = 2)
# model frame based on "bare" variables; deal with user-supplied subset, data, na.action, etc
mfcall <- call("model.frame", reformulate(all.vars(f)), subset = subset, data = data, na.action = na.action)
mf <- eval(mfcall, parent.frame())

Then `mf` can be passed as the data argument to `glm` without any subset argument for the first model and with the new subset argument for the second model.


On Mon, Jul 9, 2018, at 5:06 PM, Ben Bolker wrote:
> 
>   From painful experience: model.frame() does *NOT* necessarily return a
> data frame that can be successfully used as the data= argument for models.
> 
>   - transformed variables (e.g. log(x)) will be in the model frame
> rather than the original variables,  so when model.frame() is called
> again within glm(), it won't find the original variables
>   - variables with data-dependent bases (poly(), ns(), etc.) get
> computed and stuck in the model frame - again, the original variables
> are inaccessible
> 
> 
> On 2018-07-09 11:20 AM, Heather Turner wrote:
> > 
> > 
> > On Sun, Jul 8, 2018, at 8:25 PM, Charles Geyer wrote:
> >> I spoke too soon.  The problem isn't that I don't know how to get the
> >> subset argument. I am just calling glm (via eval) with (mostly) the
> >> same arguments as the call to my function, so subset is (if not
> >> missing) an argument to my function too.  So I can just use it.
> >>
> >> The problem is that I then want to call glm again fitting a subset of
> >> the original subset (if there was one).  And when I do that glm will
> >> refer to the original data wherever it is, and I don't have that.
> >>
> >> if this isn't clear, here is the code as it stands now
> >> https://github.com/cjgeyer/glmdr/blob/master/package/glmdr/R/glmdr.R.
> >>
> >> The issue is with the lines (very near the end)
> >>
> >> subset.lcm <- as.integer(rownames(modmat))
> >> subset.lcm <- subset.lcm[linearity]
> >> # call glm again
> >> call.glm$subset <- subset.lcm
> >> gout.lcm <- eval(call.glm, parent.frame())
> >>
> >> I can see from what Duncan said that I really don't want the
> >> as.integer around rownames.  But it is not clear what would be better.
> >>
> >> I just had another thought that I could get the original data with
> >> another call to glm with subset removed from the call and method =
> >> "model.frame" added.  And I think (maybe, have to try it) that it
> >> would have NA's removed or whatever na.action says to do.
> >> But that seems redundant.
> >>
> >>
> > As you are calling stats::glm, you can use `model.frame` to get the data used to fit the model after applying subset and na.action. So then you can do:
> > 
> > call.glm$subset <- linearity
> > call.glm$data <- model.frame(gout)
> > 
> > I think this is what you are after?
> > 
> > Heather
> > 
> >>
> >> On Sun, Jul 8, 2018, 1:04 PM Charles Geyer <charlie at stat.umn.edu> wrote:
> >>>
> >>> I think your second option sounds better because this is all happening inside one function I'm writing so users won't be able mess with the glm object. Many thanks.
> >>>
> >>> On Sun, Jul 8, 2018, 12:10 PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> >>>>
> >>>> On 08/07/2018 11:48 AM, Charles Geyer wrote:
> >>>>> I need to find out from an object returned by R function glm with argument
> >>>>> x = TRUE
> >>>>> what the subsetting was.  It appears that if gout is that object, then
> >>>>>
> >>>>> as.integer(rownames(gout$x))
> >>>>>
> >>>>> is a subset vector equivalent to the one actually used.
> >>>>
> >>>> You don't want the "as.integer".  If the dataframe had rownames to start
> >>>> with, the x component of the fit will have row labels consisting of
> >>>> those labels, so as.integer may fail.  Even if it doesn't, the rownames
> >>>> aren't necessarily sequential integers.   You can index the dataframe by
> >>>> the character versions of the default numbers, so simply
> >>>> rownames(gout$x) should always work.
> >>>>
> >>>> More generally, I'm not sure your question is well posed.  What do you
> >>>> mean by "the subsetting"?  If you have something like
> >>>>
> >>>> df <- data.frame(letters, x = 1:26, y = rbinom(26, 1, 0.5))
> >>>>
> >>>> df1 <- subset(df, letters > "b" & letters < "y")
> >>>>
> >>>> gout <- glm(y ~ x, data = df1, subset = letters < "q", x = TRUE)
> >>>>
> >>>> the rownames(gout$x) are going to be numbers for rows of df, because df1
> >>>> will get a subset of those as row labels.
> >>>>
> >>>>
> >>>>> I do also have the call to glm (as a call object) so can determine the
> >>>>> actual subset argument, but this seems to be not so useful because I don't
> >>>>> know the length of the original variables before subsetting.
> >>>>
> >>>> You should be able to evaluate the subset expression in the environment
> >>>> of the formula, i.e.
> >>>>
> >>>> eval(gout$call$subset, envir = environment(gout$formula))
> >>>>
> >>>> This may give incorrect results if the variables used in subsetting
> >>>> aren't in the dataframe and have changed since glm() was called.
> >>>>
> >>>>
> >>>>> So now my questions.  Is this idea above (using rownames) OK even though I
> >>>>> cannot find where (if anywhere) it is documented?  Is there a better way?
> >>>>> One more guaranteed to be correct in the future?
> >>>>>
> >>>>
> >>>> I would trust evaluating the subset more than grabbing row labels from
> >>>> gout$x, but I don't know for sure it is likely to be more robust.
> >>>>
> >>>> Duncan Murdoch
> >>
> >> ______________________________________________
> >> R-package-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> > 
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From ht @ending from he@therturner@net  Mon Jul  9 23:45:07 2018
From: ht @ending from he@therturner@net (Heather Turner)
Date: Mon, 09 Jul 2018 22:45:07 +0100
Subject: [R-pkg-devel] Determine subset from glm object
In-Reply-To: <1531170879.3954402.1435156640.3A4E2665@webmail.messagingengine.com>
References: <CAKctRd0gT1yMxnjXrv+hB0_ze1ujmWptMFn+ha6v2apWZ_KCXQ@mail.gmail.com>
 <3f30ddb7-8fa3-79bb-68fd-a5063e5b7293@gmail.com>
 <CAKctRd1PsLceniK5Yi-etFMXrwj3stDG7kOkZxqTixfLVM_WJA@mail.gmail.com>
 <CAKctRd0Ax4roibN6cncmKNGqeDJQyZ=N=b8CmV0FTwGWa=_TZA@mail.gmail.com>
 <1531149615.3019714.1434756968.76FF6D4E@webmail.messagingengine.com>
 <0ddf447b-4bd6-e5b0-25f4-fa847a6f31c6@gmail.com>
 <1531170879.3954402.1435156640.3A4E2665@webmail.messagingengine.com>
Message-ID: <1531172707.3965312.1435212088.52446CF6@webmail.messagingengine.com>

On second thoughts it may be better to preserve the original data and na.action in the call to glm. So then you might combine the idea of a dummy model frame with evaluating the subset, e.g.

mfcall <- call("model.frame", reformulate(all.vars(f)), data = data)
mf <- eval(mfcall, parent.frame())
mf$id <- seq_len(nrow(mf))
subset <- mf$id %in% model.frame( ~ id, data = mf, subset = subset)$id

This will give the subset as a logical vector whether it was originally supplied as logical, numeric or character. Then you might combine this with the logical vector based on the first glm as follows:

subset[subset] <- linearity

On Mon, Jul 9, 2018, at 10:14 PM, Heather Turner wrote:
> Good point. In that case a solution might be to create a model frame 
> based on the named variables, e.g.
> 
> #  general formula
> f <- ~ log(x) + ns(v, df = 2)
> # model frame based on "bare" variables; deal with user-supplied subset, 
> data, na.action, etc
> mfcall <- call("model.frame", reformulate(all.vars(f)), subset = subset, 
> data = data, na.action = na.action)
> mf <- eval(mfcall, parent.frame())
> 
> Then `mf` can be passed as the data argument to `glm` without any subset 
> argument for the first model and with the new subset argument for the 
> second model.
> 
> 
> On Mon, Jul 9, 2018, at 5:06 PM, Ben Bolker wrote:
> > 
> >   From painful experience: model.frame() does *NOT* necessarily return a
> > data frame that can be successfully used as the data= argument for models.
> > 
> >   - transformed variables (e.g. log(x)) will be in the model frame
> > rather than the original variables,  so when model.frame() is called
> > again within glm(), it won't find the original variables
> >   - variables with data-dependent bases (poly(), ns(), etc.) get
> > computed and stuck in the model frame - again, the original variables
> > are inaccessible
> > 
> > 
> > On 2018-07-09 11:20 AM, Heather Turner wrote:
> > > 
> > > 
> > > On Sun, Jul 8, 2018, at 8:25 PM, Charles Geyer wrote:
> > >> I spoke too soon.  The problem isn't that I don't know how to get the
> > >> subset argument. I am just calling glm (via eval) with (mostly) the
> > >> same arguments as the call to my function, so subset is (if not
> > >> missing) an argument to my function too.  So I can just use it.
> > >>
> > >> The problem is that I then want to call glm again fitting a subset of
> > >> the original subset (if there was one).  And when I do that glm will
> > >> refer to the original data wherever it is, and I don't have that.
> > >>
> > >> if this isn't clear, here is the code as it stands now
> > >> https://github.com/cjgeyer/glmdr/blob/master/package/glmdr/R/glmdr.R.
> > >>
> > >> The issue is with the lines (very near the end)
> > >>
> > >> subset.lcm <- as.integer(rownames(modmat))
> > >> subset.lcm <- subset.lcm[linearity]
> > >> # call glm again
> > >> call.glm$subset <- subset.lcm
> > >> gout.lcm <- eval(call.glm, parent.frame())
> > >>
> > >> I can see from what Duncan said that I really don't want the
> > >> as.integer around rownames.  But it is not clear what would be better.
> > >>
> > >> I just had another thought that I could get the original data with
> > >> another call to glm with subset removed from the call and method =
> > >> "model.frame" added.  And I think (maybe, have to try it) that it
> > >> would have NA's removed or whatever na.action says to do.
> > >> But that seems redundant.
> > >>
> > >>
> > > As you are calling stats::glm, you can use `model.frame` to get the data used to fit the model after applying subset and na.action. So then you can do:
> > > 
> > > call.glm$subset <- linearity
> > > call.glm$data <- model.frame(gout)
> > > 
> > > I think this is what you are after?
> > > 
> > > Heather
> > > 
> > >>
> > >> On Sun, Jul 8, 2018, 1:04 PM Charles Geyer <charlie at stat.umn.edu> wrote:
> > >>>
> > >>> I think your second option sounds better because this is all happening inside one function I'm writing so users won't be able mess with the glm object. Many thanks.
> > >>>
> > >>> On Sun, Jul 8, 2018, 12:10 PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> > >>>>
> > >>>> On 08/07/2018 11:48 AM, Charles Geyer wrote:
> > >>>>> I need to find out from an object returned by R function glm with argument
> > >>>>> x = TRUE
> > >>>>> what the subsetting was.  It appears that if gout is that object, then
> > >>>>>
> > >>>>> as.integer(rownames(gout$x))
> > >>>>>
> > >>>>> is a subset vector equivalent to the one actually used.
> > >>>>
> > >>>> You don't want the "as.integer".  If the dataframe had rownames to start
> > >>>> with, the x component of the fit will have row labels consisting of
> > >>>> those labels, so as.integer may fail.  Even if it doesn't, the rownames
> > >>>> aren't necessarily sequential integers.   You can index the dataframe by
> > >>>> the character versions of the default numbers, so simply
> > >>>> rownames(gout$x) should always work.
> > >>>>
> > >>>> More generally, I'm not sure your question is well posed.  What do you
> > >>>> mean by "the subsetting"?  If you have something like
> > >>>>
> > >>>> df <- data.frame(letters, x = 1:26, y = rbinom(26, 1, 0.5))
> > >>>>
> > >>>> df1 <- subset(df, letters > "b" & letters < "y")
> > >>>>
> > >>>> gout <- glm(y ~ x, data = df1, subset = letters < "q", x = TRUE)
> > >>>>
> > >>>> the rownames(gout$x) are going to be numbers for rows of df, because df1
> > >>>> will get a subset of those as row labels.
> > >>>>
> > >>>>
> > >>>>> I do also have the call to glm (as a call object) so can determine the
> > >>>>> actual subset argument, but this seems to be not so useful because I don't
> > >>>>> know the length of the original variables before subsetting.
> > >>>>
> > >>>> You should be able to evaluate the subset expression in the environment
> > >>>> of the formula, i.e.
> > >>>>
> > >>>> eval(gout$call$subset, envir = environment(gout$formula))
> > >>>>
> > >>>> This may give incorrect results if the variables used in subsetting
> > >>>> aren't in the dataframe and have changed since glm() was called.
> > >>>>
> > >>>>
> > >>>>> So now my questions.  Is this idea above (using rownames) OK even though I
> > >>>>> cannot find where (if anywhere) it is documented?  Is there a better way?
> > >>>>> One more guaranteed to be correct in the future?
> > >>>>>
> > >>>>
> > >>>> I would trust evaluating the subset more than grabbing row labels from
> > >>>> gout$x, but I don't know for sure it is likely to be more robust.
> > >>>>
> > >>>> Duncan Murdoch
> > >>
> > >> ______________________________________________
> > >> R-package-devel at r-project.org mailing list
> > >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> > > 
> > > ______________________________________________
> > > R-package-devel at r-project.org mailing list
> > > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> > >
> > 
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From kevinu@hey @ending from gm@il@com  Mon Jul  9 17:47:37 2018
From: kevinu@hey @ending from gm@il@com (Kevin Ushey)
Date: Mon, 9 Jul 2018 08:47:37 -0700
Subject: [R-pkg-devel] 
 Help with reproducing (and solving) clang-UBSAN and
 Solaris installation errors
In-Reply-To: <CAP6q79FyPnP=LrRxF6VeLfVoigG9J+eyeCGvrXDUk2VonG7DNw@mail.gmail.com>
References: <CAP6q79FyPnP=LrRxF6VeLfVoigG9J+eyeCGvrXDUk2VonG7DNw@mail.gmail.com>
Message-ID: <CAJXgQP1dXzARzPHBMA3b2Lh4ZmtdK+7LDM-tiDmH-URXcUD1mw@mail.gmail.com>

The UBSAN error:

cvode.cpp:58:11: runtime error: call to function
cv_Roberts_dns(double, Rcpp::Vector<14, Rcpp::PreserveStorage>)
through pointer to incorrect function type 'Rcpp::Vector<14,
PreserveStorage> (*)(double, Rcpp::Vector<14, PreserveStorage>)'
/tmp/RtmplnLW4G/sourceCpp-x86_64-pc-linux-gnu-0.12.17/sourcecpp_a916f8734/filea91617630abf.cpp:9:
note: cv_Roberts_dns(double, Rcpp::Vector<14, Rcpp::PreserveStorage>)
defined here
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior cvode.cpp:58:11 in

sounds like it might be a false positive, since the function
signatures do appear to be identical. Of course, there may be
something more subtle going on, but absent any other ill effects I
think the message can be ignored. For what it's worth, one similar
false positive is reported here at
https://github.com/google/sanitizers/issues/911.

The actual compilation error you're seeing on Solaris:

mksh: Fatal error in reader: = missing from replacement macro reference

implies that you're likely trying to use a GNU-ism in your Makefile /
Makevars. R requires that Makefiles be portable by default, as per
https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Using-Makevars.
If you _really_ need the GNU-isms, you can add something like:

SystemRequirements: GNU make

to request that GNU make is used on all platforms your package is built on.

Best,
Kevin

On Sun, Jul 8, 2018 at 3:53 AM SN248 <sn248 at cornell.edu> wrote:
>
> Dear all
>
> I recently submitted an R package to CRAN which was accepted. However, the
> package is failing additional tests, i.e., it fails to install on Solaris
> and also produces a clang-UBSAN issue. These can be seen here
>
> https://cran.r-project.org/web/checks/check_results_sundialr.html
>
> I tried to reproduce the installation error for Solaris and clang-UBSAN
> issue using rhub (R package). However, in both cases, I don't see any error
> reported by rhub.
>
> Solaris installation went fine (Oracle Solaris 10, x86, 32 bit, R-patched
> (experimental)). See the report below:
>
> https://builder.r-hub.io/status/original/sundialr_0.1.0.tar.gz-b13f34c036448a13cbc147f4fb2cf37b
>
> and
>
> No errors were reported when I run 'check_with_sanitizers()' command (I
> assume that is the right command to generate clang-UBSAN errors, though the
> Platform information is - Debian Linux, R-devel, GCC ASAN/UBSAN). See the
> report of the test below:
>
> https://builder.r-hub.io/status/original/sundialr_0.1.0.tar.gz-a38aa86e16494f41b6f2e2e093547b7b
>
> I am not sure how to proceed with debugging those errors as I am not able
> to reproduce them. Is there any way to test installation on Solaris (I
> don't have access to one, unfortunately) and reproduce clang-UBSAN issue.
>
> The clang-UBSAN issue _may_ be related to Rcpp::XPtr and _may_ remain
> unresolved (based on the thread in Rcpp-devel forum earlier (I could have
> mis-interpreted the whole discussion there) -
> http://lists.r-forge.r-project.org/pipermail/rcpp-devel/2017-July/009656.html
> )
>
> Any help in how to reproduce these issues will be highly appreciated.
>
> On a separate note - in case these issues remain unresolved, is the package
> doomed to go to CRAN archives then? The package installation and running
> examples went without error/warning/note on all the platforms in rhub.
>
> Thanks
> SN
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From @n248 @ending from cornell@edu  Mon Jul  9 19:04:16 2018
From: @n248 @ending from cornell@edu (Satyaprakash Nayak)
Date: Mon, 9 Jul 2018 13:04:16 -0400
Subject: [R-pkg-devel] 
 Help with reproducing (and solving) clang-UBSAN and
 Solaris installation errors
In-Reply-To: <CAJXgQP1dXzARzPHBMA3b2Lh4ZmtdK+7LDM-tiDmH-URXcUD1mw@mail.gmail.com>
References: <CAP6q79FyPnP=LrRxF6VeLfVoigG9J+eyeCGvrXDUk2VonG7DNw@mail.gmail.com>
 <CAJXgQP1dXzARzPHBMA3b2Lh4ZmtdK+7LDM-tiDmH-URXcUD1mw@mail.gmail.com>
Message-ID: <CAM3CqvJtTgRmA8dz2hD4=dBL2wkPXpoRJhKRGkY3ag4Fx6L85Q@mail.gmail.com>

Thank you very much Kevin for your response.

I got R development with clang-6.0 working on a Ubuntu machine yesterday so
will investigate this further to see if there is anything more subtle going
on w.r.t. UBSAN issue and report here.

Regarding Solaris, I have code such as

SOURCES = $(cvode.cpp RcppExports.cpp)
OBJECTS = $(SOURCES:.cpp=.o)

Maybe that's causing a problem, I read section 1.6 of R extensions
mentioned

" Commonly misused GNU extensions are conditional inclusions (ifeq and the
like), ${shell ...}, ${wildcard ...} and similar, and the use of +=68
<https://cran.r-project.org/doc/manuals/r-release/R-exts.html#FOOT68> and :=
. "

I will try with

OBJECTS = cvode.o RcppExports.o

but since, rhub is not giving an error, I am not sure how I can really test
this.

Thanks for your suggestion about

SystemRequirements: GNU make

That may be the final solution for me to get this working on Solaris.

Best
Satya


On Mon, Jul 9, 2018 at 11:48 AM Kevin Ushey <kevinushey at gmail.com> wrote:

> The UBSAN error:
>
> cvode.cpp:58:11: runtime error: call to function
> cv_Roberts_dns(double, Rcpp::Vector<14, Rcpp::PreserveStorage>)
> through pointer to incorrect function type 'Rcpp::Vector<14,
> PreserveStorage> (*)(double, Rcpp::Vector<14, PreserveStorage>)'
>
> /tmp/RtmplnLW4G/sourceCpp-x86_64-pc-linux-gnu-0.12.17/sourcecpp_a916f8734/filea91617630abf.cpp:9:
> note: cv_Roberts_dns(double, Rcpp::Vector<14, Rcpp::PreserveStorage>)
> defined here
> SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior cvode.cpp:58:11 in
>
> sounds like it might be a false positive, since the function
> signatures do appear to be identical. Of course, there may be
> something more subtle going on, but absent any other ill effects I
> think the message can be ignored. For what it's worth, one similar
> false positive is reported here at
> https://github.com/google/sanitizers/issues/911.
>
> The actual compilation error you're seeing on Solaris:
>
> mksh: Fatal error in reader: = missing from replacement macro reference
>
> implies that you're likely trying to use a GNU-ism in your Makefile /
> Makevars. R requires that Makefiles be portable by default, as per
> https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Using-Makevars
> .
> If you _really_ need the GNU-isms, you can add something like:
>
> SystemRequirements: GNU make
>
> to request that GNU make is used on all platforms your package is built on.
>
> Best,
> Kevin
>
> On Sun, Jul 8, 2018 at 3:53 AM SN248 <sn248 at cornell.edu> wrote:
> >
> > Dear all
> >
> > I recently submitted an R package to CRAN which was accepted. However,
> the
> > package is failing additional tests, i.e., it fails to install on Solaris
> > and also produces a clang-UBSAN issue. These can be seen here
> >
> > https://cran.r-project.org/web/checks/check_results_sundialr.html
> >
> > I tried to reproduce the installation error for Solaris and clang-UBSAN
> > issue using rhub (R package). However, in both cases, I don't see any
> error
> > reported by rhub.
> >
> > Solaris installation went fine (Oracle Solaris 10, x86, 32 bit, R-patched
> > (experimental)). See the report below:
> >
> >
> https://builder.r-hub.io/status/original/sundialr_0.1.0.tar.gz-b13f34c036448a13cbc147f4fb2cf37b
> >
> > and
> >
> > No errors were reported when I run 'check_with_sanitizers()' command (I
> > assume that is the right command to generate clang-UBSAN errors, though
> the
> > Platform information is - Debian Linux, R-devel, GCC ASAN/UBSAN). See the
> > report of the test below:
> >
> >
> https://builder.r-hub.io/status/original/sundialr_0.1.0.tar.gz-a38aa86e16494f41b6f2e2e093547b7b
> >
> > I am not sure how to proceed with debugging those errors as I am not able
> > to reproduce them. Is there any way to test installation on Solaris (I
> > don't have access to one, unfortunately) and reproduce clang-UBSAN issue.
> >
> > The clang-UBSAN issue _may_ be related to Rcpp::XPtr and _may_ remain
> > unresolved (based on the thread in Rcpp-devel forum earlier (I could have
> > mis-interpreted the whole discussion there) -
> >
> http://lists.r-forge.r-project.org/pipermail/rcpp-devel/2017-July/009656.html
> > )
> >
> > Any help in how to reproduce these issues will be highly appreciated.
> >
> > On a separate note - in case these issues remain unresolved, is the
> package
> > doomed to go to CRAN archives then? The package installation and running
> > examples went without error/warning/note on all the platforms in rhub.
> >
> > Thanks
> > SN
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From d@vidhughjone@ @ending from gm@il@com  Tue Jul 10 15:59:50 2018
From: d@vidhughjone@ @ending from gm@il@com (David Hugh-Jones)
Date: Tue, 10 Jul 2018 14:59:50 +0100
Subject: [R-pkg-devel] Versioning conventions
Message-ID: <CAARY7kiRPUL-_+WVa7Px8i-A_f953BtCNWBkSVxidnEx9H3qDw@mail.gmail.com>

Hi all,

Just updated my rcheology package with data on functions for R 3.5.1 (no
change from R 3.5.0 afaik). See https://github.com/hughjonesd/rcheology.

I'm wondering how to version this package. It's not on CRAN yet so it would
be good to get things right.

Possibilities:

* Just copy the R versions, so the new version would be 3.5.1
Advantages: easy to understand. Disadvantages: semantic versioning would
follow R, not the package itself (which does contain a single function with
a public API); what if I make changes between R releases.
* ownversion.major.minor-Rversion.major.minor e.g. 0.1.0-3.5.1
Advantages: shows the R version clearly, contains own semantic versioning
information. Disadvantages: long.
* ownversion.major.minor-Rversionmajorminor e.g. 0.1.0-351
Advantage: as above but shorter. Disadvantages: if we hit e.g. 3.10.0, then
go back to 4.0.0, then we'd end up going backward in the last component.

Any ideas?

Cheers,
David

	[[alternative HTML version deleted]]


From henrik@bengt@@on @ending from gm@il@com  Tue Jul 10 16:14:49 2018
From: henrik@bengt@@on @ending from gm@il@com (Henrik Bengtsson)
Date: Tue, 10 Jul 2018 07:14:49 -0700
Subject: [R-pkg-devel] Versioning conventions
In-Reply-To: <CAARY7kiRPUL-_+WVa7Px8i-A_f953BtCNWBkSVxidnEx9H3qDw@mail.gmail.com>
References: <CAARY7kiRPUL-_+WVa7Px8i-A_f953BtCNWBkSVxidnEx9H3qDw@mail.gmail.com>
Message-ID: <CAFDcVCSNf37ZaVO+AdH_mhd5a6md+ziofgssKhsjg5H2G3juuw@mail.gmail.com>

On Tue, Jul 10, 2018 at 7:00 AM David Hugh-Jones
<davidhughjones at gmail.com> wrote:
>
> Hi all,
>
> Just updated my rcheology package with data on functions for R 3.5.1 (no
> change from R 3.5.0 afaik). See https://github.com/hughjonesd/rcheology.
>
> I'm wondering how to version this package. It's not on CRAN yet so it would
> be good to get things right.
>
> Possibilities:
>
> * Just copy the R versions, so the new version would be 3.5.1
> Advantages: easy to understand. Disadvantages: semantic versioning would
> follow R, not the package itself (which does contain a single function with
> a public API); what if I make changes between R releases.

If you want to convey (the upper-limit) support for the R version, I
like this one. You can start with rcheology 3.5.1.  If you do need to
do minor updates in the meanwhile, you can tag on another level, e.g.
rcheology 3.5.1-1.

> * ownversion.major.minor-Rversion.major.minor e.g. 0.1.0-3.5.1

FYI, this may be rendered differently at different places, e.g.

> package_version("0.1.0-3.5.1")
[1] '0.1.0.3.5.1'

and

> packageVersion("rcheology")
[1] '0.1.0.3.5.1'

> Advantages: shows the R version clearly, contains own semantic versioning
> information. Disadvantages: long.
> * ownversion.major.minor-Rversionmajorminor e.g. 0.1.0-351
> Advantage: as above but shorter. Disadvantages: if we hit e.g. 3.10.0, then
> go back to 4.0.0, then we'd end up going backward in the last component.

Similarly, now you cover R 2.0.0 - R 3.5.0, that would be rcheology
2.0.0-3.5.0, but if/when you to dig further back to you'll end up
decreasing your version number with this version model, e.g. rcheology
1.6.0-3.5.0.

/Henrik

PS. For people who don't this package, see its Shiny front-end
https://hughjonesd.shinyapps.io/rcheology/

>
> Any ideas?
>
> Cheers,
> David
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From hugh@p@r@on@ge @ending from gm@il@com  Tue Jul 10 16:59:19 2018
From: hugh@p@r@on@ge @ending from gm@il@com (Hugh Parsonage)
Date: Wed, 11 Jul 2018 00:59:19 +1000
Subject: [R-pkg-devel] Versioning conventions
In-Reply-To: <CAARY7kiRPUL-_+WVa7Px8i-A_f953BtCNWBkSVxidnEx9H3qDw@mail.gmail.com>
References: <CAARY7kiRPUL-_+WVa7Px8i-A_f953BtCNWBkSVxidnEx9H3qDw@mail.gmail.com>
Message-ID: <CAJmOi+POLU4x_iWrY8T4szEzx28u3KB5q+EZ5Ws4xNO1JUPg=w@mail.gmail.com>

3.5.1.0 with the 4th number (0) for within-release changes.

Lovely package by the way -- I was looking for it earlier this year
but thought it had been lost!

The link in the GitHub description appears broken, however.

On 10 July 2018 at 23:59, David Hugh-Jones <davidhughjones at gmail.com> wrote:
> Hi all,
>
> Just updated my rcheology package with data on functions for R 3.5.1 (no
> change from R 3.5.0 afaik). See https://github.com/hughjonesd/rcheology.
>
> I'm wondering how to version this package. It's not on CRAN yet so it would
> be good to get things right.
>
> Possibilities:
>
> * Just copy the R versions, so the new version would be 3.5.1
> Advantages: easy to understand. Disadvantages: semantic versioning would
> follow R, not the package itself (which does contain a single function with
> a public API); what if I make changes between R releases.
> * ownversion.major.minor-Rversion.major.minor e.g. 0.1.0-3.5.1
> Advantages: shows the R version clearly, contains own semantic versioning
> information. Disadvantages: long.
> * ownversion.major.minor-Rversionmajorminor e.g. 0.1.0-351
> Advantage: as above but shorter. Disadvantages: if we hit e.g. 3.10.0, then
> go back to 4.0.0, then we'd end up going backward in the last component.
>
> Any ideas?
>
> Cheers,
> David
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From d@vidhughjone@ @ending from gm@il@com  Tue Jul 10 17:53:47 2018
From: d@vidhughjone@ @ending from gm@il@com (David Hugh-Jones)
Date: Tue, 10 Jul 2018 16:53:47 +0100
Subject: [R-pkg-devel] Versioning conventions
In-Reply-To: <CAJmOi+POLU4x_iWrY8T4szEzx28u3KB5q+EZ5Ws4xNO1JUPg=w@mail.gmail.com>
References: <CAARY7kiRPUL-_+WVa7Px8i-A_f953BtCNWBkSVxidnEx9H3qDw@mail.gmail.com>
 <CAJmOi+POLU4x_iWrY8T4szEzx28u3KB5q+EZ5Ws4xNO1JUPg=w@mail.gmail.com>
Message-ID: <CAARY7ki=bCEEOo4TagEuPEcHOfFuY2uPjQeU+zAuVhPheiJ-Sw@mail.gmail.com>

Thanks! Fixed.

Sounds like people favour 3.5.1.0 as the style. Seems reasonable.


David


On Tue, 10 Jul 2018 at 16:00, Hugh Parsonage <hugh.parsonage at gmail.com>
wrote:

> 3.5.1.0 with the 4th number (0) for within-release changes.
>
> Lovely package by the way -- I was looking for it earlier this year
> but thought it had been lost!
>
> The link in the GitHub description appears broken, however.
>
> On 10 July 2018 at 23:59, David Hugh-Jones <davidhughjones at gmail.com>
> wrote:
> > Hi all,
> >
> > Just updated my rcheology package with data on functions for R 3.5.1 (no
> > change from R 3.5.0 afaik). See https://github.com/hughjonesd/rcheology.
> >
> > I'm wondering how to version this package. It's not on CRAN yet so it
> would
> > be good to get things right.
> >
> > Possibilities:
> >
> > * Just copy the R versions, so the new version would be 3.5.1
> > Advantages: easy to understand. Disadvantages: semantic versioning would
> > follow R, not the package itself (which does contain a single function
> with
> > a public API); what if I make changes between R releases.
> > * ownversion.major.minor-Rversion.major.minor e.g. 0.1.0-3.5.1
> > Advantages: shows the R version clearly, contains own semantic versioning
> > information. Disadvantages: long.
> > * ownversion.major.minor-Rversionmajorminor e.g. 0.1.0-351
> > Advantage: as above but shorter. Disadvantages: if we hit e.g. 3.10.0,
> then
> > go back to 4.0.0, then we'd end up going backward in the last component.
> >
> > Any ideas?
> >
> > Cheers,
> > David
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From profjcn@@h @ending from gm@il@com  Wed Jul 11 16:00:43 2018
From: profjcn@@h @ending from gm@il@com (J C Nash)
Date: Wed, 11 Jul 2018 10:00:43 -0400
Subject: [R-pkg-devel] Reverse dependencies - again
Message-ID: <b2ea7609-70d3-c511-242b-aa890dfc84ac@gmail.com>

Excuses for the length of this, but optimx has a lot of packages
using it.

Over the past couple of months, I have been struggling with checking
a new, and much augmented, optimx package. It offers some serious
improvements:
  - parameter scaling on all methods
  - two safeguarded Newton methods
  - improved gradient approximations
  - more maintainable structure for adding new solvers in future
  - a single method "solver" (wrapper) that uses optim() syntax

However, I have been going through a lot of bother with reverse
dependency checking. In summary, tools::check_packages and
devtools::revdep_check both give lots of complaints, in particular
about packages that cannot be installed. When I run my own checks
(see below), I get no issues that reflect on my own package. Similarly,
Duncan Murdoch was very helpful and ran a check on an earlier version
with no major issues using his own check program. I have noticed,
or been told, that several other workers have their own procedures
and that they have experienced somewhat similar difficulties.

Unfortunately, my last effort to submit to CRAN got blocked at the
pre-scan stage because of reverse dependencies. I have not been able
to fix what I cannot find, however, as it appears I am getting caught
on an obstacle outside my control. I did not get a response from the
CRAN team, but the timing was in the middle of the R3.5 launch, so
understandable. However, I am very reluctant to use submission to
CRAN as a checking tool.

My questions:

1) Am I missing something in my method of calling tools or devtools?
The code is included below. Or not reading the output carefully?
I will be happy to put detail on a website -- too large for here.

2) Is it time to consider an effort to provide online revdep checking
that would avoid pressure on CRAN team directly and would provide
clearer indicators of the issues raised by a particular package? I'd
be happy to assist in such an effort, as it appears to be needed, and
with appropriate output and links could aid developers to improve
their packages.

Cheers,

John Nash

tools::check_packages_in_dir finds install fail for

BioGeoBEARS
CensSpatial
Countr
ecd
ldhmm
LifeHist
macc
marked
midasr
QuantumClone
spfrontier
surrosurv

Code:

# cranrevdep

require(tools)
pkgdir <- "~/temp/wrkopt/srcpkg"
jcheck<-check_packages_in_dir(pkgdir,
                      check_args = c("--as-cran", ""),
                      reverse = list(repos = getOption("repos")["CRAN"]))
summary(jcheck)

---------------------------------------------------------------------

devtools::revdep_check finds install fail for:

afex
IRTpp
lme4

as well as

BioGeoBEARS
CensSpatial
Countr
ecd
ldhmm
LifeHist
macc
marked
midasr
QuantumClone
spfrontier
surrosurv

Summary:
Saving check results to `revdep/check.rds` -----------------------------------------------------------------------
Cleaning up ------------------------------------------------------------------------------------------------------
* Failed to install: afex, BioGeoBEARS, CensSpatial, Countr, ecd, IRTpp, ldhmm, LifeHist, lme4, macc, marked, midasr,
QuantumClone, spfrontier, surrosurv
* ACDm: checking compilation flags used ... WARNING
* languageR: checking Rd cross-references ... WARNING
* mvord: checking compilation flags used ... WARNING
* RandomFields: checking compilation flags used ... WARNING
* rankdist: checking compilation flags used ... WARNING
* regsem: checking compilation flags used ... WARNING


21 packages with problems

|package      |version | errors| warnings| notes|
|:------------|:-------|------:|--------:|-----:|
|ACDm         |1.0.4   |      0|        1|     1|
|afex         |0.21-2  |      1|        0|     0|
|BioGeoBEARS  |0.2.1   |      1|        0|     0|
|CensSpatial  |1.3     |      1|        0|     0|
|Countr       |3.4.1   |      1|        0|     0|
|ecd          |0.9.1   |      1|        0|     0|
|IRTpp        |0.2.6.1 |      1|        0|     0|
|languageR    |1.4.1   |      0|        1|     4|
|ldhmm        |0.4.5   |      1|        0|     0|
|LifeHist     |1.0-1   |      1|        0|     0|
|lme4         |1.1-17  |      1|        0|     0|
|macc         |1.0.1   |      1|        0|     0|
|marked       |1.2.1   |      1|        0|     0|
|midasr       |0.6     |      1|        0|     0|
|mvord        |0.3.1   |      0|        1|     0|
|QuantumClone |1.0.0.6 |      1|        0|     0|
|RandomFields |3.1.50  |      0|        1|     2|
|rankdist     |1.1.3   |      0|        1|     0|
|regsem       |1.1.2   |      0|        1|     0|
|spfrontier   |0.2.3   |      1|        0|     0|
|surrosurv    |1.1.24  |      1|        0|     0|


But there are 43 dependencies, so must we assume rest are OK?
> require(devtools)
Loading required package: devtools
> rdlist <- revdep()
> rdlist
 [1] "ACDm"              "afex"              "bbmle"
 [4] "BioGeoBEARS"       "calibrar"          "CatDyn"
 [7] "CensSpatial"       "CJAMP"             "Countr"
[10] "dimRed"            "ecd"               "embryogrowth"
[13] "gear"              "heemod"            "invGauss"
[16] "IRTpp"             "languageR"         "lava"
[19] "ldhmm"             "LifeHist"          "LIHNPSD"
[22] "lme4"              "macc"              "marked"
[25] "midasr"            "monmlp"            "mrds"
[28] "mvord"             "nlmrt"             "NormalGamma"
[31] "parfm"             "PartCensReg"       "phenology"
[34] "QuantumClone"      "RandomFields"      "rankdist"
[37] "regsem"            "REndo"             "ROI.plugin.optimx"
[40] "sgt"               "spfrontier"        "surrosurv"
[43] "Synth"
>

Code:

# devrevdep180710
require(devtools)
pname <- "optimx180710"
ppath <- paste("~/temp/wrkopt/",pname, sep='')
options(devtools.revdep.libpath="~/temp/wrkopt/dlpkg")
getOption("devtools.revdep.libpath")
# revdep_check_resume(ppath, quiet_check=FALSE, check_dir="~/temp/wrkopt/revchecks")
revdep_check(ppath, quiet_check=FALSE, check_dir="~/temp/wrkopt/revchecks")
revdep_check_save_summary(ppath)
revdep_check_print_problems(ppath)

--------------------------------------

My own, more or less manual, checks use

Code:

require(devtools)

jnrd <- function(pname){
   tdir <- "/home/john/temp/wrkopt/tt/"
   setwd(tdir)
   pkg <- download.packages(pname, destdir=tdir)[2]
   cmd <- paste("R CMD check ",pkg)
   system(cmd)
}

rdlist <- devtools::revdep("optimx")
npkg <- length(rdlist)
for (ii in 1:npkg){
   jnrd(rdlist[ii])
#   TMP <- readline("Continue?")
}

Grep'ing the resulting files for "Status:" I found

ACDm.Rcheck/00check.log:Status: OK
afex.Rcheck/00check.log:Status: OK
bbmle.Rcheck/00check.log:Status: OK
BioGeoBEARS.Rcheck/00check.log:Status: 2 NOTEs
calibrar.Rcheck/00check.log:Status: OK
CatDyn.Rcheck/00check.log:Status: 1 NOTE
CensSpatial.Rcheck/00check.log:Status: OK
CJAMP.Rcheck/00check.log:Status: OK
Countr.Rcheck/00check.log:Status: 1 NOTE
dimRed.Rcheck/00check.log:Status: OK
ecd.Rcheck/00check.log:Status: OK
embryogrowth.Rcheck/00check.log:Status: 1 NOTE
gear.Rcheck/00check.log:Status: OK
heemod.Rcheck/00check.log:Status: OK
invGauss.Rcheck/00check.log:Status: 2 NOTEs
IRTpp.Rcheck/00check.log:Status: 1 NOTE
languageR.Rcheck/00check.log:Status: 3 NOTEs
lava.Rcheck/00check.log:Status: OK
ldhmm.Rcheck/00check.log:Status: OK
LifeHist.Rcheck/00check.log:Status: OK
LIHNPSD.Rcheck/00check.log:Status: 3 NOTEs
lme4.Rcheck/00check.log:Status: 1 NOTE
macc.Rcheck/00check.log:Status: OK
marked.Rcheck/00check.log:Status: OK
midasr.Rcheck/00check.log:Status: OK
monmlp.Rcheck/00check.log:Status: OK
mrds.Rcheck/00check.log:Status: OK
mvord.Rcheck/00check.log:Status: OK
nlmrt.Rcheck/00check.log:Status: OK
NormalGamma.Rcheck/00check.log:Status: 2 NOTEs
parfm.Rcheck/00check.log:Status: OK
PartCensReg.Rcheck/00check.log:Status: OK
phenology.Rcheck/00check.log:Status: OK
QuantumClone.Rcheck/00check.log:Status: OK
RandomFields.Rcheck/00check.log:Status: 1 NOTE
rankdist.Rcheck/00check.log:Status: OK
regsem.Rcheck/00check.log:Status: OK
REndo.Rcheck/00check.log:Status: 1 NOTE
ROI.plugin.optimx.Rcheck/00check.log:Status: OK
sgt.Rcheck/00check.log:Status: OK
spfrontier.Rcheck/00check.log:Status: OK
surrosurv.Rcheck/00check.log:Status: 1 WARNING, 1 NOTE
Synth.Rcheck/00check.log:Status: 2 NOTEs

The 1 WARNING is a result of optimx now subsuming functions
from package optextras as should be happening, namely,

Found the following significant warnings:
  Warning: replacing previous import ?optextras::gHgenb? by ?optimx::gHgenb? when loading ?surrosurv?
  Warning: replacing previous import ?optextras::hesschk? by ?optimx::hesschk? when loading ?surrosurv?
  Warning: replacing previous import ?optextras::grback? by ?optimx::grback? when loading ?surrosurv?
  Warning: replacing previous import ?optextras::grcentral? by ?optimx::grcentral? when loading ?surrosurv?
  Warning: replacing previous import ?optextras::grnd? by ?optimx::grnd? when loading ?surrosurv?
  Warning: replacing previous import ?optextras::gHgen? by ?optimx::gHgen? when loading ?surrosurv?
  Warning: replacing previous import ?optextras::axsearch? by ?optimx::axsearch? when loading ?surrosurv?
  Warning: replacing previous import ?optextras::optsp? by ?optimx::optsp? when loading ?surrosurv?
  Warning: replacing previous import ?optextras::bmstep? by ?optimx::bmstep? when loading ?surrosurv?
  Warning: replacing previous import ?optextras::scalechk? by ?optimx::scalechk? when loading ?surrosurv?
  Warning: replacing previous import ?optextras::grchk? by ?optimx::grchk? when loading ?surrosurv?
  Warning: replacing previous import ?optextras::bmchk? by ?optimx::bmchk? when loading ?surrosurv?
  Warning: replacing previous import ?optextras::fnchk? by ?optimx::fnchk? when loading ?surrosurv?
  Warning: replacing previous import ?optextras::grfwd? by ?optimx::grfwd? when loading ?surrosurv?
  Warning: replacing previous import ?optextras::kktchk? by ?optimx::kktchk? when loading ?surrosurv?


From c@rmen@livi @ending from ifom@eu  Thu Jul 12 17:14:07 2018
From: c@rmen@livi @ending from ifom@eu (Carmen M. Livi)
Date: Thu, 12 Jul 2018 17:14:07 +0200
Subject: [R-pkg-devel] spp package removed from the repository
In-Reply-To: <1c5231239c74cd0a6ae298849939a149@ifom.eu>
References: <1c5231239c74cd0a6ae298849939a149@ifom.eu>
Message-ID: <5626b07a-4d2f-678f-1105-32a7957fcd4a@ifom.eu>

Hi all,

I saw that "spp" package has been removed from the repository because of 
an error that has not been addressed.

https://cran.r-project.org/web/packages/spp/index.html

The error was that the dependency package called "Rsamtools" is not 
available on MAC (on all the other platforms it is available). Therefore 
I was writing to the mailing list and several times also to Simon 
Urbanek. But I never got a reply.

https://cran.r-project.org/web/checks/check_results_spp.html

Can you please give some advice how I should proceed now to get the 
package back into the repository?

Thank you very much,
Carmen M. Livi



-------- Forwarded Message --------
Subject: 	Re: [R-pkg-devel] spp package error "Package required b ut not 
available: ?Rsamtools?"
Date: 	Mon, 18 Jun 2018 12:11:59 +0000
From: 	Carmen Livi <carmen.livi at ifom.eu>
To: 	simon.urbanek at r-project.org
CC: 	r-package-devel at r-project.org



Dear Simon Urbanek,

Since a few weeks I am getting a CRAN-check error under OSX for the package
"spp" (https://cran.r-project.org/web/checks/check_results_spp.html):

"Package required but not available: ?Rsamtools?

Rsamtools is available on Bioconductor and the error shows up only on MAC. Is
it possible that Rsamtools is missing in the repository of the architecture?

Thank you very much,
Carmen



  Uwe Ligges (ligges at statistik.tu-dortmund.de) wrote:
  >
  > Perhaps ask Simon Urbanek, the CRAN Mac maintainer, what is going on here.
  >
  > Best,
  > Uwe Ligges
  >
  >
  >
  >
  > On 18.06.2018 11:33, Carmen M. Livi wrote:
  > > Hi all,
  > >
  > > I have a question regarding the CRAN checks for package spp:
  > >
  > > https://cran.r-project.org/web/checks/check_results_spp.html
  > >
  > > We didn't update or change anything in the package, but since a few
  > > weeks the CRAN check for OSX gives an error saying that a dependency is
  > > not available:
  > >
  > > ?Package required but not available: ?Rsamtools?
  > >
  > > Rsamtools is available on Bioconductor and the error shows up only on
  > > MAC. Is Rsamtools missing in the repository of the architecture?
  > >
  > > Thanks,
  > > Carmen
  > >
  > > [[alternative HTML version deleted]]
  > >
  > > ______________________________________________
  > > R-package-devel at r-project.org mailing list
  > > https://stat.ethz.ch/mailman/listinfo/r-package-devel
  > >
  >

-- 
Carmen Maria Livi
Post Doctoral Researcher
Ferrari Lab
IFOM - Fondazione Istituto firc Oncologia Molecolare
Via Adamello 16
20139 Milano, Italy

______________________________________________
R-package-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel


	[[alternative HTML version deleted]]


From ligge@ @ending from @t@ti@tik@tu-dortmund@de  Thu Jul 12 20:59:41 2018
From: ligge@ @ending from @t@ti@tik@tu-dortmund@de (Uwe Ligges)
Date: Thu, 12 Jul 2018 20:59:41 +0200
Subject: [R-pkg-devel] spp package removed from the repository
In-Reply-To: <5626b07a-4d2f-678f-1105-32a7957fcd4a@ifom.eu>
References: <1c5231239c74cd0a6ae298849939a149@ifom.eu>
 <5626b07a-4d2f-678f-1105-32a7957fcd4a@ifom.eu>
Message-ID: <d8365ed4-03cf-349d-7e6b-7165e52862f8@statistik.tu-dortmund.de>

Well, the Mac issue is not the reason why spp has been archived, but all 
the other issue you can see from the last overview page we have archived:

https://cran-archive.r-project.org/web/checks/2018-07-06_check_results_spp.html

And you got reminders to fix these on May 19, Jun 2, Jun 17, each with 
deadlines that passed without any submission to CRAN.

If the Mac builder has no Rsamtools installed, this won't hold us up to 
publish a fixed version to CRAN as it is not your fault. If you want to 
sort it out too, pls contact Simon again. Nobody else is able to help 
for that part.


Best,
Uwe Ligges






On 12.07.2018 17:14, Carmen M. Livi wrote:
> Hi all,
> 
> I saw that "spp" package has been removed from the repository because of
> an error that has not been addressed.
> 
> https://cran.r-project.org/web/packages/spp/index.html
> 
> The error was that the dependency package called "Rsamtools" is not
> available on MAC (on all the other platforms it is available). Therefore
> I was writing to the mailing list and several times also to Simon
> Urbanek. But I never got a reply.
> 
> https://cran.r-project.org/web/checks/check_results_spp.html
> 
> Can you please give some advice how I should proceed now to get the
> package back into the repository?
> 
> Thank you very much,
> Carmen M. Livi
> 
> 
> 
> -------- Forwarded Message --------
> Subject: 	Re: [R-pkg-devel] spp package error "Package required b ut not
> available: ?Rsamtools?"
> Date: 	Mon, 18 Jun 2018 12:11:59 +0000
> From: 	Carmen Livi <carmen.livi at ifom.eu>
> To: 	simon.urbanek at r-project.org
> CC: 	r-package-devel at r-project.org
> 
> 
> 
> Dear Simon Urbanek,
> 
> Since a few weeks I am getting a CRAN-check error under OSX for the package
> "spp" (https://cran.r-project.org/web/checks/check_results_spp.html):
> 
> "Package required but not available: ?Rsamtools?
> 
> Rsamtools is available on Bioconductor and the error shows up only on MAC. Is
> it possible that Rsamtools is missing in the repository of the architecture?
> 
> Thank you very much,
> Carmen
> 
> 
> 
>    Uwe Ligges (ligges at statistik.tu-dortmund.de) wrote:
>    >
>    > Perhaps ask Simon Urbanek, the CRAN Mac maintainer, what is going on here.
>    >
>    > Best,
>    > Uwe Ligges
>    >
>    >
>    >
>    >
>    > On 18.06.2018 11:33, Carmen M. Livi wrote:
>    > > Hi all,
>    > >
>    > > I have a question regarding the CRAN checks for package spp:
>    > >
>    > > https://cran.r-project.org/web/checks/check_results_spp.html
>    > >
>    > > We didn't update or change anything in the package, but since a few
>    > > weeks the CRAN check for OSX gives an error saying that a dependency is
>    > > not available:
>    > >
>    > > ?Package required but not available: ?Rsamtools?
>    > >
>    > > Rsamtools is available on Bioconductor and the error shows up only on
>    > > MAC. Is Rsamtools missing in the repository of the architecture?
>    > >
>    > > Thanks,
>    > > Carmen
>    > >
>    > > [[alternative HTML version deleted]]
>    > >
>    > > ______________________________________________
>    > > R-package-devel at r-project.org mailing list
>    > > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>    > >
>    >
>


From toli@@ch@l @ending from gm@il@com  Tue Jul 10 15:48:25 2018
From: toli@@ch@l @ending from gm@il@com (=?UTF-8?B?zqTPjM67zrfPgiDOp86xzrvOus6uz4I=?=)
Date: Tue, 10 Jul 2018 16:48:25 +0300
Subject: [R-pkg-devel] structure of R package
Message-ID: <CAMfvGJN2S_xk7MJwMA2GW10t_faw5YpLgPkL5tqeKu2sUdQRMg@mail.gmail.com>

Dear all,

this period i am working on a gsoc project. We develop a c++ library with a
R interface using Rcpp and we plan to submit it to CRAN. We use the default
Rcpp package structure in a folder /root/R-proj. The c++ headers files are
into a folder /root/include outside the R-proj folder. In /root/R-proj/src
we have he .cpp main file and in makevars we include all the files from
/root/include.

The package can be installed successfully without any problem but if we run
devtools::check() in /root/R-poj , it returns an error because it seems
that it is not able to see files outside R package main folder which is
/root/R-proj.

Question: Is this ok or we have to change our package structure and add
include folder into /root/R-proj?

Thanks in advance,

Tolis.

	[[alternative HTML version deleted]]


From murdoch@dunc@n @ending from gm@il@com  Fri Jul 13 12:35:37 2018
From: murdoch@dunc@n @ending from gm@il@com (Duncan Murdoch)
Date: Fri, 13 Jul 2018 06:35:37 -0400
Subject: [R-pkg-devel] structure of R package
In-Reply-To: <CAMfvGJN2S_xk7MJwMA2GW10t_faw5YpLgPkL5tqeKu2sUdQRMg@mail.gmail.com>
References: <CAMfvGJN2S_xk7MJwMA2GW10t_faw5YpLgPkL5tqeKu2sUdQRMg@mail.gmail.com>
Message-ID: <fd2e3859-569f-4846-9f62-bef347b1d3b0@gmail.com>

On 10/07/2018 9:48 AM, ????? ?????? wrote:
> Dear all,
> 
> this period i am working on a gsoc project. We develop a c++ library with a
> R interface using Rcpp and we plan to submit it to CRAN. We use the default
> Rcpp package structure in a folder /root/R-proj. The c++ headers files are
> into a folder /root/include outside the R-proj folder. In /root/R-proj/src
> we have he .cpp main file and in makevars we include all the files from
> /root/include.
> 
> The package can be installed successfully without any problem but if we run
> devtools::check() in /root/R-poj , it returns an error because it seems
> that it is not able to see files outside R package main folder which is
> /root/R-proj.
> 
> Question: Is this ok or we have to change our package structure and add
> include folder into /root/R-proj?

Yes, you need to do the latter, or (if the headers are for standard 
libraries that users should obtain elsewhere) add a configure script so 
that R can find them on a user's system, and note the requirement in the 
DESCRIPTION file SystemRequirements field.  It's better if the .tar.gz 
file is self-contained.

Duncan Murdoch


From rm@h@rp @ending from me@com  Fri Jul 13 05:10:59 2018
From: rm@h@rp @ending from me@com (R. Mark Sharp)
Date: Thu, 12 Jul 2018 22:10:59 -0500
Subject: [R-pkg-devel] Getting error: Installation failed: Unknown username
 with my package
Message-ID: <F6B64638-A3BB-4C31-95B5-0958D6CC9970@me.com>

I had a few week development hiatus with github.com/rmsharp/nprcmanager and when I tried to get a Travis build to work it failed. All of my local builds are working without errors or warnings, but the devtools::install_github(?rmsharp/nprcmanager?) fails with this error message


> library(devtools)
> install_github("rmsharp/nprcmanager")
Downloading GitHub repo rmsharp/nprcmanager at master
from URL https://api.github.com/repos/rmsharp/nprcmanager/zipball/master
Installing nprcmanager
Installation failed: Unknown username.

Two other packages of mine, one private rmsharp/renameSurgerySheets, and one public rmsharp/rmsutilityr both install fine.

Does anyone know what I may have broken or how?

Mark
R. Mark Sharp, Ph.D.
Data Scientist and Biomedical Statistical Consultant
7526 Meadow Green St.
San Antonio, TX 78251
mobile: 210-218-2868
rmsharp at me.com


From murdoch@dunc@n @ending from gm@il@com  Sat Jul 14 01:52:06 2018
From: murdoch@dunc@n @ending from gm@il@com (Duncan Murdoch)
Date: Fri, 13 Jul 2018 19:52:06 -0400
Subject: [R-pkg-devel] 
 Getting error: Installation failed: Unknown username with my package
In-Reply-To: <F6B64638-A3BB-4C31-95B5-0958D6CC9970@me.com>
References: <F6B64638-A3BB-4C31-95B5-0958D6CC9970@me.com>
Message-ID: <471e74af-ba08-5782-aed3-3ab3c3aedfa9@gmail.com>

On 12/07/2018 11:10 PM, R. Mark Sharp wrote:
> I had a few week development hiatus with github.com/rmsharp/nprcmanager and when I tried to get a Travis build to work it failed. All of my local builds are working without errors or warnings, but the devtools::install_github(?rmsharp/nprcmanager?) fails with this error message
> 
> 
>> library(devtools)
>> install_github("rmsharp/nprcmanager")
> Downloading GitHub repo rmsharp/nprcmanager at master
> from URL https://api.github.com/repos/rmsharp/nprcmanager/zipball/master
> Installing nprcmanager
> Installation failed: Unknown username.
> 
> Two other packages of mine, one private rmsharp/renameSurgerySheets, and one public rmsharp/rmsutilityr both install fine.
> 
> Does anyone know what I may have broken or how?

Github is now a Microsoft property.  Of course things don't work 
properly.  Why would you expect them to work?

Duncan


From r@turner @ending from @uckl@nd@@c@nz  Sat Jul 14 01:59:45 2018
From: r@turner @ending from @uckl@nd@@c@nz (Rolf Turner)
Date: Sat, 14 Jul 2018 11:59:45 +1200
Subject: [R-pkg-devel] [FORGED] Re: Getting error: Installation failed:
 Unknown username with my package
In-Reply-To: <471e74af-ba08-5782-aed3-3ab3c3aedfa9@gmail.com>
References: <F6B64638-A3BB-4C31-95B5-0958D6CC9970@me.com>
 <471e74af-ba08-5782-aed3-3ab3c3aedfa9@gmail.com>
Message-ID: <d5d75b86-d736-a1d9-6b19-ba71c51b9a2b@auckland.ac.nz>


Fortune nomination!!!

cheers,

Rolf

-- 
Technical Editor ANZJS
Department of Statistics
University of Auckland
Phone: +64-9-373-7599 ext. 88276

On 14/07/18 11:52, Duncan Murdoch wrote:
> On 12/07/2018 11:10 PM, R. Mark Sharp wrote:
>> I had a few week development hiatus with 
>> github.com/rmsharp/nprcmanager and when I tried to get a Travis build 
>> to work it failed. All of my local builds are working without errors 
>> or warnings, but the devtools::install_github(?rmsharp/nprcmanager?) 
>> fails with this error message
>>
>>
>>> library(devtools)
>>> install_github("rmsharp/nprcmanager")
>> Downloading GitHub repo rmsharp/nprcmanager at master
>> from URL https://api.github.com/repos/rmsharp/nprcmanager/zipball/master
>> Installing nprcmanager
>> Installation failed: Unknown username.
>>
>> Two other packages of mine, one private rmsharp/renameSurgerySheets, 
>> and one public rmsharp/rmsutilityr both install fine.
>>
>> Does anyone know what I may have broken or how?
> 
> Github is now a Microsoft property.? Of course things don't work 
> properly.? Why would you expect them to work?
> 
> Duncan


From c@@rdi@g@bor @ending from gm@il@com  Sat Jul 14 02:17:22 2018
From: c@@rdi@g@bor @ending from gm@il@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Sat, 14 Jul 2018 01:17:22 +0100
Subject: [R-pkg-devel] 
 Getting error: Installation failed: Unknown username with my package
In-Reply-To: <F6B64638-A3BB-4C31-95B5-0958D6CC9970@me.com>
References: <F6B64638-A3BB-4C31-95B5-0958D6CC9970@me.com>
Message-ID: <CABtg=Kn+winrSCi8H2QCdhnNEBoT4wkpnqOtjR1ymkg6RVbS8w@mail.gmail.com>

Hi Mark,

seems like you have "Remotes: covr" in the DESCRIPTION file, which is
not a valid remote specification:
https://github.com/rmsharp/nprcmanager/blob/f93e4e8056a8602654a94fc8685d9ed722c74db1/DESCRIPTION#L31-L32

If you need the CRAN version of covr, remove the Remotes entry. If you
need the GH version, use r-lib/covr

Gabor
On Fri, Jul 13, 2018 at 9:41 PM R. Mark Sharp <rmsharp at me.com> wrote:
>
> I had a few week development hiatus with github.com/rmsharp/nprcmanager and when I tried to get a Travis build to work it failed. All of my local builds are working without errors or warnings, but the devtools::install_github(?rmsharp/nprcmanager?) fails with this error message
>
>
> > library(devtools)
> > install_github("rmsharp/nprcmanager")
> Downloading GitHub repo rmsharp/nprcmanager at master
> from URL https://api.github.com/repos/rmsharp/nprcmanager/zipball/master
> Installing nprcmanager
> Installation failed: Unknown username.
>
> Two other packages of mine, one private rmsharp/renameSurgerySheets, and one public rmsharp/rmsutilityr both install fine.
>
> Does anyone know what I may have broken or how?
>
> Mark
> R. Mark Sharp, Ph.D.
> Data Scientist and Biomedical Statistical Consultant
> 7526 Meadow Green St.
> San Antonio, TX 78251
> mobile: 210-218-2868
> rmsharp at me.com
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From rm@h@rp @ending from me@com  Sat Jul 14 04:30:39 2018
From: rm@h@rp @ending from me@com (R. Mark Sharp)
Date: Fri, 13 Jul 2018 21:30:39 -0500
Subject: [R-pkg-devel] 
 Getting error: Installation failed: Unknown username with my package
In-Reply-To: <CABtg=Kn+winrSCi8H2QCdhnNEBoT4wkpnqOtjR1ymkg6RVbS8w@mail.gmail.com>
References: <F6B64638-A3BB-4C31-95B5-0958D6CC9970@me.com>
 <CABtg=Kn+winrSCi8H2QCdhnNEBoT4wkpnqOtjR1ymkg6RVbS8w@mail.gmail.com>
Message-ID: <ACB5CBC8-67DC-4B44-957B-F6AEC4AF1CBC@me.com>

Gabor,

You were exactly right. I do not think I would have caught that at all.

I had been going down the wrong path of thinking ?Unknown username? was referring to the way I was referring to my own package.

I am very grateful, but I must add that I got more enjoyment out of Duncan?s quip.

Mark
R. Mark Sharp, Ph.D.
Data Scientist and Biomedical Statistical Consultant
7526 Meadow Green St.
San Antonio, TX 78251
mobile: 210-218-2868
rmsharp at me.com











> On Jul 13, 2018, at 7:17 PM, G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:
> 
> Hi Mark,
> 
> seems like you have "Remotes: covr" in the DESCRIPTION file, which is
> not a valid remote specification:
> https://github.com/rmsharp/nprcmanager/blob/f93e4e8056a8602654a94fc8685d9ed722c74db1/DESCRIPTION#L31-L32
> 
> If you need the CRAN version of covr, remove the Remotes entry. If you
> need the GH version, use r-lib/covr
> 
> Gabor
> On Fri, Jul 13, 2018 at 9:41 PM R. Mark Sharp <rmsharp at me.com> wrote:
>> 
>> I had a few week development hiatus with github.com/rmsharp/nprcmanager and when I tried to get a Travis build to work it failed. All of my local builds are working without errors or warnings, but the devtools::install_github(?rmsharp/nprcmanager?) fails with this error message
>> 
>> 
>>> library(devtools)
>>> install_github("rmsharp/nprcmanager")
>> Downloading GitHub repo rmsharp/nprcmanager at master
>> from URL https://api.github.com/repos/rmsharp/nprcmanager/zipball/master
>> Installing nprcmanager
>> Installation failed: Unknown username.
>> 
>> Two other packages of mine, one private rmsharp/renameSurgerySheets, and one public rmsharp/rmsutilityr both install fine.
>> 
>> Does anyone know what I may have broken or how?
>> 
>> Mark
>> R. Mark Sharp, Ph.D.
>> Data Scientist and Biomedical Statistical Consultant
>> 7526 Meadow Green St.
>> San Antonio, TX 78251
>> mobile: 210-218-2868
>> rmsharp at me.com
>> 
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From jmh@nnon@ucd@vi@ @ending from gm@il@com  Sun Jul 15 03:13:11 2018
From: jmh@nnon@ucd@vi@ @ending from gm@il@com (Michael Hannon)
Date: Sat, 14 Jul 2018 18:13:11 -0700
Subject: [R-pkg-devel] Package builds, installs,
 and runs but does not pass devtools::check()
Message-ID: <CACdH2ZbSBhM=tyRqaQK5MyKP6SkZAcFzmSxmMrGt4chySiz3vg@mail.gmail.com>

Greetings.  I'm working on a small package, and I'm using the devtools
functions to create, build, etc., the package.

As indicated in the subject line, I get no errors when I do:

    > build()
    > install()

When I run a separate R session and load the package, i.e.,

    > library(my_pkg)

the package loads without error, and the two exported functions appear
to work as advertised.

OTOH, if I include devtools::check() in the construction of the
package, I consistently get an error:

    * installing *source* package ?my_pkg? ...
    ** R
    ** preparing package for lazy loading
    Error in loadNamespace(from, lib.loc = .library) :
      there is no package called ?dplyr?
    Error : unable to load R code in package 'my_pkg'

Clearly there *is* a package called "dplyr" on my system (see the
session info below, for instance).  And, as I've mentioned, the code
*does* run, and I can watch it successfully reading CSV files.

Here's the relevant part of my DESCRIPTION file:

    Depends: R (>= 3.4.4)
    Imports: readr,
            dplyr,
            ggplot2,
            purrr,
            magrittr

I suspect the problem may be that I'm misunderstanding something about
the `import::from()` function, which I'm using for the first time to
load required functions into my code.  In each of the three files that
use dplyr I have the line:

    import::from(dplyr, mutate, filter, rename, select, setdiff, slice, "%>%")

I've tried:

    (1) putting that line in just one of the files (the lexically first one)
    (2) including different subsets of dplyr functions, as needed, in
the various files

Needless to say, I haven't seen any improvement with any of the above
(or any of the other thrashing I've done).

If you can point me in the right direction, I'd appreciate it.  Thanks.

-- Mike


> session_info()
Session info ------------------------------------------------------------------
 setting  value
 version  R version 3.4.4 (2018-03-15)
 system   x86_64, linux-gnu
 ui       X11
 language en_US
 collate  en_US.UTF-8
 tz       America/Los_Angeles
 date     2018-07-14

Packages ----------------------------------------------------------------------
 package    * version date       source
 assertthat   0.2.0   2017-04-11 CRAN (R 3.3.3)
 base       * 3.4.4   2018-03-16 local
 bindr        0.1.1   2018-03-13 CRAN (R 3.4.3)
 bindrcpp     0.2.2   2018-03-29 CRAN (R 3.4.4)
 compiler     3.4.4   2018-03-16 local
 crayon       1.3.4   2017-09-16 CRAN (R 3.4.1)
 datasets   * 3.4.4   2018-03-16 local
 devtools   * 1.13.6  2018-06-27 CRAN (R 3.4.4)
 digest       0.6.15  2018-01-28 CRAN (R 3.4.3)
 dplyr      * 0.7.6   2018-06-29 CRAN (R 3.4.4)
 glue         1.2.0   2017-10-29 CRAN (R 3.4.2)
 graphics   * 3.4.4   2018-03-16 local
 grDevices  * 3.4.4   2018-03-16 local
 magrittr     1.5     2014-11-22 CRAN (R 3.2.2)
 memoise      1.1.0   2017-04-21 CRAN (R 3.3.3)
 methods    * 3.4.4   2018-03-16 local
 pillar       1.3.0   2018-07-14 CRAN (R 3.4.4)
 pkgconfig    2.0.1   2017-03-21 CRAN (R 3.4.0)
 purrr        0.2.5   2018-05-29 CRAN (R 3.4.4)
 R6           2.2.2   2017-06-17 CRAN (R 3.4.0)
 Rcpp         0.12.17 2018-05-18 CRAN (R 3.4.4)
 rlang        0.2.1   2018-05-30 CRAN (R 3.4.4)
 stats      * 3.4.4   2018-03-16 local
 tibble       1.4.2   2018-01-22 CRAN (R 3.4.3)
 tidyselect   0.2.4   2018-02-26 CRAN (R 3.4.3)
 utils      * 3.4.4   2018-03-16 local
 withr        2.1.2   2018-03-15 CRAN (R 3.4.3)
>


From georgi@bo@hn@kov @ending from m@nche@ter@@c@uk  Sun Jul 15 09:05:07 2018
From: georgi@bo@hn@kov @ending from m@nche@ter@@c@uk (Georgi Boshnakov)
Date: Sun, 15 Jul 2018 07:05:07 +0000
Subject: [R-pkg-devel] Package builds, installs,
 and runs but does not pass devtools::check()
In-Reply-To: <CACdH2ZbSBhM=tyRqaQK5MyKP6SkZAcFzmSxmMrGt4chySiz3vg@mail.gmail.com>
References: <CACdH2ZbSBhM=tyRqaQK5MyKP6SkZAcFzmSxmMrGt4chySiz3vg@mail.gmail.com>
Message-ID: <438D2EC9EAFE5946B2D5864670EA468E018F65F97E@MBXP01.ds.man.ac.uk>


It seems that the R session used by 'check' doesn't look in the library used by your interactive session. This discrepancy may happen since the check tools do not load the same Renviron files as interactive sessions. This may result in different libraries in interactive and 'check' sessions. See ?Startup, especially section Note.
It is difficult to give more specific advice without details of your setup.


Hope this helps,
Georgi Boshnakov         


________________________________________
From: R-package-devel [r-package-devel-bounces at r-project.org] on behalf of Michael Hannon [jmhannon.ucdavis at gmail.com]
Sent: 15 July 2018 02:13
To: r-package-devel at r-project.org
Subject: [R-pkg-devel] Package builds, installs, and runs but does not pass devtools::check()

Greetings.  I'm working on a small package, and I'm using the devtools
functions to create, build, etc., the package.

As indicated in the subject line, I get no errors when I do:

    > build()
    > install()

When I run a separate R session and load the package, i.e.,

    > library(my_pkg)

the package loads without error, and the two exported functions appear
to work as advertised.

OTOH, if I include devtools::check() in the construction of the
package, I consistently get an error:

    * installing *source* package ?my_pkg? ...
    ** R
    ** preparing package for lazy loading
    Error in loadNamespace(from, lib.loc = .library) :
      there is no package called ?dplyr?
    Error : unable to load R code in package 'my_pkg'

Clearly there *is* a package called "dplyr" on my system (see the
session info below, for instance).  And, as I've mentioned, the code
*does* run, and I can watch it successfully reading CSV files.

Here's the relevant part of my DESCRIPTION file:

    Depends: R (>= 3.4.4)
    Imports: readr,
            dplyr,
            ggplot2,
            purrr,
            magrittr

I suspect the problem may be that I'm misunderstanding something about
the `import::from()` function, which I'm using for the first time to
load required functions into my code.  In each of the three files that
use dplyr I have the line:

    import::from(dplyr, mutate, filter, rename, select, setdiff, slice, "%>%")

I've tried:

    (1) putting that line in just one of the files (the lexically first one)
    (2) including different subsets of dplyr functions, as needed, in
the various files

Needless to say, I haven't seen any improvement with any of the above
(or any of the other thrashing I've done).

If you can point me in the right direction, I'd appreciate it.  Thanks.

-- Mike


> session_info()
Session info ------------------------------------------------------------------
 setting  value
 version  R version 3.4.4 (2018-03-15)
 system   x86_64, linux-gnu
 ui       X11
 language en_US
 collate  en_US.UTF-8
 tz       America/Los_Angeles
 date     2018-07-14

Packages ----------------------------------------------------------------------
 package    * version date       source
 assertthat   0.2.0   2017-04-11 CRAN (R 3.3.3)
 base       * 3.4.4   2018-03-16 local
 bindr        0.1.1   2018-03-13 CRAN (R 3.4.3)
 bindrcpp     0.2.2   2018-03-29 CRAN (R 3.4.4)
 compiler     3.4.4   2018-03-16 local
 crayon       1.3.4   2017-09-16 CRAN (R 3.4.1)
 datasets   * 3.4.4   2018-03-16 local
 devtools   * 1.13.6  2018-06-27 CRAN (R 3.4.4)
 digest       0.6.15  2018-01-28 CRAN (R 3.4.3)
 dplyr      * 0.7.6   2018-06-29 CRAN (R 3.4.4)
 glue         1.2.0   2017-10-29 CRAN (R 3.4.2)
 graphics   * 3.4.4   2018-03-16 local
 grDevices  * 3.4.4   2018-03-16 local
 magrittr     1.5     2014-11-22 CRAN (R 3.2.2)
 memoise      1.1.0   2017-04-21 CRAN (R 3.3.3)
 methods    * 3.4.4   2018-03-16 local
 pillar       1.3.0   2018-07-14 CRAN (R 3.4.4)
 pkgconfig    2.0.1   2017-03-21 CRAN (R 3.4.0)
 purrr        0.2.5   2018-05-29 CRAN (R 3.4.4)
 R6           2.2.2   2017-06-17 CRAN (R 3.4.0)
 Rcpp         0.12.17 2018-05-18 CRAN (R 3.4.4)
 rlang        0.2.1   2018-05-30 CRAN (R 3.4.4)
 stats      * 3.4.4   2018-03-16 local
 tibble       1.4.2   2018-01-22 CRAN (R 3.4.3)
 tidyselect   0.2.4   2018-02-26 CRAN (R 3.4.3)
 utils      * 3.4.4   2018-03-16 local
 withr        2.1.2   2018-03-15 CRAN (R 3.4.3)
>

______________________________________________
R-package-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel


From ru@@ell-lenth @ending from uiow@@edu  Mon Jul 16 03:23:55 2018
From: ru@@ell-lenth @ending from uiow@@edu (Lenth, Russell V)
Date: Mon, 16 Jul 2018 01:23:55 +0000
Subject: [R-pkg-devel] More on explosive dependencies
Message-ID: <DM6PR04MB4380DC9BAF4A50497A673B6EF15D0@DM6PR04MB4380.namprd04.prod.outlook.com>

Package developers,

I posted a question a couple of months ago dealing with how to reduce the number of dependencies in a package. Part of the specific issue I face is that I have a `cld` S3 method for which the generic is in the multcomp package, but I don't want to import multcomp because it comes with a number of unneeded dependencies.

My solution at first appeared to be that I could just export my function `cld.emmGrid`; then if users have the multcomp package, this method is available. I also moved multcomp from Imports to Suggests, so that it is no longer a dependency. This fix works just fine for me. It passed the preliminary CRAN checks and it was accepted by CRAN. But then I was advised that the package fails the CRAN checks with Debian because those checks require S3 methods to actually be registered.

So what I tried next is what Duncan Murdoch suggested earlier in this thread -- to register the method conditionally using the following code in my NAMESPACE:

    if (requireNamespace("multcomp")) {
        importFrom(multcomp, cld)
        S3method(cld, emmGrid)
    }

This worked fine in my initial testing, both with multcomp installed and with multcomp absent.

However, now the package doesn't pass the checking procedure. The reason apparently is that every package mentioned in import() or importFrom() -- conditionally or not -- must be listed in Imports in the DESCRIPTION file. I could move multcomp back to Imports, but that defeats the whole purpose of getting rid of unneeded dependencies. It's a Catch-22.

Is there any recourse possible? Alas, I'm guessing there isn't, unless we can convince everybody to allow unregistered S3 methods on all platforms. This situation makes it really difficult for package developers to provide methods for other contributors' packages and still keep theirs lightweight. Almost all S3 generics are very simple functions, so being forced to load a dozen or so namespaces just to register a method is crazy. Plus, the more dependencies a package has, the less robust it is to other developers' updates. 

I'm now wondering how much interest there is in developing a separate package just for generics, say, "S3generics". We could all collaborate to contribute our own generics to that one package, move them out of our own packages, and instead import just that package.

Russ

Russell V. Lenth? -? Professor Emeritus
Department of Statistics and Actuarial Science?? 
The University of Iowa ?-? Iowa City, IA 52242? USA?? 
Voice (319)335-0712 (Dept. office)? -? FAX (319)335-3017

From d@vidhughjone@ @ending from gm@il@com  Mon Jul 16 09:58:07 2018
From: d@vidhughjone@ @ending from gm@il@com (David Hugh-Jones)
Date: Mon, 16 Jul 2018 08:58:07 +0100
Subject: [R-pkg-devel] More on explosive dependencies
In-Reply-To: <DM6PR04MB4380DC9BAF4A50497A673B6EF15D0@DM6PR04MB4380.namprd04.prod.outlook.com>
References: <DM6PR04MB4380DC9BAF4A50497A673B6EF15D0@DM6PR04MB4380.namprd04.prod.outlook.com>
Message-ID: <CAARY7kgq4WYJVBncBPp=erTKsyzzwxZjKmeXM44ZFWbfU4wnFw@mail.gmail.com>

Hi Russ,

 Possibly relevant: the modelgenerics package (on GitHub) does exactly what
you're suggesting for standard model functions like `nobs` etc. I think at
some point it is going to become part of the tidyverse.

D


On Mon, 16 Jul 2018 at 02:24, Lenth, Russell V <russell-lenth at uiowa.edu>
wrote:

> Package developers,
>
> I posted a question a couple of months ago dealing with how to reduce the
> number of dependencies in a package. Part of the specific issue I face is
> that I have a `cld` S3 method for which the generic is in the multcomp
> package, but I don't want to import multcomp because it comes with a number
> of unneeded dependencies.
>
> My solution at first appeared to be that I could just export my function
> `cld.emmGrid`; then if users have the multcomp package, this method is
> available. I also moved multcomp from Imports to Suggests, so that it is no
> longer a dependency. This fix works just fine for me. It passed the
> preliminary CRAN checks and it was accepted by CRAN. But then I was advised
> that the package fails the CRAN checks with Debian because those checks
> require S3 methods to actually be registered.
>
> So what I tried next is what Duncan Murdoch suggested earlier in this
> thread -- to register the method conditionally using the following code in
> my NAMESPACE:
>
>     if (requireNamespace("multcomp")) {
>         importFrom(multcomp, cld)
>         S3method(cld, emmGrid)
>     }
>
> This worked fine in my initial testing, both with multcomp installed and
> with multcomp absent.
>
> However, now the package doesn't pass the checking procedure. The reason
> apparently is that every package mentioned in import() or importFrom() --
> conditionally or not -- must be listed in Imports in the DESCRIPTION file.
> I could move multcomp back to Imports, but that defeats the whole purpose
> of getting rid of unneeded dependencies. It's a Catch-22.
>
> Is there any recourse possible? Alas, I'm guessing there isn't, unless we
> can convince everybody to allow unregistered S3 methods on all platforms.
> This situation makes it really difficult for package developers to provide
> methods for other contributors' packages and still keep theirs lightweight.
> Almost all S3 generics are very simple functions, so being forced to load a
> dozen or so namespaces just to register a method is crazy. Plus, the more
> dependencies a package has, the less robust it is to other developers'
> updates.
>
> I'm now wondering how much interest there is in developing a separate
> package just for generics, say, "S3generics". We could all collaborate to
> contribute our own generics to that one package, move them out of our own
> packages, and instead import just that package.
>
> Russ
>
> Russell V. Lenth  -  Professor Emeritus
> Department of Statistics and Actuarial Science
> The University of Iowa  -  Iowa City, IA 52242  USA
> Voice (319)335-0712 (Dept. office)  -  FAX (319)335-3017
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
-- 
Sent from Gmail Mobile

	[[alternative HTML version deleted]]


From i@uc@r86 @ending from gm@il@com  Mon Jul 16 12:18:11 2018
From: i@uc@r86 @ending from gm@il@com (=?UTF-8?B?ScOxYWtpIMOaY2Fy?=)
Date: Mon, 16 Jul 2018 12:18:11 +0200
Subject: [R-pkg-devel] More on explosive dependencies
In-Reply-To: <DM6PR04MB4380DC9BAF4A50497A673B6EF15D0@DM6PR04MB4380.namprd04.prod.outlook.com>
References: <DM6PR04MB4380DC9BAF4A50497A673B6EF15D0@DM6PR04MB4380.namprd04.prod.outlook.com>
Message-ID: <CALEXWq1XDm6pLkCoNk5qpcD2k3T6a3KZyf_7YKyeTp6cR69VWQ@mail.gmail.com>

El lun., 16 jul. 2018 a las 3:24, Lenth, Russell V
(<russell-lenth at uiowa.edu>) escribi?:
>
> Package developers,
>
> I posted a question a couple of months ago dealing with how to reduce the number of dependencies in a package. Part of the specific issue I face is that I have a `cld` S3 method for which the generic is in the multcomp package, but I don't want to import multcomp because it comes with a number of unneeded dependencies.
>
> My solution at first appeared to be that I could just export my function `cld.emmGrid`; then if users have the multcomp package, this method is available. I also moved multcomp from Imports to Suggests, so that it is no longer a dependency. This fix works just fine for me. It passed the preliminary CRAN checks and it was accepted by CRAN. But then I was advised that the package fails the CRAN checks with Debian because those checks require S3 methods to actually be registered.

Is it *official* that the export() workaround won't work in future R
versions? I'm using this in at least one package and it's not failing
on those platforms.

> So what I tried next is what Duncan Murdoch suggested earlier in this thread -- to register the method conditionally using the following code in my NAMESPACE:
>
>     if (requireNamespace("multcomp")) {
>         importFrom(multcomp, cld)
>         S3method(cld, emmGrid)
>     }
>
> This worked fine in my initial testing, both with multcomp installed and with multcomp absent.
>
> However, now the package doesn't pass the checking procedure. The reason apparently is that every package mentioned in import() or importFrom() -- conditionally or not -- must be listed in Imports in the DESCRIPTION file. I could move multcomp back to Imports, but that defeats the whole purpose of getting rid of unneeded dependencies. It's a Catch-22.
>
> Is there any recourse possible? Alas, I'm guessing there isn't, unless we can convince everybody to allow unregistered S3 methods on all platforms. This situation makes it really difficult for package developers to provide methods for other contributors' packages and still keep theirs lightweight. Almost all S3 generics are very simple functions, so being forced to load a dozen or so namespaces just to register a method is crazy. Plus, the more dependencies a package has, the less robust it is to other developers' updates.

There is, actually: *dynamic registration*. It's based on calling
registerS3method when the other package is loaded. This is done by
calling setHook (in this case, on the multcomp "onLoad" event) from
your package's .onLoad function. See the mechanism here:

- Call register_s3_method in .onLoad if requireNamespace returns true
(the package is available):
https://github.com/tidyverse/googledrive/blob/master/R/aaa.R#L45
- The definition of register_s3_method, which calls registerS3method:
https://github.com/tidyverse/googledrive/blob/master/R/dplyr-compat.R#L5

It seems that this mechanism will be added to roxygen2, according to
https://github.com/klutometis/roxygen/issues/623, to avoid copying
this code over from package to package.

I?aki

> I'm now wondering how much interest there is in developing a separate package just for generics, say, "S3generics". We could all collaborate to contribute our own generics to that one package, move them out of our own packages, and instead import just that package.
>
> Russ
>
> Russell V. Lenth  -  Professor Emeritus
> Department of Statistics and Actuarial Science
> The University of Iowa  -  Iowa City, IA 52242  USA
> Voice (319)335-0712 (Dept. office)  -  FAX (319)335-3017
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From edd @ending from debi@n@org  Mon Jul 16 14:11:01 2018
From: edd @ending from debi@n@org (Dirk Eddelbuettel)
Date: Mon, 16 Jul 2018 07:11:01 -0500
Subject: [R-pkg-devel] Reverse dependencies - again
In-Reply-To: <b2ea7609-70d3-c511-242b-aa890dfc84ac@gmail.com>
References: <b2ea7609-70d3-c511-242b-aa890dfc84ac@gmail.com>
Message-ID: <23372.35669.915578.588874@rob.eddelbuettel.com>


On 11 July 2018 at 10:00, J C Nash wrote:
| 2) Is it time to consider an effort to provide online revdep checking
| that would avoid pressure on CRAN team directly and would provide
| clearer indicators of the issues raised by a particular package?

That is very close to my R Foundation Summit talk a week ago in Brisbane.

To aid CRAN, we need (at least) better tools (to make running reverse
dependencies easier), and we also need better aggregation of results across
tests and time, ideally in a way that makes it possible for CRAN to access
these results, ideally also trust them, and hence save time.  While we all
get possibly even wider test coverage.

I would try to help in building this. But I am not sure we can do it without
input from CRAN about what would help them.  

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From jmh@nnon@ucd@vi@ @ending from gm@il@com  Mon Jul 16 23:13:30 2018
From: jmh@nnon@ucd@vi@ @ending from gm@il@com (Michael Hannon)
Date: Mon, 16 Jul 2018 14:13:30 -0700
Subject: [R-pkg-devel] Package builds, installs,
 and runs but does not pass devtools::check()
In-Reply-To: <438D2EC9EAFE5946B2D5864670EA468E018F65F97E@MBXP01.ds.man.ac.uk>
References: <CACdH2ZbSBhM=tyRqaQK5MyKP6SkZAcFzmSxmMrGt4chySiz3vg@mail.gmail.com>
 <438D2EC9EAFE5946B2D5864670EA468E018F65F97E@MBXP01.ds.man.ac.uk>
Message-ID: <CACdH2ZZSQfad8M06ttaFBwc98kQ5=MvKJE-2_cg16xKzhizH+w@mail.gmail.com>

Thanks, Georgi.  I've changed my approach and now do what I gather is
recommended practice: put all external package names into the
"Imports" section of the DESCRIPTION file and then use the
fully-qualified names for functions from those packages, as:

    dplyr::select()

The "check" operation is still not entirely "happy" with me, but it
doesn't flag any errors, and the package builds and runs.

BTW, one source of "complaints" from "check()" is evidently the use of
NSE in the tidyverse functions.  For instance, the line:

    next_data_frame %>% dplyr::select(-amount,

generates the message:

    standardize_format: no visible binding for global variable ?amount?

where, of course, "amount" is one of the column headings in
"next_data_frame".  There seems to be no harm done by this, and I plan
to ignore such messages, but if there's some additional wisdom that
applies here, I'd be happy to receive it.

-- Mike


On Sun, Jul 15, 2018 at 12:05 AM, Georgi Boshnakov
<georgi.boshnakov at manchester.ac.uk> wrote:
>
> It seems that the R session used by 'check' doesn't look in the library used by your interactive session. This discrepancy may happen since the check tools do not load the same Renviron files as interactive sessions. This may result in different libraries in interactive and 'check' sessions. See ?Startup, especially section Note.
> It is difficult to give more specific advice without details of your setup.
>
>
> Hope this helps,
> Georgi Boshnakov
>
>
> ________________________________________
> From: R-package-devel [r-package-devel-bounces at r-project.org] on behalf of Michael Hannon [jmhannon.ucdavis at gmail.com]
> Sent: 15 July 2018 02:13
> To: r-package-devel at r-project.org
> Subject: [R-pkg-devel] Package builds, installs, and runs but does not pass devtools::check()
>
> Greetings.  I'm working on a small package, and I'm using the devtools
> functions to create, build, etc., the package.
>
> As indicated in the subject line, I get no errors when I do:
>
>     > build()
>     > install()
>
> When I run a separate R session and load the package, i.e.,
>
>     > library(my_pkg)
>
> the package loads without error, and the two exported functions appear
> to work as advertised.
>
> OTOH, if I include devtools::check() in the construction of the
> package, I consistently get an error:
>
>     * installing *source* package ?my_pkg? ...
>     ** R
>     ** preparing package for lazy loading
>     Error in loadNamespace(from, lib.loc = .library) :
>       there is no package called ?dplyr?
>     Error : unable to load R code in package 'my_pkg'
>
> Clearly there *is* a package called "dplyr" on my system (see the
> session info below, for instance).  And, as I've mentioned, the code
> *does* run, and I can watch it successfully reading CSV files.
>
> Here's the relevant part of my DESCRIPTION file:
>
>     Depends: R (>= 3.4.4)
>     Imports: readr,
>             dplyr,
>             ggplot2,
>             purrr,
>             magrittr
>
> I suspect the problem may be that I'm misunderstanding something about
> the `import::from()` function, which I'm using for the first time to
> load required functions into my code.  In each of the three files that
> use dplyr I have the line:
>
>     import::from(dplyr, mutate, filter, rename, select, setdiff, slice, "%>%")
>
> I've tried:
>
>     (1) putting that line in just one of the files (the lexically first one)
>     (2) including different subsets of dplyr functions, as needed, in
> the various files
>
> Needless to say, I haven't seen any improvement with any of the above
> (or any of the other thrashing I've done).
>
> If you can point me in the right direction, I'd appreciate it.  Thanks.
>
> -- Mike
>
>
>> session_info()
> Session info ------------------------------------------------------------------
>  setting  value
>  version  R version 3.4.4 (2018-03-15)
>  system   x86_64, linux-gnu
>  ui       X11
>  language en_US
>  collate  en_US.UTF-8
>  tz       America/Los_Angeles
>  date     2018-07-14
>
> Packages ----------------------------------------------------------------------
>  package    * version date       source
>  assertthat   0.2.0   2017-04-11 CRAN (R 3.3.3)
>  base       * 3.4.4   2018-03-16 local
>  bindr        0.1.1   2018-03-13 CRAN (R 3.4.3)
>  bindrcpp     0.2.2   2018-03-29 CRAN (R 3.4.4)
>  compiler     3.4.4   2018-03-16 local
>  crayon       1.3.4   2017-09-16 CRAN (R 3.4.1)
>  datasets   * 3.4.4   2018-03-16 local
>  devtools   * 1.13.6  2018-06-27 CRAN (R 3.4.4)
>  digest       0.6.15  2018-01-28 CRAN (R 3.4.3)
>  dplyr      * 0.7.6   2018-06-29 CRAN (R 3.4.4)
>  glue         1.2.0   2017-10-29 CRAN (R 3.4.2)
>  graphics   * 3.4.4   2018-03-16 local
>  grDevices  * 3.4.4   2018-03-16 local
>  magrittr     1.5     2014-11-22 CRAN (R 3.2.2)
>  memoise      1.1.0   2017-04-21 CRAN (R 3.3.3)
>  methods    * 3.4.4   2018-03-16 local
>  pillar       1.3.0   2018-07-14 CRAN (R 3.4.4)
>  pkgconfig    2.0.1   2017-03-21 CRAN (R 3.4.0)
>  purrr        0.2.5   2018-05-29 CRAN (R 3.4.4)
>  R6           2.2.2   2017-06-17 CRAN (R 3.4.0)
>  Rcpp         0.12.17 2018-05-18 CRAN (R 3.4.4)
>  rlang        0.2.1   2018-05-30 CRAN (R 3.4.4)
>  stats      * 3.4.4   2018-03-16 local
>  tibble       1.4.2   2018-01-22 CRAN (R 3.4.3)
>  tidyselect   0.2.4   2018-02-26 CRAN (R 3.4.3)
>  utils      * 3.4.4   2018-03-16 local
>  withr        2.1.2   2018-03-15 CRAN (R 3.4.3)
>>
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From jfox @ending from mcm@@ter@c@  Mon Jul 16 23:29:34 2018
From: jfox @ending from mcm@@ter@c@ (Fox, John)
Date: Mon, 16 Jul 2018 21:29:34 +0000
Subject: [R-pkg-devel] Package builds, installs,
 and runs but does not pass devtools::check()
In-Reply-To: <943_1531775661_w6GLEKWe022793_CACdH2ZZSQfad8M06ttaFBwc98kQ5=MvKJE-2_cg16xKzhizH+w@mail.gmail.com>
References: <CACdH2ZbSBhM=tyRqaQK5MyKP6SkZAcFzmSxmMrGt4chySiz3vg@mail.gmail.com>
 <438D2EC9EAFE5946B2D5864670EA468E018F65F97E@MBXP01.ds.man.ac.uk>
 <943_1531775661_w6GLEKWe022793_CACdH2ZZSQfad8M06ttaFBwc98kQ5=MvKJE-2_cg16xKzhizH+w@mail.gmail.com>
Message-ID: <ACD1644AA6C67E4FBD0C350625508EC83684F4E6@FHSDB2D11-2.csu.mcmaster.ca>

Dear Michael,

You could add a call to globalVariables() in the package sources for cases like this.

I hope this helps,
 John

-----------------------------------------------------------------
John Fox
Professor Emeritus
McMaster University
Hamilton, Ontario, Canada
Web: https://socialsciences.mcmaster.ca/jfox/



> -----Original Message-----
> From: R-package-devel [mailto:r-package-devel-bounces at r-project.org] On
> Behalf Of Michael Hannon
> Sent: Monday, July 16, 2018 2:14 PM
> To: Georgi Boshnakov <georgi.boshnakov at manchester.ac.uk>
> Cc: r-package-devel at r-project.org
> Subject: Re: [R-pkg-devel] Package builds, installs, and runs but does not pass
> devtools::check()
> 
> Thanks, Georgi.  I've changed my approach and now do what I gather is
> recommended practice: put all external package names into the "Imports"
> section of the DESCRIPTION file and then use the fully-qualified names for
> functions from those packages, as:
> 
>     dplyr::select()
> 
> The "check" operation is still not entirely "happy" with me, but it doesn't flag
> any errors, and the package builds and runs.
> 
> BTW, one source of "complaints" from "check()" is evidently the use of NSE in
> the tidyverse functions.  For instance, the line:
> 
>     next_data_frame %>% dplyr::select(-amount,
> 
> generates the message:
> 
>     standardize_format: no visible binding for global variable ?amount?
> 
> where, of course, "amount" is one of the column headings in
> "next_data_frame".  There seems to be no harm done by this, and I plan to
> ignore such messages, but if there's some additional wisdom that applies
> here, I'd be happy to receive it.
> 
> -- Mike
> 
> 
> On Sun, Jul 15, 2018 at 12:05 AM, Georgi Boshnakov
> <georgi.boshnakov at manchester.ac.uk> wrote:
> >
> > It seems that the R session used by 'check' doesn't look in the library used by
> your interactive session. This discrepancy may happen since the check tools
> do not load the same Renviron files as interactive sessions. This may result in
> different libraries in interactive and 'check' sessions. See ?Startup, especially
> section Note.
> > It is difficult to give more specific advice without details of your setup.
> >
> >
> > Hope this helps,
> > Georgi Boshnakov
> >
> >
> > ________________________________________
> > From: R-package-devel [r-package-devel-bounces at r-project.org] on
> > behalf of Michael Hannon [jmhannon.ucdavis at gmail.com]
> > Sent: 15 July 2018 02:13
> > To: r-package-devel at r-project.org
> > Subject: [R-pkg-devel] Package builds, installs, and runs but does not
> > pass devtools::check()
> >
> > Greetings.  I'm working on a small package, and I'm using the devtools
> > functions to create, build, etc., the package.
> >
> > As indicated in the subject line, I get no errors when I do:
> >
> >     > build()
> >     > install()
> >
> > When I run a separate R session and load the package, i.e.,
> >
> >     > library(my_pkg)
> >
> > the package loads without error, and the two exported functions appear
> > to work as advertised.
> >
> > OTOH, if I include devtools::check() in the construction of the
> > package, I consistently get an error:
> >
> >     * installing *source* package ?my_pkg? ...
> >     ** R
> >     ** preparing package for lazy loading
> >     Error in loadNamespace(from, lib.loc = .library) :
> >       there is no package called ?dplyr?
> >     Error : unable to load R code in package 'my_pkg'
> >
> > Clearly there *is* a package called "dplyr" on my system (see the
> > session info below, for instance).  And, as I've mentioned, the code
> > *does* run, and I can watch it successfully reading CSV files.
> >
> > Here's the relevant part of my DESCRIPTION file:
> >
> >     Depends: R (>= 3.4.4)
> >     Imports: readr,
> >             dplyr,
> >             ggplot2,
> >             purrr,
> >             magrittr
> >
> > I suspect the problem may be that I'm misunderstanding something about
> > the `import::from()` function, which I'm using for the first time to
> > load required functions into my code.  In each of the three files that
> > use dplyr I have the line:
> >
> >     import::from(dplyr, mutate, filter, rename, select, setdiff,
> > slice, "%>%")
> >
> > I've tried:
> >
> >     (1) putting that line in just one of the files (the lexically first one)
> >     (2) including different subsets of dplyr functions, as needed, in
> > the various files
> >
> > Needless to say, I haven't seen any improvement with any of the above
> > (or any of the other thrashing I've done).
> >
> > If you can point me in the right direction, I'd appreciate it.  Thanks.
> >
> > -- Mike
> >
> >
> >> session_info()
> > Session info
> > ------------------------------------------------------------------
> >  setting  value
> >  version  R version 3.4.4 (2018-03-15)
> >  system   x86_64, linux-gnu
> >  ui       X11
> >  language en_US
> >  collate  en_US.UTF-8
> >  tz       America/Los_Angeles
> >  date     2018-07-14
> >
> > Packages ----------------------------------------------------------------------
> >  package    * version date       source
> >  assertthat   0.2.0   2017-04-11 CRAN (R 3.3.3)
> >  base       * 3.4.4   2018-03-16 local
> >  bindr        0.1.1   2018-03-13 CRAN (R 3.4.3)
> >  bindrcpp     0.2.2   2018-03-29 CRAN (R 3.4.4)
> >  compiler     3.4.4   2018-03-16 local
> >  crayon       1.3.4   2017-09-16 CRAN (R 3.4.1)
> >  datasets   * 3.4.4   2018-03-16 local
> >  devtools   * 1.13.6  2018-06-27 CRAN (R 3.4.4)
> >  digest       0.6.15  2018-01-28 CRAN (R 3.4.3)
> >  dplyr      * 0.7.6   2018-06-29 CRAN (R 3.4.4)
> >  glue         1.2.0   2017-10-29 CRAN (R 3.4.2)
> >  graphics   * 3.4.4   2018-03-16 local
> >  grDevices  * 3.4.4   2018-03-16 local
> >  magrittr     1.5     2014-11-22 CRAN (R 3.2.2)
> >  memoise      1.1.0   2017-04-21 CRAN (R 3.3.3)
> >  methods    * 3.4.4   2018-03-16 local
> >  pillar       1.3.0   2018-07-14 CRAN (R 3.4.4)
> >  pkgconfig    2.0.1   2017-03-21 CRAN (R 3.4.0)
> >  purrr        0.2.5   2018-05-29 CRAN (R 3.4.4)
> >  R6           2.2.2   2017-06-17 CRAN (R 3.4.0)
> >  Rcpp         0.12.17 2018-05-18 CRAN (R 3.4.4)
> >  rlang        0.2.1   2018-05-30 CRAN (R 3.4.4)
> >  stats      * 3.4.4   2018-03-16 local
> >  tibble       1.4.2   2018-01-22 CRAN (R 3.4.3)
> >  tidyselect   0.2.4   2018-02-26 CRAN (R 3.4.3)
> >  utils      * 3.4.4   2018-03-16 local
> >  withr        2.1.2   2018-03-15 CRAN (R 3.4.3)
> >>
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

From zk@mv@r @ending from gm@il@com  Mon Jul 16 23:38:01 2018
From: zk@mv@r @ending from gm@il@com (Zhian Kamvar)
Date: Mon, 16 Jul 2018 22:38:01 +0100
Subject: [R-pkg-devel] Package builds, installs,
 and runs but does not pass devtools::check()
In-Reply-To: <CACdH2ZZSQfad8M06ttaFBwc98kQ5=MvKJE-2_cg16xKzhizH+w@mail.gmail.com>
References: <CACdH2ZbSBhM=tyRqaQK5MyKP6SkZAcFzmSxmMrGt4chySiz3vg@mail.gmail.com>
 <438D2EC9EAFE5946B2D5864670EA468E018F65F97E@MBXP01.ds.man.ac.uk>
 <CACdH2ZZSQfad8M06ttaFBwc98kQ5=MvKJE-2_cg16xKzhizH+w@mail.gmail.com>
Message-ID: <0F8255FC-0477-4FCA-BF0B-7DDD216CE5AD@gmail.com>

Using dplyr like that is for exploratory data analysis. You'll want to refer to dplyr's "Programming with dplyr" vignette for using dplyr in a package:

https://cran.r-project.org/web/packages/dplyr/vignettes/programming.html <https://cran.r-project.org/web/packages/dplyr/vignettes/programming.html>

Hope that helps.

> On Jul 16, 2018, at 22:13 , Michael Hannon <jmhannon.ucdavis at gmail.com> wrote:
> 
> Thanks, Georgi.  I've changed my approach and now do what I gather is
> recommended practice: put all external package names into the
> "Imports" section of the DESCRIPTION file and then use the
> fully-qualified names for functions from those packages, as:
> 
>    dplyr::select()
> 
> The "check" operation is still not entirely "happy" with me, but it
> doesn't flag any errors, and the package builds and runs.
> 
> BTW, one source of "complaints" from "check()" is evidently the use of
> NSE in the tidyverse functions.  For instance, the line:
> 
>    next_data_frame %>% dplyr::select(-amount,
> 
> generates the message:
> 
>    standardize_format: no visible binding for global variable ?amount?
> 
> where, of course, "amount" is one of the column headings in
> "next_data_frame".  There seems to be no harm done by this, and I plan
> to ignore such messages, but if there's some additional wisdom that
> applies here, I'd be happy to receive it.
> 
> -- Mike
> 
> 
> On Sun, Jul 15, 2018 at 12:05 AM, Georgi Boshnakov
> <georgi.boshnakov at manchester.ac.uk> wrote:
>> 
>> It seems that the R session used by 'check' doesn't look in the library used by your interactive session. This discrepancy may happen since the check tools do not load the same Renviron files as interactive sessions. This may result in different libraries in interactive and 'check' sessions. See ?Startup, especially section Note.
>> It is difficult to give more specific advice without details of your setup.
>> 
>> 
>> Hope this helps,
>> Georgi Boshnakov
>> 
>> 
>> ________________________________________
>> From: R-package-devel [r-package-devel-bounces at r-project.org] on behalf of Michael Hannon [jmhannon.ucdavis at gmail.com]
>> Sent: 15 July 2018 02:13
>> To: r-package-devel at r-project.org
>> Subject: [R-pkg-devel] Package builds, installs, and runs but does not pass devtools::check()
>> 
>> Greetings.  I'm working on a small package, and I'm using the devtools
>> functions to create, build, etc., the package.
>> 
>> As indicated in the subject line, I get no errors when I do:
>> 
>>> build()
>>> install()
>> 
>> When I run a separate R session and load the package, i.e.,
>> 
>>> library(my_pkg)
>> 
>> the package loads without error, and the two exported functions appear
>> to work as advertised.
>> 
>> OTOH, if I include devtools::check() in the construction of the
>> package, I consistently get an error:
>> 
>>    * installing *source* package ?my_pkg? ...
>>    ** R
>>    ** preparing package for lazy loading
>>    Error in loadNamespace(from, lib.loc = .library) :
>>      there is no package called ?dplyr?
>>    Error : unable to load R code in package 'my_pkg'
>> 
>> Clearly there *is* a package called "dplyr" on my system (see the
>> session info below, for instance).  And, as I've mentioned, the code
>> *does* run, and I can watch it successfully reading CSV files.
>> 
>> Here's the relevant part of my DESCRIPTION file:
>> 
>>    Depends: R (>= 3.4.4)
>>    Imports: readr,
>>            dplyr,
>>            ggplot2,
>>            purrr,
>>            magrittr
>> 
>> I suspect the problem may be that I'm misunderstanding something about
>> the `import::from()` function, which I'm using for the first time to
>> load required functions into my code.  In each of the three files that
>> use dplyr I have the line:
>> 
>>    import::from(dplyr, mutate, filter, rename, select, setdiff, slice, "%>%")
>> 
>> I've tried:
>> 
>>    (1) putting that line in just one of the files (the lexically first one)
>>    (2) including different subsets of dplyr functions, as needed, in
>> the various files
>> 
>> Needless to say, I haven't seen any improvement with any of the above
>> (or any of the other thrashing I've done).
>> 
>> If you can point me in the right direction, I'd appreciate it.  Thanks.
>> 
>> -- Mike
>> 
>> 
>>> session_info()
>> Session info ------------------------------------------------------------------
>> setting  value
>> version  R version 3.4.4 (2018-03-15)
>> system   x86_64, linux-gnu
>> ui       X11
>> language en_US
>> collate  en_US.UTF-8
>> tz       America/Los_Angeles
>> date     2018-07-14
>> 
>> Packages ----------------------------------------------------------------------
>> package    * version date       source
>> assertthat   0.2.0   2017-04-11 CRAN (R 3.3.3)
>> base       * 3.4.4   2018-03-16 local
>> bindr        0.1.1   2018-03-13 CRAN (R 3.4.3)
>> bindrcpp     0.2.2   2018-03-29 CRAN (R 3.4.4)
>> compiler     3.4.4   2018-03-16 local
>> crayon       1.3.4   2017-09-16 CRAN (R 3.4.1)
>> datasets   * 3.4.4   2018-03-16 local
>> devtools   * 1.13.6  2018-06-27 CRAN (R 3.4.4)
>> digest       0.6.15  2018-01-28 CRAN (R 3.4.3)
>> dplyr      * 0.7.6   2018-06-29 CRAN (R 3.4.4)
>> glue         1.2.0   2017-10-29 CRAN (R 3.4.2)
>> graphics   * 3.4.4   2018-03-16 local
>> grDevices  * 3.4.4   2018-03-16 local
>> magrittr     1.5     2014-11-22 CRAN (R 3.2.2)
>> memoise      1.1.0   2017-04-21 CRAN (R 3.3.3)
>> methods    * 3.4.4   2018-03-16 local
>> pillar       1.3.0   2018-07-14 CRAN (R 3.4.4)
>> pkgconfig    2.0.1   2017-03-21 CRAN (R 3.4.0)
>> purrr        0.2.5   2018-05-29 CRAN (R 3.4.4)
>> R6           2.2.2   2017-06-17 CRAN (R 3.4.0)
>> Rcpp         0.12.17 2018-05-18 CRAN (R 3.4.4)
>> rlang        0.2.1   2018-05-30 CRAN (R 3.4.4)
>> stats      * 3.4.4   2018-03-16 local
>> tibble       1.4.2   2018-01-22 CRAN (R 3.4.3)
>> tidyselect   0.2.4   2018-02-26 CRAN (R 3.4.3)
>> utils      * 3.4.4   2018-03-16 local
>> withr        2.1.2   2018-03-15 CRAN (R 3.4.3)
>>> 
>> 
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 833 bytes
Desc: Message signed with OpenPGP
URL: <https://stat.ethz.ch/pipermail/r-package-devel/attachments/20180716/c5ce422d/attachment.sig>

From ru@@ell-lenth @ending from uiow@@edu  Tue Jul 17 03:29:13 2018
From: ru@@ell-lenth @ending from uiow@@edu (Lenth, Russell V)
Date: Tue, 17 Jul 2018 01:29:13 +0000
Subject: [R-pkg-devel] More on explosive dependencies
Message-ID: <DM6PR04MB43804DFD2ED30B5C7BE91531F15C0@DM6PR04MB4380.namprd04.prod.outlook.com>

Thanks to all who responded. I am pleased to say that with your help, I have managed to work around this problem by dynamically registering the methods. My file zzz.R contains code to register various methods having generics in coda and multcomp. Those packages are in Suggests (not Imports) and my code is:

.onLoad = function(libname, pkgname) {
    if (requireNamespace("coda", quietly = TRUE)) {
        register_s3_method("coda", "as.mcmc", "emmGrid")
        register_s3_method("coda", "as.mcmc.list", "emmGrid")
    }
    if (requireNamespace("multcomp", quietly = TRUE)) {
        register_s3_method("multcomp", "glht", "emmlf")
        register_s3_method("multcomp", "glht", "emmGrid")
        register_s3_method("multcomp", "cld", "emmGrid")
        register_s3_method("multcomp", "modelparm", "emmwrap")
     }
}

The function register_s3_method was copied from hms:::register_s3_method.  That function sets up and calls base::registerS3method if the package in the first argument is already loaded, and sets a hook to do so if it is not (or if it is subsequently unloaded and reloaded). 

My package now has the desired small number of dependencies, and passes checks even with Sys.setenv(`_R_S3_METHOD_LOOKUP_BASEENV_AFTER_GLOBALENV_` = TRUE), i.e., require all S3 methods to be registered.

Russ

Russell V. Lenth? -? Professor Emeritus
Department of Statistics and Actuarial Science
The University of Iowa ?-? Iowa City, IA 52242? USA?? 
Voice (319)335-0712 (Dept. office)? -? FAX (319)335-3017

-----Original Message-----
From: Lenth, Russell V 
Sent: Sunday, July 15, 2018 8:24 PM
To: r-package-devel at r-project.org
Subject: More on explosive dependencies

Package developers,

I posted a question a couple of months ago dealing with how to reduce the number of dependencies in a package. Part of the specific issue I face is that I have a `cld` S3 method for which the generic is in the multcomp package, but I don't want to import multcomp because it comes with a number of unneeded dependencies.

My solution at first appeared to be that I could just export my function `cld.emmGrid`; then if users have the multcomp package, this method is available. I also moved multcomp from Imports to Suggests, so that it is no longer a dependency. This fix works just fine for me. It passed the preliminary CRAN checks and it was accepted by CRAN. But then I was advised that the package fails the CRAN checks with Debian because those checks require S3 methods to actually be registered.

So what I tried next is what Duncan Murdoch suggested earlier in this thread -- to register the method conditionally using the following code in my NAMESPACE:

    if (requireNamespace("multcomp")) {
        importFrom(multcomp, cld)
        S3method(cld, emmGrid)
    }

This worked fine in my initial testing, both with multcomp installed and with multcomp absent.

However, now the package doesn't pass the checking procedure. The reason apparently is that every package mentioned in import() or importFrom() -- conditionally or not -- must be listed in Imports in the DESCRIPTION file. I could move multcomp back to Imports, but that defeats the whole purpose of getting rid of unneeded dependencies. It's a Catch-22.

Is there any recourse possible? Alas, I'm guessing there isn't, unless we can convince everybody to allow unregistered S3 methods on all platforms. This situation makes it really difficult for package developers to provide methods for other contributors' packages and still keep theirs lightweight. Almost all S3 generics are very simple functions, so being forced to load a dozen or so namespaces just to register a method is crazy. Plus, the more dependencies a package has, the less robust it is to other developers' updates. 

I'm now wondering how much interest there is in developing a separate package just for generics, say, "S3generics". We could all collaborate to contribute our own generics to that one package, move them out of our own packages, and instead import just that package.

Russ


From d@vidhughjone@ @ending from gm@il@com  Tue Jul 17 07:40:55 2018
From: d@vidhughjone@ @ending from gm@il@com (David Hugh-Jones)
Date: Tue, 17 Jul 2018 06:40:55 +0100
Subject: [R-pkg-devel] More on explosive dependencies
In-Reply-To: <DM6PR04MB43804DFD2ED30B5C7BE91531F15C0@DM6PR04MB4380.namprd04.prod.outlook.com>
References: <DM6PR04MB43804DFD2ED30B5C7BE91531F15C0@DM6PR04MB4380.namprd04.prod.outlook.com>
Message-ID: <CAARY7khKkwL35PbihQ+sKz5vy_WW1iw14RkOjyP6J+fYFV1chQ@mail.gmail.com>

Hi Russell,

That's v helpful and I am going to try it myself. Can I just ask what goes
in your namespace file (and what roxygen tags you use) for the relevant
methods?

David


On Tue, 17 Jul 2018 at 02:29, Lenth, Russell V <russell-lenth at uiowa.edu>
wrote:

> Thanks to all who responded. I am pleased to say that with your help, I
> have managed to work around this problem by dynamically registering the
> methods. My file zzz.R contains code to register various methods having
> generics in coda and multcomp. Those packages are in Suggests (not Imports)
> and my code is:
>
> .onLoad = function(libname, pkgname) {
>     if (requireNamespace("coda", quietly = TRUE)) {
>         register_s3_method("coda", "as.mcmc", "emmGrid")
>         register_s3_method("coda", "as.mcmc.list", "emmGrid")
>     }
>     if (requireNamespace("multcomp", quietly = TRUE)) {
>         register_s3_method("multcomp", "glht", "emmlf")
>         register_s3_method("multcomp", "glht", "emmGrid")
>         register_s3_method("multcomp", "cld", "emmGrid")
>         register_s3_method("multcomp", "modelparm", "emmwrap")
>      }
> }
>
> The function register_s3_method was copied from hms:::register_s3_method.
> That function sets up and calls base::registerS3method if the package in
> the first argument is already loaded, and sets a hook to do so if it is not
> (or if it is subsequently unloaded and reloaded).
>
> My package now has the desired small number of dependencies, and passes
> checks even with Sys.setenv(`_R_S3_METHOD_LOOKUP_BASEENV_AFTER_GLOBALENV_`
> = TRUE), i.e., require all S3 methods to be registered.
>
> Russ
>
> Russell V. Lenth  -  Professor Emeritus
> Department of Statistics and Actuarial Science
> The University of Iowa  -  Iowa City, IA 52242  USA
> Voice (319)335-0712 (Dept. office)  -  FAX (319)335-3017
>
> -----Original Message-----
> From: Lenth, Russell V
> Sent: Sunday, July 15, 2018 8:24 PM
> To: r-package-devel at r-project.org
> Subject: More on explosive dependencies
>
> Package developers,
>
> I posted a question a couple of months ago dealing with how to reduce the
> number of dependencies in a package. Part of the specific issue I face is
> that I have a `cld` S3 method for which the generic is in the multcomp
> package, but I don't want to import multcomp because it comes with a number
> of unneeded dependencies.
>
> My solution at first appeared to be that I could just export my function
> `cld.emmGrid`; then if users have the multcomp package, this method is
> available. I also moved multcomp from Imports to Suggests, so that it is no
> longer a dependency. This fix works just fine for me. It passed the
> preliminary CRAN checks and it was accepted by CRAN. But then I was advised
> that the package fails the CRAN checks with Debian because those checks
> require S3 methods to actually be registered.
>
> So what I tried next is what Duncan Murdoch suggested earlier in this
> thread -- to register the method conditionally using the following code in
> my NAMESPACE:
>
>     if (requireNamespace("multcomp")) {
>         importFrom(multcomp, cld)
>         S3method(cld, emmGrid)
>     }
>
> This worked fine in my initial testing, both with multcomp installed and
> with multcomp absent.
>
> However, now the package doesn't pass the checking procedure. The reason
> apparently is that every package mentioned in import() or importFrom() --
> conditionally or not -- must be listed in Imports in the DESCRIPTION file.
> I could move multcomp back to Imports, but that defeats the whole purpose
> of getting rid of unneeded dependencies. It's a Catch-22.
>
> Is there any recourse possible? Alas, I'm guessing there isn't, unless we
> can convince everybody to allow unregistered S3 methods on all platforms.
> This situation makes it really difficult for package developers to provide
> methods for other contributors' packages and still keep theirs lightweight.
> Almost all S3 generics are very simple functions, so being forced to load a
> dozen or so namespaces just to register a method is crazy. Plus, the more
> dependencies a package has, the less robust it is to other developers'
> updates.
>
> I'm now wondering how much interest there is in developing a separate
> package just for generics, say, "S3generics". We could all collaborate to
> contribute our own generics to that one package, move them out of our own
> packages, and instead import just that package.
>
> Russ
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From jmh@nnon@ucd@vi@ @ending from gm@il@com  Tue Jul 17 11:27:40 2018
From: jmh@nnon@ucd@vi@ @ending from gm@il@com (Michael Hannon)
Date: Tue, 17 Jul 2018 02:27:40 -0700
Subject: [R-pkg-devel] Package builds, installs,
 and runs but does not pass devtools::check()
In-Reply-To: <0F8255FC-0477-4FCA-BF0B-7DDD216CE5AD@gmail.com>
References: <CACdH2ZbSBhM=tyRqaQK5MyKP6SkZAcFzmSxmMrGt4chySiz3vg@mail.gmail.com>
 <438D2EC9EAFE5946B2D5864670EA468E018F65F97E@MBXP01.ds.man.ac.uk>
 <CACdH2ZZSQfad8M06ttaFBwc98kQ5=MvKJE-2_cg16xKzhizH+w@mail.gmail.com>
 <0F8255FC-0477-4FCA-BF0B-7DDD216CE5AD@gmail.com>
Message-ID: <CACdH2ZbAcQTot1Z0xoWBz_5MkXN6q78PEbez42Li2c+N2ck=9w@mail.gmail.com>

Thanks to John and Zhian for their recent and informative comments.

Regarding check() and NSE: the moral seems to be that a little
learning is a dangerous thing.  I'm off to try to bring quosure to
this issue.

-- Mike


On Mon, Jul 16, 2018 at 2:38 PM, Zhian Kamvar <zkamvar at gmail.com> wrote:
> Using dplyr like that is for exploratory data analysis. You'll want to refer
> to dplyr's "Programming with dplyr" vignette for using dplyr in a package:
>
> https://cran.r-project.org/web/packages/dplyr/vignettes/programming.html
>
> Hope that helps.
>
> On Jul 16, 2018, at 22:13 , Michael Hannon <jmhannon.ucdavis at gmail.com>
> wrote:
>
> Thanks, Georgi.  I've changed my approach and now do what I gather is
> recommended practice: put all external package names into the
> "Imports" section of the DESCRIPTION file and then use the
> fully-qualified names for functions from those packages, as:
>
>    dplyr::select()
>
> The "check" operation is still not entirely "happy" with me, but it
> doesn't flag any errors, and the package builds and runs.
>
> BTW, one source of "complaints" from "check()" is evidently the use of
> NSE in the tidyverse functions.  For instance, the line:
>
>    next_data_frame %>% dplyr::select(-amount,
>
> generates the message:
>
>    standardize_format: no visible binding for global variable ?amount?
>
> where, of course, "amount" is one of the column headings in
> "next_data_frame".  There seems to be no harm done by this, and I plan
> to ignore such messages, but if there's some additional wisdom that
> applies here, I'd be happy to receive it.
>
> -- Mike
>
>
> On Sun, Jul 15, 2018 at 12:05 AM, Georgi Boshnakov
> <georgi.boshnakov at manchester.ac.uk> wrote:
>
>
> It seems that the R session used by 'check' doesn't look in the library used
> by your interactive session. This discrepancy may happen since the check
> tools do not load the same Renviron files as interactive sessions. This may
> result in different libraries in interactive and 'check' sessions. See
> ?Startup, especially section Note.
> It is difficult to give more specific advice without details of your setup.
>
>
> Hope this helps,
> Georgi Boshnakov
>
>
> ________________________________________
> From: R-package-devel [r-package-devel-bounces at r-project.org] on behalf of
> Michael Hannon [jmhannon.ucdavis at gmail.com]
> Sent: 15 July 2018 02:13
> To: r-package-devel at r-project.org
> Subject: [R-pkg-devel] Package builds, installs, and runs but does not pass
> devtools::check()
>
> Greetings.  I'm working on a small package, and I'm using the devtools
> functions to create, build, etc., the package.
>
> As indicated in the subject line, I get no errors when I do:
>
> build()
> install()
>
>
> When I run a separate R session and load the package, i.e.,
>
> library(my_pkg)
>
>
> the package loads without error, and the two exported functions appear
> to work as advertised.
>
> OTOH, if I include devtools::check() in the construction of the
> package, I consistently get an error:
>
>    * installing *source* package ?my_pkg? ...
>    ** R
>    ** preparing package for lazy loading
>    Error in loadNamespace(from, lib.loc = .library) :
>      there is no package called ?dplyr?
>    Error : unable to load R code in package 'my_pkg'
>
> Clearly there *is* a package called "dplyr" on my system (see the
> session info below, for instance).  And, as I've mentioned, the code
> *does* run, and I can watch it successfully reading CSV files.
>
> Here's the relevant part of my DESCRIPTION file:
>
>    Depends: R (>= 3.4.4)
>    Imports: readr,
>            dplyr,
>            ggplot2,
>            purrr,
>            magrittr
>
> I suspect the problem may be that I'm misunderstanding something about
> the `import::from()` function, which I'm using for the first time to
> load required functions into my code.  In each of the three files that
> use dplyr I have the line:
>
>    import::from(dplyr, mutate, filter, rename, select, setdiff, slice,
> "%>%")
>
> I've tried:
>
>    (1) putting that line in just one of the files (the lexically first one)
>    (2) including different subsets of dplyr functions, as needed, in
> the various files
>
> Needless to say, I haven't seen any improvement with any of the above
> (or any of the other thrashing I've done).
>
> If you can point me in the right direction, I'd appreciate it.  Thanks.
>
> -- Mike
>
>
> session_info()
>
> Session info
> ------------------------------------------------------------------
> setting  value
> version  R version 3.4.4 (2018-03-15)
> system   x86_64, linux-gnu
> ui       X11
> language en_US
> collate  en_US.UTF-8
> tz       America/Los_Angeles
> date     2018-07-14
>
> Packages
> ----------------------------------------------------------------------
> package    * version date       source
> assertthat   0.2.0   2017-04-11 CRAN (R 3.3.3)
> base       * 3.4.4   2018-03-16 local
> bindr        0.1.1   2018-03-13 CRAN (R 3.4.3)
> bindrcpp     0.2.2   2018-03-29 CRAN (R 3.4.4)
> compiler     3.4.4   2018-03-16 local
> crayon       1.3.4   2017-09-16 CRAN (R 3.4.1)
> datasets   * 3.4.4   2018-03-16 local
> devtools   * 1.13.6  2018-06-27 CRAN (R 3.4.4)
> digest       0.6.15  2018-01-28 CRAN (R 3.4.3)
> dplyr      * 0.7.6   2018-06-29 CRAN (R 3.4.4)
> glue         1.2.0   2017-10-29 CRAN (R 3.4.2)
> graphics   * 3.4.4   2018-03-16 local
> grDevices  * 3.4.4   2018-03-16 local
> magrittr     1.5     2014-11-22 CRAN (R 3.2.2)
> memoise      1.1.0   2017-04-21 CRAN (R 3.3.3)
> methods    * 3.4.4   2018-03-16 local
> pillar       1.3.0   2018-07-14 CRAN (R 3.4.4)
> pkgconfig    2.0.1   2017-03-21 CRAN (R 3.4.0)
> purrr        0.2.5   2018-05-29 CRAN (R 3.4.4)
> R6           2.2.2   2017-06-17 CRAN (R 3.4.0)
> Rcpp         0.12.17 2018-05-18 CRAN (R 3.4.4)
> rlang        0.2.1   2018-05-30 CRAN (R 3.4.4)
> stats      * 3.4.4   2018-03-16 local
> tibble       1.4.2   2018-01-22 CRAN (R 3.4.3)
> tidyselect   0.2.4   2018-02-26 CRAN (R 3.4.3)
> utils      * 3.4.4   2018-03-16 local
> withr        2.1.2   2018-03-15 CRAN (R 3.4.3)
>
>
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>


From m@rk@v@nderloo @ending from gm@il@com  Tue Jul 17 11:53:42 2018
From: m@rk@v@nderloo @ending from gm@il@com (Mark van der Loo)
Date: Tue, 17 Jul 2018 11:53:42 +0200
Subject: [R-pkg-devel] Package builds, installs,
 and runs but does not pass devtools::check()
In-Reply-To: <CACdH2ZbAcQTot1Z0xoWBz_5MkXN6q78PEbez42Li2c+N2ck=9w@mail.gmail.com>
References: <CACdH2ZbSBhM=tyRqaQK5MyKP6SkZAcFzmSxmMrGt4chySiz3vg@mail.gmail.com>
 <438D2EC9EAFE5946B2D5864670EA468E018F65F97E@MBXP01.ds.man.ac.uk>
 <CACdH2ZZSQfad8M06ttaFBwc98kQ5=MvKJE-2_cg16xKzhizH+w@mail.gmail.com>
 <0F8255FC-0477-4FCA-BF0B-7DDD216CE5AD@gmail.com>
 <CACdH2ZbAcQTot1Z0xoWBz_5MkXN6q78PEbez42Li2c+N2ck=9w@mail.gmail.com>
Message-ID: <CAOKDuOijgKnPH3JFh3od95xQqEi4mC8v9EjDJQ0C56iHmcTNsw@mail.gmail.com>

Michael,

Just a small side-track here. I would avoid using the not-a-pipe operator
within functions or packages in general. It is great for interactive use,
but it does make debugging and hence long-term maintenance of functions
harder. There are two reasons for this. First, it hides intermediate
results, and second, it adds several layers to the call stack making the
output of functions like traceback() harder to interpret. I have documented
a simple example here: https://github.com/chriscardillo/norris/issues/1 (scroll
down a bit).

Regarding learning about quosures and so on. If the literal names of data
frames are known, you could consider replacing

some_var <-   next_data_frame %>% dplyr::select(-amount,...

with something simpler like

some_var <- next_data_frame[ names(next_data_frame) != c("amount", ... ) ]

which might also save you some dependencies.




Hope this helps,
Best,
Mark



Op di 17 jul. 2018 om 11:28 schreef Michael Hannon <
jmhannon.ucdavis at gmail.com>:

> Thanks to John and Zhian for their recent and informative comments.
>
> Regarding check() and NSE: the moral seems to be that a little
> learning is a dangerous thing.  I'm off to try to bring quosure to
> this issue.
>
> -- Mike
>
>
> On Mon, Jul 16, 2018 at 2:38 PM, Zhian Kamvar <zkamvar at gmail.com> wrote:
> > Using dplyr like that is for exploratory data analysis. You'll want to
> refer
> > to dplyr's "Programming with dplyr" vignette for using dplyr in a
> package:
> >
> > https://cran.r-project.org/web/packages/dplyr/vignettes/programming.html
> >
> > Hope that helps.
> >
> > On Jul 16, 2018, at 22:13 , Michael Hannon <jmhannon.ucdavis at gmail.com>
> > wrote:
> >
> > Thanks, Georgi.  I've changed my approach and now do what I gather is
> > recommended practice: put all external package names into the
> > "Imports" section of the DESCRIPTION file and then use the
> > fully-qualified names for functions from those packages, as:
> >
> >    dplyr::select()
> >
> > The "check" operation is still not entirely "happy" with me, but it
> > doesn't flag any errors, and the package builds and runs.
> >
> > BTW, one source of "complaints" from "check()" is evidently the use of
> > NSE in the tidyverse functions.  For instance, the line:
> >
> >    next_data_frame %>% dplyr::select(-amount,
> >
> > generates the message:
> >
> >    standardize_format: no visible binding for global variable ?amount?
> >
> > where, of course, "amount" is one of the column headings in
> > "next_data_frame".  There seems to be no harm done by this, and I plan
> > to ignore such messages, but if there's some additional wisdom that
> > applies here, I'd be happy to receive it.
> >
> > -- Mike
> >
> >
> > On Sun, Jul 15, 2018 at 12:05 AM, Georgi Boshnakov
> > <georgi.boshnakov at manchester.ac.uk> wrote:
> >
> >
> > It seems that the R session used by 'check' doesn't look in the library
> used
> > by your interactive session. This discrepancy may happen since the check
> > tools do not load the same Renviron files as interactive sessions. This
> may
> > result in different libraries in interactive and 'check' sessions. See
> > ?Startup, especially section Note.
> > It is difficult to give more specific advice without details of your
> setup.
> >
> >
> > Hope this helps,
> > Georgi Boshnakov
> >
> >
> > ________________________________________
> > From: R-package-devel [r-package-devel-bounces at r-project.org] on behalf
> of
> > Michael Hannon [jmhannon.ucdavis at gmail.com]
> > Sent: 15 July 2018 02:13
> > To: r-package-devel at r-project.org
> > Subject: [R-pkg-devel] Package builds, installs, and runs but does not
> pass
> > devtools::check()
> >
> > Greetings.  I'm working on a small package, and I'm using the devtools
> > functions to create, build, etc., the package.
> >
> > As indicated in the subject line, I get no errors when I do:
> >
> > build()
> > install()
> >
> >
> > When I run a separate R session and load the package, i.e.,
> >
> > library(my_pkg)
> >
> >
> > the package loads without error, and the two exported functions appear
> > to work as advertised.
> >
> > OTOH, if I include devtools::check() in the construction of the
> > package, I consistently get an error:
> >
> >    * installing *source* package ?my_pkg? ...
> >    ** R
> >    ** preparing package for lazy loading
> >    Error in loadNamespace(from, lib.loc = .library) :
> >      there is no package called ?dplyr?
> >    Error : unable to load R code in package 'my_pkg'
> >
> > Clearly there *is* a package called "dplyr" on my system (see the
> > session info below, for instance).  And, as I've mentioned, the code
> > *does* run, and I can watch it successfully reading CSV files.
> >
> > Here's the relevant part of my DESCRIPTION file:
> >
> >    Depends: R (>= 3.4.4)
> >    Imports: readr,
> >            dplyr,
> >            ggplot2,
> >            purrr,
> >            magrittr
> >
> > I suspect the problem may be that I'm misunderstanding something about
> > the `import::from()` function, which I'm using for the first time to
> > load required functions into my code.  In each of the three files that
> > use dplyr I have the line:
> >
> >    import::from(dplyr, mutate, filter, rename, select, setdiff, slice,
> > "%>%")
> >
> > I've tried:
> >
> >    (1) putting that line in just one of the files (the lexically first
> one)
> >    (2) including different subsets of dplyr functions, as needed, in
> > the various files
> >
> > Needless to say, I haven't seen any improvement with any of the above
> > (or any of the other thrashing I've done).
> >
> > If you can point me in the right direction, I'd appreciate it.  Thanks.
> >
> > -- Mike
> >
> >
> > session_info()
> >
> > Session info
> > ------------------------------------------------------------------
> > setting  value
> > version  R version 3.4.4 (2018-03-15)
> > system   x86_64, linux-gnu
> > ui       X11
> > language en_US
> > collate  en_US.UTF-8
> > tz       America/Los_Angeles
> > date     2018-07-14
> >
> > Packages
> > ----------------------------------------------------------------------
> > package    * version date       source
> > assertthat   0.2.0   2017-04-11 CRAN (R 3.3.3)
> > base       * 3.4.4   2018-03-16 local
> > bindr        0.1.1   2018-03-13 CRAN (R 3.4.3)
> > bindrcpp     0.2.2   2018-03-29 CRAN (R 3.4.4)
> > compiler     3.4.4   2018-03-16 local
> > crayon       1.3.4   2017-09-16 CRAN (R 3.4.1)
> > datasets   * 3.4.4   2018-03-16 local
> > devtools   * 1.13.6  2018-06-27 CRAN (R 3.4.4)
> > digest       0.6.15  2018-01-28 CRAN (R 3.4.3)
> > dplyr      * 0.7.6   2018-06-29 CRAN (R 3.4.4)
> > glue         1.2.0   2017-10-29 CRAN (R 3.4.2)
> > graphics   * 3.4.4   2018-03-16 local
> > grDevices  * 3.4.4   2018-03-16 local
> > magrittr     1.5     2014-11-22 CRAN (R 3.2.2)
> > memoise      1.1.0   2017-04-21 CRAN (R 3.3.3)
> > methods    * 3.4.4   2018-03-16 local
> > pillar       1.3.0   2018-07-14 CRAN (R 3.4.4)
> > pkgconfig    2.0.1   2017-03-21 CRAN (R 3.4.0)
> > purrr        0.2.5   2018-05-29 CRAN (R 3.4.4)
> > R6           2.2.2   2017-06-17 CRAN (R 3.4.0)
> > Rcpp         0.12.17 2018-05-18 CRAN (R 3.4.4)
> > rlang        0.2.1   2018-05-30 CRAN (R 3.4.4)
> > stats      * 3.4.4   2018-03-16 local
> > tibble       1.4.2   2018-01-22 CRAN (R 3.4.3)
> > tidyselect   0.2.4   2018-02-26 CRAN (R 3.4.3)
> > utils      * 3.4.4   2018-03-16 local
> > withr        2.1.2   2018-03-15 CRAN (R 3.4.3)
> >
> >
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
> >
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From ru@@ell-lenth @ending from uiow@@edu  Tue Jul 17 14:30:03 2018
From: ru@@ell-lenth @ending from uiow@@edu (Lenth, Russell V)
Date: Tue, 17 Jul 2018 12:30:03 +0000
Subject: [R-pkg-devel] More on explosive dependencies
In-Reply-To: <CAARY7khKkwL35PbihQ+sKz5vy_WW1iw14RkOjyP6J+fYFV1chQ@mail.gmail.com>
References: <DM6PR04MB43804DFD2ED30B5C7BE91531F15C0@DM6PR04MB4380.namprd04.prod.outlook.com>,
 <CAARY7khKkwL35PbihQ+sKz5vy_WW1iw14RkOjyP6J+fYFV1chQ@mail.gmail.com>
Message-ID: <C3C65FF8-F66C-40BF-8975-6B4AEAAA5BAF@uiowa.edu>

For the methods registered by the code I show, those do NOT go in the NAMESPACE file, and there are no roxygen2 @export tags for those methods.

Russ

On Jul 17, 2018, at 12:41 AM, David Hugh-Jones <davidhughjones at gmail.com<mailto:davidhughjones at gmail.com>> wrote:


Hi Russell,

That's v helpful and I am going to try it myself. Can I just ask what goes in your namespace file (and what roxygen tags you use) for the relevant methods?

David


On Tue, 17 Jul 2018 at 02:29, Lenth, Russell V <russell-lenth at uiowa.edu<mailto:russell-lenth at uiowa.edu>> wrote:
Thanks to all who responded. I am pleased to say that with your help, I have managed to work around this problem by dynamically registering the methods. My file zzz.R contains code to register various methods having generics in coda and multcomp. Those packages are in Suggests (not Imports) and my code is:

.onLoad = function(libname, pkgname) {
    if (requireNamespace("coda", quietly = TRUE)) {
        register_s3_method("coda", "as.mcmc", "emmGrid")
        register_s3_method("coda", "as.mcmc.list", "emmGrid")
    }
    if (requireNamespace("multcomp", quietly = TRUE)) {
        register_s3_method("multcomp", "glht", "emmlf")
        register_s3_method("multcomp", "glht", "emmGrid")
        register_s3_method("multcomp", "cld", "emmGrid")
        register_s3_method("multcomp", "modelparm", "emmwrap")
     }
}

The function register_s3_method was copied from hms:::register_s3_method.  That function sets up and calls base::registerS3method if the package in the first argument is already loaded, and sets a hook to do so if it is not (or if it is subsequently unloaded and reloaded).

My package now has the desired small number of dependencies, and passes checks even with Sys.setenv(`_R_S3_METHOD_LOOKUP_BASEENV_AFTER_GLOBALENV_` = TRUE), i.e., require all S3 methods to be registered.

Russ

Russell V. Lenth  -  Professor Emeritus
Department of Statistics and Actuarial Science
The University of Iowa  -  Iowa City, IA 52242  USA
Voice (319)335-0712 (Dept. office)  -  FAX (319)335-3017

-----Original Message-----
From: Lenth, Russell V
Sent: Sunday, July 15, 2018 8:24 PM
To: r-package-devel at r-project.org<mailto:r-package-devel at r-project.org>
Subject: More on explosive dependencies

Package developers,

I posted a question a couple of months ago dealing with how to reduce the number of dependencies in a package. Part of the specific issue I face is that I have a `cld` S3 method for which the generic is in the multcomp package, but I don't want to import multcomp because it comes with a number of unneeded dependencies.

My solution at first appeared to be that I could just export my function `cld.emmGrid`; then if users have the multcomp package, this method is available. I also moved multcomp from Imports to Suggests, so that it is no longer a dependency. This fix works just fine for me. It passed the preliminary CRAN checks and it was accepted by CRAN. But then I was advised that the package fails the CRAN checks with Debian because those checks require S3 methods to actually be registered.

So what I tried next is what Duncan Murdoch suggested earlier in this thread -- to register the method conditionally using the following code in my NAMESPACE:

    if (requireNamespace("multcomp")) {
        importFrom(multcomp, cld)
        S3method(cld, emmGrid)
    }

This worked fine in my initial testing, both with multcomp installed and with multcomp absent.

However, now the package doesn't pass the checking procedure. The reason apparently is that every package mentioned in import() or importFrom() -- conditionally or not -- must be listed in Imports in the DESCRIPTION file. I could move multcomp back to Imports, but that defeats the whole purpose of getting rid of unneeded dependencies. It's a Catch-22.

Is there any recourse possible? Alas, I'm guessing there isn't, unless we can convince everybody to allow unregistered S3 methods on all platforms. This situation makes it really difficult for package developers to provide methods for other contributors' packages and still keep theirs lightweight. Almost all S3 generics are very simple functions, so being forced to load a dozen or so namespaces just to register a method is crazy. Plus, the more dependencies a package has, the less robust it is to other developers' updates.

I'm now wondering how much interest there is in developing a separate package just for generics, say, "S3generics". We could all collaborate to contribute our own generics to that one package, move them out of our own packages, and instead import just that package.

Russ

______________________________________________
R-package-devel at r-project.org<mailto:R-package-devel at r-project.org> mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel

	[[alternative HTML version deleted]]


From jmh@nnon@ucd@vi@ @ending from gm@il@com  Tue Jul 17 23:09:43 2018
From: jmh@nnon@ucd@vi@ @ending from gm@il@com (Michael Hannon)
Date: Tue, 17 Jul 2018 14:09:43 -0700
Subject: [R-pkg-devel] Package builds, installs,
 and runs but does not pass devtools::check()
In-Reply-To: <CAOKDuOijgKnPH3JFh3od95xQqEi4mC8v9EjDJQ0C56iHmcTNsw@mail.gmail.com>
References: <CACdH2ZbSBhM=tyRqaQK5MyKP6SkZAcFzmSxmMrGt4chySiz3vg@mail.gmail.com>
 <438D2EC9EAFE5946B2D5864670EA468E018F65F97E@MBXP01.ds.man.ac.uk>
 <CACdH2ZZSQfad8M06ttaFBwc98kQ5=MvKJE-2_cg16xKzhizH+w@mail.gmail.com>
 <0F8255FC-0477-4FCA-BF0B-7DDD216CE5AD@gmail.com>
 <CACdH2ZbAcQTot1Z0xoWBz_5MkXN6q78PEbez42Li2c+N2ck=9w@mail.gmail.com>
 <CAOKDuOijgKnPH3JFh3od95xQqEi4mC8v9EjDJQ0C56iHmcTNsw@mail.gmail.com>
Message-ID: <CACdH2ZYhTS0vE=RMXR7wCFhfPTQm-gmVgmFRS+5YGuQAqH4keQ@mail.gmail.com>

Thanks, Mark.  Your points are well-taken, but I wouldn't refer to
this as a "small side-track".  You don't say so, but this could be
interpreted as a recommendation to avoid some or all of the
"tidyverse" in developing packages.  I'm actually quite comfortable
doing the base-R-style programming you recommend.  I've lately being
trying to make a point of using the "tidy" stuff, as that's what I'm
seeing almost exclusively from folks in my neighborhood these days.
("Resistance is few-tile...")

Also, it would seem to be a corollary that if the ultimate goal is to
make a package, then one shouldn't be using the convenience stuff
(pipes, dplyr, etc., etc.), even during the development stages.  Can
you comment?  Thanks.

-- Mike


On Tue, Jul 17, 2018 at 2:53 AM, Mark van der Loo
<mark.vanderloo at gmail.com> wrote:
> Michael,
>
> Just a small side-track here. I would avoid using the not-a-pipe operator
> within functions or packages in general. It is great for interactive use,
> but it does make debugging and hence long-term maintenance of functions
> harder. There are two reasons for this. First, it hides intermediate
> results, and second, it adds several layers to the call stack making the
> output of functions like traceback() harder to interpret. I have documented
> a simple example here: https://github.com/chriscardillo/norris/issues/1
> (scroll down a bit).
>
> Regarding learning about quosures and so on. If the literal names of data
> frames are known, you could consider replacing
>
> some_var <-   next_data_frame %>% dplyr::select(-amount,...
>
> with something simpler like
>
> some_var <- next_data_frame[ names(next_data_frame) != c("amount", ... ) ]
>
> which might also save you some dependencies.
>
>
>
>
> Hope this helps,
> Best,
> Mark
>
>
>
> Op di 17 jul. 2018 om 11:28 schreef Michael Hannon
> <jmhannon.ucdavis at gmail.com>:
>>
>> Thanks to John and Zhian for their recent and informative comments.
>>
>> Regarding check() and NSE: the moral seems to be that a little
>> learning is a dangerous thing.  I'm off to try to bring quosure to
>> this issue.
>>
>> -- Mike
>>
>>
>> On Mon, Jul 16, 2018 at 2:38 PM, Zhian Kamvar <zkamvar at gmail.com> wrote:
>> > Using dplyr like that is for exploratory data analysis. You'll want to
>> > refer
>> > to dplyr's "Programming with dplyr" vignette for using dplyr in a
>> > package:
>> >
>> > https://cran.r-project.org/web/packages/dplyr/vignettes/programming.html
>> >
>> > Hope that helps.
>> >
>> > On Jul 16, 2018, at 22:13 , Michael Hannon <jmhannon.ucdavis at gmail.com>
>> > wrote:
>> >
>> > Thanks, Georgi.  I've changed my approach and now do what I gather is
>> > recommended practice: put all external package names into the
>> > "Imports" section of the DESCRIPTION file and then use the
>> > fully-qualified names for functions from those packages, as:
>> >
>> >    dplyr::select()
>> >
>> > The "check" operation is still not entirely "happy" with me, but it
>> > doesn't flag any errors, and the package builds and runs.
>> >
>> > BTW, one source of "complaints" from "check()" is evidently the use of
>> > NSE in the tidyverse functions.  For instance, the line:
>> >
>> >    next_data_frame %>% dplyr::select(-amount,
>> >
>> > generates the message:
>> >
>> >    standardize_format: no visible binding for global variable ?amount?
>> >
>> > where, of course, "amount" is one of the column headings in
>> > "next_data_frame".  There seems to be no harm done by this, and I plan
>> > to ignore such messages, but if there's some additional wisdom that
>> > applies here, I'd be happy to receive it.
>> >
>> > -- Mike
>> >
>> >
>> > On Sun, Jul 15, 2018 at 12:05 AM, Georgi Boshnakov
>> > <georgi.boshnakov at manchester.ac.uk> wrote:
>> >
>> >
>> > It seems that the R session used by 'check' doesn't look in the library
>> > used
>> > by your interactive session. This discrepancy may happen since the check
>> > tools do not load the same Renviron files as interactive sessions. This
>> > may
>> > result in different libraries in interactive and 'check' sessions. See
>> > ?Startup, especially section Note.
>> > It is difficult to give more specific advice without details of your
>> > setup.
>> >
>> >
>> > Hope this helps,
>> > Georgi Boshnakov
>> >
>> >
>> > ________________________________________
>> > From: R-package-devel [r-package-devel-bounces at r-project.org] on behalf
>> > of
>> > Michael Hannon [jmhannon.ucdavis at gmail.com]
>> > Sent: 15 July 2018 02:13
>> > To: r-package-devel at r-project.org
>> > Subject: [R-pkg-devel] Package builds, installs, and runs but does not
>> > pass
>> > devtools::check()
>> >
>> > Greetings.  I'm working on a small package, and I'm using the devtools
>> > functions to create, build, etc., the package.
>> >
>> > As indicated in the subject line, I get no errors when I do:
>> >
>> > build()
>> > install()
>> >
>> >
>> > When I run a separate R session and load the package, i.e.,
>> >
>> > library(my_pkg)
>> >
>> >
>> > the package loads without error, and the two exported functions appear
>> > to work as advertised.
>> >
>> > OTOH, if I include devtools::check() in the construction of the
>> > package, I consistently get an error:
>> >
>> >    * installing *source* package ?my_pkg? ...
>> >    ** R
>> >    ** preparing package for lazy loading
>> >    Error in loadNamespace(from, lib.loc = .library) :
>> >      there is no package called ?dplyr?
>> >    Error : unable to load R code in package 'my_pkg'
>> >
>> > Clearly there *is* a package called "dplyr" on my system (see the
>> > session info below, for instance).  And, as I've mentioned, the code
>> > *does* run, and I can watch it successfully reading CSV files.
>> >
>> > Here's the relevant part of my DESCRIPTION file:
>> >
>> >    Depends: R (>= 3.4.4)
>> >    Imports: readr,
>> >            dplyr,
>> >            ggplot2,
>> >            purrr,
>> >            magrittr
>> >
>> > I suspect the problem may be that I'm misunderstanding something about
>> > the `import::from()` function, which I'm using for the first time to
>> > load required functions into my code.  In each of the three files that
>> > use dplyr I have the line:
>> >
>> >    import::from(dplyr, mutate, filter, rename, select, setdiff, slice,
>> > "%>%")
>> >
>> > I've tried:
>> >
>> >    (1) putting that line in just one of the files (the lexically first
>> > one)
>> >    (2) including different subsets of dplyr functions, as needed, in
>> > the various files
>> >
>> > Needless to say, I haven't seen any improvement with any of the above
>> > (or any of the other thrashing I've done).
>> >
>> > If you can point me in the right direction, I'd appreciate it.  Thanks.
>> >
>> > -- Mike
>> >
>> >
>> > session_info()
>> >
>> > Session info
>> > ------------------------------------------------------------------
>> > setting  value
>> > version  R version 3.4.4 (2018-03-15)
>> > system   x86_64, linux-gnu
>> > ui       X11
>> > language en_US
>> > collate  en_US.UTF-8
>> > tz       America/Los_Angeles
>> > date     2018-07-14
>> >
>> > Packages
>> > ----------------------------------------------------------------------
>> > package    * version date       source
>> > assertthat   0.2.0   2017-04-11 CRAN (R 3.3.3)
>> > base       * 3.4.4   2018-03-16 local
>> > bindr        0.1.1   2018-03-13 CRAN (R 3.4.3)
>> > bindrcpp     0.2.2   2018-03-29 CRAN (R 3.4.4)
>> > compiler     3.4.4   2018-03-16 local
>> > crayon       1.3.4   2017-09-16 CRAN (R 3.4.1)
>> > datasets   * 3.4.4   2018-03-16 local
>> > devtools   * 1.13.6  2018-06-27 CRAN (R 3.4.4)
>> > digest       0.6.15  2018-01-28 CRAN (R 3.4.3)
>> > dplyr      * 0.7.6   2018-06-29 CRAN (R 3.4.4)
>> > glue         1.2.0   2017-10-29 CRAN (R 3.4.2)
>> > graphics   * 3.4.4   2018-03-16 local
>> > grDevices  * 3.4.4   2018-03-16 local
>> > magrittr     1.5     2014-11-22 CRAN (R 3.2.2)
>> > memoise      1.1.0   2017-04-21 CRAN (R 3.3.3)
>> > methods    * 3.4.4   2018-03-16 local
>> > pillar       1.3.0   2018-07-14 CRAN (R 3.4.4)
>> > pkgconfig    2.0.1   2017-03-21 CRAN (R 3.4.0)
>> > purrr        0.2.5   2018-05-29 CRAN (R 3.4.4)
>> > R6           2.2.2   2017-06-17 CRAN (R 3.4.0)
>> > Rcpp         0.12.17 2018-05-18 CRAN (R 3.4.4)
>> > rlang        0.2.1   2018-05-30 CRAN (R 3.4.4)
>> > stats      * 3.4.4   2018-03-16 local
>> > tibble       1.4.2   2018-01-22 CRAN (R 3.4.3)
>> > tidyselect   0.2.4   2018-02-26 CRAN (R 3.4.3)
>> > utils      * 3.4.4   2018-03-16 local
>> > withr        2.1.2   2018-03-15 CRAN (R 3.4.3)
>> >
>> >
>> >
>> > ______________________________________________
>> > R-package-devel at r-project.org mailing list
>> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> >
>> >
>> > ______________________________________________
>> > R-package-devel at r-project.org mailing list
>> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> >
>> >
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From m@rk@v@nderloo @ending from gm@il@com  Thu Jul 19 12:20:34 2018
From: m@rk@v@nderloo @ending from gm@il@com (Mark van der Loo)
Date: Thu, 19 Jul 2018 12:20:34 +0200
Subject: [R-pkg-devel] Package builds, installs,
 and runs but does not pass devtools::check()
In-Reply-To: <CACdH2ZYhTS0vE=RMXR7wCFhfPTQm-gmVgmFRS+5YGuQAqH4keQ@mail.gmail.com>
References: <CACdH2ZbSBhM=tyRqaQK5MyKP6SkZAcFzmSxmMrGt4chySiz3vg@mail.gmail.com>
 <438D2EC9EAFE5946B2D5864670EA468E018F65F97E@MBXP01.ds.man.ac.uk>
 <CACdH2ZZSQfad8M06ttaFBwc98kQ5=MvKJE-2_cg16xKzhizH+w@mail.gmail.com>
 <0F8255FC-0477-4FCA-BF0B-7DDD216CE5AD@gmail.com>
 <CACdH2ZbAcQTot1Z0xoWBz_5MkXN6q78PEbez42Li2c+N2ck=9w@mail.gmail.com>
 <CAOKDuOijgKnPH3JFh3od95xQqEi4mC8v9EjDJQ0C56iHmcTNsw@mail.gmail.com>
 <CACdH2ZYhTS0vE=RMXR7wCFhfPTQm-gmVgmFRS+5YGuQAqH4keQ@mail.gmail.com>
Message-ID: <CAOKDuOjqfSaavxP+OtQV+OtdNh_EpvgutchS7Kqzz8_P7hOwVg@mail.gmail.com>

Dear Mike, et al,

My remarks are not necessarily related to tidyverse packages. The main
point is that there are various purposes and business cases for writing
code, and they may imply different trade-offs. Let me illustrate with some
examples. I will focus on non-standard evaluation and dependencies.


TL;DR version: (and this is my opinion, nobody has to agree).

1/Interactive use: user-level NSE ok (as in the not-a-pipe operator, dplyr
verbs), use any package you want.
2/Applications & local packages: avoid NSE within functions, package an
application with dependencies you need, write code with maintainers in mind.
3/Published R-packages: avoid NSE within functions, minimize dependencies
to what you cannot avoid.

Do Read version:

1/ One-off data analyses or exploratory data analyses. There are cases
where you don't need to guarantee that your code will run a few years from
now: you are the only user and once your task is done, you quickly need to
move on to the next. Especially in EDA, I write a lot of code that is nice
to keep in a structured project folder but most probably: 1) I will be its
only user and 2) I will use it only for this one small project so
maintenance is not an issue. Although I'm writing code in scripts, it is
very close to interactive work on the command-line.

In such cases I use whatever gets the job done, including dplyr, tidyr,
ggplot2, data.table, you name it. Here I basically don't care about
dependencies and if I write functions there are usually not many of them.


2/ Writing applications or packages for internal use. When you write an
application you are usually committing to a longer maintenance horizon and
more than one user. Good chance that you're not the user and also good
chance you're not the only developer. There are many implications to this
but since you need to maintain things for a longer term, dependencies can
become a liability. Fortunately, there are techniques to contain
dependencies, for example using packrat or by manually setting up a library
containing the packages your application depends on. You can even use a
docker instance. I have worked with custom libraries on several occasions.
Since you (or someone else) is going to maintain the application, it is
worth while to sit down and think what is the best way to set up code so it
remains maintainable. This includes questions like: can I easily understand
what happens when reading it? What expertise does the maintainer need to
understand it? Non-standard evaluation is generally much harder to reason
about than standard evaluated code. This makes debugging and extending code
harder in general.

Now some people will argue that something like filter(data, x>1) is easier
to understand than data[data$x > 1,,drop=FALSE]. I agree that on a very
shallow level, filter(data, x>1) is easy to follow, in the sense of  "oh
the author probably wants to filter something here". But when you are
debugging, you need to understand in much greater detail what happens: you
need to know that 'x>1' is an expression, that will be evaluated in the
context of 'data'. You need to know about environments and parent
environments and so on. All this knowledge can be avoided with data[data$x
> 1,,drop=FALSE]. The latter also requires knowledge, but the concepts are
much simple I think.

Hence, I tend to avoid NSE when writing applications, although there may
still be good reasons to do it. Dependencies can be containered in various
ways so they are not such a big problem.

3/ Writing packages for CRAN. Now you are committing to long-term
maintenance, and usage by interactive users, application builders, and
possibly other package builders. Now a dependency becomes a direct
liability in the sense that the author of your dependency can change
interfaces and ask you to comply to the new version. Also, and especially
because of recursive dependencies, importing a package may give you a whole
tail of dependencies. This increases load time but also install-time,
especially on systems where you need to install from source. Light-weight
packages therefore have real advantages in applications that run many times
(like a standalone script that is fired by users of a web-application or
scripts that are scheduled to run in high frequency). It is also worth
mentioning that an Imports or Depends puts a burden on the maintainer of
the package you depend on: before submitting to CRAN, a pkg developer needs
to check against all reverse dependencies (preferably recursively).

So now, it is even more worth while to sit down and think about what is the
best way to set up your code. Well thought out code can be a pleasure to
maintain. Code that is hastily put together is a nightmare.

My philosophy is as follows: I depend other packages only when they offer
something that I cannot fairly trivially do myself. This may have to do
with a statistical or numerical method I do not want or cannot implement,
or it can have something to do with performance for example. This does
indeed exclude much of the tidyverse almost automatically. Many tools in
tidyverse make already existing functionality easier for (interactive) use.
But since much of the functionality is already present in base R, and
because I find NSE hard to reason about in a programming context I have
until now not used any tidyverse packages as an Imports or Depends.


Hope this helps,
Best,
Mark














Op di 17 jul. 2018 om 23:10 schreef Michael Hannon <
jmhannon.ucdavis at gmail.com>:

> Thanks, Mark.  Your points are well-taken, but I wouldn't refer to
> this as a "small side-track".  You don't say so, but this could be
> interpreted as a recommendation to avoid some or all of the
> "tidyverse" in developing packages.  I'm actually quite comfortable
> doing the base-R-style programming you recommend.  I've lately being
> trying to make a point of using the "tidy" stuff, as that's what I'm
> seeing almost exclusively from folks in my neighborhood these days.
> ("Resistance is few-tile...")
>
> Also, it would seem to be a corollary that if the ultimate goal is to
> make a package, then one shouldn't be using the convenience stuff
> (pipes, dplyr, etc., etc.), even during the development stages.  Can
> you comment?  Thanks.
>
> -- Mike
>
>
> On Tue, Jul 17, 2018 at 2:53 AM, Mark van der Loo
> <mark.vanderloo at gmail.com> wrote:
> > Michael,
> >
> > Just a small side-track here. I would avoid using the not-a-pipe operator
> > within functions or packages in general. It is great for interactive use,
> > but it does make debugging and hence long-term maintenance of functions
> > harder. There are two reasons for this. First, it hides intermediate
> > results, and second, it adds several layers to the call stack making the
> > output of functions like traceback() harder to interpret. I have
> documented
> > a simple example here: https://github.com/chriscardillo/norris/issues/1
> > (scroll down a bit).
> >
> > Regarding learning about quosures and so on. If the literal names of data
> > frames are known, you could consider replacing
> >
> > some_var <-   next_data_frame %>% dplyr::select(-amount,...
> >
> > with something simpler like
> >
> > some_var <- next_data_frame[ names(next_data_frame) != c("amount", ... )
> ]
> >
> > which might also save you some dependencies.
> >
> >
> >
> >
> > Hope this helps,
> > Best,
> > Mark
> >
> >
> >
> > Op di 17 jul. 2018 om 11:28 schreef Michael Hannon
> > <jmhannon.ucdavis at gmail.com>:
> >>
> >> Thanks to John and Zhian for their recent and informative comments.
> >>
> >> Regarding check() and NSE: the moral seems to be that a little
> >> learning is a dangerous thing.  I'm off to try to bring quosure to
> >> this issue.
> >>
> >> -- Mike
> >>
> >>
> >> On Mon, Jul 16, 2018 at 2:38 PM, Zhian Kamvar <zkamvar at gmail.com>
> wrote:
> >> > Using dplyr like that is for exploratory data analysis. You'll want to
> >> > refer
> >> > to dplyr's "Programming with dplyr" vignette for using dplyr in a
> >> > package:
> >> >
> >> >
> https://cran.r-project.org/web/packages/dplyr/vignettes/programming.html
> >> >
> >> > Hope that helps.
> >> >
> >> > On Jul 16, 2018, at 22:13 , Michael Hannon <
> jmhannon.ucdavis at gmail.com>
> >> > wrote:
> >> >
> >> > Thanks, Georgi.  I've changed my approach and now do what I gather is
> >> > recommended practice: put all external package names into the
> >> > "Imports" section of the DESCRIPTION file and then use the
> >> > fully-qualified names for functions from those packages, as:
> >> >
> >> >    dplyr::select()
> >> >
> >> > The "check" operation is still not entirely "happy" with me, but it
> >> > doesn't flag any errors, and the package builds and runs.
> >> >
> >> > BTW, one source of "complaints" from "check()" is evidently the use of
> >> > NSE in the tidyverse functions.  For instance, the line:
> >> >
> >> >    next_data_frame %>% dplyr::select(-amount,
> >> >
> >> > generates the message:
> >> >
> >> >    standardize_format: no visible binding for global variable ?amount?
> >> >
> >> > where, of course, "amount" is one of the column headings in
> >> > "next_data_frame".  There seems to be no harm done by this, and I plan
> >> > to ignore such messages, but if there's some additional wisdom that
> >> > applies here, I'd be happy to receive it.
> >> >
> >> > -- Mike
> >> >
> >> >
> >> > On Sun, Jul 15, 2018 at 12:05 AM, Georgi Boshnakov
> >> > <georgi.boshnakov at manchester.ac.uk> wrote:
> >> >
> >> >
> >> > It seems that the R session used by 'check' doesn't look in the
> library
> >> > used
> >> > by your interactive session. This discrepancy may happen since the
> check
> >> > tools do not load the same Renviron files as interactive sessions.
> This
> >> > may
> >> > result in different libraries in interactive and 'check' sessions. See
> >> > ?Startup, especially section Note.
> >> > It is difficult to give more specific advice without details of your
> >> > setup.
> >> >
> >> >
> >> > Hope this helps,
> >> > Georgi Boshnakov
> >> >
> >> >
> >> > ________________________________________
> >> > From: R-package-devel [r-package-devel-bounces at r-project.org] on
> behalf
> >> > of
> >> > Michael Hannon [jmhannon.ucdavis at gmail.com]
> >> > Sent: 15 July 2018 02:13
> >> > To: r-package-devel at r-project.org
> >> > Subject: [R-pkg-devel] Package builds, installs, and runs but does not
> >> > pass
> >> > devtools::check()
> >> >
> >> > Greetings.  I'm working on a small package, and I'm using the devtools
> >> > functions to create, build, etc., the package.
> >> >
> >> > As indicated in the subject line, I get no errors when I do:
> >> >
> >> > build()
> >> > install()
> >> >
> >> >
> >> > When I run a separate R session and load the package, i.e.,
> >> >
> >> > library(my_pkg)
> >> >
> >> >
> >> > the package loads without error, and the two exported functions appear
> >> > to work as advertised.
> >> >
> >> > OTOH, if I include devtools::check() in the construction of the
> >> > package, I consistently get an error:
> >> >
> >> >    * installing *source* package ?my_pkg? ...
> >> >    ** R
> >> >    ** preparing package for lazy loading
> >> >    Error in loadNamespace(from, lib.loc = .library) :
> >> >      there is no package called ?dplyr?
> >> >    Error : unable to load R code in package 'my_pkg'
> >> >
> >> > Clearly there *is* a package called "dplyr" on my system (see the
> >> > session info below, for instance).  And, as I've mentioned, the code
> >> > *does* run, and I can watch it successfully reading CSV files.
> >> >
> >> > Here's the relevant part of my DESCRIPTION file:
> >> >
> >> >    Depends: R (>= 3.4.4)
> >> >    Imports: readr,
> >> >            dplyr,
> >> >            ggplot2,
> >> >            purrr,
> >> >            magrittr
> >> >
> >> > I suspect the problem may be that I'm misunderstanding something about
> >> > the `import::from()` function, which I'm using for the first time to
> >> > load required functions into my code.  In each of the three files that
> >> > use dplyr I have the line:
> >> >
> >> >    import::from(dplyr, mutate, filter, rename, select, setdiff, slice,
> >> > "%>%")
> >> >
> >> > I've tried:
> >> >
> >> >    (1) putting that line in just one of the files (the lexically first
> >> > one)
> >> >    (2) including different subsets of dplyr functions, as needed, in
> >> > the various files
> >> >
> >> > Needless to say, I haven't seen any improvement with any of the above
> >> > (or any of the other thrashing I've done).
> >> >
> >> > If you can point me in the right direction, I'd appreciate it.
> Thanks.
> >> >
> >> > -- Mike
> >> >
> >> >
> >> > session_info()
> >> >
> >> > Session info
> >> > ------------------------------------------------------------------
> >> > setting  value
> >> > version  R version 3.4.4 (2018-03-15)
> >> > system   x86_64, linux-gnu
> >> > ui       X11
> >> > language en_US
> >> > collate  en_US.UTF-8
> >> > tz       America/Los_Angeles
> >> > date     2018-07-14
> >> >
> >> > Packages
> >> > ----------------------------------------------------------------------
> >> > package    * version date       source
> >> > assertthat   0.2.0   2017-04-11 CRAN (R 3.3.3)
> >> > base       * 3.4.4   2018-03-16 local
> >> > bindr        0.1.1   2018-03-13 CRAN (R 3.4.3)
> >> > bindrcpp     0.2.2   2018-03-29 CRAN (R 3.4.4)
> >> > compiler     3.4.4   2018-03-16 local
> >> > crayon       1.3.4   2017-09-16 CRAN (R 3.4.1)
> >> > datasets   * 3.4.4   2018-03-16 local
> >> > devtools   * 1.13.6  2018-06-27 CRAN (R 3.4.4)
> >> > digest       0.6.15  2018-01-28 CRAN (R 3.4.3)
> >> > dplyr      * 0.7.6   2018-06-29 CRAN (R 3.4.4)
> >> > glue         1.2.0   2017-10-29 CRAN (R 3.4.2)
> >> > graphics   * 3.4.4   2018-03-16 local
> >> > grDevices  * 3.4.4   2018-03-16 local
> >> > magrittr     1.5     2014-11-22 CRAN (R 3.2.2)
> >> > memoise      1.1.0   2017-04-21 CRAN (R 3.3.3)
> >> > methods    * 3.4.4   2018-03-16 local
> >> > pillar       1.3.0   2018-07-14 CRAN (R 3.4.4)
> >> > pkgconfig    2.0.1   2017-03-21 CRAN (R 3.4.0)
> >> > purrr        0.2.5   2018-05-29 CRAN (R 3.4.4)
> >> > R6           2.2.2   2017-06-17 CRAN (R 3.4.0)
> >> > Rcpp         0.12.17 2018-05-18 CRAN (R 3.4.4)
> >> > rlang        0.2.1   2018-05-30 CRAN (R 3.4.4)
> >> > stats      * 3.4.4   2018-03-16 local
> >> > tibble       1.4.2   2018-01-22 CRAN (R 3.4.3)
> >> > tidyselect   0.2.4   2018-02-26 CRAN (R 3.4.3)
> >> > utils      * 3.4.4   2018-03-16 local
> >> > withr        2.1.2   2018-03-15 CRAN (R 3.4.3)
> >> >
> >> >
> >> >
> >> > ______________________________________________
> >> > R-package-devel at r-project.org mailing list
> >> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >> >
> >> >
> >> > ______________________________________________
> >> > R-package-devel at r-project.org mailing list
> >> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >> >
> >> >
> >>
> >> ______________________________________________
> >> R-package-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From toli@@ch@l @ending from gm@il@com  Thu Jul 19 13:04:38 2018
From: toli@@ch@l @ending from gm@il@com (=?UTF-8?B?zqTPjM67zrfPgiDOp86xzrvOus6uz4I=?=)
Date: Thu, 19 Jul 2018 14:04:38 +0300
Subject: [R-pkg-devel] Documentation with roxygen2
Message-ID: <CAMfvGJPYUUvRuJq7c__UJbCWx=MW4GEwn2pqxo6h1q94zENBrw@mail.gmail.com>

Dear all,

this period I am working as a student on a Google Summer of Code project.
We develop an Rcpp package.

I am trying to create a documentation as a pdf using roxygen2.
I add the comments #' above of each R function and generate the Rd files
with roxygwn2::roxygenise() function.
Then I run in the command line
R CMD Rd2pdf --pdf --title='Title of package' --description -o
/tmp/packahe.pdf man/*.Rd

And a pdf is creating. But I can not create a package description with the
info from description file and a table of contents at the beginning of the
document. What I am doing wrong?

Thanks in advance,
Tolis

	[[alternative HTML version deleted]]


From edd @ending from debi@n@org  Thu Jul 19 14:37:29 2018
From: edd @ending from debi@n@org (Dirk Eddelbuettel)
Date: Thu, 19 Jul 2018 07:37:29 -0500
Subject: [R-pkg-devel] C++11 and deprecated warnings "noise" for auto_ptr
Message-ID: <23376.34313.672458.769096@rob.eddelbuettel.com>


As some of you may have noticed, or may have been told as well in kind "fix
this or else ..." email, 'R CMD check' now also marks g++-7 / g++-8 warnings
of 'deprecated declarations'.

This can of course be addressed in the code itself, or suppressed with the
'-Wno-deprecated-declarations' flag in compiler options in eg ~/.R/Makevars.

A particularly annoying case is in all the code depending on Boost headers
and using eg our BH package. I just installed an updated new package from
CRAN and again had screens full of warnings for 'deprecated std::auto_ptr'.

Looking at the Boost header file, it turns out that for this case one can use
the '-DBOOST_NO_AUTO_PTR' define and the compilation will be silent! So those
of us using Boost and BH could add the define to the headers.

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From i@uc@r86 @ending from gm@il@com  Thu Jul 19 15:06:13 2018
From: i@uc@r86 @ending from gm@il@com (=?UTF-8?B?ScOxYWtpIMOaY2Fy?=)
Date: Thu, 19 Jul 2018 15:06:13 +0200
Subject: [R-pkg-devel] 
 C++11 and deprecated warnings "noise" for auto_ptr
In-Reply-To: <23376.34313.672458.769096@rob.eddelbuettel.com>
References: <23376.34313.672458.769096@rob.eddelbuettel.com>
Message-ID: <CALEXWq1qeRY+9=hVW-Asm0EcKGi-1e7urR49pm2ZWayOEnb4EA@mail.gmail.com>

Great! Many thanks for sharing this, Dirk.

I?aki
El jue., 19 jul. 2018 a las 14:37, Dirk Eddelbuettel
(<edd at debian.org>) escribi?:
>
>
> As some of you may have noticed, or may have been told as well in kind "fix
> this or else ..." email, 'R CMD check' now also marks g++-7 / g++-8 warnings
> of 'deprecated declarations'.
>
> This can of course be addressed in the code itself, or suppressed with the
> '-Wno-deprecated-declarations' flag in compiler options in eg ~/.R/Makevars.
>
> A particularly annoying case is in all the code depending on Boost headers
> and using eg our BH package. I just installed an updated new package from
> CRAN and again had screens full of warnings for 'deprecated std::auto_ptr'.
>
> Looking at the Boost header file, it turns out that for this case one can use
> the '-DBOOST_NO_AUTO_PTR' define and the compilation will be silent! So those
> of us using Boost and BH could add the define to the headers.
>
> Dirk
>
> --
> http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel



-- 
I?aki ?car
http://www.enchufa2.es
@Enchufa2


From @tu@rt@l@cy @ending from york@@c@uk  Thu Jul 19 16:20:16 2018
From: @tu@rt@l@cy @ending from york@@c@uk (Stuart Lacy)
Date: Thu, 19 Jul 2018 15:20:16 +0100
Subject: Running R CMD CHECK on different architectures
Message-ID: <6e3c84b0-0c45-e828-aad5-e7486067d2c6@york.ac.uk>

Hi,

I've just submitted a new release of my package multistateutils to CRAN 
but have received an automated email back asking if I've fixed the 
errors from the previous release. Firstly, why was the previous release 
accepted onto CRAN if it had errors?

The result of the check on the previous release is available here 
https://cran.r-project.org/web/checks/check_results_multistateutils.html

However, the errors and warnings are in architectures that I don't have 
available, i.e. r-devel on fedora, r-patched solaris, r-release osx, 
r-oldrel osx.

How can I test that these errors have been fixed in my latest version? I 
run CMD CHECK through devtools::check() and also test on win-builder and 
there are no problems on either of these.

Thanks,
Stuart
-- 
Stuart Lacy
Research Fellow
Epidemiology and Cancer Statistics Group
University of York
01904 321118
Disclaimer: http://www.york.ac.uk/docs/disclaimer/email.htm


From i@uc@r86 @ending from gm@il@com  Thu Jul 19 16:34:25 2018
From: i@uc@r86 @ending from gm@il@com (=?UTF-8?B?ScOxYWtpIMOaY2Fy?=)
Date: Thu, 19 Jul 2018 16:34:25 +0200
Subject: [R-pkg-devel] Running R CMD CHECK on different architectures
In-Reply-To: <mailman.2943.555.1532010022.1179.r-package-devel@r-project.org>
References: <mailman.2943.555.1532010022.1179.r-package-devel@r-project.org>
Message-ID: <CALEXWq2KcD+o4b-p9NkZpvdM1f+zj0V=x8zd__QdmjAmFhObnA@mail.gmail.com>

Hi Stuart,

El jue., 19 jul. 2018 a las 16:20, Stuart Lacy via R-package-devel
(<r-package-devel at r-project.org>) escribi?:
>
>
>
>
> ---------- Forwarded message ----------
> From: Stuart Lacy <stuart.lacy at york.ac.uk>
> To: R Package Development <r-package-devel at r-project.org>
> Cc:
> Bcc:
> Date: Thu, 19 Jul 2018 15:20:16 +0100
> Subject: Running R CMD CHECK on different architectures
> Hi,
>
> I've just submitted a new release of my package multistateutils to CRAN
> but have received an automated email back asking if I've fixed the
> errors from the previous release. Firstly, why was the previous release
> accepted onto CRAN if it had errors?
>
> The result of the check on the previous release is available here
> https://cran.r-project.org/web/checks/check_results_multistateutils.html
>
> However, the errors and warnings are in architectures that I don't have
> available, i.e. r-devel on fedora, r-patched solaris, r-release osx,
> r-oldrel osx.
>
> How can I test that these errors have been fixed in my latest version? I
> run CMD CHECK through devtools::check() and also test on win-builder and
> there are no problems on either of these.

Try rhub: https://github.com/r-hub/rhub#readme

I?aki

>
> Thanks,
> Stuart
> --
> Stuart Lacy
> Research Fellow
> Epidemiology and Cancer Statistics Group
> University of York
> 01904 321118
> Disclaimer: http://www.york.ac.uk/docs/disclaimer/email.htm
>
>
>
>
> ---------- Forwarded message ----------
> From: Stuart Lacy via R-package-devel <r-package-devel at r-project.org>
> To: R Package Development <r-package-devel at r-project.org>
> Cc:
> Bcc:
> Date: Thu, 19 Jul 2018 15:20:16 +0100
> Subject: [R-pkg-devel] Running R CMD CHECK on different architectures
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From murdoch@dunc@n @ending from gm@il@com  Thu Jul 19 17:51:47 2018
From: murdoch@dunc@n @ending from gm@il@com (Duncan Murdoch)
Date: Thu, 19 Jul 2018 11:51:47 -0400
Subject: [R-pkg-devel] Running R CMD CHECK on different architectures
In-Reply-To: <mailman.2943.555.1532010022.1179.r-package-devel@r-project.org>
References: <mailman.2943.555.1532010022.1179.r-package-devel@r-project.org>
Message-ID: <1ce0ad4c-b2c6-e446-c173-fe5b3e06e58c@gmail.com>

On 19/07/2018 10:20 AM, Stuart Lacy via R-package-devel wrote:
> I've just submitted a new release of my package multistateutils to CRAN
> but have received an automated email back asking if I've fixed the
> errors from the previous release. Firstly, why was the previous release
> accepted onto CRAN if it had errors?

I?aki answered your main question.  For this first question, there are 
several possible explanations.  The most common one is that the tests 
have become more stringent than they were at the previous submission. 
It's also possible that there has been a big enough change in R or one 
of the compilers or other tools that something that worked before no 
longer works.

Duncan Murdoch


From @teve@the@b@ye@i@n @ending from gm@il@com  Thu Jul 19 19:00:34 2018
From: @teve@the@b@ye@i@n @ending from gm@il@com (Steven Scott)
Date: Thu, 19 Jul 2018 10:00:34 -0700
Subject: [R-pkg-devel] 
 C++11 and deprecated warnings "noise" for auto_ptr
In-Reply-To: <CALEXWq1qeRY+9=hVW-Asm0EcKGi-1e7urR49pm2ZWayOEnb4EA@mail.gmail.com>
References: <23376.34313.672458.769096@rob.eddelbuettel.com>
 <CALEXWq1qeRY+9=hVW-Asm0EcKGi-1e7urR49pm2ZWayOEnb4EA@mail.gmail.com>
Message-ID: <CAJqTW46317C243TxNH431GxS-yKob9kxw3AwETCRZ9ZG5LT2Aw@mail.gmail.com>

Thanks Dirk,
This will cut down the size of my compilation logs dramatically.


On Thu, Jul 19, 2018 at 6:06 AM I?aki ?car <i.ucar86 at gmail.com> wrote:

> Great! Many thanks for sharing this, Dirk.
>
> I?aki
> El jue., 19 jul. 2018 a las 14:37, Dirk Eddelbuettel
> (<edd at debian.org>) escribi?:
> >
> >
> > As some of you may have noticed, or may have been told as well in kind
> "fix
> > this or else ..." email, 'R CMD check' now also marks g++-7 / g++-8
> warnings
> > of 'deprecated declarations'.
> >
> > This can of course be addressed in the code itself, or suppressed with
> the
> > '-Wno-deprecated-declarations' flag in compiler options in eg
> ~/.R/Makevars.
> >
> > A particularly annoying case is in all the code depending on Boost
> headers
> > and using eg our BH package. I just installed an updated new package from
> > CRAN and again had screens full of warnings for 'deprecated
> std::auto_ptr'.
> >
> > Looking at the Boost header file, it turns out that for this case one
> can use
> > the '-DBOOST_NO_AUTO_PTR' define and the compilation will be silent! So
> those
> > of us using Boost and BH could add the define to the headers.
> >
> > Dirk
> >
> > --
> > http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>
>
> --
> I?aki ?car
> http://www.enchufa2.es
> @Enchufa2
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From jmh@nnon@ucd@vi@ @ending from gm@il@com  Fri Jul 20 00:39:50 2018
From: jmh@nnon@ucd@vi@ @ending from gm@il@com (Michael Hannon)
Date: Thu, 19 Jul 2018 15:39:50 -0700
Subject: [R-pkg-devel] Package builds, installs,
 and runs but does not pass devtools::check()
In-Reply-To: <CAOKDuOjqfSaavxP+OtQV+OtdNh_EpvgutchS7Kqzz8_P7hOwVg@mail.gmail.com>
References: <CACdH2ZbSBhM=tyRqaQK5MyKP6SkZAcFzmSxmMrGt4chySiz3vg@mail.gmail.com>
 <438D2EC9EAFE5946B2D5864670EA468E018F65F97E@MBXP01.ds.man.ac.uk>
 <CACdH2ZZSQfad8M06ttaFBwc98kQ5=MvKJE-2_cg16xKzhizH+w@mail.gmail.com>
 <0F8255FC-0477-4FCA-BF0B-7DDD216CE5AD@gmail.com>
 <CACdH2ZbAcQTot1Z0xoWBz_5MkXN6q78PEbez42Li2c+N2ck=9w@mail.gmail.com>
 <CAOKDuOijgKnPH3JFh3od95xQqEi4mC8v9EjDJQ0C56iHmcTNsw@mail.gmail.com>
 <CACdH2ZYhTS0vE=RMXR7wCFhfPTQm-gmVgmFRS+5YGuQAqH4keQ@mail.gmail.com>
 <CAOKDuOjqfSaavxP+OtQV+OtdNh_EpvgutchS7Kqzz8_P7hOwVg@mail.gmail.com>
Message-ID: <CACdH2ZYjDy5j7i-LegNbOMg3121vAx_8JAERUpeo=NXpCi732A@mail.gmail.com>

Very nice discussion.  Thanks, Mark.


On Thu, Jul 19, 2018 at 3:20 AM, Mark van der Loo
<mark.vanderloo at gmail.com> wrote:
>
> Dear Mike, et al,
>
> My remarks are not necessarily related to tidyverse packages. The main point
> is that there are various purposes and business cases for writing code, and
> they may imply different trade-offs. Let me illustrate with some examples. I
> will focus on non-standard evaluation and dependencies.
>
>
> TL;DR version: (and this is my opinion, nobody has to agree).
>
> 1/Interactive use: user-level NSE ok (as in the not-a-pipe operator, dplyr
> verbs), use any package you want.
> 2/Applications & local packages: avoid NSE within functions, package an
> application with dependencies you need, write code with maintainers in mind.
> 3/Published R-packages: avoid NSE within functions, minimize dependencies to
> what you cannot avoid.
>
> Do Read version:
>
> 1/ One-off data analyses or exploratory data analyses. There are cases where
> you don't need to guarantee that your code will run a few years from now:
> you are the only user and once your task is done, you quickly need to move
> on to the next. Especially in EDA, I write a lot of code that is nice to
> keep in a structured project folder but most probably: 1) I will be its only
> user and 2) I will use it only for this one small project so maintenance is
> not an issue. Although I'm writing code in scripts, it is very close to
> interactive work on the command-line.
>
> In such cases I use whatever gets the job done, including dplyr, tidyr,
> ggplot2, data.table, you name it. Here I basically don't care about
> dependencies and if I write functions there are usually not many of them.
>
>
> 2/ Writing applications or packages for internal use. When you write an
> application you are usually committing to a longer maintenance horizon and
> more than one user. Good chance that you're not the user and also good
> chance you're not the only developer. There are many implications to this
> but since you need to maintain things for a longer term, dependencies can
> become a liability. Fortunately, there are techniques to contain
> dependencies, for example using packrat or by manually setting up a library
> containing the packages your application depends on. You can even use a
> docker instance. I have worked with custom libraries on several occasions.
> Since you (or someone else) is going to maintain the application, it is
> worth while to sit down and think what is the best way to set up code so it
> remains maintainable. This includes questions like: can I easily understand
> what happens when reading it? What expertise does the maintainer need to
> understand it? Non-standard evaluation is generally much harder to reason
> about than standard evaluated code. This makes debugging and extending code
> harder in general.
>
> Now some people will argue that something like filter(data, x>1) is easier
> to understand than data[data$x > 1,,drop=FALSE]. I agree that on a very
> shallow level, filter(data, x>1) is easy to follow, in the sense of  "oh the
> author probably wants to filter something here". But when you are debugging,
> you need to understand in much greater detail what happens: you need to know
> that 'x>1' is an expression, that will be evaluated in the context of
> 'data'. You need to know about environments and parent environments and so
> on. All this knowledge can be avoided with data[data$x > 1,,drop=FALSE]. The
> latter also requires knowledge, but the concepts are much simple I think.
>
> Hence, I tend to avoid NSE when writing applications, although there may
> still be good reasons to do it. Dependencies can be containered in various
> ways so they are not such a big problem.
>
> 3/ Writing packages for CRAN. Now you are committing to long-term
> maintenance, and usage by interactive users, application builders, and
> possibly other package builders. Now a dependency becomes a direct liability
> in the sense that the author of your dependency can change interfaces and
> ask you to comply to the new version. Also, and especially because of
> recursive dependencies, importing a package may give you a whole tail of
> dependencies. This increases load time but also install-time, especially on
> systems where you need to install from source. Light-weight packages
> therefore have real advantages in applications that run many times (like a
> standalone script that is fired by users of a web-application or scripts
> that are scheduled to run in high frequency). It is also worth mentioning
> that an Imports or Depends puts a burden on the maintainer of the package
> you depend on: before submitting to CRAN, a pkg developer needs to check
> against all reverse dependencies (preferably recursively).
>
> So now, it is even more worth while to sit down and think about what is the
> best way to set up your code. Well thought out code can be a pleasure to
> maintain. Code that is hastily put together is a nightmare.
>
> My philosophy is as follows: I depend other packages only when they offer
> something that I cannot fairly trivially do myself. This may have to do with
> a statistical or numerical method I do not want or cannot implement, or it
> can have something to do with performance for example. This does indeed
> exclude much of the tidyverse almost automatically. Many tools in tidyverse
> make already existing functionality easier for (interactive) use. But since
> much of the functionality is already present in base R, and because I find
> NSE hard to reason about in a programming context I have until now not used
> any tidyverse packages as an Imports or Depends.
>
>
> Hope this helps,
> Best,
> Mark
>
>
>
>
>
>
>
>
>
>
>
>
>
>
> Op di 17 jul. 2018 om 23:10 schreef Michael Hannon
> <jmhannon.ucdavis at gmail.com>:
>>
>> Thanks, Mark.  Your points are well-taken, but I wouldn't refer to
>> this as a "small side-track".  You don't say so, but this could be
>> interpreted as a recommendation to avoid some or all of the
>> "tidyverse" in developing packages.  I'm actually quite comfortable
>> doing the base-R-style programming you recommend.  I've lately being
>> trying to make a point of using the "tidy" stuff, as that's what I'm
>> seeing almost exclusively from folks in my neighborhood these days.
>> ("Resistance is few-tile...")
>>
>> Also, it would seem to be a corollary that if the ultimate goal is to
>> make a package, then one shouldn't be using the convenience stuff
>> (pipes, dplyr, etc., etc.), even during the development stages.  Can
>> you comment?  Thanks.
>>
>> -- Mike
>>
>>
>> On Tue, Jul 17, 2018 at 2:53 AM, Mark van der Loo
>> <mark.vanderloo at gmail.com> wrote:
>> > Michael,
>> >
>> > Just a small side-track here. I would avoid using the not-a-pipe
>> > operator
>> > within functions or packages in general. It is great for interactive
>> > use,
>> > but it does make debugging and hence long-term maintenance of functions
>> > harder. There are two reasons for this. First, it hides intermediate
>> > results, and second, it adds several layers to the call stack making the
>> > output of functions like traceback() harder to interpret. I have
>> > documented
>> > a simple example here: https://github.com/chriscardillo/norris/issues/1
>> > (scroll down a bit).
>> >
>> > Regarding learning about quosures and so on. If the literal names of
>> > data
>> > frames are known, you could consider replacing
>> >
>> > some_var <-   next_data_frame %>% dplyr::select(-amount,...
>> >
>> > with something simpler like
>> >
>> > some_var <- next_data_frame[ names(next_data_frame) != c("amount", ... )
>> > ]
>> >
>> > which might also save you some dependencies.
>> >
>> >
>> >
>> >
>> > Hope this helps,
>> > Best,
>> > Mark
>> >
>> >
>> >
>> > Op di 17 jul. 2018 om 11:28 schreef Michael Hannon
>> > <jmhannon.ucdavis at gmail.com>:
>> >>
>> >> Thanks to John and Zhian for their recent and informative comments.
>> >>
>> >> Regarding check() and NSE: the moral seems to be that a little
>> >> learning is a dangerous thing.  I'm off to try to bring quosure to
>> >> this issue.
>> >>
>> >> -- Mike
>> >>
>> >>
>> >> On Mon, Jul 16, 2018 at 2:38 PM, Zhian Kamvar <zkamvar at gmail.com>
>> >> wrote:
>> >> > Using dplyr like that is for exploratory data analysis. You'll want
>> >> > to
>> >> > refer
>> >> > to dplyr's "Programming with dplyr" vignette for using dplyr in a
>> >> > package:
>> >> >
>> >> >
>> >> > https://cran.r-project.org/web/packages/dplyr/vignettes/programming.html
>> >> >
>> >> > Hope that helps.
>> >> >
>> >> > On Jul 16, 2018, at 22:13 , Michael Hannon
>> >> > <jmhannon.ucdavis at gmail.com>
>> >> > wrote:
>> >> >
>> >> > Thanks, Georgi.  I've changed my approach and now do what I gather is
>> >> > recommended practice: put all external package names into the
>> >> > "Imports" section of the DESCRIPTION file and then use the
>> >> > fully-qualified names for functions from those packages, as:
>> >> >
>> >> >    dplyr::select()
>> >> >
>> >> > The "check" operation is still not entirely "happy" with me, but it
>> >> > doesn't flag any errors, and the package builds and runs.
>> >> >
>> >> > BTW, one source of "complaints" from "check()" is evidently the use
>> >> > of
>> >> > NSE in the tidyverse functions.  For instance, the line:
>> >> >
>> >> >    next_data_frame %>% dplyr::select(-amount,
>> >> >
>> >> > generates the message:
>> >> >
>> >> >    standardize_format: no visible binding for global variable
>> >> > ?amount?
>> >> >
>> >> > where, of course, "amount" is one of the column headings in
>> >> > "next_data_frame".  There seems to be no harm done by this, and I
>> >> > plan
>> >> > to ignore such messages, but if there's some additional wisdom that
>> >> > applies here, I'd be happy to receive it.
>> >> >
>> >> > -- Mike
>> >> >
>> >> >
>> >> > On Sun, Jul 15, 2018 at 12:05 AM, Georgi Boshnakov
>> >> > <georgi.boshnakov at manchester.ac.uk> wrote:
>> >> >
>> >> >
>> >> > It seems that the R session used by 'check' doesn't look in the
>> >> > library
>> >> > used
>> >> > by your interactive session. This discrepancy may happen since the
>> >> > check
>> >> > tools do not load the same Renviron files as interactive sessions.
>> >> > This
>> >> > may
>> >> > result in different libraries in interactive and 'check' sessions.
>> >> > See
>> >> > ?Startup, especially section Note.
>> >> > It is difficult to give more specific advice without details of your
>> >> > setup.
>> >> >
>> >> >
>> >> > Hope this helps,
>> >> > Georgi Boshnakov
>> >> >
>> >> >
>> >> > ________________________________________
>> >> > From: R-package-devel [r-package-devel-bounces at r-project.org] on
>> >> > behalf
>> >> > of
>> >> > Michael Hannon [jmhannon.ucdavis at gmail.com]
>> >> > Sent: 15 July 2018 02:13
>> >> > To: r-package-devel at r-project.org
>> >> > Subject: [R-pkg-devel] Package builds, installs, and runs but does
>> >> > not
>> >> > pass
>> >> > devtools::check()
>> >> >
>> >> > Greetings.  I'm working on a small package, and I'm using the
>> >> > devtools
>> >> > functions to create, build, etc., the package.
>> >> >
>> >> > As indicated in the subject line, I get no errors when I do:
>> >> >
>> >> > build()
>> >> > install()
>> >> >
>> >> >
>> >> > When I run a separate R session and load the package, i.e.,
>> >> >
>> >> > library(my_pkg)
>> >> >
>> >> >
>> >> > the package loads without error, and the two exported functions
>> >> > appear
>> >> > to work as advertised.
>> >> >
>> >> > OTOH, if I include devtools::check() in the construction of the
>> >> > package, I consistently get an error:
>> >> >
>> >> >    * installing *source* package ?my_pkg? ...
>> >> >    ** R
>> >> >    ** preparing package for lazy loading
>> >> >    Error in loadNamespace(from, lib.loc = .library) :
>> >> >      there is no package called ?dplyr?
>> >> >    Error : unable to load R code in package 'my_pkg'
>> >> >
>> >> > Clearly there *is* a package called "dplyr" on my system (see the
>> >> > session info below, for instance).  And, as I've mentioned, the code
>> >> > *does* run, and I can watch it successfully reading CSV files.
>> >> >
>> >> > Here's the relevant part of my DESCRIPTION file:
>> >> >
>> >> >    Depends: R (>= 3.4.4)
>> >> >    Imports: readr,
>> >> >            dplyr,
>> >> >            ggplot2,
>> >> >            purrr,
>> >> >            magrittr
>> >> >
>> >> > I suspect the problem may be that I'm misunderstanding something
>> >> > about
>> >> > the `import::from()` function, which I'm using for the first time to
>> >> > load required functions into my code.  In each of the three files
>> >> > that
>> >> > use dplyr I have the line:
>> >> >
>> >> >    import::from(dplyr, mutate, filter, rename, select, setdiff,
>> >> > slice,
>> >> > "%>%")
>> >> >
>> >> > I've tried:
>> >> >
>> >> >    (1) putting that line in just one of the files (the lexically
>> >> > first
>> >> > one)
>> >> >    (2) including different subsets of dplyr functions, as needed, in
>> >> > the various files
>> >> >
>> >> > Needless to say, I haven't seen any improvement with any of the above
>> >> > (or any of the other thrashing I've done).
>> >> >
>> >> > If you can point me in the right direction, I'd appreciate it.
>> >> > Thanks.
>> >> >
>> >> > -- Mike
>> >> >
>> >> >
>> >> > session_info()
>> >> >
>> >> > Session info
>> >> > ------------------------------------------------------------------
>> >> > setting  value
>> >> > version  R version 3.4.4 (2018-03-15)
>> >> > system   x86_64, linux-gnu
>> >> > ui       X11
>> >> > language en_US
>> >> > collate  en_US.UTF-8
>> >> > tz       America/Los_Angeles
>> >> > date     2018-07-14
>> >> >
>> >> > Packages
>> >> >
>> >> > ----------------------------------------------------------------------
>> >> > package    * version date       source
>> >> > assertthat   0.2.0   2017-04-11 CRAN (R 3.3.3)
>> >> > base       * 3.4.4   2018-03-16 local
>> >> > bindr        0.1.1   2018-03-13 CRAN (R 3.4.3)
>> >> > bindrcpp     0.2.2   2018-03-29 CRAN (R 3.4.4)
>> >> > compiler     3.4.4   2018-03-16 local
>> >> > crayon       1.3.4   2017-09-16 CRAN (R 3.4.1)
>> >> > datasets   * 3.4.4   2018-03-16 local
>> >> > devtools   * 1.13.6  2018-06-27 CRAN (R 3.4.4)
>> >> > digest       0.6.15  2018-01-28 CRAN (R 3.4.3)
>> >> > dplyr      * 0.7.6   2018-06-29 CRAN (R 3.4.4)
>> >> > glue         1.2.0   2017-10-29 CRAN (R 3.4.2)
>> >> > graphics   * 3.4.4   2018-03-16 local
>> >> > grDevices  * 3.4.4   2018-03-16 local
>> >> > magrittr     1.5     2014-11-22 CRAN (R 3.2.2)
>> >> > memoise      1.1.0   2017-04-21 CRAN (R 3.3.3)
>> >> > methods    * 3.4.4   2018-03-16 local
>> >> > pillar       1.3.0   2018-07-14 CRAN (R 3.4.4)
>> >> > pkgconfig    2.0.1   2017-03-21 CRAN (R 3.4.0)
>> >> > purrr        0.2.5   2018-05-29 CRAN (R 3.4.4)
>> >> > R6           2.2.2   2017-06-17 CRAN (R 3.4.0)
>> >> > Rcpp         0.12.17 2018-05-18 CRAN (R 3.4.4)
>> >> > rlang        0.2.1   2018-05-30 CRAN (R 3.4.4)
>> >> > stats      * 3.4.4   2018-03-16 local
>> >> > tibble       1.4.2   2018-01-22 CRAN (R 3.4.3)
>> >> > tidyselect   0.2.4   2018-02-26 CRAN (R 3.4.3)
>> >> > utils      * 3.4.4   2018-03-16 local
>> >> > withr        2.1.2   2018-03-15 CRAN (R 3.4.3)
>> >> >
>> >> >
>> >> >
>> >> > ______________________________________________
>> >> > R-package-devel at r-project.org mailing list
>> >> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> >> >
>> >> >
>> >> > ______________________________________________
>> >> > R-package-devel at r-project.org mailing list
>> >> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> >> >
>> >> >
>> >>
>> >> ______________________________________________
>> >> R-package-devel at r-project.org mailing list
>> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From tr@xpl@yer @ending from gm@il@com  Tue Jul 24 16:46:13 2018
From: tr@xpl@yer @ending from gm@il@com (=?UTF-8?Q?Martin_M=C3=B8ller_Skarbiniks_Pedersen?=)
Date: Tue, 24 Jul 2018 16:46:13 +0200
Subject: [R-pkg-devel] Correct way to set title for vignette?
Message-ID: <CAGAA5beEAV47WxMZ+XJ6+JPZARBCOqW21pmytscLWr-PL_6mgQ@mail.gmail.com>

Hi,

  Some vignettes on Cran has the title: "Title of your vignette"
  Eg.  https://cran.r-project.org/package=ggpval

The source for the vignette at
"https://raw.githubusercontent.com/s6juncheng/ggpval/master/vignettes/ggpval.Rmd

but is this the correct file to set the title?
I think ggpval.Rmd is generated from another file?

Regards
Martin M. S. Pedersen


From edd @ending from debi@n@org  Tue Jul 24 19:02:25 2018
From: edd @ending from debi@n@org (Dirk Eddelbuettel)
Date: Tue, 24 Jul 2018 12:02:25 -0500
Subject: [R-pkg-devel] Correct way to set title for vignette?
In-Reply-To: <CAGAA5beEAV47WxMZ+XJ6+JPZARBCOqW21pmytscLWr-PL_6mgQ@mail.gmail.com>
References: <CAGAA5beEAV47WxMZ+XJ6+JPZARBCOqW21pmytscLWr-PL_6mgQ@mail.gmail.com>
Message-ID: <23383.23457.926225.803482@rob.eddelbuettel.com>


On 24 July 2018 at 16:46, Martin M?ller Skarbiniks Pedersen wrote:
| Hi,
| 
|   Some vignettes on Cran has the title: "Title of your vignette"
|   Eg.  https://cran.r-project.org/package=ggpval
| 
| The source for the vignette at
| "https://raw.githubusercontent.com/s6juncheng/ggpval/master/vignettes/ggpval.Rmd
| 
| but is this the correct file to set the title?
| I think ggpval.Rmd is generated from another file?

It is the 'VignetteIndexEntry' line:

  ---
  title: "ggpval user guide"
  author: "Jun Cheng"
  date: "`r Sys.Date()`"
  output: rmarkdown::html_vignette
  vignette: >
    %\VignetteEngine{knitr::knitr}
    %\VignetteIndexEntry{Title of your vignette}
    %\usepackage[UTF-8]{inputenc}
  ---

Just put 'ggpval User Guide' (or something like it) there.

Hth, Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From murdoch@dunc@n @ending from gm@il@com  Wed Jul 25 01:50:12 2018
From: murdoch@dunc@n @ending from gm@il@com (Duncan Murdoch)
Date: Tue, 24 Jul 2018 19:50:12 -0400
Subject: [R-pkg-devel] Correct way to set title for vignette?
In-Reply-To: <CAGAA5beEAV47WxMZ+XJ6+JPZARBCOqW21pmytscLWr-PL_6mgQ@mail.gmail.com>
References: <CAGAA5beEAV47WxMZ+XJ6+JPZARBCOqW21pmytscLWr-PL_6mgQ@mail.gmail.com>
Message-ID: <c55c215d-173a-385c-0724-e50bd1a16e2f@gmail.com>

On 24/07/2018 10:46 AM, Martin M?ller Skarbiniks Pedersen wrote:
> Hi,
> 
>    Some vignettes on Cran has the title: "Title of your vignette"
>    Eg.  https://cran.r-project.org/package=ggpval
> 
> The source for the vignette at
> "https://raw.githubusercontent.com/s6juncheng/ggpval/master/vignettes/ggpval.Rmd
> 
> but is this the correct file to set the title?
> I think ggpval.Rmd is generated from another file?

No, .Rmd files are one possible type of vignette source file.

Duncan Murdoch


From beggle@ton @ending from rti@org  Wed Jul 25 03:39:45 2018
From: beggle@ton @ending from rti@org (Eggleston, Barry)
Date: Wed, 25 Jul 2018 01:39:45 +0000
Subject: [R-pkg-devel] Get an empty note for "checking DESCRIPTION
 meta-information" when I run devtools::build_win()
Message-ID: <BN7PR07MB510859E00BFA7F33BB7AB18AC9540@BN7PR07MB5108.namprd07.prod.outlook.com>

I am working through my first package submission.  When I checked my package using devtools::build_win(), I got no errors and two notes.  One note is simply the expected note that my package is a new submission.  My second note involves DESCRIPTION meta-information, but nothing is printed so I don't know what to focus on.  I have copied the important parts of my 00check.log from CRAN below for context.  What areas of my DESCRIPTION file might create such an empty note?  Thanks in advance for any help you might give me.

* checking CRAN incoming feasibility ... NOTE
Maintainer: 'Barry Eggleston <beggleston at rti.org<mailto:beggleston at rti.org>>'

New submission
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking whether package 'BayesCTDesign' can be installed ... OK
* checking installed package size ... OK
* checking package directory ... OK
* checking DESCRIPTION meta-information ... NOTE

* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* loading checks for arch 'i386'
** checking whether the package can be loaded ... OK
** checking whether the package can be loaded with stated dependencies ... OK
** checking whether the package can be unloaded cleanly ... OK
** checking whether the namespace can be loaded with stated dependencies ... OK
** checking whether the namespace can be unloaded cleanly ... OK
** checking loading without being on the library search path ... OK
** checking use of S3 registration ... OK
* loading checks for arch 'x64'
** checking whether the package can be loaded ... OK
** checking whether the package can be loaded with stated dependencies ... OK
** checking whether the package can be unloaded cleanly ... OK
** checking whether the namespace can be loaded with stated dependencies ... OK
** checking whether the namespace can be unloaded cleanly ... OK
** checking loading without being on the library search path ... OK
** checking use of S3 registration ... OK
* checking dependencies in R code ... OK
* checking S3 generic/method consistency ... OK
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... [41s] OK
* checking Rd files ... OK
* checking Rd metadata ... OK
* checking Rd line widths ... OK
* checking Rd cross-references ... OK
* checking for missing documentation entries ... OK
* checking for code/documentation mismatches ... OK
* checking Rd \usage sections ... OK
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking examples ...
** running examples for arch 'i386' ... [19s] OK
** running examples for arch 'x64' ... [22s] OK
* checking PDF version of manual ... OK
* DONE
Status: 2 NOTEs

Barry


	[[alternative HTML version deleted]]


From hugh@p@r@on@ge @ending from gm@il@com  Wed Jul 25 04:12:25 2018
From: hugh@p@r@on@ge @ending from gm@il@com (Hugh Parsonage)
Date: Wed, 25 Jul 2018 12:12:25 +1000
Subject: [R-pkg-devel] Get an empty note for "checking DESCRIPTION
 meta-information" when I run devtools::build_win()
In-Reply-To: <BN7PR07MB510859E00BFA7F33BB7AB18AC9540@BN7PR07MB5108.namprd07.prod.outlook.com>
References: <BN7PR07MB510859E00BFA7F33BB7AB18AC9540@BN7PR07MB5108.namprd07.prod.outlook.com>
Message-ID: <CAJmOi+MK7TcL0ujKQKOdQS6xY36WZCfXbmRWwSqFnwoVO55LHQ@mail.gmail.com>

Thank you. Could you provide the contents of DESCRIPTION too? That might
provide the richest clue. If you have a link to an online copy of the
package that could be helpful too.

On Wed, 25 Jul 2018 at 12:01 Eggleston, Barry <beggleston at rti.org> wrote:

> I am working through my first package submission.  When I checked my
> package using devtools::build_win(), I got no errors and two notes.  One
> note is simply the expected note that my package is a new submission.  My
> second note involves DESCRIPTION meta-information, but nothing is printed
> so I don't know what to focus on.  I have copied the important parts of my
> 00check.log from CRAN below for context.  What areas of my DESCRIPTION file
> might create such an empty note?  Thanks in advance for any help you might
> give me.
>
> * checking CRAN incoming feasibility ... NOTE
> Maintainer: 'Barry Eggleston <beggleston at rti.org<mailto:beggleston at rti.org
> >>'
>
> New submission
> * checking package namespace information ... OK
> * checking package dependencies ... OK
> * checking if this is a source package ... OK
> * checking if there is a namespace ... OK
> * checking for hidden files and directories ... OK
> * checking for portable file names ... OK
> * checking whether package 'BayesCTDesign' can be installed ... OK
> * checking installed package size ... OK
> * checking package directory ... OK
> * checking DESCRIPTION meta-information ... NOTE
>
> * checking top-level files ... OK
> * checking for left-over files ... OK
> * checking index information ... OK
> * checking package subdirectories ... OK
> * checking R files for non-ASCII characters ... OK
> * checking R files for syntax errors ... OK
> * loading checks for arch 'i386'
> ** checking whether the package can be loaded ... OK
> ** checking whether the package can be loaded with stated dependencies ...
> OK
> ** checking whether the package can be unloaded cleanly ... OK
> ** checking whether the namespace can be loaded with stated dependencies
> ... OK
> ** checking whether the namespace can be unloaded cleanly ... OK
> ** checking loading without being on the library search path ... OK
> ** checking use of S3 registration ... OK
> * loading checks for arch 'x64'
> ** checking whether the package can be loaded ... OK
> ** checking whether the package can be loaded with stated dependencies ...
> OK
> ** checking whether the package can be unloaded cleanly ... OK
> ** checking whether the namespace can be loaded with stated dependencies
> ... OK
> ** checking whether the namespace can be unloaded cleanly ... OK
> ** checking loading without being on the library search path ... OK
> ** checking use of S3 registration ... OK
> * checking dependencies in R code ... OK
> * checking S3 generic/method consistency ... OK
> * checking replacement functions ... OK
> * checking foreign function calls ... OK
> * checking R code for possible problems ... [41s] OK
> * checking Rd files ... OK
> * checking Rd metadata ... OK
> * checking Rd line widths ... OK
> * checking Rd cross-references ... OK
> * checking for missing documentation entries ... OK
> * checking for code/documentation mismatches ... OK
> * checking Rd \usage sections ... OK
> * checking Rd contents ... OK
> * checking for unstated dependencies in examples ... OK
> * checking examples ...
> ** running examples for arch 'i386' ... [19s] OK
> ** running examples for arch 'x64' ... [22s] OK
> * checking PDF version of manual ... OK
> * DONE
> Status: 2 NOTEs
>
> Barry
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From beggle@ton @ending from rti@org  Wed Jul 25 15:00:35 2018
From: beggle@ton @ending from rti@org (Eggleston, Barry)
Date: Wed, 25 Jul 2018 13:00:35 +0000
Subject: [R-pkg-devel] Get an empty note for "checking DESCRIPTION
 meta-information" when I run devtools::build_win()
In-Reply-To: <CAJmOi+MK7TcL0ujKQKOdQS6xY36WZCfXbmRWwSqFnwoVO55LHQ@mail.gmail.com>
References: <BN7PR07MB510859E00BFA7F33BB7AB18AC9540@BN7PR07MB5108.namprd07.prod.outlook.com>
 <CAJmOi+MK7TcL0ujKQKOdQS6xY36WZCfXbmRWwSqFnwoVO55LHQ@mail.gmail.com>
Message-ID: <BN7PR07MB51081CD6E2C0F060111DD3C2C9540@BN7PR07MB5108.namprd07.prod.outlook.com>

Below is a copy of my DESCRIPTION file:

Package: BayesCTDesign
Type: Package
Title: Two Arm Bayesian Clinical Trial Design with and Without Historical Control Data
Version: 1.0.0
Authors at R: c(
    person("Barry", "Eggleston", email = "beggleston at rti.org<mailto:beggleston at rti.org>", role = c("cre", "aut")),
               person("Doug", "Wilson", email = "doug.roy.wilson at gmail.com<mailto:doug.roy.wilson at gmail.com>", role = c("aut")),
               person("Becky", "McNeil", email = "rmcneil at rti.org<mailto:rmcneil at rti.org>", role = c("aut")),
    person("Joseph", "Ibrahim", email = "jibrahim at email.unc.edu<mailto:jibrahim at email.unc.edu>", role = c("aut")),
               person("Diane", "Catellier", email = "dcatellier at rti.org<mailto:dcatellier at rti.org>", role = c("fnd", "rth")))
Maintainer: Barry Eggleston <beggleston at rti.org<mailto:beggleston at rti.org>>
Description: A set of functions to help clinical trial researchers calculate power and sample size for two-arm Bayesian randomized clinical trials that do or do not incorporate historical control data.  At some point during the design process, a clinical trial researcher who is designing a basic two-arm Bayesian randomized clinical trial needs to make decisions about power and sample size within the context of hypothesized treatment effects.  Through simulation, the \code{simple_sim()} function will estimate power and other user specified clinical trial characteristics at user specified sample sizes given user defined scenarios about treatment effect,control group characteristics, and outcome.  If the clinical trial researcher has access to historical control data, then the researcher can design a two-arm Bayesian randomized clinical trial that incorporates the historical data.  In such a case, the researcher needs to work through the potential consequences of historical and randomized control differences on trial characteristics, in addition to working through issues regarding power in the context of sample size, treatment effect size, and outcome.  If a researcher designs a clinical trial that will incorporate historical control data, the researcher needs the randomized controls to be from the same population as the historical controls.  What if this is not the case when the designed trial is implemented?  During the design phase, the researcher needs to investigate the negative effects of possible historic/randomized control differences on power, type one error, and other trial characteristics.  Using this information, the researcher should design the trial to mitigate these negative effects.  Through simulation, the \code{historic_sim()} function will estimate power and other user specified clinical trial characteristics at user specified sample sizes given user defined scenarios about historical and randomized control differences as well as treatment effects and outcomes.  The results from \code{historic_sim()} and \code{simple_sim()} can be printed with \code{print_table()} and graphed with \code{plot_table()} methods.  Outcomes considered are Gaussian, Poisson, Bernoulli, Lognormal, Weibull, and Piecewise Exponential.
Depends: R (>= 3.5.0)
License: GPL-3
Encoding: UTF-8
LazyData: true
Imports: eha (>= 2.5.1),
    ggplot2 (>= 2.2.1),
    survival (>= 2.41-3),
    reshape2 (>= 1.4.3),
               stats (>= 3.5.0)
RoxygenNote: 6.0.1


From: Hugh Parsonage <hugh.parsonage at gmail.com>
Sent: Tuesday, July 24, 2018 10:12 PM
To: Eggleston, Barry <beggleston at rti.org>
Cc: r-package-devel at r-project.org
Subject: Re: [R-pkg-devel] Get an empty note for "checking DESCRIPTION meta-information" when I run devtools::build_win()

Thank you. Could you provide the contents of DESCRIPTION too? That might provide the richest clue. If you have a link to an online copy of the package that could be helpful too.
On Wed, 25 Jul 2018 at 12:01 Eggleston, Barry <beggleston at rti.org<mailto:beggleston at rti.org>> wrote:
I am working through my first package submission.  When I checked my package using devtools::build_win(), I got no errors and two notes.  One note is simply the expected note that my package is a new submission.  My second note involves DESCRIPTION meta-information, but nothing is printed so I don't know what to focus on.  I have copied the important parts of my 00check.log from CRAN below for context.  What areas of my DESCRIPTION file might create such an empty note?  Thanks in advance for any help you might give me.

* checking CRAN incoming feasibility ... NOTE
Maintainer: 'Barry Eggleston <beggleston at rti.org<mailto:beggleston at rti.org><mailto:beggleston at rti.org<mailto:beggleston at rti.org>>>'

New submission
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking whether package 'BayesCTDesign' can be installed ... OK
* checking installed package size ... OK
* checking package directory ... OK
* checking DESCRIPTION meta-information ... NOTE

* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* loading checks for arch 'i386'
** checking whether the package can be loaded ... OK
** checking whether the package can be loaded with stated dependencies ... OK
** checking whether the package can be unloaded cleanly ... OK
** checking whether the namespace can be loaded with stated dependencies ... OK
** checking whether the namespace can be unloaded cleanly ... OK
** checking loading without being on the library search path ... OK
** checking use of S3 registration ... OK
* loading checks for arch 'x64'
** checking whether the package can be loaded ... OK
** checking whether the package can be loaded with stated dependencies ... OK
** checking whether the package can be unloaded cleanly ... OK
** checking whether the namespace can be loaded with stated dependencies ... OK
** checking whether the namespace can be unloaded cleanly ... OK
** checking loading without being on the library search path ... OK
** checking use of S3 registration ... OK
* checking dependencies in R code ... OK
* checking S3 generic/method consistency ... OK
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... [41s] OK
* checking Rd files ... OK
* checking Rd metadata ... OK
* checking Rd line widths ... OK
* checking Rd cross-references ... OK
* checking for missing documentation entries ... OK
* checking for code/documentation mismatches ... OK
* checking Rd \usage sections ... OK
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking examples ...
** running examples for arch 'i386' ... [19s] OK
** running examples for arch 'x64' ... [22s] OK
* checking PDF version of manual ... OK
* DONE
Status: 2 NOTEs

Barry


        [[alternative HTML version deleted]]

______________________________________________
R-package-devel at r-project.org<mailto:R-package-devel at r-project.org> mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel

	[[alternative HTML version deleted]]


From rom@n@flury @ending from m@th@uzh@ch  Wed Jul 25 15:42:05 2018
From: rom@n@flury @ending from m@th@uzh@ch (Roman Flury)
Date: Wed, 25 Jul 2018 15:42:05 +0200 (CEST)
Subject: [R-pkg-devel] Get an empty note for "checking DESCRIPTION
 meta-information" when I run devtools::build_win()
In-Reply-To: <BN7PR07MB51081CD6E2C0F060111DD3C2C9540@BN7PR07MB5108.namprd07.prod.outlook.com>
References: <BN7PR07MB510859E00BFA7F33BB7AB18AC9540@BN7PR07MB5108.namprd07.prod.outlook.com>
 <CAJmOi+MK7TcL0ujKQKOdQS6xY36WZCfXbmRWwSqFnwoVO55LHQ@mail.gmail.com>
 <BN7PR07MB51081CD6E2C0F060111DD3C2C9540@BN7PR07MB5108.namprd07.prod.outlook.com>
Message-ID: <1323307818.384351.1532526125657.JavaMail.zimbra@math.uzh.ch>

Hello,

after https://cran.r-project.org/doc/manuals/r-release/R-exts.html the ?Maintainer? field should give a single name followed by a valid (RFC 2822) email address in angle brackets.
but beggleston at rti.org<mailto:beggleston at rti.org> is not a valid RFC 2822 email address, you could check this for instance with https://proxy2.de/email-validation.php

you could omit the 'Maintainer' field, since a suitable ?Authors at R? field is given..
does this solve your problem?

best, Roman

----- Original Message -----
From: "Eggleston, Barry" <beggleston at rti.org>
To: "Hugh Parsonage" <hugh.parsonage at gmail.com>
Cc: r-package-devel at r-project.org
Sent: Wednesday, July 25, 2018 3:00:35 PM
Subject: Re: [R-pkg-devel] Get an empty note for "checking DESCRIPTION meta-information" when I run devtools::build_win()

Below is a copy of my DESCRIPTION file:

Package: BayesCTDesign
Type: Package
Title: Two Arm Bayesian Clinical Trial Design with and Without Historical Control Data
Version: 1.0.0
Authors at R: c(
    person("Barry", "Eggleston", email = "beggleston at rti.org<mailto:beggleston at rti.org>", role = c("cre", "aut")),
               person("Doug", "Wilson", email = "doug.roy.wilson at gmail.com<mailto:doug.roy.wilson at gmail.com>", role = c("aut")),
               person("Becky", "McNeil", email = "rmcneil at rti.org<mailto:rmcneil at rti.org>", role = c("aut")),
    person("Joseph", "Ibrahim", email = "jibrahim at email.unc.edu<mailto:jibrahim at email.unc.edu>", role = c("aut")),
               person("Diane", "Catellier", email = "dcatellier at rti.org<mailto:dcatellier at rti.org>", role = c("fnd", "rth")))
Maintainer: Barry Eggleston <beggleston at rti.org<mailto:beggleston at rti.org>>
Description: A set of functions to help clinical trial researchers calculate power and sample size for two-arm Bayesian randomized clinical trials that do or do not incorporate historical control data.  At some point during the design process, a clinical trial researcher who is designing a basic two-arm Bayesian randomized clinical trial needs to make decisions about power and sample size within the context of hypothesized treatment effects.  Through simulation, the \code{simple_sim()} function will estimate power and other user specified clinical trial characteristics at user specified sample sizes given user defined scenarios about treatment effect,control group characteristics, and outcome.  If the clinical trial researcher has access to historical control data, then the researcher can design a two-arm Bayesian randomized clinical trial that incorporates the historical data.  In such a case, the researcher needs to work through the potential consequences of historical and randomiz
 ed control differences on trial characteristics, in addition to working through issues regarding power in the context of sample size, treatment effect size, and outcome.  If a researcher designs a clinical trial that will incorporate historical control data, the researcher needs the randomized controls to be from the same population as the historical controls.  What if this is not the case when the designed trial is implemented?  During the design phase, the researcher needs to investigate the negative effects of possible historic/randomized control differences on power, type one error, and other trial characteristics.  Using this information, the researcher should design the trial to mitigate these negative effects.  Through simulation, the \code{historic_sim()} function will estimate power and other user specified clinical trial characteristics at user specified sample sizes given user defined scenarios about historical and randomized control differences as well as treatment effec
 ts and outcomes.  The results from \code{historic_sim()} and \code{simple_sim()} can be printed with \code{print_table()} and graphed with \code{plot_table()} methods.  Outcomes considered are Gaussian, Poisson, Bernoulli, Lognormal, Weibull, and Piecewise Exponential.
Depends: R (>= 3.5.0)
License: GPL-3
Encoding: UTF-8
LazyData: true
Imports: eha (>= 2.5.1),
    ggplot2 (>= 2.2.1),
    survival (>= 2.41-3),
    reshape2 (>= 1.4.3),
               stats (>= 3.5.0)
RoxygenNote: 6.0.1


From: Hugh Parsonage <hugh.parsonage at gmail.com>
Sent: Tuesday, July 24, 2018 10:12 PM
To: Eggleston, Barry <beggleston at rti.org>
Cc: r-package-devel at r-project.org
Subject: Re: [R-pkg-devel] Get an empty note for "checking DESCRIPTION meta-information" when I run devtools::build_win()

Thank you. Could you provide the contents of DESCRIPTION too? That might provide the richest clue. If you have a link to an online copy of the package that could be helpful too.
On Wed, 25 Jul 2018 at 12:01 Eggleston, Barry <beggleston at rti.org<mailto:beggleston at rti.org>> wrote:
I am working through my first package submission.  When I checked my package using devtools::build_win(), I got no errors and two notes.  One note is simply the expected note that my package is a new submission.  My second note involves DESCRIPTION meta-information, but nothing is printed so I don't know what to focus on.  I have copied the important parts of my 00check.log from CRAN below for context.  What areas of my DESCRIPTION file might create such an empty note?  Thanks in advance for any help you might give me.

* checking CRAN incoming feasibility ... NOTE
Maintainer: 'Barry Eggleston <beggleston at rti.org<mailto:beggleston at rti.org><mailto:beggleston at rti.org<mailto:beggleston at rti.org>>>'

New submission
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking whether package 'BayesCTDesign' can be installed ... OK
* checking installed package size ... OK
* checking package directory ... OK
* checking DESCRIPTION meta-information ... NOTE

* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* loading checks for arch 'i386'
** checking whether the package can be loaded ... OK
** checking whether the package can be loaded with stated dependencies ... OK
** checking whether the package can be unloaded cleanly ... OK
** checking whether the namespace can be loaded with stated dependencies ... OK
** checking whether the namespace can be unloaded cleanly ... OK
** checking loading without being on the library search path ... OK
** checking use of S3 registration ... OK
* loading checks for arch 'x64'
** checking whether the package can be loaded ... OK
** checking whether the package can be loaded with stated dependencies ... OK
** checking whether the package can be unloaded cleanly ... OK
** checking whether the namespace can be loaded with stated dependencies ... OK
** checking whether the namespace can be unloaded cleanly ... OK
** checking loading without being on the library search path ... OK
** checking use of S3 registration ... OK
* checking dependencies in R code ... OK
* checking S3 generic/method consistency ... OK
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... [41s] OK
* checking Rd files ... OK
* checking Rd metadata ... OK
* checking Rd line widths ... OK
* checking Rd cross-references ... OK
* checking for missing documentation entries ... OK
* checking for code/documentation mismatches ... OK
* checking Rd \usage sections ... OK
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking examples ...
** running examples for arch 'i386' ... [19s] OK
** running examples for arch 'x64' ... [22s] OK
* checking PDF version of manual ... OK
* DONE
Status: 2 NOTEs

Barry


        [[alternative HTML version deleted]]

______________________________________________
R-package-devel at r-project.org<mailto:R-package-devel at r-project.org> mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel

	[[alternative HTML version deleted]]

______________________________________________
R-package-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel


From beggle@ton @ending from rti@org  Wed Jul 25 16:21:45 2018
From: beggle@ton @ending from rti@org (Eggleston, Barry)
Date: Wed, 25 Jul 2018 14:21:45 +0000
Subject: [R-pkg-devel] Get an empty note for "checking DESCRIPTION
 meta-information" when I run devtools::build_win()
In-Reply-To: <1323307818.384351.1532526125657.JavaMail.zimbra@math.uzh.ch>
References: <BN7PR07MB510859E00BFA7F33BB7AB18AC9540@BN7PR07MB5108.namprd07.prod.outlook.com>
 <CAJmOi+MK7TcL0ujKQKOdQS6xY36WZCfXbmRWwSqFnwoVO55LHQ@mail.gmail.com>
 <BN7PR07MB51081CD6E2C0F060111DD3C2C9540@BN7PR07MB5108.namprd07.prod.outlook.com>
 <1323307818.384351.1532526125657.JavaMail.zimbra@math.uzh.ch>
Message-ID: <BN7PR07MB510804D29827CB99AA757C4DC9540@BN7PR07MB5108.namprd07.prod.outlook.com>

Roman,

Not sure why my emailer added all those <mailto:aaa at bbb.ccc> items, but none of them are in my original DESCRIPTION file.  So my Maintainer line, for example, simply reads Barry Eggleston <email address>, where email address is simply beggleston at rti.org.

Thanks for the observation,
Barry


-----Original Message-----
From: Roman Flury <roman.flury at math.uzh.ch> 
Sent: Wednesday, July 25, 2018 9:42 AM
To: Eggleston, Barry <beggleston at rti.org>
Cc: Hugh Parsonage <hugh.parsonage at gmail.com>; r-package-devel at r-project.org
Subject: Re: [R-pkg-devel] Get an empty note for "checking DESCRIPTION meta-information" when I run devtools::build_win()

Hello,

after https://cran.r-project.org/doc/manuals/r-release/R-exts.html the ?Maintainer? field should give a single name followed by a valid (RFC 2822) email address in angle brackets.
but beggleston at rti.org<mailto:beggleston at rti.org> is not a valid RFC 2822 email address, you could check this for instance with https://proxy2.de/email-validation.php

you could omit the 'Maintainer' field, since a suitable ?Authors at R? field is given..
does this solve your problem?

best, Roman

----- Original Message -----
From: "Eggleston, Barry" <beggleston at rti.org>
To: "Hugh Parsonage" <hugh.parsonage at gmail.com>
Cc: r-package-devel at r-project.org
Sent: Wednesday, July 25, 2018 3:00:35 PM
Subject: Re: [R-pkg-devel] Get an empty note for "checking DESCRIPTION meta-information" when I run devtools::build_win()

Below is a copy of my DESCRIPTION file:

Package: BayesCTDesign
Type: Package
Title: Two Arm Bayesian Clinical Trial Design with and Without Historical Control Data
Version: 1.0.0
Authors at R: c(
    person("Barry", "Eggleston", email = "beggleston at rti.org<mailto:beggleston at rti.org>", role = c("cre", "aut")),
               person("Doug", "Wilson", email = "doug.roy.wilson at gmail.com<mailto:doug.roy.wilson at gmail.com>", role = c("aut")),
               person("Becky", "McNeil", email = "rmcneil at rti.org<mailto:rmcneil at rti.org>", role = c("aut")),
    person("Joseph", "Ibrahim", email = "jibrahim at email.unc.edu<mailto:jibrahim at email.unc.edu>", role = c("aut")),
               person("Diane", "Catellier", email = "dcatellier at rti.org<mailto:dcatellier at rti.org>", role = c("fnd", "rth")))
Maintainer: Barry Eggleston <beggleston at rti.org<mailto:beggleston at rti.org>>
Description: A set of functions to help clinical trial researchers calculate power and sample size for two-arm Bayesian randomized clinical trials that do or do not incorporate historical control data.  At some point during the design process, a clinical trial researcher who is designing a basic two-arm Bayesian randomized clinical trial needs to make decisions about power and sample size within the context of hypothesized treatment effects.  Through simulation, the \code{simple_sim()} function will estimate power and other user specified clinical trial characteristics at user specified sample sizes given user defined scenarios about treatment effect,control group characteristics, and outcome.  If the clinical trial researcher has access to historical control data, then the researcher can design a two-arm Bayesian randomized clinical trial that incorporates the historical data.  In such a case, the researcher needs to work through the potential consequences of historical and randomiz  ed control differences on trial characteristics, in addition to working through issues regarding power in the context of sample size, treatment effect size, and outcome.  If a researcher designs a clinical trial that will incorporate historical control data, the researcher needs the randomized controls to be from the same population as the historical controls.  What if this is not the case when the designed trial is implemented?  During the design phase, the researcher needs to investigate the negative effects of possible historic/randomized control differences on power, type one error, and other trial characteristics.  Using this information, the researcher should design the trial to mitigate these negative effects.  Through simulation, the \code{historic_sim()} function will estimate power and other user specified clinical trial characteristics at user specified sample sizes given user defined scenarios about historical and randomized control differences as well as treatment effec  ts and outcomes.  The results from \code{historic_sim()} and \code{simple_sim()} can be printed with \code{print_table()} and graphed with \code{plot_table()} methods.  Outcomes considered are Gaussian, Poisson, Bernoulli, Lognormal, Weibull, and Piecewise Exponential.
Depends: R (>= 3.5.0)
License: GPL-3
Encoding: UTF-8
LazyData: true
Imports: eha (>= 2.5.1),
    ggplot2 (>= 2.2.1),
    survival (>= 2.41-3),
    reshape2 (>= 1.4.3),
               stats (>= 3.5.0)
RoxygenNote: 6.0.1


From: Hugh Parsonage <hugh.parsonage at gmail.com>
Sent: Tuesday, July 24, 2018 10:12 PM
To: Eggleston, Barry <beggleston at rti.org>
Cc: r-package-devel at r-project.org
Subject: Re: [R-pkg-devel] Get an empty note for "checking DESCRIPTION meta-information" when I run devtools::build_win()

Thank you. Could you provide the contents of DESCRIPTION too? That might provide the richest clue. If you have a link to an online copy of the package that could be helpful too.
On Wed, 25 Jul 2018 at 12:01 Eggleston, Barry <beggleston at rti.org<mailto:beggleston at rti.org>> wrote:
I am working through my first package submission.  When I checked my package using devtools::build_win(), I got no errors and two notes.  One note is simply the expected note that my package is a new submission.  My second note involves DESCRIPTION meta-information, but nothing is printed so I don't know what to focus on.  I have copied the important parts of my 00check.log from CRAN below for context.  What areas of my DESCRIPTION file might create such an empty note?  Thanks in advance for any help you might give me.

* checking CRAN incoming feasibility ... NOTE
Maintainer: 'Barry Eggleston <beggleston at rti.org<mailto:beggleston at rti.org><mailto:beggleston at rti.org<mailto:beggleston at rti.org>>>'

New submission
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking whether package 'BayesCTDesign' can be installed ... OK
* checking installed package size ... OK
* checking package directory ... OK
* checking DESCRIPTION meta-information ... NOTE

* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* loading checks for arch 'i386'
** checking whether the package can be loaded ... OK
** checking whether the package can be loaded with stated dependencies ... OK
** checking whether the package can be unloaded cleanly ... OK
** checking whether the namespace can be loaded with stated dependencies ... OK
** checking whether the namespace can be unloaded cleanly ... OK
** checking loading without being on the library search path ... OK
** checking use of S3 registration ... OK
* loading checks for arch 'x64'
** checking whether the package can be loaded ... OK
** checking whether the package can be loaded with stated dependencies ... OK
** checking whether the package can be unloaded cleanly ... OK
** checking whether the namespace can be loaded with stated dependencies ... OK
** checking whether the namespace can be unloaded cleanly ... OK
** checking loading without being on the library search path ... OK
** checking use of S3 registration ... OK
* checking dependencies in R code ... OK
* checking S3 generic/method consistency ... OK
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... [41s] OK
* checking Rd files ... OK
* checking Rd metadata ... OK
* checking Rd line widths ... OK
* checking Rd cross-references ... OK
* checking for missing documentation entries ... OK
* checking for code/documentation mismatches ... OK
* checking Rd \usage sections ... OK
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking examples ...
** running examples for arch 'i386' ... [19s] OK
** running examples for arch 'x64' ... [22s] OK
* checking PDF version of manual ... OK
* DONE
Status: 2 NOTEs

Barry


        [[alternative HTML version deleted]]

______________________________________________
R-package-devel at r-project.org<mailto:R-package-devel at r-project.org> mailing list https://stat.ethz.ch/mailman/listinfo/r-package-devel

	[[alternative HTML version deleted]]

______________________________________________
R-package-devel at r-project.org mailing list https://stat.ethz.ch/mailman/listinfo/r-package-devel

From rom@n@flury @ending from m@th@uzh@ch  Wed Jul 25 23:26:49 2018
From: rom@n@flury @ending from m@th@uzh@ch (Roman Flury)
Date: Wed, 25 Jul 2018 23:26:49 +0200
Subject: [R-pkg-devel] Get an empty note for "checking DESCRIPTION
 meta-information" when I run devtools::build_win()
In-Reply-To: <BN7PR07MB510804D29827CB99AA757C4DC9540@BN7PR07MB5108.namprd07.prod.outlook.com>
References: <BN7PR07MB510859E00BFA7F33BB7AB18AC9540@BN7PR07MB5108.namprd07.prod.outlook.com>
 <CAJmOi+MK7TcL0ujKQKOdQS6xY36WZCfXbmRWwSqFnwoVO55LHQ@mail.gmail.com>
 <BN7PR07MB51081CD6E2C0F060111DD3C2C9540@BN7PR07MB5108.namprd07.prod.outlook.com>
 <1323307818.384351.1532526125657.JavaMail.zimbra@math.uzh.ch>
 <BN7PR07MB510804D29827CB99AA757C4DC9540@BN7PR07MB5108.namprd07.prod.outlook.com>
Message-ID: <1a1f9d34-f2c3-f198-87ba-cf85465c6833@math.uzh.ch>

Barry,

sorry did not anticipate the behaving of the emailer. I could reproduce 
your error with the DESCRIPTION file below with a helloworld pkg

Package: test
Type: Package
Title: What the Package Does (Title Case)
Version: 0.1.0
Authors at R: c(person("Roman", "Flury", email = "roman.flury at math.uzh.ch", 
role = c("aut", "cre")),
 ???????????? person("Test", "person", email = "testmail at test.org", role 
= c("fnd", "rth")))
Description: Short description to describe this package.
Depends: R (>= 3.5.0)
License: GPL-3
Encoding: UTF-8
LazyData: true
Imports: eha (>= 2.5.1),
 ??? ggplot2 (>= 2.2.1),
 ??? survival (>= 2.41-3),
 ??? reshape2 (>= 1.4.3),
 ??? stats (>= 3.5.0)
RoxygenNote: 6.0.1

this passes R CMD check --as-cran on a unix system, but not on windwos. 
The problem seems to be the role "rth", which is also not listed in 
?person. What does this role stand for?

best, Roman

On 25.07.2018 16:21, Eggleston, Barry wrote:
> Roman,
>
> Not sure why my emailer added all those <mailto:aaa at bbb.ccc> items, but none of them are in my original DESCRIPTION file.  So my Maintainer line, for example, simply reads Barry Eggleston <email address>, where email address is simply beggleston at rti.org.
>
> Thanks for the observation,
> Barry
>
>
> -----Original Message-----
> From: Roman Flury <roman.flury at math.uzh.ch>
> Sent: Wednesday, July 25, 2018 9:42 AM
> To: Eggleston, Barry <beggleston at rti.org>
> Cc: Hugh Parsonage <hugh.parsonage at gmail.com>; r-package-devel at r-project.org
> Subject: Re: [R-pkg-devel] Get an empty note for "checking DESCRIPTION meta-information" when I run devtools::build_win()
>
> Hello,
>
> after https://cran.r-project.org/doc/manuals/r-release/R-exts.html the ?Maintainer? field should give a single name followed by a valid (RFC 2822) email address in angle brackets.
> but beggleston at rti.org<mailto:beggleston at rti.org> is not a valid RFC 2822 email address, you could check this for instance with https://proxy2.de/email-validation.php
>
> you could omit the 'Maintainer' field, since a suitable ?Authors at R? field is given..
> does this solve your problem?
>
> best, Roman
>
> ----- Original Message -----
> From: "Eggleston, Barry" <beggleston at rti.org>
> To: "Hugh Parsonage" <hugh.parsonage at gmail.com>
> Cc: r-package-devel at r-project.org
> Sent: Wednesday, July 25, 2018 3:00:35 PM
> Subject: Re: [R-pkg-devel] Get an empty note for "checking DESCRIPTION meta-information" when I run devtools::build_win()
>
> Below is a copy of my DESCRIPTION file:
>
> Package: BayesCTDesign
> Type: Package
> Title: Two Arm Bayesian Clinical Trial Design with and Without Historical Control Data
> Version: 1.0.0
> Authors at R: c(
>      person("Barry", "Eggleston", email = "beggleston at rti.org<mailto:beggleston at rti.org>", role = c("cre", "aut")),
>                 person("Doug", "Wilson", email = "doug.roy.wilson at gmail.com<mailto:doug.roy.wilson at gmail.com>", role = c("aut")),
>                 person("Becky", "McNeil", email = "rmcneil at rti.org<mailto:rmcneil at rti.org>", role = c("aut")),
>      person("Joseph", "Ibrahim", email = "jibrahim at email.unc.edu<mailto:jibrahim at email.unc.edu>", role = c("aut")),
>                 person("Diane", "Catellier", email = "dcatellier at rti.org<mailto:dcatellier at rti.org>", role = c("fnd", "rth")))
> Maintainer: Barry Eggleston <beggleston at rti.org<mailto:beggleston at rti.org>>
> Description: A set of functions to help clinical trial researchers calculate power and sample size for two-arm Bayesian randomized clinical trials that do or do not incorporate historical control data.  At some point during the design process, a clinical trial researcher who is designing a basic two-arm Bayesian randomized clinical trial needs to make decisions about power and sample size within the context of hypothesized treatment effects.  Through simulation, the \code{simple_sim()} function will estimate power and other user specified clinical trial characteristics at user specified sample sizes given user defined scenarios about treatment effect,control group characteristics, and outcome.  If the clinical trial researcher has access to historical control data, then the researcher can design a two-arm Bayesian randomized clinical trial that incorporates the historical data.  In such a case, the researcher needs to work through the potential consequences of historical and randomiz  ed control differences on trial characteristics, in addition to working through issues regarding power in the context of sample size, treatment effect size, and outcome.  If a researcher designs a clinical trial that will incorporate historical control data, the researcher needs the randomized controls to be from the same population as the historical controls.  What if this is not the case when the designed trial is implemented?  During the design phase, the researcher needs to investigate the negative effects of possible historic/randomized control differences on power, type one error, and other trial characteristics.  Using this information, the researcher should design the trial to mitigate these negative effects.  Through simulation, the \code{historic_sim()} function will estimate power and other user specified clinical trial characteristics at user specified sample sizes given user defined scenarios about historical and randomized control differences as well as treatment effec  ts and outcomes.  The results from \code{historic_sim()} and \code{simple_sim()} can be printed with \code{print_table()} and graphed with \code{plot_table()} methods.  Outcomes considered are Gaussian, Poisson, Bernoulli, Lognormal, Weibull, and Piecewise Exponential.
> Depends: R (>= 3.5.0)
> License: GPL-3
> Encoding: UTF-8
> LazyData: true
> Imports: eha (>= 2.5.1),
>      ggplot2 (>= 2.2.1),
>      survival (>= 2.41-3),
>      reshape2 (>= 1.4.3),
>                 stats (>= 3.5.0)
> RoxygenNote: 6.0.1
>
>
> From: Hugh Parsonage <hugh.parsonage at gmail.com>
> Sent: Tuesday, July 24, 2018 10:12 PM
> To: Eggleston, Barry <beggleston at rti.org>
> Cc: r-package-devel at r-project.org
> Subject: Re: [R-pkg-devel] Get an empty note for "checking DESCRIPTION meta-information" when I run devtools::build_win()
>
> Thank you. Could you provide the contents of DESCRIPTION too? That might provide the richest clue. If you have a link to an online copy of the package that could be helpful too.
> On Wed, 25 Jul 2018 at 12:01 Eggleston, Barry <beggleston at rti.org<mailto:beggleston at rti.org>> wrote:
> I am working through my first package submission.  When I checked my package using devtools::build_win(), I got no errors and two notes.  One note is simply the expected note that my package is a new submission.  My second note involves DESCRIPTION meta-information, but nothing is printed so I don't know what to focus on.  I have copied the important parts of my 00check.log from CRAN below for context.  What areas of my DESCRIPTION file might create such an empty note?  Thanks in advance for any help you might give me.
>
> * checking CRAN incoming feasibility ... NOTE
> Maintainer: 'Barry Eggleston <beggleston at rti.org<mailto:beggleston at rti.org><mailto:beggleston at rti.org<mailto:beggleston at rti.org>>>'
>
> New submission
> * checking package namespace information ... OK
> * checking package dependencies ... OK
> * checking if this is a source package ... OK
> * checking if there is a namespace ... OK
> * checking for hidden files and directories ... OK
> * checking for portable file names ... OK
> * checking whether package 'BayesCTDesign' can be installed ... OK
> * checking installed package size ... OK
> * checking package directory ... OK
> * checking DESCRIPTION meta-information ... NOTE
>
> * checking top-level files ... OK
> * checking for left-over files ... OK
> * checking index information ... OK
> * checking package subdirectories ... OK
> * checking R files for non-ASCII characters ... OK
> * checking R files for syntax errors ... OK
> * loading checks for arch 'i386'
> ** checking whether the package can be loaded ... OK
> ** checking whether the package can be loaded with stated dependencies ... OK
> ** checking whether the package can be unloaded cleanly ... OK
> ** checking whether the namespace can be loaded with stated dependencies ... OK
> ** checking whether the namespace can be unloaded cleanly ... OK
> ** checking loading without being on the library search path ... OK
> ** checking use of S3 registration ... OK
> * loading checks for arch 'x64'
> ** checking whether the package can be loaded ... OK
> ** checking whether the package can be loaded with stated dependencies ... OK
> ** checking whether the package can be unloaded cleanly ... OK
> ** checking whether the namespace can be loaded with stated dependencies ... OK
> ** checking whether the namespace can be unloaded cleanly ... OK
> ** checking loading without being on the library search path ... OK
> ** checking use of S3 registration ... OK
> * checking dependencies in R code ... OK
> * checking S3 generic/method consistency ... OK
> * checking replacement functions ... OK
> * checking foreign function calls ... OK
> * checking R code for possible problems ... [41s] OK
> * checking Rd files ... OK
> * checking Rd metadata ... OK
> * checking Rd line widths ... OK
> * checking Rd cross-references ... OK
> * checking for missing documentation entries ... OK
> * checking for code/documentation mismatches ... OK
> * checking Rd \usage sections ... OK
> * checking Rd contents ... OK
> * checking for unstated dependencies in examples ... OK
> * checking examples ...
> ** running examples for arch 'i386' ... [19s] OK
> ** running examples for arch 'x64' ... [22s] OK
> * checking PDF version of manual ... OK
> * DONE
> Status: 2 NOTEs
>
> Barry
>
>
>          [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org<mailto:R-package-devel at r-project.org> mailing list https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list https://stat.ethz.ch/mailman/listinfo/r-package-devel


From beggle@ton @ending from rti@org  Wed Jul 25 23:53:30 2018
From: beggle@ton @ending from rti@org (Eggleston, Barry)
Date: Wed, 25 Jul 2018 21:53:30 +0000
Subject: [R-pkg-devel] Get an empty note for "checking DESCRIPTION
 meta-information" when I run devtools::build_win()
In-Reply-To: <1a1f9d34-f2c3-f198-87ba-cf85465c6833@math.uzh.ch>
References: <BN7PR07MB510859E00BFA7F33BB7AB18AC9540@BN7PR07MB5108.namprd07.prod.outlook.com>
 <CAJmOi+MK7TcL0ujKQKOdQS6xY36WZCfXbmRWwSqFnwoVO55LHQ@mail.gmail.com>
 <BN7PR07MB51081CD6E2C0F060111DD3C2C9540@BN7PR07MB5108.namprd07.prod.outlook.com>
 <1323307818.384351.1532526125657.JavaMail.zimbra@math.uzh.ch>
 <BN7PR07MB510804D29827CB99AA757C4DC9540@BN7PR07MB5108.namprd07.prod.outlook.com>
 <1a1f9d34-f2c3-f198-87ba-cf85465c6833@math.uzh.ch>
Message-ID: <BN7PR07MB5108A6144DCE51D0EDEB36FEC9540@BN7PR07MB5108.namprd07.prod.outlook.com>

This is great news Roman.

The "rth" role stands for "Research team head", and I got it from the http://www.loc.gov/marc//relators/relaterm.html website.

This issue here is Diane Catellier provided the funds and management for us to develop this package.  I did not know about the person() function.  When I looked at the help page for person(), I see that I can use "fnd" for funder and that will define Diane's role sufficiently well.  I'll make the change and run through my checks again.

Thank you,
Barry

-----Original Message-----
From: Roman Flury <roman.flury at math.uzh.ch> 
Sent: Wednesday, July 25, 2018 5:27 PM
To: Eggleston, Barry <beggleston at rti.org>
Cc: Hugh Parsonage <hugh.parsonage at gmail.com>; r-package-devel at r-project.org
Subject: Re: [R-pkg-devel] Get an empty note for "checking DESCRIPTION meta-information" when I run devtools::build_win()

Barry,

sorry did not anticipate the behaving of the emailer. I could reproduce your error with the DESCRIPTION file below with a helloworld pkg

Package: test
Type: Package
Title: What the Package Does (Title Case)
Version: 0.1.0
Authors at R: c(person("Roman", "Flury", email = "roman.flury at math.uzh.ch", role = c("aut", "cre")),
 ???????????? person("Test", "person", email = "testmail at test.org", role = c("fnd", "rth")))
Description: Short description to describe this package.
Depends: R (>= 3.5.0)
License: GPL-3
Encoding: UTF-8
LazyData: true
Imports: eha (>= 2.5.1),
 ??? ggplot2 (>= 2.2.1),
 ??? survival (>= 2.41-3),
 ??? reshape2 (>= 1.4.3),
 ??? stats (>= 3.5.0)
RoxygenNote: 6.0.1

this passes R CMD check --as-cran on a unix system, but not on windwos. 
The problem seems to be the role "rth", which is also not listed in ?person. What does this role stand for?

best, Roman

On 25.07.2018 16:21, Eggleston, Barry wrote:
> Roman,
>
> Not sure why my emailer added all those <mailto:aaa at bbb.ccc> items, but none of them are in my original DESCRIPTION file.  So my Maintainer line, for example, simply reads Barry Eggleston <email address>, where email address is simply beggleston at rti.org.
>
> Thanks for the observation,
> Barry
>
>
> -----Original Message-----
> From: Roman Flury <roman.flury at math.uzh.ch>
> Sent: Wednesday, July 25, 2018 9:42 AM
> To: Eggleston, Barry <beggleston at rti.org>
> Cc: Hugh Parsonage <hugh.parsonage at gmail.com>; 
> r-package-devel at r-project.org
> Subject: Re: [R-pkg-devel] Get an empty note for "checking DESCRIPTION 
> meta-information" when I run devtools::build_win()
>
> Hello,
>
> after https://cran.r-project.org/doc/manuals/r-release/R-exts.html the ?Maintainer? field should give a single name followed by a valid (RFC 2822) email address in angle brackets.
> but beggleston at rti.org<mailto:beggleston at rti.org> is not a valid RFC 
> 2822 email address, you could check this for instance with 
> https://proxy2.de/email-validation.php
>
> you could omit the 'Maintainer' field, since a suitable ?Authors at R? field is given..
> does this solve your problem?
>
> best, Roman
>
> ----- Original Message -----
> From: "Eggleston, Barry" <beggleston at rti.org>
> To: "Hugh Parsonage" <hugh.parsonage at gmail.com>
> Cc: r-package-devel at r-project.org
> Sent: Wednesday, July 25, 2018 3:00:35 PM
> Subject: Re: [R-pkg-devel] Get an empty note for "checking DESCRIPTION 
> meta-information" when I run devtools::build_win()
>
> Below is a copy of my DESCRIPTION file:
>
> Package: BayesCTDesign
> Type: Package
> Title: Two Arm Bayesian Clinical Trial Design with and Without 
> Historical Control Data
> Version: 1.0.0
> Authors at R: c(
>      person("Barry", "Eggleston", email = "beggleston at rti.org<mailto:beggleston at rti.org>", role = c("cre", "aut")),
>                 person("Doug", "Wilson", email = "doug.roy.wilson at gmail.com<mailto:doug.roy.wilson at gmail.com>", role = c("aut")),
>                 person("Becky", "McNeil", email = "rmcneil at rti.org<mailto:rmcneil at rti.org>", role = c("aut")),
>      person("Joseph", "Ibrahim", email = "jibrahim at email.unc.edu<mailto:jibrahim at email.unc.edu>", role = c("aut")),
>                 person("Diane", "Catellier", email = 
> "dcatellier at rti.org<mailto:dcatellier at rti.org>", role = c("fnd", 
> "rth")))
> Maintainer: Barry Eggleston 
> <beggleston at rti.org<mailto:beggleston at rti.org>>
> Description: A set of functions to help clinical trial researchers calculate power and sample size for two-arm Bayesian randomized clinical trials that do or do not incorporate historical control data.  At some point during the design process, a clinical trial researcher who is designing a basic two-arm Bayesian randomized clinical trial needs to make decisions about power and sample size within the context of hypothesized treatment effects.  Through simulation, the \code{simple_sim()} function will estimate power and other user specified clinical trial characteristics at user specified sample sizes given user defined scenarios about treatment effect,control group characteristics, and outcome.  If the clinical trial researcher has access to historical control data, then the researcher can design a two-arm Bayesian randomized clinical trial that incorporates the historical data.  In such a case, the researcher needs to work through the potential consequences of historical and randomiz  ed control differences on trial characteristics, in addition to working through issues regarding power in the context of sample size, treatment effect size, and outcome.  If a researcher designs a clinical trial that will incorporate historical control data, the researcher needs the randomized controls to be from the same population as the historical controls.  What if this is not the case when the designed trial is implemented?  During the design phase, the researcher needs to investigate the negative effects of possible historic/randomized control differences on power, type one error, and other trial characteristics.  Using this information, the researcher should design the trial to mitigate these negative effects.  Through simulation, the \code{historic_sim()} function will estimate power and other user specified clinical trial characteristics at user specified sample sizes given user defined scenarios about historical and randomized control differences as well as treatment effec  ts and outcomes.  The results from \code{historic_sim()} and \code{simple_sim()} can be printed with \code{print_table()} and graphed with \code{plot_table()} methods.  Outcomes considered are Gaussian, Poisson, Bernoulli, Lognormal, Weibull, and Piecewise Exponential.
> Depends: R (>= 3.5.0)
> License: GPL-3
> Encoding: UTF-8
> LazyData: true
> Imports: eha (>= 2.5.1),
>      ggplot2 (>= 2.2.1),
>      survival (>= 2.41-3),
>      reshape2 (>= 1.4.3),
>                 stats (>= 3.5.0)
> RoxygenNote: 6.0.1
>
>
> From: Hugh Parsonage <hugh.parsonage at gmail.com>
> Sent: Tuesday, July 24, 2018 10:12 PM
> To: Eggleston, Barry <beggleston at rti.org>
> Cc: r-package-devel at r-project.org
> Subject: Re: [R-pkg-devel] Get an empty note for "checking DESCRIPTION 
> meta-information" when I run devtools::build_win()
>
> Thank you. Could you provide the contents of DESCRIPTION too? That might provide the richest clue. If you have a link to an online copy of the package that could be helpful too.
> On Wed, 25 Jul 2018 at 12:01 Eggleston, Barry <beggleston at rti.org<mailto:beggleston at rti.org>> wrote:
> I am working through my first package submission.  When I checked my package using devtools::build_win(), I got no errors and two notes.  One note is simply the expected note that my package is a new submission.  My second note involves DESCRIPTION meta-information, but nothing is printed so I don't know what to focus on.  I have copied the important parts of my 00check.log from CRAN below for context.  What areas of my DESCRIPTION file might create such an empty note?  Thanks in advance for any help you might give me.
>
> * checking CRAN incoming feasibility ... NOTE
> Maintainer: 'Barry Eggleston <beggleston at rti.org<mailto:beggleston at rti.org><mailto:beggleston at rti.org<mailto:beggleston at rti.org>>>'
>
> New submission
> * checking package namespace information ... OK
> * checking package dependencies ... OK
> * checking if this is a source package ... OK
> * checking if there is a namespace ... OK
> * checking for hidden files and directories ... OK
> * checking for portable file names ... OK
> * checking whether package 'BayesCTDesign' can be installed ... OK
> * checking installed package size ... OK
> * checking package directory ... OK
> * checking DESCRIPTION meta-information ... NOTE
>
> * checking top-level files ... OK
> * checking for left-over files ... OK
> * checking index information ... OK
> * checking package subdirectories ... OK
> * checking R files for non-ASCII characters ... OK
> * checking R files for syntax errors ... OK
> * loading checks for arch 'i386'
> ** checking whether the package can be loaded ... OK
> ** checking whether the package can be loaded with stated dependencies 
> ... OK
> ** checking whether the package can be unloaded cleanly ... OK
> ** checking whether the namespace can be loaded with stated 
> dependencies ... OK
> ** checking whether the namespace can be unloaded cleanly ... OK
> ** checking loading without being on the library search path ... OK
> ** checking use of S3 registration ... OK
> * loading checks for arch 'x64'
> ** checking whether the package can be loaded ... OK
> ** checking whether the package can be loaded with stated dependencies 
> ... OK
> ** checking whether the package can be unloaded cleanly ... OK
> ** checking whether the namespace can be loaded with stated 
> dependencies ... OK
> ** checking whether the namespace can be unloaded cleanly ... OK
> ** checking loading without being on the library search path ... OK
> ** checking use of S3 registration ... OK
> * checking dependencies in R code ... OK
> * checking S3 generic/method consistency ... OK
> * checking replacement functions ... OK
> * checking foreign function calls ... OK
> * checking R code for possible problems ... [41s] OK
> * checking Rd files ... OK
> * checking Rd metadata ... OK
> * checking Rd line widths ... OK
> * checking Rd cross-references ... OK
> * checking for missing documentation entries ... OK
> * checking for code/documentation mismatches ... OK
> * checking Rd \usage sections ... OK
> * checking Rd contents ... OK
> * checking for unstated dependencies in examples ... OK
> * checking examples ...
> ** running examples for arch 'i386' ... [19s] OK
> ** running examples for arch 'x64' ... [22s] OK
> * checking PDF version of manual ... OK
> * DONE
> Status: 2 NOTEs
>
> Barry
>
>
>          [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org<mailto:R-package-devel at r-project.org> 
> mailing list https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list 
> https://stat.ethz.ch/mailman/listinfo/r-package-devel



From m@echler @ending from @t@t@m@th@ethz@ch  Thu Jul 26 17:39:37 2018
From: m@echler @ending from @t@t@m@th@ethz@ch (Martin Maechler)
Date: Thu, 26 Jul 2018 17:39:37 +0200
Subject: [R-pkg-devel] Get an empty note for "checking DESCRIPTION
 meta-information" when I run devtools::build_win()
In-Reply-To: <BN7PR07MB5108A6144DCE51D0EDEB36FEC9540@BN7PR07MB5108.namprd07.prod.outlook.com>
References: <BN7PR07MB510859E00BFA7F33BB7AB18AC9540@BN7PR07MB5108.namprd07.prod.outlook.com>
 <CAJmOi+MK7TcL0ujKQKOdQS6xY36WZCfXbmRWwSqFnwoVO55LHQ@mail.gmail.com>
 <BN7PR07MB51081CD6E2C0F060111DD3C2C9540@BN7PR07MB5108.namprd07.prod.outlook.com>
 <1323307818.384351.1532526125657.JavaMail.zimbra@math.uzh.ch>
 <BN7PR07MB510804D29827CB99AA757C4DC9540@BN7PR07MB5108.namprd07.prod.outlook.com>
 <1a1f9d34-f2c3-f198-87ba-cf85465c6833@math.uzh.ch>
 <BN7PR07MB5108A6144DCE51D0EDEB36FEC9540@BN7PR07MB5108.namprd07.prod.outlook.com>
Message-ID: <23385.60217.295771.756523@stat.math.ethz.ch>

>>>>> Eggleston, Barry 
>>>>>     on Wed, 25 Jul 2018 21:53:30 +0000 writes:

    > This is great news Roman.
    > The "rth" role stands for "Research team head", and I got it from the http://www.loc.gov/marc//relators/relaterm.html website.

and it *IS*  a correct role also in R,  using non-API function
(non-API: do *not* use it in reproducible code, pkgs, etc !) :

  > utils:::.canonicalize_person_role("rth")
  [1] "rth"

tells us that this is a correct role,
whereas these are not :

> utils:::.canonicalize_person_role("Rth")
character(0)
Warning message:
In utils:::.canonicalize_person_role("Rth") :
  Invalid role specification: ?Rth?.
> utils:::.canonicalize_person_role("Foobar")
character(0)
Warning message:
In utils:::.canonicalize_person_role("Foobar") :
  Invalid role specification: ?Foobar?.
> 

So the bug is really in the Windows version of R that was
running for you when you've used devtools::build_win()   or in
build_win()  itself.

"rth" is a correct role and you should *NOT* replace it by
something less appropriate ...

Martin Maechler
ETH Zurich and R Core Team


    > This issue here is Diane Catellier provided the funds and management for us to develop this package.  I did not know about the person() function.  When I looked at the help page for person(), I see that I can use "fnd" for funder and that will define Diane's role sufficiently well.  I'll make the change and run through my checks again.

    > Thank you,
    > Barry

    > -----Original Message-----
    > From: Roman Flury <roman.flury at math.uzh.ch> 
    > Sent: Wednesday, July 25, 2018 5:27 PM
    > To: Eggleston, Barry <beggleston at rti.org>
    > Cc: Hugh Parsonage <hugh.parsonage at gmail.com>; r-package-devel at r-project.org
    > Subject: Re: [R-pkg-devel] Get an empty note for "checking DESCRIPTION meta-information" when I run devtools::build_win()

    > Barry,

    > sorry did not anticipate the behaving of the emailer. I could reproduce your error with the DESCRIPTION file below with a helloworld pkg

    > Package: test
    > Type: Package
    > Title: What the Package Does (Title Case)
    > Version: 0.1.0
    > Authors at R: c(person("Roman", "Flury", email = "roman.flury at math.uzh.ch", role = c("aut", "cre")),
    > ???????????? person("Test", "person", email = "testmail at test.org", role = c("fnd", "rth")))
    > Description: Short description to describe this package.
    > Depends: R (>= 3.5.0)
    > License: GPL-3
    > Encoding: UTF-8
    > LazyData: true
    > Imports: eha (>= 2.5.1),
    > ??? ggplot2 (>= 2.2.1),
    > ??? survival (>= 2.41-3),
    > ??? reshape2 (>= 1.4.3),
    > ??? stats (>= 3.5.0)
    > RoxygenNote: 6.0.1

    > this passes R CMD check --as-cran on a unix system, but not on windwos. 
    > The problem seems to be the role "rth", which is also not listed in ?person. What does this role stand for?

    > best, Roman

    > On 25.07.2018 16:21, Eggleston, Barry wrote:
    >> Roman,
    >> 
    >> Not sure why my emailer added all those <mailto:aaa at bbb.ccc> items, but none of them are in my original DESCRIPTION file.  So my Maintainer line, for example, simply reads Barry Eggleston <email address>, where email address is simply beggleston at rti.org.
    >> 
    >> Thanks for the observation,
    >> Barry
    >> 
    >> 
    >> -----Original Message-----
    >> From: Roman Flury <roman.flury at math.uzh.ch>
    >> Sent: Wednesday, July 25, 2018 9:42 AM
    >> To: Eggleston, Barry <beggleston at rti.org>
    >> Cc: Hugh Parsonage <hugh.parsonage at gmail.com>; 
    >> r-package-devel at r-project.org
    >> Subject: Re: [R-pkg-devel] Get an empty note for "checking DESCRIPTION 
    >> meta-information" when I run devtools::build_win()
    >> 
    >> Hello,
    >> 
    >> after https://cran.r-project.org/doc/manuals/r-release/R-exts.html the ?Maintainer? field should give a single name followed by a valid (RFC 2822) email address in angle brackets.
    >> but beggleston at rti.org<mailto:beggleston at rti.org> is not a valid RFC 
    >> 2822 email address, you could check this for instance with 
    >> https://proxy2.de/email-validation.php
    >> 
    >> you could omit the 'Maintainer' field, since a suitable ?Authors at R? field is given..
    >> does this solve your problem?
    >> 
    >> best, Roman
    >> 
    >> ----- Original Message -----
    >> From: "Eggleston, Barry" <beggleston at rti.org>
    >> To: "Hugh Parsonage" <hugh.parsonage at gmail.com>
    >> Cc: r-package-devel at r-project.org
    >> Sent: Wednesday, July 25, 2018 3:00:35 PM
    >> Subject: Re: [R-pkg-devel] Get an empty note for "checking DESCRIPTION 
    >> meta-information" when I run devtools::build_win()
    >> 
    >> Below is a copy of my DESCRIPTION file:
    >> 
    >> Package: BayesCTDesign
    >> Type: Package
    >> Title: Two Arm Bayesian Clinical Trial Design with and Without 
    >> Historical Control Data
    >> Version: 1.0.0
    >> Authors at R: c(
    >> person("Barry", "Eggleston", email = "beggleston at rti.org<mailto:beggleston at rti.org>", role = c("cre", "aut")),
    >> person("Doug", "Wilson", email = "doug.roy.wilson at gmail.com<mailto:doug.roy.wilson at gmail.com>", role = c("aut")),
    >> person("Becky", "McNeil", email = "rmcneil at rti.org<mailto:rmcneil at rti.org>", role = c("aut")),
    >> person("Joseph", "Ibrahim", email = "jibrahim at email.unc.edu<mailto:jibrahim at email.unc.edu>", role = c("aut")),
    >> person("Diane", "Catellier", email = 
    >> "dcatellier at rti.org<mailto:dcatellier at rti.org>", role = c("fnd", 
    >> "rth")))
    >> Maintainer: Barry Eggleston 
    >> <beggleston at rti.org<mailto:beggleston at rti.org>>
    >> Description: A set of functions to help clinical trial researchers calculate power and sample size for two-arm Bayesian randomized clinical trials that do or do not incorporate historical control data.  At some point during the design process, a clinical trial researcher who is designing a basic two-arm Bayesian randomized clinical trial needs to make decisions about power and sample size within the context of hypothesized treatment effects.  Through simulation, the \code{simple_sim()} function will estimate power and other user specified clinical trial characteristics at user specified sample sizes given user defined scenarios about treatment effect,control group characteristics, and outcome.  If the clinical trial researcher has access to historical control data, then the researcher can design a two-arm Bayesian randomized clinical trial that incorporates the historical data.  In such a case, the researcher needs to work through the potential consequences of historical and randomiz  ed control differences on trial characteristics, in addition to working through issues regarding power in the context of sample size, treatment effect size, and outcome.  If a researcher designs a clinical trial that will incorporate historical control data, the researcher needs the randomized controls to be from the same population as the historical controls.  What if this is not the case when the designed trial is implemented?  During the design phase, the researcher needs to investigate the negative effects of possible historic/randomized control differences on power, type one error, and other trial characteristics.  Using this information, the researcher should design the trial to mitigate these negative effects.  Through simulation, the \code{historic_sim()} function will estimate power and other user specified clinical trial characteristics at user specified sample sizes given user defined scenarios about historical and randomized control differences as well as treatment effec  ts and outcomes.  The results from \code{historic_sim()} and \code{simple_sim()} can be printed with \code{print_table()} and graphed with \code{plot_table()} methods.  Outcomes considered are Gaussian, Poisson, Bernoulli, Lognormal, Weibull, and Piecewise Exponential.
    >> Depends: R (>= 3.5.0)
    >> License: GPL-3
    >> Encoding: UTF-8
    >> LazyData: true
    >> Imports: eha (>= 2.5.1),
    >> ggplot2 (>= 2.2.1),
    >> survival (>= 2.41-3),
    >> reshape2 (>= 1.4.3),
    >> stats (>= 3.5.0)
    >> RoxygenNote: 6.0.1
    >> 
    >> 
    >> From: Hugh Parsonage <hugh.parsonage at gmail.com>
    >> Sent: Tuesday, July 24, 2018 10:12 PM
    >> To: Eggleston, Barry <beggleston at rti.org>
    >> Cc: r-package-devel at r-project.org
    >> Subject: Re: [R-pkg-devel] Get an empty note for "checking DESCRIPTION 
    >> meta-information" when I run devtools::build_win()
    >> 
    >> Thank you. Could you provide the contents of DESCRIPTION too? That might provide the richest clue. If you have a link to an online copy of the package that could be helpful too.
    >> On Wed, 25 Jul 2018 at 12:01 Eggleston, Barry <beggleston at rti.org<mailto:beggleston at rti.org>> wrote:
    >> I am working through my first package submission.  When I checked my package using devtools::build_win(), I got no errors and two notes.  One note is simply the expected note that my package is a new submission.  My second note involves DESCRIPTION meta-information, but nothing is printed so I don't know what to focus on.  I have copied the important parts of my 00check.log from CRAN below for context.  What areas of my DESCRIPTION file might create such an empty note?  Thanks in advance for any help you might give me.
    >> 
    >> * checking CRAN incoming feasibility ... NOTE
    >> Maintainer: 'Barry Eggleston <beggleston at rti.org<mailto:beggleston at rti.org><mailto:beggleston at rti.org<mailto:beggleston at rti.org>>>'
    >> 
    >> New submission
    >> * checking package namespace information ... OK
    >> * checking package dependencies ... OK
    >> * checking if this is a source package ... OK
    >> * checking if there is a namespace ... OK
    >> * checking for hidden files and directories ... OK
    >> * checking for portable file names ... OK
    >> * checking whether package 'BayesCTDesign' can be installed ... OK
    >> * checking installed package size ... OK
    >> * checking package directory ... OK
    >> * checking DESCRIPTION meta-information ... NOTE
    >> 
    >> * checking top-level files ... OK
    >> * checking for left-over files ... OK
    >> * checking index information ... OK
    >> * checking package subdirectories ... OK
    >> * checking R files for non-ASCII characters ... OK
    >> * checking R files for syntax errors ... OK
    >> * loading checks for arch 'i386'
    >> ** checking whether the package can be loaded ... OK
    >> ** checking whether the package can be loaded with stated dependencies 
    >> ... OK
    >> ** checking whether the package can be unloaded cleanly ... OK
    >> ** checking whether the namespace can be loaded with stated 
    >> dependencies ... OK
    >> ** checking whether the namespace can be unloaded cleanly ... OK
    >> ** checking loading without being on the library search path ... OK
    >> ** checking use of S3 registration ... OK
    >> * loading checks for arch 'x64'
    >> ** checking whether the package can be loaded ... OK
    >> ** checking whether the package can be loaded with stated dependencies 
    >> ... OK
    >> ** checking whether the package can be unloaded cleanly ... OK
    >> ** checking whether the namespace can be loaded with stated 
    >> dependencies ... OK
    >> ** checking whether the namespace can be unloaded cleanly ... OK
    >> ** checking loading without being on the library search path ... OK
    >> ** checking use of S3 registration ... OK
    >> * checking dependencies in R code ... OK
    >> * checking S3 generic/method consistency ... OK
    >> * checking replacement functions ... OK
    >> * checking foreign function calls ... OK
    >> * checking R code for possible problems ... [41s] OK
    >> * checking Rd files ... OK
    >> * checking Rd metadata ... OK
    >> * checking Rd line widths ... OK
    >> * checking Rd cross-references ... OK
    >> * checking for missing documentation entries ... OK
    >> * checking for code/documentation mismatches ... OK
    >> * checking Rd \usage sections ... OK
    >> * checking Rd contents ... OK
    >> * checking for unstated dependencies in examples ... OK
    >> * checking examples ...
    >> ** running examples for arch 'i386' ... [19s] OK
    >> ** running examples for arch 'x64' ... [22s] OK
    >> * checking PDF version of manual ... OK
    >> * DONE
    >> Status: 2 NOTEs
    >> 
    >> Barry
    >> 
    >> 
    >> [[alternative HTML version deleted]]
    >> 
    >> ______________________________________________
    >> R-package-devel at r-project.org<mailto:R-package-devel at r-project.org> 
    >> mailing list https://stat.ethz.ch/mailman/listinfo/r-package-devel
    >> 
    >> [[alternative HTML version deleted]]
    >> 
    >> ______________________________________________
    >> R-package-devel at r-project.org mailing list 
    >> https://stat.ethz.ch/mailman/listinfo/r-package-devel


    > ______________________________________________
    > R-package-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-package-devel

From br@dleyjeck @ending from gm@il@com  Thu Jul 26 21:11:30 2018
From: br@dleyjeck @ending from gm@il@com (Brad Eck)
Date: Thu, 26 Jul 2018 20:11:30 +0100
Subject: [R-pkg-devel] can't reproduce cran-pretest error
Message-ID: <CALECgPZ-7gs9zbkaMGw3Wr0rftfvi+9k1bNwhJPB4bmGbc5dCA@mail.gmail.com>

Dear list,

I'm having trouble reproducing errors from CRAN's pretests.

I have a package on CRAN called epanet2toolkit that provides R bindings
to a legacy simulation engine written in C.  So far I've released two
versions
to CRAN without trouble.  Now I'm making a third release, principally to
include
a citation for the package, but also to clean up warnings raised by new
compilers.

My latest submission fails the CRAN pretests for Debian with errors in the
examples and tests:
https://win-builder.r-project.org/incoming_pretest/
epanet2toolkit_0.3.0_20180726_102947/Debian/00check.log

For what it's worth, the package checks fine under R-3.4.4, R-3.5.0 and
R-devel
r74997 (2018-07-21) and r74923 (2018-06-20).

However, when I run the debian-r-devel checks locally (albeit in Docker) I
get
a couple of warnings, but no errors. Since I can't reproduce the error, it's
difficult to fix. See below the relevant lines of 00check.log:

* using log directory ?/pkg/epanet2toolkit.Rcheck?
* using R Under development (unstable) (2018-07-25 r75006)
* using platform: x86_64-pc-linux-gnu (64-bit)
* using session charset: UTF-8
* using option ?--as-cran?
* checking for file ?epanet2toolkit/DESCRIPTION? ... OK
* checking extension type ... Package
...
* checking whether package ?epanet2toolkit? can be installed ... WARNING
Found the following significant warnings:
  text.h:421:9: warning: ?        Kw        Kw      /d? directive writing
30 bytes into a region of size between 23 and 278 [-Wformat-overflow=]
See ?/pkg/epanet2toolkit.Rcheck/00install.out? for details.
...
* checking compilation flags used ... WARNING
Compilation used the following non-portable flag(s):
  ?-Wdate-time? ?-Werror=format-security? ?-Wformat?
* checking compiled code ... OK
* checking examples ... OK
* checking for unstated dependencies in ?tests? ... OK
* checking tests ... OK
  Running ?testthat.r?
* checking PDF version of manual ... OK
* DONE
Status: 2 WARNINGs, 1 NOTE


Thanks in advance for any insights.

	[[alternative HTML version deleted]]


From i@uc@r86 @ending from gm@il@com  Thu Jul 26 21:49:53 2018
From: i@uc@r86 @ending from gm@il@com (=?UTF-8?B?ScOxYWtpIMOaY2Fy?=)
Date: Thu, 26 Jul 2018 21:49:53 +0200
Subject: [R-pkg-devel] can't reproduce cran-pretest error
In-Reply-To: <CALECgPZ-7gs9zbkaMGw3Wr0rftfvi+9k1bNwhJPB4bmGbc5dCA@mail.gmail.com>
References: <CALECgPZ-7gs9zbkaMGw3Wr0rftfvi+9k1bNwhJPB4bmGbc5dCA@mail.gmail.com>
Message-ID: <CALEXWq237NpWUaf=oVirgnjn7xNyzZsYH8EKrGYMotGkC1jNmw@mail.gmail.com>

Hi, a couple of things,:

1) Have you checked the rchk report for possible issues?

https://raw.githubusercontent.com/kalibera/cran-checks/master/rchk/results/epanet2toolkit.out

2) Here there's a call to RENgettimeparam, which passes an empty
character buffer:

https://github.com/bradleyjeck/epanet2toolkit/blob/1e88c805ca294f980fc9133851eb5be8239086b5/R/times.r#L74

but then this function applies a sprintf over this empty buffer (!), here:

https://github.com/bradleyjeck/epanet2toolkit/blob/ef66748de5b357bfe6bbad4b3ba7e5f271baa797/src/Repanet2.c#L81

This more or less matches the error shown in the pre-test, i.e.:

"array over-run in .C("RENgettimeparam") in character argument 2, element 1"

Regards,
I?aki


El jue., 26 jul. 2018 a las 21:20, Brad Eck (<bradleyjeck at gmail.com>) escribi?:
>
> Dear list,
>
> I'm having trouble reproducing errors from CRAN's pretests.
>
> I have a package on CRAN called epanet2toolkit that provides R bindings
> to a legacy simulation engine written in C.  So far I've released two
> versions
> to CRAN without trouble.  Now I'm making a third release, principally to
> include
> a citation for the package, but also to clean up warnings raised by new
> compilers.
>
> My latest submission fails the CRAN pretests for Debian with errors in the
> examples and tests:
> https://win-builder.r-project.org/incoming_pretest/
> epanet2toolkit_0.3.0_20180726_102947/Debian/00check.log
>
> For what it's worth, the package checks fine under R-3.4.4, R-3.5.0 and
> R-devel
> r74997 (2018-07-21) and r74923 (2018-06-20).
>
> However, when I run the debian-r-devel checks locally (albeit in Docker) I
> get
> a couple of warnings, but no errors. Since I can't reproduce the error, it's
> difficult to fix. See below the relevant lines of 00check.log:
>
> * using log directory ?/pkg/epanet2toolkit.Rcheck?
> * using R Under development (unstable) (2018-07-25 r75006)
> * using platform: x86_64-pc-linux-gnu (64-bit)
> * using session charset: UTF-8
> * using option ?--as-cran?
> * checking for file ?epanet2toolkit/DESCRIPTION? ... OK
> * checking extension type ... Package
> ...
> * checking whether package ?epanet2toolkit? can be installed ... WARNING
> Found the following significant warnings:
>   text.h:421:9: warning: ?        Kw        Kw      /d? directive writing
> 30 bytes into a region of size between 23 and 278 [-Wformat-overflow=]
> See ?/pkg/epanet2toolkit.Rcheck/00install.out? for details.
> ...
> * checking compilation flags used ... WARNING
> Compilation used the following non-portable flag(s):
>   ?-Wdate-time? ?-Werror=format-security? ?-Wformat?
> * checking compiled code ... OK
> * checking examples ... OK
> * checking for unstated dependencies in ?tests? ... OK
> * checking tests ... OK
>   Running ?testthat.r?
> * checking PDF version of manual ... OK
> * DONE
> Status: 2 WARNINGs, 1 NOTE
>
>
> Thanks in advance for any insights.
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From profjcn@@h @ending from gm@il@com  Thu Jul 26 21:51:10 2018
From: profjcn@@h @ending from gm@il@com (J C Nash)
Date: Thu, 26 Jul 2018 15:51:10 -0400
Subject: [R-pkg-devel] can't reproduce cran-pretest error
In-Reply-To: <CALECgPZ-7gs9zbkaMGw3Wr0rftfvi+9k1bNwhJPB4bmGbc5dCA@mail.gmail.com>
References: <CALECgPZ-7gs9zbkaMGw3Wr0rftfvi+9k1bNwhJPB4bmGbc5dCA@mail.gmail.com>
Message-ID: <a14c5213-3622-6730-9ec6-bb08f29838ca@gmail.com>

I think several of us have had similar issues lately. You might have seen my posts on reverse dependencies.
It seems there are some sensitivities in the CRAN test setup, though I think things are improving.

Last week I submitted optimx again. I don't think I changed anything but the date and some commentary
in documentation files. The pre-test was much better than before, but still had two "complaints". One of
these was an "ERROR" of the type "non-convergence -- please choose a different minimizer" (in mvord)
and the other was a "WARNING" since my new package (optimx) subsumes the functionality of several other
packages, including optextras, so the functions from that were now masked, as might be expected. This
was in surrosurv.

However, I did follow protocol and report these false positives, but have had no response from CRAN
team. Nor any response to previous msgs about 2 months ago. I suspect some volunteer overload, but
if that is the case, I would hope the CRAN team would ask for help. I know there are several of us
willing to help if we can. And the new functionality does fix some actual bugs, as well as providing
improvements. Without renewal, particularly for infrastructure packages, R will decay.

Cheers, JN



On 2018-07-26 03:11 PM, Brad Eck wrote:
> Dear list,
> 
> I'm having trouble reproducing errors from CRAN's pretests.
> 
> I have a package on CRAN called epanet2toolkit that provides R bindings
> to a legacy simulation engine written in C.  So far I've released two
> versions
> to CRAN without trouble.  Now I'm making a third release, principally to
> include
> a citation for the package, but also to clean up warnings raised by new
> compilers.
> 
> My latest submission fails the CRAN pretests for Debian with errors in the
> examples and tests:
> https://win-builder.r-project.org/incoming_pretest/
> epanet2toolkit_0.3.0_20180726_102947/Debian/00check.log
> 
> For what it's worth, the package checks fine under R-3.4.4, R-3.5.0 and
> R-devel
> r74997 (2018-07-21) and r74923 (2018-06-20).
> 
> However, when I run the debian-r-devel checks locally (albeit in Docker) I
> get
> a couple of warnings, but no errors. Since I can't reproduce the error, it's
> difficult to fix. See below the relevant lines of 00check.log:
> 
> * using log directory ?/pkg/epanet2toolkit.Rcheck?
> * using R Under development (unstable) (2018-07-25 r75006)
> * using platform: x86_64-pc-linux-gnu (64-bit)
> * using session charset: UTF-8
> * using option ?--as-cran?
> * checking for file ?epanet2toolkit/DESCRIPTION? ... OK
> * checking extension type ... Package
> ...
> * checking whether package ?epanet2toolkit? can be installed ... WARNING
> Found the following significant warnings:
>   text.h:421:9: warning: ?        Kw        Kw      /d? directive writing
> 30 bytes into a region of size between 23 and 278 [-Wformat-overflow=]
> See ?/pkg/epanet2toolkit.Rcheck/00install.out? for details.
> ...
> * checking compilation flags used ... WARNING
> Compilation used the following non-portable flag(s):
>   ?-Wdate-time? ?-Werror=format-security? ?-Wformat?
> * checking compiled code ... OK
> * checking examples ... OK
> * checking for unstated dependencies in ?tests? ... OK
> * checking tests ... OK
>   Running ?testthat.r?
> * checking PDF version of manual ... OK
> * DONE
> Status: 2 WARNINGs, 1 NOTE
> 
> 
> Thanks in advance for any insights.
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From gor@n@bro@trom @ending from umu@@e  Fri Jul 27 00:15:29 2018
From: gor@n@bro@trom @ending from umu@@e (=?UTF-8?Q?G=c3=b6ran_Brostr=c3=b6m?=)
Date: Fri, 27 Jul 2018 00:15:29 +0200
Subject: [R-pkg-devel] can't reproduce cran-pretest error
In-Reply-To: <CALECgPZ-7gs9zbkaMGw3Wr0rftfvi+9k1bNwhJPB4bmGbc5dCA@mail.gmail.com>
References: <CALECgPZ-7gs9zbkaMGw3Wr0rftfvi+9k1bNwhJPB4bmGbc5dCA@mail.gmail.com>
Message-ID: <b2f39bea-6974-a0b0-3e4a-9ae8925f7758@umu.se>

Inline:

On 2018-07-26 21:11, Brad Eck wrote:
> Dear list,
> 
> I'm having trouble reproducing errors from CRAN's pretests.
> 
> I have a package on CRAN called epanet2toolkit that provides R bindings
> to a legacy simulation engine written in C.  So far I've released two
> versions
> to CRAN without trouble.  Now I'm making a third release, principally to
> include
> a citation for the package, but also to clean up warnings raised by new
> compilers.
> 
> My latest submission fails the CRAN pretests for Debian with errors in the
> examples and tests:
> https://win-builder.r-project.org/incoming_pretest/
> epanet2toolkit_0.3.0_20180726_102947/Debian/00check.log
> 
> For what it's worth, the package checks fine under R-3.4.4, R-3.5.0 and
> R-devel
> r74997 (2018-07-21) and r74923 (2018-06-20).
> 
> However, when I run the debian-r-devel checks locally (albeit in Docker) I
> get
> a couple of warnings, but no errors. Since I can't reproduce the error, it's
> difficult to fix. See below the relevant lines of 00check.log:
> 
> * using log directory ?/pkg/epanet2toolkit.Rcheck?
> * using R Under development (unstable) (2018-07-25 r75006)
> * using platform: x86_64-pc-linux-gnu (64-bit)
> * using session charset: UTF-8
> * using option ?--as-cran?
> * checking for file ?epanet2toolkit/DESCRIPTION? ... OK
> * checking extension type ... Package
> ...
> * checking whether package ?epanet2toolkit? can be installed ... WARNING
> Found the following significant warnings:
>    text.h:421:9: warning: ?        Kw        Kw      /d? directive writing
> 30 bytes into a region of size between 23 and 278 [-Wformat-overflow=]
> See ?/pkg/epanet2toolkit.Rcheck/00install.out? for details.
> ...
> * checking compilation flags used ... WARNING
> Compilation used the following non-portable flag(s):
>    ?-Wdate-time? ?-Werror=format-security? ?-Wformat?

This warning can safely be ignored, I have been told. It may also be 
avoided:

https://stat.ethz.ch/pipermail/r-package-devel/2018q3/002878.html

G?ran

> * checking compiled code ... OK
> * checking examples ... OK
> * checking for unstated dependencies in ?tests? ... OK
> * checking tests ... OK
>    Running ?testthat.r?
> * checking PDF version of manual ... OK
> * DONE
> Status: 2 WARNINGs, 1 NOTE
> 
> 
> Thanks in advance for any insights.
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From br@dleyjeck @ending from gm@il@com  Fri Jul 27 17:49:57 2018
From: br@dleyjeck @ending from gm@il@com (Brad Eck)
Date: Fri, 27 Jul 2018 16:49:57 +0100
Subject: [R-pkg-devel] can't reproduce cran-pretest error
In-Reply-To: <CALEXWq237NpWUaf=oVirgnjn7xNyzZsYH8EKrGYMotGkC1jNmw@mail.gmail.com>
References: <CALECgPZ-7gs9zbkaMGw3Wr0rftfvi+9k1bNwhJPB4bmGbc5dCA@mail.gmail.com>
 <CALEXWq237NpWUaf=oVirgnjn7xNyzZsYH8EKrGYMotGkC1jNmw@mail.gmail.com>
Message-ID: <CALECgPYYXCnLS50UN-VvNKevigHoMB9fNvhMbzDqc0bZ+nRv3g@mail.gmail.com>

Thanks to  I?aki for the correct diagnosis.

He also pointed out that setting the environment variable
R_C_BOUNDS_CHECK=yes as described in ?options would reproduce the error.
It seems this environment variable is set on CRAN's pre-test environment,
but not on any of the other environments I was testing on.



On Thu, Jul 26, 2018 at 8:49 PM, I?aki ?car <i.ucar86 at gmail.com> wrote:

> Hi, a couple of things,:
>
> 1) Have you checked the rchk report for possible issues?
>
> https://raw.githubusercontent.com/kalibera/cran-checks/
> master/rchk/results/epanet2toolkit.out
>
> 2) Here there's a call to RENgettimeparam, which passes an empty
> character buffer:
>
> https://github.com/bradleyjeck/epanet2toolkit/blob/
> 1e88c805ca294f980fc9133851eb5be8239086b5/R/times.r#L74
>
> but then this function applies a sprintf over this empty buffer (!), here:
>
> https://github.com/bradleyjeck/epanet2toolkit/blob/
> ef66748de5b357bfe6bbad4b3ba7e5f271baa797/src/Repanet2.c#L81
>
> This more or less matches the error shown in the pre-test, i.e.:
>
> "array over-run in .C("RENgettimeparam") in character argument 2, element
> 1"
>
> Regards,
> I?aki
>
>
> El jue., 26 jul. 2018 a las 21:20, Brad Eck (<bradleyjeck at gmail.com>)
> escribi?:
> >
> > Dear list,
> >
> > I'm having trouble reproducing errors from CRAN's pretests.
> >
> > I have a package on CRAN called epanet2toolkit that provides R bindings
> > to a legacy simulation engine written in C.  So far I've released two
> > versions
> > to CRAN without trouble.  Now I'm making a third release, principally to
> > include
> > a citation for the package, but also to clean up warnings raised by new
> > compilers.
> >
> > My latest submission fails the CRAN pretests for Debian with errors in
> the
> > examples and tests:
> > https://win-builder.r-project.org/incoming_pretest/
> > epanet2toolkit_0.3.0_20180726_102947/Debian/00check.log
> >
> > For what it's worth, the package checks fine under R-3.4.4, R-3.5.0 and
> > R-devel
> > r74997 (2018-07-21) and r74923 (2018-06-20).
> >
> > However, when I run the debian-r-devel checks locally (albeit in Docker)
> I
> > get
> > a couple of warnings, but no errors. Since I can't reproduce the error,
> it's
> > difficult to fix. See below the relevant lines of 00check.log:
> >
> > * using log directory ?/pkg/epanet2toolkit.Rcheck?
> > * using R Under development (unstable) (2018-07-25 r75006)
> > * using platform: x86_64-pc-linux-gnu (64-bit)
> > * using session charset: UTF-8
> > * using option ?--as-cran?
> > * checking for file ?epanet2toolkit/DESCRIPTION? ... OK
> > * checking extension type ... Package
> > ...
> > * checking whether package ?epanet2toolkit? can be installed ... WARNING
> > Found the following significant warnings:
> >   text.h:421:9: warning: ?        Kw        Kw      /d? directive writing
> > 30 bytes into a region of size between 23 and 278 [-Wformat-overflow=]
> > See ?/pkg/epanet2toolkit.Rcheck/00install.out? for details.
> > ...
> > * checking compilation flags used ... WARNING
> > Compilation used the following non-portable flag(s):
> >   ?-Wdate-time? ?-Werror=format-security? ?-Wformat?
> > * checking compiled code ... OK
> > * checking examples ... OK
> > * checking for unstated dependencies in ?tests? ... OK
> > * checking tests ... OK
> >   Running ?testthat.r?
> > * checking PDF version of manual ... OK
> > * DONE
> > Status: 2 WARNINGs, 1 NOTE
> >
> >
> > Thanks in advance for any insights.
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From beggle@ton @ending from rti@org  Mon Jul 30 07:59:56 2018
From: beggle@ton @ending from rti@org (Eggleston, Barry)
Date: Mon, 30 Jul 2018 05:59:56 +0000
Subject: [R-pkg-devel] Get an empty note for "checking DESCRIPTION
 meta-information" when I run devtools::build_win()
In-Reply-To: <23385.60217.295771.756523@stat.math.ethz.ch>
References: <BN7PR07MB510859E00BFA7F33BB7AB18AC9540@BN7PR07MB5108.namprd07.prod.outlook.com>
 <CAJmOi+MK7TcL0ujKQKOdQS6xY36WZCfXbmRWwSqFnwoVO55LHQ@mail.gmail.com>
 <BN7PR07MB51081CD6E2C0F060111DD3C2C9540@BN7PR07MB5108.namprd07.prod.outlook.com>
 <1323307818.384351.1532526125657.JavaMail.zimbra@math.uzh.ch>
 <BN7PR07MB510804D29827CB99AA757C4DC9540@BN7PR07MB5108.namprd07.prod.outlook.com>
 <1a1f9d34-f2c3-f198-87ba-cf85465c6833@math.uzh.ch>
 <BN7PR07MB5108A6144DCE51D0EDEB36FEC9540@BN7PR07MB5108.namprd07.prod.outlook.com>
 <23385.60217.295771.756523@stat.math.ethz.ch>
Message-ID: <BN7PR07MB5108C739B785D20083F34807C92F0@BN7PR07MB5108.namprd07.prod.outlook.com>

OK,

I submitted the package via the webform with "rth" as a role for Diane.  It failed the automatic testing for two notes and was archived within a few minutes.  One note indicated the package was a new submission, while the other was related to my use of "rth".  I responded to all and referred to this discussion on R-package-devel.  The actual notes received were:

Flavor: r-devel-linux-x86_64-debian-gcc, r-devel-windows-ix86+x86_64
Check: CRAN incoming feasibility, Result: NOTE
  Maintainer: 'Barry Eggleston <beggleston at rti.org>'
  
  New submission

Flavor: r-devel-linux-x86_64-debian-gcc, r-devel-windows-ix86+x86_64
Check: DESCRIPTION meta-information, Result: NOTE


Thanks,
Barry
  

-----Original Message-----
From: Martin Maechler <maechler at stat.math.ethz.ch> 
Sent: Thursday, July 26, 2018 11:40 AM
To: Eggleston, Barry <beggleston at rti.org>
Cc: Roman Flury <roman.flury at math.uzh.ch>; r-package-devel at r-project.org
Subject: Re: [R-pkg-devel] Get an empty note for "checking DESCRIPTION meta-information" when I run devtools::build_win()

>>>>> Eggleston, Barry 
>>>>>     on Wed, 25 Jul 2018 21:53:30 +0000 writes:

    > This is great news Roman.
    > The "rth" role stands for "Research team head", and I got it from the http://www.loc.gov/marc//relators/relaterm.html website.

and it *IS*  a correct role also in R,  using non-API function
(non-API: do *not* use it in reproducible code, pkgs, etc !) :

  > utils:::.canonicalize_person_role("rth")
  [1] "rth"

tells us that this is a correct role,
whereas these are not :

> utils:::.canonicalize_person_role("Rth")
character(0)
Warning message:
In utils:::.canonicalize_person_role("Rth") :
  Invalid role specification: ?Rth?.
> utils:::.canonicalize_person_role("Foobar")
character(0)
Warning message:
In utils:::.canonicalize_person_role("Foobar") :
  Invalid role specification: ?Foobar?.
> 

So the bug is really in the Windows version of R that was
running for you when you've used devtools::build_win()   or in
build_win()  itself.

"rth" is a correct role and you should *NOT* replace it by something less appropriate ...

Martin Maechler
ETH Zurich and R Core Team


    > This issue here is Diane Catellier provided the funds and management for us to develop this package.  I did not know about the person() function.  When I looked at the help page for person(), I see that I can use "fnd" for funder and that will define Diane's role sufficiently well.  I'll make the change and run through my checks again.

    > Thank you,
    > Barry

    > -----Original Message-----
    > From: Roman Flury <roman.flury at math.uzh.ch> 
    > Sent: Wednesday, July 25, 2018 5:27 PM
    > To: Eggleston, Barry <beggleston at rti.org>
    > Cc: Hugh Parsonage <hugh.parsonage at gmail.com>; r-package-devel at r-project.org
    > Subject: Re: [R-pkg-devel] Get an empty note for "checking DESCRIPTION meta-information" when I run devtools::build_win()

    > Barry,

    > sorry did not anticipate the behaving of the emailer. I could reproduce your error with the DESCRIPTION file below with a helloworld pkg

    > Package: test
    > Type: Package
    > Title: What the Package Does (Title Case)
    > Version: 0.1.0
    > Authors at R: c(person("Roman", "Flury", email = "roman.flury at math.uzh.ch", role = c("aut", "cre")),
    > ???????????? person("Test", "person", email = "testmail at test.org", role = c("fnd", "rth")))
    > Description: Short description to describe this package.
    > Depends: R (>= 3.5.0)
    > License: GPL-3
    > Encoding: UTF-8
    > LazyData: true
    > Imports: eha (>= 2.5.1),
    > ??? ggplot2 (>= 2.2.1),
    > ??? survival (>= 2.41-3),
    > ??? reshape2 (>= 1.4.3),
    > ??? stats (>= 3.5.0)
    > RoxygenNote: 6.0.1

    > this passes R CMD check --as-cran on a unix system, but not on windwos. 
    > The problem seems to be the role "rth", which is also not listed in ?person. What does this role stand for?

    > best, Roman

    > On 25.07.2018 16:21, Eggleston, Barry wrote:
    >> Roman,
    >> 
    >> Not sure why my emailer added all those <mailto:aaa at bbb.ccc> items, but none of them are in my original DESCRIPTION file.  So my Maintainer line, for example, simply reads Barry Eggleston <email address>, where email address is simply beggleston at rti.org.
    >> 
    >> Thanks for the observation,
    >> Barry
    >> 
    >> 
    >> -----Original Message-----
    >> From: Roman Flury <roman.flury at math.uzh.ch>
    >> Sent: Wednesday, July 25, 2018 9:42 AM
    >> To: Eggleston, Barry <beggleston at rti.org>
    >> Cc: Hugh Parsonage <hugh.parsonage at gmail.com>; 
    >> r-package-devel at r-project.org
    >> Subject: Re: [R-pkg-devel] Get an empty note for "checking DESCRIPTION 
    >> meta-information" when I run devtools::build_win()
    >> 
    >> Hello,
    >> 
    >> after https://cran.r-project.org/doc/manuals/r-release/R-exts.html the ?Maintainer? field should give a single name followed by a valid (RFC 2822) email address in angle brackets.
    >> but beggleston at rti.org<mailto:beggleston at rti.org> is not a valid RFC 
    >> 2822 email address, you could check this for instance with 
    >> https://proxy2.de/email-validation.php
    >> 
    >> you could omit the 'Maintainer' field, since a suitable ?Authors at R? field is given..
    >> does this solve your problem?
    >> 
    >> best, Roman
    >> 
    >> ----- Original Message -----
    >> From: "Eggleston, Barry" <beggleston at rti.org>
    >> To: "Hugh Parsonage" <hugh.parsonage at gmail.com>
    >> Cc: r-package-devel at r-project.org
    >> Sent: Wednesday, July 25, 2018 3:00:35 PM
    >> Subject: Re: [R-pkg-devel] Get an empty note for "checking DESCRIPTION 
    >> meta-information" when I run devtools::build_win()
    >> 
    >> Below is a copy of my DESCRIPTION file:
    >> 
    >> Package: BayesCTDesign
    >> Type: Package
    >> Title: Two Arm Bayesian Clinical Trial Design with and Without 
    >> Historical Control Data
    >> Version: 1.0.0
    >> Authors at R: c(
    >> person("Barry", "Eggleston", email = "beggleston at rti.org<mailto:beggleston at rti.org>", role = c("cre", "aut")),
    >> person("Doug", "Wilson", email = "doug.roy.wilson at gmail.com<mailto:doug.roy.wilson at gmail.com>", role = c("aut")),
    >> person("Becky", "McNeil", email = "rmcneil at rti.org<mailto:rmcneil at rti.org>", role = c("aut")),
    >> person("Joseph", "Ibrahim", email = "jibrahim at email.unc.edu<mailto:jibrahim at email.unc.edu>", role = c("aut")),
    >> person("Diane", "Catellier", email = 
    >> "dcatellier at rti.org<mailto:dcatellier at rti.org>", role = c("fnd", 
    >> "rth")))
    >> Maintainer: Barry Eggleston 
    >> <beggleston at rti.org<mailto:beggleston at rti.org>>
    >> Description: A set of functions to help clinical trial researchers calculate power and sample size for two-arm Bayesian randomized clinical trials that do or do not incorporate historical control data.  At some point during the design process, a clinical trial researcher who is designing a basic two-arm Bayesian randomized clinical trial needs to make decisions about power and sample size within the context of hypothesized treatment effects.  Through simulation, the \code{simple_sim()} function will estimate power and other user specified clinical trial characteristics at user specified sample sizes given user defined scenarios about treatment effect,control group characteristics, and outcome.  If the clinical trial researcher has access to historical control data, then the researcher can design a two-arm Bayesian randomized clinical trial that incorporates the historical data.  In such a case, the researcher needs to work through the potential consequences of historical and randomiz  ed control differences on trial characteristics, in addition to working through issues regarding power in the context of sample size, treatment effect size, and outcome.  If a researcher designs a clinical trial that will incorporate historical control data, the researcher needs the randomized controls to be from the same population as the historical controls.  What if this is not the case when the designed trial is implemented?  During the design phase, the researcher needs to investigate the negative effects of possible historic/randomized control differences on power, type one error, and other trial characteristics.  Using this information, the researcher should design the trial to mitigate these negative effects.  Through simulation, the \code{historic_sim()} function will estimate power and other user specified clinical trial characteristics at user specified sample sizes given user defined scenarios about historical and randomized control differences as well as treatment effec  ts and outcomes.  The results from \code{historic_sim()} and \code{simple_sim()} can be printed with \code{print_table()} and graphed with \code{plot_table()} methods.  Outcomes considered are Gaussian, Poisson, Bernoulli, Lognormal, Weibull, and Piecewise Exponential.
    >> Depends: R (>= 3.5.0)
    >> License: GPL-3
    >> Encoding: UTF-8
    >> LazyData: true
    >> Imports: eha (>= 2.5.1),
    >> ggplot2 (>= 2.2.1),
    >> survival (>= 2.41-3),
    >> reshape2 (>= 1.4.3),
    >> stats (>= 3.5.0)
    >> RoxygenNote: 6.0.1
    >> 
    >> 
    >> From: Hugh Parsonage <hugh.parsonage at gmail.com>
    >> Sent: Tuesday, July 24, 2018 10:12 PM
    >> To: Eggleston, Barry <beggleston at rti.org>
    >> Cc: r-package-devel at r-project.org
    >> Subject: Re: [R-pkg-devel] Get an empty note for "checking DESCRIPTION 
    >> meta-information" when I run devtools::build_win()
    >> 
    >> Thank you. Could you provide the contents of DESCRIPTION too? That might provide the richest clue. If you have a link to an online copy of the package that could be helpful too.
    >> On Wed, 25 Jul 2018 at 12:01 Eggleston, Barry <beggleston at rti.org<mailto:beggleston at rti.org>> wrote:
    >> I am working through my first package submission.  When I checked my package using devtools::build_win(), I got no errors and two notes.  One note is simply the expected note that my package is a new submission.  My second note involves DESCRIPTION meta-information, but nothing is printed so I don't know what to focus on.  I have copied the important parts of my 00check.log from CRAN below for context.  What areas of my DESCRIPTION file might create such an empty note?  Thanks in advance for any help you might give me.
    >> 
    >> * checking CRAN incoming feasibility ... NOTE
    >> Maintainer: 'Barry Eggleston <beggleston at rti.org<mailto:beggleston at rti.org><mailto:beggleston at rti.org<mailto:beggleston at rti.org>>>'
    >> 
    >> New submission
    >> * checking package namespace information ... OK
    >> * checking package dependencies ... OK
    >> * checking if this is a source package ... OK
    >> * checking if there is a namespace ... OK
    >> * checking for hidden files and directories ... OK
    >> * checking for portable file names ... OK
    >> * checking whether package 'BayesCTDesign' can be installed ... OK
    >> * checking installed package size ... OK
    >> * checking package directory ... OK
    >> * checking DESCRIPTION meta-information ... NOTE
    >> 
    >> * checking top-level files ... OK
    >> * checking for left-over files ... OK
    >> * checking index information ... OK
    >> * checking package subdirectories ... OK
    >> * checking R files for non-ASCII characters ... OK
    >> * checking R files for syntax errors ... OK
    >> * loading checks for arch 'i386'
    >> ** checking whether the package can be loaded ... OK
    >> ** checking whether the package can be loaded with stated dependencies 
    >> ... OK
    >> ** checking whether the package can be unloaded cleanly ... OK
    >> ** checking whether the namespace can be loaded with stated 
    >> dependencies ... OK
    >> ** checking whether the namespace can be unloaded cleanly ... OK
    >> ** checking loading without being on the library search path ... OK
    >> ** checking use of S3 registration ... OK
    >> * loading checks for arch 'x64'
    >> ** checking whether the package can be loaded ... OK
    >> ** checking whether the package can be loaded with stated dependencies 
    >> ... OK
    >> ** checking whether the package can be unloaded cleanly ... OK
    >> ** checking whether the namespace can be loaded with stated 
    >> dependencies ... OK
    >> ** checking whether the namespace can be unloaded cleanly ... OK
    >> ** checking loading without being on the library search path ... OK
    >> ** checking use of S3 registration ... OK
    >> * checking dependencies in R code ... OK
    >> * checking S3 generic/method consistency ... OK
    >> * checking replacement functions ... OK
    >> * checking foreign function calls ... OK
    >> * checking R code for possible problems ... [41s] OK
    >> * checking Rd files ... OK
    >> * checking Rd metadata ... OK
    >> * checking Rd line widths ... OK
    >> * checking Rd cross-references ... OK
    >> * checking for missing documentation entries ... OK
    >> * checking for code/documentation mismatches ... OK
    >> * checking Rd \usage sections ... OK
    >> * checking Rd contents ... OK
    >> * checking for unstated dependencies in examples ... OK
    >> * checking examples ...
    >> ** running examples for arch 'i386' ... [19s] OK
    >> ** running examples for arch 'x64' ... [22s] OK
    >> * checking PDF version of manual ... OK
    >> * DONE
    >> Status: 2 NOTEs
    >> 
    >> Barry
    >> 
    >> 
    >> [[alternative HTML version deleted]]
    >> 
    >> ______________________________________________
    >> R-package-devel at r-project.org<mailto:R-package-devel at r-project.org> 
    >> mailing list https://stat.ethz.ch/mailman/listinfo/r-package-devel
    >> 
    >> [[alternative HTML version deleted]]
    >> 
    >> ______________________________________________
    >> R-package-devel at r-project.org mailing list 
    >> https://stat.ethz.ch/mailman/listinfo/r-package-devel


    > ______________________________________________
    > R-package-devel at r-project.org mailing list
    > https://stat.ethz.ch/mailman/listinfo/r-package-devel

From i@uc@r86 @ending from gm@il@com  Thu Aug  2 10:04:02 2018
From: i@uc@r86 @ending from gm@il@com (=?UTF-8?B?ScOxYWtpIMOaY2Fy?=)
Date: Thu, 2 Aug 2018 10:04:02 +0200
Subject: [R-pkg-devel] Disable a particular knitr vignette
Message-ID: <CALEXWq1mZFFHaJgbxesh3-rUC90FMajObysForsSN0z2A1mo_A@mail.gmail.com>

Hi everyone,

I have a JSS vignette based on the rticles package. It was compiling
just fine until rticles v0.5 for some reason started requiring pandoc
v2.x for such a document class, and failing otherwise. Due to this
requirement, Windows machines on CRAN show a nasty WARN, because they
still have pandoc v1.x.

It is painful for Uwe to install pandoc v2.x there, so I was wondering
whether there's any easy mechanism to just disable a particular
vignette based on some condition (in this case, it would be "we are on
CRAN, this is Windows and the pandoc version is < 2"; this is easy to
test).

I tried putting a condition for the output format in the YAML header
and it works, i.e.:

output: if (cond) rticles::jss_article else rmarkdown::pdf_document

But rmarkdown::pdf_document fails to compile, because the JSS class
has many custom macros. I tried also putting a NULL or a NA there, and
it doesn't work.

Does any knitr ninja here know if there's some easy trick to do this
and make Uwe's life easier? Some "NULL" document format?

Regards,
I?aki


From henrik@bengt@@on @ending from gm@il@com  Thu Aug  2 11:41:26 2018
From: henrik@bengt@@on @ending from gm@il@com (Henrik Bengtsson)
Date: Thu, 2 Aug 2018 11:41:26 +0200
Subject: [R-pkg-devel] Disable a particular knitr vignette
In-Reply-To: <CALEXWq1mZFFHaJgbxesh3-rUC90FMajObysForsSN0z2A1mo_A@mail.gmail.com>
References: <CALEXWq1mZFFHaJgbxesh3-rUC90FMajObysForsSN0z2A1mo_A@mail.gmail.com>
Message-ID: <CAFDcVCSr15YN-U4VKsLu0zEpFep3mE44fDScCxGCG30MvaFtGw@mail.gmail.com>

As a workaround, until resolved, you could precompile your vignette
into a PDF and then use the 'R.rsp::asis' vignette engine
(%\VignetteEngine{R.rsp::asis} etc) to include it as a static PDF.
This is described in the vignettes
(https://cran.r-project.org/package=R.rsp).

-Henrik
On Thu, Aug 2, 2018 at 10:04 AM I?aki ?car <i.ucar86 at gmail.com> wrote:
>
> Hi everyone,
>
> I have a JSS vignette based on the rticles package. It was compiling
> just fine until rticles v0.5 for some reason started requiring pandoc
> v2.x for such a document class, and failing otherwise. Due to this
> requirement, Windows machines on CRAN show a nasty WARN, because they
> still have pandoc v1.x.
>
> It is painful for Uwe to install pandoc v2.x there, so I was wondering
> whether there's any easy mechanism to just disable a particular
> vignette based on some condition (in this case, it would be "we are on
> CRAN, this is Windows and the pandoc version is < 2"; this is easy to
> test).
>
> I tried putting a condition for the output format in the YAML header
> and it works, i.e.:
>
> output: if (cond) rticles::jss_article else rmarkdown::pdf_document
>
> But rmarkdown::pdf_document fails to compile, because the JSS class
> has many custom macros. I tried also putting a NULL or a NA there, and
> it doesn't work.
>
> Does any knitr ninja here know if there's some easy trick to do this
> and make Uwe's life easier? Some "NULL" document format?
>
> Regards,
> I?aki
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From i@uc@r86 @ending from gm@il@com  Thu Aug  2 12:08:04 2018
From: i@uc@r86 @ending from gm@il@com (=?UTF-8?B?ScOxYWtpIMOaY2Fy?=)
Date: Thu, 2 Aug 2018 12:08:04 +0200
Subject: [R-pkg-devel] Disable a particular knitr vignette
In-Reply-To: <CAFDcVCSr15YN-U4VKsLu0zEpFep3mE44fDScCxGCG30MvaFtGw@mail.gmail.com>
References: <CALEXWq1mZFFHaJgbxesh3-rUC90FMajObysForsSN0z2A1mo_A@mail.gmail.com>
 <CAFDcVCSr15YN-U4VKsLu0zEpFep3mE44fDScCxGCG30MvaFtGw@mail.gmail.com>
Message-ID: <CALEXWq14mVTifT0frkZphD=RWJ7S3WHgH8dfK1Ap+DYqQbiB6Q@mail.gmail.com>

El jue., 2 ago. 2018 a las 11:41, Henrik Bengtsson
(<henrik.bengtsson at gmail.com>) escribi?:
>
> As a workaround, until resolved, you could precompile your vignette
> into a PDF and then use the 'R.rsp::asis' vignette engine
> (%\VignetteEngine{R.rsp::asis} etc) to include it as a static PDF.
> This is described in the vignettes
> (https://cran.r-project.org/package=R.rsp).
>
> -Henrik

Thanks for the suggestion, Henrik. I would prefer, though, not to
change the behaviour on other platforms and not to rely on another
dependency just for a workaround.

I?aki

> On Thu, Aug 2, 2018 at 10:04 AM I?aki ?car <i.ucar86 at gmail.com> wrote:
> >
> > Hi everyone,
> >
> > I have a JSS vignette based on the rticles package. It was compiling
> > just fine until rticles v0.5 for some reason started requiring pandoc
> > v2.x for such a document class, and failing otherwise. Due to this
> > requirement, Windows machines on CRAN show a nasty WARN, because they
> > still have pandoc v1.x.
> >
> > It is painful for Uwe to install pandoc v2.x there, so I was wondering
> > whether there's any easy mechanism to just disable a particular
> > vignette based on some condition (in this case, it would be "we are on
> > CRAN, this is Windows and the pandoc version is < 2"; this is easy to
> > test).
> >
> > I tried putting a condition for the output format in the YAML header
> > and it works, i.e.:
> >
> > output: if (cond) rticles::jss_article else rmarkdown::pdf_document
> >
> > But rmarkdown::pdf_document fails to compile, because the JSS class
> > has many custom macros. I tried also putting a NULL or a NA there, and
> > it doesn't work.
> >
> > Does any knitr ninja here know if there's some easy trick to do this
> > and make Uwe's life easier? Some "NULL" document format?
> >
> > Regards,
> > I?aki
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel


From i@uc@r86 @ending from gm@il@com  Fri Aug  3 09:31:17 2018
From: i@uc@r86 @ending from gm@il@com (=?UTF-8?B?ScOxYWtpIMOaY2Fy?=)
Date: Fri, 3 Aug 2018 09:31:17 +0200
Subject: [R-pkg-devel] Disable a particular knitr vignette
In-Reply-To: <CALEXWq1mZFFHaJgbxesh3-rUC90FMajObysForsSN0z2A1mo_A@mail.gmail.com>
References: <CALEXWq1mZFFHaJgbxesh3-rUC90FMajObysForsSN0z2A1mo_A@mail.gmail.com>
Message-ID: <CALEXWq3FzyQjYaEh-rKqacOE_athOeq9w4EYJb=1=bLMGyCK5Q@mail.gmail.com>

For anyone interested, I finally managed to solve this, following a
suggestion by Baptiste Auguie. TLDR; my yaml header reads as follows:

output: if (packageVersion("rticles") < 0.5 || rmarkdown::pandoc_version() >= 2)
  rticles::jss_article else rmarkdown::html_vignette

This fallback simply ignores the fancy latex commands and produces a
HTML output, which prevents R CMD check from complaining.

Regards,
I?aki
El jue., 2 ago. 2018 a las 10:04, I?aki ?car (<i.ucar86 at gmail.com>) escribi?:
>
> Hi everyone,
>
> I have a JSS vignette based on the rticles package. It was compiling
> just fine until rticles v0.5 for some reason started requiring pandoc
> v2.x for such a document class, and failing otherwise. Due to this
> requirement, Windows machines on CRAN show a nasty WARN, because they
> still have pandoc v1.x.
>
> It is painful for Uwe to install pandoc v2.x there, so I was wondering
> whether there's any easy mechanism to just disable a particular
> vignette based on some condition (in this case, it would be "we are on
> CRAN, this is Windows and the pandoc version is < 2"; this is easy to
> test).
>
> I tried putting a condition for the output format in the YAML header
> and it works, i.e.:
>
> output: if (cond) rticles::jss_article else rmarkdown::pdf_document
>
> But rmarkdown::pdf_document fails to compile, because the JSS class
> has many custom macros. I tried also putting a NULL or a NA there, and
> it doesn't work.
>
> Does any knitr ninja here know if there's some easy trick to do this
> and make Uwe's life easier? Some "NULL" document format?
>
> Regards,
> I?aki



--
I?aki ?car
http://www.enchufa2.es
@Enchufa2


From gi@nm@rco@lberti @ending from gm@il@com  Sun Aug  5 22:21:01 2018
From: gi@nm@rco@lberti @ending from gm@il@com (Gianmarco Alberti)
Date: Sun, 5 Aug 2018 22:21:01 +0200
Subject: [R-pkg-devel] Building my R package: issue when importing two
 functions with the same name
Message-ID: <ad0b924c-84e3-4516-be72-2d0bc1140918@Spark>

I am building a R package, and I am facing an issue caused (as far as I understand) by the fact that some functions out of my package rely on two fuctions having the same name and coming from 2 different packages:

pROC::roc
spatstat::roc

When checking the package via devtools::check(), I get the following warning:

Warning: replacing previous import ?spatstat::roc? by ?pROC::roc? when loading ?GmAMisc?

Note that both packages are listed among the Imports in my package's DESCRIPTION file, and that (within my functions) I have actually used spatstat::roc and pROC::roc where needed.

I have done some web-search but I could not locate any workaround that actually fixes my issue.

Do you have any suggestion on the matter?

**************************************
Dr Gianmarco Alberti (PhD)
(currently)
Research Support Officer II
Department of Classics and Archaeology
Faculty of Arts
University of Malta

(starting from 3rd September 2018)
Lecturer in Spatial Forensics
Department of Criminology
Faculty for Social Wellbeing
University of Malta
https://www.researchgate.net/profile/Gianmarco_Alberti4
http://cainarchaeology.weebly.com/
**************************************


	[[alternative HTML version deleted]]


From hugh@p@r@on@ge @ending from gm@il@com  Tue Aug  7 09:46:05 2018
From: hugh@p@r@on@ge @ending from gm@il@com (Hugh Parsonage)
Date: Tue, 7 Aug 2018 17:46:05 +1000
Subject: [R-pkg-devel] Building my R package: issue when importing two
 functions with the same name
In-Reply-To: <ad0b924c-84e3-4516-be72-2d0bc1140918@Spark>
References: <ad0b924c-84e3-4516-be72-2d0bc1140918@Spark>
Message-ID: <CAJmOi+N_-kiM7if+2UC3xP7XdQhQom=zN8rrE-Jz8OPHCo7DyA@mail.gmail.com>

Does your package import or depend on 'GmAMisc'? This package appears
to Depend on both spatstat and pROC.

Alternatively you have imported both packages in your NAMESPACE.

If neither of these clues help, could you post your DESCRIPTION and
NAMESPACE files? Probably all we'd need.



On 6 August 2018 at 06:21, Gianmarco Alberti <gianmarcoalberti at gmail.com> wrote:
> I am building a R package, and I am facing an issue caused (as far as I understand) by the fact that some functions out of my package rely on two fuctions having the same name and coming from 2 different packages:
>
> pROC::roc
> spatstat::roc
>
> When checking the package via devtools::check(), I get the following warning:
>
> Warning: replacing previous import ?spatstat::roc? by ?pROC::roc? when loading ?GmAMisc?
>
> Note that both packages are listed among the Imports in my package's DESCRIPTION file, and that (within my functions) I have actually used spatstat::roc and pROC::roc where needed.
>
> I have done some web-search but I could not locate any workaround that actually fixes my issue.
>
> Do you have any suggestion on the matter?
>
> **************************************
> Dr Gianmarco Alberti (PhD)
> (currently)
> Research Support Officer II
> Department of Classics and Archaeology
> Faculty of Arts
> University of Malta
>
> (starting from 3rd September 2018)
> Lecturer in Spatial Forensics
> Department of Criminology
> Faculty for Social Wellbeing
> University of Malta
> https://www.researchgate.net/profile/Gianmarco_Alberti4
> http://cainarchaeology.weebly.com/
> **************************************
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From i@uc@r86 @ending from gm@il@com  Tue Aug  7 10:14:15 2018
From: i@uc@r86 @ending from gm@il@com (=?UTF-8?B?ScOxYWtpIMOaY2Fy?=)
Date: Tue, 7 Aug 2018 10:14:15 +0200
Subject: [R-pkg-devel] Building my R package: issue when importing two
 functions with the same name
In-Reply-To: <ad0b924c-84e3-4516-be72-2d0bc1140918@Spark>
References: <ad0b924c-84e3-4516-be72-2d0bc1140918@Spark>
Message-ID: <CALEXWq1j1PbLhJCyA-8rmtGk_h_=KYvzmQmjQnKsiiRoJhQvGw@mail.gmail.com>

El mar., 7 ago. 2018 a las 9:32, Gianmarco Alberti
(<gianmarcoalberti at gmail.com>) escribi?:
>
> I am building a R package, and I am facing an issue caused (as far as I understand) by the fact that some functions out of my package rely on two fuctions having the same name and coming from 2 different packages:
>
> pROC::roc
> spatstat::roc
>
> When checking the package via devtools::check(), I get the following warning:
>
> Warning: replacing previous import ?spatstat::roc? by ?pROC::roc? when loading ?GmAMisc?
>
> Note that both packages are listed among the Imports in my package's DESCRIPTION file, and that (within my functions) I have actually used spatstat::roc and pROC::roc where needed.

I see:

Depends: R (>= 3.4.0), ggplot2, ggrepel, rgdal, rgeos, raster, sp,
spatstat, maptools, spatialEco, dismo, pROC, kimisc, corrplot,
InPosition, lsr, gridExtra, caTools, plyr, classInt, coin, DescTools,
rWind, shape, rworldmap, cluster, RcmdrMisc, gdistance, Hmisc

In general, it is not a good idea to depend on so many packages,
because what "Depends" do is to load and attach packages. Among other
issues, there is one that you are already experimenting: "roc" is
exported both by "spatstat" and "pROC", so one masks the other.

The solution is to list them under "Imports" instead of "Depends". In
fact, my advice is to put as many packages as possible under
"Imports". Keep in "Depends" only those you would load and attach
anyway when working with your package, because you need all the
functions along with the ones your package exports. For the rest of
them, just use them as package::function to avoid this kind of
problem, and reexport functions selectively if needed.

I?aki

PS: I'm taking a look at other packages and I see that you always use
"Depends" and never "Imports". My general advice is against this
practice. Moreover, from the "Writing R Extensions" manual:

"Field ?Depends? should nowadays be used rarely, only for packages
which are intended to be put on the search path to make their
facilities available to the end user (and not to the package itself):
for example it makes sense that a user of package 'latticeExtra' would
want the functions of package 'lattice' made available."

>
> I have done some web-search but I could not locate any workaround that actually fixes my issue.
>
> Do you have any suggestion on the matter?
>
> **************************************
> Dr Gianmarco Alberti (PhD)
> (currently)
> Research Support Officer II
> Department of Classics and Archaeology
> Faculty of Arts
> University of Malta
>
> (starting from 3rd September 2018)
> Lecturer in Spatial Forensics
> Department of Criminology
> Faculty for Social Wellbeing
> University of Malta
> https://www.researchgate.net/profile/Gianmarco_Alberti4
> http://cainarchaeology.weebly.com/
> **************************************
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From ligge@ @ending from @t@ti@tik@tu-dortmund@de  Tue Aug  7 11:14:17 2018
From: ligge@ @ending from @t@ti@tik@tu-dortmund@de (Uwe Ligges)
Date: Tue, 7 Aug 2018 11:14:17 +0200
Subject: [R-pkg-devel] Building my R package: issue when importing two
 functions with the same name
In-Reply-To: <CALEXWq1j1PbLhJCyA-8rmtGk_h_=KYvzmQmjQnKsiiRoJhQvGw@mail.gmail.com>
References: <ad0b924c-84e3-4516-be72-2d0bc1140918@Spark>
 <CALEXWq1j1PbLhJCyA-8rmtGk_h_=KYvzmQmjQnKsiiRoJhQvGw@mail.gmail.com>
Message-ID: <8d2eed3e-69df-e47b-47ca-bd39312b5373@statistik.tu-dortmund.de>

... and even if you are importing from several packages, you should 
import selective via importFrom directoves.

If you need two functions with identical names, import at most one of 
them and rather use pkg::foo syntax to access them.

Best,
Uwe Ligges





On 07.08.2018 10:14, I?aki ?car wrote:
> El mar., 7 ago. 2018 a las 9:32, Gianmarco Alberti
> (<gianmarcoalberti at gmail.com>) escribi?:
>>
>> I am building a R package, and I am facing an issue caused (as far as I understand) by the fact that some functions out of my package rely on two fuctions having the same name and coming from 2 different packages:
>>
>> pROC::roc
>> spatstat::roc
>>
>> When checking the package via devtools::check(), I get the following warning:
>>
>> Warning: replacing previous import ?spatstat::roc? by ?pROC::roc? when loading ?GmAMisc?
>>
>> Note that both packages are listed among the Imports in my package's DESCRIPTION file, and that (within my functions) I have actually used spatstat::roc and pROC::roc where needed.
> 
> I see:
> 
> Depends: R (>= 3.4.0), ggplot2, ggrepel, rgdal, rgeos, raster, sp,
> spatstat, maptools, spatialEco, dismo, pROC, kimisc, corrplot,
> InPosition, lsr, gridExtra, caTools, plyr, classInt, coin, DescTools,
> rWind, shape, rworldmap, cluster, RcmdrMisc, gdistance, Hmisc
> 
> In general, it is not a good idea to depend on so many packages,
> because what "Depends" do is to load and attach packages. Among other
> issues, there is one that you are already experimenting: "roc" is
> exported both by "spatstat" and "pROC", so one masks the other.
> 
> The solution is to list them under "Imports" instead of "Depends". In
> fact, my advice is to put as many packages as possible under
> "Imports". Keep in "Depends" only those you would load and attach
> anyway when working with your package, because you need all the
> functions along with the ones your package exports. For the rest of
> them, just use them as package::function to avoid this kind of
> problem, and reexport functions selectively if needed.
> 
> I?aki
> 
> PS: I'm taking a look at other packages and I see that you always use
> "Depends" and never "Imports". My general advice is against this
> practice. Moreover, from the "Writing R Extensions" manual:
> 
> "Field ?Depends? should nowadays be used rarely, only for packages
> which are intended to be put on the search path to make their
> facilities available to the end user (and not to the package itself):
> for example it makes sense that a user of package 'latticeExtra' would
> want the functions of package 'lattice' made available."
> 
>>
>> I have done some web-search but I could not locate any workaround that actually fixes my issue.
>>
>> Do you have any suggestion on the matter?
>>
>> **************************************
>> Dr Gianmarco Alberti (PhD)
>> (currently)
>> Research Support Officer II
>> Department of Classics and Archaeology
>> Faculty of Arts
>> University of Malta
>>
>> (starting from 3rd September 2018)
>> Lecturer in Spatial Forensics
>> Department of Criminology
>> Faculty for Social Wellbeing
>> University of Malta
>> https://www.researchgate.net/profile/Gianmarco_Alberti4
>> http://cainarchaeology.weebly.com/
>> **************************************
>>
>>
>>          [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From R@iner @ending from krug@@de  Tue Aug  7 12:22:40 2018
From: R@iner @ending from krug@@de (Rainer M Krug)
Date: Tue, 7 Aug 2018 12:22:40 +0200
Subject: [R-pkg-devel] Building my R package: issue when importing two
 functions with the same name
In-Reply-To: <8d2eed3e-69df-e47b-47ca-bd39312b5373@statistik.tu-dortmund.de>
References: <ad0b924c-84e3-4516-be72-2d0bc1140918@Spark>
 <CALEXWq1j1PbLhJCyA-8rmtGk_h_=KYvzmQmjQnKsiiRoJhQvGw@mail.gmail.com>
 <8d2eed3e-69df-e47b-47ca-bd39312b5373@statistik.tu-dortmund.de>
Message-ID: <2FA92045-2812-4272-89DD-CDAEA03441D7@krugs.de>

Probably discussed already, but what is the difference between using ?::? and ?ImportFrom?? I usually use ImportFrom and ?::? just to make clear, where the function is coming from - is this a problem?

Rainer


> On 7 Aug 2018, at 11:14, Uwe Ligges <ligges at statistik.tu-dortmund.de> wrote:
> 
> ... and even if you are importing from several packages, you should import selective via importFrom directoves.
> 
> If you need two functions with identical names, import at most one of them and rather use pkg::foo syntax to access them.
> 
> Best,
> Uwe Ligges
> 
> 
> 
> 
> 
> On 07.08.2018 10:14, I?aki ?car wrote:
>> El mar., 7 ago. 2018 a las 9:32, Gianmarco Alberti
>> (<gianmarcoalberti at gmail.com>) escribi?:
>>> 
>>> I am building a R package, and I am facing an issue caused (as far as I understand) by the fact that some functions out of my package rely on two fuctions having the same name and coming from 2 different packages:
>>> 
>>> pROC::roc
>>> spatstat::roc
>>> 
>>> When checking the package via devtools::check(), I get the following warning:
>>> 
>>> Warning: replacing previous import ?spatstat::roc? by ?pROC::roc? when loading ?GmAMisc?
>>> 
>>> Note that both packages are listed among the Imports in my package's DESCRIPTION file, and that (within my functions) I have actually used spatstat::roc and pROC::roc where needed.
>> I see:
>> Depends: R (>= 3.4.0), ggplot2, ggrepel, rgdal, rgeos, raster, sp,
>> spatstat, maptools, spatialEco, dismo, pROC, kimisc, corrplot,
>> InPosition, lsr, gridExtra, caTools, plyr, classInt, coin, DescTools,
>> rWind, shape, rworldmap, cluster, RcmdrMisc, gdistance, Hmisc
>> In general, it is not a good idea to depend on so many packages,
>> because what "Depends" do is to load and attach packages. Among other
>> issues, there is one that you are already experimenting: "roc" is
>> exported both by "spatstat" and "pROC", so one masks the other.
>> The solution is to list them under "Imports" instead of "Depends". In
>> fact, my advice is to put as many packages as possible under
>> "Imports". Keep in "Depends" only those you would load and attach
>> anyway when working with your package, because you need all the
>> functions along with the ones your package exports. For the rest of
>> them, just use them as package::function to avoid this kind of
>> problem, and reexport functions selectively if needed.
>> I?aki
>> PS: I'm taking a look at other packages and I see that you always use
>> "Depends" and never "Imports". My general advice is against this
>> practice. Moreover, from the "Writing R Extensions" manual:
>> "Field ?Depends? should nowadays be used rarely, only for packages
>> which are intended to be put on the search path to make their
>> facilities available to the end user (and not to the package itself):
>> for example it makes sense that a user of package 'latticeExtra' would
>> want the functions of package 'lattice' made available."
>>> 
>>> I have done some web-search but I could not locate any workaround that actually fixes my issue.
>>> 
>>> Do you have any suggestion on the matter?
>>> 
>>> **************************************
>>> Dr Gianmarco Alberti (PhD)
>>> (currently)
>>> Research Support Officer II
>>> Department of Classics and Archaeology
>>> Faculty of Arts
>>> University of Malta
>>> 
>>> (starting from 3rd September 2018)
>>> Lecturer in Spatial Forensics
>>> Department of Criminology
>>> Faculty for Social Wellbeing
>>> University of Malta
>>> https://www.researchgate.net/profile/Gianmarco_Alberti4
>>> http://cainarchaeology.weebly.com/
>>> **************************************
>>> 
>>> 
>>>         [[alternative HTML version deleted]]
>>> 
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> 
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

--
Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)

University of Z?rich

Cell:       +41 (0)78 630 66 57
email:      Rainer at krugs.de
Skype:      RMkrug

PGP: 0x0F52F982




-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 488 bytes
Desc: Message signed with OpenPGP
URL: <https://stat.ethz.ch/pipermail/r-package-devel/attachments/20180807/1299c561/attachment.sig>

From gi@nm@rco@lberti @ending from gm@il@com  Tue Aug  7 12:59:19 2018
From: gi@nm@rco@lberti @ending from gm@il@com (Gianmarco Alberti)
Date: Tue, 7 Aug 2018 12:59:19 +0200
Subject: [R-pkg-devel] Building my R package: issue when importing two
 functions with the same name
In-Reply-To: <8d2eed3e-69df-e47b-47ca-bd39312b5373@statistik.tu-dortmund.de>
References: <ad0b924c-84e3-4516-be72-2d0bc1140918@Spark>
 <CALEXWq1j1PbLhJCyA-8rmtGk_h_=KYvzmQmjQnKsiiRoJhQvGw@mail.gmail.com>
 <8d2eed3e-69df-e47b-47ca-bd39312b5373@statistik.tu-dortmund.de>
Message-ID: <9dbfcdad-3eed-49ba-a494-6d9799ef7fd3@Spark>

Thanks indeed for the clarification.

I eventually managed to solve the issue. By the way, I have moved of the packages my package relies on to the Imports section.
I have checked my package and it returned no error nor note nor warning.
I have submitted it to CRAN.

Thanks for your prompt feedback.

Best
Gm A


**************************************
Dr Gianmarco Alberti (PhD)
(currently)
Research Support Officer II
Department of Classics and Archaeology
Faculty of Arts
University of Malta

(starting from 3rd September 2018)
Lecturer in Spatial Forensics
Department of Criminology
Faculty for Social Wellbeing
University of Malta
https://www.researchgate.net/profile/Gianmarco_Alberti4
http://cainarchaeology.weebly.com/
**************************************

Il 7 ago 2018, 11:14 +0200, Uwe Ligges <ligges at statistik.tu-dortmund.de>, ha scritto:
> ... and even if you are importing from several packages, you should
> import selective via importFrom directoves.
>
> If you need two functions with identical names, import at most one of
> them and rather use pkg::foo syntax to access them.
>
> Best,
> Uwe Ligges
>
>
>
>
>
> On 07.08.2018 10:14, I?aki ?car wrote:
> > El mar., 7 ago. 2018 a las 9:32, Gianmarco Alberti
> > (<gianmarcoalberti at gmail.com>) escribi?:
> > >
> > > I am building a R package, and I am facing an issue caused (as far as I understand) by the fact that some functions out of my package rely on two fuctions having the same name and coming from 2 different packages:
> > >
> > > pROC::roc
> > > spatstat::roc
> > >
> > > When checking the package via devtools::check(), I get the following warning:
> > >
> > > Warning: replacing previous import ?spatstat::roc? by ?pROC::roc? when loading ?GmAMisc?
> > >
> > > Note that both packages are listed among the Imports in my package's DESCRIPTION file, and that (within my functions) I have actually used spatstat::roc and pROC::roc where needed.
> >
> > I see:
> >
> > Depends: R (>= 3.4.0), ggplot2, ggrepel, rgdal, rgeos, raster, sp,
> > spatstat, maptools, spatialEco, dismo, pROC, kimisc, corrplot,
> > InPosition, lsr, gridExtra, caTools, plyr, classInt, coin, DescTools,
> > rWind, shape, rworldmap, cluster, RcmdrMisc, gdistance, Hmisc
> >
> > In general, it is not a good idea to depend on so many packages,
> > because what "Depends" do is to load and attach packages. Among other
> > issues, there is one that you are already experimenting: "roc" is
> > exported both by "spatstat" and "pROC", so one masks the other.
> >
> > The solution is to list them under "Imports" instead of "Depends". In
> > fact, my advice is to put as many packages as possible under
> > "Imports". Keep in "Depends" only those you would load and attach
> > anyway when working with your package, because you need all the
> > functions along with the ones your package exports. For the rest of
> > them, just use them as package::function to avoid this kind of
> > problem, and reexport functions selectively if needed.
> >
> > I?aki
> >
> > PS: I'm taking a look at other packages and I see that you always use
> > "Depends" and never "Imports". My general advice is against this
> > practice. Moreover, from the "Writing R Extensions" manual:
> >
> > "Field ?Depends? should nowadays be used rarely, only for packages
> > which are intended to be put on the search path to make their
> > facilities available to the end user (and not to the package itself):
> > for example it makes sense that a user of package 'latticeExtra' would
> > want the functions of package 'lattice' made available."
> >
> > >
> > > I have done some web-search but I could not locate any workaround that actually fixes my issue.
> > >
> > > Do you have any suggestion on the matter?
> > >
> > > **************************************
> > > Dr Gianmarco Alberti (PhD)
> > > (currently)
> > > Research Support Officer II
> > > Department of Classics and Archaeology
> > > Faculty of Arts
> > > University of Malta
> > >
> > > (starting from 3rd September 2018)
> > > Lecturer in Spatial Forensics
> > > Department of Criminology
> > > Faculty for Social Wellbeing
> > > University of Malta
> > > https://www.researchgate.net/profile/Gianmarco_Alberti4
> > > http://cainarchaeology.weebly.com/
> > > **************************************
> > >
> > >
> > > [[alternative HTML version deleted]]
> > >
> > > ______________________________________________
> > > R-package-devel at r-project.org mailing list
> > > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >

From murdoch@dunc@n @ending from gm@il@com  Tue Aug  7 13:11:21 2018
From: murdoch@dunc@n @ending from gm@il@com (Duncan Murdoch)
Date: Tue, 7 Aug 2018 07:11:21 -0400
Subject: [R-pkg-devel] Building my R package: issue when importing two
 functions with the same name
In-Reply-To: <ad0b924c-84e3-4516-be72-2d0bc1140918@Spark>
References: <ad0b924c-84e3-4516-be72-2d0bc1140918@Spark>
Message-ID: <d05931b3-916d-19f6-b1ba-aa7002d10f0a@gmail.com>

On 05/08/2018 4:21 PM, Gianmarco Alberti wrote:
> I am building a R package, and I am facing an issue caused (as far as I understand) by the fact that some functions out of my package rely on two fuctions having the same name and coming from 2 different packages:
> 
> pROC::roc
> spatstat::roc
> 

As I?aki pointed out, the main issue is that you should be using Import 
rather than Depends.  But I didn't see mentioned the fact that the 
NAMESPACE file can rename a function when you import it, e.g.

importFrom(pROC, pROCroc = roc)
importFrom(spatstat, spatstatroc = roc)

Now in your own functions you can use pROCroc() or spatstatroc() and 
they won't conflict.

(I was going to point you to the documentation for this, but I am not 
sure it is properly documented anywhere.)

Duncan Murdoch

> When checking the package via devtools::check(), I get the following warning:
> 
> Warning: replacing previous import ?spatstat::roc? by ?pROC::roc? when loading ?GmAMisc?
> 
> Note that both packages are listed among the Imports in my package's DESCRIPTION file, and that (within my functions) I have actually used spatstat::roc and pROC::roc where needed.
> 
> I have done some web-search but I could not locate any workaround that actually fixes my issue.
> 
> Do you have any suggestion on the matter?
> 
> **************************************
> Dr Gianmarco Alberti (PhD)
> (currently)
> Research Support Officer II
> Department of Classics and Archaeology
> Faculty of Arts
> University of Malta
> 
> (starting from 3rd September 2018)
> Lecturer in Spatial Forensics
> Department of Criminology
> Faculty for Social Wellbeing
> University of Malta
> https://www.researchgate.net/profile/Gianmarco_Alberti4
> http://cainarchaeology.weebly.com/
> **************************************
> 
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From R@iner @ending from krug@@de  Tue Aug  7 13:23:04 2018
From: R@iner @ending from krug@@de (Rainer M Krug)
Date: Tue, 7 Aug 2018 13:23:04 +0200
Subject: [R-pkg-devel] Building my R package: issue when importing two
 functions with the same name
In-Reply-To: <d05931b3-916d-19f6-b1ba-aa7002d10f0a@gmail.com>
References: <ad0b924c-84e3-4516-be72-2d0bc1140918@Spark>
 <d05931b3-916d-19f6-b1ba-aa7002d10f0a@gmail.com>
Message-ID: <F937F45D-39CB-48C3-901B-31F678B2065B@krugs.de>

This is very useful - didn?t know that.

Thanks

Rainer


> On 7 Aug 2018, at 13:11, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> 
> On 05/08/2018 4:21 PM, Gianmarco Alberti wrote:
>> I am building a R package, and I am facing an issue caused (as far as I understand) by the fact that some functions out of my package rely on two fuctions having the same name and coming from 2 different packages:
>> pROC::roc
>> spatstat::roc
> 
> As I?aki pointed out, the main issue is that you should be using Import rather than Depends.  But I didn't see mentioned the fact that the NAMESPACE file can rename a function when you import it, e.g.
> 
> importFrom(pROC, pROCroc = roc)
> importFrom(spatstat, spatstatroc = roc)
> 
> Now in your own functions you can use pROCroc() or spatstatroc() and they won't conflict.
> 
> (I was going to point you to the documentation for this, but I am not sure it is properly documented anywhere.)
> 
> Duncan Murdoch
> 
>> When checking the package via devtools::check(), I get the following warning:
>> Warning: replacing previous import ?spatstat::roc? by ?pROC::roc? when loading ?GmAMisc?
>> Note that both packages are listed among the Imports in my package's DESCRIPTION file, and that (within my functions) I have actually used spatstat::roc and pROC::roc where needed.
>> I have done some web-search but I could not locate any workaround that actually fixes my issue.
>> Do you have any suggestion on the matter?
>> **************************************
>> Dr Gianmarco Alberti (PhD)
>> (currently)
>> Research Support Officer II
>> Department of Classics and Archaeology
>> Faculty of Arts
>> University of Malta
>> (starting from 3rd September 2018)
>> Lecturer in Spatial Forensics
>> Department of Criminology
>> Faculty for Social Wellbeing
>> University of Malta
>> https://www.researchgate.net/profile/Gianmarco_Alberti4
>> http://cainarchaeology.weebly.com/
>> **************************************
>> 	[[alternative HTML version deleted]]
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> 
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

--
Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)

University of Z?rich

Cell:       +41 (0)78 630 66 57
email:      Rainer at krugs.de
Skype:      RMkrug

PGP: 0x0F52F982




-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 488 bytes
Desc: Message signed with OpenPGP
URL: <https://stat.ethz.ch/pipermail/r-package-devel/attachments/20180807/5bbbd2f7/attachment.sig>

From gi@nm@rco@lberti @ending from gm@il@com  Tue Aug  7 14:21:28 2018
From: gi@nm@rco@lberti @ending from gm@il@com (Gianmarco Alberti)
Date: Tue, 7 Aug 2018 14:21:28 +0200
Subject: [R-pkg-devel] Building my R package: issue when importing two
 functions with the same name
In-Reply-To: <d05931b3-916d-19f6-b1ba-aa7002d10f0a@gmail.com>
References: <ad0b924c-84e3-4516-be72-2d0bc1140918@Spark>
 <d05931b3-916d-19f6-b1ba-aa7002d10f0a@gmail.com>
Message-ID: <bf8c3ec2-0d94-4625-bc80-07ddc9c3af00@Spark>

@Duncan:

Extremely interesting...thanks.

Gm


**************************************
Dr Gianmarco Alberti (PhD)
(currently)
Research Support Officer II
Department of Classics and Archaeology
Faculty of Arts
University of Malta

(starting from 3rd September 2018)
Lecturer in Spatial Forensics
Department of Criminology
Faculty for Social Wellbeing
University of Malta
https://www.researchgate.net/profile/Gianmarco_Alberti4
http://cainarchaeology.weebly.com/
**************************************

Il 7 ago 2018, 13:11 +0200, Duncan Murdoch <murdoch.duncan at gmail.com>, ha scritto:
> On 05/08/2018 4:21 PM, Gianmarco Alberti wrote:
> > I am building a R package, and I am facing an issue caused (as far as I understand) by the fact that some functions out of my package rely on two fuctions having the same name and coming from 2 different packages:
> >
> > pROC::roc
> > spatstat::roc
> >
>
> As I?aki pointed out, the main issue is that you should be using Import
> rather than Depends. But I didn't see mentioned the fact that the
> NAMESPACE file can rename a function when you import it, e.g.
>
> importFrom(pROC, pROCroc = roc)
> importFrom(spatstat, spatstatroc = roc)
>
> Now in your own functions you can use pROCroc() or spatstatroc() and
> they won't conflict.
>
> (I was going to point you to the documentation for this, but I am not
> sure it is properly documented anywhere.)
>
> Duncan Murdoch
>
> > When checking the package via devtools::check(), I get the following warning:
> >
> > Warning: replacing previous import ?spatstat::roc? by ?pROC::roc? when loading ?GmAMisc?
> >
> > Note that both packages are listed among the Imports in my package's DESCRIPTION file, and that (within my functions) I have actually used spatstat::roc and pROC::roc where needed.
> >
> > I have done some web-search but I could not locate any workaround that actually fixes my issue.
> >
> > Do you have any suggestion on the matter?
> >
> > **************************************
> > Dr Gianmarco Alberti (PhD)
> > (currently)
> > Research Support Officer II
> > Department of Classics and Archaeology
> > Faculty of Arts
> > University of Malta
> >
> > (starting from 3rd September 2018)
> > Lecturer in Spatial Forensics
> > Department of Criminology
> > Faculty for Social Wellbeing
> > University of Malta
> > https://www.researchgate.net/profile/Gianmarco_Alberti4
> > http://cainarchaeology.weebly.com/
> > **************************************
> >
> >
> > [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
>

From rhelp @ending from eoo@@dd@@nl  Tue Aug  7 14:26:35 2018
From: rhelp @ending from eoo@@dd@@nl (Jan van der Laan)
Date: Tue, 7 Aug 2018 14:26:35 +0200
Subject: [R-pkg-devel] Run garbage collector when too many open files
Message-ID: <627f7758-c5ae-0ab8-b87b-10c6f5a1edc1@eoos.dds.nl>



In my package I open handles to temporary files from c++, handles to 
them are returned to R through vptr objects. The files are deleted then 
the corresponding R-object is deleted and the garbage collector runs:

a <- lvec(10, "integer")
rm(a)

Then when the garbage collector runs the file is deleted. However, on 
some platforms (probably with lower limits on the maximum number of file 
handles a process can have open), I run into the problem that the 
garbage collector doesn't run often enough. In this case that means that 
another package of mine using this package generates an error when its 
tests are run.

The simplest solution is to add some calls to gc() in my tests. But a 
more general/automatic solution would be nice.

I thought about something in the lines of

robust_lvec <- function(...) {
   tryCatch({
     lvec(...)
   }, error = function(e) {
     gc()
     lvec(...) # duplicated code
   })
}

e.g. try to open a file, when that fails call the garbage collector and 
try again. However, this introduces duplicated code (in this case only 
one line, but that can be more), and doesn't help if it is another 
function that tries to open a file.

Is there a better solution?

Thanks!

Jan


From ligge@ @ending from @t@ti@tik@tu-dortmund@de  Tue Aug  7 15:24:37 2018
From: ligge@ @ending from @t@ti@tik@tu-dortmund@de (Uwe Ligges)
Date: Tue, 7 Aug 2018 15:24:37 +0200
Subject: [R-pkg-devel] Run garbage collector when too many open files
In-Reply-To: <627f7758-c5ae-0ab8-b87b-10c6f5a1edc1@eoos.dds.nl>
References: <627f7758-c5ae-0ab8-b87b-10c6f5a1edc1@eoos.dds.nl>
Message-ID: <ccb2f0f9-ce61-510f-6f6f-6e41d5aae6b4@statistik.tu-dortmund.de>

Why not add functionality that allows to delete object + runs cleanup code?

Best,
Uwe Ligges



On 07.08.2018 14:26, Jan van der Laan wrote:
> 
> 
> In my package I open handles to temporary files from c++, handles to 
> them are returned to R through vptr objects. The files are deleted then 
> the corresponding R-object is deleted and the garbage collector runs:
> 
> a <- lvec(10, "integer")
> rm(a)
> 
> Then when the garbage collector runs the file is deleted. However, on 
> some platforms (probably with lower limits on the maximum number of file 
> handles a process can have open), I run into the problem that the 
> garbage collector doesn't run often enough. In this case that means that 
> another package of mine using this package generates an error when its 
> tests are run.
> 
> The simplest solution is to add some calls to gc() in my tests. But a 
> more general/automatic solution would be nice.
> 
> I thought about something in the lines of
> 
> robust_lvec <- function(...) {
>  ? tryCatch({
>  ??? lvec(...)
>  ? }, error = function(e) {
>  ??? gc()
>  ??? lvec(...) # duplicated code
>  ? })
> }
> 
> e.g. try to open a file, when that fails call the garbage collector and 
> try again. However, this introduces duplicated code (in this case only 
> one line, but that can be more), and doesn't help if it is another 
> function that tries to open a file.
> 
> Is there a better solution?
> 
> Thanks!
> 
> Jan
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From P@ul@O@@enbruggen @ending from unh@edu  Tue Aug  7 18:27:01 2018
From: P@ul@O@@enbruggen @ending from unh@edu (Ossenbruggen, Paul)
Date: Tue, 7 Aug 2018 16:27:01 +0000
Subject: [R-pkg-devel] Can Submission Failure
Message-ID: <5A841F48-30E3-41D0-A000-C60F40D27B65@unh.edu>

I am new to CRAN submissions and need assistance.

I received this set of error messages previously. I removed all these hidden files before resubmitting my package. They are back.
Question #1 How do I prevent this this?

PJO:Desktop PJO$ tar -zcvf Basic.tar.gz Basic
Found the following hidden files and directories:

  .DS_Store
  .RData
  .Rhistory
  ._NAMESPACE
  .gitignore
  .travis.yml
  R/.DS_Store
  R/._brkdelay.R
  R/._brkdelay3.R
  R/._brktrials3.R
  R/._brktrials3setup.R
  R/._merge.R
  R/._merge3.R
  R/._mergedemo.R
  R/._plotdesire3.R
  R/._plotmerge3.R
  R/._run.R
  R/._trajectoryab3.R
  R/._tuxvfix3.R
  R/._vehid.R
  R/._xabmerge.R
  R/._xabmerge3.R
  data/.DS_Store
  data/.Rapp.history
  man/.Rapp.history
  vignettes/._cartools.Rmd
  vignettes/.gitignore
  .Rproj.user
  .git


Finding an answer to this question will be a big help.


I performed R CMD check and devtools::build_win() before I submitted the above. For completeness, here are my submit statements.

####################################################################################################
From: CRAN submission <cran-sysadmin at xmpalantir.wu.ac.at<mailto:cran-sysadmin at xmpalantir.wu.ac.at>>
Subject: CRAN submission Basic 0.1.0
Date: August 7, 2018 at 11:29:34 AM EDT
To: CRAN <cran-submissions at r-project.org<mailto:cran-submissions at r-project.org>>
Reply-To: Paul J. Ossenbruggen <pjo at unh.edu<mailto:pjo at unh.edu>>


The maintainer confirms that he or she
has read and agrees to the CRAN policies.

Submitter's comment: This submittal passes these checks. However, I am
 uncertain that my submittal succeed. See #1, #2, #3,
 #4 and #5.

R CMD check results
0 errors | 0
 warnings | 0 notes
R CMD check succeeded


 devtools::build_win()
Building windows version of
 cartools for R-devel with
 win-builder.r-project.org<http://win-builder.r-project.org/>.

#1. Warning:
 ?inst/doc? files
   ?cartools.Rmd?,
 ?cartools.html?, ?cartools.R?
 ignored as
 vignettes have been rebuilt.
 Run R CMD build with
 --no-build-vignettes to prevent rebuilding.
*
 checking for LF line-endings in source and make files
 and shell scripts
* checking for empty or unneeded
 directories
* looking to see if a
 ?data/datalist? file should be added
#2.
*
 building ?cartools_0.1.0.tar.gz?
I don't understand what this file is for. I am uploading:  Basic.tar.gz.

#3
I have instructed the following
 folder to be ignored:  .Rproj.user
It is not ignored
 in GitHub. It contains items that I did not
 create.
This does not seem correct,

#4. I
 receievd a win-builder email stating:
Possibly
 mis-spelled words in DESCRIPTION: cartools
 (3:8)
Unknown, possibly mis-spelled, fields in
 DESCRIPTION: 'Remotes'
The above items are
 false/postives.

I don't understand the following
 statement.
The Title field is just the package name:
 provide a real title.

#5. I am a subscriber but my
 questions to r-packages-devel bounce.





=================================================

Original content of DESCRIPTION file:

Package: Basic
Type: Package
Title: CARTOOLS Package
Version: 0.1.0
Author: person("Paul", "Ossenbruggen", email = "pjo at unh.edu<mailto:pjo at unh.edu>", role = c("aut", "cre"))
Maintainer: "Paul J. Ossenbruggen" <pjo at unh.edu<mailto:pjo at unh.edu>>
Description: The cartools package is designed for college students studying transportation engineering and for transportation professionals and researchers interested in understanding the complex relationships associated with freeway performance and traffic breakdown. Emphasis is placed on: (1) Traffic noise or volatility; (2) Driver behavior and safety; and (3) Stochastic modeling, models that explain breakdown and performance.
License: MIT + file LICENSE
Encoding: UTF-8
LazyData: true
Depends: R (>= 2.10)
RoxygenNote: 6.1.0
Remotes: pjossenbruggen/Basic
Imports:
   animation,
   devtools,
   dplyr,
   gapminder,
   ggplot2,
   graphics,
   grDevices,
   knitr,
   rlist,
   rmarkdown,
   roxygen2,
   sde,
   shiny,
   stats,
   tidyverse,
   usethis,
   utils
Suggests:
VignetteBuilder: knitr









	[[alternative HTML version deleted]]


From zk@mv@r @ending from gm@il@com  Tue Aug  7 19:05:13 2018
From: zk@mv@r @ending from gm@il@com (Zhian Kamvar)
Date: Tue, 7 Aug 2018 18:05:13 +0100
Subject: [R-pkg-devel] Can Submission Failure
In-Reply-To: <5A841F48-30E3-41D0-A000-C60F40D27B65@unh.edu>
References: <5A841F48-30E3-41D0-A000-C60F40D27B65@unh.edu>
Message-ID: <DEF8D757-F1F5-4F73-933E-33E9978A7759@gmail.com>

Copy this output into a file called .Rbuildignore at the top of the directory:

>  .DS_Store
>  .RData
>  .Rhistory
>  ._*
>  .gitignore
>  .travis.yml
>  R/.DS_Store
>  R/._*
>  data/.DS_Store
>  data/.Rapp.history
>  man/.Rapp.history
>  vignettes/._*
>  vignettes/.gitignore
>  .Rproj.user
>  .git

Hope that helps,
Zhian

> On Aug 7, 2018, at 17:27 , Ossenbruggen, Paul <Paul.Ossenbruggen at unh.edu> wrote:
> 
> I am new to CRAN submissions and need assistance.
> 
> I received this set of error messages previously. I removed all these hidden files before resubmitting my package. They are back.
> Question #1 How do I prevent this this?
> 
> PJO:Desktop PJO$ tar -zcvf Basic.tar.gz Basic
> Found the following hidden files and directories:
> 
>  .DS_Store
>  .RData
>  .Rhistory
>  ._NAMESPACE
>  .gitignore
>  .travis.yml
>  R/.DS_Store
>  R/._brkdelay.R
>  R/._brkdelay3.R
>  R/._brktrials3.R
>  R/._brktrials3setup.R
>  R/._merge.R
>  R/._merge3.R
>  R/._mergedemo.R
>  R/._plotdesire3.R
>  R/._plotmerge3.R
>  R/._run.R
>  R/._trajectoryab3.R
>  R/._tuxvfix3.R
>  R/._vehid.R
>  R/._xabmerge.R
>  R/._xabmerge3.R
>  data/.DS_Store
>  data/.Rapp.history
>  man/.Rapp.history
>  vignettes/._cartools.Rmd
>  vignettes/.gitignore
>  .Rproj.user
>  .git
> 
> 
> Finding an answer to this question will be a big help.
> 
> 
> I performed R CMD check and devtools::build_win() before I submitted the above. For completeness, here are my submit statements.
> 
> ####################################################################################################
> From: CRAN submission <cran-sysadmin at xmpalantir.wu.ac.at<mailto:cran-sysadmin at xmpalantir.wu.ac.at>>
> Subject: CRAN submission Basic 0.1.0
> Date: August 7, 2018 at 11:29:34 AM EDT
> To: CRAN <cran-submissions at r-project.org<mailto:cran-submissions at r-project.org>>
> Reply-To: Paul J. Ossenbruggen <pjo at unh.edu<mailto:pjo at unh.edu>>
> 
> 
> The maintainer confirms that he or she
> has read and agrees to the CRAN policies.
> 
> Submitter's comment: This submittal passes these checks. However, I am
> uncertain that my submittal succeed. See #1, #2, #3,
> #4 and #5.
> 
> R CMD check results
> 0 errors | 0
> warnings | 0 notes
> R CMD check succeeded
> 
> 
> devtools::build_win()
> Building windows version of
> cartools for R-devel with
> win-builder.r-project.org<http://win-builder.r-project.org/>.
> 
> #1. Warning:
> ?inst/doc? files
>   ?cartools.Rmd?,
> ?cartools.html?, ?cartools.R?
> ignored as
> vignettes have been rebuilt.
> Run R CMD build with
> --no-build-vignettes to prevent rebuilding.
> *
> checking for LF line-endings in source and make files
> and shell scripts
> * checking for empty or unneeded
> directories
> * looking to see if a
> ?data/datalist? file should be added
> #2.
> *
> building ?cartools_0.1.0.tar.gz?
> I don't understand what this file is for. I am uploading:  Basic.tar.gz.
> 
> #3
> I have instructed the following
> folder to be ignored:  .Rproj.user
> It is not ignored
> in GitHub. It contains items that I did not
> create.
> This does not seem correct,
> 
> #4. I
> receievd a win-builder email stating:
> Possibly
> mis-spelled words in DESCRIPTION: cartools
> (3:8)
> Unknown, possibly mis-spelled, fields in
> DESCRIPTION: 'Remotes'
> The above items are
> false/postives.
> 
> I don't understand the following
> statement.
> The Title field is just the package name:
> provide a real title.
> 
> #5. I am a subscriber but my
> questions to r-packages-devel bounce.
> 
> 
> 
> 
> 
> =================================================
> 
> Original content of DESCRIPTION file:
> 
> Package: Basic
> Type: Package
> Title: CARTOOLS Package
> Version: 0.1.0
> Author: person("Paul", "Ossenbruggen", email = "pjo at unh.edu<mailto:pjo at unh.edu>", role = c("aut", "cre"))
> Maintainer: "Paul J. Ossenbruggen" <pjo at unh.edu<mailto:pjo at unh.edu>>
> Description: The cartools package is designed for college students studying transportation engineering and for transportation professionals and researchers interested in understanding the complex relationships associated with freeway performance and traffic breakdown. Emphasis is placed on: (1) Traffic noise or volatility; (2) Driver behavior and safety; and (3) Stochastic modeling, models that explain breakdown and performance.
> License: MIT + file LICENSE
> Encoding: UTF-8
> LazyData: true
> Depends: R (>= 2.10)
> RoxygenNote: 6.1.0
> Remotes: pjossenbruggen/Basic
> Imports:
>   animation,
>   devtools,
>   dplyr,
>   gapminder,
>   ggplot2,
>   graphics,
>   grDevices,
>   knitr,
>   rlist,
>   rmarkdown,
>   roxygen2,
>   sde,
>   shiny,
>   stats,
>   tidyverse,
>   usethis,
>   utils
> Suggests:
> VignetteBuilder: knitr
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 833 bytes
Desc: Message signed with OpenPGP
URL: <https://stat.ethz.ch/pipermail/r-package-devel/attachments/20180807/16f8a7b1/attachment.sig>

From edd @ending from debi@n@org  Tue Aug  7 19:24:28 2018
From: edd @ending from debi@n@org (Dirk Eddelbuettel)
Date: Tue, 7 Aug 2018 12:24:28 -0500
Subject: [R-pkg-devel] Can Submission Failure
In-Reply-To: <5A841F48-30E3-41D0-A000-C60F40D27B65@unh.edu>
References: <5A841F48-30E3-41D0-A000-C60F40D27B65@unh.edu>
Message-ID: <23401.54732.886959.330776@rob.eddelbuettel.com>


On 7 August 2018 at 16:27, Ossenbruggen, Paul wrote:
| I am new to CRAN submissions and need assistance.
| 
| I received this set of error messages previously. I removed all these hidden files before resubmitting my package. They are back.
| Question #1 How do I prevent this this?

1. (Optional) Delete them. Write a script named cleanup with executable mode
with calls rm on them. The each build will remove them in its cleanup phase.

2. Add them to .Rbuildignore. See Writing R Extensions for details.

Dirk
 
| PJO:Desktop PJO$ tar -zcvf Basic.tar.gz Basic
| Found the following hidden files and directories:
| 
|   .DS_Store
|   .RData
|   .Rhistory
|   ._NAMESPACE
|   .gitignore
|   .travis.yml
|   R/.DS_Store
|   R/._brkdelay.R
|   R/._brkdelay3.R
|   R/._brktrials3.R
|   R/._brktrials3setup.R
|   R/._merge.R
|   R/._merge3.R
|   R/._mergedemo.R
|   R/._plotdesire3.R
|   R/._plotmerge3.R
|   R/._run.R
|   R/._trajectoryab3.R
|   R/._tuxvfix3.R
|   R/._vehid.R
|   R/._xabmerge.R
|   R/._xabmerge3.R
|   data/.DS_Store
|   data/.Rapp.history
|   man/.Rapp.history
|   vignettes/._cartools.Rmd
|   vignettes/.gitignore
|   .Rproj.user
|   .git
| 
| 
| Finding an answer to this question will be a big help.
| 
| 
| I performed R CMD check and devtools::build_win() before I submitted the above. For completeness, here are my submit statements.
| 
| ####################################################################################################
| From: CRAN submission <cran-sysadmin at xmpalantir.wu.ac.at<mailto:cran-sysadmin at xmpalantir.wu.ac.at>>
| Subject: CRAN submission Basic 0.1.0
| Date: August 7, 2018 at 11:29:34 AM EDT
| To: CRAN <cran-submissions at r-project.org<mailto:cran-submissions at r-project.org>>
| Reply-To: Paul J. Ossenbruggen <pjo at unh.edu<mailto:pjo at unh.edu>>
| 
| 
| The maintainer confirms that he or she
| has read and agrees to the CRAN policies.
| 
| Submitter's comment: This submittal passes these checks. However, I am
|  uncertain that my submittal succeed. See #1, #2, #3,
|  #4 and #5.
| 
| R CMD check results
| 0 errors | 0
|  warnings | 0 notes
| R CMD check succeeded
| 
| 
|  devtools::build_win()
| Building windows version of
|  cartools for R-devel with
|  win-builder.r-project.org<http://win-builder.r-project.org/>.
| 
| #1. Warning:
|  ?inst/doc? files
|    ?cartools.Rmd?,
|  ?cartools.html?, ?cartools.R?
|  ignored as
|  vignettes have been rebuilt.
|  Run R CMD build with
|  --no-build-vignettes to prevent rebuilding.
| *
|  checking for LF line-endings in source and make files
|  and shell scripts
| * checking for empty or unneeded
|  directories
| * looking to see if a
|  ?data/datalist? file should be added
| #2.
| *
|  building ?cartools_0.1.0.tar.gz?
| I don't understand what this file is for. I am uploading:  Basic.tar.gz.
| 
| #3
| I have instructed the following
|  folder to be ignored:  .Rproj.user
| It is not ignored
|  in GitHub. It contains items that I did not
|  create.
| This does not seem correct,
| 
| #4. I
|  receievd a win-builder email stating:
| Possibly
|  mis-spelled words in DESCRIPTION: cartools
|  (3:8)
| Unknown, possibly mis-spelled, fields in
|  DESCRIPTION: 'Remotes'
| The above items are
|  false/postives.
| 
| I don't understand the following
|  statement.
| The Title field is just the package name:
|  provide a real title.
| 
| #5. I am a subscriber but my
|  questions to r-packages-devel bounce.
| 
| 
| 
| 
| 
| =================================================
| 
| Original content of DESCRIPTION file:
| 
| Package: Basic
| Type: Package
| Title: CARTOOLS Package
| Version: 0.1.0
| Author: person("Paul", "Ossenbruggen", email = "pjo at unh.edu<mailto:pjo at unh.edu>", role = c("aut", "cre"))
| Maintainer: "Paul J. Ossenbruggen" <pjo at unh.edu<mailto:pjo at unh.edu>>
| Description: The cartools package is designed for college students studying transportation engineering and for transportation professionals and researchers interested in understanding the complex relationships associated with freeway performance and traffic breakdown. Emphasis is placed on: (1) Traffic noise or volatility; (2) Driver behavior and safety; and (3) Stochastic modeling, models that explain breakdown and performance.
| License: MIT + file LICENSE
| Encoding: UTF-8
| LazyData: true
| Depends: R (>= 2.10)
| RoxygenNote: 6.1.0
| Remotes: pjossenbruggen/Basic
| Imports:
|    animation,
|    devtools,
|    dplyr,
|    gapminder,
|    ggplot2,
|    graphics,
|    grDevices,
|    knitr,
|    rlist,
|    rmarkdown,
|    roxygen2,
|    sde,
|    shiny,
|    stats,
|    tidyverse,
|    usethis,
|    utils
| Suggests:
| VignetteBuilder: knitr
| 
| 
| 
| 
| 
| 
| 
| 
| 
| 	[[alternative HTML version deleted]]
| 
| ______________________________________________
| R-package-devel at r-project.org mailing list
| https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From P@ul@O@@enbruggen @ending from unh@edu  Tue Aug  7 20:07:01 2018
From: P@ul@O@@enbruggen @ending from unh@edu (Ossenbruggen, Paul)
Date: Tue, 7 Aug 2018 18:07:01 +0000
Subject: [R-pkg-devel] CRAN questions
Message-ID: <DA2495F3-2FF8-43B2-A1CE-73D5D71E220E@unh.edu>

Hello,

I believe the missed spelled words are false/positives, but I am new to R package development and uncertain if these Notes are will cause rejection:


Possibly mis-spelled words in DESCRIPTION:
  cartools (3:8)

Unknown, possibly mis-spelled, fields in DESCRIPTION:
  ?Remotes'


 The following Note may be serious. I would address it but I cannot decipher its meaning. My best guess is that the package name, ?cartools? does not match ?Basic.tar.gz?.


The Title field is just the package name: provide a real title.

 Guidance will be appreciated.

Thanks,


Paul

	[[alternative HTML version deleted]]


From ligge@ @ending from @t@ti@tik@tu-dortmund@de  Tue Aug  7 20:11:46 2018
From: ligge@ @ending from @t@ti@tik@tu-dortmund@de (Uwe Ligges)
Date: Tue, 7 Aug 2018 20:11:46 +0200
Subject: [R-pkg-devel] CRAN questions
In-Reply-To: <DA2495F3-2FF8-43B2-A1CE-73D5D71E220E@unh.edu>
References: <DA2495F3-2FF8-43B2-A1CE-73D5D71E220E@unh.edu>
Message-ID: <69ebec0d-f53a-3440-abda-ad4ebc02b94b@statistik.tu-dortmund.de>



On 07.08.2018 20:07, Ossenbruggen, Paul wrote:
> Hello,
> 
> I believe the missed spelled words are false/positives, but I am new to R package development and uncertain if these Notes are will cause rejection:
> 
> 
> Possibly mis-spelled words in DESCRIPTION:
>    cartools (3:8)


Software names (only) should be single quotes in Title and Description 
fields.


> 
> Unknown, possibly mis-spelled, fields in DESCRIPTION:
>    ?Remotes'

Please get rid of that field for CRAN submissions.



> 
>   The following Note may be serious. I would address it but I cannot decipher its meaning. My best guess is that the package name, ?cartools? does not match ?Basic.tar.gz?.

Basic.tar.gz can't be a valid filename prodiced by R CMD build.

R CMD build will use the package name and version number for the name of 
the tarball.


> 
> 
> The Title field is just the package name: provide a real title.

Please provide a name

Package:

and a title in

Title:


Where the title can be a bit more descriptive than the name, of course.

Look at examples what other packages do.

Best,
Uwe Ligges





>   Guidance will be appreciated.
> 
> Thanks,
> 
> 
> Paul
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From dwin@emiu@ @ending from comc@@t@net  Tue Aug  7 21:04:35 2018
From: dwin@emiu@ @ending from comc@@t@net (David Winsemius)
Date: Tue, 7 Aug 2018 12:04:35 -0700
Subject: [R-pkg-devel] CRAN questions
In-Reply-To: <69ebec0d-f53a-3440-abda-ad4ebc02b94b@statistik.tu-dortmund.de>
References: <DA2495F3-2FF8-43B2-A1CE-73D5D71E220E@unh.edu>
 <69ebec0d-f53a-3440-abda-ad4ebc02b94b@statistik.tu-dortmund.de>
Message-ID: <ED6A502C-C179-4AAE-9DF5-608DECD81CA3@comcast.net>

On my mail client the two ?quotes? are not matching. One appears vertical and the other slightly slanting. 

Sent from my iPhone (which could mean I?m seeing an artifact arising in Cupertino. )

David

> On Aug 7, 2018, at 11:11 AM, Uwe Ligges <ligges at statistik.tu-dortmund.de> wrote:
> 
> 
> 
>> On 07.08.2018 20:07, Ossenbruggen, Paul wrote:
>> Hello,
>> I believe the missed spelled words are false/positives, but I am new to R package development and uncertain if these Notes are will cause rejection:
>> Possibly mis-spelled words in DESCRIPTION:
>>   cartools (3:8)
> 
> 
> Software names (only) should be single quotes in Title and Description fields.
> 
> 
>> Unknown, possibly mis-spelled, fields in DESCRIPTION:
>>   ?Remotes'
> 
> Please get rid of that field for CRAN submissions.
> 
> 
> 
>>  The following Note may be serious. I would address it but I cannot decipher its meaning. My best guess is that the package name, ?cartools? does not match ?Basic.tar.gz?.
> 
> Basic.tar.gz can't be a valid filename prodiced by R CMD build.
> 
> R CMD build will use the package name and version number for the name of the tarball.
> 
> 
>> The Title field is just the package name: provide a real title.
> 
> Please provide a name
> 
> Package:
> 
> 
>> On 07.08.2018 20:07, Ossenbruggen, Paul wrote:
>> Hello,
>> I believe the missed spelled words are false/positives, but I am new to R package development and uncertain if these Notes are will cause rejection:
>> Possibly mis-spelled words in DESCRIPTION:
>>   cartools (3:8)
> 
> 
> Software names (only) should be single quotes in Title and Description fields.
> 
> 
>> Unknown, possibly mis-spelled, fields in DESCRIPTION:
>>   ?Remotes'
> 
> Please get rid of that field for CRAN submissions.
> 
> 
> 
>>  The following Note may be serious. I would address it but I cannot decipher its meaning. My best guess is that the package name, ?cartools? does not match ?Basic.tar.gz?.
> 
> Basic.tar.gz can't be a valid filename prodiced by R CMD build.
> 
> R CMD build will use the package name and version number for the name of the tarball.
> 
> 
>> The Title field is just the package name: provide a real title.
> 
> Please provide a name
> 
> Package:
> 
> and a title in
> 
> Title:
> 
> 
> Where the title can be a bit more descriptive than the name, of course.
> 
> Look at examples what other packages do.
> 
> Best,
> Uwe Ligges
> 
> 
> 
> 
> 
>>  Guidance will be appreciated.
>> Thanks,
>> Paul
>>    [[alternative HTML version deleted]]
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> 
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From murdoch@dunc@n @ending from gm@il@com  Wed Aug  8 00:13:27 2018
From: murdoch@dunc@n @ending from gm@il@com (Duncan Murdoch)
Date: Tue, 7 Aug 2018 18:13:27 -0400
Subject: [R-pkg-devel] Can Submission Failure
In-Reply-To: <5A841F48-30E3-41D0-A000-C60F40D27B65@unh.edu>
References: <5A841F48-30E3-41D0-A000-C60F40D27B65@unh.edu>
Message-ID: <9833a0e8-e649-e533-e203-ffb4777d9a2e@gmail.com>

On 07/08/2018 12:27 PM, Ossenbruggen, Paul wrote:
> I am new to CRAN submissions and need assistance.
> 
> I received this set of error messages previously. I removed all these hidden files before resubmitting my package. They are back.
> Question #1 How do I prevent this this?
> 
> PJO:Desktop PJO$ tar -zcvf Basic.tar.gz Basic
> Found the following hidden files and directories:
> 
>    .DS_Store
>    .RData
>    .Rhistory
>    ._NAMESPACE
>    .gitignore
>    .travis.yml
>    R/.DS_Store
>    R/._brkdelay.R
>    R/._brkdelay3.R
>    R/._brktrials3.R
>    R/._brktrials3setup.R
>    R/._merge.R
>    R/._merge3.R
>    R/._mergedemo.R
>    R/._plotdesire3.R
>    R/._plotmerge3.R
>    R/._run.R
>    R/._trajectoryab3.R
>    R/._tuxvfix3.R
>    R/._vehid.R
>    R/._xabmerge.R
>    R/._xabmerge3.R
>    data/.DS_Store
>    data/.Rapp.history
>    man/.Rapp.history
>    vignettes/._cartools.Rmd
>    vignettes/.gitignore
>    .Rproj.user
>    .git
> 
> 
> Finding an answer to this question will be a big help.
> 
> 
> I performed R CMD check and devtools::build_win() before I submitted the above. For completeness, here are my submit statements.

You are doing it wrong.  You should not be using tar to build your 
tarball, you should let R do it.

I don't know exactly what devtools::build_win() does to build the 
tarball, but it then sends it to WinBuilder:  you don't need to do that 
for a CRAN submission.

Duncan Murdoch

> 
> ####################################################################################################
> From: CRAN submission <cran-sysadmin at xmpalantir.wu.ac.at<mailto:cran-sysadmin at xmpalantir.wu.ac.at>>
> Subject: CRAN submission Basic 0.1.0
> Date: August 7, 2018 at 11:29:34 AM EDT
> To: CRAN <cran-submissions at r-project.org<mailto:cran-submissions at r-project.org>>
> Reply-To: Paul J. Ossenbruggen <pjo at unh.edu<mailto:pjo at unh.edu>>
> 
> 
> The maintainer confirms that he or she
> has read and agrees to the CRAN policies.
> 
> Submitter's comment: This submittal passes these checks. However, I am
>   uncertain that my submittal succeed. See #1, #2, #3,
>   #4 and #5.
> 
> R CMD check results
> 0 errors | 0
>   warnings | 0 notes
> R CMD check succeeded
> 
> 
>   devtools::build_win()
> Building windows version of
>   cartools for R-devel with
>   win-builder.r-project.org<http://win-builder.r-project.org/>.
> 
> #1. Warning:
>   ?inst/doc? files
>     ?cartools.Rmd?,
>   ?cartools.html?, ?cartools.R?
>   ignored as
>   vignettes have been rebuilt.
>   Run R CMD build with
>   --no-build-vignettes to prevent rebuilding.
> *
>   checking for LF line-endings in source and make files
>   and shell scripts
> * checking for empty or unneeded
>   directories
> * looking to see if a
>   ?data/datalist? file should be added
> #2.
> *
>   building ?cartools_0.1.0.tar.gz?
> I don't understand what this file is for. I am uploading:  Basic.tar.gz.
> 
> #3
> I have instructed the following
>   folder to be ignored:  .Rproj.user
> It is not ignored
>   in GitHub. It contains items that I did not
>   create.
> This does not seem correct,
> 
> #4. I
>   receievd a win-builder email stating:
> Possibly
>   mis-spelled words in DESCRIPTION: cartools
>   (3:8)
> Unknown, possibly mis-spelled, fields in
>   DESCRIPTION: 'Remotes'
> The above items are
>   false/postives.
> 
> I don't understand the following
>   statement.
> The Title field is just the package name:
>   provide a real title.
> 
> #5. I am a subscriber but my
>   questions to r-packages-devel bounce.
> 
> 
> 
> 
> 
> =================================================
> 
> Original content of DESCRIPTION file:
> 
> Package: Basic
> Type: Package
> Title: CARTOOLS Package
> Version: 0.1.0
> Author: person("Paul", "Ossenbruggen", email = "pjo at unh.edu<mailto:pjo at unh.edu>", role = c("aut", "cre"))
> Maintainer: "Paul J. Ossenbruggen" <pjo at unh.edu<mailto:pjo at unh.edu>>
> Description: The cartools package is designed for college students studying transportation engineering and for transportation professionals and researchers interested in understanding the complex relationships associated with freeway performance and traffic breakdown. Emphasis is placed on: (1) Traffic noise or volatility; (2) Driver behavior and safety; and (3) Stochastic modeling, models that explain breakdown and performance.
> License: MIT + file LICENSE
> Encoding: UTF-8
> LazyData: true
> Depends: R (>= 2.10)
> RoxygenNote: 6.1.0
> Remotes: pjossenbruggen/Basic
> Imports:
>     animation,
>     devtools,
>     dplyr,
>     gapminder,
>     ggplot2,
>     graphics,
>     grDevices,
>     knitr,
>     rlist,
>     rmarkdown,
>     roxygen2,
>     sde,
>     shiny,
>     stats,
>     tidyverse,
>     usethis,
>     utils
> Suggests:
> VignetteBuilder: knitr
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From murdoch@dunc@n @ending from gm@il@com  Wed Aug  8 11:26:34 2018
From: murdoch@dunc@n @ending from gm@il@com (Duncan Murdoch)
Date: Wed, 8 Aug 2018 05:26:34 -0400
Subject: [R-pkg-devel] [R] Submit your own R package - @examples
In-Reply-To: <003401d42ee6$90521040$b0f630c0$@gmx.de>
References: <003401d42ee6$90521040$b0f630c0$@gmx.de>
Message-ID: <bee65637-e428-10aa-a3c0-3ffaf83aea2e@gmail.com>

On 08/08/2018 3:08 AM, Johanna Schwarz wrote:
> Dear community,
> 
> I am trying to submit my first R package to CRAN and stumbled upon the
> following problem:
> 
> Most of my methods, are not exported to the namespace using the @examples
> options.
> 
> Will I have to provide @examples for these methods in the documentation? If
> yes, I have the problem that when I run the @examples for the method that is
> not exported, I receive the error
> 
> Error in foo() : could not find function "foo"
> 
> Execution halted
> 
>   
> 
> What am I missing? Will I even have to provide examples to pass the CRAN
> tests?
> 
>   

Questions about package submission should generally go to the 
r-package-devel list.

But before someone could answer this one, I think they'd need more 
detail, e.g. a full example they could run.  From your error message, 
"foo" is not a method, it is a generic, and R can't find it.  It matters 
whether it is a generic defined in your package, or in some other package.

It also matters whether you want users of your package to be able to use 
the methods you are defining.  If you don't (they are purely for 
internal use), you don't need user-level documentation for them.

Please follow up in the r-package-devel list.

Duncan Murdoch


From rtob@r @ending from icr@r@org  Fri Aug 10 06:01:45 2018
From: rtob@r @ending from icr@r@org (Rodrigo Tobar)
Date: Fri, 10 Aug 2018 12:01:45 +0800
Subject: [R-pkg-devel] Calling R's tempdir() from C
Message-ID: <f03e7762-0c5a-0289-25c9-0bcacdeb8a02@icrar.org>

Dear all,

I want to create a temporary directory from within my C++ R extension. 
On the other hand, CRAN's policy dictates that one cannot write anything 
outside the boundaries of the session's temporary directory, so I need 
to create it exactly there.

The R API offers R_tmpnam and R_tmpnam2, both of which require the path 
of the directory where the new name will reside. This can be obtained 
using tempdir() in R, but I couldn't find anything similar in the R API. 
Am I missing anything too obvious?

I tried out giving a NULL dirname to R_tmpnam{,2}, hoping that even 
though it's not mentioned in the docs, they would internally use the 
session's tmp dir, but this simply crashed. When embedding R one could 
also use the R_TempDir global variable, but this is flagged as 
unofficial R API for extensions. Finally, the only solution I could find 
was to call the tempdir() R function from within my C++ extension. This 
works fine, but it bothers me that there not an equivalent entry point 
in R's API.

Any pointers would be appreciated. If I'm deeply misunderstanding 
something please also shoot.

Cheers,

Rodrigo


From murdoch@dunc@n @ending from gm@il@com  Fri Aug 10 09:10:02 2018
From: murdoch@dunc@n @ending from gm@il@com (Duncan Murdoch)
Date: Fri, 10 Aug 2018 03:10:02 -0400
Subject: [R-pkg-devel] Calling R's tempdir() from C
In-Reply-To: <f03e7762-0c5a-0289-25c9-0bcacdeb8a02@icrar.org>
References: <f03e7762-0c5a-0289-25c9-0bcacdeb8a02@icrar.org>
Message-ID: <17ae09c9-7a49-311a-aeec-f8adb1bf5d18@gmail.com>

On 10/08/2018 12:01 AM, Rodrigo Tobar wrote:
> Dear all,
> 
> I want to create a temporary directory from within my C++ R extension.
> On the other hand, CRAN's policy dictates that one cannot write anything
> outside the boundaries of the session's temporary directory, so I need
> to create it exactly there.
> 
> The R API offers R_tmpnam and R_tmpnam2, both of which require the path
> of the directory where the new name will reside. This can be obtained
> using tempdir() in R, but I couldn't find anything similar in the R API.
> Am I missing anything too obvious?

Why not pass the result of tempdir() in your call from R to your C++ 
function, or in an initialization call for your package?  It won't 
change during a session.

Duncan Murdoch

> 
> I tried out giving a NULL dirname to R_tmpnam{,2}, hoping that even
> though it's not mentioned in the docs, they would internally use the
> session's tmp dir, but this simply crashed. When embedding R one could
> also use the R_TempDir global variable, but this is flagged as
> unofficial R API for extensions. Finally, the only solution I could find
> was to call the tempdir() R function from within my C++ extension. This
> works fine, but it bothers me that there not an equivalent entry point
> in R's API.
> 
> Any pointers would be appreciated. If I'm deeply misunderstanding
> something please also shoot.
> 
> Cheers,
> 
> Rodrigo
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From zk@mv@r @ending from gm@il@com  Fri Aug 10 12:18:12 2018
From: zk@mv@r @ending from gm@il@com (Zhian Kamvar)
Date: Fri, 10 Aug 2018 11:18:12 +0100
Subject: [R-pkg-devel] Printing examples conditionally on another package in
 Suggests
Message-ID: <CAPsXksJV2xf0Nc1=o2coMYqOLNP8117_2-zikewK4M7=62s4qw@mail.gmail.com>

Hello,

I know it's good practice to use

if (require("some_package")) {
  # some code that needs some_package
}

In R examples that needs a package listed in Suggests.

The problem with this approach is that if there are any print statements
within this structure, then they only get printed after the braces and not
after the lines like so:

if (TRUE) {
  print("Hi")
  print("Hello")
  print("Goodbye")
}
#> [1] "Hi"
#> [1] "Hello"
#> [1] "Goodbye"

The only way I can think of circumventing this is by replacing the if
statement with a stopifnot statement:

stopifnot(require("some_package"))
# some code that needs some_package

But, I'm not sure if that's okay to do in a function example. Does anyone
have any ideas or suggestions on how to help with this kind of thing?

Cheers,
Zhian

	[[alternative HTML version deleted]]


From @lex@ndre@courtiol @ending from gm@il@com  Fri Aug 10 12:28:40 2018
From: @lex@ndre@courtiol @ending from gm@il@com (Alexandre Courtiol)
Date: Fri, 10 Aug 2018 12:28:40 +0200
Subject: [R-pkg-devel] 
 Printing examples conditionally on another package in Suggests
In-Reply-To: <CAPsXksJV2xf0Nc1=o2coMYqOLNP8117_2-zikewK4M7=62s4qw@mail.gmail.com>
References: <CAPsXksJV2xf0Nc1=o2coMYqOLNP8117_2-zikewK4M7=62s4qw@mail.gmail.com>
Message-ID: <CAERMt4fyQ5d49pEKysmAvgbh+DqdQmovU_ES=uStNJwtXwJyAw@mail.gmail.com>

Hi Zhian,
Could you please explain what behaviour you would like to obtain?
I really don't understand what your problem is from your description...
Alex

On Fri, 10 Aug 2018 at 12:18, Zhian Kamvar <zkamvar at gmail.com> wrote:

> Hello,
>
> I know it's good practice to use
>
> if (require("some_package")) {
>   # some code that needs some_package
> }
>
> In R examples that needs a package listed in Suggests.
>
> The problem with this approach is that if there are any print statements
> within this structure, then they only get printed after the braces and not
> after the lines like so:
>
> if (TRUE) {
>   print("Hi")
>   print("Hello")
>   print("Goodbye")
> }
> #> [1] "Hi"
> #> [1] "Hello"
> #> [1] "Goodbye"
>
> The only way I can think of circumventing this is by replacing the if
> statement with a stopifnot statement:
>
> stopifnot(require("some_package"))
> # some code that needs some_package
>
> But, I'm not sure if that's okay to do in a function example. Does anyone
> have any ideas or suggestions on how to help with this kind of thing?
>
> Cheers,
> Zhian
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


-- 
Alexandre Courtiol

http://sites.google.com/site/alexandrecourtiol/home

*"Science is the belief in the ignorance of experts"*, R. Feynman

	[[alternative HTML version deleted]]


From zk@mv@r @ending from gm@il@com  Fri Aug 10 12:33:45 2018
From: zk@mv@r @ending from gm@il@com (Zhian Kamvar)
Date: Fri, 10 Aug 2018 11:33:45 +0100
Subject: [R-pkg-devel] 
 Printing examples conditionally on another package in Suggests
In-Reply-To: <CAERMt4fyQ5d49pEKysmAvgbh+DqdQmovU_ES=uStNJwtXwJyAw@mail.gmail.com>
References: <CAPsXksJV2xf0Nc1=o2coMYqOLNP8117_2-zikewK4M7=62s4qw@mail.gmail.com>
 <CAERMt4fyQ5d49pEKysmAvgbh+DqdQmovU_ES=uStNJwtXwJyAw@mail.gmail.com>
Message-ID: <CAPsXksKLO-L8ZK6QeH8+_NsWc+Tb8J+7PKLJQH1Rjx5jd+46gg@mail.gmail.com>

Mainly, I would like to see the value printed after the print statement
like it would appear in a normal R session:

print("Hi")
#> [1] "Hi"
print("Hello")
#> [1] "Hello"
print("Goodbye")
#> [1] "Goodbye"


On Fri, Aug 10, 2018 at 11:28 AM Alexandre Courtiol <
alexandre.courtiol at gmail.com> wrote:

> Hi Zhian,
> Could you please explain what behaviour you would like to obtain?
> I really don't understand what your problem is from your description...
> Alex
>
> On Fri, 10 Aug 2018 at 12:18, Zhian Kamvar <zkamvar at gmail.com> wrote:
>
>> Hello,
>>
>> I know it's good practice to use
>>
>> if (require("some_package")) {
>>   # some code that needs some_package
>> }
>>
>> In R examples that needs a package listed in Suggests.
>>
>> The problem with this approach is that if there are any print statements
>> within this structure, then they only get printed after the braces and not
>> after the lines like so:
>>
>> if (TRUE) {
>>   print("Hi")
>>   print("Hello")
>>   print("Goodbye")
>> }
>> #> [1] "Hi"
>> #> [1] "Hello"
>> #> [1] "Goodbye"
>>
>> The only way I can think of circumventing this is by replacing the if
>> statement with a stopifnot statement:
>>
>> stopifnot(require("some_package"))
>> # some code that needs some_package
>>
>> But, I'm not sure if that's okay to do in a function example. Does anyone
>> have any ideas or suggestions on how to help with this kind of thing?
>>
>> Cheers,
>> Zhian
>>
>>         [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>
>
> --
> Alexandre Courtiol
>
> http://sites.google.com/site/alexandrecourtiol/home
>
> *"Science is the belief in the ignorance of experts"*, R. Feynman
>

	[[alternative HTML version deleted]]


From @lex@ndre@courtiol @ending from gm@il@com  Fri Aug 10 13:14:13 2018
From: @lex@ndre@courtiol @ending from gm@il@com (Alexandre Courtiol)
Date: Fri, 10 Aug 2018 13:14:13 +0200
Subject: [R-pkg-devel] 
 Printing examples conditionally on another package in Suggests
In-Reply-To: <CAPsXksKLO-L8ZK6QeH8+_NsWc+Tb8J+7PKLJQH1Rjx5jd+46gg@mail.gmail.com>
References: <CAPsXksJV2xf0Nc1=o2coMYqOLNP8117_2-zikewK4M7=62s4qw@mail.gmail.com>
 <CAERMt4fyQ5d49pEKysmAvgbh+DqdQmovU_ES=uStNJwtXwJyAw@mail.gmail.com>
 <CAPsXksKLO-L8ZK6QeH8+_NsWc+Tb8J+7PKLJQH1Rjx5jd+46gg@mail.gmail.com>
Message-ID: <CAERMt4du+G2gPSp2yqaFJaP-e0_nP+ZWiiSjGu9NCio_rcQ2SA@mail.gmail.com>

Perhaps then something like:
Print <- function(x) if (requireNamespace("some.package", quietly = TRUE))
print(x)
Print("Hi")
Print("Hello")
Print("Goodbye")



On Fri, 10 Aug 2018 at 12:33, Zhian Kamvar <zkamvar at gmail.com> wrote:

> Mainly, I would like to see the value printed after the print statement
> like it would appear in a normal R session:
>
> print("Hi")
> #> [1] "Hi"
> print("Hello")
> #> [1] "Hello"
> print("Goodbye")
> #> [1] "Goodbye"
>
>
> On Fri, Aug 10, 2018 at 11:28 AM Alexandre Courtiol <
> alexandre.courtiol at gmail.com> wrote:
>
>> Hi Zhian,
>> Could you please explain what behaviour you would like to obtain?
>> I really don't understand what your problem is from your description...
>> Alex
>>
>> On Fri, 10 Aug 2018 at 12:18, Zhian Kamvar <zkamvar at gmail.com> wrote:
>>
>>> Hello,
>>>
>>> I know it's good practice to use
>>>
>>> if (require("some_package")) {
>>>   # some code that needs some_package
>>> }
>>>
>>> In R examples that needs a package listed in Suggests.
>>>
>>> The problem with this approach is that if there are any print statements
>>> within this structure, then they only get printed after the braces and
>>> not
>>> after the lines like so:
>>>
>>> if (TRUE) {
>>>   print("Hi")
>>>   print("Hello")
>>>   print("Goodbye")
>>> }
>>> #> [1] "Hi"
>>> #> [1] "Hello"
>>> #> [1] "Goodbye"
>>>
>>> The only way I can think of circumventing this is by replacing the if
>>> statement with a stopifnot statement:
>>>
>>> stopifnot(require("some_package"))
>>> # some code that needs some_package
>>>
>>> But, I'm not sure if that's okay to do in a function example. Does anyone
>>> have any ideas or suggestions on how to help with this kind of thing?
>>>
>>> Cheers,
>>> Zhian
>>>
>>>         [[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>>
>>
>> --
>> Alexandre Courtiol
>>
>> http://sites.google.com/site/alexandrecourtiol/home
>>
>> *"Science is the belief in the ignorance of experts"*, R. Feynman
>>
>

-- 
Alexandre Courtiol

http://sites.google.com/site/alexandrecourtiol/home

*"Science is the belief in the ignorance of experts"*, R. Feynman

	[[alternative HTML version deleted]]


From zk@mv@r @ending from gm@il@com  Fri Aug 10 13:25:50 2018
From: zk@mv@r @ending from gm@il@com (Zhian Kamvar)
Date: Fri, 10 Aug 2018 12:25:50 +0100
Subject: [R-pkg-devel] 
 Printing examples conditionally on another package in Suggests
In-Reply-To: <CAERMt4du+G2gPSp2yqaFJaP-e0_nP+ZWiiSjGu9NCio_rcQ2SA@mail.gmail.com>
References: <CAPsXksJV2xf0Nc1=o2coMYqOLNP8117_2-zikewK4M7=62s4qw@mail.gmail.com>
 <CAERMt4fyQ5d49pEKysmAvgbh+DqdQmovU_ES=uStNJwtXwJyAw@mail.gmail.com>
 <CAPsXksKLO-L8ZK6QeH8+_NsWc+Tb8J+7PKLJQH1Rjx5jd+46gg@mail.gmail.com>
 <CAERMt4du+G2gPSp2yqaFJaP-e0_nP+ZWiiSjGu9NCio_rcQ2SA@mail.gmail.com>
Message-ID: <CAPsXksJhoiJGvECiPuxortDXq_5+oDaJJ_O=irx2aC62jSOBig@mail.gmail.com>

Thanks, but my use of print here is really a toy example, not necessarily
the end-goal. This strategy would fail if I were to attempt load a data set
from some_package or use any functions from some_package.

A more specific example of what I'm dealing with is here:
http://www.repidemicsconsortium.org/incidence/reference/get_counts.html#examples.
This is what the user would see if they were to use example(get_counts).

On Fri, Aug 10, 2018 at 12:14 PM Alexandre Courtiol <
alexandre.courtiol at gmail.com> wrote:

> Perhaps then something like:
> Print <- function(x) if (requireNamespace("some.package", quietly = TRUE))
> print(x)
> Print("Hi")
> Print("Hello")
> Print("Goodbye")
>
>
>
> On Fri, 10 Aug 2018 at 12:33, Zhian Kamvar <zkamvar at gmail.com> wrote:
>
>> Mainly, I would like to see the value printed after the print statement
>> like it would appear in a normal R session:
>>
>> print("Hi")
>> #> [1] "Hi"
>> print("Hello")
>> #> [1] "Hello"
>> print("Goodbye")
>> #> [1] "Goodbye"
>>
>>
>> On Fri, Aug 10, 2018 at 11:28 AM Alexandre Courtiol <
>> alexandre.courtiol at gmail.com> wrote:
>>
>>> Hi Zhian,
>>> Could you please explain what behaviour you would like to obtain?
>>> I really don't understand what your problem is from your description...
>>> Alex
>>>
>>> On Fri, 10 Aug 2018 at 12:18, Zhian Kamvar <zkamvar at gmail.com> wrote:
>>>
>>>> Hello,
>>>>
>>>> I know it's good practice to use
>>>>
>>>> if (require("some_package")) {
>>>>   # some code that needs some_package
>>>> }
>>>>
>>>> In R examples that needs a package listed in Suggests.
>>>>
>>>> The problem with this approach is that if there are any print statements
>>>> within this structure, then they only get printed after the braces and
>>>> not
>>>> after the lines like so:
>>>>
>>>> if (TRUE) {
>>>>   print("Hi")
>>>>   print("Hello")
>>>>   print("Goodbye")
>>>> }
>>>> #> [1] "Hi"
>>>> #> [1] "Hello"
>>>> #> [1] "Goodbye"
>>>>
>>>> The only way I can think of circumventing this is by replacing the if
>>>> statement with a stopifnot statement:
>>>>
>>>> stopifnot(require("some_package"))
>>>> # some code that needs some_package
>>>>
>>>> But, I'm not sure if that's okay to do in a function example. Does
>>>> anyone
>>>> have any ideas or suggestions on how to help with this kind of thing?
>>>>
>>>> Cheers,
>>>> Zhian
>>>>
>>>>         [[alternative HTML version deleted]]
>>>>
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>
>>>
>>>
>>> --
>>> Alexandre Courtiol
>>>
>>> http://sites.google.com/site/alexandrecourtiol/home
>>>
>>> *"Science is the belief in the ignorance of experts"*, R. Feynman
>>>
>>
>
> --
> Alexandre Courtiol
>
> http://sites.google.com/site/alexandrecourtiol/home
>
> *"Science is the belief in the ignorance of experts"*, R. Feynman
>

	[[alternative HTML version deleted]]


From georgi@bo@hn@kov @ending from m@nche@ter@@c@uk  Fri Aug 10 13:55:12 2018
From: georgi@bo@hn@kov @ending from m@nche@ter@@c@uk (Georgi Boshnakov)
Date: Fri, 10 Aug 2018 11:55:12 +0000
Subject: [R-pkg-devel] 
 Printing examples conditionally on another package in Suggests
In-Reply-To: <CAPsXksJhoiJGvECiPuxortDXq_5+oDaJJ_O=irx2aC62jSOBig@mail.gmail.com>
References: <CAPsXksJV2xf0Nc1=o2coMYqOLNP8117_2-zikewK4M7=62s4qw@mail.gmail.com>
 <CAERMt4fyQ5d49pEKysmAvgbh+DqdQmovU_ES=uStNJwtXwJyAw@mail.gmail.com>
 <CAPsXksKLO-L8ZK6QeH8+_NsWc+Tb8J+7PKLJQH1Rjx5jd+46gg@mail.gmail.com>
 <CAERMt4du+G2gPSp2yqaFJaP-e0_nP+ZWiiSjGu9NCio_rcQ2SA@mail.gmail.com>
 <CAPsXksJhoiJGvECiPuxortDXq_5+oDaJJ_O=irx2aC62jSOBig@mail.gmail.com>
Message-ID: <438D2EC9EAFE5946B2D5864670EA468E018F677538@MBXP01.ds.man.ac.uk>

Maybe  Martin Maechler's post in response to a similar question answers your question:

https://stat.ethz.ch/pipermail/r-package-devel/2018q2/002780.html   

In summary, wrap the code in:

  if (requireNamespace("MASS", quietly = TRUE)) withAutoprint({

  your code

  })


Georgi Boshnakov

-----Original Message-----
From: R-package-devel [mailto:r-package-devel-bounces at r-project.org] On Behalf Of Zhian Kamvar
Sent: 10 August 2018 12:26
To: Alexandre Courtiol
Cc: R-list Package Devel
Subject: Re: [R-pkg-devel] Printing examples conditionally on another package in Suggests

Thanks, but my use of print here is really a toy example, not necessarily
the end-goal. This strategy would fail if I were to attempt load a data set
from some_package or use any functions from some_package.

A more specific example of what I'm dealing with is here:
http://www.repidemicsconsortium.org/incidence/reference/get_counts.html#examples.
This is what the user would see if they were to use example(get_counts).

On Fri, Aug 10, 2018 at 12:14 PM Alexandre Courtiol <
alexandre.courtiol at gmail.com> wrote:

> Perhaps then something like:
> Print <- function(x) if (requireNamespace("some.package", quietly = TRUE))
> print(x)
> Print("Hi")
> Print("Hello")
> Print("Goodbye")
>
>
>
> On Fri, 10 Aug 2018 at 12:33, Zhian Kamvar <zkamvar at gmail.com> wrote:
>
>> Mainly, I would like to see the value printed after the print statement
>> like it would appear in a normal R session:
>>
>> print("Hi")
>> #> [1] "Hi"
>> print("Hello")
>> #> [1] "Hello"
>> print("Goodbye")
>> #> [1] "Goodbye"
>>
>>
>> On Fri, Aug 10, 2018 at 11:28 AM Alexandre Courtiol <
>> alexandre.courtiol at gmail.com> wrote:
>>
>>> Hi Zhian,
>>> Could you please explain what behaviour you would like to obtain?
>>> I really don't understand what your problem is from your description...
>>> Alex
>>>
>>> On Fri, 10 Aug 2018 at 12:18, Zhian Kamvar <zkamvar at gmail.com> wrote:
>>>
>>>> Hello,
>>>>
>>>> I know it's good practice to use
>>>>
>>>> if (require("some_package")) {
>>>>   # some code that needs some_package
>>>> }
>>>>
>>>> In R examples that needs a package listed in Suggests.
>>>>
>>>> The problem with this approach is that if there are any print statements
>>>> within this structure, then they only get printed after the braces and
>>>> not
>>>> after the lines like so:
>>>>
>>>> if (TRUE) {
>>>>   print("Hi")
>>>>   print("Hello")
>>>>   print("Goodbye")
>>>> }
>>>> #> [1] "Hi"
>>>> #> [1] "Hello"
>>>> #> [1] "Goodbye"
>>>>
>>>> The only way I can think of circumventing this is by replacing the if
>>>> statement with a stopifnot statement:
>>>>
>>>> stopifnot(require("some_package"))
>>>> # some code that needs some_package
>>>>
>>>> But, I'm not sure if that's okay to do in a function example. Does
>>>> anyone
>>>> have any ideas or suggestions on how to help with this kind of thing?
>>>>
>>>> Cheers,
>>>> Zhian
>>>>
>>>>         [[alternative HTML version deleted]]
>>>>
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>
>>>
>>>
>>> --
>>> Alexandre Courtiol
>>>
>>> http://sites.google.com/site/alexandrecourtiol/home
>>>
>>> *"Science is the belief in the ignorance of experts"*, R. Feynman
>>>
>>
>
> --
> Alexandre Courtiol
>
> http://sites.google.com/site/alexandrecourtiol/home
>
> *"Science is the belief in the ignorance of experts"*, R. Feynman
>

	[[alternative HTML version deleted]]

______________________________________________
R-package-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel


From zk@mv@r @ending from gm@il@com  Fri Aug 10 14:21:15 2018
From: zk@mv@r @ending from gm@il@com (Zhian Kamvar)
Date: Fri, 10 Aug 2018 13:21:15 +0100
Subject: [R-pkg-devel] 
 Printing examples conditionally on another package in Suggests
In-Reply-To: <438D2EC9EAFE5946B2D5864670EA468E018F677538@MBXP01.ds.man.ac.uk>
References: <CAPsXksJV2xf0Nc1=o2coMYqOLNP8117_2-zikewK4M7=62s4qw@mail.gmail.com>
 <CAERMt4fyQ5d49pEKysmAvgbh+DqdQmovU_ES=uStNJwtXwJyAw@mail.gmail.com>
 <CAPsXksKLO-L8ZK6QeH8+_NsWc+Tb8J+7PKLJQH1Rjx5jd+46gg@mail.gmail.com>
 <CAERMt4du+G2gPSp2yqaFJaP-e0_nP+ZWiiSjGu9NCio_rcQ2SA@mail.gmail.com>
 <CAPsXksJhoiJGvECiPuxortDXq_5+oDaJJ_O=irx2aC62jSOBig@mail.gmail.com>
 <438D2EC9EAFE5946B2D5864670EA468E018F677538@MBXP01.ds.man.ac.uk>
Message-ID: <CAPsXksL5Z5ciTNWM8B=QWuTxGUDaabj_CwosdwKUmsRVJd5mHQ@mail.gmail.com>

This was what I was looking for! Thank you!

I apologize for my insufficient google-fu today.

On Fri, Aug 10, 2018 at 12:55 PM Georgi Boshnakov <
georgi.boshnakov at manchester.ac.uk> wrote:

> Maybe  Martin Maechler's post in response to a similar question answers
> your question:
>
> https://stat.ethz.ch/pipermail/r-package-devel/2018q2/002780.html
>
> In summary, wrap the code in:
>
>   if (requireNamespace("MASS", quietly = TRUE)) withAutoprint({
>
>   your code
>
>   })
>
>
> Georgi Boshnakov
>
> -----Original Message-----
> From: R-package-devel [mailto:r-package-devel-bounces at r-project.org] On
> Behalf Of Zhian Kamvar
> Sent: 10 August 2018 12:26
> To: Alexandre Courtiol
> Cc: R-list Package Devel
> Subject: Re: [R-pkg-devel] Printing examples conditionally on another
> package in Suggests
>
> Thanks, but my use of print here is really a toy example, not necessarily
> the end-goal. This strategy would fail if I were to attempt load a data set
> from some_package or use any functions from some_package.
>
> A more specific example of what I'm dealing with is here:
>
> http://www.repidemicsconsortium.org/incidence/reference/get_counts.html#examples
> .
> This is what the user would see if they were to use example(get_counts).
>
> On Fri, Aug 10, 2018 at 12:14 PM Alexandre Courtiol <
> alexandre.courtiol at gmail.com> wrote:
>
> > Perhaps then something like:
> > Print <- function(x) if (requireNamespace("some.package", quietly =
> TRUE))
> > print(x)
> > Print("Hi")
> > Print("Hello")
> > Print("Goodbye")
> >
> >
> >
> > On Fri, 10 Aug 2018 at 12:33, Zhian Kamvar <zkamvar at gmail.com> wrote:
> >
> >> Mainly, I would like to see the value printed after the print statement
> >> like it would appear in a normal R session:
> >>
> >> print("Hi")
> >> #> [1] "Hi"
> >> print("Hello")
> >> #> [1] "Hello"
> >> print("Goodbye")
> >> #> [1] "Goodbye"
> >>
> >>
> >> On Fri, Aug 10, 2018 at 11:28 AM Alexandre Courtiol <
> >> alexandre.courtiol at gmail.com> wrote:
> >>
> >>> Hi Zhian,
> >>> Could you please explain what behaviour you would like to obtain?
> >>> I really don't understand what your problem is from your description...
> >>> Alex
> >>>
> >>> On Fri, 10 Aug 2018 at 12:18, Zhian Kamvar <zkamvar at gmail.com> wrote:
> >>>
> >>>> Hello,
> >>>>
> >>>> I know it's good practice to use
> >>>>
> >>>> if (require("some_package")) {
> >>>>   # some code that needs some_package
> >>>> }
> >>>>
> >>>> In R examples that needs a package listed in Suggests.
> >>>>
> >>>> The problem with this approach is that if there are any print
> statements
> >>>> within this structure, then they only get printed after the braces and
> >>>> not
> >>>> after the lines like so:
> >>>>
> >>>> if (TRUE) {
> >>>>   print("Hi")
> >>>>   print("Hello")
> >>>>   print("Goodbye")
> >>>> }
> >>>> #> [1] "Hi"
> >>>> #> [1] "Hello"
> >>>> #> [1] "Goodbye"
> >>>>
> >>>> The only way I can think of circumventing this is by replacing the if
> >>>> statement with a stopifnot statement:
> >>>>
> >>>> stopifnot(require("some_package"))
> >>>> # some code that needs some_package
> >>>>
> >>>> But, I'm not sure if that's okay to do in a function example. Does
> >>>> anyone
> >>>> have any ideas or suggestions on how to help with this kind of thing?
> >>>>
> >>>> Cheers,
> >>>> Zhian
> >>>>
> >>>>         [[alternative HTML version deleted]]
> >>>>
> >>>> ______________________________________________
> >>>> R-package-devel at r-project.org mailing list
> >>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>>>
> >>>
> >>>
> >>> --
> >>> Alexandre Courtiol
> >>>
> >>> http://sites.google.com/site/alexandrecourtiol/home
> >>>
> >>> *"Science is the belief in the ignorance of experts"*, R. Feynman
> >>>
> >>
> >
> > --
> > Alexandre Courtiol
> >
> > http://sites.google.com/site/alexandrecourtiol/home
> >
> > *"Science is the belief in the ignorance of experts"*, R. Feynman
> >
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From rtob@r @ending from icr@r@org  Fri Aug 10 16:07:25 2018
From: rtob@r @ending from icr@r@org (Rodrigo Tobar)
Date: Fri, 10 Aug 2018 22:07:25 +0800
Subject: [R-pkg-devel] Calling R's tempdir() from C
In-Reply-To: <17ae09c9-7a49-311a-aeec-f8adb1bf5d18@gmail.com>
References: <f03e7762-0c5a-0289-25c9-0bcacdeb8a02@icrar.org>
 <17ae09c9-7a49-311a-aeec-f8adb1bf5d18@gmail.com>
Message-ID: <510db483-ecef-dbfc-e5a3-059f76a15e01@icrar.org>

Hi,

On 10.08.18 3:10 PM, Duncan Murdoch wrote:
> On 10/08/2018 12:01 AM, Rodrigo Tobar wrote:
>> [...]
> 
> Why not pass the result of tempdir() in your call from R to your C++ 
> function, or in an initialization call for your package?? It won't 
> change during a session.

This is indeed a good suggestion, but (my bad!) I forgot to mention: the 
place I need to use this is at dynlib loading time (i.e., when 
R_init_mypackage is called), so I don't have the flexibility to pass 
arbitrary arguments.

I guess this is a separate but related question, but it's not clear to 
me if in the process of loading a package, any particular piece of R 
code is guaranteed to execute before the library is loaded; otherwise I 
could pass down the information by setting an environment variable in R 
and read it from C++, or even perform all the directory creation logic 
at the R level.

Thanks again,

Rodrigo


From thib@ult@v@tter @ending from gm@il@com  Sat Aug 11 19:30:15 2018
From: thib@ult@v@tter @ending from gm@il@com (Thibault Vatter)
Date: Sat, 11 Aug 2018 13:30:15 -0400
Subject: [R-pkg-devel] Replicate solaris errors
Message-ID: <CAFyih6AJmS0=s8U430WPg8odFtU_ZSJdc4UnVVzyC=gezed=pA@mail.gmail.com>

Dear package developers,

We've recently received an email letting us know that our package
rvinecopulib (
https://cran.r-project.org/web/packages/rvinecopulib/index.html) would be
removed from CRAN unless the errors from the solaris build were corrected.

Note that the package compile and the unit tests pass on the other test
platforms from CRAN and even a local R devel build with ASAN / UBSAN
sanitizers. On solaris, the package compiles but a segfault is produced by
one unit test for a reason that we still don't understand.

To replicate the issue, I tried to mimic CRAN's solaris config (
https://www.stats.ox.ac.uk/pub/bdr/Rconfig/r-patched-solaris-x86) in a
virtual machine following the steps in the gist below (based on Jeroen's):

https://gist.github.com/tvatter/b2503f03fcd604ff764ffe4b979afcb6

Note that the "--with-readline=no" configure option at the end was added
because I got "configure: error: --with-readline=yes (default) and
headers/libs are not available" without it.

Unfortunately, I then got the "configure: error: a suitable iconv is
essential" and could not proceed to build R.

I know that I should get GNU iconv as specified in the installation manual,
hence the "/opt/csw/bin/pkgutil -y -i libiconv_dev" in the gist above. I
verified that iconv is in /opt/csw/lib as expected and I thought that
adding /opt/csw/lib to R_LD_LIBRARY_PATH as suggested in the manual would
then do the trick, but it does not seem to be the case.

Two questions:

1) What did I miss or do wrong?

2) Anyone found a way to replicate solaris CRAN builds to test packages? I
tried to use https://builder.r-hub.io/, but some of my package's
dependencies fail to install because of udunits2 is missing on their system
if I recall correctly.

Thibault

	[[alternative HTML version deleted]]


From i@uc@r86 @ending from gm@il@com  Sat Aug 11 20:17:28 2018
From: i@uc@r86 @ending from gm@il@com (=?UTF-8?B?ScOxYWtpIMOaY2Fy?=)
Date: Sat, 11 Aug 2018 20:17:28 +0200
Subject: [R-pkg-devel] Replicate solaris errors
In-Reply-To: <CAFyih6AJmS0=s8U430WPg8odFtU_ZSJdc4UnVVzyC=gezed=pA@mail.gmail.com>
References: <CAFyih6AJmS0=s8U430WPg8odFtU_ZSJdc4UnVVzyC=gezed=pA@mail.gmail.com>
Message-ID: <CALEXWq2+vJ4i+8frB6hgcy4D6QwFmZUj8BALTP=aJ-p9pqG17Q@mail.gmail.com>

El s?b., 11 ago. 2018 a las 19:30, Thibault Vatter
(<thibault.vatter at gmail.com>) escribi?:
>
> Dear package developers,
>
> We've recently received an email letting us know that our package
> rvinecopulib (
> https://cran.r-project.org/web/packages/rvinecopulib/index.html) would be
> removed from CRAN unless the errors from the solaris build were corrected.
>
> Note that the package compile and the unit tests pass on the other test
> platforms from CRAN and even a local R devel build with ASAN / UBSAN
> sanitizers. On solaris, the package compiles but a segfault is produced by
> one unit test for a reason that we still don't understand.

Are you talking about a new development version that is not still on
CRAN? Because the current CRAN version fails to install.

I?aki

>
> To replicate the issue, I tried to mimic CRAN's solaris config (
> https://www.stats.ox.ac.uk/pub/bdr/Rconfig/r-patched-solaris-x86) in a
> virtual machine following the steps in the gist below (based on Jeroen's):
>
> https://gist.github.com/tvatter/b2503f03fcd604ff764ffe4b979afcb6
>
> Note that the "--with-readline=no" configure option at the end was added
> because I got "configure: error: --with-readline=yes (default) and
> headers/libs are not available" without it.
>
> Unfortunately, I then got the "configure: error: a suitable iconv is
> essential" and could not proceed to build R.
>
> I know that I should get GNU iconv as specified in the installation manual,
> hence the "/opt/csw/bin/pkgutil -y -i libiconv_dev" in the gist above. I
> verified that iconv is in /opt/csw/lib as expected and I thought that
> adding /opt/csw/lib to R_LD_LIBRARY_PATH as suggested in the manual would
> then do the trick, but it does not seem to be the case.
>
> Two questions:
>
> 1) What did I miss or do wrong?
>
> 2) Anyone found a way to replicate solaris CRAN builds to test packages? I
> tried to use https://builder.r-hub.io/, but some of my package's
> dependencies fail to install because of udunits2 is missing on their system
> if I recall correctly.
>
> Thibault
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From thib@ult@v@tter @ending from gm@il@com  Sat Aug 11 20:41:46 2018
From: thib@ult@v@tter @ending from gm@il@com (Thibault Vatter)
Date: Sat, 11 Aug 2018 14:41:46 -0400
Subject: [R-pkg-devel] Replicate solaris errors
In-Reply-To: <CALEXWq2+vJ4i+8frB6hgcy4D6QwFmZUj8BALTP=aJ-p9pqG17Q@mail.gmail.com>
References: <CAFyih6AJmS0=s8U430WPg8odFtU_ZSJdc4UnVVzyC=gezed=pA@mail.gmail.com>
 <CALEXWq2+vJ4i+8frB6hgcy4D6QwFmZUj8BALTP=aJ-p9pqG17Q@mail.gmail.com>
Message-ID: <CAFyih6AqZanF_=uTa3drZhS3+DexwCRnVL8mKVBcGLzNKqJ2xQ@mail.gmail.com>

Yes, the non-portable call to log which causes the current build to fail on
solaris has been corrected in a development version. However, the segfault
that we don't understand and were asked to correct was present in the
previous versions (e.g., 0.2.8.1.0 and 0.2.7.1.0), and we believe that it
is likely to reappear if we resubmit with only the non-portable log call
corrected.

This is why, in order to avoid resubmitting with the segfault still there
and having the package removed from CRAN, we would like to be able to
replicate the solaris build.

On Sat, Aug 11, 2018 at 2:17 PM I?aki ?car <i.ucar86 at gmail.com> wrote:

> El s?b., 11 ago. 2018 a las 19:30, Thibault Vatter
> (<thibault.vatter at gmail.com>) escribi?:
> >
> > Dear package developers,
> >
> > We've recently received an email letting us know that our package
> > rvinecopulib (
> > https://cran.r-project.org/web/packages/rvinecopulib/index.html) would
> be
> > removed from CRAN unless the errors from the solaris build were
> corrected.
> >
> > Note that the package compile and the unit tests pass on the other test
> > platforms from CRAN and even a local R devel build with ASAN / UBSAN
> > sanitizers. On solaris, the package compiles but a segfault is produced
> by
> > one unit test for a reason that we still don't understand.
>
> Are you talking about a new development version that is not still on
> CRAN? Because the current CRAN version fails to install.
>
> I?aki
>
> >
> > To replicate the issue, I tried to mimic CRAN's solaris config (
> > https://www.stats.ox.ac.uk/pub/bdr/Rconfig/r-patched-solaris-x86) in a
> > virtual machine following the steps in the gist below (based on
> Jeroen's):
> >
> > https://gist.github.com/tvatter/b2503f03fcd604ff764ffe4b979afcb6
> >
> > Note that the "--with-readline=no" configure option at the end was added
> > because I got "configure: error: --with-readline=yes (default) and
> > headers/libs are not available" without it.
> >
> > Unfortunately, I then got the "configure: error: a suitable iconv is
> > essential" and could not proceed to build R.
> >
> > I know that I should get GNU iconv as specified in the installation
> manual,
> > hence the "/opt/csw/bin/pkgutil -y -i libiconv_dev" in the gist above. I
> > verified that iconv is in /opt/csw/lib as expected and I thought that
> > adding /opt/csw/lib to R_LD_LIBRARY_PATH as suggested in the manual would
> > then do the trick, but it does not seem to be the case.
> >
> > Two questions:
> >
> > 1) What did I miss or do wrong?
> >
> > 2) Anyone found a way to replicate solaris CRAN builds to test packages?
> I
> > tried to use https://builder.r-hub.io/, but some of my package's
> > dependencies fail to install because of udunits2 is missing on their
> system
> > if I recall correctly.
> >
> > Thibault
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From i@uc@r86 @ending from gm@il@com  Sat Aug 11 21:29:28 2018
From: i@uc@r86 @ending from gm@il@com (=?UTF-8?B?ScOxYWtpIMOaY2Fy?=)
Date: Sat, 11 Aug 2018 21:29:28 +0200
Subject: [R-pkg-devel] Replicate solaris errors
In-Reply-To: <CAFyih6AqZanF_=uTa3drZhS3+DexwCRnVL8mKVBcGLzNKqJ2xQ@mail.gmail.com>
References: <CAFyih6AJmS0=s8U430WPg8odFtU_ZSJdc4UnVVzyC=gezed=pA@mail.gmail.com>
 <CALEXWq2+vJ4i+8frB6hgcy4D6QwFmZUj8BALTP=aJ-p9pqG17Q@mail.gmail.com>
 <CAFyih6AqZanF_=uTa3drZhS3+DexwCRnVL8mKVBcGLzNKqJ2xQ@mail.gmail.com>
Message-ID: <CALEXWq0Lingu1x_-AO9u-byFfAZC9r6XE9Y3AxkqPgue+ADEHQ@mail.gmail.com>

El s?b., 11 ago. 2018 a las 20:41, Thibault Vatter
(<thibault.vatter at gmail.com>) escribi?:
>
> Yes, the non-portable call to log which causes the current build to fail on solaris has been corrected in a development version. However, the segfault that we don't understand and were asked to correct was present in the previous versions (e.g., 0.2.8.1.0 and 0.2.7.1.0), and we believe that it is likely to reappear if we resubmit with only the non-portable log call corrected.
>
> This is why, in order to avoid resubmitting with the segfault still there and having the package removed from CRAN, we would like to be able to replicate the solaris build.

I see. About rhub, you could ask G?bor to add udunits2 to that machine
(this is part of the external software installed on CRAN). Or you can
remove that dependency until you find that bug: your package suggests
ggraph, which depends on ggforce, which depends on units, which needs
udunits2.

The last time I dealt with an error with compiled code on Solaris was
on the SPARC machine (now dead; I won't miss it). I managed to recover
an old SPARC server from a forgotten room, install everything and test
it, but I don't remember the installation procedure, sorry. But I'd
rather try rhub before following that path again.

I?aki

>
> On Sat, Aug 11, 2018 at 2:17 PM I?aki ?car <i.ucar86 at gmail.com> wrote:
>>
>> El s?b., 11 ago. 2018 a las 19:30, Thibault Vatter
>> (<thibault.vatter at gmail.com>) escribi?:
>> >
>> > Dear package developers,
>> >
>> > We've recently received an email letting us know that our package
>> > rvinecopulib (
>> > https://cran.r-project.org/web/packages/rvinecopulib/index.html) would be
>> > removed from CRAN unless the errors from the solaris build were corrected.
>> >
>> > Note that the package compile and the unit tests pass on the other test
>> > platforms from CRAN and even a local R devel build with ASAN / UBSAN
>> > sanitizers. On solaris, the package compiles but a segfault is produced by
>> > one unit test for a reason that we still don't understand.
>>
>> Are you talking about a new development version that is not still on
>> CRAN? Because the current CRAN version fails to install.
>>
>> I?aki
>>
>> >
>> > To replicate the issue, I tried to mimic CRAN's solaris config (
>> > https://www.stats.ox.ac.uk/pub/bdr/Rconfig/r-patched-solaris-x86) in a
>> > virtual machine following the steps in the gist below (based on Jeroen's):
>> >
>> > https://gist.github.com/tvatter/b2503f03fcd604ff764ffe4b979afcb6
>> >
>> > Note that the "--with-readline=no" configure option at the end was added
>> > because I got "configure: error: --with-readline=yes (default) and
>> > headers/libs are not available" without it.
>> >
>> > Unfortunately, I then got the "configure: error: a suitable iconv is
>> > essential" and could not proceed to build R.
>> >
>> > I know that I should get GNU iconv as specified in the installation manual,
>> > hence the "/opt/csw/bin/pkgutil -y -i libiconv_dev" in the gist above. I
>> > verified that iconv is in /opt/csw/lib as expected and I thought that
>> > adding /opt/csw/lib to R_LD_LIBRARY_PATH as suggested in the manual would
>> > then do the trick, but it does not seem to be the case.
>> >
>> > Two questions:
>> >
>> > 1) What did I miss or do wrong?
>> >
>> > 2) Anyone found a way to replicate solaris CRAN builds to test packages? I
>> > tried to use https://builder.r-hub.io/, but some of my package's
>> > dependencies fail to install because of udunits2 is missing on their system
>> > if I recall correctly.
>> >
>> > Thibault
>> >
>> >         [[alternative HTML version deleted]]
>> >
>> > ______________________________________________
>> > R-package-devel at r-project.org mailing list
>> > https://stat.ethz.ch/mailman/listinfo/r-package-devel


From thib@ult@v@tter @ending from gm@il@com  Sat Aug 11 22:05:03 2018
From: thib@ult@v@tter @ending from gm@il@com (Thibault Vatter)
Date: Sat, 11 Aug 2018 16:05:03 -0400
Subject: [R-pkg-devel] Replicate solaris errors
In-Reply-To: <CALEXWq0Lingu1x_-AO9u-byFfAZC9r6XE9Y3AxkqPgue+ADEHQ@mail.gmail.com>
References: <CAFyih6AJmS0=s8U430WPg8odFtU_ZSJdc4UnVVzyC=gezed=pA@mail.gmail.com>
 <CALEXWq2+vJ4i+8frB6hgcy4D6QwFmZUj8BALTP=aJ-p9pqG17Q@mail.gmail.com>
 <CAFyih6AqZanF_=uTa3drZhS3+DexwCRnVL8mKVBcGLzNKqJ2xQ@mail.gmail.com>
 <CALEXWq0Lingu1x_-AO9u-byFfAZC9r6XE9Y3AxkqPgue+ADEHQ@mail.gmail.com>
Message-ID: <CAFyih6BHG8HZb9VQ5NmBbJFPWaNt7C4sXSSC3zw43zyc=i3vHA@mail.gmail.com>

In this case, using r-hub while removing the suggested dependencies (and
commenting related unit tests) should work. The drawback is that r-hub for
solaris installs all the dependencies at every build (as far as I
understand), so hunting for a segfault will be extremely time-consuming,
but I will still probably do that if I can't build R on solaris' VM.

I was hoping that other people faced similar issues with replicating
solaris builds. At
https://cran.r-project.org/doc/manuals/r-release/R-admin.html#Solaris, it
is mentioned that "a little juggling of paths was needed to ensure GNU
libiconv (in /usr/local) was used rather than the Solaris iconv". If I
understand correctly, this is done through adding the line
R_LD_LIBRARY_PATH="/opt/developerstudio12.5/lib:/usr/local/lib:/opt/csw/lib"
to config.site (as is done in my gist). However, I don't get why this is
not taken into account when doing ./configure afterwards.

Somewhat related: if being able to build and unit test on an R build for
solaris 10 with solaris studio 12.5 as a compiler is mandatory for a
package to remain on CRAN, why is no such R build on CRAN website? This
would be extremely helpful. Or does someone has more detailed guidelines to
build R for build for solaris 10 with solaris studio 12.5 that would be
targeted at a complete solaris noob? While I appreciate the guidelines in
the R manual and the detailed config.site used for the checks by CRAN (
https://www.stats.ox.ac.uk/pub/bdr/Rconfig/r-patched-solaris-x86), they are
unfortunately insufficient for me, although it's likely due to the fact
that I don't know anything about solaris in the first place.

On Sat, Aug 11, 2018 at 3:29 PM I?aki ?car <i.ucar86 at gmail.com> wrote:

> El s?b., 11 ago. 2018 a las 20:41, Thibault Vatter
> (<thibault.vatter at gmail.com>) escribi?:
> >
> > Yes, the non-portable call to log which causes the current build to fail
> on solaris has been corrected in a development version. However, the
> segfault that we don't understand and were asked to correct was present in
> the previous versions (e.g., 0.2.8.1.0 and 0.2.7.1.0), and we believe that
> it is likely to reappear if we resubmit with only the non-portable log call
> corrected.
> >
> > This is why, in order to avoid resubmitting with the segfault still
> there and having the package removed from CRAN, we would like to be able to
> replicate the solaris build.
>
> I see. About rhub, you could ask G?bor to add udunits2 to that machine
> (this is part of the external software installed on CRAN). Or you can
> remove that dependency until you find that bug: your package suggests
> ggraph, which depends on ggforce, which depends on units, which needs
> udunits2.
>
> The last time I dealt with an error with compiled code on Solaris was
> on the SPARC machine (now dead; I won't miss it). I managed to recover
> an old SPARC server from a forgotten room, install everything and test
> it, but I don't remember the installation procedure, sorry. But I'd
> rather try rhub before following that path again.
>
> I?aki
>
> >
> > On Sat, Aug 11, 2018 at 2:17 PM I?aki ?car <i.ucar86 at gmail.com> wrote:
> >>
> >> El s?b., 11 ago. 2018 a las 19:30, Thibault Vatter
> >> (<thibault.vatter at gmail.com>) escribi?:
> >> >
> >> > Dear package developers,
> >> >
> >> > We've recently received an email letting us know that our package
> >> > rvinecopulib (
> >> > https://cran.r-project.org/web/packages/rvinecopulib/index.html)
> would be
> >> > removed from CRAN unless the errors from the solaris build were
> corrected.
> >> >
> >> > Note that the package compile and the unit tests pass on the other
> test
> >> > platforms from CRAN and even a local R devel build with ASAN / UBSAN
> >> > sanitizers. On solaris, the package compiles but a segfault is
> produced by
> >> > one unit test for a reason that we still don't understand.
> >>
> >> Are you talking about a new development version that is not still on
> >> CRAN? Because the current CRAN version fails to install.
> >>
> >> I?aki
> >>
> >> >
> >> > To replicate the issue, I tried to mimic CRAN's solaris config (
> >> > https://www.stats.ox.ac.uk/pub/bdr/Rconfig/r-patched-solaris-x86) in
> a
> >> > virtual machine following the steps in the gist below (based on
> Jeroen's):
> >> >
> >> > https://gist.github.com/tvatter/b2503f03fcd604ff764ffe4b979afcb6
> >> >
> >> > Note that the "--with-readline=no" configure option at the end was
> added
> >> > because I got "configure: error: --with-readline=yes (default) and
> >> > headers/libs are not available" without it.
> >> >
> >> > Unfortunately, I then got the "configure: error: a suitable iconv is
> >> > essential" and could not proceed to build R.
> >> >
> >> > I know that I should get GNU iconv as specified in the installation
> manual,
> >> > hence the "/opt/csw/bin/pkgutil -y -i libiconv_dev" in the gist
> above. I
> >> > verified that iconv is in /opt/csw/lib as expected and I thought that
> >> > adding /opt/csw/lib to R_LD_LIBRARY_PATH as suggested in the manual
> would
> >> > then do the trick, but it does not seem to be the case.
> >> >
> >> > Two questions:
> >> >
> >> > 1) What did I miss or do wrong?
> >> >
> >> > 2) Anyone found a way to replicate solaris CRAN builds to test
> packages? I
> >> > tried to use https://builder.r-hub.io/, but some of my package's
> >> > dependencies fail to install because of udunits2 is missing on their
> system
> >> > if I recall correctly.
> >> >
> >> > Thibault
> >> >
> >> >         [[alternative HTML version deleted]]
> >> >
> >> > ______________________________________________
> >> > R-package-devel at r-project.org mailing list
> >> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From pd@lgd @ending from gm@il@com  Sun Aug 12 00:18:53 2018
From: pd@lgd @ending from gm@il@com (peter dalgaard)
Date: Sun, 12 Aug 2018 00:18:53 +0200
Subject: [R-pkg-devel] Replicate solaris errors
In-Reply-To: <CAFyih6AqZanF_=uTa3drZhS3+DexwCRnVL8mKVBcGLzNKqJ2xQ@mail.gmail.com>
References: <CAFyih6AJmS0=s8U430WPg8odFtU_ZSJdc4UnVVzyC=gezed=pA@mail.gmail.com>
 <CALEXWq2+vJ4i+8frB6hgcy4D6QwFmZUj8BALTP=aJ-p9pqG17Q@mail.gmail.com>
 <CAFyih6AqZanF_=uTa3drZhS3+DexwCRnVL8mKVBcGLzNKqJ2xQ@mail.gmail.com>
Message-ID: <415AF3D6-F62D-4C43-9830-737120A7029F@gmail.com>

Have you tried asking CRAN for help? I mean, if you don't fix an obvious error, with a well-known cause, like the log thing, they'll get fed up and throw you off. However, fixing and then discovering an issue elsewhere is different, especially if you cannot easily reproduce it at your end. 

-pd

> On 11 Aug 2018, at 20:41 , Thibault Vatter <thibault.vatter at gmail.com> wrote:
> 
> Yes, the non-portable call to log which causes the current build to fail on
> solaris has been corrected in a development version. However, the segfault
> that we don't understand and were asked to correct was present in the
> previous versions (e.g., 0.2.8.1.0 and 0.2.7.1.0), and we believe that it
> is likely to reappear if we resubmit with only the non-portable log call
> corrected.
> 
> This is why, in order to avoid resubmitting with the segfault still there
> and having the package removed from CRAN, we would like to be able to
> replicate the solaris build.
> 
> On Sat, Aug 11, 2018 at 2:17 PM I?aki ?car <i.ucar86 at gmail.com> wrote:
> 
>> El s?b., 11 ago. 2018 a las 19:30, Thibault Vatter
>> (<thibault.vatter at gmail.com>) escribi?:
>>> 
>>> Dear package developers,
>>> 
>>> We've recently received an email letting us know that our package
>>> rvinecopulib (
>>> https://cran.r-project.org/web/packages/rvinecopulib/index.html) would
>> be
>>> removed from CRAN unless the errors from the solaris build were
>> corrected.
>>> 
>>> Note that the package compile and the unit tests pass on the other test
>>> platforms from CRAN and even a local R devel build with ASAN / UBSAN
>>> sanitizers. On solaris, the package compiles but a segfault is produced
>> by
>>> one unit test for a reason that we still don't understand.
>> 
>> Are you talking about a new development version that is not still on
>> CRAN? Because the current CRAN version fails to install.
>> 
>> I?aki
>> 
>>> 
>>> To replicate the issue, I tried to mimic CRAN's solaris config (
>>> https://www.stats.ox.ac.uk/pub/bdr/Rconfig/r-patched-solaris-x86) in a
>>> virtual machine following the steps in the gist below (based on
>> Jeroen's):
>>> 
>>> https://gist.github.com/tvatter/b2503f03fcd604ff764ffe4b979afcb6
>>> 
>>> Note that the "--with-readline=no" configure option at the end was added
>>> because I got "configure: error: --with-readline=yes (default) and
>>> headers/libs are not available" without it.
>>> 
>>> Unfortunately, I then got the "configure: error: a suitable iconv is
>>> essential" and could not proceed to build R.
>>> 
>>> I know that I should get GNU iconv as specified in the installation
>> manual,
>>> hence the "/opt/csw/bin/pkgutil -y -i libiconv_dev" in the gist above. I
>>> verified that iconv is in /opt/csw/lib as expected and I thought that
>>> adding /opt/csw/lib to R_LD_LIBRARY_PATH as suggested in the manual would
>>> then do the trick, but it does not seem to be the case.
>>> 
>>> Two questions:
>>> 
>>> 1) What did I miss or do wrong?
>>> 
>>> 2) Anyone found a way to replicate solaris CRAN builds to test packages?
>> I
>>> tried to use https://builder.r-hub.io/, but some of my package's
>>> dependencies fail to install because of udunits2 is missing on their
>> system
>>> if I recall correctly.
>>> 
>>> Thibault
>>> 
>>>        [[alternative HTML version deleted]]
>>> 
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> 
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From teimouri m@ili@g off @ut@@c@ir  Sat Aug 11 20:49:17 2018
From: teimouri m@ili@g off @ut@@c@ir (teimouri m@ili@g off @ut@@c@ir)
Date: Sat, 11 Aug 2018 23:19:17 +0430
Subject: [R-pkg-devel] help
Message-ID: <1534013357602003892@aut.ac.ir>

?Hi,
I am preparing the document file for building a package in R studio.
In \description{} section to write a mathematical expression I am using \deqn{} command but 
it does not work .
Could you please help me?

With best regards,
Mahdi.
-----------------------------------------------------------------------------------------------------
Mahdi Teimouri Yanesari,
Department of Statistics,
Faculty of Science,
Gonbad Kavous University,
Gonbad Kavous,
Iran.
Emails:

mahdiba_2001 at yahoo.com,
teimouri at aut.ac.ir,





-- 
This email was Anti Virus checked by  Security Gateway.

	[[alternative HTML version deleted]]


From m@izhou @ending from gm@il@com  Sun Aug 12 22:15:01 2018
From: m@izhou @ending from gm@il@com (mai zhou)
Date: Sun, 12 Aug 2018 16:15:01 -0400
Subject: [R-pkg-devel] Fwd: R_registerRoutines, R_useDynamicSymbols
In-Reply-To: <CAJGy0hf1w3NGOmMKoDhJ6HzMMG65JK8RmOcBWwCGzc2HyCEk1w@mail.gmail.com>
References: <CAJGy0hf1w3NGOmMKoDhJ6HzMMG65JK8RmOcBWwCGzc2HyCEk1w@mail.gmail.com>
Message-ID: <CAJGy0hcKn9t+RsjoL=XOwsyBi1p=f7jRbSpqhArLSMjwGzCn3A@mail.gmail.com>

---------- Forwarded message ----------
From: mai zhou <maizhou at gmail.com>
Date: Sun, Aug 12, 2018 at 4:06 PM
Subject: R_registerRoutines, R_useDynamicSymbols
To: r-package-devel at r-project.org


Hi, list,

I need help to get rid of the Note:

Found no calls to: 'R_registerRoutines', 'R_useDynamicSymbols'

It is good practice to register native routines and to disable symbol
search.


The package is emplik. I have only one C file in the src directory, that
defines two externally used functions called by .C( ) in R function:

cumsumsurv

eltestwt

What I did:

(1) add an init.c file in the src directory, and
(2) add .registration =TRUE to useDynLib(emplik, .registration = TRUE),  in
the NAMESPACE



Rcmd check fail......installation fail.

I attach the init.c file and cumsumsurv.c file below:

Any suggestions are very appreciated.

Mai Zhou

From ligge@ @ending from @t@ti@tik@tu-dortmund@de  Mon Aug 13 00:27:04 2018
From: ligge@ @ending from @t@ti@tik@tu-dortmund@de (Uwe Ligges)
Date: Mon, 13 Aug 2018 00:27:04 +0200
Subject: [R-pkg-devel] help
In-Reply-To: <1534013357602003892@aut.ac.ir>
References: <1534013357602003892@aut.ac.ir>
Message-ID: <a3940f3d-ab4b-dd58-e767-a03e47c8e59a@statistik.tu-dortmund.de>



On 11.08.2018 20:49, teimouri at aut.ac.ir wrote:
> ?Hi,
> I am preparing the document file for building a package in R studio.

R Studio or not should not matter.

> In \description{} section to write a mathematical expression I am using \deqn{} command but
> it does not work .
> Could you please help me?

Please tell us what you tried and why you think it did not work.

Best,
Uwe Ligges


> With best regards,
> Mahdi.
> -----------------------------------------------------------------------------------------------------
> Mahdi Teimouri Yanesari,
> Department of Statistics,
> Faculty of Science,
> Gonbad Kavous University,
> Gonbad Kavous,
> Iran.
> Emails:
> 
> mahdiba_2001 at yahoo.com,
> teimouri at aut.ac.ir,
> 
> 
> 
> 
>


From beggle@ton @ending from rti@org  Mon Aug 13 15:08:02 2018
From: beggle@ton @ending from rti@org (Eggleston, Barry)
Date: Mon, 13 Aug 2018 13:08:02 +0000
Subject: [R-pkg-devel] Proper way to document helper functions not
 accessible by user.
Message-ID: <BN7PR07MB51087EB1F7D743DB1E5D3041C9390@BN7PR07MB5108.namprd07.prod.outlook.com>

Hello,

I am working through my first submission and making good progress with the CRAN review system, but now I need to understand the best practice for dealing with helper functions.  I am building a package that only exports 12 functions for direct user access, but it has many helper functions not directly accessible to the user.  In my R code I am using roxygen2 to write my help pages.  I have written roxygen2 notes to create help pages for every function, but for all the helper functions I am using the keyword 'internal' so they don't show up in the index of help pages and available functions.  In future releases I may export these functions for direct access, but for now I want to keep them internal.  Within each help page of these non-accessible helper functions, I have placed '#None' in the @examples section, since nobody will be able to call the functions directly.  In my submission review I was asked to give examples for these functions, because my package still has the .Rd files for these helper functions in the submitted .tar.gz file.  How do I proper handle documentation of these helper functions?  Can I remove the roxygen2 notes that create the .Rd files for these helper functions, so the package does not contain .Rd files for them?

Thanks,
Barry

	[[alternative HTML version deleted]]


From Jori@@Mey@ @ending from ugent@be  Mon Aug 13 15:20:09 2018
From: Jori@@Mey@ @ending from ugent@be (Joris Meys)
Date: Mon, 13 Aug 2018 15:20:09 +0200
Subject: [R-pkg-devel] Proper way to document helper functions not
 accessible by user.
In-Reply-To: <BN7PR07MB51087EB1F7D743DB1E5D3041C9390@BN7PR07MB5108.namprd07.prod.outlook.com>
References: <BN7PR07MB51087EB1F7D743DB1E5D3041C9390@BN7PR07MB5108.namprd07.prod.outlook.com>
Message-ID: <CAO1zAVbyEJVOYqu9x-KahbqLAmjki-qJkzGYJ4OA_J+EP8YdjA@mail.gmail.com>

Hi Barry,

could you specify wh osked you to provide examples? R CHECK doesn't give me
any warnings. If it was asked by the people of CRAN itself, you can explain
that these are internal functions and the help pages are only there for
reference to advanced users. But I'm not sure if they'll accept that. So
here's a few things you can do:

1. Remove the roxygen comment tag and just use #. The info stays in the
code file, but no help pages are generated for these functions. Do notify
CRAN when resubmitting that you removed these help files as these are all
internal functions.
2. Just add the most basic 1-line example to the help page to satisfy
CRAN's request.

Personally I more often use the second option, mainly to aid myself and
make it easier for people to understand how the code base works. But that's
personal flavour.
Cheers
Joris

On Mon, Aug 13, 2018 at 3:09 PM Eggleston, Barry <beggleston at rti.org> wrote:

> Hello,
>
> I am working through my first submission and making good progress with the
> CRAN review system, but now I need to understand the best practice for
> dealing with helper functions.  I am building a package that only exports
> 12 functions for direct user access, but it has many helper functions not
> directly accessible to the user.  In my R code I am using roxygen2 to write
> my help pages.  I have written roxygen2 notes to create help pages for
> every function, but for all the helper functions I am using the keyword
> 'internal' so they don't show up in the index of help pages and available
> functions.  In future releases I may export these functions for direct
> access, but for now I want to keep them internal.  Within each help page of
> these non-accessible helper functions, I have placed '#None' in the
> @examples section, since nobody will be able to call the functions
> directly.  In my submission review I was asked to give examples for these
> functions, because my package still has the .Rd files f
>  or these helper functions in the submitted .tar.gz file.  How do I proper
> handle documentation of these helper functions?  Can I remove the roxygen2
> notes that create the .Rd files for these helper functions, so the package
> does not contain .Rd files for them?
>
> Thanks,
> Barry
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


-- 
Joris Meys
Statistical consultant

Department of Data Analysis and Mathematical Modelling
Ghent University
Coupure Links 653, B-9000 Gent (Belgium)
<https://maps.google.com/?q=Coupure+links+653,%C2%A0B-9000+Gent,%C2%A0Belgium&entry=gmail&source=g>

tel: +32 (0)9 264 61 79
-----------
Biowiskundedagen 2017-2018
http://www.biowiskundedagen.ugent.be/

-------------------------------
Disclaimer : http://helpdesk.ugent.be/e-maildisclaimer.php

	[[alternative HTML version deleted]]


From zk@mv@r @ending from gm@il@com  Mon Aug 13 15:27:45 2018
From: zk@mv@r @ending from gm@il@com (Zhian Kamvar)
Date: Mon, 13 Aug 2018 14:27:45 +0100
Subject: [R-pkg-devel] Proper way to document helper functions not
 accessible by user.
In-Reply-To: <BN7PR07MB51087EB1F7D743DB1E5D3041C9390@BN7PR07MB5108.namprd07.prod.outlook.com>
References: <BN7PR07MB51087EB1F7D743DB1E5D3041C9390@BN7PR07MB5108.namprd07.prod.outlook.com>
Message-ID: <CAPsXksL7RLzpVVbsxB8H1wBTAca-MeqH0trdsSfYh_3z3_wOUA@mail.gmail.com>

You can add

#' @noRd

to those functions and roxygen2 will not generate .Rd files for those
entries.

On Mon, Aug 13, 2018 at 2:08 PM Eggleston, Barry <beggleston at rti.org> wrote:

> Hello,
>
> I am working through my first submission and making good progress with the
> CRAN review system, but now I need to understand the best practice for
> dealing with helper functions.  I am building a package that only exports
> 12 functions for direct user access, but it has many helper functions not
> directly accessible to the user.  In my R code I am using roxygen2 to write
> my help pages.  I have written roxygen2 notes to create help pages for
> every function, but for all the helper functions I am using the keyword
> 'internal' so they don't show up in the index of help pages and available
> functions.  In future releases I may export these functions for direct
> access, but for now I want to keep them internal.  Within each help page of
> these non-accessible helper functions, I have placed '#None' in the
> @examples section, since nobody will be able to call the functions
> directly.  In my submission review I was asked to give examples for these
> functions, because my package still has the .Rd files f
>  or these helper functions in the submitted .tar.gz file.  How do I proper
> handle documentation of these helper functions?  Can I remove the roxygen2
> notes that create the .Rd files for these helper functions, so the package
> does not contain .Rd files for them?
>
> Thanks,
> Barry
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From boxu@ncui @ending from gm@il@com  Mon Aug 13 15:32:18 2018
From: boxu@ncui @ending from gm@il@com (Boxuan Cui)
Date: Mon, 13 Aug 2018 09:32:18 -0400
Subject: [R-pkg-devel] Proper way to document helper functions not
 accessible by user.
In-Reply-To: <CAPsXksL7RLzpVVbsxB8H1wBTAca-MeqH0trdsSfYh_3z3_wOUA@mail.gmail.com>
References: <BN7PR07MB51087EB1F7D743DB1E5D3041C9390@BN7PR07MB5108.namprd07.prod.outlook.com>
 <CAPsXksL7RLzpVVbsxB8H1wBTAca-MeqH0trdsSfYh_3z3_wOUA@mail.gmail.com>
Message-ID: <CAC-fbYbPSiYp-xExVPe8vJk1Zyx-Df2z1B4xBYh8anCPDGitVA@mail.gmail.com>

Do you have to export them? If not, I think you can just leave out the
@export from the roxygen2 comments.

Here is what I did for my package:
https://github.com/boxuancui/DataExplorer/blob/master/R/helper.r


Best,
Boxuan (Bo)


On Mon, Aug 13, 2018 at 2:08 PM Eggleston, Barry <beggleston at rti.org> wrote:
>
> > Hello,
> >
> > I am working through my first submission and making good progress with
> the
> > CRAN review system, but now I need to understand the best practice for
> > dealing with helper functions.  I am building a package that only exports
> > 12 functions for direct user access, but it has many helper functions not
> > directly accessible to the user.  In my R code I am using roxygen2 to
> write
> > my help pages.  I have written roxygen2 notes to create help pages for
> > every function, but for all the helper functions I am using the keyword
> > 'internal' so they don't show up in the index of help pages and available
> > functions.  In future releases I may export these functions for direct
> > access, but for now I want to keep them internal.  Within each help page
> of
> > these non-accessible helper functions, I have placed '#None' in the
> > @examples section, since nobody will be able to call the functions
> > directly.  In my submission review I was asked to give examples for these
> > functions, because my package still has the .Rd files f
> >  or these helper functions in the submitted .tar.gz file.  How do I
> proper
> > handle documentation of these helper functions?  Can I remove the
> roxygen2
> > notes that create the .Rd files for these helper functions, so the
> package
> > does not contain .Rd files for them?
> >
> > Thanks,
> > Barry
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
>

	[[alternative HTML version deleted]]


From beggle@ton @ending from rti@org  Mon Aug 13 15:52:46 2018
From: beggle@ton @ending from rti@org (Eggleston, Barry)
Date: Mon, 13 Aug 2018 13:52:46 +0000
Subject: [R-pkg-devel] Proper way to document helper functions not
 accessible by user.
In-Reply-To: <CAC-fbYbPSiYp-xExVPe8vJk1Zyx-Df2z1B4xBYh8anCPDGitVA@mail.gmail.com>
References: <BN7PR07MB51087EB1F7D743DB1E5D3041C9390@BN7PR07MB5108.namprd07.prod.outlook.com>
 <CAPsXksL7RLzpVVbsxB8H1wBTAca-MeqH0trdsSfYh_3z3_wOUA@mail.gmail.com>
 <CAC-fbYbPSiYp-xExVPe8vJk1Zyx-Df2z1B4xBYh8anCPDGitVA@mail.gmail.com>
Message-ID: <BN7PR07MB5108EB64D752EBDAC9B15474C9390@BN7PR07MB5108.namprd07.prod.outlook.com>

Thanks everybody.  And just to clarify, it is no why that CRAN knew the functions in question were helper functions.  From their perspective, I just had a lot of .Rd files with ?#none? under @examples.  Since these files under question are not directly accessible to the user, I will try the
#' @noRd
option that Zhian Kamvar mentions in my resubmission.

Thanks,
Barry


From: Boxuan Cui <boxuancui at gmail.com>
Sent: Monday, August 13, 2018 9:32 AM
To: Eggleston, Barry <beggleston at rti.org>
Cc: r-package-devel at r-project.org
Subject: Re: [R-pkg-devel] Proper way to document helper functions not accessible by user.

Do you have to export them? If not, I think you can just leave out the @export from the roxygen2 comments.

Here is what I did for my package: https://github.com/boxuancui/DataExplorer/blob/master/R/helper.r


Best,
Boxuan (Bo)


On Mon, Aug 13, 2018 at 2:08 PM Eggleston, Barry <beggleston at rti.org<mailto:beggleston at rti.org>> wrote:

> Hello,
>
> I am working through my first submission and making good progress with the
> CRAN review system, but now I need to understand the best practice for
> dealing with helper functions.  I am building a package that only exports
> 12 functions for direct user access, but it has many helper functions not
> directly accessible to the user.  In my R code I am using roxygen2 to write
> my help pages.  I have written roxygen2 notes to create help pages for
> every function, but for all the helper functions I am using the keyword
> 'internal' so they don't show up in the index of help pages and available
> functions.  In future releases I may export these functions for direct
> access, but for now I want to keep them internal.  Within each help page of
> these non-accessible helper functions, I have placed '#None' in the
> @examples section, since nobody will be able to call the functions
> directly.  In my submission review I was asked to give examples for these
> functions, because my package still has the .Rd files f
>  or these helper functions in the submitted .tar.gz file.  How do I proper
> handle documentation of these helper functions?  Can I remove the roxygen2
> notes that create the .Rd files for these helper functions, so the package
> does not contain .Rd files for them?
>
> Thanks,
> Barry
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org<mailto:R-package-devel at r-project.org> mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From ch@rlie @ending from @t@t@umn@edu  Mon Aug 13 16:32:01 2018
From: ch@rlie @ending from @t@t@umn@edu (Charles Geyer)
Date: Mon, 13 Aug 2018 09:32:01 -0500
Subject: [R-pkg-devel] R_registerRoutines, R_useDynamicSymbols
Message-ID: <CAKctRd3erDdW9z08sWSyL3TYUAC8c9mBHndeHNdyLh_Dn87LXg@mail.gmail.com>

There are several other things to do.  You might find the toy package
fooRegister I use for teaching helpful.
https://github.com/cjgeyer/foo/tree/master/package/fooRegister

-- 
Charles Geyer
Professor, School of Statistics
Resident Fellow, Minnesota Center for Philosophy of Science
University of Minnesota
charlie at stat.umn.edu

	[[alternative HTML version deleted]]


From murdoch@dunc@n @ending from gm@il@com  Mon Aug 13 16:51:31 2018
From: murdoch@dunc@n @ending from gm@il@com (Duncan Murdoch)
Date: Mon, 13 Aug 2018 10:51:31 -0400
Subject: [R-pkg-devel] Proper way to document helper functions not
 accessible by user.
In-Reply-To: <BN7PR07MB51087EB1F7D743DB1E5D3041C9390@BN7PR07MB5108.namprd07.prod.outlook.com>
References: <BN7PR07MB51087EB1F7D743DB1E5D3041C9390@BN7PR07MB5108.namprd07.prod.outlook.com>
Message-ID: <beb97438-79a2-46de-8875-44fd6e1d049a@gmail.com>

On 13/08/2018 9:08 AM, Eggleston, Barry wrote:
> Hello,
> 
> I am working through my first submission and making good progress with the CRAN review system, but now I need to understand the best practice for dealing with helper functions.  I am building a package that only exports 12 functions for direct user access, but it has many helper functions not directly accessible to the user.  In my R code I am using roxygen2 to write my help pages.  I have written roxygen2 notes to create help pages for every function, but for all the helper functions I am using the keyword 'internal' so they don't show up in the index of help pages and available functions.  In future releases I may export these functions for direct access, but for now I want to keep them internal.  Within each help page of these non-accessible helper functions, I have placed '#None' in the @examples section, since nobody will be able to call the functions directly.  In my submission review I was asked to give examples for these functions, because my package still has the .Rd files f
>   or these helper functions in the submitted .tar.gz file.  How do I proper handle documentation of these helper functions?  Can I remove the roxygen2 notes that create the .Rd files for these helper functions, so the package does not contain .Rd files for them?
> 

This sounds like a bug in the review system.  Marking them with 
\keyword{internal} is how you are supposed to mark internal-use 
functions.  Most such help pages (e.g. ?layout.heights from the grid 
package) don't have examples.

If you got the message from a human being, you could just resubmit with 
a note pointing out that those pages are marked as internal.  If it was 
from the automatic checks, it's probably best to try one of the 
workarounds that someone else suggested.

Duncan Murdoch

From ligge@ @ending from @t@ti@tik@tu-dortmund@de  Mon Aug 13 16:57:15 2018
From: ligge@ @ending from @t@ti@tik@tu-dortmund@de (Uwe Ligges)
Date: Mon, 13 Aug 2018 16:57:15 +0200
Subject: [R-pkg-devel] Proper way to document helper functions not
 accessible by user.
In-Reply-To: <beb97438-79a2-46de-8875-44fd6e1d049a@gmail.com>
References: <BN7PR07MB51087EB1F7D743DB1E5D3041C9390@BN7PR07MB5108.namprd07.prod.outlook.com>
 <beb97438-79a2-46de-8875-44fd6e1d049a@gmail.com>
Message-ID: <b2786f0c-340d-4b8e-54ff-f83cb3fd36c5@statistik.tu-dortmund.de>



On 13.08.2018 16:51, Duncan Murdoch wrote:
> On 13/08/2018 9:08 AM, Eggleston, Barry wrote:
>> Hello,
>>
>> I am working through my first submission and making good progress with 
>> the CRAN review system, but now I need to understand the best practice 
>> for dealing with helper functions.? I am building a package that only 
>> exports 12 functions for direct user access, but it has many helper 
>> functions not directly accessible to the user.? In my R code I am 
>> using roxygen2 to write my help pages.? I have written roxygen2 notes 
>> to create help pages for every function, but for all the helper 
>> functions I am using the keyword 'internal' so they don't show up in 
>> the index of help pages and available functions.? In future releases I 
>> may export these functions for direct access, but for now I want to 
>> keep them internal.? Within each help page of these non-accessible 
>> helper functions, I have placed '#None' in the @examples section, 
>> since nobody will be able to call the functions directly.? In my 
>> submission review I was asked to give examples for these functions, 
>> because my package still has the .Rd files
>  ?f
>> ? or these helper functions in the submitted .tar.gz file.? How do I 
>> proper handle documentation of these helper functions?? Can I remove 
>> the roxygen2 notes that create the .Rd files for these helper 
>> functions, so the package does not contain .Rd files for them?
>>
> 
> This sounds like a bug in the review system.? Marking them with 
> \keyword{internal} is how you are supposed to mark internal-use 
> functions.? Most such help pages (e.g. ?layout.heights from the grid 
> package) don't have examples.
> 
> If you got the message from a human being, you could just resubmit with 
> a note pointing out that those pages are marked as internal.? If it was 
> from the automatic checks, it's probably best to try one of the 
> workarounds that someone else suggested.

Yes, please.
If marked internal and it is not exported, examples are not mandatory.

Best,
Uwe Ligges




> Duncan Murdoch
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From @tef@nML @ending from colloc@tion@@de  Mon Aug 13 17:36:24 2018
From: @tef@nML @ending from colloc@tion@@de (Stefan Evert)
Date: Mon, 13 Aug 2018 17:36:24 +0200
Subject: [R-pkg-devel] Replicate solaris errors
In-Reply-To: <415AF3D6-F62D-4C43-9830-737120A7029F@gmail.com>
References: <CAFyih6AJmS0=s8U430WPg8odFtU_ZSJdc4UnVVzyC=gezed=pA@mail.gmail.com>
 <CALEXWq2+vJ4i+8frB6hgcy4D6QwFmZUj8BALTP=aJ-p9pqG17Q@mail.gmail.com>
 <CAFyih6AqZanF_=uTa3drZhS3+DexwCRnVL8mKVBcGLzNKqJ2xQ@mail.gmail.com>
 <415AF3D6-F62D-4C43-9830-737120A7029F@gmail.com>
Message-ID: <CEB65A14-BF34-431A-93A9-3674E20B7A7D@collocations.de>

> On 12 Aug 2018, at 00:18, peter dalgaard <pdalgd at gmail.com> wrote:
> 
> Have you tried asking CRAN for help? I mean, if you don't fix an obvious error, with a well-known cause, like the log thing, they'll get fed up and throw you off. However, fixing and then discovering an issue elsewhere is different, especially if you cannot easily reproduce it at your end. 

When I did that for a similar problem with the 'sparsesvd' package ? before Solaris was available via R-hub, so I really had no chance to chase down the problem without help from CRAN ? I never got a response.

I later managed to identify and fix the problem by tedious trial & error via R-hub.

Symptoms were similar: build succeeded, but the package always crashed when running tests and examples, but only on Solaris.

The solution turned out to be that the 3rd-party C code my package wraps defines a C function named store(), which causes Solaris to segfault for reasons that I don't understand at all.  But renaming the function to anything else solved the issue.

Best,
Stefan


From kevinu@hey @ending from gm@il@com  Mon Aug 13 18:26:40 2018
From: kevinu@hey @ending from gm@il@com (Kevin Ushey)
Date: Mon, 13 Aug 2018 09:26:40 -0700
Subject: [R-pkg-devel] R_registerRoutines, R_useDynamicSymbols
In-Reply-To: <CAKctRd3erDdW9z08sWSyL3TYUAC8c9mBHndeHNdyLh_Dn87LXg@mail.gmail.com>
References: <CAKctRd3erDdW9z08sWSyL3TYUAC8c9mBHndeHNdyLh_Dn87LXg@mail.gmail.com>
Message-ID: <CAJXgQP1_hR4oxrVgybs3iMjfdBYr5=Yfod+RM2AbS3x19ufbZQ@mail.gmail.com>

Note that your attachment was lost, so we don't know what your package code
looks like. It's helpful to host your package sources somewhere publicly
accessible (e.g. GitHub) to make it easier for others to access sources
quickly from a web browser.

My best guess is that your 'init.c' is missing the recommended calls to
R_registerRoutines() and R_useDynamicSymbols(). tools:::
package_native_routine_registration_skeleton() (new in R 3.5.0, if I recall
correctly) is very useful for auto-generating 'init.c' for you. See its
associated help file for usage.

See also:
https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Registering-native-routines

Best,
Kevin

On Mon, Aug 13, 2018 at 7:32 AM Charles Geyer <charlie at stat.umn.edu> wrote:

> There are several other things to do.  You might find the toy package
> fooRegister I use for teaching helpful.
> https://github.com/cjgeyer/foo/tree/master/package/fooRegister
>
> --
> Charles Geyer
> Professor, School of Statistics
> Resident Fellow, Minnesota Center for Philosophy of Science
> University of Minnesota
> charlie at stat.umn.edu
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From p@uljohn32 @ending from gm@il@com  Mon Aug 13 19:20:52 2018
From: p@uljohn32 @ending from gm@il@com (Paul Johnson)
Date: Mon, 13 Aug 2018 12:20:52 -0500
Subject: [R-pkg-devel] Package vignette index
Message-ID: <CAErODj8t7X_zZeAAYfg6nsL1nbC_QbJ3euYd2OALde4Qi2Fwtg@mail.gmail.com>

Can you advise me about this warning in package check:

Package has a VignetteBuilder field but no prebuilt vignette index.

In my vignette folder, I do have an "index.html" file, the index in
the installed package is fine.  But I still get this package build
warning:

I asked same question on stackoverflow, am not getting any help yet

https://stackoverflow.com/questions/51792384/r-package-vignette-no-vignette-index-warning

pj

-- 
Paul E. Johnson   http://pj.freefaculty.org
Director, Center for Research Methods and Data Analysis http://crmda.ku.edu

To write to me directly, please address me at pauljohn at ku.edu.


From p@uljohn32 @ending from gm@il@com  Mon Aug 13 20:07:45 2018
From: p@uljohn32 @ending from gm@il@com (Paul Johnson)
Date: Mon, 13 Aug 2018 13:07:45 -0500
Subject: [R-pkg-devel] Debian pandoc "\passthrough undefined" error and
 workaround
Message-ID: <CAErODj9vnRNxFaG9PzaDmrsDRKFOLSjyYTR8eQMbkWRHV9MM3g@mail.gmail.com>

Today I saw an error from CRAN that I did not see in Win-builder or on
my system with Ubuntu Linux. This is from the CRAN Debian test system:

* checking for unstated dependencies in vignettes ... OK
* checking package vignettes in ?inst/doc? ... OK
* checking re-building of vignette outputs ... [6s/7s] WARNING
Error in re-building vignettes:
  ...
! Undefined control sequence.
l.204 \passthrough
                  {\lstinline!Rmarkdown!} is a style of markdown document used

I checked the pandoc devel site and they mention that in newer pandoc,
the software will make available a macro named \passthrough.  So far
as I can tell, it was a glitch at one time that pandoc inserted the
usage of \passthrough macro making sure that is defined in the
document preamble. This only affected documents that ask for use of
the listings class by pandoc and LaTeX.

The small code block I insert in the template in order to pass the
automated CRAN check is:

$if(listings)$
\usepackage{listings}
\newcommand{\passthrough}[1]{#1}
$endif$

I am led to believe that the problem will disappear when Debian pandoc
is updated.  On my Ubuntu system using pandoc-1.19.2.4, I don't have
any trouble building the vignettes or running build check --as-cran.

pj

-- 
Paul E. Johnson   http://pj.freefaculty.org
Director, Center for Research Methods and Data Analysis http://crmda.ku.edu

To write to me directly, please address me at pauljohn at ku.edu.


From ligge@ @ending from @t@ti@tik@tu-dortmund@de  Tue Aug 14 15:07:27 2018
From: ligge@ @ending from @t@ti@tik@tu-dortmund@de (Uwe Ligges)
Date: Tue, 14 Aug 2018 15:07:27 +0200
Subject: [R-pkg-devel] CRAN incoming queue closed from Sep 1 to Sep 9
Message-ID: <79c39a17-a947-a8ec-15dd-c22b8462a9f3@statistik.tu-dortmund.de>

Dear package developers,

the CRAN incoming queue will be closed from Sep 1 to Sep 9. Hence 
package submissions are only possible before and after that period.

Best,
Uwe Ligges
(for the CRAN team)


From h@wickh@m @ending from gm@il@com  Tue Aug 14 16:36:21 2018
From: h@wickh@m @ending from gm@il@com (Hadley Wickham)
Date: Tue, 14 Aug 2018 09:36:21 -0500
Subject: [R-pkg-devel] CRAN incoming queue closed from Sep 1 to Sep 9
In-Reply-To: <79c39a17-a947-a8ec-15dd-c22b8462a9f3@statistik.tu-dortmund.de>
References: <79c39a17-a947-a8ec-15dd-c22b8462a9f3@statistik.tu-dortmund.de>
Message-ID: <CABdHhvFAwsuU5N+7K5ht2wNqg3NV9La3MaQkL6nioGrasiEiWw@mail.gmail.com>

Does this include automatically (bot) accepted submissions?
Hadley
On Tue, Aug 14, 2018 at 8:07 AM Uwe Ligges
<ligges at statistik.tu-dortmund.de> wrote:
>
> Dear package developers,
>
> the CRAN incoming queue will be closed from Sep 1 to Sep 9. Hence
> package submissions are only possible before and after that period.
>
> Best,
> Uwe Ligges
> (for the CRAN team)
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel



-- 
http://hadley.nz


From ligge@ @ending from @t@ti@tik@tu-dortmund@de  Tue Aug 14 17:14:27 2018
From: ligge@ @ending from @t@ti@tik@tu-dortmund@de (Uwe Ligges)
Date: Tue, 14 Aug 2018 17:14:27 +0200
Subject: [R-pkg-devel] CRAN incoming queue closed from Sep 1 to Sep 9
In-Reply-To: <CABdHhvFAwsuU5N+7K5ht2wNqg3NV9La3MaQkL6nioGrasiEiWw@mail.gmail.com>
References: <79c39a17-a947-a8ec-15dd-c22b8462a9f3@statistik.tu-dortmund.de>
 <CABdHhvFAwsuU5N+7K5ht2wNqg3NV9La3MaQkL6nioGrasiEiWw@mail.gmail.com>
Message-ID: <c07d56ce-157d-dc88-1e7c-ce9b1bfa5f7f@statistik.tu-dortmund.de>

Yes, during maintainance work in restructuring of the processes, the 
auto-check services cannot work reliably.

Best,
Uwe


On 14.08.2018 16:36, Hadley Wickham wrote:
> Does this include automatically (bot) accepted submissions?
> Hadley
> On Tue, Aug 14, 2018 at 8:07 AM Uwe Ligges
> <ligges at statistik.tu-dortmund.de> wrote:
>>
>> Dear package developers,
>>
>> the CRAN incoming queue will be closed from Sep 1 to Sep 9. Hence
>> package submissions are only possible before and after that period.
>>
>> Best,
>> Uwe Ligges
>> (for the CRAN team)
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> 
>


From profjcn@@h @ending from gm@il@com  Tue Aug 14 17:44:53 2018
From: profjcn@@h @ending from gm@il@com (J C Nash)
Date: Tue, 14 Aug 2018 11:44:53 -0400
Subject: [R-pkg-devel] CRAN incoming queue closed from Sep 1 to Sep 9
In-Reply-To: <CABdHhvFAwsuU5N+7K5ht2wNqg3NV9La3MaQkL6nioGrasiEiWw@mail.gmail.com>
References: <79c39a17-a947-a8ec-15dd-c22b8462a9f3@statistik.tu-dortmund.de>
 <CABdHhvFAwsuU5N+7K5ht2wNqg3NV9La3MaQkL6nioGrasiEiWw@mail.gmail.com>
Message-ID: <0cc34930-60f8-56cb-1a84-11709bac6cb4@gmail.com>

Will pending queries to CRAN-submissions about false positives in the check process be cleared
first, or left pending? I've been waiting quite a while re: new optimx package,
which has 1 so-called "ERROR" (non-convergence, please use a different method msg)
and 1 WARNING because new optimx subsumes optextras.

An alternative I can accept is an invite to resubmit after the reset, but those
of us in limbo do need to know to avoid time wasting on all sides.

Best, JN


On 2018-08-14 10:36 AM, Hadley Wickham wrote:
> Does this include automatically (bot) accepted submissions?
> Hadley
> On Tue, Aug 14, 2018 at 8:07 AM Uwe Ligges
> <ligges at statistik.tu-dortmund.de> wrote:
>>
>> Dear package developers,
>>
>> the CRAN incoming queue will be closed from Sep 1 to Sep 9. Hence
>> package submissions are only possible before and after that period.
>>
>> Best,
>> Uwe Ligges
>> (for the CRAN team)
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> 
>


From ligge@ @ending from @t@ti@tik@tu-dortmund@de  Tue Aug 14 19:13:54 2018
From: ligge@ @ending from @t@ti@tik@tu-dortmund@de (Uwe Ligges)
Date: Tue, 14 Aug 2018 19:13:54 +0200
Subject: [R-pkg-devel] CRAN incoming queue closed from Sep 1 to Sep 9
In-Reply-To: <0cc34930-60f8-56cb-1a84-11709bac6cb4@gmail.com>
References: <79c39a17-a947-a8ec-15dd-c22b8462a9f3@statistik.tu-dortmund.de>
 <CABdHhvFAwsuU5N+7K5ht2wNqg3NV9La3MaQkL6nioGrasiEiWw@mail.gmail.com>
 <0cc34930-60f8-56cb-1a84-11709bac6cb4@gmail.com>
Message-ID: <2ae095ae-55ad-cd70-5e14-4c3471fc776c@statistik.tu-dortmund.de>

Dear John,

we will respond to your issues very soon now.
The queues will be cleared before doing maintainance work, of course.

Best,
Uwe




On 14.08.2018 17:44, J C Nash wrote:
> Will pending queries to CRAN-submissions about false positives in the check process be cleared
> first, or left pending? I've been waiting quite a while re: new optimx package,
> which has 1 so-called "ERROR" (non-convergence, please use a different method msg)
> and 1 WARNING because new optimx subsumes optextras.
> 
> An alternative I can accept is an invite to resubmit after the reset, but those
> of us in limbo do need to know to avoid time wasting on all sides.
> 
> Best, JN
> 
> 
> On 2018-08-14 10:36 AM, Hadley Wickham wrote:
>> Does this include automatically (bot) accepted submissions?
>> Hadley
>> On Tue, Aug 14, 2018 at 8:07 AM Uwe Ligges
>> <ligges at statistik.tu-dortmund.de> wrote:
>>>
>>> Dear package developers,
>>>
>>> the CRAN incoming queue will be closed from Sep 1 to Sep 9. Hence
>>> package submissions are only possible before and after that period.
>>>
>>> Best,
>>> Uwe Ligges
>>> (for the CRAN team)
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>>
>>


From p@uljohn32 @ending from gm@il@com  Tue Aug 14 20:38:04 2018
From: p@uljohn32 @ending from gm@il@com (Paul Johnson)
Date: Tue, 14 Aug 2018 13:38:04 -0500
Subject: [R-pkg-devel] Package vignette index
In-Reply-To: <CAErODj8t7X_zZeAAYfg6nsL1nbC_QbJ3euYd2OALde4Qi2Fwtg@mail.gmail.com>
References: <CAErODj8t7X_zZeAAYfg6nsL1nbC_QbJ3euYd2OALde4Qi2Fwtg@mail.gmail.com>
Message-ID: <CAErODj8qYpR3TMpPSbusMdDRogPspm1MPAv3ayqdENnvcNkbVQ@mail.gmail.com>

Can one of you confirm this answer: The --as-cran package checker is
looking for "build/vignette.rds", not "vignettes/index.html" as I
thought. Details below.

On Mon, Aug 13, 2018 at 12:20 PM, Paul Johnson <pauljohn32 at gmail.com> wrote:
> Can you advise me about this warning in package check:
>
> Package has a VignetteBuilder field but no prebuilt vignette index.
>
> In my vignette folder, I do have an "index.html" file, the index in
> the installed package is fine.  But I still get this package build
> warning:
>
> I asked same question on stackoverflow, am not getting any help yet
>
> https://stackoverflow.com/questions/51792384/r-package-vignette-no-vignette-index-warning
>

Explanation

Although the index.html file is described in the documentation
(https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Non_002dSweave-vignettes),
the file that is actually crucial is

build/vignette.rds

That folder & file is created by R CMD build if the parameter
"--no-build-vignettes" is not used. Otherwise, the warning occurs even
if index.html exists.

In the R source code src/library/tools/R/QC.R, find the function
".check_package_CRAN_incoming".  That function gives the warning about
the lack of a pre-built vignette index.    It looks for
"build/vignette.rds" in the package.

vds <- character()
    if(!is.na(meta["VignetteBuilder"])) {
        if(!file.exists(vds <- file.path(dir, "build", "vignette.rds")))
            out$missing_vignette_index <- TRUE
        else
            vds <- readRDS(vds)[, "File"]
    }

and then later

 if(length(y <- x$missing_vignette_index)) {
          "Package has a VignetteBuilder field but no prebuilt vignette index."
      },

vignette.rds is a data frame that has the content required to build an
index.html file.

After inserting a build folder in my package source with the
vignette.rds file, then the warning from "R CMD check --as-cran" was
silenced.

pj

-- 
Paul E. Johnson   http://pj.freefaculty.org
Director, Center for Research Methods and Data Analysis http://crmda.ku.edu

To write to me directly, please address me at pauljohn at ku.edu.


From h@wickh@m @ending from gm@il@com  Tue Aug 14 23:42:14 2018
From: h@wickh@m @ending from gm@il@com (Hadley Wickham)
Date: Tue, 14 Aug 2018 16:42:14 -0500
Subject: [R-pkg-devel] Package vignette index
In-Reply-To: <CAErODj8t7X_zZeAAYfg6nsL1nbC_QbJ3euYd2OALde4Qi2Fwtg@mail.gmail.com>
References: <CAErODj8t7X_zZeAAYfg6nsL1nbC_QbJ3euYd2OALde4Qi2Fwtg@mail.gmail.com>
Message-ID: <CABdHhvG-xn3kota1iKXzk1u4LWvJpOB6M_6OBCJ95F=ByAr-mw@mail.gmail.com>

I'm pretty certain that seeing this warning indicates that your
`.Rbuildignore` is ignoring something that it shouldn't. You certainly
shouldn't be creating this file by hand.

Hadley
On Mon, Aug 13, 2018 at 12:44 PM Paul Johnson <pauljohn32 at gmail.com> wrote:
>
> Can you advise me about this warning in package check:
>
> Package has a VignetteBuilder field but no prebuilt vignette index.
>
> In my vignette folder, I do have an "index.html" file, the index in
> the installed package is fine.  But I still get this package build
> warning:
>
> I asked same question on stackoverflow, am not getting any help yet
>
> https://stackoverflow.com/questions/51792384/r-package-vignette-no-vignette-index-warning
>
> pj
>
> --
> Paul E. Johnson   http://pj.freefaculty.org
> Director, Center for Research Methods and Data Analysis http://crmda.ku.edu
>
> To write to me directly, please address me at pauljohn at ku.edu.
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel



-- 
http://hadley.nz


From d@hl @ending from @t@t@byu@edu  Sun Aug 19 02:59:10 2018
From: d@hl @ending from @t@t@byu@edu (David B. Dahl)
Date: Sat, 18 Aug 2018 18:59:10 -0600
Subject: [R-pkg-devel] New test in R-devel causes existing packages to fail:
 "Error: connections left open"
Message-ID: <CALivmgYpMS07FmXT12edvVo42SgeVXX7T-Y2K6Zcmib1ESXcXw@mail.gmail.com>

In preparing to submit an update of my package to CRAN, I found that
R-devel has a new test regarding "connects left open" that my packages
fail.  The new test appears to have been committed by Uwe Ligges in
revisions 74959 and 74964 on 2018-07-14 and 2018-07-15, respectively.
The commit message says, "check after each example whether open
connections exist, indicating e.g. file connections were left open or
parallel clusters still running."

I am hoping for advice on how to pass "R CMD check --as-cran".  Or,
perhaps my situation will prompt a change to the test or, at least,
having it result in a warning instead of an error.

Below I describe the situation.  My rscala package allows developers
to write R packages based on Scala (much like rJava and Rcpp for Java
and C++, respectively).  Scala runs as a separate process and
interprocess communication is implemented using socket connections.

Suppose a package using rscala has functions that call Scala code.
(Such packages are 'bamboo', 'sdols', and 'shallot' on CRAN.)  The
first time a user executes an R function calling down into Scala, a
socket connect between Scala and R is established.  For the sake of
low latency, after the call to the function ends, the connection stays
open until the package is unloaded or the R session ends.  But, this
approach runs afoul of the new test mentioned above that appears to be
designed to catch connections that are *accidentally* left open.

I definitely do not want to users of my packages 'bamboo', 'sdols',
and 'shallot' to have to think about managing connection between Scala
and R.  That's an implementation detail and uing the package should be
transparent for the user (who doesn't care about the implementation
details).

On my end, I see two solutions:  1. I could try to reengineer my
approach --- establishing a new connection for every single call into
Scala --- although I am loath to do anything to increase the latency,
or 2. I could wrap all the examples in \donttest so that CRAN checks
are passed.

Or, again, perhaps my situation will prompt a reevaluation of the
test.  Perhaps it could result in a warning (instead of an error) and
the CRAN maintainers would accept packages with such a warning.

Any advise?  Thanks a lot!

-- David


From piyu@h@gupt@96 @ending from gm@il@com  Sun Aug 19 04:50:17 2018
From: piyu@h@gupt@96 @ending from gm@il@com (Piyush Gupta)
Date: Sun, 19 Aug 2018 08:20:17 +0530
Subject: [R-pkg-devel] Log for Windows gives a system requirement Error
Message-ID: <CABVDHuDB1epRV0VpfcVC_FryQ9T3F2=kX0kQC3uf-Y1pN4cJ=g@mail.gmail.com>

Hi,

I am new to R package development. I have built an R package 'LSTModis'.
I can be found here : https://github.com/piyush96/LSTModis

On running R CMD check on win-builder, the following is the error :

** running examples for arch 'i386' ... ERROR
Running examples in 'LSTModis-Ex.R' failed
The error most likely occurred in:

> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: Download_tif
> ### Title: Download tif files
> ### Aliases: Download_tif
>
> ### ** Examples
>
> pwd<-getwd()
> Download_tif(username="abc",password="**",
+                            start_date="2017-12-19",
+                            end_date="2017-12-21",
+                            option=2,
+                            path_files=pwd)
Loading required package: gWidgetsRGtk2
Loading required package: RGtk2
Loading required package: gWidgets
Loading required package: cairoDevice
[Sat Aug 18 17:09:34 2018] Welcome to MODIStsp!We will now search for
a valid GDAL installation - pleasewait! (this will happen only once)
Error in MODIStsp::MODIStsp() :
  Your local GDAL installation does not support HDF4 format.
Please install HDF4 support and recompile GDAL.
See:http://lbusett.github.io/MODIStsp/articles/installation.html#
installing-r-and-gdal
Calls: Download_tif -> <Anonymous>
Execution halted


'LSTModis' depends on the R package 'MODIStsp' which has GDAL as a
system requirement. Since, it is a system requirement, I am not sure
how my R package 'LSTModis' can incorporate the requirements of GDAL.

Any feedback would be of great help.

Thanks

Piyush

(Developer of LSTModis)

	[[alternative HTML version deleted]]


From c@@rdi@g@bor @ending from gm@il@com  Sun Aug 19 18:32:42 2018
From: c@@rdi@g@bor @ending from gm@il@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Sun, 19 Aug 2018 18:32:42 +0200
Subject: [R-pkg-devel] 
 New test in R-devel causes existing packages to fail:
 "Error: connections left open"
In-Reply-To: <CALivmgYpMS07FmXT12edvVo42SgeVXX7T-Y2K6Zcmib1ESXcXw@mail.gmail.com>
References: <CALivmgYpMS07FmXT12edvVo42SgeVXX7T-Y2K6Zcmib1ESXcXw@mail.gmail.com>
Message-ID: <CABtg=Km=qpgF5bGDR=bVP7R7pS0iw=CTZygkm8+xerp2FhJhkA@mail.gmail.com>

You could just create a function to close the connection and then
people could call it at the end of their test suites.

Gabor
On Sun, Aug 19, 2018 at 6:22 PM David B. Dahl <dahl at stat.byu.edu> wrote:
>
> In preparing to submit an update of my package to CRAN, I found that
> R-devel has a new test regarding "connects left open" that my packages
> fail.  The new test appears to have been committed by Uwe Ligges in
> revisions 74959 and 74964 on 2018-07-14 and 2018-07-15, respectively.
> The commit message says, "check after each example whether open
> connections exist, indicating e.g. file connections were left open or
> parallel clusters still running."
>
> I am hoping for advice on how to pass "R CMD check --as-cran".  Or,
> perhaps my situation will prompt a change to the test or, at least,
> having it result in a warning instead of an error.
>
> Below I describe the situation.  My rscala package allows developers
> to write R packages based on Scala (much like rJava and Rcpp for Java
> and C++, respectively).  Scala runs as a separate process and
> interprocess communication is implemented using socket connections.
>
> Suppose a package using rscala has functions that call Scala code.
> (Such packages are 'bamboo', 'sdols', and 'shallot' on CRAN.)  The
> first time a user executes an R function calling down into Scala, a
> socket connect between Scala and R is established.  For the sake of
> low latency, after the call to the function ends, the connection stays
> open until the package is unloaded or the R session ends.  But, this
> approach runs afoul of the new test mentioned above that appears to be
> designed to catch connections that are *accidentally* left open.
>
> I definitely do not want to users of my packages 'bamboo', 'sdols',
> and 'shallot' to have to think about managing connection between Scala
> and R.  That's an implementation detail and uing the package should be
> transparent for the user (who doesn't care about the implementation
> details).
>
> On my end, I see two solutions:  1. I could try to reengineer my
> approach --- establishing a new connection for every single call into
> Scala --- although I am loath to do anything to increase the latency,
> or 2. I could wrap all the examples in \donttest so that CRAN checks
> are passed.
>
> Or, again, perhaps my situation will prompt a reevaluation of the
> test.  Perhaps it could result in a warning (instead of an error) and
> the CRAN maintainers would accept packages with such a warning.
>
> Any advise?  Thanks a lot!
>
> -- David
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From c@@rdi@g@bor @ending from gm@il@com  Sun Aug 19 18:34:46 2018
From: c@@rdi@g@bor @ending from gm@il@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Sun, 19 Aug 2018 18:34:46 +0200
Subject: [R-pkg-devel] 
 New test in R-devel causes existing packages to fail:
 "Error: connections left open"
In-Reply-To: <CABtg=Km=qpgF5bGDR=bVP7R7pS0iw=CTZygkm8+xerp2FhJhkA@mail.gmail.com>
References: <CALivmgYpMS07FmXT12edvVo42SgeVXX7T-Y2K6Zcmib1ESXcXw@mail.gmail.com>
 <CABtg=Km=qpgF5bGDR=bVP7R7pS0iw=CTZygkm8+xerp2FhJhkA@mail.gmail.com>
Message-ID: <CABtg=K=9S8rfHAt8xh-Xwg3+YxNGGpUZTV2W+GU513QxB8mfZQ@mail.gmail.com>

Sorry, missed that these were examples, so, yeah, that's harder.  G.
On Sun, Aug 19, 2018 at 6:32 PM G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:
>
> You could just create a function to close the connection and then
> people could call it at the end of their test suites.
>
> Gabor
> On Sun, Aug 19, 2018 at 6:22 PM David B. Dahl <dahl at stat.byu.edu> wrote:
> >
> > In preparing to submit an update of my package to CRAN, I found that
> > R-devel has a new test regarding "connects left open" that my packages
> > fail.  The new test appears to have been committed by Uwe Ligges in
> > revisions 74959 and 74964 on 2018-07-14 and 2018-07-15, respectively.
> > The commit message says, "check after each example whether open
> > connections exist, indicating e.g. file connections were left open or
> > parallel clusters still running."
> >
> > I am hoping for advice on how to pass "R CMD check --as-cran".  Or,
> > perhaps my situation will prompt a change to the test or, at least,
> > having it result in a warning instead of an error.
> >
> > Below I describe the situation.  My rscala package allows developers
> > to write R packages based on Scala (much like rJava and Rcpp for Java
> > and C++, respectively).  Scala runs as a separate process and
> > interprocess communication is implemented using socket connections.
> >
> > Suppose a package using rscala has functions that call Scala code.
> > (Such packages are 'bamboo', 'sdols', and 'shallot' on CRAN.)  The
> > first time a user executes an R function calling down into Scala, a
> > socket connect between Scala and R is established.  For the sake of
> > low latency, after the call to the function ends, the connection stays
> > open until the package is unloaded or the R session ends.  But, this
> > approach runs afoul of the new test mentioned above that appears to be
> > designed to catch connections that are *accidentally* left open.
> >
> > I definitely do not want to users of my packages 'bamboo', 'sdols',
> > and 'shallot' to have to think about managing connection between Scala
> > and R.  That's an implementation detail and uing the package should be
> > transparent for the user (who doesn't care about the implementation
> > details).
> >
> > On my end, I see two solutions:  1. I could try to reengineer my
> > approach --- establishing a new connection for every single call into
> > Scala --- although I am loath to do anything to increase the latency,
> > or 2. I could wrap all the examples in \donttest so that CRAN checks
> > are passed.
> >
> > Or, again, perhaps my situation will prompt a reevaluation of the
> > test.  Perhaps it could result in a warning (instead of an error) and
> > the CRAN maintainers would accept packages with such a warning.
> >
> > Any advise?  Thanks a lot!
> >
> > -- David
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel


From murdoch@dunc@n @ending from gm@il@com  Mon Aug 20 02:11:20 2018
From: murdoch@dunc@n @ending from gm@il@com (Duncan Murdoch)
Date: Sun, 19 Aug 2018 20:11:20 -0400
Subject: [R-pkg-devel] 
 New test in R-devel causes existing packages to fail:
 "Error: connections left open"
In-Reply-To: <CABtg=K=9S8rfHAt8xh-Xwg3+YxNGGpUZTV2W+GU513QxB8mfZQ@mail.gmail.com>
References: <CALivmgYpMS07FmXT12edvVo42SgeVXX7T-Y2K6Zcmib1ESXcXw@mail.gmail.com>
 <CABtg=Km=qpgF5bGDR=bVP7R7pS0iw=CTZygkm8+xerp2FhJhkA@mail.gmail.com>
 <CABtg=K=9S8rfHAt8xh-Xwg3+YxNGGpUZTV2W+GU513QxB8mfZQ@mail.gmail.com>
Message-ID: <43752246-5d13-843a-2bd5-0b9b090ac00d@gmail.com>

On 19/08/2018 12:34 PM, G?bor Cs?rdi wrote:
> Sorry, missed that these were examples, so, yeah, that's harder.  G.

How about a function that checks if the connection is open before doing 
anything, and then at the end you close it if it wasn't already open? 
This will make all examples run slower on CRAN, but won't affect most 
users who are doing their own stuff as well as running examples.

Or, how about the startup code for the package opens the connection?

Or perhaps CRAN will respond to this thread with another suggestion.

Duncan Murdoch


> On Sun, Aug 19, 2018 at 6:32 PM G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:
>>
>> You could just create a function to close the connection and then
>> people could call it at the end of their test suites. >>
>> Gabor
>> On Sun, Aug 19, 2018 at 6:22 PM David B. Dahl <dahl at stat.byu.edu> wrote:
>>>
>>> In preparing to submit an update of my package to CRAN, I found that
>>> R-devel has a new test regarding "connects left open" that my packages
>>> fail.  The new test appears to have been committed by Uwe Ligges in
>>> revisions 74959 and 74964 on 2018-07-14 and 2018-07-15, respectively.
>>> The commit message says, "check after each example whether open
>>> connections exist, indicating e.g. file connections were left open or
>>> parallel clusters still running."
>>>
>>> I am hoping for advice on how to pass "R CMD check --as-cran".  Or,
>>> perhaps my situation will prompt a change to the test or, at least,
>>> having it result in a warning instead of an error.
>>>
>>> Below I describe the situation.  My rscala package allows developers
>>> to write R packages based on Scala (much like rJava and Rcpp for Java
>>> and C++, respectively).  Scala runs as a separate process and
>>> interprocess communication is implemented using socket connections.
>>>
>>> Suppose a package using rscala has functions that call Scala code.
>>> (Such packages are 'bamboo', 'sdols', and 'shallot' on CRAN.)  The
>>> first time a user executes an R function calling down into Scala, a
>>> socket connect between Scala and R is established.  For the sake of
>>> low latency, after the call to the function ends, the connection stays
>>> open until the package is unloaded or the R session ends.  But, this
>>> approach runs afoul of the new test mentioned above that appears to be
>>> designed to catch connections that are *accidentally* left open.
>>>
>>> I definitely do not want to users of my packages 'bamboo', 'sdols',
>>> and 'shallot' to have to think about managing connection between Scala
>>> and R.  That's an implementation detail and uing the package should be
>>> transparent for the user (who doesn't care about the implementation
>>> details).
>>>
>>> On my end, I see two solutions:  1. I could try to reengineer my
>>> approach --- establishing a new connection for every single call into
>>> Scala --- although I am loath to do anything to increase the latency,
>>> or 2. I could wrap all the examples in \donttest so that CRAN checks
>>> are passed.
>>>
>>> Or, again, perhaps my situation will prompt a reevaluation of the
>>> test.  Perhaps it could result in a warning (instead of an error) and
>>> the CRAN maintainers would accept packages with such a warning.
>>>
>>> Any advise?  Thanks a lot!
>>>
>>> -- David
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From ligge@ @ending from @t@ti@tik@tu-dortmund@de  Mon Aug 20 23:11:19 2018
From: ligge@ @ending from @t@ti@tik@tu-dortmund@de (Uwe Ligges)
Date: Mon, 20 Aug 2018 23:11:19 +0200
Subject: [R-pkg-devel] 
 New test in R-devel causes existing packages to fail:
 "Error: connections left open"
In-Reply-To: <43752246-5d13-843a-2bd5-0b9b090ac00d@gmail.com>
References: <CALivmgYpMS07FmXT12edvVo42SgeVXX7T-Y2K6Zcmib1ESXcXw@mail.gmail.com>
 <CABtg=Km=qpgF5bGDR=bVP7R7pS0iw=CTZygkm8+xerp2FhJhkA@mail.gmail.com>
 <CABtg=K=9S8rfHAt8xh-Xwg3+YxNGGpUZTV2W+GU513QxB8mfZQ@mail.gmail.com>
 <43752246-5d13-843a-2bd5-0b9b090ac00d@gmail.com>
Message-ID: <ce821395-5b31-f0eb-7b8b-9dec32400506@statistik.tu-dortmund.de>

My advise:

Apparently you want to have communication via sockets to scala.

So there should be a function that creates the connction and one tha 
closes the connection.
Comparable to starting some parallel cluster and stopping it again.

In the meantime, you can allow for all sorts of communication.

So that's fine.

Then in your examples, simply design them to be standalone, i.e. in 
*your* examples always start the connection and stop it again at the end 
of one examples block, i.e. the exampels defined in one Rd file.

Best,
Uwe Ligges



On 20.08.2018 02:11, Duncan Murdoch wrote:
> On 19/08/2018 12:34 PM, G?bor Cs?rdi wrote:
>> Sorry, missed that these were examples, so, yeah, that's harder.? G.
> 
> How about a function that checks if the connection is open before doing 
> anything, and then at the end you close it if it wasn't already open? 
> This will make all examples run slower on CRAN, but won't affect most 
> users who are doing their own stuff as well as running examples.
> 
> Or, how about the startup code for the package opens the connection?
> 
> Or perhaps CRAN will respond to this thread with another suggestion.
> 
> Duncan Murdoch
> 
> 
>> On Sun, Aug 19, 2018 at 6:32 PM G?bor Cs?rdi <csardi.gabor at gmail.com> 
>> wrote:
>>>
>>> You could just create a function to close the connection and then
>>> people could call it at the end of their test suites. >>
>>> Gabor
>>> On Sun, Aug 19, 2018 at 6:22 PM David B. Dahl <dahl at stat.byu.edu> wrote:
>>>>
>>>> In preparing to submit an update of my package to CRAN, I found that
>>>> R-devel has a new test regarding "connects left open" that my packages
>>>> fail.? The new test appears to have been committed by Uwe Ligges in
>>>> revisions 74959 and 74964 on 2018-07-14 and 2018-07-15, respectively.
>>>> The commit message says, "check after each example whether open
>>>> connections exist, indicating e.g. file connections were left open or
>>>> parallel clusters still running."
>>>>
>>>> I am hoping for advice on how to pass "R CMD check --as-cran".? Or,
>>>> perhaps my situation will prompt a change to the test or, at least,
>>>> having it result in a warning instead of an error.
>>>>
>>>> Below I describe the situation.? My rscala package allows developers
>>>> to write R packages based on Scala (much like rJava and Rcpp for Java
>>>> and C++, respectively).? Scala runs as a separate process and
>>>> interprocess communication is implemented using socket connections.
>>>>
>>>> Suppose a package using rscala has functions that call Scala code.
>>>> (Such packages are 'bamboo', 'sdols', and 'shallot' on CRAN.)? The
>>>> first time a user executes an R function calling down into Scala, a
>>>> socket connect between Scala and R is established.? For the sake of
>>>> low latency, after the call to the function ends, the connection stays
>>>> open until the package is unloaded or the R session ends.? But, this
>>>> approach runs afoul of the new test mentioned above that appears to be
>>>> designed to catch connections that are *accidentally* left open.
>>>>
>>>> I definitely do not want to users of my packages 'bamboo', 'sdols',
>>>> and 'shallot' to have to think about managing connection between Scala
>>>> and R.? That's an implementation detail and uing the package should be
>>>> transparent for the user (who doesn't care about the implementation
>>>> details).
>>>>
>>>> On my end, I see two solutions:? 1. I could try to reengineer my
>>>> approach --- establishing a new connection for every single call into
>>>> Scala --- although I am loath to do anything to increase the latency,
>>>> or 2. I could wrap all the examples in \donttest so that CRAN checks
>>>> are passed.
>>>>
>>>> Or, again, perhaps my situation will prompt a reevaluation of the
>>>> test.? Perhaps it could result in a warning (instead of an error) and
>>>> the CRAN maintainers would accept packages with such a warning.
>>>>
>>>> Any advise?? Thanks a lot!
>>>>
>>>> -- David
>>>>
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From georgi@bo@hn@kov @ending from m@nche@ter@@c@uk  Tue Aug 21 00:14:04 2018
From: georgi@bo@hn@kov @ending from m@nche@ter@@c@uk (Georgi Boshnakov)
Date: Mon, 20 Aug 2018 22:14:04 +0000
Subject: [R-pkg-devel] CRAN note: src/Makevars: SHLIB_OPENMP_CXXFLAGS is
 included in PKG_CXXFLAGS but not in PKG_LIBS
Message-ID: <438D2EC9EAFE5946B2D5864670EA468E018F681211@MBXP02.ds.man.ac.uk>

Hi,

Recently the results page of my package on CRAN at
https://cran.r-project.org/web/checks/check_results_sarima.html,
started to show the NOTE below for some systems.
I am using Rcpp/RcppArmadillo without any manual interventions on my side. 

Is it reasonable to expect that the NOTE will disappear if I rebuild the package with an up-to-date version of  Rcpp
and maybe rerunning RcppAttributes().?

Georgi Boshnakov

==================================

Check: use of SHLIB_OPENMP_*FLAGS in Makefiles 
Result: NOTE 
???? src/Makevars: SHLIB_OPENMP_CXXFLAGS is included in PKG_CXXFLAGS but not in PKG_LIBS
???? src/Makevars: SHLIB_OPENMP_CFLAGS is included in PKG_LIBS but not in PKG_CFLAGS
???? src/Makevars.win: SHLIB_OPENMP_CXXFLAGS is included in PKG_CXXFLAGS but not in PKG_LIBS
???? src/Makevars.win: SHLIB_OPENMP_CFLAGS is included in PKG_LIBS but not in PKG_CFLAGS
????Use of these macros is discussed in sect 1.2.1.1 of 'Writing R
????Extensions'. The macros for different languages may differ so the
????matching macro must be used in PKG_CXXFLAGS (etc) and match that used
????in PKG_LIBS (except for F77: see the manual).

====================================


From edd @ending from debi@n@org  Tue Aug 21 00:39:55 2018
From: edd @ending from debi@n@org (Dirk Eddelbuettel)
Date: Mon, 20 Aug 2018 17:39:55 -0500
Subject: [R-pkg-devel] CRAN note: src/Makevars: SHLIB_OPENMP_CXXFLAGS is
 included in PKG_CXXFLAGS but not in PKG_LIBS
In-Reply-To: <438D2EC9EAFE5946B2D5864670EA468E018F681211@MBXP02.ds.man.ac.uk>
References: <438D2EC9EAFE5946B2D5864670EA468E018F681211@MBXP02.ds.man.ac.uk>
Message-ID: <23419.17211.782120.131563@rob.eddelbuettel.com>


On 20 August 2018 at 22:14, Georgi Boshnakov wrote:
| Hi,
| 
| Recently the results page of my package on CRAN at
| https://cran.r-project.org/web/checks/check_results_sarima.html,
| started to show the NOTE below for some systems.
| I am using Rcpp/RcppArmadillo without any manual interventions on my side. 
| 
| Is it reasonable to expect that the NOTE will disappear if I rebuild the package with an up-to-date version of  Rcpp
| and maybe rerunning RcppAttributes().?

No you have to edit src/Makevars{,win} yourself.

| ==================================
| 
| Check: use of SHLIB_OPENMP_*FLAGS in Makefiles 
| Result: NOTE 
| ???? src/Makevars: SHLIB_OPENMP_CXXFLAGS is included in PKG_CXXFLAGS but not in PKG_LIBS
| ???? src/Makevars: SHLIB_OPENMP_CFLAGS is included in PKG_LIBS but not in PKG_CFLAGS
| ???? src/Makevars.win: SHLIB_OPENMP_CXXFLAGS is included in PKG_CXXFLAGS but not in PKG_LIBS
| ???? src/Makevars.win: SHLIB_OPENMP_CFLAGS is included in PKG_LIBS but not in PKG_CFLAGS

Basically just use SHLIB_OPENMP_CXXFLAGS in PKG_LIBS as well. As the
paragraph quoted below suggests.

Our initial example in RcppArmadillo was sloppy was mix *_CFLAGS and
*_CXXFLAGS use, and that is no longer liked at the CRAN side.

Dirk

| ????Use of these macros is discussed in sect 1.2.1.1 of 'Writing R
| ????Extensions'. The macros for different languages may differ so the
| ????matching macro must be used in PKG_CXXFLAGS (etc) and match that used
| ????in PKG_LIBS (except for F77: see the manual).
| 
| ====================================
| 
| ______________________________________________
| R-package-devel at r-project.org mailing list
| https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From b@l@mut2 @ending from illinoi@@edu  Tue Aug 21 03:44:53 2018
From: b@l@mut2 @ending from illinoi@@edu (Balamuta, James Joseph)
Date: Tue, 21 Aug 2018 01:44:53 +0000
Subject: [R-pkg-devel] CRAN note: src/Makevars: SHLIB_OPENMP_CXXFLAGS is
 included in PKG_CXXFLAGS but not in PKG_LIBS
In-Reply-To: <23419.17211.782120.131563@rob.eddelbuettel.com>
References: <438D2EC9EAFE5946B2D5864670EA468E018F681211@MBXP02.ds.man.ac.uk>
 <23419.17211.782120.131563@rob.eddelbuettel.com>
Message-ID: <71694FDE-C4EB-4E54-9A99-5C2967E11DB9@illinois.edu>

In short, the default Makevars{.win} file should be updated with:

CXX_STD = CXX11
PKG_CXXFLAGS = $(SHLIB_OPENMP_CXXFLAGS) 
PKG_LIBS = $(SHLIB_OPENMP_CXXFLAGS) $(LAPACK_LIBS) $(BLAS_LIBS) $(FLIBS)

c.f. https://github.com/RcppCore/RcppArmadillo/blob/58b11c738d31b9e8d9fa6b39e2290b2ac08aefc4/inst/skeleton/Makevars#L11-L14

Sincerely,

JJB

?On 8/20/18, 5:40 PM, "R-package-devel on behalf of Dirk Eddelbuettel" <r-package-devel-bounces at r-project.org on behalf of edd at debian.org> wrote:

    
    On 20 August 2018 at 22:14, Georgi Boshnakov wrote:
    | Hi,
    | 
    | Recently the results page of my package on CRAN at
    | https://cran.r-project.org/web/checks/check_results_sarima.html,
    | started to show the NOTE below for some systems.
    | I am using Rcpp/RcppArmadillo without any manual interventions on my side. 
    | 
    | Is it reasonable to expect that the NOTE will disappear if I rebuild the package with an up-to-date version of  Rcpp
    | and maybe rerunning RcppAttributes().?
    
    No you have to edit src/Makevars{,win} yourself.
    
    | ==================================
    | 
    | Check: use of SHLIB_OPENMP_*FLAGS in Makefiles 
    | Result: NOTE 
    |      src/Makevars: SHLIB_OPENMP_CXXFLAGS is included in PKG_CXXFLAGS but not in PKG_LIBS
    |      src/Makevars: SHLIB_OPENMP_CFLAGS is included in PKG_LIBS but not in PKG_CFLAGS
    |      src/Makevars.win: SHLIB_OPENMP_CXXFLAGS is included in PKG_CXXFLAGS but not in PKG_LIBS
    |      src/Makevars.win: SHLIB_OPENMP_CFLAGS is included in PKG_LIBS but not in PKG_CFLAGS
    
    Basically just use SHLIB_OPENMP_CXXFLAGS in PKG_LIBS as well. As the
    paragraph quoted below suggests.
    
    Our initial example in RcppArmadillo was sloppy was mix *_CFLAGS and
    *_CXXFLAGS use, and that is no longer liked at the CRAN side.
    
    Dirk
    
    |     Use of these macros is discussed in sect 1.2.1.1 of 'Writing R
    |     Extensions'. The macros for different languages may differ so the
    |     matching macro must be used in PKG_CXXFLAGS (etc) and match that used
    |     in PKG_LIBS (except for F77: see the manual).
    | 
    | ====================================
    | 
    | ______________________________________________
    | R-package-devel at r-project.org mailing list
    | https://stat.ethz.ch/mailman/listinfo/r-package-devel
    
    -- 
    http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
    
    ______________________________________________
    R-package-devel at r-project.org mailing list
    https://stat.ethz.ch/mailman/listinfo/r-package-devel
    


From georgi@bo@hn@kov @ending from m@nche@ter@@c@uk  Tue Aug 21 08:54:29 2018
From: georgi@bo@hn@kov @ending from m@nche@ter@@c@uk (Georgi Boshnakov)
Date: Tue, 21 Aug 2018 06:54:29 +0000
Subject: [R-pkg-devel] CRAN note: src/Makevars: SHLIB_OPENMP_CXXFLAGS is
 included in PKG_CXXFLAGS but not in PKG_LIBS
In-Reply-To: <71694FDE-C4EB-4E54-9A99-5C2967E11DB9@illinois.edu>
References: <438D2EC9EAFE5946B2D5864670EA468E018F681211@MBXP02.ds.man.ac.uk>
 <23419.17211.782120.131563@rob.eddelbuettel.com>,
 <71694FDE-C4EB-4E54-9A99-5C2967E11DB9@illinois.edu>
Message-ID: <438D2EC9EAFE5946B2D5864670EA468E018F68226E@MBXP02.ds.man.ac.uk>


Dirk and James,

Many thanks for the detailed advice.

Georgi

________________________________________
From: R-package-devel [r-package-devel-bounces at r-project.org] on behalf of Balamuta, James Joseph [balamut2 at illinois.edu]
Sent: 21 August 2018 02:44
To: r-package-devel at r-project.org
Subject: Re: [R-pkg-devel] CRAN note: src/Makevars: SHLIB_OPENMP_CXXFLAGS is included in PKG_CXXFLAGS but not in PKG_LIBS

In short, the default Makevars{.win} file should be updated with:

CXX_STD = CXX11
PKG_CXXFLAGS = $(SHLIB_OPENMP_CXXFLAGS)
PKG_LIBS = $(SHLIB_OPENMP_CXXFLAGS) $(LAPACK_LIBS) $(BLAS_LIBS) $(FLIBS)

c.f. https://github.com/RcppCore/RcppArmadillo/blob/58b11c738d31b9e8d9fa6b39e2290b2ac08aefc4/inst/skeleton/Makevars#L11-L14

Sincerely,

JJB

?On 8/20/18, 5:40 PM, "R-package-devel on behalf of Dirk Eddelbuettel" <r-package-devel-bounces at r-project.org on behalf of edd at debian.org> wrote:


    On 20 August 2018 at 22:14, Georgi Boshnakov wrote:
    | Hi,
    |
    | Recently the results page of my package on CRAN at
    | https://cran.r-project.org/web/checks/check_results_sarima.html,
    | started to show the NOTE below for some systems.
    | I am using Rcpp/RcppArmadillo without any manual interventions on my side.
    |
    | Is it reasonable to expect that the NOTE will disappear if I rebuild the package with an up-to-date version of  Rcpp
    | and maybe rerunning RcppAttributes().?

    No you have to edit src/Makevars{,win} yourself.

    | ==================================
    |
    | Check: use of SHLIB_OPENMP_*FLAGS in Makefiles
    | Result: NOTE
    |      src/Makevars: SHLIB_OPENMP_CXXFLAGS is included in PKG_CXXFLAGS but not in PKG_LIBS
    |      src/Makevars: SHLIB_OPENMP_CFLAGS is included in PKG_LIBS but not in PKG_CFLAGS
    |      src/Makevars.win: SHLIB_OPENMP_CXXFLAGS is included in PKG_CXXFLAGS but not in PKG_LIBS
    |      src/Makevars.win: SHLIB_OPENMP_CFLAGS is included in PKG_LIBS but not in PKG_CFLAGS

    Basically just use SHLIB_OPENMP_CXXFLAGS in PKG_LIBS as well. As the
    paragraph quoted below suggests.

    Our initial example in RcppArmadillo was sloppy was mix *_CFLAGS and
    *_CXXFLAGS use, and that is no longer liked at the CRAN side.

    Dirk

    |     Use of these macros is discussed in sect 1.2.1.1 of 'Writing R
    |     Extensions'. The macros for different languages may differ so the
    |     matching macro must be used in PKG_CXXFLAGS (etc) and match that used
    |     in PKG_LIBS (except for F77: see the manual).
    |
    | ====================================
    |
    | ______________________________________________
    | R-package-devel at r-project.org mailing list
    | https://stat.ethz.ch/mailman/listinfo/r-package-devel

    --
    http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org

    ______________________________________________
    R-package-devel at r-project.org mailing list
    https://stat.ethz.ch/mailman/listinfo/r-package-devel


______________________________________________
R-package-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel

From d@hl @ending from @t@t@byu@edu  Thu Aug 23 22:24:02 2018
From: d@hl @ending from @t@t@byu@edu (David B. Dahl)
Date: Thu, 23 Aug 2018 22:24:02 +0200
Subject: [R-pkg-devel] 
 New test in R-devel causes existing packages to fail:
 "Error: connections left open"
In-Reply-To: <ce821395-5b31-f0eb-7b8b-9dec32400506@statistik.tu-dortmund.de>
References: <CALivmgYpMS07FmXT12edvVo42SgeVXX7T-Y2K6Zcmib1ESXcXw@mail.gmail.com>
 <CABtg=Km=qpgF5bGDR=bVP7R7pS0iw=CTZygkm8+xerp2FhJhkA@mail.gmail.com>
 <CABtg=K=9S8rfHAt8xh-Xwg3+YxNGGpUZTV2W+GU513QxB8mfZQ@mail.gmail.com>
 <43752246-5d13-843a-2bd5-0b9b090ac00d@gmail.com>
 <ce821395-5b31-f0eb-7b8b-9dec32400506@statistik.tu-dortmund.de>
Message-ID: <CALivmganYLaOqpewdA5QtAMAD9e72pAEddzeHrbvOcYSux9Dfg@mail.gmail.com>

Oops, I accidentally did not "reply-all".... Here is my message:

Thanks Uwe, Duncan, and Gabor for the response, advise, and flexibility.

Regarding Uwe's suggestion:  "... there should be a function that
creates the connction and one that closes the connection," I should
clarify.  The rscala package does just that.  There is a function
(named "scala") that creates the connection (using delayedAssign) and
another the closes the function (namely an S3 close method).  The
examples for the rscala package do this full open/close semantics,
but...

The problem comes when authors of another package, let's call it the
"FooBar" package, want to implement an algorithm in Scala based on
functionality provided by the rscala package.  Let's say they write a
function called "neatAlgorithm" based on Scala.  Yes, the FooBar
package author could require that, before the user calls the
"neatAlgorithm" function, they first call a function to set up the
connection (which itself would call the "rscala::scala" function) and
then, after calling the "neatAlgorithm" function, they call a function
to close the connection.

But that is not very user friendly and exposes the user to
implementation details of the algorithm.  The user of the FooBar
package don't really care whether the "neatAlgorithm" is implemented
in pure R, C++, Scala, or whatever, much like the users of the 'lm'
function don't need to know the implementation details or do any setup
before and after calling the function.

The current approach is that the connection to Scala is transparent to
the end user of a package.  Behind the scenes, the package author
establish the connection once it is needed and the rscala package
manages the connection and explicitly closes it when 1. the package is
unloaded or 2. the R session ends.  This approach does not leave
dangling connections  --- which I believe is the point of the new test
--- yet my package is caught up in the test.

I hope that this approach is still valid.  Perhaps the test could
result in a warning (instead of an error) and CRAN could accept
packages with such a warning.

If not, a work-around is to have a \dontshow section in the examples
that will close the connection (but leave the Scala process running)
and then automatically reestablish the connection as needed.  This
would not be very efficient but, as Duncan mentioned, it mostly only
effects the package examples themselves.  Plus, it would not be too
burdensome for package developers.

Again, thanks for considering my situation.

Best regards,

-- David

On Mon, Aug 20, 2018 at 11:11 PM Uwe Ligges
<ligges at statistik.tu-dortmund.de> wrote:
>
> My advise:
>
> Apparently you want to have communication via sockets to scala.
>
> So there should be a function that creates the connction and one tha
> closes the connection.
> Comparable to starting some parallel cluster and stopping it again.
>
> In the meantime, you can allow for all sorts of communication.
>
> So that's fine.
>
> Then in your examples, simply design them to be standalone, i.e. in
> *your* examples always start the connection and stop it again at the end
> of one examples block, i.e. the exampels defined in one Rd file.
>
> Best,
> Uwe Ligges
>
>
>
> On 20.08.2018 02:11, Duncan Murdoch wrote:
> > On 19/08/2018 12:34 PM, G?bor Cs?rdi wrote:
> >> Sorry, missed that these were examples, so, yeah, that's harder.  G.
> >
> > How about a function that checks if the connection is open before doing
> > anything, and then at the end you close it if it wasn't already open?
> > This will make all examples run slower on CRAN, but won't affect most
> > users who are doing their own stuff as well as running examples.
> >
> > Or, how about the startup code for the package opens the connection?
> >
> > Or perhaps CRAN will respond to this thread with another suggestion.
> >
> > Duncan Murdoch
> >
> >
> >> On Sun, Aug 19, 2018 at 6:32 PM G?bor Cs?rdi <csardi.gabor at gmail.com>
> >> wrote:
> >>>
> >>> You could just create a function to close the connection and then
> >>> people could call it at the end of their test suites. >>
> >>> Gabor
> >>> On Sun, Aug 19, 2018 at 6:22 PM David B. Dahl <dahl at stat.byu.edu> wrote:
> >>>>
> >>>> In preparing to submit an update of my package to CRAN, I found that
> >>>> R-devel has a new test regarding "connects left open" that my packages
> >>>> fail.  The new test appears to have been committed by Uwe Ligges in
> >>>> revisions 74959 and 74964 on 2018-07-14 and 2018-07-15, respectively.
> >>>> The commit message says, "check after each example whether open
> >>>> connections exist, indicating e.g. file connections were left open or
> >>>> parallel clusters still running."
> >>>>
> >>>> I am hoping for advice on how to pass "R CMD check --as-cran".  Or,
> >>>> perhaps my situation will prompt a change to the test or, at least,
> >>>> having it result in a warning instead of an error.
> >>>>
> >>>> Below I describe the situation.  My rscala package allows developers
> >>>> to write R packages based on Scala (much like rJava and Rcpp for Java
> >>>> and C++, respectively).  Scala runs as a separate process and
> >>>> interprocess communication is implemented using socket connections.
> >>>>
> >>>> Suppose a package using rscala has functions that call Scala code.
> >>>> (Such packages are 'bamboo', 'sdols', and 'shallot' on CRAN.)  The
> >>>> first time a user executes an R function calling down into Scala, a
> >>>> socket connect between Scala and R is established.  For the sake of
> >>>> low latency, after the call to the function ends, the connection stays
> >>>> open until the package is unloaded or the R session ends.  But, this
> >>>> approach runs afoul of the new test mentioned above that appears to be
> >>>> designed to catch connections that are *accidentally* left open.
> >>>>
> >>>> I definitely do not want to users of my packages 'bamboo', 'sdols',
> >>>> and 'shallot' to have to think about managing connection between Scala
> >>>> and R.  That's an implementation detail and uing the package should be
> >>>> transparent for the user (who doesn't care about the implementation
> >>>> details).
> >>>>
> >>>> On my end, I see two solutions:  1. I could try to reengineer my
> >>>> approach --- establishing a new connection for every single call into
> >>>> Scala --- although I am loath to do anything to increase the latency,
> >>>> or 2. I could wrap all the examples in \donttest so that CRAN checks
> >>>> are passed.
> >>>>
> >>>> Or, again, perhaps my situation will prompt a reevaluation of the
> >>>> test.  Perhaps it could result in a warning (instead of an error) and
> >>>> the CRAN maintainers would accept packages with such a warning.
> >>>>
> >>>> Any advise?  Thanks a lot!
> >>>>
> >>>> -- David
> >>>>
> >>>> ______________________________________________
> >>>> R-package-devel at r-project.org mailing list
> >>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>
> >> ______________________________________________
> >> R-package-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel


From henrik@bengt@@on @ending from gm@il@com  Thu Aug 23 23:19:42 2018
From: henrik@bengt@@on @ending from gm@il@com (Henrik Bengtsson)
Date: Thu, 23 Aug 2018 14:19:42 -0700
Subject: [R-pkg-devel] 
 New test in R-devel causes existing packages to fail:
 "Error: connections left open"
In-Reply-To: <CALivmganYLaOqpewdA5QtAMAD9e72pAEddzeHrbvOcYSux9Dfg@mail.gmail.com>
References: <CALivmgYpMS07FmXT12edvVo42SgeVXX7T-Y2K6Zcmib1ESXcXw@mail.gmail.com>
 <CABtg=Km=qpgF5bGDR=bVP7R7pS0iw=CTZygkm8+xerp2FhJhkA@mail.gmail.com>
 <CABtg=K=9S8rfHAt8xh-Xwg3+YxNGGpUZTV2W+GU513QxB8mfZQ@mail.gmail.com>
 <43752246-5d13-843a-2bd5-0b9b090ac00d@gmail.com>
 <ce821395-5b31-f0eb-7b8b-9dec32400506@statistik.tu-dortmund.de>
 <CALivmganYLaOqpewdA5QtAMAD9e72pAEddzeHrbvOcYSux9Dfg@mail.gmail.com>
Message-ID: <CAFDcVCQcs=PcxSPU6Au9jigpTZcrzmrDrc_jGozAu1HPNYSCig@mail.gmail.com>

Does R CMD check --as-cran test for newly opened connections or any
open connections?  Could the check for stray connection in
examples/vignettes be:

1. Record what connections are open
2. Attach the package
3. Record what connections are open
4. Run the example
5. Assert that no *new* connections in addition to what's recorded in
Step 3 are open
6. Unload the package
7. Assert that no *new* connections in addition to what's recorded in
Step 1 are open

Step 5 asserts that the code in the example does not leave stray
connections behind, and Step 7 that the package itself does not leave
stray connections behind.

/Henrik
On Thu, Aug 23, 2018 at 1:25 PM David B. Dahl <dahl at stat.byu.edu> wrote:
>
> Oops, I accidentally did not "reply-all".... Here is my message:
>
> Thanks Uwe, Duncan, and Gabor for the response, advise, and flexibility.
>
> Regarding Uwe's suggestion:  "... there should be a function that
> creates the connction and one that closes the connection," I should
> clarify.  The rscala package does just that.  There is a function
> (named "scala") that creates the connection (using delayedAssign) and
> another the closes the function (namely an S3 close method).  The
> examples for the rscala package do this full open/close semantics,
> but...
>
> The problem comes when authors of another package, let's call it the
> "FooBar" package, want to implement an algorithm in Scala based on
> functionality provided by the rscala package.  Let's say they write a
> function called "neatAlgorithm" based on Scala.  Yes, the FooBar
> package author could require that, before the user calls the
> "neatAlgorithm" function, they first call a function to set up the
> connection (which itself would call the "rscala::scala" function) and
> then, after calling the "neatAlgorithm" function, they call a function
> to close the connection.
>
> But that is not very user friendly and exposes the user to
> implementation details of the algorithm.  The user of the FooBar
> package don't really care whether the "neatAlgorithm" is implemented
> in pure R, C++, Scala, or whatever, much like the users of the 'lm'
> function don't need to know the implementation details or do any setup
> before and after calling the function.
>
> The current approach is that the connection to Scala is transparent to
> the end user of a package.  Behind the scenes, the package author
> establish the connection once it is needed and the rscala package
> manages the connection and explicitly closes it when 1. the package is
> unloaded or 2. the R session ends.  This approach does not leave
> dangling connections  --- which I believe is the point of the new test
> --- yet my package is caught up in the test.
>
> I hope that this approach is still valid.  Perhaps the test could
> result in a warning (instead of an error) and CRAN could accept
> packages with such a warning.
>
> If not, a work-around is to have a \dontshow section in the examples
> that will close the connection (but leave the Scala process running)
> and then automatically reestablish the connection as needed.  This
> would not be very efficient but, as Duncan mentioned, it mostly only
> effects the package examples themselves.  Plus, it would not be too
> burdensome for package developers.
>
> Again, thanks for considering my situation.
>
> Best regards,
>
> -- David
>
> On Mon, Aug 20, 2018 at 11:11 PM Uwe Ligges
> <ligges at statistik.tu-dortmund.de> wrote:
> >
> > My advise:
> >
> > Apparently you want to have communication via sockets to scala.
> >
> > So there should be a function that creates the connction and one tha
> > closes the connection.
> > Comparable to starting some parallel cluster and stopping it again.
> >
> > In the meantime, you can allow for all sorts of communication.
> >
> > So that's fine.
> >
> > Then in your examples, simply design them to be standalone, i.e. in
> > *your* examples always start the connection and stop it again at the end
> > of one examples block, i.e. the exampels defined in one Rd file.
> >
> > Best,
> > Uwe Ligges
> >
> >
> >
> > On 20.08.2018 02:11, Duncan Murdoch wrote:
> > > On 19/08/2018 12:34 PM, G?bor Cs?rdi wrote:
> > >> Sorry, missed that these were examples, so, yeah, that's harder.  G.
> > >
> > > How about a function that checks if the connection is open before doing
> > > anything, and then at the end you close it if it wasn't already open?
> > > This will make all examples run slower on CRAN, but won't affect most
> > > users who are doing their own stuff as well as running examples.
> > >
> > > Or, how about the startup code for the package opens the connection?
> > >
> > > Or perhaps CRAN will respond to this thread with another suggestion.
> > >
> > > Duncan Murdoch
> > >
> > >
> > >> On Sun, Aug 19, 2018 at 6:32 PM G?bor Cs?rdi <csardi.gabor at gmail.com>
> > >> wrote:
> > >>>
> > >>> You could just create a function to close the connection and then
> > >>> people could call it at the end of their test suites. >>
> > >>> Gabor
> > >>> On Sun, Aug 19, 2018 at 6:22 PM David B. Dahl <dahl at stat.byu.edu> wrote:
> > >>>>
> > >>>> In preparing to submit an update of my package to CRAN, I found that
> > >>>> R-devel has a new test regarding "connects left open" that my packages
> > >>>> fail.  The new test appears to have been committed by Uwe Ligges in
> > >>>> revisions 74959 and 74964 on 2018-07-14 and 2018-07-15, respectively.
> > >>>> The commit message says, "check after each example whether open
> > >>>> connections exist, indicating e.g. file connections were left open or
> > >>>> parallel clusters still running."
> > >>>>
> > >>>> I am hoping for advice on how to pass "R CMD check --as-cran".  Or,
> > >>>> perhaps my situation will prompt a change to the test or, at least,
> > >>>> having it result in a warning instead of an error.
> > >>>>
> > >>>> Below I describe the situation.  My rscala package allows developers
> > >>>> to write R packages based on Scala (much like rJava and Rcpp for Java
> > >>>> and C++, respectively).  Scala runs as a separate process and
> > >>>> interprocess communication is implemented using socket connections.
> > >>>>
> > >>>> Suppose a package using rscala has functions that call Scala code.
> > >>>> (Such packages are 'bamboo', 'sdols', and 'shallot' on CRAN.)  The
> > >>>> first time a user executes an R function calling down into Scala, a
> > >>>> socket connect between Scala and R is established.  For the sake of
> > >>>> low latency, after the call to the function ends, the connection stays
> > >>>> open until the package is unloaded or the R session ends.  But, this
> > >>>> approach runs afoul of the new test mentioned above that appears to be
> > >>>> designed to catch connections that are *accidentally* left open.
> > >>>>
> > >>>> I definitely do not want to users of my packages 'bamboo', 'sdols',
> > >>>> and 'shallot' to have to think about managing connection between Scala
> > >>>> and R.  That's an implementation detail and uing the package should be
> > >>>> transparent for the user (who doesn't care about the implementation
> > >>>> details).
> > >>>>
> > >>>> On my end, I see two solutions:  1. I could try to reengineer my
> > >>>> approach --- establishing a new connection for every single call into
> > >>>> Scala --- although I am loath to do anything to increase the latency,
> > >>>> or 2. I could wrap all the examples in \donttest so that CRAN checks
> > >>>> are passed.
> > >>>>
> > >>>> Or, again, perhaps my situation will prompt a reevaluation of the
> > >>>> test.  Perhaps it could result in a warning (instead of an error) and
> > >>>> the CRAN maintainers would accept packages with such a warning.
> > >>>>
> > >>>> Any advise?  Thanks a lot!
> > >>>>
> > >>>> -- David
> > >>>>
> > >>>> ______________________________________________
> > >>>> R-package-devel at r-project.org mailing list
> > >>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> > >>
> > >> ______________________________________________
> > >> R-package-devel at r-project.org mailing list
> > >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> > >>
> > >
> > > ______________________________________________
> > > R-package-devel at r-project.org mailing list
> > > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From erinm@hodge@@ @ending from gm@il@com  Mon Aug 27 05:11:40 2018
From: erinm@hodge@@ @ending from gm@il@com (Erin Hodgess)
Date: Sun, 26 Aug 2018 21:11:40 -0600
Subject: [R-pkg-devel] compiling a Windows package with the PGI compiler
Message-ID: <CACxE24kHwjwKUR44wy1FVeST+7-zS1cf2RF2QjEfAEd0PiBEnA@mail.gmail.com>

Hello!
I am building a new package with source code that requires the Portland
group compiler.  How would I go about building the package with this
compiler rather than gfortran, please?

Thank you in advance.
Sincerely,
Erin
PS.  Windows 10, and R-3.5.1.

Erin Hodgess, PhD
mailto: erinm.hodgess at gmail.com

	[[alternative HTML version deleted]]


From d@hl @ending from @t@t@byu@edu  Mon Aug 27 07:14:26 2018
From: d@hl @ending from @t@t@byu@edu (David B. Dahl)
Date: Mon, 27 Aug 2018 07:14:26 +0200
Subject: [R-pkg-devel] 
 New test in R-devel causes existing packages to fail:
 "Error: connections left open"
In-Reply-To: <CAFDcVCQcs=PcxSPU6Au9jigpTZcrzmrDrc_jGozAu1HPNYSCig@mail.gmail.com>
References: <CALivmgYpMS07FmXT12edvVo42SgeVXX7T-Y2K6Zcmib1ESXcXw@mail.gmail.com>
 <CABtg=Km=qpgF5bGDR=bVP7R7pS0iw=CTZygkm8+xerp2FhJhkA@mail.gmail.com>
 <CABtg=K=9S8rfHAt8xh-Xwg3+YxNGGpUZTV2W+GU513QxB8mfZQ@mail.gmail.com>
 <43752246-5d13-843a-2bd5-0b9b090ac00d@gmail.com>
 <ce821395-5b31-f0eb-7b8b-9dec32400506@statistik.tu-dortmund.de>
 <CALivmganYLaOqpewdA5QtAMAD9e72pAEddzeHrbvOcYSux9Dfg@mail.gmail.com>
 <CAFDcVCQcs=PcxSPU6Au9jigpTZcrzmrDrc_jGozAu1HPNYSCig@mail.gmail.com>
Message-ID: <CALivmgZC-Yus+Wg6N_hf28JrRYMPiU+rwbytrzZ-h055PCKmOQ@mail.gmail.com>

Henrik,

Thanks for the suggest.  Yes, definitely, I think your more nuanced
test would be a big improvement.  The only wrinkle is that the
connection is established *not* when the package is *loaded* but
rather when the connection is *first needed* (using delayedAssign when
the package is loaded).  That way, loading the package doesn't block
the REPL for ~5 seconds while Scala and the JVM first start.

-- David

On Thu, Aug 23, 2018 at 11:19 PM Henrik Bengtsson
<henrik.bengtsson at gmail.com> wrote:
>
> Does R CMD check --as-cran test for newly opened connections or any
> open connections?  Could the check for stray connection in
> examples/vignettes be:
>
> 1. Record what connections are open
> 2. Attach the package
> 3. Record what connections are open
> 4. Run the example
> 5. Assert that no *new* connections in addition to what's recorded in
> Step 3 are open
> 6. Unload the package
> 7. Assert that no *new* connections in addition to what's recorded in
> Step 1 are open
>
> Step 5 asserts that the code in the example does not leave stray
> connections behind, and Step 7 that the package itself does not leave
> stray connections behind.
>
> /Henrik
> On Thu, Aug 23, 2018 at 1:25 PM David B. Dahl <dahl at stat.byu.edu> wrote:
> >
> > Oops, I accidentally did not "reply-all".... Here is my message:
> >
> > Thanks Uwe, Duncan, and Gabor for the response, advise, and flexibility.
> >
> > Regarding Uwe's suggestion:  "... there should be a function that
> > creates the connction and one that closes the connection," I should
> > clarify.  The rscala package does just that.  There is a function
> > (named "scala") that creates the connection (using delayedAssign) and
> > another the closes the function (namely an S3 close method).  The
> > examples for the rscala package do this full open/close semantics,
> > but...
> >
> > The problem comes when authors of another package, let's call it the
> > "FooBar" package, want to implement an algorithm in Scala based on
> > functionality provided by the rscala package.  Let's say they write a
> > function called "neatAlgorithm" based on Scala.  Yes, the FooBar
> > package author could require that, before the user calls the
> > "neatAlgorithm" function, they first call a function to set up the
> > connection (which itself would call the "rscala::scala" function) and
> > then, after calling the "neatAlgorithm" function, they call a function
> > to close the connection.
> >
> > But that is not very user friendly and exposes the user to
> > implementation details of the algorithm.  The user of the FooBar
> > package don't really care whether the "neatAlgorithm" is implemented
> > in pure R, C++, Scala, or whatever, much like the users of the 'lm'
> > function don't need to know the implementation details or do any setup
> > before and after calling the function.
> >
> > The current approach is that the connection to Scala is transparent to
> > the end user of a package.  Behind the scenes, the package author
> > establish the connection once it is needed and the rscala package
> > manages the connection and explicitly closes it when 1. the package is
> > unloaded or 2. the R session ends.  This approach does not leave
> > dangling connections  --- which I believe is the point of the new test
> > --- yet my package is caught up in the test.
> >
> > I hope that this approach is still valid.  Perhaps the test could
> > result in a warning (instead of an error) and CRAN could accept
> > packages with such a warning.
> >
> > If not, a work-around is to have a \dontshow section in the examples
> > that will close the connection (but leave the Scala process running)
> > and then automatically reestablish the connection as needed.  This
> > would not be very efficient but, as Duncan mentioned, it mostly only
> > effects the package examples themselves.  Plus, it would not be too
> > burdensome for package developers.
> >
> > Again, thanks for considering my situation.
> >
> > Best regards,
> >
> > -- David
> >
> > On Mon, Aug 20, 2018 at 11:11 PM Uwe Ligges
> > <ligges at statistik.tu-dortmund.de> wrote:
> > >
> > > My advise:
> > >
> > > Apparently you want to have communication via sockets to scala.
> > >
> > > So there should be a function that creates the connction and one tha
> > > closes the connection.
> > > Comparable to starting some parallel cluster and stopping it again.
> > >
> > > In the meantime, you can allow for all sorts of communication.
> > >
> > > So that's fine.
> > >
> > > Then in your examples, simply design them to be standalone, i.e. in
> > > *your* examples always start the connection and stop it again at the end
> > > of one examples block, i.e. the exampels defined in one Rd file.
> > >
> > > Best,
> > > Uwe Ligges
> > >
> > >
> > >
> > > On 20.08.2018 02:11, Duncan Murdoch wrote:
> > > > On 19/08/2018 12:34 PM, G?bor Cs?rdi wrote:
> > > >> Sorry, missed that these were examples, so, yeah, that's harder.  G.
> > > >
> > > > How about a function that checks if the connection is open before doing
> > > > anything, and then at the end you close it if it wasn't already open?
> > > > This will make all examples run slower on CRAN, but won't affect most
> > > > users who are doing their own stuff as well as running examples.
> > > >
> > > > Or, how about the startup code for the package opens the connection?
> > > >
> > > > Or perhaps CRAN will respond to this thread with another suggestion.
> > > >
> > > > Duncan Murdoch
> > > >
> > > >
> > > >> On Sun, Aug 19, 2018 at 6:32 PM G?bor Cs?rdi <csardi.gabor at gmail.com>
> > > >> wrote:
> > > >>>
> > > >>> You could just create a function to close the connection and then
> > > >>> people could call it at the end of their test suites. >>
> > > >>> Gabor
> > > >>> On Sun, Aug 19, 2018 at 6:22 PM David B. Dahl <dahl at stat.byu.edu> wrote:
> > > >>>>
> > > >>>> In preparing to submit an update of my package to CRAN, I found that
> > > >>>> R-devel has a new test regarding "connects left open" that my packages
> > > >>>> fail.  The new test appears to have been committed by Uwe Ligges in
> > > >>>> revisions 74959 and 74964 on 2018-07-14 and 2018-07-15, respectively.
> > > >>>> The commit message says, "check after each example whether open
> > > >>>> connections exist, indicating e.g. file connections were left open or
> > > >>>> parallel clusters still running."
> > > >>>>
> > > >>>> I am hoping for advice on how to pass "R CMD check --as-cran".  Or,
> > > >>>> perhaps my situation will prompt a change to the test or, at least,
> > > >>>> having it result in a warning instead of an error.
> > > >>>>
> > > >>>> Below I describe the situation.  My rscala package allows developers
> > > >>>> to write R packages based on Scala (much like rJava and Rcpp for Java
> > > >>>> and C++, respectively).  Scala runs as a separate process and
> > > >>>> interprocess communication is implemented using socket connections.
> > > >>>>
> > > >>>> Suppose a package using rscala has functions that call Scala code.
> > > >>>> (Such packages are 'bamboo', 'sdols', and 'shallot' on CRAN.)  The
> > > >>>> first time a user executes an R function calling down into Scala, a
> > > >>>> socket connect between Scala and R is established.  For the sake of
> > > >>>> low latency, after the call to the function ends, the connection stays
> > > >>>> open until the package is unloaded or the R session ends.  But, this
> > > >>>> approach runs afoul of the new test mentioned above that appears to be
> > > >>>> designed to catch connections that are *accidentally* left open.
> > > >>>>
> > > >>>> I definitely do not want to users of my packages 'bamboo', 'sdols',
> > > >>>> and 'shallot' to have to think about managing connection between Scala
> > > >>>> and R.  That's an implementation detail and uing the package should be
> > > >>>> transparent for the user (who doesn't care about the implementation
> > > >>>> details).
> > > >>>>
> > > >>>> On my end, I see two solutions:  1. I could try to reengineer my
> > > >>>> approach --- establishing a new connection for every single call into
> > > >>>> Scala --- although I am loath to do anything to increase the latency,
> > > >>>> or 2. I could wrap all the examples in \donttest so that CRAN checks
> > > >>>> are passed.
> > > >>>>
> > > >>>> Or, again, perhaps my situation will prompt a reevaluation of the
> > > >>>> test.  Perhaps it could result in a warning (instead of an error) and
> > > >>>> the CRAN maintainers would accept packages with such a warning.
> > > >>>>
> > > >>>> Any advise?  Thanks a lot!
> > > >>>>
> > > >>>> -- David
> > > >>>>
> > > >>>> ______________________________________________
> > > >>>> R-package-devel at r-project.org mailing list
> > > >>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> > > >>
> > > >> ______________________________________________
> > > >> R-package-devel at r-project.org mailing list
> > > >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> > > >>
> > > >
> > > > ______________________________________________
> > > > R-package-devel at r-project.org mailing list
> > > > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel


From ligge@ @ending from @t@ti@tik@tu-dortmund@de  Mon Aug 27 16:47:46 2018
From: ligge@ @ending from @t@ti@tik@tu-dortmund@de (Uwe Ligges)
Date: Mon, 27 Aug 2018 16:47:46 +0200
Subject: [R-pkg-devel] 
 New test in R-devel causes existing packages to fail:
 "Error: connections left open"
In-Reply-To: <CALivmgZC-Yus+Wg6N_hf28JrRYMPiU+rwbytrzZ-h055PCKmOQ@mail.gmail.com>
References: <CALivmgYpMS07FmXT12edvVo42SgeVXX7T-Y2K6Zcmib1ESXcXw@mail.gmail.com>
 <CABtg=Km=qpgF5bGDR=bVP7R7pS0iw=CTZygkm8+xerp2FhJhkA@mail.gmail.com>
 <CABtg=K=9S8rfHAt8xh-Xwg3+YxNGGpUZTV2W+GU513QxB8mfZQ@mail.gmail.com>
 <43752246-5d13-843a-2bd5-0b9b090ac00d@gmail.com>
 <ce821395-5b31-f0eb-7b8b-9dec32400506@statistik.tu-dortmund.de>
 <CALivmganYLaOqpewdA5QtAMAD9e72pAEddzeHrbvOcYSux9Dfg@mail.gmail.com>
 <CAFDcVCQcs=PcxSPU6Au9jigpTZcrzmrDrc_jGozAu1HPNYSCig@mail.gmail.com>
 <CALivmgZC-Yus+Wg6N_hf28JrRYMPiU+rwbytrzZ-h055PCKmOQ@mail.gmail.com>
Message-ID: <9b3989b5-e5b7-05e4-c5da-d0f715004826@statistik.tu-dortmund.de>

I still do not undertsand why you cannot stop scala and related 
connections at the end of each example. You can insert a comment that 
this is not needed if you have follow up tasks for scala.

Best,
Uwe

On 27.08.2018 07:14, David B. Dahl wrote:
> Henrik,
> 
> Thanks for the suggest.  Yes, definitely, I think your more nuanced
> test would be a big improvement.  The only wrinkle is that the
> connection is established *not* when the package is *loaded* but
> rather when the connection is *first needed* (using delayedAssign when
> the package is loaded).  That way, loading the package doesn't block
> the REPL for ~5 seconds while Scala and the JVM first start.
> 
> -- David
> 
> On Thu, Aug 23, 2018 at 11:19 PM Henrik Bengtsson
> <henrik.bengtsson at gmail.com> wrote:
>>
>> Does R CMD check --as-cran test for newly opened connections or any
>> open connections?  Could the check for stray connection in
>> examples/vignettes be:
>>
>> 1. Record what connections are open
>> 2. Attach the package
>> 3. Record what connections are open
>> 4. Run the example
>> 5. Assert that no *new* connections in addition to what's recorded in
>> Step 3 are open
>> 6. Unload the package
>> 7. Assert that no *new* connections in addition to what's recorded in
>> Step 1 are open
>>
>> Step 5 asserts that the code in the example does not leave stray
>> connections behind, and Step 7 that the package itself does not leave
>> stray connections behind.
>>
>> /Henrik
>> On Thu, Aug 23, 2018 at 1:25 PM David B. Dahl <dahl at stat.byu.edu> wrote:
>>>
>>> Oops, I accidentally did not "reply-all".... Here is my message:
>>>
>>> Thanks Uwe, Duncan, and Gabor for the response, advise, and flexibility.
>>>
>>> Regarding Uwe's suggestion:  "... there should be a function that
>>> creates the connction and one that closes the connection," I should
>>> clarify.  The rscala package does just that.  There is a function
>>> (named "scala") that creates the connection (using delayedAssign) and
>>> another the closes the function (namely an S3 close method).  The
>>> examples for the rscala package do this full open/close semantics,
>>> but...
>>>
>>> The problem comes when authors of another package, let's call it the
>>> "FooBar" package, want to implement an algorithm in Scala based on
>>> functionality provided by the rscala package.  Let's say they write a
>>> function called "neatAlgorithm" based on Scala.  Yes, the FooBar
>>> package author could require that, before the user calls the
>>> "neatAlgorithm" function, they first call a function to set up the
>>> connection (which itself would call the "rscala::scala" function) and
>>> then, after calling the "neatAlgorithm" function, they call a function
>>> to close the connection.
>>>
>>> But that is not very user friendly and exposes the user to
>>> implementation details of the algorithm.  The user of the FooBar
>>> package don't really care whether the "neatAlgorithm" is implemented
>>> in pure R, C++, Scala, or whatever, much like the users of the 'lm'
>>> function don't need to know the implementation details or do any setup
>>> before and after calling the function.
>>>
>>> The current approach is that the connection to Scala is transparent to
>>> the end user of a package.  Behind the scenes, the package author
>>> establish the connection once it is needed and the rscala package
>>> manages the connection and explicitly closes it when 1. the package is
>>> unloaded or 2. the R session ends.  This approach does not leave
>>> dangling connections  --- which I believe is the point of the new test
>>> --- yet my package is caught up in the test.
>>>
>>> I hope that this approach is still valid.  Perhaps the test could
>>> result in a warning (instead of an error) and CRAN could accept
>>> packages with such a warning.
>>>
>>> If not, a work-around is to have a \dontshow section in the examples
>>> that will close the connection (but leave the Scala process running)
>>> and then automatically reestablish the connection as needed.  This
>>> would not be very efficient but, as Duncan mentioned, it mostly only
>>> effects the package examples themselves.  Plus, it would not be too
>>> burdensome for package developers.
>>>
>>> Again, thanks for considering my situation.
>>>
>>> Best regards,
>>>
>>> -- David
>>>
>>> On Mon, Aug 20, 2018 at 11:11 PM Uwe Ligges
>>> <ligges at statistik.tu-dortmund.de> wrote:
>>>>
>>>> My advise:
>>>>
>>>> Apparently you want to have communication via sockets to scala.
>>>>
>>>> So there should be a function that creates the connction and one tha
>>>> closes the connection.
>>>> Comparable to starting some parallel cluster and stopping it again.
>>>>
>>>> In the meantime, you can allow for all sorts of communication.
>>>>
>>>> So that's fine.
>>>>
>>>> Then in your examples, simply design them to be standalone, i.e. in
>>>> *your* examples always start the connection and stop it again at the end
>>>> of one examples block, i.e. the exampels defined in one Rd file.
>>>>
>>>> Best,
>>>> Uwe Ligges
>>>>
>>>>
>>>>
>>>> On 20.08.2018 02:11, Duncan Murdoch wrote:
>>>>> On 19/08/2018 12:34 PM, G?bor Cs?rdi wrote:
>>>>>> Sorry, missed that these were examples, so, yeah, that's harder.  G.
>>>>>
>>>>> How about a function that checks if the connection is open before doing
>>>>> anything, and then at the end you close it if it wasn't already open?
>>>>> This will make all examples run slower on CRAN, but won't affect most
>>>>> users who are doing their own stuff as well as running examples.
>>>>>
>>>>> Or, how about the startup code for the package opens the connection?
>>>>>
>>>>> Or perhaps CRAN will respond to this thread with another suggestion.
>>>>>
>>>>> Duncan Murdoch
>>>>>
>>>>>
>>>>>> On Sun, Aug 19, 2018 at 6:32 PM G?bor Cs?rdi <csardi.gabor at gmail.com>
>>>>>> wrote:
>>>>>>>
>>>>>>> You could just create a function to close the connection and then
>>>>>>> people could call it at the end of their test suites. >>
>>>>>>> Gabor
>>>>>>> On Sun, Aug 19, 2018 at 6:22 PM David B. Dahl <dahl at stat.byu.edu> wrote:
>>>>>>>>
>>>>>>>> In preparing to submit an update of my package to CRAN, I found that
>>>>>>>> R-devel has a new test regarding "connects left open" that my packages
>>>>>>>> fail.  The new test appears to have been committed by Uwe Ligges in
>>>>>>>> revisions 74959 and 74964 on 2018-07-14 and 2018-07-15, respectively.
>>>>>>>> The commit message says, "check after each example whether open
>>>>>>>> connections exist, indicating e.g. file connections were left open or
>>>>>>>> parallel clusters still running."
>>>>>>>>
>>>>>>>> I am hoping for advice on how to pass "R CMD check --as-cran".  Or,
>>>>>>>> perhaps my situation will prompt a change to the test or, at least,
>>>>>>>> having it result in a warning instead of an error.
>>>>>>>>
>>>>>>>> Below I describe the situation.  My rscala package allows developers
>>>>>>>> to write R packages based on Scala (much like rJava and Rcpp for Java
>>>>>>>> and C++, respectively).  Scala runs as a separate process and
>>>>>>>> interprocess communication is implemented using socket connections.
>>>>>>>>
>>>>>>>> Suppose a package using rscala has functions that call Scala code.
>>>>>>>> (Such packages are 'bamboo', 'sdols', and 'shallot' on CRAN.)  The
>>>>>>>> first time a user executes an R function calling down into Scala, a
>>>>>>>> socket connect between Scala and R is established.  For the sake of
>>>>>>>> low latency, after the call to the function ends, the connection stays
>>>>>>>> open until the package is unloaded or the R session ends.  But, this
>>>>>>>> approach runs afoul of the new test mentioned above that appears to be
>>>>>>>> designed to catch connections that are *accidentally* left open.
>>>>>>>>
>>>>>>>> I definitely do not want to users of my packages 'bamboo', 'sdols',
>>>>>>>> and 'shallot' to have to think about managing connection between Scala
>>>>>>>> and R.  That's an implementation detail and uing the package should be
>>>>>>>> transparent for the user (who doesn't care about the implementation
>>>>>>>> details).
>>>>>>>>
>>>>>>>> On my end, I see two solutions:  1. I could try to reengineer my
>>>>>>>> approach --- establishing a new connection for every single call into
>>>>>>>> Scala --- although I am loath to do anything to increase the latency,
>>>>>>>> or 2. I could wrap all the examples in \donttest so that CRAN checks
>>>>>>>> are passed.
>>>>>>>>
>>>>>>>> Or, again, perhaps my situation will prompt a reevaluation of the
>>>>>>>> test.  Perhaps it could result in a warning (instead of an error) and
>>>>>>>> the CRAN maintainers would accept packages with such a warning.
>>>>>>>>
>>>>>>>> Any advise?  Thanks a lot!
>>>>>>>>
>>>>>>>> -- David
>>>>>>>>
>>>>>>>> ______________________________________________
>>>>>>>> R-package-devel at r-project.org mailing list
>>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>>>
>>>>>> ______________________________________________
>>>>>> R-package-devel at r-project.org mailing list
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>>>
>>>>>
>>>>> ______________________________________________
>>>>> R-package-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From erinm@hodge@@ @ending from gm@il@com  Mon Aug 27 22:15:16 2018
From: erinm@hodge@@ @ending from gm@il@com (Erin Hodgess)
Date: Mon, 27 Aug 2018 14:15:16 -0600
Subject: [R-pkg-devel] Making adjustments to the R CMD check/install commands
Message-ID: <CACxE24=qBXavoKEBLMv4AX-y23t+=AXqpvVihHZX-cY5q4ku-A@mail.gmail.com>

Hello!

I'm building a package on Windows 10  which uses the PGI Fortran compiler.
I have a Makefile set up in the src directory, and when I run "make all",
the subroutines compile beautifully.

Now I want to create my package.  When I run R CMD check, naturally,
gfortran is called.  Is there a way that I can direct the check function to
just use the make/Makefile, please?

Or am I out of luck, please?  (highly probable)

Thanks,
Erin

Erin Hodgess, PhD
mailto: erinm.hodgess at gmail.com

	[[alternative HTML version deleted]]


From kevinu@hey @ending from gm@il@com  Mon Aug 27 22:28:54 2018
From: kevinu@hey @ending from gm@il@com (Kevin Ushey)
Date: Mon, 27 Aug 2018 13:28:54 -0700
Subject: [R-pkg-devel] Making adjustments to the R CMD check/install
 commands
In-Reply-To: <CACxE24=qBXavoKEBLMv4AX-y23t+=AXqpvVihHZX-cY5q4ku-A@mail.gmail.com>
References: <CACxE24=qBXavoKEBLMv4AX-y23t+=AXqpvVihHZX-cY5q4ku-A@mail.gmail.com>
Message-ID: <CAJXgQP3QosxC8mPuggteEQjfo-Tt3sNYoP5nOBHY_eYDjvHWwg@mail.gmail.com>

Hi Erin,

The R extensions manual should be helpful here -- in particular, see the
sections on the 'src/Makevars' file and configuration of the Fortran
compiler:

https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Using-Makevars

In particular, in your 'src/Makevars' file, you'll likely want to set the
FC variable to choose the Fortran compiler, and FCFLAGS to choose the
appropriate compilation flags. As an example, you can see how one might set
these flags to compile code with the address sanitizer active:

https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Using-Address-Sanitizer

(Note that this example uses the user-level '~/.R/Makevars' file rather
than the package-level 'src/Makevars' file, but the crux is the same)

Hope this gets you on the right track,
Kevin

On Mon, Aug 27, 2018 at 1:15 PM Erin Hodgess <erinm.hodgess at gmail.com>
wrote:

> Hello!
>
> I'm building a package on Windows 10  which uses the PGI Fortran compiler.
> I have a Makefile set up in the src directory, and when I run "make all",
> the subroutines compile beautifully.
>
> Now I want to create my package.  When I run R CMD check, naturally,
> gfortran is called.  Is there a way that I can direct the check function to
> just use the make/Makefile, please?
>
> Or am I out of luck, please?  (highly probable)
>
> Thanks,
> Erin
>
> Erin Hodgess, PhD
> mailto: erinm.hodgess at gmail.com
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From erinm@hodge@@ @ending from gm@il@com  Mon Aug 27 23:32:53 2018
From: erinm@hodge@@ @ending from gm@il@com (Erin Hodgess)
Date: Mon, 27 Aug 2018 15:32:53 -0600
Subject: [R-pkg-devel] Making adjustments to the R CMD check/install
 commands
In-Reply-To: <CAJXgQP3QosxC8mPuggteEQjfo-Tt3sNYoP5nOBHY_eYDjvHWwg@mail.gmail.com>
References: <CACxE24=qBXavoKEBLMv4AX-y23t+=AXqpvVihHZX-cY5q4ku-A@mail.gmail.com>
 <CAJXgQP3QosxC8mPuggteEQjfo-Tt3sNYoP5nOBHY_eYDjvHWwg@mail.gmail.com>
Message-ID: <CACxE24mxsqV42+_7FN3OKrruZmmfvQ3SxwYe=RwWghEXKM7sPQ@mail.gmail.com>

Thank you, Kevin!

I put together the Makevars file:
PKG_LIBS = $(LAPACK_LIBS) $(BLAS_LIBS)
FC=c:/progra~1/PGICE/win64/18.4/bin/pgf90
SAFE_FFLAGS="-Lc:/progra~1/PGICE/win64/18.4/lib/pgf90.dll
-Lc:/progra~1/PGICE/win64/18.4/lib/pgc14.dll"



rmpiFort.obj: rmpiFort.f90
        $(FC) $(SAFE_FFLAGS) -Mmpi=msmpi -c rmpiFort.f90 -o rmpiFort.obj
rmpiFort.dll: rmpiFort.obj
        $(FC) $(SAFE_FFLAGS) rmpiFort.obj -Mmpi=msmpi -Mmakedll -o
rmpiFort.dll

But when I run R CMD check, the 00install file shows that the gfortran
compile is used, rather than the PGI compiler:
* installing *source* package 'rmpiFort' ...^M
** libs^M
^M
*** arch - i386^M
C:/progra~1/R/R-35~1.1/share/make/winshlib.mk:13: warning: overriding
commands for target `rmpiFort.dll'
Makevars:10: warning: ignoring old commands for target `rmpiFort.dll'
c:/Rtools/mingw_32/bin/gfortran  -O2 -msse2 -mfpmath=sse -Mmpi=msmpi -c
rmpiFort.f90 -o rmpiFort.obj
gfortran.exe: error: unrecognized command line option '-Mmpi=msmpi'^M
make: *** [rmpiFort.obj] Error 1
ERROR: compilation failed for package 'rmpiFort'^M
* removing 'C:/Users/erinm/rmpiFort.Rcheck/rmpiFort'^M
In R CMD INSTALL^M

So I'm still puzzled.

Any help much appreciated.

Sincerely,
Erin


Erin Hodgess, PhD
mailto: erinm.hodgess at gmail.com


On Mon, Aug 27, 2018 at 2:29 PM Kevin Ushey <kevinushey at gmail.com> wrote:

> Hi Erin,
>
> The R extensions manual should be helpful here -- in particular, see the
> sections on the 'src/Makevars' file and configuration of the Fortran
> compiler:
>
> https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Using-Makevars
>
> In particular, in your 'src/Makevars' file, you'll likely want to set the
> FC variable to choose the Fortran compiler, and FCFLAGS to choose the
> appropriate compilation flags. As an example, you can see how one might set
> these flags to compile code with the address sanitizer active:
>
>
> https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Using-Address-Sanitizer
>
> (Note that this example uses the user-level '~/.R/Makevars' file rather
> than the package-level 'src/Makevars' file, but the crux is the same)
>
> Hope this gets you on the right track,
> Kevin
>
> On Mon, Aug 27, 2018 at 1:15 PM Erin Hodgess <erinm.hodgess at gmail.com>
> wrote:
>
>> Hello!
>>
>> I'm building a package on Windows 10  which uses the PGI Fortran compiler.
>> I have a Makefile set up in the src directory, and when I run "make all",
>> the subroutines compile beautifully.
>>
>> Now I want to create my package.  When I run R CMD check, naturally,
>> gfortran is called.  Is there a way that I can direct the check function
>> to
>> just use the make/Makefile, please?
>>
>> Or am I out of luck, please?  (highly probable)
>>
>> Thanks,
>> Erin
>>
>> Erin Hodgess, PhD
>> mailto: erinm.hodgess at gmail.com
>>
>>         [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>

	[[alternative HTML version deleted]]


From erinm@hodge@@ @ending from gm@il@com  Tue Aug 28 01:00:05 2018
From: erinm@hodge@@ @ending from gm@il@com (Erin Hodgess)
Date: Mon, 27 Aug 2018 17:00:05 -0600
Subject: [R-pkg-devel] Making adjustments to the R CMD check/install
 commands
In-Reply-To: <CAJXgQP3QosxC8mPuggteEQjfo-Tt3sNYoP5nOBHY_eYDjvHWwg@mail.gmail.com>
References: <CACxE24=qBXavoKEBLMv4AX-y23t+=AXqpvVihHZX-cY5q4ku-A@mail.gmail.com>
 <CAJXgQP3QosxC8mPuggteEQjfo-Tt3sNYoP5nOBHY_eYDjvHWwg@mail.gmail.com>
Message-ID: <CACxE24=shYQb8jo7-U2C_ZYgxxi3d1d2-V91vAE6s=4i4jw7bg@mail.gmail.com>

Yay!  I got it to work!  I used the ~/.R/Makevars, and all is well.

Thanks again,
Erin

Erin Hodgess, PhD
mailto: erinm.hodgess at gmail.com


On Mon, Aug 27, 2018 at 2:29 PM Kevin Ushey <kevinushey at gmail.com> wrote:

> Hi Erin,
>
> The R extensions manual should be helpful here -- in particular, see the
> sections on the 'src/Makevars' file and configuration of the Fortran
> compiler:
>
> https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Using-Makevars
>
> In particular, in your 'src/Makevars' file, you'll likely want to set the
> FC variable to choose the Fortran compiler, and FCFLAGS to choose the
> appropriate compilation flags. As an example, you can see how one might set
> these flags to compile code with the address sanitizer active:
>
>
> https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Using-Address-Sanitizer
>
> (Note that this example uses the user-level '~/.R/Makevars' file rather
> than the package-level 'src/Makevars' file, but the crux is the same)
>
> Hope this gets you on the right track,
> Kevin
>
> On Mon, Aug 27, 2018 at 1:15 PM Erin Hodgess <erinm.hodgess at gmail.com>
> wrote:
>
>> Hello!
>>
>> I'm building a package on Windows 10  which uses the PGI Fortran compiler.
>> I have a Makefile set up in the src directory, and when I run "make all",
>> the subroutines compile beautifully.
>>
>> Now I want to create my package.  When I run R CMD check, naturally,
>> gfortran is called.  Is there a way that I can direct the check function
>> to
>> just use the make/Makefile, please?
>>
>> Or am I out of luck, please?  (highly probable)
>>
>> Thanks,
>> Erin
>>
>> Erin Hodgess, PhD
>> mailto: erinm.hodgess at gmail.com
>>
>>         [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>

	[[alternative HTML version deleted]]


From profjcn@@h @ending from gm@il@com  Tue Aug 28 02:28:22 2018
From: profjcn@@h @ending from gm@il@com (J C Nash)
Date: Mon, 27 Aug 2018 20:28:22 -0400
Subject: [R-pkg-devel] Trying to work around missing functionality
Message-ID: <2ccf1cc0-14c6-1c6d-9a41-09331bec1ca7@gmail.com>

In order to track progress of a variety of rootfinding or optimization
routines that don't report some information I want, I'm using the
following setup (this one for rootfinding).

TraceSetup <- function(ifn=0, igr=0, ftrace=FALSE, fn=NA, gr=NA){
# JN: Define globals here
   groot<-list(ifn=ifn, igr=igr, ftrace=ftrace, fn=fn, gr=gr, label="none")
   envroot <<- list2env(groot) # Note globals in FnTrace
   ## This generates a NOTE that
   ## TraceSetup: no visible binding for '<<-' assignment to ?envroot?
##   envroot<-list2env(groot, parent=.GlobalEnv) # Note globals in FnTrace -- this does NOT work
   ## utils::globalVariables("envroot") # Try declaring here -- causes errors
# end globals
   envroot
}

FnTrace <- function(x,...) {
  # Substitute function to call when rootfinding
  # Evaluate fn(x, ...)
    val <- envroot$fn(x, ...)
    envroot$ifn <- envroot$ifn + 1 # probably more efficient ways
    if (envroot$ftrace) {
       cat("f(",x,")=",val," after ",envroot$ifn," ",envroot$label,"\n")
    }
    val
}


Perhaps there are better ways to do this, but this does seem to work quite well.
It lets me call a rootfinder with FnTrace and get information on evaluations of fn().
(There's another gr() routine, suppressed here.)

However, R CMD check gives a NOTE for

  TraceSetup: no visible binding for global variable ?envroot?
  Undefined global functions or variables:
    envroot

The commented lines in TraceSetup suggest some of the things I've tried. Clearly I don't
fully comprehend how R is grinding up the code, but searches on the net seem to indicate
I am far from alone. Does anyone have any suggestion of a clean way to avoid the NOTE?

JN


From rmh @ending from temple@edu  Tue Aug 28 02:40:13 2018
From: rmh @ending from temple@edu (Richard M. Heiberger)
Date: Mon, 27 Aug 2018 20:40:13 -0400
Subject: [R-pkg-devel] Trying to work around missing functionality
In-Reply-To: <2ccf1cc0-14c6-1c6d-9a41-09331bec1ca7@gmail.com>
References: <2ccf1cc0-14c6-1c6d-9a41-09331bec1ca7@gmail.com>
Message-ID: <CAGx1TMDbY2bhTVj_gkCSgmp49Qkcq++XJowp2QySDP9G1VzJzA@mail.gmail.com>

Does this solve the problem?

if (getRversion() >= '2.15.1')
  globalVariables(c('envroot'))

I keep this in file R/globals.R

I learned of this from John Fox's use in Rcmdr.

On Mon, Aug 27, 2018 at 8:28 PM, J C Nash <profjcnash at gmail.com> wrote:
> In order to track progress of a variety of rootfinding or optimization
> routines that don't report some information I want, I'm using the
> following setup (this one for rootfinding).
>
> TraceSetup <- function(ifn=0, igr=0, ftrace=FALSE, fn=NA, gr=NA){
> # JN: Define globals here
>    groot<-list(ifn=ifn, igr=igr, ftrace=ftrace, fn=fn, gr=gr, label="none")
>    envroot <<- list2env(groot) # Note globals in FnTrace
>    ## This generates a NOTE that
>    ## TraceSetup: no visible binding for '<<-' assignment to ?envroot?
> ##   envroot<-list2env(groot, parent=.GlobalEnv) # Note globals in FnTrace -- this does NOT work
>    ## utils::globalVariables("envroot") # Try declaring here -- causes errors
> # end globals
>    envroot
> }
>
> FnTrace <- function(x,...) {
>   # Substitute function to call when rootfinding
>   # Evaluate fn(x, ...)
>     val <- envroot$fn(x, ...)
>     envroot$ifn <- envroot$ifn + 1 # probably more efficient ways
>     if (envroot$ftrace) {
>        cat("f(",x,")=",val," after ",envroot$ifn," ",envroot$label,"\n")
>     }
>     val
> }
>
>
> Perhaps there are better ways to do this, but this does seem to work quite well.
> It lets me call a rootfinder with FnTrace and get information on evaluations of fn().
> (There's another gr() routine, suppressed here.)
>
> However, R CMD check gives a NOTE for
>
>   TraceSetup: no visible binding for global variable ?envroot?
>   Undefined global functions or variables:
>     envroot
>
> The commented lines in TraceSetup suggest some of the things I've tried. Clearly I don't
> fully comprehend how R is grinding up the code, but searches on the net seem to indicate
> I am far from alone. Does anyone have any suggestion of a clean way to avoid the NOTE?
>
> JN
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From profjcn@@h @ending from gm@il@com  Tue Aug 28 02:44:22 2018
From: profjcn@@h @ending from gm@il@com (J C Nash)
Date: Mon, 27 Aug 2018 20:44:22 -0400
Subject: [R-pkg-devel] Trying to work around missing functionality
In-Reply-To: <CAGx1TMDbY2bhTVj_gkCSgmp49Qkcq++XJowp2QySDP9G1VzJzA@mail.gmail.com>
References: <2ccf1cc0-14c6-1c6d-9a41-09331bec1ca7@gmail.com>
 <CAGx1TMDbY2bhTVj_gkCSgmp49Qkcq++XJowp2QySDP9G1VzJzA@mail.gmail.com>
Message-ID: <aa44d7d6-190b-f918-7e4e-b77c447afd5b@gmail.com>

Unfortunately, makes things much worse. I'd tried something like this already.

> * checking examples ... ERROR
> Running examples in ?rootoned-Ex.R? failed
> The error most likely occurred in:
> 
>> ### Name: rootwrap
>> ### Title: zeroin: Find a single root of a function of one variable within
>> ###   a specified interval.
>> ### Aliases: rootwrap
>> ### Keywords: root-finding
>> 
>> ### ** Examples
>> 
>> # Dekker example
>> # require(rootoned)
>> dek <- function(x){ 1/(x-3) - 6 }
>> r1 <- rootwrap(dek, ri=c(3.0000001, 6), ftrace=TRUE, method="uniroot")
> Error in registerNames(names, package, ".__global__", add) : 
>   The namespace for package "rootoned" is locked; no changes in the global variables list may be made.
> Calls: rootwrap -> TraceSetup -> <Anonymous> -> registerNames
> Execution halted

Also had to use utils::globalVariables( ...

JN


On 2018-08-27 08:40 PM, Richard M. Heiberger wrote:
> Does this solve the problem?
> 
> if (getRversion() >= '2.15.1')
>   globalVariables(c('envroot'))
> 
> I keep this in file R/globals.R
> 
> I learned of this from John Fox's use in Rcmdr.
> 
> On Mon, Aug 27, 2018 at 8:28 PM, J C Nash <profjcnash at gmail.com> wrote:
>> In order to track progress of a variety of rootfinding or optimization
>> routines that don't report some information I want, I'm using the
>> following setup (this one for rootfinding).
>>
>> TraceSetup <- function(ifn=0, igr=0, ftrace=FALSE, fn=NA, gr=NA){
>> # JN: Define globals here
>>    groot<-list(ifn=ifn, igr=igr, ftrace=ftrace, fn=fn, gr=gr, label="none")
>>    envroot <<- list2env(groot) # Note globals in FnTrace
>>    ## This generates a NOTE that
>>    ## TraceSetup: no visible binding for '<<-' assignment to ?envroot?
>> ##   envroot<-list2env(groot, parent=.GlobalEnv) # Note globals in FnTrace -- this does NOT work
>>    ## utils::globalVariables("envroot") # Try declaring here -- causes errors
>> # end globals
>>    envroot
>> }
>>
>> FnTrace <- function(x,...) {
>>   # Substitute function to call when rootfinding
>>   # Evaluate fn(x, ...)
>>     val <- envroot$fn(x, ...)
>>     envroot$ifn <- envroot$ifn + 1 # probably more efficient ways
>>     if (envroot$ftrace) {
>>        cat("f(",x,")=",val," after ",envroot$ifn," ",envroot$label,"\n")
>>     }
>>     val
>> }
>>
>>
>> Perhaps there are better ways to do this, but this does seem to work quite well.
>> It lets me call a rootfinder with FnTrace and get information on evaluations of fn().
>> (There's another gr() routine, suppressed here.)
>>
>> However, R CMD check gives a NOTE for
>>
>>   TraceSetup: no visible binding for global variable ?envroot?
>>   Undefined global functions or variables:
>>     envroot
>>
>> The commented lines in TraceSetup suggest some of the things I've tried. Clearly I don't
>> fully comprehend how R is grinding up the code, but searches on the net seem to indicate
>> I am far from alone. Does anyone have any suggestion of a clean way to avoid the NOTE?
>>
>> JN
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From jfox @ending from mcm@@ter@c@  Tue Aug 28 06:01:22 2018
From: jfox @ending from mcm@@ter@c@ (Fox, John)
Date: Tue, 28 Aug 2018 04:01:22 +0000
Subject: [R-pkg-devel] Trying to work around missing functionality
In-Reply-To: <12700_1535417296_w7S0mFhr003405_aa44d7d6-190b-f918-7e4e-b77c447afd5b@gmail.com>
References: <2ccf1cc0-14c6-1c6d-9a41-09331bec1ca7@gmail.com>
 <CAGx1TMDbY2bhTVj_gkCSgmp49Qkcq++XJowp2QySDP9G1VzJzA@mail.gmail.com>
 <12700_1535417296_w7S0mFhr003405_aa44d7d6-190b-f918-7e4e-b77c447afd5b@gmail.com>
Message-ID: <ACD1644AA6C67E4FBD0C350625508EC8368A2702@FHSDB2D11-2.csu.mcmaster.ca>

Hi John,

It's possible that I didn?t follow what you did, but it appears as if you call globalVariables() *inside* the function. Instead try to do as Richard Heiberger suggested and place the call outside of the function, e.g., in a source file in the package R directory named globals.R. (Of course, the name of the source file containing the command isn?t important.)

I hope this helps,
 John

-----------------------------------------------------------------
John Fox
Professor Emeritus
McMaster University
Hamilton, Ontario, Canada
Web: https://socialsciences.mcmaster.ca/jfox/



> -----Original Message-----
> From: R-package-devel [mailto:r-package-devel-bounces at r-project.org] On
> Behalf Of J C Nash
> Sent: Monday, August 27, 2018 8:44 PM
> To: Richard M. Heiberger <rmh at temple.edu>
> Cc: List r-package-devel <r-package-devel at r-project.org>
> Subject: Re: [R-pkg-devel] Trying to work around missing functionality
> 
> Unfortunately, makes things much worse. I'd tried something like this already.
> 
> > * checking examples ... ERROR
> > Running examples in ?rootoned-Ex.R? failed The error most likely
> > occurred in:
> >
> >> ### Name: rootwrap
> >> ### Title: zeroin: Find a single root of a function of one variable within
> >> ###   a specified interval.
> >> ### Aliases: rootwrap
> >> ### Keywords: root-finding
> >>
> >> ### ** Examples
> >>
> >> # Dekker example
> >> # require(rootoned)
> >> dek <- function(x){ 1/(x-3) - 6 }
> >> r1 <- rootwrap(dek, ri=c(3.0000001, 6), ftrace=TRUE,
> >> method="uniroot")
> > Error in registerNames(names, package, ".__global__", add) :
> >   The namespace for package "rootoned" is locked; no changes in the global
> variables list may be made.
> > Calls: rootwrap -> TraceSetup -> <Anonymous> -> registerNames
> > Execution halted
> 
> Also had to use utils::globalVariables( ...
> 
> JN
> 
> 
> On 2018-08-27 08:40 PM, Richard M. Heiberger wrote:
> > Does this solve the problem?
> >
> > if (getRversion() >= '2.15.1')
> >   globalVariables(c('envroot'))
> >
> > I keep this in file R/globals.R
> >
> > I learned of this from John Fox's use in Rcmdr.
> >
> > On Mon, Aug 27, 2018 at 8:28 PM, J C Nash <profjcnash at gmail.com>
> wrote:
> >> In order to track progress of a variety of rootfinding or
> >> optimization routines that don't report some information I want, I'm
> >> using the following setup (this one for rootfinding).
> >>
> >> TraceSetup <- function(ifn=0, igr=0, ftrace=FALSE, fn=NA, gr=NA){ #
> >> JN: Define globals here
> >>    groot<-list(ifn=ifn, igr=igr, ftrace=ftrace, fn=fn, gr=gr, label="none")
> >>    envroot <<- list2env(groot) # Note globals in FnTrace
> >>    ## This generates a NOTE that
> >>    ## TraceSetup: no visible binding for '<<-' assignment to ?envroot?
> >> ##   envroot<-list2env(groot, parent=.GlobalEnv) # Note globals in FnTrace -
> - this does NOT work
> >>    ## utils::globalVariables("envroot") # Try declaring here --
> >> causes errors # end globals
> >>    envroot
> >> }
> >>
> >> FnTrace <- function(x,...) {
> >>   # Substitute function to call when rootfinding
> >>   # Evaluate fn(x, ...)
> >>     val <- envroot$fn(x, ...)
> >>     envroot$ifn <- envroot$ifn + 1 # probably more efficient ways
> >>     if (envroot$ftrace) {
> >>        cat("f(",x,")=",val," after ",envroot$ifn," ",envroot$label,"\n")
> >>     }
> >>     val
> >> }
> >>
> >>
> >> Perhaps there are better ways to do this, but this does seem to work quite
> well.
> >> It lets me call a rootfinder with FnTrace and get information on evaluations
> of fn().
> >> (There's another gr() routine, suppressed here.)
> >>
> >> However, R CMD check gives a NOTE for
> >>
> >>   TraceSetup: no visible binding for global variable ?envroot?
> >>   Undefined global functions or variables:
> >>     envroot
> >>
> >> The commented lines in TraceSetup suggest some of the things I've
> >> tried. Clearly I don't fully comprehend how R is grinding up the
> >> code, but searches on the net seem to indicate I am far from alone. Does
> anyone have any suggestion of a clean way to avoid the NOTE?
> >>
> >> JN
> >>
> >> ______________________________________________
> >> R-package-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

From profjcn@@h @ending from gm@il@com  Tue Aug 28 15:17:40 2018
From: profjcn@@h @ending from gm@il@com (J C Nash)
Date: Tue, 28 Aug 2018 09:17:40 -0400
Subject: [R-pkg-devel] Trying to work around missing functionality
In-Reply-To: <ACD1644AA6C67E4FBD0C350625508EC8368A2702@FHSDB2D11-2.csu.mcmaster.ca>
References: <2ccf1cc0-14c6-1c6d-9a41-09331bec1ca7@gmail.com>
 <CAGx1TMDbY2bhTVj_gkCSgmp49Qkcq++XJowp2QySDP9G1VzJzA@mail.gmail.com>
 <12700_1535417296_w7S0mFhr003405_aa44d7d6-190b-f918-7e4e-b77c447afd5b@gmail.com>
 <ACD1644AA6C67E4FBD0C350625508EC8368A2702@FHSDB2D11-2.csu.mcmaster.ca>
Message-ID: <00907346-60df-c223-ce6b-973718452ac2@gmail.com>

Indeed, it appears that globalVariables must be outside the function. However, I had quite a bit of
fiddle to get things to work without errors or warnings or notes. While I now have a package that
does not complain with R CMD check, I am far from satisfied that I can give a prescription. I had
to remove lines in the rootfinder like
   envroot$fn <- fn
that were used to set the function to be used inside my instrumented function, and instead
call TraceSetup(fn=fn, ...) where a similar statement was given. Why that worked while the direct
assignment (note, not a <<- one) did not, I do not understand. However, I will work with this for
a while and try to get a better handle on it.

Thanks for the pointer. As an old-time programmer from days when you even set the add table, I'm
still uncomfortable just putting code in a directory and assuming it will be executed, i.e., the
globals.R file. However, I now have this set to establish the global structure as follows

> ## Put in R directory. 
> if(getRversion() >= "2.15.1") { utils::globalVariables(c('envroot')) } # Try declaring here 
> groot<-list(ifn=0, igr=0, ftrace=FALSE, fn=NA, gr=NA, label="none")
> envroot <- list2env(groot) # Note globals in FnTrace

Then TraceSetup() is

> TraceSetup <- function(ifn=0, igr=0, ftrace=FALSE, fn=NA, gr=NA){
>    envroot$ifn <- ifn
>    envroot$igr <- igr
>    envroot$ftrace <- ftrace
>    envroot$fn <- fn
>    envroot$gr <- gr
>    return()
> }

and it is called at the start of the rootfinder routine.

Thus I am establishing a global, then (re-)setting values in TraceSetup(), then
incrementing counters etc. in the instrumented FnTrace() that is the function for which I find
the root, which calls fn() given by the "user". Messy, but I can now track progress and measure
effort.

I'm sure there are cleaner solutions. I suggest offline discussion would be better until such
options are clearer.

Thanks again.

JN



On 2018-08-28 12:01 AM, Fox, John wrote:
> Hi John,
> 
> It's possible that I didn?t follow what you did, but it appears as if you call globalVariables() *inside* the function. Instead try to do as Richard Heiberger suggested and place the call outside of the function, e.g., in a source file in the package R directory named globals.R. (Of course, the name of the source file containing the command isn?t important.)
> 
> I hope this helps,
>  John
> 
> -----------------------------------------------------------------
> John Fox
> Professor Emeritus
> McMaster University
> Hamilton, Ontario, Canada
> Web: https://socialsciences.mcmaster.ca/jfox/
> 
> 
> 
>> -----Original Message-----
>> From: R-package-devel [mailto:r-package-devel-bounces at r-project.org] On
>> Behalf Of J C Nash
>> Sent: Monday, August 27, 2018 8:44 PM
>> To: Richard M. Heiberger <rmh at temple.edu>
>> Cc: List r-package-devel <r-package-devel at r-project.org>
>> Subject: Re: [R-pkg-devel] Trying to work around missing functionality
>>
>> Unfortunately, makes things much worse. I'd tried something like this already.
>>
>>> * checking examples ... ERROR
>>> Running examples in ?rootoned-Ex.R? failed The error most likely
>>> occurred in:
>>>
>>>> ### Name: rootwrap
>>>> ### Title: zeroin: Find a single root of a function of one variable within
>>>> ###   a specified interval.
>>>> ### Aliases: rootwrap
>>>> ### Keywords: root-finding
>>>>
>>>> ### ** Examples
>>>>
>>>> # Dekker example
>>>> # require(rootoned)
>>>> dek <- function(x){ 1/(x-3) - 6 }
>>>> r1 <- rootwrap(dek, ri=c(3.0000001, 6), ftrace=TRUE,
>>>> method="uniroot")
>>> Error in registerNames(names, package, ".__global__", add) :
>>>   The namespace for package "rootoned" is locked; no changes in the global
>> variables list may be made.
>>> Calls: rootwrap -> TraceSetup -> <Anonymous> -> registerNames
>>> Execution halted
>>
>> Also had to use utils::globalVariables( ...
>>
>> JN
>>
>>
>> On 2018-08-27 08:40 PM, Richard M. Heiberger wrote:
>>> Does this solve the problem?
>>>
>>> if (getRversion() >= '2.15.1')
>>>   globalVariables(c('envroot'))
>>>
>>> I keep this in file R/globals.R
>>>
>>> I learned of this from John Fox's use in Rcmdr.
>>>
>>> On Mon, Aug 27, 2018 at 8:28 PM, J C Nash <profjcnash at gmail.com>
>> wrote:
>>>> In order to track progress of a variety of rootfinding or
>>>> optimization routines that don't report some information I want, I'm
>>>> using the following setup (this one for rootfinding).
>>>>
>>>> TraceSetup <- function(ifn=0, igr=0, ftrace=FALSE, fn=NA, gr=NA){ #
>>>> JN: Define globals here
>>>>    groot<-list(ifn=ifn, igr=igr, ftrace=ftrace, fn=fn, gr=gr, label="none")
>>>>    envroot <<- list2env(groot) # Note globals in FnTrace
>>>>    ## This generates a NOTE that
>>>>    ## TraceSetup: no visible binding for '<<-' assignment to ?envroot?
>>>> ##   envroot<-list2env(groot, parent=.GlobalEnv) # Note globals in FnTrace -
>> - this does NOT work
>>>>    ## utils::globalVariables("envroot") # Try declaring here --
>>>> causes errors # end globals
>>>>    envroot
>>>> }
>>>>
>>>> FnTrace <- function(x,...) {
>>>>   # Substitute function to call when rootfinding
>>>>   # Evaluate fn(x, ...)
>>>>     val <- envroot$fn(x, ...)
>>>>     envroot$ifn <- envroot$ifn + 1 # probably more efficient ways
>>>>     if (envroot$ftrace) {
>>>>        cat("f(",x,")=",val," after ",envroot$ifn," ",envroot$label,"\n")
>>>>     }
>>>>     val
>>>> }
>>>>
>>>>
>>>> Perhaps there are better ways to do this, but this does seem to work quite
>> well.
>>>> It lets me call a rootfinder with FnTrace and get information on evaluations
>> of fn().
>>>> (There's another gr() routine, suppressed here.)
>>>>
>>>> However, R CMD check gives a NOTE for
>>>>
>>>>   TraceSetup: no visible binding for global variable ?envroot?
>>>>   Undefined global functions or variables:
>>>>     envroot
>>>>
>>>> The commented lines in TraceSetup suggest some of the things I've
>>>> tried. Clearly I don't fully comprehend how R is grinding up the
>>>> code, but searches on the net seem to indicate I am far from alone. Does
>> anyone have any suggestion of a clean way to avoid the NOTE?
>>>>
>>>> JN
>>>>
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From georgi@bo@hn@kov @ending from m@nche@ter@@c@uk  Tue Aug 28 18:27:50 2018
From: georgi@bo@hn@kov @ending from m@nche@ter@@c@uk (Georgi Boshnakov)
Date: Tue, 28 Aug 2018 16:27:50 +0000
Subject: [R-pkg-devel] Trying to work around missing functionality
In-Reply-To: <00907346-60df-c223-ce6b-973718452ac2@gmail.com>
References: <2ccf1cc0-14c6-1c6d-9a41-09331bec1ca7@gmail.com>
 <CAGx1TMDbY2bhTVj_gkCSgmp49Qkcq++XJowp2QySDP9G1VzJzA@mail.gmail.com>
 <12700_1535417296_w7S0mFhr003405_aa44d7d6-190b-f918-7e4e-b77c447afd5b@gmail.com>
 <ACD1644AA6C67E4FBD0C350625508EC8368A2702@FHSDB2D11-2.csu.mcmaster.ca>
 <00907346-60df-c223-ce6b-973718452ac2@gmail.com>
Message-ID: <438D2EC9EAFE5946B2D5864670EA468E018F68EAE2@MBXP01.ds.man.ac.uk>

If you don't insist on putting the variable in the global environment, 
variations of the following give a cleaner solution:

TraceSetup_1 <- local({
    ifn = 0
    igr = 0
    ftrace = FALSE
    fn = NA
    gr = NA

    function(ifn=0, igr=0, ftrace=FALSE, fn=NA, gr=NA){
        ifn    <<- ifn
        igr    <<- igr
        ftrace <<- ftrace
        fn     <<- fn
        gr     <<- gr
        parent.env(environment())
    }
})

For example,

TraceSetup_1 <- local({
+     ifn = 0
+     igr = 0
+     ftrace = FALSE
+     fn = NA
+     gr = NA
+     function(ifn=0, igr=0, ftrace=FALSE, fn=NA, gr=NA){
+         ifn    <<- ifn
+         igr    <<- igr
+         ftrace <<- ftrace
+         fn     <<- fn
+         gr     <<- gr
+         parent.env(environment())
+     }
+ })
> 
> e <- TraceSetup_1(fn = function(x) x^2)
> ls(e)
[1] "fn"     "ftrace" "gr"     "ifn"    "igr"   
> e$fn
function(x) x^2

## let's change 'fn':
> e$fn <- function(x) x^4
> e$fn
function(x) x^4


Note that the environment is always the same, so can be accessed from anywhere in your code:

> e2 <- environment(TraceSetup_1)
> e2
<environment: 0x000000000d1af620>
> identical(e2, e)
[1] TRUE
> 

If you need a new environment every time, a basic setup might be:

TraceSetup_2 <- local({
    staticVar1 <- NULL
    ## other variables here
    
    function(ifn=0, igr=0, ftrace=FALSE, fn=NA, gr=NA){
        ## force evaluation of the arguments
        ifn    
        igr    
        ftrace 
        fn     
        gr     
        environment()
    }
})

There is no need for local() here but usually one needs also some static variables.
Now every call gives a different environment  (but all have the same parent):

ea <- TraceSetup_2(fn = function(x) x^2 - 2*x + 1)
> ls(ea)
[1] "fn"     "ftrace" "gr"     "ifn"    "igr"   
> ea$fn
function(x) x^2 - 2*x + 1
> 
> eb <- TraceSetup_2(fn = function(x) x^2 + 1)
> eb$fn
function(x) x^2 + 1
> 
> ## ea$fn is still the same:
> ea$fn
function(x) x^2 - 2*x + 1
>

Obviously, in this case some further arrangements are  needed for the environments to be made available to the external world.

Hope this helps,
Georgi Boshnakov


-----Original Message-----
From: R-package-devel [mailto:r-package-devel-bounces at r-project.org] On Behalf Of J C Nash
Sent: 28 August 2018 14:18
To: Fox, John; Richard M. Heiberger
Cc: List r-package-devel
Subject: Re: [R-pkg-devel] Trying to work around missing functionality

Indeed, it appears that globalVariables must be outside the function. However, I had quite a bit of
fiddle to get things to work without errors or warnings or notes. While I now have a package that
does not complain with R CMD check, I am far from satisfied that I can give a prescription. I had
to remove lines in the rootfinder like
   envroot$fn <- fn
that were used to set the function to be used inside my instrumented function, and instead
call TraceSetup(fn=fn, ...) where a similar statement was given. Why that worked while the direct
assignment (note, not a <<- one) did not, I do not understand. However, I will work with this for
a while and try to get a better handle on it.

Thanks for the pointer. As an old-time programmer from days when you even set the add table, I'm
still uncomfortable just putting code in a directory and assuming it will be executed, i.e., the
globals.R file. However, I now have this set to establish the global structure as follows

> ## Put in R directory. 
> if(getRversion() >= "2.15.1") { utils::globalVariables(c('envroot')) } # Try declaring here 
> groot<-list(ifn=0, igr=0, ftrace=FALSE, fn=NA, gr=NA, label="none")
> envroot <- list2env(groot) # Note globals in FnTrace

Then TraceSetup() is

> TraceSetup <- function(ifn=0, igr=0, ftrace=FALSE, fn=NA, gr=NA){
>    envroot$ifn <- ifn
>    envroot$igr <- igr
>    envroot$ftrace <- ftrace
>    envroot$fn <- fn
>    envroot$gr <- gr
>    return()
> }

and it is called at the start of the rootfinder routine.

Thus I am establishing a global, then (re-)setting values in TraceSetup(), then
incrementing counters etc. in the instrumented FnTrace() that is the function for which I find
the root, which calls fn() given by the "user". Messy, but I can now track progress and measure
effort.

I'm sure there are cleaner solutions. I suggest offline discussion would be better until such
options are clearer.

Thanks again.

JN



On 2018-08-28 12:01 AM, Fox, John wrote:
> Hi John,
> 
> It's possible that I didn?t follow what you did, but it appears as if you call globalVariables() *inside* the function. Instead try to do as Richard Heiberger suggested and place the call outside of the function, e.g., in a source file in the package R directory named globals.R. (Of course, the name of the source file containing the command isn?t important.)
> 
> I hope this helps,
>  John
> 
> -----------------------------------------------------------------
> John Fox
> Professor Emeritus
> McMaster University
> Hamilton, Ontario, Canada
> Web: https://socialsciences.mcmaster.ca/jfox/
> 
> 
> 
>> -----Original Message-----
>> From: R-package-devel [mailto:r-package-devel-bounces at r-project.org] On
>> Behalf Of J C Nash
>> Sent: Monday, August 27, 2018 8:44 PM
>> To: Richard M. Heiberger <rmh at temple.edu>
>> Cc: List r-package-devel <r-package-devel at r-project.org>
>> Subject: Re: [R-pkg-devel] Trying to work around missing functionality
>>
>> Unfortunately, makes things much worse. I'd tried something like this already.
>>
>>> * checking examples ... ERROR
>>> Running examples in ?rootoned-Ex.R? failed The error most likely
>>> occurred in:
>>>
>>>> ### Name: rootwrap
>>>> ### Title: zeroin: Find a single root of a function of one variable within
>>>> ###   a specified interval.
>>>> ### Aliases: rootwrap
>>>> ### Keywords: root-finding
>>>>
>>>> ### ** Examples
>>>>
>>>> # Dekker example
>>>> # require(rootoned)
>>>> dek <- function(x){ 1/(x-3) - 6 }
>>>> r1 <- rootwrap(dek, ri=c(3.0000001, 6), ftrace=TRUE,
>>>> method="uniroot")
>>> Error in registerNames(names, package, ".__global__", add) :
>>>   The namespace for package "rootoned" is locked; no changes in the global
>> variables list may be made.
>>> Calls: rootwrap -> TraceSetup -> <Anonymous> -> registerNames
>>> Execution halted
>>
>> Also had to use utils::globalVariables( ...
>>
>> JN
>>
>>
>> On 2018-08-27 08:40 PM, Richard M. Heiberger wrote:
>>> Does this solve the problem?
>>>
>>> if (getRversion() >= '2.15.1')
>>>   globalVariables(c('envroot'))
>>>
>>> I keep this in file R/globals.R
>>>
>>> I learned of this from John Fox's use in Rcmdr.
>>>
>>> On Mon, Aug 27, 2018 at 8:28 PM, J C Nash <profjcnash at gmail.com>
>> wrote:
>>>> In order to track progress of a variety of rootfinding or
>>>> optimization routines that don't report some information I want, I'm
>>>> using the following setup (this one for rootfinding).
>>>>
>>>> TraceSetup <- function(ifn=0, igr=0, ftrace=FALSE, fn=NA, gr=NA){ #
>>>> JN: Define globals here
>>>>    groot<-list(ifn=ifn, igr=igr, ftrace=ftrace, fn=fn, gr=gr, label="none")
>>>>    envroot <<- list2env(groot) # Note globals in FnTrace
>>>>    ## This generates a NOTE that
>>>>    ## TraceSetup: no visible binding for '<<-' assignment to ?envroot?
>>>> ##   envroot<-list2env(groot, parent=.GlobalEnv) # Note globals in FnTrace -
>> - this does NOT work
>>>>    ## utils::globalVariables("envroot") # Try declaring here --
>>>> causes errors # end globals
>>>>    envroot
>>>> }
>>>>
>>>> FnTrace <- function(x,...) {
>>>>   # Substitute function to call when rootfinding
>>>>   # Evaluate fn(x, ...)
>>>>     val <- envroot$fn(x, ...)
>>>>     envroot$ifn <- envroot$ifn + 1 # probably more efficient ways
>>>>     if (envroot$ftrace) {
>>>>        cat("f(",x,")=",val," after ",envroot$ifn," ",envroot$label,"\n")
>>>>     }
>>>>     val
>>>> }
>>>>
>>>>
>>>> Perhaps there are better ways to do this, but this does seem to work quite
>> well.
>>>> It lets me call a rootfinder with FnTrace and get information on evaluations
>> of fn().
>>>> (There's another gr() routine, suppressed here.)
>>>>
>>>> However, R CMD check gives a NOTE for
>>>>
>>>>   TraceSetup: no visible binding for global variable ?envroot?
>>>>   Undefined global functions or variables:
>>>>     envroot
>>>>
>>>> The commented lines in TraceSetup suggest some of the things I've
>>>> tried. Clearly I don't fully comprehend how R is grinding up the
>>>> code, but searches on the net seem to indicate I am far from alone. Does
>> anyone have any suggestion of a clean way to avoid the NOTE?
>>>>
>>>> JN
>>>>
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel

______________________________________________
R-package-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel

From murdoch@dunc@n @ending from gm@il@com  Tue Aug 28 18:40:28 2018
From: murdoch@dunc@n @ending from gm@il@com (Duncan Murdoch)
Date: Tue, 28 Aug 2018 12:40:28 -0400
Subject: [R-pkg-devel] Trying to work around missing functionality
In-Reply-To: <00907346-60df-c223-ce6b-973718452ac2@gmail.com>
References: <2ccf1cc0-14c6-1c6d-9a41-09331bec1ca7@gmail.com>
 <CAGx1TMDbY2bhTVj_gkCSgmp49Qkcq++XJowp2QySDP9G1VzJzA@mail.gmail.com>
 <12700_1535417296_w7S0mFhr003405_aa44d7d6-190b-f918-7e4e-b77c447afd5b@gmail.com>
 <ACD1644AA6C67E4FBD0C350625508EC8368A2702@FHSDB2D11-2.csu.mcmaster.ca>
 <00907346-60df-c223-ce6b-973718452ac2@gmail.com>
Message-ID: <6d4a692a-501e-92cc-c149-f13120434365@gmail.com>

On 28/08/2018 9:17 AM, J C Nash wrote:
> Indeed, it appears that globalVariables must be outside the function. However, I had quite a bit of
> fiddle to get things to work without errors or warnings or notes. While I now have a package that
> does not complain with R CMD check, I am far from satisfied that I can give a prescription. I had
> to remove lines in the rootfinder like
>     envroot$fn <- fn
> that were used to set the function to be used inside my instrumented function, and instead
> call TraceSetup(fn=fn, ...) where a similar statement was given. Why that worked while the direct
> assignment (note, not a <<- one) did not, I do not understand. However, I will work with this for
> a while and try to get a better handle on it.
> 
> Thanks for the pointer. As an old-time programmer from days when you even set the add table, I'm
> still uncomfortable just putting code in a directory and assuming it will be executed, i.e., the
> globals.R file. However, I now have this set to establish the global structure as follows

The code in the R directory in a package is all executed once when the 
package is installed, to produce the functions and other objects in the 
package.  But that execution can do other things too, and that's what 
the call to globalVariables() does.

(The order of execution of the files in the R directory usually doesn't 
matter, but it is well defined:  alphabetical order by filename in the C 
locale unless overridden by the Collate field in DESCRIPTION.)

Duncan Murdoch

> 
>> ## Put in R directory.
>> if(getRversion() >= "2.15.1") { utils::globalVariables(c('envroot')) } # Try declaring here
>> groot<-list(ifn=0, igr=0, ftrace=FALSE, fn=NA, gr=NA, label="none")
>> envroot <- list2env(groot) # Note globals in FnTrace
> 
> Then TraceSetup() is
> 
>> TraceSetup <- function(ifn=0, igr=0, ftrace=FALSE, fn=NA, gr=NA){
>>     envroot$ifn <- ifn
>>     envroot$igr <- igr
>>     envroot$ftrace <- ftrace
>>     envroot$fn <- fn
>>     envroot$gr <- gr
>>     return()
>> }
> 
> and it is called at the start of the rootfinder routine.
> 
> Thus I am establishing a global, then (re-)setting values in TraceSetup(), then
> incrementing counters etc. in the instrumented FnTrace() that is the function for which I find
> the root, which calls fn() given by the "user". Messy, but I can now track progress and measure
> effort.
> 
> I'm sure there are cleaner solutions. I suggest offline discussion would be better until such
> options are clearer.
> 
> Thanks again.
> 
> JN
> 
> 
> 
> On 2018-08-28 12:01 AM, Fox, John wrote:
>> Hi John,
>>
>> It's possible that I didn?t follow what you did, but it appears as if you call globalVariables() *inside* the function. Instead try to do as Richard Heiberger suggested and place the call outside of the function, e.g., in a source file in the package R directory named globals.R. (Of course, the name of the source file containing the command isn?t important.)
>>
>> I hope this helps,
>>   John
>>
>> -----------------------------------------------------------------
>> John Fox
>> Professor Emeritus
>> McMaster University
>> Hamilton, Ontario, Canada
>> Web: https://socialsciences.mcmaster.ca/jfox/
>>
>>
>>
>>> -----Original Message-----
>>> From: R-package-devel [mailto:r-package-devel-bounces at r-project.org] On
>>> Behalf Of J C Nash
>>> Sent: Monday, August 27, 2018 8:44 PM
>>> To: Richard M. Heiberger <rmh at temple.edu>
>>> Cc: List r-package-devel <r-package-devel at r-project.org>
>>> Subject: Re: [R-pkg-devel] Trying to work around missing functionality
>>>
>>> Unfortunately, makes things much worse. I'd tried something like this already.
>>>
>>>> * checking examples ... ERROR
>>>> Running examples in ?rootoned-Ex.R? failed The error most likely
>>>> occurred in:
>>>>
>>>>> ### Name: rootwrap
>>>>> ### Title: zeroin: Find a single root of a function of one variable within
>>>>> ###   a specified interval.
>>>>> ### Aliases: rootwrap
>>>>> ### Keywords: root-finding
>>>>>
>>>>> ### ** Examples
>>>>>
>>>>> # Dekker example
>>>>> # require(rootoned)
>>>>> dek <- function(x){ 1/(x-3) - 6 }
>>>>> r1 <- rootwrap(dek, ri=c(3.0000001, 6), ftrace=TRUE,
>>>>> method="uniroot")
>>>> Error in registerNames(names, package, ".__global__", add) :
>>>>    The namespace for package "rootoned" is locked; no changes in the global
>>> variables list may be made.
>>>> Calls: rootwrap -> TraceSetup -> <Anonymous> -> registerNames
>>>> Execution halted
>>>
>>> Also had to use utils::globalVariables( ...
>>>
>>> JN
>>>
>>>
>>> On 2018-08-27 08:40 PM, Richard M. Heiberger wrote:
>>>> Does this solve the problem?
>>>>
>>>> if (getRversion() >= '2.15.1')
>>>>    globalVariables(c('envroot'))
>>>>
>>>> I keep this in file R/globals.R
>>>>
>>>> I learned of this from John Fox's use in Rcmdr.
>>>>
>>>> On Mon, Aug 27, 2018 at 8:28 PM, J C Nash <profjcnash at gmail.com>
>>> wrote:
>>>>> In order to track progress of a variety of rootfinding or
>>>>> optimization routines that don't report some information I want, I'm
>>>>> using the following setup (this one for rootfinding).
>>>>>
>>>>> TraceSetup <- function(ifn=0, igr=0, ftrace=FALSE, fn=NA, gr=NA){ #
>>>>> JN: Define globals here
>>>>>     groot<-list(ifn=ifn, igr=igr, ftrace=ftrace, fn=fn, gr=gr, label="none")
>>>>>     envroot <<- list2env(groot) # Note globals in FnTrace
>>>>>     ## This generates a NOTE that
>>>>>     ## TraceSetup: no visible binding for '<<-' assignment to ?envroot?
>>>>> ##   envroot<-list2env(groot, parent=.GlobalEnv) # Note globals in FnTrace -
>>> - this does NOT work
>>>>>     ## utils::globalVariables("envroot") # Try declaring here --
>>>>> causes errors # end globals
>>>>>     envroot
>>>>> }
>>>>>
>>>>> FnTrace <- function(x,...) {
>>>>>    # Substitute function to call when rootfinding
>>>>>    # Evaluate fn(x, ...)
>>>>>      val <- envroot$fn(x, ...)
>>>>>      envroot$ifn <- envroot$ifn + 1 # probably more efficient ways
>>>>>      if (envroot$ftrace) {
>>>>>         cat("f(",x,")=",val," after ",envroot$ifn," ",envroot$label,"\n")
>>>>>      }
>>>>>      val
>>>>> }
>>>>>
>>>>>
>>>>> Perhaps there are better ways to do this, but this does seem to work quite
>>> well.
>>>>> It lets me call a rootfinder with FnTrace and get information on evaluations
>>> of fn().
>>>>> (There's another gr() routine, suppressed here.)
>>>>>
>>>>> However, R CMD check gives a NOTE for
>>>>>
>>>>>    TraceSetup: no visible binding for global variable ?envroot?
>>>>>    Undefined global functions or variables:
>>>>>      envroot
>>>>>
>>>>> The commented lines in TraceSetup suggest some of the things I've
>>>>> tried. Clearly I don't fully comprehend how R is grinding up the
>>>>> code, but searches on the net seem to indicate I am far from alone. Does
>>> anyone have any suggestion of a clean way to avoid the NOTE?
>>>>>
>>>>> JN
>>>>>
>>>>> ______________________________________________
>>>>> R-package-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From profjcn@@h @ending from gm@il@com  Tue Aug 28 21:15:44 2018
From: profjcn@@h @ending from gm@il@com (J C Nash)
Date: Tue, 28 Aug 2018 15:15:44 -0400
Subject: [R-pkg-devel] Trying to work around missing functionality
In-Reply-To: <438D2EC9EAFE5946B2D5864670EA468E018F68EAE2@MBXP01.ds.man.ac.uk>
References: <2ccf1cc0-14c6-1c6d-9a41-09331bec1ca7@gmail.com>
 <CAGx1TMDbY2bhTVj_gkCSgmp49Qkcq++XJowp2QySDP9G1VzJzA@mail.gmail.com>
 <12700_1535417296_w7S0mFhr003405_aa44d7d6-190b-f918-7e4e-b77c447afd5b@gmail.com>
 <ACD1644AA6C67E4FBD0C350625508EC8368A2702@FHSDB2D11-2.csu.mcmaster.ca>
 <00907346-60df-c223-ce6b-973718452ac2@gmail.com>
 <438D2EC9EAFE5946B2D5864670EA468E018F68EAE2@MBXP01.ds.man.ac.uk>
Message-ID: <591d5113-d366-906e-9eee-28fb61876542@gmail.com>

Thanks for this. Also Duncan's description of how code in the R directory is executed.

I've more or less figured out a workaround. Unfortunately Georgi's solution doesn't quite
do the trick. Here is my current understanding and solution.

Issue: I want to get root of a function of 1 parameter x, but there may be exogenous data Xdata.
       I also want to count the evaluations.
       Some rootfinders don't have counter and some don't allow "..."

Initial solution: Create global envroot with counters and such. Put name of function and
gradient in there, then use a dummy FnTrace (and possibly grTrace). This gave various
check complaints about globals etc. However, does appear to work.

Present approach: Slightly less flexible, but no complaints.
   Within rootwrap() which calls different rootfinders according to method="name", define
   FnTrace and grTrace, set up a list glist for the items I want to share, then
   envroot <- list2env(glist)

The FnTrace and grTrace are defined before the calls to rootfinders, so envroot can be found.
No globals. R CMD check is happy. However, I must call rootfinders via the wrapper, which is
actually simpler from point of view of syntax.

I've still some testing and tweaking, but I think main issues resolved by this.

Thanks to all who responded.

JN







On 2018-08-28 12:27 PM, Georgi Boshnakov wrote:
> If you don't insist on putting the variable in the global environment, 
> variations of the following give a cleaner solution:
> 
> TraceSetup_1 <- local({
>     ifn = 0
>     igr = 0
>     ftrace = FALSE
>     fn = NA
>     gr = NA
> 
>     function(ifn=0, igr=0, ftrace=FALSE, fn=NA, gr=NA){
>         ifn    <<- ifn
>         igr    <<- igr
>         ftrace <<- ftrace
>         fn     <<- fn
>         gr     <<- gr
>         parent.env(environment())
>     }
> })
> 
> For example,
> 
> TraceSetup_1 <- local({
> +     ifn = 0
> +     igr = 0
> +     ftrace = FALSE
> +     fn = NA
> +     gr = NA
> +     function(ifn=0, igr=0, ftrace=FALSE, fn=NA, gr=NA){
> +         ifn    <<- ifn
> +         igr    <<- igr
> +         ftrace <<- ftrace
> +         fn     <<- fn
> +         gr     <<- gr
> +         parent.env(environment())
> +     }
> + })
>>
>> e <- TraceSetup_1(fn = function(x) x^2)
>> ls(e)
> [1] "fn"     "ftrace" "gr"     "ifn"    "igr"   
>> e$fn
> function(x) x^2
> 
> ## let's change 'fn':
>> e$fn <- function(x) x^4
>> e$fn
> function(x) x^4
> 
> 
> Note that the environment is always the same, so can be accessed from anywhere in your code:
> 
>> e2 <- environment(TraceSetup_1)
>> e2
> <environment: 0x000000000d1af620>
>> identical(e2, e)
> [1] TRUE
>>
> 
> If you need a new environment every time, a basic setup might be:
> 
> TraceSetup_2 <- local({
>     staticVar1 <- NULL
>     ## other variables here
>     
>     function(ifn=0, igr=0, ftrace=FALSE, fn=NA, gr=NA){
>         ## force evaluation of the arguments
>         ifn    
>         igr    
>         ftrace 
>         fn     
>         gr     
>         environment()
>     }
> })
> 
> There is no need for local() here but usually one needs also some static variables.
> Now every call gives a different environment  (but all have the same parent):
> 
> ea <- TraceSetup_2(fn = function(x) x^2 - 2*x + 1)
>> ls(ea)
> [1] "fn"     "ftrace" "gr"     "ifn"    "igr"   
>> ea$fn
> function(x) x^2 - 2*x + 1
>>
>> eb <- TraceSetup_2(fn = function(x) x^2 + 1)
>> eb$fn
> function(x) x^2 + 1
>>
>> ## ea$fn is still the same:
>> ea$fn
> function(x) x^2 - 2*x + 1
>>
> 
> Obviously, in this case some further arrangements are  needed for the environments to be made available to the external world.
> 
> Hope this helps,
> Georgi Boshnakov
> 
> 
> -----Original Message-----
> From: R-package-devel [mailto:r-package-devel-bounces at r-project.org] On Behalf Of J C Nash
> Sent: 28 August 2018 14:18
> To: Fox, John; Richard M. Heiberger
> Cc: List r-package-devel
> Subject: Re: [R-pkg-devel] Trying to work around missing functionality
> 
> Indeed, it appears that globalVariables must be outside the function. However, I had quite a bit of
> fiddle to get things to work without errors or warnings or notes. While I now have a package that
> does not complain with R CMD check, I am far from satisfied that I can give a prescription. I had
> to remove lines in the rootfinder like
>    envroot$fn <- fn
> that were used to set the function to be used inside my instrumented function, and instead
> call TraceSetup(fn=fn, ...) where a similar statement was given. Why that worked while the direct
> assignment (note, not a <<- one) did not, I do not understand. However, I will work with this for
> a while and try to get a better handle on it.
> 
> Thanks for the pointer. As an old-time programmer from days when you even set the add table, I'm
> still uncomfortable just putting code in a directory and assuming it will be executed, i.e., the
> globals.R file. However, I now have this set to establish the global structure as follows
> 
>> ## Put in R directory. 
>> if(getRversion() >= "2.15.1") { utils::globalVariables(c('envroot')) } # Try declaring here 
>> groot<-list(ifn=0, igr=0, ftrace=FALSE, fn=NA, gr=NA, label="none")
>> envroot <- list2env(groot) # Note globals in FnTrace
> 
> Then TraceSetup() is
> 
>> TraceSetup <- function(ifn=0, igr=0, ftrace=FALSE, fn=NA, gr=NA){
>>    envroot$ifn <- ifn
>>    envroot$igr <- igr
>>    envroot$ftrace <- ftrace
>>    envroot$fn <- fn
>>    envroot$gr <- gr
>>    return()
>> }
> 
> and it is called at the start of the rootfinder routine.
> 
> Thus I am establishing a global, then (re-)setting values in TraceSetup(), then
> incrementing counters etc. in the instrumented FnTrace() that is the function for which I find
> the root, which calls fn() given by the "user". Messy, but I can now track progress and measure
> effort.
> 
> I'm sure there are cleaner solutions. I suggest offline discussion would be better until such
> options are clearer.
> 
> Thanks again.
> 
> JN
> 
> 
> 
> On 2018-08-28 12:01 AM, Fox, John wrote:
>> Hi John,
>>
>> It's possible that I didn?t follow what you did, but it appears as if you call globalVariables() *inside* the function. Instead try to do as Richard Heiberger suggested and place the call outside of the function, e.g., in a source file in the package R directory named globals.R. (Of course, the name of the source file containing the command isn?t important.)
>>
>> I hope this helps,
>>  John
>>
>> -----------------------------------------------------------------
>> John Fox
>> Professor Emeritus
>> McMaster University
>> Hamilton, Ontario, Canada
>> Web: https://socialsciences.mcmaster.ca/jfox/
>>
>>
>>
>>> -----Original Message-----
>>> From: R-package-devel [mailto:r-package-devel-bounces at r-project.org] On
>>> Behalf Of J C Nash
>>> Sent: Monday, August 27, 2018 8:44 PM
>>> To: Richard M. Heiberger <rmh at temple.edu>
>>> Cc: List r-package-devel <r-package-devel at r-project.org>
>>> Subject: Re: [R-pkg-devel] Trying to work around missing functionality
>>>
>>> Unfortunately, makes things much worse. I'd tried something like this already.
>>>
>>>> * checking examples ... ERROR
>>>> Running examples in ?rootoned-Ex.R? failed The error most likely
>>>> occurred in:
>>>>
>>>>> ### Name: rootwrap
>>>>> ### Title: zeroin: Find a single root of a function of one variable within
>>>>> ###   a specified interval.
>>>>> ### Aliases: rootwrap
>>>>> ### Keywords: root-finding
>>>>>
>>>>> ### ** Examples
>>>>>
>>>>> # Dekker example
>>>>> # require(rootoned)
>>>>> dek <- function(x){ 1/(x-3) - 6 }
>>>>> r1 <- rootwrap(dek, ri=c(3.0000001, 6), ftrace=TRUE,
>>>>> method="uniroot")
>>>> Error in registerNames(names, package, ".__global__", add) :
>>>>   The namespace for package "rootoned" is locked; no changes in the global
>>> variables list may be made.
>>>> Calls: rootwrap -> TraceSetup -> <Anonymous> -> registerNames
>>>> Execution halted
>>>
>>> Also had to use utils::globalVariables( ...
>>>
>>> JN
>>>
>>>
>>> On 2018-08-27 08:40 PM, Richard M. Heiberger wrote:
>>>> Does this solve the problem?
>>>>
>>>> if (getRversion() >= '2.15.1')
>>>>   globalVariables(c('envroot'))
>>>>
>>>> I keep this in file R/globals.R
>>>>
>>>> I learned of this from John Fox's use in Rcmdr.
>>>>
>>>> On Mon, Aug 27, 2018 at 8:28 PM, J C Nash <profjcnash at gmail.com>
>>> wrote:
>>>>> In order to track progress of a variety of rootfinding or
>>>>> optimization routines that don't report some information I want, I'm
>>>>> using the following setup (this one for rootfinding).
>>>>>
>>>>> TraceSetup <- function(ifn=0, igr=0, ftrace=FALSE, fn=NA, gr=NA){ #
>>>>> JN: Define globals here
>>>>>    groot<-list(ifn=ifn, igr=igr, ftrace=ftrace, fn=fn, gr=gr, label="none")
>>>>>    envroot <<- list2env(groot) # Note globals in FnTrace
>>>>>    ## This generates a NOTE that
>>>>>    ## TraceSetup: no visible binding for '<<-' assignment to ?envroot?
>>>>> ##   envroot<-list2env(groot, parent=.GlobalEnv) # Note globals in FnTrace -
>>> - this does NOT work
>>>>>    ## utils::globalVariables("envroot") # Try declaring here --
>>>>> causes errors # end globals
>>>>>    envroot
>>>>> }
>>>>>
>>>>> FnTrace <- function(x,...) {
>>>>>   # Substitute function to call when rootfinding
>>>>>   # Evaluate fn(x, ...)
>>>>>     val <- envroot$fn(x, ...)
>>>>>     envroot$ifn <- envroot$ifn + 1 # probably more efficient ways
>>>>>     if (envroot$ftrace) {
>>>>>        cat("f(",x,")=",val," after ",envroot$ifn," ",envroot$label,"\n")
>>>>>     }
>>>>>     val
>>>>> }
>>>>>
>>>>>
>>>>> Perhaps there are better ways to do this, but this does seem to work quite
>>> well.
>>>>> It lets me call a rootfinder with FnTrace and get information on evaluations
>>> of fn().
>>>>> (There's another gr() routine, suppressed here.)
>>>>>
>>>>> However, R CMD check gives a NOTE for
>>>>>
>>>>>   TraceSetup: no visible binding for global variable ?envroot?
>>>>>   Undefined global functions or variables:
>>>>>     envroot
>>>>>
>>>>> The commented lines in TraceSetup suggest some of the things I've
>>>>> tried. Clearly I don't fully comprehend how R is grinding up the
>>>>> code, but searches on the net seem to indicate I am far from alone. Does
>>> anyone have any suggestion of a clean way to avoid the NOTE?
>>>>>
>>>>> JN
>>>>>
>>>>> ______________________________________________
>>>>> R-package-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From d@hl @ending from @t@t@byu@edu  Tue Aug 28 22:19:00 2018
From: d@hl @ending from @t@t@byu@edu (David B. Dahl)
Date: Tue, 28 Aug 2018 22:19:00 +0200
Subject: [R-pkg-devel] 
 New test in R-devel causes existing packages to fail:
 "Error: connections left open"
In-Reply-To: <9b3989b5-e5b7-05e4-c5da-d0f715004826@statistik.tu-dortmund.de>
References: <CALivmgYpMS07FmXT12edvVo42SgeVXX7T-Y2K6Zcmib1ESXcXw@mail.gmail.com>
 <CABtg=Km=qpgF5bGDR=bVP7R7pS0iw=CTZygkm8+xerp2FhJhkA@mail.gmail.com>
 <CABtg=K=9S8rfHAt8xh-Xwg3+YxNGGpUZTV2W+GU513QxB8mfZQ@mail.gmail.com>
 <43752246-5d13-843a-2bd5-0b9b090ac00d@gmail.com>
 <ce821395-5b31-f0eb-7b8b-9dec32400506@statistik.tu-dortmund.de>
 <CALivmganYLaOqpewdA5QtAMAD9e72pAEddzeHrbvOcYSux9Dfg@mail.gmail.com>
 <CAFDcVCQcs=PcxSPU6Au9jigpTZcrzmrDrc_jGozAu1HPNYSCig@mail.gmail.com>
 <CALivmgZC-Yus+Wg6N_hf28JrRYMPiU+rwbytrzZ-h055PCKmOQ@mail.gmail.com>
 <9b3989b5-e5b7-05e4-c5da-d0f715004826@statistik.tu-dortmund.de>
Message-ID: <CALivmgbsvKxX_AiRfLpNFtdK5W2DJxrMAy3e3fNZ8bfH2MQ=og@mail.gmail.com>

Okay, Uwe, I will close the connection between examples.  Thanks Henrik,
Duncan, Gabor, and Uwe for participating in the discussion.

-- David

On Mon, Aug 27, 2018 at 4:47 PM Uwe Ligges <ligges at statistik.tu-dortmund.de>
wrote:
>
> I still do not undertsand why you cannot stop scala and related
> connections at the end of each example. You can insert a comment that
> this is not needed if you have follow up tasks for scala.
>
> Best,
> Uwe
>
> On 27.08.2018 07:14, David B. Dahl wrote:
> > Henrik,
> >
> > Thanks for the suggest.  Yes, definitely, I think your more nuanced
> > test would be a big improvement.  The only wrinkle is that the
> > connection is established *not* when the package is *loaded* but
> > rather when the connection is *first needed* (using delayedAssign when
> > the package is loaded).  That way, loading the package doesn't block
> > the REPL for ~5 seconds while Scala and the JVM first start.
> >
> > -- David
> >
> > On Thu, Aug 23, 2018 at 11:19 PM Henrik Bengtsson
> > <henrik.bengtsson at gmail.com> wrote:
> >>
> >> Does R CMD check --as-cran test for newly opened connections or any
> >> open connections?  Could the check for stray connection in
> >> examples/vignettes be:
> >>
> >> 1. Record what connections are open
> >> 2. Attach the package
> >> 3. Record what connections are open
> >> 4. Run the example
> >> 5. Assert that no *new* connections in addition to what's recorded in
> >> Step 3 are open
> >> 6. Unload the package
> >> 7. Assert that no *new* connections in addition to what's recorded in
> >> Step 1 are open
> >>
> >> Step 5 asserts that the code in the example does not leave stray
> >> connections behind, and Step 7 that the package itself does not leave
> >> stray connections behind.
> >>
> >> /Henrik
> >> On Thu, Aug 23, 2018 at 1:25 PM David B. Dahl <dahl at stat.byu.edu>
wrote:
> >>>
> >>> Oops, I accidentally did not "reply-all".... Here is my message:
> >>>
> >>> Thanks Uwe, Duncan, and Gabor for the response, advise, and
flexibility.
> >>>
> >>> Regarding Uwe's suggestion:  "... there should be a function that
> >>> creates the connction and one that closes the connection," I should
> >>> clarify.  The rscala package does just that.  There is a function
> >>> (named "scala") that creates the connection (using delayedAssign) and
> >>> another the closes the function (namely an S3 close method).  The
> >>> examples for the rscala package do this full open/close semantics,
> >>> but...
> >>>
> >>> The problem comes when authors of another package, let's call it the
> >>> "FooBar" package, want to implement an algorithm in Scala based on
> >>> functionality provided by the rscala package.  Let's say they write a
> >>> function called "neatAlgorithm" based on Scala.  Yes, the FooBar
> >>> package author could require that, before the user calls the
> >>> "neatAlgorithm" function, they first call a function to set up the
> >>> connection (which itself would call the "rscala::scala" function) and
> >>> then, after calling the "neatAlgorithm" function, they call a function
> >>> to close the connection.
> >>>
> >>> But that is not very user friendly and exposes the user to
> >>> implementation details of the algorithm.  The user of the FooBar
> >>> package don't really care whether the "neatAlgorithm" is implemented
> >>> in pure R, C++, Scala, or whatever, much like the users of the 'lm'
> >>> function don't need to know the implementation details or do any setup
> >>> before and after calling the function.
> >>>
> >>> The current approach is that the connection to Scala is transparent to
> >>> the end user of a package.  Behind the scenes, the package author
> >>> establish the connection once it is needed and the rscala package
> >>> manages the connection and explicitly closes it when 1. the package is
> >>> unloaded or 2. the R session ends.  This approach does not leave
> >>> dangling connections  --- which I believe is the point of the new test
> >>> --- yet my package is caught up in the test.
> >>>
> >>> I hope that this approach is still valid.  Perhaps the test could
> >>> result in a warning (instead of an error) and CRAN could accept
> >>> packages with such a warning.
> >>>
> >>> If not, a work-around is to have a \dontshow section in the examples
> >>> that will close the connection (but leave the Scala process running)
> >>> and then automatically reestablish the connection as needed.  This
> >>> would not be very efficient but, as Duncan mentioned, it mostly only
> >>> effects the package examples themselves.  Plus, it would not be too
> >>> burdensome for package developers.
> >>>
> >>> Again, thanks for considering my situation.
> >>>
> >>> Best regards,
> >>>
> >>> -- David
> >>>
> >>> On Mon, Aug 20, 2018 at 11:11 PM Uwe Ligges
> >>> <ligges at statistik.tu-dortmund.de> wrote:
> >>>>
> >>>> My advise:
> >>>>
> >>>> Apparently you want to have communication via sockets to scala.
> >>>>
> >>>> So there should be a function that creates the connction and one tha
> >>>> closes the connection.
> >>>> Comparable to starting some parallel cluster and stopping it again.
> >>>>
> >>>> In the meantime, you can allow for all sorts of communication.
> >>>>
> >>>> So that's fine.
> >>>>
> >>>> Then in your examples, simply design them to be standalone, i.e. in
> >>>> *your* examples always start the connection and stop it again at the
end
> >>>> of one examples block, i.e. the exampels defined in one Rd file.
> >>>>
> >>>> Best,
> >>>> Uwe Ligges
> >>>>
> >>>>
> >>>>
> >>>> On 20.08.2018 02:11, Duncan Murdoch wrote:
> >>>>> On 19/08/2018 12:34 PM, G?bor Cs?rdi wrote:
> >>>>>> Sorry, missed that these were examples, so, yeah, that's harder.
G.
> >>>>>
> >>>>> How about a function that checks if the connection is open before
doing
> >>>>> anything, and then at the end you close it if it wasn't already
open?
> >>>>> This will make all examples run slower on CRAN, but won't affect
most
> >>>>> users who are doing their own stuff as well as running examples.
> >>>>>
> >>>>> Or, how about the startup code for the package opens the connection?
> >>>>>
> >>>>> Or perhaps CRAN will respond to this thread with another suggestion.
> >>>>>
> >>>>> Duncan Murdoch
> >>>>>
> >>>>>
> >>>>>> On Sun, Aug 19, 2018 at 6:32 PM G?bor Cs?rdi <
csardi.gabor at gmail.com>
> >>>>>> wrote:
> >>>>>>>
> >>>>>>> You could just create a function to close the connection and then
> >>>>>>> people could call it at the end of their test suites. >>
> >>>>>>> Gabor
> >>>>>>> On Sun, Aug 19, 2018 at 6:22 PM David B. Dahl <dahl at stat.byu.edu>
wrote:
> >>>>>>>>
> >>>>>>>> In preparing to submit an update of my package to CRAN, I found
that
> >>>>>>>> R-devel has a new test regarding "connects left open" that my
packages
> >>>>>>>> fail.  The new test appears to have been committed by Uwe Ligges
in
> >>>>>>>> revisions 74959 and 74964 on 2018-07-14 and 2018-07-15,
respectively.
> >>>>>>>> The commit message says, "check after each example whether open
> >>>>>>>> connections exist, indicating e.g. file connections were left
open or
> >>>>>>>> parallel clusters still running."
> >>>>>>>>
> >>>>>>>> I am hoping for advice on how to pass "R CMD check --as-cran".
Or,
> >>>>>>>> perhaps my situation will prompt a change to the test or, at
least,
> >>>>>>>> having it result in a warning instead of an error.
> >>>>>>>>
> >>>>>>>> Below I describe the situation.  My rscala package allows
developers
> >>>>>>>> to write R packages based on Scala (much like rJava and Rcpp for
Java
> >>>>>>>> and C++, respectively).  Scala runs as a separate process and
> >>>>>>>> interprocess communication is implemented using socket
connections.
> >>>>>>>>
> >>>>>>>> Suppose a package using rscala has functions that call Scala
code.
> >>>>>>>> (Such packages are 'bamboo', 'sdols', and 'shallot' on CRAN.)
The
> >>>>>>>> first time a user executes an R function calling down into
Scala, a
> >>>>>>>> socket connect between Scala and R is established.  For the sake
of
> >>>>>>>> low latency, after the call to the function ends, the connection
stays
> >>>>>>>> open until the package is unloaded or the R session ends.  But,
this
> >>>>>>>> approach runs afoul of the new test mentioned above that appears
to be
> >>>>>>>> designed to catch connections that are *accidentally* left open.
> >>>>>>>>
> >>>>>>>> I definitely do not want to users of my packages 'bamboo',
'sdols',
> >>>>>>>> and 'shallot' to have to think about managing connection between
Scala
> >>>>>>>> and R.  That's an implementation detail and uing the package
should be
> >>>>>>>> transparent for the user (who doesn't care about the
implementation
> >>>>>>>> details).
> >>>>>>>>
> >>>>>>>> On my end, I see two solutions:  1. I could try to reengineer my
> >>>>>>>> approach --- establishing a new connection for every single call
into
> >>>>>>>> Scala --- although I am loath to do anything to increase the
latency,
> >>>>>>>> or 2. I could wrap all the examples in \donttest so that CRAN
checks
> >>>>>>>> are passed.
> >>>>>>>>
> >>>>>>>> Or, again, perhaps my situation will prompt a reevaluation of the
> >>>>>>>> test.  Perhaps it could result in a warning (instead of an
error) and
> >>>>>>>> the CRAN maintainers would accept packages with such a warning.
> >>>>>>>>
> >>>>>>>> Any advise?  Thanks a lot!
> >>>>>>>>
> >>>>>>>> -- David
> >>>>>>>>
> >>>>>>>> ______________________________________________
> >>>>>>>> R-package-devel at r-project.org mailing list
> >>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>>>>>
> >>>>>> ______________________________________________
> >>>>>> R-package-devel at r-project.org mailing list
> >>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>>>>>
> >>>>>
> >>>>> ______________________________________________
> >>>>> R-package-devel at r-project.org mailing list
> >>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>>
> >>> ______________________________________________
> >>> R-package-devel at r-project.org mailing list
> >>> https://stat.ethz.ch/mailman/listinfo/r-package-devel

	[[alternative HTML version deleted]]


From @ng@diub @ending from gm@il@com  Thu Aug 30 07:03:18 2018
From: @ng@diub @ending from gm@il@com (Ulavappa Angadi)
Date: Thu, 30 Aug 2018 10:33:18 +0530
Subject: [R-pkg-devel] how to fix checking S3 generic/method consistency ...
 WARNING
Message-ID: <CAJ4Qip_La1h=UKePV7x0sO72NWimf8Fm-oH1n2CAeH61w5p2Gw@mail.gmail.com>

Dear sir

How to fix the below problem and details as below kindly help


* checking S3 generic/method consistency ... WARNING
mbferns:
  function(x, ...)
mbferns.default:
  function(x, y, nf, fsize, bnum)

predict:
  function(object, ...)
predict.mbferns:
  function(model1, x)

See section 'Generic functions and methods' in the 'Writing R
Extensions' manual.

NAMESPACE as below
xport(mbferns)

S3method(predict,mbferns)
S3method(mbferns,default)

useDynLib(mbFerns,mbrfern,mbrfern_predict)

import(plyr)
import(mlbench)

Functions are as below in Mulit_Branch_Ferns.R
mbferns<-function(x,...)
 { UseMethod("mbferns")}

mbferns.default <- function(x, y, nf=2, fsize=4, bnum=4) {
xx <- .C("mbrfern", as.double(xm), as.integer(y), as.integer(nc),
as.integer(nr), as.integer(c),  as.integer(nf), as.integer(fsize),
as.integer(bnum), xmin1=double(nc), xmax1=double(nc),
flist1=integer(nf*fsize), pc=double(c), w=integer(ws))
  model<-list(nc=xx[[3]], c=xx[[5]], nf=xx[[6]], fsize=xx[[7]],
bnum=xx[[8]], min=xx$xmin1, max=xx$xmax1, flist=xx$flist1, w=xx$w,
ylist=ylist, pc=xx$pc)

  class(model)<-"mbferns"

   return(model)
}

predict.mbferns <- function(model1, x) {

w1dens <- .C("mbrfern_predict", as.double(xm),  as.integer(model1$nc),
as.integer(nr), as.integer(model1$c),  as.integer(model1$nf),
as.integer(model1$fsize), as.integer(model1$bnum), as.double(model1$min),
as.double(model1$max), as.integer(model1$flist), as.integer(model1$w),
as.double(model1$pc), ye=integer(nr), prob=double(nr*model1$c) )

}
With regards

Angadi U B
Sr. Scientist
CABin, IASRI, Pusa, New Delhi

	[[alternative HTML version deleted]]


From iuc@r @ending from fedor@project@org  Thu Aug 30 10:21:05 2018
From: iuc@r @ending from fedor@project@org (=?UTF-8?Q?I=C3=B1aki_Ucar?=)
Date: Thu, 30 Aug 2018 10:21:05 +0200
Subject: [R-pkg-devel] 
 how to fix checking S3 generic/method consistency ... WARNING
In-Reply-To: <CAJ4Qip_La1h=UKePV7x0sO72NWimf8Fm-oH1n2CAeH61w5p2Gw@mail.gmail.com>
References: <CAJ4Qip_La1h=UKePV7x0sO72NWimf8Fm-oH1n2CAeH61w5p2Gw@mail.gmail.com>
Message-ID: <CALEXWq0KNTLmY7OT540CSJRRFa1Uq7AOJsErQzoV-1L9EmTMHQ@mail.gmail.com>

El jue., 30 ago. 2018 a las 9:02, Ulavappa Angadi
(<angadiub at gmail.com>) escribi?:
>
> Dear sir
>
> How to fix the below problem and details as below kindly help
>
>
> * checking S3 generic/method consistency ... WARNING
> mbferns:
>   function(x, ...)
> mbferns.default:
>   function(x, y, nf, fsize, bnum)
>
> predict:
>   function(object, ...)
> predict.mbferns:
>   function(model1, x)

There is a problem in the method signature, as highlighted above.

> See section 'Generic functions and methods' in the 'Writing R
> Extensions' manual.

And this is the relevant section of the manual, where we can read the following:

- A method must have all the arguments of the generic, including ? if
the generic does.

So the dots ("...") are missing in mbferns.default and
predict.mbferns, and also "model1" should be called "object", instead,
in predict.mbferns.

I?aki

>
> NAMESPACE as below
> xport(mbferns)
>
> S3method(predict,mbferns)
> S3method(mbferns,default)
>
> useDynLib(mbFerns,mbrfern,mbrfern_predict)
>
> import(plyr)
> import(mlbench)
>
> Functions are as below in Mulit_Branch_Ferns.R
> mbferns<-function(x,...)
>  { UseMethod("mbferns")}
>
> mbferns.default <- function(x, y, nf=2, fsize=4, bnum=4) {
> xx <- .C("mbrfern", as.double(xm), as.integer(y), as.integer(nc),
> as.integer(nr), as.integer(c),  as.integer(nf), as.integer(fsize),
> as.integer(bnum), xmin1=double(nc), xmax1=double(nc),
> flist1=integer(nf*fsize), pc=double(c), w=integer(ws))
>   model<-list(nc=xx[[3]], c=xx[[5]], nf=xx[[6]], fsize=xx[[7]],
> bnum=xx[[8]], min=xx$xmin1, max=xx$xmax1, flist=xx$flist1, w=xx$w,
> ylist=ylist, pc=xx$pc)
>
>   class(model)<-"mbferns"
>
>    return(model)
> }
>
> predict.mbferns <- function(model1, x) {
>
> w1dens <- .C("mbrfern_predict", as.double(xm),  as.integer(model1$nc),
> as.integer(nr), as.integer(model1$c),  as.integer(model1$nf),
> as.integer(model1$fsize), as.integer(model1$bnum), as.double(model1$min),
> as.double(model1$max), as.integer(model1$flist), as.integer(model1$w),
> as.double(model1$pc), ye=integer(nr), prob=double(nr*model1$c) )
>
> }
> With regards
>
> Angadi U B
> Sr. Scientist
> CABin, IASRI, Pusa, New Delhi
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel



-- 
I?aki Ucar


From cdeterm@njr @ending from gm@il@com  Thu Aug 30 15:34:57 2018
From: cdeterm@njr @ending from gm@il@com (Charles Determan)
Date: Thu, 30 Aug 2018 08:34:57 -0500
Subject: [R-pkg-devel] Changing License
Message-ID: <CAKxd1KOHOwWh7Nb=Zi8E8FXLSKuDLnpyT4sKGm+NudkPzXCGog@mail.gmail.com>

R developers,

It has come to my attention that some of the code I am distributing in one
of my packages was previously licensed under the MIT license.  I have
previously released my package under the GPL-3 license.  Would it be more
appropriate for me to change the license to MIT?  I know no one here is
likely a lawyer but I would like to hear if there is any issue in changing
a license of a currently released package as it is my understanding that my
package should have the MIT license instead.

Regards,
Charles

	[[alternative HTML version deleted]]


From edd @ending from debi@n@org  Thu Aug 30 16:15:00 2018
From: edd @ending from debi@n@org (Dirk Eddelbuettel)
Date: Thu, 30 Aug 2018 09:15:00 -0500
Subject: [R-pkg-devel] Changing License
In-Reply-To: <CAKxd1KOHOwWh7Nb=Zi8E8FXLSKuDLnpyT4sKGm+NudkPzXCGog@mail.gmail.com>
References: <CAKxd1KOHOwWh7Nb=Zi8E8FXLSKuDLnpyT4sKGm+NudkPzXCGog@mail.gmail.com>
Message-ID: <23431.64484.274516.62017@rob.eddelbuettel.com>


On 30 August 2018 at 08:34, Charles Determan wrote:
| It has come to my attention that some of the code I am distributing in one
| of my packages was previously licensed under the MIT license.  I have
| previously released my package under the GPL-3 license.  Would it be more
| appropriate for me to change the license to MIT?  I know no one here is
| likely a lawyer but I would like to hear if there is any issue in changing
| a license of a currently released package as it is my understanding that my
| package should have the MIT license instead.

It is my understanding that this is "additive" where licenses are compatible.

Look eg at R itself. It is under GPL-2+ but contains code from other folks
released under compatible licenses -- as document more precisely in this file

  https://github.com/wch/r-source/blob/trunk/doc/COPYRIGHTS

which enumerates which files (or sets of files and directories) have
different copyrights as well as licenses (these terms frequently get mangled,
this file does too).

As another reference point, Debian formalised something similar in the
prescribed format for debian/copyright files (typically installed as
/usr/share/doc/${PACKAGE}/copyright for a given package) where sets of files
are enumerated and both the copyright and license are stated.  See eg

  https://www.debian.org/doc/packaging-manuals/copyright-format/1.0/

for all the gory details.

So in short, I think you can simply include a file stating which of the files
you re-use are copyrighted by which authors and released under which
license. _Your work extending and using those files_ as contained in your
package can happily remain under GPL-3 as does the aggregation, while the
components your refer to remain in eg MIT.

Makes sense?

Dirk
#notALawyerDisclaimerIfYouNeedIt

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From thom@@@petzoldt @ending from tu-dre@den@de  Thu Aug 30 16:29:09 2018
From: thom@@@petzoldt @ending from tu-dre@den@de (Thomas Petzoldt)
Date: Thu, 30 Aug 2018 16:29:09 +0200
Subject: [R-pkg-devel] Changing License
In-Reply-To: <CAKxd1KOHOwWh7Nb=Zi8E8FXLSKuDLnpyT4sKGm+NudkPzXCGog@mail.gmail.com>
References: <CAKxd1KOHOwWh7Nb=Zi8E8FXLSKuDLnpyT4sKGm+NudkPzXCGog@mail.gmail.com>
Message-ID: <bc8e6d22-eed6-3395-0489-c51d186b255d@tu-dresden.de>

Hi,

we had a related discussion some time ago in the JSS editorial board. It 
was a long and partly emotional discussion of the pros and cons, but the 
good news was that if a code is MIT, it can be re-licensed as GPL, while 
it would not not be possible in the opposite direction (except by the 
original copyright holders).

MIT is less political and more permissive than GPL, but its disadvantage 
is that someone can take your code, create derived work and then sell 
the derived work as closed source. Even the original developers may be 
excluded from derived work, or have to pay for it.

The JSS board discussion ended with a request in 
https://www.jstatsoft.org/pages/view/authors
that

"Code needs to include the GNU General Public Licence (GPL), versions 
GPL-2 or GPL-3, or a GPL-compatible license for publication in JSS."


where MIT or BSD can be considered as GPL compatible, while packages 
with some other licenses my need explicit double-licensing by the 
copyright holder, see also:

https://en.wikipedia.org/wiki/License_compatibility

"Many of the most common free-software licenses, especially the 
permissive licenses, such as the original MIT/X license, BSD licenses 
(in the three-clause and two-clause forms, though not the original 
four-clause form), MPL 2.0, and LGPL, are GPL-compatible. That is, their 
code can be combined with a program under the GPL without conflict, and 
the new combination would have the GPL applied to the whole (but the 
other license would not so apply)."


I would therefore recommend GPL, and you don't make something wrong if 
you re-license derived work using MIT-licensed code under the GPL.

Thomas

PS: this is my personal conclusion, I am not a lawyer.

-- 
Dr. Thomas Petzoldt
http://tu-dresden.de/Members/thomas.petzoldt


From @ng@diub @ending from gm@il@com  Fri Aug 31 08:43:36 2018
From: @ng@diub @ending from gm@il@com (Ulavappa Angadi)
Date: Fri, 31 Aug 2018 12:13:36 +0530
Subject: [R-pkg-devel] How o fix this NOTE Maintainer
Message-ID: <CAJ4Qip9Y8UnL7-C4v3UoYDDtO2aEpZS2XZjHkDwfGxaLrnJfVw@mail.gmail.com>

Dear sir

how fix this note

checking CRAN incoming feasibility ... NOTEMaintainer: 'Ulavappa B.
Angadi <angadiub at gmail.com>'

With regards

Angadi U B
Sr. Scientist
CABin, IASRI, Pusa, New Delhi

	[[alternative HTML version deleted]]


From @lex@ndre@courtiol @ending from gm@il@com  Fri Aug 31 09:31:14 2018
From: @lex@ndre@courtiol @ending from gm@il@com (Alexandre Courtiol)
Date: Fri, 31 Aug 2018 09:31:14 +0200
Subject: [R-pkg-devel] How o fix this NOTE Maintainer
In-Reply-To: <CAJ4Qip9Y8UnL7-C4v3UoYDDtO2aEpZS2XZjHkDwfGxaLrnJfVw@mail.gmail.com>
References: <CAJ4Qip9Y8UnL7-C4v3UoYDDtO2aEpZS2XZjHkDwfGxaLrnJfVw@mail.gmail.com>
Message-ID: <CAERMt4f03htbAbeCbBh7iiVPh=hwX0DP-OShTATqq4JeZehnMA@mail.gmail.com>

It's all good, this is not a problem.

On Fri, 31 Aug 2018, 08:44 Ulavappa Angadi, <angadiub at gmail.com> wrote:

> Dear sir
>
> how fix this note
>
> checking CRAN incoming feasibility ... NOTEMaintainer: 'Ulavappa B.
> Angadi <angadiub at gmail.com>'
>
> With regards
>
> Angadi U B
> Sr. Scientist
> CABin, IASRI, Pusa, New Delhi
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From ligge@ @ending from @t@ti@tik@tu-dortmund@de  Fri Aug 31 10:02:32 2018
From: ligge@ @ending from @t@ti@tik@tu-dortmund@de (Uwe Ligges)
Date: Fri, 31 Aug 2018 10:02:32 +0200
Subject: [R-pkg-devel] How o fix this NOTE Maintainer
In-Reply-To: <CAJ4Qip9Y8UnL7-C4v3UoYDDtO2aEpZS2XZjHkDwfGxaLrnJfVw@mail.gmail.com>
References: <CAJ4Qip9Y8UnL7-C4v3UoYDDtO2aEpZS2XZjHkDwfGxaLrnJfVw@mail.gmail.com>
Message-ID: <ef8b7475-f35e-bfc5-6759-49c0f1762790@statistik.tu-dortmund.de>



On 31.08.2018 08:43, Ulavappa Angadi wrote:
> Dear sir
> 
> how fix this note
> 
> checking CRAN incoming feasibility ... NOTEMaintainer: 'Ulavappa B.
> Angadi <angadiub at gmail.com>'

This is a Note to CRAN maintainers that is fine as is.

Best,
Uwe Ligges



> With regards
> 
> Angadi U B
> Sr. Scientist
> CABin, IASRI, Pusa, New Delhi
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From d@hl @ending from @t@t@byu@edu  Tue Sep  4 04:18:21 2018
From: d@hl @ending from @t@t@byu@edu (David B. Dahl)
Date: Mon, 3 Sep 2018 20:18:21 -0600
Subject: [R-pkg-devel] Downloading software as part of package installation
Message-ID: <CALivmgZczj1Ux7CXwuA8UFRk1sO8v=PHMvaAUfc+xyr0u=Yc-w@mail.gmail.com>

I would like advise and help in interpreting a part of the CRAN
Repository Policy.  It states, "Downloads of additional software or
data as part of package installation or startup should only use secure
download mechanisms (e.g., ?https? or ?ftps?)."

>From this, I take that it is permissible for a package to use its
.onLoad function to download and install files in the package's
subdirectory.  E.g., for the package 'foo', the .onLoad function could
place items in a subdirectory of 'system.file(package="foo")'.  Since
package installation called the .onLoad function when "testing if
installed package can be loaded," this would work (assuming the
computer has internet access at the time, otherwise the download could
be skipped).  Once downloaded, the package wouldn't need to download
it ever again.

The benefit of this approach is that the additional software is
automatically downloaded when the package is installed, rather than
the user knowing they having to manually call a special function to
download the software (to another location) after package
installation.

Does this seem like a valid approach for CRAN?

And, does the answer change when I get R CMD check says:

checking installed package size ... NOTE
  installed size is 182.1Mb

This is just a NOTE, so my understanding is that is permissible.

Any thoughts?  Thanks!!

-- David


From edd @ending from debi@n@org  Tue Sep  4 16:36:00 2018
From: edd @ending from debi@n@org (Dirk Eddelbuettel)
Date: Tue, 4 Sep 2018 09:36:00 -0500
Subject: [R-pkg-devel] How do I prevent macOS from attempting to build my
 package?
Message-ID: <23438.38992.372103.290531@rob.eddelbuettel.com>


Package status reports come in three different severities: NOTE, WARNING, and
ERROR. Motivated by Brodie's nice (dependency-free) accessor function for
per-maintainer status [1],  I have looked into reducing the number of ERRORs.

I hit a road block. Several of my packages depend on external libraries that
must be present. I test for these in configure, but their absence is still an
ERROR.  This makes the situation on macOS a little delicate. Simon, who is
doing, and always done, a metric ton of work around R and OS X / maxOS is the
only one who could change this but I cannot realistically ask him to keep a
number of (in some cases more difficult or esoteric) libraries afloat. And
some of these have now been missing on his platform for several years.

And in one case (RcppAPT, requiring libapt-dev) the build is even
imppossible.  Now, the Fedora maintainer knows this and has the build
blacklisted.

Hence:

  R> source("checkCRAN.R")                            
                 Package ERROR WARN NOTE OK
  [...]
  23             RcppAPT     2            4
  [...]

No failures from Fedora.  But two from macOS which I can never ever get rid
off (unless I do silly code acrobatics by #ifdef'ing all real code away).

So here is my question:  Can we we please refine

  OS_type: unix

a little more, and/or maybe allow other blacklists in the package upload?

Thoughts or comments most welcome.

Thanks,  Dirk



[1] https://gist.github.com/brodieG/e60c94d4036f45018530ea504258bcf3#file-cran-check-r

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From ligge@ @ending from @t@ti@tik@tu-dortmund@de  Tue Sep  4 17:02:33 2018
From: ligge@ @ending from @t@ti@tik@tu-dortmund@de (Uwe Ligges)
Date: Tue, 4 Sep 2018 17:02:33 +0200
Subject: [R-pkg-devel] 
 Downloading software as part of package installation
In-Reply-To: <CALivmgZczj1Ux7CXwuA8UFRk1sO8v=PHMvaAUfc+xyr0u=Yc-w@mail.gmail.com>
References: <CALivmgZczj1Ux7CXwuA8UFRk1sO8v=PHMvaAUfc+xyr0u=Yc-w@mail.gmail.com>
Message-ID: <8b82428f-505b-d1e8-d6f6-caf130a8f33e@statistik.tu-dortmund.de>



On 04.09.2018 04:18, David B. Dahl wrote:
> I would like advise and help in interpreting a part of the CRAN
> Repository Policy.  It states, "Downloads of additional software or
> data as part of package installation or startup should only use secure
> download mechanisms (e.g., ?https? or ?ftps?)."
> 
>  From this, I take that it is permissible for a package to use its
> .onLoad function to download and install files in the package's
> subdirectory.  E.g., for the package 'foo', the .onLoad function could
> place items in a subdirectory of 'system.file(package="foo")'.  Since
> package installation called the .onLoad function when "testing if
> installed package can be loaded," this would work (assuming the
> computer has internet access at the time, otherwise the download could
> be skipped).  Once downloaded, the package wouldn't need to download
> it ever again.
> 
> The benefit of this approach is that the additional software is
> automatically downloaded when the package is installed, rather than
> the user knowing they having to manually call a special function to
> download the software (to another location) after package
> installation.
> 
> Does this seem like a valid approach for CRAN?
> 
> And, does the answer change when I get R CMD check says:
> 
> checking installed package size ... NOTE
>    installed size is 182.1Mb

Think about license issues:
A binary CRAN package (e.g. for Mac or Windows) will contain that other 
software while the source package does not. Hence it may be a license 
violation depoending on the license of the software you download.

Best,
Uwe Ligges


> This is just a NOTE, so my understanding is that is permissible.
> 
> Any thoughts?  Thanks!!
> 
> -- David
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From ligge@ @ending from @t@ti@tik@tu-dortmund@de  Tue Sep  4 17:07:54 2018
From: ligge@ @ending from @t@ti@tik@tu-dortmund@de (Uwe Ligges)
Date: Tue, 4 Sep 2018 17:07:54 +0200
Subject: [R-pkg-devel] 
 How do I prevent macOS from attempting to build my package?
In-Reply-To: <23438.38992.372103.290531@rob.eddelbuettel.com>
References: <23438.38992.372103.290531@rob.eddelbuettel.com>
Message-ID: <96256205-4435-fd3d-bbd2-56565695170a@statistik.tu-dortmund.de>



On 04.09.2018 16:36, Dirk Eddelbuettel wrote:
> 
> Package status reports come in three different severities: NOTE, WARNING, and
> ERROR. Motivated by Brodie's nice (dependency-free) accessor function for
> per-maintainer status [1],  I have looked into reducing the number of ERRORs.
> 
> I hit a road block. Several of my packages depend on external libraries that
> must be present. I test for these in configure, but their absence is still an
> ERROR.  This makes the situation on macOS a little delicate. Simon, who is
> doing, and always done, a metric ton of work around R and OS X / maxOS is the
> only one who could change this but I cannot realistically ask him to keep a
> number of (in some cases more difficult or esoteric) libraries afloat. And
> some of these have now been missing on his platform for several years.
> 
> And in one case (RcppAPT, requiring libapt-dev) the build is even
> imppossible.  Now, the Fedora maintainer knows this and has the build
> blacklisted.
> 
> Hence:
> 
>    R> source("checkCRAN.R")
>                   Package ERROR WARN NOTE OK
>    [...]
>    23             RcppAPT     2            4
>    [...]
> 
> No failures from Fedora.  But two from macOS which I can never ever get rid
> off (unless I do silly code acrobatics by #ifdef'ing all real code away).
> 
> So here is my question:  Can we we please refine
> 
>    OS_type: unix
> 
> a little more, and/or maybe allow other blacklists in the package upload?
> 
> Thoughts or comments most welcome.

Comments:

Disclaimer for this field in general (as others are listening, too): we 
should always try not to use it alt all and produce cross platform code.


In your specific case: You can try to ask Simon or discuss this on 
R-devel so that most R-core members will read this, too.

Best,
Uwe





> 
> Thanks,  Dirk
> 
> 
> 
> [1] https://gist.github.com/brodieG/e60c94d4036f45018530ea504258bcf3#file-cran-check-r
>


From edd @ending from debi@n@org  Tue Sep  4 17:18:55 2018
From: edd @ending from debi@n@org (Dirk Eddelbuettel)
Date: Tue, 4 Sep 2018 10:18:55 -0500
Subject: [R-pkg-devel] 
 How do I prevent macOS from attempting to build my package?
In-Reply-To: <96256205-4435-fd3d-bbd2-56565695170a@statistik.tu-dortmund.de>
References: <23438.38992.372103.290531@rob.eddelbuettel.com>
 <96256205-4435-fd3d-bbd2-56565695170a@statistik.tu-dortmund.de>
Message-ID: <23438.41567.502203.852829@rob.eddelbuettel.com>


On 4 September 2018 at 17:07, Uwe Ligges wrote:
| Disclaimer for this field in general (as others are listening, too): we 
| should always try not to use it alt all and produce cross platform code.

It would be nice if the CRAN system was more open so that contributed builds
could be used. With my Debian hat on I have at times "cheated" by packaging a
library so that Kurt would have it on the Debian machines he uses. But I have
no means to influence Simon's machine, nor the option to have my package
built or tested elsewhere for that particular OS.
 
| In your specific case: You can try to ask Simon or discuss this on 
| R-devel so that most R-core members will read this, too.

Posted to r-devel.

Cheers, Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From d@hl @ending from @t@t@byu@edu  Wed Sep  5 00:56:18 2018
From: d@hl @ending from @t@t@byu@edu (David B. Dahl)
Date: Tue, 4 Sep 2018 16:56:18 -0600
Subject: [R-pkg-devel] 
 Downloading software as part of package installation
In-Reply-To: <8b82428f-505b-d1e8-d6f6-caf130a8f33e@statistik.tu-dortmund.de>
References: <CALivmgZczj1Ux7CXwuA8UFRk1sO8v=PHMvaAUfc+xyr0u=Yc-w@mail.gmail.com>
 <8b82428f-505b-d1e8-d6f6-caf130a8f33e@statistik.tu-dortmund.de>
Message-ID: <CALivmgaAmawtgESf75wAtw0+=vCfWJ=3o=RaX1H5J2BJm32haQ@mail.gmail.com>

Uwe:  Oh, right, I wasn't thinking about binary packages.  Thanks!  -- David
On Tue, Sep 4, 2018 at 9:02 AM Uwe Ligges
<ligges at statistik.tu-dortmund.de> wrote:
>
>
>
> On 04.09.2018 04:18, David B. Dahl wrote:
> > I would like advise and help in interpreting a part of the CRAN
> > Repository Policy.  It states, "Downloads of additional software or
> > data as part of package installation or startup should only use secure
> > download mechanisms (e.g., ?https? or ?ftps?)."
> >
> >  From this, I take that it is permissible for a package to use its
> > .onLoad function to download and install files in the package's
> > subdirectory.  E.g., for the package 'foo', the .onLoad function could
> > place items in a subdirectory of 'system.file(package="foo")'.  Since
> > package installation called the .onLoad function when "testing if
> > installed package can be loaded," this would work (assuming the
> > computer has internet access at the time, otherwise the download could
> > be skipped).  Once downloaded, the package wouldn't need to download
> > it ever again.
> >
> > The benefit of this approach is that the additional software is
> > automatically downloaded when the package is installed, rather than
> > the user knowing they having to manually call a special function to
> > download the software (to another location) after package
> > installation.
> >
> > Does this seem like a valid approach for CRAN?
> >
> > And, does the answer change when I get R CMD check says:
> >
> > checking installed package size ... NOTE
> >    installed size is 182.1Mb
>
> Think about license issues:
> A binary CRAN package (e.g. for Mac or Windows) will contain that other
> software while the source package does not. Hence it may be a license
> violation depoending on the license of the software you download.
>
> Best,
> Uwe Ligges
>
>
> > This is just a NOTE, so my understanding is that is permissible.
> >
> > Any thoughts?  Thanks!!
> >
> > -- David
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >


From R@iner @ending from krug@@de  Wed Sep  5 09:28:31 2018
From: R@iner @ending from krug@@de (Rainer Krug)
Date: Wed, 5 Sep 2018 09:28:31 +0200
Subject: [R-pkg-devel] Submission to CRAN when package needs personal data
 (API key)
Message-ID: <DBD7AB1C-0A0A-4E9F-BA60-4A3ADB4F9E3F@krugs.de>

Hi

I have a package at GitHub (https://github.com/rkrug/ROriginStamp) which I am pre[paring for CRAN.

It creates a trusted timestamp using the API fro OriginStamp (https://originstamp.org/home) which requires an API key. Now this API should not be made public, as to much traffic through one API key will lead to it?s blocking.

I have stored the key encrypted in the travis.yml, and the package passes all tests.

But if I send it to CRAN, it would fail the tests, as the api key is not in the package itself.

I could disable all tests for CRAN which need the API key, but I think it would be better tu run the tests there as well (as an additional check to travis).

My question:

Is there a way of storing the API key encrypted, so that only the CRAN test servers can decrypt it, or is there another way can steal with this?

Thanks,

Rainer



--
Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)

University of Z?rich

Cell:       +41 (0)78 630 66 57
email:      Rainer at krugs.de
Skype:      RMkrug

PGP: 0x0F52F982




-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 488 bytes
Desc: Message signed with OpenPGP
URL: <https://stat.ethz.ch/pipermail/r-package-devel/attachments/20180905/6c66a463/attachment.sig>

From ligge@ @ending from @t@ti@tik@tu-dortmund@de  Wed Sep  5 15:37:10 2018
From: ligge@ @ending from @t@ti@tik@tu-dortmund@de (Uwe Ligges)
Date: Wed, 5 Sep 2018 15:37:10 +0200
Subject: [R-pkg-devel] 
 Submission to CRAN when package needs personal data (API key)
In-Reply-To: <DBD7AB1C-0A0A-4E9F-BA60-4A3ADB4F9E3F@krugs.de>
References: <DBD7AB1C-0A0A-4E9F-BA60-4A3ADB4F9E3F@krugs.de>
Message-ID: <67157cbb-20a7-517a-62c1-71dcfa53e427@statistik.tu-dortmund.de>

You should not run on CRAN. Note that the checks are done almost daily 
oin several platforms, hence the API key is used for about 10 check runs 
a day.

Best,
Uwe Ligges



On 05.09.2018 09:28, Rainer Krug wrote:
> Hi
> 
> I have a package at GitHub (https://github.com/rkrug/ROriginStamp) which I am pre[paring for CRAN.
> 
> It creates a trusted timestamp using the API fro OriginStamp (https://originstamp.org/home) which requires an API key. Now this API should not be made public, as to much traffic through one API key will lead to it?s blocking.
> 
> I have stored the key encrypted in the travis.yml, and the package passes all tests.
> 
> But if I send it to CRAN, it would fail the tests, as the api key is not in the package itself.
> 
> I could disable all tests for CRAN which need the API key, but I think it would be better tu run the tests there as well (as an additional check to travis).
> 
> My question:
> 
> Is there a way of storing the API key encrypted, so that only the CRAN test servers can decrypt it, or is there another way can steal with this?
> 
> Thanks,
> 
> Rainer
> 
> 
> 
> --
> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
> 
> University of Z?rich
> 
> Cell:       +41 (0)78 630 66 57
> email:      Rainer at krugs.de
> Skype:      RMkrug
> 
> PGP: 0x0F52F982
> 
> 
> 
> 
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From R@iner @ending from krug@@de  Wed Sep  5 15:38:12 2018
From: R@iner @ending from krug@@de (Rainer M Krug)
Date: Wed, 5 Sep 2018 15:38:12 +0200
Subject: [R-pkg-devel] 
 Submission to CRAN when package needs personal data (API key)
In-Reply-To: <67157cbb-20a7-517a-62c1-71dcfa53e427@statistik.tu-dortmund.de>
References: <DBD7AB1C-0A0A-4E9F-BA60-4A3ADB4F9E3F@krugs.de>
 <67157cbb-20a7-517a-62c1-71dcfa53e427@statistik.tu-dortmund.de>
Message-ID: <DCE7D556-C105-48D4-AB2D-E8B2240A870E@krugs.de>

OK - thanks. I will than disable the checks for CRAN.

Thanks,

Rainer


> On 5 Sep 2018, at 15:37, Uwe Ligges <ligges at statistik.tu-dortmund.de> wrote:
> 
> You should not run on CRAN. Note that the checks are done almost daily oin several platforms, hence the API key is used for about 10 check runs a day.
> 
> Best,
> Uwe Ligges
> 
> 
> 
> On 05.09.2018 09:28, Rainer Krug wrote:
>> Hi
>> I have a package at GitHub (https://github.com/rkrug/ROriginStamp) which I am pre[paring for CRAN.
>> It creates a trusted timestamp using the API fro OriginStamp (https://originstamp.org/home) which requires an API key. Now this API should not be made public, as to much traffic through one API key will lead to it?s blocking.
>> I have stored the key encrypted in the travis.yml, and the package passes all tests.
>> But if I send it to CRAN, it would fail the tests, as the api key is not in the package itself.
>> I could disable all tests for CRAN which need the API key, but I think it would be better tu run the tests there as well (as an additional check to travis).
>> My question:
>> Is there a way of storing the API key encrypted, so that only the CRAN test servers can decrypt it, or is there another way can steal with this?
>> Thanks,
>> Rainer
>> --
>> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
>> University of Z?rich
>> Cell:       +41 (0)78 630 66 57
>> email:      Rainer at krugs.de
>> Skype:      RMkrug
>> PGP: 0x0F52F982
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel

--
Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)

University of Z?rich

Cell:       +41 (0)78 630 66 57
email:      Rainer at krugs.de
Skype:      RMkrug

PGP: 0x0F52F982




-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 488 bytes
Desc: Message signed with OpenPGP
URL: <https://stat.ethz.ch/pipermail/r-package-devel/attachments/20180905/56c43181/attachment.sig>

From retep@mei@@ner @ending from gm@il@com  Wed Sep  5 19:13:46 2018
From: retep@mei@@ner @ending from gm@il@com (Peter Meissner)
Date: Wed, 5 Sep 2018 19:13:46 +0200
Subject: [R-pkg-devel] 
 Submission to CRAN when package needs personal data (API key)
In-Reply-To: <DCE7D556-C105-48D4-AB2D-E8B2240A870E@krugs.de>
References: <DBD7AB1C-0A0A-4E9F-BA60-4A3ADB4F9E3F@krugs.de>
 <67157cbb-20a7-517a-62c1-71dcfa53e427@statistik.tu-dortmund.de>
 <DCE7D556-C105-48D4-AB2D-E8B2240A870E@krugs.de>
Message-ID: <CAB-BFRqeQsqeM+ptg-sasS8b-O=9-ABhC1OwXDqERKUQ3_1T3g@mail.gmail.com>

Hey,

Maybe webmockr (or something alike) can help:
https://cran.r-project.org/web/packages/webmockr/index.html

Best, Peter

Rainer M Krug <Rainer at krugs.de> schrieb am Mi., 5. Sep. 2018, 15:38:

> OK - thanks. I will than disable the checks for CRAN.
>
> Thanks,
>
> Rainer
>
>
> > On 5 Sep 2018, at 15:37, Uwe Ligges <ligges at statistik.tu-dortmund.de>
> wrote:
> >
> > You should not run on CRAN. Note that the checks are done almost daily
> oin several platforms, hence the API key is used for about 10 check runs a
> day.
> >
> > Best,
> > Uwe Ligges
> >
> >
> >
> > On 05.09.2018 09:28, Rainer Krug wrote:
> >> Hi
> >> I have a package at GitHub (https://github.com/rkrug/ROriginStamp)
> which I am pre[paring for CRAN.
> >> It creates a trusted timestamp using the API fro OriginStamp (
> https://originstamp.org/home) which requires an API key. Now this API
> should not be made public, as to much traffic through one API key will lead
> to it?s blocking.
> >> I have stored the key encrypted in the travis.yml, and the package
> passes all tests.
> >> But if I send it to CRAN, it would fail the tests, as the api key is
> not in the package itself.
> >> I could disable all tests for CRAN which need the API key, but I think
> it would be better tu run the tests there as well (as an additional check
> to travis).
> >> My question:
> >> Is there a way of storing the API key encrypted, so that only the CRAN
> test servers can decrypt it, or is there another way can steal with this?
> >> Thanks,
> >> Rainer
> >> --
> >> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation
> Biology, UCT), Dipl. Phys. (Germany)
> >> University of Z?rich
> >> Cell:       +41 (0)78 630 66 57
> >> email:      Rainer at krugs.de
> >> Skype:      RMkrug
> >> PGP: 0x0F52F982
> >> ______________________________________________
> >> R-package-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
> --
> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation
> Biology, UCT), Dipl. Phys. (Germany)
>
> University of Z?rich
>
> Cell:       +41 (0)78 630 66 57
> email:      Rainer at krugs.de
> Skype:      RMkrug
>
> PGP: 0x0F52F982
>
>
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From @pencer@gr@ve@ @ending from effectivedefen@e@org  Wed Sep  5 19:34:07 2018
From: @pencer@gr@ve@ @ending from effectivedefen@e@org (Spencer Graves)
Date: Wed, 5 Sep 2018 12:34:07 -0500
Subject: [R-pkg-devel] 
 Submission to CRAN when package needs personal data (API key)
In-Reply-To: <CAB-BFRqeQsqeM+ptg-sasS8b-O=9-ABhC1OwXDqERKUQ3_1T3g@mail.gmail.com>
References: <DBD7AB1C-0A0A-4E9F-BA60-4A3ADB4F9E3F@krugs.de>
 <67157cbb-20a7-517a-62c1-71dcfa53e427@statistik.tu-dortmund.de>
 <DCE7D556-C105-48D4-AB2D-E8B2240A870E@krugs.de>
 <CAB-BFRqeQsqeM+ptg-sasS8b-O=9-ABhC1OwXDqERKUQ3_1T3g@mail.gmail.com>
Message-ID: <271d7400-b8e1-4eb0-2146-16778d815fc6@effectivedefense.org>

The fda package disables some tests on CRAN using:


if(!fda::CRAN()){
 ??? test you don't want run on CRAN
}


 ????? I've used this in other contexts with tests that are too long to 
run on CRAN but that I want to run otherwise during "R CMD check".


 ????? Spencer Graves


On 2018-09-05 12:13, Peter Meissner wrote:
> Hey,
>
> Maybe webmockr (or something alike) can help:
> https://cran.r-project.org/web/packages/webmockr/index.html
>
> Best, Peter
>
> Rainer M Krug <Rainer at krugs.de> schrieb am Mi., 5. Sep. 2018, 15:38:
>
>> OK - thanks. I will than disable the checks for CRAN.
>>
>> Thanks,
>>
>> Rainer
>>
>>
>>> On 5 Sep 2018, at 15:37, Uwe Ligges <ligges at statistik.tu-dortmund.de>
>> wrote:
>>> You should not run on CRAN. Note that the checks are done almost daily
>> oin several platforms, hence the API key is used for about 10 check runs a
>> day.
>>> Best,
>>> Uwe Ligges
>>>
>>>
>>>
>>> On 05.09.2018 09:28, Rainer Krug wrote:
>>>> Hi
>>>> I have a package at GitHub (https://github.com/rkrug/ROriginStamp)
>> which I am pre[paring for CRAN.
>>>> It creates a trusted timestamp using the API fro OriginStamp (
>> https://originstamp.org/home) which requires an API key. Now this API
>> should not be made public, as to much traffic through one API key will lead
>> to it?s blocking.
>>>> I have stored the key encrypted in the travis.yml, and the package
>> passes all tests.
>>>> But if I send it to CRAN, it would fail the tests, as the api key is
>> not in the package itself.
>>>> I could disable all tests for CRAN which need the API key, but I think
>> it would be better tu run the tests there as well (as an additional check
>> to travis).
>>>> My question:
>>>> Is there a way of storing the API key encrypted, so that only the CRAN
>> test servers can decrypt it, or is there another way can steal with this?
>>>> Thanks,
>>>> Rainer
>>>> --
>>>> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation
>> Biology, UCT), Dipl. Phys. (Germany)
>>>> University of Z?rich
>>>> Cell:       +41 (0)78 630 66 57
>>>> email:      Rainer at krugs.de
>>>> Skype:      RMkrug
>>>> PGP: 0x0F52F982
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> --
>> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation
>> Biology, UCT), Dipl. Phys. (Germany)
>>
>> University of Z?rich
>>
>> Cell:       +41 (0)78 630 66 57
>> email:      Rainer at krugs.de
>> Skype:      RMkrug
>>
>> PGP: 0x0F52F982
>>
>>
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From c@@rdi@g@bor @ending from gm@il@com  Wed Sep  5 19:52:33 2018
From: c@@rdi@g@bor @ending from gm@il@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Wed, 5 Sep 2018 18:52:33 +0100
Subject: [R-pkg-devel] 
 Submission to CRAN when package needs personal data (API key)
In-Reply-To: <271d7400-b8e1-4eb0-2146-16778d815fc6@effectivedefense.org>
References: <DBD7AB1C-0A0A-4E9F-BA60-4A3ADB4F9E3F@krugs.de>
 <67157cbb-20a7-517a-62c1-71dcfa53e427@statistik.tu-dortmund.de>
 <DCE7D556-C105-48D4-AB2D-E8B2240A870E@krugs.de>
 <CAB-BFRqeQsqeM+ptg-sasS8b-O=9-ABhC1OwXDqERKUQ3_1T3g@mail.gmail.com>
 <271d7400-b8e1-4eb0-2146-16778d815fc6@effectivedefense.org>
Message-ID: <CABtg=KnsFcGZda7KHSMKzPTQqtU9pSBYmbC_TENf6soUJBeGmA@mail.gmail.com>

On Wed, Sep 5, 2018 at 6:34 PM Spencer Graves
<spencer.graves at effectivedefense.org> wrote:
>
> The fda package disables some tests on CRAN using:
>
>
> if(!fda::CRAN()){
>      test you don't want run on CRAN
> }

Seemingly this just checks for a couple of (5 by default) environment
variables that match "^_R_":
https://github.com/cran/fda/blob/0549e6a86aa144d8c2aade2d8704a269fb8a94ed/R/CRAN.R#L14

I am not sure if this is a good indication of the machine being a CRAN
machine, I do set  some of these
occasionally on my machine.  It would be great if CRAN machines could
set a specific environment
variable globally, e.g. ON_CRAN, or _R_ON_CRAN_, so people could skip
these tests and examples
easily.

Gabor

>
>
>        I've used this in other contexts with tests that are too long to
> run on CRAN but that I want to run otherwise during "R CMD check".
>
>
>        Spencer Graves
>
>
> On 2018-09-05 12:13, Peter Meissner wrote:
> > Hey,
> >
> > Maybe webmockr (or something alike) can help:
> > https://cran.r-project.org/web/packages/webmockr/index.html
> >
> > Best, Peter
> >
> > Rainer M Krug <Rainer at krugs.de> schrieb am Mi., 5. Sep. 2018, 15:38:
> >
> >> OK - thanks. I will than disable the checks for CRAN.
> >>
> >> Thanks,
> >>
> >> Rainer
> >>
> >>
> >>> On 5 Sep 2018, at 15:37, Uwe Ligges <ligges at statistik.tu-dortmund.de>
> >> wrote:
> >>> You should not run on CRAN. Note that the checks are done almost daily
> >> oin several platforms, hence the API key is used for about 10 check runs a
> >> day.
> >>> Best,
> >>> Uwe Ligges
> >>>
> >>>
> >>>
> >>> On 05.09.2018 09:28, Rainer Krug wrote:
> >>>> Hi
> >>>> I have a package at GitHub (https://github.com/rkrug/ROriginStamp)
> >> which I am pre[paring for CRAN.
> >>>> It creates a trusted timestamp using the API fro OriginStamp (
> >> https://originstamp.org/home) which requires an API key. Now this API
> >> should not be made public, as to much traffic through one API key will lead
> >> to it?s blocking.
> >>>> I have stored the key encrypted in the travis.yml, and the package
> >> passes all tests.
> >>>> But if I send it to CRAN, it would fail the tests, as the api key is
> >> not in the package itself.
> >>>> I could disable all tests for CRAN which need the API key, but I think
> >> it would be better tu run the tests there as well (as an additional check
> >> to travis).
> >>>> My question:
> >>>> Is there a way of storing the API key encrypted, so that only the CRAN
> >> test servers can decrypt it, or is there another way can steal with this?
> >>>> Thanks,
> >>>> Rainer
> >>>> --
> >>>> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation
> >> Biology, UCT), Dipl. Phys. (Germany)
> >>>> University of Z?rich
> >>>> Cell:       +41 (0)78 630 66 57
> >>>> email:      Rainer at krugs.de
> >>>> Skype:      RMkrug
> >>>> PGP: 0x0F52F982
> >>>> ______________________________________________
> >>>> R-package-devel at r-project.org mailing list
> >>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >> --
> >> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation
> >> Biology, UCT), Dipl. Phys. (Germany)
> >>
> >> University of Z?rich
> >>
> >> Cell:       +41 (0)78 630 66 57
> >> email:      Rainer at krugs.de
> >> Skype:      RMkrug
> >>
> >> PGP: 0x0F52F982
> >>
> >>
> >>
> >> ______________________________________________
> >> R-package-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From @pencer@gr@ve@ @ending from effectivedefen@e@org  Wed Sep  5 20:08:26 2018
From: @pencer@gr@ve@ @ending from effectivedefen@e@org (Spencer Graves)
Date: Wed, 5 Sep 2018 13:08:26 -0500
Subject: [R-pkg-devel] 
 Submission to CRAN when package needs personal data (API key)
In-Reply-To: <CABtg=KnsFcGZda7KHSMKzPTQqtU9pSBYmbC_TENf6soUJBeGmA@mail.gmail.com>
References: <DBD7AB1C-0A0A-4E9F-BA60-4A3ADB4F9E3F@krugs.de>
 <67157cbb-20a7-517a-62c1-71dcfa53e427@statistik.tu-dortmund.de>
 <DCE7D556-C105-48D4-AB2D-E8B2240A870E@krugs.de>
 <CAB-BFRqeQsqeM+ptg-sasS8b-O=9-ABhC1OwXDqERKUQ3_1T3g@mail.gmail.com>
 <271d7400-b8e1-4eb0-2146-16778d815fc6@effectivedefense.org>
 <CABtg=KnsFcGZda7KHSMKzPTQqtU9pSBYmbC_TENf6soUJBeGmA@mail.gmail.com>
Message-ID: <470e407b-85a7-fe4d-978b-f3a8d27cef22@effectivedefense.org>



On 2018-09-05 12:52, G?bor Cs?rdi wrote:
> On Wed, Sep 5, 2018 at 6:34 PM Spencer Graves
> <spencer.graves at effectivedefense.org> wrote:
>> The fda package disables some tests on CRAN using:
>>
>>
>> if(!fda::CRAN()){
>>       test you don't want run on CRAN
>> }
> Seemingly this just checks for a couple of (5 by default) environment
> variables that match "^_R_":
> https://github.com/cran/fda/blob/0549e6a86aa144d8c2aade2d8704a269fb8a94ed/R/CRAN.R#L14
>
> I am not sure if this is a good indication of the machine being a CRAN
> machine, I do set  some of these
> occasionally on my machine.  It would be great if CRAN machines could
> set a specific environment
> variable globally, e.g. ON_CRAN, or _R_ON_CRAN_, so people could skip
> these tests and examples
> easily.


Agreed.? Before I wrote that function, I asked this list for 
suggestions.? The suggestion I got was, "Don't do it."? I felt that was 
not acceptable so wrote what I did.? I think we need a better solution.? 
Spencer
>
> Gabor
>
>>
>>         I've used this in other contexts with tests that are too long to
>> run on CRAN but that I want to run otherwise during "R CMD check".
>>
>>
>>         Spencer Graves
>>
>>
>> On 2018-09-05 12:13, Peter Meissner wrote:
>>> Hey,
>>>
>>> Maybe webmockr (or something alike) can help:
>>> https://cran.r-project.org/web/packages/webmockr/index.html
>>>
>>> Best, Peter
>>>
>>> Rainer M Krug <Rainer at krugs.de> schrieb am Mi., 5. Sep. 2018, 15:38:
>>>
>>>> OK - thanks. I will than disable the checks for CRAN.
>>>>
>>>> Thanks,
>>>>
>>>> Rainer
>>>>
>>>>
>>>>> On 5 Sep 2018, at 15:37, Uwe Ligges <ligges at statistik.tu-dortmund.de>
>>>> wrote:
>>>>> You should not run on CRAN. Note that the checks are done almost daily
>>>> oin several platforms, hence the API key is used for about 10 check runs a
>>>> day.
>>>>> Best,
>>>>> Uwe Ligges
>>>>>
>>>>>
>>>>>
>>>>> On 05.09.2018 09:28, Rainer Krug wrote:
>>>>>> Hi
>>>>>> I have a package at GitHub (https://github.com/rkrug/ROriginStamp)
>>>> which I am pre[paring for CRAN.
>>>>>> It creates a trusted timestamp using the API fro OriginStamp (
>>>> https://originstamp.org/home) which requires an API key. Now this API
>>>> should not be made public, as to much traffic through one API key will lead
>>>> to it?s blocking.
>>>>>> I have stored the key encrypted in the travis.yml, and the package
>>>> passes all tests.
>>>>>> But if I send it to CRAN, it would fail the tests, as the api key is
>>>> not in the package itself.
>>>>>> I could disable all tests for CRAN which need the API key, but I think
>>>> it would be better tu run the tests there as well (as an additional check
>>>> to travis).
>>>>>> My question:
>>>>>> Is there a way of storing the API key encrypted, so that only the CRAN
>>>> test servers can decrypt it, or is there another way can steal with this?
>>>>>> Thanks,
>>>>>> Rainer
>>>>>> --
>>>>>> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation
>>>> Biology, UCT), Dipl. Phys. (Germany)
>>>>>> University of Z?rich
>>>>>> Cell:       +41 (0)78 630 66 57
>>>>>> email:      Rainer at krugs.de
>>>>>> Skype:      RMkrug
>>>>>> PGP: 0x0F52F982
>>>>>> ______________________________________________
>>>>>> R-package-devel at r-project.org mailing list
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>> --
>>>> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation
>>>> Biology, UCT), Dipl. Phys. (Germany)
>>>>
>>>> University of Z?rich
>>>>
>>>> Cell:       +41 (0)78 630 66 57
>>>> email:      Rainer at krugs.de
>>>> Skype:      RMkrug
>>>>
>>>> PGP: 0x0F52F982
>>>>
>>>>
>>>>
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>
>>>        [[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From henrik@bengt@@on @ending from gm@il@com  Wed Sep  5 20:20:31 2018
From: henrik@bengt@@on @ending from gm@il@com (Henrik Bengtsson)
Date: Wed, 5 Sep 2018 11:20:31 -0700
Subject: [R-pkg-devel] 
 Submission to CRAN when package needs personal data (API key)
In-Reply-To: <470e407b-85a7-fe4d-978b-f3a8d27cef22@effectivedefense.org>
References: <DBD7AB1C-0A0A-4E9F-BA60-4A3ADB4F9E3F@krugs.de>
 <67157cbb-20a7-517a-62c1-71dcfa53e427@statistik.tu-dortmund.de>
 <DCE7D556-C105-48D4-AB2D-E8B2240A870E@krugs.de>
 <CAB-BFRqeQsqeM+ptg-sasS8b-O=9-ABhC1OwXDqERKUQ3_1T3g@mail.gmail.com>
 <271d7400-b8e1-4eb0-2146-16778d815fc6@effectivedefense.org>
 <CABtg=KnsFcGZda7KHSMKzPTQqtU9pSBYmbC_TENf6soUJBeGmA@mail.gmail.com>
 <470e407b-85a7-fe4d-978b-f3a8d27cef22@effectivedefense.org>
Message-ID: <CAFDcVCSJ7wddkaFWZLRm+PTqUB+dqTWsijo=RKcE0pxaAH+eYg@mail.gmail.com>

I take a complementary approach; I condition on, my home-made,
R_TEST_ALL variable.  Effectively, I do:

if (as.logical(Sys.getenv("R_TEST_ALL", "FALSE"))) {
   ...
}

and set R_TEST_ALL=TRUE when I want to run that part of the test.  You
can also imagine refined versions of this, e.g. R_TEST_SETS=foo,bar
and test scripts with:

if ("foo" %in% strsplit(Sys.getenv("R_TEST_SETS"), split="[, ]+")[[1]]) {
   ...makes no assumption
}

That avoids making assumptions on where the tests are submitted/run,
may it be CRAN, Bioconductor, Travis CI, ...

/Henrik

On Wed, Sep 5, 2018 at 11:08 AM Spencer Graves
<spencer.graves at effectivedefense.org> wrote:
>
>
>
> On 2018-09-05 12:52, G?bor Cs?rdi wrote:
> > On Wed, Sep 5, 2018 at 6:34 PM Spencer Graves
> > <spencer.graves at effectivedefense.org> wrote:
> >> The fda package disables some tests on CRAN using:
> >>
> >>
> >> if(!fda::CRAN()){
> >>       test you don't want run on CRAN
> >> }
> > Seemingly this just checks for a couple of (5 by default) environment
> > variables that match "^_R_":
> > https://github.com/cran/fda/blob/0549e6a86aa144d8c2aade2d8704a269fb8a94ed/R/CRAN.R#L14
> >
> > I am not sure if this is a good indication of the machine being a CRAN
> > machine, I do set  some of these
> > occasionally on my machine.  It would be great if CRAN machines could
> > set a specific environment
> > variable globally, e.g. ON_CRAN, or _R_ON_CRAN_, so people could skip
> > these tests and examples
> > easily.
>
>
> Agreed.  Before I wrote that function, I asked this list for
> suggestions.  The suggestion I got was, "Don't do it."  I felt that was
> not acceptable so wrote what I did.  I think we need a better solution.
> Spencer
> >
> > Gabor
> >
> >>
> >>         I've used this in other contexts with tests that are too long to
> >> run on CRAN but that I want to run otherwise during "R CMD check".
> >>
> >>
> >>         Spencer Graves
> >>
> >>
> >> On 2018-09-05 12:13, Peter Meissner wrote:
> >>> Hey,
> >>>
> >>> Maybe webmockr (or something alike) can help:
> >>> https://cran.r-project.org/web/packages/webmockr/index.html
> >>>
> >>> Best, Peter
> >>>
> >>> Rainer M Krug <Rainer at krugs.de> schrieb am Mi., 5. Sep. 2018, 15:38:
> >>>
> >>>> OK - thanks. I will than disable the checks for CRAN.
> >>>>
> >>>> Thanks,
> >>>>
> >>>> Rainer
> >>>>
> >>>>
> >>>>> On 5 Sep 2018, at 15:37, Uwe Ligges <ligges at statistik.tu-dortmund.de>
> >>>> wrote:
> >>>>> You should not run on CRAN. Note that the checks are done almost daily
> >>>> oin several platforms, hence the API key is used for about 10 check runs a
> >>>> day.
> >>>>> Best,
> >>>>> Uwe Ligges
> >>>>>
> >>>>>
> >>>>>
> >>>>> On 05.09.2018 09:28, Rainer Krug wrote:
> >>>>>> Hi
> >>>>>> I have a package at GitHub (https://github.com/rkrug/ROriginStamp)
> >>>> which I am pre[paring for CRAN.
> >>>>>> It creates a trusted timestamp using the API fro OriginStamp (
> >>>> https://originstamp.org/home) which requires an API key. Now this API
> >>>> should not be made public, as to much traffic through one API key will lead
> >>>> to it?s blocking.
> >>>>>> I have stored the key encrypted in the travis.yml, and the package
> >>>> passes all tests.
> >>>>>> But if I send it to CRAN, it would fail the tests, as the api key is
> >>>> not in the package itself.
> >>>>>> I could disable all tests for CRAN which need the API key, but I think
> >>>> it would be better tu run the tests there as well (as an additional check
> >>>> to travis).
> >>>>>> My question:
> >>>>>> Is there a way of storing the API key encrypted, so that only the CRAN
> >>>> test servers can decrypt it, or is there another way can steal with this?
> >>>>>> Thanks,
> >>>>>> Rainer
> >>>>>> --
> >>>>>> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation
> >>>> Biology, UCT), Dipl. Phys. (Germany)
> >>>>>> University of Z?rich
> >>>>>> Cell:       +41 (0)78 630 66 57
> >>>>>> email:      Rainer at krugs.de
> >>>>>> Skype:      RMkrug
> >>>>>> PGP: 0x0F52F982
> >>>>>> ______________________________________________
> >>>>>> R-package-devel at r-project.org mailing list
> >>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>>> --
> >>>> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation
> >>>> Biology, UCT), Dipl. Phys. (Germany)
> >>>>
> >>>> University of Z?rich
> >>>>
> >>>> Cell:       +41 (0)78 630 66 57
> >>>> email:      Rainer at krugs.de
> >>>> Skype:      RMkrug
> >>>>
> >>>> PGP: 0x0F52F982
> >>>>
> >>>>
> >>>>
> >>>> ______________________________________________
> >>>> R-package-devel at r-project.org mailing list
> >>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>>>
> >>>        [[alternative HTML version deleted]]
> >>>
> >>> ______________________________________________
> >>> R-package-devel at r-project.org mailing list
> >>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >> ______________________________________________
> >> R-package-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From murdoch@dunc@n @ending from gm@il@com  Wed Sep  5 22:03:46 2018
From: murdoch@dunc@n @ending from gm@il@com (Duncan Murdoch)
Date: Wed, 5 Sep 2018 16:03:46 -0400
Subject: [R-pkg-devel] 
 Submission to CRAN when package needs personal data (API key)
In-Reply-To: <CAFDcVCSJ7wddkaFWZLRm+PTqUB+dqTWsijo=RKcE0pxaAH+eYg@mail.gmail.com>
References: <DBD7AB1C-0A0A-4E9F-BA60-4A3ADB4F9E3F@krugs.de>
 <67157cbb-20a7-517a-62c1-71dcfa53e427@statistik.tu-dortmund.de>
 <DCE7D556-C105-48D4-AB2D-E8B2240A870E@krugs.de>
 <CAB-BFRqeQsqeM+ptg-sasS8b-O=9-ABhC1OwXDqERKUQ3_1T3g@mail.gmail.com>
 <271d7400-b8e1-4eb0-2146-16778d815fc6@effectivedefense.org>
 <CABtg=KnsFcGZda7KHSMKzPTQqtU9pSBYmbC_TENf6soUJBeGmA@mail.gmail.com>
 <470e407b-85a7-fe4d-978b-f3a8d27cef22@effectivedefense.org>
 <CAFDcVCSJ7wddkaFWZLRm+PTqUB+dqTWsijo=RKcE0pxaAH+eYg@mail.gmail.com>
Message-ID: <ec8c411f-6a36-d23d-29eb-98957b9e12bb@gmail.com>

On 05/09/2018 2:20 PM, Henrik Bengtsson wrote:
> I take a complementary approach; I condition on, my home-made,
> R_TEST_ALL variable.  Effectively, I do:
> 
> if (as.logical(Sys.getenv("R_TEST_ALL", "FALSE"))) {
>     ...
> }
> 
> and set R_TEST_ALL=TRUE when I want to run that part of the test.  You
> can also imagine refined versions of this, e.g. R_TEST_SETS=foo,bar
> and test scripts with:
> 
> if ("foo" %in% strsplit(Sys.getenv("R_TEST_SETS"), split="[, ]+")[[1]]) {
>     ...makes no assumption
> }
> 
> That avoids making assumptions on where the tests are submitted/run,
> may it be CRAN, Bioconductor, Travis CI, ...

This is the right way to do it.

This discussion has come up before.  If you want to submit to CRAN, you 
should include tests that satisfy their requests.  If you want even more 
tests, there are several ways to add them in addition to the CRAN tests. 
  Henrik's is one, "R CMD check --test-dir=myCustomTests" is another.

Rainer's package is unusual, in that from his description it can't 
really work unless the user obtains an API key.  There are other 
packages like that, and those cases need manual handling by CRAN:  they 
don't really run full tests by default.  But the vast majority of 
packages should be able to live within the CRAN guidelines.

Duncan Murdoch

> /Henrik
> 
> On Wed, Sep 5, 2018 at 11:08 AM Spencer Graves
> <spencer.graves at effectivedefense.org> wrote:
>>
>>
>>
>> On 2018-09-05 12:52, G?bor Cs?rdi wrote:
>>> On Wed, Sep 5, 2018 at 6:34 PM Spencer Graves
>>> <spencer.graves at effectivedefense.org> wrote:
>>>> The fda package disables some tests on CRAN using:
>>>>
>>>>
>>>> if(!fda::CRAN()){
>>>>        test you don't want run on CRAN
>>>> }
>>> Seemingly this just checks for a couple of (5 by default) environment
>>> variables that match "^_R_":
>>> https://github.com/cran/fda/blob/0549e6a86aa144d8c2aade2d8704a269fb8a94ed/R/CRAN.R#L14
>>>
>>> I am not sure if this is a good indication of the machine being a CRAN
>>> machine, I do set  some of these
>>> occasionally on my machine.  It would be great if CRAN machines could
>>> set a specific environment
>>> variable globally, e.g. ON_CRAN, or _R_ON_CRAN_, so people could skip
>>> these tests and examples
>>> easily.
>>
>>
>> Agreed.  Before I wrote that function, I asked this list for
>> suggestions.  The suggestion I got was, "Don't do it."  I felt that was
>> not acceptable so wrote what I did.  I think we need a better solution.
>> Spencer
>>>
>>> Gabor
>>>
>>>>
>>>>          I've used this in other contexts with tests that are too long to
>>>> run on CRAN but that I want to run otherwise during "R CMD check".
>>>>
>>>>
>>>>          Spencer Graves
>>>>
>>>>
>>>> On 2018-09-05 12:13, Peter Meissner wrote:
>>>>> Hey,
>>>>>
>>>>> Maybe webmockr (or something alike) can help:
>>>>> https://cran.r-project.org/web/packages/webmockr/index.html
>>>>>
>>>>> Best, Peter
>>>>>
>>>>> Rainer M Krug <Rainer at krugs.de> schrieb am Mi., 5. Sep. 2018, 15:38:
>>>>>
>>>>>> OK - thanks. I will than disable the checks for CRAN.
>>>>>>
>>>>>> Thanks,
>>>>>>
>>>>>> Rainer
>>>>>>
>>>>>>
>>>>>>> On 5 Sep 2018, at 15:37, Uwe Ligges <ligges at statistik.tu-dortmund.de>
>>>>>> wrote:
>>>>>>> You should not run on CRAN. Note that the checks are done almost daily
>>>>>> oin several platforms, hence the API key is used for about 10 check runs a
>>>>>> day.
>>>>>>> Best,
>>>>>>> Uwe Ligges
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>> On 05.09.2018 09:28, Rainer Krug wrote:
>>>>>>>> Hi
>>>>>>>> I have a package at GitHub (https://github.com/rkrug/ROriginStamp)
>>>>>> which I am pre[paring for CRAN.
>>>>>>>> It creates a trusted timestamp using the API fro OriginStamp (
>>>>>> https://originstamp.org/home) which requires an API key. Now this API
>>>>>> should not be made public, as to much traffic through one API key will lead
>>>>>> to it?s blocking.
>>>>>>>> I have stored the key encrypted in the travis.yml, and the package
>>>>>> passes all tests.
>>>>>>>> But if I send it to CRAN, it would fail the tests, as the api key is
>>>>>> not in the package itself.
>>>>>>>> I could disable all tests for CRAN which need the API key, but I think
>>>>>> it would be better tu run the tests there as well (as an additional check
>>>>>> to travis).
>>>>>>>> My question:
>>>>>>>> Is there a way of storing the API key encrypted, so that only the CRAN
>>>>>> test servers can decrypt it, or is there another way can steal with this?
>>>>>>>> Thanks,
>>>>>>>> Rainer
>>>>>>>> --
>>>>>>>> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation
>>>>>> Biology, UCT), Dipl. Phys. (Germany)
>>>>>>>> University of Z?rich
>>>>>>>> Cell:       +41 (0)78 630 66 57
>>>>>>>> email:      Rainer at krugs.de
>>>>>>>> Skype:      RMkrug
>>>>>>>> PGP: 0x0F52F982
>>>>>>>> ______________________________________________
>>>>>>>> R-package-devel at r-project.org mailing list
>>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>>> --
>>>>>> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation
>>>>>> Biology, UCT), Dipl. Phys. (Germany)
>>>>>>
>>>>>> University of Z?rich
>>>>>>
>>>>>> Cell:       +41 (0)78 630 66 57
>>>>>> email:      Rainer at krugs.de
>>>>>> Skype:      RMkrug
>>>>>>
>>>>>> PGP: 0x0F52F982
>>>>>>
>>>>>>
>>>>>>
>>>>>> ______________________________________________
>>>>>> R-package-devel at r-project.org mailing list
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>>>
>>>>>         [[alternative HTML version deleted]]
>>>>>
>>>>> ______________________________________________
>>>>> R-package-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From R@iner @ending from krug@@de  Thu Sep  6 08:30:41 2018
From: R@iner @ending from krug@@de (Rainer M Krug)
Date: Thu, 6 Sep 2018 08:30:41 +0200
Subject: [R-pkg-devel] 
 Submission to CRAN when package needs personal data (API key)
In-Reply-To: <CAFDcVCSJ7wddkaFWZLRm+PTqUB+dqTWsijo=RKcE0pxaAH+eYg@mail.gmail.com>
References: <DBD7AB1C-0A0A-4E9F-BA60-4A3ADB4F9E3F@krugs.de>
 <67157cbb-20a7-517a-62c1-71dcfa53e427@statistik.tu-dortmund.de>
 <DCE7D556-C105-48D4-AB2D-E8B2240A870E@krugs.de>
 <CAB-BFRqeQsqeM+ptg-sasS8b-O=9-ABhC1OwXDqERKUQ3_1T3g@mail.gmail.com>
 <271d7400-b8e1-4eb0-2146-16778d815fc6@effectivedefense.org>
 <CABtg=KnsFcGZda7KHSMKzPTQqtU9pSBYmbC_TENf6soUJBeGmA@mail.gmail.com>
 <470e407b-85a7-fe4d-978b-f3a8d27cef22@effectivedefense.org>
 <CAFDcVCSJ7wddkaFWZLRm+PTqUB+dqTWsijo=RKcE0pxaAH+eYg@mail.gmail.com>
Message-ID: <5FF9DD80-AD5F-491E-BA0D-23D48B2127AE@krugs.de>



> On 5 Sep 2018, at 20:20, Henrik Bengtsson <henrik.bengtsson at gmail.com <mailto:henrik.bengtsson at gmail.com>> wrote:
> 
> I take a complementary approach; I condition on, my home-made,
> R_TEST_ALL variable.  Effectively, I do:
> 
> if (as.logical(Sys.getenv("R_TEST_ALL", "FALSE"))) {
>   ...
> }
> 
> and set R_TEST_ALL=TRUE when I want to run that part of the test.  You
> can also imagine refined versions of this, e.g. R_TEST_SETS=foo,bar
> and test scripts with:
> 
> if ("foo" %in% strsplit(Sys.getenv("R_TEST_SETS"), split="[, ]+")[[1]]) {
>   ...makes no assumption
> }
> 
> That avoids making assumptions on where the tests are submitted/run,
> may it be CRAN, Bioconductor, Travis CI, ?

Thanks Henrik - that sounds like a good idea. At the moment, I am checking for the name of my machine, which is obviously not to robust.

I will implement this before submission to CRAN.

Thanks,

Rainer

> 
> /Henrik
> 
> On Wed, Sep 5, 2018 at 11:08 AM Spencer Graves
> <spencer.graves at effectivedefense.org <mailto:spencer.graves at effectivedefense.org>> wrote:
>> 
>> 
>> 
>> On 2018-09-05 12:52, G?bor Cs?rdi wrote:
>>> On Wed, Sep 5, 2018 at 6:34 PM Spencer Graves
>>> <spencer.graves at effectivedefense.org <mailto:spencer.graves at effectivedefense.org>> wrote:
>>>> The fda package disables some tests on CRAN using:
>>>> 
>>>> 
>>>> if(!fda::CRAN()){
>>>>      test you don't want run on CRAN
>>>> }
>>> Seemingly this just checks for a couple of (5 by default) environment
>>> variables that match "^_R_":
>>> https://github.com/cran/fda/blob/0549e6a86aa144d8c2aade2d8704a269fb8a94ed/R/CRAN.R#L14 <https://github.com/cran/fda/blob/0549e6a86aa144d8c2aade2d8704a269fb8a94ed/R/CRAN.R#L14>
>>> 
>>> I am not sure if this is a good indication of the machine being a CRAN
>>> machine, I do set  some of these
>>> occasionally on my machine.  It would be great if CRAN machines could
>>> set a specific environment
>>> variable globally, e.g. ON_CRAN, or _R_ON_CRAN_, so people could skip
>>> these tests and examples
>>> easily.
>> 
>> 
>> Agreed.  Before I wrote that function, I asked this list for
>> suggestions.  The suggestion I got was, "Don't do it."  I felt that was
>> not acceptable so wrote what I did.  I think we need a better solution.
>> Spencer
>>> 
>>> Gabor
>>> 
>>>> 
>>>>        I've used this in other contexts with tests that are too long to
>>>> run on CRAN but that I want to run otherwise during "R CMD check".
>>>> 
>>>> 
>>>>        Spencer Graves
>>>> 
>>>> 
>>>> On 2018-09-05 12:13, Peter Meissner wrote:
>>>>> Hey,
>>>>> 
>>>>> Maybe webmockr (or something alike) can help:
>>>>> https://cran.r-project.org/web/packages/webmockr/index.html <https://cran.r-project.org/web/packages/webmockr/index.html>
>>>>> 
>>>>> Best, Peter
>>>>> 
>>>>> Rainer M Krug <Rainer at krugs.de> schrieb am Mi., 5. Sep. 2018, 15:38:
>>>>> 
>>>>>> OK - thanks. I will than disable the checks for CRAN.
>>>>>> 
>>>>>> Thanks,
>>>>>> 
>>>>>> Rainer
>>>>>> 
>>>>>> 
>>>>>>> On 5 Sep 2018, at 15:37, Uwe Ligges <ligges at statistik.tu-dortmund.de>
>>>>>> wrote:
>>>>>>> You should not run on CRAN. Note that the checks are done almost daily
>>>>>> oin several platforms, hence the API key is used for about 10 check runs a
>>>>>> day.
>>>>>>> Best,
>>>>>>> Uwe Ligges
>>>>>>> 
>>>>>>> 
>>>>>>> 
>>>>>>> On 05.09.2018 09:28, Rainer Krug wrote:
>>>>>>>> Hi
>>>>>>>> I have a package at GitHub (https://github.com/rkrug/ROriginStamp)
>>>>>> which I am pre[paring for CRAN.
>>>>>>>> It creates a trusted timestamp using the API fro OriginStamp (
>>>>>> https://originstamp.org/home) which requires an API key. Now this API
>>>>>> should not be made public, as to much traffic through one API key will lead
>>>>>> to it?s blocking.
>>>>>>>> I have stored the key encrypted in the travis.yml, and the package
>>>>>> passes all tests.
>>>>>>>> But if I send it to CRAN, it would fail the tests, as the api key is
>>>>>> not in the package itself.
>>>>>>>> I could disable all tests for CRAN which need the API key, but I think
>>>>>> it would be better tu run the tests there as well (as an additional check
>>>>>> to travis).
>>>>>>>> My question:
>>>>>>>> Is there a way of storing the API key encrypted, so that only the CRAN
>>>>>> test servers can decrypt it, or is there another way can steal with this?
>>>>>>>> Thanks,
>>>>>>>> Rainer
>>>>>>>> --
>>>>>>>> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation
>>>>>> Biology, UCT), Dipl. Phys. (Germany)
>>>>>>>> University of Z?rich
>>>>>>>> Cell:       +41 (0)78 630 66 57
>>>>>>>> email:      Rainer at krugs.de
>>>>>>>> Skype:      RMkrug
>>>>>>>> PGP: 0x0F52F982
>>>>>>>> ______________________________________________
>>>>>>>> R-package-devel at r-project.org mailing list
>>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>>> --
>>>>>> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation
>>>>>> Biology, UCT), Dipl. Phys. (Germany)
>>>>>> 
>>>>>> University of Z?rich
>>>>>> 
>>>>>> Cell:       +41 (0)78 630 66 57
>>>>>> email:      Rainer at krugs.de
>>>>>> Skype:      RMkrug
>>>>>> 
>>>>>> PGP: 0x0F52F982
>>>>>> 
>>>>>> 
>>>>>> 
>>>>>> ______________________________________________
>>>>>> R-package-devel at r-project.org mailing list
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>>> 
>>>>>       [[alternative HTML version deleted]]
>>>>> 
>>>>> ______________________________________________
>>>>> R-package-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>> ______________________________________________
>>>> R-package-devel at r-project.org <mailto:R-package-devel at r-project.org> mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
>> 
>> ______________________________________________
>> R-package-devel at r-project.org <mailto:R-package-devel at r-project.org> mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
> 
> ______________________________________________
> R-package-devel at r-project.org <mailto:R-package-devel at r-project.org> mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel <https://stat.ethz.ch/mailman/listinfo/r-package-devel>

--
Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)

University of Z?rich

Cell:       +41 (0)78 630 66 57
email: ? ? ?Rainer at krugs.de <mailto:Rainer at krugs.de>
Skype:      RMkrug

PGP: 0x0F52F982





--
Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)

University of Z?rich

Cell:       +41 (0)78 630 66 57
email:      Rainer at krugs.de
Skype:      RMkrug

PGP: 0x0F52F982




-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 488 bytes
Desc: Message signed with OpenPGP
URL: <https://stat.ethz.ch/pipermail/r-package-devel/attachments/20180906/67a737a4/attachment.sig>

From thierry@onkelinx @ending from inbo@be  Thu Sep  6 09:25:02 2018
From: thierry@onkelinx @ending from inbo@be (Thierry Onkelinx)
Date: Thu, 6 Sep 2018 09:25:02 +0200
Subject: [R-pkg-devel] 
 Submission to CRAN when package needs personal data (API key)
In-Reply-To: <5FF9DD80-AD5F-491E-BA0D-23D48B2127AE@krugs.de>
References: <DBD7AB1C-0A0A-4E9F-BA60-4A3ADB4F9E3F@krugs.de>
 <67157cbb-20a7-517a-62c1-71dcfa53e427@statistik.tu-dortmund.de>
 <DCE7D556-C105-48D4-AB2D-E8B2240A870E@krugs.de>
 <CAB-BFRqeQsqeM+ptg-sasS8b-O=9-ABhC1OwXDqERKUQ3_1T3g@mail.gmail.com>
 <271d7400-b8e1-4eb0-2146-16778d815fc6@effectivedefense.org>
 <CABtg=KnsFcGZda7KHSMKzPTQqtU9pSBYmbC_TENf6soUJBeGmA@mail.gmail.com>
 <470e407b-85a7-fe4d-978b-f3a8d27cef22@effectivedefense.org>
 <CAFDcVCSJ7wddkaFWZLRm+PTqUB+dqTWsijo=RKcE0pxaAH+eYg@mail.gmail.com>
 <5FF9DD80-AD5F-491E-BA0D-23D48B2127AE@krugs.de>
Message-ID: <CAJuCY5wshDYQeejxqqdvxVUU3Gvandejb49zqyscwWD38Y0Asg@mail.gmail.com>

Dear Rainer,

It looks like you are using testthat. testthat has a skip_on_cran()
function. This will always skip the subsequent tests in the script unless
the environment variable NOT_CRAN is set.

Best regards,

Thierry


ir. Thierry Onkelinx
Statisticus / Statistician

Vlaamse Overheid / Government of Flanders
INSTITUUT VOOR NATUUR- EN BOSONDERZOEK / RESEARCH INSTITUTE FOR NATURE AND
FOREST
Team Biometrie & Kwaliteitszorg / Team Biometrics & Quality Assurance
thierry.onkelinx at inbo.be
Havenlaan 88 bus 73, 1000 Brussel
www.inbo.be

///////////////////////////////////////////////////////////////////////////////////////////
To call in the statistician after the experiment is done may be no more
than asking him to perform a post-mortem examination: he may be able to say
what the experiment died of. ~ Sir Ronald Aylmer Fisher
The plural of anecdote is not data. ~ Roger Brinner
The combination of some data and an aching desire for an answer does not
ensure that a reasonable answer can be extracted from a given body of data.
~ John Tukey
///////////////////////////////////////////////////////////////////////////////////////////

<https://www.inbo.be>

2018-09-06 8:30 GMT+02:00 Rainer M Krug <Rainer at krugs.de>:

>
>
> > On 5 Sep 2018, at 20:20, Henrik Bengtsson <henrik.bengtsson at gmail.com
> <mailto:henrik.bengtsson at gmail.com>> wrote:
> >
> > I take a complementary approach; I condition on, my home-made,
> > R_TEST_ALL variable.  Effectively, I do:
> >
> > if (as.logical(Sys.getenv("R_TEST_ALL", "FALSE"))) {
> >   ...
> > }
> >
> > and set R_TEST_ALL=TRUE when I want to run that part of the test.  You
> > can also imagine refined versions of this, e.g. R_TEST_SETS=foo,bar
> > and test scripts with:
> >
> > if ("foo" %in% strsplit(Sys.getenv("R_TEST_SETS"), split="[, ]+")[[1]])
> {
> >   ...makes no assumption
> > }
> >
> > That avoids making assumptions on where the tests are submitted/run,
> > may it be CRAN, Bioconductor, Travis CI, ?
>
> Thanks Henrik - that sounds like a good idea. At the moment, I am checking
> for the name of my machine, which is obviously not to robust.
>
> I will implement this before submission to CRAN.
>
> Thanks,
>
> Rainer
>
> >
> > /Henrik
> >
> > On Wed, Sep 5, 2018 at 11:08 AM Spencer Graves
> > <spencer.graves at effectivedefense.org <mailto:spencer.graves@
> effectivedefense.org>> wrote:
> >>
> >>
> >>
> >> On 2018-09-05 12:52, G?bor Cs?rdi wrote:
> >>> On Wed, Sep 5, 2018 at 6:34 PM Spencer Graves
> >>> <spencer.graves at effectivedefense.org <mailto:spencer.graves@
> effectivedefense.org>> wrote:
> >>>> The fda package disables some tests on CRAN using:
> >>>>
> >>>>
> >>>> if(!fda::CRAN()){
> >>>>      test you don't want run on CRAN
> >>>> }
> >>> Seemingly this just checks for a couple of (5 by default) environment
> >>> variables that match "^_R_":
> >>> https://github.com/cran/fda/blob/0549e6a86aa144d8c2aade2d8704a2
> 69fb8a94ed/R/CRAN.R#L14 <https://github.com/cran/fda/blob/
> 0549e6a86aa144d8c2aade2d8704a269fb8a94ed/R/CRAN.R#L14>
> >>>
> >>> I am not sure if this is a good indication of the machine being a CRAN
> >>> machine, I do set  some of these
> >>> occasionally on my machine.  It would be great if CRAN machines could
> >>> set a specific environment
> >>> variable globally, e.g. ON_CRAN, or _R_ON_CRAN_, so people could skip
> >>> these tests and examples
> >>> easily.
> >>
> >>
> >> Agreed.  Before I wrote that function, I asked this list for
> >> suggestions.  The suggestion I got was, "Don't do it."  I felt that was
> >> not acceptable so wrote what I did.  I think we need a better solution.
> >> Spencer
> >>>
> >>> Gabor
> >>>
> >>>>
> >>>>        I've used this in other contexts with tests that are too long
> to
> >>>> run on CRAN but that I want to run otherwise during "R CMD check".
> >>>>
> >>>>
> >>>>        Spencer Graves
> >>>>
> >>>>
> >>>> On 2018-09-05 12:13, Peter Meissner wrote:
> >>>>> Hey,
> >>>>>
> >>>>> Maybe webmockr (or something alike) can help:
> >>>>> https://cran.r-project.org/web/packages/webmockr/index.html <
> https://cran.r-project.org/web/packages/webmockr/index.html>
> >>>>>
> >>>>> Best, Peter
> >>>>>
> >>>>> Rainer M Krug <Rainer at krugs.de> schrieb am Mi., 5. Sep. 2018, 15:38:
> >>>>>
> >>>>>> OK - thanks. I will than disable the checks for CRAN.
> >>>>>>
> >>>>>> Thanks,
> >>>>>>
> >>>>>> Rainer
> >>>>>>
> >>>>>>
> >>>>>>> On 5 Sep 2018, at 15:37, Uwe Ligges <ligges at statistik.tu-dortmund.
> de>
> >>>>>> wrote:
> >>>>>>> You should not run on CRAN. Note that the checks are done almost
> daily
> >>>>>> oin several platforms, hence the API key is used for about 10 check
> runs a
> >>>>>> day.
> >>>>>>> Best,
> >>>>>>> Uwe Ligges
> >>>>>>>
> >>>>>>>
> >>>>>>>
> >>>>>>> On 05.09.2018 09:28, Rainer Krug wrote:
> >>>>>>>> Hi
> >>>>>>>> I have a package at GitHub (https://github.com/rkrug/ROriginStamp
> )
> >>>>>> which I am pre[paring for CRAN.
> >>>>>>>> It creates a trusted timestamp using the API fro OriginStamp (
> >>>>>> https://originstamp.org/home) which requires an API key. Now this
> API
> >>>>>> should not be made public, as to much traffic through one API key
> will lead
> >>>>>> to it?s blocking.
> >>>>>>>> I have stored the key encrypted in the travis.yml, and the package
> >>>>>> passes all tests.
> >>>>>>>> But if I send it to CRAN, it would fail the tests, as the api key
> is
> >>>>>> not in the package itself.
> >>>>>>>> I could disable all tests for CRAN which need the API key, but I
> think
> >>>>>> it would be better tu run the tests there as well (as an additional
> check
> >>>>>> to travis).
> >>>>>>>> My question:
> >>>>>>>> Is there a way of storing the API key encrypted, so that only the
> CRAN
> >>>>>> test servers can decrypt it, or is there another way can steal with
> this?
> >>>>>>>> Thanks,
> >>>>>>>> Rainer
> >>>>>>>> --
> >>>>>>>> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation
> >>>>>> Biology, UCT), Dipl. Phys. (Germany)
> >>>>>>>> University of Z?rich
> >>>>>>>> Cell:       +41 (0)78 630 66 57
> >>>>>>>> email:      Rainer at krugs.de
> >>>>>>>> Skype:      RMkrug
> >>>>>>>> PGP: 0x0F52F982
> >>>>>>>> ______________________________________________
> >>>>>>>> R-package-devel at r-project.org mailing list
> >>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>>>>> --
> >>>>>> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation
> >>>>>> Biology, UCT), Dipl. Phys. (Germany)
> >>>>>>
> >>>>>> University of Z?rich
> >>>>>>
> >>>>>> Cell:       +41 (0)78 630 66 57
> >>>>>> email:      Rainer at krugs.de
> >>>>>> Skype:      RMkrug
> >>>>>>
> >>>>>> PGP: 0x0F52F982
> >>>>>>
> >>>>>>
> >>>>>>
> >>>>>> ______________________________________________
> >>>>>> R-package-devel at r-project.org mailing list
> >>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>>>>>
> >>>>>       [[alternative HTML version deleted]]
> >>>>>
> >>>>> ______________________________________________
> >>>>> R-package-devel at r-project.org mailing list
> >>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>>> ______________________________________________
> >>>> R-package-devel at r-project.org <mailto:R-package-devel at r-project.org>
> mailing list
> >>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel <
> https://stat.ethz.ch/mailman/listinfo/r-package-devel>
> >>
> >> ______________________________________________
> >> R-package-devel at r-project.org <mailto:R-package-devel at r-project.org>
> mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel <
> https://stat.ethz.ch/mailman/listinfo/r-package-devel>
> >
> > ______________________________________________
> > R-package-devel at r-project.org <mailto:R-package-devel at r-project.org>
> mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel <
> https://stat.ethz.ch/mailman/listinfo/r-package-devel>
>
> --
> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation
> Biology, UCT), Dipl. Phys. (Germany)
>
> University of Z?rich
>
> Cell:       +41 (0)78 630 66 57
> email:      Rainer at krugs.de <mailto:Rainer at krugs.de>
> Skype:      RMkrug
>
> PGP: 0x0F52F982
>
>
>
>
>
> --
> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation
> Biology, UCT), Dipl. Phys. (Germany)
>
> University of Z?rich
>
> Cell:       +41 (0)78 630 66 57
> email:      Rainer at krugs.de
> Skype:      RMkrug
>
> PGP: 0x0F52F982
>
>
>
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>

	[[alternative HTML version deleted]]


From R@iner @ending from krug@@de  Thu Sep  6 10:57:21 2018
From: R@iner @ending from krug@@de (Rainer M Krug)
Date: Thu, 6 Sep 2018 10:57:21 +0200
Subject: [R-pkg-devel] 
 Submission to CRAN when package needs personal data (API key)
In-Reply-To: <CAJuCY5wshDYQeejxqqdvxVUU3Gvandejb49zqyscwWD38Y0Asg@mail.gmail.com>
References: <DBD7AB1C-0A0A-4E9F-BA60-4A3ADB4F9E3F@krugs.de>
 <67157cbb-20a7-517a-62c1-71dcfa53e427@statistik.tu-dortmund.de>
 <DCE7D556-C105-48D4-AB2D-E8B2240A870E@krugs.de>
 <CAB-BFRqeQsqeM+ptg-sasS8b-O=9-ABhC1OwXDqERKUQ3_1T3g@mail.gmail.com>
 <271d7400-b8e1-4eb0-2146-16778d815fc6@effectivedefense.org>
 <CABtg=KnsFcGZda7KHSMKzPTQqtU9pSBYmbC_TENf6soUJBeGmA@mail.gmail.com>
 <470e407b-85a7-fe4d-978b-f3a8d27cef22@effectivedefense.org>
 <CAFDcVCSJ7wddkaFWZLRm+PTqUB+dqTWsijo=RKcE0pxaAH+eYg@mail.gmail.com>
 <5FF9DD80-AD5F-491E-BA0D-23D48B2127AE@krugs.de>
 <CAJuCY5wshDYQeejxqqdvxVUU3Gvandejb49zqyscwWD38Y0Asg@mail.gmail.com>
Message-ID: <DF65E3BD-B012-4E2A-AFF0-B5F8E472C730@krugs.de>

Correct - I should have thought that there is a Hadley-solution to this problem.

Thanks,

Rainer


> On 6 Sep 2018, at 09:25, Thierry Onkelinx <thierry.onkelinx at inbo.be> wrote:
> 
> Dear Rainer,
> 
> It looks like you are using testthat. testthat has a skip_on_cran() function. This will always skip the subsequent tests in the script unless the environment variable NOT_CRAN is set.
> 
> Best regards,
> 
> Thierry
> 
> 
> ir. Thierry Onkelinx
> Statisticus / Statistician
> 
> Vlaamse Overheid / Government of Flanders
> INSTITUUT VOOR NATUUR- EN BOSONDERZOEK / RESEARCH INSTITUTE FOR NATURE AND FOREST
> Team Biometrie & Kwaliteitszorg / Team Biometrics & Quality Assurance
> thierry.onkelinx at inbo.be <mailto:thierry.onkelinx at inbo.be>
> Havenlaan 88 bus 73, 1000 Brussel
> www.inbo.be <http://www.inbo.be/>
> 
> ///////////////////////////////////////////////////////////////////////////////////////////
> To call in the statistician after the experiment is done may be no more than asking him to perform a post-mortem examination: he may be able to say what the experiment died of. ~ Sir Ronald Aylmer Fisher
> The plural of anecdote is not data. ~ Roger Brinner
> The combination of some data and an aching desire for an answer does not ensure that a reasonable answer can be extracted from a given body of data. ~ John Tukey
> ///////////////////////////////////////////////////////////////////////////////////////////
> 
>  <https://www.inbo.be/>
> 
> 2018-09-06 8:30 GMT+02:00 Rainer M Krug <Rainer at krugs.de <mailto:Rainer at krugs.de>>:
> 
> 
> > On 5 Sep 2018, at 20:20, Henrik Bengtsson <henrik.bengtsson at gmail.com <mailto:henrik.bengtsson at gmail.com> <mailto:henrik.bengtsson at gmail.com <mailto:henrik.bengtsson at gmail.com>>> wrote:
> >
> > I take a complementary approach; I condition on, my home-made,
> > R_TEST_ALL variable.  Effectively, I do:
> >
> > if (as.logical(Sys.getenv("R_TEST_ALL", "FALSE"))) {
> >   ...
> > }
> >
> > and set R_TEST_ALL=TRUE when I want to run that part of the test.  You
> > can also imagine refined versions of this, e.g. R_TEST_SETS=foo,bar
> > and test scripts with:
> >
> > if ("foo" %in% strsplit(Sys.getenv("R_TEST_SETS"), split="[, ]+")[[1]]) {
> >   ...makes no assumption
> > }
> >
> > That avoids making assumptions on where the tests are submitted/run,
> > may it be CRAN, Bioconductor, Travis CI, ?
> 
> Thanks Henrik - that sounds like a good idea. At the moment, I am checking for the name of my machine, which is obviously not to robust.
> 
> I will implement this before submission to CRAN.
> 
> Thanks,
> 
> Rainer
> 
> >
> > /Henrik
> >
> > On Wed, Sep 5, 2018 at 11:08 AM Spencer Graves
> > <spencer.graves at effectivedefense.org <mailto:spencer.graves at effectivedefense.org> <mailto:spencer.graves at effectivedefense.org <mailto:spencer.graves at effectivedefense.org>>> wrote:
> >>
> >>
> >>
> >> On 2018-09-05 12:52, G?bor Cs?rdi wrote:
> >>> On Wed, Sep 5, 2018 at 6:34 PM Spencer Graves
> >>> <spencer.graves at effectivedefense.org <mailto:spencer.graves at effectivedefense.org> <mailto:spencer.graves at effectivedefense.org <mailto:spencer.graves at effectivedefense.org>>> wrote:
> >>>> The fda package disables some tests on CRAN using:
> >>>>
> >>>>
> >>>> if(!fda::CRAN()){
> >>>>      test you don't want run on CRAN
> >>>> }
> >>> Seemingly this just checks for a couple of (5 by default) environment
> >>> variables that match "^_R_":
> >>> https://github.com/cran/fda/blob/0549e6a86aa144d8c2aade2d8704a269fb8a94ed/R/CRAN.R#L14 <https://github.com/cran/fda/blob/0549e6a86aa144d8c2aade2d8704a269fb8a94ed/R/CRAN.R#L14> <https://github.com/cran/fda/blob/0549e6a86aa144d8c2aade2d8704a269fb8a94ed/R/CRAN.R#L14 <https://github.com/cran/fda/blob/0549e6a86aa144d8c2aade2d8704a269fb8a94ed/R/CRAN.R#L14>>
> >>>
> >>> I am not sure if this is a good indication of the machine being a CRAN
> >>> machine, I do set  some of these
> >>> occasionally on my machine.  It would be great if CRAN machines could
> >>> set a specific environment
> >>> variable globally, e.g. ON_CRAN, or _R_ON_CRAN_, so people could skip
> >>> these tests and examples
> >>> easily.
> >>
> >>
> >> Agreed.  Before I wrote that function, I asked this list for
> >> suggestions.  The suggestion I got was, "Don't do it."  I felt that was
> >> not acceptable so wrote what I did.  I think we need a better solution.
> >> Spencer
> >>>
> >>> Gabor
> >>>
> >>>>
> >>>>        I've used this in other contexts with tests that are too long to
> >>>> run on CRAN but that I want to run otherwise during "R CMD check".
> >>>>
> >>>>
> >>>>        Spencer Graves
> >>>>
> >>>>
> >>>> On 2018-09-05 12:13, Peter Meissner wrote:
> >>>>> Hey,
> >>>>>
> >>>>> Maybe webmockr (or something alike) can help:
> >>>>> https://cran.r-project.org/web/packages/webmockr/index.html <https://cran.r-project.org/web/packages/webmockr/index.html> <https://cran.r-project.org/web/packages/webmockr/index.html <https://cran.r-project.org/web/packages/webmockr/index.html>>
> >>>>>
> >>>>> Best, Peter
> >>>>>
> >>>>> Rainer M Krug <Rainer at krugs.de <mailto:Rainer at krugs.de>> schrieb am Mi., 5. Sep. 2018, 15:38:
> >>>>>
> >>>>>> OK - thanks. I will than disable the checks for CRAN.
> >>>>>>
> >>>>>> Thanks,
> >>>>>>
> >>>>>> Rainer
> >>>>>>
> >>>>>>
> >>>>>>> On 5 Sep 2018, at 15:37, Uwe Ligges <ligges at statistik.tu-dortmund.de <mailto:ligges at statistik.tu-dortmund.de>>
> >>>>>> wrote:
> >>>>>>> You should not run on CRAN. Note that the checks are done almost daily
> >>>>>> oin several platforms, hence the API key is used for about 10 check runs a
> >>>>>> day.
> >>>>>>> Best,
> >>>>>>> Uwe Ligges
> >>>>>>>
> >>>>>>>
> >>>>>>>
> >>>>>>> On 05.09.2018 09:28, Rainer Krug wrote:
> >>>>>>>> Hi
> >>>>>>>> I have a package at GitHub (https://github.com/rkrug/ROriginStamp <https://github.com/rkrug/ROriginStamp>)
> >>>>>> which I am pre[paring for CRAN.
> >>>>>>>> It creates a trusted timestamp using the API fro OriginStamp (
> >>>>>> https://originstamp.org/home <https://originstamp.org/home>) which requires an API key. Now this API
> >>>>>> should not be made public, as to much traffic through one API key will lead
> >>>>>> to it?s blocking.
> >>>>>>>> I have stored the key encrypted in the travis.yml, and the package
> >>>>>> passes all tests.
> >>>>>>>> But if I send it to CRAN, it would fail the tests, as the api key is
> >>>>>> not in the package itself.
> >>>>>>>> I could disable all tests for CRAN which need the API key, but I think
> >>>>>> it would be better tu run the tests there as well (as an additional check
> >>>>>> to travis).
> >>>>>>>> My question:
> >>>>>>>> Is there a way of storing the API key encrypted, so that only the CRAN
> >>>>>> test servers can decrypt it, or is there another way can steal with this?
> >>>>>>>> Thanks,
> >>>>>>>> Rainer
> >>>>>>>> --
> >>>>>>>> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation
> >>>>>> Biology, UCT), Dipl. Phys. (Germany)
> >>>>>>>> University of Z?rich
> >>>>>>>> Cell:       +41 (0)78 630 66 57
> >>>>>>>> email:      Rainer at krugs.de <mailto:Rainer at krugs.de>
> >>>>>>>> Skype:      RMkrug
> >>>>>>>> PGP: 0x0F52F982
> >>>>>>>> ______________________________________________
> >>>>>>>> R-package-devel at r-project.org <mailto:R-package-devel at r-project.org> mailing list
> >>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
> >>>>>> --
> >>>>>> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation
> >>>>>> Biology, UCT), Dipl. Phys. (Germany)
> >>>>>>
> >>>>>> University of Z?rich
> >>>>>>
> >>>>>> Cell:       +41 (0)78 630 66 57
> >>>>>> email:      Rainer at krugs.de <mailto:Rainer at krugs.de>
> >>>>>> Skype:      RMkrug
> >>>>>>
> >>>>>> PGP: 0x0F52F982
> >>>>>>
> >>>>>>
> >>>>>>
> >>>>>> ______________________________________________
> >>>>>> R-package-devel at r-project.org <mailto:R-package-devel at r-project.org> mailing list
> >>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
> >>>>>>
> >>>>>       [[alternative HTML version deleted]]
> >>>>>
> >>>>> ______________________________________________
> >>>>> R-package-devel at r-project.org <mailto:R-package-devel at r-project.org> mailing list
> >>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
> >>>> ______________________________________________
> >>>> R-package-devel at r-project.org <mailto:R-package-devel at r-project.org> <mailto:R-package-devel at r-project.org <mailto:R-package-devel at r-project.org>> mailing list
> >>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel <https://stat.ethz.ch/mailman/listinfo/r-package-devel> <https://stat.ethz.ch/mailman/listinfo/r-package-devel <https://stat.ethz.ch/mailman/listinfo/r-package-devel>>
> >>
> >> ______________________________________________
> >> R-package-devel at r-project.org <mailto:R-package-devel at r-project.org> <mailto:R-package-devel at r-project.org <mailto:R-package-devel at r-project.org>> mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel <https://stat.ethz.ch/mailman/listinfo/r-package-devel> <https://stat.ethz.ch/mailman/listinfo/r-package-devel <https://stat.ethz.ch/mailman/listinfo/r-package-devel>>
> >
> > ______________________________________________
> > R-package-devel at r-project.org <mailto:R-package-devel at r-project.org> <mailto:R-package-devel at r-project.org <mailto:R-package-devel at r-project.org>> mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel <https://stat.ethz.ch/mailman/listinfo/r-package-devel> <https://stat.ethz.ch/mailman/listinfo/r-package-devel <https://stat.ethz.ch/mailman/listinfo/r-package-devel>>
> 
> --
> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
> 
> University of Z?rich
> 
> Cell:       +41 (0)78 630 66 57
> email:      Rainer at krugs.de <mailto:Rainer at krugs.de> <mailto:Rainer at krugs.de <mailto:Rainer at krugs.de>>
> Skype:      RMkrug
> 
> PGP: 0x0F52F982
> 
> 
> 
> 
> 
> --
> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
> 
> University of Z?rich
> 
> Cell:       +41 (0)78 630 66 57
> email:      Rainer at krugs.de <mailto:Rainer at krugs.de>
> Skype:      RMkrug
> 
> PGP: 0x0F52F982
> 
> 
> 
> 
> ______________________________________________
> R-package-devel at r-project.org <mailto:R-package-devel at r-project.org> mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
> 
> 

--
Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)

University of Z?rich

Cell:       +41 (0)78 630 66 57
email:      Rainer at krugs.de
Skype:      RMkrug

PGP: 0x0F52F982




-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 488 bytes
Desc: Message signed with OpenPGP
URL: <https://stat.ethz.ch/pipermail/r-package-devel/attachments/20180906/1d6f8891/attachment.sig>

From chri@@r@john86 @ending from gm@il@com  Thu Sep  6 12:26:43 2018
From: chri@@r@john86 @ending from gm@il@com (Christopher John)
Date: Thu, 6 Sep 2018 11:26:43 +0100
Subject: [R-pkg-devel] Vignette title problem
Message-ID: <CAH7iqbFTT92EmmZXo7Xs=7MBP3vJSAd_ywL5xFrXD3L49qTCRw@mail.gmail.com>

Dear CRAN

I have made a vignette and followed the instructions for adding a title and
name at the top of the vignette, the title and name appears locally when I
build it from RStudio. However, whenever it gets uploaded to CRAN, it is
not there in the online vignette. The rest of the vignette is fine, just
the title is missing.

Code (works locally to make header in RStudio):
https://github.com/cran/clusterlab/blob/master/vignettes/introduction.Rmd

Vignette (without header):
https://cran.r-project.org/web/packages/clusterlab/vignettes/introduction.html

Hopefully some one can help with this problem.

Best wishes,

Chris

	[[alternative HTML version deleted]]


From murdoch@dunc@n @ending from gm@il@com  Thu Sep  6 15:40:52 2018
From: murdoch@dunc@n @ending from gm@il@com (Duncan Murdoch)
Date: Thu, 6 Sep 2018 09:40:52 -0400
Subject: [R-pkg-devel] Vignette title problem
In-Reply-To: <CAH7iqbFTT92EmmZXo7Xs=7MBP3vJSAd_ywL5xFrXD3L49qTCRw@mail.gmail.com>
References: <CAH7iqbFTT92EmmZXo7Xs=7MBP3vJSAd_ywL5xFrXD3L49qTCRw@mail.gmail.com>
Message-ID: <b851bd4f-1677-86b2-9934-ff760200c50b@gmail.com>

On 06/09/2018 6:26 AM, Christopher John wrote:
> Dear CRAN
> 
> I have made a vignette and followed the instructions for adding a title and
> name at the top of the vignette, the title and name appears locally when I
> build it from RStudio. However, whenever it gets uploaded to CRAN, it is
> not there in the online vignette. The rest of the vignette is fine, just
> the title is missing.
> 
> Code (works locally to make header in RStudio):
> https://github.com/cran/clusterlab/blob/master/vignettes/introduction.Rmd
> 
> Vignette (without header):
> https://cran.r-project.org/web/packages/clusterlab/vignettes/introduction.html
> 
> Hopefully some one can help with this problem.


If you do a local install from the tar.gz file, do you get the title?  I 
think CRAN doesn't normally rebuild vignettes for storage, only for 
checking.

When I try to build the vignette from the source in your link, I get 
this error:

Quitting from lines 40-42 (Untitled.Rmd)
Error: `x` must be a string or a R connection
Execution halted

This comes from the code chunk

library(clusterlab)
synthetic <- clusterlab(centers=1,numbervec=100)

which generates that error on its own.

Duncan Murdoch


From h@wickh@m @ending from gm@il@com  Thu Sep  6 16:32:39 2018
From: h@wickh@m @ending from gm@il@com (Hadley Wickham)
Date: Thu, 6 Sep 2018 09:32:39 -0500
Subject: [R-pkg-devel] 
 Submission to CRAN when package needs personal data (API key)
In-Reply-To: <ec8c411f-6a36-d23d-29eb-98957b9e12bb@gmail.com>
References: <DBD7AB1C-0A0A-4E9F-BA60-4A3ADB4F9E3F@krugs.de>
 <67157cbb-20a7-517a-62c1-71dcfa53e427@statistik.tu-dortmund.de>
 <DCE7D556-C105-48D4-AB2D-E8B2240A870E@krugs.de>
 <CAB-BFRqeQsqeM+ptg-sasS8b-O=9-ABhC1OwXDqERKUQ3_1T3g@mail.gmail.com>
 <271d7400-b8e1-4eb0-2146-16778d815fc6@effectivedefense.org>
 <CABtg=KnsFcGZda7KHSMKzPTQqtU9pSBYmbC_TENf6soUJBeGmA@mail.gmail.com>
 <470e407b-85a7-fe4d-978b-f3a8d27cef22@effectivedefense.org>
 <CAFDcVCSJ7wddkaFWZLRm+PTqUB+dqTWsijo=RKcE0pxaAH+eYg@mail.gmail.com>
 <ec8c411f-6a36-d23d-29eb-98957b9e12bb@gmail.com>
Message-ID: <CABdHhvGzR1MaQfPw-zjiCSgBC=MmAs7uW2OrbsPLi1y8qP+JJQ@mail.gmail.com>

On Wed, Sep 5, 2018 at 3:03 PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>
> On 05/09/2018 2:20 PM, Henrik Bengtsson wrote:
> > I take a complementary approach; I condition on, my home-made,
> > R_TEST_ALL variable.  Effectively, I do:
> >
> > if (as.logical(Sys.getenv("R_TEST_ALL", "FALSE"))) {
> >     ...
> > }
> >
> > and set R_TEST_ALL=TRUE when I want to run that part of the test.  You
> > can also imagine refined versions of this, e.g. R_TEST_SETS=foo,bar
> > and test scripts with:
> >
> > if ("foo" %in% strsplit(Sys.getenv("R_TEST_SETS"), split="[, ]+")[[1]]) {
> >     ...makes no assumption
> > }
> >
> > That avoids making assumptions on where the tests are submitted/run,
> > may it be CRAN, Bioconductor, Travis CI, ...
>
> This is the right way to do it.

I would like to gently push back on this assertion: if CRAN set an
environment variable we would have one single convention that all
packages could rely on. The current system relies on each package
author evolving their own solution. This makes life difficult when you
are running local reverse dependency checks: there is no way to
systematically assert that you want to run tests in a way as similar
as possible to CRAN.

I know that the CRAN maintainers already have a very large workload,
and I hate to add to it, but setting CRAN=1 in a few profile files
doesn't seem excessively burdensome.

> This discussion has come up before.  If you want to submit to CRAN, you
> should include tests that satisfy their requests.  If you want even more
> tests, there are several ways to add them in addition to the CRAN tests.
>   Henrik's is one, "R CMD check --test-dir=myCustomTests" is another.
>
> Rainer's package is unusual, in that from his description it can't
> really work unless the user obtains an API key.  There are other
> packages like that, and those cases need manual handling by CRAN:  they
> don't really run full tests by default.  But the vast majority of
> packages should be able to live within the CRAN guidelines.

10 years ago, I would have definitely supported this statement. But I
am not sure it is still correct today, as there are now many packages
that require a connection to web API to work (or depend on a package
that uses an API). Additionally, CRAN only allows a limited amount of
compute time for each check, so there are often longer tests that you
want to run locally but not on CRAN. CRAN is a specialised testing
service and it does have different constraints to your local machine,
travis, and bioconductor.

A quick search of the CRAN mirror on github
(https://github.com/search?q=org%3Acran+skip_on_cran&type=Code)
reveals that there are ~2700 tests that use testthat::skip_on_cran().
This is obviously an underestimate of the total number of tests
skipped on CRAN, as many packages don't use testthat, or use an
alternative technique to avoid running code on CRAN.

Hadley

-- 
http://hadley.nz


From @@muel@gr@nje@ud @ending from in@erm@fr  Thu Sep  6 17:02:43 2018
From: @@muel@gr@nje@ud @ending from in@erm@fr (Samuel)
Date: Thu, 06 Sep 2018 17:02:43 +0200
Subject: [R-pkg-devel] Recommendations about adding options to a package in
 order to change default values of some functions on-the-fly
Message-ID: <ad1e5c9c7f3e22b44f85e72451c8d98e@inserm.fr>

Hi,

I would like to change the default value of some arguments of some 
functions in a package of mine. I don't want to change explicitly the 
calls in the many scripts that have been written. For example, I would 
to change the delimiter in all write.mytable() without changing any 
calls it and without changing the default value currently assigned to 
that delimiter in the declaration of this function. What I would like is 
to add a command at the beginning of the scripts that says "since now, 
the delimiter is ;".

I am thinking about setting global options that those functions will 
read and use to overwrite the default values. Of course the 
write.mytable function has to be modify to exploit these settings, but 
none of the scripts. I think about something similar to the par() and 
options() functions.

I noticed the settings package, but I would like to know if there is a 
simple and recommended solution without adding any dependency.

Hope my question is clear.

Thanks for any advice,
Samuel


From @lex@ndre@courtiol @ending from gm@il@com  Thu Sep  6 18:15:34 2018
From: @lex@ndre@courtiol @ending from gm@il@com (Alexandre Courtiol)
Date: Thu, 6 Sep 2018 18:15:34 +0200
Subject: [R-pkg-devel] 
 Recommendations about adding options to a package in
 order to change default values of some functions on-the-fly
In-Reply-To: <ad1e5c9c7f3e22b44f85e72451c8d98e@inserm.fr>
References: <ad1e5c9c7f3e22b44f85e72451c8d98e@inserm.fr>
Message-ID: <CAERMt4ePanLPbs5xoBCJO-3euD=+g_Cj8o5V=2X12WiNz=GYLA@mail.gmail.com>

Dear Samuel,

Many may object (for good reasons) that adding options would clash with
functional paradigm, but it is possible.
I don't know about the least worse practice but as far as I would do it,
you could:

1. directly write and then read elements in the (hidden) list .Options that
is present in the global environment:
options(test = "blabla") ## add element in .Options
.Options$test ## read element (for use in your own function)

2. you could also create your own alternative to options(), as ex:
https://github.com/courtiol/IsoriX/blob/master/IsoriX/R/options.R
Option 2 has the benefits of not risking conflict with existing names in
.Options and it would thus also not mess up the way other packages may work.
Option 1 uses what is already in place.

I hope this help,
Best

Alex

On Thu, 6 Sep 2018 at 17:18, Samuel <samuel.granjeaud at inserm.fr> wrote:

> Hi,
>
> I would like to change the default value of some arguments of some
> functions in a package of mine. I don't want to change explicitly the
> calls in the many scripts that have been written. For example, I would
> to change the delimiter in all write.mytable() without changing any
> calls it and without changing the default value currently assigned to
> that delimiter in the declaration of this function. What I would like is
> to add a command at the beginning of the scripts that says "since now,
> the delimiter is ;".
>
> I am thinking about setting global options that those functions will
> read and use to overwrite the default values. Of course the
> write.mytable function has to be modify to exploit these settings, but
> none of the scripts. I think about something similar to the par() and
> options() functions.
>
> I noticed the settings package, but I would like to know if there is a
> simple and recommended solution without adding any dependency.
>
> Hope my question is clear.
>
> Thanks for any advice,
> Samuel
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


-- 
Alexandre Courtiol

http://sites.google.com/site/alexandrecourtiol/home

*"Science is the belief in the ignorance of experts"*, R. Feynman

	[[alternative HTML version deleted]]


From d@vidhughjone@ @ending from gm@il@com  Thu Sep  6 18:24:41 2018
From: d@vidhughjone@ @ending from gm@il@com (David Hugh-Jones)
Date: Thu, 6 Sep 2018 17:24:41 +0100
Subject: [R-pkg-devel] 
 Recommendations about adding options to a package in
 order to change default values of some functions on-the-fly
In-Reply-To: <CAERMt4ePanLPbs5xoBCJO-3euD=+g_Cj8o5V=2X12WiNz=GYLA@mail.gmail.com>
References: <ad1e5c9c7f3e22b44f85e72451c8d98e@inserm.fr>
 <CAERMt4ePanLPbs5xoBCJO-3euD=+g_Cj8o5V=2X12WiNz=GYLA@mail.gmail.com>
Message-ID: <CAARY7kiGWjJuH_Ad=5PrJgH3THALOB9osH3W-HerH+_8mJ=sAA@mail.gmail.com>

Hi all,

A simple solution - if indeed you want to go down this route - is to use
options() and getOption(), ensuring all options are namespaced, e.g. by
prefixing them with the package name.

David

On Thu, 6 Sep 2018 at 17:15, Alexandre Courtiol <
alexandre.courtiol at gmail.com> wrote:

> Dear Samuel,
>
> Many may object (for good reasons) that adding options would clash with
> functional paradigm, but it is possible.
> I don't know about the least worse practice but as far as I would do it,
> you could:
>
> 1. directly write and then read elements in the (hidden) list .Options that
> is present in the global environment:
> options(test = "blabla") ## add element in .Options
> .Options$test ## read element (for use in your own function)
>
> 2. you could also create your own alternative to options(), as ex:
> https://github.com/courtiol/IsoriX/blob/master/IsoriX/R/options.R
> Option 2 has the benefits of not risking conflict with existing names in
> .Options and it would thus also not mess up the way other packages may
> work.
> Option 1 uses what is already in place.
>
> I hope this help,
> Best
>
> Alex
>
> On Thu, 6 Sep 2018 at 17:18, Samuel <samuel.granjeaud at inserm.fr> wrote:
>
> > Hi,
> >
> > I would like to change the default value of some arguments of some
> > functions in a package of mine. I don't want to change explicitly the
> > calls in the many scripts that have been written. For example, I would
> > to change the delimiter in all write.mytable() without changing any
> > calls it and without changing the default value currently assigned to
> > that delimiter in the declaration of this function. What I would like is
> > to add a command at the beginning of the scripts that says "since now,
> > the delimiter is ;".
> >
> > I am thinking about setting global options that those functions will
> > read and use to overwrite the default values. Of course the
> > write.mytable function has to be modify to exploit these settings, but
> > none of the scripts. I think about something similar to the par() and
> > options() functions.
> >
> > I noticed the settings package, but I would like to know if there is a
> > simple and recommended solution without adding any dependency.
> >
> > Hope my question is clear.
> >
> > Thanks for any advice,
> > Samuel
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
>
>
> --
> Alexandre Courtiol
>
> http://sites.google.com/site/alexandrecourtiol/home
>
> *"Science is the belief in the ignorance of experts"*, R. Feynman
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From bbolker @ending from gm@il@com  Thu Sep  6 21:07:01 2018
From: bbolker @ending from gm@il@com (Ben Bolker)
Date: Thu, 6 Sep 2018 15:07:01 -0400
Subject: [R-pkg-devel] questions about \dontrun{} etc.
In-Reply-To: <7597817e-2682-f30e-4ba0-32250b5d6ac9@mcmaster.ca>
References: <7597817e-2682-f30e-4ba0-32250b5d6ac9@mcmaster.ca>
Message-ID: <CABghstS==qVd5-K2uePO19dwDj+Yu_M75dmWkqi78=RYHksfoA@mail.gmail.com>

  {Sorry this is long, just trying to be clear and thorough.}

  I'm struggling a bit with some CRAN recommendations; would appreciate
opinions/suggestions about how other people would handle this case.

  I'm working on a package (https://github.com/bbolker/broom.mixed) that
processes model fits from lots of other packages.  The time taken to fit
the original model varies a lot, from a few seconds to several minutes.

 My typical framework for the examples looks something like this:

if (require("lme4")) {
   \dontrun{
      lmm1 <- lmer(Reaction ~ Days + (Days | Subject), sleepstudy)
   }
   load(system.file("extdata","lme4_example.rda",package="broom.mixed"))
   <.... stuff ...>
}

or sometimes the \dontrun{}  would be replaced by a commented-out code
line instead,

   ## lmm1 <- lmer(Reaction ~ Days + (Days | Subject), sleepstudy)

 The purpose of these lines is to show readers what model was fitted to
produce the stored model object that's going to be processed.

  CRAN responded:

===
Please replace \dontrun{} by \donttest{} or unwap [sic] the examples if
they can be executed in less than 5 sec per Rd-file.

Please do not comment out examples.
===

I see that the deprecation of (? too strong; "preference for avoiding"
?) \dontrun{} was previously discussed here:
https://stat.ethz.ch/pipermail/r-package-devel/2018q2/002811.html : Uwe
Ligges responded

> Sure, \dontrun{} markup is intended for cases where neither automated
chercks nor users can expect that the given code work out of the box
and, e.g., changes are needed to make it work, e.g. isertion of otehr
useranmes ... while \donttest{} is expected to work out of the box
(perhaps code that only work interactively or excluded in order to omit
ling running examples from the checks). Nothing new here.

   My desiderata:

1. make CRAN happy
2. consistent format across examples
3. avoid having users run the long examples, even by accident; I
personally would find it a little frustrating if a cut-and-paste to try
out the examples resulted in a 5-minute run time ...
4. readability
5. not letting examples get out of sync, e.g. because of downstream
package changes [I do have code for updating all of the fitted examples
at once, but it's not run automatically]

 * My preference would be for using \dontrun{} universally (consistent,
readable, mostly avoids accidental runs), but this goes against
(informal?) CRAN policy

 * universal \donttest{} doesn't seem to do what I want, since I *do*
want to avoid users having to run long examples

  * commenting (with something like "original model:" to make it clearer
that it's not a commented-out example) is even better for avoiding
accidental runs (harder to accidentally cut-and-paste, if doing that
rather than using example()), but less readable.

  * putting slow model fits in \dontrun{} and letting fast model fits be
executed does what CRAN asks and helps avoiding example-drift, but is
less consistent -- and I can't be sure that a model fit won't take much
longer on one of CRAN's test machines ...

  Thoughts?

  cheers
   Ben Bolker


From r@turner @ending from @uckl@nd@@c@nz  Fri Sep  7 01:05:19 2018
From: r@turner @ending from @uckl@nd@@c@nz (Rolf Turner)
Date: Fri, 7 Sep 2018 11:05:19 +1200
Subject: [R-pkg-devel] 
 [FORGED] Re: Recommendations about adding options to
 a package in order to change default values of some functions on-the-fly
In-Reply-To: <CAERMt4ePanLPbs5xoBCJO-3euD=+g_Cj8o5V=2X12WiNz=GYLA@mail.gmail.com>
References: <ad1e5c9c7f3e22b44f85e72451c8d98e@inserm.fr>
 <CAERMt4ePanLPbs5xoBCJO-3euD=+g_Cj8o5V=2X12WiNz=GYLA@mail.gmail.com>
Message-ID: <c7727364-0ced-fbd0-34df-c4c2d00211d2@auckland.ac.nz>

On 09/07/2018 04:15 AM, Alexandre Courtiol wrote:

<SNIP>

> you could:
> 
> 1. directly write and then read elements in the (hidden) list .Options that
> is present in the global environment:

<SNIP>

Point of order Mr. Chairman (and I'm pretty sure it doesn't matter a 
damn) but (on my system at least) .Options is created in the *base* 
package, not in the global environment.

E.g.:

# Freshly started R session.
 > find(".Options")
[1] "package:base"
 > options(mung="gorp")
 > find(".Options")
[1] "package:base"
 > options("mung")
$mung
[1] "gorp"
 > .Options$mung
[1] "gorp"

cheers,

Rolf Turner

-- 
Technical Editor ANZJS
Department of Statistics
University of Auckland
Phone: +64-9-373-7599 ext. 88276


From murdoch@dunc@n @ending from gm@il@com  Fri Sep  7 02:16:28 2018
From: murdoch@dunc@n @ending from gm@il@com (Duncan Murdoch)
Date: Thu, 6 Sep 2018 20:16:28 -0400
Subject: [R-pkg-devel] 
 Submission to CRAN when package needs personal data (API key)
In-Reply-To: <CABdHhvGzR1MaQfPw-zjiCSgBC=MmAs7uW2OrbsPLi1y8qP+JJQ@mail.gmail.com>
References: <DBD7AB1C-0A0A-4E9F-BA60-4A3ADB4F9E3F@krugs.de>
 <67157cbb-20a7-517a-62c1-71dcfa53e427@statistik.tu-dortmund.de>
 <DCE7D556-C105-48D4-AB2D-E8B2240A870E@krugs.de>
 <CAB-BFRqeQsqeM+ptg-sasS8b-O=9-ABhC1OwXDqERKUQ3_1T3g@mail.gmail.com>
 <271d7400-b8e1-4eb0-2146-16778d815fc6@effectivedefense.org>
 <CABtg=KnsFcGZda7KHSMKzPTQqtU9pSBYmbC_TENf6soUJBeGmA@mail.gmail.com>
 <470e407b-85a7-fe4d-978b-f3a8d27cef22@effectivedefense.org>
 <CAFDcVCSJ7wddkaFWZLRm+PTqUB+dqTWsijo=RKcE0pxaAH+eYg@mail.gmail.com>
 <ec8c411f-6a36-d23d-29eb-98957b9e12bb@gmail.com>
 <CABdHhvGzR1MaQfPw-zjiCSgBC=MmAs7uW2OrbsPLi1y8qP+JJQ@mail.gmail.com>
Message-ID: <9cad2b5a-d4fb-452c-0db3-b0711a887f10@gmail.com>

On 06/09/2018 10:32 AM, Hadley Wickham wrote:
> On Wed, Sep 5, 2018 at 3:03 PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>>
>> On 05/09/2018 2:20 PM, Henrik Bengtsson wrote:
>>> I take a complementary approach; I condition on, my home-made,
>>> R_TEST_ALL variable.  Effectively, I do:
>>>
>>> if (as.logical(Sys.getenv("R_TEST_ALL", "FALSE"))) {
>>>      ...
>>> }
>>>
>>> and set R_TEST_ALL=TRUE when I want to run that part of the test.  You
>>> can also imagine refined versions of this, e.g. R_TEST_SETS=foo,bar
>>> and test scripts with:
>>>
>>> if ("foo" %in% strsplit(Sys.getenv("R_TEST_SETS"), split="[, ]+")[[1]]) {
>>>      ...makes no assumption
>>> }
>>>
>>> That avoids making assumptions on where the tests are submitted/run,
>>> may it be CRAN, Bioconductor, Travis CI, ...
>>
>> This is the right way to do it.
> 
> I would like to gently push back on this assertion: if CRAN set an
> environment variable we would have one single convention that all
> packages could rely on.

When packages delete tests just for CRAN, the quality of the repository 
suffers.  Users should be able to check an install by running the tests 
that passed on CRAN and seeing them pass on their system as well.

  The current system relies on each package
> author evolving their own solution. This makes life difficult when you
> are running local reverse dependency checks: there is no way to
> systematically assert that you want to run tests in a way as similar
> as possible to CRAN.

Most packages don't need to evolve anything:  the CRAN tests are sufficient.

> I know that the CRAN maintainers already have a very large workload,
> and I hate to add to it, but setting CRAN=1 in a few profile files
> doesn't seem excessively burdensome.

It would be easy to do that, but then CRAN wouldn't be testing the same 
things that users would test.  A user might see a test failure that 
didn't happen on CRAN, and suspect that there was something wrong with 
their install, when in fact it was an author trying to hide a deficiency 
in their package from CRAN.


> 
>> This discussion has come up before.  If you want to submit to CRAN, you
>> should include tests that satisfy their requests.  If you want even more
>> tests, there are several ways to add them in addition to the CRAN tests.
>>    Henrik's is one, "R CMD check --test-dir=myCustomTests" is another.
>>
>> Rainer's package is unusual, in that from his description it can't
>> really work unless the user obtains an API key.  There are other
>> packages like that, and those cases need manual handling by CRAN:  they
>> don't really run full tests by default.  But the vast majority of
>> packages should be able to live within the CRAN guidelines.
> 
> 10 years ago, I would have definitely supported this statement. But I
> am not sure it is still correct today, as there are now many packages
> that require a connection to web API to work (or depend on a package
> that uses an API). Additionally, CRAN only allows a limited amount of
> compute time for each check, so there are often longer tests that you
> want to run locally but not on CRAN. CRAN is a specialised testing
> service and it does have different constraints to your local machine,
> travis, and bioconductor.
> 
> A quick search of the CRAN mirror on github
> (https://github.com/search?q=org%3Acran+skip_on_cran&type=Code)
> reveals that there are ~2700 tests that use testthat::skip_on_cran().
> This is obviously an underestimate of the total number of tests
> skipped on CRAN, as many packages don't use testthat, or use an
> alternative technique to avoid running code on CRAN.

That's not so obviously an underestimate, as packages that use that 
technique use it many times, not just once per package.  (A sample I 
looked at averaged 15 calls per package, but I don't know if that's 
unbiased.)

But in any case, the skip_on_cran() function implements a version of 
Henrik's approach.  The name of the function is misleading, it doesn't 
attempt to distinguish between CRAN and a regular user.

Duncan Murdoch


From d@vidhughjone@ @ending from gm@il@com  Fri Sep  7 08:18:25 2018
From: d@vidhughjone@ @ending from gm@il@com (David Hugh-Jones)
Date: Fri, 7 Sep 2018 07:18:25 +0100
Subject: [R-pkg-devel] 
 Submission to CRAN when package needs personal data (API key)
In-Reply-To: <9cad2b5a-d4fb-452c-0db3-b0711a887f10@gmail.com>
References: <DBD7AB1C-0A0A-4E9F-BA60-4A3ADB4F9E3F@krugs.de>
 <67157cbb-20a7-517a-62c1-71dcfa53e427@statistik.tu-dortmund.de>
 <DCE7D556-C105-48D4-AB2D-E8B2240A870E@krugs.de>
 <CAB-BFRqeQsqeM+ptg-sasS8b-O=9-ABhC1OwXDqERKUQ3_1T3g@mail.gmail.com>
 <271d7400-b8e1-4eb0-2146-16778d815fc6@effectivedefense.org>
 <CABtg=KnsFcGZda7KHSMKzPTQqtU9pSBYmbC_TENf6soUJBeGmA@mail.gmail.com>
 <470e407b-85a7-fe4d-978b-f3a8d27cef22@effectivedefense.org>
 <CAFDcVCSJ7wddkaFWZLRm+PTqUB+dqTWsijo=RKcE0pxaAH+eYg@mail.gmail.com>
 <ec8c411f-6a36-d23d-29eb-98957b9e12bb@gmail.com>
 <CABdHhvGzR1MaQfPw-zjiCSgBC=MmAs7uW2OrbsPLi1y8qP+JJQ@mail.gmail.com>
 <9cad2b5a-d4fb-452c-0db3-b0711a887f10@gmail.com>
Message-ID: <CAARY7kgrHWq=jOYe+Cd+kxGcdDBCe=cjURXozdUqS+RsPBU-_A@mail.gmail.com>

On Fri, 7 Sep 2018 at 01:16, Duncan Murdoch <murdoch.duncan at gmail.com>
wrote:

>
>
> When packages delete tests just for CRAN, the quality of the repository
> suffers.  Users should be able to check an install by running the tests
> that passed on CRAN and seeing them pass on their system as well.


In my limited experience there are usually tests that can't run on CRAN
 because they take too long, rely on external software or configuration
that is absent, or just fail on CRAN only (which is naturally hard to
debug). This seems normal, and having the ability to turn off some tests is
useful. The fact that multiple workarounds have evolved to do this suggests
that the need is widespread.



> --
Sent from Gmail Mobile

	[[alternative HTML version deleted]]


From R@iner @ending from krug@@de  Fri Sep  7 09:09:00 2018
From: R@iner @ending from krug@@de (Rainer Krug)
Date: Fri, 7 Sep 2018 09:09:00 +0200
Subject: [R-pkg-devel] 
 Submission to CRAN when package needs personal data (API key)
In-Reply-To: <9cad2b5a-d4fb-452c-0db3-b0711a887f10@gmail.com>
References: <DBD7AB1C-0A0A-4E9F-BA60-4A3ADB4F9E3F@krugs.de>
 <67157cbb-20a7-517a-62c1-71dcfa53e427@statistik.tu-dortmund.de>
 <DCE7D556-C105-48D4-AB2D-E8B2240A870E@krugs.de>
 <CAB-BFRqeQsqeM+ptg-sasS8b-O=9-ABhC1OwXDqERKUQ3_1T3g@mail.gmail.com>
 <271d7400-b8e1-4eb0-2146-16778d815fc6@effectivedefense.org>
 <CABtg=KnsFcGZda7KHSMKzPTQqtU9pSBYmbC_TENf6soUJBeGmA@mail.gmail.com>
 <470e407b-85a7-fe4d-978b-f3a8d27cef22@effectivedefense.org>
 <CAFDcVCSJ7wddkaFWZLRm+PTqUB+dqTWsijo=RKcE0pxaAH+eYg@mail.gmail.com>
 <ec8c411f-6a36-d23d-29eb-98957b9e12bb@gmail.com>
 <CABdHhvGzR1MaQfPw-zjiCSgBC=MmAs7uW2OrbsPLi1y8qP+JJQ@mail.gmail.com>
 <9cad2b5a-d4fb-452c-0db3-b0711a887f10@gmail.com>
Message-ID: <FF6ADA1A-7221-4CD0-B994-A9D556C29368@krugs.de>



> On 7 Sep 2018, at 02:16, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> 
> On 06/09/2018 10:32 AM, Hadley Wickham wrote:
>> On Wed, Sep 5, 2018 at 3:03 PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>>> 
>>> On 05/09/2018 2:20 PM, Henrik Bengtsson wrote:
>>>> I take a complementary approach; I condition on, my home-made,
>>>> R_TEST_ALL variable.  Effectively, I do:
>>>> 
>>>> if (as.logical(Sys.getenv("R_TEST_ALL", "FALSE"))) {
>>>>     ...
>>>> }
>>>> 
>>>> and set R_TEST_ALL=TRUE when I want to run that part of the test.  You
>>>> can also imagine refined versions of this, e.g. R_TEST_SETS=foo,bar
>>>> and test scripts with:
>>>> 
>>>> if ("foo" %in% strsplit(Sys.getenv("R_TEST_SETS"), split="[, ]+")[[1]]) {
>>>>     ...makes no assumption
>>>> }
>>>> 
>>>> That avoids making assumptions on where the tests are submitted/run,
>>>> may it be CRAN, Bioconductor, Travis CI, ...
>>> 
>>> This is the right way to do it.
>> I would like to gently push back on this assertion: if CRAN set an
>> environment variable we would have one single convention that all
>> packages could rely on.
> 
> When packages delete tests just for CRAN, the quality of the repository suffers.

Absolutely. But in some cases. But t the moment, one is forced to use workarounds if test **can** not be run on CRAN (API keys, computing times, ?) but should be run on local tests. It would make much more sense if there would be a standardised way of dealing with this.


> Users should be able to check an install by running the tests that passed on CRAN and seeing them pass on their system as well.

Also agreed - so if the user sets the environmental variable CRAN for the test, the CRAN tests are executed (as today), if not set, the extended tests are executed.


> 
> The current system relies on each package
>> author evolving their own solution. This makes life difficult when you
>> are running local reverse dependency checks: there is no way to
>> systematically assert that you want to run tests in a way as similar
>> as possible to CRAN.
> 
> Most packages don't need to evolve anything:  the CRAN tests are sufficient.

But there seems to be a need to exclude certain tests, due to various reasons.

> 
>> I know that the CRAN maintainers already have a very large workload,
>> and I hate to add to it, but setting CRAN=1 in a few profile files
>> doesn't seem excessively burdensome.
> 
> It would be easy to do that, but then CRAN wouldn't be testing the same things that users would test.

See my comment above.

> A user might see a test failure that didn't happen on CRAN, and suspect that there was something wrong with their install, when in fact it was an author trying to hide a deficiency in their package from CRAN.

Only if they execute the extended tests. I can still hide deficiencies in my package by not applying a specific test or doctoring the result, if that is my intention. But the extended tests could be used to test additional setup options, which can not be tested on CRAN.


> 
> 
>>> This discussion has come up before.  If you want to submit to CRAN, you
>>> should include tests that satisfy their requests.  If you want even more
>>> tests, there are several ways to add them in addition to the CRAN tests.
>>>   Henrik's is one, "R CMD check --test-dir=myCustomTests" is another.
>>> 
>>> Rainer's package is unusual, in that from his description it can't
>>> really work unless the user obtains an API key.  There are other
>>> packages like that, and those cases need manual handling by CRAN:  they
>>> don't really run full tests by default.  But the vast majority of
>>> packages should be able to live within the CRAN guidelines.
>> 10 years ago, I would have definitely supported this statement. But I
>> am not sure it is still correct today, as there are now many packages
>> that require a connection to web API to work (or depend on a package
>> that uses an API). Additionally, CRAN only allows a limited amount of
>> compute time for each check, so there are often longer tests that you
>> want to run locally but not on CRAN. CRAN is a specialised testing
>> service and it does have different constraints to your local machine,
>> travis, and bioconductor.
>> A quick search of the CRAN mirror on github
>> (https://github.com/search?q=org%3Acran+skip_on_cran&type=Code)
>> reveals that there are ~2700 tests that use testthat::skip_on_cran().
>> This is obviously an underestimate of the total number of tests
>> skipped on CRAN, as many packages don't use testthat, or use an
>> alternative technique to avoid running code on CRAN.
> 
> That's not so obviously an underestimate, as packages that use that technique use it many times, not just once per package.  (A sample I looked at averaged 15 calls per package, but I don't know if that's unbiased.)
> 
> But in any case, the skip_on_cran() function implements a version of Henrik's approach.  The name of the function is misleading, it doesn't attempt to distinguish between CRAN and a regular user.

I would guess because it can?t. If there would be a standardised way of identifying that the test is run on CRAN, I would use this immediately.

Cheers,

Rainer


> 
> Duncan Murdoch
> 
> ______________________________________________
> R-package-devel at r-project.org <mailto:R-package-devel at r-project.org> mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
--
Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)

University of Z?rich

Cell:       +41 (0)78 630 66 57
email:      Rainer at krugs.de
Skype:      RMkrug

PGP: 0x0F52F982




-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 488 bytes
Desc: Message signed with OpenPGP
URL: <https://stat.ethz.ch/pipermail/r-package-devel/attachments/20180907/226b02ce/attachment.sig>

From murdoch@dunc@n @ending from gm@il@com  Fri Sep  7 10:01:14 2018
From: murdoch@dunc@n @ending from gm@il@com (Duncan Murdoch)
Date: Fri, 7 Sep 2018 04:01:14 -0400
Subject: [R-pkg-devel] 
 Submission to CRAN when package needs personal data (API key)
In-Reply-To: <CAARY7kgrHWq=jOYe+Cd+kxGcdDBCe=cjURXozdUqS+RsPBU-_A@mail.gmail.com>
References: <DBD7AB1C-0A0A-4E9F-BA60-4A3ADB4F9E3F@krugs.de>
 <67157cbb-20a7-517a-62c1-71dcfa53e427@statistik.tu-dortmund.de>
 <DCE7D556-C105-48D4-AB2D-E8B2240A870E@krugs.de>
 <CAB-BFRqeQsqeM+ptg-sasS8b-O=9-ABhC1OwXDqERKUQ3_1T3g@mail.gmail.com>
 <271d7400-b8e1-4eb0-2146-16778d815fc6@effectivedefense.org>
 <CABtg=KnsFcGZda7KHSMKzPTQqtU9pSBYmbC_TENf6soUJBeGmA@mail.gmail.com>
 <470e407b-85a7-fe4d-978b-f3a8d27cef22@effectivedefense.org>
 <CAFDcVCSJ7wddkaFWZLRm+PTqUB+dqTWsijo=RKcE0pxaAH+eYg@mail.gmail.com>
 <ec8c411f-6a36-d23d-29eb-98957b9e12bb@gmail.com>
 <CABdHhvGzR1MaQfPw-zjiCSgBC=MmAs7uW2OrbsPLi1y8qP+JJQ@mail.gmail.com>
 <9cad2b5a-d4fb-452c-0db3-b0711a887f10@gmail.com>
 <CAARY7kgrHWq=jOYe+Cd+kxGcdDBCe=cjURXozdUqS+RsPBU-_A@mail.gmail.com>
Message-ID: <03bb833b-0f1e-de24-2c75-159717b3ad31@gmail.com>

On 07/09/2018 2:18 AM, David Hugh-Jones wrote:
> 
> 
> On Fri, 7 Sep 2018 at 01:16, Duncan Murdoch <murdoch.duncan at gmail.com 
> <mailto:murdoch.duncan at gmail.com>> wrote:
> 
> 
> 
>     When packages delete tests just for CRAN, the quality of the repository
>     suffers.? Users should be able to check an install by running the tests
>     that passed on CRAN and seeing them pass on their system as well.
> 
> 
> In my limited experience there are usually tests that can't run on CRAN 
>  ?because they take too long, rely on external software or configuration 
> that is absent, or just fail on CRAN only (which is naturally hard to 
> debug). This seems normal, and having the ability to turn off some tests 
> is useful. The fact that multiple workarounds have evolved to do this 
> suggests that the need is widespread.

I think it's useful to think of 3 groups who might run tests:

  - authors
  - CRAN
  - other users of a package.

What Hadley was arguing for is that CRAN should identify itself to a 
package, so that by default a package could run different tests for
CRAN than for other users.  I am arguing that they should run the same 
tests by default.

Clearly authors might want more extensive tests like the ones you mention.

I think it would be a good thing if a standard method evolved for others 
to ask for those tests as well.  That suggestion was made and support 
for it was added to R back in 2014.  So far standardization hasn't 
happened, which could indicate that it isn't really needed, or just that 
nobody has bothered to push for it.

Duncan Murdoch


From c@@rdi@g@bor @ending from gm@il@com  Fri Sep  7 10:27:12 2018
From: c@@rdi@g@bor @ending from gm@il@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Fri, 7 Sep 2018 09:27:12 +0100
Subject: [R-pkg-devel] 
 Submission to CRAN when package needs personal data (API key)
In-Reply-To: <03bb833b-0f1e-de24-2c75-159717b3ad31@gmail.com>
References: <DBD7AB1C-0A0A-4E9F-BA60-4A3ADB4F9E3F@krugs.de>
 <67157cbb-20a7-517a-62c1-71dcfa53e427@statistik.tu-dortmund.de>
 <DCE7D556-C105-48D4-AB2D-E8B2240A870E@krugs.de>
 <CAB-BFRqeQsqeM+ptg-sasS8b-O=9-ABhC1OwXDqERKUQ3_1T3g@mail.gmail.com>
 <271d7400-b8e1-4eb0-2146-16778d815fc6@effectivedefense.org>
 <CABtg=KnsFcGZda7KHSMKzPTQqtU9pSBYmbC_TENf6soUJBeGmA@mail.gmail.com>
 <470e407b-85a7-fe4d-978b-f3a8d27cef22@effectivedefense.org>
 <CAFDcVCSJ7wddkaFWZLRm+PTqUB+dqTWsijo=RKcE0pxaAH+eYg@mail.gmail.com>
 <ec8c411f-6a36-d23d-29eb-98957b9e12bb@gmail.com>
 <CABdHhvGzR1MaQfPw-zjiCSgBC=MmAs7uW2OrbsPLi1y8qP+JJQ@mail.gmail.com>
 <9cad2b5a-d4fb-452c-0db3-b0711a887f10@gmail.com>
 <CAARY7kgrHWq=jOYe+Cd+kxGcdDBCe=cjURXozdUqS+RsPBU-_A@mail.gmail.com>
 <03bb833b-0f1e-de24-2c75-159717b3ad31@gmail.com>
Message-ID: <CABtg=KnZAyWCY++2vBnM-XNXAOkXB=o2r6Brc2M=EVfUMZhq9Q@mail.gmail.com>

On Fri, Sep 7, 2018 at 9:01 AM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
[...]
>
> I think it's useful to think of 3 groups who might run tests:
>
>   - authors
>   - CRAN
>   - other users of a package.
>
> What Hadley was arguing for is that CRAN should identify itself to a
> package, so that by default a package could run different tests for
> CRAN than for other users.  I am arguing that they should run the same
> tests by default.

When are users running tests for packages at all? The tests are by default
no even installed with the package. The only time I usually do this is when
running reverse dependency checks. In this specific case I can easily set
ON_CRAN as well, if I want to replicate the CRAN tests. Or, maybe even better,
I don't set it, and run the extended test suite to potentially catch more
breakage.

> Clearly authors might want more extensive tests like the ones you mention.
>
> I think it would be a good thing if a standard method evolved for others
> to ask for those tests as well.

If they don't set ON_CRAN (which they already don't),  then they get the
extended test suite by default.

Gabor

> That suggestion was made and support
> for it was added to R back in 2014.  So far standardization hasn't
> happened, which could indicate that it isn't really needed, or just that
> nobody has bothered to push for it.
>
> Duncan Murdoch
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From d@vidhughjone@ @ending from gm@il@com  Fri Sep  7 11:20:12 2018
From: d@vidhughjone@ @ending from gm@il@com (David Hugh-Jones)
Date: Fri, 7 Sep 2018 10:20:12 +0100
Subject: [R-pkg-devel] 
 Submission to CRAN when package needs personal data (API key)
In-Reply-To: <03bb833b-0f1e-de24-2c75-159717b3ad31@gmail.com>
References: <DBD7AB1C-0A0A-4E9F-BA60-4A3ADB4F9E3F@krugs.de>
 <67157cbb-20a7-517a-62c1-71dcfa53e427@statistik.tu-dortmund.de>
 <DCE7D556-C105-48D4-AB2D-E8B2240A870E@krugs.de>
 <CAB-BFRqeQsqeM+ptg-sasS8b-O=9-ABhC1OwXDqERKUQ3_1T3g@mail.gmail.com>
 <271d7400-b8e1-4eb0-2146-16778d815fc6@effectivedefense.org>
 <CABtg=KnsFcGZda7KHSMKzPTQqtU9pSBYmbC_TENf6soUJBeGmA@mail.gmail.com>
 <470e407b-85a7-fe4d-978b-f3a8d27cef22@effectivedefense.org>
 <CAFDcVCSJ7wddkaFWZLRm+PTqUB+dqTWsijo=RKcE0pxaAH+eYg@mail.gmail.com>
 <ec8c411f-6a36-d23d-29eb-98957b9e12bb@gmail.com>
 <CABdHhvGzR1MaQfPw-zjiCSgBC=MmAs7uW2OrbsPLi1y8qP+JJQ@mail.gmail.com>
 <9cad2b5a-d4fb-452c-0db3-b0711a887f10@gmail.com>
 <CAARY7kgrHWq=jOYe+Cd+kxGcdDBCe=cjURXozdUqS+RsPBU-_A@mail.gmail.com>
 <03bb833b-0f1e-de24-2c75-159717b3ad31@gmail.com>
Message-ID: <CAARY7kgjcG4VmEf6ZEfAeKEimoC+ayp9t7uWvNS-hvmCLfiKfg@mail.gmail.com>

On Fri, 7 Sep 2018 at 09:01, Duncan Murdoch <murdoch.duncan at gmail.com>
wrote:

>
> I think it's useful to think of 3 groups who might run tests:
>
>   - authors
>   - CRAN
>   - other users of a package.
>
> What Hadley was arguing for is that CRAN should identify itself to a
> package, so that by default a package could run different tests for
> CRAN than for other users.  I am arguing that they should run the same
> tests by default.


This seems like the crux. But there are occasions when authors want to
single out CRAN. Sometimes things just don't work on CRAN; the exact config
of CRAN servers is not always clear, so debugging can be hard; at some
point, it just gets easier to say skip_on_cran() or the equivalent. (The
same applies to some degree for e.g. appveyor/travis). I appreciate this is
an imperfect workaround. If the CRAN config were exactly reproducible eg
via a docker image, perhaps it wouldn't be necessary.
-- 
Sent from Gmail Mobile

	[[alternative HTML version deleted]]


From @pencer@gr@ve@ @ending from effectivedefen@e@org  Fri Sep  7 13:07:47 2018
From: @pencer@gr@ve@ @ending from effectivedefen@e@org (Spencer Graves)
Date: Fri, 7 Sep 2018 06:07:47 -0500
Subject: [R-pkg-devel] 
 Submission to CRAN when package needs personal data (API key)
In-Reply-To: <CAARY7kgrHWq=jOYe+Cd+kxGcdDBCe=cjURXozdUqS+RsPBU-_A@mail.gmail.com>
References: <DBD7AB1C-0A0A-4E9F-BA60-4A3ADB4F9E3F@krugs.de>
 <67157cbb-20a7-517a-62c1-71dcfa53e427@statistik.tu-dortmund.de>
 <DCE7D556-C105-48D4-AB2D-E8B2240A870E@krugs.de>
 <CAB-BFRqeQsqeM+ptg-sasS8b-O=9-ABhC1OwXDqERKUQ3_1T3g@mail.gmail.com>
 <271d7400-b8e1-4eb0-2146-16778d815fc6@effectivedefense.org>
 <CABtg=KnsFcGZda7KHSMKzPTQqtU9pSBYmbC_TENf6soUJBeGmA@mail.gmail.com>
 <470e407b-85a7-fe4d-978b-f3a8d27cef22@effectivedefense.org>
 <CAFDcVCSJ7wddkaFWZLRm+PTqUB+dqTWsijo=RKcE0pxaAH+eYg@mail.gmail.com>
 <ec8c411f-6a36-d23d-29eb-98957b9e12bb@gmail.com>
 <CABdHhvGzR1MaQfPw-zjiCSgBC=MmAs7uW2OrbsPLi1y8qP+JJQ@mail.gmail.com>
 <9cad2b5a-d4fb-452c-0db3-b0711a887f10@gmail.com>
 <CAARY7kgrHWq=jOYe+Cd+kxGcdDBCe=cjURXozdUqS+RsPBU-_A@mail.gmail.com>
Message-ID: <4a081ce2-c322-f081-e745-f5c9c28e4ac2@effectivedefense.org>



On 2018-09-07 01:18, David Hugh-Jones wrote:
> On Fri, 7 Sep 2018 at 01:16, Duncan Murdoch <murdoch.duncan at gmail.com>
> wrote:
>
>>
>> When packages delete tests just for CRAN, the quality of the repository
>> suffers.  Users should be able to check an install by running the tests
>> that passed on CRAN and seeing them pass on their system as well.
>
> In my limited experience there are usually tests that can't run on CRAN
>   because they take too long, rely on external software or configuration
> that is absent, or just fail on CRAN only (which is naturally hard to
> debug). This seems normal, and having the ability to turn off some tests is
> useful. The fact that multiple workarounds have evolved to do this suggests
> that the need is widespread.


 ????? Almost a decade ago I was told that certain tests in the fda 
package took too much time on CRAN.? I was NOT going to hammer on my 
co-authors to make those tests shorter.? I was happy I got those tests 
at all!? So I wrote fda::CRAN() and for those tests that took too long, 
I wrapped them in


if(!CRAN()){
 ? (tests that took too long to run on CRAN)
}


 ????? I did it after being told repeatedly, (a) you cannot run those 
tests on CRAN, and (b) you should not use that function "CRAN()"! Since 
then, I've had other occasions to use it.


 ????? Spencer Graves
>
>> --
> Sent from Gmail Mobile
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From edd @ending from debi@n@org  Fri Sep  7 13:29:17 2018
From: edd @ending from debi@n@org (Dirk Eddelbuettel)
Date: Fri, 7 Sep 2018 06:29:17 -0500
Subject: [R-pkg-devel] 
 Submission to CRAN when package needs personal data (API key)
In-Reply-To: <CABtg=KnZAyWCY++2vBnM-XNXAOkXB=o2r6Brc2M=EVfUMZhq9Q@mail.gmail.com>
References: <DBD7AB1C-0A0A-4E9F-BA60-4A3ADB4F9E3F@krugs.de>
 <67157cbb-20a7-517a-62c1-71dcfa53e427@statistik.tu-dortmund.de>
 <DCE7D556-C105-48D4-AB2D-E8B2240A870E@krugs.de>
 <CAB-BFRqeQsqeM+ptg-sasS8b-O=9-ABhC1OwXDqERKUQ3_1T3g@mail.gmail.com>
 <271d7400-b8e1-4eb0-2146-16778d815fc6@effectivedefense.org>
 <CABtg=KnsFcGZda7KHSMKzPTQqtU9pSBYmbC_TENf6soUJBeGmA@mail.gmail.com>
 <470e407b-85a7-fe4d-978b-f3a8d27cef22@effectivedefense.org>
 <CAFDcVCSJ7wddkaFWZLRm+PTqUB+dqTWsijo=RKcE0pxaAH+eYg@mail.gmail.com>
 <ec8c411f-6a36-d23d-29eb-98957b9e12bb@gmail.com>
 <CABdHhvGzR1MaQfPw-zjiCSgBC=MmAs7uW2OrbsPLi1y8qP+JJQ@mail.gmail.com>
 <9cad2b5a-d4fb-452c-0db3-b0711a887f10@gmail.com>
 <CAARY7kgrHWq=jOYe+Cd+kxGcdDBCe=cjURXozdUqS+RsPBU-_A@mail.gmail.com>
 <03bb833b-0f1e-de24-2c75-159717b3ad31@gmail.com>
 <CABtg=KnZAyWCY++2vBnM-XNXAOkXB=o2r6Brc2M=EVfUMZhq9Q@mail.gmail.com>
Message-ID: <23442.24845.415569.929289@rob.eddelbuettel.com>


On 7 September 2018 at 09:27, G?bor Cs?rdi wrote:
| When are users running tests for packages at all? The tests are by default
| no even installed with the package. The only time I usually do this is when

Which some people consider to be the wrong decision by testthat.

Base R has a set of functions

   tools::testInstalledBasic
   tools::testInstalledPackage
   tools::testInstalledPackages

so that an _installed_ package can be tested.  Unless, of course, it uses
testthat.  Matt Dowle just run into this (per a question on StackOverflow).
RUnit, on the other hand, supports this.

Being able to test installed packages is useful when you change any upstream
dependency (may as author of a dependency), change a system library, change
the R version, or are simply diligent about your system.

Removing the ability to do so, or requiring a reinstallation (via a temporary
or permanent setting of another options) of the package, does not help in
that matter.

| running reverse dependency checks. In this specific case I can easily set
| ON_CRAN as well, if I want to replicate the CRAN tests. Or, maybe even better,
| I don't set it, and run the extended test suite to potentially catch more
| breakage.
| 
| > Clearly authors might want more extensive tests like the ones you mention.
| >
| > I think it would be a good thing if a standard method evolved for others
| > to ask for those tests as well.
| 
| If they don't set ON_CRAN (which they already don't),  then they get the
| extended test suite by default.

I have mentioned this a few times in the past but here is what Rcpp does in a
_fully automated manner_

   1. By default a limited number of tests are running to keep the run-time
      of 'R CMD check' short enough.

   2. Unless you define an override environment variable (which we do eg for
      Travis CI) and extended tests are running (eg in development)

   3. Or unless the package version signals a development version in which
      the environment variable gets set and extended are running.

The check for 'development' version is simple: interim version are labelled
as eg right now 0.12.18.2 having _four_ components. We infer a development
version.   Release version like 0.12.18 on CRAN only ever have three.  So we
can test and automate.  This is not perfect, but it is a step up from having
to define
 
Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From c@@rdi@g@bor @ending from gm@il@com  Fri Sep  7 14:08:25 2018
From: c@@rdi@g@bor @ending from gm@il@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Fri, 7 Sep 2018 13:08:25 +0100
Subject: [R-pkg-devel] 
 Submission to CRAN when package needs personal data (API key)
In-Reply-To: <23442.24845.415569.929289@rob.eddelbuettel.com>
References: <DBD7AB1C-0A0A-4E9F-BA60-4A3ADB4F9E3F@krugs.de>
 <67157cbb-20a7-517a-62c1-71dcfa53e427@statistik.tu-dortmund.de>
 <DCE7D556-C105-48D4-AB2D-E8B2240A870E@krugs.de>
 <CAB-BFRqeQsqeM+ptg-sasS8b-O=9-ABhC1OwXDqERKUQ3_1T3g@mail.gmail.com>
 <271d7400-b8e1-4eb0-2146-16778d815fc6@effectivedefense.org>
 <CABtg=KnsFcGZda7KHSMKzPTQqtU9pSBYmbC_TENf6soUJBeGmA@mail.gmail.com>
 <470e407b-85a7-fe4d-978b-f3a8d27cef22@effectivedefense.org>
 <CAFDcVCSJ7wddkaFWZLRm+PTqUB+dqTWsijo=RKcE0pxaAH+eYg@mail.gmail.com>
 <ec8c411f-6a36-d23d-29eb-98957b9e12bb@gmail.com>
 <CABdHhvGzR1MaQfPw-zjiCSgBC=MmAs7uW2OrbsPLi1y8qP+JJQ@mail.gmail.com>
 <9cad2b5a-d4fb-452c-0db3-b0711a887f10@gmail.com>
 <CAARY7kgrHWq=jOYe+Cd+kxGcdDBCe=cjURXozdUqS+RsPBU-_A@mail.gmail.com>
 <03bb833b-0f1e-de24-2c75-159717b3ad31@gmail.com>
 <CABtg=KnZAyWCY++2vBnM-XNXAOkXB=o2r6Brc2M=EVfUMZhq9Q@mail.gmail.com>
 <23442.24845.415569.929289@rob.eddelbuettel.com>
Message-ID: <CABtg=KkYMzouNH9-pmvjd4pSpjWMS7RhE8BwEZ4TwDGdhdmdyA@mail.gmail.com>

On Fri, Sep 7, 2018 at 12:29 PM Dirk Eddelbuettel <edd at debian.org> wrote:
>
>
> On 7 September 2018 at 09:27, G?bor Cs?rdi wrote:
> | When are users running tests for packages at all? The tests are by default
> | no even installed with the package. The only time I usually do this is when
>
> Which some people consider to be the wrong decision by testthat.

How is testthat related to this? When you `R CMD INSTALL` a package,
AFAICT it does not install the test by default. Independently of what
testsuite you use.

> Base R has a set of functions
>
>    tools::testInstalledBasic
>    tools::testInstalledPackage
>    tools::testInstalledPackages
>
> so that an _installed_ package can be tested.  Unless, of course, it uses
> testthat.  Matt Dowle just run into this (per a question on StackOverflow).
> RUnit, on the other hand, supports this.

I am probably missing sg, but is this expected to run the Rcpp test suite?

tools::testInstalledPackage("Rcpp", types = "tests")

Because it takes 1ms to run and has no output.

Gabor

[...]


From murdoch@dunc@n @ending from gm@il@com  Fri Sep  7 14:32:07 2018
From: murdoch@dunc@n @ending from gm@il@com (Duncan Murdoch)
Date: Fri, 7 Sep 2018 08:32:07 -0400
Subject: [R-pkg-devel] 
 Submission to CRAN when package needs personal data (API key)
In-Reply-To: <CABtg=KnZAyWCY++2vBnM-XNXAOkXB=o2r6Brc2M=EVfUMZhq9Q@mail.gmail.com>
References: <DBD7AB1C-0A0A-4E9F-BA60-4A3ADB4F9E3F@krugs.de>
 <67157cbb-20a7-517a-62c1-71dcfa53e427@statistik.tu-dortmund.de>
 <DCE7D556-C105-48D4-AB2D-E8B2240A870E@krugs.de>
 <CAB-BFRqeQsqeM+ptg-sasS8b-O=9-ABhC1OwXDqERKUQ3_1T3g@mail.gmail.com>
 <271d7400-b8e1-4eb0-2146-16778d815fc6@effectivedefense.org>
 <CABtg=KnsFcGZda7KHSMKzPTQqtU9pSBYmbC_TENf6soUJBeGmA@mail.gmail.com>
 <470e407b-85a7-fe4d-978b-f3a8d27cef22@effectivedefense.org>
 <CAFDcVCSJ7wddkaFWZLRm+PTqUB+dqTWsijo=RKcE0pxaAH+eYg@mail.gmail.com>
 <ec8c411f-6a36-d23d-29eb-98957b9e12bb@gmail.com>
 <CABdHhvGzR1MaQfPw-zjiCSgBC=MmAs7uW2OrbsPLi1y8qP+JJQ@mail.gmail.com>
 <9cad2b5a-d4fb-452c-0db3-b0711a887f10@gmail.com>
 <CAARY7kgrHWq=jOYe+Cd+kxGcdDBCe=cjURXozdUqS+RsPBU-_A@mail.gmail.com>
 <03bb833b-0f1e-de24-2c75-159717b3ad31@gmail.com>
 <CABtg=KnZAyWCY++2vBnM-XNXAOkXB=o2r6Brc2M=EVfUMZhq9Q@mail.gmail.com>
Message-ID: <d7216f73-930c-dbf4-e260-3089fde3882b@gmail.com>

On 07/09/2018 4:27 AM, G?bor Cs?rdi wrote:
> On Fri, Sep 7, 2018 at 9:01 AM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> [...]
>>
>> I think it's useful to think of 3 groups who might run tests:
>>
>>    - authors
>>    - CRAN
>>    - other users of a package.
>>
>> What Hadley was arguing for is that CRAN should identify itself to a
>> package, so that by default a package could run different tests for
>> CRAN than for other users.  I am arguing that they should run the same
>> tests by default.
> 
> When are users running tests for packages at all?

I do sometimes, but I do agree this is a rare case.  So why does it need 
to be distinguished from CRAN?

  The tests are by default
> no even installed with the package. 

They should be in the tarball, which is what I would be starting with 
when I wanted to run the tests.

The only time I usually do this is when
> running reverse dependency checks. In this specific case I can easily set
> ON_CRAN as well, if I want to replicate the CRAN tests. Or, maybe even better,
> I don't set it, and run the extended test suite to potentially catch more
> breakage.
> 
>> Clearly authors might want more extensive tests like the ones you mention.
>>
>> I think it would be a good thing if a standard method evolved for others
>> to ask for those tests as well.
> 
> If they don't set ON_CRAN (which they already don't),  then they get the
> extended test suite by default.

I think we are just getting repetitive now.  The question is whether the 
tests reported on CRAN should be the defaults or special ones.  You (and 
Hadley) think they should be a special subset.  I think they should be 
the default ones, and the author should be free to define one or more 
sets of more extensive tests to run on request.

Since CRAN is famously uncommunicative and unresponsive to suggested 
changes, I think the current state of affairs (which suits my 
preferences) will continue.  So why not make it easier to live with, by 
promoting a standard way to request special tests, rather than 
continuing to beat this dead horse?

Duncan Murdoch


From edd @ending from debi@n@org  Fri Sep  7 14:48:35 2018
From: edd @ending from debi@n@org (Dirk Eddelbuettel)
Date: Fri, 7 Sep 2018 07:48:35 -0500
Subject: [R-pkg-devel] 
 Submission to CRAN when package needs personal data (API key)
In-Reply-To: <CABtg=KkYMzouNH9-pmvjd4pSpjWMS7RhE8BwEZ4TwDGdhdmdyA@mail.gmail.com>
References: <DBD7AB1C-0A0A-4E9F-BA60-4A3ADB4F9E3F@krugs.de>
 <67157cbb-20a7-517a-62c1-71dcfa53e427@statistik.tu-dortmund.de>
 <DCE7D556-C105-48D4-AB2D-E8B2240A870E@krugs.de>
 <CAB-BFRqeQsqeM+ptg-sasS8b-O=9-ABhC1OwXDqERKUQ3_1T3g@mail.gmail.com>
 <271d7400-b8e1-4eb0-2146-16778d815fc6@effectivedefense.org>
 <CABtg=KnsFcGZda7KHSMKzPTQqtU9pSBYmbC_TENf6soUJBeGmA@mail.gmail.com>
 <470e407b-85a7-fe4d-978b-f3a8d27cef22@effectivedefense.org>
 <CAFDcVCSJ7wddkaFWZLRm+PTqUB+dqTWsijo=RKcE0pxaAH+eYg@mail.gmail.com>
 <ec8c411f-6a36-d23d-29eb-98957b9e12bb@gmail.com>
 <CABdHhvGzR1MaQfPw-zjiCSgBC=MmAs7uW2OrbsPLi1y8qP+JJQ@mail.gmail.com>
 <9cad2b5a-d4fb-452c-0db3-b0711a887f10@gmail.com>
 <CAARY7kgrHWq=jOYe+Cd+kxGcdDBCe=cjURXozdUqS+RsPBU-_A@mail.gmail.com>
 <03bb833b-0f1e-de24-2c75-159717b3ad31@gmail.com>
 <CABtg=KnZAyWCY++2vBnM-XNXAOkXB=o2r6Brc2M=EVfUMZhq9Q@mail.gmail.com>
 <23442.24845.415569.929289@rob.eddelbuettel.com>
 <CABtg=KkYMzouNH9-pmvjd4pSpjWMS7RhE8BwEZ4TwDGdhdmdyA@mail.gmail.com>
Message-ID: <23442.29603.255182.477477@rob.eddelbuettel.com>


On 7 September 2018 at 13:08, G?bor Cs?rdi wrote:
| On Fri, Sep 7, 2018 at 12:29 PM Dirk Eddelbuettel <edd at debian.org> wrote:
| >
| >
| > On 7 September 2018 at 09:27, G?bor Cs?rdi wrote:
| > | When are users running tests for packages at all? The tests are by default
| > | no even installed with the package. The only time I usually do this is when
| >
| > Which some people consider to be the wrong decision by testthat.
| 
| How is testthat related to this? When you `R CMD INSTALL` a package,
| AFAICT it does not install the test by default. Independently of what
| testsuite you use.

I presume you know the other per the bottom part of the email. Following the
(very early best practive started by P Grosjean, M Maechler and others)
tests/doRUnit.R always calls out to files in inst/tests or inst/unitTests.

Which. Get. Installed.

For every user. Automatically.  A much better default.
 
| > Base R has a set of functions
| >
| >    tools::testInstalledBasic
| >    tools::testInstalledPackage
| >    tools::testInstalledPackages
| >
| > so that an _installed_ package can be tested.  Unless, of course, it uses
| > testthat.  Matt Dowle just run into this (per a question on StackOverflow).
| > RUnit, on the other hand, supports this.
| 
| I am probably missing sg, but is this expected to run the Rcpp test suite?
| 
| tools::testInstalledPackage("Rcpp", types = "tests")
| 
| Because it takes 1ms to run and has no output.

You probably need a) the required env var set and b) the RUnit test runner to
loop over RUnit tests and c) make sure the dependent C++ files are compiled
first which is why we have a wrapper in that package.  But note that I never
claimed it currently worked -- that test setup (being able to run from tests/
and once installed) is more tricky for Rcpp due to the compilation.

I did claim that by not giving the testthat user that option you are not helping.
And I stand by that.

Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From iuc@r @ending from fedor@project@org  Fri Sep  7 15:52:51 2018
From: iuc@r @ending from fedor@project@org (=?UTF-8?Q?I=C3=B1aki_Ucar?=)
Date: Fri, 7 Sep 2018 15:52:51 +0200
Subject: [R-pkg-devel] 
 Submission to CRAN when package needs personal data (API key)
In-Reply-To: <23442.29603.255182.477477@rob.eddelbuettel.com>
References: <DBD7AB1C-0A0A-4E9F-BA60-4A3ADB4F9E3F@krugs.de>
 <67157cbb-20a7-517a-62c1-71dcfa53e427@statistik.tu-dortmund.de>
 <DCE7D556-C105-48D4-AB2D-E8B2240A870E@krugs.de>
 <CAB-BFRqeQsqeM+ptg-sasS8b-O=9-ABhC1OwXDqERKUQ3_1T3g@mail.gmail.com>
 <271d7400-b8e1-4eb0-2146-16778d815fc6@effectivedefense.org>
 <CABtg=KnsFcGZda7KHSMKzPTQqtU9pSBYmbC_TENf6soUJBeGmA@mail.gmail.com>
 <470e407b-85a7-fe4d-978b-f3a8d27cef22@effectivedefense.org>
 <CAFDcVCSJ7wddkaFWZLRm+PTqUB+dqTWsijo=RKcE0pxaAH+eYg@mail.gmail.com>
 <ec8c411f-6a36-d23d-29eb-98957b9e12bb@gmail.com>
 <CABdHhvGzR1MaQfPw-zjiCSgBC=MmAs7uW2OrbsPLi1y8qP+JJQ@mail.gmail.com>
 <9cad2b5a-d4fb-452c-0db3-b0711a887f10@gmail.com>
 <CAARY7kgrHWq=jOYe+Cd+kxGcdDBCe=cjURXozdUqS+RsPBU-_A@mail.gmail.com>
 <03bb833b-0f1e-de24-2c75-159717b3ad31@gmail.com>
 <CABtg=KnZAyWCY++2vBnM-XNXAOkXB=o2r6Brc2M=EVfUMZhq9Q@mail.gmail.com>
 <23442.24845.415569.929289@rob.eddelbuettel.com>
 <CABtg=KkYMzouNH9-pmvjd4pSpjWMS7RhE8BwEZ4TwDGdhdmdyA@mail.gmail.com>
 <23442.29603.255182.477477@rob.eddelbuettel.com>
Message-ID: <CALEXWq22p95LVirVVi0MBJvX7HaHfzzuvQQDZBO4PwbYS4soKQ@mail.gmail.com>

El vie., 7 sept. 2018 a las 15:28, Dirk Eddelbuettel
(<edd at debian.org>) escribi?:
>
>
> On 7 September 2018 at 13:08, G?bor Cs?rdi wrote:
> | On Fri, Sep 7, 2018 at 12:29 PM Dirk Eddelbuettel <edd at debian.org> wrote:
> | >
> | >
> | > On 7 September 2018 at 09:27, G?bor Cs?rdi wrote:
> | > | When are users running tests for packages at all? The tests are by default
> | > | no even installed with the package. The only time I usually do this is when
> | >
> | > Which some people consider to be the wrong decision by testthat.
> |
> | How is testthat related to this? When you `R CMD INSTALL` a package,
> | AFAICT it does not install the test by default. Independently of what
> | testsuite you use.
>
> I presume you know the other per the bottom part of the email. Following the
> (very early best practive started by P Grosjean, M Maechler and others)
> tests/doRUnit.R always calls out to files in inst/tests or inst/unitTests.
>
> Which. Get. Installed.
>
> For every user. Automatically.  A much better default.
>
> | > Base R has a set of functions
> | >
> | >    tools::testInstalledBasic
> | >    tools::testInstalledPackage
> | >    tools::testInstalledPackages
> | >
> | > so that an _installed_ package can be tested.  Unless, of course, it uses
> | > testthat.  Matt Dowle just run into this (per a question on StackOverflow).
> | > RUnit, on the other hand, supports this.
> |
> | I am probably missing sg, but is this expected to run the Rcpp test suite?
> |
> | tools::testInstalledPackage("Rcpp", types = "tests")
> |
> | Because it takes 1ms to run and has no output.
>
> You probably need a) the required env var set and b) the RUnit test runner to
> loop over RUnit tests and c) make sure the dependent C++ files are compiled
> first which is why we have a wrapper in that package.  But note that I never
> claimed it currently worked -- that test setup (being able to run from tests/
> and once installed) is more tricky for Rcpp due to the compilation.
>
> I did claim that by not giving the testthat user that option you are not helping.
> And I stand by that.

For the record, this is what the testthat paper in the R Journal says:

"[...] I recommend storing your tests in inst/tests/ (so users also
have access to them), then including one file in tests/ that runs all
of the package tests. The test_package(package_name) function makes
this easy. [...] This setup has the additional advantage that users
can make sure your package works correctly in their run-time
environment."

I?aki

>
> Dirk
>
> --
> http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>


From r@lf@@tubner @ending from d@q@n@@com  Fri Sep  7 16:02:03 2018
From: r@lf@@tubner @ending from d@q@n@@com (Ralf Stubner)
Date: Fri, 7 Sep 2018 16:02:03 +0200
Subject: [R-pkg-devel] 
 Submission to CRAN when package needs personal data (API key)
In-Reply-To: <CALEXWq22p95LVirVVi0MBJvX7HaHfzzuvQQDZBO4PwbYS4soKQ@mail.gmail.com>
References: <DBD7AB1C-0A0A-4E9F-BA60-4A3ADB4F9E3F@krugs.de>
 <CAB-BFRqeQsqeM+ptg-sasS8b-O=9-ABhC1OwXDqERKUQ3_1T3g@mail.gmail.com>
 <271d7400-b8e1-4eb0-2146-16778d815fc6@effectivedefense.org>
 <CABtg=KnsFcGZda7KHSMKzPTQqtU9pSBYmbC_TENf6soUJBeGmA@mail.gmail.com>
 <470e407b-85a7-fe4d-978b-f3a8d27cef22@effectivedefense.org>
 <CAFDcVCSJ7wddkaFWZLRm+PTqUB+dqTWsijo=RKcE0pxaAH+eYg@mail.gmail.com>
 <ec8c411f-6a36-d23d-29eb-98957b9e12bb@gmail.com>
 <CABdHhvGzR1MaQfPw-zjiCSgBC=MmAs7uW2OrbsPLi1y8qP+JJQ@mail.gmail.com>
 <9cad2b5a-d4fb-452c-0db3-b0711a887f10@gmail.com>
 <CAARY7kgrHWq=jOYe+Cd+kxGcdDBCe=cjURXozdUqS+RsPBU-_A@mail.gmail.com>
 <03bb833b-0f1e-de24-2c75-159717b3ad31@gmail.com>
 <CABtg=KnZAyWCY++2vBnM-XNXAOkXB=o2r6Brc2M=EVfUMZhq9Q@mail.gmail.com>
 <23442.24845.415569.929289@rob.eddelbuettel.com>
 <CABtg=KkYMzouNH9-pmvjd4pSpjWMS7RhE8BwEZ4TwDGdhdmdyA@mail.gmail.com>
 <23442.29603.255182.477477@rob.eddelbuettel.com>
 <CALEXWq22p95LVirVVi0MBJvX7HaHfzzuvQQDZBO4PwbYS4soKQ@mail.gmail.com>
Message-ID: <09f3756a-09ec-9c35-9d52-5f7c0434aec0@daqana.com>

On 07.09.2018 15:52, I?aki Ucar wrote:
> For the record, this is what the testthat paper in the R Journal says:
> 
> "[...] I recommend storing your tests in inst/tests/ (so users also
> have access to them), then including one file in tests/ that runs all
> of the package tests. The test_package(package_name) function makes
> this easy. [...] This setup has the additional advantage that users
> can make sure your package works correctly in their run-time
> environment."

Tests in 'inst/test' got deprecated later on:

https://github.com/r-lib/testthat/commit/0a7d27bb9ea545be7da1a10e511962928d888302

Greetings
Ralf

-- 
Ralf Stubner
Senior Software Engineer / Trainer

daqana GmbH
Dortustra?e 48
14467 Potsdam

T: +49 331 23 61 93 11
F: +49 331 23 61 93 90
M: +49 162 20 91 196
Mail: ralf.stubner at daqana.com

Sitz: Potsdam
Register: AG Potsdam HRB 27966 P
Ust.-IdNr.: DE300072622
Gesch?ftsf?hrer: Prof. Dr. Dr. Karl-Kuno Kunze


-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 833 bytes
Desc: OpenPGP digital signature
URL: <https://stat.ethz.ch/pipermail/r-package-devel/attachments/20180907/eafa744a/attachment.sig>

From iuc@r @ending from fedor@project@org  Fri Sep  7 16:13:16 2018
From: iuc@r @ending from fedor@project@org (=?UTF-8?Q?I=C3=B1aki_Ucar?=)
Date: Fri, 7 Sep 2018 16:13:16 +0200
Subject: [R-pkg-devel] 
 Submission to CRAN when package needs personal data (API key)
In-Reply-To: <09f3756a-09ec-9c35-9d52-5f7c0434aec0@daqana.com>
References: <DBD7AB1C-0A0A-4E9F-BA60-4A3ADB4F9E3F@krugs.de>
 <CAB-BFRqeQsqeM+ptg-sasS8b-O=9-ABhC1OwXDqERKUQ3_1T3g@mail.gmail.com>
 <271d7400-b8e1-4eb0-2146-16778d815fc6@effectivedefense.org>
 <CABtg=KnsFcGZda7KHSMKzPTQqtU9pSBYmbC_TENf6soUJBeGmA@mail.gmail.com>
 <470e407b-85a7-fe4d-978b-f3a8d27cef22@effectivedefense.org>
 <CAFDcVCSJ7wddkaFWZLRm+PTqUB+dqTWsijo=RKcE0pxaAH+eYg@mail.gmail.com>
 <ec8c411f-6a36-d23d-29eb-98957b9e12bb@gmail.com>
 <CABdHhvGzR1MaQfPw-zjiCSgBC=MmAs7uW2OrbsPLi1y8qP+JJQ@mail.gmail.com>
 <9cad2b5a-d4fb-452c-0db3-b0711a887f10@gmail.com>
 <CAARY7kgrHWq=jOYe+Cd+kxGcdDBCe=cjURXozdUqS+RsPBU-_A@mail.gmail.com>
 <03bb833b-0f1e-de24-2c75-159717b3ad31@gmail.com>
 <CABtg=KnZAyWCY++2vBnM-XNXAOkXB=o2r6Brc2M=EVfUMZhq9Q@mail.gmail.com>
 <23442.24845.415569.929289@rob.eddelbuettel.com>
 <CABtg=KkYMzouNH9-pmvjd4pSpjWMS7RhE8BwEZ4TwDGdhdmdyA@mail.gmail.com>
 <23442.29603.255182.477477@rob.eddelbuettel.com>
 <CALEXWq22p95LVirVVi0MBJvX7HaHfzzuvQQDZBO4PwbYS4soKQ@mail.gmail.com>
 <09f3756a-09ec-9c35-9d52-5f7c0434aec0@daqana.com>
Message-ID: <CALEXWq2a6CajRGE7+=m_NSm=pWT_G-xWFfX2KOmzcmiW0TMscQ@mail.gmail.com>

El vie., 7 sept. 2018 a las 16:03, Ralf Stubner
(<ralf.stubner at daqana.com>) escribi?:
>
> On 07.09.2018 15:52, I?aki Ucar wrote:
> > For the record, this is what the testthat paper in the R Journal says:
> >
> > "[...] I recommend storing your tests in inst/tests/ (so users also
> > have access to them), then including one file in tests/ that runs all
> > of the package tests. The test_package(package_name) function makes
> > this easy. [...] This setup has the additional advantage that users
> > can make sure your package works correctly in their run-time
> > environment."
>
> Tests in 'inst/test' got deprecated later on:
>
> https://github.com/r-lib/testthat/commit/0a7d27bb9ea545be7da1a10e511962928d888302

Yeap, and I was pointing out the *old* (2011) practice and
recommendation. The reason why this evolved and changed, that I don't
know.

I?aki

>
> Greetings
> Ralf
>
> --
> Ralf Stubner
> Senior Software Engineer / Trainer
>
> daqana GmbH
> Dortustra?e 48
> 14467 Potsdam
>
> T: +49 331 23 61 93 11
> F: +49 331 23 61 93 90
> M: +49 162 20 91 196
> Mail: ralf.stubner at daqana.com
>
> Sitz: Potsdam
> Register: AG Potsdam HRB 27966 P
> Ust.-IdNr.: DE300072622
> Gesch?ftsf?hrer: Prof. Dr. Dr. Karl-Kuno Kunze
>


From h@wickh@m @ending from gm@il@com  Fri Sep  7 17:38:42 2018
From: h@wickh@m @ending from gm@il@com (Hadley Wickham)
Date: Fri, 7 Sep 2018 10:38:42 -0500
Subject: [R-pkg-devel] 
 Submission to CRAN when package needs personal data (API key)
In-Reply-To: <CALEXWq2a6CajRGE7+=m_NSm=pWT_G-xWFfX2KOmzcmiW0TMscQ@mail.gmail.com>
References: <DBD7AB1C-0A0A-4E9F-BA60-4A3ADB4F9E3F@krugs.de>
 <CAB-BFRqeQsqeM+ptg-sasS8b-O=9-ABhC1OwXDqERKUQ3_1T3g@mail.gmail.com>
 <271d7400-b8e1-4eb0-2146-16778d815fc6@effectivedefense.org>
 <CABtg=KnsFcGZda7KHSMKzPTQqtU9pSBYmbC_TENf6soUJBeGmA@mail.gmail.com>
 <470e407b-85a7-fe4d-978b-f3a8d27cef22@effectivedefense.org>
 <CAFDcVCSJ7wddkaFWZLRm+PTqUB+dqTWsijo=RKcE0pxaAH+eYg@mail.gmail.com>
 <ec8c411f-6a36-d23d-29eb-98957b9e12bb@gmail.com>
 <CABdHhvGzR1MaQfPw-zjiCSgBC=MmAs7uW2OrbsPLi1y8qP+JJQ@mail.gmail.com>
 <9cad2b5a-d4fb-452c-0db3-b0711a887f10@gmail.com>
 <CAARY7kgrHWq=jOYe+Cd+kxGcdDBCe=cjURXozdUqS+RsPBU-_A@mail.gmail.com>
 <03bb833b-0f1e-de24-2c75-159717b3ad31@gmail.com>
 <CABtg=KnZAyWCY++2vBnM-XNXAOkXB=o2r6Brc2M=EVfUMZhq9Q@mail.gmail.com>
 <23442.24845.415569.929289@rob.eddelbuettel.com>
 <CABtg=KkYMzouNH9-pmvjd4pSpjWMS7RhE8BwEZ4TwDGdhdmdyA@mail.gmail.com>
 <23442.29603.255182.477477@rob.eddelbuettel.com>
 <CALEXWq22p95LVirVVi0MBJvX7HaHfzzuvQQDZBO4PwbYS4soKQ@mail.gmail.com>
 <09f3756a-09ec-9c35-9d52-5f7c0434aec0@daqana.com>
 <CALEXWq2a6CajRGE7+=m_NSm=pWT_G-xWFfX2KOmzcmiW0TMscQ@mail.gmail.com>
Message-ID: <CABdHhvGCBxMed=-qjiD4ouW_93E7NUBGJJMvkznA43WDw12UsQ@mail.gmail.com>

On Fri, Sep 7, 2018 at 9:13 AM I?aki Ucar <iucar at fedoraproject.org> wrote:
>
> El vie., 7 sept. 2018 a las 16:03, Ralf Stubner
> (<ralf.stubner at daqana.com>) escribi?:
> >
> > On 07.09.2018 15:52, I?aki Ucar wrote:
> > > For the record, this is what the testthat paper in the R Journal says:
> > >
> > > "[...] I recommend storing your tests in inst/tests/ (so users also
> > > have access to them), then including one file in tests/ that runs all
> > > of the package tests. The test_package(package_name) function makes
> > > this easy. [...] This setup has the additional advantage that users
> > > can make sure your package works correctly in their run-time
> > > environment."
> >
> > Tests in 'inst/test' got deprecated later on:
> >
> > https://github.com/r-lib/testthat/commit/0a7d27bb9ea545be7da1a10e511962928d888302
>
> Yeap, and I was pointing out the *old* (2011) practice and
> recommendation. The reason why this evolved and changed, that I don't
> know.

Because CRAN specifically asked me to put testthat tests in tests/
(R's standard testing directory), rather that somewhere non-standard.

Hadley

-- 
http://hadley.nz


From murdoch@dunc@n @ending from gm@il@com  Fri Sep  7 19:10:18 2018
From: murdoch@dunc@n @ending from gm@il@com (Duncan Murdoch)
Date: Fri, 7 Sep 2018 13:10:18 -0400
Subject: [R-pkg-devel] 
 Submission to CRAN when package needs personal data (API key)
In-Reply-To: <FF6ADA1A-7221-4CD0-B994-A9D556C29368@krugs.de>
References: <DBD7AB1C-0A0A-4E9F-BA60-4A3ADB4F9E3F@krugs.de>
 <67157cbb-20a7-517a-62c1-71dcfa53e427@statistik.tu-dortmund.de>
 <DCE7D556-C105-48D4-AB2D-E8B2240A870E@krugs.de>
 <CAB-BFRqeQsqeM+ptg-sasS8b-O=9-ABhC1OwXDqERKUQ3_1T3g@mail.gmail.com>
 <271d7400-b8e1-4eb0-2146-16778d815fc6@effectivedefense.org>
 <CABtg=KnsFcGZda7KHSMKzPTQqtU9pSBYmbC_TENf6soUJBeGmA@mail.gmail.com>
 <470e407b-85a7-fe4d-978b-f3a8d27cef22@effectivedefense.org>
 <CAFDcVCSJ7wddkaFWZLRm+PTqUB+dqTWsijo=RKcE0pxaAH+eYg@mail.gmail.com>
 <ec8c411f-6a36-d23d-29eb-98957b9e12bb@gmail.com>
 <CABdHhvGzR1MaQfPw-zjiCSgBC=MmAs7uW2OrbsPLi1y8qP+JJQ@mail.gmail.com>
 <9cad2b5a-d4fb-452c-0db3-b0711a887f10@gmail.com>
 <FF6ADA1A-7221-4CD0-B994-A9D556C29368@krugs.de>
Message-ID: <010f8fef-2dfb-f0bb-dafe-ef8a4c16e5a4@gmail.com>

On 07/09/2018 3:09 AM, Rainer Krug wrote:
> 
> 
>> On 7 Sep 2018, at 02:16, Duncan Murdoch <murdoch.duncan at gmail.com 
>> <mailto:murdoch.duncan at gmail.com>> wrote:
>>
>> On 06/09/2018 10:32 AM, Hadley Wickham wrote:
>>> On Wed, Sep 5, 2018 at 3:03 PM Duncan Murdoch 
>>> <murdoch.duncan at gmail.com <mailto:murdoch.duncan at gmail.com>> wrote:
>>>>
>>>> On 05/09/2018 2:20 PM, Henrik Bengtsson wrote:
>>>>> I take a complementary approach; I condition on, my home-made,
>>>>> R_TEST_ALL variable. ?Effectively, I do:
>>>>>
>>>>> if (as.logical(Sys.getenv("R_TEST_ALL", "FALSE"))) {
>>>>> ????...
>>>>> }
>>>>>
>>>>> and set R_TEST_ALL=TRUE when I want to run that part of the test. ?You
>>>>> can also imagine refined versions of this, e.g. R_TEST_SETS=foo,bar
>>>>> and test scripts with:
>>>>>
>>>>> if ("foo" %in% strsplit(Sys.getenv("R_TEST_SETS"), split="[, 
>>>>> ]+")[[1]]) {
>>>>> ????...makes no assumption
>>>>> }
>>>>>
>>>>> That avoids making assumptions on where the tests are submitted/run,
>>>>> may it be CRAN, Bioconductor, Travis CI, ...
>>>>
>>>> This is the right way to do it.
>>> I would like to gently push back on this assertion: if CRAN set an
>>> environment variable we would have one single convention that all
>>> packages could rely on.
>>
>> When packages delete tests just for CRAN, the quality of the 
>> repository suffers. 
> 
> Absolutely. But in some cases. But t the moment, one is forced to use 
> workarounds if test **can** not be run on CRAN (API keys, computing 
> times, ?) but should be run on local tests. It would make much more 
> sense if there would be a standardised way of dealing with this.
> 
> 
>> Users should be able to check an install by running the tests that 
>> passed on CRAN and seeing them pass on their system as well.
> 
> Also agreed - so if the user sets the environmental variable CRAN for 
> the test, the CRAN tests are executed (as today), if not set, the 
> extended tests are executed.
> 
> 
>>
>> The current system relies on each package
>>> author evolving their own solution. This makes life difficult when you
>>> are running local reverse dependency checks: there is no way to
>>> systematically assert that you want to run tests in a way as similar
>>> as possible to CRAN.
>>
>> Most packages don't need to evolve anything: ?the CRAN tests are 
>> sufficient.
> 
> But there seems to be a need to exclude certain tests, due to various 
> reasons.

That need doesn't just apply to CRAN, it applies to anyone running them 
who doesn't have an API key.  So why not leave those tests out by 
default, with a documented way to enable them?

> 
>>
>>> I know that the CRAN maintainers already have a very large workload,
>>> and I hate to add to it, but setting CRAN=1 in a few profile files
>>> doesn't seem excessively burdensome.
>>
>> It would be easy to do that, but then CRAN wouldn't be testing the 
>> same things that users would test. 
> 
> See my comment above.
> 
>> A user might see a test failure that didn't happen on CRAN, and 
>> suspect that there was something wrong with their install, when in 
>> fact it was an author trying to hide a deficiency in their package 
>> from CRAN.
> 
> Only if they execute the extended tests. I can still hide deficiencies 
> in my package by not applying a specific test or doctoring the result, 
> if that is my intention. But the extended tests could be used to test 
> additional setup options, which can not be tested on CRAN.
> 
> 
>>
>>
>>>> This discussion has come up before. ?If you want to submit to CRAN, you
>>>> should include tests that satisfy their requests. ?If you want even more
>>>> tests, there are several ways to add them in addition to the CRAN tests.
>>>> ??Henrik's is one, "R CMD check --test-dir=myCustomTests" is another.
>>>>
>>>> Rainer's package is unusual, in that from his description it can't
>>>> really work unless the user obtains an API key. ?There are other
>>>> packages like that, and those cases need manual handling by CRAN: ?they
>>>> don't really run full tests by default. ?But the vast majority of
>>>> packages should be able to live within the CRAN guidelines.
>>> 10 years ago, I would have definitely supported this statement. But I
>>> am not sure it is still correct today, as there are now many packages
>>> that require a connection to web API to work (or depend on a package
>>> that uses an API). Additionally, CRAN only allows a limited amount of
>>> compute time for each check, so there are often longer tests that you
>>> want to run locally but not on CRAN. CRAN is a specialised testing
>>> service and it does have different constraints to your local machine,
>>> travis, and bioconductor.
>>> A quick search of the CRAN mirror on github
>>> (https://github.com/search?q=org%3Acran+skip_on_cran&type=Code)
>>> reveals that there are ~2700 tests that use testthat::skip_on_cran().
>>> This is obviously an underestimate of the total number of tests
>>> skipped on CRAN, as many packages don't use testthat, or use an
>>> alternative technique to avoid running code on CRAN.
>>
>> That's not so obviously an underestimate, as packages that use that 
>> technique use it many times, not just once per package. ?(A sample I 
>> looked at averaged 15 calls per package, but I don't know if that's 
>> unbiased.)
>>
>> But in any case, the skip_on_cran() function implements a version of 
>> Henrik's approach. ?The name of the function is misleading, it doesn't 
>> attempt to distinguish between CRAN and a regular user.
> 
> I would guess because it can?t. If there would be a standardised way of 
> identifying that the test is run on CRAN, I would use this immediately.

Then your package would fail when I ran the tests, because I don't have 
an API key, and I am not CRAN.  It makes more sense to me to treat CRAN 
the same as any other user who is not the author.

Duncan Murdoch

> 
> Cheers,
> 
> Rainer
> 
> 
>>
>> Duncan Murdoch
>>
>> ______________________________________________
>> R-package-devel at r-project.org 
>> <mailto:R-package-devel at r-project.org>mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> --
> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation 
> Biology, UCT), Dipl. Phys. (Germany)
> 
> University of Z?rich
> 
> Cell: ? ? ? +41 (0)78 630 66 57
> email: ? ? ?Rainer at krugs.de <mailto:Rainer at krugs.de>
> Skype: ? ? ?RMkrug
> 
> PGP: 0x0F52F982
> 
> 
>


From @pencer@gr@ve@ @ending from effectivedefen@e@org  Fri Sep  7 20:18:43 2018
From: @pencer@gr@ve@ @ending from effectivedefen@e@org (Spencer Graves)
Date: Fri, 7 Sep 2018 13:18:43 -0500
Subject: [R-pkg-devel] 
 Submission to CRAN when package needs personal data (API key)
In-Reply-To: <010f8fef-2dfb-f0bb-dafe-ef8a4c16e5a4@gmail.com>
References: <DBD7AB1C-0A0A-4E9F-BA60-4A3ADB4F9E3F@krugs.de>
 <67157cbb-20a7-517a-62c1-71dcfa53e427@statistik.tu-dortmund.de>
 <DCE7D556-C105-48D4-AB2D-E8B2240A870E@krugs.de>
 <CAB-BFRqeQsqeM+ptg-sasS8b-O=9-ABhC1OwXDqERKUQ3_1T3g@mail.gmail.com>
 <271d7400-b8e1-4eb0-2146-16778d815fc6@effectivedefense.org>
 <CABtg=KnsFcGZda7KHSMKzPTQqtU9pSBYmbC_TENf6soUJBeGmA@mail.gmail.com>
 <470e407b-85a7-fe4d-978b-f3a8d27cef22@effectivedefense.org>
 <CAFDcVCSJ7wddkaFWZLRm+PTqUB+dqTWsijo=RKcE0pxaAH+eYg@mail.gmail.com>
 <ec8c411f-6a36-d23d-29eb-98957b9e12bb@gmail.com>
 <CABdHhvGzR1MaQfPw-zjiCSgBC=MmAs7uW2OrbsPLi1y8qP+JJQ@mail.gmail.com>
 <9cad2b5a-d4fb-452c-0db3-b0711a887f10@gmail.com>
 <FF6ADA1A-7221-4CD0-B994-A9D556C29368@krugs.de>
 <010f8fef-2dfb-f0bb-dafe-ef8a4c16e5a4@gmail.com>
Message-ID: <599231a2-2921-c0a6-4881-9d0719a4be1d@effectivedefense.org>



On 2018-09-07 12:10, Duncan Murdoch wrote:


...


>> I would guess because it can?t. If there would be a standardised way 
>> of identifying that the test is run on CRAN, I would use this 
>> immediately.
>
> Then your package would fail when I ran the tests, because I don't 
> have an API key, and I am not CRAN.? It makes more sense to me to 
> treat CRAN the same as any other user who is not the author.


RAINER:? Have you considered writing your time stamp code so it takes it 
from originstamp if it's available, and if not switches to some other 
external source if there is an Internet connection, and then from date() 
otherwise -- with an appropriate warning if it doesn't come from 
originstamp?? You can have an option that the user can set if s/he wants 
an error rather than a warning if originstamp is not available.? Then 
people can use your package without worrying about getting an API key:? 
That's optional.


 ????? Spencer Graves


> Duncan Murdoch
>
>>
>> Cheers,
>>
>> Rainer
>>
>>
>>>
>>> Duncan Murdoch
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org 
>>> <mailto:R-package-devel at r-project.org>mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>> -- 
>> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation 
>> Biology, UCT), Dipl. Phys. (Germany)
>>
>> University of Z?rich
>>
>> Cell: ? ? ? +41 (0)78 630 66 57
>> email: ? ? ?Rainer at krugs.de <mailto:Rainer at krugs.de>
>> Skype: ? ? ?RMkrug
>>
>> PGP: 0x0F52F982
>>
>>
>>
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From g@nge@hberi @ending from gm@il@com  Fri Sep  7 22:28:27 2018
From: g@nge@hberi @ending from gm@il@com (gangesh beri)
Date: Fri, 7 Sep 2018 16:28:27 -0400
Subject: [R-pkg-devel] fatal error: 'ilcplex/ilocplex.h' file not found
Message-ID: <CAEFEieTu_RSOFO3zm39hjPYV6TBqCO6pgD9Ds-oJXjsa8MFARg@mail.gmail.com>

Hey,

I am trying to submit an R package to CRAN but it shows this particular
error fatal error: 'ilcplex/ilocplex.h' file not found, when I run R CMD
check --as-cran.
I am using this particular library in my package but I am not able to
figure out how to resolve it. I have also attached a file that describes my
error. Please look into it and let me know.

Thanks.

From murdoch@dunc@n @ending from gm@il@com  Fri Sep  7 22:44:10 2018
From: murdoch@dunc@n @ending from gm@il@com (Duncan Murdoch)
Date: Fri, 7 Sep 2018 16:44:10 -0400
Subject: [R-pkg-devel] fatal error: 'ilcplex/ilocplex.h' file not found
In-Reply-To: <CAEFEieTu_RSOFO3zm39hjPYV6TBqCO6pgD9Ds-oJXjsa8MFARg@mail.gmail.com>
References: <CAEFEieTu_RSOFO3zm39hjPYV6TBqCO6pgD9Ds-oJXjsa8MFARg@mail.gmail.com>
Message-ID: <897adc30-b83c-bffd-b7a2-353ee9c429a9@gmail.com>

On 07/09/2018 4:28 PM, gangesh beri wrote:
> Hey,
> 
> I am trying to submit an R package to CRAN but it shows this particular
> error fatal error: 'ilcplex/ilocplex.h' file not found, when I run R CMD
> check --as-cran.
> I am using this particular library in my package but I am not able to
> figure out how to resolve it. I have also attached a file that describes my
> error. Please look into it and let me know.
> 

Nothing was attached.  Probably the best thing for you to do is to put 
the tarball in some public place where others can see it.  Without that, 
we could guess:

  - you have a typo:  it should have been ilocplex/ilocplex.h
  - you didn't include the ilocplex.h file in your package
  - some other error

Duncan Murdoch


From edd @ending from debi@n@org  Fri Sep  7 22:58:16 2018
From: edd @ending from debi@n@org (Dirk Eddelbuettel)
Date: Fri, 7 Sep 2018 15:58:16 -0500
Subject: [R-pkg-devel] 
 Submission to CRAN when package needs personal data (API key)
In-Reply-To: <CABdHhvGCBxMed=-qjiD4ouW_93E7NUBGJJMvkznA43WDw12UsQ@mail.gmail.com>
References: <DBD7AB1C-0A0A-4E9F-BA60-4A3ADB4F9E3F@krugs.de>
 <CAB-BFRqeQsqeM+ptg-sasS8b-O=9-ABhC1OwXDqERKUQ3_1T3g@mail.gmail.com>
 <271d7400-b8e1-4eb0-2146-16778d815fc6@effectivedefense.org>
 <CABtg=KnsFcGZda7KHSMKzPTQqtU9pSBYmbC_TENf6soUJBeGmA@mail.gmail.com>
 <470e407b-85a7-fe4d-978b-f3a8d27cef22@effectivedefense.org>
 <CAFDcVCSJ7wddkaFWZLRm+PTqUB+dqTWsijo=RKcE0pxaAH+eYg@mail.gmail.com>
 <ec8c411f-6a36-d23d-29eb-98957b9e12bb@gmail.com>
 <CABdHhvGzR1MaQfPw-zjiCSgBC=MmAs7uW2OrbsPLi1y8qP+JJQ@mail.gmail.com>
 <9cad2b5a-d4fb-452c-0db3-b0711a887f10@gmail.com>
 <CAARY7kgrHWq=jOYe+Cd+kxGcdDBCe=cjURXozdUqS+RsPBU-_A@mail.gmail.com>
 <03bb833b-0f1e-de24-2c75-159717b3ad31@gmail.com>
 <CABtg=KnZAyWCY++2vBnM-XNXAOkXB=o2r6Brc2M=EVfUMZhq9Q@mail.gmail.com>
 <23442.24845.415569.929289@rob.eddelbuettel.com>
 <CABtg=KkYMzouNH9-pmvjd4pSpjWMS7RhE8BwEZ4TwDGdhdmdyA@mail.gmail.com>
 <23442.29603.255182.477477@rob.eddelbuettel.com>
 <CALEXWq22p95LVirVVi0MBJvX7HaHfzzuvQQDZBO4PwbYS4soKQ@mail.gmail.com>
 <09f3756a-09ec-9c35-9d52-5f7c0434aec0@daqana.com>
 <CALEXWq2a6CajRGE7+=m_NSm=pWT_G-xWFfX2KOmzcmiW0TMscQ@mail.gmail.com>
 <CABdHhvGCBxMed=-qjiD4ouW_93E7NUBGJJMvkznA43WDw12UsQ@mail.gmail.com>
Message-ID: <23442.58984.875830.535387@rob.eddelbuettel.com>


On 7 September 2018 at 10:38, Hadley Wickham wrote:
| On Fri, Sep 7, 2018 at 9:13 AM I?aki Ucar <iucar at fedoraproject.org> wrote:
| > El vie., 7 sept. 2018 a las 16:03, Ralf Stubner
| > (<ralf.stubner at daqana.com>) escribi?:
| > > On 07.09.2018 15:52, I?aki Ucar wrote:
| > > Tests in 'inst/test' got deprecated later on:
| > >
| > > https://github.com/r-lib/testthat/commit/0a7d27bb9ea545be7da1a10e511962928d888302
| >
| > Yeap, and I was pointing out the *old* (2011) practice and
| > recommendation. The reason why this evolved and changed, that I don't
| > know.
| 
| Because CRAN specifically asked me to put testthat tests in tests/
| (R's standard testing directory), rather that somewhere non-standard.

But maybe that was in response to you having moved from inst/ to another
location, possibly a new top-level directory?

I have a hard time believing that CRAN considered a directory inside inst/ to
be non-standard.  Current WRE where talking about tests/ only refers to the
basic test facility and neither RUnit nor testthat are mentioned (as other
CRAN package rarely get endorsed by WRE).  I quote it in full below.

Dirk

Two-paragraph quote from Section 1.1.5 "Package subdirectories" follows.



   Subdirectory 'tests' is for additional package-specific test code,
similar to the specific tests that come with the R distribution.  Test
code can either be provided directly in a '.R' (or '.r' as from R 3.4.0)
file, or _via_ a '.Rin' file containing code which in turn creates the
corresponding '.R' file (e.g., by collecting all function objects in the
package and then calling them with the strangest arguments).  The
results of running a '.R' file are written to a '.Rout' file.  If there
is a corresponding(10) '.Rout.save' file, these two are compared, with
differences being reported but not causing an error.  The directory
'tests' is copied to the check area, and the tests are run with the copy
as the working directory and with 'R_LIBS' set to ensure that the copy
of the package installed during testing will be found by
'library(PKG_NAME)'.  Note that the package-specific tests are run in a
vanilla R session without setting the random-number seed, so tests which
use random numbers will need to set the seed to obtain reproducible
results (and it can be helpful to do so in all cases, to avoid
occasional failures when tests are run).

   If directory 'tests' has a subdirectory 'Examples' containing a file
'PKG-Ex.Rout.save', this is compared to the output file for running the
examples when the latter are checked.  Reference output should be
produced without having the '--timings' option set (and note that
'--as-cran' sets it).


-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From edd @ending from debi@n@org  Sat Sep  8 20:06:16 2018
From: edd @ending from debi@n@org (Dirk Eddelbuettel)
Date: Sat, 8 Sep 2018 13:06:16 -0500
Subject: [R-pkg-devel] 
 Submission to CRAN when package needs personal data (API key)
In-Reply-To: <CABtg=KkYMzouNH9-pmvjd4pSpjWMS7RhE8BwEZ4TwDGdhdmdyA@mail.gmail.com>
References: <DBD7AB1C-0A0A-4E9F-BA60-4A3ADB4F9E3F@krugs.de>
 <67157cbb-20a7-517a-62c1-71dcfa53e427@statistik.tu-dortmund.de>
 <DCE7D556-C105-48D4-AB2D-E8B2240A870E@krugs.de>
 <CAB-BFRqeQsqeM+ptg-sasS8b-O=9-ABhC1OwXDqERKUQ3_1T3g@mail.gmail.com>
 <271d7400-b8e1-4eb0-2146-16778d815fc6@effectivedefense.org>
 <CABtg=KnsFcGZda7KHSMKzPTQqtU9pSBYmbC_TENf6soUJBeGmA@mail.gmail.com>
 <470e407b-85a7-fe4d-978b-f3a8d27cef22@effectivedefense.org>
 <CAFDcVCSJ7wddkaFWZLRm+PTqUB+dqTWsijo=RKcE0pxaAH+eYg@mail.gmail.com>
 <ec8c411f-6a36-d23d-29eb-98957b9e12bb@gmail.com>
 <CABdHhvGzR1MaQfPw-zjiCSgBC=MmAs7uW2OrbsPLi1y8qP+JJQ@mail.gmail.com>
 <9cad2b5a-d4fb-452c-0db3-b0711a887f10@gmail.com>
 <CAARY7kgrHWq=jOYe+Cd+kxGcdDBCe=cjURXozdUqS+RsPBU-_A@mail.gmail.com>
 <03bb833b-0f1e-de24-2c75-159717b3ad31@gmail.com>
 <CABtg=KnZAyWCY++2vBnM-XNXAOkXB=o2r6Brc2M=EVfUMZhq9Q@mail.gmail.com>
 <23442.24845.415569.929289@rob.eddelbuettel.com>
 <CABtg=KkYMzouNH9-pmvjd4pSpjWMS7RhE8BwEZ4TwDGdhdmdyA@mail.gmail.com>
Message-ID: <23444.3992.386018.962135@rob.eddelbuettel.com>


On 7 September 2018 at 13:08, G?bor Cs?rdi wrote:
| On Fri, Sep 7, 2018 at 12:29 PM Dirk Eddelbuettel <edd at debian.org> wrote:
| >
| >
| > On 7 September 2018 at 09:27, G?bor Cs?rdi wrote:
| > | When are users running tests for packages at all? The tests are by default
| > | no even installed with the package. The only time I usually do this is when
| >
| > Which some people consider to be the wrong decision by testthat.
| 
| How is testthat related to this? When you `R CMD INSTALL` a package,
| AFAICT it does not install the test by default. Independently of what
| testsuite you use.
| 
| > Base R has a set of functions
| >
| >    tools::testInstalledBasic
| >    tools::testInstalledPackage
| >    tools::testInstalledPackages
| >
| > so that an _installed_ package can be tested.  Unless, of course, it uses
| > testthat.  Matt Dowle just run into this (per a question on StackOverflow).
| > RUnit, on the other hand, supports this.
| 
| I am probably missing sg, but is this expected to run the Rcpp test suite?
| 
| tools::testInstalledPackage("Rcpp", types = "tests")
| 
| Because it takes 1ms to run and has no output.

When you set up a test runner it all works just as intended, and has for a
decade or so (see below for a demo of timeDate by the late Diethelm Wuertz).

I feel rather strongly that this is in fact an area where we as a community
failed to elevate our best practices. But as the cheesy saying goes: "The
best time to plant a tree was 20 years ago. The second best time is now."

Dirk


Demo below runs off the _installed_ package which is a rather neat feature we
could stress more for more complete regression and rev.dep tests.


R> library(RUnit)     ## needed to run all tests
R> ts <- defineTestSuite(name="timeDate", dirs=system.file("unitTests", package="timeDate")) 
R> library(timeDate)  ## needed for code to be tested and its Depends
R> res <- runTestSuite(ts)


Executing test function test.asDate  ... GMT
[1] [2006-06-01] [2006-12-01]
[1] "2006-06-01" "2006-12-01"
NewYork
[1] [2006-06-01] [2006-12-01]
[1] "2006-06-01" "2006-12-01"
 done successfully.


[... lots omitted as RUnit is verbose ...]

Executing test function test.AAA  ... [1] "Pacific/Auckland"
 done successfully.

R> res
Number of test functions: 56 
Number of errors: 1 
Number of failures: 0 
R>  

| 
| Gabor
| 
| [...]

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From murdoch@dunc@n @ending from gm@il@com  Sat Sep  8 20:41:04 2018
From: murdoch@dunc@n @ending from gm@il@com (Duncan Murdoch)
Date: Sat, 8 Sep 2018 14:41:04 -0400
Subject: [R-pkg-devel] 
 Submission to CRAN when package needs personal data (API key)
In-Reply-To: <23444.3992.386018.962135@rob.eddelbuettel.com>
References: <DBD7AB1C-0A0A-4E9F-BA60-4A3ADB4F9E3F@krugs.de>
 <DCE7D556-C105-48D4-AB2D-E8B2240A870E@krugs.de>
 <CAB-BFRqeQsqeM+ptg-sasS8b-O=9-ABhC1OwXDqERKUQ3_1T3g@mail.gmail.com>
 <271d7400-b8e1-4eb0-2146-16778d815fc6@effectivedefense.org>
 <CABtg=KnsFcGZda7KHSMKzPTQqtU9pSBYmbC_TENf6soUJBeGmA@mail.gmail.com>
 <470e407b-85a7-fe4d-978b-f3a8d27cef22@effectivedefense.org>
 <CAFDcVCSJ7wddkaFWZLRm+PTqUB+dqTWsijo=RKcE0pxaAH+eYg@mail.gmail.com>
 <ec8c411f-6a36-d23d-29eb-98957b9e12bb@gmail.com>
 <CABdHhvGzR1MaQfPw-zjiCSgBC=MmAs7uW2OrbsPLi1y8qP+JJQ@mail.gmail.com>
 <9cad2b5a-d4fb-452c-0db3-b0711a887f10@gmail.com>
 <CAARY7kgrHWq=jOYe+Cd+kxGcdDBCe=cjURXozdUqS+RsPBU-_A@mail.gmail.com>
 <03bb833b-0f1e-de24-2c75-159717b3ad31@gmail.com>
 <CABtg=KnZAyWCY++2vBnM-XNXAOkXB=o2r6Brc2M=EVfUMZhq9Q@mail.gmail.com>
 <23442.24845.415569.929289@rob.eddelbuettel.com>
 <CABtg=KkYMzouNH9-pmvjd4pSpjWMS7RhE8BwEZ4TwDGdhdmdyA@mail.gmail.com>
 <23444.3992.386018.962135@rob.eddelbuettel.com>
Message-ID: <b7cc1046-b8f9-f7ee-c78a-56a4a6331734@gmail.com>

On 08/09/2018 2:06 PM, Dirk Eddelbuettel wrote:
> 
> On 7 September 2018 at 13:08, G?bor Cs?rdi wrote:
> | On Fri, Sep 7, 2018 at 12:29 PM Dirk Eddelbuettel <edd at debian.org> wrote:
> | >
> | >
> | > On 7 September 2018 at 09:27, G?bor Cs?rdi wrote:
> | > | When are users running tests for packages at all? The tests are by default
> | > | no even installed with the package. The only time I usually do this is when
> | >
> | > Which some people consider to be the wrong decision by testthat.
> |
> | How is testthat related to this? When you `R CMD INSTALL` a package,
> | AFAICT it does not install the test by default. Independently of what
> | testsuite you use.
> |
> | > Base R has a set of functions
> | >
> | >    tools::testInstalledBasic
> | >    tools::testInstalledPackage
> | >    tools::testInstalledPackages
> | >
> | > so that an _installed_ package can be tested.  Unless, of course, it uses
> | > testthat.  Matt Dowle just run into this (per a question on StackOverflow).
> | > RUnit, on the other hand, supports this.
> |
> | I am probably missing sg, but is this expected to run the Rcpp test suite?
> |
> | tools::testInstalledPackage("Rcpp", types = "tests")
> |
> | Because it takes 1ms to run and has no output.
> 
> When you set up a test runner it all works just as intended, and has for a
> decade or so (see below for a demo of timeDate by the late Diethelm Wuertz).
> 
> I feel rather strongly that this is in fact an area where we as a community
> failed to elevate our best practices. But as the cheesy saying goes: "The
> best time to plant a tree was 20 years ago. The second best time is now."

I agree with this.

Duncan Murdoch

> 
> Dirk
> 
> 
> Demo below runs off the _installed_ package which is a rather neat feature we
> could stress more for more complete regression and rev.dep tests.
> 
> 
> R> library(RUnit)     ## needed to run all tests
> R> ts <- defineTestSuite(name="timeDate", dirs=system.file("unitTests", package="timeDate"))
> R> library(timeDate)  ## needed for code to be tested and its Depends
> R> res <- runTestSuite(ts)
> 
> 
> Executing test function test.asDate  ... GMT
> [1] [2006-06-01] [2006-12-01]
> [1] "2006-06-01" "2006-12-01"
> NewYork
> [1] [2006-06-01] [2006-12-01]
> [1] "2006-06-01" "2006-12-01"
>   done successfully.
> 
> 
> [... lots omitted as RUnit is verbose ...]
> 
> Executing test function test.AAA  ... [1] "Pacific/Auckland"
>   done successfully.
> 
> R> res
> Number of test functions: 56
> Number of errors: 1
> Number of failures: 0
> R>
> 
> |
> | Gabor
> |
> | [...]
>


From jo@h@m@ulrich @ending from gm@il@com  Sat Sep  8 21:02:21 2018
From: jo@h@m@ulrich @ending from gm@il@com (Joshua Ulrich)
Date: Sat, 8 Sep 2018 14:02:21 -0500
Subject: [R-pkg-devel] 
 Submission to CRAN when package needs personal data (API key)
In-Reply-To: <DBD7AB1C-0A0A-4E9F-BA60-4A3ADB4F9E3F@krugs.de>
References: <DBD7AB1C-0A0A-4E9F-BA60-4A3ADB4F9E3F@krugs.de>
Message-ID: <CAPPM_gSZJgSiND7UDbLtckU0voUiy5KawR+eLjHp=tkZouH3ug@mail.gmail.com>

Hi Rainer,

On Wed, Sep 5, 2018 at 2:28 AM, Rainer Krug <Rainer at krugs.de> wrote:
> Hi
>
> I have a package at GitHub (https://github.com/rkrug/ROriginStamp) which I am
> pre[paring for CRAN.
>
> It creates a trusted timestamp using the API fro OriginStamp
> (https://originstamp.org/home) which requires an API key. Now this API should
> not be made public, as to much traffic through one API key will lead to it?s
> blocking.
>
> I have stored the key encrypted in the travis.yml, and the package passes all
> tests.
>
> But if I send it to CRAN, it would fail the tests, as the api key is not in
> the package itself.
>
> I could disable all tests for CRAN which need the API key, but I think it
> would be better tu run the tests there as well (as an additional check to
> travis).
>
> My question:
>
> Is there a way of storing the API key encrypted, so that only the CRAN test
> servers can decrypt it, or is there another way can steal with this?
>
I have a similar issue with quantmod.  I need API keys to test some
functionality and I would like the tests run regularly, so I can know
when something breaks without having to wait for a user to report the
change.

I store the API keys in encrypted environment variable in TravisCI,
and I check for those environment variables before running the tests
that require them.

Then I added a cron job on TravisCI to run the build if there hasn't
been a build in the past 24 hours.  That solves the problem adequately
for my purposes without adding any burden to CRAN.  Hopefully it works
for your purposes too.

Best,
Josh

> Thanks,
>
> Rainer
>
>
>
> --
> Rainer M. Krug, PhD (Conservation Ecology, SUN),
> MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
>
> University of Z?rich
>
> Cell:       +41 (0)78 630 66 57
> email:      Rainer at krugs.de
> Skype:      RMkrug
>
> PGP: 0x0F52F982
>
>
>
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>



-- 
Joshua Ulrich  |  about.me/joshuaulrich
FOSS Trading  |  www.fosstrading.com
R/Finance 2018 | www.rinfinance.com


From c@@rdi@g@bor @ending from gm@il@com  Sat Sep  8 21:47:43 2018
From: c@@rdi@g@bor @ending from gm@il@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Sat, 8 Sep 2018 20:47:43 +0100
Subject: [R-pkg-devel] 
 Submission to CRAN when package needs personal data (API key)
In-Reply-To: <CALEXWq22p95LVirVVi0MBJvX7HaHfzzuvQQDZBO4PwbYS4soKQ@mail.gmail.com>
References: <DBD7AB1C-0A0A-4E9F-BA60-4A3ADB4F9E3F@krugs.de>
 <67157cbb-20a7-517a-62c1-71dcfa53e427@statistik.tu-dortmund.de>
 <DCE7D556-C105-48D4-AB2D-E8B2240A870E@krugs.de>
 <CAB-BFRqeQsqeM+ptg-sasS8b-O=9-ABhC1OwXDqERKUQ3_1T3g@mail.gmail.com>
 <271d7400-b8e1-4eb0-2146-16778d815fc6@effectivedefense.org>
 <CABtg=KnsFcGZda7KHSMKzPTQqtU9pSBYmbC_TENf6soUJBeGmA@mail.gmail.com>
 <470e407b-85a7-fe4d-978b-f3a8d27cef22@effectivedefense.org>
 <CAFDcVCSJ7wddkaFWZLRm+PTqUB+dqTWsijo=RKcE0pxaAH+eYg@mail.gmail.com>
 <ec8c411f-6a36-d23d-29eb-98957b9e12bb@gmail.com>
 <CABdHhvGzR1MaQfPw-zjiCSgBC=MmAs7uW2OrbsPLi1y8qP+JJQ@mail.gmail.com>
 <9cad2b5a-d4fb-452c-0db3-b0711a887f10@gmail.com>
 <CAARY7kgrHWq=jOYe+Cd+kxGcdDBCe=cjURXozdUqS+RsPBU-_A@mail.gmail.com>
 <03bb833b-0f1e-de24-2c75-159717b3ad31@gmail.com>
 <CABtg=KnZAyWCY++2vBnM-XNXAOkXB=o2r6Brc2M=EVfUMZhq9Q@mail.gmail.com>
 <23442.24845.415569.929289@rob.eddelbuettel.com>
 <CABtg=KkYMzouNH9-pmvjd4pSpjWMS7RhE8BwEZ4TwDGdhdmdyA@mail.gmail.com>
 <23442.29603.255182.477477@rob.eddelbuettel.com>
 <CALEXWq22p95LVirVVi0MBJvX7HaHfzzuvQQDZBO4PwbYS4soKQ@mail.gmail.com>
Message-ID: <CABtg=K=_OMQ5Pqz_s0qokV=o9nrpADSMHAPvj3cK71zw=nXncg@mail.gmail.com>

On Fri, Sep 7, 2018 at 2:53 PM I?aki Ucar <iucar at fedoraproject.org> wrote:
[...]
> For the record, this is what the testthat paper in the R Journal says:
>
> "[...] I recommend storing your tests in inst/tests/ (so users also
> have access to them), then including one file in tests/ that runs all
> of the package tests. The test_package(package_name) function makes
> this easy. [...] This setup has the additional advantage that users
> can make sure your package works correctly in their run-time
> environment."

And while deprecated, this method still works just fine, and will
continue to work.
You can just put your tests in inst/tests/testthat and put

withr::with_dir(
         system.file(package = <package>, "tests"),
         testthat::test_check(<package>))

in tests/testthat.R. And of course you can run the tests of the
installed package with
the same piece of code.

Gabor

> I?aki
>
> >
> > Dirk
> >
> > --
> > http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
> >


From @pencer@gr@ve@ @ending from effectivedefen@e@org  Sat Sep  8 22:47:27 2018
From: @pencer@gr@ve@ @ending from effectivedefen@e@org (Spencer Graves)
Date: Sat, 8 Sep 2018 15:47:27 -0500
Subject: [R-pkg-devel] 
 Submission to CRAN when package needs personal data (API key)
In-Reply-To: <CAPPM_gSZJgSiND7UDbLtckU0voUiy5KawR+eLjHp=tkZouH3ug@mail.gmail.com>
References: <DBD7AB1C-0A0A-4E9F-BA60-4A3ADB4F9E3F@krugs.de>
 <CAPPM_gSZJgSiND7UDbLtckU0voUiy5KawR+eLjHp=tkZouH3ug@mail.gmail.com>
Message-ID: <a00ed061-e43b-56e6-942d-f6c9fff9d017@effectivedefense.org>



On 2018-09-08 14:02, Joshua Ulrich wrote:
> Hi Rainer,
>
> On Wed, Sep 5, 2018 at 2:28 AM, Rainer Krug <Rainer at krugs.de> wrote:
>> Hi
>>
>> I have a package at GitHub (https://github.com/rkrug/ROriginStamp) which I am
>> pre[paring for CRAN.
>>
>> It creates a trusted timestamp using the API fro OriginStamp
>> (https://originstamp.org/home) which requires an API key. Now this API should
>> not be made public, as to much traffic through one API key will lead to it?s
>> blocking.
>>
>> I have stored the key encrypted in the travis.yml, and the package passes all
>> tests.
>>
>> But if I send it to CRAN, it would fail the tests, as the api key is not in
>> the package itself.
>>
>> I could disable all tests for CRAN which need the API key, but I think it
>> would be better tu run the tests there as well (as an additional check to
>> travis).
>>
>> My question:
>>
>> Is there a way of storing the API key encrypted, so that only the CRAN test
>> servers can decrypt it, or is there another way can steal with this?
>>
> I have a similar issue with quantmod.  I need API keys to test some
> functionality and I would like the tests run regularly, so I can know
> when something breaks without having to wait for a user to report the
> change.
>
> I store the API keys in encrypted environment variable in TravisCI,
> and I check for those environment variables before running the tests
> that require them.
>
> Then I added a cron job on TravisCI to run the build if there hasn't
> been a build in the past 24 hours.  That solves the problem adequately
> for my purposes without adding any burden to CRAN.  Hopefully it works
> for your purposes too.


 ????? So those tests don't run if the required environment variables 
are not there?


 ????? Rainer's problem was getting a secure time stamp.? For his case, 
rather than skip the tests if the API keys were not there, one might 
take the time stamp from someplace else, perhaps with a note of the 
source of the time stamp.


 ????? Spencer

> Best,
> Josh
>
>> Thanks,
>>
>> Rainer
>>
>>
>>
>> --
>> Rainer M. Krug, PhD (Conservation Ecology, SUN),
>> MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
>>
>> University of Z?rich
>>
>> Cell:       +41 (0)78 630 66 57
>> email:      Rainer at krugs.de
>> Skype:      RMkrug
>>
>> PGP: 0x0F52F982
>>
>>
>>
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>
>


From jwood000 @ending from gm@il@com  Sun Sep  9 03:11:46 2018
From: jwood000 @ending from gm@il@com (Joseph Wood)
Date: Sat, 8 Sep 2018 21:11:46 -0400
Subject: [R-pkg-devel] Package Etiquette
Message-ID: <CAKDcrSjmmt_VsZk=KjiyfPCnbTfmOTOzwLfcsepTpRPnWRPj+g@mail.gmail.com>

Hi all,



I?m a new developer and this is my first post. I have a question regarding
package development with regards to duplication of functionality. I read
the posting guide (https://www.r-project.org/posting-guide.html) and didn?t
see anything addressing this.


Is this the right place to ask?



Kind Regards,

Joseph Wood

	[[alternative HTML version deleted]]


From murdoch@dunc@n @ending from gm@il@com  Sun Sep  9 16:23:24 2018
From: murdoch@dunc@n @ending from gm@il@com (Duncan Murdoch)
Date: Sun, 9 Sep 2018 10:23:24 -0400
Subject: [R-pkg-devel] Package Etiquette
In-Reply-To: <CAKDcrSjmmt_VsZk=KjiyfPCnbTfmOTOzwLfcsepTpRPnWRPj+g@mail.gmail.com>
References: <CAKDcrSjmmt_VsZk=KjiyfPCnbTfmOTOzwLfcsepTpRPnWRPj+g@mail.gmail.com>
Message-ID: <18086f56-2911-9a9f-7114-4fe4420f4e8d@gmail.com>

On 08/09/2018 9:11 PM, Joseph Wood wrote:
> Hi all,
> 
> 
> 
> I?m a new developer and this is my first post. I have a question regarding
> package development with regards to duplication of functionality. I read
> the posting guide (https://www.r-project.org/posting-guide.html) and didn?t
> see anything addressing this.
> 
> 
> Is this the right place to ask?

Probably.

> 
> 	[[alternative HTML version deleted]]


But your posts should be in plain text, not HTML.  This message is 
perfectly readable, but once you start putting code or formatted content 
into an HTML message, it will be mangled by the mailing list.

Duncan Murdoch


From edd @ending from debi@n@org  Sun Sep  9 16:30:02 2018
From: edd @ending from debi@n@org (Dirk Eddelbuettel)
Date: Sun, 9 Sep 2018 09:30:02 -0500
Subject: [R-pkg-devel] Package Etiquette
In-Reply-To: <CAKDcrSjmmt_VsZk=KjiyfPCnbTfmOTOzwLfcsepTpRPnWRPj+g@mail.gmail.com>
References: <CAKDcrSjmmt_VsZk=KjiyfPCnbTfmOTOzwLfcsepTpRPnWRPj+g@mail.gmail.com>
Message-ID: <23445.11882.812553.900016@rob.eddelbuettel.com>


Hi Joseph,

On 8 September 2018 at 21:11, Joseph Wood wrote:
| I?m a new developer and this is my first post. I have a question regarding
| package development with regards to duplication of functionality. I read
| the posting guide (https://www.r-project.org/posting-guide.html) and didn?t
| see anything addressing this.

I sense that by actually asking the question (good move!) you already have an
inkling about the answer.  So indeed, _ex ante_ and with the caveat about
missing details and not knowing more: it is generally a bad thing.

Every now and then we manage to avoid it.  Eg I once had an (incomplete and
tentative but functional) package to have R interface the (awesome !!)
MessagePack binary serialization format (using C++ via Rcpp).  Then I spotted
a new package by Travers doing very similar things (in broader scope) via
R. So I suggested we joing forces, we did and the resulting package is much
better. So much so that we wrote a (not yet complete) paper about it too.

But it is a complex topic, and sometimes we need different approaches. And
the best person to ask may be the maintainer of the package you aim to
extend.   

The best answer may be in the _Writing R Extensions_ manual that came with
your copy of R.  It is the only "official" manual for package development.

| Is this the right place to ask?

Quite possibly, as it is the list about package development. Some more
pertinent detail may help, and as mentioned, maybe first talking to the
maintainer may not be a bad idea.

But to close: it is not formally forbidden, and duplication _happens_.  Good
judgement always helps, sometimes good judgement is informed by observing
best (prior) practice. And/or by asking here.

Hope this helps, Dirk

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From @pencer@gr@ve@ @ending from effectivedefen@e@org  Sun Sep  9 19:01:06 2018
From: @pencer@gr@ve@ @ending from effectivedefen@e@org (Spencer Graves)
Date: Sun, 9 Sep 2018 12:01:06 -0500
Subject: [R-pkg-devel] Package Etiquette
In-Reply-To: <23445.11882.812553.900016@rob.eddelbuettel.com>
References: <CAKDcrSjmmt_VsZk=KjiyfPCnbTfmOTOzwLfcsepTpRPnWRPj+g@mail.gmail.com>
 <23445.11882.812553.900016@rob.eddelbuettel.com>
Message-ID: <cf241501-14d8-a7cb-b7dd-38e32df8decc@effectivedefense.org>



On 2018-09-09 09:30, Dirk Eddelbuettel wrote:
> Hi Joseph,
>
> On 8 September 2018 at 21:11, Joseph Wood wrote:
> | I?m a new developer and this is my first post. I have a question regarding
> | package development with regards to duplication of functionality. I read
> | the posting guide (https://www.r-project.org/posting-guide.html) and didn?t
> | see anything addressing this.


 ????? I wrote and use sos::findFn to find other packages and functions 
that seem to do the same or similar things.? A search for software and 
books on splines led to an invitation to help maintain and improve the 
"fda" package, and then to another invitation to collaborate on a book 
on "Functional data analysis with R and Matlab".? Another search got me 
named the maintainer of the "Ecdat" package, in which I've since fixed 
bugs while adding my own material.


 ????? Other searches led to functions in other packages I use in the 
FinTS package.? For that, I use, cite, and compare similar functions in 
other packages.? My philosophy, like Dirk's I think, is that if someone 
else has a function that seems to do what I want, I'd rather let them 
maintain it.? I will copy it only if I really need something different 
that they don't provide and don't want to provide.? If I copied 
something otherwise, the two copies would likely eventually get out of 
sync.? Then other users (and I myself) would have trouble determining 
which version to use.? What a mess. I'll let an existing package author 
worry about maintaining what s/he has already written and maintained.? I 
can worry about other things.


 ????? Hope this helps.
 ????? Spencer Graves
>
> I sense that by actually asking the question (good move!) you already have an
> inkling about the answer.  So indeed, _ex ante_ and with the caveat about
> missing details and not knowing more: it is generally a bad thing.
>
> Every now and then we manage to avoid it.  Eg I once had an (incomplete and
> tentative but functional) package to have R interface the (awesome !!)
> MessagePack binary serialization format (using C++ via Rcpp).  Then I spotted
> a new package by Travers doing very similar things (in broader scope) via
> R. So I suggested we joing forces, we did and the resulting package is much
> better. So much so that we wrote a (not yet complete) paper about it too.
>
> But it is a complex topic, and sometimes we need different approaches. And
> the best person to ask may be the maintainer of the package you aim to
> extend.
>
> The best answer may be in the _Writing R Extensions_ manual that came with
> your copy of R.  It is the only "official" manual for package development.
>
> | Is this the right place to ask?
>
> Quite possibly, as it is the list about package development. Some more
> pertinent detail may help, and as mentioned, maybe first talking to the
> maintainer may not be a bad idea.
>
> But to close: it is not formally forbidden, and duplication _happens_.  Good
> judgement always helps, sometimes good judgement is informed by observing
> best (prior) practice. And/or by asking here.
>
> Hope this helps, Dirk
>


From p@trick@gir@udoux @ending from univ-fcomte@fr  Mon Sep 10 07:23:35 2018
From: p@trick@gir@udoux @ending from univ-fcomte@fr (Patrick Giraudoux)
Date: Mon, 10 Sep 2018 07:23:35 +0200
Subject: [R-pkg-devel] stringi update
In-Reply-To: <mailman.3112.7.1536487202.27003.r-package-devel@r-project.org>
References: <mailman.3112.7.1536487202.27003.r-package-devel@r-project.org>
Message-ID: <82654b52-fddd-e622-9e7e-e96a5426c4b8@univ-fcomte.fr>

Since weeks the package stringi stays on the following versions:

 > update.packages(ask='graphics',checkBuilt=TRUE)

 ? There is a binary version available but the source version is later:
 ??????? binary source needs_compilation
stringi? 1.1.7? 1.2.4????????????? TRUE

Do you want to install from sources the package which needs compilation?
y/n: n

However updated,? I am asked to update it again with the same version at 
any next update of R.

Has somebody an idea about what is happening?

Patrick


From toli@@ch@l @ending from gm@il@com  Mon Sep 10 15:27:32 2018
From: toli@@ch@l @ending from gm@il@com (=?UTF-8?B?zqTPjM67zrfPgiDOp86xzrvOus6uz4I=?=)
Date: Mon, 10 Sep 2018 16:27:32 +0300
Subject: [R-pkg-devel] RcppEigen and -Wno-ignored-attributes flag
Message-ID: <CAMfvGJP714S6+crdyWHTsizUArDTwMDaVMz=crQH_ZSppJGNdw@mail.gmail.com>

Dear all,

I am developing a R package using RcppEigen on Ubuntu 18.04. Since update
0.3.3.4.0 I get hundreds of warnings but if I add  PKG_CXXFLAGS =
-Wno-ignored-attributes in Makevars the warnings disappear and the compile
time reduces a lot.

devtools::check() gives the warning below:

checking compilation flags in Makevars ... WARNING
Non-portable flags in variable 'PKG_CXXFLAGS':
  -Wno-ignored-attributes


I know I can only address the flag via my local compiler options. But
should I mentioned it to the package README? Is there anything else I could
do to overcome the problem with the hundreds of warning messages for the
other users that install the package for the first time?

Thanks in advance,
Chalkis Apostolos

	[[alternative HTML version deleted]]


From edd @ending from debi@n@org  Mon Sep 10 16:00:38 2018
From: edd @ending from debi@n@org (Dirk Eddelbuettel)
Date: Mon, 10 Sep 2018 09:00:38 -0500
Subject: [R-pkg-devel] RcppEigen and -Wno-ignored-attributes flag
In-Reply-To: <CAMfvGJP714S6+crdyWHTsizUArDTwMDaVMz=crQH_ZSppJGNdw@mail.gmail.com>
References: <CAMfvGJP714S6+crdyWHTsizUArDTwMDaVMz=crQH_ZSppJGNdw@mail.gmail.com>
Message-ID: <23446.30982.27384.469112@rob.eddelbuettel.com>


On 10 September 2018 at 16:27, ????? ?????? wrote:
| Dear all,
| 
| I am developing a R package using RcppEigen on Ubuntu 18.04. Since update
| 0.3.3.4.0 I get hundreds of warnings but if I add  PKG_CXXFLAGS =
| -Wno-ignored-attributes in Makevars the warnings disappear and the compile
| time reduces a lot.
| 
| devtools::check() gives the warning below:
| 
| checking compilation flags in Makevars ... WARNING
| Non-portable flags in variable 'PKG_CXXFLAGS':
|   -Wno-ignored-attributes
| 
| 
| I know I can only address the flag via my local compiler options. But
| should I mentioned it to the package README? Is there anything else I could
| do to overcome the problem with the hundreds of warning messages for the
| other users that install the package for the first time?

It is a common problem with Eigen and g++.  But as you saw, you cannot solve
it via PKG_CXXFLAGS.  A better way is to use CXXFLAGS via ~/.R/Makevars as
this remains local and does not add a non-portable flag to your package.

Dirk

PS FWIW I disagree with this 'no non-portable flags' choice by CRAN, but I
just like you I don't get to make the rules.

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From p@uljohn32 @ending from gm@il@com  Mon Sep 10 19:09:52 2018
From: p@uljohn32 @ending from gm@il@com (Paul Johnson)
Date: Mon, 10 Sep 2018 12:09:52 -0500
Subject: [R-pkg-devel] questions about \dontrun{} etc.
In-Reply-To: <CABghstS==qVd5-K2uePO19dwDj+Yu_M75dmWkqi78=RYHksfoA@mail.gmail.com>
References: <7597817e-2682-f30e-4ba0-32250b5d6ac9@mcmaster.ca>
 <CABghstS==qVd5-K2uePO19dwDj+Yu_M75dmWkqi78=RYHksfoA@mail.gmail.com>
Message-ID: <CAErODj-b6Lr4UZzksY8nsuim8txoLamgNaijYi1_50n4KipAEA@mail.gmail.com>

I think Ben has a good question and I have a related followup.

On Thu, Sep 6, 2018 at 2:07 PM Ben Bolker <bbolker at gmail.com> wrote:
>  * My preference would be for using \dontrun{} universally (consistent,
> readable, mostly avoids accidental runs), but this goes against
> (informal?) CRAN policy
>
>  * universal \donttest{} doesn't seem to do what I want, since I *do*
> want to avoid users having to run long examples
>
>   * commenting (with something like "original model:" to make it clearer
> that it's not a commented-out example) is even better for avoiding
> accidental runs (harder to accidentally cut-and-paste, if doing that
> rather than using example()), but less readable.
>
>   * putting slow model fits in \dontrun{} and letting fast model fits be
> executed does what CRAN asks and helps avoiding example-drift, but is
> less consistent -- and I can't be sure that a model fit won't take much
> longer on one of CRAN's test machines ...
>
>   Thoughts?
>
>   cheers
>    Ben Bolker

Suppose author creates code in an if/then construct.  It saves a copy
of a long running calculation in the package.  In the example code,
make it obvious how to run it, or simply load it from disk, like

RUNLONGCALCULATIONS <- FALSE
if (RUNLONGCALCULATIONS){
    ## step 1
    ## ...code that runs and saves the output object
} else {
   ## step 2
   result <- readRDS( ...load the output object that is distributed in
the package...)
}

To my eye, this is a good compromise between transparency and package
testing speed. A user can see the code that was actually run. There is
no danger it will run by accident. In other words, the code that might
run is not commented out, but it is nested in an if/then.

Do you dis/like this idea?

The obvious problem: by avoiding \dontrun and \donttest, it
circumvents the CRAM example-checking apparatus.

But now I have a more suspicious version of the idea.

The package author uploads results from step 1 to a website and the
package example code downloads the result file. This is done to avoid
the GB limit on the package. I have seen this approach used on
vignettes already, where larger documents are placed on a website and
in-package vignettes are just lists of links.

PJ


From R@iner @ending from krug@@de  Tue Sep 11 08:49:45 2018
From: R@iner @ending from krug@@de (Rainer M Krug)
Date: Tue, 11 Sep 2018 08:49:45 +0200
Subject: [R-pkg-devel] 
 Submission to CRAN when package needs personal data (API key)
In-Reply-To: <CAPPM_gSZJgSiND7UDbLtckU0voUiy5KawR+eLjHp=tkZouH3ug@mail.gmail.com>
References: <DBD7AB1C-0A0A-4E9F-BA60-4A3ADB4F9E3F@krugs.de>
 <CAPPM_gSZJgSiND7UDbLtckU0voUiy5KawR+eLjHp=tkZouH3ug@mail.gmail.com>
Message-ID: <3FF61F02-50F4-476A-A5C7-470435241ED7@krugs.de>

Hi Josh,


> On 8 Sep 2018, at 21:02, Joshua Ulrich <josh.m.ulrich at gmail.com> wrote:
> 
> Hi Rainer,
> 
> On Wed, Sep 5, 2018 at 2:28 AM, Rainer Krug <Rainer at krugs.de> wrote:
>> Hi
>> 
>> I have a package at GitHub (https://github.com/rkrug/ROriginStamp) which I am
>> pre[paring for CRAN.
>> 
>> It creates a trusted timestamp using the API fro OriginStamp
>> (https://originstamp.org/home) which requires an API key. Now this API should
>> not be made public, as to much traffic through one API key will lead to it?s
>> blocking.
>> 
>> I have stored the key encrypted in the travis.yml, and the package passes all
>> tests.
>> 
>> But if I send it to CRAN, it would fail the tests, as the api key is not in
>> the package itself.
>> 
>> I could disable all tests for CRAN which need the API key, but I think it
>> would be better tu run the tests there as well (as an additional check to
>> travis).
>> 
>> My question:
>> 
>> Is there a way of storing the API key encrypted, so that only the CRAN test
>> servers can decrypt it, or is there another way can steal with this?
>> 
> I have a similar issue with quantmod.  I need API keys to test some
> functionality and I would like the tests run regularly, so I can know
> when something breaks without having to wait for a user to report the
> change.

Same motivation here.

> 
> I store the API keys in encrypted environment variable in TravisCI,
> and I check for those environment variables before running the tests
> that require them.

I am using the same approach for TravisCI and it works perfectly.

> 
> Then I added a cron job on TravisCI to run the build if there hasn't
> been a build in the past 24 hours.  That solves the problem adequately
> for my purposes without adding any burden to CRAN.  Hopefully it works
> for your purposes too.

I haven?t thought about the CRON job for TravisCI - good point. I will activate it straight away.

Thanks,

Rainer

> 
> Best,
> Josh
> 
>> Thanks,
>> 
>> Rainer
>> 
>> 
>> 
>> --
>> Rainer M. Krug, PhD (Conservation Ecology, SUN),
>> MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
>> 
>> University of Z?rich
>> 
>> Cell:       +41 (0)78 630 66 57
>> email:      Rainer at krugs.de
>> Skype:      RMkrug
>> 
>> PGP: 0x0F52F982
>> 
>> 
>> 
>> 
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> 
> 
> 
> 
> --
> Joshua Ulrich  |  about.me/joshuaulrich
> FOSS Trading  |  www.fosstrading.com
> R/Finance 2018 | www.rinfinance.com

--
Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)

University of Z?rich

Cell:       +41 (0)78 630 66 57
email:      Rainer at krugs.de
Skype:      RMkrug

PGP: 0x0F52F982




-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 488 bytes
Desc: Message signed with OpenPGP
URL: <https://stat.ethz.ch/pipermail/r-package-devel/attachments/20180911/1323a6ca/attachment.sig>

From R@iner @ending from krug@@de  Tue Sep 11 08:53:39 2018
From: R@iner @ending from krug@@de (Rainer Krug)
Date: Tue, 11 Sep 2018 08:53:39 +0200
Subject: [R-pkg-devel] 
 Submission to CRAN when package needs personal data (API key)
In-Reply-To: <a00ed061-e43b-56e6-942d-f6c9fff9d017@effectivedefense.org>
References: <DBD7AB1C-0A0A-4E9F-BA60-4A3ADB4F9E3F@krugs.de>
 <CAPPM_gSZJgSiND7UDbLtckU0voUiy5KawR+eLjHp=tkZouH3ug@mail.gmail.com>
 <a00ed061-e43b-56e6-942d-f6c9fff9d017@effectivedefense.org>
Message-ID: <DC672B6A-79CD-4A22-B584-0FBDB55576B2@krugs.de>



> On 8 Sep 2018, at 22:47, Spencer Graves <spencer.graves at effectivedefense.org> wrote:
> 
> 
> 
> On 2018-09-08 14:02, Joshua Ulrich wrote:
>> Hi Rainer,
>> 
>> On Wed, Sep 5, 2018 at 2:28 AM, Rainer Krug <Rainer at krugs.de> wrote:
>>> Hi
>>> 
>>> I have a package at GitHub (https://github.com/rkrug/ROriginStamp) which I am
>>> pre[paring for CRAN.
>>> 
>>> It creates a trusted timestamp using the API fro OriginStamp
>>> (https://originstamp.org/home) which requires an API key. Now this API should
>>> not be made public, as to much traffic through one API key will lead to it?s
>>> blocking.
>>> 
>>> I have stored the key encrypted in the travis.yml, and the package passes all
>>> tests.
>>> 
>>> But if I send it to CRAN, it would fail the tests, as the api key is not in
>>> the package itself.
>>> 
>>> I could disable all tests for CRAN which need the API key, but I think it
>>> would be better tu run the tests there as well (as an additional check to
>>> travis).
>>> 
>>> My question:
>>> 
>>> Is there a way of storing the API key encrypted, so that only the CRAN test
>>> servers can decrypt it, or is there another way can steal with this?
>>> 
>> I have a similar issue with quantmod.  I need API keys to test some
>> functionality and I would like the tests run regularly, so I can know
>> when something breaks without having to wait for a user to report the
>> change.
>> 
>> I store the API keys in encrypted environment variable in TravisCI,
>> and I check for those environment variables before running the tests
>> that require them.
>> 
>> Then I added a cron job on TravisCI to run the build if there hasn't
>> been a build in the past 24 hours.  That solves the problem adequately
>> for my purposes without adding any burden to CRAN.  Hopefully it works
>> for your purposes too.
> 
> 
>       So those tests don't run if the required environment variables are not there?

Exactly - that?s how I am doing it at the moment.

> 
> 
>       Rainer's problem was getting a secure time stamp.  For his case, rather than skip the tests if the API keys were not there, one might take the time stamp from someplace else, perhaps with a note of the source of the time stamp.

Well - for the tests I don?t see much use in returning a canned reply if the API key is not present. It would just add a false sense of ?working? if the API changes, which is one main point of the tests. So I?d rather skip the tests which require the API key when it is not set via an environmental variable. I am following Josh?s suggestion to run the tests on TravisCI via a cron job to do regular tests.

Thanks

Rainer



> 
> 
>       Spencer
> 
>> Best,
>> Josh
>> 
>>> Thanks,
>>> 
>>> Rainer
>>> 
>>> 
>>> 
>>> --
>>> Rainer M. Krug, PhD (Conservation Ecology, SUN),
>>> MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
>>> 
>>> University of Z?rich
>>> 
>>> Cell:       +41 (0)78 630 66 57
>>> email:      Rainer at krugs.de
>>> Skype:      RMkrug
>>> 
>>> PGP: 0x0F52F982
>>> 
>>> 
>>> 
>>> 
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>> 
>> 
>> 
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

--
Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)

University of Z?rich

Cell:       +41 (0)78 630 66 57
email:      Rainer at krugs.de
Skype:      RMkrug

PGP: 0x0F52F982




-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 488 bytes
Desc: Message signed with OpenPGP
URL: <https://stat.ethz.ch/pipermail/r-package-devel/attachments/20180911/34e00fec/attachment.sig>

From r@killick @ending from l@nc@@ter@@c@uk  Wed Sep 12 12:20:44 2018
From: r@killick @ending from l@nc@@ter@@c@uk (Killick, Rebecca)
Date: Wed, 12 Sep 2018 10:20:44 +0000
Subject: [R-pkg-devel] Package Etiquette
In-Reply-To: <LO2P265MB1533B53B5307D9883347E807A8050@LO2P265MB1533.GBRP265.PROD.OUTLOOK.COM>
References: <mailman.3117.5.1536573601.58308.r-package-devel@r-project.org>,
 <LO2P265MB1533B53B5307D9883347E807A8050@LO2P265MB1533.GBRP265.PROD.OUTLOOK.COM>
Message-ID: <LO2P265MB1533799813928CDD776598F1A81B0@LO2P265MB1533.GBRP265.PROD.OUTLOOK.COM>

To add my two-pence regarding duplication.

I think this is a judgement call.
If the functionality would be precisely the same and for the same situations then there are some instances where you would still want to duplicate but generally probably not.  An example would be where the function is small and easy to code but depending on the existing package would bring a large reverse dependency that you don't want to have.

Thanks,
Rebecca

----------------------------------------------------------------------

Message: 1
Date: Sat, 8 Sep 2018 21:11:46 -0400
From: Joseph Wood <jwood000 at gmail.com>
To: r-package-devel at r-project.org
Subject: [R-pkg-devel] Package Etiquette
Message-ID:
        <CAKDcrSjmmt_VsZk=KjiyfPCnbTfmOTOzwLfcsepTpRPnWRPj+g at mail.gmail.com>
Content-Type: text/plain; charset="utf-8"

Hi all,



I?m a new developer and this is my first post. I have a question regarding
package development with regards to duplication of functionality. I read
the posting guide (https://www.r-project.org/posting-guide.html) and didn?t
R: Posting Guide: How to ask good questions that prompt ...<https://www.r-project.org/posting-guide.html>
www.r-project.org
Posting Guide: How to ask good questions that prompt useful answers. This guide is intended to help you get the most out of the R mailing lists, and to avoid embarrassment.



see anything addressing this.


Is this the right place to ask?



Kind Regards,

Joseph Wood

        [[alternative HTML version deleted]]




------------------------------




	[[alternative HTML version deleted]]


From rflight79 @ending from gm@il@com  Wed Sep 12 14:09:16 2018
From: rflight79 @ending from gm@il@com (Robert M. Flight)
Date: Wed, 12 Sep 2018 08:09:16 -0400
Subject: [R-pkg-devel] Package Etiquette
In-Reply-To: <LO2P265MB1533799813928CDD776598F1A81B0@LO2P265MB1533.GBRP265.PROD.OUTLOOK.COM>
References: <mailman.3117.5.1536573601.58308.r-package-devel@r-project.org>
 <LO2P265MB1533B53B5307D9883347E807A8050@LO2P265MB1533.GBRP265.PROD.OUTLOOK.COM>
 <LO2P265MB1533799813928CDD776598F1A81B0@LO2P265MB1533.GBRP265.PROD.OUTLOOK.COM>
Message-ID: <CAJLyBTVGJ59zrr8FzKBUpqvWdN=jBVxgmcOAHGyPs+Zi5XfXQg@mail.gmail.com>

Regarding still wanting to copy functions situation, I did this for my
knitrProgressBar PKG, as it makes the progress R6 object from dplyr a first
class citizen of the PKG, and dplyr has a lot of dependencies that I didn't
want to force just to use their pre-existing progress bar.

Robert

On Wed, Sep 12, 2018, 7:09 AM Killick, Rebecca <r.killick at lancaster.ac.uk>
wrote:

> To add my two-pence regarding duplication.
>
> I think this is a judgement call.
> If the functionality would be precisely the same and for the same
> situations then there are some instances where you would still want to
> duplicate but generally probably not.  An example would be where the
> function is small and easy to code but depending on the existing package
> would bring a large reverse dependency that you don't want to have.
>
> Thanks,
> Rebecca
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Sat, 8 Sep 2018 21:11:46 -0400
> From: Joseph Wood <jwood000 at gmail.com>
> To: r-package-devel at r-project.org
> Subject: [R-pkg-devel] Package Etiquette
> Message-ID:
>         <CAKDcrSjmmt_VsZk=
> KjiyfPCnbTfmOTOzwLfcsepTpRPnWRPj+g at mail.gmail.com>
> Content-Type: text/plain; charset="utf-8"
>
> Hi all,
>
>
>
> I?m a new developer and this is my first post. I have a question regarding
> package development with regards to duplication of functionality. I read
> the posting guide (https://www.r-project.org/posting-guide.html) and
> didn?t
> R: Posting Guide: How to ask good questions that prompt ...<
> https://www.r-project.org/posting-guide.html>
> www.r-project.org
> Posting Guide: How to ask good questions that prompt useful answers. This
> guide is intended to help you get the most out of the R mailing lists, and
> to avoid embarrassment.
>
>
>
> see anything addressing this.
>
>
> Is this the right place to ask?
>
>
>
> Kind Regards,
>
> Joseph Wood
>
>         [[alternative HTML version deleted]]
>
>
>
>
> ------------------------------
>
>
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From rflight79 @ending from gm@il@com  Wed Sep 12 14:18:26 2018
From: rflight79 @ending from gm@il@com (Robert M. Flight)
Date: Wed, 12 Sep 2018 08:18:26 -0400
Subject: [R-pkg-devel] Package Etiquette
In-Reply-To: <CAJLyBTVGJ59zrr8FzKBUpqvWdN=jBVxgmcOAHGyPs+Zi5XfXQg@mail.gmail.com>
References: <mailman.3117.5.1536573601.58308.r-package-devel@r-project.org>
 <LO2P265MB1533B53B5307D9883347E807A8050@LO2P265MB1533.GBRP265.PROD.OUTLOOK.COM>
 <LO2P265MB1533799813928CDD776598F1A81B0@LO2P265MB1533.GBRP265.PROD.OUTLOOK.COM>
 <CAJLyBTVGJ59zrr8FzKBUpqvWdN=jBVxgmcOAHGyPs+Zi5XfXQg@mail.gmail.com>
Message-ID: <CAJLyBTWtYtdsb9zrOXhV8R4Japkxw=tE5eO0dWea-bQsb9K3Vg@mail.gmail.com>

Of course, if you do truly decide to *copy* a function from another
package, make sure everything is licensed appropriately and the authors
given attribution!

-Robert

On Wed, Sep 12, 2018, 8:09 AM Robert M. Flight <rflight79 at gmail.com> wrote:

> Regarding still wanting to copy functions situation, I did this for my
> knitrProgressBar PKG, as it makes the progress R6 object from dplyr a first
> class citizen of the PKG, and dplyr has a lot of dependencies that I didn't
> want to force just to use their pre-existing progress bar.
>
> Robert
>
> On Wed, Sep 12, 2018, 7:09 AM Killick, Rebecca <r.killick at lancaster.ac.uk>
> wrote:
>
>> To add my two-pence regarding duplication.
>>
>> I think this is a judgement call.
>> If the functionality would be precisely the same and for the same
>> situations then there are some instances where you would still want to
>> duplicate but generally probably not.  An example would be where the
>> function is small and easy to code but depending on the existing package
>> would bring a large reverse dependency that you don't want to have.
>>
>> Thanks,
>> Rebecca
>>
>> ----------------------------------------------------------------------
>>
>> Message: 1
>> Date: Sat, 8 Sep 2018 21:11:46 -0400
>> From: Joseph Wood <jwood000 at gmail.com>
>> To: r-package-devel at r-project.org
>> Subject: [R-pkg-devel] Package Etiquette
>> Message-ID:
>>         <CAKDcrSjmmt_VsZk=
>> KjiyfPCnbTfmOTOzwLfcsepTpRPnWRPj+g at mail.gmail.com>
>> Content-Type: text/plain; charset="utf-8"
>>
>> Hi all,
>>
>>
>>
>> I?m a new developer and this is my first post. I have a question regarding
>> package development with regards to duplication of functionality. I read
>> the posting guide (https://www.r-project.org/posting-guide.html) and
>> didn?t
>> R: Posting Guide: How to ask good questions that prompt ...<
>> https://www.r-project.org/posting-guide.html>
>> www.r-project.org
>> Posting Guide: How to ask good questions that prompt useful answers. This
>> guide is intended to help you get the most out of the R mailing lists, and
>> to avoid embarrassment.
>>
>>
>>
>> see anything addressing this.
>>
>>
>> Is this the right place to ask?
>>
>>
>>
>> Kind Regards,
>>
>> Joseph Wood
>>
>>         [[alternative HTML version deleted]]
>>
>>
>>
>>
>> ------------------------------
>>
>>
>>
>>
>>         [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>

	[[alternative HTML version deleted]]


From p@uljohn32 @ending from gm@il@com  Wed Sep 12 20:14:37 2018
From: p@uljohn32 @ending from gm@il@com (Paul Johnson)
Date: Wed, 12 Sep 2018 13:14:37 -0500
Subject: [R-pkg-devel] fate of functions with periods in name
Message-ID: <CAErODj90Vzi4z=t+KG-hXhhBSEr1LppN4WrsTO+URJXeB_Lt3g@mail.gmail.com>

I have not introduced functions with periods in their name before, but
recently I wanted to put a new version of "rbind.fill" in my package
rockchalk.  When I do the package check with R-3.5.1, I see a package
build warning:

Found the following apparent S3 methods exported but not registered:
  rbind.fill
See section ?Registering S3 methods? in the ?Writing R Extensions? manual.

It is a function named "rbind.fill", not a method, obviously.

My CRAN interactions lately give me the idea that Warnings ought to be
treated like Errors.  I'll rename my function rbindFill to silence the
warning, but I wonder if I'm actually required to do so.

-- 
Paul E. Johnson   http://pj.freefaculty.org
Director, Center for Research Methods and Data Analysis http://crmda.ku.edu

To write to me directly, please address me at pauljohn at ku.edu.


From @@muel@gr@nje@ud @ending from in@erm@fr  Thu Sep 13 09:23:48 2018
From: @@muel@gr@nje@ud @ending from in@erm@fr (Samuel)
Date: Thu, 13 Sep 2018 09:23:48 +0200
Subject: [R-pkg-devel] 
 Recommendations about adding options to a package in
 order to change default values of some functions on-the-fly
Message-ID: <6c154c9ad5dab7ce3e10380e0de7c5f2@inserm.fr>

Thanks to all.
Best.


From Keith@Goldfeld @ending from nyul@ngone@org  Thu Sep 13 19:20:30 2018
From: Keith@Goldfeld @ending from nyul@ngone@org (Goldfeld, Keith)
Date: Thu, 13 Sep 2018 17:20:30 +0000
Subject: [R-pkg-devel] make: Nothing to be done for `all'.
Message-ID: <f16a961c490b4e82bb77aa835558d975@nyulangone.org>

Good afternoon - I am updating my package simstudy, and when I build and install the package from within Rstudio (clicking on "Install and Restart") I am getting an error/warning message. I've seen some posts on this issue from the past, but the suggested solutions (remove self-references) didn't seem relevant in my case, since there are no self-references that I am aware of. If someone has other thoughts, let me know.

Thanks.


==> R CMD INSTALL --no-multiarch --with-keep.source Simstudy


Loading libraries ... (working on a package)


Welcome back to R!!!

Loading required package: grid
* installing to library '/Library/Frameworks/R.framework/Versions/3.5/Resources/library'
* installing *source* package 'simstudy' ...
** libs
make: Nothing to be done for `all'.
installing to /Library/Frameworks/R.framework/Versions/3.5/Resources/library/simstudy/libs
** R
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded

Loading libraries ... (working on a package)

Loading required package: grid



Keith S. Goldfeld, DrPH
Assistant Professor

NYU Langone Health
Division of Biostatistics
Department of Population Health
180 Madison Avenue, # 551
New York, NY 10016

T 646-501-3650
M 646-423-9005
keith.goldfeld at nyumc.org<mailto:keith.goldfeld at nyumc.org>


Keith S. Goldfeld, DrPH
Assistant Professor

NYU Langone Health
Division of Biostatistics
Department of Population Health
180 Madison Ave, # 551
New York, NY  10016

T 646-501-3650
M 646-423-9005
keith.goldfeld at nyumc.org<mailto:keith.goldfeld at nyumc.org>

Blog: ouR data generation<https://www.rdatagen.net/>



------------------------------------------------------------
This email message, including any attachments, is for th...{{dropped:14}}


From murdoch@dunc@n @ending from gm@il@com  Thu Sep 13 21:45:54 2018
From: murdoch@dunc@n @ending from gm@il@com (Duncan Murdoch)
Date: Thu, 13 Sep 2018 15:45:54 -0400
Subject: [R-pkg-devel] make: Nothing to be done for `all'.
In-Reply-To: <f16a961c490b4e82bb77aa835558d975@nyulangone.org>
References: <f16a961c490b4e82bb77aa835558d975@nyulangone.org>
Message-ID: <d400726b-848c-370c-1dfb-01c0efadee08@gmail.com>

On 13/09/2018 1:20 PM, Goldfeld, Keith wrote:
> Good afternoon - I am updating my package simstudy, and when I build and install the package from within Rstudio (clicking on "Install and Restart") I am getting an error/warning message. I've seen some posts on this issue from the past, but the suggested solutions (remove self-references) didn't seem relevant in my case, since there are no self-references that I am aware of. If someone has other thoughts, let me know.

That message just means that you have not changed your source files for 
compiled code since the last build.  All of the make targets are up to 
date.  (Changes to .R files are handled differently, this only applies 
to .c/.cpp/.f etc.).

It's nothing to worry about unless you actually did make a change to one 
of those files, in which case something is wrong with your Makefile and 
your changes aren't being seen.

Duncan Murdoch

> 
> Thanks.
> 
> 
> ==> R CMD INSTALL --no-multiarch --with-keep.source Simstudy
> 
> 
> Loading libraries ... (working on a package)
> 
> 
> Welcome back to R!!!
> 
> Loading required package: grid
> * installing to library '/Library/Frameworks/R.framework/Versions/3.5/Resources/library'
> * installing *source* package 'simstudy' ...
> ** libs
> make: Nothing to be done for `all'.
> installing to /Library/Frameworks/R.framework/Versions/3.5/Resources/library/simstudy/libs
> ** R
> ** byte-compile and prepare package for lazy loading
> ** help
> *** installing help indices
> ** building package indices
> ** installing vignettes
> ** testing if installed package can be loaded
> 
> Loading libraries ... (working on a package)
> 
> Loading required package: grid
> 
> 
> 
> Keith S. Goldfeld, DrPH
> Assistant Professor
> 
> NYU Langone Health
> Division of Biostatistics
> Department of Population Health
> 180 Madison Avenue, # 551
> New York, NY 10016
> 
> T 646-501-3650
> M 646-423-9005
> keith.goldfeld at nyumc.org<mailto:keith.goldfeld at nyumc.org>
> 
> 
> Keith S. Goldfeld, DrPH
> Assistant Professor
> 
> NYU Langone Health
> Division of Biostatistics
> Department of Population Health
> 180 Madison Ave, # 551
> New York, NY  10016
> 
> T 646-501-3650
> M 646-423-9005
> keith.goldfeld at nyumc.org<mailto:keith.goldfeld at nyumc.org>
> 
> Blog: ouR data generation<https://www.rdatagen.net/>
> 
> 
> 
> ------------------------------------------------------------
> This email message, including any attachments, is for ...{{dropped:7}}


From erinm@hodge@@ @ending from gm@il@com  Fri Sep 14 20:34:37 2018
From: erinm@hodge@@ @ending from gm@il@com (Erin Hodgess)
Date: Fri, 14 Sep 2018 12:34:37 -0600
Subject: [R-pkg-devel] Trying to compile R-3.5.1 with openblas for windows
Message-ID: <CACxE24nGRQchs1g2ekifxSYKyR-E69PrLdY3mfh_dSBdangQ2A@mail.gmail.com>

Hello!

I'm building a package that needs Openblas for matrix manipulation speed up.

I built Openblas on Windows 10.  I updated the MkRules.local,
src/extra/blas/Makefile.win, etc.  Things are working with "make all".

However, when I run "make recommended", I have trouble with the Matrix
package build.  The components of the Cholesky all appear as unreferenced.

Has anyone else run into this, please?  I'm working with R-3.5.1 source.

Thanks,
Erin

Erin Hodgess, PhD
mailto: erinm.hodgess at gmail.com

	[[alternative HTML version deleted]]


From @vr@h@m@@dler @ending from gm@il@com  Fri Sep 14 21:13:39 2018
From: @vr@h@m@@dler @ending from gm@il@com (Avraham Adler)
Date: Fri, 14 Sep 2018 15:13:39 -0400
Subject: [R-pkg-devel] 
 Trying to compile R-3.5.1 with openblas for windows
In-Reply-To: <CACxE24nGRQchs1g2ekifxSYKyR-E69PrLdY3mfh_dSBdangQ2A@mail.gmail.com>
References: <CACxE24nGRQchs1g2ekifxSYKyR-E69PrLdY3mfh_dSBdangQ2A@mail.gmail.com>
Message-ID: <CAL6gwnLwJyeHAvoCgeWifMFHvpL2coq28APym5k1wFMP7VxHKQ@mail.gmail.com>

Try following the directions here. They have worked for me for years.
Please see the comments too.

https://www.avrahamadler.com/r-tips/build-openblas-for-windows-r64/

Hope that helps,

Avi

On Fri, Sep 14, 2018 at 2:34 PM Erin Hodgess <erinm.hodgess at gmail.com>
wrote:

> Hello!
>
> I'm building a package that needs Openblas for matrix manipulation speed
> up.
>
> I built Openblas on Windows 10.  I updated the MkRules.local,
> src/extra/blas/Makefile.win, etc.  Things are working with "make all".
>
> However, when I run "make recommended", I have trouble with the Matrix
> package build.  The components of the Cholesky all appear as unreferenced.
>
> Has anyone else run into this, please?  I'm working with R-3.5.1 source.
>
> Thanks,
> Erin
>
> Erin Hodgess, PhD
> mailto: erinm.hodgess at gmail.com
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
-- 
Sent from Gmail Mobile

	[[alternative HTML version deleted]]


From erinm@hodge@@ @ending from gm@il@com  Fri Sep 14 22:14:06 2018
From: erinm@hodge@@ @ending from gm@il@com (Erin Hodgess)
Date: Fri, 14 Sep 2018 14:14:06 -0600
Subject: [R-pkg-devel] 
 Trying to compile R-3.5.1 with openblas for windows
In-Reply-To: <CAL6gwnLwJyeHAvoCgeWifMFHvpL2coq28APym5k1wFMP7VxHKQ@mail.gmail.com>
References: <CACxE24nGRQchs1g2ekifxSYKyR-E69PrLdY3mfh_dSBdangQ2A@mail.gmail.com>
 <CAL6gwnLwJyeHAvoCgeWifMFHvpL2coq28APym5k1wFMP7VxHKQ@mail.gmail.com>
Message-ID: <CACxE24k4WDA7hq-XbH==rREVMdzkA1CuF8g1B5gKhfyvLtRV7g@mail.gmail.com>

Hi again!

I checked everything, did "make distribution" and the same thing occurred.


d:/Rtools/mingw_64/bin/ar -rucs ../SuiteSparse_config.a SuiteSparse_config.o
D:\Rtools\mingw_64\bin\nm.exe: 'sublibs': No such file
d:/Rtools/mingw_64/bin/gcc -shared -s -static-libgcc -o Matrix.dll tmp.def
CHMfactor.o Csparse.o TMatrix_as.o Tsparse.o init.o Mutils.o chm_common.o
cs.o cs_utils.o dense.o dgCMatrix.o dgTMatrix.o dgeMatrix.o dpoMatrix.o
dppMatrix.o dsCMatrix.o dsyMatrix.o dspMatrix.o dtCMatrix.o dtTMatrix.o
dtrMatrix.o dtpMatrix.o factorizations.o ldense.o lgCMatrix.o sparseQR.o
abIndex.o -LD:/erinm/R-3.5.1/bin/x64 -lRlapack -LD:/erinm/R-3.5.1/bin/x64
-lRblas -LD:/erinm/R-3.5.1/extsoft/lib/x64 -LD:/erinm/R-3.5.1/extsoft/lib
-LD:/erinm/R-3.5.1/bin/x64 -lR
CHMfactor.o:CHMfactor.c:(.text+0x3b): undefined reference to
`cholmod_copy_factor'
CHMfactor.o:CHMfactor.c:(.text+0x7b): undefined reference to
`cholmod_change_factor'
CHMfactor.o:CHMfactor.c:(.text+0x92): undefined reference to
`cholmod_factor_to_sparse'
CHMfactor.o:CHMfactor.c:(.text+0xa5): undefined reference to
`cholmod_free_factor'
CHMfactor.o:CHMfactor.c:(.text+0x18e): undefined reference to
`cholmod_solve'
CHMfactor.o:CHMfactor.c:(.text+0x267): undefined reference to
`cholmod_copy_factor'
CHMfactor.o:CHMfactor.c:(.text+0x27e): undefined reference to
`cholmod_updown'
CHMfactor.o:CHMfactor.c:(.text+0x396): undefined reference to
`cholmod_spsolve'
CHMfactor.o:CHMfactor.c:(.text+0x620): undefined reference to
`cholmod_factorize_p'
CHMfactor.o:CHMfactor.c:(.text+0x658): undefined reference to
`cholmod_change_factor'
CHMfactor.o:CHMfactor.c:(.text+0x720): undefined reference to
`cholmod_copy_factor'
CHMfactor.o:CHMfactor.c:(.text+0x87b): undefined reference to
`cholmod_copy_factor'
CHMfactor.o:CHMfactor.c:(.text+0x8c3): undefined reference to
`cholmod_free_factor'
Csparse.o:Csparse.c:(.text+0x9f1): undefined reference to
`cholmod_sparse_to_dense'
Csparse.o:Csparse.c:(.text+0xcd6): undefined reference to `cholmod_speye'
Csparse.o:Csparse.c:(.text+0xd21): undefined reference to `cholmod_add'
Csparse.o:Csparse.c:(.text+0xd31): undefined reference to
`cholmod_free_sparse'
Csparse.o:Csparse.c:(.text+0xd3d): undefined reference to
`cholmod_copy_sparse'
Csparse.o:Csparse.c:(.text+0xd4c): undefined reference to
`cholmod_free_sparse'
Csparse.o:Csparse.c:(.text+0xdf9): undefined reference to `cholmod_copy'

Does this look familiar, please?

Thanks,
Erin

Erin Hodgess, PhD
mailto: erinm.hodgess at gmail.com


On Fri, Sep 14, 2018 at 1:13 PM Avraham Adler <avraham.adler at gmail.com>
wrote:

> Try following the directions here. They have worked for me for years.
> Please see the comments too.
>
> https://www.avrahamadler.com/r-tips/build-openblas-for-windows-r64/
>
> Hope that helps,
>
> Avi
>
> On Fri, Sep 14, 2018 at 2:34 PM Erin Hodgess <erinm.hodgess at gmail.com>
> wrote:
>
>> Hello!
>>
>> I'm building a package that needs Openblas for matrix manipulation speed
>> up.
>>
>> I built Openblas on Windows 10.  I updated the MkRules.local,
>> src/extra/blas/Makefile.win, etc.  Things are working with "make all".
>>
>> However, when I run "make recommended", I have trouble with the Matrix
>> package build.  The components of the Cholesky all appear as unreferenced.
>>
>> Has anyone else run into this, please?  I'm working with R-3.5.1 source.
>>
>> Thanks,
>> Erin
>>
>> Erin Hodgess, PhD
>> mailto: erinm.hodgess at gmail.com
>>
>>         [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
> --
> Sent from Gmail Mobile
>

	[[alternative HTML version deleted]]


From @vr@h@m@@dler @ending from gm@il@com  Fri Sep 14 22:46:13 2018
From: @vr@h@m@@dler @ending from gm@il@com (Avraham Adler)
Date: Fri, 14 Sep 2018 16:46:13 -0400
Subject: [R-pkg-devel] 
 Trying to compile R-3.5.1 with openblas for windows
In-Reply-To: <CACxE24k4WDA7hq-XbH==rREVMdzkA1CuF8g1B5gKhfyvLtRV7g@mail.gmail.com>
References: <CACxE24nGRQchs1g2ekifxSYKyR-E69PrLdY3mfh_dSBdangQ2A@mail.gmail.com>
 <CAL6gwnLwJyeHAvoCgeWifMFHvpL2coq28APym5k1wFMP7VxHKQ@mail.gmail.com>
 <CACxE24k4WDA7hq-XbH==rREVMdzkA1CuF8g1B5gKhfyvLtRV7g@mail.gmail.com>
Message-ID: <CAL6gwn+HE8ajHdrdEmGPOYeqLmcNhTCkTw6S3QNYt-PJd1_mmQ@mail.gmail.com>

No, I?m sorry, I haven?t seen that and I built R 3.5.1 with OpenBLAS
recently. Does it work if you use the vanilla BLAS?

Avi

On Fri, Sep 14, 2018 at 4:14 PM Erin Hodgess <erinm.hodgess at gmail.com>
wrote:

> Hi again!
>
> I checked everything, did "make distribution" and the same thing occurred.
>
>
> d:/Rtools/mingw_64/bin/ar -rucs ../SuiteSparse_config.a
> SuiteSparse_config.o
> D:\Rtools\mingw_64\bin\nm.exe: 'sublibs': No such file
> d:/Rtools/mingw_64/bin/gcc -shared -s -static-libgcc -o Matrix.dll tmp.def
> CHMfactor.o Csparse.o TMatrix_as.o Tsparse.o init.o Mutils.o chm_common.o
> cs.o cs_utils.o dense.o dgCMatrix.o dgTMatrix.o dgeMatrix.o dpoMatrix.o
> dppMatrix.o dsCMatrix.o dsyMatrix.o dspMatrix.o dtCMatrix.o dtTMatrix.o
> dtrMatrix.o dtpMatrix.o factorizations.o ldense.o lgCMatrix.o sparseQR.o
> abIndex.o -LD:/erinm/R-3.5.1/bin/x64 -lRlapack -LD:/erinm/R-3.5.1/bin/x64
> -lRblas -LD:/erinm/R-3.5.1/extsoft/lib/x64 -LD:/erinm/R-3.5.1/extsoft/lib
> -LD:/erinm/R-3.5.1/bin/x64 -lR
> CHMfactor.o:CHMfactor.c:(.text+0x3b): undefined reference to
> `cholmod_copy_factor'
> CHMfactor.o:CHMfactor.c:(.text+0x7b): undefined reference to
> `cholmod_change_factor'
> CHMfactor.o:CHMfactor.c:(.text+0x92): undefined reference to
> `cholmod_factor_to_sparse'
> CHMfactor.o:CHMfactor.c:(.text+0xa5): undefined reference to
> `cholmod_free_factor'
> CHMfactor.o:CHMfactor.c:(.text+0x18e): undefined reference to
> `cholmod_solve'
> CHMfactor.o:CHMfactor.c:(.text+0x267): undefined reference to
> `cholmod_copy_factor'
> CHMfactor.o:CHMfactor.c:(.text+0x27e): undefined reference to
> `cholmod_updown'
> CHMfactor.o:CHMfactor.c:(.text+0x396): undefined reference to
> `cholmod_spsolve'
> CHMfactor.o:CHMfactor.c:(.text+0x620): undefined reference to
> `cholmod_factorize_p'
> CHMfactor.o:CHMfactor.c:(.text+0x658): undefined reference to
> `cholmod_change_factor'
> CHMfactor.o:CHMfactor.c:(.text+0x720): undefined reference to
> `cholmod_copy_factor'
> CHMfactor.o:CHMfactor.c:(.text+0x87b): undefined reference to
> `cholmod_copy_factor'
> CHMfactor.o:CHMfactor.c:(.text+0x8c3): undefined reference to
> `cholmod_free_factor'
> Csparse.o:Csparse.c:(.text+0x9f1): undefined reference to
> `cholmod_sparse_to_dense'
> Csparse.o:Csparse.c:(.text+0xcd6): undefined reference to `cholmod_speye'
> Csparse.o:Csparse.c:(.text+0xd21): undefined reference to `cholmod_add'
> Csparse.o:Csparse.c:(.text+0xd31): undefined reference to
> `cholmod_free_sparse'
> Csparse.o:Csparse.c:(.text+0xd3d): undefined reference to
> `cholmod_copy_sparse'
> Csparse.o:Csparse.c:(.text+0xd4c): undefined reference to
> `cholmod_free_sparse'
> Csparse.o:Csparse.c:(.text+0xdf9): undefined reference to `cholmod_copy'
>
> Does this look familiar, please?
>
> Thanks,
> Erin
>
> Erin Hodgess, PhD
> mailto: erinm.hodgess at gmail.com
>
>
> On Fri, Sep 14, 2018 at 1:13 PM Avraham Adler <avraham.adler at gmail.com>
> wrote:
>
>> Try following the directions here. They have worked for me for years.
>> Please see the comments too.
>>
>> https://www.avrahamadler.com/r-tips/build-openblas-for-windows-r64/
>>
>> Hope that helps,
>>
>> Avi
>>
>> On Fri, Sep 14, 2018 at 2:34 PM Erin Hodgess <erinm.hodgess at gmail.com>
>> wrote:
>>
>>> Hello!
>>>
>>> I'm building a package that needs Openblas for matrix manipulation speed
>>> up.
>>>
>>> I built Openblas on Windows 10.  I updated the MkRules.local,
>>> src/extra/blas/Makefile.win, etc.  Things are working with "make all".
>>>
>>> However, when I run "make recommended", I have trouble with the Matrix
>>> package build.  The components of the Cholesky all appear as
>>> unreferenced.
>>>
>>> Has anyone else run into this, please?  I'm working with R-3.5.1 source.
>>>
>>> Thanks,
>>> Erin
>>>
>>> Erin Hodgess, PhD
>>> mailto: erinm.hodgess at gmail.com
>>>
>>>         [[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>> --
>> Sent from Gmail Mobile
>>
> --
Sent from Gmail Mobile

	[[alternative HTML version deleted]]


From erinm@hodge@@ @ending from gm@il@com  Fri Sep 14 22:47:23 2018
From: erinm@hodge@@ @ending from gm@il@com (Erin Hodgess)
Date: Fri, 14 Sep 2018 14:47:23 -0600
Subject: [R-pkg-devel] 
 Trying to compile R-3.5.1 with openblas for windows
In-Reply-To: <CAL6gwn+HE8ajHdrdEmGPOYeqLmcNhTCkTw6S3QNYt-PJd1_mmQ@mail.gmail.com>
References: <CACxE24nGRQchs1g2ekifxSYKyR-E69PrLdY3mfh_dSBdangQ2A@mail.gmail.com>
 <CAL6gwnLwJyeHAvoCgeWifMFHvpL2coq28APym5k1wFMP7VxHKQ@mail.gmail.com>
 <CACxE24k4WDA7hq-XbH==rREVMdzkA1CuF8g1B5gKhfyvLtRV7g@mail.gmail.com>
 <CAL6gwn+HE8ajHdrdEmGPOYeqLmcNhTCkTw6S3QNYt-PJd1_mmQ@mail.gmail.com>
Message-ID: <CACxE24kDqHZ0-VuP=W_W8qV=oNmMLbxUv0AbVy1sH+_SZ0SXbw@mail.gmail.com>

That is my next thing to try.  Thanks for your help!


Erin Hodgess, PhD
mailto: erinm.hodgess at gmail.com


On Fri, Sep 14, 2018 at 2:46 PM Avraham Adler <avraham.adler at gmail.com>
wrote:

> No, I?m sorry, I haven?t seen that and I built R 3.5.1 with OpenBLAS
> recently. Does it work if you use the vanilla BLAS?
>
> Avi
>
> On Fri, Sep 14, 2018 at 4:14 PM Erin Hodgess <erinm.hodgess at gmail.com>
> wrote:
>
>> Hi again!
>>
>> I checked everything, did "make distribution" and the same thing occurred.
>>
>>
>> d:/Rtools/mingw_64/bin/ar -rucs ../SuiteSparse_config.a
>> SuiteSparse_config.o
>> D:\Rtools\mingw_64\bin\nm.exe: 'sublibs': No such file
>> d:/Rtools/mingw_64/bin/gcc -shared -s -static-libgcc -o Matrix.dll
>> tmp.def CHMfactor.o Csparse.o TMatrix_as.o Tsparse.o init.o Mutils.o
>> chm_common.o cs.o cs_utils.o dense.o dgCMatrix.o dgTMatrix.o dgeMatrix.o
>> dpoMatrix.o dppMatrix.o dsCMatrix.o dsyMatrix.o dspMatrix.o dtCMatrix.o
>> dtTMatrix.o dtrMatrix.o dtpMatrix.o factorizations.o ldense.o lgCMatrix.o
>> sparseQR.o abIndex.o -LD:/erinm/R-3.5.1/bin/x64 -lRlapack
>> -LD:/erinm/R-3.5.1/bin/x64 -lRblas -LD:/erinm/R-3.5.1/extsoft/lib/x64
>> -LD:/erinm/R-3.5.1/extsoft/lib -LD:/erinm/R-3.5.1/bin/x64 -lR
>> CHMfactor.o:CHMfactor.c:(.text+0x3b): undefined reference to
>> `cholmod_copy_factor'
>> CHMfactor.o:CHMfactor.c:(.text+0x7b): undefined reference to
>> `cholmod_change_factor'
>> CHMfactor.o:CHMfactor.c:(.text+0x92): undefined reference to
>> `cholmod_factor_to_sparse'
>> CHMfactor.o:CHMfactor.c:(.text+0xa5): undefined reference to
>> `cholmod_free_factor'
>> CHMfactor.o:CHMfactor.c:(.text+0x18e): undefined reference to
>> `cholmod_solve'
>> CHMfactor.o:CHMfactor.c:(.text+0x267): undefined reference to
>> `cholmod_copy_factor'
>> CHMfactor.o:CHMfactor.c:(.text+0x27e): undefined reference to
>> `cholmod_updown'
>> CHMfactor.o:CHMfactor.c:(.text+0x396): undefined reference to
>> `cholmod_spsolve'
>> CHMfactor.o:CHMfactor.c:(.text+0x620): undefined reference to
>> `cholmod_factorize_p'
>> CHMfactor.o:CHMfactor.c:(.text+0x658): undefined reference to
>> `cholmod_change_factor'
>> CHMfactor.o:CHMfactor.c:(.text+0x720): undefined reference to
>> `cholmod_copy_factor'
>> CHMfactor.o:CHMfactor.c:(.text+0x87b): undefined reference to
>> `cholmod_copy_factor'
>> CHMfactor.o:CHMfactor.c:(.text+0x8c3): undefined reference to
>> `cholmod_free_factor'
>> Csparse.o:Csparse.c:(.text+0x9f1): undefined reference to
>> `cholmod_sparse_to_dense'
>> Csparse.o:Csparse.c:(.text+0xcd6): undefined reference to `cholmod_speye'
>> Csparse.o:Csparse.c:(.text+0xd21): undefined reference to `cholmod_add'
>> Csparse.o:Csparse.c:(.text+0xd31): undefined reference to
>> `cholmod_free_sparse'
>> Csparse.o:Csparse.c:(.text+0xd3d): undefined reference to
>> `cholmod_copy_sparse'
>> Csparse.o:Csparse.c:(.text+0xd4c): undefined reference to
>> `cholmod_free_sparse'
>> Csparse.o:Csparse.c:(.text+0xdf9): undefined reference to `cholmod_copy'
>>
>> Does this look familiar, please?
>>
>> Thanks,
>> Erin
>>
>> Erin Hodgess, PhD
>> mailto: erinm.hodgess at gmail.com
>>
>>
>> On Fri, Sep 14, 2018 at 1:13 PM Avraham Adler <avraham.adler at gmail.com>
>> wrote:
>>
>>> Try following the directions here. They have worked for me for years.
>>> Please see the comments too.
>>>
>>> https://www.avrahamadler.com/r-tips/build-openblas-for-windows-r64/
>>>
>>> Hope that helps,
>>>
>>> Avi
>>>
>>> On Fri, Sep 14, 2018 at 2:34 PM Erin Hodgess <erinm.hodgess at gmail.com>
>>> wrote:
>>>
>>>> Hello!
>>>>
>>>> I'm building a package that needs Openblas for matrix manipulation
>>>> speed up.
>>>>
>>>> I built Openblas on Windows 10.  I updated the MkRules.local,
>>>> src/extra/blas/Makefile.win, etc.  Things are working with "make all".
>>>>
>>>> However, when I run "make recommended", I have trouble with the Matrix
>>>> package build.  The components of the Cholesky all appear as
>>>> unreferenced.
>>>>
>>>> Has anyone else run into this, please?  I'm working with R-3.5.1 source.
>>>>
>>>> Thanks,
>>>> Erin
>>>>
>>>> Erin Hodgess, PhD
>>>> mailto: erinm.hodgess at gmail.com
>>>>
>>>>         [[alternative HTML version deleted]]
>>>>
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>
>>> --
>>> Sent from Gmail Mobile
>>>
>> --
> Sent from Gmail Mobile
>

	[[alternative HTML version deleted]]


From erinm@hodge@@ @ending from gm@il@com  Sat Sep 15 01:11:39 2018
From: erinm@hodge@@ @ending from gm@il@com (Erin Hodgess)
Date: Fri, 14 Sep 2018 17:11:39 -0600
Subject: [R-pkg-devel] 
 Trying to compile R-3.5.1 with openblas for windows
In-Reply-To: <CACxE24kDqHZ0-VuP=W_W8qV=oNmMLbxUv0AbVy1sH+_SZ0SXbw@mail.gmail.com>
References: <CACxE24nGRQchs1g2ekifxSYKyR-E69PrLdY3mfh_dSBdangQ2A@mail.gmail.com>
 <CAL6gwnLwJyeHAvoCgeWifMFHvpL2coq28APym5k1wFMP7VxHKQ@mail.gmail.com>
 <CACxE24k4WDA7hq-XbH==rREVMdzkA1CuF8g1B5gKhfyvLtRV7g@mail.gmail.com>
 <CAL6gwn+HE8ajHdrdEmGPOYeqLmcNhTCkTw6S3QNYt-PJd1_mmQ@mail.gmail.com>
 <CACxE24kDqHZ0-VuP=W_W8qV=oNmMLbxUv0AbVy1sH+_SZ0SXbw@mail.gmail.com>
Message-ID: <CACxE24mTrfNxNgJG4KD4qXbDnC6bDUuO+3vvUniqD+N4JqG1qw@mail.gmail.com>

I have a snag on regular BLAS as well.  I feel better about the Open BLAS

On Fri, Sep 14, 2018 at 2:47 PM Erin Hodgess <erinm.hodgess at gmail.com>
wrote:

> That is my next thing to try.  Thanks for your help!
>
>
> Erin Hodgess, PhD
> mailto: erinm.hodgess at gmail.com
>
>
> On Fri, Sep 14, 2018 at 2:46 PM Avraham Adler <avraham.adler at gmail.com>
> wrote:
>
>> No, I?m sorry, I haven?t seen that and I built R 3.5.1 with OpenBLAS
>> recently. Does it work if you use the vanilla BLAS?
>>
>> Avi
>>
>> On Fri, Sep 14, 2018 at 4:14 PM Erin Hodgess <erinm.hodgess at gmail.com>
>> wrote:
>>
>>> Hi again!
>>>
>>> I checked everything, did "make distribution" and the same thing
>>> occurred.
>>>
>>>
>>> d:/Rtools/mingw_64/bin/ar -rucs ../SuiteSparse_config.a
>>> SuiteSparse_config.o
>>> D:\Rtools\mingw_64\bin\nm.exe: 'sublibs': No such file
>>> d:/Rtools/mingw_64/bin/gcc -shared -s -static-libgcc -o Matrix.dll
>>> tmp.def CHMfactor.o Csparse.o TMatrix_as.o Tsparse.o init.o Mutils.o
>>> chm_common.o cs.o cs_utils.o dense.o dgCMatrix.o dgTMatrix.o dgeMatrix.o
>>> dpoMatrix.o dppMatrix.o dsCMatrix.o dsyMatrix.o dspMatrix.o dtCMatrix.o
>>> dtTMatrix.o dtrMatrix.o dtpMatrix.o factorizations.o ldense.o lgCMatrix.o
>>> sparseQR.o abIndex.o -LD:/erinm/R-3.5.1/bin/x64 -lRlapack
>>> -LD:/erinm/R-3.5.1/bin/x64 -lRblas -LD:/erinm/R-3.5.1/extsoft/lib/x64
>>> -LD:/erinm/R-3.5.1/extsoft/lib -LD:/erinm/R-3.5.1/bin/x64 -lR
>>> CHMfactor.o:CHMfactor.c:(.text+0x3b): undefined reference to
>>> `cholmod_copy_factor'
>>> CHMfactor.o:CHMfactor.c:(.text+0x7b): undefined reference to
>>> `cholmod_change_factor'
>>> CHMfactor.o:CHMfactor.c:(.text+0x92): undefined reference to
>>> `cholmod_factor_to_sparse'
>>> CHMfactor.o:CHMfactor.c:(.text+0xa5): undefined reference to
>>> `cholmod_free_factor'
>>> CHMfactor.o:CHMfactor.c:(.text+0x18e): undefined reference to
>>> `cholmod_solve'
>>> CHMfactor.o:CHMfactor.c:(.text+0x267): undefined reference to
>>> `cholmod_copy_factor'
>>> CHMfactor.o:CHMfactor.c:(.text+0x27e): undefined reference to
>>> `cholmod_updown'
>>> CHMfactor.o:CHMfactor.c:(.text+0x396): undefined reference to
>>> `cholmod_spsolve'
>>> CHMfactor.o:CHMfactor.c:(.text+0x620): undefined reference to
>>> `cholmod_factorize_p'
>>> CHMfactor.o:CHMfactor.c:(.text+0x658): undefined reference to
>>> `cholmod_change_factor'
>>> CHMfactor.o:CHMfactor.c:(.text+0x720): undefined reference to
>>> `cholmod_copy_factor'
>>> CHMfactor.o:CHMfactor.c:(.text+0x87b): undefined reference to
>>> `cholmod_copy_factor'
>>> CHMfactor.o:CHMfactor.c:(.text+0x8c3): undefined reference to
>>> `cholmod_free_factor'
>>> Csparse.o:Csparse.c:(.text+0x9f1): undefined reference to
>>> `cholmod_sparse_to_dense'
>>> Csparse.o:Csparse.c:(.text+0xcd6): undefined reference to `cholmod_speye'
>>> Csparse.o:Csparse.c:(.text+0xd21): undefined reference to `cholmod_add'
>>> Csparse.o:Csparse.c:(.text+0xd31): undefined reference to
>>> `cholmod_free_sparse'
>>> Csparse.o:Csparse.c:(.text+0xd3d): undefined reference to
>>> `cholmod_copy_sparse'
>>> Csparse.o:Csparse.c:(.text+0xd4c): undefined reference to
>>> `cholmod_free_sparse'
>>> Csparse.o:Csparse.c:(.text+0xdf9): undefined reference to `cholmod_copy'
>>>
>>> Does this look familiar, please?
>>>
>>> Thanks,
>>> Erin
>>>
>>> Erin Hodgess, PhD
>>> mailto: erinm.hodgess at gmail.com
>>>
>>>
>>> On Fri, Sep 14, 2018 at 1:13 PM Avraham Adler <avraham.adler at gmail.com>
>>> wrote:
>>>
>>>> Try following the directions here. They have worked for me for years.
>>>> Please see the comments too.
>>>>
>>>> https://www.avrahamadler.com/r-tips/build-openblas-for-windows-r64/
>>>>
>>>> Hope that helps,
>>>>
>>>> Avi
>>>>
>>>> On Fri, Sep 14, 2018 at 2:34 PM Erin Hodgess <erinm.hodgess at gmail.com>
>>>> wrote:
>>>>
>>>>> Hello!
>>>>>
>>>>> I'm building a package that needs Openblas for matrix manipulation
>>>>> speed up.
>>>>>
>>>>> I built Openblas on Windows 10.  I updated the MkRules.local,
>>>>> src/extra/blas/Makefile.win, etc.  Things are working with "make all".
>>>>>
>>>>> However, when I run "make recommended", I have trouble with the Matrix
>>>>> package build.  The components of the Cholesky all appear as
>>>>> unreferenced.
>>>>>
>>>>> Has anyone else run into this, please?  I'm working with R-3.5.1
>>>>> source.
>>>>>
>>>>> Thanks,
>>>>> Erin
>>>>>
>>>>> Erin Hodgess, PhD
>>>>> mailto: erinm.hodgess at gmail.com
>>>>>
>>>>>         [[alternative HTML version deleted]]
>>>>>
>>>>> ______________________________________________
>>>>> R-package-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>>
>>>> --
>>>> Sent from Gmail Mobile
>>>>
>>> --
>> Sent from Gmail Mobile
>>
> --
Erin Hodgess, PhD
mailto: erinm.hodgess at gmail.com

	[[alternative HTML version deleted]]


From p@trick@gir@udoux @ending from univ-fcomte@fr  Sat Sep 15 08:24:27 2018
From: p@trick@gir@udoux @ending from univ-fcomte@fr (Patrick Giraudoux)
Date: Sat, 15 Sep 2018 08:24:27 +0200
Subject: [R-pkg-devel] stringi update
In-Reply-To: <58408F3D-C51D-483D-875F-CC491DF03FC6@me.com>
References: <mailman.3112.7.1536487202.27003.r-package-devel@r-project.org>
 <82654b52-fddd-e622-9e7e-e96a5426c4b8@univ-fcomte.fr>
 <58408F3D-C51D-483D-875F-CC491DF03FC6@me.com>
Message-ID: <2529a09d-8de3-92a4-7ffd-551ef05c7f6d@univ-fcomte.fr>

Thnaks for the hint, but I have tried several? mirrors and still get the 
same trouble:

 > update.packages(ask='graphics',checkBuilt=TRUE)

 ? There are binary versions available but the source versions are later:
 ??????? binary source needs_compilation
stringi? 1.1.7? 1.2.4????????????? TRUE

Do you want to install from sources the packages which need compilation?
y/n:

Which re-install the same version at each update...




Le 10/09/2018 ? 17:17, R. Mark Sharp a ?crit?:
> Patrick,
>
> It looks like the CRAN mirror that you are using has not been updated with the binary versions, which are readily available on other mirrors (e.g., https://cran.revolutionanalytics.com).
>
> Mark
> R. Mark Sharp, Ph.D.
> Data Scientist and Biomedical Statistical Consultant
> 7526 Meadow Green St.
> San Antonio, TX 78251
> mobile: 210-218-2868
> rmsharp at me.com
>
>
>
>
>
>
>
>
>
>
>
>> On Sep 10, 2018, at 12:23 AM, Patrick Giraudoux <patrick.giraudoux at univ-fcomte.fr> wrote:
>>
>> Since weeks the package stringi stays on the following versions:
>>
>>> update.packages(ask='graphics',checkBuilt=TRUE)
>>    There is a binary version available but the source version is later:
>>          binary source needs_compilation
>> stringi  1.1.7  1.2.4              TRUE
>>
>> Do you want to install from sources the package which needs compilation?
>> y/n: n
>>
>> However updated,  I am asked to update it again with the same version at any next update of R.
>>
>> Has somebody an idea about what is happening?
>>
>> Patrick
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From h@wickh@m @ending from gm@il@com  Sat Sep 15 16:54:37 2018
From: h@wickh@m @ending from gm@il@com (Hadley Wickham)
Date: Sat, 15 Sep 2018 09:54:37 -0500
Subject: [R-pkg-devel] stringi update
In-Reply-To: <2529a09d-8de3-92a4-7ffd-551ef05c7f6d@univ-fcomte.fr>
References: <mailman.3112.7.1536487202.27003.r-package-devel@r-project.org>
 <82654b52-fddd-e622-9e7e-e96a5426c4b8@univ-fcomte.fr>
 <58408F3D-C51D-483D-875F-CC491DF03FC6@me.com>
 <2529a09d-8de3-92a4-7ffd-551ef05c7f6d@univ-fcomte.fr>
Message-ID: <CABdHhvHmk=3BZ-Dq55sBsp+EVYneMzCSq8EQx7j8mPi4d8h2dQ@mail.gmail.com>

Looking at the primary CRAN site:
https://cran.r-project.org/web/packages/stringi/index.html, you can
see that the windows binary is still at 1.1.7, suggesting that there's
some build failure. You can see exactly what that is on the CRAN check
page: https://cran.r-project.org/web/checks/check_results_stringi.html

Hadley
On Sat, Sep 15, 2018 at 1:24 AM Patrick Giraudoux
<patrick.giraudoux at univ-fcomte.fr> wrote:
>
> Thnaks for the hint, but I have tried several  mirrors and still get the
> same trouble:
>
>  > update.packages(ask='graphics',checkBuilt=TRUE)
>
>    There are binary versions available but the source versions are later:
>          binary source needs_compilation
> stringi  1.1.7  1.2.4              TRUE
>
> Do you want to install from sources the packages which need compilation?
> y/n:
>
> Which re-install the same version at each update...
>
>
>
>
> Le 10/09/2018 ? 17:17, R. Mark Sharp a ?crit :
> > Patrick,
> >
> > It looks like the CRAN mirror that you are using has not been updated with the binary versions, which are readily available on other mirrors (e.g., https://cran.revolutionanalytics.com).
> >
> > Mark
> > R. Mark Sharp, Ph.D.
> > Data Scientist and Biomedical Statistical Consultant
> > 7526 Meadow Green St.
> > San Antonio, TX 78251
> > mobile: 210-218-2868
> > rmsharp at me.com
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >> On Sep 10, 2018, at 12:23 AM, Patrick Giraudoux <patrick.giraudoux at univ-fcomte.fr> wrote:
> >>
> >> Since weeks the package stringi stays on the following versions:
> >>
> >>> update.packages(ask='graphics',checkBuilt=TRUE)
> >>    There is a binary version available but the source version is later:
> >>          binary source needs_compilation
> >> stringi  1.1.7  1.2.4              TRUE
> >>
> >> Do you want to install from sources the package which needs compilation?
> >> y/n: n
> >>
> >> However updated,  I am asked to update it again with the same version at any next update of R.
> >>
> >> Has somebody an idea about what is happening?
> >>
> >> Patrick
> >>
> >> ______________________________________________
> >> R-package-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel



-- 
http://hadley.nz


From p@trick@gir@udoux @ending from univ-fcomte@fr  Sat Sep 15 17:28:25 2018
From: p@trick@gir@udoux @ending from univ-fcomte@fr (Patrick Giraudoux)
Date: Sat, 15 Sep 2018 17:28:25 +0200
Subject: [R-pkg-devel] stringi update
In-Reply-To: <CABdHhvHmk=3BZ-Dq55sBsp+EVYneMzCSq8EQx7j8mPi4d8h2dQ@mail.gmail.com>
References: <mailman.3112.7.1536487202.27003.r-package-devel@r-project.org>
 <82654b52-fddd-e622-9e7e-e96a5426c4b8@univ-fcomte.fr>
 <58408F3D-C51D-483D-875F-CC491DF03FC6@me.com>
 <2529a09d-8de3-92a4-7ffd-551ef05c7f6d@univ-fcomte.fr>
 <CABdHhvHmk=3BZ-Dq55sBsp+EVYneMzCSq8EQx7j8mPi4d8h2dQ@mail.gmail.com>
Message-ID: <0bd177ed-0f85-45fe-ee75-a43ec0d9b8c7@univ-fcomte.fr>

Indeed. Clear enough:

  * using R version 3.5.1 (2018-07-02)
  * using platform: x86_64-w64-mingw32 (64-bit)
  * using session charset: ISO8859-1
  * checking for file 'stringi/DESCRIPTION' ... OK
  * checking extension type ... Package
  * this is package 'stringi' version '1.2.4'
  * checking package namespace information ... OK
  * checking package dependencies ... OK
  * checking if this is a source package ... OK
  * checking if there is a namespace ... OK
  * checking for hidden files and directories ... OK
  * checking for portable file names ... OK
  * checking whether package 'stringi' can be installed ... ERROR
    Installation failed.
    See 'd:/Rcompile/CRANpkg/local/3.5/stringi.Rcheck/00install.out' for
    details.
  * DONE
    See
    https://www.r-project.org/nosvn/R.check/r-release-windows-ix86+x86_64/stringi-00install.html
    for details.

Suppose the package maintainer will fix it... but the error is there 
since some months... Will post the issue on github (stringi development 
site).


Le 15/09/2018 ? 16:54, Hadley Wickham a ?crit?:
> Looking at the primary CRAN site:
> https://cran.r-project.org/web/packages/stringi/index.html, you can
> see that the windows binary is still at 1.1.7, suggesting that there's
> some build failure. You can see exactly what that is on the CRAN check
> page: https://cran.r-project.org/web/checks/check_results_stringi.html
>
> Hadley
> On Sat, Sep 15, 2018 at 1:24 AM Patrick Giraudoux
> <patrick.giraudoux at univ-fcomte.fr> wrote:
>> Thnaks for the hint, but I have tried several  mirrors and still get the
>> same trouble:
>>
>>   > update.packages(ask='graphics',checkBuilt=TRUE)
>>
>>     There are binary versions available but the source versions are later:
>>           binary source needs_compilation
>> stringi  1.1.7  1.2.4              TRUE
>>
>> Do you want to install from sources the packages which need compilation?
>> y/n:
>>
>> Which re-install the same version at each update...
>>
>>
>>
>>
>> Le 10/09/2018 ? 17:17, R. Mark Sharp a ?crit :
>>> Patrick,
>>>
>>> It looks like the CRAN mirror that you are using has not been updated with the binary versions, which are readily available on other mirrors (e.g., https://cran.revolutionanalytics.com).
>>>
>>> Mark
>>> R. Mark Sharp, Ph.D.
>>> Data Scientist and Biomedical Statistical Consultant
>>> 7526 Meadow Green St.
>>> San Antonio, TX 78251
>>> mobile: 210-218-2868
>>> rmsharp at me.com
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>> On Sep 10, 2018, at 12:23 AM, Patrick Giraudoux <patrick.giraudoux at univ-fcomte.fr> wrote:
>>>>
>>>> Since weeks the package stringi stays on the following versions:
>>>>
>>>>> update.packages(ask='graphics',checkBuilt=TRUE)
>>>>     There is a binary version available but the source version is later:
>>>>           binary source needs_compilation
>>>> stringi  1.1.7  1.2.4              TRUE
>>>>
>>>> Do you want to install from sources the package which needs compilation?
>>>> y/n: n
>>>>
>>>> However updated,  I am asked to update it again with the same version at any next update of R.
>>>>
>>>> Has somebody an idea about what is happening?
>>>>
>>>> Patrick
>>>>
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>


	[[alternative HTML version deleted]]


From erinm@hodge@@ @ending from gm@il@com  Sun Sep 16 01:26:31 2018
From: erinm@hodge@@ @ending from gm@il@com (Erin Hodgess)
Date: Sat, 15 Sep 2018 17:26:31 -0600
Subject: [R-pkg-devel] 
 Trying to compile R-3.5.1 with openblas for windows
In-Reply-To: <CAL6gwn+HE8ajHdrdEmGPOYeqLmcNhTCkTw6S3QNYt-PJd1_mmQ@mail.gmail.com>
References: <CACxE24nGRQchs1g2ekifxSYKyR-E69PrLdY3mfh_dSBdangQ2A@mail.gmail.com>
 <CAL6gwnLwJyeHAvoCgeWifMFHvpL2coq28APym5k1wFMP7VxHKQ@mail.gmail.com>
 <CACxE24k4WDA7hq-XbH==rREVMdzkA1CuF8g1B5gKhfyvLtRV7g@mail.gmail.com>
 <CAL6gwn+HE8ajHdrdEmGPOYeqLmcNhTCkTw6S3QNYt-PJd1_mmQ@mail.gmail.com>
Message-ID: <CACxE24=g478JF3Ddp6f4Xaza7q3ta9YbWaezmVhq3gSuBjhvdQ@mail.gmail.com>

Finally got Openblas installed!  The speed up is amazing!  Thanks for your
help and patience.

Sincerely,
Erin

Erin Hodgess, PhD
mailto: erinm.hodgess at gmail.com


On Fri, Sep 14, 2018 at 2:46 PM Avraham Adler <avraham.adler at gmail.com>
wrote:

> No, I?m sorry, I haven?t seen that and I built R 3.5.1 with OpenBLAS
> recently. Does it work if you use the vanilla BLAS?
>
> Avi
>
> On Fri, Sep 14, 2018 at 4:14 PM Erin Hodgess <erinm.hodgess at gmail.com>
> wrote:
>
>> Hi again!
>>
>> I checked everything, did "make distribution" and the same thing occurred.
>>
>>
>> d:/Rtools/mingw_64/bin/ar -rucs ../SuiteSparse_config.a
>> SuiteSparse_config.o
>> D:\Rtools\mingw_64\bin\nm.exe: 'sublibs': No such file
>> d:/Rtools/mingw_64/bin/gcc -shared -s -static-libgcc -o Matrix.dll
>> tmp.def CHMfactor.o Csparse.o TMatrix_as.o Tsparse.o init.o Mutils.o
>> chm_common.o cs.o cs_utils.o dense.o dgCMatrix.o dgTMatrix.o dgeMatrix.o
>> dpoMatrix.o dppMatrix.o dsCMatrix.o dsyMatrix.o dspMatrix.o dtCMatrix.o
>> dtTMatrix.o dtrMatrix.o dtpMatrix.o factorizations.o ldense.o lgCMatrix.o
>> sparseQR.o abIndex.o -LD:/erinm/R-3.5.1/bin/x64 -lRlapack
>> -LD:/erinm/R-3.5.1/bin/x64 -lRblas -LD:/erinm/R-3.5.1/extsoft/lib/x64
>> -LD:/erinm/R-3.5.1/extsoft/lib -LD:/erinm/R-3.5.1/bin/x64 -lR
>> CHMfactor.o:CHMfactor.c:(.text+0x3b): undefined reference to
>> `cholmod_copy_factor'
>> CHMfactor.o:CHMfactor.c:(.text+0x7b): undefined reference to
>> `cholmod_change_factor'
>> CHMfactor.o:CHMfactor.c:(.text+0x92): undefined reference to
>> `cholmod_factor_to_sparse'
>> CHMfactor.o:CHMfactor.c:(.text+0xa5): undefined reference to
>> `cholmod_free_factor'
>> CHMfactor.o:CHMfactor.c:(.text+0x18e): undefined reference to
>> `cholmod_solve'
>> CHMfactor.o:CHMfactor.c:(.text+0x267): undefined reference to
>> `cholmod_copy_factor'
>> CHMfactor.o:CHMfactor.c:(.text+0x27e): undefined reference to
>> `cholmod_updown'
>> CHMfactor.o:CHMfactor.c:(.text+0x396): undefined reference to
>> `cholmod_spsolve'
>> CHMfactor.o:CHMfactor.c:(.text+0x620): undefined reference to
>> `cholmod_factorize_p'
>> CHMfactor.o:CHMfactor.c:(.text+0x658): undefined reference to
>> `cholmod_change_factor'
>> CHMfactor.o:CHMfactor.c:(.text+0x720): undefined reference to
>> `cholmod_copy_factor'
>> CHMfactor.o:CHMfactor.c:(.text+0x87b): undefined reference to
>> `cholmod_copy_factor'
>> CHMfactor.o:CHMfactor.c:(.text+0x8c3): undefined reference to
>> `cholmod_free_factor'
>> Csparse.o:Csparse.c:(.text+0x9f1): undefined reference to
>> `cholmod_sparse_to_dense'
>> Csparse.o:Csparse.c:(.text+0xcd6): undefined reference to `cholmod_speye'
>> Csparse.o:Csparse.c:(.text+0xd21): undefined reference to `cholmod_add'
>> Csparse.o:Csparse.c:(.text+0xd31): undefined reference to
>> `cholmod_free_sparse'
>> Csparse.o:Csparse.c:(.text+0xd3d): undefined reference to
>> `cholmod_copy_sparse'
>> Csparse.o:Csparse.c:(.text+0xd4c): undefined reference to
>> `cholmod_free_sparse'
>> Csparse.o:Csparse.c:(.text+0xdf9): undefined reference to `cholmod_copy'
>>
>> Does this look familiar, please?
>>
>> Thanks,
>> Erin
>>
>> Erin Hodgess, PhD
>> mailto: erinm.hodgess at gmail.com
>>
>>
>> On Fri, Sep 14, 2018 at 1:13 PM Avraham Adler <avraham.adler at gmail.com>
>> wrote:
>>
>>> Try following the directions here. They have worked for me for years.
>>> Please see the comments too.
>>>
>>> https://www.avrahamadler.com/r-tips/build-openblas-for-windows-r64/
>>>
>>> Hope that helps,
>>>
>>> Avi
>>>
>>> On Fri, Sep 14, 2018 at 2:34 PM Erin Hodgess <erinm.hodgess at gmail.com>
>>> wrote:
>>>
>>>> Hello!
>>>>
>>>> I'm building a package that needs Openblas for matrix manipulation
>>>> speed up.
>>>>
>>>> I built Openblas on Windows 10.  I updated the MkRules.local,
>>>> src/extra/blas/Makefile.win, etc.  Things are working with "make all".
>>>>
>>>> However, when I run "make recommended", I have trouble with the Matrix
>>>> package build.  The components of the Cholesky all appear as
>>>> unreferenced.
>>>>
>>>> Has anyone else run into this, please?  I'm working with R-3.5.1 source.
>>>>
>>>> Thanks,
>>>> Erin
>>>>
>>>> Erin Hodgess, PhD
>>>> mailto: erinm.hodgess at gmail.com
>>>>
>>>>         [[alternative HTML version deleted]]
>>>>
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>
>>> --
>>> Sent from Gmail Mobile
>>>
>> --
> Sent from Gmail Mobile
>

	[[alternative HTML version deleted]]


From @vr@h@m@@dler @ending from gm@il@com  Sun Sep 16 03:19:11 2018
From: @vr@h@m@@dler @ending from gm@il@com (Avraham Adler)
Date: Sat, 15 Sep 2018 21:19:11 -0400
Subject: [R-pkg-devel] 
 Trying to compile R-3.5.1 with openblas for windows
In-Reply-To: <CACxE24=g478JF3Ddp6f4Xaza7q3ta9YbWaezmVhq3gSuBjhvdQ@mail.gmail.com>
References: <CACxE24nGRQchs1g2ekifxSYKyR-E69PrLdY3mfh_dSBdangQ2A@mail.gmail.com>
 <CAL6gwnLwJyeHAvoCgeWifMFHvpL2coq28APym5k1wFMP7VxHKQ@mail.gmail.com>
 <CACxE24k4WDA7hq-XbH==rREVMdzkA1CuF8g1B5gKhfyvLtRV7g@mail.gmail.com>
 <CAL6gwn+HE8ajHdrdEmGPOYeqLmcNhTCkTw6S3QNYt-PJd1_mmQ@mail.gmail.com>
 <CACxE24=g478JF3Ddp6f4Xaza7q3ta9YbWaezmVhq3gSuBjhvdQ@mail.gmail.com>
Message-ID: <CAL6gwn+dObh7kxGUy16P0hL5FHivohtcCP+ngm4Zv-nZbCjgfw@mail.gmail.com>

Fantastic!

Avi

On Sat, Sep 15, 2018 at 7:26 PM Erin Hodgess <erinm.hodgess at gmail.com>
wrote:

> Finally got Openblas installed!  The speed up is amazing!  Thanks for your
> help and patience.
>
> Sincerely,
> Erin
>
> Erin Hodgess, PhD
> mailto: erinm.hodgess at gmail.com
>
>
> On Fri, Sep 14, 2018 at 2:46 PM Avraham Adler <avraham.adler at gmail.com>
> wrote:
>
>> No, I?m sorry, I haven?t seen that and I built R 3.5.1 with OpenBLAS
>> recently. Does it work if you use the vanilla BLAS?
>>
>> Avi
>>
>> On Fri, Sep 14, 2018 at 4:14 PM Erin Hodgess <erinm.hodgess at gmail.com>
>> wrote:
>>
>>> Hi again!
>>>
>>> I checked everything, did "make distribution" and the same thing
>>> occurred.
>>>
>>>
>>> d:/Rtools/mingw_64/bin/ar -rucs ../SuiteSparse_config.a
>>> SuiteSparse_config.o
>>> D:\Rtools\mingw_64\bin\nm.exe: 'sublibs': No such file
>>> d:/Rtools/mingw_64/bin/gcc -shared -s -static-libgcc -o Matrix.dll
>>> tmp.def CHMfactor.o Csparse.o TMatrix_as.o Tsparse.o init.o Mutils.o
>>> chm_common.o cs.o cs_utils.o dense.o dgCMatrix.o dgTMatrix.o dgeMatrix.o
>>> dpoMatrix.o dppMatrix.o dsCMatrix.o dsyMatrix.o dspMatrix.o dtCMatrix.o
>>> dtTMatrix.o dtrMatrix.o dtpMatrix.o factorizations.o ldense.o lgCMatrix.o
>>> sparseQR.o abIndex.o -LD:/erinm/R-3.5.1/bin/x64 -lRlapack
>>> -LD:/erinm/R-3.5.1/bin/x64 -lRblas -LD:/erinm/R-3.5.1/extsoft/lib/x64
>>> -LD:/erinm/R-3.5.1/extsoft/lib -LD:/erinm/R-3.5.1/bin/x64 -lR
>>> CHMfactor.o:CHMfactor.c:(.text+0x3b): undefined reference to
>>> `cholmod_copy_factor'
>>> CHMfactor.o:CHMfactor.c:(.text+0x7b): undefined reference to
>>> `cholmod_change_factor'
>>> CHMfactor.o:CHMfactor.c:(.text+0x92): undefined reference to
>>> `cholmod_factor_to_sparse'
>>> CHMfactor.o:CHMfactor.c:(.text+0xa5): undefined reference to
>>> `cholmod_free_factor'
>>> CHMfactor.o:CHMfactor.c:(.text+0x18e): undefined reference to
>>> `cholmod_solve'
>>> CHMfactor.o:CHMfactor.c:(.text+0x267): undefined reference to
>>> `cholmod_copy_factor'
>>> CHMfactor.o:CHMfactor.c:(.text+0x27e): undefined reference to
>>> `cholmod_updown'
>>> CHMfactor.o:CHMfactor.c:(.text+0x396): undefined reference to
>>> `cholmod_spsolve'
>>> CHMfactor.o:CHMfactor.c:(.text+0x620): undefined reference to
>>> `cholmod_factorize_p'
>>> CHMfactor.o:CHMfactor.c:(.text+0x658): undefined reference to
>>> `cholmod_change_factor'
>>> CHMfactor.o:CHMfactor.c:(.text+0x720): undefined reference to
>>> `cholmod_copy_factor'
>>> CHMfactor.o:CHMfactor.c:(.text+0x87b): undefined reference to
>>> `cholmod_copy_factor'
>>> CHMfactor.o:CHMfactor.c:(.text+0x8c3): undefined reference to
>>> `cholmod_free_factor'
>>> Csparse.o:Csparse.c:(.text+0x9f1): undefined reference to
>>> `cholmod_sparse_to_dense'
>>> Csparse.o:Csparse.c:(.text+0xcd6): undefined reference to `cholmod_speye'
>>> Csparse.o:Csparse.c:(.text+0xd21): undefined reference to `cholmod_add'
>>> Csparse.o:Csparse.c:(.text+0xd31): undefined reference to
>>> `cholmod_free_sparse'
>>> Csparse.o:Csparse.c:(.text+0xd3d): undefined reference to
>>> `cholmod_copy_sparse'
>>> Csparse.o:Csparse.c:(.text+0xd4c): undefined reference to
>>> `cholmod_free_sparse'
>>> Csparse.o:Csparse.c:(.text+0xdf9): undefined reference to `cholmod_copy'
>>>
>>> Does this look familiar, please?
>>>
>>> Thanks,
>>> Erin
>>>
>>> Erin Hodgess, PhD
>>> mailto: erinm.hodgess at gmail.com
>>>
>>>
>>> On Fri, Sep 14, 2018 at 1:13 PM Avraham Adler <avraham.adler at gmail.com>
>>> wrote:
>>>
>>>> Try following the directions here. They have worked for me for years.
>>>> Please see the comments too.
>>>>
>>>> https://www.avrahamadler.com/r-tips/build-openblas-for-windows-r64/
>>>>
>>>> Hope that helps,
>>>>
>>>> Avi
>>>>
>>>> On Fri, Sep 14, 2018 at 2:34 PM Erin Hodgess <erinm.hodgess at gmail.com>
>>>> wrote:
>>>>
>>>>> Hello!
>>>>>
>>>>> I'm building a package that needs Openblas for matrix manipulation
>>>>> speed up.
>>>>>
>>>>> I built Openblas on Windows 10.  I updated the MkRules.local,
>>>>> src/extra/blas/Makefile.win, etc.  Things are working with "make all".
>>>>>
>>>>> However, when I run "make recommended", I have trouble with the Matrix
>>>>> package build.  The components of the Cholesky all appear as
>>>>> unreferenced.
>>>>>
>>>>> Has anyone else run into this, please?  I'm working with R-3.5.1
>>>>> source.
>>>>>
>>>>> Thanks,
>>>>> Erin
>>>>>
>>>>> Erin Hodgess, PhD
>>>>> mailto: erinm.hodgess at gmail.com
>>>>>
>>>>>         [[alternative HTML version deleted]]
>>>>>
>>>>> ______________________________________________
>>>>> R-package-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>>
>>>> --
>>>> Sent from Gmail Mobile
>>>>
>>> --
>> Sent from Gmail Mobile
>>
> --
Sent from Gmail Mobile

	[[alternative HTML version deleted]]


From jwood000 @ending from gm@il@com  Sun Sep 16 18:32:06 2018
From: jwood000 @ending from gm@il@com (Joseph Wood)
Date: Sun, 16 Sep 2018 12:32:06 -0400
Subject: [R-pkg-devel] Package Etiquette
Message-ID: <CAKDcrSgnuoW=mTDyMu66r0UfFBta7CE_aRzeobE4NfW546sA-A@mail.gmail.com>

Hello All,

I appreciate all of the feedback. The many examples from personal
experience really help.

My gut feeling of contacting the maintainer was indeed confirmed.

My particular situation is regarding ideas I have for a few packages.
For example, I'm not very happy with how I handled the package
bigIntegerAlgos. It has a depends on the package gmp as
bigIntegerAlgos is simply an extension of this package (it adds two
specialized functions).

The decision to have gmp as a depends really boiled down to the type
of work one would be doing if they really wanted to factor large
numbers. It is almost inconceivable that they wouldn't be using the
various tools in the gmp package, hence the depends.

Currently, I would grade the level of code in bigIntegerAlgos as
"Rookie-Level" at best and I wouldn't expect the maintainer of gmp to
associate with it. However, as the level improves and certainly before
the next release, I will contact the maintainer to ask what the best
course of action is.

Again, thanks for all of the great feedback.
Joseph Wood


From gkr@emer @ending from bgc-jen@@mpg@de  Mon Sep 17 17:45:27 2018
From: gkr@emer @ending from bgc-jen@@mpg@de (Guido Kraemer)
Date: Mon, 17 Sep 2018 17:45:27 +0200
Subject: [R-pkg-devel] object 'nativeRoutines' not found
Message-ID: <6cee5995-533e-7edd-1236-c37d5b89dd09@bgc-jena.mpg.de>


Hi all,

Since a couple of days travis-ci fails for my package coRanking with "R: 
devel".
The error message is:

Error in nativeRoutines[[lib]] <- routines :
object 'nativeRoutines' not found

"R: release" and "R: oldrel" work fine. Did some R internals change or 
is the
"R: devel" on travis currently broken?

I also sent the package to winbuilder and it works fine with R-devel

You can find the travis build here:

https://travis-ci.org/gdkrmr/coRanking/jobs/428661435

Best Regards,

Guido


From pier@ @ending from ompk@@net  Tue Sep 18 08:08:06 2018
From: pier@ @ending from ompk@@net (Piers Harding)
Date: Tue, 18 Sep 2018 18:08:06 +1200
Subject: [R-pkg-devel] Tests for RSAP fail due to dependence on 3rd party
 library
Message-ID: <CAKgGX1j5pxqsbPsPE3oGqKuBeFchALTvgRdBdS6gbVtUMJst-w@mail.gmail.com>

Hi -

A recent upload of package RSAP_0.12.tar.gz has failed due to a dependency
on the SAP NW RFC SDK libraries.  Unfortunately  these 3rd party libraries
are not available for bundling from SAP so an automated test build is not
possible.  Previously the flags --install=no have been set on this package
as indicated here
https://cran.r-project.org/web/checks/check_results_RSAP.html for some
architecture types - is it possible to get these settings updated for the
remaining types of r-release-windows-ix86+x86_64, r-release-osx-x86_64,
and r-oldrel-osx-x86_64 to suppress these errors (
https://www.r-project.org/nosvn/R.check/r-release-windows-ix86+x86_64/RSAP-00install.html
)?

Thanks,
Piers.

	[[alternative HTML version deleted]]


From ligge@ @ending from @t@ti@tik@tu-dortmund@de  Tue Sep 18 10:12:58 2018
From: ligge@ @ending from @t@ti@tik@tu-dortmund@de (Uwe Ligges)
Date: Tue, 18 Sep 2018 10:12:58 +0200
Subject: [R-pkg-devel] 
 Tests for RSAP fail due to dependence on 3rd party library
In-Reply-To: <CAKgGX1j5pxqsbPsPE3oGqKuBeFchALTvgRdBdS6gbVtUMJst-w@mail.gmail.com>
References: <CAKgGX1j5pxqsbPsPE3oGqKuBeFchALTvgRdBdS6gbVtUMJst-w@mail.gmail.com>
Message-ID: <64c0b0e6-ab9a-4689-3684-33310f69cebe@statistik.tu-dortmund.de>

Pls send such a request to CRAN at R-project.org. We will answer there.

Best,
Uwe Ligges

On 18.09.2018 08:08, Piers Harding wrote:
> Hi -
> 
> A recent upload of package RSAP_0.12.tar.gz has failed due to a dependency
> on the SAP NW RFC SDK libraries.  Unfortunately  these 3rd party libraries
> are not available for bundling from SAP so an automated test build is not
> possible.  Previously the flags --install=no have been set on this package
> as indicated here
> https://cran.r-project.org/web/checks/check_results_RSAP.html for some
> architecture types - is it possible to get these settings updated for the
> remaining types of r-release-windows-ix86+x86_64, r-release-osx-x86_64,
> and r-oldrel-osx-x86_64 to suppress these errors (
> https://www.r-project.org/nosvn/R.check/r-release-windows-ix86+x86_64/RSAP-00install.html
> )?
> 
> Thanks,
> Piers.
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From @imondedm@n @ending from gm@il@com  Wed Sep 19 01:11:14 2018
From: @imondedm@n @ending from gm@il@com (Simon Dedman)
Date: Tue, 18 Sep 2018 16:11:14 -0700
Subject: [R-pkg-devel] R graphics 'text' package 'adj' parameter order wrong
 incorrect reversed?
Message-ID: <CAGzvX=m1+9i0p1R6xfarsqhNe7NHTmN-eud-aZWNf9gNCpmb_Q@mail.gmail.com>

Original stack overflow post here:
https://stackoverflow.com/questions/52194719/r-graphic-text-package-adj-parameter-order-wrong-incorrect-reversed

Hopefully this is now the appropriate place to post this as the above post
got a single comment of agreement.

Content:

I believe R core package graphics text function's adj parameter is
incorrectly described in the manual
<https://stat.ethz.ch/R-manual/R-devel/library/graphics/html/text.html> and
would be grateful if someone could confirm this before I submit a bug report
<https://www.r-project.org/bugs.html>.

adj text:

adj allows adjustment of the text with respect to (x, y). Values of 0, 0.5,
and 1 specify left/bottom, middle and right/top alignment, respectively.

Since text controls these labels and not the points which have already been
plotted, I can't see how "with respect to x,y" can mean anything other than
"in this direction relative to their points".

However the order is reversed: 0,0 (supposedly left & bottom) is top &
right; 1,1 (supposedly right & top) is left and bottom.

Reproducible example:

tens = 1:10
plot(tens, tens, xlab = "adj 0,0 left/bottom")
text(tens, tens, labels = letters[tens], adj = c(0,0))
plot(tens, tens, xlab = "adj 0.5,0.5 middle")
text(tens, tens, labels = letters[tens], adj = c(0.5,0.5))
plot(tens, tens, xlab = "adj 1,1 right/top")
text(tens, tens, labels = letters[tens], adj = c(1,1))

Thanks.

	[[alternative HTML version deleted]]


From drjimlemon @ending from gm@il@com  Wed Sep 19 01:33:56 2018
From: drjimlemon @ending from gm@il@com (Jim Lemon)
Date: Wed, 19 Sep 2018 09:33:56 +1000
Subject: [R-pkg-devel] 
 R graphics 'text' package 'adj' parameter order wrong
 incorrect reversed?
In-Reply-To: <CAGzvX=m1+9i0p1R6xfarsqhNe7NHTmN-eud-aZWNf9gNCpmb_Q@mail.gmail.com>
References: <CAGzvX=m1+9i0p1R6xfarsqhNe7NHTmN-eud-aZWNf9gNCpmb_Q@mail.gmail.com>
Message-ID: <CA+8X3fXGR7Q-iNweq60NKbc3iPL+3=xzzS_RQcFqSAaEJ7oLnA@mail.gmail.com>

Hi Simon,
I think the conventions of typesetting are to blame. Think of an
invisible box around the text being displayed.
__________________
|Left justification          |
|-----------------------------|
meaning that the text _starts_ at the left of the field and is to the
right of the text position specified
__________________
|        Right justification|
|-----------------------------|

meaning that the text _ends_ at the right of the field and is to the
left of the text position. Can't do the top and bottom justification
this way, but I think you get the idea.

Jim

On Wed, Sep 19, 2018 at 9:13 AM Simon Dedman <simondedman at gmail.com> wrote:
>
> Original stack overflow post here:
> https://stackoverflow.com/questions/52194719/r-graphic-text-package-adj-parameter-order-wrong-incorrect-reversed
>
> Hopefully this is now the appropriate place to post this as the above post
> got a single comment of agreement.
>
> Content:
>
> I believe R core package graphics text function's adj parameter is
> incorrectly described in the manual
> <https://stat.ethz.ch/R-manual/R-devel/library/graphics/html/text.html> and
> would be grateful if someone could confirm this before I submit a bug report
> <https://www.r-project.org/bugs.html>.
>
> adj text:
>
> adj allows adjustment of the text with respect to (x, y). Values of 0, 0.5,
> and 1 specify left/bottom, middle and right/top alignment, respectively.
>
> Since text controls these labels and not the points which have already been
> plotted, I can't see how "with respect to x,y" can mean anything other than
> "in this direction relative to their points".
>
> However the order is reversed: 0,0 (supposedly left & bottom) is top &
> right; 1,1 (supposedly right & top) is left and bottom.
>
> Reproducible example:
>
> tens = 1:10
> plot(tens, tens, xlab = "adj 0,0 left/bottom")
> text(tens, tens, labels = letters[tens], adj = c(0,0))
> plot(tens, tens, xlab = "adj 0.5,0.5 middle")
> text(tens, tens, labels = letters[tens], adj = c(0.5,0.5))
> plot(tens, tens, xlab = "adj 1,1 right/top")
> text(tens, tens, labels = letters[tens], adj = c(1,1))
>
> Thanks.
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From pd@lgd @ending from gm@il@com  Wed Sep 19 09:31:16 2018
From: pd@lgd @ending from gm@il@com (peter dalgaard)
Date: Wed, 19 Sep 2018 09:31:16 +0200
Subject: [R-pkg-devel] 
 R graphics 'text' package 'adj' parameter order wrong
 incorrect reversed?
In-Reply-To: <CA+8X3fXGR7Q-iNweq60NKbc3iPL+3=xzzS_RQcFqSAaEJ7oLnA@mail.gmail.com>
References: <CAGzvX=m1+9i0p1R6xfarsqhNe7NHTmN-eud-aZWNf9gNCpmb_Q@mail.gmail.com>
 <CA+8X3fXGR7Q-iNweq60NKbc3iPL+3=xzzS_RQcFqSAaEJ7oLnA@mail.gmail.com>
Message-ID: <40CE8ECF-9848-4E23-A58D-2ABC817701FA@gmail.com>

Exactly. And left alignment means that the left end of the text is aligned with the anchor point, etc. So documentation is correct.

-pd

> On 19 Sep 2018, at 01:33 , Jim Lemon <drjimlemon at gmail.com> wrote:
> 
> Hi Simon,
> I think the conventions of typesetting are to blame. Think of an
> invisible box around the text being displayed.
> __________________
> |Left justification          |
> |-----------------------------|
> meaning that the text _starts_ at the left of the field and is to the
> right of the text position specified
> __________________
> |        Right justification|
> |-----------------------------|
> 
> meaning that the text _ends_ at the right of the field and is to the
> left of the text position. Can't do the top and bottom justification
> this way, but I think you get the idea.
> 
> Jim
> 
> On Wed, Sep 19, 2018 at 9:13 AM Simon Dedman <simondedman at gmail.com> wrote:
>> 
>> Original stack overflow post here:
>> https://stackoverflow.com/questions/52194719/r-graphic-text-package-adj-parameter-order-wrong-incorrect-reversed
>> 
>> Hopefully this is now the appropriate place to post this as the above post
>> got a single comment of agreement.
>> 
>> Content:
>> 
>> I believe R core package graphics text function's adj parameter is
>> incorrectly described in the manual
>> <https://stat.ethz.ch/R-manual/R-devel/library/graphics/html/text.html> and
>> would be grateful if someone could confirm this before I submit a bug report
>> <https://www.r-project.org/bugs.html>.
>> 
>> adj text:
>> 
>> adj allows adjustment of the text with respect to (x, y). Values of 0, 0.5,
>> and 1 specify left/bottom, middle and right/top alignment, respectively.
>> 
>> Since text controls these labels and not the points which have already been
>> plotted, I can't see how "with respect to x,y" can mean anything other than
>> "in this direction relative to their points".
>> 
>> However the order is reversed: 0,0 (supposedly left & bottom) is top &
>> right; 1,1 (supposedly right & top) is left and bottom.
>> 
>> Reproducible example:
>> 
>> tens = 1:10
>> plot(tens, tens, xlab = "adj 0,0 left/bottom")
>> text(tens, tens, labels = letters[tens], adj = c(0,0))
>> plot(tens, tens, xlab = "adj 0.5,0.5 middle")
>> text(tens, tens, labels = letters[tens], adj = c(0.5,0.5))
>> plot(tens, tens, xlab = "adj 1,1 right/top")
>> text(tens, tens, labels = letters[tens], adj = c(1,1))
>> 
>> Thanks.
>> 
>>        [[alternative HTML version deleted]]
>> 
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From d@vidhughjone@ @ending from gm@il@com  Wed Sep 19 09:55:28 2018
From: d@vidhughjone@ @ending from gm@il@com (David Hugh-Jones)
Date: Wed, 19 Sep 2018 08:55:28 +0100
Subject: [R-pkg-devel] 
 R graphics 'text' package 'adj' parameter order wrong
 incorrect reversed?
In-Reply-To: <40CE8ECF-9848-4E23-A58D-2ABC817701FA@gmail.com>
References: <CAGzvX=m1+9i0p1R6xfarsqhNe7NHTmN-eud-aZWNf9gNCpmb_Q@mail.gmail.com>
 <CA+8X3fXGR7Q-iNweq60NKbc3iPL+3=xzzS_RQcFqSAaEJ7oLnA@mail.gmail.com>
 <40CE8ECF-9848-4E23-A58D-2ABC817701FA@gmail.com>
Message-ID: <CAARY7khR1e9nWxPTUmn7WH7XU4Chvyxk=sErjpQKQ1q2PYKrng@mail.gmail.com>

Perhaps the documentation could be clearer, though. (I've been confused by
it also.) How about:

adj allows adjustment of the text with respect to (x, y). Values of 0, 0.5
and 1 specify that text will appear right of/above, centred around, and
left of/below the anchor point,  respectively.

On Wed, 19 Sep 2018 at 08:31, peter dalgaard <pdalgd at gmail.com> wrote:

> Exactly. And left alignment means that the left end of the text is aligned
> with the anchor point, etc. So documentation is correct.
>
> -pd
>
> > On 19 Sep 2018, at 01:33 , Jim Lemon <drjimlemon at gmail.com> wrote:
> >
> > Hi Simon,
> > I think the conventions of typesetting are to blame. Think of an
> > invisible box around the text being displayed.
> > __________________
> > |Left justification          |
> > |-----------------------------|
> > meaning that the text _starts_ at the left of the field and is to the
> > right of the text position specified
> > __________________
> > |        Right justification|
> > |-----------------------------|
> >
> > meaning that the text _ends_ at the right of the field and is to the
> > left of the text position. Can't do the top and bottom justification
> > this way, but I think you get the idea.
> >
> > Jim
> >
> > On Wed, Sep 19, 2018 at 9:13 AM Simon Dedman <simondedman at gmail.com>
> wrote:
> >>
> >> Original stack overflow post here:
> >>
> https://stackoverflow.com/questions/52194719/r-graphic-text-package-adj-parameter-order-wrong-incorrect-reversed
> >>
> >> Hopefully this is now the appropriate place to post this as the above
> post
> >> got a single comment of agreement.
> >>
> >> Content:
> >>
> >> I believe R core package graphics text function's adj parameter is
> >> incorrectly described in the manual
> >> <https://stat.ethz.ch/R-manual/R-devel/library/graphics/html/text.html>
> and
> >> would be grateful if someone could confirm this before I submit a bug
> report
> >> <https://www.r-project.org/bugs.html>.
> >>
> >> adj text:
> >>
> >> adj allows adjustment of the text with respect to (x, y). Values of 0,
> 0.5,
> >> and 1 specify left/bottom, middle and right/top alignment, respectively.
> >>
> >> Since text controls these labels and not the points which have already
> been
> >> plotted, I can't see how "with respect to x,y" can mean anything other
> than
> >> "in this direction relative to their points".
> >>
> >> However the order is reversed: 0,0 (supposedly left & bottom) is top &
> >> right; 1,1 (supposedly right & top) is left and bottom.
> >>
> >> Reproducible example:
> >>
> >> tens = 1:10
> >> plot(tens, tens, xlab = "adj 0,0 left/bottom")
> >> text(tens, tens, labels = letters[tens], adj = c(0,0))
> >> plot(tens, tens, xlab = "adj 0.5,0.5 middle")
> >> text(tens, tens, labels = letters[tens], adj = c(0.5,0.5))
> >> plot(tens, tens, xlab = "adj 1,1 right/top")
> >> text(tens, tens, labels = letters[tens], adj = c(1,1))
> >>
> >> Thanks.
> >>
> >>        [[alternative HTML version deleted]]
> >>
> >> ______________________________________________
> >> R-package-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
> --
> Peter Dalgaard, Professor,
> Center for Statistics, Copenhagen Business School
> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
> Phone: (+45)38153501
> Office: A 4.23
> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
-- 
Sent from Gmail Mobile

	[[alternative HTML version deleted]]


From @imondedm@n @ending from gm@il@com  Wed Sep 19 17:00:40 2018
From: @imondedm@n @ending from gm@il@com (Simon Dedman)
Date: Wed, 19 Sep 2018 08:00:40 -0700
Subject: [R-pkg-devel] 
 R graphics 'text' package 'adj' parameter order wrong
 incorrect reversed?
In-Reply-To: <CAARY7khR1e9nWxPTUmn7WH7XU4Chvyxk=sErjpQKQ1q2PYKrng@mail.gmail.com>
References: <CAGzvX=m1+9i0p1R6xfarsqhNe7NHTmN-eud-aZWNf9gNCpmb_Q@mail.gmail.com>
 <CA+8X3fXGR7Q-iNweq60NKbc3iPL+3=xzzS_RQcFqSAaEJ7oLnA@mail.gmail.com>
 <40CE8ECF-9848-4E23-A58D-2ABC817701FA@gmail.com>
 <CAARY7khR1e9nWxPTUmn7WH7XU4Chvyxk=sErjpQKQ1q2PYKrng@mail.gmail.com>
Message-ID: <CAGzvX=nQQye_KtGsn52Sd-FenXpxfyOX8TkDu8eGjqPLrHaK5A@mail.gmail.com>

Thanks for your quick replies gents.

Jim I think the invisible box concept for typesetting is very useful and
key to the source of the issue: the documentation is referring to the
typesetting position within an invisible box, something (I would posit)
most users won't expect. So while the documentation is technically correct
as Peter says, that doesn't inherently make it intuitive which defeats the
purpose of documentation. Additionally, from the frame of reference of
typesetting, I would presume the default case (with documents etc) is that
the box - invisible or otherwise - would be static: the margins of an A4
page, for example, or a text box within a plot. In such cases, left/right
justification is simple and predictable. In this case the documentation's
omission of any reference to the invisible typesetting box creates the
issue.

Subsequently the documentation could be adjusted to include this concept,
viz:
   "Values of 0, 0.5, and 1 specify left/bottom, middle and right/top
alignment, respectively."
becomes (e.g.)
   "Values of 0, 0.5, and 1 specify left/bottom, middle and right/top
alignment, relative to an invisible typesetting box which is itself aligned
to the right/top, middle, and left/bottom of the anchor point,
respectively."
however introducing the typesetting box concept seems unnecessary: David's
proposed text neatly describes what the effect of value changes will be.
Please could this be adopted?

Thanks again.

sd

On Wed, 19 Sep 2018 at 00:55 David Hugh-Jones <davidhughjones at gmail.com>
wrote:

>
> Perhaps the documentation could be clearer, though. (I've been confused by
> it also.) How about:
>
> adj allows adjustment of the text with respect to (x, y). Values of 0, 0.5
> and 1 specify that text will appear right of/above, centred around, and
> left of/below the anchor point,  respectively.
>
> On Wed, 19 Sep 2018 at 08:31, peter dalgaard <pdalgd at gmail.com> wrote:
>
>> Exactly. And left alignment means that the left end of the text is
>> aligned with the anchor point, etc. So documentation is correct.
>>
>> -pd
>>
>> > On 19 Sep 2018, at 01:33 , Jim Lemon <drjimlemon at gmail.com> wrote:
>> >
>> > Hi Simon,
>> > I think the conventions of typesetting are to blame. Think of an
>> > invisible box around the text being displayed.
>> > __________________
>> > |Left justification          |
>> > |-----------------------------|
>> > meaning that the text _starts_ at the left of the field and is to the
>> > right of the text position specified
>> > __________________
>> > |        Right justification|
>> > |-----------------------------|
>> >
>> > meaning that the text _ends_ at the right of the field and is to the
>> > left of the text position. Can't do the top and bottom justification
>> > this way, but I think you get the idea.
>> >
>> > Jim
>> >
>> > On Wed, Sep 19, 2018 at 9:13 AM Simon Dedman <simondedman at gmail.com>
>> wrote:
>> >>
>> >> Original stack overflow post here:
>> >>
>> https://stackoverflow.com/questions/52194719/r-graphic-text-package-adj-parameter-order-wrong-incorrect-reversed
>> >>
>> >> Hopefully this is now the appropriate place to post this as the above
>> post
>> >> got a single comment of agreement.
>> >>
>> >> Content:
>> >>
>> >> I believe R core package graphics text function's adj parameter is
>> >> incorrectly described in the manual
>> >> <https://stat.ethz.ch/R-manual/R-devel/library/graphics/html/text.html>
>> and
>> >> would be grateful if someone could confirm this before I submit a bug
>> report
>> >> <https://www.r-project.org/bugs.html>.
>> >>
>> >> adj text:
>> >>
>> >> adj allows adjustment of the text with respect to (x, y). Values of 0,
>> 0.5,
>> >> and 1 specify left/bottom, middle and right/top alignment,
>> respectively.
>> >>
>> >> Since text controls these labels and not the points which have already
>> been
>> >> plotted, I can't see how "with respect to x,y" can mean anything other
>> than
>> >> "in this direction relative to their points".
>> >>
>> >> However the order is reversed: 0,0 (supposedly left & bottom) is top &
>> >> right; 1,1 (supposedly right & top) is left and bottom.
>> >>
>> >> Reproducible example:
>> >>
>> >> tens = 1:10
>> >> plot(tens, tens, xlab = "adj 0,0 left/bottom")
>> >> text(tens, tens, labels = letters[tens], adj = c(0,0))
>> >> plot(tens, tens, xlab = "adj 0.5,0.5 middle")
>> >> text(tens, tens, labels = letters[tens], adj = c(0.5,0.5))
>> >> plot(tens, tens, xlab = "adj 1,1 right/top")
>> >> text(tens, tens, labels = letters[tens], adj = c(1,1))
>> >>
>> >> Thanks.
>> >>
>> >>        [[alternative HTML version deleted]]
>> >>
>> >> ______________________________________________
>> >> R-package-devel at r-project.org mailing list
>> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> >
>> > ______________________________________________
>> > R-package-devel at r-project.org mailing list
>> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>> --
>> Peter Dalgaard, Professor,
>> Center for Statistics, Copenhagen Business School
>> Solbjerg Plads 3
>> <https://maps.google.com/?q=Solbjerg+Plads+3&entry=gmail&source=g>, 2000
>> Frederiksberg, Denmark
>> Phone: (+45)38153501 <+45%2038%2015%2035%2001>
>> Office: A 4.23
>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
> --
> Sent from Gmail Mobile
>

	[[alternative HTML version deleted]]


From rdmunden1 @ending from @heffield@@c@uk  Fri Sep 21 11:37:41 2018
From: rdmunden1 @ending from @heffield@@c@uk (Rhys D Munden)
Date: Fri, 21 Sep 2018 10:37:41 +0100
Subject: [R-pkg-devel] Help
Message-ID: <CAO171+PRNXF3wor+FRVcJfR0BBhdbg2vtE4RD+7j5bBabHGp+w@mail.gmail.com>

Hi,
received the below email about uploading a package, but I'm not sure how to
solve these problems.
Thanks

Rhys





Dear maintainer,

package SitesInterest_1.0.tar.gz does not pass the incoming checks
automatically, please see the following pre-tests:
Windows: <
https://win-builder.r-project.org/incoming_pretest/SitesInterest_1.0_20180921_110843/Windows/00check.log
>
Status: 3 NOTEs
Debian: <
https://win-builder.r-project.org/incoming_pretest/SitesInterest_1.0_20180921_110843/Debian/00check.log
>
Status: 2 NOTEs



Please fix all problems and resubmit a fixed version via the webform.
If you are not sure how to fix the problems shown, please ask for help on
the R-package-devel mailing list:
<https://stat.ethz.ch/mailman/listinfo/r-package-devel>
If you are fairly certain the rejection is a false positive, please
reply-all to this message and explain.

More details are given in the directory:
<
https://win-builder.r-project.org/incoming_pretest/SitesInterest_1.0_20180921_110843/
>
The files will be removed after roughly 7 days.

No strong reverse dependencies to be checked.

Best regards,
CRAN teams' auto-check service
Flavor: r-devel-linux-x86_64-debian-gcc, r-devel-windows-ix86+x86_64
Check: CRAN incoming feasibility, Result: NOTE
  Maintainer: 'Rhys Munden <rdmunden1 at sheffield.ac.uk>'

  New submission

Flavor: r-devel-windows-ix86+x86_64
Check: running examples for arch 'i386', Result: NOTE
  Examples with CPU or elapsed time > 10s
                           user system elapsed
  plot_radii_results      65.03   1.85   67.40
  print_colour_assignment 62.57   1.67   64.18
  plot.hoops              28.10   0.22   28.48
  plot.schematic          27.91   0.33   28.54
  plot_bars_and_hoops     27.50   0.20   27.97
  plot_bar_chart          11.79   0.16   12.16
  Alt_Alg                 11.30   0.17   11.49
  print_site_visits       11.15   0.11   11.32
  Sites                   11.09   0.14   11.26
  print_sites_pos         11.00   0.13   11.25

Flavor: r-devel-windows-ix86+x86_64
Check: running examples for arch 'x64', Result: NOTE
  Examples with CPU or elapsed time > 10s
                           user system elapsed
  plot_radii_results      72.07   2.03   74.27
  print_colour_assignment 71.87   1.67   74.10
  plot_bars_and_hoops     31.25   0.20   31.48
  plot.schematic          30.73   0.30   31.24
  plot.hoops              30.51   0.14   30.72
  Sites                   13.12   0.05   13.19
  plot_bar_chart          12.87   0.20   13.09
  print_sites_pos         12.76   0.18   12.85
  Alt_Alg                 12.37   0.14   12.48
  print_site_visits       12.20   0.15   12.42

Flavor: r-devel-windows-ix86+x86_64
Check: Overall checktime, Result: NOTE
  Overall checktime 11 min > 10 min

Flavor: r-devel-linux-x86_64-debian-gcc
Check: examples, Result: NOTE
  Examples with CPU or elapsed time > 10s
                            user system elapsed
  plot_radii_results      34.112  2.036  36.148
  print_colour_assignment 33.912  2.016  35.932
  plot.hoops              14.900  0.200  15.100
  plot.schematic          14.316  0.292  14.608
  plot_bars_and_hoops     14.248  0.288  14.537

	[[alternative HTML version deleted]]


From Jori@@Mey@ @ending from ugent@be  Fri Sep 21 14:27:38 2018
From: Jori@@Mey@ @ending from ugent@be (Joris Meys)
Date: Fri, 21 Sep 2018 14:27:38 +0200
Subject: [R-pkg-devel] Help
In-Reply-To: <CAO171+PRNXF3wor+FRVcJfR0BBhdbg2vtE4RD+7j5bBabHGp+w@mail.gmail.com>
References: <CAO171+PRNXF3wor+FRVcJfR0BBhdbg2vtE4RD+7j5bBabHGp+w@mail.gmail.com>
Message-ID: <CAO1zAVZJiX7Hdn1myV7uRt-=dQz9mc7AMmfjo1A1oOTXmBwZyg@mail.gmail.com>

Hi Rhys,

the notes are quite clear: your examples are running too long. That's
easily avoided by using smaller data or limiting the amount of
non-necessary operations in the examples. For the rest is looks OK to me.

Best thing you can do now is fix the examples so they don't run as long,
and resubmit. As explained in the CRAN policies, you can use the webform
again and add a note in the optional comment field explaining how you
solved the issue. If the examples are already minimal, mail to the CRAN
team ( CRAN-submissions at R-project.org ) and explain why it is not possible
to cut down in the runtime of the examples. But imho you better do the
effort of cutting the examples down a bit.

More info on resubmission :
https://cran.r-project.org/web/packages/policies.html#Re_002dsubmission

Hope this helps
Cheers
Joris


On Fri, Sep 21, 2018 at 2:16 PM Rhys D Munden <rdmunden1 at sheffield.ac.uk>
wrote:

> Hi,
> received the below email about uploading a package, but I'm not sure how to
> solve these problems.
> Thanks
>
> Rhys
>
>
>
>
>
> Dear maintainer,
>
> package SitesInterest_1.0.tar.gz does not pass the incoming checks
> automatically, please see the following pre-tests:
> Windows: <
>
> https://win-builder.r-project.org/incoming_pretest/SitesInterest_1.0_20180921_110843/Windows/00check.log
> >
> Status: 3 NOTEs
> Debian: <
>
> https://win-builder.r-project.org/incoming_pretest/SitesInterest_1.0_20180921_110843/Debian/00check.log
> >
> Status: 2 NOTEs
>
>
>
> Please fix all problems and resubmit a fixed version via the webform.
> If you are not sure how to fix the problems shown, please ask for help on
> the R-package-devel mailing list:
> <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
> If you are fairly certain the rejection is a false positive, please
> reply-all to this message and explain.
>
> More details are given in the directory:
> <
>
> https://win-builder.r-project.org/incoming_pretest/SitesInterest_1.0_20180921_110843/
> >
> The files will be removed after roughly 7 days.
>
> No strong reverse dependencies to be checked.
>
> Best regards,
> CRAN teams' auto-check service
> Flavor: r-devel-linux-x86_64-debian-gcc, r-devel-windows-ix86+x86_64
> Check: CRAN incoming feasibility, Result: NOTE
>   Maintainer: 'Rhys Munden <rdmunden1 at sheffield.ac.uk>'
>
>   New submission
>
> Flavor: r-devel-windows-ix86+x86_64
> Check: running examples for arch 'i386', Result: NOTE
>   Examples with CPU or elapsed time > 10s
>                            user system elapsed
>   plot_radii_results      65.03   1.85   67.40
>   print_colour_assignment 62.57   1.67   64.18
>   plot.hoops              28.10   0.22   28.48
>   plot.schematic          27.91   0.33   28.54
>   plot_bars_and_hoops     27.50   0.20   27.97
>   plot_bar_chart          11.79   0.16   12.16
>   Alt_Alg                 11.30   0.17   11.49
>   print_site_visits       11.15   0.11   11.32
>   Sites                   11.09   0.14   11.26
>   print_sites_pos         11.00   0.13   11.25
>
> Flavor: r-devel-windows-ix86+x86_64
> Check: running examples for arch 'x64', Result: NOTE
>   Examples with CPU or elapsed time > 10s
>                            user system elapsed
>   plot_radii_results      72.07   2.03   74.27
>   print_colour_assignment 71.87   1.67   74.10
>   plot_bars_and_hoops     31.25   0.20   31.48
>   plot.schematic          30.73   0.30   31.24
>   plot.hoops              30.51   0.14   30.72
>   Sites                   13.12   0.05   13.19
>   plot_bar_chart          12.87   0.20   13.09
>   print_sites_pos         12.76   0.18   12.85
>   Alt_Alg                 12.37   0.14   12.48
>   print_site_visits       12.20   0.15   12.42
>
> Flavor: r-devel-windows-ix86+x86_64
> Check: Overall checktime, Result: NOTE
>   Overall checktime 11 min > 10 min
>
> Flavor: r-devel-linux-x86_64-debian-gcc
> Check: examples, Result: NOTE
>   Examples with CPU or elapsed time > 10s
>                             user system elapsed
>   plot_radii_results      34.112  2.036  36.148
>   print_colour_assignment 33.912  2.016  35.932
>   plot.hoops              14.900  0.200  15.100
>   plot.schematic          14.316  0.292  14.608
>   plot_bars_and_hoops     14.248  0.288  14.537
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


-- 
Joris Meys
Statistical consultant

Department of Data Analysis and Mathematical Modelling
Ghent University
Coupure Links 653, B-9000 Gent (Belgium)
<https://maps.google.com/?q=Coupure+links+653,%C2%A0B-9000+Gent,%C2%A0Belgium&entry=gmail&source=g>

tel: +32 (0)9 264 61 79
-----------
Biowiskundedagen 2017-2018
http://www.biowiskundedagen.ugent.be/

-------------------------------
Disclaimer : http://helpdesk.ugent.be/e-maildisclaimer.php

	[[alternative HTML version deleted]]


From murdoch@dunc@n @ending from gm@il@com  Fri Sep 21 15:26:58 2018
From: murdoch@dunc@n @ending from gm@il@com (Duncan Murdoch)
Date: Fri, 21 Sep 2018 09:26:58 -0400
Subject: [R-pkg-devel] A bug in rgl caused S3 methods to fail to register
Message-ID: <78fee4de-5180-35a7-7424-382139bef164@gmail.com>

I've just spent a couple of days tracking down a bug in rgl.  The 
symptoms were that when the X11 display was unavailable, S3 methods from 
a package that used rgl failed to show up.

Specifically,

library(nat)
methods("plot3d")

would only show the rgl methods, not the ones that nat added.

The cause was a bug in rgl.  When the X11 initialization fails, rgl 
tries to restart itself with the "NULL" driver.  (This maintains 
structures in memory, but doesn't display anything:  useful for working 
with WebGL, or for testing.)  As part of that restart, I had a line calling

   unloadNamespace("rgl")

R was nice enough to reload the namespace when it was needed next, but
this caused internal inconsistencies in the S3 methods functions, 
because some of them still accessed the old copy of the namespace, and 
some of them accessed the new one.  (They both printed as

<environment: namespace:rgl>

but identical(ns1, ns2) could tell that they were not the same.)

Hopefully if anyone else is ever dumb enough to unload their own 
namespace, this message will help them to fix the bug.

Duncan Murdoch


From thom@@@petzoldt @ending from tu-dre@den@de  Fri Sep 21 17:03:22 2018
From: thom@@@petzoldt @ending from tu-dre@den@de (Thomas Petzoldt)
Date: Fri, 21 Sep 2018 17:03:22 +0200
Subject: [R-pkg-devel] Help
In-Reply-To: <CAO171+PRNXF3wor+FRVcJfR0BBhdbg2vtE4RD+7j5bBabHGp+w@mail.gmail.com>
References: <CAO171+PRNXF3wor+FRVcJfR0BBhdbg2vtE4RD+7j5bBabHGp+w@mail.gmail.com>
Message-ID: <2663ac69-515c-1377-39db-0cfc1c8ec30f@tu-dresden.de>

Hi,

the NOTEs show that your examples require to much CPU time.

Solution: reduce CPU time of your examples by increasing efficiency of 
your code, by simplification of the examples (e.g. with smaller samples 
or toy data), or, if nothing else helps, by embracing examples with 
\dontrun{} or \donttest{}.

https://cran.r-project.org/doc/manuals/r-release/R-exts.html#index-_005cdontrun

As said, use this only if nothing else helps, because it reduces code 
coverage of the tests: https://en.wikipedia.org/wiki/Code_coverage

Thomas


Am 21.09.2018 um 11:37 schrieb Rhys D Munden:
> Hi,
> received the below email about uploading a package, but I'm not sure how to
> solve these problems.
> Thanks
> 
> Rhys
>




From jpritikin @ending from pobox@com  Fri Sep 21 20:48:51 2018
From: jpritikin @ending from pobox@com (Joshua N Pritikin)
Date: Fri, 21 Sep 2018 14:48:51 -0400
Subject: [R-pkg-devel] Check Issue Kinds
Message-ID: <20180921184851.GB11135@tailwind>

We noticed,

https://cran.r-project.org/web/checks/check_issue_kinds.html

Are test results from alternative BLAS/LAPACK implementations available 
somewhere?

-- 
Joshua N. Pritikin, Ph.D.
Virginia Institute for Psychiatric and Behavioral Genetics
Virginia Commonwealth University
PO Box 980126
800 E Leigh St, Biotech One, Suite 1-133
Richmond, VA 23219
http://exuberant-island.surge.sh


From ligge@ @ending from @t@ti@tik@tu-dortmund@de  Fri Sep 21 23:23:38 2018
From: ligge@ @ending from @t@ti@tik@tu-dortmund@de (Uwe Ligges)
Date: Fri, 21 Sep 2018 23:23:38 +0200
Subject: [R-pkg-devel] Check Issue Kinds
In-Reply-To: <20180921184851.GB11135@tailwind>
References: <20180921184851.GB11135@tailwind>
Message-ID: <78166061-e0cf-8d48-4e62-b969dc0283b3@statistik.tu-dortmund.de>

Only for packages which show problems in these checks, the problems are 
linked from the CRAN package check summary page.

Best,
Uwe


On 21.09.2018 20:48, Joshua N Pritikin wrote:
> We noticed,
> 
> https://cran.r-project.org/web/checks/check_issue_kinds.html
> 
> Are test results from alternative BLAS/LAPACK implementations available
> somewhere?
>


From jpritikin @ending from pobox@com  Sat Sep 22 14:50:35 2018
From: jpritikin @ending from pobox@com (Joshua N Pritikin)
Date: Sat, 22 Sep 2018 08:50:35 -0400
Subject: [R-pkg-devel] OS/X binary builds
Message-ID: <20180922125035.GA26378@tailwind>

I set up a cron job to watch for changes in OpenMx check results,

https://cran.r-project.org/web/checks/check_results_OpenMx.html

I notice that Linux builds have been rebuilt multiple times. However, 
it's been almost a week and OS/X builds haven't even been attempted.

When can we expect to see OS/X builds?

Thank you.

-- 
Joshua N. Pritikin, Ph.D.
Virginia Institute for Psychiatric and Behavioral Genetics
Virginia Commonwealth University
PO Box 980126
800 E Leigh St, Biotech One, Suite 1-133
Richmond, VA 23219
http://exuberant-island.surge.sh


From jpritikin @ending from pobox@com  Tue Sep 25 15:16:41 2018
From: jpritikin @ending from pobox@com (Joshua N Pritikin)
Date: Tue, 25 Sep 2018 09:16:41 -0400
Subject: [R-pkg-devel] 
 CRAN's mysterious behavior building OS/X binaries for OpenMx
Message-ID: <20180925131641.GA21718@tailwind>

We finally figured out why our binaries were failing to build on OS/X, 
after more than a year of misery.

We use C++ exceptions and try/catch blocks like this,

                try {
                     // stuff here
                } catch (const std::exception& e) {

This works great with gcc, but whatever version of clang used by CRAN
doesn't like this code. The exception is not caught. So, instead, we have
to write

                try {
                     // stuff here
                } catch (const std::exception& e) {
                     // gcc gets here
                } catch (...) {
                     // clang gets here

which works on both compilers. I don't know why clang skips the first
catch clause.

-- 
Joshua N. Pritikin, Ph.D.
Virginia Institute for Psychiatric and Behavioral Genetics
Virginia Commonwealth University
PO Box 980126
800 E Leigh St, Biotech One, Suite 1-133
Richmond, VA 23219
http://exuberant-island.surge.sh


From edd @ending from debi@n@org  Tue Sep 25 23:31:19 2018
From: edd @ending from debi@n@org (Dirk Eddelbuettel)
Date: Tue, 25 Sep 2018 16:31:19 -0500
Subject: [R-pkg-devel] 
 CRAN's mysterious behavior building OS/X binaries for OpenMx
In-Reply-To: <20180925131641.GA21718@tailwind>
References: <20180925131641.GA21718@tailwind>
Message-ID: <23466.43303.125273.962581@rob.eddelbuettel.com>


On 25 September 2018 at 09:16, Joshua N Pritikin wrote:
| We finally figured out why our binaries were failing to build on OS/X, 
| after more than a year of misery.
| 
| We use C++ exceptions and try/catch blocks like this,
| 
|                 try {
|                      // stuff here
|                 } catch (const std::exception& e) {
| 
| This works great with gcc, but whatever version of clang used by CRAN
| doesn't like this code. The exception is not caught. So, instead, we have
| to write
| 
|                 try {
|                      // stuff here
|                 } catch (const std::exception& e) {
|                      // gcc gets here
|                 } catch (...) {
|                      // clang gets here
| 
| which works on both compilers. I don't know why clang skips the first
| catch clause.

I am not one to quote the C++ standard but for what it is worth, the second
form is that what we have always done in Rcpp land.  Witness eg the macro
below inserted by Rcpp Attributes at the end of every function (following on
what we did with inline before Rcpp Attributes), and note the catch-all
block.

Dirk

// There is no return in case of a longjump exception

#ifndef END_RCPP_RETURN_ERROR
#define END_RCPP_RETURN_ERROR                                                  \
  }                                                                            \
  catch (Rcpp::internal::InterruptedException &__ex__) {                       \
    return Rcpp::internal::interruptedError();                                 \
  }                                                                            \
  catch (Rcpp::LongjumpException& __ex__) {                                    \
    return Rcpp::internal::longjumpSentinel(__ex__.token);                     \
  }                                                                            \
  catch (std::exception &__ex__) {                                             \
    return exception_to_try_error(__ex__);                                     \
  }                                                                            \
  catch (...) {                                                                \
    return string_to_try_error("c++ exception (unknown reason)");              \
  }                                                                            \
  return R_NilValue;
#endif

-- 
http://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From _ @ending from thom@@levine@com  Wed Sep 26 11:23:33 2018
From: _ @ending from thom@@levine@com (Thomas Levine)
Date: Wed, 26 Sep 2018 09:23:33 +0000
Subject: [R-pkg-devel] CRAN Non-Triviality Requirement
Message-ID: <1537953813.946326.1521088296.2F1D8B93@webmail.messagingengine.com>

I want to publish a single dataset, and I am concerned about part of the
CRAN policies. The preamble of the policies [1] says,

> A package's contribution has to be non-trivial

The single dataset [2, 3] is recent and not very widely known.
Is it considered trivial?

If so, what would be a good way to publish the dataset? For example,
is there a package for contributed datasets, akin to datasets in base?

[1] https://cran.r-project.org/web/packages/policies.html
[2] https://thomaslevine.com/scm/pizzapoll
[3] https://thomaslevine.com/scm/pizzapoll/uv/pizzapoll_2018.9.10.tar.gz


From Jori@@Mey@ @ending from ugent@be  Wed Sep 26 13:04:46 2018
From: Jori@@Mey@ @ending from ugent@be (Joris Meys)
Date: Wed, 26 Sep 2018 13:04:46 +0200
Subject: [R-pkg-devel] CRAN Non-Triviality Requirement
In-Reply-To: <1537953813.946326.1521088296.2F1D8B93@webmail.messagingengine.com>
References: <1537953813.946326.1521088296.2F1D8B93@webmail.messagingengine.com>
Message-ID: <CAO1zAVYgeB7BtXfQf_TenFjGQ2ffJJy8LB801N2gknVkOBKonA@mail.gmail.com>

Hi Thomas,

I would argue that one dataset - even a new one - could be added to another
package. The pizzapoll doesn't look like a scientific breakthrough, but it
might be a nice dataset for teaching and/or testing new models. So I see
value in making it available on CRAN one way or another.

If you would consider adding your data to another package, there's a list
of fairly recent packages on this link:

https://rviews.rstudio.com/2017/11/01/r-data-packages/

But I have to be honest as well. CRAN now contains not one but two packages
with ... Chuck Norris quotes. Nothing else. Just Chuck Norris quotes. Both
published this year btw.

https://cran.r-project.org/package=norris
https://cran.r-project.org/package=roundhouse

There's also the "non-trivial" package cowsay that lets animals tell you
the error messages etc.

https://cran.r-project.org/package=cowsay

Or what do you think of the rfoaas package, that provides you F***k off as
a service?

https://cran.r-project.org/package=rfoaas

Plenty of other examples of totally bonker packages with absolutely no use
whatsoever even remotely related to something close to scientific. So that
CRAN policy looks pretty meaningless to me. I'd say: go ahead. If all that
garbage can be on CRAN, there's plenty of room there for a nice dataset
about a pizzapoll.

Cheers
Joris

PS: Yes, this is a frustration of mine, as I try to make my contributions
worthwhile and teach my students the same. And I hate it when said students
then come back at me with "but what about this package?". If a policy is
not enforced, then why bother installing it in the first place?

On Wed, Sep 26, 2018 at 12:20 PM Thomas Levine <_ at thomaslevine.com> wrote:

> I want to publish a single dataset, and I am concerned about part of the
> CRAN policies. The preamble of the policies [1] says,
>
> > A package's contribution has to be non-trivial
>
> The single dataset [2, 3] is recent and not very widely known.
> Is it considered trivial?
>
> If so, what would be a good way to publish the dataset? For example,
> is there a package for contributed datasets, akin to datasets in base?
>
> [1] https://cran.r-project.org/web/packages/policies.html
> [2] https://thomaslevine.com/scm/pizzapoll
> [3] https://thomaslevine.com/scm/pizzapoll/uv/pizzapoll_2018.9.10.tar.gz
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


-- 
Joris Meys
Statistical consultant

Department of Data Analysis and Mathematical Modelling
Ghent University
Coupure Links 653, B-9000 Gent (Belgium)
<https://maps.google.com/?q=Coupure+links+653,%C2%A0B-9000+Gent,%C2%A0Belgium&entry=gmail&source=g>

tel: +32 (0)9 264 61 79
-----------
Biowiskundedagen 2017-2018
http://www.biowiskundedagen.ugent.be/

-------------------------------
Disclaimer : http://helpdesk.ugent.be/e-maildisclaimer.php

	[[alternative HTML version deleted]]


From b@rowling@on @ending from l@nc@@ter@@c@uk  Wed Sep 26 16:33:37 2018
From: b@rowling@on @ending from l@nc@@ter@@c@uk (Barry Rowlingson)
Date: Wed, 26 Sep 2018 15:33:37 +0100
Subject: [R-pkg-devel] CRAN Non-Triviality Requirement
In-Reply-To: <CAO1zAVYgeB7BtXfQf_TenFjGQ2ffJJy8LB801N2gknVkOBKonA@mail.gmail.com>
References: <1537953813.946326.1521088296.2F1D8B93@webmail.messagingengine.com>
 <CAO1zAVYgeB7BtXfQf_TenFjGQ2ffJJy8LB801N2gknVkOBKonA@mail.gmail.com>
Message-ID: <CANVKczMS3v+FexfYAgA4MtL-CjAj1nmeuozR4Vcr95aVFRSUVA@mail.gmail.com>

On Wed, Sep 26, 2018 at 12:04 PM, Joris Meys <Joris.Meys at ugent.be> wrote:

> Hi Thomas,
>
> I would argue that one dataset - even a new one - could be added to another
> package. The pizzapoll doesn't look like a scientific breakthrough, but it
> might be a nice dataset for teaching and/or testing new models. So I see
> value in making it available on CRAN one way or another.
>
> If you would consider adding your data to another package, there's a list
> of fairly recent packages on this link:
>
> https://rviews.rstudio.com/2017/11/01/r-data-packages/
>
>
I'd suggest putting the data on a public dataverse server like this one
from some obscure institution called "Harvard":

https://dataverse.harvard.edu/

and then it should be accessible via the database R package:

https://cran.r-project.org/web/packages/dataverse/index.html

with the added bonus that it gets a DOI, metadata, access from Python and
any other language with a dataverse API interface.

What don't you get? Visibility on CRAN - but its so crowded now that nobody
can see you anyway.

Barry

	[[alternative HTML version deleted]]


From pi@t@cliffcho @ending from gm@il@com  Wed Sep 26 18:46:06 2018
From: pi@t@cliffcho @ending from gm@il@com (Clifford Anderson-Bergman)
Date: Wed, 26 Sep 2018 09:46:06 -0700
Subject: [R-pkg-devel] CRAN Non-Triviality Requirement
In-Reply-To: <CANVKczMS3v+FexfYAgA4MtL-CjAj1nmeuozR4Vcr95aVFRSUVA@mail.gmail.com>
References: <1537953813.946326.1521088296.2F1D8B93@webmail.messagingengine.com>
 <CAO1zAVYgeB7BtXfQf_TenFjGQ2ffJJy8LB801N2gknVkOBKonA@mail.gmail.com>
 <CANVKczMS3v+FexfYAgA4MtL-CjAj1nmeuozR4Vcr95aVFRSUVA@mail.gmail.com>
Message-ID: <CE406E7F-5C27-4630-9EBB-007C423A4235@gmail.com>

An alternative might be to find an R package for which the dataset was relevant to and ask the author if they would be willing to include it in their package.

Personally, I?ve considered soliciting the users of my package to share their data in my package because every other package for this type of data uses the same 3 datasets over and over, which is a bit boring in my opinion.

Sent from my iPhone

> On Sep 26, 2018, at 7:33 AM, Barry Rowlingson <b.rowlingson at lancaster.ac.uk> wrote:
> 
>> On Wed, Sep 26, 2018 at 12:04 PM, Joris Meys <Joris.Meys at ugent.be> wrote:
>> 
>> Hi Thomas,
>> 
>> I would argue that one dataset - even a new one - could be added to another
>> package. The pizzapoll doesn't look like a scientific breakthrough, but it
>> might be a nice dataset for teaching and/or testing new models. So I see
>> value in making it available on CRAN one way or another.
>> 
>> If you would consider adding your data to another package, there's a list
>> of fairly recent packages on this link:
>> 
>> https://rviews.rstudio.com/2017/11/01/r-data-packages/
>> 
>> 
> I'd suggest putting the data on a public dataverse server like this one
> from some obscure institution called "Harvard":
> 
> https://dataverse.harvard.edu/
> 
> and then it should be accessible via the database R package:
> 
> https://cran.r-project.org/web/packages/dataverse/index.html
> 
> with the added bonus that it gets a DOI, metadata, access from Python and
> any other language with a dataverse API interface.
> 
> What don't you get? Visibility on CRAN - but its so crowded now that nobody
> can see you anyway.
> 
> Barry
> 
>    [[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From hhoeflin @ending from gm@il@com  Sun Sep 30 18:09:31 2018
From: hhoeflin @ending from gm@il@com (Holger Hoefling)
Date: Sun, 30 Sep 2018 18:09:31 +0200
Subject: [R-pkg-devel] Notes from rchk on hdf5r package
Message-ID: <CAFDswJtDbNO8=aawF4c1D+7rnmtC_PMUcc18hi+nCVxb4_qq4g@mail.gmail.com>

Hi all,

I have been submitting a bug-fix version of a package and was alerted
to some notes that rchk brought up for it.

A link to the notes

https://raw.githubusercontent.com/kalibera/cran-checks/master/rchk/results/hdf5r.out

and to the version of the code the package refers to

https://github.com/cran/hdf5r/blob/master/src/convert.c


To be more specific:

The errors are more specific about usage of Rf_lang2 and Rf_lang1. I
am not very familiar with them and would appreciate some guidance on
how to fix.

Example

Suspicious call (two or more unprotected arguments) to Rf_lang2 at
H5ToR_Post_REFERENCE hdf5r/src/convert.c:1140

Code: SEXP hdf5r_ns = PROTECT(eval(lang2(install("getNamespace"), mkString("
hdf5r")), R_GlobalEnv));

I assume this can be fixed by wrapping the "install" and "mkString" in
an additional PROTECT? Is this what it is complaining about?


The other:

calling allocating function Rf_eval with argument allocated using
Rf_lang3(S:set_ref.H5R,?,?) hdf5r/src/convert.c:1141

Code:

eval(lang3(install("set_ref.H5R"), result, _Robj), hdf5r_ns);

I remember cobbling these parts together off of the internet and don't
understand enough about the internals of R functions to know what is
going wrong and how to fix.


Any help anyone can offer would be appreciated.


Thank you!


Holger

	[[alternative HTML version deleted]]


