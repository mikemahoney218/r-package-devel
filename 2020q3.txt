From ||@@|nconnect|cut @end|ng |rom gm@||@com  Wed Jul  1 13:09:18 2020
From: ||@@|nconnect|cut @end|ng |rom gm@||@com (Lisa GM)
Date: Wed, 1 Jul 2020 13:09:18 +0200
Subject: [R-pkg-devel] R package does not find DLL routine
In-Reply-To: <20200628233953.1615607b@trisector>
References: <CAJh6MA7s75kmu1rdWJPA9WjwX5EOhxA2hyWYcr040dkPvGqkjA@mail.gmail.com>
 <20200628233953.1615607b@trisector>
Message-ID: <CAJh6MA5Q-BSkh5e8F2abr8LMZH0x6cxDwbah55ZtQhNpqxSmnA@mail.gmail.com>

Dear Dirk, dear Ivan,

thanks for your suggestions. I agree that R packages aren't meant to be
build that way, and even though this is an academic project but since the
source code wasn't written by me it is not my decision if, where and when
to publish it openly. In any case, directly linking to a DLL seems quite
unstable and I just came across the option to do a system call to an
executable instead which appears to maybe be the most straight forward
solution for me.

Thanks a lot for your time and effort.
Best,
Lisa


On Sun, Jun 28, 2020 at 10:39 PM Ivan Krylov <krylov.r00t at gmail.com> wrote:

> On Sun, 28 Jun 2020 12:43:53 +0200
> Lisa GM <lisainconnecticut at gmail.com> wrote:
>
> >  "sum_c" not resolved from current namespace (sum)
>
> As mentioned by Dirk Eddelbuettel, this is not the way R packages are
> supposed to be built [*], but if you are absolutely positive you cannot
> build the DLL from source together with the package or link your
> package to externally installed DLL (as done by packages curl, rgdal,
> and many others), it still seems to be possible. I have been able to
> get a dummy package to work like this:
>
> .onLoad <- function(libname, pkgname)
>  library.dynam('dynl', pkgname, libname, TRUE)
>
> .onUnload <- function(libpath)
>  library.dynam.unload('dynl', libpath)
>
> do <- function()
>  .C('do_hello', x = as.integer(1L), y = as.numeric(2), PACKAGE = 'dynl')
>
> (Note the extra PACKAGE argument required in absence of native routine
> registration or useDynLib(...) declarations in NAMESPACE)
>
> I placed the DLL itself in file.path('inst', 'libs',
> paste0('dynl', .Platform$dynlib.ext)) under the package source
> directory and made sure that it exports a C function
> void do_hello(int * x, double * y).
>
> Needless to say, this goes against CRAN and Bioconductor policies. The
> preferred approach is described in Writing R Extensions, section 1.2.
>
> --
> Best regards,
> Ivan
>
> [*] See <https://cran.r-project.org/doc/manuals/R-exts.html> sections
> 1.5.4 and 5.4 for preparing C functions to be called from an R package.
> The Rcpp package does wrap all this in a very convenient way, see the
> Rcpp.package.skeleton function.
>

	[[alternative HTML version deleted]]


From jen@@oeh|@ch|@ege| @end|ng |rom truec|u@ter@com  Wed Jul  1 19:46:13 2020
From: jen@@oeh|@ch|@ege| @end|ng |rom truec|u@ter@com (=?UTF-8?Q?Dr=2E_Jens_Oehlschl=C3=A4gel?=)
Date: Wed, 1 Jul 2020 19:46:13 +0200
Subject: [R-pkg-devel] check cross-references error: Non-file
 package-anchored link(s)
Message-ID: <trinity-3569f1e7-da91-4b3c-9930-c4b451c9cb92-1593625573460@3c-app-webde-bap32>

Good evening,

My package bit 4.0.2 (https://github.com/truecluster/bit) is being 
rejected by CRAN checks with warning:


 >Check: Rd cross-references, Result: WARNING
 >  Non-file package-anchored link(s) in documentation object 'clone.Rd':
 >    '[ff]{clone.ff}'
 >
 >  See section 'Cross-references' in the 'Writing R Extensions' manual.

although clone.ff is in clone.ff.rd as confirmed by

 > help("clone.ff","ff")[[1]]
[1] "/home/mypc/R/x86_64-pc-linux-gnu-library/4.0/ff/help/clone.ff"

I asked the maintainers to explain what is wrong and what to do and got 
no answer. Does someone here can help?

Best regards

Jens




On 16.06.20 22:31, G?bor Cs?rdi wrote:
> This is how to look up the filename. The first "sp" is the topic name,
> the second is the package name.
> 
>> help("sp", "sp")[[1]]
> [1] "C:/Users/csard/R/win-library/4.0/sp/help/00sp"
> 
> So you need to link to the "00sp.Rd" file:  \link[sp:00sp]{sp}
> 
> Gabor
> 
> On Tue, Jun 16, 2020 at 9:09 PM Wayne Oldford <rwoldford at uwaterloo.ca> wrote:
>>
>> Hi
>>
>> I got caught by this new test this week in trying to push an updated release of the loon package to CRAN.
>>
>> By following this thread, I corrected my cross-references to external packages but I got stymied by
>> the one I hoped to give to the  "sp" package for Spatial data
>>
>> _________
>>
>> Here is the history:
>>
>> I tried
>>     \link[sp:sp]{sp}
>> which failed here:
>> Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200616_162128/Debian/00check.log>
>> Status: 1 WARNING
>>
>>
>> That was meant to correct an earlier attempt (it did for other links to "scales" for example) where I had tried
>>    \link[sp]{sp}
>> and  failed here:
>> Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200615_213749/Debian/00check.log>
>> Status: 1 WARNING
>>
>>
>> So to complete the possibilities as I understand them,  I just now tried
>>     \link{sp}
>> which, as might be expected, failed here:
>> Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200616_213921/Debian/00check.log>
>> Status: 1 WARNING
>> As expected, error here was different:  "Missing  link"  as opposed to "Non-file package-anchored link"
>>
>> _________
>>
>>
>> I am not sure whether I have missed a subtlety in WRE or that the peculiar circumstance
>> where the package, the topic, and the file name are all identical (sp) is some weird boundary case.
>>
>> Without further advice, I think I am just going to remove the link to "sp".
>> It really is just a courtesy link to the package description for "sp".
>>
>> Thanks in advance for your thoughts.
>>
>> Wayne
>>
>>
>>
>>
>> ?-----Original Message-----
>> From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Georgi Boshnakov <georgi.boshnakov at manchester.ac.uk>
>> Date: Tuesday, June 16, 2020 at 9:27 AM
>> To: G?bor Cs?rdi <csardi.gabor at gmail.com>, Duncan Murdoch <murdoch.duncan at gmail.com>
>> Cc: List r-package-devel <r-package-devel at r-project.org>
>> Subject: Re: [R-pkg-devel] check cross-references error: Non-file package-anchored link(s)
>>
>>      I think that the current behaviour is documented in WRE:
>>
>>      "...There are two other forms of optional argument specified as \link[pkg]{foo} and
>>      \link[pkg:bar]{foo} to link to the package pkg, to files foo.html and bar.html respectively.
>>      These are rarely needed, perhaps to refer to not-yet-installed packages (but there the HTML
>>      help system will resolve the link at run time) or in the normally undesirable event that more
>>      than one package offers help on a topic7 (in which case the present package has precedence so
>>      this is only needed to refer to other packages). They are currently only used in HTML help
>>      (and ignored for hyperlinks in LATEX conversions of help pages), and link to the file rather
>>      than the topic (since there is no way to know which topics are in which files in an uninstalled
>>      package) ...   Because they have been frequently misused, the HTML help system looks for topic foo in package pkg
>>      if it does not find file foo.html."
>>
>>      Unless I am missing something, it seems that it would be relatively painless to reverse the logic of the current behaviour of the help system,
>>      i.e. to start looking first for the topic and then for a file.
>>
>>      Georgi Boshnakov
>>
>>      -----Original Message-----
>>      From: R-package-devel <r-package-devel-bounces at r-project.org> On Behalf Of G?bor Cs?rdi
>>      Sent: 16 June 2020 13:44
>>      To: Duncan Murdoch <murdoch.duncan at gmail.com>
>>      Cc: List r-package-devel <r-package-devel at r-project.org>
>>      Subject: Re: [R-pkg-devel] check cross-references error: Non-file package-anchored link(s)
>>
>>      On Mon, Jun 15, 2020 at 5:30 PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>>      >
>>      > On 15/06/2020 12:05 p.m., Martin Maechler wrote:
>>      > >>>>>> Duncan Murdoch   on Sun, 14 Jun 2020 07:28:03 -0400 writes:
>>      > >
>>      > >      > I agree with almost everything you wrote, except one thing:  this isn't
>>      > >      > newly enforced, it has been enforced since the help system began.  What
>>      > >      > I think is new is that there are now tests for it.  Previously those
>>      > >      > links just wouldn't work.
>>      > >
>>      > >      > Duncan Murdoch
>>      > >
>>      > > Yes, to all... including Duncan's agreement with G?bor.
>>      > >
>>      > > Also, Duncan M earlier did mention that he had wanted to
>>      > > *change* the link-to-file behavior for these cases (when he wrote
>>      > > most of the Rd2html source code) but somehow did not get it.
>>      >
>>      > Actually, I don't think I pushed for this change at the time (or at
>>      > least I didn't push much).  I just wish now that I had, because I
>>      > think it will be harder to do it now than it would have been then.
>>      >
>>      > Duncan
>>
>>      I am not entirely sure, but maybe just documenting the current behaviour and undoing 78674 could work. With some tweaks? E.g.
>>
>>      * updating R-exts to say that \link[pkg:topic]{text} will link to `topic.html` in `pkg` first (for historical reasons), and falls back to searching for `topic` in `pkg` at render time.
>>      * updating Rd2HTML to look for the topic and use it in the link, instead of throwing a warning, in it cannot find `topic.html`
>>      * removing the `R CMD check` warning for non-file links, that was added in 78674 :)
>>
>>      Is there anything else?
>>
>>      Gabor
>>
>>      [...]
>>
>>      ______________________________________________
>>      R-package-devel at r-project.org mailing list https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>      ______________________________________________
>>      R-package-devel at r-project.org mailing list
>>      https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From c@@rd|@g@bor @end|ng |rom gm@||@com  Wed Jul  1 20:10:24 2020
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Wed, 1 Jul 2020 19:10:24 +0100
Subject: [R-pkg-devel] check cross-references error: Non-file
 package-anchored link(s)
In-Reply-To: <trinity-3569f1e7-da91-4b3c-9930-c4b451c9cb92-1593625573460@3c-app-webde-bap32>
References: <trinity-3569f1e7-da91-4b3c-9930-c4b451c9cb92-1593625573460@3c-app-webde-bap32>
Message-ID: <CABtg=Km7XCyg+0mcz8bfwC8FThDOw9=1zUgzPW_S2vYzg=fvSQ@mail.gmail.com>

Linking to the manual _file_ is now enforced on CRAN. Here is how to
get the file name:

> help("clone.ff", package = "ff")[[1]]
[1] "/Users/gaborcsardi/Library/R/4.0/library/ff/help/clone"

So in this case you need to link to 'clone'.

Btw. since you already use roxygen2, you could also turn on markdown
support, and then [ff::clone.ff()] automatically creates the right
links in the latest version of roxygen2.

Gabor

On Wed, Jul 1, 2020 at 6:46 PM Dr. Jens Oehlschl?gel
<jens.oehlschlaegel at truecluster.com> wrote:
>
> Good evening,
>
> My package bit 4.0.2 (https://github.com/truecluster/bit) is being
> rejected by CRAN checks with warning:
>
>
>  >Check: Rd cross-references, Result: WARNING
>  >  Non-file package-anchored link(s) in documentation object 'clone.Rd':
>  >    '[ff]{clone.ff}'
>  >
>  >  See section 'Cross-references' in the 'Writing R Extensions' manual.
>
> although clone.ff is in clone.ff.rd as confirmed by
>
>  > help("clone.ff","ff")[[1]]
> [1] "/home/mypc/R/x86_64-pc-linux-gnu-library/4.0/ff/help/clone.ff"
>
> I asked the maintainers to explain what is wrong and what to do and got
> no answer. Does someone here can help?
>
> Best regards
>
> Jens
>
>
>
>
> On 16.06.20 22:31, G?bor Cs?rdi wrote:
> > This is how to look up the filename. The first "sp" is the topic name,
> > the second is the package name.
> >
> >> help("sp", "sp")[[1]]
> > [1] "C:/Users/csard/R/win-library/4.0/sp/help/00sp"
> >
> > So you need to link to the "00sp.Rd" file:  \link[sp:00sp]{sp}
> >
> > Gabor
> >
> > On Tue, Jun 16, 2020 at 9:09 PM Wayne Oldford <rwoldford at uwaterloo.ca> wrote:
> >>
> >> Hi
> >>
> >> I got caught by this new test this week in trying to push an updated release of the loon package to CRAN.
> >>
> >> By following this thread, I corrected my cross-references to external packages but I got stymied by
> >> the one I hoped to give to the  "sp" package for Spatial data
> >>
> >> _________
> >>
> >> Here is the history:
> >>
> >> I tried
> >>     \link[sp:sp]{sp}
> >> which failed here:
> >> Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200616_162128/Debian/00check.log>
> >> Status: 1 WARNING
> >>
> >>
> >> That was meant to correct an earlier attempt (it did for other links to "scales" for example) where I had tried
> >>    \link[sp]{sp}
> >> and  failed here:
> >> Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200615_213749/Debian/00check.log>
> >> Status: 1 WARNING
> >>
> >>
> >> So to complete the possibilities as I understand them,  I just now tried
> >>     \link{sp}
> >> which, as might be expected, failed here:
> >> Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200616_213921/Debian/00check.log>
> >> Status: 1 WARNING
> >> As expected, error here was different:  "Missing  link"  as opposed to "Non-file package-anchored link"
> >>
> >> _________
> >>
> >>
> >> I am not sure whether I have missed a subtlety in WRE or that the peculiar circumstance
> >> where the package, the topic, and the file name are all identical (sp) is some weird boundary case.
> >>
> >> Without further advice, I think I am just going to remove the link to "sp".
> >> It really is just a courtesy link to the package description for "sp".
> >>
> >> Thanks in advance for your thoughts.
> >>
> >> Wayne
> >>
> >>
> >>
> >>
> >> ?-----Original Message-----
> >> From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Georgi Boshnakov <georgi.boshnakov at manchester.ac.uk>
> >> Date: Tuesday, June 16, 2020 at 9:27 AM
> >> To: G?bor Cs?rdi <csardi.gabor at gmail.com>, Duncan Murdoch <murdoch.duncan at gmail.com>
> >> Cc: List r-package-devel <r-package-devel at r-project.org>
> >> Subject: Re: [R-pkg-devel] check cross-references error: Non-file package-anchored link(s)
> >>
> >>      I think that the current behaviour is documented in WRE:
> >>
> >>      "...There are two other forms of optional argument specified as \link[pkg]{foo} and
> >>      \link[pkg:bar]{foo} to link to the package pkg, to files foo.html and bar.html respectively.
> >>      These are rarely needed, perhaps to refer to not-yet-installed packages (but there the HTML
> >>      help system will resolve the link at run time) or in the normally undesirable event that more
> >>      than one package offers help on a topic7 (in which case the present package has precedence so
> >>      this is only needed to refer to other packages). They are currently only used in HTML help
> >>      (and ignored for hyperlinks in LATEX conversions of help pages), and link to the file rather
> >>      than the topic (since there is no way to know which topics are in which files in an uninstalled
> >>      package) ...   Because they have been frequently misused, the HTML help system looks for topic foo in package pkg
> >>      if it does not find file foo.html."
> >>
> >>      Unless I am missing something, it seems that it would be relatively painless to reverse the logic of the current behaviour of the help system,
> >>      i.e. to start looking first for the topic and then for a file.
> >>
> >>      Georgi Boshnakov
> >>
> >>      -----Original Message-----
> >>      From: R-package-devel <r-package-devel-bounces at r-project.org> On Behalf Of G?bor Cs?rdi
> >>      Sent: 16 June 2020 13:44
> >>      To: Duncan Murdoch <murdoch.duncan at gmail.com>
> >>      Cc: List r-package-devel <r-package-devel at r-project.org>
> >>      Subject: Re: [R-pkg-devel] check cross-references error: Non-file package-anchored link(s)
> >>
> >>      On Mon, Jun 15, 2020 at 5:30 PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> >>      >
> >>      > On 15/06/2020 12:05 p.m., Martin Maechler wrote:
> >>      > >>>>>> Duncan Murdoch   on Sun, 14 Jun 2020 07:28:03 -0400 writes:
> >>      > >
> >>      > >      > I agree with almost everything you wrote, except one thing:  this isn't
> >>      > >      > newly enforced, it has been enforced since the help system began.  What
> >>      > >      > I think is new is that there are now tests for it.  Previously those
> >>      > >      > links just wouldn't work.
> >>      > >
> >>      > >      > Duncan Murdoch
> >>      > >
> >>      > > Yes, to all... including Duncan's agreement with G?bor.
> >>      > >
> >>      > > Also, Duncan M earlier did mention that he had wanted to
> >>      > > *change* the link-to-file behavior for these cases (when he wrote
> >>      > > most of the Rd2html source code) but somehow did not get it.
> >>      >
> >>      > Actually, I don't think I pushed for this change at the time (or at
> >>      > least I didn't push much).  I just wish now that I had, because I
> >>      > think it will be harder to do it now than it would have been then.
> >>      >
> >>      > Duncan
> >>
> >>      I am not entirely sure, but maybe just documenting the current behaviour and undoing 78674 could work. With some tweaks? E.g.
> >>
> >>      * updating R-exts to say that \link[pkg:topic]{text} will link to `topic.html` in `pkg` first (for historical reasons), and falls back to searching for `topic` in `pkg` at render time.
> >>      * updating Rd2HTML to look for the topic and use it in the link, instead of throwing a warning, in it cannot find `topic.html`
> >>      * removing the `R CMD check` warning for non-file links, that was added in 78674 :)
> >>
> >>      Is there anything else?
> >>
> >>      Gabor
> >>
> >>      [...]
> >>
> >>      ______________________________________________
> >>      R-package-devel at r-project.org mailing list https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>      ______________________________________________
> >>      R-package-devel at r-project.org mailing list
> >>      https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>
> >>
> >> ______________________________________________
> >> R-package-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >


From murdoch@dunc@n @end|ng |rom gm@||@com  Wed Jul  1 20:14:11 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Wed, 1 Jul 2020 14:14:11 -0400
Subject: [R-pkg-devel] check cross-references error: Non-file
 package-anchored link(s)
In-Reply-To: <trinity-3569f1e7-da91-4b3c-9930-c4b451c9cb92-1593625573460@3c-app-webde-bap32>
References: <trinity-3569f1e7-da91-4b3c-9930-c4b451c9cb92-1593625573460@3c-app-webde-bap32>
Message-ID: <8626f4ee-5678-4234-d0c3-25e915b61812@gmail.com>

On 01/07/2020 1:46 p.m., Dr. Jens Oehlschl?gel wrote:
> Good evening,
> 
> My package bit 4.0.2 (https://github.com/truecluster/bit) is being
> rejected by CRAN checks with warning:
> 
> 
>   >Check: Rd cross-references, Result: WARNING
>   >  Non-file package-anchored link(s) in documentation object 'clone.Rd':
>   >    '[ff]{clone.ff}'
>   >
>   >  See section 'Cross-references' in the 'Writing R Extensions' manual.
> 
> although clone.ff is in clone.ff.rd as confirmed by
> 
>   > help("clone.ff","ff")[[1]]
> [1] "/home/mypc/R/x86_64-pc-linux-gnu-library/4.0/ff/help/clone.ff"
> 
> I asked the maintainers to explain what is wrong and what to do and got
> no answer. Does someone here can help?

It's actually in ff/man/clone.rd, not clone.ff.rd.  There is no 
ff/man/clone.ff.rd file.

Duncan Murdoch

> 
> Best regards
> 
> Jens
> 
> 
> 
> 
> On 16.06.20 22:31, G?bor Cs?rdi wrote:
>> This is how to look up the filename. The first "sp" is the topic name,
>> the second is the package name.
>>
>>> help("sp", "sp")[[1]]
>> [1] "C:/Users/csard/R/win-library/4.0/sp/help/00sp"
>>
>> So you need to link to the "00sp.Rd" file:  \link[sp:00sp]{sp}
>>
>> Gabor
>>
>> On Tue, Jun 16, 2020 at 9:09 PM Wayne Oldford <rwoldford at uwaterloo.ca> wrote:
>>>
>>> Hi
>>>
>>> I got caught by this new test this week in trying to push an updated release of the loon package to CRAN.
>>>
>>> By following this thread, I corrected my cross-references to external packages but I got stymied by
>>> the one I hoped to give to the  "sp" package for Spatial data
>>>
>>> _________
>>>
>>> Here is the history:
>>>
>>> I tried
>>>      \link[sp:sp]{sp}
>>> which failed here:
>>> Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200616_162128/Debian/00check.log>
>>> Status: 1 WARNING
>>>
>>>
>>> That was meant to correct an earlier attempt (it did for other links to "scales" for example) where I had tried
>>>     \link[sp]{sp}
>>> and  failed here:
>>> Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200615_213749/Debian/00check.log>
>>> Status: 1 WARNING
>>>
>>>
>>> So to complete the possibilities as I understand them,  I just now tried
>>>      \link{sp}
>>> which, as might be expected, failed here:
>>> Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200616_213921/Debian/00check.log>
>>> Status: 1 WARNING
>>> As expected, error here was different:  "Missing  link"  as opposed to "Non-file package-anchored link"
>>>
>>> _________
>>>
>>>
>>> I am not sure whether I have missed a subtlety in WRE or that the peculiar circumstance
>>> where the package, the topic, and the file name are all identical (sp) is some weird boundary case.
>>>
>>> Without further advice, I think I am just going to remove the link to "sp".
>>> It really is just a courtesy link to the package description for "sp".
>>>
>>> Thanks in advance for your thoughts.
>>>
>>> Wayne
>>>
>>>
>>>
>>>
>>> ?-----Original Message-----
>>> From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Georgi Boshnakov <georgi.boshnakov at manchester.ac.uk>
>>> Date: Tuesday, June 16, 2020 at 9:27 AM
>>> To: G?bor Cs?rdi <csardi.gabor at gmail.com>, Duncan Murdoch <murdoch.duncan at gmail.com>
>>> Cc: List r-package-devel <r-package-devel at r-project.org>
>>> Subject: Re: [R-pkg-devel] check cross-references error: Non-file package-anchored link(s)
>>>
>>>       I think that the current behaviour is documented in WRE:
>>>
>>>       "...There are two other forms of optional argument specified as \link[pkg]{foo} and
>>>       \link[pkg:bar]{foo} to link to the package pkg, to files foo.html and bar.html respectively.
>>>       These are rarely needed, perhaps to refer to not-yet-installed packages (but there the HTML
>>>       help system will resolve the link at run time) or in the normally undesirable event that more
>>>       than one package offers help on a topic7 (in which case the present package has precedence so
>>>       this is only needed to refer to other packages). They are currently only used in HTML help
>>>       (and ignored for hyperlinks in LATEX conversions of help pages), and link to the file rather
>>>       than the topic (since there is no way to know which topics are in which files in an uninstalled
>>>       package) ...   Because they have been frequently misused, the HTML help system looks for topic foo in package pkg
>>>       if it does not find file foo.html."
>>>
>>>       Unless I am missing something, it seems that it would be relatively painless to reverse the logic of the current behaviour of the help system,
>>>       i.e. to start looking first for the topic and then for a file.
>>>
>>>       Georgi Boshnakov
>>>
>>>       -----Original Message-----
>>>       From: R-package-devel <r-package-devel-bounces at r-project.org> On Behalf Of G?bor Cs?rdi
>>>       Sent: 16 June 2020 13:44
>>>       To: Duncan Murdoch <murdoch.duncan at gmail.com>
>>>       Cc: List r-package-devel <r-package-devel at r-project.org>
>>>       Subject: Re: [R-pkg-devel] check cross-references error: Non-file package-anchored link(s)
>>>
>>>       On Mon, Jun 15, 2020 at 5:30 PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>>>       >
>>>       > On 15/06/2020 12:05 p.m., Martin Maechler wrote:
>>>       > >>>>>> Duncan Murdoch   on Sun, 14 Jun 2020 07:28:03 -0400 writes:
>>>       > >
>>>       > >      > I agree with almost everything you wrote, except one thing:  this isn't
>>>       > >      > newly enforced, it has been enforced since the help system began.  What
>>>       > >      > I think is new is that there are now tests for it.  Previously those
>>>       > >      > links just wouldn't work.
>>>       > >
>>>       > >      > Duncan Murdoch
>>>       > >
>>>       > > Yes, to all... including Duncan's agreement with G?bor.
>>>       > >
>>>       > > Also, Duncan M earlier did mention that he had wanted to
>>>       > > *change* the link-to-file behavior for these cases (when he wrote
>>>       > > most of the Rd2html source code) but somehow did not get it.
>>>       >
>>>       > Actually, I don't think I pushed for this change at the time (or at
>>>       > least I didn't push much).  I just wish now that I had, because I
>>>       > think it will be harder to do it now than it would have been then.
>>>       >
>>>       > Duncan
>>>
>>>       I am not entirely sure, but maybe just documenting the current behaviour and undoing 78674 could work. With some tweaks? E.g.
>>>
>>>       * updating R-exts to say that \link[pkg:topic]{text} will link to `topic.html` in `pkg` first (for historical reasons), and falls back to searching for `topic` in `pkg` at render time.
>>>       * updating Rd2HTML to look for the topic and use it in the link, instead of throwing a warning, in it cannot find `topic.html`
>>>       * removing the `R CMD check` warning for non-file links, that was added in 78674 :)
>>>
>>>       Is there anything else?
>>>
>>>       Gabor
>>>
>>>       [...]
>>>
>>>       ______________________________________________
>>>       R-package-devel at r-project.org mailing list https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>       ______________________________________________
>>>       R-package-devel at r-project.org mailing list
>>>       https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From j@goreck| @end|ng |rom w|t@edu@p|  Thu Jul  2 11:04:17 2020
From: j@goreck| @end|ng |rom w|t@edu@p| (Jan Gorecki)
Date: Thu, 2 Jul 2020 10:04:17 +0100
Subject: [R-pkg-devel] check cross-references error: Non-file
 package-anchored link(s)
In-Reply-To: <74696BF9-331D-41A5-891A-18A8F6BD8F57@uwaterloo.ca>
References: <5F37E69B-BD3D-4B56-8B66-77E4A5EDECF3@gmail.com>
 <408847a9-ac14-c4fb-33d0-0734f180d228@gmail.com>
 <CABtg=K=c8TUAxmv1e2To5A5HHKUTQEA-tNadxUJGuA3eXh1p8A@mail.gmail.com>
 <0df3d1f3-f482-ee96-d6f5-a6aab74810b4@gmail.com>
 <CABtg=Kk2V4SWVx-MOQ32ErzS64GrtZV97ZGQ5ccU_SjpO_W_2A@mail.gmail.com>
 <8a25ba2b-3b98-e469-07e4-dfd90d76e37e@gmail.com>
 <24295.39986.892565.475924@stat.math.ethz.ch>
 <ed9be12f-5b74-ab7d-0846-2274718c881d@gmail.com>
 <CABtg=K=HG9HfUY_F+aseLrBdWQoTy8hFuDmtR1BtEXucfnegmA@mail.gmail.com>
 <HE1PR0102MB325875BEA1D1D41D3C2C07DCAE9D0@HE1PR0102MB3258.eurprd01.prod.exchangelabs.com>
 <3C1E2993-8F56-4813-B2EA-6E94B46B8C3A@uwaterloo.ca>
 <CABtg=KkXsqmK1=ao4VojsG4hvyhkaDk7ZJoK1RvrGRBGYQ5UnQ@mail.gmail.com>
 <74696BF9-331D-41A5-891A-18A8F6BD8F57@uwaterloo.ca>
Message-ID: <CAOO9MKXHv_LXe0uiHWe5vjDwjuK2N9C3NHYJRT-haXmMfvg4+A@mail.gmail.com>

Hi,
What is the recommended way to test for those issues locally?
If it is tested during cran submission, then seems reasonable to be enabled
just by --as-cran switch. Is it?
Thanks

On Wed 17 Jun, 2020, 12:32 AM Wayne Oldford, <rwoldford at uwaterloo.ca> wrote:

> Thank you!
>
> ?-----Original Message-----
> From: G?bor Cs?rdi <csardi.gabor at gmail.com>
> Date: Tuesday, June 16, 2020 at 4:32 PM
> To: Wayne Oldford <rwoldford at uwaterloo.ca>
> Cc: List r-package-devel <r-package-devel at r-project.org>
> Subject: Re: [R-pkg-devel] check cross-references error: Non-file
> package-anchored link(s)
>
>     This is how to look up the filename. The first "sp" is the topic name,
>     the second is the package name.
>
>     > help("sp", "sp")[[1]]
>     [1] "C:/Users/csard/R/win-library/4.0/sp/help/00sp"
>
>     So you need to link to the "00sp.Rd" file:  \link[sp:00sp]{sp}
>
>     Gabor
>
>     On Tue, Jun 16, 2020 at 9:09 PM Wayne Oldford <rwoldford at uwaterloo.ca>
> wrote:
>     >
>     > Hi
>     >
>     > I got caught by this new test this week in trying to push an updated
> release of the loon package to CRAN.
>     >
>     > By following this thread, I corrected my cross-references to
> external packages but I got stymied by
>     > the one I hoped to give to the  "sp" package for Spatial data
>     >
>     > _________
>     >
>     > Here is the history:
>     >
>     > I tried
>     >    \link[sp:sp]{sp}
>     > which failed here:
>     > Debian: <
> https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200616_162128/Debian/00check.log
> >
>     > Status: 1 WARNING
>     >
>     >
>     > That was meant to correct an earlier attempt (it did for other links
> to "scales" for example) where I had tried
>     >   \link[sp]{sp}
>     > and  failed here:
>     > Debian: <
> https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200615_213749/Debian/00check.log
> >
>     > Status: 1 WARNING
>     >
>     >
>     > So to complete the possibilities as I understand them,  I just now
> tried
>     >    \link{sp}
>     > which, as might be expected, failed here:
>     > Debian: <
> https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200616_213921/Debian/00check.log
> >
>     > Status: 1 WARNING
>     > As expected, error here was different:  "Missing  link"  as opposed
> to "Non-file package-anchored link"
>     >
>     > _________
>     >
>     >
>     > I am not sure whether I have missed a subtlety in WRE or that the
> peculiar circumstance
>     > where the package, the topic, and the file name are all identical
> (sp) is some weird boundary case.
>     >
>     > Without further advice, I think I am just going to remove the link
> to "sp".
>     > It really is just a courtesy link to the package description for
> "sp".
>     >
>     > Thanks in advance for your thoughts.
>     >
>     > Wayne
>     >
>     >
>     >
>     >
>     > -----Original Message-----
>     > From: R-package-devel <r-package-devel-bounces at r-project.org> on
> behalf of Georgi Boshnakov <georgi.boshnakov at manchester.ac.uk>
>     > Date: Tuesday, June 16, 2020 at 9:27 AM
>     > To: G?bor Cs?rdi <csardi.gabor at gmail.com>, Duncan Murdoch <
> murdoch.duncan at gmail.com>
>     > Cc: List r-package-devel <r-package-devel at r-project.org>
>     > Subject: Re: [R-pkg-devel] check cross-references error: Non-file
> package-anchored link(s)
>     >
>     >     I think that the current behaviour is documented in WRE:
>     >
>     >     "...There are two other forms of optional argument specified as
> \link[pkg]{foo} and
>     >     \link[pkg:bar]{foo} to link to the package pkg, to files
> foo.html and bar.html respectively.
>     >     These are rarely needed, perhaps to refer to not-yet-installed
> packages (but there the HTML
>     >     help system will resolve the link at run time) or in the
> normally undesirable event that more
>     >     than one package offers help on a topic7 (in which case the
> present package has precedence so
>     >     this is only needed to refer to other packages). They are
> currently only used in HTML help
>     >     (and ignored for hyperlinks in LATEX conversions of help pages),
> and link to the file rather
>     >     than the topic (since there is no way to know which topics are
> in which files in an uninstalled
>     >     package) ...   Because they have been frequently misused, the
> HTML help system looks for topic foo in package pkg
>     >     if it does not find file foo.html."
>     >
>     >     Unless I am missing something, it seems that it would be
> relatively painless to reverse the logic of the current behaviour of the
> help system,
>     >     i.e. to start looking first for the topic and then for a file.
>     >
>     >     Georgi Boshnakov
>     >
>     >     -----Original Message-----
>     >     From: R-package-devel <r-package-devel-bounces at r-project.org>
> On Behalf Of G?bor Cs?rdi
>     >     Sent: 16 June 2020 13:44
>     >     To: Duncan Murdoch <murdoch.duncan at gmail.com>
>     >     Cc: List r-package-devel <r-package-devel at r-project.org>
>     >     Subject: Re: [R-pkg-devel] check cross-references error:
> Non-file package-anchored link(s)
>     >
>     >     On Mon, Jun 15, 2020 at 5:30 PM Duncan Murdoch <
> murdoch.duncan at gmail.com> wrote:
>     >     >
>     >     > On 15/06/2020 12:05 p.m., Martin Maechler wrote:
>     >     > >>>>>> Duncan Murdoch   on Sun, 14 Jun 2020 07:28:03 -0400
> writes:
>     >     > >
>     >     > >      > I agree with almost everything you wrote, except one
> thing:  this isn't
>     >     > >      > newly enforced, it has been enforced since the help
> system began.  What
>     >     > >      > I think is new is that there are now tests for it.
> Previously those
>     >     > >      > links just wouldn't work.
>     >     > >
>     >     > >      > Duncan Murdoch
>     >     > >
>     >     > > Yes, to all... including Duncan's agreement with G?bor.
>     >     > >
>     >     > > Also, Duncan M earlier did mention that he had wanted to
>     >     > > *change* the link-to-file behavior for these cases (when he
> wrote
>     >     > > most of the Rd2html source code) but somehow did not get it.
>     >     >
>     >     > Actually, I don't think I pushed for this change at the time
> (or at
>     >     > least I didn't push much).  I just wish now that I had,
> because I
>     >     > think it will be harder to do it now than it would have been
> then.
>     >     >
>     >     > Duncan
>     >
>     >     I am not entirely sure, but maybe just documenting the current
> behaviour and undoing 78674 could work. With some tweaks? E.g.
>     >
>     >     * updating R-exts to say that \link[pkg:topic]{text} will link
> to `topic.html` in `pkg` first (for historical reasons), and falls back to
> searching for `topic` in `pkg` at render time.
>     >     * updating Rd2HTML to look for the topic and use it in the link,
> instead of throwing a warning, in it cannot find `topic.html`
>     >     * removing the `R CMD check` warning for non-file links, that
> was added in 78674 :)
>     >
>     >     Is there anything else?
>     >
>     >     Gabor
>     >
>     >     [...]
>     >
>     >     ______________________________________________
>     >     R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>     >     ______________________________________________
>     >     R-package-devel at r-project.org mailing list
>     >     https://stat.ethz.ch/mailman/listinfo/r-package-devel
>     >
>     >
>     > ______________________________________________
>     > R-package-devel at r-project.org mailing list
>     > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From c@@rd|@g@bor @end|ng |rom gm@||@com  Thu Jul  2 11:20:00 2020
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Thu, 2 Jul 2020 10:20:00 +0100
Subject: [R-pkg-devel] check cross-references error: Non-file
 package-anchored link(s)
In-Reply-To: <CAOO9MKXHv_LXe0uiHWe5vjDwjuK2N9C3NHYJRT-haXmMfvg4+A@mail.gmail.com>
References: <5F37E69B-BD3D-4B56-8B66-77E4A5EDECF3@gmail.com>
 <408847a9-ac14-c4fb-33d0-0734f180d228@gmail.com>
 <CABtg=K=c8TUAxmv1e2To5A5HHKUTQEA-tNadxUJGuA3eXh1p8A@mail.gmail.com>
 <0df3d1f3-f482-ee96-d6f5-a6aab74810b4@gmail.com>
 <CABtg=Kk2V4SWVx-MOQ32ErzS64GrtZV97ZGQ5ccU_SjpO_W_2A@mail.gmail.com>
 <8a25ba2b-3b98-e469-07e4-dfd90d76e37e@gmail.com>
 <24295.39986.892565.475924@stat.math.ethz.ch>
 <ed9be12f-5b74-ab7d-0846-2274718c881d@gmail.com>
 <CABtg=K=HG9HfUY_F+aseLrBdWQoTy8hFuDmtR1BtEXucfnegmA@mail.gmail.com>
 <HE1PR0102MB325875BEA1D1D41D3C2C07DCAE9D0@HE1PR0102MB3258.eurprd01.prod.exchangelabs.com>
 <3C1E2993-8F56-4813-B2EA-6E94B46B8C3A@uwaterloo.ca>
 <CABtg=KkXsqmK1=ao4VojsG4hvyhkaDk7ZJoK1RvrGRBGYQ5UnQ@mail.gmail.com>
 <74696BF9-331D-41A5-891A-18A8F6BD8F57@uwaterloo.ca>
 <CAOO9MKXHv_LXe0uiHWe5vjDwjuK2N9C3NHYJRT-haXmMfvg4+A@mail.gmail.com>
Message-ID: <CABtg=Kkfq89ZPA+UCEoPMJZ7j4YievnYFVw08Z32O7c5CBBaXw@mail.gmail.com>

You can set the _R_CHECK_XREFS_MIND_SUSPECT_ANCHORS_=true env var and
use R-devel.

Alternatively, and you don't need R-devel for this, you can run R CMD
--html INSTALL on your package, and then look for messages that
contain "treated as a topic", e.g.

    curl_fds                                html
Rd warning: /Users/gaborcsardi/works/processx/man/curl_fds.Rd:11: file
link ?multi_fdset? in package ?curl? does not exist and so has been
treated as a topic

Gabor


On Thu, Jul 2, 2020 at 10:06 AM Jan Gorecki <j.gorecki at wit.edu.pl> wrote:
>
> Hi,
> What is the recommended way to test for those issues locally?
> If it is tested during cran submission, then seems reasonable to be enabled just by --as-cran switch. Is it?
> Thanks
>
> On Wed 17 Jun, 2020, 12:32 AM Wayne Oldford, <rwoldford at uwaterloo.ca> wrote:
>>
>> Thank you!
>>
>> ?-----Original Message-----
>> From: G?bor Cs?rdi <csardi.gabor at gmail.com>
>> Date: Tuesday, June 16, 2020 at 4:32 PM
>> To: Wayne Oldford <rwoldford at uwaterloo.ca>
>> Cc: List r-package-devel <r-package-devel at r-project.org>
>> Subject: Re: [R-pkg-devel] check cross-references error: Non-file package-anchored link(s)
>>
>>     This is how to look up the filename. The first "sp" is the topic name,
>>     the second is the package name.
>>
>>     > help("sp", "sp")[[1]]
>>     [1] "C:/Users/csard/R/win-library/4.0/sp/help/00sp"
>>
>>     So you need to link to the "00sp.Rd" file:  \link[sp:00sp]{sp}
>>
>>     Gabor
>>
>>     On Tue, Jun 16, 2020 at 9:09 PM Wayne Oldford <rwoldford at uwaterloo.ca> wrote:
>>     >
>>     > Hi
>>     >
>>     > I got caught by this new test this week in trying to push an updated release of the loon package to CRAN.
>>     >
>>     > By following this thread, I corrected my cross-references to external packages but I got stymied by
>>     > the one I hoped to give to the  "sp" package for Spatial data
>>     >
>>     > _________
>>     >
>>     > Here is the history:
>>     >
>>     > I tried
>>     >    \link[sp:sp]{sp}
>>     > which failed here:
>>     > Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200616_162128/Debian/00check.log>
>>     > Status: 1 WARNING
>>     >
>>     >
>>     > That was meant to correct an earlier attempt (it did for other links to "scales" for example) where I had tried
>>     >   \link[sp]{sp}
>>     > and  failed here:
>>     > Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200615_213749/Debian/00check.log>
>>     > Status: 1 WARNING
>>     >
>>     >
>>     > So to complete the possibilities as I understand them,  I just now tried
>>     >    \link{sp}
>>     > which, as might be expected, failed here:
>>     > Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200616_213921/Debian/00check.log>
>>     > Status: 1 WARNING
>>     > As expected, error here was different:  "Missing  link"  as opposed to "Non-file package-anchored link"
>>     >
>>     > _________
>>     >
>>     >
>>     > I am not sure whether I have missed a subtlety in WRE or that the peculiar circumstance
>>     > where the package, the topic, and the file name are all identical (sp) is some weird boundary case.
>>     >
>>     > Without further advice, I think I am just going to remove the link to "sp".
>>     > It really is just a courtesy link to the package description for "sp".
>>     >
>>     > Thanks in advance for your thoughts.
>>     >
>>     > Wayne
>>     >
>>     >
>>     >
>>     >
>>     > -----Original Message-----
>>     > From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Georgi Boshnakov <georgi.boshnakov at manchester.ac.uk>
>>     > Date: Tuesday, June 16, 2020 at 9:27 AM
>>     > To: G?bor Cs?rdi <csardi.gabor at gmail.com>, Duncan Murdoch <murdoch.duncan at gmail.com>
>>     > Cc: List r-package-devel <r-package-devel at r-project.org>
>>     > Subject: Re: [R-pkg-devel] check cross-references error: Non-file package-anchored link(s)
>>     >
>>     >     I think that the current behaviour is documented in WRE:
>>     >
>>     >     "...There are two other forms of optional argument specified as \link[pkg]{foo} and
>>     >     \link[pkg:bar]{foo} to link to the package pkg, to files foo.html and bar.html respectively.
>>     >     These are rarely needed, perhaps to refer to not-yet-installed packages (but there the HTML
>>     >     help system will resolve the link at run time) or in the normally undesirable event that more
>>     >     than one package offers help on a topic7 (in which case the present package has precedence so
>>     >     this is only needed to refer to other packages). They are currently only used in HTML help
>>     >     (and ignored for hyperlinks in LATEX conversions of help pages), and link to the file rather
>>     >     than the topic (since there is no way to know which topics are in which files in an uninstalled
>>     >     package) ...   Because they have been frequently misused, the HTML help system looks for topic foo in package pkg
>>     >     if it does not find file foo.html."
>>     >
>>     >     Unless I am missing something, it seems that it would be relatively painless to reverse the logic of the current behaviour of the help system,
>>     >     i.e. to start looking first for the topic and then for a file.
>>     >
>>     >     Georgi Boshnakov
>>     >
>>     >     -----Original Message-----
>>     >     From: R-package-devel <r-package-devel-bounces at r-project.org> On Behalf Of G?bor Cs?rdi
>>     >     Sent: 16 June 2020 13:44
>>     >     To: Duncan Murdoch <murdoch.duncan at gmail.com>
>>     >     Cc: List r-package-devel <r-package-devel at r-project.org>
>>     >     Subject: Re: [R-pkg-devel] check cross-references error: Non-file package-anchored link(s)
>>     >
>>     >     On Mon, Jun 15, 2020 at 5:30 PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>>     >     >
>>     >     > On 15/06/2020 12:05 p.m., Martin Maechler wrote:
>>     >     > >>>>>> Duncan Murdoch   on Sun, 14 Jun 2020 07:28:03 -0400 writes:
>>     >     > >
>>     >     > >      > I agree with almost everything you wrote, except one thing:  this isn't
>>     >     > >      > newly enforced, it has been enforced since the help system began.  What
>>     >     > >      > I think is new is that there are now tests for it.  Previously those
>>     >     > >      > links just wouldn't work.
>>     >     > >
>>     >     > >      > Duncan Murdoch
>>     >     > >
>>     >     > > Yes, to all... including Duncan's agreement with G?bor.
>>     >     > >
>>     >     > > Also, Duncan M earlier did mention that he had wanted to
>>     >     > > *change* the link-to-file behavior for these cases (when he wrote
>>     >     > > most of the Rd2html source code) but somehow did not get it.
>>     >     >
>>     >     > Actually, I don't think I pushed for this change at the time (or at
>>     >     > least I didn't push much).  I just wish now that I had, because I
>>     >     > think it will be harder to do it now than it would have been then.
>>     >     >
>>     >     > Duncan
>>     >
>>     >     I am not entirely sure, but maybe just documenting the current behaviour and undoing 78674 could work. With some tweaks? E.g.
>>     >
>>     >     * updating R-exts to say that \link[pkg:topic]{text} will link to `topic.html` in `pkg` first (for historical reasons), and falls back to searching for `topic` in `pkg` at render time.
>>     >     * updating Rd2HTML to look for the topic and use it in the link, instead of throwing a warning, in it cannot find `topic.html`
>>     >     * removing the `R CMD check` warning for non-file links, that was added in 78674 :)
>>     >
>>     >     Is there anything else?
>>     >
>>     >     Gabor
>>     >
>>     >     [...]
>>     >
>>     >     ______________________________________________
>>     >     R-package-devel at r-project.org mailing list https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>     >     ______________________________________________
>>     >     R-package-devel at r-project.org mailing list
>>     >     https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>     >
>>     >
>>     > ______________________________________________
>>     > R-package-devel at r-project.org mailing list
>>     > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From jen@@oeh|@ch|@ege| @end|ng |rom truec|u@ter@com  Thu Jul  2 12:47:28 2020
From: jen@@oeh|@ch|@ege| @end|ng |rom truec|u@ter@com (=?UTF-8?Q?Dr=2E_Jens_Oehlschl=C3=A4gel?=)
Date: Thu, 2 Jul 2020 12:47:28 +0200
Subject: [R-pkg-devel] check cross-references error: Non-file
 package-anchored link(s)
In-Reply-To: <8626f4ee-5678-4234-d0c3-25e915b61812@gmail.com>
References: <trinity-3569f1e7-da91-4b3c-9930-c4b451c9cb92-1593625573460@3c-app-webde-bap32>
 <8626f4ee-5678-4234-d0c3-25e915b61812@gmail.com>
Message-ID: <trinity-04df0582-e2b3-4522-8377-be0d9bd76e6e-1593686848724@3c-app-webde-bap46>

Thanks Gabor and Duncan,

> It's actually in ff/man/clone.rd, not clone.ff.rd.  There is no 
> ff/man/clone.ff.rd file.

but there *is* clone.ff.rd in the >= 4.0.0 versions of the packages bit/bit64/ff.

Hence the check warning is a false alarm resulting from checking bit 4.0.2 (GitHub.com/truecluster) against ff 2.2-14.2 (CRAN) instead of checking it against the also submitted ff 4.0.2 (GitHub.com/truecluster).

So all I can and will do is waiting that CRAN maintainers install and check again.

Best

Jens



> 
> Duncan Murdoch
> 
> > 
> > Best regards
> > 
> > Jens
> > 
> > 
> > 
> > 
> > On 16.06.20 22:31, G?bor Cs?rdi wrote:
> >> This is how to look up the filename. The first "sp" is the topic name,
> >> the second is the package name.
> >>
> >>> help("sp", "sp")[[1]]
> >> [1] "C:/Users/csard/R/win-library/4.0/sp/help/00sp"
> >>
> >> So you need to link to the "00sp.Rd" file:  \link[sp:00sp]{sp}
> >>
> >> Gabor
> >>
> >> On Tue, Jun 16, 2020 at 9:09 PM Wayne Oldford <rwoldford at uwaterloo.ca> wrote:
> >>>
> >>> Hi
> >>>
> >>> I got caught by this new test this week in trying to push an updated release of the loon package to CRAN.
> >>>
> >>> By following this thread, I corrected my cross-references to external packages but I got stymied by
> >>> the one I hoped to give to the  "sp" package for Spatial data
> >>>
> >>> _________
> >>>
> >>> Here is the history:
> >>>
> >>> I tried
> >>>      \link[sp:sp]{sp}
> >>> which failed here:
> >>> Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200616_162128/Debian/00check.log>
> >>> Status: 1 WARNING
> >>>
> >>>
> >>> That was meant to correct an earlier attempt (it did for other links to "scales" for example) where I had tried
> >>>     \link[sp]{sp}
> >>> and  failed here:
> >>> Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200615_213749/Debian/00check.log>
> >>> Status: 1 WARNING
> >>>
> >>>
> >>> So to complete the possibilities as I understand them,  I just now tried
> >>>      \link{sp}
> >>> which, as might be expected, failed here:
> >>> Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200616_213921/Debian/00check.log>
> >>> Status: 1 WARNING
> >>> As expected, error here was different:  "Missing  link"  as opposed to "Non-file package-anchored link"
> >>>
> >>> _________
> >>>
> >>>
> >>> I am not sure whether I have missed a subtlety in WRE or that the peculiar circumstance
> >>> where the package, the topic, and the file name are all identical (sp) is some weird boundary case.
> >>>
> >>> Without further advice, I think I am just going to remove the link to "sp".
> >>> It really is just a courtesy link to the package description for "sp".
> >>>
> >>> Thanks in advance for your thoughts.
> >>>
> >>> Wayne
> >>>
> >>>
> >>>
> >>>
> >>> ?-----Original Message-----
> >>> From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Georgi Boshnakov <georgi.boshnakov at manchester.ac.uk>
> >>> Date: Tuesday, June 16, 2020 at 9:27 AM
> >>> To: G?bor Cs?rdi <csardi.gabor at gmail.com>, Duncan Murdoch <murdoch.duncan at gmail.com>
> >>> Cc: List r-package-devel <r-package-devel at r-project.org>
> >>> Subject: Re: [R-pkg-devel] check cross-references error: Non-file package-anchored link(s)
> >>>
> >>>       I think that the current behaviour is documented in WRE:
> >>>
> >>>       "...There are two other forms of optional argument specified as \link[pkg]{foo} and
> >>>       \link[pkg:bar]{foo} to link to the package pkg, to files foo.html and bar.html respectively.
> >>>       These are rarely needed, perhaps to refer to not-yet-installed packages (but there the HTML
> >>>       help system will resolve the link at run time) or in the normally undesirable event that more
> >>>       than one package offers help on a topic7 (in which case the present package has precedence so
> >>>       this is only needed to refer to other packages). They are currently only used in HTML help
> >>>       (and ignored for hyperlinks in LATEX conversions of help pages), and link to the file rather
> >>>       than the topic (since there is no way to know which topics are in which files in an uninstalled
> >>>       package) ...   Because they have been frequently misused, the HTML help system looks for topic foo in package pkg
> >>>       if it does not find file foo.html."
> >>>
> >>>       Unless I am missing something, it seems that it would be relatively painless to reverse the logic of the current behaviour of the help system,
> >>>       i.e. to start looking first for the topic and then for a file.
> >>>
> >>>       Georgi Boshnakov
> >>>
> >>>       -----Original Message-----
> >>>       From: R-package-devel <r-package-devel-bounces at r-project.org> On Behalf Of G?bor Cs?rdi
> >>>       Sent: 16 June 2020 13:44
> >>>       To: Duncan Murdoch <murdoch.duncan at gmail.com>
> >>>       Cc: List r-package-devel <r-package-devel at r-project.org>
> >>>       Subject: Re: [R-pkg-devel] check cross-references error: Non-file package-anchored link(s)
> >>>
> >>>       On Mon, Jun 15, 2020 at 5:30 PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> >>>       >
> >>>       > On 15/06/2020 12:05 p.m., Martin Maechler wrote:
> >>>       > >>>>>> Duncan Murdoch   on Sun, 14 Jun 2020 07:28:03 -0400 writes:
> >>>       > >
> >>>       > >      > I agree with almost everything you wrote, except one thing:  this isn't
> >>>       > >      > newly enforced, it has been enforced since the help system began.  What
> >>>       > >      > I think is new is that there are now tests for it.  Previously those
> >>>       > >      > links just wouldn't work.
> >>>       > >
> >>>       > >      > Duncan Murdoch
> >>>       > >
> >>>       > > Yes, to all... including Duncan's agreement with G?bor.
> >>>       > >
> >>>       > > Also, Duncan M earlier did mention that he had wanted to
> >>>       > > *change* the link-to-file behavior for these cases (when he wrote
> >>>       > > most of the Rd2html source code) but somehow did not get it.
> >>>       >
> >>>       > Actually, I don't think I pushed for this change at the time (or at
> >>>       > least I didn't push much).  I just wish now that I had, because I
> >>>       > think it will be harder to do it now than it would have been then.
> >>>       >
> >>>       > Duncan
> >>>
> >>>       I am not entirely sure, but maybe just documenting the current behaviour and undoing 78674 could work. With some tweaks? E.g.
> >>>
> >>>       * updating R-exts to say that \link[pkg:topic]{text} will link to `topic.html` in `pkg` first (for historical reasons), and falls back to searching for `topic` in `pkg` at render time.
> >>>       * updating Rd2HTML to look for the topic and use it in the link, instead of throwing a warning, in it cannot find `topic.html`
> >>>       * removing the `R CMD check` warning for non-file links, that was added in 78674 :)
> >>>
> >>>       Is there anything else?
> >>>
> >>>       Gabor
> >>>
> >>>       [...]
> >>>
> >>>       ______________________________________________
> >>>       R-package-devel at r-project.org mailing list https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>>       ______________________________________________
> >>>       R-package-devel at r-project.org mailing list
> >>>       https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>>
> >>>
> >>> ______________________________________________
> >>> R-package-devel at r-project.org mailing list
> >>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>
> >> ______________________________________________
> >> R-package-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>
> > 
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> > 
> 
>


From c@@rd|@g@bor @end|ng |rom gm@||@com  Thu Jul  2 12:59:47 2020
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Thu, 2 Jul 2020 11:59:47 +0100
Subject: [R-pkg-devel] check cross-references error: Non-file
 package-anchored link(s)
In-Reply-To: <trinity-04df0582-e2b3-4522-8377-be0d9bd76e6e-1593686848724@3c-app-webde-bap46>
References: <trinity-3569f1e7-da91-4b3c-9930-c4b451c9cb92-1593625573460@3c-app-webde-bap32>
 <8626f4ee-5678-4234-d0c3-25e915b61812@gmail.com>
 <trinity-04df0582-e2b3-4522-8377-be0d9bd76e6e-1593686848724@3c-app-webde-bap46>
Message-ID: <CABtg=K=6sBv=YLifa8wW=kAs9CYmvyKA2t19025M8+W-kOKodQ@mail.gmail.com>

Yes, this is one consequence of the newly enforced check. Now you can
choose which version of the ff package you want to be compatible with.
In the GH version a manual file was renamed and this is now a breaking
change, so you cannot be compatible with both.

Gabor

On Thu, Jul 2, 2020 at 11:47 AM Dr. Jens Oehlschl?gel
<jens.oehlschlaegel at truecluster.com> wrote:
>
> Thanks Gabor and Duncan,
>
> > It's actually in ff/man/clone.rd, not clone.ff.rd.  There is no
> > ff/man/clone.ff.rd file.
>
> but there *is* clone.ff.rd in the >= 4.0.0 versions of the packages bit/bit64/ff.
>
> Hence the check warning is a false alarm resulting from checking bit 4.0.2 (GitHub.com/truecluster) against ff 2.2-14.2 (CRAN) instead of checking it against the also submitted ff 4.0.2 (GitHub.com/truecluster).
>
> So all I can and will do is waiting that CRAN maintainers install and check again.
>
> Best
>
> Jens
>
>
>
> >
> > Duncan Murdoch
> >
> > >
> > > Best regards
> > >
> > > Jens
> > >
> > >
> > >
> > >
> > > On 16.06.20 22:31, G?bor Cs?rdi wrote:
> > >> This is how to look up the filename. The first "sp" is the topic name,
> > >> the second is the package name.
> > >>
> > >>> help("sp", "sp")[[1]]
> > >> [1] "C:/Users/csard/R/win-library/4.0/sp/help/00sp"
> > >>
> > >> So you need to link to the "00sp.Rd" file:  \link[sp:00sp]{sp}
> > >>
> > >> Gabor
> > >>
> > >> On Tue, Jun 16, 2020 at 9:09 PM Wayne Oldford <rwoldford at uwaterloo.ca> wrote:
> > >>>
> > >>> Hi
> > >>>
> > >>> I got caught by this new test this week in trying to push an updated release of the loon package to CRAN.
> > >>>
> > >>> By following this thread, I corrected my cross-references to external packages but I got stymied by
> > >>> the one I hoped to give to the  "sp" package for Spatial data
> > >>>
> > >>> _________
> > >>>
> > >>> Here is the history:
> > >>>
> > >>> I tried
> > >>>      \link[sp:sp]{sp}
> > >>> which failed here:
> > >>> Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200616_162128/Debian/00check.log>
> > >>> Status: 1 WARNING
> > >>>
> > >>>
> > >>> That was meant to correct an earlier attempt (it did for other links to "scales" for example) where I had tried
> > >>>     \link[sp]{sp}
> > >>> and  failed here:
> > >>> Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200615_213749/Debian/00check.log>
> > >>> Status: 1 WARNING
> > >>>
> > >>>
> > >>> So to complete the possibilities as I understand them,  I just now tried
> > >>>      \link{sp}
> > >>> which, as might be expected, failed here:
> > >>> Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200616_213921/Debian/00check.log>
> > >>> Status: 1 WARNING
> > >>> As expected, error here was different:  "Missing  link"  as opposed to "Non-file package-anchored link"
> > >>>
> > >>> _________
> > >>>
> > >>>
> > >>> I am not sure whether I have missed a subtlety in WRE or that the peculiar circumstance
> > >>> where the package, the topic, and the file name are all identical (sp) is some weird boundary case.
> > >>>
> > >>> Without further advice, I think I am just going to remove the link to "sp".
> > >>> It really is just a courtesy link to the package description for "sp".
> > >>>
> > >>> Thanks in advance for your thoughts.
> > >>>
> > >>> Wayne
> > >>>
> > >>>
> > >>>
> > >>>
> > >>> ?-----Original Message-----
> > >>> From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Georgi Boshnakov <georgi.boshnakov at manchester.ac.uk>
> > >>> Date: Tuesday, June 16, 2020 at 9:27 AM
> > >>> To: G?bor Cs?rdi <csardi.gabor at gmail.com>, Duncan Murdoch <murdoch.duncan at gmail.com>
> > >>> Cc: List r-package-devel <r-package-devel at r-project.org>
> > >>> Subject: Re: [R-pkg-devel] check cross-references error: Non-file package-anchored link(s)
> > >>>
> > >>>       I think that the current behaviour is documented in WRE:
> > >>>
> > >>>       "...There are two other forms of optional argument specified as \link[pkg]{foo} and
> > >>>       \link[pkg:bar]{foo} to link to the package pkg, to files foo.html and bar.html respectively.
> > >>>       These are rarely needed, perhaps to refer to not-yet-installed packages (but there the HTML
> > >>>       help system will resolve the link at run time) or in the normally undesirable event that more
> > >>>       than one package offers help on a topic7 (in which case the present package has precedence so
> > >>>       this is only needed to refer to other packages). They are currently only used in HTML help
> > >>>       (and ignored for hyperlinks in LATEX conversions of help pages), and link to the file rather
> > >>>       than the topic (since there is no way to know which topics are in which files in an uninstalled
> > >>>       package) ...   Because they have been frequently misused, the HTML help system looks for topic foo in package pkg
> > >>>       if it does not find file foo.html."
> > >>>
> > >>>       Unless I am missing something, it seems that it would be relatively painless to reverse the logic of the current behaviour of the help system,
> > >>>       i.e. to start looking first for the topic and then for a file.
> > >>>
> > >>>       Georgi Boshnakov
> > >>>
> > >>>       -----Original Message-----
> > >>>       From: R-package-devel <r-package-devel-bounces at r-project.org> On Behalf Of G?bor Cs?rdi
> > >>>       Sent: 16 June 2020 13:44
> > >>>       To: Duncan Murdoch <murdoch.duncan at gmail.com>
> > >>>       Cc: List r-package-devel <r-package-devel at r-project.org>
> > >>>       Subject: Re: [R-pkg-devel] check cross-references error: Non-file package-anchored link(s)
> > >>>
> > >>>       On Mon, Jun 15, 2020 at 5:30 PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> > >>>       >
> > >>>       > On 15/06/2020 12:05 p.m., Martin Maechler wrote:
> > >>>       > >>>>>> Duncan Murdoch   on Sun, 14 Jun 2020 07:28:03 -0400 writes:
> > >>>       > >
> > >>>       > >      > I agree with almost everything you wrote, except one thing:  this isn't
> > >>>       > >      > newly enforced, it has been enforced since the help system began.  What
> > >>>       > >      > I think is new is that there are now tests for it.  Previously those
> > >>>       > >      > links just wouldn't work.
> > >>>       > >
> > >>>       > >      > Duncan Murdoch
> > >>>       > >
> > >>>       > > Yes, to all... including Duncan's agreement with G?bor.
> > >>>       > >
> > >>>       > > Also, Duncan M earlier did mention that he had wanted to
> > >>>       > > *change* the link-to-file behavior for these cases (when he wrote
> > >>>       > > most of the Rd2html source code) but somehow did not get it.
> > >>>       >
> > >>>       > Actually, I don't think I pushed for this change at the time (or at
> > >>>       > least I didn't push much).  I just wish now that I had, because I
> > >>>       > think it will be harder to do it now than it would have been then.
> > >>>       >
> > >>>       > Duncan
> > >>>
> > >>>       I am not entirely sure, but maybe just documenting the current behaviour and undoing 78674 could work. With some tweaks? E.g.
> > >>>
> > >>>       * updating R-exts to say that \link[pkg:topic]{text} will link to `topic.html` in `pkg` first (for historical reasons), and falls back to searching for `topic` in `pkg` at render time.
> > >>>       * updating Rd2HTML to look for the topic and use it in the link, instead of throwing a warning, in it cannot find `topic.html`
> > >>>       * removing the `R CMD check` warning for non-file links, that was added in 78674 :)
> > >>>
> > >>>       Is there anything else?
> > >>>
> > >>>       Gabor
> > >>>
> > >>>       [...]
> > >>>
> > >>>       ______________________________________________
> > >>>       R-package-devel at r-project.org mailing list https://stat.ethz.ch/mailman/listinfo/r-package-devel
> > >>>       ______________________________________________
> > >>>       R-package-devel at r-project.org mailing list
> > >>>       https://stat.ethz.ch/mailman/listinfo/r-package-devel
> > >>>
> > >>>
> > >>> ______________________________________________
> > >>> R-package-devel at r-project.org mailing list
> > >>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> > >>
> > >> ______________________________________________
> > >> R-package-devel at r-project.org mailing list
> > >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> > >>
> > >
> > > ______________________________________________
> > > R-package-devel at r-project.org mailing list
> > > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> > >
> >
> >


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu Jul  2 13:26:02 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 2 Jul 2020 07:26:02 -0400
Subject: [R-pkg-devel] check cross-references error: Non-file
 package-anchored link(s)
In-Reply-To: <trinity-04df0582-e2b3-4522-8377-be0d9bd76e6e-1593686848724@3c-app-webde-bap46>
References: <trinity-3569f1e7-da91-4b3c-9930-c4b451c9cb92-1593625573460@3c-app-webde-bap32>
 <8626f4ee-5678-4234-d0c3-25e915b61812@gmail.com>
 <trinity-04df0582-e2b3-4522-8377-be0d9bd76e6e-1593686848724@3c-app-webde-bap46>
Message-ID: <5bebdbee-35ac-177b-1cf6-4e7c60d801ee@gmail.com>

There are a few ways to deal with this, but waiting for ff to be updated 
is probably easiest.

However, maybe ff can't be updated until bit is updated.  Here are some 
possibilities:

One way is to make bit depend on a particular version of ff.  That may 
cause a deadlock if both are being updated at once, but I think CRAN 
should be able to deal with it if they are informed of the issue.

Another way is to use R code in the Rd file to select which link to use. 
  For example, instead of \link[ff]{clone.ff}, you could use

\Sexpr[results=rd,stage=render]{clonelink()}

where clonelink() is a function that generates either 
"\link[ff]{clone.ff}" or "\link[ff:clone]{clone.ff}" depending on the 
detected installed version of ff.

Another choice that is nearly as easy as doing nothing is to include no 
link at all in this update, and make it a link again in the next update 
when the new ff is available.

Duncan Murdoch

On 02/07/2020 6:47 a.m., Dr. Jens Oehlschl?gel wrote:
> Thanks Gabor and Duncan,
> 
>> It's actually in ff/man/clone.rd, not clone.ff.rd.  There is no
>> ff/man/clone.ff.rd file.
> 
> but there *is* clone.ff.rd in the >= 4.0.0 versions of the packages bit/bit64/ff.
> 
> Hence the check warning is a false alarm resulting from checking bit 4.0.2 (GitHub.com/truecluster) against ff 2.2-14.2 (CRAN) instead of checking it against the also submitted ff 4.0.2 (GitHub.com/truecluster).
> 
> So all I can and will do is waiting that CRAN maintainers install and check again.
> 
> Best
> 
> Jens
> 
> 
> 
>>
>> Duncan Murdoch
>>
>>>
>>> Best regards
>>>
>>> Jens
>>>
>>>
>>>
>>>
>>> On 16.06.20 22:31, G?bor Cs?rdi wrote:
>>>> This is how to look up the filename. The first "sp" is the topic name,
>>>> the second is the package name.
>>>>
>>>>> help("sp", "sp")[[1]]
>>>> [1] "C:/Users/csard/R/win-library/4.0/sp/help/00sp"
>>>>
>>>> So you need to link to the "00sp.Rd" file:  \link[sp:00sp]{sp}
>>>>
>>>> Gabor
>>>>
>>>> On Tue, Jun 16, 2020 at 9:09 PM Wayne Oldford <rwoldford at uwaterloo.ca> wrote:
>>>>>
>>>>> Hi
>>>>>
>>>>> I got caught by this new test this week in trying to push an updated release of the loon package to CRAN.
>>>>>
>>>>> By following this thread, I corrected my cross-references to external packages but I got stymied by
>>>>> the one I hoped to give to the  "sp" package for Spatial data
>>>>>
>>>>> _________
>>>>>
>>>>> Here is the history:
>>>>>
>>>>> I tried
>>>>>       \link[sp:sp]{sp}
>>>>> which failed here:
>>>>> Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200616_162128/Debian/00check.log>
>>>>> Status: 1 WARNING
>>>>>
>>>>>
>>>>> That was meant to correct an earlier attempt (it did for other links to "scales" for example) where I had tried
>>>>>      \link[sp]{sp}
>>>>> and  failed here:
>>>>> Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200615_213749/Debian/00check.log>
>>>>> Status: 1 WARNING
>>>>>
>>>>>
>>>>> So to complete the possibilities as I understand them,  I just now tried
>>>>>       \link{sp}
>>>>> which, as might be expected, failed here:
>>>>> Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200616_213921/Debian/00check.log>
>>>>> Status: 1 WARNING
>>>>> As expected, error here was different:  "Missing  link"  as opposed to "Non-file package-anchored link"
>>>>>
>>>>> _________
>>>>>
>>>>>
>>>>> I am not sure whether I have missed a subtlety in WRE or that the peculiar circumstance
>>>>> where the package, the topic, and the file name are all identical (sp) is some weird boundary case.
>>>>>
>>>>> Without further advice, I think I am just going to remove the link to "sp".
>>>>> It really is just a courtesy link to the package description for "sp".
>>>>>
>>>>> Thanks in advance for your thoughts.
>>>>>
>>>>> Wayne
>>>>>
>>>>>
>>>>>
>>>>>
>>>>> ?-----Original Message-----
>>>>> From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Georgi Boshnakov <georgi.boshnakov at manchester.ac.uk>
>>>>> Date: Tuesday, June 16, 2020 at 9:27 AM
>>>>> To: G?bor Cs?rdi <csardi.gabor at gmail.com>, Duncan Murdoch <murdoch.duncan at gmail.com>
>>>>> Cc: List r-package-devel <r-package-devel at r-project.org>
>>>>> Subject: Re: [R-pkg-devel] check cross-references error: Non-file package-anchored link(s)
>>>>>
>>>>>        I think that the current behaviour is documented in WRE:
>>>>>
>>>>>        "...There are two other forms of optional argument specified as \link[pkg]{foo} and
>>>>>        \link[pkg:bar]{foo} to link to the package pkg, to files foo.html and bar.html respectively.
>>>>>        These are rarely needed, perhaps to refer to not-yet-installed packages (but there the HTML
>>>>>        help system will resolve the link at run time) or in the normally undesirable event that more
>>>>>        than one package offers help on a topic7 (in which case the present package has precedence so
>>>>>        this is only needed to refer to other packages). They are currently only used in HTML help
>>>>>        (and ignored for hyperlinks in LATEX conversions of help pages), and link to the file rather
>>>>>        than the topic (since there is no way to know which topics are in which files in an uninstalled
>>>>>        package) ...   Because they have been frequently misused, the HTML help system looks for topic foo in package pkg
>>>>>        if it does not find file foo.html."
>>>>>
>>>>>        Unless I am missing something, it seems that it would be relatively painless to reverse the logic of the current behaviour of the help system,
>>>>>        i.e. to start looking first for the topic and then for a file.
>>>>>
>>>>>        Georgi Boshnakov
>>>>>
>>>>>        -----Original Message-----
>>>>>        From: R-package-devel <r-package-devel-bounces at r-project.org> On Behalf Of G?bor Cs?rdi
>>>>>        Sent: 16 June 2020 13:44
>>>>>        To: Duncan Murdoch <murdoch.duncan at gmail.com>
>>>>>        Cc: List r-package-devel <r-package-devel at r-project.org>
>>>>>        Subject: Re: [R-pkg-devel] check cross-references error: Non-file package-anchored link(s)
>>>>>
>>>>>        On Mon, Jun 15, 2020 at 5:30 PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>>>>>        >
>>>>>        > On 15/06/2020 12:05 p.m., Martin Maechler wrote:
>>>>>        > >>>>>> Duncan Murdoch   on Sun, 14 Jun 2020 07:28:03 -0400 writes:
>>>>>        > >
>>>>>        > >      > I agree with almost everything you wrote, except one thing:  this isn't
>>>>>        > >      > newly enforced, it has been enforced since the help system began.  What
>>>>>        > >      > I think is new is that there are now tests for it.  Previously those
>>>>>        > >      > links just wouldn't work.
>>>>>        > >
>>>>>        > >      > Duncan Murdoch
>>>>>        > >
>>>>>        > > Yes, to all... including Duncan's agreement with G?bor.
>>>>>        > >
>>>>>        > > Also, Duncan M earlier did mention that he had wanted to
>>>>>        > > *change* the link-to-file behavior for these cases (when he wrote
>>>>>        > > most of the Rd2html source code) but somehow did not get it.
>>>>>        >
>>>>>        > Actually, I don't think I pushed for this change at the time (or at
>>>>>        > least I didn't push much).  I just wish now that I had, because I
>>>>>        > think it will be harder to do it now than it would have been then.
>>>>>        >
>>>>>        > Duncan
>>>>>
>>>>>        I am not entirely sure, but maybe just documenting the current behaviour and undoing 78674 could work. With some tweaks? E.g.
>>>>>
>>>>>        * updating R-exts to say that \link[pkg:topic]{text} will link to `topic.html` in `pkg` first (for historical reasons), and falls back to searching for `topic` in `pkg` at render time.
>>>>>        * updating Rd2HTML to look for the topic and use it in the link, instead of throwing a warning, in it cannot find `topic.html`
>>>>>        * removing the `R CMD check` warning for non-file links, that was added in 78674 :)
>>>>>
>>>>>        Is there anything else?
>>>>>
>>>>>        Gabor
>>>>>
>>>>>        [...]
>>>>>
>>>>>        ______________________________________________
>>>>>        R-package-devel at r-project.org mailing list https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>>        ______________________________________________
>>>>>        R-package-devel at r-project.org mailing list
>>>>>        https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>>
>>>>>
>>>>> ______________________________________________
>>>>> R-package-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>>
>>


From jen@@oeh|@ch|@ege| @end|ng |rom truec|u@ter@com  Thu Jul  2 13:49:57 2020
From: jen@@oeh|@ch|@ege| @end|ng |rom truec|u@ter@com (=?UTF-8?Q?Dr=2E_Jens_Oehlschl=C3=A4gel?=)
Date: Thu, 2 Jul 2020 13:49:57 +0200
Subject: [R-pkg-devel] check cross-references error: Non-file
 package-anchored link(s)
In-Reply-To: <5bebdbee-35ac-177b-1cf6-4e7c60d801ee@gmail.com>
References: <trinity-3569f1e7-da91-4b3c-9930-c4b451c9cb92-1593625573460@3c-app-webde-bap32>
 <8626f4ee-5678-4234-d0c3-25e915b61812@gmail.com>
 <trinity-04df0582-e2b3-4522-8377-be0d9bd76e6e-1593686848724@3c-app-webde-bap46>
 <5bebdbee-35ac-177b-1cf6-4e7c60d801ee@gmail.com>
Message-ID: <trinity-c7e81476-794e-476a-ae54-f531ad456296-1593690597330@3c-app-webde-bap46>

Duncan,

> One way is to make bit depend on a particular version of ff.  That may
> cause a deadlock if both are being updated at once, but I think CRAN
> should be able to deal with it if they are informed of the issue.

Exactly that I have done: I submitted all three packages bit/bit64/ff in version 4.0.2 and made them dependend on Version >= 4.0.0.
And yes, the maintainers have been informed about the issue.

Best

Jens


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu Jul  2 15:23:30 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 2 Jul 2020 09:23:30 -0400
Subject: [R-pkg-devel] check cross-references error: Non-file
 package-anchored link(s)
In-Reply-To: <trinity-c7e81476-794e-476a-ae54-f531ad456296-1593690597330@3c-app-webde-bap46>
References: <trinity-3569f1e7-da91-4b3c-9930-c4b451c9cb92-1593625573460@3c-app-webde-bap32>
 <8626f4ee-5678-4234-d0c3-25e915b61812@gmail.com>
 <trinity-04df0582-e2b3-4522-8377-be0d9bd76e6e-1593686848724@3c-app-webde-bap46>
 <5bebdbee-35ac-177b-1cf6-4e7c60d801ee@gmail.com>
 <trinity-c7e81476-794e-476a-ae54-f531ad456296-1593690597330@3c-app-webde-bap46>
Message-ID: <92d2b852-f02b-e974-3da0-34f94af70467@gmail.com>

On 02/07/2020 7:49 a.m., Dr. Jens Oehlschl?gel wrote:
> Duncan,
> 
>> One way is to make bit depend on a particular version of ff.  That may
>> cause a deadlock if both are being updated at once, but I think CRAN
>> should be able to deal with it if they are informed of the issue.
> 
> Exactly that I have done: I submitted all three packages bit/bit64/ff in version 4.0.2 and made them dependend on Version >= 4.0.0.
> And yes, the maintainers have been informed about the issue.

I'm not sure that's what I meant, but I can't be sure, since I haven't 
seen your source.  What I meant is a package dependency, i.e. the 
existing ff on CRAN is version 2.2-14.2 and it depends on bit without 
saying what version of bit is needed.  The existing bit is 1.1-15.2 with 
no dependency on ff.

So you can force the new ff to use the new bit by giving the version 
number, e.g.

Depends:  bit (>= 2.0)

but it's not so obvious how to make the new bit depend on the new ff.
There's no way to say that the dependency is only to a help page, and 
circular strong dependencies are messy, so I'd suggest you use one of 
the other options I offered:  a dynamic link in the Rd file, or no link 
at all.

Duncan Murdoch


From j@goreck| @end|ng |rom w|t@edu@p|  Thu Jul  2 16:24:26 2020
From: j@goreck| @end|ng |rom w|t@edu@p| (Jan Gorecki)
Date: Thu, 2 Jul 2020 15:24:26 +0100
Subject: [R-pkg-devel] check cross-references error: Non-file
 package-anchored link(s)
In-Reply-To: <CABtg=Kkfq89ZPA+UCEoPMJZ7j4YievnYFVw08Z32O7c5CBBaXw@mail.gmail.com>
References: <5F37E69B-BD3D-4B56-8B66-77E4A5EDECF3@gmail.com>
 <408847a9-ac14-c4fb-33d0-0734f180d228@gmail.com>
 <CABtg=K=c8TUAxmv1e2To5A5HHKUTQEA-tNadxUJGuA3eXh1p8A@mail.gmail.com>
 <0df3d1f3-f482-ee96-d6f5-a6aab74810b4@gmail.com>
 <CABtg=Kk2V4SWVx-MOQ32ErzS64GrtZV97ZGQ5ccU_SjpO_W_2A@mail.gmail.com>
 <8a25ba2b-3b98-e469-07e4-dfd90d76e37e@gmail.com>
 <24295.39986.892565.475924@stat.math.ethz.ch>
 <ed9be12f-5b74-ab7d-0846-2274718c881d@gmail.com>
 <CABtg=K=HG9HfUY_F+aseLrBdWQoTy8hFuDmtR1BtEXucfnegmA@mail.gmail.com>
 <HE1PR0102MB325875BEA1D1D41D3C2C07DCAE9D0@HE1PR0102MB3258.eurprd01.prod.exchangelabs.com>
 <3C1E2993-8F56-4813-B2EA-6E94B46B8C3A@uwaterloo.ca>
 <CABtg=KkXsqmK1=ao4VojsG4hvyhkaDk7ZJoK1RvrGRBGYQ5UnQ@mail.gmail.com>
 <74696BF9-331D-41A5-891A-18A8F6BD8F57@uwaterloo.ca>
 <CAOO9MKXHv_LXe0uiHWe5vjDwjuK2N9C3NHYJRT-haXmMfvg4+A@mail.gmail.com>
 <CABtg=Kkfq89ZPA+UCEoPMJZ7j4YievnYFVw08Z32O7c5CBBaXw@mail.gmail.com>
Message-ID: <CAOO9MKVXvYvQrTdQPUM+DWENGjhwi16ORDE0BtxNoz-YwanuRg@mail.gmail.com>

Thank you Gabor

On Thu, Jul 2, 2020 at 10:20 AM G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:
>
> You can set the _R_CHECK_XREFS_MIND_SUSPECT_ANCHORS_=true env var and
> use R-devel.
>
> Alternatively, and you don't need R-devel for this, you can run R CMD
> --html INSTALL on your package, and then look for messages that
> contain "treated as a topic", e.g.
>
>     curl_fds                                html
> Rd warning: /Users/gaborcsardi/works/processx/man/curl_fds.Rd:11: file
> link ?multi_fdset? in package ?curl? does not exist and so has been
> treated as a topic
>
> Gabor
>
>
> On Thu, Jul 2, 2020 at 10:06 AM Jan Gorecki <j.gorecki at wit.edu.pl> wrote:
> >
> > Hi,
> > What is the recommended way to test for those issues locally?
> > If it is tested during cran submission, then seems reasonable to be enabled just by --as-cran switch. Is it?
> > Thanks
> >
> > On Wed 17 Jun, 2020, 12:32 AM Wayne Oldford, <rwoldford at uwaterloo.ca> wrote:
> >>
> >> Thank you!
> >>
> >> ?-----Original Message-----
> >> From: G?bor Cs?rdi <csardi.gabor at gmail.com>
> >> Date: Tuesday, June 16, 2020 at 4:32 PM
> >> To: Wayne Oldford <rwoldford at uwaterloo.ca>
> >> Cc: List r-package-devel <r-package-devel at r-project.org>
> >> Subject: Re: [R-pkg-devel] check cross-references error: Non-file package-anchored link(s)
> >>
> >>     This is how to look up the filename. The first "sp" is the topic name,
> >>     the second is the package name.
> >>
> >>     > help("sp", "sp")[[1]]
> >>     [1] "C:/Users/csard/R/win-library/4.0/sp/help/00sp"
> >>
> >>     So you need to link to the "00sp.Rd" file:  \link[sp:00sp]{sp}
> >>
> >>     Gabor
> >>
> >>     On Tue, Jun 16, 2020 at 9:09 PM Wayne Oldford <rwoldford at uwaterloo.ca> wrote:
> >>     >
> >>     > Hi
> >>     >
> >>     > I got caught by this new test this week in trying to push an updated release of the loon package to CRAN.
> >>     >
> >>     > By following this thread, I corrected my cross-references to external packages but I got stymied by
> >>     > the one I hoped to give to the  "sp" package for Spatial data
> >>     >
> >>     > _________
> >>     >
> >>     > Here is the history:
> >>     >
> >>     > I tried
> >>     >    \link[sp:sp]{sp}
> >>     > which failed here:
> >>     > Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200616_162128/Debian/00check.log>
> >>     > Status: 1 WARNING
> >>     >
> >>     >
> >>     > That was meant to correct an earlier attempt (it did for other links to "scales" for example) where I had tried
> >>     >   \link[sp]{sp}
> >>     > and  failed here:
> >>     > Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200615_213749/Debian/00check.log>
> >>     > Status: 1 WARNING
> >>     >
> >>     >
> >>     > So to complete the possibilities as I understand them,  I just now tried
> >>     >    \link{sp}
> >>     > which, as might be expected, failed here:
> >>     > Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200616_213921/Debian/00check.log>
> >>     > Status: 1 WARNING
> >>     > As expected, error here was different:  "Missing  link"  as opposed to "Non-file package-anchored link"
> >>     >
> >>     > _________
> >>     >
> >>     >
> >>     > I am not sure whether I have missed a subtlety in WRE or that the peculiar circumstance
> >>     > where the package, the topic, and the file name are all identical (sp) is some weird boundary case.
> >>     >
> >>     > Without further advice, I think I am just going to remove the link to "sp".
> >>     > It really is just a courtesy link to the package description for "sp".
> >>     >
> >>     > Thanks in advance for your thoughts.
> >>     >
> >>     > Wayne
> >>     >
> >>     >
> >>     >
> >>     >
> >>     > -----Original Message-----
> >>     > From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Georgi Boshnakov <georgi.boshnakov at manchester.ac.uk>
> >>     > Date: Tuesday, June 16, 2020 at 9:27 AM
> >>     > To: G?bor Cs?rdi <csardi.gabor at gmail.com>, Duncan Murdoch <murdoch.duncan at gmail.com>
> >>     > Cc: List r-package-devel <r-package-devel at r-project.org>
> >>     > Subject: Re: [R-pkg-devel] check cross-references error: Non-file package-anchored link(s)
> >>     >
> >>     >     I think that the current behaviour is documented in WRE:
> >>     >
> >>     >     "...There are two other forms of optional argument specified as \link[pkg]{foo} and
> >>     >     \link[pkg:bar]{foo} to link to the package pkg, to files foo.html and bar.html respectively.
> >>     >     These are rarely needed, perhaps to refer to not-yet-installed packages (but there the HTML
> >>     >     help system will resolve the link at run time) or in the normally undesirable event that more
> >>     >     than one package offers help on a topic7 (in which case the present package has precedence so
> >>     >     this is only needed to refer to other packages). They are currently only used in HTML help
> >>     >     (and ignored for hyperlinks in LATEX conversions of help pages), and link to the file rather
> >>     >     than the topic (since there is no way to know which topics are in which files in an uninstalled
> >>     >     package) ...   Because they have been frequently misused, the HTML help system looks for topic foo in package pkg
> >>     >     if it does not find file foo.html."
> >>     >
> >>     >     Unless I am missing something, it seems that it would be relatively painless to reverse the logic of the current behaviour of the help system,
> >>     >     i.e. to start looking first for the topic and then for a file.
> >>     >
> >>     >     Georgi Boshnakov
> >>     >
> >>     >     -----Original Message-----
> >>     >     From: R-package-devel <r-package-devel-bounces at r-project.org> On Behalf Of G?bor Cs?rdi
> >>     >     Sent: 16 June 2020 13:44
> >>     >     To: Duncan Murdoch <murdoch.duncan at gmail.com>
> >>     >     Cc: List r-package-devel <r-package-devel at r-project.org>
> >>     >     Subject: Re: [R-pkg-devel] check cross-references error: Non-file package-anchored link(s)
> >>     >
> >>     >     On Mon, Jun 15, 2020 at 5:30 PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> >>     >     >
> >>     >     > On 15/06/2020 12:05 p.m., Martin Maechler wrote:
> >>     >     > >>>>>> Duncan Murdoch   on Sun, 14 Jun 2020 07:28:03 -0400 writes:
> >>     >     > >
> >>     >     > >      > I agree with almost everything you wrote, except one thing:  this isn't
> >>     >     > >      > newly enforced, it has been enforced since the help system began.  What
> >>     >     > >      > I think is new is that there are now tests for it.  Previously those
> >>     >     > >      > links just wouldn't work.
> >>     >     > >
> >>     >     > >      > Duncan Murdoch
> >>     >     > >
> >>     >     > > Yes, to all... including Duncan's agreement with G?bor.
> >>     >     > >
> >>     >     > > Also, Duncan M earlier did mention that he had wanted to
> >>     >     > > *change* the link-to-file behavior for these cases (when he wrote
> >>     >     > > most of the Rd2html source code) but somehow did not get it.
> >>     >     >
> >>     >     > Actually, I don't think I pushed for this change at the time (or at
> >>     >     > least I didn't push much).  I just wish now that I had, because I
> >>     >     > think it will be harder to do it now than it would have been then.
> >>     >     >
> >>     >     > Duncan
> >>     >
> >>     >     I am not entirely sure, but maybe just documenting the current behaviour and undoing 78674 could work. With some tweaks? E.g.
> >>     >
> >>     >     * updating R-exts to say that \link[pkg:topic]{text} will link to `topic.html` in `pkg` first (for historical reasons), and falls back to searching for `topic` in `pkg` at render time.
> >>     >     * updating Rd2HTML to look for the topic and use it in the link, instead of throwing a warning, in it cannot find `topic.html`
> >>     >     * removing the `R CMD check` warning for non-file links, that was added in 78674 :)
> >>     >
> >>     >     Is there anything else?
> >>     >
> >>     >     Gabor
> >>     >
> >>     >     [...]
> >>     >
> >>     >     ______________________________________________
> >>     >     R-package-devel at r-project.org mailing list https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>     >     ______________________________________________
> >>     >     R-package-devel at r-project.org mailing list
> >>     >     https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>     >
> >>     >
> >>     > ______________________________________________
> >>     > R-package-devel at r-project.org mailing list
> >>     > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>
> >>
> >> ______________________________________________
> >> R-package-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From jen@@oeh|@ch|@ege| @end|ng |rom truec|u@ter@com  Thu Jul  2 16:41:47 2020
From: jen@@oeh|@ch|@ege| @end|ng |rom truec|u@ter@com (=?UTF-8?Q?Dr=2E_Jens_Oehlschl=C3=A4gel?=)
Date: Thu, 2 Jul 2020 16:41:47 +0200
Subject: [R-pkg-devel] check cross-references error: Non-file
 package-anchored link(s)
In-Reply-To: <92d2b852-f02b-e974-3da0-34f94af70467@gmail.com>
References: <trinity-3569f1e7-da91-4b3c-9930-c4b451c9cb92-1593625573460@3c-app-webde-bap32>
 <8626f4ee-5678-4234-d0c3-25e915b61812@gmail.com>
 <trinity-04df0582-e2b3-4522-8377-be0d9bd76e6e-1593686848724@3c-app-webde-bap46>
 <5bebdbee-35ac-177b-1cf6-4e7c60d801ee@gmail.com>
 <trinity-c7e81476-794e-476a-ae54-f531ad456296-1593690597330@3c-app-webde-bap46>
 <92d2b852-f02b-e974-3da0-34f94af70467@gmail.com>
Message-ID: <trinity-4af2fe83-20b6-482b-8c7d-e92d793ddfb2-1593700907797@3c-app-webde-bap46>

Thank you for the advice Duncan,

But let's not get carried away here: we are talking about a *warning* that only arises if two packages are checked together that are never meant to be installed together.
The new packages contain weeks of improvement-work, and I am not going to add back-and-forth-trick-work just to circumvent some warnings that arise only at the point of switching from old to new.

If there is a problem when checking the new packages together that's a different story and worth taking care about. I didn't find such problems.

Kind regards


Jens



> Gesendet: Donnerstag, 02. Juli 2020 um 15:23 Uhr
> Von: "Duncan Murdoch" <murdoch.duncan at gmail.com>
> An: "Dr. Jens Oehlschl?gel" <jens.oehlschlaegel at truecluster.com>, r-package-devel at r-project.org
> Betreff: Re: Aw: Re: Re: [R-pkg-devel] check cross-references error: Non-file package-anchored link(s)
>
> On 02/07/2020 7:49 a.m., Dr. Jens Oehlschl?gel wrote:
> > Duncan,
> > 
> >> One way is to make bit depend on a particular version of ff.  That may
> >> cause a deadlock if both are being updated at once, but I think CRAN
> >> should be able to deal with it if they are informed of the issue.
> > 
> > Exactly that I have done: I submitted all three packages bit/bit64/ff in version 4.0.2 and made them dependend on Version >= 4.0.0.
> > And yes, the maintainers have been informed about the issue.
> 
> I'm not sure that's what I meant, but I can't be sure, since I haven't 
> seen your source.  What I meant is a package dependency, i.e. the 
> existing ff on CRAN is version 2.2-14.2 and it depends on bit without 
> saying what version of bit is needed.  The existing bit is 1.1-15.2 with 
> no dependency on ff.
> 
> So you can force the new ff to use the new bit by giving the version 
> number, e.g.
> 
> Depends:  bit (>= 2.0)
> 
> but it's not so obvious how to make the new bit depend on the new ff.
> There's no way to say that the dependency is only to a help page, and 
> circular strong dependencies are messy, so I'd suggest you use one of 
> the other options I offered:  a dynamic link in the Rd file, or no link 
> at all.
> 
> Duncan Murdoch
>


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu Jul  2 19:12:31 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 2 Jul 2020 13:12:31 -0400
Subject: [R-pkg-devel] check cross-references error: Non-file
 package-anchored link(s)
In-Reply-To: <trinity-4af2fe83-20b6-482b-8c7d-e92d793ddfb2-1593700907797@3c-app-webde-bap46>
References: <trinity-3569f1e7-da91-4b3c-9930-c4b451c9cb92-1593625573460@3c-app-webde-bap32>
 <8626f4ee-5678-4234-d0c3-25e915b61812@gmail.com>
 <trinity-04df0582-e2b3-4522-8377-be0d9bd76e6e-1593686848724@3c-app-webde-bap46>
 <5bebdbee-35ac-177b-1cf6-4e7c60d801ee@gmail.com>
 <trinity-c7e81476-794e-476a-ae54-f531ad456296-1593690597330@3c-app-webde-bap46>
 <92d2b852-f02b-e974-3da0-34f94af70467@gmail.com>
 <trinity-4af2fe83-20b6-482b-8c7d-e92d793ddfb2-1593700907797@3c-app-webde-bap46>
Message-ID: <227a92b9-f710-62f1-f617-c2eb11798f5f@gmail.com>

On 02/07/2020 10:41 a.m., Dr. Jens Oehlschl?gel wrote:
> Thank you for the advice Duncan,
> 
> But let's not get carried away here: we are talking about a *warning* that only arises if two packages are checked together that are never meant to be installed together.
> The new packages contain weeks of improvement-work, and I am not going to add back-and-forth-trick-work just to circumvent some warnings that arise only at the point of switching from old to new.

That's a choice, but your package might face auto-rejection on CRAN. 
Asking CRAN to handle your update manually means extra work for them; if 
there's a simple way to handle it without that (and I've given you two 
to choose from), it seems kind of selfish not to use it.

BTW, assuming you got the two packages on CRAN, it wouldn't be hard for 
a user to install the new bit without updating ff:  just have both 
installed before your update, then ask to update bit.  Since it doesn't 
depend on ff, it won't trigger an ff update.  You can't expect R to know 
they were never meant to be installed together unless you record that 
fact in the dependencies in the DESCRIPTION file.

Duncan Murdoch


> 
> If there is a problem when checking the new packages together that's a different story and worth taking care about. I didn't find such problems.
> 
> Kind regards
> 
> 
> Jens
> 
> 
> 
>> Gesendet: Donnerstag, 02. Juli 2020 um 15:23 Uhr
>> Von: "Duncan Murdoch" <murdoch.duncan at gmail.com>
>> An: "Dr. Jens Oehlschl?gel" <jens.oehlschlaegel at truecluster.com>, r-package-devel at r-project.org
>> Betreff: Re: Aw: Re: Re: [R-pkg-devel] check cross-references error: Non-file package-anchored link(s)
>>
>> On 02/07/2020 7:49 a.m., Dr. Jens Oehlschl?gel wrote:
>>> Duncan,
>>>
>>>> One way is to make bit depend on a particular version of ff.  That may
>>>> cause a deadlock if both are being updated at once, but I think CRAN
>>>> should be able to deal with it if they are informed of the issue.
>>>
>>> Exactly that I have done: I submitted all three packages bit/bit64/ff in version 4.0.2 and made them dependend on Version >= 4.0.0.
>>> And yes, the maintainers have been informed about the issue.
>>
>> I'm not sure that's what I meant, but I can't be sure, since I haven't
>> seen your source.  What I meant is a package dependency, i.e. the
>> existing ff on CRAN is version 2.2-14.2 and it depends on bit without
>> saying what version of bit is needed.  The existing bit is 1.1-15.2 with
>> no dependency on ff.
>>
>> So you can force the new ff to use the new bit by giving the version
>> number, e.g.
>>
>> Depends:  bit (>= 2.0)
>>
>> but it's not so obvious how to make the new bit depend on the new ff.
>> There's no way to say that the dependency is only to a help page, and
>> circular strong dependencies are messy, so I'd suggest you use one of
>> the other options I offered:  a dynamic link in the Rd file, or no link
>> at all.
>>
>> Duncan Murdoch
>>


From wdun|@p @end|ng |rom t|bco@com  Thu Jul  2 19:25:56 2020
From: wdun|@p @end|ng |rom t|bco@com (William Dunlap)
Date: Thu, 2 Jul 2020 10:25:56 -0700
Subject: [R-pkg-devel] check cross-references error: Non-file
 package-anchored link(s)
In-Reply-To: <CAOO9MKVXvYvQrTdQPUM+DWENGjhwi16ORDE0BtxNoz-YwanuRg@mail.gmail.com>
References: <5F37E69B-BD3D-4B56-8B66-77E4A5EDECF3@gmail.com>
 <408847a9-ac14-c4fb-33d0-0734f180d228@gmail.com>
 <CABtg=K=c8TUAxmv1e2To5A5HHKUTQEA-tNadxUJGuA3eXh1p8A@mail.gmail.com>
 <0df3d1f3-f482-ee96-d6f5-a6aab74810b4@gmail.com>
 <CABtg=Kk2V4SWVx-MOQ32ErzS64GrtZV97ZGQ5ccU_SjpO_W_2A@mail.gmail.com>
 <8a25ba2b-3b98-e469-07e4-dfd90d76e37e@gmail.com>
 <24295.39986.892565.475924@stat.math.ethz.ch>
 <ed9be12f-5b74-ab7d-0846-2274718c881d@gmail.com>
 <CABtg=K=HG9HfUY_F+aseLrBdWQoTy8hFuDmtR1BtEXucfnegmA@mail.gmail.com>
 <HE1PR0102MB325875BEA1D1D41D3C2C07DCAE9D0@HE1PR0102MB3258.eurprd01.prod.exchangelabs.com>
 <3C1E2993-8F56-4813-B2EA-6E94B46B8C3A@uwaterloo.ca>
 <CABtg=KkXsqmK1=ao4VojsG4hvyhkaDk7ZJoK1RvrGRBGYQ5UnQ@mail.gmail.com>
 <74696BF9-331D-41A5-891A-18A8F6BD8F57@uwaterloo.ca>
 <CAOO9MKXHv_LXe0uiHWe5vjDwjuK2N9C3NHYJRT-haXmMfvg4+A@mail.gmail.com>
 <CABtg=Kkfq89ZPA+UCEoPMJZ7j4YievnYFVw08Z32O7c5CBBaXw@mail.gmail.com>
 <CAOO9MKVXvYvQrTdQPUM+DWENGjhwi16ORDE0BtxNoz-YwanuRg@mail.gmail.com>
Message-ID: <CAF8bMcauSpMGDEAjhxPDhONzwOm6nYSqCpdsJXguLV3OBtda3w@mail.gmail.com>

On Linux you can use 'ltrace' to get a list of all the environment
variables that R looks up.  E.g., do the following in 'script' so all the
output is stored in a file ('typescript') and later look around in it for
the getenv calls.

$ R-devel --debugger=ltrace --debugger-args="-f -e getenv"
...
[pid 25055] libR.so->getenv("R_HOME")
 = "/home/R/R-devel/lib/R"
[pid 25055] libR.so->getenv("R_TRANSLATIONS")
 = nil
[pid 25055] libR.so->getenv("R_PLATFORM")
 = nil
...
> tools:::.check_packages(c("testFixup_0.1.tar.gz", "--as-cran"))[pid
25055] libR.so->getenv("_R_NS_LOAD_")                                   =
nil
[pid 25055] libR.so->getenv("_R_CHECK_ELAPSED_TIMEOUT_")
  = nil
[pid 25055] libR.so->getenv("R_CHECK_ENVIRON")
  = nil
[pid 25055] libreadline.so.6->getenv("HOME")
  = "/homes/bill"
[pid 25055] libR.so->getenv("_R_CHECK_TIMINGS_")
  = nil
[pid 25055] libR.so->getenv("R_ENABLE_JIT")
 = nil
[pid 25055] libR.so->getenv("R_HOME")
 = "/home/R/R-devel/lib/R"
[pid 25055] libR.so->getenv("_R_CHECK_USE_INSTALL_LOG_")
  = nil
[pid 25055] libR.so->getenv("_R_CHECK_SUBDIRS_NOCASE_")
 = nil
[pid 25055] libR.so->getenv("_R_CHECK_ALL_NON_ISO_C_")
  = nil
... hundreds more lines ...
> q("no")


Bill Dunlap
TIBCO Software
wdunlap tibco.com


On Thu, Jul 2, 2020 at 7:24 AM Jan Gorecki <j.gorecki at wit.edu.pl> wrote:

> Thank you Gabor
>
> On Thu, Jul 2, 2020 at 10:20 AM G?bor Cs?rdi <csardi.gabor at gmail.com>
> wrote:
> >
> > You can set the _R_CHECK_XREFS_MIND_SUSPECT_ANCHORS_=true env var and
> > use R-devel.
> >
> > Alternatively, and you don't need R-devel for this, you can run R CMD
> > --html INSTALL on your package, and then look for messages that
> > contain "treated as a topic", e.g.
> >
> >     curl_fds                                html
> > Rd warning: /Users/gaborcsardi/works/processx/man/curl_fds.Rd:11: file
> > link ?multi_fdset? in package ?curl? does not exist and so has been
> > treated as a topic
> >
> > Gabor
> >
> >
> > On Thu, Jul 2, 2020 at 10:06 AM Jan Gorecki <j.gorecki at wit.edu.pl>
> wrote:
> > >
> > > Hi,
> > > What is the recommended way to test for those issues locally?
> > > If it is tested during cran submission, then seems reasonable to be
> enabled just by --as-cran switch. Is it?
> > > Thanks
> > >
> > > On Wed 17 Jun, 2020, 12:32 AM Wayne Oldford, <rwoldford at uwaterloo.ca>
> wrote:
> > >>
> > >> Thank you!
> > >>
> > >> ?-----Original Message-----
> > >> From: G?bor Cs?rdi <csardi.gabor at gmail.com>
> > >> Date: Tuesday, June 16, 2020 at 4:32 PM
> > >> To: Wayne Oldford <rwoldford at uwaterloo.ca>
> > >> Cc: List r-package-devel <r-package-devel at r-project.org>
> > >> Subject: Re: [R-pkg-devel] check cross-references error: Non-file
> package-anchored link(s)
> > >>
> > >>     This is how to look up the filename. The first "sp" is the topic
> name,
> > >>     the second is the package name.
> > >>
> > >>     > help("sp", "sp")[[1]]
> > >>     [1] "C:/Users/csard/R/win-library/4.0/sp/help/00sp"
> > >>
> > >>     So you need to link to the "00sp.Rd" file:  \link[sp:00sp]{sp}
> > >>
> > >>     Gabor
> > >>
> > >>     On Tue, Jun 16, 2020 at 9:09 PM Wayne Oldford <
> rwoldford at uwaterloo.ca> wrote:
> > >>     >
> > >>     > Hi
> > >>     >
> > >>     > I got caught by this new test this week in trying to push an
> updated release of the loon package to CRAN.
> > >>     >
> > >>     > By following this thread, I corrected my cross-references to
> external packages but I got stymied by
> > >>     > the one I hoped to give to the  "sp" package for Spatial data
> > >>     >
> > >>     > _________
> > >>     >
> > >>     > Here is the history:
> > >>     >
> > >>     > I tried
> > >>     >    \link[sp:sp]{sp}
> > >>     > which failed here:
> > >>     > Debian: <
> https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200616_162128/Debian/00check.log
> >
> > >>     > Status: 1 WARNING
> > >>     >
> > >>     >
> > >>     > That was meant to correct an earlier attempt (it did for other
> links to "scales" for example) where I had tried
> > >>     >   \link[sp]{sp}
> > >>     > and  failed here:
> > >>     > Debian: <
> https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200615_213749/Debian/00check.log
> >
> > >>     > Status: 1 WARNING
> > >>     >
> > >>     >
> > >>     > So to complete the possibilities as I understand them,  I just
> now tried
> > >>     >    \link{sp}
> > >>     > which, as might be expected, failed here:
> > >>     > Debian: <
> https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200616_213921/Debian/00check.log
> >
> > >>     > Status: 1 WARNING
> > >>     > As expected, error here was different:  "Missing  link"  as
> opposed to "Non-file package-anchored link"
> > >>     >
> > >>     > _________
> > >>     >
> > >>     >
> > >>     > I am not sure whether I have missed a subtlety in WRE or that
> the peculiar circumstance
> > >>     > where the package, the topic, and the file name are all
> identical (sp) is some weird boundary case.
> > >>     >
> > >>     > Without further advice, I think I am just going to remove the
> link to "sp".
> > >>     > It really is just a courtesy link to the package description
> for "sp".
> > >>     >
> > >>     > Thanks in advance for your thoughts.
> > >>     >
> > >>     > Wayne
> > >>     >
> > >>     >
> > >>     >
> > >>     >
> > >>     > -----Original Message-----
> > >>     > From: R-package-devel <r-package-devel-bounces at r-project.org>
> on behalf of Georgi Boshnakov <georgi.boshnakov at manchester.ac.uk>
> > >>     > Date: Tuesday, June 16, 2020 at 9:27 AM
> > >>     > To: G?bor Cs?rdi <csardi.gabor at gmail.com>, Duncan Murdoch <
> murdoch.duncan at gmail.com>
> > >>     > Cc: List r-package-devel <r-package-devel at r-project.org>
> > >>     > Subject: Re: [R-pkg-devel] check cross-references error:
> Non-file package-anchored link(s)
> > >>     >
> > >>     >     I think that the current behaviour is documented in WRE:
> > >>     >
> > >>     >     "...There are two other forms of optional argument
> specified as \link[pkg]{foo} and
> > >>     >     \link[pkg:bar]{foo} to link to the package pkg, to files
> foo.html and bar.html respectively.
> > >>     >     These are rarely needed, perhaps to refer to
> not-yet-installed packages (but there the HTML
> > >>     >     help system will resolve the link at run time) or in the
> normally undesirable event that more
> > >>     >     than one package offers help on a topic7 (in which case the
> present package has precedence so
> > >>     >     this is only needed to refer to other packages). They are
> currently only used in HTML help
> > >>     >     (and ignored for hyperlinks in LATEX conversions of help
> pages), and link to the file rather
> > >>     >     than the topic (since there is no way to know which topics
> are in which files in an uninstalled
> > >>     >     package) ...   Because they have been frequently misused,
> the HTML help system looks for topic foo in package pkg
> > >>     >     if it does not find file foo.html."
> > >>     >
> > >>     >     Unless I am missing something, it seems that it would be
> relatively painless to reverse the logic of the current behaviour of the
> help system,
> > >>     >     i.e. to start looking first for the topic and then for a
> file.
> > >>     >
> > >>     >     Georgi Boshnakov
> > >>     >
> > >>     >     -----Original Message-----
> > >>     >     From: R-package-devel <
> r-package-devel-bounces at r-project.org> On Behalf Of G?bor Cs?rdi
> > >>     >     Sent: 16 June 2020 13:44
> > >>     >     To: Duncan Murdoch <murdoch.duncan at gmail.com>
> > >>     >     Cc: List r-package-devel <r-package-devel at r-project.org>
> > >>     >     Subject: Re: [R-pkg-devel] check cross-references error:
> Non-file package-anchored link(s)
> > >>     >
> > >>     >     On Mon, Jun 15, 2020 at 5:30 PM Duncan Murdoch <
> murdoch.duncan at gmail.com> wrote:
> > >>     >     >
> > >>     >     > On 15/06/2020 12:05 p.m., Martin Maechler wrote:
> > >>     >     > >>>>>> Duncan Murdoch   on Sun, 14 Jun 2020 07:28:03
> -0400 writes:
> > >>     >     > >
> > >>     >     > >      > I agree with almost everything you wrote, except
> one thing:  this isn't
> > >>     >     > >      > newly enforced, it has been enforced since the
> help system began.  What
> > >>     >     > >      > I think is new is that there are now tests for
> it.  Previously those
> > >>     >     > >      > links just wouldn't work.
> > >>     >     > >
> > >>     >     > >      > Duncan Murdoch
> > >>     >     > >
> > >>     >     > > Yes, to all... including Duncan's agreement with G?bor.
> > >>     >     > >
> > >>     >     > > Also, Duncan M earlier did mention that he had wanted to
> > >>     >     > > *change* the link-to-file behavior for these cases
> (when he wrote
> > >>     >     > > most of the Rd2html source code) but somehow did not
> get it.
> > >>     >     >
> > >>     >     > Actually, I don't think I pushed for this change at the
> time (or at
> > >>     >     > least I didn't push much).  I just wish now that I had,
> because I
> > >>     >     > think it will be harder to do it now than it would have
> been then.
> > >>     >     >
> > >>     >     > Duncan
> > >>     >
> > >>     >     I am not entirely sure, but maybe just documenting the
> current behaviour and undoing 78674 could work. With some tweaks? E.g.
> > >>     >
> > >>     >     * updating R-exts to say that \link[pkg:topic]{text} will
> link to `topic.html` in `pkg` first (for historical reasons), and falls
> back to searching for `topic` in `pkg` at render time.
> > >>     >     * updating Rd2HTML to look for the topic and use it in the
> link, instead of throwing a warning, in it cannot find `topic.html`
> > >>     >     * removing the `R CMD check` warning for non-file links,
> that was added in 78674 :)
> > >>     >
> > >>     >     Is there anything else?
> > >>     >
> > >>     >     Gabor
> > >>     >
> > >>     >     [...]
> > >>     >
> > >>     >     ______________________________________________
> > >>     >     R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> > >>     >     ______________________________________________
> > >>     >     R-package-devel at r-project.org mailing list
> > >>     >     https://stat.ethz.ch/mailman/listinfo/r-package-devel
> > >>     >
> > >>     >
> > >>     > ______________________________________________
> > >>     > R-package-devel at r-project.org mailing list
> > >>     > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> > >>
> > >>
> > >> ______________________________________________
> > >> R-package-devel at r-project.org mailing list
> > >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From p@u|@@@v@ry @end|ng |rom un|v-|comte@|r  Fri Jul  3 10:15:29 2020
From: p@u|@@@v@ry @end|ng |rom un|v-|comte@|r (Paul SAVARY)
Date: Fri, 3 Jul 2020 10:15:29 +0200 (CEST)
Subject: [R-pkg-devel] Making possible the use of external java codes by
 downloading it
In-Reply-To: <3C1E2993-8F56-4813-B2EA-6E94B46B8C3A@uwaterloo.ca>
References: <5F37E69B-BD3D-4B56-8B66-77E4A5EDECF3@gmail.com>
 <CABtg=Kk2V4SWVx-MOQ32ErzS64GrtZV97ZGQ5ccU_SjpO_W_2A@mail.gmail.com>
 <8a25ba2b-3b98-e469-07e4-dfd90d76e37e@gmail.com>
 <24295.39986.892565.475924@stat.math.ethz.ch>
 <ed9be12f-5b74-ab7d-0846-2274718c881d@gmail.com>
 <CABtg=K=HG9HfUY_F+aseLrBdWQoTy8hFuDmtR1BtEXucfnegmA@mail.gmail.com>
 <HE1PR0102MB325875BEA1D1D41D3C2C07DCAE9D0@HE1PR0102MB3258.eurprd01.prod.exchangelabs.com>
 <3C1E2993-8F56-4813-B2EA-6E94B46B8C3A@uwaterloo.ca>
Message-ID: <45330124.94581060.1593764129400.JavaMail.zimbra@univ-fcomte.fr>

Hello everyone,

I would like to include external java codes (.jar files) to a package in order to speed up some computations.
However, this would increase the package size above 5 Mb and this code would not be working for users without java installation. 

Instead, I could include a default parameter in the function calling another R package making the same computation but more slowly. It would be best for users without java on their computer.
Besides, I could allow users to download the external java code from a stable url, and include in the R function all the arguments to launch this java code (wrapper for the java code). When downloaded, the jar file should be copied directly into the extdata directory in the user computer if possible.

Does it seem feasible to you? 

Many thanks 
Regards
Paul


From R@|ner @end|ng |rom krug@@de  Fri Jul  3 10:33:15 2020
From: R@|ner @end|ng |rom krug@@de (Rainer M Krug)
Date: Fri, 3 Jul 2020 10:33:15 +0200
Subject: [R-pkg-devel] Making possible the use of external java codes by
 downloading it
In-Reply-To: <45330124.94581060.1593764129400.JavaMail.zimbra@univ-fcomte.fr>
References: <5F37E69B-BD3D-4B56-8B66-77E4A5EDECF3@gmail.com>
 <CABtg=Kk2V4SWVx-MOQ32ErzS64GrtZV97ZGQ5ccU_SjpO_W_2A@mail.gmail.com>
 <8a25ba2b-3b98-e469-07e4-dfd90d76e37e@gmail.com>
 <24295.39986.892565.475924@stat.math.ethz.ch>
 <ed9be12f-5b74-ab7d-0846-2274718c881d@gmail.com>
 <CABtg=K=HG9HfUY_F+aseLrBdWQoTy8hFuDmtR1BtEXucfnegmA@mail.gmail.com>
 <HE1PR0102MB325875BEA1D1D41D3C2C07DCAE9D0@HE1PR0102MB3258.eurprd01.prod.exchangelabs.com>
 <3C1E2993-8F56-4813-B2EA-6E94B46B8C3A@uwaterloo.ca>
 <45330124.94581060.1593764129400.JavaMail.zimbra@univ-fcomte.fr>
Message-ID: <CB9E3E13-C558-4813-965F-59ACB9535040@krugs.de>

Please check out the recent thread "Proper CRAN way - How to handle dependency of java jar file?? About a week ago - I asked essentially the same questions.

Cheers,

Rainer



> On 3 Jul 2020, at 10:15, Paul SAVARY <paul.savary at univ-fcomte.fr> wrote:
> 
> Hello everyone,
> 
> I would like to include external java codes (.jar files) to a package in order to speed up some computations.
> However, this would increase the package size above 5 Mb and this code would not be working for users without java installation. 
> 
> Instead, I could include a default parameter in the function calling another R package making the same computation but more slowly. It would be best for users without java on their computer.
> Besides, I could allow users to download the external java code from a stable url, and include in the R function all the arguments to launch this java code (wrapper for the java code). When downloaded, the jar file should be copied directly into the extdata directory in the user computer if possible.
> 
> Does it seem feasible to you? 
> 
> Many thanks 
> Regards
> Paul
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

--
Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)

Orcid ID: 0000-0002-7490-0066

Department of Evolutionary Biology and Environmental Studies
University of Z?rich
Office Y34-J-74
Winterthurerstrasse 190
8075 Z?rich
Switzerland

Office:	+41 (0)44 635 47 64
Cell:       	+41 (0)78 630 66 57
email:      Rainer.Krug at uzh.ch
		Rainer at krugs.de
Skype:     RMkrug

PGP: 0x0F52F982




	[[alternative HTML version deleted]]


From R@|ner @end|ng |rom krug@@de  Fri Jul  3 11:15:31 2020
From: R@|ner @end|ng |rom krug@@de (Rainer M Krug)
Date: Fri, 3 Jul 2020 11:15:31 +0200
Subject: [R-pkg-devel] Making possible the use of external java codes by
 downloading it
In-Reply-To: <591372017.94667437.1593767351072.JavaMail.zimbra@univ-fcomte.fr>
References: <5F37E69B-BD3D-4B56-8B66-77E4A5EDECF3@gmail.com>
 <24295.39986.892565.475924@stat.math.ethz.ch>
 <ed9be12f-5b74-ab7d-0846-2274718c881d@gmail.com>
 <CABtg=K=HG9HfUY_F+aseLrBdWQoTy8hFuDmtR1BtEXucfnegmA@mail.gmail.com>
 <HE1PR0102MB325875BEA1D1D41D3C2C07DCAE9D0@HE1PR0102MB3258.eurprd01.prod.exchangelabs.com>
 <3C1E2993-8F56-4813-B2EA-6E94B46B8C3A@uwaterloo.ca>
 <45330124.94581060.1593764129400.JavaMail.zimbra@univ-fcomte.fr>
 <CB9E3E13-C558-4813-965F-59ACB9535040@krugs.de>
 <591372017.94667437.1593767351072.JavaMail.zimbra@univ-fcomte.fr>
Message-ID: <DBB59807-C98A-4978-A8E3-CB0A6804D1D4@krugs.de>

Pleas keep the list in CC so that they know tat you have a solution. Thanks.

There is the function ?Sys.which()? which returns the full path to an executable. Although in many cases correct, it can be that Java is installed but not in the path. So I have a variable called ?java.path? which is used when java is called - the default is set to `java.path <- Sys.which("java?)`

Plesase see https://github.com/rkrug/plantuml/blob/dev/R/aaa.R <https://github.com/rkrug/plantuml/blob/dev/R/aaa.R> and https://github.com/rkrug/plantuml/blob/dev/R/options.R <https://github.com/rkrug/plantuml/blob/dev/R/options.R> how I implemented it.



> On 3 Jul 2020, at 11:09, Paul SAVARY <paul.savary at univ-fcomte.fr> wrote:
> 
> I thank you Rainer.
> 
> Then, I think I will allow users to download the .jar file from an url into the user data directory.
> I get the path to this directory with "rappdirs::user_data_dir()".
> 
> Do you know how to check if java is installed on their machine?
> 
> I thought about using something like that:
> 
> jv <- system2("java", args = c("-version"))
> if(jv != 0){
>   stop("You have to install java on your machine.")
> }
> 
> Cheers
> Paul
> 
> De: "Rainer M Krug" <Rainer at krugs.de>
> ?: "Paul SAVARY" <paul.savary at univ-fcomte.fr>
> Cc: "r-package-devel" <r-package-devel at r-project.org>
> Envoy?: Vendredi 3 Juillet 2020 10:33:15
> Objet: Re: [R-pkg-devel] Making possible the use of external java codes by downloading it
> 
> Please check out the recent thread "Proper CRAN way - How to handle dependency of java jar file?? About a week ago - I asked essentially the same questions.
> 
> Cheers,
> 
> Rainer
> 
> 
> 
> On 3 Jul 2020, at 10:15, Paul SAVARY <paul.savary at univ-fcomte.fr <mailto:paul.savary at univ-fcomte.fr>> wrote:
> 
> Hello everyone,
> 
> I would like to include external java codes (.jar files) to a package in order to speed up some computations.
> However, this would increase the package size above 5 Mb and this code would not be working for users without java installation. 
> 
> Instead, I could include a default parameter in the function calling another R package making the same computation but more slowly. It would be best for users without java on their computer.
> Besides, I could allow users to download the external java code from a stable url, and include in the R function all the arguments to launch this java code (wrapper for the java code). When downloaded, the jar file should be copied directly into the extdata directory in the user computer if possible.
> 
> Does it seem feasible to you? 
> 
> Many thanks 
> Regards
> Paul
> 
> ______________________________________________
> R-package-devel at r-project.org <mailto:R-package-devel at r-project.org> mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
> 
> --
> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
> 
> Orcid ID: 0000-0002-7490-0066
> 
> Department of Evolutionary Biology and Environmental Studies
> University of Z?rich
> Office Y34-J-74
> Winterthurerstrasse 190
> 8075 Z?rich
> Switzerland
> 
> Office:	+41 (0)44 635 47 64
> Cell:       	+41 (0)78 630 66 57
> email: ? ? ?Rainer.Krug at uzh.ch <mailto:Rainer.Krug at uzh.ch>
> 		Rainer at krugs.de <mailto:Rainer at krugs.de>
> Skype:     RMkrug
> 
> PGP: 0x0F52F982
> 
> 
> 
> 

--
Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)

Orcid ID: 0000-0002-7490-0066

Department of Evolutionary Biology and Environmental Studies
University of Z?rich
Office Y34-J-74
Winterthurerstrasse 190
8075 Z?rich
Switzerland

Office:	+41 (0)44 635 47 64
Cell:       	+41 (0)78 630 66 57
email:      Rainer.Krug at uzh.ch
		Rainer at krugs.de
Skype:     RMkrug

PGP: 0x0F52F982




	[[alternative HTML version deleted]]


From m@rt|n@@m|th @end|ng |rom durh@m@@c@uk  Fri Jul  3 12:17:55 2020
From: m@rt|n@@m|th @end|ng |rom durh@m@@c@uk (Martin R. Smith)
Date: Fri, 3 Jul 2020 11:17:55 +0100
Subject: [R-pkg-devel] Debugging Clang ASAN errors
Message-ID: <CANotEPucEjpDT+1rJwmQBU3G_Nz9JQDopPwmynqOdtP3WtEmaA@mail.gmail.com>

A package I recently had accepted to CRAN is throwing up a "memory not
mapped" segfault on CRAN's post-acceptance fedora-clang ASAN test.  This
error does not occur with debian-clang or gcc.
(Check results:
https://cran.r-project.org/web/checks/check_results_TBRDist.html)

I found a similar issue in the r-packages archives (
https://stat.ethz.ch/pipermail/r-package-devel/2018q3/002907.html). The
suggestion in that case was that the issue may have been a false positive,
a possibility that is consistent with a "HINT" in the output log.

I optimistically suspect that this is the case here too: my package is an R
wrapper to a mature C library, and the segmentation fault arises during a
routine operation with simple input, not in some obscure corner case.  So
question one is: how might I confirm that this is indeed a false positive?

If it's not a false positive, then this raises the question of how I might
reproduce it, as a Windows user without access to a machine running Fedora.
rhub::check_with_sanitizers() uses debian, and returns 'success':
https://builder.r-hub.io/status/TBRDist_1.0.0.9000.tar.gz-b965d74e18dd4bdc8e51e4254ee3699a
Rocker (https://github.com/rocker-org/rocker) only offers a debian (not
fedora) environment, so looks like it will not reproduce the error.

Any thoughts would be gratefully received!

Thanks,

Martin


--

*Dr. Martin R. Smith*
Assistant Professor in Palaeontology
Durham University
Department of Earth Sciences
Mountjoy Site, South Road, Durham, DH1 3LE United Kingdom

*T*: +44 (0)191 334 2320
*M*: +44 (0)774 353 7510
*E*: martin.smith at durham.ac.uk

community.dur.ac.uk/martin.smith
twitter.com/PalaeoSmith

The information in this e-mail and any attachments is co...{{dropped:13}}


From |uc@r @end|ng |rom |edor@project@org  Fri Jul  3 12:36:03 2020
From: |uc@r @end|ng |rom |edor@project@org (=?UTF-8?Q?I=C3=B1aki_Ucar?=)
Date: Fri, 3 Jul 2020 12:36:03 +0200
Subject: [R-pkg-devel] Debugging Clang ASAN errors
In-Reply-To: <CANotEPucEjpDT+1rJwmQBU3G_Nz9JQDopPwmynqOdtP3WtEmaA@mail.gmail.com>
References: <CANotEPucEjpDT+1rJwmQBU3G_Nz9JQDopPwmynqOdtP3WtEmaA@mail.gmail.com>
Message-ID: <CALEXWq3Gw8bFD8D=WZyVKGuHb_wK4vYW_-bNsf6kJC95=k3CGw@mail.gmail.com>

On Fri, 3 Jul 2020 at 12:19, Martin R. Smith <martin.smith at durham.ac.uk> wrote:
>
> A package I recently had accepted to CRAN is throwing up a "memory not
> mapped" segfault on CRAN's post-acceptance fedora-clang ASAN test.  This
> error does not occur with debian-clang or gcc.
> (Check results:
> https://cran.r-project.org/web/checks/check_results_TBRDist.html)
>
> I found a similar issue in the r-packages archives (
> https://stat.ethz.ch/pipermail/r-package-devel/2018q3/002907.html). The
> suggestion in that case was that the issue may have been a false positive,
> a possibility that is consistent with a "HINT" in the output log.
>
> I optimistically suspect that this is the case here too: my package is an R
> wrapper to a mature C library, and the segmentation fault arises during a
> routine operation with simple input, not in some obscure corner case.  So
> question one is: how might I confirm that this is indeed a false positive?
>
> If it's not a false positive, then this raises the question of how I might
> reproduce it, as a Windows user without access to a machine running Fedora.
> rhub::check_with_sanitizers() uses debian, and returns 'success':
> https://builder.r-hub.io/status/TBRDist_1.0.0.9000.tar.gz-b965d74e18dd4bdc8e51e4254ee3699a
> Rocker (https://github.com/rocker-org/rocker) only offers a debian (not
> fedora) environment, so looks like it will not reproduce the error.
>
> Any thoughts would be gratefully received!

The error points to this spot:
https://github.com/ms609/uspr-r/blob/04ecc6f6d26d7db957dc7da2d7753e0cec040a92/tbr.h#L2973

If I'm reading this correctly, if the match happens at the beginning
of the loop, then this is decrementing an iterator to
sibling_pairs.begin(), which doesn't sound good. This can't really
have an impact, because there's a break afterwards, but the library
shouldn't be doing that anyway.

-- 
I?aki ?car


From @eb@meyer @end|ng |rom |@u@de  Fri Jul  3 14:24:51 2020
From: @eb@meyer @end|ng |rom |@u@de (Sebastian Meyer)
Date: Fri, 3 Jul 2020 14:24:51 +0200
Subject: [R-pkg-devel] check cross-references error: Non-file
 package-anchored link(s)
In-Reply-To: <CABtg=Kkfq89ZPA+UCEoPMJZ7j4YievnYFVw08Z32O7c5CBBaXw@mail.gmail.com>
References: <5F37E69B-BD3D-4B56-8B66-77E4A5EDECF3@gmail.com>
 <408847a9-ac14-c4fb-33d0-0734f180d228@gmail.com>
 <CABtg=K=c8TUAxmv1e2To5A5HHKUTQEA-tNadxUJGuA3eXh1p8A@mail.gmail.com>
 <0df3d1f3-f482-ee96-d6f5-a6aab74810b4@gmail.com>
 <CABtg=Kk2V4SWVx-MOQ32ErzS64GrtZV97ZGQ5ccU_SjpO_W_2A@mail.gmail.com>
 <8a25ba2b-3b98-e469-07e4-dfd90d76e37e@gmail.com>
 <24295.39986.892565.475924@stat.math.ethz.ch>
 <ed9be12f-5b74-ab7d-0846-2274718c881d@gmail.com>
 <CABtg=K=HG9HfUY_F+aseLrBdWQoTy8hFuDmtR1BtEXucfnegmA@mail.gmail.com>
 <HE1PR0102MB325875BEA1D1D41D3C2C07DCAE9D0@HE1PR0102MB3258.eurprd01.prod.exchangelabs.com>
 <3C1E2993-8F56-4813-B2EA-6E94B46B8C3A@uwaterloo.ca>
 <CABtg=KkXsqmK1=ao4VojsG4hvyhkaDk7ZJoK1RvrGRBGYQ5UnQ@mail.gmail.com>
 <74696BF9-331D-41A5-891A-18A8F6BD8F57@uwaterloo.ca>
 <CAOO9MKXHv_LXe0uiHWe5vjDwjuK2N9C3NHYJRT-haXmMfvg4+A@mail.gmail.com>
 <CABtg=Kkfq89ZPA+UCEoPMJZ7j4YievnYFVw08Z32O7c5CBBaXw@mail.gmail.com>
Message-ID: <460be38f-d4c0-387a-fb75-ae50b437169e@fau.de>

Has the discussion about potential updates to Rd2HTML come to an end?
Should I be prepared to fix non-file package-anchored links in
(non-roxygen) packages I maintain, i.e., look up the help file structure
of the referenced packages?

I don't yet believe that R has really given up on supporting
developer-friendly, direct and simple links to

             _topic_       rather than            _file_

\link[rgeos]{gIntersection}     -> \link[rgeos]{topo-bin-gIntersection}

\link[colorspace]{heat_hcl}     -> \link[colorspace]{rainbow_hcl}

\link[RColorBrewer]{brewer.pal} -> \link[RColorBrewer]{ColorBrewer}

\link[gridExtra]{grid.arrange}  -> link[gridExtra]{arrangeGrob}

\link[ggplot2]{geom_line}       -> \link[ggplot2]{geom_path}

for pointing to other packages which are only in Suggests and thus not
necessarily installed at install-time of the referencing package.

Topic-based links to external functions are so much more intuitive. I do
not understand why there should be a penalty for clearly identifying the
target package as opposed to just writing \link{topic} and hoping that
the intended package will be found by the help system at run time.

	Sebastian


Am 02.07.20 um 11:20 schrieb G?bor Cs?rdi:
> You can set the _R_CHECK_XREFS_MIND_SUSPECT_ANCHORS_=true env var and
> use R-devel.
> 
> Alternatively, and you don't need R-devel for this, you can run R CMD
> --html INSTALL on your package, and then look for messages that
> contain "treated as a topic", e.g.
> 
>     curl_fds                                html
> Rd warning: /Users/gaborcsardi/works/processx/man/curl_fds.Rd:11: file
> link ?multi_fdset? in package ?curl? does not exist and so has been
> treated as a topic
> 
> Gabor
> 
> 
> On Thu, Jul 2, 2020 at 10:06 AM Jan Gorecki <j.gorecki at wit.edu.pl> wrote:
>>
>> Hi,
>> What is the recommended way to test for those issues locally?
>> If it is tested during cran submission, then seems reasonable to be enabled just by --as-cran switch. Is it?
>> Thanks
>>
>> On Wed 17 Jun, 2020, 12:32 AM Wayne Oldford, <rwoldford at uwaterloo.ca> wrote:
>>>
>>> Thank you!
>>>
>>> ?-----Original Message-----
>>> From: G?bor Cs?rdi <csardi.gabor at gmail.com>
>>> Date: Tuesday, June 16, 2020 at 4:32 PM
>>> To: Wayne Oldford <rwoldford at uwaterloo.ca>
>>> Cc: List r-package-devel <r-package-devel at r-project.org>
>>> Subject: Re: [R-pkg-devel] check cross-references error: Non-file package-anchored link(s)
>>>
>>>     This is how to look up the filename. The first "sp" is the topic name,
>>>     the second is the package name.
>>>
>>>     > help("sp", "sp")[[1]]
>>>     [1] "C:/Users/csard/R/win-library/4.0/sp/help/00sp"
>>>
>>>     So you need to link to the "00sp.Rd" file:  \link[sp:00sp]{sp}
>>>
>>>     Gabor
>>>
>>>     On Tue, Jun 16, 2020 at 9:09 PM Wayne Oldford <rwoldford at uwaterloo.ca> wrote:
>>>     >
>>>     > Hi
>>>     >
>>>     > I got caught by this new test this week in trying to push an updated release of the loon package to CRAN.
>>>     >
>>>     > By following this thread, I corrected my cross-references to external packages but I got stymied by
>>>     > the one I hoped to give to the  "sp" package for Spatial data
>>>     >
>>>     > _________
>>>     >
>>>     > Here is the history:
>>>     >
>>>     > I tried
>>>     >    \link[sp:sp]{sp}
>>>     > which failed here:
>>>     > Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200616_162128/Debian/00check.log>
>>>     > Status: 1 WARNING
>>>     >
>>>     >
>>>     > That was meant to correct an earlier attempt (it did for other links to "scales" for example) where I had tried
>>>     >   \link[sp]{sp}
>>>     > and  failed here:
>>>     > Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200615_213749/Debian/00check.log>
>>>     > Status: 1 WARNING
>>>     >
>>>     >
>>>     > So to complete the possibilities as I understand them,  I just now tried
>>>     >    \link{sp}
>>>     > which, as might be expected, failed here:
>>>     > Debian: <https://win-builder.r-project.org/incoming_pretest/loon_1.3.1_20200616_213921/Debian/00check.log>
>>>     > Status: 1 WARNING
>>>     > As expected, error here was different:  "Missing  link"  as opposed to "Non-file package-anchored link"
>>>     >
>>>     > _________
>>>     >
>>>     >
>>>     > I am not sure whether I have missed a subtlety in WRE or that the peculiar circumstance
>>>     > where the package, the topic, and the file name are all identical (sp) is some weird boundary case.
>>>     >
>>>     > Without further advice, I think I am just going to remove the link to "sp".
>>>     > It really is just a courtesy link to the package description for "sp".
>>>     >
>>>     > Thanks in advance for your thoughts.
>>>     >
>>>     > Wayne
>>>     >
>>>     >
>>>     >
>>>     >
>>>     > -----Original Message-----
>>>     > From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Georgi Boshnakov <georgi.boshnakov at manchester.ac.uk>
>>>     > Date: Tuesday, June 16, 2020 at 9:27 AM
>>>     > To: G?bor Cs?rdi <csardi.gabor at gmail.com>, Duncan Murdoch <murdoch.duncan at gmail.com>
>>>     > Cc: List r-package-devel <r-package-devel at r-project.org>
>>>     > Subject: Re: [R-pkg-devel] check cross-references error: Non-file package-anchored link(s)
>>>     >
>>>     >     I think that the current behaviour is documented in WRE:
>>>     >
>>>     >     "...There are two other forms of optional argument specified as \link[pkg]{foo} and
>>>     >     \link[pkg:bar]{foo} to link to the package pkg, to files foo.html and bar.html respectively.
>>>     >     These are rarely needed, perhaps to refer to not-yet-installed packages (but there the HTML
>>>     >     help system will resolve the link at run time) or in the normally undesirable event that more
>>>     >     than one package offers help on a topic7 (in which case the present package has precedence so
>>>     >     this is only needed to refer to other packages). They are currently only used in HTML help
>>>     >     (and ignored for hyperlinks in LATEX conversions of help pages), and link to the file rather
>>>     >     than the topic (since there is no way to know which topics are in which files in an uninstalled
>>>     >     package) ...   Because they have been frequently misused, the HTML help system looks for topic foo in package pkg
>>>     >     if it does not find file foo.html."
>>>     >
>>>     >     Unless I am missing something, it seems that it would be relatively painless to reverse the logic of the current behaviour of the help system,
>>>     >     i.e. to start looking first for the topic and then for a file.
>>>     >
>>>     >     Georgi Boshnakov
>>>     >
>>>     >     -----Original Message-----
>>>     >     From: R-package-devel <r-package-devel-bounces at r-project.org> On Behalf Of G?bor Cs?rdi
>>>     >     Sent: 16 June 2020 13:44
>>>     >     To: Duncan Murdoch <murdoch.duncan at gmail.com>
>>>     >     Cc: List r-package-devel <r-package-devel at r-project.org>
>>>     >     Subject: Re: [R-pkg-devel] check cross-references error: Non-file package-anchored link(s)
>>>     >
>>>     >     On Mon, Jun 15, 2020 at 5:30 PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>>>     >     >
>>>     >     > On 15/06/2020 12:05 p.m., Martin Maechler wrote:
>>>     >     > >>>>>> Duncan Murdoch   on Sun, 14 Jun 2020 07:28:03 -0400 writes:
>>>     >     > >
>>>     >     > >      > I agree with almost everything you wrote, except one thing:  this isn't
>>>     >     > >      > newly enforced, it has been enforced since the help system began.  What
>>>     >     > >      > I think is new is that there are now tests for it.  Previously those
>>>     >     > >      > links just wouldn't work.
>>>     >     > >
>>>     >     > >      > Duncan Murdoch
>>>     >     > >
>>>     >     > > Yes, to all... including Duncan's agreement with G?bor.
>>>     >     > >
>>>     >     > > Also, Duncan M earlier did mention that he had wanted to
>>>     >     > > *change* the link-to-file behavior for these cases (when he wrote
>>>     >     > > most of the Rd2html source code) but somehow did not get it.
>>>     >     >
>>>     >     > Actually, I don't think I pushed for this change at the time (or at
>>>     >     > least I didn't push much).  I just wish now that I had, because I
>>>     >     > think it will be harder to do it now than it would have been then.
>>>     >     >
>>>     >     > Duncan
>>>     >
>>>     >     I am not entirely sure, but maybe just documenting the current behaviour and undoing 78674 could work. With some tweaks? E.g.
>>>     >
>>>     >     * updating R-exts to say that \link[pkg:topic]{text} will link to `topic.html` in `pkg` first (for historical reasons), and falls back to searching for `topic` in `pkg` at render time.
>>>     >     * updating Rd2HTML to look for the topic and use it in the link, instead of throwing a warning, in it cannot find `topic.html`
>>>     >     * removing the `R CMD check` warning for non-file links, that was added in 78674 :)
>>>     >
>>>     >     Is there anything else?
>>>     >
>>>     >     Gabor
>>>     >
>>>     >     [...]
>>>     >
>>>     >     ______________________________________________
>>>     >     R-package-devel at r-project.org mailing list https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>     >     ______________________________________________
>>>     >     R-package-devel at r-project.org mailing list
>>>     >     https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>     >
>>>     >
>>>     > ______________________________________________
>>>     > R-package-devel at r-project.org mailing list
>>>     > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From |@|@ye @end|ng |rom un@w@edu@@u  Fri Jul  3 02:15:27 2020
From: |@|@ye @end|ng |rom un@w@edu@@u (Pierre Lafaye de Micheaux)
Date: Fri, 3 Jul 2020 00:15:27 +0000
Subject: [R-pkg-devel] =?windows-1252?q?warning=3A_type_of_=91zhpevx=5F?=
 =?windows-1252?q?=92_does_not_match_original_declaration_=5B-Wlto-type-mi?=
 =?windows-1252?q?smatch=5D?=
Message-ID: <SYCPR01MB527838C6205A60D005883DE6936D0@SYCPR01MB5278.ausprd01.prod.outlook.com>

Dear all,

The problem:
I struggle to solve a WARNING that is shown on the CRAN system but not on my side when I use "R-devel check --as-cran IndependenceTests". This seems to be related to the declaration of a LAPACK Fortran subroutine (zhpevx) that I call from C.

I could not find any hint on Google allowing me to solve the issue. I read the following sections of the "Writing R Extensions" manual (but could not understand how to solve the problem):

  *   4.5 Using Link Time Optimization
  *   6.6 Calling C from Fortran and vice versa

Maybe the solution is obvious, but not to me.

The warning shown on CRAN is:
checking whether package ?IndependenceTests? can be installed ...
[11s/11s] WARNING
Found the following significant warnings:
    myzhpevx.cpp:13:23: warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]

Other feedback I received from the CRAN team:
Professor Brian Ripley suggested the two pieces of advice below (which I believe to have followed):

  *   For registering/interfacing Fortran calls,
       gfortran -c -fc-prototypes-external
is the best way to extract a prototype (with gfortran >= 9.2).  If this
includes int_least32_t, see the comment below on Fortran-LOGICAL.
hint).
  *
 Fortran subroutines correspond to C void functions

What is the current state of my source code:
I have a Fortran subroutine (defined in the file src/zhpevx.f at line 232):
      SUBROUTINE zhpevx( JOBZ, RANGE, UPLO, N, AP, VL, VU, IL, IU,
     $     abstol, m, w, z, ldz, work, rwork, iwork,
     $     ifail, info )

This subroutine is declared (in file myzhpevx.cpp at line 13) as follows:
          void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
      const int *n, Rcomplex *ap, const double *vl,
      const double *vu, const int *il, const int *iu,
      const double *abstol, int *m, double *w,
      Rcomplex *z, const int *ldz, Rcomplex *work, double *rwork,
      int *iwork, int *ifail, int *info,
      FC_LEN_T jobz_len,  FC_LEN_T range_len,  FC_LEN_T uplo_len);

Source package can be downloaded here:
http://biostatisticien.eu/IndependenceTests_0.5.tar.gz

My system:
Linux Debian 10 Buster
Last version of R-devel

Many thanks in advance for your help.

Best regards,

Pierre Lafaye de Micheaux

Associate Professor UNSW Sydney
Co-op Academic Coordinator for Data Science & Decisions and Advanced Maths

Tel.: (00.[+612]) 9385 7029                                      School of Mathematics and Statistics
http://web.maths.unsw.edu.au/~lafaye/            UNSW Sydney, NSW 2052, AUSTRALIA

Beginning of all science is the surprise that things are what they are (Aristotle). C'est par l'exemple et la coh?rence qu'on arrive ? convaincre (P. Rabhi).

	[[alternative HTML version deleted]]


From @t@t@pnu @end|ng |rom gm@||@com  Sat Jul  4 14:46:09 2020
From: @t@t@pnu @end|ng |rom gm@||@com (Applied Statistics Laboratory)
Date: Sat, 4 Jul 2020 21:46:09 +0900
Subject: [R-pkg-devel] NOTE from checking for detritus in the temp directory
Message-ID: <CAGfdMNsmcHkACPz2JS2F6GkqEhfvDkKMBK2xxPFV1C+0B49h3g@mail.gmail.com>

Dear All,

I got a NOTE from CRAN:







** checking for detritus in the temp directory ... NOTEFound the following
files/directories:  ?calibre_4.99.6_tmp_lezpx205?
?calibre_4.99.6_tmp_mzjswhrh?  ?calibre_4.99.6_tmp_zc8txrmi?
?calibre_4.99.6_tmp_zw0pp8wj?* DONEStatus: 1 NOTE*
Here is the log file for the CRAN check. (At the bottom, you can find the
above NOTE.)

https://win-builder.r-project.org/incoming_pretest/rQCC_1.20.7_20200702_112950/Debian/00check.log



When I checked my package, there was no detritus in the temp dir. I tested
my package using the command below:

 > rhub::platforms()
 > rhub::check_for_cran(platforms = "debian-clang-devel")
 > rhub::check_for_cran(platforms = "debian-gcc-devel" )
 > rhub::check_for_cran(platforms = "debian-gcc-devel-nold" )
 > rhub::check_for_cran(platforms = "debian-gcc-patched" )
 > rhub::check_for_cran(platforms = "debian-gcc-release" )

As shown below, it says "OK"

https://artifacts.r-hub.io/rQCC_1.20.7.tar.gz-66c588542824483db19cdc9130c715c4/

Please help me if you know how to fix the detritus issue in the temp dir.

Thanks,
CP

	[[alternative HTML version deleted]]


From c@@rd|@g@bor @end|ng |rom gm@||@com  Sat Jul  4 14:48:03 2020
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Sat, 4 Jul 2020 13:48:03 +0100
Subject: [R-pkg-devel] 
 NOTE from checking for detritus in the temp directory
In-Reply-To: <CAGfdMNsmcHkACPz2JS2F6GkqEhfvDkKMBK2xxPFV1C+0B49h3g@mail.gmail.com>
References: <CAGfdMNsmcHkACPz2JS2F6GkqEhfvDkKMBK2xxPFV1C+0B49h3g@mail.gmail.com>
Message-ID: <CABtg=K=aX5NEfgiOF-0Uxa4qr=i_7ek2OHVkshvBov6mnRybfA@mail.gmail.com>

Most likely this is because you start a web browser in your examples
or tests. Try to find where that happens, and don't run it that
example or test case on CRAN.

Gabor

On Sat, Jul 4, 2020 at 1:46 PM Applied Statistics Laboratory
<stat.pnu at gmail.com> wrote:
>
> Dear All,
>
> I got a NOTE from CRAN:
>
>
>
>
>
>
>
> ** checking for detritus in the temp directory ... NOTEFound the following
> files/directories:  ?calibre_4.99.6_tmp_lezpx205?
> ?calibre_4.99.6_tmp_mzjswhrh?  ?calibre_4.99.6_tmp_zc8txrmi?
> ?calibre_4.99.6_tmp_zw0pp8wj?* DONEStatus: 1 NOTE*
> Here is the log file for the CRAN check. (At the bottom, you can find the
> above NOTE.)
>
> https://win-builder.r-project.org/incoming_pretest/rQCC_1.20.7_20200702_112950/Debian/00check.log
>
>
>
> When I checked my package, there was no detritus in the temp dir. I tested
> my package using the command below:
>
>  > rhub::platforms()
>  > rhub::check_for_cran(platforms = "debian-clang-devel")
>  > rhub::check_for_cran(platforms = "debian-gcc-devel" )
>  > rhub::check_for_cran(platforms = "debian-gcc-devel-nold" )
>  > rhub::check_for_cran(platforms = "debian-gcc-patched" )
>  > rhub::check_for_cran(platforms = "debian-gcc-release" )
>
> As shown below, it says "OK"
>
> https://artifacts.r-hub.io/rQCC_1.20.7.tar.gz-66c588542824483db19cdc9130c715c4/
>
> Please help me if you know how to fix the detritus issue in the temp dir.
>
> Thanks,
> CP
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From @t@t@pnu @end|ng |rom gm@||@com  Sun Jul  5 01:51:40 2020
From: @t@t@pnu @end|ng |rom gm@||@com (Applied Statistics Laboratory)
Date: Sun, 5 Jul 2020 08:51:40 +0900
Subject: [R-pkg-devel] 
 NOTE from checking for detritus in the temp directory
In-Reply-To: <CABtg=K=aX5NEfgiOF-0Uxa4qr=i_7ek2OHVkshvBov6mnRybfA@mail.gmail.com>
References: <CAGfdMNsmcHkACPz2JS2F6GkqEhfvDkKMBK2xxPFV1C+0B49h3g@mail.gmail.com>
 <CABtg=K=aX5NEfgiOF-0Uxa4qr=i_7ek2OHVkshvBov6mnRybfA@mail.gmail.com>
Message-ID: <CAGfdMNvgYh0Q5=UCpTmScVKudn8Suu04Fb56w2naz1rNm-8xUg@mail.gmail.com>

Thanks G?bor,

I removed all the URLs in the *.Rd files and resubmitted to CRAN.

I got the same NOTE again as below:

After removing the URLs in the *.Rd :
https://win-builder.r-project.org/incoming_pretest/rQCC_1.20.7_20200704_161730/Debian/00check.log


Just in case, the below is the NOTE before removing the ULRs in the Rd:
https://win-builder.r-project.org/incoming_pretest/rQCC_1.20.7_20200702_112950/Debian/00check.log


I have this trouble after adding vignettes.
So my guess is that this NOTE may be from vignette.
I checked the package using  rhub::check_for_cran  with all the platforms.
They do not have this kind of issue.
Only CRAN produces this NOTE. My vignette is written in *.Rnw (essentially
the same as LaTeX format).
When the vignette file is compiled, some aux files are generated. So, I
think that CRAN may not delete aux files properly.

Thanks,
CP



On Sat, Jul 4, 2020 at 9:48 PM G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:

> Most likely this is because you start a web browser in your examples
> or tests. Try to find where that happens, and don't run it that
> example or test case on CRAN.
>
> Gabor
>
> On Sat, Jul 4, 2020 at 1:46 PM Applied Statistics Laboratory
> <stat.pnu at gmail.com> wrote:
> >
> > Dear All,
> >
> > I got a NOTE from CRAN:
> >
> >
> >
> >
> >
> >
> >
> > ** checking for detritus in the temp directory ... NOTEFound the
> following
> > files/directories:  ?calibre_4.99.6_tmp_lezpx205?
> > ?calibre_4.99.6_tmp_mzjswhrh?  ?calibre_4.99.6_tmp_zc8txrmi?
> > ?calibre_4.99.6_tmp_zw0pp8wj?* DONEStatus: 1 NOTE*
> > Here is the log file for the CRAN check. (At the bottom, you can find the
> > above NOTE.)
> >
> >
> https://win-builder.r-project.org/incoming_pretest/rQCC_1.20.7_20200702_112950/Debian/00check.log
> >
> >
> >
> > When I checked my package, there was no detritus in the temp dir. I
> tested
> > my package using the command below:
> >
> >  > rhub::platforms()
> >  > rhub::check_for_cran(platforms = "debian-clang-devel")
> >  > rhub::check_for_cran(platforms = "debian-gcc-devel" )
> >  > rhub::check_for_cran(platforms = "debian-gcc-devel-nold" )
> >  > rhub::check_for_cran(platforms = "debian-gcc-patched" )
> >  > rhub::check_for_cran(platforms = "debian-gcc-release" )
> >
> > As shown below, it says "OK"
> >
> >
> https://artifacts.r-hub.io/rQCC_1.20.7.tar.gz-66c588542824483db19cdc9130c715c4/
> >
> > Please help me if you know how to fix the detritus issue in the temp dir.
> >
> > Thanks,
> > CP
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


-- 
Applied Statistics Laboratory

https://sites.google.com/view/appliedstatlab

	[[alternative HTML version deleted]]


From c@@rd|@g@bor @end|ng |rom gm@||@com  Sun Jul  5 02:52:10 2020
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Sun, 5 Jul 2020 01:52:10 +0100
Subject: [R-pkg-devel] 
 NOTE from checking for detritus in the temp directory
In-Reply-To: <CAGfdMNvgYh0Q5=UCpTmScVKudn8Suu04Fb56w2naz1rNm-8xUg@mail.gmail.com>
References: <CAGfdMNsmcHkACPz2JS2F6GkqEhfvDkKMBK2xxPFV1C+0B49h3g@mail.gmail.com>
 <CABtg=K=aX5NEfgiOF-0Uxa4qr=i_7ek2OHVkshvBov6mnRybfA@mail.gmail.com>
 <CAGfdMNvgYh0Q5=UCpTmScVKudn8Suu04Fb56w2naz1rNm-8xUg@mail.gmail.com>
Message-ID: <CABtg=K=yCMHs3yhdGHq1wudwM-VG=CS0y4S9F38v1xFTM6OKfw@mail.gmail.com>

URLs are fine, the problem is with opening external programs like a
web browser or a PDF viewer. I think you do that here:

https://github.com/AppliedStat/R/blob/8e4173da8917caf0f4f68d4056902075fb9013c2/rQCC/man/factors.cc.Rd#L118
https://github.com/AppliedStat/R/blob/8e4173da8917caf0f4f68d4056902075fb9013c2/rQCC/man/rcc.Rd#L297

Maybe at other places as well.

If you want to open the vignette from the example, maybe you can try
something like

if (interactive()) vignette("factors.cc", package="rQCC")

so it does not run in R CMD check.

Gabor

On Sun, Jul 5, 2020 at 12:51 AM Applied Statistics Laboratory
<stat.pnu at gmail.com> wrote:
>
> Thanks G?bor,
>
> I removed all the URLs in the *.Rd files and resubmitted to CRAN.
>
> I got the same NOTE again as below:
>
> After removing the URLs in the *.Rd :
> https://win-builder.r-project.org/incoming_pretest/rQCC_1.20.7_20200704_161730/Debian/00check.log
>
> Just in case, the below is the NOTE before removing the ULRs in the Rd:
> https://win-builder.r-project.org/incoming_pretest/rQCC_1.20.7_20200702_112950/Debian/00check.log
>
> I have this trouble after adding vignettes.
> So my guess is that this NOTE may be from vignette.
> I checked the package using  rhub::check_for_cran  with all the platforms. They do not have this kind of issue.
> Only CRAN produces this NOTE. My vignette is written in *.Rnw (essentially the same as LaTeX format).
> When the vignette file is compiled, some aux files are generated. So, I think that CRAN may not delete aux files properly.
>
> Thanks,
> CP
>
>
>
> On Sat, Jul 4, 2020 at 9:48 PM G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:
>>
>> Most likely this is because you start a web browser in your examples
>> or tests. Try to find where that happens, and don't run it that
>> example or test case on CRAN.
>>
>> Gabor
>>
>> On Sat, Jul 4, 2020 at 1:46 PM Applied Statistics Laboratory
>> <stat.pnu at gmail.com> wrote:
>> >
>> > Dear All,
>> >
>> > I got a NOTE from CRAN:
>> >
>> >
>> >
>> >
>> >
>> >
>> >
>> > ** checking for detritus in the temp directory ... NOTEFound the following
>> > files/directories:  ?calibre_4.99.6_tmp_lezpx205?
>> > ?calibre_4.99.6_tmp_mzjswhrh?  ?calibre_4.99.6_tmp_zc8txrmi?
>> > ?calibre_4.99.6_tmp_zw0pp8wj?* DONEStatus: 1 NOTE*
>> > Here is the log file for the CRAN check. (At the bottom, you can find the
>> > above NOTE.)
>> >
>> > https://win-builder.r-project.org/incoming_pretest/rQCC_1.20.7_20200702_112950/Debian/00check.log
>> >
>> >
>> >
>> > When I checked my package, there was no detritus in the temp dir. I tested
>> > my package using the command below:
>> >
>> >  > rhub::platforms()
>> >  > rhub::check_for_cran(platforms = "debian-clang-devel")
>> >  > rhub::check_for_cran(platforms = "debian-gcc-devel" )
>> >  > rhub::check_for_cran(platforms = "debian-gcc-devel-nold" )
>> >  > rhub::check_for_cran(platforms = "debian-gcc-patched" )
>> >  > rhub::check_for_cran(platforms = "debian-gcc-release" )
>> >
>> > As shown below, it says "OK"
>> >
>> > https://artifacts.r-hub.io/rQCC_1.20.7.tar.gz-66c588542824483db19cdc9130c715c4/
>> >
>> > Please help me if you know how to fix the detritus issue in the temp dir.
>> >
>> > Thanks,
>> > CP
>> >
>> >         [[alternative HTML version deleted]]
>> >
>> > ______________________________________________
>> > R-package-devel at r-project.org mailing list
>> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>
>
> --
> Applied Statistics Laboratory
>
> https://sites.google.com/view/appliedstatlab


From @t@tpnu @end|ng |rom gm@||@com  Sun Jul  5 07:32:37 2020
From: @t@tpnu @end|ng |rom gm@||@com (Applied Statistics Laboratory)
Date: Sun, 5 Jul 2020 14:32:37 +0900
Subject: [R-pkg-devel] 
 NOTE from checking for detritus in the temp directory
In-Reply-To: <CABtg=K=yCMHs3yhdGHq1wudwM-VG=CS0y4S9F38v1xFTM6OKfw@mail.gmail.com>
References: <CAGfdMNsmcHkACPz2JS2F6GkqEhfvDkKMBK2xxPFV1C+0B49h3g@mail.gmail.com>
 <CABtg=K=aX5NEfgiOF-0Uxa4qr=i_7ek2OHVkshvBov6mnRybfA@mail.gmail.com>
 <CAGfdMNvgYh0Q5=UCpTmScVKudn8Suu04Fb56w2naz1rNm-8xUg@mail.gmail.com>
 <CABtg=K=yCMHs3yhdGHq1wudwM-VG=CS0y4S9F38v1xFTM6OKfw@mail.gmail.com>
Message-ID: <CAGfdMNvOdgfDcp2BnDCnsuRFEGGt8WC9U=qudvvubOKHwN9m7A@mail.gmail.com>

Dear G?bor,

Thanks so much for your suggestions. Now my problems are solved.

Best wishes,
CP


On Sun, Jul 5, 2020 at 9:52 AM G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:

> URLs are fine, the problem is with opening external programs like a
> web browser or a PDF viewer. I think you do that here:
>
>
> https://github.com/AppliedStat/R/blob/8e4173da8917caf0f4f68d4056902075fb9013c2/rQCC/man/factors.cc.Rd#L118
>
> https://github.com/AppliedStat/R/blob/8e4173da8917caf0f4f68d4056902075fb9013c2/rQCC/man/rcc.Rd#L297
>
> Maybe at other places as well.
>
> If you want to open the vignette from the example, maybe you can try
> something like
>
> if (interactive()) vignette("factors.cc", package="rQCC")
>
> so it does not run in R CMD check.
>
> Gabor
>
> On Sun, Jul 5, 2020 at 12:51 AM Applied Statistics Laboratory
> <stat.pnu at gmail.com> wrote:
> >
> > Thanks G?bor,
> >
> > I removed all the URLs in the *.Rd files and resubmitted to CRAN.
> >
> > I got the same NOTE again as below:
> >
> > After removing the URLs in the *.Rd :
> >
> https://win-builder.r-project.org/incoming_pretest/rQCC_1.20.7_20200704_161730/Debian/00check.log
> >
> > Just in case, the below is the NOTE before removing the ULRs in the Rd:
> >
> https://win-builder.r-project.org/incoming_pretest/rQCC_1.20.7_20200702_112950/Debian/00check.log
> >
> > I have this trouble after adding vignettes.
> > So my guess is that this NOTE may be from vignette.
> > I checked the package using  rhub::check_for_cran  with all the
> platforms. They do not have this kind of issue.
> > Only CRAN produces this NOTE. My vignette is written in *.Rnw
> (essentially the same as LaTeX format).
> > When the vignette file is compiled, some aux files are generated. So, I
> think that CRAN may not delete aux files properly.
> >
> > Thanks,
> > CP
> >
> >
> >
> > On Sat, Jul 4, 2020 at 9:48 PM G?bor Cs?rdi <csardi.gabor at gmail.com>
> wrote:
> >>
> >> Most likely this is because you start a web browser in your examples
> >> or tests. Try to find where that happens, and don't run it that
> >> example or test case on CRAN.
> >>
> >> Gabor
> >>
> >> On Sat, Jul 4, 2020 at 1:46 PM Applied Statistics Laboratory
> >> <stat.pnu at gmail.com> wrote:
> >> >
> >> > Dear All,
> >> >
> >> > I got a NOTE from CRAN:
> >> >
> >> >
> >> >
> >> >
> >> >
> >> >
> >> >
> >> > ** checking for detritus in the temp directory ... NOTEFound the
> following
> >> > files/directories:  ?calibre_4.99.6_tmp_lezpx205?
> >> > ?calibre_4.99.6_tmp_mzjswhrh?  ?calibre_4.99.6_tmp_zc8txrmi?
> >> > ?calibre_4.99.6_tmp_zw0pp8wj?* DONEStatus: 1 NOTE*
> >> > Here is the log file for the CRAN check. (At the bottom, you can find
> the
> >> > above NOTE.)
> >> >
> >> >
> https://win-builder.r-project.org/incoming_pretest/rQCC_1.20.7_20200702_112950/Debian/00check.log
> >> >
> >> >
> >> >
> >> > When I checked my package, there was no detritus in the temp dir. I
> tested
> >> > my package using the command below:
> >> >
> >> >  > rhub::platforms()
> >> >  > rhub::check_for_cran(platforms = "debian-clang-devel")
> >> >  > rhub::check_for_cran(platforms = "debian-gcc-devel" )
> >> >  > rhub::check_for_cran(platforms = "debian-gcc-devel-nold" )
> >> >  > rhub::check_for_cran(platforms = "debian-gcc-patched" )
> >> >  > rhub::check_for_cran(platforms = "debian-gcc-release" )
> >> >
> >> > As shown below, it says "OK"
> >> >
> >> >
> https://artifacts.r-hub.io/rQCC_1.20.7.tar.gz-66c588542824483db19cdc9130c715c4/
> >> >
> >> > Please help me if you know how to fix the detritus issue in the temp
> dir.
> >> >
> >> > Thanks,
> >> > CP
> >> >
> >> >         [[alternative HTML version deleted]]
> >> >
> >> > ______________________________________________
> >> > R-package-devel at r-project.org mailing list
> >> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
> >
> >
> > --
> > Applied Statistics Laboratory
> >
> > https://sites.google.com/view/appliedstatlab
>

	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Mon Jul  6 22:11:57 2020
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Mon, 6 Jul 2020 23:11:57 +0300
Subject: [R-pkg-devel] 
 =?utf-8?b?d2FybmluZzogdHlwZSBvZiDigJh6aHBldnhf4oCZ?=
 =?utf-8?q?_does_not_match_original_declaration_=5B-Wlto-type-mismatch=5D?=
In-Reply-To: <SYCPR01MB527838C6205A60D005883DE6936D0@SYCPR01MB5278.ausprd01.prod.outlook.com>
References: <SYCPR01MB527838C6205A60D005883DE6936D0@SYCPR01MB5278.ausprd01.prod.outlook.com>
Message-ID: <20200706231157.22ed7b92@trisector>

On Fri, 3 Jul 2020 00:15:27 +0000
Pierre Lafaye de Micheaux <lafaye at unsw.edu.au> wrote:

>Found the following significant warnings:
>    myzhpevx.cpp:13:23: warning: type of _zhpevx__ does not match
> original declaration [-Wlto-type-mismatch]

I managed to reproduce the warning on R-devel r78607 built with
--enable-lto using gcc version 6.3.0 20170516 (Debian 6.3.0-18+deb9u1):

myzhpevx.cpp:13:16: warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
           void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
                ^
zhpevx.f:232:7: note: type mismatch in parameter 20
       SUBROUTINE zhpevx( JOBZ, RANGE, UPLO, N, AP, VL, VU, IL, IU,
       ^
zhpevx.f:232:7: note: type ?int? should match type ?size_t?
/usr/lib/gcc/x86_64-linux-gnu/6/include/stddef.h:216:23: note: the incompatible type is defined here
 typedef __SIZE_TYPE__ size_t;
                       ^
zhpevx.f:232:7: note: ?zhpevx? was previously declared here
       SUBROUTINE zhpevx( JOBZ, RANGE, UPLO, N, AP, VL, VU, IL, IU,
       ^

Do you have access to the notes produced by the compiler in addition
to the warnings? Do they spell the same difference?

If yes, the warning is likely to be safe to ignore. m4/R.m4 notes that,
while gfortran < 8 uses int instead of size_t for hidden size arguments,
it doesn't make a practical difference.

-- 
Best regards,
Ivan


From |@|@ye @end|ng |rom un@w@edu@@u  Tue Jul  7 00:13:01 2020
From: |@|@ye @end|ng |rom un@w@edu@@u (Pierre Lafaye de Micheaux)
Date: Mon, 6 Jul 2020 22:13:01 +0000
Subject: [R-pkg-devel] 
 =?windows-1252?q?warning=3A_type_of_=91zhpevx=5F?=
 =?windows-1252?q?=92_does_not_match_original_declaration_=5B-Wlto-type-mi?=
 =?windows-1252?q?smatch=5D?=
In-Reply-To: <20200706231157.22ed7b92@trisector>
References: <SYCPR01MB527838C6205A60D005883DE6936D0@SYCPR01MB5278.ausprd01.prod.outlook.com>,
 <20200706231157.22ed7b92@trisector>
Message-ID: <SYCPR01MB5278FB70F4C750AE223EDE4093690@SYCPR01MB5278.ausprd01.prod.outlook.com>

Dear Ivan,

Thank you very much for your response.

I do not have more information than the one I gave in my previous email. (And on top of that, the computer I was using with Debian SID, a recent version of gfortran and the last version of R-devel, just broke.)

My problem is that the CRAN team won't accept to publish my package until this WARNING problem is solved. And because I am unable to observe the warning on my side (I could not with the desktop that just broke, and I still can't with my current laptop with Debian 10), I have no clue on how to suppress this warning.

Thank you in advance for any other advice.

Best regards,
Pierre
________________________________
From: Ivan Krylov <krylov.r00t at gmail.com>
Sent: Tuesday, 7 July 2020 06:11
To: Pierre Lafaye de Micheaux <lafaye at unsw.edu.au>
Cc: r-package-devel at r-project.org <r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]

On Fri, 3 Jul 2020 00:15:27 +0000
Pierre Lafaye de Micheaux <lafaye at unsw.edu.au> wrote:

>Found the following significant warnings:
>    myzhpevx.cpp:13:23: warning: type of _zhpevx__ does not match
> original declaration [-Wlto-type-mismatch]

I managed to reproduce the warning on R-devel r78607 built with
--enable-lto using gcc version 6.3.0 20170516 (Debian 6.3.0-18+deb9u1):

myzhpevx.cpp:13:16: warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
           void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
                ^
zhpevx.f:232:7: note: type mismatch in parameter 20
       SUBROUTINE zhpevx( JOBZ, RANGE, UPLO, N, AP, VL, VU, IL, IU,
       ^
zhpevx.f:232:7: note: type ?int? should match type ?size_t?
/usr/lib/gcc/x86_64-linux-gnu/6/include/stddef.h:216:23: note: the incompatible type is defined here
 typedef __SIZE_TYPE__ size_t;
                       ^
zhpevx.f:232:7: note: ?zhpevx? was previously declared here
       SUBROUTINE zhpevx( JOBZ, RANGE, UPLO, N, AP, VL, VU, IL, IU,
       ^

Do you have access to the notes produced by the compiler in addition
to the warnings? Do they spell the same difference?

If yes, the warning is likely to be safe to ignore. m4/R.m4 notes that,
while gfortran < 8 uses int instead of size_t for hidden size arguments,
it doesn't make a practical difference.

--
Best regards,
Ivan

	[[alternative HTML version deleted]]


From wdun|@p @end|ng |rom t|bco@com  Tue Jul  7 00:36:04 2020
From: wdun|@p @end|ng |rom t|bco@com (William Dunlap)
Date: Mon, 6 Jul 2020 15:36:04 -0700
Subject: [R-pkg-devel] 
	=?utf-8?b?d2FybmluZzogdHlwZSBvZiDigJh6aHBldnhf4oCZ?=
	=?utf-8?q?_does_not_match_original_declaration_=5B-Wlto-type-misma?=
	=?utf-8?q?tch=5D?=
In-Reply-To: <SYCPR01MB5278FB70F4C750AE223EDE4093690@SYCPR01MB5278.ausprd01.prod.outlook.com>
References: <SYCPR01MB527838C6205A60D005883DE6936D0@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <20200706231157.22ed7b92@trisector>
 <SYCPR01MB5278FB70F4C750AE223EDE4093690@SYCPR01MB5278.ausprd01.prod.outlook.com>
Message-ID: <CAF8bMcYVziRkSZzdo4T2Bt3TeT4ohjpwjDJiutKFXNHDMVve1A@mail.gmail.com>

Have you tried what is recommended in
https://gcc.gnu.org/onlinedocs/gfortran/Argument-passing-conventions.html
?

<quote>
For arguments of CHARACTER type, the character length is passed as a
hidden argument at the end of the argument list. For deferred-length
strings, the value is passed by reference, otherwise by value. The
character length has the C type size_t (or INTEGER(kind=C_SIZE_T) in
Fortran). Note that this is different to older versions of the GNU
Fortran compiler, where the type of the hidden character length
argument was a C int. In order to retain compatibility with older
versions, one can e.g. for the following Fortran procedure

subroutine fstrlen (s, a)
   character(len=*) :: s
   integer :: a
   print*, len(s)
end subroutine fstrlen

define the corresponding C prototype as follows:

#if __GNUC__ > 7
typedef size_t fortran_charlen_t;
#else
typedef int fortran_charlen_t;
#endif

void fstrlen_ (char*, int*, fortran_charlen_t);

In order to avoid such compiler-specific details, for new code it is
instead recommended to use the ISO_C_BINDING feature.

Note with C binding, CHARACTER(len=1) result variables are returned
according to the platform ABI and no hidden length argument is used
for dummy arguments; with VALUE, those variables are passed by value.
</quote>

Bill Dunlap
TIBCO Software
wdunlap tibco.com

Bill Dunlap
TIBCO Software
wdunlap tibco.com


On Mon, Jul 6, 2020 at 3:13 PM Pierre Lafaye de Micheaux
<lafaye at unsw.edu.au> wrote:
>
> Dear Ivan,
>
> Thank you very much for your response.
>
> I do not have more information than the one I gave in my previous email. (And on top of that, the computer I was using with Debian SID, a recent version of gfortran and the last version of R-devel, just broke.)
>
> My problem is that the CRAN team won't accept to publish my package until this WARNING problem is solved. And because I am unable to observe the warning on my side (I could not with the desktop that just broke, and I still can't with my current laptop with Debian 10), I have no clue on how to suppress this warning.
>
> Thank you in advance for any other advice.
>
> Best regards,
> Pierre
> ________________________________
> From: Ivan Krylov <krylov.r00t at gmail.com>
> Sent: Tuesday, 7 July 2020 06:11
> To: Pierre Lafaye de Micheaux <lafaye at unsw.edu.au>
> Cc: r-package-devel at r-project.org <r-package-devel at r-project.org>
> Subject: Re: [R-pkg-devel] warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
>
> On Fri, 3 Jul 2020 00:15:27 +0000
> Pierre Lafaye de Micheaux <lafaye at unsw.edu.au> wrote:
>
> >Found the following significant warnings:
> >    myzhpevx.cpp:13:23: warning: type of _zhpevx__ does not match
> > original declaration [-Wlto-type-mismatch]
>
> I managed to reproduce the warning on R-devel r78607 built with
> --enable-lto using gcc version 6.3.0 20170516 (Debian 6.3.0-18+deb9u1):
>
> myzhpevx.cpp:13:16: warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
>            void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
>                 ^
> zhpevx.f:232:7: note: type mismatch in parameter 20
>        SUBROUTINE zhpevx( JOBZ, RANGE, UPLO, N, AP, VL, VU, IL, IU,
>        ^
> zhpevx.f:232:7: note: type ?int? should match type ?size_t?
> /usr/lib/gcc/x86_64-linux-gnu/6/include/stddef.h:216:23: note: the incompatible type is defined here
>  typedef __SIZE_TYPE__ size_t;
>                        ^
> zhpevx.f:232:7: note: ?zhpevx? was previously declared here
>        SUBROUTINE zhpevx( JOBZ, RANGE, UPLO, N, AP, VL, VU, IL, IU,
>        ^
>
> Do you have access to the notes produced by the compiler in addition
> to the warnings? Do they spell the same difference?
>
> If yes, the warning is likely to be safe to ignore. m4/R.m4 notes that,
> while gfortran < 8 uses int instead of size_t for hidden size arguments,
> it doesn't make a practical difference.
>
> --
> Best regards,
> Ivan
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From |@|@ye @end|ng |rom un@w@edu@@u  Tue Jul  7 01:38:57 2020
From: |@|@ye @end|ng |rom un@w@edu@@u (Pierre Lafaye de Micheaux)
Date: Mon, 6 Jul 2020 23:38:57 +0000
Subject: [R-pkg-devel] 
 =?windows-1252?q?warning=3A_type_of_=91zhpevx=5F?=
 =?windows-1252?q?=92_does_not_match_original_declaration_=5B-Wlto-type-mi?=
 =?windows-1252?q?smatch=5D?=
In-Reply-To: <CAF8bMcYVziRkSZzdo4T2Bt3TeT4ohjpwjDJiutKFXNHDMVve1A@mail.gmail.com>
References: <SYCPR01MB527838C6205A60D005883DE6936D0@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <20200706231157.22ed7b92@trisector>
 <SYCPR01MB5278FB70F4C750AE223EDE4093690@SYCPR01MB5278.ausprd01.prod.outlook.com>,
 <CAF8bMcYVziRkSZzdo4T2Bt3TeT4ohjpwjDJiutKFXNHDMVve1A@mail.gmail.com>
Message-ID: <SYCPR01MB5278AD57988A1ED4AD0D24FC93690@SYCPR01MB5278.ausprd01.prod.outlook.com>

Hello Bill,

Thank you for your insight.

First, my impression, is that the problem comes from how I declare the type of the function itself (and not its parameters), since the first (and only warning they seen on the CRAN) message is:

<quote>
myzhpevx.cpp:13:16: warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
           void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
</quote>

What I did is the following:

<quote>
void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
      const int *n, Rcomplex *ap, const double *vl,
      const double *vu, const int *il, const int *iu,
      const double *abstol, int *m, double *w,
      Rcomplex *z, const int *ldz, Rcomplex *work, double *rwork,
      int *iwork, int *ifail, int *info,
      FC_LEN_T jobz_len,  FC_LEN_T range_len,  FC_LEN_T uplo_len);

 char cjobz[2];
 strncpy(cjobz, jobz[0], 1);
 cjobz[1] = '\0';
 char crange[2];
 strncpy(crange, range[0], 1);
 crange[1] = '\0';
 char cuplo[2];
 strncpy(cuplo, uplo[0], 1);
 cuplo[1] = '\0';

 F77_CALL(zhpevx)(cjobz, crange, cuplo, &n[0], ap, &vl[0], &vu[0], &il[0], &iu[0], &abstol[0], &m[0],
  w, z, &ldz[0], work, rwork, iwork, ifail, &info[0], strlen(cjobz), strlen(crange), strlen(cuplo));
</quote>

Do you see anything wrong with the above?

Thank you

Best
Pierre

________________________________
From: William Dunlap <wdunlap at tibco.com>
Sent: Tuesday, 7 July 2020 08:36
To: Pierre Lafaye de Micheaux <lafaye at unsw.edu.au>
Cc: Ivan Krylov <krylov.r00t at gmail.com>; r-package-devel at r-project.org <r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]

Have you tried what is recommended in
https://gcc.gnu.org/onlinedocs/gfortran/Argument-passing-conventions.html
?

<quote>
For arguments of CHARACTER type, the character length is passed as a
hidden argument at the end of the argument list. For deferred-length
strings, the value is passed by reference, otherwise by value. The
character length has the C type size_t (or INTEGER(kind=C_SIZE_T) in
Fortran). Note that this is different to older versions of the GNU
Fortran compiler, where the type of the hidden character length
argument was a C int. In order to retain compatibility with older
versions, one can e.g. for the following Fortran procedure

subroutine fstrlen (s, a)
   character(len=*) :: s
   integer :: a
   print*, len(s)
end subroutine fstrlen

define the corresponding C prototype as follows:

#if __GNUC__ > 7
typedef size_t fortran_charlen_t;
#else
typedef int fortran_charlen_t;
#endif

void fstrlen_ (char*, int*, fortran_charlen_t);

In order to avoid such compiler-specific details, for new code it is
instead recommended to use the ISO_C_BINDING feature.

Note with C binding, CHARACTER(len=1) result variables are returned
according to the platform ABI and no hidden length argument is used
for dummy arguments; with VALUE, those variables are passed by value.
</quote>

Bill Dunlap
TIBCO Software
wdunlap tibco.com

Bill Dunlap
TIBCO Software
wdunlap tibco.com


On Mon, Jul 6, 2020 at 3:13 PM Pierre Lafaye de Micheaux
<lafaye at unsw.edu.au> wrote:
>
> Dear Ivan,
>
> Thank you very much for your response.
>
> I do not have more information than the one I gave in my previous email. (And on top of that, the computer I was using with Debian SID, a recent version of gfortran and the last version of R-devel, just broke.)
>
> My problem is that the CRAN team won't accept to publish my package until this WARNING problem is solved. And because I am unable to observe the warning on my side (I could not with the desktop that just broke, and I still can't with my current laptop with Debian 10), I have no clue on how to suppress this warning.
>
> Thank you in advance for any other advice.
>
> Best regards,
> Pierre
> ________________________________
> From: Ivan Krylov <krylov.r00t at gmail.com>
> Sent: Tuesday, 7 July 2020 06:11
> To: Pierre Lafaye de Micheaux <lafaye at unsw.edu.au>
> Cc: r-package-devel at r-project.org <r-package-devel at r-project.org>
> Subject: Re: [R-pkg-devel] warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
>
> On Fri, 3 Jul 2020 00:15:27 +0000
> Pierre Lafaye de Micheaux <lafaye at unsw.edu.au> wrote:
>
> >Found the following significant warnings:
> >    myzhpevx.cpp:13:23: warning: type of _zhpevx__ does not match
> > original declaration [-Wlto-type-mismatch]
>
> I managed to reproduce the warning on R-devel r78607 built with
> --enable-lto using gcc version 6.3.0 20170516 (Debian 6.3.0-18+deb9u1):
>
> myzhpevx.cpp:13:16: warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
>            void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
>                 ^
> zhpevx.f:232:7: note: type mismatch in parameter 20
>        SUBROUTINE zhpevx( JOBZ, RANGE, UPLO, N, AP, VL, VU, IL, IU,
>        ^
> zhpevx.f:232:7: note: type ?int? should match type ?size_t?
> /usr/lib/gcc/x86_64-linux-gnu/6/include/stddef.h:216:23: note: the incompatible type is defined here
>  typedef __SIZE_TYPE__ size_t;
>                        ^
> zhpevx.f:232:7: note: ?zhpevx? was previously declared here
>        SUBROUTINE zhpevx( JOBZ, RANGE, UPLO, N, AP, VL, VU, IL, IU,
>        ^
>
> Do you have access to the notes produced by the compiler in addition
> to the warnings? Do they spell the same difference?
>
> If yes, the warning is likely to be safe to ignore. m4/R.m4 notes that,
> while gfortran < 8 uses int instead of size_t for hidden size arguments,
> it doesn't make a practical difference.
>
> --
> Best regards,
> Ivan
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

	[[alternative HTML version deleted]]


From wdun|@p @end|ng |rom t|bco@com  Tue Jul  7 03:46:15 2020
From: wdun|@p @end|ng |rom t|bco@com (William Dunlap)
Date: Mon, 6 Jul 2020 18:46:15 -0700
Subject: [R-pkg-devel] 
	=?utf-8?b?d2FybmluZzogdHlwZSBvZiDigJh6aHBldnhf4oCZ?=
	=?utf-8?q?_does_not_match_original_declaration_=5B-Wlto-type-misma?=
	=?utf-8?q?tch=5D?=
In-Reply-To: <SYCPR01MB5278AD57988A1ED4AD0D24FC93690@SYCPR01MB5278.ausprd01.prod.outlook.com>
References: <SYCPR01MB527838C6205A60D005883DE6936D0@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <20200706231157.22ed7b92@trisector>
 <SYCPR01MB5278FB70F4C750AE223EDE4093690@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <CAF8bMcYVziRkSZzdo4T2Bt3TeT4ohjpwjDJiutKFXNHDMVve1A@mail.gmail.com>
 <SYCPR01MB5278AD57988A1ED4AD0D24FC93690@SYCPR01MB5278.ausprd01.prod.outlook.com>
Message-ID: <CAF8bMcY-519pgq0JfjMjgz-Uy6FJx9zeLxrh0ygH=B==DueP+Q@mail.gmail.com>

With gcc 8.3.0, gfortran 8.3.0, and ld 2.33.1 from the mingw64 part of
rtools40 on Windows, if I misdefine the typedef FC_LEN_T and use the
-flto flag I get the sort of error messages that you report.

c:\tmp\fortran>cat main.c
#include <string.h>
#include <stdio.h>

#ifdef USE_INT
typedef int FC_LEN_T;
#endif
#ifdef USE_LONG
typedef long int FC_LEN_T;
#endif
#ifdef USE_LONG_LONG
typedef long long int FC_LEN_T;
#endif

extern void sub_(char* word, double *ret, FC_LEN_T word_len);

int main(int argc, char* argv[])
{
    if (argc == 2) {
        double ret = 3. ;
        FC_LEN_T word_len = strlen(argv[1]);
        sub_(argv[1], &ret, word_len);
        printf("sizeof(FC_LEN_T)=%d, ret=%g\n", (int)(sizeof(FC_LEN_T)), ret);
        return 0;
    } else {
        return -1;
    }
}

c:\tmp\fortran>gcc  -flto -DUSE_INT main.c sub.f -lgfortran
main.c:14:13: warning: type of 'sub_' does not match original
declaration [-Wlto-type-mismatch]
 extern void sub_(char* word, double *ret, FC_LEN_T word_len);
             ^
sub.f:1:1: note: type mismatch in parameter 3
       subroutine sub(word, ret)
 ^
sub.f:1:1: note: type 'long long int' should match type 'FC_LEN_T'
sub.f:1:1: note: 'sub' was previously declared here
sub.f:1:1: note: code may be misoptimized unless -fno-strict-aliasing is used

c:\tmp\fortran>gcc  -flto -DUSE_LONG main.c sub.f -lgfortran
main.c:14:13: warning: type of 'sub_' does not match original
declaration [-Wlto-type-mismatch]
 extern void sub_(char* word, double *ret, FC_LEN_T word_len);
             ^
sub.f:1:1: note: type mismatch in parameter 3
       subroutine sub(word, ret)
 ^
sub.f:1:1: note: type 'long long int' should match type 'FC_LEN_T'
sub.f:1:1: note: 'sub' was previously declared here
sub.f:1:1: note: code may be misoptimized unless -fno-strict-aliasing is used

c:\tmp\fortran>gcc  -flto -DUSE_LONG_LONG main.c sub.f -lgfortran
<no warnings or notes>

Bill Dunlap
TIBCO Software
wdunlap tibco.com

On Mon, Jul 6, 2020 at 4:39 PM Pierre Lafaye de Micheaux
<lafaye at unsw.edu.au> wrote:
>
> Hello Bill,
>
> Thank you for your insight.
>
> First, my impression, is that the problem comes from how I declare the type of the function itself (and not its parameters), since the first (and only warning they seen on the CRAN) message is:
>
> <quote>
> myzhpevx.cpp:13:16: warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
>            void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
> </quote>
>
> What I did is the following:
>
> <quote>
> void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
>       const int *n, Rcomplex *ap, const double *vl,
>       const double *vu, const int *il, const int *iu,
>       const double *abstol, int *m, double *w,
>       Rcomplex *z, const int *ldz, Rcomplex *work, double *rwork,
>       int *iwork, int *ifail, int *info,
>       FC_LEN_T jobz_len,  FC_LEN_T range_len,  FC_LEN_T uplo_len);
>
>  char cjobz[2];
>  strncpy(cjobz, jobz[0], 1);
>  cjobz[1] = '\0';
>  char crange[2];
>  strncpy(crange, range[0], 1);
>  crange[1] = '\0';
>  char cuplo[2];
>  strncpy(cuplo, uplo[0], 1);
>  cuplo[1] = '\0';
>
>  F77_CALL(zhpevx)(cjobz, crange, cuplo, &n[0], ap, &vl[0], &vu[0], &il[0], &iu[0], &abstol[0], &m[0],
>   w, z, &ldz[0], work, rwork, iwork, ifail, &info[0], strlen(cjobz), strlen(crange), strlen(cuplo));
> </quote>
>
> Do you see anything wrong with the above?
>
> Thank you
>
> Best
> Pierre
>
> ________________________________
> From: William Dunlap <wdunlap at tibco.com>
> Sent: Tuesday, 7 July 2020 08:36
> To: Pierre Lafaye de Micheaux <lafaye at unsw.edu.au>
> Cc: Ivan Krylov <krylov.r00t at gmail.com>; r-package-devel at r-project.org <r-package-devel at r-project.org>
> Subject: Re: [R-pkg-devel] warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
>
> Have you tried what is recommended in
> https://gcc.gnu.org/onlinedocs/gfortran/Argument-passing-conventions.html
> ?
>
> <quote>
> For arguments of CHARACTER type, the character length is passed as a
> hidden argument at the end of the argument list. For deferred-length
> strings, the value is passed by reference, otherwise by value. The
> character length has the C type size_t (or INTEGER(kind=C_SIZE_T) in
> Fortran). Note that this is different to older versions of the GNU
> Fortran compiler, where the type of the hidden character length
> argument was a C int. In order to retain compatibility with older
> versions, one can e.g. for the following Fortran procedure
>
> subroutine fstrlen (s, a)
>    character(len=*) :: s
>    integer :: a
>    print*, len(s)
> end subroutine fstrlen
>
> define the corresponding C prototype as follows:
>
> #if __GNUC__ > 7
> typedef size_t fortran_charlen_t;
> #else
> typedef int fortran_charlen_t;
> #endif
>
> void fstrlen_ (char*, int*, fortran_charlen_t);
>
> In order to avoid such compiler-specific details, for new code it is
> instead recommended to use the ISO_C_BINDING feature.
>
> Note with C binding, CHARACTER(len=1) result variables are returned
> according to the platform ABI and no hidden length argument is used
> for dummy arguments; with VALUE, those variables are passed by value.
> </quote>
>
> Bill Dunlap
> TIBCO Software
> wdunlap tibco.com
>
> Bill Dunlap
> TIBCO Software
> wdunlap tibco.com
>
>
> On Mon, Jul 6, 2020 at 3:13 PM Pierre Lafaye de Micheaux
> <lafaye at unsw.edu.au> wrote:
> >
> > Dear Ivan,
> >
> > Thank you very much for your response.
> >
> > I do not have more information than the one I gave in my previous email. (And on top of that, the computer I was using with Debian SID, a recent version of gfortran and the last version of R-devel, just broke.)
> >
> > My problem is that the CRAN team won't accept to publish my package until this WARNING problem is solved. And because I am unable to observe the warning on my side (I could not with the desktop that just broke, and I still can't with my current laptop with Debian 10), I have no clue on how to suppress this warning.
> >
> > Thank you in advance for any other advice.
> >
> > Best regards,
> > Pierre
> > ________________________________
> > From: Ivan Krylov <krylov.r00t at gmail.com>
> > Sent: Tuesday, 7 July 2020 06:11
> > To: Pierre Lafaye de Micheaux <lafaye at unsw.edu.au>
> > Cc: r-package-devel at r-project.org <r-package-devel at r-project.org>
> > Subject: Re: [R-pkg-devel] warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
> >
> > On Fri, 3 Jul 2020 00:15:27 +0000
> > Pierre Lafaye de Micheaux <lafaye at unsw.edu.au> wrote:
> >
> > >Found the following significant warnings:
> > >    myzhpevx.cpp:13:23: warning: type of _zhpevx__ does not match
> > > original declaration [-Wlto-type-mismatch]
> >
> > I managed to reproduce the warning on R-devel r78607 built with
> > --enable-lto using gcc version 6.3.0 20170516 (Debian 6.3.0-18+deb9u1):
> >
> > myzhpevx.cpp:13:16: warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
> >            void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
> >                 ^
> > zhpevx.f:232:7: note: type mismatch in parameter 20
> >        SUBROUTINE zhpevx( JOBZ, RANGE, UPLO, N, AP, VL, VU, IL, IU,
> >        ^
> > zhpevx.f:232:7: note: type ?int? should match type ?size_t?
> > /usr/lib/gcc/x86_64-linux-gnu/6/include/stddef.h:216:23: note: the incompatible type is defined here
> >  typedef __SIZE_TYPE__ size_t;
> >                        ^
> > zhpevx.f:232:7: note: ?zhpevx? was previously declared here
> >        SUBROUTINE zhpevx( JOBZ, RANGE, UPLO, N, AP, VL, VU, IL, IU,
> >        ^
> >
> > Do you have access to the notes produced by the compiler in addition
> > to the warnings? Do they spell the same difference?
> >
> > If yes, the warning is likely to be safe to ignore. m4/R.m4 notes that,
> > while gfortran < 8 uses int instead of size_t for hidden size arguments,
> > it doesn't make a practical difference.
> >
> > --
> > Best regards,
> > Ivan
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel


From |@|@ye @end|ng |rom un@w@edu@@u  Tue Jul  7 05:00:23 2020
From: |@|@ye @end|ng |rom un@w@edu@@u (Pierre Lafaye de Micheaux)
Date: Tue, 7 Jul 2020 03:00:23 +0000
Subject: [R-pkg-devel] 
 =?windows-1252?q?warning=3A_type_of_=91zhpevx=5F?=
 =?windows-1252?q?=92_does_not_match_original_declaration_=5B-Wlto-type-mi?=
 =?windows-1252?q?smatch=5D?=
In-Reply-To: <CAF8bMcY-519pgq0JfjMjgz-Uy6FJx9zeLxrh0ygH=B==DueP+Q@mail.gmail.com>
References: <SYCPR01MB527838C6205A60D005883DE6936D0@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <20200706231157.22ed7b92@trisector>
 <SYCPR01MB5278FB70F4C750AE223EDE4093690@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <CAF8bMcYVziRkSZzdo4T2Bt3TeT4ohjpwjDJiutKFXNHDMVve1A@mail.gmail.com>
 <SYCPR01MB5278AD57988A1ED4AD0D24FC93690@SYCPR01MB5278.ausprd01.prod.outlook.com>,
 <CAF8bMcY-519pgq0JfjMjgz-Uy6FJx9zeLxrh0ygH=B==DueP+Q@mail.gmail.com>
Message-ID: <SYCPR01MB5278ACC7379B3608D084B0CD93660@SYCPR01MB5278.ausprd01.prod.outlook.com>

My file myzhpevx.cpp starts with:

<quote>
#define USE_FC_LEN_T
#include <R.h>
#include "Rmath.h"

#ifdef FC_LEN_T
extern "C" {

  void zhpevxC(char **jobz, char **range, char **uplo, int *n, Rcomplex *ap,
     double *vl, double *vu, int *il, int *iu, double *abstol, int *m,
     double *w, Rcomplex *z, int *ldz, Rcomplex *work, double *rwork,
     int *iwork, int *ifail, int *info) {

          void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
      const int *n, Rcomplex *ap, const double *vl,
      const double *vu, const int *il, const int *iu,
      const double *abstol, int *m, double *w,
      Rcomplex *z, const int *ldz, Rcomplex *work, double *rwork,
      int *iwork, int *ifail, int *info,
      FC_LEN_T jobz_len,  FC_LEN_T range_len,  FC_LEN_T uplo_len);
</quote>

So if I understand correctly what you are saying, you suggest that FC_LEN_T was not correctly defined by the CRAN team?

Should I just write something like (adding the middle instruction below to my existing code above)?:

<quote>
#ifdef FC_LEN_T
typedef long long int FC_LEN_T;
extern "C" {
</quote>

Thank you
Pierre
________________________________
From: William Dunlap <wdunlap at tibco.com>
Sent: Tuesday, 7 July 2020 11:46
To: Pierre Lafaye de Micheaux <lafaye at unsw.edu.au>
Cc: Ivan Krylov <krylov.r00t at gmail.com>; r-package-devel at r-project.org <r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]

With gcc 8.3.0, gfortran 8.3.0, and ld 2.33.1 from the mingw64 part of
rtools40 on Windows, if I misdefine the typedef FC_LEN_T and use the
-flto flag I get the sort of error messages that you report.

c:\tmp\fortran>cat main.c
#include <string.h>
#include <stdio.h>

#ifdef USE_INT
typedef int FC_LEN_T;
#endif
#ifdef USE_LONG
typedef long int FC_LEN_T;
#endif
#ifdef USE_LONG_LONG
typedef long long int FC_LEN_T;
#endif

extern void sub_(char* word, double *ret, FC_LEN_T word_len);

int main(int argc, char* argv[])
{
    if (argc == 2) {
        double ret = 3. ;
        FC_LEN_T word_len = strlen(argv[1]);
        sub_(argv[1], &ret, word_len);
        printf("sizeof(FC_LEN_T)=%d, ret=%g\n", (int)(sizeof(FC_LEN_T)), ret);
        return 0;
    } else {
        return -1;
    }
}

c:\tmp\fortran>gcc  -flto -DUSE_INT main.c sub.f -lgfortran
main.c:14:13: warning: type of 'sub_' does not match original
declaration [-Wlto-type-mismatch]
 extern void sub_(char* word, double *ret, FC_LEN_T word_len);
             ^
sub.f:1:1: note: type mismatch in parameter 3
       subroutine sub(word, ret)
 ^
sub.f:1:1: note: type 'long long int' should match type 'FC_LEN_T'
sub.f:1:1: note: 'sub' was previously declared here
sub.f:1:1: note: code may be misoptimized unless -fno-strict-aliasing is used

c:\tmp\fortran>gcc  -flto -DUSE_LONG main.c sub.f -lgfortran
main.c:14:13: warning: type of 'sub_' does not match original
declaration [-Wlto-type-mismatch]
 extern void sub_(char* word, double *ret, FC_LEN_T word_len);
             ^
sub.f:1:1: note: type mismatch in parameter 3
       subroutine sub(word, ret)
 ^
sub.f:1:1: note: type 'long long int' should match type 'FC_LEN_T'
sub.f:1:1: note: 'sub' was previously declared here
sub.f:1:1: note: code may be misoptimized unless -fno-strict-aliasing is used

c:\tmp\fortran>gcc  -flto -DUSE_LONG_LONG main.c sub.f -lgfortran
<no warnings or notes>

Bill Dunlap
TIBCO Software
wdunlap tibco.com

On Mon, Jul 6, 2020 at 4:39 PM Pierre Lafaye de Micheaux
<lafaye at unsw.edu.au> wrote:
>
> Hello Bill,
>
> Thank you for your insight.
>
> First, my impression, is that the problem comes from how I declare the type of the function itself (and not its parameters), since the first (and only warning they seen on the CRAN) message is:
>
> <quote>
> myzhpevx.cpp:13:16: warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
>            void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
> </quote>
>
> What I did is the following:
>
> <quote>
> void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
>       const int *n, Rcomplex *ap, const double *vl,
>       const double *vu, const int *il, const int *iu,
>       const double *abstol, int *m, double *w,
>       Rcomplex *z, const int *ldz, Rcomplex *work, double *rwork,
>       int *iwork, int *ifail, int *info,
>       FC_LEN_T jobz_len,  FC_LEN_T range_len,  FC_LEN_T uplo_len);
>
>  char cjobz[2];
>  strncpy(cjobz, jobz[0], 1);
>  cjobz[1] = '\0';
>  char crange[2];
>  strncpy(crange, range[0], 1);
>  crange[1] = '\0';
>  char cuplo[2];
>  strncpy(cuplo, uplo[0], 1);
>  cuplo[1] = '\0';
>
>  F77_CALL(zhpevx)(cjobz, crange, cuplo, &n[0], ap, &vl[0], &vu[0], &il[0], &iu[0], &abstol[0], &m[0],
>   w, z, &ldz[0], work, rwork, iwork, ifail, &info[0], strlen(cjobz), strlen(crange), strlen(cuplo));
> </quote>
>
> Do you see anything wrong with the above?
>
> Thank you
>
> Best
> Pierre
>
> ________________________________
> From: William Dunlap <wdunlap at tibco.com>
> Sent: Tuesday, 7 July 2020 08:36
> To: Pierre Lafaye de Micheaux <lafaye at unsw.edu.au>
> Cc: Ivan Krylov <krylov.r00t at gmail.com>; r-package-devel at r-project.org <r-package-devel at r-project.org>
> Subject: Re: [R-pkg-devel] warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
>
> Have you tried what is recommended in
> https://gcc.gnu.org/onlinedocs/gfortran/Argument-passing-conventions.html
> ?
>
> <quote>
> For arguments of CHARACTER type, the character length is passed as a
> hidden argument at the end of the argument list. For deferred-length
> strings, the value is passed by reference, otherwise by value. The
> character length has the C type size_t (or INTEGER(kind=C_SIZE_T) in
> Fortran). Note that this is different to older versions of the GNU
> Fortran compiler, where the type of the hidden character length
> argument was a C int. In order to retain compatibility with older
> versions, one can e.g. for the following Fortran procedure
>
> subroutine fstrlen (s, a)
>    character(len=*) :: s
>    integer :: a
>    print*, len(s)
> end subroutine fstrlen
>
> define the corresponding C prototype as follows:
>
> #if __GNUC__ > 7
> typedef size_t fortran_charlen_t;
> #else
> typedef int fortran_charlen_t;
> #endif
>
> void fstrlen_ (char*, int*, fortran_charlen_t);
>
> In order to avoid such compiler-specific details, for new code it is
> instead recommended to use the ISO_C_BINDING feature.
>
> Note with C binding, CHARACTER(len=1) result variables are returned
> according to the platform ABI and no hidden length argument is used
> for dummy arguments; with VALUE, those variables are passed by value.
> </quote>
>
> Bill Dunlap
> TIBCO Software
> wdunlap tibco.com
>
> Bill Dunlap
> TIBCO Software
> wdunlap tibco.com
>
>
> On Mon, Jul 6, 2020 at 3:13 PM Pierre Lafaye de Micheaux
> <lafaye at unsw.edu.au> wrote:
> >
> > Dear Ivan,
> >
> > Thank you very much for your response.
> >
> > I do not have more information than the one I gave in my previous email. (And on top of that, the computer I was using with Debian SID, a recent version of gfortran and the last version of R-devel, just broke.)
> >
> > My problem is that the CRAN team won't accept to publish my package until this WARNING problem is solved. And because I am unable to observe the warning on my side (I could not with the desktop that just broke, and I still can't with my current laptop with Debian 10), I have no clue on how to suppress this warning.
> >
> > Thank you in advance for any other advice.
> >
> > Best regards,
> > Pierre
> > ________________________________
> > From: Ivan Krylov <krylov.r00t at gmail.com>
> > Sent: Tuesday, 7 July 2020 06:11
> > To: Pierre Lafaye de Micheaux <lafaye at unsw.edu.au>
> > Cc: r-package-devel at r-project.org <r-package-devel at r-project.org>
> > Subject: Re: [R-pkg-devel] warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
> >
> > On Fri, 3 Jul 2020 00:15:27 +0000
> > Pierre Lafaye de Micheaux <lafaye at unsw.edu.au> wrote:
> >
> > >Found the following significant warnings:
> > >    myzhpevx.cpp:13:23: warning: type of _zhpevx__ does not match
> > > original declaration [-Wlto-type-mismatch]
> >
> > I managed to reproduce the warning on R-devel r78607 built with
> > --enable-lto using gcc version 6.3.0 20170516 (Debian 6.3.0-18+deb9u1):
> >
> > myzhpevx.cpp:13:16: warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
> >            void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
> >                 ^
> > zhpevx.f:232:7: note: type mismatch in parameter 20
> >        SUBROUTINE zhpevx( JOBZ, RANGE, UPLO, N, AP, VL, VU, IL, IU,
> >        ^
> > zhpevx.f:232:7: note: type ?int? should match type ?size_t?
> > /usr/lib/gcc/x86_64-linux-gnu/6/include/stddef.h:216:23: note: the incompatible type is defined here
> >  typedef __SIZE_TYPE__ size_t;
> >                        ^
> > zhpevx.f:232:7: note: ?zhpevx? was previously declared here
> >        SUBROUTINE zhpevx( JOBZ, RANGE, UPLO, N, AP, VL, VU, IL, IU,
> >        ^
> >
> > Do you have access to the notes produced by the compiler in addition
> > to the warnings? Do they spell the same difference?
> >
> > If yes, the warning is likely to be safe to ignore. m4/R.m4 notes that,
> > while gfortran < 8 uses int instead of size_t for hidden size arguments,
> > it doesn't make a practical difference.
> >
> > --
> > Best regards,
> > Ivan
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel

	[[alternative HTML version deleted]]


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Tue Jul  7 07:43:19 2020
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Tue, 7 Jul 2020 07:43:19 +0200
Subject: [R-pkg-devel] 
 =?utf-8?b?d2FybmluZzogdHlwZSBvZiDigJh6aHBldnhf4oCZ?=
 =?utf-8?q?_does_not_match_original_declaration_=5B-Wlto-type-mismatch=5D?=
In-Reply-To: <SYCPR01MB5278ACC7379B3608D084B0CD93660@SYCPR01MB5278.ausprd01.prod.outlook.com>
References: <SYCPR01MB527838C6205A60D005883DE6936D0@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <20200706231157.22ed7b92@trisector>
 <SYCPR01MB5278FB70F4C750AE223EDE4093690@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <CAF8bMcYVziRkSZzdo4T2Bt3TeT4ohjpwjDJiutKFXNHDMVve1A@mail.gmail.com>
 <SYCPR01MB5278AD57988A1ED4AD0D24FC93690@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <CAF8bMcY-519pgq0JfjMjgz-Uy6FJx9zeLxrh0ygH=B==DueP+Q@mail.gmail.com>
 <SYCPR01MB5278ACC7379B3608D084B0CD93660@SYCPR01MB5278.ausprd01.prod.outlook.com>
Message-ID: <5bbb8f87-6ad1-4d3a-69cc-255d452c4023@gmail.com>

My recommendation would be to try to minimize the example (package) as 
much as possible so that it still has the problem, and then try to 
investigate why exactly/where is the type mismatch. This is what helped 
me debug similar issues - sometimes it was hard to tell from the Fortran 
warnings where exactly the mismatched declarations were and why they 
were mismatched.

This process of minimization can already reveal the true source of the 
problem, and if not, others may try to debug for you using the minimal 
example. A useful tool is the Fortran option -fc-prototypes-external 
(see WRE for more details) and I've also used dumps of the compiler tree 
before (-fdump-tree-all, more in GCC documentation).

Best
Tomas

On 7/7/20 5:00 AM, Pierre Lafaye de Micheaux wrote:
> My file myzhpevx.cpp starts with:
>
> <quote>
> #define USE_FC_LEN_T
> #include <R.h>
> #include "Rmath.h"
>
> #ifdef FC_LEN_T
> extern "C" {
>
>    void zhpevxC(char **jobz, char **range, char **uplo, int *n, Rcomplex *ap,
>       double *vl, double *vu, int *il, int *iu, double *abstol, int *m,
>       double *w, Rcomplex *z, int *ldz, Rcomplex *work, double *rwork,
>       int *iwork, int *ifail, int *info) {
>
>            void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
>        const int *n, Rcomplex *ap, const double *vl,
>        const double *vu, const int *il, const int *iu,
>        const double *abstol, int *m, double *w,
>        Rcomplex *z, const int *ldz, Rcomplex *work, double *rwork,
>        int *iwork, int *ifail, int *info,
>        FC_LEN_T jobz_len,  FC_LEN_T range_len,  FC_LEN_T uplo_len);
> </quote>
>
> So if I understand correctly what you are saying, you suggest that FC_LEN_T was not correctly defined by the CRAN team?
>
> Should I just write something like (adding the middle instruction below to my existing code above)?:
>
> <quote>
> #ifdef FC_LEN_T
> typedef long long int FC_LEN_T;
> extern "C" {
> </quote>
>
> Thank you
> Pierre
> ________________________________
> From: William Dunlap <wdunlap at tibco.com>
> Sent: Tuesday, 7 July 2020 11:46
> To: Pierre Lafaye de Micheaux <lafaye at unsw.edu.au>
> Cc: Ivan Krylov <krylov.r00t at gmail.com>; r-package-devel at r-project.org <r-package-devel at r-project.org>
> Subject: Re: [R-pkg-devel] warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
>
> With gcc 8.3.0, gfortran 8.3.0, and ld 2.33.1 from the mingw64 part of
> rtools40 on Windows, if I misdefine the typedef FC_LEN_T and use the
> -flto flag I get the sort of error messages that you report.
>
> c:\tmp\fortran>cat main.c
> #include <string.h>
> #include <stdio.h>
>
> #ifdef USE_INT
> typedef int FC_LEN_T;
> #endif
> #ifdef USE_LONG
> typedef long int FC_LEN_T;
> #endif
> #ifdef USE_LONG_LONG
> typedef long long int FC_LEN_T;
> #endif
>
> extern void sub_(char* word, double *ret, FC_LEN_T word_len);
>
> int main(int argc, char* argv[])
> {
>      if (argc == 2) {
>          double ret = 3. ;
>          FC_LEN_T word_len = strlen(argv[1]);
>          sub_(argv[1], &ret, word_len);
>          printf("sizeof(FC_LEN_T)=%d, ret=%g\n", (int)(sizeof(FC_LEN_T)), ret);
>          return 0;
>      } else {
>          return -1;
>      }
> }
>
> c:\tmp\fortran>gcc  -flto -DUSE_INT main.c sub.f -lgfortran
> main.c:14:13: warning: type of 'sub_' does not match original
> declaration [-Wlto-type-mismatch]
>   extern void sub_(char* word, double *ret, FC_LEN_T word_len);
>               ^
> sub.f:1:1: note: type mismatch in parameter 3
>         subroutine sub(word, ret)
>   ^
> sub.f:1:1: note: type 'long long int' should match type 'FC_LEN_T'
> sub.f:1:1: note: 'sub' was previously declared here
> sub.f:1:1: note: code may be misoptimized unless -fno-strict-aliasing is used
>
> c:\tmp\fortran>gcc  -flto -DUSE_LONG main.c sub.f -lgfortran
> main.c:14:13: warning: type of 'sub_' does not match original
> declaration [-Wlto-type-mismatch]
>   extern void sub_(char* word, double *ret, FC_LEN_T word_len);
>               ^
> sub.f:1:1: note: type mismatch in parameter 3
>         subroutine sub(word, ret)
>   ^
> sub.f:1:1: note: type 'long long int' should match type 'FC_LEN_T'
> sub.f:1:1: note: 'sub' was previously declared here
> sub.f:1:1: note: code may be misoptimized unless -fno-strict-aliasing is used
>
> c:\tmp\fortran>gcc  -flto -DUSE_LONG_LONG main.c sub.f -lgfortran
> <no warnings or notes>
>
> Bill Dunlap
> TIBCO Software
> wdunlap tibco.com
>
> On Mon, Jul 6, 2020 at 4:39 PM Pierre Lafaye de Micheaux
> <lafaye at unsw.edu.au> wrote:
>> Hello Bill,
>>
>> Thank you for your insight.
>>
>> First, my impression, is that the problem comes from how I declare the type of the function itself (and not its parameters), since the first (and only warning they seen on the CRAN) message is:
>>
>> <quote>
>> myzhpevx.cpp:13:16: warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
>>             void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
>> </quote>
>>
>> What I did is the following:
>>
>> <quote>
>> void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
>>        const int *n, Rcomplex *ap, const double *vl,
>>        const double *vu, const int *il, const int *iu,
>>        const double *abstol, int *m, double *w,
>>        Rcomplex *z, const int *ldz, Rcomplex *work, double *rwork,
>>        int *iwork, int *ifail, int *info,
>>        FC_LEN_T jobz_len,  FC_LEN_T range_len,  FC_LEN_T uplo_len);
>>
>>   char cjobz[2];
>>   strncpy(cjobz, jobz[0], 1);
>>   cjobz[1] = '\0';
>>   char crange[2];
>>   strncpy(crange, range[0], 1);
>>   crange[1] = '\0';
>>   char cuplo[2];
>>   strncpy(cuplo, uplo[0], 1);
>>   cuplo[1] = '\0';
>>
>>   F77_CALL(zhpevx)(cjobz, crange, cuplo, &n[0], ap, &vl[0], &vu[0], &il[0], &iu[0], &abstol[0], &m[0],
>>    w, z, &ldz[0], work, rwork, iwork, ifail, &info[0], strlen(cjobz), strlen(crange), strlen(cuplo));
>> </quote>
>>
>> Do you see anything wrong with the above?
>>
>> Thank you
>>
>> Best
>> Pierre
>>
>> ________________________________
>> From: William Dunlap <wdunlap at tibco.com>
>> Sent: Tuesday, 7 July 2020 08:36
>> To: Pierre Lafaye de Micheaux <lafaye at unsw.edu.au>
>> Cc: Ivan Krylov <krylov.r00t at gmail.com>; r-package-devel at r-project.org <r-package-devel at r-project.org>
>> Subject: Re: [R-pkg-devel] warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
>>
>> Have you tried what is recommended in
>> https://gcc.gnu.org/onlinedocs/gfortran/Argument-passing-conventions.html
>> ?
>>
>> <quote>
>> For arguments of CHARACTER type, the character length is passed as a
>> hidden argument at the end of the argument list. For deferred-length
>> strings, the value is passed by reference, otherwise by value. The
>> character length has the C type size_t (or INTEGER(kind=C_SIZE_T) in
>> Fortran). Note that this is different to older versions of the GNU
>> Fortran compiler, where the type of the hidden character length
>> argument was a C int. In order to retain compatibility with older
>> versions, one can e.g. for the following Fortran procedure
>>
>> subroutine fstrlen (s, a)
>>     character(len=*) :: s
>>     integer :: a
>>     print*, len(s)
>> end subroutine fstrlen
>>
>> define the corresponding C prototype as follows:
>>
>> #if __GNUC__ > 7
>> typedef size_t fortran_charlen_t;
>> #else
>> typedef int fortran_charlen_t;
>> #endif
>>
>> void fstrlen_ (char*, int*, fortran_charlen_t);
>>
>> In order to avoid such compiler-specific details, for new code it is
>> instead recommended to use the ISO_C_BINDING feature.
>>
>> Note with C binding, CHARACTER(len=1) result variables are returned
>> according to the platform ABI and no hidden length argument is used
>> for dummy arguments; with VALUE, those variables are passed by value.
>> </quote>
>>
>> Bill Dunlap
>> TIBCO Software
>> wdunlap tibco.com
>>
>> Bill Dunlap
>> TIBCO Software
>> wdunlap tibco.com
>>
>>
>> On Mon, Jul 6, 2020 at 3:13 PM Pierre Lafaye de Micheaux
>> <lafaye at unsw.edu.au> wrote:
>>> Dear Ivan,
>>>
>>> Thank you very much for your response.
>>>
>>> I do not have more information than the one I gave in my previous email. (And on top of that, the computer I was using with Debian SID, a recent version of gfortran and the last version of R-devel, just broke.)
>>>
>>> My problem is that the CRAN team won't accept to publish my package until this WARNING problem is solved. And because I am unable to observe the warning on my side (I could not with the desktop that just broke, and I still can't with my current laptop with Debian 10), I have no clue on how to suppress this warning.
>>>
>>> Thank you in advance for any other advice.
>>>
>>> Best regards,
>>> Pierre
>>> ________________________________
>>> From: Ivan Krylov <krylov.r00t at gmail.com>
>>> Sent: Tuesday, 7 July 2020 06:11
>>> To: Pierre Lafaye de Micheaux <lafaye at unsw.edu.au>
>>> Cc: r-package-devel at r-project.org <r-package-devel at r-project.org>
>>> Subject: Re: [R-pkg-devel] warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
>>>
>>> On Fri, 3 Jul 2020 00:15:27 +0000
>>> Pierre Lafaye de Micheaux <lafaye at unsw.edu.au> wrote:
>>>
>>>> Found the following significant warnings:
>>>>     myzhpevx.cpp:13:23: warning: type of _zhpevx__ does not match
>>>> original declaration [-Wlto-type-mismatch]
>>> I managed to reproduce the warning on R-devel r78607 built with
>>> --enable-lto using gcc version 6.3.0 20170516 (Debian 6.3.0-18+deb9u1):
>>>
>>> myzhpevx.cpp:13:16: warning: type of ?zhpevx_? does not match original declaration [-Wlto-type-mismatch]
>>>             void F77_NAME(zhpevx)(char *jobz, char *range, char *uplo,
>>>                  ^
>>> zhpevx.f:232:7: note: type mismatch in parameter 20
>>>         SUBROUTINE zhpevx( JOBZ, RANGE, UPLO, N, AP, VL, VU, IL, IU,
>>>         ^
>>> zhpevx.f:232:7: note: type ?int? should match type ?size_t?
>>> /usr/lib/gcc/x86_64-linux-gnu/6/include/stddef.h:216:23: note: the incompatible type is defined here
>>>   typedef __SIZE_TYPE__ size_t;
>>>                         ^
>>> zhpevx.f:232:7: note: ?zhpevx? was previously declared here
>>>         SUBROUTINE zhpevx( JOBZ, RANGE, UPLO, N, AP, VL, VU, IL, IU,
>>>         ^
>>>
>>> Do you have access to the notes produced by the compiler in addition
>>> to the warnings? Do they spell the same difference?
>>>
>>> If yes, the warning is likely to be safe to ignore. m4/R.m4 notes that,
>>> while gfortran < 8 uses int instead of size_t for hidden size arguments,
>>> it doesn't make a practical difference.
>>>
>>> --
>>> Best regards,
>>> Ivan
>>>
>>>          [[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 	[[alternative HTML version deleted]]
>
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel



	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Tue Jul  7 15:44:09 2020
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Tue, 7 Jul 2020 16:44:09 +0300
Subject: [R-pkg-devel] 
 =?utf-8?b?d2FybmluZzogdHlwZSBvZiDigJh6aHBldnhf4oCZ?=
 =?utf-8?q?_does_not_match_original_declaration_=5B-Wlto-type-mismatch=5D?=
In-Reply-To: <SYCPR01MB5278ACC7379B3608D084B0CD93660@SYCPR01MB5278.ausprd01.prod.outlook.com>
References: <SYCPR01MB527838C6205A60D005883DE6936D0@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <20200706231157.22ed7b92@trisector>
 <SYCPR01MB5278FB70F4C750AE223EDE4093690@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <CAF8bMcYVziRkSZzdo4T2Bt3TeT4ohjpwjDJiutKFXNHDMVve1A@mail.gmail.com>
 <SYCPR01MB5278AD57988A1ED4AD0D24FC93690@SYCPR01MB5278.ausprd01.prod.outlook.com>
 <CAF8bMcY-519pgq0JfjMjgz-Uy6FJx9zeLxrh0ygH=B==DueP+Q@mail.gmail.com>
 <SYCPR01MB5278ACC7379B3608D084B0CD93660@SYCPR01MB5278.ausprd01.prod.outlook.com>
Message-ID: <20200707164409.56336125@trisector>

On Tue, 7 Jul 2020 03:00:23 +0000
Pierre Lafaye de Micheaux <lafaye at unsw.edu.au> wrote:

>Should I just write something like (adding the middle instruction
>below to my existing code above)?:
>
>#ifdef FC_LEN_T
>typedef long long int FC_LEN_T;

No, I don't think that would help.

What _might_ help is adapting the incantation from [*] to redefine
FC_LEN_T to int on older GCC:

#if defined(__GNUC__) && __GNUC__ < 7
 /* Rconfig.h #define doesn't match the actual type
  * of hidden length argument in old gfortran */
 #define FC_LEN_T int
#else
 /* Otherwise we use the #define from Rconfig.h */
 #define USE_FC_LEN_T
#endif
/* Your code starts here */
#include <R.h>
/* ... */

Another option that _should_ help is rewriting zhpevxC in Fortran
2003 using its bind(c) feature. The C interoperability would ensure that
the resulting function is callable from C, while the fact that it's
written in Fortran should make it safe to call other Fortran functions:

subroutine zhpevxC(jobz, range, uplo, n, ap, vl, vu, il, iu, &
                   abstol, m, w, z, ldz, work, rwork, iwork, &
                   ifail, info) bind(c, name='zhpevxC')
 use, intrinsic :: iso_c_binding, only: c_char, c_int, c_double, &
                                        c_double_complex

 character(kind = c_char) :: jobz, range, uplo
 integer(kind = c_int) :: il, info, iu, ldz, m, n
 real(kind = c_double) :: abstol, vl, vu
 integer(kind = c_int) :: ifail( * ), iwork( * )
 real(kind = c_double) :: rwork( * ), w( * )
 complex(kind = c_double_complex) :: ap( * ), work( * ), z( ldz, * )

 call zhpevx(JOBZ, RANGE, UPLO, N, AP, VL, VU, IL, IU, &
             abstol, m, w, z, ldz, work, rwork, iwork, &
             ifail, info)

end subroutine

A subroutine defined like this can be represented by the following C++
prototype: 

extern "C" void zhpevx(
	char * JOBZ, char * RANGE, char * UPLO, int * N,
	std::complex<double> * AP, double * VL, double * VU, int * IL,
	int * IU, double * abstol, int * m, double * w,
	std::complex<double> * z, int * ldz, std::complex<double> *
	work, double * rwork, int * iwork, int * ifail, int * info
);

This is the approach described in WRE 6.6.1 Fortran character strings
near the code block with the definition of subroutine c_dgemm.

-- 
Best regards,
Ivan

[*]
https://gcc.gnu.org/onlinedocs/gfortran/Argument-passing-conventions.html


From g|t@demont @end|ng |rom gm@||@com  Tue Jul  7 19:30:08 2020
From: g|t@demont @end|ng |rom gm@||@com (git demont)
Date: Tue, 7 Jul 2020 19:30:08 +0200
Subject: [R-pkg-devel] 
 How to refer to COPYRIGHTS and AUTHORS extra files in DESCRIPTION
In-Reply-To: <CAGf8esiDPYObVeG_izRV4D+8zMuYX=4a9jHnYrgtZyZYHSK+Dw@mail.gmail.com>
References: <CAGf8esiDPYObVeG_izRV4D+8zMuYX=4a9jHnYrgtZyZYHSK+Dw@mail.gmail.com>
Message-ID: <CAGf8esh=kjWn0k38OY+zN0RG-nGHPTFPu5y2vhRggyF6-P7=JA@mail.gmail.com>

Hi all,

Sorry for asking again, but I got absolutely no advice on how to
correctly refer to extra copyrights and authors files in package
DESCRIPTION.
I know this can be considered as impolite and I don't want to do so.
So, I waited one week until sending the present message and I promise I
will not send another to ask for the same thing after this one.

Best,
Yohann




On Mon, Jun 29, 2020 at 4:04 PM git demont <git.demont at gmail.com> wrote:

> Hi all,
>
> I am developing a package called 'IFC'.
> https://github.com/gitdemont/IFC/
> <https://github.com/gitdemont/IFC/tree/v0.0.7>
>
> Last submission (v0.0.7) was almost the final one to get it CRAN
> https://github.com/gitdemont/IFC/tree/v0.0.7
> It was manually checked and it should be accepted if I removed a dontrun
> (that I unfortunately forgot).
>
> For the next submission ( I hope it will be the good one ), in addition to
> fixing the dontrun, I would like to include a small modification that was
> not asked. I would like to avoid another round of submission/review by
> introducing an issue that was not here. In DESCRIPTION of 'IFC', I am
> inviting users to refer to files for copyrights and authorship. "See file
> inst/COPYRIGHTS and file inst/AUTHORS for a list of copyright holders and
> authors"
>
> However, I am not sure whether I should say 'inst/COPYRIGHTS' and
> 'inst/AUTHORS' because these files are in the 'inst/' directory of the
> built tar.gz, or if I should only refer to 'COPYRIGHTS' and 'AUTHORS'
> (without inst/) because once installed these files will be at the root of
> IFC library directory.
> The same question olds for "Copyright: file inst/COPYRIGHTS".
>
> In CRAN policies, one can read:
> "Where copyrights are held by an entity other than the package authors,
> this should preferably be indicated via ?cph? roles in the ?Authors at R?
> field, or using a ?Copyright? field (if necessary referring to an
> inst/COPYRIGHTS file)."
> In 'RcppMsgPack' for instance we have:
> - in the description: "See the files 'COPYRIGHTS' and 'AUTHORS' for a full
> list of copyright holders and contributors to 'msgpack-c'."
> - in the copyrights: "inst/COPYRIGHTS".
>
> Best,
> Yohann
>

	[[alternative HTML version deleted]]


From c@@rd|@g@bor @end|ng |rom gm@||@com  Tue Jul  7 19:51:12 2020
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Tue, 7 Jul 2020 18:51:12 +0100
Subject: [R-pkg-devel] 
 How to refer to COPYRIGHTS and AUTHORS extra files in DESCRIPTION
In-Reply-To: <CAGf8esh=kjWn0k38OY+zN0RG-nGHPTFPu5y2vhRggyF6-P7=JA@mail.gmail.com>
References: <CAGf8esiDPYObVeG_izRV4D+8zMuYX=4a9jHnYrgtZyZYHSK+Dw@mail.gmail.com>
 <CAGf8esh=kjWn0k38OY+zN0RG-nGHPTFPu5y2vhRggyF6-P7=JA@mail.gmail.com>
Message-ID: <CABtg=KkaCq48PFFM-xSyyAw_+YysQKdmLJDH93irL92+WZeqzA@mail.gmail.com>

HI,

here is an example from a package that was accepted relatively recently:
https://github.com/r-lib/presser/blob/master/DESCRIPTION#L8-L11

Gabor

On Tue, Jul 7, 2020 at 6:30 PM git demont <git.demont at gmail.com> wrote:
>
> Hi all,
>
> Sorry for asking again, but I got absolutely no advice on how to
> correctly refer to extra copyrights and authors files in package
> DESCRIPTION.
> I know this can be considered as impolite and I don't want to do so.
> So, I waited one week until sending the present message and I promise I
> will not send another to ask for the same thing after this one.
>
> Best,
> Yohann
>
>
>
>
> On Mon, Jun 29, 2020 at 4:04 PM git demont <git.demont at gmail.com> wrote:
>
> > Hi all,
> >
> > I am developing a package called 'IFC'.
> > https://github.com/gitdemont/IFC/
> > <https://github.com/gitdemont/IFC/tree/v0.0.7>
> >
> > Last submission (v0.0.7) was almost the final one to get it CRAN
> > https://github.com/gitdemont/IFC/tree/v0.0.7
> > It was manually checked and it should be accepted if I removed a dontrun
> > (that I unfortunately forgot).
> >
> > For the next submission ( I hope it will be the good one ), in addition to
> > fixing the dontrun, I would like to include a small modification that was
> > not asked. I would like to avoid another round of submission/review by
> > introducing an issue that was not here. In DESCRIPTION of 'IFC', I am
> > inviting users to refer to files for copyrights and authorship. "See file
> > inst/COPYRIGHTS and file inst/AUTHORS for a list of copyright holders and
> > authors"
> >
> > However, I am not sure whether I should say 'inst/COPYRIGHTS' and
> > 'inst/AUTHORS' because these files are in the 'inst/' directory of the
> > built tar.gz, or if I should only refer to 'COPYRIGHTS' and 'AUTHORS'
> > (without inst/) because once installed these files will be at the root of
> > IFC library directory.
> > The same question olds for "Copyright: file inst/COPYRIGHTS".
> >
> > In CRAN policies, one can read:
> > "Where copyrights are held by an entity other than the package authors,
> > this should preferably be indicated via ?cph? roles in the ?Authors at R?
> > field, or using a ?Copyright? field (if necessary referring to an
> > inst/COPYRIGHTS file)."
> > In 'RcppMsgPack' for instance we have:
> > - in the description: "See the files 'COPYRIGHTS' and 'AUTHORS' for a full
> > list of copyright holders and contributors to 'msgpack-c'."
> > - in the copyrights: "inst/COPYRIGHTS".
> >
> > Best,
> > Yohann
> >
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From r|||ght79 @end|ng |rom gm@||@com  Tue Jul  7 19:55:26 2020
From: r|||ght79 @end|ng |rom gm@||@com (Robert M. Flight)
Date: Tue, 7 Jul 2020 13:55:26 -0400
Subject: [R-pkg-devel] 
 How to refer to COPYRIGHTS and AUTHORS extra files in DESCRIPTION
In-Reply-To: <CABtg=KkaCq48PFFM-xSyyAw_+YysQKdmLJDH93irL92+WZeqzA@mail.gmail.com>
References: <CAGf8esiDPYObVeG_izRV4D+8zMuYX=4a9jHnYrgtZyZYHSK+Dw@mail.gmail.com>
 <CAGf8esh=kjWn0k38OY+zN0RG-nGHPTFPu5y2vhRggyF6-P7=JA@mail.gmail.com>
 <CABtg=KkaCq48PFFM-xSyyAw_+YysQKdmLJDH93irL92+WZeqzA@mail.gmail.com>
Message-ID: <CAJLyBTU8HAA-t26gp2PWZQ1ObUiUP_pDU8JECOY09p43OReqcA@mail.gmail.com>

Yohann,

Here is a description of the strategy I used a couple of years ago.

https://rmflight.github.io/post/licensing-r-packages-that-include-others-code/

-Robert

On Tue, Jul 7, 2020 at 1:52 PM G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:

> HI,
>
> here is an example from a package that was accepted relatively recently:
> https://github.com/r-lib/presser/blob/master/DESCRIPTION#L8-L11
>
> Gabor
>
> On Tue, Jul 7, 2020 at 6:30 PM git demont <git.demont at gmail.com> wrote:
> >
> > Hi all,
> >
> > Sorry for asking again, but I got absolutely no advice on how to
> > correctly refer to extra copyrights and authors files in package
> > DESCRIPTION.
> > I know this can be considered as impolite and I don't want to do so.
> > So, I waited one week until sending the present message and I promise I
> > will not send another to ask for the same thing after this one.
> >
> > Best,
> > Yohann
> >
> >
> >
> >
> > On Mon, Jun 29, 2020 at 4:04 PM git demont <git.demont at gmail.com> wrote:
> >
> > > Hi all,
> > >
> > > I am developing a package called 'IFC'.
> > > https://github.com/gitdemont/IFC/
> > > <https://github.com/gitdemont/IFC/tree/v0.0.7>
> > >
> > > Last submission (v0.0.7) was almost the final one to get it CRAN
> > > https://github.com/gitdemont/IFC/tree/v0.0.7
> > > It was manually checked and it should be accepted if I removed a
> dontrun
> > > (that I unfortunately forgot).
> > >
> > > For the next submission ( I hope it will be the good one ), in
> addition to
> > > fixing the dontrun, I would like to include a small modification that
> was
> > > not asked. I would like to avoid another round of submission/review by
> > > introducing an issue that was not here. In DESCRIPTION of 'IFC', I am
> > > inviting users to refer to files for copyrights and authorship. "See
> file
> > > inst/COPYRIGHTS and file inst/AUTHORS for a list of copyright holders
> and
> > > authors"
> > >
> > > However, I am not sure whether I should say 'inst/COPYRIGHTS' and
> > > 'inst/AUTHORS' because these files are in the 'inst/' directory of the
> > > built tar.gz, or if I should only refer to 'COPYRIGHTS' and 'AUTHORS'
> > > (without inst/) because once installed these files will be at the root
> of
> > > IFC library directory.
> > > The same question olds for "Copyright: file inst/COPYRIGHTS".
> > >
> > > In CRAN policies, one can read:
> > > "Where copyrights are held by an entity other than the package authors,
> > > this should preferably be indicated via ?cph? roles in the ?Authors at R?
> > > field, or using a ?Copyright? field (if necessary referring to an
> > > inst/COPYRIGHTS file)."
> > > In 'RcppMsgPack' for instance we have:
> > > - in the description: "See the files 'COPYRIGHTS' and 'AUTHORS' for a
> full
> > > list of copyright holders and contributors to 'msgpack-c'."
> > > - in the copyrights: "inst/COPYRIGHTS".
> > >
> > > Best,
> > > Yohann
> > >
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From d|cko@@hm@dou @end|ng |rom gm@||@com  Tue Jul  7 19:56:44 2020
From: d|cko@@hm@dou @end|ng |rom gm@||@com (Ahmadou Dicko)
Date: Tue, 7 Jul 2020 17:56:44 +0000
Subject: [R-pkg-devel] 
 How to refer to COPYRIGHTS and AUTHORS extra files in DESCRIPTION
In-Reply-To: <CAGf8esh=kjWn0k38OY+zN0RG-nGHPTFPu5y2vhRggyF6-P7=JA@mail.gmail.com>
References: <CAGf8esiDPYObVeG_izRV4D+8zMuYX=4a9jHnYrgtZyZYHSK+Dw@mail.gmail.com>
 <CAGf8esh=kjWn0k38OY+zN0RG-nGHPTFPu5y2vhRggyF6-P7=JA@mail.gmail.com>
Message-ID: <CAP8THHUvHiVS1iMTo9-P9hnOFZZ-GDJpY8s2kCVXqoH2t=CUVg@mail.gmail.com>

Hi Yohann,

I had a similar situation with my first package.
I used Author + Maintainer field instead Authors at R and I added the
inst/AUTHORS to Author and my email to the Maintainer field.
In the list of author names (and I have a lot of them in cgal4h), make sure
that you also define the different roles (i.e ctb, cph, etc).
You can access the metadata here and the Gitlab repository there

https://CRAN.R-project.org/package=cgal4h

Hope it helps.

Ahmadou



On Tue, Jul 7, 2020 at 5:30 PM git demont <git.demont at gmail.com> wrote:

> Hi all,
>
> Sorry for asking again, but I got absolutely no advice on how to
> correctly refer to extra copyrights and authors files in package
> DESCRIPTION.
> I know this can be considered as impolite and I don't want to do so.
> So, I waited one week until sending the present message and I promise I
> will not send another to ask for the same thing after this one.
>
> Best,
> Yohann
>
>
>
>
> On Mon, Jun 29, 2020 at 4:04 PM git demont <git.demont at gmail.com> wrote:
>
> > Hi all,
> >
> > I am developing a package called 'IFC'.
> > https://github.com/gitdemont/IFC/
> > <https://github.com/gitdemont/IFC/tree/v0.0.7>
> >
> > Last submission (v0.0.7) was almost the final one to get it CRAN
> > https://github.com/gitdemont/IFC/tree/v0.0.7
> > It was manually checked and it should be accepted if I removed a dontrun
> > (that I unfortunately forgot).
> >
> > For the next submission ( I hope it will be the good one ), in addition
> to
> > fixing the dontrun, I would like to include a small modification that was
> > not asked. I would like to avoid another round of submission/review by
> > introducing an issue that was not here. In DESCRIPTION of 'IFC', I am
> > inviting users to refer to files for copyrights and authorship. "See file
> > inst/COPYRIGHTS and file inst/AUTHORS for a list of copyright holders and
> > authors"
> >
> > However, I am not sure whether I should say 'inst/COPYRIGHTS' and
> > 'inst/AUTHORS' because these files are in the 'inst/' directory of the
> > built tar.gz, or if I should only refer to 'COPYRIGHTS' and 'AUTHORS'
> > (without inst/) because once installed these files will be at the root of
> > IFC library directory.
> > The same question olds for "Copyright: file inst/COPYRIGHTS".
> >
> > In CRAN policies, one can read:
> > "Where copyrights are held by an entity other than the package authors,
> > this should preferably be indicated via ?cph? roles in the ?Authors at R?
> > field, or using a ?Copyright? field (if necessary referring to an
> > inst/COPYRIGHTS file)."
> > In 'RcppMsgPack' for instance we have:
> > - in the description: "See the files 'COPYRIGHTS' and 'AUTHORS' for a
> full
> > list of copyright holders and contributors to 'msgpack-c'."
> > - in the copyrights: "inst/COPYRIGHTS".
> >
> > Best,
> > Yohann
> >
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


-- 
Ahmadou H. DICKO, PhD

Statistical consultant
Mobile: (+221) 77 123 81 69
Skype: dicko.ahmadou.h
Twitter : @dickoah
Gitlab: gitlab/dickoa
Github: github/dickoa

	[[alternative HTML version deleted]]


From henr|k@bengt@@on @end|ng |rom gm@||@com  Wed Jul  8 03:11:00 2020
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Tue, 7 Jul 2020 18:11:00 -0700
Subject: [R-pkg-devel] How do you Rd reference parallel::mclapply() so it
 works also on Windows?
Message-ID: <CAFDcVCRNxFY1XPQ2OXv3Ymnc34vgQzYmm9cdf7Xp_=4LABXq6w@mail.gmail.com>

Here's another "Non-file package-anchored link(s) ..." issue.  I'd
like to reference parallel::mclapply() in my help pages.  With the new
R-devel requirements, you have to link to the file and not the topic.
However, there is no cross-platform stable file reference for
parallel::mclapply();

# According to R on Linux
> basename(help("mclapply", package="parallel"))
[1] "mclapply"

# According to R on Windows
> basename(help("mclapply", package="parallel"))
[1] "mcdummies"

How can I provide a \link{} reference to the help("mclapply",
package="parallel") documentation?

Thanks,

Henrik


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Wed Jul  8 07:18:53 2020
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Wed, 8 Jul 2020 07:18:53 +0200
Subject: [R-pkg-devel] 
 How do you Rd reference parallel::mclapply() so it
 works also on Windows?
In-Reply-To: <CAFDcVCRNxFY1XPQ2OXv3Ymnc34vgQzYmm9cdf7Xp_=4LABXq6w@mail.gmail.com>
References: <CAFDcVCRNxFY1XPQ2OXv3Ymnc34vgQzYmm9cdf7Xp_=4LABXq6w@mail.gmail.com>
Message-ID: <ac9ce809-eebb-1591-dab9-a05daebaeaed@statistik.tu-dortmund.de>

Not nice, but you may follow the way described in subsection 
"Platform-specific documentation" in WRE.

Best,
Uwe


On 08.07.2020 03:11, Henrik Bengtsson wrote:
> Here's another "Non-file package-anchored link(s) ..." issue.  I'd
> like to reference parallel::mclapply() in my help pages.  With the new
> R-devel requirements, you have to link to the file and not the topic.
> However, there is no cross-platform stable file reference for
> parallel::mclapply();
> 
> # According to R on Linux
>> basename(help("mclapply", package="parallel"))
> [1] "mclapply"
> 
> # According to R on Windows
>> basename(help("mclapply", package="parallel"))
> [1] "mcdummies"
> 
> How can I provide a \link{} reference to the help("mclapply",
> package="parallel") documentation?
> 
> Thanks,
> 
> Henrik
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Wed Jul  8 09:11:33 2020
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Wed, 8 Jul 2020 09:11:33 +0200
Subject: [R-pkg-devel] 
 How do you Rd reference parallel::mclapply() so it
 works also on Windows?
In-Reply-To: <CAFDcVCRNxFY1XPQ2OXv3Ymnc34vgQzYmm9cdf7Xp_=4LABXq6w@mail.gmail.com>
References: <CAFDcVCRNxFY1XPQ2OXv3Ymnc34vgQzYmm9cdf7Xp_=4LABXq6w@mail.gmail.com>
Message-ID: <24325.29093.732066.164810@stat.math.ethz.ch>

>>>>> Henrik Bengtsson 
>>>>>     on Tue, 7 Jul 2020 18:11:00 -0700 writes:

    > Here's another "Non-file package-anchored link(s) ..."
    > issue.  I'd like to reference parallel::mclapply() in my
    > help pages.  With the new R-devel requirements, you have
    > to link to the file and not the topic.  However, there is
    > no cross-platform stable file reference for
    > parallel::mclapply();

    > # According to R on Linux
    >> basename(help("mclapply", package="parallel"))
    > [1] "mclapply"

    > # According to R on Windows
    >> basename(help("mclapply", package="parallel"))
    > [1] "mcdummies"

Indeed, another example, why we should move away from the
'file' instead of 'topic' (<-> \alias{.}) paradigm and requirement.

I'm optimistic we will do that soonish ...

Apropos: Today starts the virtual [useR! 2020] conference with
	 an R-core Keynote and an R-core Panel for asking
	 questions :

  https://user2020.r-project.org/program/agenda/ 

  https://twitter.com/useR2020stl/status/1280655009714233346?s=20

Martin


    > How can I provide a \link{} reference to the
    > help("mclapply", package="parallel") documentation?

    > Thanks,
    > Henrik


From g|t@demont @end|ng |rom gm@||@com  Wed Jul  8 10:15:50 2020
From: g|t@demont @end|ng |rom gm@||@com (git demont)
Date: Wed, 8 Jul 2020 10:15:50 +0200
Subject: [R-pkg-devel] 
 How to refer to COPYRIGHTS and AUTHORS extra files in DESCRIPTION
In-Reply-To: <CAP8THHUvHiVS1iMTo9-P9hnOFZZ-GDJpY8s2kCVXqoH2t=CUVg@mail.gmail.com>
References: <CAGf8esiDPYObVeG_izRV4D+8zMuYX=4a9jHnYrgtZyZYHSK+Dw@mail.gmail.com>
 <CAGf8esh=kjWn0k38OY+zN0RG-nGHPTFPu5y2vhRggyF6-P7=JA@mail.gmail.com>
 <CAP8THHUvHiVS1iMTo9-P9hnOFZZ-GDJpY8s2kCVXqoH2t=CUVg@mail.gmail.com>
Message-ID: <CAGf8eshrE500Z3y79SXw1pG-XOupSZTb0UzsaeWPC5n+McY6XQ@mail.gmail.com>

Thank you Ahmadou, Robert and G?bor,

In package 'presser'  G?bor used no dedicated AUTHORS file but use
'comment' and 'role' tag of Authors at R to mention their contribution and
refer to further comments in file (e.g.  inst/credits/redoc.md, src/md5.h)

Robert, also described a strategy using Authors at R

Ahmadou, used something similar to what I have done in the 'IFC' package I
want to submit on CRAN, with extra AUTHORS and COPYRIGHTS files found in
inst/ directory of its 'cgal4h' package. Then, he used "Author: file
inst/AUTHORS" and "Copyright: file inst/COPYRIGHTS" in DESCRIPTION file to
refer to these files.

In 'RcppMsgPack' package, I was using as an example in my 1st message,
extra AUTHORS and COPYRIGHTS files found in 'inst/' directory were also
used.
DESCRIPTION file contains:
- Author: Travers Ching and Dirk Eddelbuettel; the authors and contributors
of MsgPack
- Copyright: file inst/COPYRIGHTS

So, as far as I understand from your replies, there seems to be no general
rule on how to do it.
But it seems that when Author: or Copyright: is used in DESCRIPTION and
refer to a file then 'inst/' directory should be prepend to the file name
(e.g.  Copyright: file inst/COPYRIGHTS)

In next submission I will use in DESCRIPTION:
Authors at R and have a 'inst/AUTHORS' file
Copyright: file inst/COPYRIGHTS  and have a 'inst/COPYRIGHTS' file
Description: <the description of my 'IFC' package> + See file 'COPYRIGHTS'
and file 'AUTHORS' for a list of copyright holders and authors

Thanks a lot for your help,
Yohann

On Tue, Jul 7, 2020 at 7:56 PM Ahmadou Dicko <dicko.ahmadou at gmail.com>
wrote:

> Hi Yohann,
>
> I had a similar situation with my first package.
> I used Author + Maintainer field instead Authors at R and I added the
> inst/AUTHORS to Author and my email to the Maintainer field.
> In the list of author names (and I have a lot of them in cgal4h), make
> sure that you also define the different roles (i.e ctb, cph, etc).
> You can access the metadata here and the Gitlab repository there
>
> https://CRAN.R-project.org/package=cgal4h
>
> Hope it helps.
>
> Ahmadou
>
>
>
> On Tue, Jul 7, 2020 at 5:30 PM git demont <git.demont at gmail.com> wrote:
>
>> Hi all,
>>
>> Sorry for asking again, but I got absolutely no advice on how to
>> correctly refer to extra copyrights and authors files in package
>> DESCRIPTION.
>> I know this can be considered as impolite and I don't want to do so.
>> So, I waited one week until sending the present message and I promise I
>> will not send another to ask for the same thing after this one.
>>
>> Best,
>> Yohann
>>
>>
>>
>>
>> On Mon, Jun 29, 2020 at 4:04 PM git demont <git.demont at gmail.com> wrote:
>>
>> > Hi all,
>> >
>> > I am developing a package called 'IFC'.
>> > https://github.com/gitdemont/IFC/
>> > <https://github.com/gitdemont/IFC/tree/v0.0.7>
>> >
>> > Last submission (v0.0.7) was almost the final one to get it CRAN
>> > https://github.com/gitdemont/IFC/tree/v0.0.7
>> > It was manually checked and it should be accepted if I removed a dontrun
>> > (that I unfortunately forgot).
>> >
>> > For the next submission ( I hope it will be the good one ), in addition
>> to
>> > fixing the dontrun, I would like to include a small modification that
>> was
>> > not asked. I would like to avoid another round of submission/review by
>> > introducing an issue that was not here. In DESCRIPTION of 'IFC', I am
>> > inviting users to refer to files for copyrights and authorship. "See
>> file
>> > inst/COPYRIGHTS and file inst/AUTHORS for a list of copyright holders
>> and
>> > authors"
>> >
>> > However, I am not sure whether I should say 'inst/COPYRIGHTS' and
>> > 'inst/AUTHORS' because these files are in the 'inst/' directory of the
>> > built tar.gz, or if I should only refer to 'COPYRIGHTS' and 'AUTHORS'
>> > (without inst/) because once installed these files will be at the root
>> of
>> > IFC library directory.
>> > The same question olds for "Copyright: file inst/COPYRIGHTS".
>> >
>> > In CRAN policies, one can read:
>> > "Where copyrights are held by an entity other than the package authors,
>> > this should preferably be indicated via ?cph? roles in the ?Authors at R?
>> > field, or using a ?Copyright? field (if necessary referring to an
>> > inst/COPYRIGHTS file)."
>> > In 'RcppMsgPack' for instance we have:
>> > - in the description: "See the files 'COPYRIGHTS' and 'AUTHORS' for a
>> full
>> > list of copyright holders and contributors to 'msgpack-c'."
>> > - in the copyrights: "inst/COPYRIGHTS".
>> >
>> > Best,
>> > Yohann
>> >
>>
>>         [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>
>
> --
> Ahmadou H. DICKO, PhD
>
> Statistical consultant
> Mobile: (+221) 77 123 81 69
> Skype: dicko.ahmadou.h
> Twitter : @dickoah
> Gitlab: gitlab/dickoa
> Github: github/dickoa
>

	[[alternative HTML version deleted]]


From |@b@rto@96 @end|ng |rom gm@||@com  Wed Jul  8 11:06:31 2020
From: |@b@rto@96 @end|ng |rom gm@||@com (Frantisek Bartos)
Date: Wed, 8 Jul 2020 11:06:31 +0200
Subject: [R-pkg-devel] package installation and linking with JAGS
Message-ID: <CAK+wxiOXjMAd3CVfJMrT9Mh25EfrS7GbJfvhoJswa-xWZAWj6A@mail.gmail.com>

Hello,

we have written an R package that uses JAGS and requires a JAGS module
that's distributed with the package. We had a lot of problems making
the installation work across platforms and we adapted the way it's done in
'runjags' (it also contains a JAGS module). However, we are having two
problems:

1) the CMD CHECK returns this warning
Check: for GNU extensions in Makefiles, Result: WARNING
  Found the following file(s) containing GNU extensions:
    src/Makevars
    src/Makevars.in
  Portable Makefiles do not use GNU extensions such as +=, :=, $(shell),
  $(wildcard), ifeq ... endif, .NOTPARALLEL See section 'Writing portable
  packages' in the 'Writing R Extensions' manual.

2) the package installation works only from the source. For example,
devtools::install_github() returns an error since .o files are generated
inside of the package folder. A similar problem occurs when generating the
source .tar.gz, however, manually deleting the .o files from it fixes
the problem and it can be used for installing the package.

I wanted to ask how should I proceed. Can I submit the package to cran with
this warning? We verified that the installation from source works on
Windows, macOS, and Linux.

Thank you very much,
Franti?ek Barto?


github link: https://github.com/FBartos/RoBMA

the makevars.win file:
#Set a default value for JAGS_ROOT in case the user hasn't set it, this
location was specified by the CRAN-team (according to runjags, where I
copied this from)
JAGS_ROOT ?= c:/progra~1/JAGS/JAGS-4.3.0

## Use the old ABI to match JAGS 4.x compilation on Windows:
PKG_CXXFLAGS = -D_GLIBCXX_USE_CXX11_ABI=0

PKG_CPPFLAGS=-I"$(JAGS_ROOT)/include"
PKG_LIBS=-L"$(JAGS_ROOT)/${R_ARCH}/bin" -ljags-4 -ljrmath-0

# Actual sources and objects for RoBMA
SOURCES= $(wildcard *.cc) $(wildcard */*.cc)
OBJECTS=$(SOURCES:.cc=.o)

the makevars.in file:
PKG_CPPFLAGS=@JAGS_CFLAGS@
PKG_LIBS=@JAGS_LIBS@ @JAGS_RPATH@

SOURCES= $(wildcard *.cc) $(wildcard */*.cc)
OBJECTS=$(SOURCES:.cc=.o)

	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Wed Jul  8 14:20:42 2020
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Wed, 8 Jul 2020 15:20:42 +0300
Subject: [R-pkg-devel] package installation and linking with JAGS
In-Reply-To: <CAK+wxiOXjMAd3CVfJMrT9Mh25EfrS7GbJfvhoJswa-xWZAWj6A@mail.gmail.com>
References: <CAK+wxiOXjMAd3CVfJMrT9Mh25EfrS7GbJfvhoJswa-xWZAWj6A@mail.gmail.com>
Message-ID: <20200708152042.12719910@trisector>

On Wed, 8 Jul 2020 11:06:31 +0200
Frantisek Bartos <f.bartos96 at gmail.com> wrote:

>Check: for GNU extensions in Makefiles, Result: WARNING

This warning is easy to deal with:

>JAGS_ROOT ?= c:/progra~1/JAGS/JAGS-4.3.0

Use plain "=" macro definitions, since others aren't considered portable
enough.

>SOURCES= $(wildcard *.cc) $(wildcard */*.cc)

Replace $(wildcard ...) with hard-coded lists of files.

See the POSIX standard [*], or, indeed, section 'Writing portable
packages' in WRE [**] for a list of Make features considered portable.

Alternatively, add "GNU make" to SystemRequirements: in your
DESCRIPTION. This will silence the warnings, but require the GNU
flavour of Make to install your package.

>2) the package installation works only from the source. For example,
>devtools::install_github() returns an error since .o files are
>generated inside of the package folder. A similar problem occurs when
>generating the source .tar.gz, however, manually deleting the .o files
>from it fixes the problem and it can be used for installing the
>package.

How do you build the source package before installing it? I tried to
git clone your package, then R CMD build . it, and got a perfectly valid
RoBMA_0.0.0.9000.tar.gz without any *.o files inside. I *think* that R
CMD INSTALL <directory> may be not a good idea, but you can add .*\.o$
to .Rbuildignore to prevent the object files from getting inside your
source package this way.

>	[[alternative HTML version deleted]]

Also, please don't post in HTML.

-- 
Best regards,
Ivan

[*]
https://pubs.opengroup.org/onlinepubs/9699919799/utilities/make.html

[**]
https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Writing-portable-packages


From d@v|d@corte@@r|ver@ @end|ng |rom gm@||@com  Wed Jul  8 18:23:41 2020
From: d@v|d@corte@@r|ver@ @end|ng |rom gm@||@com (David Cortes)
Date: Wed, 08 Jul 2020 19:23:41 +0300
Subject: [R-pkg-devel] Valgrind warning on saveRDS,
 about object in external pointer
Message-ID: <4fda6e6227c10640becba2bcca44cdef29c0a065.camel@gmail.com>

Hello,

I am currently getting a valgrind warning in a package that I?ve
developed, which occurs on a call to R?s ?saveRDS?, and I am having a
very hard time trying to figure out what went wrong:
https://www.stats.ox.ac.uk/pub/bdr/memtests/valgrind/isotree/isotree-Ex.Rout

In more detail:
- The package creates a C++ struct which it accesses through the
external pointer system (Rcpp::Xptr).
- The warning is about an un-initialized value allocated in a call to
C++ std::vector::reserve, which is called on a C++ vector member of the
struct in the external pointer.
- The warning occurs on a call to R?s ?saveRDS?.

I had the idea  that ?saveRDS? wouldn?t do anything about external
pointers in an S3 object, and thus I am wondering why exactly does the
warning occur in ?saveRDS?.

Other than the external pointer, the C++ object is also serialized into
an R raw vector using the Cereal library (which occurs in an earlier R
command, before the problematic ?saveRDS?), and this vector is part of
the objects that get serialized in the call to R?s ?saveRDS?, but as
far as I know, it should not possible to get such a warning about the
original object after those bytes were copied over and only the new
copied bytes are accessed.

Any help is appreciated.

Sincerely,
David Cortes


From kry|ov@r00t @end|ng |rom gm@||@com  Wed Jul  8 19:59:33 2020
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Wed, 8 Jul 2020 20:59:33 +0300
Subject: [R-pkg-devel] Valgrind warning on saveRDS,
 about object in external pointer
In-Reply-To: <4fda6e6227c10640becba2bcca44cdef29c0a065.camel@gmail.com>
References: <4fda6e6227c10640becba2bcca44cdef29c0a065.camel@gmail.com>
Message-ID: <20200708205933.35092340@trisector>

On Wed, 08 Jul 2020 19:23:41 +0300
David Cortes <david.cortes.rivera at gmail.com> wrote:

>- The warning is about an un-initialized value allocated in a call to
>C++ std::vector::reserve, which is called on a C++ vector member of the
>struct in the external pointer.

I'm ready to admit that I didn't read the code well enough, but it
seems to me that the vector resized on line 752 resides in
std::vector<WorkerMemory> worker_memory allocated on lines 411-415 in
int fit_iforest(...) and then disposed of by the end of the function. I
don't see workspace.ix_arr being saved anywhere model_outputs(_ext). I
think that workspace.ix_arr shouldn't even exist by the time the lines
following isolation.forest(...) are executed.

Can you reproduce the warning on your own computer? It might be helpful
to run R -d 'valgrind --vgdb-error=1 --vgdb-stop-at=startup', follow
Valgrind's instructions to attach the debugger to it, type "continue"
into gdb, then trigger the warning in R and use gdb to gather more
information when Valgrind stops the process around the memory access
it considers uninitialised.

-- 
Best regards,
Ivan


From d@v|d@corte@@r|ver@ @end|ng |rom gm@||@com  Wed Jul  8 21:43:13 2020
From: d@v|d@corte@@r|ver@ @end|ng |rom gm@||@com (David Cortes)
Date: Wed, 08 Jul 2020 22:43:13 +0300
Subject: [R-pkg-devel] Valgrind warning on saveRDS,
 about object in external pointer
In-Reply-To: <20200708205933.35092340@trisector>
References: <4fda6e6227c10640becba2bcca44cdef29c0a065.camel@gmail.com>
 <20200708205933.35092340@trisector>
Message-ID: <7f384bde935815ee153885a566cd1515997d38e7.camel@gmail.com>

Thanks for answering.

I?m not able to reproduce the warning when trying R CMD check with
valgrind on my computer (tried compiling with gcc9 and clang9), nor
with the r-debug docker images from github (
https://github.com/wch/r-debug). However, from what I was told when
trying to upload a new version of the package, the warning still
persist in the CRAN servers when checking the newer version.

About the source code: it actually complains about line
fit_model.cpp:751 :
hplane_root->reserve(exp_nodes);

Which is part of the struct ?ModelOutputsExt *model_outputs? (the one
that gets serialized through Cereal into an R raw vector, later
serialized through ?saveRDS?).

The same std::vector in the struct is heavily used all throughout the
module, and in most cases it?s only used with std::vector::back and
std::vector::emplace_back (first emplace right after L751), so it?s
unlikely that it could have uninitialized elements with no complaints
from asan or valgrind when creating the S3 object that goes to
?saveRDS?.

Best regards,
David Cortes
On Wed, 2020-07-08 at 20:59 +0300, Ivan Krylov wrote:
> On Wed, 08 Jul 2020 19:23:41 +0300
> David Cortes <david.cortes.rivera at gmail.com> wrote:
> 
> > - The warning is about an un-initialized value allocated in a call
> > to
> > C++ std::vector::reserve, which is called on a C++ vector member of
> > the
> > struct in the external pointer.
> 
> I'm ready to admit that I didn't read the code well enough, but it
> seems to me that the vector resized on line 752 resides in
> std::vector<WorkerMemory> worker_memory allocated on lines 411-415 in
> int fit_iforest(...) and then disposed of by the end of the function.
> I
> don't see workspace.ix_arr being saved anywhere model_outputs(_ext).
> I
> think that workspace.ix_arr shouldn't even exist by the time the
> lines
> following isolation.forest(...) are executed.
> 
> Can you reproduce the warning on your own computer? It might be
> helpful
> to run R -d 'valgrind --vgdb-error=1 --vgdb-stop-at=startup', follow
> Valgrind's instructions to attach the debugger to it, type "continue"
> into gdb, then trigger the warning in R and use gdb to gather more
> information when Valgrind stops the process around the memory access
> it considers uninitialised.
>


From henr|k@bengt@@on @end|ng |rom gm@||@com  Thu Jul  9 03:44:17 2020
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Wed, 8 Jul 2020 18:44:17 -0700
Subject: [R-pkg-devel] 
 How do you Rd reference parallel::mclapply() so it
 works also on Windows?
In-Reply-To: <24325.33036.927213.996313@hornik.net>
References: <CAFDcVCRNxFY1XPQ2OXv3Ymnc34vgQzYmm9cdf7Xp_=4LABXq6w@mail.gmail.com>
 <24325.33036.927213.996313@hornik.net>
Message-ID: <CAFDcVCTU0bW6NrL6bqMgbESqtSOaP1-YJ0nkkyZGsCjMJ5Gz4A@mail.gmail.com>

On Wed, Jul 8, 2020 at 12:11 AM Martin Maechler
<maechler at stat.math.ethz.ch> wrote:
...
> Indeed, another example, why we should move away from the
> 'file' instead of 'topic' (<-> \alias{.}) paradigm and requirement.
>
> I'm optimistic we will do that soonish ...

On Wed, Jul 8, 2020 at 1:17 AM Kurt Hornik <Kurt.Hornik at wu.ac.at> wrote:
...
> But perhaps simply wait for a few more days ...

Oh, this is good news.

I see that these new warnings have already been disabled in R-devel.

Thxs,

Henrik


On Wed, Jul 8, 2020 at 1:17 AM Kurt Hornik <Kurt.Hornik at wu.ac.at> wrote:
>
> >>>>> Henrik Bengtsson writes:
>
> > Here's another "Non-file package-anchored link(s) ..." issue.  I'd
> > like to reference parallel::mclapply() in my help pages.  With the new
> > R-devel requirements, you have to link to the file and not the topic.
> > However, there is no cross-platform stable file reference for
> > parallel::mclapply();
>
> > # According to R on Linux
> >> basename(help("mclapply", package="parallel"))
> > [1] "mclapply"
>
> > # According to R on Windows
> >> basename(help("mclapply", package="parallel"))
> > [1] "mcdummies"
>
> > How can I provide a \link{} reference to the help("mclapply",
> > package="parallel") documentation?
>
> See R-exts, either "Platform-specific documentation" or "Dynamic pages".
>
> But perhaps simply wait for a few more days ...
>
> Best
> -k
>
>
> > Thanks,
>
> > Henrik


From morg@n@em@||box @end|ng |rom gm@||@com  Fri Jul 10 11:39:17 2020
From: morg@n@em@||box @end|ng |rom gm@||@com (Morgan Morgan)
Date: Fri, 10 Jul 2020 10:39:17 +0100
Subject: [R-pkg-devel] ISNAN warning [-Wfloat-conversion]
Message-ID: <CAL0QV_MZhoLKRXHEJcyCZr+1MKTpK-0wfJvdg5ATSaQf731yHA@mail.gmail.com>

Hi,

Please see below warning from GCC (rtools 4.0).
I know that the flag "-Wconversion" is not used by default when building
packages in R but I was wondering if the below warning can be avoided by
changing the ISNAN function in the R C API?
The functions R_IsNaN and R_IsNA do not generate these warnings but they
also have  a different behaviour than ISNAN.

test_ISNAN = inline::cfunction(
  verbose = TRUE,
  language = "C",
  cppargs = "-Wconversion",
  sig = c(x = "SEXP"),
  body = "
  if (ISNAN(asReal(x))) {
    Rprintf(\"Hello\");
  }
  return R_NilValue;
")

Setting PKG_CPPFLAGS to -Wconversion
Compilation argument:
 C:/PROGRA~1/R/R-40~1.0/bin/x64/R CMD SHLIB filed40200e5009.c 2>
filed40200e5009.c.err.txt
"C:/rtools40/mingw64/bin/"gcc  -I"C:/PROGRA~1/R/R-40~1.0/include" -DNDEBUG
-Wconversion         -O2 -Wall  -std=gnu99 -mfpmath=sse -msse2
-mstackrealign -c filed40200e5009.c -o filed40200e5009.o
In file included from C:/PROGRA~1/R/R-40~1.0/include/R.h:58,
                 from filed40200e5009.c:1:
filed40200e5009.c: In function 'filed40200e5009':
C:/PROGRA~1/R/R-40~1.0/include/Rinternals.h:1531:18: warning: conversion
from 'double' to 'float' may change value [-Wfloat-conversion]
 #define asReal   Rf_asReal
filed40200e5009.c:8:7: note: in expansion of macro 'ISNAN'
   if (ISNAN(asReal(x))) {
       ^~~~~
filed40200e5009.c:8:13: note: in expansion of macro 'asReal'
   if (ISNAN(asReal(x))) {
             ^~~~~~
C:/rtools40/mingw64/bin/gcc -shared -s -static-libgcc -o
filed40200e5009.dll tmp.def filed40200e5009.o
-LC:/PROGRA~1/R/R-40~1.0/bin/x64 -lR
Program source:
  1: #include <R.h>
  2: #include <Rdefines.h>
  3: #include <R_ext/Error.h>
  4:
  5:
  6: SEXP filed40200e5009 ( SEXP x ) {
  7:
  8:   if (ISNAN(asReal(x))) {
  9:     Rprintf("Hello");
 10:   }
 11:   return R_NilValue;
 12:
 13:   warning("your C program does not return anything!");
 14:   return R_NilValue;
 15: }

Thank you
Best regards,
Morgan

	[[alternative HTML version deleted]]


From p@kr|v|t@ky @end|ng |rom un@w@edu@@u  Sat Jul 11 01:51:52 2020
From: p@kr|v|t@ky @end|ng |rom un@w@edu@@u (Pavel N. Krivitsky)
Date: Sat, 11 Jul 2020 09:51:52 +1000
Subject: [R-pkg-devel] Getting two independent packages with identical S3
 generics to dispatch each other's methods
Message-ID: <7102fe9eaf07c1a402df7f0447c047383e8b0a7c.camel@unsw.edu.au>

Dear All,

I would like to have two packages that do not depend on each other that
have an identical generic to be able to dispatch to each other's (non-
conflicting) methods. If it is of interest, the background for why this
is needed is given at the end of this e-mail.

As it is, it looks like two packages that do not depend on each other
both define a generic, they do not see each other's S3 methods. 

For example, in the two attached minimal packages, which define and
export generic foo() (identical in both packages) and methods
foo.character() and foo.numeric() that are exported via S3method(), we
get,

> library(test.character)
> foo("a")
foo.character() called.
> library(test.numeric)
Attaching package: ?test.numeric?
The following object is masked from ?package:test.character?:
    foo
> foo(1)
foo.numeric() called.
> foo("a")
Error in UseMethod("foo") : 
  no applicable method for 'foo' applied to an object of class "character"

That is, test.numeric::foo() doesn't "see"
test.character:::foo.character() and vice versa. Is there a way to make
them see each other?

This issue has arisen before, e.g. at https://stackoverflow.com/questions/25251136/how-to-conditionally-define-a-generic-function-in-r-namespace .

The "clean" solution is, of course, to create a third package to define
the generic that the two packages could import (and, if necessary,
reexport). However, that involves creating an almost-empty package that
then has to be submitted to CRAN, maintained, and add some amount of
storage and computational overhead. Is there another way to do this
that is transparent to the end user?


# Background

This arose as a result of two packages (lme4 and ergm) both wanting to
implement a simulate.formula() method, causing conflicts when the user
wanted to use both at the same time.

ergm has a mechanism for dispatching based on the class of the LHS of
the formula. It does so by defining a generic, simulate_formula() which
evaluates the formula's LHS and dispatches a method (e.g.,
simulate_formula.<CLASS>()) based on that.

Since lme4 and ergm generally use different LHSs, we are thinking of
resolving the conflict by copying the LHS dispatching mechanism from
ergm to lme4, and then defining our own summary_formula methods as
needed.

			Thank you in advance,
			Pavel


-------------- next part --------------
A non-text attachment was scrubbed...
Name: test.character_1.0.tar.gz
Type: application/x-compressed-tar
Size: 545 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-package-devel/attachments/20200711/0320f31c/attachment.bin>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: test.numeric_1.0.tar.gz
Type: application/x-compressed-tar
Size: 546 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-package-devel/attachments/20200711/0320f31c/attachment-0001.bin>

From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Sat Jul 11 02:15:38 2020
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Fri, 10 Jul 2020 17:15:38 -0700
Subject: [R-pkg-devel] 
 Getting two independent packages with identical S3
 generics to dispatch each other's methods
In-Reply-To: <7102fe9eaf07c1a402df7f0447c047383e8b0a7c.camel@unsw.edu.au>
References: <7102fe9eaf07c1a402df7f0447c047383e8b0a7c.camel@unsw.edu.au>
Message-ID: <93262950-320C-41ED-8932-004E92EE7F25@dcn.davis.ca.us>

Perhaps:

https://cran.r-project.org/web/packages/generics/index.html


On July 10, 2020 4:51:52 PM PDT, "Pavel N. Krivitsky" <p.krivitsky at unsw.edu.au> wrote:
>Dear All,
>
>I would like to have two packages that do not depend on each other that
>have an identical generic to be able to dispatch to each other's (non-
>conflicting) methods. If it is of interest, the background for why this
>is needed is given at the end of this e-mail.
>
>As it is, it looks like two packages that do not depend on each other
>both define a generic, they do not see each other's S3 methods. 
>
>For example, in the two attached minimal packages, which define and
>export generic foo() (identical in both packages) and methods
>foo.character() and foo.numeric() that are exported via S3method(), we
>get,
>
>> library(test.character)
>> foo("a")
>foo.character() called.
>> library(test.numeric)
>Attaching package: ?test.numeric?
>The following object is masked from ?package:test.character?:
>    foo
>> foo(1)
>foo.numeric() called.
>> foo("a")
>Error in UseMethod("foo") : 
>no applicable method for 'foo' applied to an object of class
>"character"
>
>That is, test.numeric::foo() doesn't "see"
>test.character:::foo.character() and vice versa. Is there a way to make
>them see each other?
>
>This issue has arisen before, e.g. at
>https://stackoverflow.com/questions/25251136/how-to-conditionally-define-a-generic-function-in-r-namespace
>.
>
>The "clean" solution is, of course, to create a third package to define
>the generic that the two packages could import (and, if necessary,
>reexport). However, that involves creating an almost-empty package that
>then has to be submitted to CRAN, maintained, and add some amount of
>storage and computational overhead. Is there another way to do this
>that is transparent to the end user?
>
>
># Background
>
>This arose as a result of two packages (lme4 and ergm) both wanting to
>implement a simulate.formula() method, causing conflicts when the user
>wanted to use both at the same time.
>
>ergm has a mechanism for dispatching based on the class of the LHS of
>the formula. It does so by defining a generic, simulate_formula() which
>evaluates the formula's LHS and dispatches a method (e.g.,
>simulate_formula.<CLASS>()) based on that.
>
>Since lme4 and ergm generally use different LHSs, we are thinking of
>resolving the conflict by copying the LHS dispatching mechanism from
>ergm to lme4, and then defining our own summary_formula methods as
>needed.
>
>			Thank you in advance,
>			Pavel

-- 
Sent from my phone. Please excuse my brevity.


From wo||g@ng@v|echtb@uer @end|ng |rom m@@@tr|chtun|ver@|ty@n|  Sat Jul 11 08:09:11 2020
From: wo||g@ng@v|echtb@uer @end|ng |rom m@@@tr|chtun|ver@|ty@n| (Wolfgang Viechtbauer)
Date: Sat, 11 Jul 2020 08:09:11 +0200
Subject: [R-pkg-devel] 
 Getting two independent packages with identical S3
 generics to dispatch each other's methods
In-Reply-To: <7102fe9eaf07c1a402df7f0447c047383e8b0a7c.camel@unsw.edu.au>
References: <7102fe9eaf07c1a402df7f0447c047383e8b0a7c.camel@unsw.edu.au>
Message-ID: <F09264EE-1DC5-484A-87A9-90D9C72AE8C4@maastrichtuniversity.nl>

Hi Pavel,

I asked essentially the same question a few weeks ago:

https://stat.ethz.ch/pipermail/r-package-devel/2020q2/005609.html

As Jeff already suggested, there is the generics package which might be of use.

Aside from this, I wasn't able to distill a workable solution from the discussion that did not involve adding dependencies to (one of) the two packages.

Best,
Wolfgang

On July 11, 2020 1:51:52 AM GMT+02:00, "Pavel N. Krivitsky" <p.krivitsky at unsw.edu.au> wrote:
>Dear All,
>
>I would like to have two packages that do not depend on each other that
>have an identical generic to be able to dispatch to each other's (non-
>conflicting) methods. If it is of interest, the background for why this
>is needed is given at the end of this e-mail.
>
>As it is, it looks like two packages that do not depend on each other
>both define a generic, they do not see each other's S3 methods. 
>
>For example, in the two attached minimal packages, which define and
>export generic foo() (identical in both packages) and methods
>foo.character() and foo.numeric() that are exported via S3method(), we
>get,
>
>> library(test.character)
>> foo("a")
>foo.character() called.
>> library(test.numeric)
>Attaching package: ?test.numeric?
>The following object is masked from ?package:test.character?:
>    foo
>> foo(1)
>foo.numeric() called.
>> foo("a")
>Error in UseMethod("foo") : 
>no applicable method for 'foo' applied to an object of class
>"character"
>
>That is, test.numeric::foo() doesn't "see"
>test.character:::foo.character() and vice versa. Is there a way to make
>them see each other?
>
>This issue has arisen before, e.g. at
>https://stackoverflow.com/questions/25251136/how-to-conditionally-define-a-generic-function-in-r-namespace
>.
>
>The "clean" solution is, of course, to create a third package to define
>the generic that the two packages could import (and, if necessary,
>reexport). However, that involves creating an almost-empty package that
>then has to be submitted to CRAN, maintained, and add some amount of
>storage and computational overhead. Is there another way to do this
>that is transparent to the end user?
>
>
># Background
>
>This arose as a result of two packages (lme4 and ergm) both wanting to
>implement a simulate.formula() method, causing conflicts when the user
>wanted to use both at the same time.
>
>ergm has a mechanism for dispatching based on the class of the LHS of
>the formula. It does so by defining a generic, simulate_formula() which
>evaluates the formula's LHS and dispatches a method (e.g.,
>simulate_formula.<CLASS>()) based on that.
>
>Since lme4 and ergm generally use different LHSs, we are thinking of
>resolving the conflict by copying the LHS dispatching mechanism from
>ergm to lme4, and then defining our own summary_formula methods as
>needed.
>
>			Thank you in advance,
>			Pavel


From murdoch@dunc@n @end|ng |rom gm@||@com  Sat Jul 11 13:29:00 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sat, 11 Jul 2020 07:29:00 -0400
Subject: [R-pkg-devel] 
 Getting two independent packages with identical S3
 generics to dispatch each other's methods
In-Reply-To: <7102fe9eaf07c1a402df7f0447c047383e8b0a7c.camel@unsw.edu.au>
References: <7102fe9eaf07c1a402df7f0447c047383e8b0a7c.camel@unsw.edu.au>
Message-ID: <239d48a8-a7ee-30d6-d4b3-81a48e3a631a@gmail.com>

If the semantics of the two generics must remain identical in the 
future, then there is an implicit dependency between the code in the 
packages.  You should formalize this by using one of the dependency 
mechanisms that the language provides, i.e. the clean solution.

Duncan Murdoch

On 10/07/2020 7:51 p.m., Pavel N. Krivitsky wrote:
> Dear All,
> 
> I would like to have two packages that do not depend on each other that
> have an identical generic to be able to dispatch to each other's (non-
> conflicting) methods. If it is of interest, the background for why this
> is needed is given at the end of this e-mail.
> 
> As it is, it looks like two packages that do not depend on each other
> both define a generic, they do not see each other's S3 methods.
> 
> For example, in the two attached minimal packages, which define and
> export generic foo() (identical in both packages) and methods
> foo.character() and foo.numeric() that are exported via S3method(), we
> get,
> 
>> library(test.character)
>> foo("a")
> foo.character() called.
>> library(test.numeric)
> Attaching package: ?test.numeric?
> The following object is masked from ?package:test.character?:
>      foo
>> foo(1)
> foo.numeric() called.
>> foo("a")
> Error in UseMethod("foo") :
>    no applicable method for 'foo' applied to an object of class "character"
> 
> That is, test.numeric::foo() doesn't "see"
> test.character:::foo.character() and vice versa. Is there a way to make
> them see each other?
> 
> This issue has arisen before, e.g. at https://stackoverflow.com/questions/25251136/how-to-conditionally-define-a-generic-function-in-r-namespace .
> 
> The "clean" solution is, of course, to create a third package to define
> the generic that the two packages could import (and, if necessary,
> reexport). However, that involves creating an almost-empty package that
> then has to be submitted to CRAN, maintained, and add some amount of
> storage and computational overhead. Is there another way to do this
> that is transparent to the end user?
> 
> 
> # Background
> 
> This arose as a result of two packages (lme4 and ergm) both wanting to
> implement a simulate.formula() method, causing conflicts when the user
> wanted to use both at the same time.
> 
> ergm has a mechanism for dispatching based on the class of the LHS of
> the formula. It does so by defining a generic, simulate_formula() which
> evaluates the formula's LHS and dispatches a method (e.g.,
> simulate_formula.<CLASS>()) based on that.
> 
> Since lme4 and ergm generally use different LHSs, we are thinking of
> resolving the conflict by copying the LHS dispatching mechanism from
> ergm to lme4, and then defining our own summary_formula methods as
> needed.
> 
> 			Thank you in advance,
> 			Pavel
> 
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From p@kr|v|t@ky @end|ng |rom un@w@edu@@u  Sat Jul 11 13:52:08 2020
From: p@kr|v|t@ky @end|ng |rom un@w@edu@@u (Pavel N. Krivitsky)
Date: Sat, 11 Jul 2020 21:52:08 +1000
Subject: [R-pkg-devel] 
 Getting two independent packages with identical S3
 generics to dispatch each other's methods
In-Reply-To: <239d48a8-a7ee-30d6-d4b3-81a48e3a631a@gmail.com>
References: <7102fe9eaf07c1a402df7f0447c047383e8b0a7c.camel@unsw.edu.au>
 <239d48a8-a7ee-30d6-d4b3-81a48e3a631a@gmail.com>
Message-ID: <e4b8cee0e80a721c0a70bb9ec9d9cd1650b07e11.camel@unsw.edu.au>

Dear Duncan et al.,

Firstly, my apologies for the duplicated query. It seems that I had
searched everywhere but the mailing list where I asked the question.

Secondly, I was wondering if I could get some indication whether CRAN
would accept a package with the following code and documentation (and
only that):

1) A number of exported generics of the form

summary_formula(object, ..., lhs),
simulate_formula(object, nsim=1, seed=NULL, ..., lhs),
etc.,

which expect a formula as their first argument, evaluate the LHS of the
formula, and dispatch based on the class of the result, which can also
be overridden by the lhs= argument.

2) Corresponding S3 methods summary.formula(), simulate.formula(), etc.
methods, that call the corresponding *_formula() generic.

I am familiar with the generics package, but I don't think it's a good
place for this functionality, because this is not the typical
dispatching behaviour, and because *.formula() exports are not
technically generics but S3 methods. In particular, as far as I know,
existing mechanisms make it easy to cherry-pick generics, but they
don't make it easy to cherry-pick methods.

				Best Regards,
				Pavel

On Sat, 2020-07-11 at 07:29 -0400, Duncan Murdoch wrote:
> If the semantics of the two generics must remain identical in the 
> future, then there is an implicit dependency between the code in the 
> packages.  You should formalize this by using one of the dependency 
> mechanisms that the language provides, i.e. the clean solution.
> 
> Duncan Murdoch
> 
> On 10/07/2020 7:51 p.m., Pavel N. Krivitsky wrote:
> > Dear All,
> > 
> > I would like to have two packages that do not depend on each other
> > that
> > have an identical generic to be able to dispatch to each other's
> > (non-
> > conflicting) methods. If it is of interest, the background for why
> > this
> > is needed is given at the end of this e-mail.
> > 
> > As it is, it looks like two packages that do not depend on each
> > other
> > both define a generic, they do not see each other's S3 methods.
> > 
> > For example, in the two attached minimal packages, which define and
> > export generic foo() (identical in both packages) and methods
> > foo.character() and foo.numeric() that are exported via S3method(),
> > we
> > get,
> > 
> > > library(test.character)
> > > foo("a")
> > foo.character() called.
> > > library(test.numeric)
> > Attaching package: ?test.numeric?
> > The following object is masked from ?package:test.character?:
> >      foo
> > > foo(1)
> > foo.numeric() called.
> > > foo("a")
> > Error in UseMethod("foo") :
> >    no applicable method for 'foo' applied to an object of class
> > "character"
> > 
> > That is, test.numeric::foo() doesn't "see"
> > test.character:::foo.character() and vice versa. Is there a way to
> > make
> > them see each other?
> > 
> > This issue has arisen before, e.g. at 
> > https://stackoverflow.com/questions/25251136/how-to-conditionally-define-a-generic-function-in-r-namespace
> > .
> > 
> > The "clean" solution is, of course, to create a third package to
> > define
> > the generic that the two packages could import (and, if necessary,
> > reexport). However, that involves creating an almost-empty package
> > that
> > then has to be submitted to CRAN, maintained, and add some amount
> > of
> > storage and computational overhead. Is there another way to do this
> > that is transparent to the end user?
> > 
> > 
> > # Background
> > 
> > This arose as a result of two packages (lme4 and ergm) both wanting
> > to
> > implement a simulate.formula() method, causing conflicts when the
> > user
> > wanted to use both at the same time.
> > 
> > ergm has a mechanism for dispatching based on the class of the LHS
> > of
> > the formula. It does so by defining a generic, simulate_formula()
> > which
> > evaluates the formula's LHS and dispatches a method (e.g.,
> > simulate_formula.<CLASS>()) based on that.
> > 
> > Since lme4 and ergm generally use different LHSs, we are thinking
> > of
> > resolving the conflict by copying the LHS dispatching mechanism
> > from
> > ergm to lme4, and then defining our own summary_formula methods as
> > needed.
> > 
> > 			Thank you in advance,
> > 			Pavel
> > 
> > 
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >


From murdoch@dunc@n @end|ng |rom gm@||@com  Sat Jul 11 14:34:09 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sat, 11 Jul 2020 08:34:09 -0400
Subject: [R-pkg-devel] 
 Getting two independent packages with identical S3
 generics to dispatch each other's methods
In-Reply-To: <e4b8cee0e80a721c0a70bb9ec9d9cd1650b07e11.camel@unsw.edu.au>
References: <7102fe9eaf07c1a402df7f0447c047383e8b0a7c.camel@unsw.edu.au>
 <239d48a8-a7ee-30d6-d4b3-81a48e3a631a@gmail.com>
 <e4b8cee0e80a721c0a70bb9ec9d9cd1650b07e11.camel@unsw.edu.au>
Message-ID: <f213e207-c3d2-d9d7-e583-146693d7b69b@gmail.com>

On 11/07/2020 7:52 a.m., Pavel N. Krivitsky wrote:
> Dear Duncan et al.,
> 
> Firstly, my apologies for the duplicated query. It seems that I had
> searched everywhere but the mailing list where I asked the question.
> 
> Secondly, I was wondering if I could get some indication whether CRAN
> would accept a package with the following code and documentation (and
> only that):

I think it would depend on the documentation and the submission message. 
  You'll need to convince them not to reject your package under the "A 
package?s contribution has to be non-trivial" rule.  Explain why you 
can't put the generic in one of the existing packages and import it from 
there into the other one.  (I'd make ergm import lme4, since that only 
adds 5 packages that wouldn't otherwise be present:   "minqa" 
"nloptr"    "statmod"   "Rcpp"      "RcppEigen", and those are all 
reasonably popular packages.)

Duncan Murdoch




> 
> 1) A number of exported generics of the form
> 
> summary_formula(object, ..., lhs),
> simulate_formula(object, nsim=1, seed=NULL, ..., lhs),
> etc.,
> 
> which expect a formula as their first argument, evaluate the LHS of the
> formula, and dispatch based on the class of the result, which can also
> be overridden by the lhs= argument.
> 
> 2) Corresponding S3 methods summary.formula(), simulate.formula(), etc.
> methods, that call the corresponding *_formula() generic.
> 
> I am familiar with the generics package, but I don't think it's a good
> place for this functionality, because this is not the typical
> dispatching behaviour, and because *.formula() exports are not
> technically generics but S3 methods. In particular, as far as I know,
> existing mechanisms make it easy to cherry-pick generics, but they
> don't make it easy to cherry-pick methods.
> 
> 				Best Regards,
> 				Pavel
> 
> On Sat, 2020-07-11 at 07:29 -0400, Duncan Murdoch wrote:
>> If the semantics of the two generics must remain identical in the
>> future, then there is an implicit dependency between the code in the
>> packages.  You should formalize this by using one of the dependency
>> mechanisms that the language provides, i.e. the clean solution.
>>
>> Duncan Murdoch
>>
>> On 10/07/2020 7:51 p.m., Pavel N. Krivitsky wrote:
>>> Dear All,
>>>
>>> I would like to have two packages that do not depend on each other
>>> that
>>> have an identical generic to be able to dispatch to each other's
>>> (non-
>>> conflicting) methods. If it is of interest, the background for why
>>> this
>>> is needed is given at the end of this e-mail.
>>>
>>> As it is, it looks like two packages that do not depend on each
>>> other
>>> both define a generic, they do not see each other's S3 methods.
>>>
>>> For example, in the two attached minimal packages, which define and
>>> export generic foo() (identical in both packages) and methods
>>> foo.character() and foo.numeric() that are exported via S3method(),
>>> we
>>> get,
>>>
>>>> library(test.character)
>>>> foo("a")
>>> foo.character() called.
>>>> library(test.numeric)
>>> Attaching package: ?test.numeric?
>>> The following object is masked from ?package:test.character?:
>>>       foo
>>>> foo(1)
>>> foo.numeric() called.
>>>> foo("a")
>>> Error in UseMethod("foo") :
>>>     no applicable method for 'foo' applied to an object of class
>>> "character"
>>>
>>> That is, test.numeric::foo() doesn't "see"
>>> test.character:::foo.character() and vice versa. Is there a way to
>>> make
>>> them see each other?
>>>
>>> This issue has arisen before, e.g. at
>>> https://stackoverflow.com/questions/25251136/how-to-conditionally-define-a-generic-function-in-r-namespace
>>> .
>>>
>>> The "clean" solution is, of course, to create a third package to
>>> define
>>> the generic that the two packages could import (and, if necessary,
>>> reexport). However, that involves creating an almost-empty package
>>> that
>>> then has to be submitted to CRAN, maintained, and add some amount
>>> of
>>> storage and computational overhead. Is there another way to do this
>>> that is transparent to the end user?
>>>
>>>
>>> # Background
>>>
>>> This arose as a result of two packages (lme4 and ergm) both wanting
>>> to
>>> implement a simulate.formula() method, causing conflicts when the
>>> user
>>> wanted to use both at the same time.
>>>
>>> ergm has a mechanism for dispatching based on the class of the LHS
>>> of
>>> the formula. It does so by defining a generic, simulate_formula()
>>> which
>>> evaluates the formula's LHS and dispatches a method (e.g.,
>>> simulate_formula.<CLASS>()) based on that.
>>>
>>> Since lme4 and ergm generally use different LHSs, we are thinking
>>> of
>>> resolving the conflict by copying the LHS dispatching mechanism
>>> from
>>> ergm to lme4, and then defining our own summary_formula methods as
>>> needed.
>>>
>>> 			Thank you in advance,
>>> 			Pavel
>>>
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>


From nnov|c@ @end|ng |rom gm@||@com  Sun Jul 12 17:55:12 2020
From: nnov|c@ @end|ng |rom gm@||@com (Novica Nakov)
Date: Sun, 12 Jul 2020 17:55:12 +0200
Subject: [R-pkg-devel] CRAN submission error package newscatcheR_0.1.0
Message-ID: <CAEXeAoZ3Yj0qmtsSxrQ-toUEbmcfG19qvpmUWqrUtMDEQHY1Mw@mail.gmail.com>

Hi,

I tried to submit a new version of the package to CRAN today and got an
email back about a pre-test error:

Windows: <
https://win-builder.r-project.org/incoming_pretest/newscatcheR_0.1.0_20200712_103032/Windows/00check.log
>
Status: 1 ERROR

The full logs are here: <
https://win-builder.r-project.org/incoming_pretest/newscatcheR_0.1.0_20200712_103032/
>

However, the winbuilder check didn't return any errors both on the R Under
development (unstable)  and R version 4.0.2 (2020-06-22) (logs:
https://win-builder.r-project.org/C38WY20VHvTO/ and
https://win-builder.r-project.org/aNK5eJQxxyGH/)

The package's code is here: https://github.com/discindo/newscatcheR

I am fairly new to packages and CRAN and I am not sure if the pre-tests are
doing the same thing as the winbuilder when sent from devtools.

When searching for a possible solution I found this thread that looks like
tibble might be causing the issue if it is not updated to 3.0.3 but I am
not sure (
https://community.rstudio.com/t/warning-messages-when-printing-tibbles/72622
).

Thanks for any help.
novica

	[[alternative HTML version deleted]]


From m@e||e@@@|mon @end|ng |rom y@hoo@@e  Mon Jul 13 08:17:30 2020
From: m@e||e@@@|mon @end|ng |rom y@hoo@@e (=?UTF-8?Q?Ma=C3=ABlle_SALMON?=)
Date: Mon, 13 Jul 2020 06:17:30 +0000 (UTC)
Subject: [R-pkg-devel] 
 Proper CRAN way - How to handle dependency of java jar file?
In-Reply-To: <61BDA495-A218-496D-8C61-C870008A04D1@krugs.de>
References: <A52AC0C9-BD94-4E3E-B458-763D6B840322@krugs.de>
 <046623ab-f676-e752-8227-25cb1b1c616c@gmail.com>
 <61BDA495-A218-496D-8C61-C870008A04D1@krugs.de>
Message-ID: <1250265904.886843.1594621050558@mail.yahoo.com>

Regarding where to save the jar file, you might be interested in "app dirs" (via tools::R_user_dir() in R from 4.0, the rappdirs package, the hoardr package) cf https://blog.r-hub.io/2020/03/12/user-preferences/#not-so-temporary-files3

Ma?lle.

Den tisdag 23 juni 2020 14:56:30 CEST, Rainer M Krug <rainer at krugs.de> skrev: 





Thanks Duncan.

> On 23 Jun 2020, at 14:35, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> 
> Your assumption that .jar files are not allowed is wrong:? a number of packages contain them:? rscala, J4R, Rbgs, bartMachine, OpenStreetMap, ...? There's a specific mention about how to include them in the CRAN policy document:

That?s good to know.

> 
> "For Java .class and .jar files, the sources should be in a top-level java directory in the source package (or that directory should explain how they can be obtained)."

So a tet file in the inst/jar directory giving the link to the GitHub repo would be fine in this case?

> 
> If you still decide not to include your .jar file (maybe it is too big, for example),


I guess it would be stretching it a bit, as the jar file is 8.2 MB, and plantuml has regular continuous updates, so I would prefer to keep it dynamic.


> then I think your option 1 is unusable for those people who can't write to the library location because of permission problems. (Admin privileges are often necessary to install packages in the main library.)? Generally I think everyone can install packages somewhere, but users do really get confused when they have multiple library locations, possibly each containing a different version of a package.

So the suggested option would be to have a function, which 
1) ask the user to create a directory in the home folder 
2) download the jar file into that directory or, when no permission is granted, into the tmpdir()

Thanks, no major changes necessary for that,

Rainer


> 
> Duncan Murdoch
> 
> On 23/06/2020 8:18 a.m., Rainer M Krug wrote:
>> Hi
>> I have a package called `plantuml` (https://github.com/rkrug/plantuml) which converts plantuml code to UML graphs. It uses for this the java program https://plantuml.com which is Open Source.
>> As it is not allowed to distribute a binary with an R package, I use the approach of a function which downloads the jar file into the directory `system.file("jar/plantuml.jar", package = "plantuml?)`.
>> This works nicely, and at the moment, the function is called automatically before the plantuml.jar is used.
>> Now I would like to submit the package to CRAN. I can?t find the guidelines anymore, so I am asking here:
>> What is the appropriate way of handling this?
>> I can think of a at least two ways of making it obvious to the user, that a binary is downloaded:
>> 1) if the file plantuml.jar is not present, ask the user to run the function `updatePlantumlJar()` which downloads the jar to the original location in the package directory
>> 2) tell the user to download the file manually and to put it somewhere, where the package will find it
>> I would prefer the first version, as the plantuml.jar would be in the package directory, where usually nobody but the package is doing stuff.
>> Any suggestions on how I could make this ?CRAN conform??
>> Thanks a lot,
>> Rainer
>> --
>> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
>> Orcid ID: 0000-0002-7490-0066
>> Department of Evolutionary Biology and Environmental Studies
>> University of Z?rich
>> Office Y34-J-74
>> Winterthurerstrasse 190
>> 8075 Z?rich
>> Switzerland
>> Office:??? +41 (0)44 635 47 64
>> Cell:? ? ? ??? +41 (0)78 630 66 57
>> email:? ? ? Rainer.Krug at uzh.ch
>> ??? ??? Rainer at krugs.de
>> Skype:? ? RMkrug
>> PGP: 0x0F52F982
>> --
>> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
>> Orcid ID: 0000-0002-7490-0066
>> Department of Evolutionary Biology and Environmental Studies
>> University of Z?rich
>> Office Y34-J-74
>> Winterthurerstrasse 190
>> 8075 Z?rich
>> Switzerland
>> Office:??? +41 (0)44 635 47 64
>> Cell:? ? ? ??? +41 (0)78 630 66 57
>> email:? ? ? Rainer.Krug at uzh.ch
>> ??? ??? Rainer at krugs.de
>> Skype:? ? RMkrug
>> PGP: 0x0F52F982
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 

--
Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)

Orcid ID: 0000-0002-7490-0066

Department of Evolutionary Biology and Environmental Studies
University of Z?rich
Office Y34-J-74
Winterthurerstrasse 190
8075 Z?rich
Switzerland

Office:??? +41 (0)44 635 47 64
Cell:? ? ? ??? +41 (0)78 630 66 57
email:? ? ? Rainer.Krug at uzh.ch
??? ??? Rainer at krugs.de
Skype:? ? RMkrug

PGP: 0x0F52F982




??? [[alternative HTML version deleted]]


______________________________________________
R-package-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Mon Jul 13 08:57:39 2020
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Mon, 13 Jul 2020 08:57:39 +0200
Subject: [R-pkg-devel] CRAN submission error package newscatcheR_0.1.0
In-Reply-To: <CAEXeAoZ3Yj0qmtsSxrQ-toUEbmcfG19qvpmUWqrUtMDEQHY1Mw@mail.gmail.com>
References: <CAEXeAoZ3Yj0qmtsSxrQ-toUEbmcfG19qvpmUWqrUtMDEQHY1Mw@mail.gmail.com>
Message-ID: <82161518-652d-b2b9-e34a-91e91b24dce0@statistik.tu-dortmund.de>

Something with the ellipsis installation on the check machines seems 
broken, this is something for the CRAN team (which I am a member of) and 
will be fixed.

Best,
Uwe Ligges

On 12.07.2020 17:55, Novica Nakov wrote:
> Hi,
> 
> I tried to submit a new version of the package to CRAN today and got an
> email back about a pre-test error:
> 
> Windows: <
> https://win-builder.r-project.org/incoming_pretest/newscatcheR_0.1.0_20200712_103032/Windows/00check.log
>>
> Status: 1 ERROR
> 
> The full logs are here: <
> https://win-builder.r-project.org/incoming_pretest/newscatcheR_0.1.0_20200712_103032/
>>
> 
> However, the winbuilder check didn't return any errors both on the R Under
> development (unstable)  and R version 4.0.2 (2020-06-22) (logs:
> https://win-builder.r-project.org/C38WY20VHvTO/ and
> https://win-builder.r-project.org/aNK5eJQxxyGH/)
> 
> The package's code is here: https://github.com/discindo/newscatcheR
> 
> I am fairly new to packages and CRAN and I am not sure if the pre-tests are
> doing the same thing as the winbuilder when sent from devtools.
> 
> When searching for a possible solution I found this thread that looks like
> tibble might be causing the issue if it is not updated to 3.0.3 but I am
> not sure (
> https://community.rstudio.com/t/warning-messages-when-printing-tibbles/72622
> ).
> 
> Thanks for any help.
> novica
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From nnov|c@ @end|ng |rom gm@||@com  Mon Jul 13 10:57:14 2020
From: nnov|c@ @end|ng |rom gm@||@com (Novica Nakov)
Date: Mon, 13 Jul 2020 10:57:14 +0200
Subject: [R-pkg-devel] CRAN submission error package newscatcheR_0.1.0
In-Reply-To: <82161518-652d-b2b9-e34a-91e91b24dce0@statistik.tu-dortmund.de>
References: <CAEXeAoZ3Yj0qmtsSxrQ-toUEbmcfG19qvpmUWqrUtMDEQHY1Mw@mail.gmail.com>
 <82161518-652d-b2b9-e34a-91e91b24dce0@statistik.tu-dortmund.de>
Message-ID: <CAEXeAobcmVd2AS6mRK2irhF3ArpXUq79Vt+XDdt4BkYUn+S-zQ@mail.gmail.com>

Hi,


Something with the ellipsis installation on the check machines seems
> broken, this is something for the CRAN team (which I am a member of) and
> will be fixed.
>

Should I wait for confirmation that the issue is fixed before resubmitting?

Thanks.
novica

	[[alternative HTML version deleted]]


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Mon Jul 13 10:58:38 2020
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Mon, 13 Jul 2020 10:58:38 +0200
Subject: [R-pkg-devel] CRAN submission error package newscatcheR_0.1.0
In-Reply-To: <CAEXeAobcmVd2AS6mRK2irhF3ArpXUq79Vt+XDdt4BkYUn+S-zQ@mail.gmail.com>
References: <CAEXeAoZ3Yj0qmtsSxrQ-toUEbmcfG19qvpmUWqrUtMDEQHY1Mw@mail.gmail.com>
 <82161518-652d-b2b9-e34a-91e91b24dce0@statistik.tu-dortmund.de>
 <CAEXeAobcmVd2AS6mRK2irhF3ArpXUq79Vt+XDdt4BkYUn+S-zQ@mail.gmail.com>
Message-ID: <83e6479c-8245-544a-b0dc-189f4a325dc0@statistik.tu-dortmund.de>

No need to resubmit, we will trigger new checks.

Best,
Uwe Ligges

On 13.07.2020 10:57, Novica Nakov wrote:
> Hi,
> 
> 
> Something with the ellipsis installation on the check machines seems
>> broken, this is something for the CRAN team (which I am a member of) and
>> will be fixed.
>>
> 
> Should I wait for confirmation that the issue is fixed before resubmitting?
> 
> Thanks.
> novica
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From R@|ner @end|ng |rom krug@@de  Mon Jul 13 11:15:10 2020
From: R@|ner @end|ng |rom krug@@de (Rainer M Krug)
Date: Mon, 13 Jul 2020 11:15:10 +0200
Subject: [R-pkg-devel] 
 Proper CRAN way - How to handle dependency of java jar file?
In-Reply-To: <1250265904.886843.1594621050558@mail.yahoo.com>
References: <A52AC0C9-BD94-4E3E-B458-763D6B840322@krugs.de>
 <046623ab-f676-e752-8227-25cb1b1c616c@gmail.com>
 <61BDA495-A218-496D-8C61-C870008A04D1@krugs.de>
 <1250265904.886843.1594621050558@mail.yahoo.com>
Message-ID: <279940E6-3267-48A9-9AE6-A1A25DA980C4@krugs.de>

Thanks Ma?lle - that is exactly what I am doing at the moment.

Cheers,

Rainer


> On 13 Jul 2020, at 08:17, Ma?lle SALMON <maelle.salmon at yahoo.se> wrote:
> 
> Regarding where to save the jar file, you might be interested in "app dirs" (via tools::R_user_dir() in R from 4.0, the rappdirs package, the hoardr package) cf https://blog.r-hub.io/2020/03/12/user-preferences/#not-so-temporary-files3
> 
> Ma?lle.
> 
> Den tisdag 23 juni 2020 14:56:30 CEST, Rainer M Krug <rainer at krugs.de> skrev: 
> 
> 
> 
> 
> 
> Thanks Duncan.
> 
>> On 23 Jun 2020, at 14:35, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>> 
>> Your assumption that .jar files are not allowed is wrong:  a number of packages contain them:  rscala, J4R, Rbgs, bartMachine, OpenStreetMap, ...  There's a specific mention about how to include them in the CRAN policy document:
> 
> That?s good to know.
> 
>> 
>> "For Java .class and .jar files, the sources should be in a top-level java directory in the source package (or that directory should explain how they can be obtained)."
> 
> So a tet file in the inst/jar directory giving the link to the GitHub repo would be fine in this case?
> 
>> 
>> If you still decide not to include your .jar file (maybe it is too big, for example),
> 
> 
> I guess it would be stretching it a bit, as the jar file is 8.2 MB, and plantuml has regular continuous updates, so I would prefer to keep it dynamic.
> 
> 
>> then I think your option 1 is unusable for those people who can't write to the library location because of permission problems. (Admin privileges are often necessary to install packages in the main library.)  Generally I think everyone can install packages somewhere, but users do really get confused when they have multiple library locations, possibly each containing a different version of a package.
> 
> So the suggested option would be to have a function, which 
> 1) ask the user to create a directory in the home folder 
> 2) download the jar file into that directory or, when no permission is granted, into the tmpdir()
> 
> Thanks, no major changes necessary for that,
> 
> Rainer
> 
> 
>> 
>> Duncan Murdoch
>> 
>> On 23/06/2020 8:18 a.m., Rainer M Krug wrote:
>>> Hi
>>> I have a package called `plantuml` (https://github.com/rkrug/plantuml) which converts plantuml code to UML graphs. It uses for this the java program https://plantuml.com which is Open Source.
>>> As it is not allowed to distribute a binary with an R package, I use the approach of a function which downloads the jar file into the directory `system.file("jar/plantuml.jar", package = "plantuml?)`.
>>> This works nicely, and at the moment, the function is called automatically before the plantuml.jar is used.
>>> Now I would like to submit the package to CRAN. I can?t find the guidelines anymore, so I am asking here:
>>> What is the appropriate way of handling this?
>>> I can think of a at least two ways of making it obvious to the user, that a binary is downloaded:
>>> 1) if the file plantuml.jar is not present, ask the user to run the function `updatePlantumlJar()` which downloads the jar to the original location in the package directory
>>> 2) tell the user to download the file manually and to put it somewhere, where the package will find it
>>> I would prefer the first version, as the plantuml.jar would be in the package directory, where usually nobody but the package is doing stuff.
>>> Any suggestions on how I could make this ?CRAN conform??
>>> Thanks a lot,
>>> Rainer
>>> --
>>> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
>>> Orcid ID: 0000-0002-7490-0066
>>> Department of Evolutionary Biology and Environmental Studies
>>> University of Z?rich
>>> Office Y34-J-74
>>> Winterthurerstrasse 190
>>> 8075 Z?rich
>>> Switzerland
>>> Office:    +41 (0)44 635 47 64
>>> Cell:          +41 (0)78 630 66 57
>>> email:      Rainer.Krug at uzh.ch
>>>         Rainer at krugs.de
>>> Skype:    RMkrug
>>> PGP: 0x0F52F982
>>> --
>>> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
>>> Orcid ID: 0000-0002-7490-0066
>>> Department of Evolutionary Biology and Environmental Studies
>>> University of Z?rich
>>> Office Y34-J-74
>>> Winterthurerstrasse 190
>>> 8075 Z?rich
>>> Switzerland
>>> Office:    +41 (0)44 635 47 64
>>> Cell:          +41 (0)78 630 66 57
>>> email:      Rainer.Krug at uzh.ch
>>>         Rainer at krugs.de
>>> Skype:    RMkrug
>>> PGP: 0x0F52F982
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> 
> 
> --
> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
> 
> Orcid ID: 0000-0002-7490-0066
> 
> Department of Evolutionary Biology and Environmental Studies
> University of Z?rich
> Office Y34-J-74
> Winterthurerstrasse 190
> 8075 Z?rich
> Switzerland
> 
> Office:    +41 (0)44 635 47 64
> Cell:          +41 (0)78 630 66 57
> email:      Rainer.Krug at uzh.ch
>         Rainer at krugs.de
> Skype:    RMkrug
> 
> PGP: 0x0F52F982
> 
> 
> 
> 
>     [[alternative HTML version deleted]]
> 
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

--
Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)

Orcid ID: 0000-0002-7490-0066

Department of Evolutionary Biology and Environmental Studies
University of Z?rich
Office Y34-J-74
Winterthurerstrasse 190
8075 Z?rich
Switzerland

Office:	+41 (0)44 635 47 64
Cell:       	+41 (0)78 630 66 57
email:      Rainer.Krug at uzh.ch
		Rainer at krugs.de
Skype:     RMkrug

PGP: 0x0F52F982




	[[alternative HTML version deleted]]


From bkum@r @end|ng |rom rocket@o|tw@re@com  Mon Jul 13 11:22:36 2020
From: bkum@r @end|ng |rom rocket@o|tw@re@com (Binit Kumar)
Date: Mon, 13 Jul 2020 09:22:36 +0000
Subject: [R-pkg-devel] Unable to post messages to this group
Message-ID: <CY4PR07MB274376AAE86B2581769415A9BC600@CY4PR07MB2743.namprd07.prod.outlook.com>

Hi Team,
I am unable to post messages to this group and keep getting "waiting for moderator" message from bounce email i.e. "R-package-devel <r-package-devel-bounces at r-project.org>".
Is there any criteria of sending the message to devel group?


Thanks & Regards,

Binit Kumar


================================
Rocket Software, Inc. and subsidiaries ? 77 Fourth Avenue, Waltham MA 02451 ? Main Office Toll Free Number: +1 855.577.4323
Contact Customer Support: https://my.rocketsoftware.com/RocketCommunity/RCEmailSupport
Unsubscribe from Marketing Messages/Manage Your Subscription Preferences - http://www.rocketsoftware.com/manage-your-email-preferences
Privacy Policy - http://www.rocketsoftware.com/company/legal/privacy-policy
================================

This communication and any attachments may contain confidential information of Rocket Software, Inc. All unauthorized use, disclosure or distribution is prohibited. If you are not the intended recipient, please notify Rocket Software immediately and destroy all copies of this communication. Thank you.

	[[alternative HTML version deleted]]


From p@u|@@@v@ry @end|ng |rom un|v-|comte@|r  Mon Jul 13 11:31:17 2020
From: p@u|@@@v@ry @end|ng |rom un|v-|comte@|r (Paul SAVARY)
Date: Mon, 13 Jul 2020 11:31:17 +0200 (CEST)
Subject: [R-pkg-devel] 
 Proper CRAN way - How to handle dependency of java jar file?
In-Reply-To: <279940E6-3267-48A9-9AE6-A1A25DA980C4@krugs.de>
References: <A52AC0C9-BD94-4E3E-B458-763D6B840322@krugs.de>
 <046623ab-f676-e752-8227-25cb1b1c616c@gmail.com>
 <61BDA495-A218-496D-8C61-C870008A04D1@krugs.de>
 <1250265904.886843.1594621050558@mail.yahoo.com>
 <279940E6-3267-48A9-9AE6-A1A25DA980C4@krugs.de>
Message-ID: <1167939014.100333238.1594632677953.JavaMail.zimbra@univ-fcomte.fr>

Thanks you too.

That is also what I am doing. Note that I am downloading jar files into a directory created in rappdirs::user_data_dir() using the command download.file(url, ...).

If I do not specify 'mode='wb'' in download.file() on a Windows OS, downloaded jar file is corrupted and cannot be used because a text file is created in which \n are converted into \r\n, which does not make sens for a binary file.

I hope it can help
Cheers

Paul Savary - PhD Student
UMR 6049 Th?MA (Besan?on), UMR 6282 Biog?osciences (Dijon), ARP-Astrance (Paris) 
Phone number : +33.6.30.97.34.27 
Research topics: population genetics, landscape ecology, graph theory, spatial statistics

----- Mail original -----
De: "Rainer M Krug" <Rainer at krugs.de>
?: "Ma?lle SALMON" <maelle.salmon at yahoo.se>
Cc: "r-package-devel" <r-package-devel at r-project.org>
Envoy?: Lundi 13 Juillet 2020 11:15:10
Objet: Re: [R-pkg-devel]  Proper CRAN way - How to handle dependency of java jar file?

Thanks Ma?lle - that is exactly what I am doing at the moment.

Cheers,

Rainer


> On 13 Jul 2020, at 08:17, Ma?lle SALMON <maelle.salmon at yahoo.se> wrote:
> 
> Regarding where to save the jar file, you might be interested in "app dirs" (via tools::R_user_dir() in R from 4.0, the rappdirs package, the hoardr package) cf https://blog.r-hub.io/2020/03/12/user-preferences/#not-so-temporary-files3
> 
> Ma?lle.
> 
> Den tisdag 23 juni 2020 14:56:30 CEST, Rainer M Krug <rainer at krugs.de> skrev: 
> 
> 
> 
> 
> 
> Thanks Duncan.
> 
>> On 23 Jun 2020, at 14:35, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>> 
>> Your assumption that .jar files are not allowed is wrong:  a number of packages contain them:  rscala, J4R, Rbgs, bartMachine, OpenStreetMap, ...  There's a specific mention about how to include them in the CRAN policy document:
> 
> That?s good to know.
> 
>> 
>> "For Java .class and .jar files, the sources should be in a top-level java directory in the source package (or that directory should explain how they can be obtained)."
> 
> So a tet file in the inst/jar directory giving the link to the GitHub repo would be fine in this case?
> 
>> 
>> If you still decide not to include your .jar file (maybe it is too big, for example),
> 
> 
> I guess it would be stretching it a bit, as the jar file is 8.2 MB, and plantuml has regular continuous updates, so I would prefer to keep it dynamic.
> 
> 
>> then I think your option 1 is unusable for those people who can't write to the library location because of permission problems. (Admin privileges are often necessary to install packages in the main library.)  Generally I think everyone can install packages somewhere, but users do really get confused when they have multiple library locations, possibly each containing a different version of a package.
> 
> So the suggested option would be to have a function, which 
> 1) ask the user to create a directory in the home folder 
> 2) download the jar file into that directory or, when no permission is granted, into the tmpdir()
> 
> Thanks, no major changes necessary for that,
> 
> Rainer
> 
> 
>> 
>> Duncan Murdoch
>> 
>> On 23/06/2020 8:18 a.m., Rainer M Krug wrote:
>>> Hi
>>> I have a package called `plantuml` (https://github.com/rkrug/plantuml) which converts plantuml code to UML graphs. It uses for this the java program https://plantuml.com which is Open Source.
>>> As it is not allowed to distribute a binary with an R package, I use the approach of a function which downloads the jar file into the directory `system.file("jar/plantuml.jar", package = "plantuml?)`.
>>> This works nicely, and at the moment, the function is called automatically before the plantuml.jar is used.
>>> Now I would like to submit the package to CRAN. I can?t find the guidelines anymore, so I am asking here:
>>> What is the appropriate way of handling this?
>>> I can think of a at least two ways of making it obvious to the user, that a binary is downloaded:
>>> 1) if the file plantuml.jar is not present, ask the user to run the function `updatePlantumlJar()` which downloads the jar to the original location in the package directory
>>> 2) tell the user to download the file manually and to put it somewhere, where the package will find it
>>> I would prefer the first version, as the plantuml.jar would be in the package directory, where usually nobody but the package is doing stuff.
>>> Any suggestions on how I could make this ?CRAN conform??
>>> Thanks a lot,
>>> Rainer
>>> --
>>> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
>>> Orcid ID: 0000-0002-7490-0066
>>> Department of Evolutionary Biology and Environmental Studies
>>> University of Z?rich
>>> Office Y34-J-74
>>> Winterthurerstrasse 190
>>> 8075 Z?rich
>>> Switzerland
>>> Office:    +41 (0)44 635 47 64
>>> Cell:          +41 (0)78 630 66 57
>>> email:      Rainer.Krug at uzh.ch
>>>         Rainer at krugs.de
>>> Skype:    RMkrug
>>> PGP: 0x0F52F982
>>> --
>>> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
>>> Orcid ID: 0000-0002-7490-0066
>>> Department of Evolutionary Biology and Environmental Studies
>>> University of Z?rich
>>> Office Y34-J-74
>>> Winterthurerstrasse 190
>>> 8075 Z?rich
>>> Switzerland
>>> Office:    +41 (0)44 635 47 64
>>> Cell:          +41 (0)78 630 66 57
>>> email:      Rainer.Krug at uzh.ch
>>>         Rainer at krugs.de
>>> Skype:    RMkrug
>>> PGP: 0x0F52F982
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> 
> 
> --
> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
> 
> Orcid ID: 0000-0002-7490-0066
> 
> Department of Evolutionary Biology and Environmental Studies
> University of Z?rich
> Office Y34-J-74
> Winterthurerstrasse 190
> 8075 Z?rich
> Switzerland
> 
> Office:    +41 (0)44 635 47 64
> Cell:          +41 (0)78 630 66 57
> email:      Rainer.Krug at uzh.ch
>         Rainer at krugs.de
> Skype:    RMkrug
> 
> PGP: 0x0F52F982
> 
> 
> 
> 
>     [[alternative HTML version deleted]]
> 
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

--
Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)

Orcid ID: 0000-0002-7490-0066

Department of Evolutionary Biology and Environmental Studies
University of Z?rich
Office Y34-J-74
Winterthurerstrasse 190
8075 Z?rich
Switzerland

Office:	+41 (0)44 635 47 64
Cell:       	+41 (0)78 630 66 57
email:      Rainer.Krug at uzh.ch
		Rainer at krugs.de
Skype:     RMkrug

PGP: 0x0F52F982




	[[alternative HTML version deleted]]

______________________________________________
R-package-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel


From berryboe@@enkoo| @end|ng |rom hotm@||@com  Mon Jul 13 12:40:58 2020
From: berryboe@@enkoo| @end|ng |rom hotm@||@com (Berry Boessenkool)
Date: Mon, 13 Jul 2020 10:40:58 +0000
Subject: [R-pkg-devel] mode='wb' in download.file()
In-Reply-To: <1167939014.100333238.1594632677953.JavaMail.zimbra@univ-fcomte.fr>
References: <A52AC0C9-BD94-4E3E-B458-763D6B840322@krugs.de>
 <046623ab-f676-e752-8227-25cb1b1c616c@gmail.com>
 <61BDA495-A218-496D-8C61-C870008A04D1@krugs.de>
 <1250265904.886843.1594621050558@mail.yahoo.com>
 <279940E6-3267-48A9-9AE6-A1A25DA980C4@krugs.de>,
 <1167939014.100333238.1594632677953.JavaMail.zimbra@univ-fcomte.fr>
Message-ID: <AM0PR01MB403370D83D731D4FB27A49C1D5600@AM0PR01MB4033.eurprd01.prod.exchangelabs.com>


On a related note:

I also need to set mode="wb" to download binary files on Windows in my rdwd package.
I'm considering calling download.file() with that mode as the default.
Is there any problem with that, potentially on other OS or for non-binary files?

Feel free to comment here to not crowd the mailing list:
https://github.com/brry/rdwd/issues/20

Thanks,
Berry



________________________________
From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Paul SAVARY <paul.savary at univ-fcomte.fr>
Sent: Monday, July 13, 2020 11:31
To: Rainer M Krug <Rainer at krugs.de>
Cc: r-package-devel <r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] Proper CRAN way - How to handle dependency of java jar file?

Thanks you too.

That is also what I am doing. Note that I am downloading jar files into a directory created in rappdirs::user_data_dir() using the command download.file(url, ...).


oaded jar file is corrupted and cannot be used because a text file is created in which \n are converted into \r\n, which does not make sens for a binary file.

I hope it can help
Cheers

	[[alternative HTML version deleted]]


From R@|ner @end|ng |rom krug@@de  Mon Jul 13 13:14:01 2020
From: R@|ner @end|ng |rom krug@@de (Rainer M Krug)
Date: Mon, 13 Jul 2020 13:14:01 +0200
Subject: [R-pkg-devel] 
 Proper CRAN way - How to handle dependency of java jar file?
In-Reply-To: <1167939014.100333238.1594632677953.JavaMail.zimbra@univ-fcomte.fr>
References: <A52AC0C9-BD94-4E3E-B458-763D6B840322@krugs.de>
 <046623ab-f676-e752-8227-25cb1b1c616c@gmail.com>
 <61BDA495-A218-496D-8C61-C870008A04D1@krugs.de>
 <1250265904.886843.1594621050558@mail.yahoo.com>
 <279940E6-3267-48A9-9AE6-A1A25DA980C4@krugs.de>
 <1167939014.100333238.1594632677953.JavaMail.zimbra@univ-fcomte.fr>
Message-ID: <BA6C1D4A-4E94-466F-83AC-92FCC0C34793@krugs.de>



> On 13 Jul 2020, at 11:31, Paul SAVARY <paul.savary at univ-fcomte.fr> wrote:
> 
> Thanks you too.
> 
> That is also what I am doing. Note that I am downloading jar files into a directory created in rappdirs::user_data_dir() using the command download.file(url, ...).

Jup - exactly.

> 
> If I do not specify 'mode='wb'' in download.file() on a Windows OS, downloaded jar file is corrupted and cannot be used because a text file is created in which \n are converted into \r\n, which does not make sens for a binary file.

Yes - the `mode = ?wb?` bit me as well - developing on MacOS, testing on travis on GitHub with Linux and Mac,, and what did I get, a corrupt jar on windows.

Thanks,

Rainer

> 
> I hope it can help
> Cheers
> 
> Paul Savary - PhD Student
> UMR 6049 Th?MA (Besan?on), UMR 6282 Biog?osciences (Dijon), ARP-Astrance (Paris) 
> Phone number : +33.6.30.97.34.27 
> Research topics: population genetics, landscape ecology, graph theory, spatial statistics
> 
> ----- Mail original -----
> De: "Rainer M Krug" <Rainer at krugs.de>
> ?: "Ma?lle SALMON" <maelle.salmon at yahoo.se>
> Cc: "r-package-devel" <r-package-devel at r-project.org>
> Envoy?: Lundi 13 Juillet 2020 11:15:10
> Objet: Re: [R-pkg-devel]  Proper CRAN way - How to handle dependency of java jar file?
> 
> Thanks Ma?lle - that is exactly what I am doing at the moment.
> 
> Cheers,
> 
> Rainer
> 
> 
>> On 13 Jul 2020, at 08:17, Ma?lle SALMON <maelle.salmon at yahoo.se> wrote:
>> 
>> Regarding where to save the jar file, you might be interested in "app dirs" (via tools::R_user_dir() in R from 4.0, the rappdirs package, the hoardr package) cf https://blog.r-hub.io/2020/03/12/user-preferences/#not-so-temporary-files3
>> 
>> Ma?lle.
>> 
>> Den tisdag 23 juni 2020 14:56:30 CEST, Rainer M Krug <rainer at krugs.de> skrev: 
>> 
>> 
>> 
>> 
>> 
>> Thanks Duncan.
>> 
>>> On 23 Jun 2020, at 14:35, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>>> 
>>> Your assumption that .jar files are not allowed is wrong:  a number of packages contain them:  rscala, J4R, Rbgs, bartMachine, OpenStreetMap, ...  There's a specific mention about how to include them in the CRAN policy document:
>> 
>> That?s good to know.
>> 
>>> 
>>> "For Java .class and .jar files, the sources should be in a top-level java directory in the source package (or that directory should explain how they can be obtained)."
>> 
>> So a tet file in the inst/jar directory giving the link to the GitHub repo would be fine in this case?
>> 
>>> 
>>> If you still decide not to include your .jar file (maybe it is too big, for example),
>> 
>> 
>> I guess it would be stretching it a bit, as the jar file is 8.2 MB, and plantuml has regular continuous updates, so I would prefer to keep it dynamic.
>> 
>> 
>>> then I think your option 1 is unusable for those people who can't write to the library location because of permission problems. (Admin privileges are often necessary to install packages in the main library.)  Generally I think everyone can install packages somewhere, but users do really get confused when they have multiple library locations, possibly each containing a different version of a package.
>> 
>> So the suggested option would be to have a function, which 
>> 1) ask the user to create a directory in the home folder 
>> 2) download the jar file into that directory or, when no permission is granted, into the tmpdir()
>> 
>> Thanks, no major changes necessary for that,
>> 
>> Rainer
>> 
>> 
>>> 
>>> Duncan Murdoch
>>> 
>>> On 23/06/2020 8:18 a.m., Rainer M Krug wrote:
>>>> Hi
>>>> I have a package called `plantuml` (https://github.com/rkrug/plantuml) which converts plantuml code to UML graphs. It uses for this the java program https://plantuml.com which is Open Source.
>>>> As it is not allowed to distribute a binary with an R package, I use the approach of a function which downloads the jar file into the directory `system.file("jar/plantuml.jar", package = "plantuml?)`.
>>>> This works nicely, and at the moment, the function is called automatically before the plantuml.jar is used.
>>>> Now I would like to submit the package to CRAN. I can?t find the guidelines anymore, so I am asking here:
>>>> What is the appropriate way of handling this?
>>>> I can think of a at least two ways of making it obvious to the user, that a binary is downloaded:
>>>> 1) if the file plantuml.jar is not present, ask the user to run the function `updatePlantumlJar()` which downloads the jar to the original location in the package directory
>>>> 2) tell the user to download the file manually and to put it somewhere, where the package will find it
>>>> I would prefer the first version, as the plantuml.jar would be in the package directory, where usually nobody but the package is doing stuff.
>>>> Any suggestions on how I could make this ?CRAN conform??
>>>> Thanks a lot,
>>>> Rainer
>>>> --
>>>> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
>>>> Orcid ID: 0000-0002-7490-0066
>>>> Department of Evolutionary Biology and Environmental Studies
>>>> University of Z?rich
>>>> Office Y34-J-74
>>>> Winterthurerstrasse 190
>>>> 8075 Z?rich
>>>> Switzerland
>>>> Office:    +41 (0)44 635 47 64
>>>> Cell:          +41 (0)78 630 66 57
>>>> email:      Rainer.Krug at uzh.ch
>>>>        Rainer at krugs.de
>>>> Skype:    RMkrug
>>>> PGP: 0x0F52F982
>>>> --
>>>> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
>>>> Orcid ID: 0000-0002-7490-0066
>>>> Department of Evolutionary Biology and Environmental Studies
>>>> University of Z?rich
>>>> Office Y34-J-74
>>>> Winterthurerstrasse 190
>>>> 8075 Z?rich
>>>> Switzerland
>>>> Office:    +41 (0)44 635 47 64
>>>> Cell:          +41 (0)78 630 66 57
>>>> email:      Rainer.Krug at uzh.ch
>>>>        Rainer at krugs.de
>>>> Skype:    RMkrug
>>>> PGP: 0x0F52F982
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>> 
>> 
>> --
>> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
>> 
>> Orcid ID: 0000-0002-7490-0066
>> 
>> Department of Evolutionary Biology and Environmental Studies
>> University of Z?rich
>> Office Y34-J-74
>> Winterthurerstrasse 190
>> 8075 Z?rich
>> Switzerland
>> 
>> Office:    +41 (0)44 635 47 64
>> Cell:          +41 (0)78 630 66 57
>> email:      Rainer.Krug at uzh.ch
>>        Rainer at krugs.de
>> Skype:    RMkrug
>> 
>> PGP: 0x0F52F982
>> 
>> 
>> 
>> 
>>    [[alternative HTML version deleted]]
>> 
>> 
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> --
> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
> 
> Orcid ID: 0000-0002-7490-0066
> 
> Department of Evolutionary Biology and Environmental Studies
> University of Z?rich
> Office Y34-J-74
> Winterthurerstrasse 190
> 8075 Z?rich
> Switzerland
> 
> Office:	+41 (0)44 635 47 64
> Cell:       	+41 (0)78 630 66 57
> email:      Rainer.Krug at uzh.ch
> 		Rainer at krugs.de
> Skype:     RMkrug
> 
> PGP: 0x0F52F982
> 
> 
> 
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

--
Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)

Orcid ID: 0000-0002-7490-0066

Department of Evolutionary Biology and Environmental Studies
University of Z?rich
Office Y34-J-74
Winterthurerstrasse 190
8075 Z?rich
Switzerland

Office:	+41 (0)44 635 47 64
Cell:       	+41 (0)78 630 66 57
email:      Rainer.Krug at uzh.ch
		Rainer at krugs.de
Skype:     RMkrug

PGP: 0x0F52F982




	[[alternative HTML version deleted]]


From @@r@h@go@|ee @end|ng |rom gm@||@com  Mon Jul 13 14:20:32 2020
From: @@r@h@go@|ee @end|ng |rom gm@||@com (Sarah Goslee)
Date: Mon, 13 Jul 2020 08:20:32 -0400
Subject: [R-pkg-devel] Unable to post messages to this group
In-Reply-To: <CY4PR07MB274376AAE86B2581769415A9BC600@CY4PR07MB2743.namprd07.prod.outlook.com>
References: <CY4PR07MB274376AAE86B2581769415A9BC600@CY4PR07MB2743.namprd07.prod.outlook.com>
Message-ID: <CAM_vjumNvqxdC2ofTBhCaNcTHJMij60ZtCYbupFHy06ie5TLxw@mail.gmail.com>

Clearly you can post messages to this group, since this message was received.

R-package-devel requires that the first time someone posts, their
message is approved by a human. After that first post, they may post
normally. It's not a problem, or anything you've done - this policy
applies to everyone, and cuts down enormously on spam since the
moderators only approve relevant posts. Since your post appeared here,
you've been cleared.

The policy is on the about page where you signed up:

https://stat.ethz.ch/mailman/listinfo/r-package-devel
You have to be a subscriber to the list in order to post any message.
Even then, your first messages are only posted after one manual
moderator approvement.

The moderation team are all volunteers, and sometimes they are busy or
away from the computer, especially on weekends.

Sarah


On Mon, Jul 13, 2020 at 5:28 AM Binit Kumar <bkumar at rocketsoftware.com> wrote:
>
> Hi Team,
> I am unable to post messages to this group and keep getting "waiting for moderator" message from bounce email i.e. "R-package-devel <r-package-devel-bounces at r-project.org>".
> Is there any criteria of sending the message to devel group?
>
>
> Thanks & Regards,
>
> Binit Kumar
>


--
Sarah Goslee (she/her)
http://www.numberwright.com


From |bec@v @end|ng |rom gm@||@com  Mon Jul 13 20:53:16 2020
From: |bec@v @end|ng |rom gm@||@com (Chuck Powell)
Date: Mon, 13 Jul 2020 14:53:16 -0400
Subject: [R-pkg-devel] Failing rhub::check_for_cran() because of data.table
Message-ID: <CALvJfh+=_xC9zytrGpwjQHVM073iKDMXzbn5JXSbx3gZnTyDWQ@mail.gmail.com>

Hi,

My first posting.  Apologies in advance if I misspeak or am asking a dumb
question.

I maintain a small package on CRAN
https://cran.r-project.org/web/packages/CGPfunctions/index.html

Source is on Github here https://github.com/ibecav/CGPfunctions/

Recently received note I needed to fix my package because of changes to
broom.  Corrections made and everything passes locally.

When I submit to rhub::check_for_cran() however it creates an error in the
development branch
*Build ID:* CGPfunctions_0.6.2.tar.gz-3e48a7f97fa04b64924552dc50b43fd2


with:

#> Error in loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()),
versionCheck = vI[[j]]) :

1181
<https://builder.r-hub.io/status/CGPfunctions_0.6.2.tar.gz-3e48a7f97fa04b64924552dc50b43fd2#L1181>#>
Calls: ... loadNamespace -> withRestarts -> withOneRestart ->
doWithOneRestart

1182
<https://builder.r-hub.io/status/CGPfunctions_0.6.2.tar.gz-3e48a7f97fa04b64924552dc50b43fd2#L1182>#>
Execution halted

1183
<https://builder.r-hub.io/status/CGPfunctions_0.6.2.tar.gz-3e48a7f97fa04b64924552dc50b43fd2#L1183>#>
there is no package called 'data.table'

1184
<https://builder.r-hub.io/status/CGPfunctions_0.6.2.tar.gz-3e48a7f97fa04b64924552dc50b43fd2#L1184>#>
ERROR: lazy loading failed for package 'CGPfunctions'

1185
<https://builder.r-hub.io/status/CGPfunctions_0.6.2.tar.gz-3e48a7f97fa04b64924552dc50b43fd2#L1185>#>
* removing 'C:/Users/USERDFJOuzrklm/R/CGPfunctions'



Looking at data.table on CRAN I see there is no windows binary
Windows binaries: r-devel: not available
<https://cran.r-project.org/bin/windows/contrib/4.1/ReadMe>,


I don't use any data.table functions, I don't import it, or suggest it or
enhance it it's being pulled in through some dependency in car and/or broom.

Am I okay to submit to CRAN?  Is there a setting I can change?
Obviously data.table exists despite what Rhub is reporting.

Thank you hopefully that is a clear enough description.

Chuck

	[[alternative HTML version deleted]]


From t@choep @end|ng |rom gwdg@de  Tue Jul 14 11:42:02 2020
From: t@choep @end|ng |rom gwdg@de (=?UTF-8?Q?Torsten_Sch=c3=b6ps?=)
Date: Tue, 14 Jul 2020 11:42:02 +0200
Subject: [R-pkg-devel] CRAN package check gives strange error for
 r-release-macos-x86_x64
Message-ID: <8d657e13-cd03-b60d-c4a5-27929f03ec2a@gwdg.de>

Hello,

I'm trying to submit an updated version of the RPPanalyzer package,
because of an upcoming maintainer change for the package.

But unfortunately the update does not pass the submit check system. :(
The details are here: 
https://cran.r-project.org/web/checks/check_results_RPPanalyzer.html)

inux and Windows are passed, but it keeps crashing for MacOS 
(r-release-macos-x86_x64) giving this error:

Error in file(con, "w") : cannot open the connection

(Full log here: 
https://www.r-project.org/nosvn/R.check/r-release-macos-x86_64/RPPanalyzer-00install.html)

I have no clue what might throw this message nor how to fix it ?

Any help is therefore very appreciated :)

Regards,
Torsten Schoeps

-- 
Dipl.-Inf.(FH)
Torsten Schoeps
Network and System Administrator

Institute of Medical Bioinformatics
University  Medical Center Goettingen
Goldschmidstr.1
37077 Goettingen

email:torsten.schoeps at bioinf.med.uni-goettingen.de
phone: +49 551 3914916
fax:   +49 551 3914914


	[[alternative HTML version deleted]]


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Tue Jul 14 13:13:41 2020
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Tue, 14 Jul 2020 13:13:41 +0200
Subject: [R-pkg-devel] CRAN package check gives strange error for
 r-release-macos-x86_x64
In-Reply-To: <8d657e13-cd03-b60d-c4a5-27929f03ec2a@gwdg.de>
References: <8d657e13-cd03-b60d-c4a5-27929f03ec2a@gwdg.de>
Message-ID: <4ff806bc-fb85-f3fd-2d53-eb1fa904ae8e@statistik.tu-dortmund.de>

Ideally ask Simon Urbanek who runs the Mac system.

Best,
Uwe Ligges




On 14.07.2020 11:42, Torsten Sch?ps wrote:
> Hello,
> 
> I'm trying to submit an updated version of the RPPanalyzer package,
> because of an upcoming maintainer change for the package.
> 
> But unfortunately the update does not pass the submit check system. :(
> The details are here:
> https://cran.r-project.org/web/checks/check_results_RPPanalyzer.html)
> 
> inux and Windows are passed, but it keeps crashing for MacOS
> (r-release-macos-x86_x64) giving this error:
> 
> Error in file(con, "w") : cannot open the connection
> 
> (Full log here:
> https://www.r-project.org/nosvn/R.check/r-release-macos-x86_64/RPPanalyzer-00install.html)
> 
> I have no clue what might throw this message nor how to fix it ?
> 
> Any help is therefore very appreciated :)
> 
> Regards,
> Torsten Schoeps
>


From kry|ov@r00t @end|ng |rom gm@||@com  Wed Jul 15 15:51:17 2020
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Wed, 15 Jul 2020 16:51:17 +0300
Subject: [R-pkg-devel] Valgrind warning on saveRDS,
 about object in external pointer
In-Reply-To: <7f384bde935815ee153885a566cd1515997d38e7.camel@gmail.com>
References: <4fda6e6227c10640becba2bcca44cdef29c0a065.camel@gmail.com>
 <20200708205933.35092340@trisector>
 <7f384bde935815ee153885a566cd1515997d38e7.camel@gmail.com>
Message-ID: <20200715165117.327d382d@trisector>

On Wed, 08 Jul 2020 22:43:13 +0300
David Cortes <david.cortes.rivera at gmail.com> wrote:

> About the source code: it actually complains about line
> fit_model.cpp:751 :
> hplane_root->reserve(exp_nodes);

My fault. I was reading the GitHub source code instead of CRAN package
source code.

> I?m not able to reproduce the warning when trying R CMD check with
> valgrind on my computer (tried compiling with gcc9 and clang9), nor
> with the r-debug docker images from github (
> https://github.com/wch/r-debug).

My current system is amd64 Debian 9.12 (gcc 6.3.0-18+deb9u1) with R
3.6.3-1~stretchcran.0. I have built a package from the current GitHub
source of the package and ran R -d 'valgrind --track-origins=yes'
--vanilla < isotree-Ex.R. This resulted in multiple Valgrind warnings
about accessing uninitialised values created by heap allocations at
fit_model.cpp:783 and fit_model.cpp:788.

The first such error can be traced to a pointer to
ext_model_ptr->hplanes[0][2].remainder:

(gdb) frame 2
#2  cereal::BinaryOutputArchive::saveBinary (this=<optimized out>, data=data at entry=0x14a3ad40, size=size at entry=8)
    at /home/me/R/x86_64-pc-linux-gnu-library/3.6/Rcereal/include/cereal/archives/binary.hpp:67
67              auto const writtenSize = static_cast<std::size_t>( itsStream.rdbuf()->sputn( reinterpret_cast<const char*>( data ), size ) );
(gdb) p data
$19 = (const void *) 0x14a3ad40
(gdb) frame 41
#41 0x0000000019d8ce38 in fit_model (X_num=..., X_cat=..., ncat=..., Xc=..., Xc_ind=..., Xc_indptr=..., sample_weights=..., col_weights=..., nrows=100,
    ncols_numeric=2, ncols_categ=0, ndim=2, ntry=3, coef_type=..., coef_by_prop=false, with_replacement=false, weight_as_sample=true, sample_size=100, ntrees=3,
    max_depth=7, limit_depth=false, penalize_range=true, calc_dist=false, standardize_dist=true, sq_dist=false, calc_depth=false, standardize_depth=true,
    weigh_by_kurt=false, prob_pick_by_gain_avg=prob_pick_by_gain_avg at entry=0, prob_split_by_gain_avg=prob_split_by_gain_avg at entry=0,
    prob_pick_by_gain_pl=prob_pick_by_gain_pl at entry=0, prob_split_by_gain_pl=prob_split_by_gain_pl at entry=0, min_gain=min_gain at entry=0, cat_split_type=...,
    new_cat_action=..., missing_action=..., all_perm=false, build_imputer=false, output_imputations=false, min_imp_obs=3, depth_imp=..., weigh_imp_rows=...,
    random_seed=1, nthreads=1) at Rwrapper.cpp:320
320         serialized_obj  =  serialize_cpp_obj(ext_model_ptr.get());
(gdb) p &ext_model_ptr->hplanes[0][2].remainder
$20 = (double *) 0x14a3ad40

(In some stack frames gdb helpfully says that the pointer is optimised
out, but in others it can be accessed.)

I grepped the source code for 'remainder =' and found one assignment to
hplanes.back().remainder in extended.cpp:507. Could
hplanes.emplace_back() happen without a corresponding assignment to
hplanes.back().remainder?

-- 
Best regards,
Ivan


From @bronder @end|ng |rom @tevebronder@com  Wed Jul 15 19:17:50 2020
From: @bronder @end|ng |rom @tevebronder@com (Steve Bronder)
Date: Wed, 15 Jul 2020 13:17:50 -0400
Subject: [R-pkg-devel] Anyone Know How To Setup Wine for Windows Testing?
Message-ID: <CAAVP=a=JBcHYaLWJLUUj9qisufmDkwTLB+4Z=VsB44Kmiq3wVQ@mail.gmail.com>

Does anyone know of a setup guide for getting R and Rtools 4.0 up and
running on Wine with the Windows Server 2008 R2 VM? Do other maintainers
with more knowhow think that would be useful for debugging purposes?

I've been trying to test out some flto gcc things for windows by setting up
a local wine VM on my ubuntu box. Wine has an option for Windows Server
2008 R2 (which I believe is the windows session CRAN uses?) If anyone has
done this before and knows of a guide somewhere that would be very helpful!

Regards,

Steve Bronder

	[[alternative HTML version deleted]]


From pro|jcn@@h @end|ng |rom gm@||@com  Wed Jul 15 19:56:10 2020
From: pro|jcn@@h @end|ng |rom gm@||@com (J C Nash)
Date: Wed, 15 Jul 2020 13:56:10 -0400
Subject: [R-pkg-devel] 
 Anyone Know How To Setup Wine for Windows Testing?
In-Reply-To: <CAAVP=a=JBcHYaLWJLUUj9qisufmDkwTLB+4Z=VsB44Kmiq3wVQ@mail.gmail.com>
References: <CAAVP=a=JBcHYaLWJLUUj9qisufmDkwTLB+4Z=VsB44Kmiq3wVQ@mail.gmail.com>
Message-ID: <b1ef86ec-c289-caf3-8ba8-fb327579957c@gmail.com>

Are you sure you want to try to run R etc. under Wine?

- If you have Windows running, either directly or in a VM, you can run R there.
- If you have Windows and want to run R under some other OS, then set up a VM
e.g., Linux Mint, for that. I sometimes test R for Windows in a VirtualBox VM
for Win10, but generally run in Linux Mint. I've also run R in some Linux VMs
to test for specific dependencies in some distros.

I rather doubt R will run very well in Linux under Wine. My experience with Wine
is that a few apps (e.g. Irfanview) run well, but many give lots of trouble.

JN


On 2020-07-15 1:17 p.m., Steve Bronder wrote:
> Does anyone know of a setup guide for getting R and Rtools 4.0 up and
> running on Wine with the Windows Server 2008 R2 VM? Do other maintainers
> with more knowhow think that would be useful for debugging purposes?
> 
> I've been trying to test out some flto gcc things for windows by setting up
> a local wine VM on my ubuntu box. Wine has an option for Windows Server
> 2008 R2 (which I believe is the windows session CRAN uses?) If anyone has
> done this before and knows of a guide somewhere that would be very helpful!
> 
> Regards,
> 
> Steve Bronder
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From n|u|tz @end|ng |rom gm@||@com  Wed Jul 15 20:22:20 2020
From: n|u|tz @end|ng |rom gm@||@com (Neal Fultz)
Date: Wed, 15 Jul 2020 11:22:20 -0700
Subject: [R-pkg-devel] 
 Anyone Know How To Setup Wine for Windows Testing?
In-Reply-To: <b1ef86ec-c289-caf3-8ba8-fb327579957c@gmail.com>
References: <CAAVP=a=JBcHYaLWJLUUj9qisufmDkwTLB+4Z=VsB44Kmiq3wVQ@mail.gmail.com>
 <b1ef86ec-c289-caf3-8ba8-fb327579957c@gmail.com>
Message-ID: <CAL9B2veMU6DzVcqyW=vXKcO6UaktebTE+og2KXipaXrkGmXBsA@mail.gmail.com>

If you don't mind multi-gig docker containers, this can be helpful:

https://github.com/scottyhardy/docker-wine

It doesn't work with 64 bit versions of R as far as I could tell, but 32
bit did install and start correctly in a few clicks when I tried last year.





On Wed, Jul 15, 2020 at 10:56 AM J C Nash <profjcnash at gmail.com> wrote:

> Are you sure you want to try to run R etc. under Wine?
>
> - If you have Windows running, either directly or in a VM, you can run R
> there.
> - If you have Windows and want to run R under some other OS, then set up a
> VM
> e.g., Linux Mint, for that. I sometimes test R for Windows in a VirtualBox
> VM
> for Win10, but generally run in Linux Mint. I've also run R in some Linux
> VMs
> to test for specific dependencies in some distros.
>
> I rather doubt R will run very well in Linux under Wine. My experience
> with Wine
> is that a few apps (e.g. Irfanview) run well, but many give lots of
> trouble.
>
> JN
>
>
> On 2020-07-15 1:17 p.m., Steve Bronder wrote:
> > Does anyone know of a setup guide for getting R and Rtools 4.0 up and
> > running on Wine with the Windows Server 2008 R2 VM? Do other maintainers
> > with more knowhow think that would be useful for debugging purposes?
> >
> > I've been trying to test out some flto gcc things for windows by setting
> up
> > a local wine VM on my ubuntu box. Wine has an option for Windows Server
> > 2008 R2 (which I believe is the windows session CRAN uses?) If anyone has
> > done this before and knows of a guide somewhere that would be very
> helpful!
> >
> > Regards,
> >
> > Steve Bronder
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From d@v|d@corte@@r|ver@ @end|ng |rom gm@||@com  Wed Jul 15 20:54:22 2020
From: d@v|d@corte@@r|ver@ @end|ng |rom gm@||@com (David Cortes)
Date: Wed, 15 Jul 2020 21:54:22 +0300
Subject: [R-pkg-devel] Valgrind warning on saveRDS,
 about object in external pointer
In-Reply-To: <20200715165117.327d382d@trisector>
References: <4fda6e6227c10640becba2bcca44cdef29c0a065.camel@gmail.com>
 <20200708205933.35092340@trisector>
 <7f384bde935815ee153885a566cd1515997d38e7.camel@gmail.com>
 <20200715165117.327d382d@trisector>
Message-ID: <f835da7329d59d4c7fc5099f0df7a524b8f24e9d.camel@gmail.com>

Thanks a lot for the answer!

I unfortunately wasn?t able to reproduce it with the same OS + compiler
+ valgrind settings, but from what I see in the message, turns out in
the end it might indeed be due to Cereal copying raw bytes into an R
vector and Valgrind complaining about the copied bytes rather than the
original object.

And it also looks like it could be issue with default initializations.
With this I?ve now learned that ?Struct() {}? and ?Struct()=default?
are not the same thing.

Still, oddly enough that the complaint happens only at ?saveRDS? when
tested on the CRAN servers.

Thanks again for your help!

Best regards,
David Cortes

On Wed, 2020-07-15 at 16:51 +0300, Ivan Krylov wrote:
> On Wed, 08 Jul 2020 22:43:13 +0300
> David Cortes <david.cortes.rivera at gmail.com> wrote:
> 
> > About the source code: it actually complains about line
> > fit_model.cpp:751 :
> > hplane_root->reserve(exp_nodes);
> 
> My fault. I was reading the GitHub source code instead of CRAN
> package
> source code.
> 
> > I?m not able to reproduce the warning when trying R CMD check with
> > valgrind on my computer (tried compiling with gcc9 and clang9), nor
> > with the r-debug docker images from github (
> > https://github.com/wch/r-debug).
> 
> My current system is amd64 Debian 9.12 (gcc 6.3.0-18+deb9u1) with R
> 3.6.3-1~stretchcran.0. I have built a package from the current GitHub
> source of the package and ran R -d 'valgrind --track-origins=yes'
> --vanilla < isotree-Ex.R. This resulted in multiple Valgrind warnings
> about accessing uninitialised values created by heap allocations at
> fit_model.cpp:783 and fit_model.cpp:788.
> 
> The first such error can be traced to a pointer to
> ext_model_ptr->hplanes[0][2].remainder:
> 
> (gdb) frame 2
> #2  cereal::BinaryOutputArchive::saveBinary (this=<optimized out>, 
> data=data at entry=0x14a3ad40, size=size at entry=8)
>     at /home/me/R/x86_64-pc-linux-gnu-
> library/3.6/Rcereal/include/cereal/archives/binary.hpp:67
> 67              auto const writtenSize = static_cast<std::size_t>(
> itsStream.rdbuf()->sputn( reinterpret_cast<const char*>( data ), size
> ) );
> (gdb) p data
> $19 = (const void *) 0x14a3ad40
> (gdb) frame 41
> #41 0x0000000019d8ce38 in fit_model (X_num=..., X_cat=..., ncat=...,
> Xc=..., Xc_ind=..., Xc_indptr=..., sample_weights=...,
> col_weights=..., nrows=100,
>     ncols_numeric=2, ncols_categ=0, ndim=2, ntry=3, coef_type=...,
> coef_by_prop=false, with_replacement=false, weight_as_sample=true,
> sample_size=100, ntrees=3,
>     max_depth=7, limit_depth=false, penalize_range=true,
> calc_dist=false, standardize_dist=true, sq_dist=false,
> calc_depth=false, standardize_depth=true,
>     weigh_by_kurt=false, 
> prob_pick_by_gain_avg=prob_pick_by_gain_avg at entry=0, 
> prob_split_by_gain_avg=prob_split_by_gain_avg at entry=0,
>     prob_pick_by_gain_pl=prob_pick_by_gain_pl at entry=0, 
> prob_split_by_gain_pl=prob_split_by_gain_pl at entry=0, 
> min_gain=min_gain at entry=0, cat_split_type=...,
>     new_cat_action=..., missing_action=..., all_perm=false,
> build_imputer=false, output_imputations=false, min_imp_obs=3,
> depth_imp=..., weigh_imp_rows=...,
>     random_seed=1, nthreads=1) at Rwrapper.cpp:320
> 320         serialized_obj  =  serialize_cpp_obj(ext_model_ptr.get())
> ;
> (gdb) p &ext_model_ptr->hplanes[0][2].remainder
> $20 = (double *) 0x14a3ad40
> 
> (In some stack frames gdb helpfully says that the pointer is
> optimised
> out, but in others it can be accessed.)
> 
> I grepped the source code for 'remainder =' and found one assignment
> to
> hplanes.back().remainder in extended.cpp:507. Could
> hplanes.emplace_back() happen without a corresponding assignment to
> hplanes.back().remainder?
>


From c@@rd|@g@bor @end|ng |rom gm@||@com  Thu Jul 16 09:49:59 2020
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Thu, 16 Jul 2020 08:49:59 +0100
Subject: [R-pkg-devel] 
 Failing rhub::check_for_cran() because of data.table
In-Reply-To: <CALvJfh+=_xC9zytrGpwjQHVM073iKDMXzbn5JXSbx3gZnTyDWQ@mail.gmail.com>
References: <CALvJfh+=_xC9zytrGpwjQHVM073iKDMXzbn5JXSbx3gZnTyDWQ@mail.gmail.com>
Message-ID: <CABtg=Kn6sb=AZNTYF1oNi7dXwTLTLw4okcXV505yKiSq9=r5Ug@mail.gmail.com>

Hi, this is because data.table is not available as a binary package
for R-devel, on CRAN. You can tell R to build it from source like
this:

rhub::check(
  platform="windows-x86_64-devel",
  env_vars=c(R_COMPILE_AND_INSTALL_PACKAGES = "always")
)

Btw. please report R-ghub errors in the issue tracker, e.g.
https://github.com/r-hub/rhub/issues/367#issuecomment-621757715

Thanks,
Gabor

On Mon, Jul 13, 2020 at 8:22 PM Chuck Powell <ibecav at gmail.com> wrote:
>
> Hi,
>
> My first posting.  Apologies in advance if I misspeak or am asking a dumb
> question.
>
> I maintain a small package on CRAN
> https://cran.r-project.org/web/packages/CGPfunctions/index.html
>
> Source is on Github here https://github.com/ibecav/CGPfunctions/
>
> Recently received note I needed to fix my package because of changes to
> broom.  Corrections made and everything passes locally.
>
> When I submit to rhub::check_for_cran() however it creates an error in the
> development branch
> *Build ID:* CGPfunctions_0.6.2.tar.gz-3e48a7f97fa04b64924552dc50b43fd2
>
>
> with:
>
> #> Error in loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()),
> versionCheck = vI[[j]]) :
>
> 1181
> <https://builder.r-hub.io/status/CGPfunctions_0.6.2.tar.gz-3e48a7f97fa04b64924552dc50b43fd2#L1181>#>
> Calls: ... loadNamespace -> withRestarts -> withOneRestart ->
> doWithOneRestart
>
> 1182
> <https://builder.r-hub.io/status/CGPfunctions_0.6.2.tar.gz-3e48a7f97fa04b64924552dc50b43fd2#L1182>#>
> Execution halted
>
> 1183
> <https://builder.r-hub.io/status/CGPfunctions_0.6.2.tar.gz-3e48a7f97fa04b64924552dc50b43fd2#L1183>#>
> there is no package called 'data.table'
>
> 1184
> <https://builder.r-hub.io/status/CGPfunctions_0.6.2.tar.gz-3e48a7f97fa04b64924552dc50b43fd2#L1184>#>
> ERROR: lazy loading failed for package 'CGPfunctions'
>
> 1185
> <https://builder.r-hub.io/status/CGPfunctions_0.6.2.tar.gz-3e48a7f97fa04b64924552dc50b43fd2#L1185>#>
> * removing 'C:/Users/USERDFJOuzrklm/R/CGPfunctions'
>
>
>
> Looking at data.table on CRAN I see there is no windows binary
> Windows binaries: r-devel: not available
> <https://cran.r-project.org/bin/windows/contrib/4.1/ReadMe>,
>
>
> I don't use any data.table functions, I don't import it, or suggest it or
> enhance it it's being pulled in through some dependency in car and/or broom.
>
> Am I okay to submit to CRAN?  Is there a setting I can change?
> Obviously data.table exists despite what Rhub is reporting.
>
> Thank you hopefully that is a clear enough description.
>
> Chuck
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From r|che| @end|ng |rom r|che|b||derbeek@n|  Thu Jul 16 14:57:00 2020
From: r|che| @end|ng |rom r|che|b||derbeek@n| (Richel Bilderbeek)
Date: Thu, 16 Jul 2020 14:57:00 +0200
Subject: [R-pkg-devel] Interpret feedback: not write testthat-tests in
 examples
Message-ID: <1594904220089.18734.11146@webmail8>

Dear R package developers,

I would enjoy some help regarding some feedback I got on my package from a CRAN volunteer, as I am unsure how to interpret this correctly.

This is the feedback I got (I added '[do]'):

> Please [do] not write testthat-tests in your examples.

I wonder if this is about using `testthat` or using tests in general.

To simplify the context, say I wrote a package with a function called `add`, that adds two numbers. My example code would then be something like this:

```
library(testthat)

expect_equal(add(1, 2), 3)
```

The first interpretation is about using `testthat`: maybe I should use base R (`stopifnot`) or another testing library (`testit`) or hand-craft it myself?

The second interpretation is about using tests in example code. I like to actively demonstrate that my code works as expected. I checked the policies regarding examples, and I could not find a rule that I should refrain from doing so.

What is the correct response to this feedback?

Thanks for your guidance, Richel Bilderbeek


From r|||ght79 @end|ng |rom gm@||@com  Thu Jul 16 15:41:31 2020
From: r|||ght79 @end|ng |rom gm@||@com (Robert M. Flight)
Date: Thu, 16 Jul 2020 09:41:31 -0400
Subject: [R-pkg-devel] Interpret feedback: not write testthat-tests in
 examples
In-Reply-To: <1594904220089.18734.11146@webmail8>
References: <1594904220089.18734.11146@webmail8>
Message-ID: <CAJLyBTU46_MxSam_rj1rwpCYA0vWZ2ddtWKDMBmMSsKyev9EJg@mail.gmail.com>

Richel,

I think that feedback is important. Examples are examples first, and tests
second, as in if your examples no longer work, then maybe you need to check
your underlying code.

{testthat} tests belong in their own `tests` directory, and are used to
directly test your code and provide feedback about whether your code is
working.

The pattern I normally see if you want to directly check the output of an
example is a `stopifnot(x == y)`, but I've never observed having
`expect_equal` in example code.

There might not be a policy against it, but I think the general expectation
is that {testthat} code stays in `tests`, not in examples in the
documentation.

-Robert

On Thu, Jul 16, 2020 at 9:28 AM Richel Bilderbeek <
richel at richelbilderbeek.nl> wrote:

> Dear R package developers,
>
> I would enjoy some help regarding some feedback I got on my package from a
> CRAN volunteer, as I am unsure how to interpret this correctly.
>
> This is the feedback I got (I added '[do]'):
>
> > Please [do] not write testthat-tests in your examples.
>
> I wonder if this is about using `testthat` or using tests in general.
>
> To simplify the context, say I wrote a package with a function called
> `add`, that adds two numbers. My example code would then be something like
> this:
>
> ```
> library(testthat)
>
> expect_equal(add(1, 2), 3)
> ```
>
> The first interpretation is about using `testthat`: maybe I should use
> base R (`stopifnot`) or another testing library (`testit`) or hand-craft it
> myself?
>
> The second interpretation is about using tests in example code. I like to
> actively demonstrate that my code works as expected. I checked the policies
> regarding examples, and I could not find a rule that I should refrain from
> doing so.
>
> What is the correct response to this feedback?
>
> Thanks for your guidance, Richel Bilderbeek
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From m@rk@v@nder|oo @end|ng |rom gm@||@com  Thu Jul 16 15:45:52 2020
From: m@rk@v@nder|oo @end|ng |rom gm@||@com (Mark van der Loo)
Date: Thu, 16 Jul 2020 15:45:52 +0200
Subject: [R-pkg-devel] Interpret feedback: not write testthat-tests in
 examples
In-Reply-To: <1594904220089.18734.11146@webmail8>
References: <1594904220089.18734.11146@webmail8>
Message-ID: <CAOKDuOisaCKxwZk9MCB7Pg8RAjfTi71f2+dxM=aWrZfiOmxZww@mail.gmail.com>

Dear Richel,

The comment itself is pretty clear I think: to be accepted on CRAN you
should not use testthat tests in your examples.

I can't speak for CRAN but I'm pretty convinced this is for testing in
general.

Tests are for testing, not for demonstration. Most users of your package
will probably have never heard of testthat because they are not package
authors. They also probably don't need testthat to use your package, so it
distracts them from learning how your package works. Packages like testthat
(and RUnit, unity and tinytest) are in the first place aimed at package
authors to make sure that their package works as it should and to avoid
re-introducing bugs (regressions).



Best,
Mark




On Thu, Jul 16, 2020 at 3:28 PM Richel Bilderbeek <
richel at richelbilderbeek.nl> wrote:

> Dear R package developers,
>
> I would enjoy some help regarding some feedback I got on my package from a
> CRAN volunteer, as I am unsure how to interpret this correctly.
>
> This is the feedback I got (I added '[do]'):
>
> > Please [do] not write testthat-tests in your examples.
>
> I wonder if this is about using `testthat` or using tests in general.
>
> To simplify the context, say I wrote a package with a function called
> `add`, that adds two numbers. My example code would then be something like
> this:
>
> ```
> library(testthat)
>
> expect_equal(add(1, 2), 3)
> ```
>
> The first interpretation is about using `testthat`: maybe I should use
> base R (`stopifnot`) or another testing library (`testit`) or hand-craft it
> myself?
>
> The second interpretation is about using tests in example code. I like to
> actively demonstrate that my code works as expected. I checked the policies
> regarding examples, and I could not find a rule that I should refrain from
> doing so.
>
> What is the correct response to this feedback?
>
> Thanks for your guidance, Richel Bilderbeek
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From henr|k@bengt@@on @end|ng |rom gm@||@com  Thu Jul 16 19:39:45 2020
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Thu, 16 Jul 2020 10:39:45 -0700
Subject: [R-pkg-devel] Interpret feedback: not write testthat-tests in
 examples
In-Reply-To: <1594904220089.18734.11146@webmail8>
References: <1594904220089.18734.11146@webmail8>
Message-ID: <CAFDcVCTXxVibVMrJLBoVApHCLOCYoRSFJa8F70wsZP4Uct2TaQ@mail.gmail.com>

If the point of having, say,

stopifnot(add(1, 2) == sum(c(1, 2))

is to make it explicit to the reader that your add() function gives
the same results as sum(), then I argue that is valid to use in an
example.  I'm pretty sure I've used that in some of my examples.  For
the purpose, there should be no reason why you can't use other
"assert" functions for this purpose, e.g.

testthat::expect_equal(add(1, 2), sum(c(1, 2))

Now, if the point of your "assert" statement is only to validate your
package/code, then I agree it should not be in the example code
because it adds clutter.  Such validation should be in a package test.

So, if the former, I suggest you reply to the CRAN Team and explain this.

/Henrik

On Thu, Jul 16, 2020 at 6:28 AM Richel Bilderbeek
<richel at richelbilderbeek.nl> wrote:
>
> Dear R package developers,
>
> I would enjoy some help regarding some feedback I got on my package from a CRAN volunteer, as I am unsure how to interpret this correctly.
>
> This is the feedback I got (I added '[do]'):
>
> > Please [do] not write testthat-tests in your examples.
>
> I wonder if this is about using `testthat` or using tests in general.
>
> To simplify the context, say I wrote a package with a function called `add`, that adds two numbers. My example code would then be something like this:
>
> ```
> library(testthat)
>
> expect_equal(add(1, 2), 3)
> ```
>
> The first interpretation is about using `testthat`: maybe I should use base R (`stopifnot`) or another testing library (`testit`) or hand-craft it myself?
>
> The second interpretation is about using tests in example code. I like to actively demonstrate that my code works as expected. I checked the policies regarding examples, and I could not find a rule that I should refrain from doing so.
>
> What is the correct response to this feedback?
>
> Thanks for your guidance, Richel Bilderbeek
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From r|che| @end|ng |rom r|che|b||derbeek@n|  Thu Jul 16 19:54:36 2020
From: r|che| @end|ng |rom r|che|b||derbeek@n| (Richel Bilderbeek)
Date: Thu, 16 Jul 2020 19:54:36 +0200
Subject: [R-pkg-devel] [SOLVED] Interpret feedback: not write testthat-tests
 in examples
Message-ID: <1594922076296.20726.40152@webmail1>

Dear R package developers,

Thanks so much for the generous responses!

In summary:

- one should usually not write tests in examples, that's what the 'tests' folder is for
- if there is a demonstration, use a simple stopifnot, as one cannot assume a regular reader knows about the testthat package

Thanks again and the best, Richel Bilderbeek



From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Thu Jul 16 19:55:01 2020
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Thu, 16 Jul 2020 10:55:01 -0700
Subject: [R-pkg-devel] Interpret feedback: not write testthat-tests in
 examples
In-Reply-To: <CAFDcVCTXxVibVMrJLBoVApHCLOCYoRSFJa8F70wsZP4Uct2TaQ@mail.gmail.com>
References: <1594904220089.18734.11146@webmail8>
 <CAFDcVCTXxVibVMrJLBoVApHCLOCYoRSFJa8F70wsZP4Uct2TaQ@mail.gmail.com>
Message-ID: <C74DCD67-D0F3-4734-A068-15524D36B254@dcn.davis.ca.us>

The point of an example is to provide an illustration of how the function should be used for people who are not software developers. IMO any use of any other functions should be absolutely minimized to reduce the cognitive overload ("you need to understand 13 other concepts before you can understand what this function does"). Even stopifnot is in my view best avoided, and if you choose to use it then the use of that function should come _after_ the use of the function so it can be ignored by the reader without disrupting their reading of the example.

Complex interactions between functions should be described in vignettes, and tests should be stored in test code. R package help already has a reputation for being obtuse to beginners and mixing tests into examples exacerbates that perception.

On July 16, 2020 10:39:45 AM PDT, Henrik Bengtsson <henrik.bengtsson at gmail.com> wrote:
>If the point of having, say,
>
>stopifnot(add(1, 2) == sum(c(1, 2))
>
>is to make it explicit to the reader that your add() function gives
>the same results as sum(), then I argue that is valid to use in an
>example.  I'm pretty sure I've used that in some of my examples.  For
>the purpose, there should be no reason why you can't use other
>"assert" functions for this purpose, e.g.
>
>testthat::expect_equal(add(1, 2), sum(c(1, 2))
>
>Now, if the point of your "assert" statement is only to validate your
>package/code, then I agree it should not be in the example code
>because it adds clutter.  Such validation should be in a package test.
>
>So, if the former, I suggest you reply to the CRAN Team and explain
>this.
>
>/Henrik
>
>On Thu, Jul 16, 2020 at 6:28 AM Richel Bilderbeek
><richel at richelbilderbeek.nl> wrote:
>>
>> Dear R package developers,
>>
>> I would enjoy some help regarding some feedback I got on my package
>from a CRAN volunteer, as I am unsure how to interpret this correctly.
>>
>> This is the feedback I got (I added '[do]'):
>>
>> > Please [do] not write testthat-tests in your examples.
>>
>> I wonder if this is about using `testthat` or using tests in general.
>>
>> To simplify the context, say I wrote a package with a function called
>`add`, that adds two numbers. My example code would then be something
>like this:
>>
>> ```
>> library(testthat)
>>
>> expect_equal(add(1, 2), 3)
>> ```
>>
>> The first interpretation is about using `testthat`: maybe I should
>use base R (`stopifnot`) or another testing library (`testit`) or
>hand-craft it myself?
>>
>> The second interpretation is about using tests in example code. I
>like to actively demonstrate that my code works as expected. I checked
>the policies regarding examples, and I could not find a rule that I
>should refrain from doing so.
>>
>> What is the correct response to this feedback?
>>
>> Thanks for your guidance, Richel Bilderbeek
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>______________________________________________
>R-package-devel at r-project.org mailing list
>https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
Sent from my phone. Please excuse my brevity.


From @bronder @end|ng |rom @tevebronder@com  Thu Jul 16 19:57:07 2020
From: @bronder @end|ng |rom @tevebronder@com (Steve Bronder)
Date: Thu, 16 Jul 2020 13:57:07 -0400
Subject: [R-pkg-devel] 
 Anyone Know How To Setup Wine for Windows Testing?
In-Reply-To: <CAL9B2veMU6DzVcqyW=vXKcO6UaktebTE+og2KXipaXrkGmXBsA@mail.gmail.com>
References: <CAAVP=a=JBcHYaLWJLUUj9qisufmDkwTLB+4Z=VsB44Kmiq3wVQ@mail.gmail.com>
 <b1ef86ec-c289-caf3-8ba8-fb327579957c@gmail.com>
 <CAL9B2veMU6DzVcqyW=vXKcO6UaktebTE+og2KXipaXrkGmXBsA@mail.gmail.com>
Message-ID: <CAAVP=anjuOq9ZM=c=Hd7UdTkDy6qg8-a=YqHm185JbrzZhzXKw@mail.gmail.com>

On Wed, Jul 15, 2020 at 2:22 PM Neal Fultz <nfultz at gmail.com> wrote:

> If you don't mind multi-gig docker containers, this can be helpful:
>
> https://github.com/scottyhardy/docker-wine
>
> It doesn't work with 64 bit versions of R as far as I could tell, but 32
> bit did install and start correctly in a few clicks when I tried last year.
>

Thanks! I'm hoping if I can get this all working locally I can put
everything into a docker container for other folks. At this point I have R
up and running and it can install binary packages, but there are some
terrible terrible Cygwin/Rtools errors I can't figure out. In particular
this warning / message seems worrisome

Cygwin WARNING:
  Couldn't compute FAST_CWD pointer.  This typically occurs if you're using
  an older Cygwin version on a newer Windows.  Please update to the latest
  available Cygwin version from https://cygwin.com/.  If the problem
persists,
  please see https://cygwin.com/problems.html

If anyone has interest I can post a script for setting up the wine instance
as far as I can get atm.


>
>
>
>
> On Wed, Jul 15, 2020 at 10:56 AM J C Nash <profjcnash at gmail.com> wrote:
>
>> Are you sure you want to try to run R etc. under Wine?
>>
>
Do I want to? No :-). But we (Stan) want to use flto and are seeing errors
on windows I want to be able to debug locally.


>
>> - If you have Windows running, either directly or in a VM, you can run R
>> there.
>>
>
Sadly I don't have access to a windows machine. If I can't figure this out
then I'll probably just get a windows aws instance. But it would be nice
for people to have a wine setup they could test locally on.


> - If you have Windows and want to run R under some other OS, then set up a
>> VM
>> e.g., Linux Mint, for that. I sometimes test R for Windows in a
>> VirtualBox VM
>> for Win10, but generally run in Linux Mint. I've also run R in some Linux
>> VMs
>> to test for specific dependencies in some distros.
>>
>> I rather doubt R will run very well in Linux under Wine. My experience
>> with Wine
>> is that a few apps (e.g. Irfanview) run well, but many give lots of
>> trouble.
>>
>
Yes I'm 80/20 on whether compilation with Rtools will totally work on wine.
But if I can get this all setup and put it into a docker file I think it
will be useful for other people as well so it's worth spending a bit of
time on.


>
>> JN
>>
>>
>> On 2020-07-15 1:17 p.m., Steve Bronder wrote:
>> > Does anyone know of a setup guide for getting R and Rtools 4.0 up and
>> > running on Wine with the Windows Server 2008 R2 VM? Do other maintainers
>> > with more knowhow think that would be useful for debugging purposes?
>> >
>> > I've been trying to test out some flto gcc things for windows by
>> setting up
>> > a local wine VM on my ubuntu box. Wine has an option for Windows Server
>> > 2008 R2 (which I believe is the windows session CRAN uses?) If anyone
>> has
>> > done this before and knows of a guide somewhere that would be very
>> helpful!
>> >
>> > Regards,
>> >
>> > Steve Bronder
>> >
>> >       [[alternative HTML version deleted]]
>> >
>> > ______________________________________________
>> > R-package-devel at r-project.org mailing list
>> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> >
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>
- Steve Bronder

	[[alternative HTML version deleted]]


From iuke-tier@ey m@iii@g oii uiow@@edu  Thu Jul 16 20:02:35 2020
From: iuke-tier@ey m@iii@g oii uiow@@edu (iuke-tier@ey m@iii@g oii uiow@@edu)
Date: Thu, 16 Jul 2020 13:02:35 -0500 (CDT)
Subject: [R-pkg-devel] [External] Re: Interpret feedback: not write
 testthat-tests in examples
In-Reply-To: <CAFDcVCTXxVibVMrJLBoVApHCLOCYoRSFJa8F70wsZP4Uct2TaQ@mail.gmail.com>
References: <1594904220089.18734.11146@webmail8>
 <CAFDcVCTXxVibVMrJLBoVApHCLOCYoRSFJa8F70wsZP4Uct2TaQ@mail.gmail.com>
Message-ID: <alpine.DEB.2.21.2007161301310.3465@luke-Latitude-7480>

On Thu, 16 Jul 2020, Henrik Bengtsson wrote:

> If the point of having, say,
>
> stopifnot(add(1, 2) == sum(c(1, 2))
>
> is to make it explicit to the reader that your add() function gives
> the same results as sum(), then I argue that is valid to use in an
> example.  I'm pretty sure I've used that in some of my examples.  For
> the purpose, there should be no reason why you can't use other
> "assert" functions for this purpose, e.g.
>
> testthat::expect_equal(add(1, 2), sum(c(1, 2))

If the point is to communicate this to users I would write something like

## The following evaluates to TRUE:
add(1, 2) == sum(c(1, 2)

Using stopifnot just adds clutter that obscures the message for a
human reader; testthat::expect_equal even more so.

Best,

luke

>
> Now, if the point of your "assert" statement is only to validate your
> package/code, then I agree it should not be in the example code
> because it adds clutter.  Such validation should be in a package test.
>
> So, if the former, I suggest you reply to the CRAN Team and explain this.
>
> /Henrik
>
> On Thu, Jul 16, 2020 at 6:28 AM Richel Bilderbeek
> <richel at richelbilderbeek.nl> wrote:
>>
>> Dear R package developers,
>>
>> I would enjoy some help regarding some feedback I got on my package from a CRAN volunteer, as I am unsure how to interpret this correctly.
>>
>> This is the feedback I got (I added '[do]'):
>>
>>> Please [do] not write testthat-tests in your examples.
>>
>> I wonder if this is about using `testthat` or using tests in general.
>>
>> To simplify the context, say I wrote a package with a function called `add`, that adds two numbers. My example code would then be something like this:
>>
>> ```
>> library(testthat)
>>
>> expect_equal(add(1, 2), 3)
>> ```
>>
>> The first interpretation is about using `testthat`: maybe I should use base R (`stopifnot`) or another testing library (`testit`) or hand-craft it myself?
>>
>> The second interpretation is about using tests in example code. I like to actively demonstrate that my code works as expected. I checked the policies regarding examples, and I could not find a rule that I should refrain from doing so.
>>
>> What is the correct response to this feedback?
>>
>> Thanks for your guidance, Richel Bilderbeek
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From bbo|ker @end|ng |rom gm@||@com  Thu Jul 16 20:30:37 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Thu, 16 Jul 2020 14:30:37 -0400
Subject: [R-pkg-devel] [External] Re: Interpret feedback: not write
 testthat-tests in examples
In-Reply-To: <alpine.DEB.2.21.2007161301310.3465@luke-Latitude-7480>
References: <1594904220089.18734.11146@webmail8>
 <CAFDcVCTXxVibVMrJLBoVApHCLOCYoRSFJa8F70wsZP4Uct2TaQ@mail.gmail.com>
 <alpine.DEB.2.21.2007161301310.3465@luke-Latitude-7480>
Message-ID: <fbae58ae-34e4-9694-41c4-ef1cc1b407b5@gmail.com>

FWIW/in defense of the OP, this is a *very* common idiom in the base R 
code base.? There may be some false positives, but

 ?find . -name "*.Rd" -exec grep -Fl "stopifnot(" {} \; | grep -v doc | wc

lists 187 files, e.g. from src/library/utils/man/object.size.Rd

stopifnot(identical( ## assert that all three are the same :
 ???????????? unique(substr(as.vector(fsl), 1,5)),
 ???????????? format(round(as.vector(sl)/1024, 1))))


On 7/16/20 2:02 PM, luke-tierney at uiowa.edu wrote:
> On Thu, 16 Jul 2020, Henrik Bengtsson wrote:
>
>> If the point of having, say,
>>
>> stopifnot(add(1, 2) == sum(c(1, 2))
>>
>> is to make it explicit to the reader that your add() function gives
>> the same results as sum(), then I argue that is valid to use in an
>> example.? I'm pretty sure I've used that in some of my examples.? For
>> the purpose, there should be no reason why you can't use other
>> "assert" functions for this purpose, e.g.
>>
>> testthat::expect_equal(add(1, 2), sum(c(1, 2))
>
> If the point is to communicate this to users I would write something like
>
> ## The following evaluates to TRUE:
> add(1, 2) == sum(c(1, 2)
>
> Using stopifnot just adds clutter that obscures the message for a
> human reader; testthat::expect_equal even more so.
>
> Best,
>
> luke
>
>>
>> Now, if the point of your "assert" statement is only to validate your
>> package/code, then I agree it should not be in the example code
>> because it adds clutter.? Such validation should be in a package test.
>>
>> So, if the former, I suggest you reply to the CRAN Team and explain 
>> this.
>>
>> /Henrik
>>
>> On Thu, Jul 16, 2020 at 6:28 AM Richel Bilderbeek
>> <richel at richelbilderbeek.nl> wrote:
>>>
>>> Dear R package developers,
>>>
>>> I would enjoy some help regarding some feedback I got on my package 
>>> from a CRAN volunteer, as I am unsure how to interpret this correctly.
>>>
>>> This is the feedback I got (I added '[do]'):
>>>
>>>> Please [do] not write testthat-tests in your examples.
>>>
>>> I wonder if this is about using `testthat` or using tests in general.
>>>
>>> To simplify the context, say I wrote a package with a function 
>>> called `add`, that adds two numbers. My example code would then be 
>>> something like this:
>>>
>>> ```
>>> library(testthat)
>>>
>>> expect_equal(add(1, 2), 3)
>>> ```
>>>
>>> The first interpretation is about using `testthat`: maybe I should 
>>> use base R (`stopifnot`) or another testing library (`testit`) or 
>>> hand-craft it myself?
>>>
>>> The second interpretation is about using tests in example code. I 
>>> like to actively demonstrate that my code works as expected. I 
>>> checked the policies regarding examples, and I could not find a rule 
>>> that I should refrain from doing so.
>>>
>>> What is the correct response to this feedback?
>>>
>>> Thanks for your guidance, Richel Bilderbeek
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>


From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Fri Jul 17 04:31:18 2020
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Thu, 16 Jul 2020 19:31:18 -0700
Subject: [R-pkg-devel] [External] Re: Interpret feedback: not write
 testthat-tests in examples
In-Reply-To: <fbae58ae-34e4-9694-41c4-ef1cc1b407b5@gmail.com>
References: <1594904220089.18734.11146@webmail8>
 <CAFDcVCTXxVibVMrJLBoVApHCLOCYoRSFJa8F70wsZP4Uct2TaQ@mail.gmail.com>
 <alpine.DEB.2.21.2007161301310.3465@luke-Latitude-7480>
 <fbae58ae-34e4-9694-41c4-ef1cc1b407b5@gmail.com>
Message-ID: <A86067C6-8BFC-40E7-8C29-1961A156B277@dcn.davis.ca.us>

Looks like 187 opportunities to improve clarity.

On July 16, 2020 11:30:37 AM PDT, Ben Bolker <bbolker at gmail.com> wrote:
>FWIW/in defense of the OP, this is a *very* common idiom in the base R 
>code base.? There may be some false positives, but
>
>?find . -name "*.Rd" -exec grep -Fl "stopifnot(" {} \; | grep -v doc |
>wc
>
>lists 187 files, e.g. from src/library/utils/man/object.size.Rd
>
>stopifnot(identical( ## assert that all three are the same :
> ???????????? unique(substr(as.vector(fsl), 1,5)),
> ???????????? format(round(as.vector(sl)/1024, 1))))
>
>
>On 7/16/20 2:02 PM, luke-tierney at uiowa.edu wrote:
>> On Thu, 16 Jul 2020, Henrik Bengtsson wrote:
>>
>>> If the point of having, say,
>>>
>>> stopifnot(add(1, 2) == sum(c(1, 2))
>>>
>>> is to make it explicit to the reader that your add() function gives
>>> the same results as sum(), then I argue that is valid to use in an
>>> example.? I'm pretty sure I've used that in some of my examples.?
>For
>>> the purpose, there should be no reason why you can't use other
>>> "assert" functions for this purpose, e.g.
>>>
>>> testthat::expect_equal(add(1, 2), sum(c(1, 2))
>>
>> If the point is to communicate this to users I would write something
>like
>>
>> ## The following evaluates to TRUE:
>> add(1, 2) == sum(c(1, 2)
>>
>> Using stopifnot just adds clutter that obscures the message for a
>> human reader; testthat::expect_equal even more so.
>>
>> Best,
>>
>> luke
>>
>>>
>>> Now, if the point of your "assert" statement is only to validate
>your
>>> package/code, then I agree it should not be in the example code
>>> because it adds clutter.? Such validation should be in a package
>test.
>>>
>>> So, if the former, I suggest you reply to the CRAN Team and explain 
>>> this.
>>>
>>> /Henrik
>>>
>>> On Thu, Jul 16, 2020 at 6:28 AM Richel Bilderbeek
>>> <richel at richelbilderbeek.nl> wrote:
>>>>
>>>> Dear R package developers,
>>>>
>>>> I would enjoy some help regarding some feedback I got on my package
>
>>>> from a CRAN volunteer, as I am unsure how to interpret this
>correctly.
>>>>
>>>> This is the feedback I got (I added '[do]'):
>>>>
>>>>> Please [do] not write testthat-tests in your examples.
>>>>
>>>> I wonder if this is about using `testthat` or using tests in
>general.
>>>>
>>>> To simplify the context, say I wrote a package with a function 
>>>> called `add`, that adds two numbers. My example code would then be 
>>>> something like this:
>>>>
>>>> ```
>>>> library(testthat)
>>>>
>>>> expect_equal(add(1, 2), 3)
>>>> ```
>>>>
>>>> The first interpretation is about using `testthat`: maybe I should 
>>>> use base R (`stopifnot`) or another testing library (`testit`) or 
>>>> hand-craft it myself?
>>>>
>>>> The second interpretation is about using tests in example code. I 
>>>> like to actively demonstrate that my code works as expected. I 
>>>> checked the policies regarding examples, and I could not find a
>rule 
>>>> that I should refrain from doing so.
>>>>
>>>> What is the correct response to this feedback?
>>>>
>>>> Thanks for your guidance, Richel Bilderbeek
>>>>
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>>
>
>______________________________________________
>R-package-devel at r-project.org mailing list
>https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
Sent from my phone. Please excuse my brevity.


From iuke-tier@ey m@iii@g oii uiow@@edu  Fri Jul 17 05:41:17 2020
From: iuke-tier@ey m@iii@g oii uiow@@edu (iuke-tier@ey m@iii@g oii uiow@@edu)
Date: Thu, 16 Jul 2020 22:41:17 -0500 (CDT)
Subject: [R-pkg-devel] [External] Re: Interpret feedback: not write
 testthat-tests in examples
In-Reply-To: <fbae58ae-34e4-9694-41c4-ef1cc1b407b5@gmail.com>
References: <1594904220089.18734.11146@webmail8>
 <CAFDcVCTXxVibVMrJLBoVApHCLOCYoRSFJa8F70wsZP4Uct2TaQ@mail.gmail.com>
 <alpine.DEB.2.21.2007161301310.3465@luke-Latitude-7480>
 <fbae58ae-34e4-9694-41c4-ef1cc1b407b5@gmail.com>
Message-ID: <alpine.DEB.2.21.2007162238350.3465@luke-Latitude-7480>

On Thu, 16 Jul 2020, Ben Bolker wrote:

> FWIW/in defense of the OP, this is a *very* common idiom in the base R code 
> base.? There may be some false positives, but
>
> ?find . -name "*.Rd" -exec grep -Fl "stopifnot(" {} \; | grep -v doc | wc
>
> lists 187 files, e.g. from src/library/utils/man/object.size.Rd

And I probably wrote some of them, but I don't think I would now.
As a rule, I think the documentation is clearer without the tests.

On the other hand, we don't all agree on these things.

>
> stopifnot(identical( ## assert that all three are the same :
> ???????????? unique(substr(as.vector(fsl), 1,5)),
> ???????????? format(round(as.vector(sl)/1024, 1))))
>
>
> On 7/16/20 2:02 PM, luke-tierney at uiowa.edu wrote:
>> On Thu, 16 Jul 2020, Henrik Bengtsson wrote:
>> 
>>> If the point of having, say,
>>> 
>>> stopifnot(add(1, 2) == sum(c(1, 2))
>>> 
>>> is to make it explicit to the reader that your add() function gives
>>> the same results as sum(), then I argue that is valid to use in an
>>> example.? I'm pretty sure I've used that in some of my examples.? For
>>> the purpose, there should be no reason why you can't use other
>>> "assert" functions for this purpose, e.g.
>>> 
>>> testthat::expect_equal(add(1, 2), sum(c(1, 2))
>> 
>> If the point is to communicate this to users I would write something like
>> 
>> ## The following evaluates to TRUE:
>> add(1, 2) == sum(c(1, 2)
>> 
>> Using stopifnot just adds clutter that obscures the message for a
>> human reader; testthat::expect_equal even more so.
>> 
>> Best,
>> 
>> luke
>> 
>>> 
>>> Now, if the point of your "assert" statement is only to validate your
>>> package/code, then I agree it should not be in the example code
>>> because it adds clutter.? Such validation should be in a package test.
>>> 
>>> So, if the former, I suggest you reply to the CRAN Team and explain this.
>>> 
>>> /Henrik
>>> 
>>> On Thu, Jul 16, 2020 at 6:28 AM Richel Bilderbeek
>>> <richel at richelbilderbeek.nl> wrote:
>>>> 
>>>> Dear R package developers,
>>>> 
>>>> I would enjoy some help regarding some feedback I got on my package from 
>>>> a CRAN volunteer, as I am unsure how to interpret this correctly.
>>>> 
>>>> This is the feedback I got (I added '[do]'):
>>>> 
>>>>> Please [do] not write testthat-tests in your examples.
>>>> 
>>>> I wonder if this is about using `testthat` or using tests in general.
>>>> 
>>>> To simplify the context, say I wrote a package with a function called 
>>>> `add`, that adds two numbers. My example code would then be something 
>>>> like this:
>>>> 
>>>> ```
>>>> library(testthat)
>>>> 
>>>> expect_equal(add(1, 2), 3)
>>>> ```
>>>> 
>>>> The first interpretation is about using `testthat`: maybe I should use 
>>>> base R (`stopifnot`) or another testing library (`testit`) or hand-craft 
>>>> it myself?
>>>> 
>>>> The second interpretation is about using tests in example code. I like 
>>>> to actively demonstrate that my code works as expected. I checked the 
>>>> policies regarding examples, and I could not find a rule that I should 
>>>> refrain from doing so.
>>>> 
>>>> What is the correct response to this feedback?
>>>> 
>>>> Thanks for your guidance, Richel Bilderbeek
>>>> 
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>> 
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>> 
>> 
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu

From @teve@the@b@ye@|@n @end|ng |rom gm@||@com  Fri Jul 17 06:35:47 2020
From: @teve@the@b@ye@|@n @end|ng |rom gm@||@com (Steven Scott)
Date: Thu, 16 Jul 2020 21:35:47 -0700
Subject: [R-pkg-devel] [External] Re: Interpret feedback: not write
 testthat-tests in examples
In-Reply-To: <alpine.DEB.2.21.2007162238350.3465@luke-Latitude-7480>
References: <1594904220089.18734.11146@webmail8>
 <CAFDcVCTXxVibVMrJLBoVApHCLOCYoRSFJa8F70wsZP4Uct2TaQ@mail.gmail.com>
 <alpine.DEB.2.21.2007161301310.3465@luke-Latitude-7480>
 <fbae58ae-34e4-9694-41c4-ef1cc1b407b5@gmail.com>
 <alpine.DEB.2.21.2007162238350.3465@luke-Latitude-7480>
Message-ID: <CAJqTW4639On=tOHhdrtTVTaAzj6LD8HwG--O5DurUgoy11QW-g@mail.gmail.com>

I agree with the consensus that documentation is for humans, while tests
are for computers.

On Thu, Jul 16, 2020, 8:41 PM <luke-tierney at uiowa.edu> wrote:

> On Thu, 16 Jul 2020, Ben Bolker wrote:
>
> > FWIW/in defense of the OP, this is a *very* common idiom in the base R
> code
> > base.  There may be some false positives, but
> >
> >  find . -name "*.Rd" -exec grep -Fl "stopifnot(" {} \; | grep -v doc | wc
> >
> > lists 187 files, e.g. from src/library/utils/man/object.size.Rd
>
> And I probably wrote some of them, but I don't think I would now.
> As a rule, I think the documentation is clearer without the tests.
>
> On the other hand, we don't all agree on these things.
>
> >
> > stopifnot(identical( ## assert that all three are the same :
> >              unique(substr(as.vector(fsl), 1,5)),
> >              format(round(as.vector(sl)/1024, 1))))
> >
> >
> > On 7/16/20 2:02 PM, luke-tierney at uiowa.edu wrote:
> >> On Thu, 16 Jul 2020, Henrik Bengtsson wrote:
> >>
> >>> If the point of having, say,
> >>>
> >>> stopifnot(add(1, 2) == sum(c(1, 2))
> >>>
> >>> is to make it explicit to the reader that your add() function gives
> >>> the same results as sum(), then I argue that is valid to use in an
> >>> example.  I'm pretty sure I've used that in some of my examples.  For
> >>> the purpose, there should be no reason why you can't use other
> >>> "assert" functions for this purpose, e.g.
> >>>
> >>> testthat::expect_equal(add(1, 2), sum(c(1, 2))
> >>
> >> If the point is to communicate this to users I would write something
> like
> >>
> >> ## The following evaluates to TRUE:
> >> add(1, 2) == sum(c(1, 2)
> >>
> >> Using stopifnot just adds clutter that obscures the message for a
> >> human reader; testthat::expect_equal even more so.
> >>
> >> Best,
> >>
> >> luke
> >>
> >>>
> >>> Now, if the point of your "assert" statement is only to validate your
> >>> package/code, then I agree it should not be in the example code
> >>> because it adds clutter.  Such validation should be in a package test.
> >>>
> >>> So, if the former, I suggest you reply to the CRAN Team and explain
> this.
> >>>
> >>> /Henrik
> >>>
> >>> On Thu, Jul 16, 2020 at 6:28 AM Richel Bilderbeek
> >>> <richel at richelbilderbeek.nl> wrote:
> >>>>
> >>>> Dear R package developers,
> >>>>
> >>>> I would enjoy some help regarding some feedback I got on my package
> from
> >>>> a CRAN volunteer, as I am unsure how to interpret this correctly.
> >>>>
> >>>> This is the feedback I got (I added '[do]'):
> >>>>
> >>>>> Please [do] not write testthat-tests in your examples.
> >>>>
> >>>> I wonder if this is about using `testthat` or using tests in general.
> >>>>
> >>>> To simplify the context, say I wrote a package with a function called
> >>>> `add`, that adds two numbers. My example code would then be something
> >>>> like this:
> >>>>
> >>>> ```
> >>>> library(testthat)
> >>>>
> >>>> expect_equal(add(1, 2), 3)
> >>>> ```
> >>>>
> >>>> The first interpretation is about using `testthat`: maybe I should
> use
> >>>> base R (`stopifnot`) or another testing library (`testit`) or
> hand-craft
> >>>> it myself?
> >>>>
> >>>> The second interpretation is about using tests in example code. I
> like
> >>>> to actively demonstrate that my code works as expected. I checked the
> >>>> policies regarding examples, and I could not find a rule that I
> should
> >>>> refrain from doing so.
> >>>>
> >>>> What is the correct response to this feedback?
> >>>>
> >>>> Thanks for your guidance, Richel Bilderbeek
> >>>>
> >>>> ______________________________________________
> >>>> R-package-devel at r-project.org mailing list
> >>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>>
> >>> ______________________________________________
> >>> R-package-devel at r-project.org mailing list
> >>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>>
> >>
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
>
> --
> Luke Tierney
> Ralph E. Wareham Professor of Mathematical Sciences
> University of Iowa                  Phone:             319-335-3386
> Department of Statistics and        Fax:               319-335-3017
>     Actuarial Science
> 241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
> Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org  Fri Jul 17 09:02:36 2020
From: @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org (Spencer Graves)
Date: Fri, 17 Jul 2020 02:02:36 -0500
Subject: [R-pkg-devel] "non-ASCII input" and "--data-compress" ignored
In-Reply-To: <5f113fa0341ad_13fe61d2b8160167857@travis-tasks-69c8cbf9fb-w64br.mail>
References: <5f113fa0341ad_13fe61d2b8160167857@travis-tasks-69c8cbf9fb-w64br.mail>
Message-ID: <1537a105-6f7a-ca06-7997-9660ec95cf02@effectivedefense.org>

Hello:


 ????? I'm getting two warnings that I don't know how to fix on both 
4.0.2 under macOS 10.15.5 and 4.0.0 under TRAVIS-CI; the email from 
Travis CI <builds at travis-ci.org> is copied below.


NON-ASCII INPUT:


* checking Rd files ... WARNING
man/nuclearWeaponStates.Rd: non-ASCII input and no declared encoding
problem found in ?nuclearWeaponStates.Rd?


 ????? I'm virtually certain this comes from the following:


 ? \href{https://www.americansecurityproject.org/ASP Reports/Ref 0072 - 
North Korea?s Nuclear Program .pdf}{Derek Bolton (2012) North Korea's 
Nuclear Program} (2012-08, American Security Program, accessed 2020-07-15)


 ????? If you look carefully, you see spaces and a right single quote in 
the URL.? If I copy this URL into a browser and back out again, I get 
the following:


https://www.americansecurityproject.org/ASP%20Reports/Ref%200072%20-%20North%20Korea%E2%80%99s%20Nuclear%20Program%20.pdf


 ????? However, if I use this inside "\href", "R CMD check" doesn't 
recognize the close curly bracket because of the presence of the 
non-ASCII characters.? I could leave out the URL, but that would degrade 
the quality of the documentation.


"--DATA-COMPRESS" IGNORED


 ????? I'm getting, " Note: significantly better compression could be 
obtained by using R CMD build --resave-data".? I get this message even 
though I use "R CMD build --data-compress Ecdat".? I also tried "R CMD 
build Ecdat --data-compress" and got the same result.


 ????? Suggestions?
 ????? Thanks,
 ????? Spencer Graves


sessionInfo()
R version 4.0.2 (2020-06-22)
Platform: x86_64-apple-darwin17.0 (64-bit)
Running under: macOS Catalina 10.15.5

Matrix products: default
BLAS: 
/Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib
LAPACK: 
/Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats???? graphics? grDevices utils???? datasets? methods base

loaded via a namespace (and not attached):
[1] compiler_4.0.2


-------- Forwarded Message --------
Subject: 	Broken: sbgraves237/Ecdat#33 (master - a049665)
Date: 	Fri, 17 Jul 2020 06:05:20 +0000
From: 	Travis CI <builds at travis-ci.org>
To: 	spencer.graves at effectivedefense.org



sbgraves237

/

Ecdat

<https://travis-ci.org/github/sbgraves237/Ecdat?utm_medium=notification&utm_source=email> 


branch iconmaster <https://github.com/sbgraves237/Ecdat/tree/master>

build has failed
Build #33 was broken 
<https://travis-ci.org/github/sbgraves237/Ecdat/builds/709051085?utm_medium=notification&utm_source=email>
arrow to build time
clock icon5 mins and 5 secs

sbgraves237 avatarsbgraves237

a049665 CHANGESET ? 
<https://github.com/sbgraves237/Ecdat/compare/8b5b8b867663...a04966508ba6>

fix nuclearWeaponStates so it now has all the desired data

Want to know about upcoming build environment updates?

Would you like to stay up-to-date with the upcoming Travis CI build 
environment updates? We set up a mailing list for you!

SIGN UP HERE <http://eepurl.com/9OCsP>

book icon

Documentation <https://docs.travis-ci.com/> about Travis CI

Have any questions? We're here to help. <mailto:support at travis-ci.com>
Unsubscribe 
<https://travis-ci.org/account/preferences/unsubscribe?repository=25157200&utm_medium=notification&utm_source=email> 
from build emails from the sbgraves237/Ecdat repository.
To unsubscribe from *all* build emails, please update your settings 
<https://travis-ci.org/account/preferences/unsubscribe?utm_medium=notification&utm_source=email>. 

black and white travis ci logo <https://travis-ci.com>

Travis CI GmbH, Rigaer Str. 8, 10427 Berlin, Germany | GF/CEO: Randy 
Jacops | Contact: contact at travis-ci.com <mailto:contact at travis-ci.com> | 
Amtsgericht Charlottenburg, Berlin, HRB 140133 B | Umsatzsteuer-ID gem?? 
?27 a Umsatzsteuergesetz: DE282002648


	[[alternative HTML version deleted]]


From m@e||e@@@|mon @end|ng |rom y@hoo@@e  Fri Jul 17 09:29:33 2020
From: m@e||e@@@|mon @end|ng |rom y@hoo@@e (=?UTF-8?Q?Ma=C3=ABlle_SALMON?=)
Date: Fri, 17 Jul 2020 07:29:33 +0000 (UTC)
Subject: [R-pkg-devel] Interpret feedback: not write testthat-tests in
 examples
In-Reply-To: <CAFDcVCTXxVibVMrJLBoVApHCLOCYoRSFJa8F70wsZP4Uct2TaQ@mail.gmail.com>
References: <1594904220089.18734.11146@webmail8>
 <CAFDcVCTXxVibVMrJLBoVApHCLOCYoRSFJa8F70wsZP4Uct2TaQ@mail.gmail.com>
Message-ID: <1967307514.4565005.1594970973773@mail.yahoo.com>

If you do want to communicate around tests a bit more, without cluttering the manual, you might find the covrpage package interesting?https://yonicd.github.io/covrpage/ 
It creates a README in the tests folder, with test results, and it can create a vignette with the same content.
 
  On dj., jul. 16, 2020 at 19:40, Henrik Bengtsson<henrik.bengtsson at gmail.com> wrote:   If the point of having, say,

stopifnot(add(1, 2) == sum(c(1, 2))

is to make it explicit to the reader that your add() function gives
the same results as sum(), then I argue that is valid to use in an
example.? I'm pretty sure I've used that in some of my examples.? For
the purpose, there should be no reason why you can't use other
"assert" functions for this purpose, e.g.

testthat::expect_equal(add(1, 2), sum(c(1, 2))

Now, if the point of your "assert" statement is only to validate your
package/code, then I agree it should not be in the example code
because it adds clutter.? Such validation should be in a package test.

So, if the former, I suggest you reply to the CRAN Team and explain this.

/Henrik

On Thu, Jul 16, 2020 at 6:28 AM Richel Bilderbeek
<richel at richelbilderbeek.nl> wrote:
>
> Dear R package developers,
>
> I would enjoy some help regarding some feedback I got on my package from a CRAN volunteer, as I am unsure how to interpret this correctly.
>
> This is the feedback I got (I added '[do]'):
>
> > Please [do] not write testthat-tests in your examples.
>
> I wonder if this is about using `testthat` or using tests in general.
>
> To simplify the context, say I wrote a package with a function called `add`, that adds two numbers. My example code would then be something like this:
>
> ```
> library(testthat)
>
> expect_equal(add(1, 2), 3)
> ```
>
> The first interpretation is about using `testthat`: maybe I should use base R (`stopifnot`) or another testing library (`testit`) or hand-craft it myself?
>
> The second interpretation is about using tests in example code. I like to actively demonstrate that my code works as expected. I checked the policies regarding examples, and I could not find a rule that I should refrain from doing so.
>
> What is the correct response to this feedback?
>
> Thanks for your guidance, Richel Bilderbeek
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

______________________________________________
R-package-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel
  

	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Fri Jul 17 11:10:16 2020
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Fri, 17 Jul 2020 12:10:16 +0300
Subject: [R-pkg-devel] "non-ASCII input" and "--data-compress" ignored
In-Reply-To: <1537a105-6f7a-ca06-7997-9660ec95cf02@effectivedefense.org>
References: <5f113fa0341ad_13fe61d2b8160167857@travis-tasks-69c8cbf9fb-w64br.mail>
 <1537a105-6f7a-ca06-7997-9660ec95cf02@effectivedefense.org>
Message-ID: <20200717121016.67433eff@trisector>

On Fri, 17 Jul 2020 02:02:36 -0500
Spencer Graves <spencer.graves at effectivedefense.org> wrote:

> If I copy this URL into a browser and back out again, I get 
> the following:
> 
> 
> https://www.americansecurityproject.org/ASP%20Reports/Ref%200072%20-%20North%20Korea%E2%80%99s%20Nuclear%20Program%20.pdf
> 
> 
>  ????? However, if I use this inside "\href", "R CMD check" doesn't 
> recognize the close curly bracket because of the presence of the 
> non-ASCII characters.

WRE section 2.3 [*] provides an example of \href with RFC3986
percent-encoding. Since % is a comment character in Rd, the percent
signs have to be escaped with backslashes:

\href{https://www.americansecurityproject.org/ASP\%20Reports/Ref\%200072\%20-\%20North\%20Korea\%E2\%80\%99s\%20Nuclear\%20Program\%20.pdf}{Derek
Bolton (2012) North Korea's Nuclear Program}

This only works correctly in R >= 3.1.3, but results in correct output
in both HTML and PDF formats.

Alternatively, it should be possible to declare the encoding of the Rd
file using \encoding{UTF-8} (WRE 2.14 [**]), but in my tests (R 3.6.3,
could have been fixed in later versions) it results in a broken link in
Rd2pdf output.

>  ????? I'm getting, " Note: significantly better compression could be 
> obtained by using R CMD build --resave-data".? I get this message
> even though I use "R CMD build --data-compress Ecdat".? I also tried
> "R CMD build Ecdat --data-compress" and got the same result.

The note offers you to try adding --resave-data to R CMD build, not
--data-compress. What happens if you use --resave-data=best?
--data-compress doesn't seem to be an R CMD build option; at least
it's not mentioned in R CMD build --help.

WRE 1.1.6 [***] provides an example of --data-compress as an option of
R CMD INSTALL (not build).

-- 
Best regards,
Ivan

P.S.

> 	[[alternative HTML version deleted]]

Please don't post in HTML.

[*]
https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Marking-text

[**]
https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Encoding

[***]
https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Data-in-packages


From |@b|o@|gr|@t @end|ng |rom gm@||@com  Fri Jul 17 11:25:40 2020
From: |@b|o@|gr|@t @end|ng |rom gm@||@com (Fabio Sigrist)
Date: Fri, 17 Jul 2020 11:25:40 +0200
Subject: [R-pkg-devel] Note: information on .o files is not available /
 Found '_exit', possibly from '_exit' (C)
Message-ID: <CAMHmY_wip6F6mAchw32F3=0uUsH6j8w-Agt+Rk8PuSbR02YqYg@mail.gmail.com>

Dear all,

I am trying to get an R package with C++ code on CRAN and I have one NOTE
remaining, for which I can't find a solution:

Note: information on .o files for x64 is not available
  File
'd:/RCompile/CRANincoming/R-devel/lib/gpboost/libs/x64/lib_gpboost.dll':
    Found '_exit', possibly from '_exit' (C)
    Found 'abort', possibly from 'abort' (C), 'runtime' (Fortran)
    Found 'exit', possibly from 'exit' (C), 'stop' (Fortran)
    Found 'printf', possibly from 'printf' (C)

As much as I search through my code, I can't find the place / headers where
these calls / symbols originate. Also, I have no idea how to add
information on .o files (apart from the shared library, there are no .o
files). The .tar.gz file for the package can be found on
https://github.com/fabsig/GPBoost/blob/master/gpboost_0.2.0.tar.gz. Note
that the shared library is compiled using install.libs.R (this is a
deliberate choice) and the flag "GPB_R_BUILD" is set when compiling for the
R package (I have tried to put "#ifndef GPB_R_BUILD" around all headers
that could cause the problems with exit / abort calls, but apparently I
have not been able to find all).

Any help is greatly appreciated.

Best regards,
Fabio Sigrist

	[[alternative HTML version deleted]]


From m@rc|njurek1988 @end|ng |rom gm@||@com  Fri Jul 17 14:34:38 2020
From: m@rc|njurek1988 @end|ng |rom gm@||@com (Marcin Jurek)
Date: Fri, 17 Jul 2020 07:34:38 -0500
Subject: [R-pkg-devel] Note: information on .o files is not available /
 Found '_exit', possibly from '_exit' (C)
In-Reply-To: <CAMHmY_wip6F6mAchw32F3=0uUsH6j8w-Agt+Rk8PuSbR02YqYg@mail.gmail.com>
References: <CAMHmY_wip6F6mAchw32F3=0uUsH6j8w-Agt+Rk8PuSbR02YqYg@mail.gmail.com>
Message-ID: <CAKpFkB2k6Hz+JXtzNLomfY2GAqyMMBS+P_mMMwdn+Tqpt3py7g@mail.gmail.com>

So maybe you tried that already but I noticed that sometimes when I do the
check on the package directory rather than on the tarball I get similar
errors. I don't know if that's the problem but it should be a quick thing
to try.

On Fri, Jul 17, 2020 at 5:05 AM Fabio Sigrist <fabiosigrist at gmail.com>
wrote:

> Dear all,
>
> I am trying to get an R package with C++ code on CRAN and I have one NOTE
> remaining, for which I can't find a solution:
>
> Note: information on .o files for x64 is not available
>   File
> 'd:/RCompile/CRANincoming/R-devel/lib/gpboost/libs/x64/lib_gpboost.dll':
>     Found '_exit', possibly from '_exit' (C)
>     Found 'abort', possibly from 'abort' (C), 'runtime' (Fortran)
>     Found 'exit', possibly from 'exit' (C), 'stop' (Fortran)
>     Found 'printf', possibly from 'printf' (C)
>
> As much as I search through my code, I can't find the place / headers where
> these calls / symbols originate. Also, I have no idea how to add
> information on .o files (apart from the shared library, there are no .o
> files). The .tar.gz file for the package can be found on
> https://github.com/fabsig/GPBoost/blob/master/gpboost_0.2.0.tar.gz. Note
> that the shared library is compiled using install.libs.R (this is a
> deliberate choice) and the flag "GPB_R_BUILD" is set when compiling for the
> R package (I have tried to put "#ifndef GPB_R_BUILD" around all headers
> that could cause the problems with exit / abort calls, but apparently I
> have not been able to find all).
>
> Any help is greatly appreciated.
>
> Best regards,
> Fabio Sigrist
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org  Fri Jul 17 14:51:49 2020
From: @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org (Spencer Graves)
Date: Fri, 17 Jul 2020 07:51:49 -0500
Subject: [R-pkg-devel] Note: information on .o files is not available /
 Found '_exit', possibly from '_exit' (C)
In-Reply-To: <CAKpFkB2k6Hz+JXtzNLomfY2GAqyMMBS+P_mMMwdn+Tqpt3py7g@mail.gmail.com>
References: <CAMHmY_wip6F6mAchw32F3=0uUsH6j8w-Agt+Rk8PuSbR02YqYg@mail.gmail.com>
 <CAKpFkB2k6Hz+JXtzNLomfY2GAqyMMBS+P_mMMwdn+Tqpt3py7g@mail.gmail.com>
Message-ID: <98f36889-bad8-cfcf-05aa-3ce62de85d73@effectivedefense.org>

 ????? Can you run the checks only on the subdirectory containing the 
compiled code?? If yes, then you can run it only on half of that 
directory and identify it with a binary search.


 ????? Some years ago, I found a particularly difficult bug that way.? 
If I recall correctly, I made a copy of the package, deleted half of the 
*.Rd files, etc., until I identified which *.Rd file. Then I deleted 
~half of the contents of that *.Rd file until I isolated the problem.? 
It was neither easy nor fun, but it was what I did to find and then fix 
the problem.


 ????? Hope this helps,
 ????? Spencer


On 2020-07-17 07:34, Marcin Jurek wrote:
> So maybe you tried that already but I noticed that sometimes when I do the
> check on the package directory rather than on the tarball I get similar
> errors. I don't know if that's the problem but it should be a quick thing
> to try.
>
> On Fri, Jul 17, 2020 at 5:05 AM Fabio Sigrist <fabiosigrist at gmail.com>
> wrote:
>
>> Dear all,
>>
>> I am trying to get an R package with C++ code on CRAN and I have one NOTE
>> remaining, for which I can't find a solution:
>>
>> Note: information on .o files for x64 is not available
>>    File
>> 'd:/RCompile/CRANincoming/R-devel/lib/gpboost/libs/x64/lib_gpboost.dll':
>>      Found '_exit', possibly from '_exit' (C)
>>      Found 'abort', possibly from 'abort' (C), 'runtime' (Fortran)
>>      Found 'exit', possibly from 'exit' (C), 'stop' (Fortran)
>>      Found 'printf', possibly from 'printf' (C)
>>
>> As much as I search through my code, I can't find the place / headers where
>> these calls / symbols originate. Also, I have no idea how to add
>> information on .o files (apart from the shared library, there are no .o
>> files). The .tar.gz file for the package can be found on
>> https://github.com/fabsig/GPBoost/blob/master/gpboost_0.2.0.tar.gz. Note
>> that the shared library is compiled using install.libs.R (this is a
>> deliberate choice) and the flag "GPB_R_BUILD" is set when compiling for the
>> R package (I have tried to put "#ifndef GPB_R_BUILD" around all headers
>> that could cause the problems with exit / abort calls, but apparently I
>> have not been able to find all).
>>
>> Any help is greatly appreciated.
>>
>> Best regards,
>> Fabio Sigrist
>>
>>          [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From boennecd @end|ng |rom gm@||@com  Fri Jul 17 14:58:50 2020
From: boennecd @end|ng |rom gm@||@com (Benjamin Christoffersen)
Date: Fri, 17 Jul 2020 14:58:50 +0200
Subject: [R-pkg-devel] Note: information on .o files is not available /
 Found '_exit', possibly from '_exit' (C)
In-Reply-To: <98f36889-bad8-cfcf-05aa-3ce62de85d73@effectivedefense.org>
References: <CAMHmY_wip6F6mAchw32F3=0uUsH6j8w-Agt+Rk8PuSbR02YqYg@mail.gmail.com>
 <CAKpFkB2k6Hz+JXtzNLomfY2GAqyMMBS+P_mMMwdn+Tqpt3py7g@mail.gmail.com>
 <98f36889-bad8-cfcf-05aa-3ce62de85d73@effectivedefense.org>
Message-ID: <CAHHSL8uSHYb_GV7xGCo5DbLsH2Z8MkiMVbt3S_gts2pn1DinsA@mail.gmail.com>

Quick guess. After changing
> SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -pthread -O3 -Wextra -Wall -Wno-unknown-pragmas -Wno-return-type -Wno-ignored-attributes -Wno-cast-function-type -Wno-error=cast-function-type")

to
> SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -pthread -O3 -Wextra -Wall")

I managed to `R CMD INSTALL` the package with gcc-8 on Ubuntu. Then
doing `cd ~/R/x86_64-pc-linux-gnu-library/3.6/gpboost/libs/` and
 - nm *.so -C | grep exit
 - nm *.so -C | grep abort
 - nm *.so -C | grep printf

yields nothing. However, doing `nm *.so -C | grep assert` yields
                 U __assert_fail@@GLIBC_2.2.5

and doing `grep "assert" -nr .` shows that `assert` is being called.
Thus, is everything build with `-NDEBUG`? See
https://cran.r-project.org/doc/manuals/r-devel/R-exts.html#DOCF76

Den fre. 17. jul. 2020 kl. 14.52 skrev Spencer Graves
<spencer.graves at effectivedefense.org>:
>
>        Can you run the checks only on the subdirectory containing the
> compiled code?  If yes, then you can run it only on half of that
> directory and identify it with a binary search.
>
>
>        Some years ago, I found a particularly difficult bug that way.
> If I recall correctly, I made a copy of the package, deleted half of the
> *.Rd files, etc., until I identified which *.Rd file. Then I deleted
> ~half of the contents of that *.Rd file until I isolated the problem.
> It was neither easy nor fun, but it was what I did to find and then fix
> the problem.
>
>
>        Hope this helps,
>        Spencer
>
>
> On 2020-07-17 07:34, Marcin Jurek wrote:
> > So maybe you tried that already but I noticed that sometimes when I do the
> > check on the package directory rather than on the tarball I get similar
> > errors. I don't know if that's the problem but it should be a quick thing
> > to try.
> >
> > On Fri, Jul 17, 2020 at 5:05 AM Fabio Sigrist <fabiosigrist at gmail.com>
> > wrote:
> >
> >> Dear all,
> >>
> >> I am trying to get an R package with C++ code on CRAN and I have one NOTE
> >> remaining, for which I can't find a solution:
> >>
> >> Note: information on .o files for x64 is not available
> >>    File
> >> 'd:/RCompile/CRANincoming/R-devel/lib/gpboost/libs/x64/lib_gpboost.dll':
> >>      Found '_exit', possibly from '_exit' (C)
> >>      Found 'abort', possibly from 'abort' (C), 'runtime' (Fortran)
> >>      Found 'exit', possibly from 'exit' (C), 'stop' (Fortran)
> >>      Found 'printf', possibly from 'printf' (C)
> >>
> >> As much as I search through my code, I can't find the place / headers where
> >> these calls / symbols originate. Also, I have no idea how to add
> >> information on .o files (apart from the shared library, there are no .o
> >> files). The .tar.gz file for the package can be found on
> >> https://github.com/fabsig/GPBoost/blob/master/gpboost_0.2.0.tar.gz. Note
> >> that the shared library is compiled using install.libs.R (this is a
> >> deliberate choice) and the flag "GPB_R_BUILD" is set when compiling for the
> >> R package (I have tried to put "#ifndef GPB_R_BUILD" around all headers
> >> that could cause the problems with exit / abort calls, but apparently I
> >> have not been able to find all).
> >>
> >> Any help is greatly appreciated.
> >>
> >> Best regards,
> >> Fabio Sigrist
> >>
> >>          [[alternative HTML version deleted]]
> >>
> >> ______________________________________________
> >> R-package-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From edd @end|ng |rom deb|@n@org  Fri Jul 17 14:57:29 2020
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Fri, 17 Jul 2020 07:57:29 -0500
Subject: [R-pkg-devel] Note: information on .o files is not available /
 Found '_exit', possibly from '_exit' (C)
In-Reply-To: <CAMHmY_wip6F6mAchw32F3=0uUsH6j8w-Agt+Rk8PuSbR02YqYg@mail.gmail.com>
References: <CAMHmY_wip6F6mAchw32F3=0uUsH6j8w-Agt+Rk8PuSbR02YqYg@mail.gmail.com>
Message-ID: <24337.41017.89797.943197@rob.eddelbuettel.com>


On 17 July 2020 at 11:25, Fabio Sigrist wrote:
| I am trying to get an R package with C++ code on CRAN and I have one NOTE
| remaining, for which I can't find a solution:
| 
| Note: information on .o files for x64 is not available
|   File
| 'd:/RCompile/CRANincoming/R-devel/lib/gpboost/libs/x64/lib_gpboost.dll':
|     Found '_exit', possibly from '_exit' (C)
|     Found 'abort', possibly from 'abort' (C), 'runtime' (Fortran)
|     Found 'exit', possibly from 'exit' (C), 'stop' (Fortran)
|     Found 'printf', possibly from 'printf' (C)
| 
| As much as I search through my code, I can't find the place / headers where
| these calls / symbols originate. Also, I have no idea how to add
| information on .o files (apart from the shared library, there are no .o
| files). The .tar.gz file for the package can be found on
| https://github.com/fabsig/GPBoost/blob/master/gpboost_0.2.0.tar.gz. Note
| that the shared library is compiled using install.libs.R (this is a
| deliberate choice) and the flag "GPB_R_BUILD" is set when compiling for the
| R package (I have tried to put "#ifndef GPB_R_BUILD" around all headers
| that could cause the problems with exit / abort calls, but apparently I
| have not been able to find all).

You will have to look harder. The external library, likely written without
knowledge of these (useful for R, otherwise arbitrary) constraint is likely
to contain exit(), (f)printf(), puts(), ... or alike.

If you want your package on CRAN, you need to change this. That's the price.
Code called from R cannot abort the session, and needs to communicate via R's
output streams.

Dirk

-- 
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From edd @end|ng |rom deb|@n@org  Fri Jul 17 15:18:29 2020
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Fri, 17 Jul 2020 08:18:29 -0500
Subject: [R-pkg-devel] Note: information on .o files is not available /
 Found '_exit', possibly from '_exit' (C)
In-Reply-To: <CAHHSL8uSHYb_GV7xGCo5DbLsH2Z8MkiMVbt3S_gts2pn1DinsA@mail.gmail.com>
References: <CAMHmY_wip6F6mAchw32F3=0uUsH6j8w-Agt+Rk8PuSbR02YqYg@mail.gmail.com>
 <CAKpFkB2k6Hz+JXtzNLomfY2GAqyMMBS+P_mMMwdn+Tqpt3py7g@mail.gmail.com>
 <98f36889-bad8-cfcf-05aa-3ce62de85d73@effectivedefense.org>
 <CAHHSL8uSHYb_GV7xGCo5DbLsH2Z8MkiMVbt3S_gts2pn1DinsA@mail.gmail.com>
Message-ID: <24337.42277.286358.242276@rob.eddelbuettel.com>


On 17 July 2020 at 14:58, Benjamin Christoffersen wrote:
| Quick guess. After changing
| > SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -pthread -O3 -Wextra -Wall -Wno-unknown-pragmas -Wno-return-type -Wno-ignored-attributes -Wno-cast-function-type -Wno-error=cast-function-type")
| 
| to
| > SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -pthread -O3 -Wextra -Wall")
| 
| I managed to `R CMD INSTALL` the package with gcc-8 on Ubuntu. Then
| doing `cd ~/R/x86_64-pc-linux-gnu-library/3.6/gpboost/libs/` and
|  - nm *.so -C | grep exit
|  - nm *.so -C | grep abort
|  - nm *.so -C | grep printf
| 
| yields nothing. However, doing `nm *.so -C | grep assert` yields
|                  U __assert_fail@@GLIBC_2.2.5
| 
| and doing `grep "assert" -nr .` shows that `assert` is being called.
| Thus, is everything build with `-NDEBUG`? See
| https://cran.r-project.org/doc/manuals/r-devel/R-exts.html#DOCF76

Very nice catch!

Given the package (and underlying library) has a joint repo, it is pretty
easy to search directly at GitHub too, and it looks like all the required
legwork has been done to #ifdef printf() statements and alike.

Now, I had to do the same work for packages of mine too in the past, and I
don't recall the test output "crossing". So if it really were only assert
coming back in via -NDEBUG then the tests for printf would NOT be triggered.
So something else must likely be hiding.  Which is ... difficult to check in
a codebase that includes duplicate copies of Eigen, LighGBM, ... and more.

Dirk

-- 
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From kry|ov@r00t @end|ng |rom gm@||@com  Fri Jul 17 15:19:52 2020
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Fri, 17 Jul 2020 16:19:52 +0300
Subject: [R-pkg-devel] Note: information on .o files is not available /
 Found '_exit', possibly from '_exit' (C)
In-Reply-To: <CAMHmY_wip6F6mAchw32F3=0uUsH6j8w-Agt+Rk8PuSbR02YqYg@mail.gmail.com>
References: <CAMHmY_wip6F6mAchw32F3=0uUsH6j8w-Agt+Rk8PuSbR02YqYg@mail.gmail.com>
Message-ID: <20200717161952.7ad8e2b1@trisector>

On Fri, 17 Jul 2020 11:25:40 +0200
Fabio Sigrist <fabiosigrist at gmail.com> wrote:

>     Found '_exit', possibly from '_exit' (C)
>     Found 'abort', possibly from 'abort' (C), 'runtime' (Fortran)
>     Found 'exit', possibly from 'exit' (C), 'stop' (Fortran)
>     Found 'printf', possibly from 'printf' (C)

A curious thing is that it seems to only happen on Windows. I tried
searching objdump -D output for the offending functions by means of a
Perl5 one-liner [1] and found that the functions are all called by
various bits of libgcc, OpenMP, C and C++ runtimes. This is probably
caused by linking your R package with -static-libstdc++ (which is set
in CMakeLists.txt if(WIN32 AND MINGW)).

> Note that the shared library is compiled using install.libs.R (this
> is a deliberate choice)

Some of the things it does aren't very portable (e.g. manually setting
most -W flags is discouraged). In particular, I had to manually remove
-Wno-error=cast-function-type from CMakeLists.txt to build the package
with GCC 6.3.0-18+deb9u1, despite it passing the version check
(>=4.8.2).

-- 
Best regards,
Ivan

[1] objdump -D lib_gpboost.dll | \
 perl -lnE'
  $fn = $1 if /^[0-9a-f]+ +<([^>]+)>:/;
  say $fn if /call.*<\Q$call\E/
 ' -s -- -call=abort | c++filt


From @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org  Sat Jul 18 01:08:24 2020
From: @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org (Spencer Graves)
Date: Fri, 17 Jul 2020 18:08:24 -0500
Subject: [R-pkg-devel] "non-ASCII input" and "--data-compress" ignored
In-Reply-To: <20200717121016.67433eff@trisector>
References: <5f113fa0341ad_13fe61d2b8160167857@travis-tasks-69c8cbf9fb-w64br.mail>
 <1537a105-6f7a-ca06-7997-9660ec95cf02@effectivedefense.org>
 <20200717121016.67433eff@trisector>
Message-ID: <a57de207-c53f-8b30-8fc0-306aa35c87c0@effectivedefense.org>

Hello, Ivan et al.:


 ????? I tried escaping "%" every time it occurred without success, but 
adding "\encoding{UTF-8}" as the 4th line of nuclearWeaponStates.Rd 
eliminated that problem.


 ????? Sadly, I tried "R CMD build --resave-data=best Ecdat", "R CMD 
build --resave-data Ecdat", "R CMD build Ecdat --resave-data", and "R 
CMD build Ecdat --resave-data=best", all without success.? I also noted 
that .travis.yml contains "r_build_args: --resave-data", which I 
remember adding some time ago to fix this problem.? And Travis reported 
this problem as well.? This suggests to me that a change was introduced 
with R 4.0.0 that disabled this option.


 ????? I also tried loading and resaving all the files in the data 
directory.? This seemed to achieve some additional compression on 
average, but I still got, "Note: significantly better compression could 
be obtained by using "R CMD build --resave-data".? I then tried load and 
saveRDS on each one individually, but at least the first of the 
resulting *.rda files was corrupted, so I restored what I had before.


 ????? Anyway, Ivan's suggestion fixed the UTF-8 problem and Travis 
confirmed that it can't make "--resave-data" work, either ;-)? If a CRAN 
maintainer complains about the compression problem, I can report what I 
tried and see what they suggest.


 ????? Thanks again,
 ????? Spencer Graves


On 2020-07-17 04:10, Ivan Krylov wrote:
> On Fri, 17 Jul 2020 02:02:36 -0500
> Spencer Graves <spencer.graves at effectivedefense.org> wrote:
>
>> If I copy this URL into a browser and back out again, I get
>> the following:
>>
>>
>> https://www.americansecurityproject.org/ASP%20Reports/Ref%200072%20-%20North%20Korea%E2%80%99s%20Nuclear%20Program%20.pdf
>>
>>
>>   ????? However, if I use this inside "\href", "R CMD check" doesn't
>> recognize the close curly bracket because of the presence of the
>> non-ASCII characters.
> WRE section 2.3 [*] provides an example of \href with RFC3986
> percent-encoding. Since % is a comment character in Rd, the percent
> signs have to be escaped with backslashes:
>
> \href{https://www.americansecurityproject.org/ASP\%20Reports/Ref\%200072\%20-\%20North\%20Korea\%E2\%80\%99s\%20Nuclear\%20Program\%20.pdf}{Derek
> Bolton (2012) North Korea's Nuclear Program}
>
> This only works correctly in R >= 3.1.3, but results in correct output
> in both HTML and PDF formats.
>
> Alternatively, it should be possible to declare the encoding of the Rd
> file using \encoding{UTF-8} (WRE 2.14 [**]), but in my tests (R 3.6.3,
> could have been fixed in later versions) it results in a broken link in
> Rd2pdf output.
>
>>   ????? I'm getting, " Note: significantly better compression could be
>> obtained by using R CMD build --resave-data".? I get this message
>> even though I use "R CMD build --data-compress Ecdat".? I also tried
>> "R CMD build Ecdat --data-compress" and got the same result.
> The note offers you to try adding --resave-data to R CMD build, not
> --data-compress. What happens if you use --resave-data=best?
> --data-compress doesn't seem to be an R CMD build option; at least
> it's not mentioned in R CMD build --help.
>
> WRE 1.1.6 [***] provides an example of --data-compress as an option of
> R CMD INSTALL (not build).
>


From |@r@h@d@t@b@@|nej@d @end|ng |rom @u@@energy@com  Wed Jul 15 02:11:23 2020
From: |@r@h@d@t@b@@|nej@d @end|ng |rom @u@@energy@com (FARSHAD TABASINEJAD)
Date: Tue, 14 Jul 2020 18:11:23 -0600
Subject: [R-pkg-devel] Package Check "Error" status only for
 r-release-macos-x86_64 flavor
Message-ID: <1594771886802.54f530b946fe1897-3730@susaenergy.com>

Dear R community experts,

The CRAN package check page shows an ?ERROR? status for my ?Rmbal? package on the r-release-macos-x86_64 flavor. The error seems to be related to a failed connection. The following links show the error message.

https://cran.r-project.org/web/checks/check_results_Rmbal.html

https://www.r-project.org/nosvn/R.check/r-release-macos-x86_64/Rmbal-00check.html

There is also one ?NOTE? regarding the missing Rdpack and magrittr importFroms in the NAMESPACE file which I?ve already fixed it. I don?t know if the ?ERROR? message I get on r-release-macos-x86_64  is due to this ?NOTE? message or not.

The ?ERROR? and ?NOTE? messages only appeared on CRAN, I didn?t receive any message from rhub::check_for_cran(env_vars = c(R_COMPILE_AND_INSTALL_PACKAGES = ?always?).

Your help is really appreciated!

Regards,
Farshad Tabasinejad


	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Mon Jul 20 16:53:13 2020
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Mon, 20 Jul 2020 17:53:13 +0300
Subject: [R-pkg-devel] "non-ASCII input" and "--data-compress" ignored
In-Reply-To: <a57de207-c53f-8b30-8fc0-306aa35c87c0@effectivedefense.org>
References: <5f113fa0341ad_13fe61d2b8160167857@travis-tasks-69c8cbf9fb-w64br.mail>
 <1537a105-6f7a-ca06-7997-9660ec95cf02@effectivedefense.org>
 <20200717121016.67433eff@trisector>
 <a57de207-c53f-8b30-8fc0-306aa35c87c0@effectivedefense.org>
Message-ID: <20200720175313.7808e311@trisector>

On Fri, 17 Jul 2020 18:08:24 -0500
Spencer Graves <spencer.graves at effectivedefense.org> wrote:

>  ????? I tried escaping "%" every time it occurred without success,
> but adding "\encoding{UTF-8}" as the 4th line of
> nuclearWeaponStates.Rd eliminated that problem.

Glad it works for you, but you might want to check that the link still
leads to the correct URL in the PDF output. In particular, the
following .Rd file:

\encoding{UTF-8}
\title{title}\name{name}\description{
\href{https://www.americansecurityproject.org/ASP Reports/Ref 0072 -
North Korea?s Nuclear Program .pdf}{Derek Bolton (2012) North Korea's
Nuclear Program}

\href{https://www.americansecurityproject.org/ASP\%20Reports/Ref\%200072\%20-\%20North\%20Korea\%E2\%80\%99s\%20Nuclear\%20Program\%20.pdf}{Derek
Bolton (2012) North Korea's Nuclear Program}
}

...gives two working links when processed with R CMD Rdconv -t html,
but when I process it using R CMD Rd2pdf, the first link gets a
\T1\textquoteright instead of ? in its URL, which makes it invalid. This
could be a LaTeX problem on my part, of course.

> I also tried loading and resaving all the files in the data
> directory.

You can also try using tools::resaveRdaFiles with various parameters if
you are interested.

> at least the first of the resulting *.rda files was corrupted

This sounds like trying to load a version-3 *.rda file (implemented in
3.5.0, default since 3.6.0) using an older version of R. Or a possible
indicator of a hardware problem.

-- 
Best regards,
Ivan


From |@b|o@|gr|@t @end|ng |rom gm@||@com  Mon Jul 20 17:39:05 2020
From: |@b|o@|gr|@t @end|ng |rom gm@||@com (Fabio Sigrist)
Date: Mon, 20 Jul 2020 17:39:05 +0200
Subject: [R-pkg-devel] Note: information on .o files is not available /
 Found '_exit', possibly from '_exit' (C)
In-Reply-To: <CAMHmY_wip6F6mAchw32F3=0uUsH6j8w-Agt+Rk8PuSbR02YqYg@mail.gmail.com>
References: <CAMHmY_wip6F6mAchw32F3=0uUsH6j8w-Agt+Rk8PuSbR02YqYg@mail.gmail.com>
Message-ID: <CAMHmY_xvAyN4zUDB4M+zjPOwVd5Dx7H3MewAnuF_eNKA86CuBw@mail.gmail.com>

Many thanks to everybody for the valuable answers.

Several people (Benjamin and Ivan) pointed to the lack of portability due
to the "-Wno-cast-function-type" flag. I have changed this.

Further, as suggested by Benjamin, I also added the " -DNDEBUG" flag.
Consequently, there is no assert call anymore when compiling with gcc under
Linux.

Ivan suggested that the forbidden exit/abort calls might be caused by
linking the R package with -static-libstdc+. I have now removed this but I
am still getting the " Found '_exit'" etc. notes. It is also unclear to me
why these exit / abort symbols are only found under Windows / MinGW and not
under Linux.

I agree with Dirks assessment. It seems that the bottom line is that it is
very difficult to find the exit / abort calls. Very unfortunate...

On Fri, Jul 17, 2020 at 11:25 AM Fabio Sigrist <fabiosigrist at gmail.com>
wrote:

> Dear all,
>
> I am trying to get an R package with C++ code on CRAN and I have one NOTE
> remaining, for which I can't find a solution:
>
> Note: information on .o files for x64 is not available
>   File
> 'd:/RCompile/CRANincoming/R-devel/lib/gpboost/libs/x64/lib_gpboost.dll':
>     Found '_exit', possibly from '_exit' (C)
>     Found 'abort', possibly from 'abort' (C), 'runtime' (Fortran)
>     Found 'exit', possibly from 'exit' (C), 'stop' (Fortran)
>     Found 'printf', possibly from 'printf' (C)
>
> As much as I search through my code, I can't find the place / headers
> where these calls / symbols originate. Also, I have no idea how to add
> information on .o files (apart from the shared library, there are no .o
> files). The .tar.gz file for the package can be found on
> https://github.com/fabsig/GPBoost/blob/master/gpboost_0.2.0.tar.gz. Note
> that the shared library is compiled using install.libs.R (this is a
> deliberate choice) and the flag "GPB_R_BUILD" is set when compiling for the
> R package (I have tried to put "#ifndef GPB_R_BUILD" around all headers
> that could cause the problems with exit / abort calls, but apparently I
> have not been able to find all).
>
> Any help is greatly appreciated.
>
> Best regards,
> Fabio Sigrist
>
>

	[[alternative HTML version deleted]]


From tke|tt @end|ng |rom gm@||@com  Mon Jul 20 18:06:08 2020
From: tke|tt @end|ng |rom gm@||@com (Tim Keitt)
Date: Mon, 20 Jul 2020 11:06:08 -0500
Subject: [R-pkg-devel] import 'as' from another package
Message-ID: <CANnL8gpOa2GUFLQ9-fMvNmXi3RSPiuZ0NcRtQupR-87ZRPOFRQ@mail.gmail.com>

I have

  if (!inherits(x, "RasterLayer")) x <- as(x, "RasterLayer")

in a package and its not finding the coerce definition from the raster
package. I know I need to add an @import roxygen2 directive of some kind,
but I'm not sure the correct syntax. My first try generated a warning that
it was not needed.

What is the correct way to do this? Or does raster need to export this
definition?

THK

	[[alternative HTML version deleted]]


From bbo|ker @end|ng |rom gm@||@com  Mon Jul 20 18:24:20 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Mon, 20 Jul 2020 12:24:20 -0400
Subject: [R-pkg-devel] import 'as' from another package
In-Reply-To: <CANnL8gpOa2GUFLQ9-fMvNmXi3RSPiuZ0NcRtQupR-87ZRPOFRQ@mail.gmail.com>
References: <CANnL8gpOa2GUFLQ9-fMvNmXi3RSPiuZ0NcRtQupR-87ZRPOFRQ@mail.gmail.com>
Message-ID: <e474baff-217f-daba-1688-accb7461d455@gmail.com>

 ?? @importFrom methods as

?

On 7/20/20 12:06 PM, Tim Keitt wrote:
> I have
>
>    if (!inherits(x, "RasterLayer")) x <- as(x, "RasterLayer")
>
> in a package and its not finding the coerce definition from the raster
> package. I know I need to add an @import roxygen2 directive of some kind,
> but I'm not sure the correct syntax. My first try generated a warning that
> it was not needed.
>
> What is the correct way to do this? Or does raster need to export this
> definition?
>
> THK
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From tke|tt @end|ng |rom gm@||@com  Mon Jul 20 18:34:00 2020
From: tke|tt @end|ng |rom gm@||@com (Tim Keitt)
Date: Mon, 20 Jul 2020 11:34:00 -0500
Subject: [R-pkg-devel] import 'as' from another package
In-Reply-To: <e474baff-217f-daba-1688-accb7461d455@gmail.com>
References: <CANnL8gpOa2GUFLQ9-fMvNmXi3RSPiuZ0NcRtQupR-87ZRPOFRQ@mail.gmail.com>
 <e474baff-217f-daba-1688-accb7461d455@gmail.com>
Message-ID: <CANnL8gpxkr70HimCWwrqDx_3Mg0wK7OYnWS11xUhOLx7r5HZkQ@mail.gmail.com>

It works but "check" gives

> checking package dependencies ... ERROR
  Namespace dependency not required: ?methods?

THK

On Mon, Jul 20, 2020 at 11:24 AM Ben Bolker <bbolker at gmail.com> wrote:

>     @importFrom methods as
>
> ?
>
> On 7/20/20 12:06 PM, Tim Keitt wrote:
> > I have
> >
> >    if (!inherits(x, "RasterLayer")) x <- as(x, "RasterLayer")
> >
> > in a package and its not finding the coerce definition from the raster
> > package. I know I need to add an @import roxygen2 directive of some kind,
> > but I'm not sure the correct syntax. My first try generated a warning
> that
> > it was not needed.
> >
> > What is the correct way to do this? Or does raster need to export this
> > definition?
> >
> > THK
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From bbo|ker @end|ng |rom gm@||@com  Mon Jul 20 18:36:21 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Mon, 20 Jul 2020 12:36:21 -0400
Subject: [R-pkg-devel] import 'as' from another package
In-Reply-To: <CANnL8gpxkr70HimCWwrqDx_3Mg0wK7OYnWS11xUhOLx7r5HZkQ@mail.gmail.com>
References: <CANnL8gpOa2GUFLQ9-fMvNmXi3RSPiuZ0NcRtQupR-87ZRPOFRQ@mail.gmail.com>
 <e474baff-217f-daba-1688-accb7461d455@gmail.com>
 <CANnL8gpxkr70HimCWwrqDx_3Mg0wK7OYnWS11xUhOLx7r5HZkQ@mail.gmail.com>
Message-ID: <a0e918ce-089a-24b3-5c5b-3c7f364ecb28@gmail.com>

 ?? I think this is a classic confusing R message.? Try adding methods 
to the Imports: statement in your DESCRIPTION file and see if that 
helps. (Maybe I should file a bug report about that error message - it 
confuses me every time.)

On 7/20/20 12:34 PM, Tim Keitt wrote:
> It works but "check" gives
>
> > checking package dependencies ... ERROR
> ? Namespace dependency not required: ?methods?
>
> THK
>
> On Mon, Jul 20, 2020 at 11:24 AM Ben Bolker <bbolker at gmail.com 
> <mailto:bbolker at gmail.com>> wrote:
>
>     @importFrom methods as
>
>     ?
>
>     On 7/20/20 12:06 PM, Tim Keitt wrote:
>     > I have
>     >
>     >? ? if (!inherits(x, "RasterLayer")) x <- as(x, "RasterLayer")
>     >
>     > in a package and its not finding the coerce definition from the
>     raster
>     > package. I know I need to add an @import roxygen2 directive of
>     some kind,
>     > but I'm not sure the correct syntax. My first try generated a
>     warning that
>     > it was not needed.
>     >
>     > What is the correct way to do this? Or does raster need to
>     export this
>     > definition?
>     >
>     > THK
>     >
>     >? ? ? ?[[alternative HTML version deleted]]
>     >
>     > ______________________________________________
>     > R-package-devel at r-project.org
>     <mailto:R-package-devel at r-project.org> mailing list
>     > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>     ______________________________________________
>     R-package-devel at r-project.org
>     <mailto:R-package-devel at r-project.org> mailing list
>     https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From tke|tt @end|ng |rom gm@||@com  Mon Jul 20 20:24:20 2020
From: tke|tt @end|ng |rom gm@||@com (Tim Keitt)
Date: Mon, 20 Jul 2020 13:24:20 -0500
Subject: [R-pkg-devel] import 'as' from another package
In-Reply-To: <a0e918ce-089a-24b3-5c5b-3c7f364ecb28@gmail.com>
References: <CANnL8gpOa2GUFLQ9-fMvNmXi3RSPiuZ0NcRtQupR-87ZRPOFRQ@mail.gmail.com>
 <e474baff-217f-daba-1688-accb7461d455@gmail.com>
 <CANnL8gpxkr70HimCWwrqDx_3Mg0wK7OYnWS11xUhOLx7r5HZkQ@mail.gmail.com>
 <a0e918ce-089a-24b3-5c5b-3c7f364ecb28@gmail.com>
Message-ID: <CANnL8gr6ph1Ffeyvxi9ancCJi98vUsKYqbcDy6ebBzYkz5RPgg@mail.gmail.com>

That did it. Thanks Ben.

THK

On Mon, Jul 20, 2020 at 11:36 AM Ben Bolker <bbolker at gmail.com> wrote:

>    I think this is a classic confusing R message.  Try adding methods to
> the Imports: statement in your DESCRIPTION file and see if that helps.
> (Maybe I should file a bug report about that error message - it confuses me
> every time.)
> On 7/20/20 12:34 PM, Tim Keitt wrote:
>
> It works but "check" gives
>
> > checking package dependencies ... ERROR
>   Namespace dependency not required: ?methods?
>
> THK
>
> On Mon, Jul 20, 2020 at 11:24 AM Ben Bolker <bbolker at gmail.com> wrote:
>
>>     @importFrom methods as
>>
>> ?
>>
>> On 7/20/20 12:06 PM, Tim Keitt wrote:
>> > I have
>> >
>> >    if (!inherits(x, "RasterLayer")) x <- as(x, "RasterLayer")
>> >
>> > in a package and its not finding the coerce definition from the raster
>> > package. I know I need to add an @import roxygen2 directive of some
>> kind,
>> > but I'm not sure the correct syntax. My first try generated a warning
>> that
>> > it was not needed.
>> >
>> > What is the correct way to do this? Or does raster need to export this
>> > definition?
>> >
>> > THK
>> >
>> >       [[alternative HTML version deleted]]
>> >
>> > ______________________________________________
>> > R-package-devel at r-project.org mailing list
>> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>

	[[alternative HTML version deleted]]


From @eb@meyer @end|ng |rom |@u@de  Mon Jul 20 21:25:08 2020
From: @eb@meyer @end|ng |rom |@u@de (Sebastian Meyer)
Date: Mon, 20 Jul 2020 21:25:08 +0200
Subject: [R-pkg-devel] import 'as' from another package
In-Reply-To: <a0e918ce-089a-24b3-5c5b-3c7f364ecb28@gmail.com>
References: <CANnL8gpOa2GUFLQ9-fMvNmXi3RSPiuZ0NcRtQupR-87ZRPOFRQ@mail.gmail.com>
 <e474baff-217f-daba-1688-accb7461d455@gmail.com>
 <CANnL8gpxkr70HimCWwrqDx_3Mg0wK7OYnWS11xUhOLx7r5HZkQ@mail.gmail.com>
 <a0e918ce-089a-24b3-5c5b-3c7f364ecb28@gmail.com>
Message-ID: <3220DD20-FFC4-4D8C-9A49-989E3DBED013@fau.de>

Yes, indeed, it is confusing. You don't need to file a new bug report, though. There is one already:

https://bugs.r-project.org/bugzilla/show_bug.cgi?id=17179

Please feel free to comment there. This thread could serve as another confirmation. :-)

Best regards,
Sebastian

Am 20. Juli 2020 18:36:21 MESZ schrieb Ben Bolker <bbolker at gmail.com>:
> ?? I think this is a classic confusing R message.? Try adding methods 
>to the Imports: statement in your DESCRIPTION file and see if that 
>helps. (Maybe I should file a bug report about that error message - it 
>confuses me every time.)
>
>On 7/20/20 12:34 PM, Tim Keitt wrote:
>> It works but "check" gives
>>
>> > checking package dependencies ... ERROR
>> ? Namespace dependency not required: ?methods?
>>
>> THK
>>
>> On Mon, Jul 20, 2020 at 11:24 AM Ben Bolker <bbolker at gmail.com 
>> <mailto:bbolker at gmail.com>> wrote:
>>
>>     @importFrom methods as
>>
>>     ?
>>
>>     On 7/20/20 12:06 PM, Tim Keitt wrote:
>>     > I have
>>     >
>>     >? ? if (!inherits(x, "RasterLayer")) x <- as(x, "RasterLayer")
>>     >
>>     > in a package and its not finding the coerce definition from the
>>     raster
>>     > package. I know I need to add an @import roxygen2 directive of
>>     some kind,
>>     > but I'm not sure the correct syntax. My first try generated a
>>     warning that
>>     > it was not needed.
>>     >
>>     > What is the correct way to do this? Or does raster need to
>>     export this
>>     > definition?
>>     >
>>     > THK
>>     >
>>     >? ? ? ?[[alternative HTML version deleted]]
>>     >
>>     > ______________________________________________
>>     > R-package-devel at r-project.org
>>     <mailto:R-package-devel at r-project.org> mailing list
>>     > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>>     ______________________________________________
>>     R-package-devel at r-project.org
>>     <mailto:R-package-devel at r-project.org> mailing list
>>     https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>
>	[[alternative HTML version deleted]]
>
>______________________________________________
>R-package-devel at r-project.org mailing list
>https://stat.ethz.ch/mailman/listinfo/r-package-devel


From tke|tt @end|ng |rom gm@||@com  Tue Jul 21 00:41:23 2020
From: tke|tt @end|ng |rom gm@||@com (Tim Keitt)
Date: Mon, 20 Jul 2020 17:41:23 -0500
Subject: [R-pkg-devel] import 'as' from another package
In-Reply-To: <3220DD20-FFC4-4D8C-9A49-989E3DBED013@fau.de>
References: <CANnL8gpOa2GUFLQ9-fMvNmXi3RSPiuZ0NcRtQupR-87ZRPOFRQ@mail.gmail.com>
 <e474baff-217f-daba-1688-accb7461d455@gmail.com>
 <CANnL8gpxkr70HimCWwrqDx_3Mg0wK7OYnWS11xUhOLx7r5HZkQ@mail.gmail.com>
 <a0e918ce-089a-24b3-5c5b-3c7f364ecb28@gmail.com>
 <3220DD20-FFC4-4D8C-9A49-989E3DBED013@fau.de>
Message-ID: <CANnL8gqKfrFjE6cLO2FEULeB72auA+aR-juD7viWYM9aWY1KNw@mail.gmail.com>

Thanks for pointing to the bug.

Now I am finding I cannot use the 'as' definitions from 'raster' without
loading the package. Do I need an @import directive that specifies the
definitions in the 'raster' package? My understanding is that the 'setAs'
function generates a 'coerce,...' signature but I'm not sure how to import
it to my package.

Thanks again.

THK

On Mon, Jul 20, 2020 at 2:25 PM Sebastian Meyer <seb.meyer at fau.de> wrote:

> Yes, indeed, it is confusing. You don't need to file a new bug report,
> though. There is one already:
>
> https://bugs.r-project.org/bugzilla/show_bug.cgi?id=17179
>
> Please feel free to comment there. This thread could serve as another
> confirmation. :-)
>
> Best regards,
> Sebastian
>
> Am 20. Juli 2020 18:36:21 MESZ schrieb Ben Bolker <bbolker at gmail.com>:
> >    I think this is a classic confusing R message.  Try adding methods
> >to the Imports: statement in your DESCRIPTION file and see if that
> >helps. (Maybe I should file a bug report about that error message - it
> >confuses me every time.)
> >
> >On 7/20/20 12:34 PM, Tim Keitt wrote:
> >> It works but "check" gives
> >>
> >> > checking package dependencies ... ERROR
> >>   Namespace dependency not required: ?methods?
> >>
> >> THK
> >>
> >> On Mon, Jul 20, 2020 at 11:24 AM Ben Bolker <bbolker at gmail.com
> >> <mailto:bbolker at gmail.com>> wrote:
> >>
> >>     @importFrom methods as
> >>
> >>     ?
> >>
> >>     On 7/20/20 12:06 PM, Tim Keitt wrote:
> >>     > I have
> >>     >
> >>     >    if (!inherits(x, "RasterLayer")) x <- as(x, "RasterLayer")
> >>     >
> >>     > in a package and its not finding the coerce definition from the
> >>     raster
> >>     > package. I know I need to add an @import roxygen2 directive of
> >>     some kind,
> >>     > but I'm not sure the correct syntax. My first try generated a
> >>     warning that
> >>     > it was not needed.
> >>     >
> >>     > What is the correct way to do this? Or does raster need to
> >>     export this
> >>     > definition?
> >>     >
> >>     > THK
> >>     >
> >>     >       [[alternative HTML version deleted]]
> >>     >
> >>     > ______________________________________________
> >>     > R-package-devel at r-project.org
> >>     <mailto:R-package-devel at r-project.org> mailing list
> >>     > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>
> >>     ______________________________________________
> >>     R-package-devel at r-project.org
> >>     <mailto:R-package-devel at r-project.org> mailing list
> >>     https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>
> >
> >       [[alternative HTML version deleted]]
> >
> >______________________________________________
> >R-package-devel at r-project.org mailing list
> >https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From c@rtogr@iiow m@iii@g oii gm@ii@com  Tue Jul 21 08:18:01 2020
From: c@rtogr@iiow m@iii@g oii gm@ii@com (c@rtogr@iiow m@iii@g oii gm@ii@com)
Date: Tue, 21 Jul 2020 06:18:01 +0000 (UTC)
Subject: [R-pkg-devel] Cartograflow package
References: <1366841995.6994928.1595312281815.ref@mail.yahoo.com>
Message-ID: <1366841995.6994928.1595312281815@mail.yahoo.com>

HelloYesterday a new version of cartograflow v1.0.3 was updated on the crank.? Everything seems to be OK.
However, when I write in help cartograflow I don't see the thumbnail with the different possibilities of visualization: pdf, HTML ...
Is this normal?
Thank you in advance for your answer
Sylvain
	[[alternative HTML version deleted]]


From jpr|t|k|n @end|ng |rom pobox@com  Mon Jul 13 16:14:14 2020
From: jpr|t|k|n @end|ng |rom pobox@com (Joshua N Pritikin)
Date: Mon, 13 Jul 2020 10:14:14 -0400
Subject: [R-pkg-devel] os/x compiled w/ openmp?
Message-ID: <20200713141414.piydxyjzyslfqg2a-3708@cocoa>


Has anybody managed to create binary packages for os/x with openmp 
enabled?

Is this the best place to ask?

Our working non-openmp enabled build is here,

https://travis-ci.org/github/OpenMx/OpenMx/jobs/706741686

Thank you.

-- 
Joshua N. Pritikin, Ph.D.
Virginia Institute for Psychiatric and Behavioral Genetics
Virginia Commonwealth University
PO Box 980126
800 E Leigh St, Biotech One, Suite 1-133
Richmond, VA 23219
http://exuberant-island.surge.sh


From kry|ov@r00t @end|ng |rom gm@||@com  Tue Jul 21 12:24:17 2020
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Tue, 21 Jul 2020 13:24:17 +0300
Subject: [R-pkg-devel] os/x compiled w/ openmp?
In-Reply-To: <20200713141414.piydxyjzyslfqg2a-3708@cocoa>
References: <20200713141414.piydxyjzyslfqg2a-3708@cocoa>
Message-ID: <20200721132417.12420599@trisector>

On Mon, 13 Jul 2020 10:14:14 -0400
Joshua N Pritikin <jpritikin at pobox.com> wrote:

> Is this the best place to ask?

R-SIG-Mac [*] is probably a better place for this. The short answer is
that OpenMP support has been dropped from the compiler supplied with
macOS, but there are workarounds [**].

-- 
Best regards,
Ivan

[*] https://stat.ethz.ch/mailman/listinfo/r-sig-mac

[**]
https://ryanhomer.github.io/posts/build-openmp-macos-catalina-complete


From w@ngz1 @end|ng |rom uth@c@@@edu  Tue Jul 21 19:44:50 2020
From: w@ngz1 @end|ng |rom uth@c@@@edu (Wang, Zhu)
Date: Tue, 21 Jul 2020 17:44:50 +0000
Subject: [R-pkg-devel] incomplete gamma function Fortran subroutine
Message-ID: <SN6PR10MB24320FB49D293F4EE763AAB99F780@SN6PR10MB2432.namprd10.prod.outlook.com>

Hello,

In an R function within a package, I would like to call a Fortran subroutine to compute lower gamma function. Any advice will be appreciated.

Thanks!

Zhu Wang

	[[alternative HTML version deleted]]


From bbo|ker @end|ng |rom gm@||@com  Tue Jul 21 19:54:00 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Tue, 21 Jul 2020 13:54:00 -0400
Subject: [R-pkg-devel] incomplete gamma function Fortran subroutine
In-Reply-To: <SN6PR10MB24320FB49D293F4EE763AAB99F780@SN6PR10MB2432.namprd10.prod.outlook.com>
References: <SN6PR10MB24320FB49D293F4EE763AAB99F780@SN6PR10MB2432.namprd10.prod.outlook.com>
Message-ID: <ed409571-52c6-2b99-46a9-6e47f08e06be@gmail.com>

 ??? Is there a reason not to use pgamma(), possibly adjusted by a 
(de-)normalizing constant??? (See detailed notes in ?pgamma)

On 7/21/20 1:44 PM, Wang, Zhu wrote:
> Hello,
>
> In an R function within a package, I would like to call a Fortran subroutine to compute lower gamma function. Any advice will be appreciated.
>
> Thanks!
>
> Zhu Wang
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From bgunter@4567 @end|ng |rom gm@||@com  Tue Jul 21 19:54:42 2020
From: bgunter@4567 @end|ng |rom gm@||@com (Bert Gunter)
Date: Tue, 21 Jul 2020 10:54:42 -0700
Subject: [R-pkg-devel] incomplete gamma function Fortran subroutine
In-Reply-To: <SN6PR10MB24320FB49D293F4EE763AAB99F780@SN6PR10MB2432.namprd10.prod.outlook.com>
References: <SN6PR10MB24320FB49D293F4EE763AAB99F780@SN6PR10MB2432.namprd10.prod.outlook.com>
Message-ID: <CAGxFJbQkkjoX4jmp7OuX03V+cVDCbeFu-WMiJkpDa_mxsOv-tA@mail.gmail.com>

Why? -- see ?dgamma

See also the section on including fortran code in "Writing R Extensions,"
which should be your first port of call for such questions.

If neither of these is what you need, it may be helpful if you explain why
not.

Bert Gunter

"The trouble with having an open mind is that people keep coming along and
sticking things into it."
-- Opus (aka Berkeley Breathed in his "Bloom County" comic strip )


On Tue, Jul 21, 2020 at 10:45 AM Wang, Zhu <wangz1 at uthscsa.edu> wrote:

> Hello,
>
> In an R function within a package, I would like to call a Fortran
> subroutine to compute lower gamma function. Any advice will be appreciated.
>
> Thanks!
>
> Zhu Wang
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From bgunter@4567 @end|ng |rom gm@||@com  Tue Jul 21 19:59:28 2020
From: bgunter@4567 @end|ng |rom gm@||@com (Bert Gunter)
Date: Tue, 21 Jul 2020 10:59:28 -0700
Subject: [R-pkg-devel] incomplete gamma function Fortran subroutine
In-Reply-To: <CAGxFJbQkkjoX4jmp7OuX03V+cVDCbeFu-WMiJkpDa_mxsOv-tA@mail.gmail.com>
References: <SN6PR10MB24320FB49D293F4EE763AAB99F780@SN6PR10MB2432.namprd10.prod.outlook.com>
 <CAGxFJbQkkjoX4jmp7OuX03V+cVDCbeFu-WMiJkpDa_mxsOv-tA@mail.gmail.com>
Message-ID: <CAGxFJbSrLDHpSNObWRbwmYZA_fTf19F4+VZL5xecBqjyndez-A@mail.gmail.com>

BTW, if you search for "incomplete gamma function" on Rseek.org, you will
find whole packages for this.

Bert Gunter

"The trouble with having an open mind is that people keep coming along and
sticking things into it."
-- Opus (aka Berkeley Breathed in his "Bloom County" comic strip )


On Tue, Jul 21, 2020 at 10:54 AM Bert Gunter <bgunter.4567 at gmail.com> wrote:

> Why? -- see ?dgamma
>
> See also the section on including fortran code in "Writing R Extensions,"
> which should be your first port of call for such questions.
>
> If neither of these is what you need, it may be helpful if you explain why
> not.
>
> Bert Gunter
>
> "The trouble with having an open mind is that people keep coming along and
> sticking things into it."
> -- Opus (aka Berkeley Breathed in his "Bloom County" comic strip )
>
>
> On Tue, Jul 21, 2020 at 10:45 AM Wang, Zhu <wangz1 at uthscsa.edu> wrote:
>
>> Hello,
>>
>> In an R function within a package, I would like to call a Fortran
>> subroutine to compute lower gamma function. Any advice will be appreciated.
>>
>> Thanks!
>>
>> Zhu Wang
>>
>>         [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>

	[[alternative HTML version deleted]]


From w@ngz1 @end|ng |rom uth@c@@@edu  Tue Jul 21 20:15:32 2020
From: w@ngz1 @end|ng |rom uth@c@@@edu (Wang, Zhu)
Date: Tue, 21 Jul 2020 18:15:32 +0000
Subject: [R-pkg-devel] incomplete gamma function Fortran subroutine
In-Reply-To: <ed409571-52c6-2b99-46a9-6e47f08e06be@gmail.com>
References: <SN6PR10MB24320FB49D293F4EE763AAB99F780@SN6PR10MB2432.namprd10.prod.outlook.com>
 <ed409571-52c6-2b99-46a9-6e47f08e06be@gmail.com>
Message-ID: <SN6PR10MB2432CEF2D651057F1AF1EA839F780@SN6PR10MB2432.namprd10.prod.outlook.com>

Sorry for not making myself clear: The Fortran subroutine in an R package needs to call incomplete gamma function.

-----Original Message-----
From: R-package-devel <r-package-devel-bounces at r-project.org> On Behalf Of Ben Bolker
Sent: Tuesday, July 21, 2020 12:54 PM
To: r-package-devel at r-project.org
Subject: Re: [R-pkg-devel] incomplete gamma function Fortran subroutine

 ??? Is there a reason not to use pgamma(), possibly adjusted by a (de-)normalizing constant??? (See detailed notes in ?pgamma)

On 7/21/20 1:44 PM, Wang, Zhu wrote:
> Hello,
>
> In an R function within a package, I would like to call a Fortran subroutine to compute lower gamma function. Any advice will be appreciated.
>
> Thanks!
>
> Zhu Wang
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list 
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

______________________________________________
R-package-devel at r-project.org mailing list https://stat.ethz.ch/mailman/listinfo/r-package-devel

From @teve@the@b@ye@|@n @end|ng |rom gm@||@com  Tue Jul 21 20:29:47 2020
From: @teve@the@b@ye@|@n @end|ng |rom gm@||@com (Steven Scott)
Date: Tue, 21 Jul 2020 11:29:47 -0700
Subject: [R-pkg-devel] incomplete gamma function Fortran subroutine
In-Reply-To: <SN6PR10MB2432CEF2D651057F1AF1EA839F780@SN6PR10MB2432.namprd10.prod.outlook.com>
References: <SN6PR10MB24320FB49D293F4EE763AAB99F780@SN6PR10MB2432.namprd10.prod.outlook.com>
 <ed409571-52c6-2b99-46a9-6e47f08e06be@gmail.com>
 <SN6PR10MB2432CEF2D651057F1AF1EA839F780@SN6PR10MB2432.namprd10.prod.outlook.com>
Message-ID: <CAJqTW46KcMbm4gUxLQsG9CK9cfHMpkw+AytpRw3ss9k6WD26TA@mail.gmail.com>

You can often find this kind of code on netlib.org.  Just include it with
the fortran code in your package.

On Tue, Jul 21, 2020 at 11:22 AM Wang, Zhu <wangz1 at uthscsa.edu> wrote:

> Sorry for not making myself clear: The Fortran subroutine in an R package
> needs to call incomplete gamma function.
>
> -----Original Message-----
> From: R-package-devel <r-package-devel-bounces at r-project.org> On Behalf
> Of Ben Bolker
> Sent: Tuesday, July 21, 2020 12:54 PM
> To: r-package-devel at r-project.org
> Subject: Re: [R-pkg-devel] incomplete gamma function Fortran subroutine
>
>      Is there a reason not to use pgamma(), possibly adjusted by a
> (de-)normalizing constant?   (See detailed notes in ?pgamma)
>
> On 7/21/20 1:44 PM, Wang, Zhu wrote:
> > Hello,
> >
> > In an R function within a package, I would like to call a Fortran
> subroutine to compute lower gamma function. Any advice will be appreciated.
> >
> > Thanks!
> >
> > Zhu Wang
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From jpno|@n @end|ng |rom @mer|c@n@edu  Tue Jul 21 20:42:51 2020
From: jpno|@n @end|ng |rom @mer|c@n@edu (John P. Nolan)
Date: Tue, 21 Jul 2020 18:42:51 +0000
Subject: [R-pkg-devel] incomplete gamma function Fortran subroutine
In-Reply-To: <SN6PR10MB2432CEF2D651057F1AF1EA839F780@SN6PR10MB2432.namprd10.prod.outlook.com>
References: <SN6PR10MB24320FB49D293F4EE763AAB99F780@SN6PR10MB2432.namprd10.prod.outlook.com>
 <ed409571-52c6-2b99-46a9-6e47f08e06be@gmail.com>
 <SN6PR10MB2432CEF2D651057F1AF1EA839F780@SN6PR10MB2432.namprd10.prod.outlook.com>
Message-ID: <BL0PR06MB4371CB2D42F57CEB54967F73C6780@BL0PR06MB4371.namprd06.prod.outlook.com>

As others have said, built-in function pgamma is a (normalized) version of the incomplete gamma function!   John

-----Original Message-----
From: R-package-devel <r-package-devel-bounces at r-project.org> On Behalf Of Wang, Zhu
Sent: Tuesday, July 21, 2020 2:16 PM
To: Ben Bolker <bbolker at gmail.com>; r-package-devel at r-project.org
Subject: Re: [R-pkg-devel] incomplete gamma function Fortran subroutine

External Email: Use caution with links and attachments.

Sorry for not making myself clear: The Fortran subroutine in an R package needs to call incomplete gamma function.

-----Original Message-----
From: R-package-devel <r-package-devel-bounces at r-project.org> On Behalf Of Ben Bolker
Sent: Tuesday, July 21, 2020 12:54 PM
To: r-package-devel at r-project.org
Subject: Re: [R-pkg-devel] incomplete gamma function Fortran subroutine

     Is there a reason not to use pgamma(), possibly adjusted by a (de-)normalizing constant?   (See detailed notes in ?pgamma)

On 7/21/20 1:44 PM, Wang, Zhu wrote:
> Hello,
>
> In an R function within a package, I would like to call a Fortran subroutine to compute lower gamma function. Any advice will be appreciated.
>
> Thanks!
>
> Zhu Wang
>
>       [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list 
> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mail
> man_listinfo_r-2Dpackage-2Ddevel&d=DwIGaQ&c=U0G0XJAMhEk_X0GAGzCL7Q&r=7
> rQvU8hscCTWlvO-F5wI2-2eTiW40XI5qUKda0AnbG0&m=Y5sTjoEyQhEnvYqP-rmi1Pmvi
> Z_5jj7ur9P8ujvLiBc&s=w0p6b_yBQ1jDH3amMKQGvmEKYJD-BAid_CphFO37yu0&e=

______________________________________________
R-package-devel at r-project.org mailing list https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Dpackage-2Ddevel&d=DwIGaQ&c=U0G0XJAMhEk_X0GAGzCL7Q&r=7rQvU8hscCTWlvO-F5wI2-2eTiW40XI5qUKda0AnbG0&m=Y5sTjoEyQhEnvYqP-rmi1PmviZ_5jj7ur9P8ujvLiBc&s=w0p6b_yBQ1jDH3amMKQGvmEKYJD-BAid_CphFO37yu0&e=
______________________________________________
R-package-devel at r-project.org mailing list https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Dpackage-2Ddevel&d=DwIGaQ&c=U0G0XJAMhEk_X0GAGzCL7Q&r=7rQvU8hscCTWlvO-F5wI2-2eTiW40XI5qUKda0AnbG0&m=Y5sTjoEyQhEnvYqP-rmi1PmviZ_5jj7ur9P8ujvLiBc&s=w0p6b_yBQ1jDH3amMKQGvmEKYJD-BAid_CphFO37yu0&e=

From w@ngz1 @end|ng |rom uth@c@@@edu  Tue Jul 21 20:44:27 2020
From: w@ngz1 @end|ng |rom uth@c@@@edu (Wang, Zhu)
Date: Tue, 21 Jul 2020 18:44:27 +0000
Subject: [R-pkg-devel] incomplete gamma function Fortran subroutine
In-Reply-To: <CAJqTW46KcMbm4gUxLQsG9CK9cfHMpkw+AytpRw3ss9k6WD26TA@mail.gmail.com>
References: <SN6PR10MB24320FB49D293F4EE763AAB99F780@SN6PR10MB2432.namprd10.prod.outlook.com>
 <ed409571-52c6-2b99-46a9-6e47f08e06be@gmail.com>
 <SN6PR10MB2432CEF2D651057F1AF1EA839F780@SN6PR10MB2432.namprd10.prod.outlook.com>
 <CAJqTW46KcMbm4gUxLQsG9CK9cfHMpkw+AytpRw3ss9k6WD26TA@mail.gmail.com>
Message-ID: <SN6PR10MB2432E456A5D4C519F1E5ACC19F780@SN6PR10MB2432.namprd10.prod.outlook.com>

Thanks Steven.

Zhu

From: Steven Scott <steve.the.bayesian at gmail.com>
Sent: Tuesday, July 21, 2020 1:30 PM
To: Wang, Zhu <wangz1 at uthscsa.edu>
Cc: Ben Bolker <bbolker at gmail.com>; r-package-devel at r-project.org
Subject: Re: [R-pkg-devel] incomplete gamma function Fortran subroutine

You can often find this kind of code on netlib.org<http://netlib.org>.  Just include it with the fortran code in your package.

On Tue, Jul 21, 2020 at 11:22 AM Wang, Zhu <wangz1 at uthscsa.edu<mailto:wangz1 at uthscsa.edu>> wrote:
Sorry for not making myself clear: The Fortran subroutine in an R package needs to call incomplete gamma function.

-----Original Message-----
From: R-package-devel <r-package-devel-bounces at r-project.org<mailto:r-package-devel-bounces at r-project.org>> On Behalf Of Ben Bolker
Sent: Tuesday, July 21, 2020 12:54 PM
To: r-package-devel at r-project.org<mailto:r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] incomplete gamma function Fortran subroutine

     Is there a reason not to use pgamma(), possibly adjusted by a (de-)normalizing constant?   (See detailed notes in ?pgamma)

On 7/21/20 1:44 PM, Wang, Zhu wrote:
> Hello,
>
> In an R function within a package, I would like to call a Fortran subroutine to compute lower gamma function. Any advice will be appreciated.
>
> Thanks!
>
> Zhu Wang
>
>       [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org<mailto:R-package-devel at r-project.org> mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

______________________________________________
R-package-devel at r-project.org<mailto:R-package-devel at r-project.org> mailing list https://stat.ethz.ch/mailman/listinfo/r-package-devel
______________________________________________
R-package-devel at r-project.org<mailto:R-package-devel at r-project.org> mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel

	[[alternative HTML version deleted]]


From w@ngz1 @end|ng |rom uth@c@@@edu  Tue Jul 21 21:54:44 2020
From: w@ngz1 @end|ng |rom uth@c@@@edu (Wang, Zhu)
Date: Tue, 21 Jul 2020 19:54:44 +0000
Subject: [R-pkg-devel] incomplete gamma function Fortran subroutine
In-Reply-To: <BL0PR06MB4371CB2D42F57CEB54967F73C6780@BL0PR06MB4371.namprd06.prod.outlook.com>
References: <SN6PR10MB24320FB49D293F4EE763AAB99F780@SN6PR10MB2432.namprd10.prod.outlook.com>
 <ed409571-52c6-2b99-46a9-6e47f08e06be@gmail.com>
 <SN6PR10MB2432CEF2D651057F1AF1EA839F780@SN6PR10MB2432.namprd10.prod.outlook.com>
 <BL0PR06MB4371CB2D42F57CEB54967F73C6780@BL0PR06MB4371.namprd06.prod.outlook.com>
Message-ID: <SN6PR10MB24320D7C30C2AAAE7D56CEE79F780@SN6PR10MB2432.namprd10.prod.outlook.com>

Thanks to Ben and John. Perhaps the program should call pgamma in R and pass the number to Fortran. Calling some Fortran subroutines older than R can trigger concerns when submitting the package to the CRAN.

Best,
Zhu

-----Original Message-----
From: John P. Nolan <jpnolan at american.edu> 
Sent: Tuesday, July 21, 2020 1:43 PM
To: Wang, Zhu <wangz1 at uthscsa.edu>; Ben Bolker <bbolker at gmail.com>; r-package-devel at r-project.org
Subject: RE: [R-pkg-devel] incomplete gamma function Fortran subroutine

As others have said, built-in function pgamma is a (normalized) version of the incomplete gamma function!   John

-----Original Message-----
From: R-package-devel <r-package-devel-bounces at r-project.org> On Behalf Of Wang, Zhu
Sent: Tuesday, July 21, 2020 2:16 PM
To: Ben Bolker <bbolker at gmail.com>; r-package-devel at r-project.org
Subject: Re: [R-pkg-devel] incomplete gamma function Fortran subroutine

External Email: Use caution with links and attachments.

Sorry for not making myself clear: The Fortran subroutine in an R package needs to call incomplete gamma function.

-----Original Message-----
From: R-package-devel <r-package-devel-bounces at r-project.org> On Behalf Of Ben Bolker
Sent: Tuesday, July 21, 2020 12:54 PM
To: r-package-devel at r-project.org
Subject: Re: [R-pkg-devel] incomplete gamma function Fortran subroutine

     Is there a reason not to use pgamma(), possibly adjusted by a (de-)normalizing constant?   (See detailed notes in ?pgamma)

On 7/21/20 1:44 PM, Wang, Zhu wrote:
> Hello,
>
> In an R function within a package, I would like to call a Fortran subroutine to compute lower gamma function. Any advice will be appreciated.
>
> Thanks!
>
> Zhu Wang
>
>       [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list 
> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mail
> man_listinfo_r-2Dpackage-2Ddevel&d=DwIGaQ&c=U0G0XJAMhEk_X0GAGzCL7Q&r=7
> rQvU8hscCTWlvO-F5wI2-2eTiW40XI5qUKda0AnbG0&m=Y5sTjoEyQhEnvYqP-rmi1Pmvi
> Z_5jj7ur9P8ujvLiBc&s=w0p6b_yBQ1jDH3amMKQGvmEKYJD-BAid_CphFO37yu0&e=

______________________________________________
R-package-devel at r-project.org mailing list https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Dpackage-2Ddevel&d=DwIGaQ&c=U0G0XJAMhEk_X0GAGzCL7Q&r=7rQvU8hscCTWlvO-F5wI2-2eTiW40XI5qUKda0AnbG0&m=Y5sTjoEyQhEnvYqP-rmi1PmviZ_5jj7ur9P8ujvLiBc&s=w0p6b_yBQ1jDH3amMKQGvmEKYJD-BAid_CphFO37yu0&e=
______________________________________________
R-package-devel at r-project.org mailing list https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Dpackage-2Ddevel&d=DwIGaQ&c=U0G0XJAMhEk_X0GAGzCL7Q&r=7rQvU8hscCTWlvO-F5wI2-2eTiW40XI5qUKda0AnbG0&m=Y5sTjoEyQhEnvYqP-rmi1PmviZ_5jj7ur9P8ujvLiBc&s=w0p6b_yBQ1jDH3amMKQGvmEKYJD-BAid_CphFO37yu0&e=

From iuke-tier@ey m@iii@g oii uiow@@edu  Tue Jul 21 22:33:03 2020
From: iuke-tier@ey m@iii@g oii uiow@@edu (iuke-tier@ey m@iii@g oii uiow@@edu)
Date: Tue, 21 Jul 2020 15:33:03 -0500 (CDT)
Subject: [R-pkg-devel] [External] Re: incomplete gamma function Fortran
 subroutine
In-Reply-To: <SN6PR10MB24320D7C30C2AAAE7D56CEE79F780@SN6PR10MB2432.namprd10.prod.outlook.com>
References: <SN6PR10MB24320FB49D293F4EE763AAB99F780@SN6PR10MB2432.namprd10.prod.outlook.com>
 <ed409571-52c6-2b99-46a9-6e47f08e06be@gmail.com>
 <SN6PR10MB2432CEF2D651057F1AF1EA839F780@SN6PR10MB2432.namprd10.prod.outlook.com>
 <BL0PR06MB4371CB2D42F57CEB54967F73C6780@BL0PR06MB4371.namprd06.prod.outlook.com>
 <SN6PR10MB24320D7C30C2AAAE7D56CEE79F780@SN6PR10MB2432.namprd10.prod.outlook.com>
Message-ID: <alpine.DEB.2.21.2007211532070.3754@luke-Latitude-7480>

Looking at this section of WRE may help:

https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Numerical-analysis-subroutines

Best,

luke

On Tue, 21 Jul 2020, Wang, Zhu wrote:

> Thanks to Ben and John. Perhaps the program should call pgamma in R and pass the number to Fortran. Calling some Fortran subroutines older than R can trigger concerns when submitting the package to the CRAN.
>
> Best,
> Zhu
>
> -----Original Message-----
> From: John P. Nolan <jpnolan at american.edu>
> Sent: Tuesday, July 21, 2020 1:43 PM
> To: Wang, Zhu <wangz1 at uthscsa.edu>; Ben Bolker <bbolker at gmail.com>; r-package-devel at r-project.org
> Subject: RE: [R-pkg-devel] incomplete gamma function Fortran subroutine
>
> As others have said, built-in function pgamma is a (normalized) version of the incomplete gamma function!   John
>
> -----Original Message-----
> From: R-package-devel <r-package-devel-bounces at r-project.org> On Behalf Of Wang, Zhu
> Sent: Tuesday, July 21, 2020 2:16 PM
> To: Ben Bolker <bbolker at gmail.com>; r-package-devel at r-project.org
> Subject: Re: [R-pkg-devel] incomplete gamma function Fortran subroutine
>
> External Email: Use caution with links and attachments.
>
> Sorry for not making myself clear: The Fortran subroutine in an R package needs to call incomplete gamma function.
>
> -----Original Message-----
> From: R-package-devel <r-package-devel-bounces at r-project.org> On Behalf Of Ben Bolker
> Sent: Tuesday, July 21, 2020 12:54 PM
> To: r-package-devel at r-project.org
> Subject: Re: [R-pkg-devel] incomplete gamma function Fortran subroutine
>
>     Is there a reason not to use pgamma(), possibly adjusted by a (de-)normalizing constant?   (See detailed notes in ?pgamma)
>
> On 7/21/20 1:44 PM, Wang, Zhu wrote:
>> Hello,
>>
>> In an R function within a package, I would like to call a Fortran subroutine to compute lower gamma function. Any advice will be appreciated.
>>
>> Thanks!
>>
>> Zhu Wang
>>
>>       [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mail
>> man_listinfo_r-2Dpackage-2Ddevel&d=DwIGaQ&c=U0G0XJAMhEk_X0GAGzCL7Q&r=7
>> rQvU8hscCTWlvO-F5wI2-2eTiW40XI5qUKda0AnbG0&m=Y5sTjoEyQhEnvYqP-rmi1Pmvi
>> Z_5jj7ur9P8ujvLiBc&s=w0p6b_yBQ1jDH3amMKQGvmEKYJD-BAid_CphFO37yu0&e=
>
> ______________________________________________
> R-package-devel at r-project.org mailing list https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Dpackage-2Ddevel&d=DwIGaQ&c=U0G0XJAMhEk_X0GAGzCL7Q&r=7rQvU8hscCTWlvO-F5wI2-2eTiW40XI5qUKda0AnbG0&m=Y5sTjoEyQhEnvYqP-rmi1PmviZ_5jj7ur9P8ujvLiBc&s=w0p6b_yBQ1jDH3amMKQGvmEKYJD-BAid_CphFO37yu0&e=
> ______________________________________________
> R-package-devel at r-project.org mailing list https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Dpackage-2Ddevel&d=DwIGaQ&c=U0G0XJAMhEk_X0GAGzCL7Q&r=7rQvU8hscCTWlvO-F5wI2-2eTiW40XI5qUKda0AnbG0&m=Y5sTjoEyQhEnvYqP-rmi1PmviZ_5jj7ur9P8ujvLiBc&s=w0p6b_yBQ1jDH3amMKQGvmEKYJD-BAid_CphFO37yu0&e=
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

-- 
Luke Tierney
Ralph E. Wareham Professor of Mathematical Sciences
University of Iowa                  Phone:             319-335-3386
Department of Statistics and        Fax:               319-335-3017
    Actuarial Science
241 Schaeffer Hall                  email:   luke-tierney at uiowa.edu
Iowa City, IA 52242                 WWW:  http://www.stat.uiowa.edu


From bbo|ker @end|ng |rom gm@||@com  Tue Jul 21 22:57:39 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Tue, 21 Jul 2020 16:57:39 -0400
Subject: [R-pkg-devel] [External] Re: incomplete gamma function Fortran
 subroutine
In-Reply-To: <alpine.DEB.2.21.2007211532070.3754@luke-Latitude-7480>
References: <SN6PR10MB24320FB49D293F4EE763AAB99F780@SN6PR10MB2432.namprd10.prod.outlook.com>
 <ed409571-52c6-2b99-46a9-6e47f08e06be@gmail.com>
 <SN6PR10MB2432CEF2D651057F1AF1EA839F780@SN6PR10MB2432.namprd10.prod.outlook.com>
 <BL0PR06MB4371CB2D42F57CEB54967F73C6780@BL0PR06MB4371.namprd06.prod.outlook.com>
 <SN6PR10MB24320D7C30C2AAAE7D56CEE79F780@SN6PR10MB2432.namprd10.prod.outlook.com>
 <alpine.DEB.2.21.2007211532070.3754@luke-Latitude-7480>
Message-ID: <59889da2-0e8a-fcd1-d3b5-fe1dd2130962@gmail.com>

 ? Interesting.? It looks like the way to make use of this is to combine 
the information in section 6.7.1 ("Distribution functions", including 
pgamma ...) with section 6.6 "Calling C from Fortran and vice versa" ?

On 7/21/20 4:33 PM, luke-tierney at uiowa.edu wrote:
> Looking at this section of WRE may help:
>
> https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Numerical-analysis-subroutines 
>
>
> Best,
>
> luke
>
> On Tue, 21 Jul 2020, Wang, Zhu wrote:
>
>> Thanks to Ben and John. Perhaps the program should call pgamma in R 
>> and pass the number to Fortran. Calling some Fortran subroutines 
>> older than R can trigger concerns when submitting the package to the 
>> CRAN.
>>
>> Best,
>> Zhu
>>
>> -----Original Message-----
>> From: John P. Nolan <jpnolan at american.edu>
>> Sent: Tuesday, July 21, 2020 1:43 PM
>> To: Wang, Zhu <wangz1 at uthscsa.edu>; Ben Bolker <bbolker at gmail.com>; 
>> r-package-devel at r-project.org
>> Subject: RE: [R-pkg-devel] incomplete gamma function Fortran subroutine
>>
>> As others have said, built-in function pgamma is a (normalized) 
>> version of the incomplete gamma function!?? John
>>
>> -----Original Message-----
>> From: R-package-devel <r-package-devel-bounces at r-project.org> On 
>> Behalf Of Wang, Zhu
>> Sent: Tuesday, July 21, 2020 2:16 PM
>> To: Ben Bolker <bbolker at gmail.com>; r-package-devel at r-project.org
>> Subject: Re: [R-pkg-devel] incomplete gamma function Fortran subroutine
>>
>> External Email: Use caution with links and attachments.
>>
>> Sorry for not making myself clear: The Fortran subroutine in an R 
>> package needs to call incomplete gamma function.
>>
>> -----Original Message-----
>> From: R-package-devel <r-package-devel-bounces at r-project.org> On 
>> Behalf Of Ben Bolker
>> Sent: Tuesday, July 21, 2020 12:54 PM
>> To: r-package-devel at r-project.org
>> Subject: Re: [R-pkg-devel] incomplete gamma function Fortran subroutine
>>
>> ??? Is there a reason not to use pgamma(), possibly adjusted by a 
>> (de-)normalizing constant??? (See detailed notes in ?pgamma)
>>
>> On 7/21/20 1:44 PM, Wang, Zhu wrote:
>>> Hello,
>>>
>>> In an R function within a package, I would like to call a Fortran 
>>> subroutine to compute lower gamma function. Any advice will be 
>>> appreciated.
>>>
>>> Thanks!
>>>
>>> Zhu Wang
>>>
>>> ????? [[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mail
>>> man_listinfo_r-2Dpackage-2Ddevel&d=DwIGaQ&c=U0G0XJAMhEk_X0GAGzCL7Q&r=7
>>> rQvU8hscCTWlvO-F5wI2-2eTiW40XI5qUKda0AnbG0&m=Y5sTjoEyQhEnvYqP-rmi1Pmvi
>>> Z_5jj7ur9P8ujvLiBc&s=w0p6b_yBQ1jDH3amMKQGvmEKYJD-BAid_CphFO37yu0&e=
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list 
>> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Dpackage-2Ddevel&d=DwIGaQ&c=U0G0XJAMhEk_X0GAGzCL7Q&r=7rQvU8hscCTWlvO-F5wI2-2eTiW40XI5qUKda0AnbG0&m=Y5sTjoEyQhEnvYqP-rmi1PmviZ_5jj7ur9P8ujvLiBc&s=w0p6b_yBQ1jDH3amMKQGvmEKYJD-BAid_CphFO37yu0&e=
>> ______________________________________________
>> R-package-devel at r-project.org mailing list 
>> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Dpackage-2Ddevel&d=DwIGaQ&c=U0G0XJAMhEk_X0GAGzCL7Q&r=7rQvU8hscCTWlvO-F5wI2-2eTiW40XI5qUKda0AnbG0&m=Y5sTjoEyQhEnvYqP-rmi1PmviZ_5jj7ur9P8ujvLiBc&s=w0p6b_yBQ1jDH3amMKQGvmEKYJD-BAid_CphFO37yu0&e=
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>


From w@ngz1 @end|ng |rom uth@c@@@edu  Tue Jul 21 23:01:42 2020
From: w@ngz1 @end|ng |rom uth@c@@@edu (Wang, Zhu)
Date: Tue, 21 Jul 2020 21:01:42 +0000
Subject: [R-pkg-devel] [External] Re: incomplete gamma function Fortran
 subroutine
In-Reply-To: <59889da2-0e8a-fcd1-d3b5-fe1dd2130962@gmail.com>
References: <SN6PR10MB24320FB49D293F4EE763AAB99F780@SN6PR10MB2432.namprd10.prod.outlook.com>
 <ed409571-52c6-2b99-46a9-6e47f08e06be@gmail.com>
 <SN6PR10MB2432CEF2D651057F1AF1EA839F780@SN6PR10MB2432.namprd10.prod.outlook.com>
 <BL0PR06MB4371CB2D42F57CEB54967F73C6780@BL0PR06MB4371.namprd06.prod.outlook.com>
 <SN6PR10MB24320D7C30C2AAAE7D56CEE79F780@SN6PR10MB2432.namprd10.prod.outlook.com>
 <alpine.DEB.2.21.2007211532070.3754@luke-Latitude-7480>
 <59889da2-0e8a-fcd1-d3b5-fe1dd2130962@gmail.com>
Message-ID: <SN6PR10MB2432033BB15E0E49704F40B39F780@SN6PR10MB2432.namprd10.prod.outlook.com>

Indeed, that is the piece I missed completely! Glad that I didn't try to invent wheels.
Thanks,
Zhu

-----Original Message-----
From: Ben Bolker <bbolker at gmail.com> 
Sent: Tuesday, July 21, 2020 3:58 PM
To: luke-tierney at uiowa.edu; Wang, Zhu <wangz1 at uthscsa.edu>
Cc: John P. Nolan <jpnolan at american.edu>; r-package-devel at r-project.org
Subject: Re: [External] Re: [R-pkg-devel] incomplete gamma function Fortran subroutine

 ? Interesting.? It looks like the way to make use of this is to combine the information in section 6.7.1 ("Distribution functions", including pgamma ...) with section 6.6 "Calling C from Fortran and vice versa" ?

On 7/21/20 4:33 PM, luke-tierney at uiowa.edu wrote:
> Looking at this section of WRE may help:
>
> https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Numerical
> -analysis-subroutines
>
>
> Best,
>
> luke
>
> On Tue, 21 Jul 2020, Wang, Zhu wrote:
>
>> Thanks to Ben and John. Perhaps the program should call pgamma in R 
>> and pass the number to Fortran. Calling some Fortran subroutines 
>> older than R can trigger concerns when submitting the package to the 
>> CRAN.
>>
>> Best,
>> Zhu
>>
>> -----Original Message-----
>> From: John P. Nolan <jpnolan at american.edu>
>> Sent: Tuesday, July 21, 2020 1:43 PM
>> To: Wang, Zhu <wangz1 at uthscsa.edu>; Ben Bolker <bbolker at gmail.com>; 
>> r-package-devel at r-project.org
>> Subject: RE: [R-pkg-devel] incomplete gamma function Fortran 
>> subroutine
>>
>> As others have said, built-in function pgamma is a (normalized) 
>> version of the incomplete gamma function!?? John
>>
>> -----Original Message-----
>> From: R-package-devel <r-package-devel-bounces at r-project.org> On 
>> Behalf Of Wang, Zhu
>> Sent: Tuesday, July 21, 2020 2:16 PM
>> To: Ben Bolker <bbolker at gmail.com>; r-package-devel at r-project.org
>> Subject: Re: [R-pkg-devel] incomplete gamma function Fortran 
>> subroutine
>>
>> External Email: Use caution with links and attachments.
>>
>> Sorry for not making myself clear: The Fortran subroutine in an R 
>> package needs to call incomplete gamma function.
>>
>> -----Original Message-----
>> From: R-package-devel <r-package-devel-bounces at r-project.org> On 
>> Behalf Of Ben Bolker
>> Sent: Tuesday, July 21, 2020 12:54 PM
>> To: r-package-devel at r-project.org
>> Subject: Re: [R-pkg-devel] incomplete gamma function Fortran 
>> subroutine
>>
>> ??? Is there a reason not to use pgamma(), possibly adjusted by a 
>> (de-)normalizing constant??? (See detailed notes in ?pgamma)
>>
>> On 7/21/20 1:44 PM, Wang, Zhu wrote:
>>> Hello,
>>>
>>> In an R function within a package, I would like to call a Fortran 
>>> subroutine to compute lower gamma function. Any advice will be 
>>> appreciated.
>>>
>>> Thanks!
>>>
>>> Zhu Wang
>>>
>>> ????? [[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list 
>>> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_ma
>>> il
>>> man_listinfo_r-2Dpackage-2Ddevel&d=DwIGaQ&c=U0G0XJAMhEk_X0GAGzCL7Q&r
>>> =7 
>>> rQvU8hscCTWlvO-F5wI2-2eTiW40XI5qUKda0AnbG0&m=Y5sTjoEyQhEnvYqP-rmi1Pm
>>> vi 
>>> Z_5jj7ur9P8ujvLiBc&s=w0p6b_yBQ1jDH3amMKQGvmEKYJD-BAid_CphFO37yu0&e=
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list 
>> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mai
>> lman_listinfo_r-2Dpackage-2Ddevel&d=DwIGaQ&c=U0G0XJAMhEk_X0GAGzCL7Q&r
>> =7rQvU8hscCTWlvO-F5wI2-2eTiW40XI5qUKda0AnbG0&m=Y5sTjoEyQhEnvYqP-rmi1P
>> mviZ_5jj7ur9P8ujvLiBc&s=w0p6b_yBQ1jDH3amMKQGvmEKYJD-BAid_CphFO37yu0&e
>> = ______________________________________________
>> R-package-devel at r-project.org mailing list 
>> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mai
>> lman_listinfo_r-2Dpackage-2Ddevel&d=DwIGaQ&c=U0G0XJAMhEk_X0GAGzCL7Q&r
>> =7rQvU8hscCTWlvO-F5wI2-2eTiW40XI5qUKda0AnbG0&m=Y5sTjoEyQhEnvYqP-rmi1P
>> mviZ_5jj7ur9P8ujvLiBc&s=w0p6b_yBQ1jDH3amMKQGvmEKYJD-BAid_CphFO37yu0&e
>> = ______________________________________________
>> R-package-devel at r-project.org mailing list 
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>

From bbo|ker @end|ng |rom gm@||@com  Tue Jul 21 23:03:31 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Tue, 21 Jul 2020 17:03:31 -0400
Subject: [R-pkg-devel] [External] Re: incomplete gamma function Fortran
 subroutine
In-Reply-To: <SN6PR10MB2432033BB15E0E49704F40B39F780@SN6PR10MB2432.namprd10.prod.outlook.com>
References: <SN6PR10MB24320FB49D293F4EE763AAB99F780@SN6PR10MB2432.namprd10.prod.outlook.com>
 <ed409571-52c6-2b99-46a9-6e47f08e06be@gmail.com>
 <SN6PR10MB2432CEF2D651057F1AF1EA839F780@SN6PR10MB2432.namprd10.prod.outlook.com>
 <BL0PR06MB4371CB2D42F57CEB54967F73C6780@BL0PR06MB4371.namprd06.prod.outlook.com>
 <SN6PR10MB24320D7C30C2AAAE7D56CEE79F780@SN6PR10MB2432.namprd10.prod.outlook.com>
 <alpine.DEB.2.21.2007211532070.3754@luke-Latitude-7480>
 <59889da2-0e8a-fcd1-d3b5-fe1dd2130962@gmail.com>
 <SN6PR10MB2432033BB15E0E49704F40B39F780@SN6PR10MB2432.namprd10.prod.outlook.com>
Message-ID: <72fddd72-930d-dcf1-8b1e-c49a59a627d0@gmail.com>

 ? I didn't find it until I said "before I compose a snarky reply to the 
list I'd better search for "Fortran" through *all* of WRE to make sure 
it's not there somewhere ..."

On 7/21/20 5:01 PM, Wang, Zhu wrote:
> Indeed, that is the piece I missed completely! Glad that I didn't try to invent wheels.
> Thanks,
> Zhu
>
> -----Original Message-----
> From: Ben Bolker <bbolker at gmail.com>
> Sent: Tuesday, July 21, 2020 3:58 PM
> To: luke-tierney at uiowa.edu; Wang, Zhu <wangz1 at uthscsa.edu>
> Cc: John P. Nolan <jpnolan at american.edu>; r-package-devel at r-project.org
> Subject: Re: [External] Re: [R-pkg-devel] incomplete gamma function Fortran subroutine
>
>   ? Interesting.? It looks like the way to make use of this is to combine the information in section 6.7.1 ("Distribution functions", including pgamma ...) with section 6.6 "Calling C from Fortran and vice versa" ?
>
> On 7/21/20 4:33 PM, luke-tierney at uiowa.edu wrote:
>> Looking at this section of WRE may help:
>>
>> https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Numerical
>> -analysis-subroutines
>>
>>
>> Best,
>>
>> luke
>>
>> On Tue, 21 Jul 2020, Wang, Zhu wrote:
>>
>>> Thanks to Ben and John. Perhaps the program should call pgamma in R
>>> and pass the number to Fortran. Calling some Fortran subroutines
>>> older than R can trigger concerns when submitting the package to the
>>> CRAN.
>>>
>>> Best,
>>> Zhu
>>>
>>> -----Original Message-----
>>> From: John P. Nolan <jpnolan at american.edu>
>>> Sent: Tuesday, July 21, 2020 1:43 PM
>>> To: Wang, Zhu <wangz1 at uthscsa.edu>; Ben Bolker <bbolker at gmail.com>;
>>> r-package-devel at r-project.org
>>> Subject: RE: [R-pkg-devel] incomplete gamma function Fortran
>>> subroutine
>>>
>>> As others have said, built-in function pgamma is a (normalized)
>>> version of the incomplete gamma function!?? John
>>>
>>> -----Original Message-----
>>> From: R-package-devel <r-package-devel-bounces at r-project.org> On
>>> Behalf Of Wang, Zhu
>>> Sent: Tuesday, July 21, 2020 2:16 PM
>>> To: Ben Bolker <bbolker at gmail.com>; r-package-devel at r-project.org
>>> Subject: Re: [R-pkg-devel] incomplete gamma function Fortran
>>> subroutine
>>>
>>> External Email: Use caution with links and attachments.
>>>
>>> Sorry for not making myself clear: The Fortran subroutine in an R
>>> package needs to call incomplete gamma function.
>>>
>>> -----Original Message-----
>>> From: R-package-devel <r-package-devel-bounces at r-project.org> On
>>> Behalf Of Ben Bolker
>>> Sent: Tuesday, July 21, 2020 12:54 PM
>>> To: r-package-devel at r-project.org
>>> Subject: Re: [R-pkg-devel] incomplete gamma function Fortran
>>> subroutine
>>>
>>>  ??? Is there a reason not to use pgamma(), possibly adjusted by a
>>> (de-)normalizing constant??? (See detailed notes in ?pgamma)
>>>
>>> On 7/21/20 1:44 PM, Wang, Zhu wrote:
>>>> Hello,
>>>>
>>>> In an R function within a package, I would like to call a Fortran
>>>> subroutine to compute lower gamma function. Any advice will be
>>>> appreciated.
>>>>
>>>> Thanks!
>>>>
>>>> Zhu Wang
>>>>
>>>>  ????? [[alternative HTML version deleted]]
>>>>
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_ma
>>>> il
>>>> man_listinfo_r-2Dpackage-2Ddevel&d=DwIGaQ&c=U0G0XJAMhEk_X0GAGzCL7Q&r
>>>> =7
>>>> rQvU8hscCTWlvO-F5wI2-2eTiW40XI5qUKda0AnbG0&m=Y5sTjoEyQhEnvYqP-rmi1Pm
>>>> vi
>>>> Z_5jj7ur9P8ujvLiBc&s=w0p6b_yBQ1jDH3amMKQGvmEKYJD-BAid_CphFO37yu0&e=
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mai
>>> lman_listinfo_r-2Dpackage-2Ddevel&d=DwIGaQ&c=U0G0XJAMhEk_X0GAGzCL7Q&r
>>> =7rQvU8hscCTWlvO-F5wI2-2eTiW40XI5qUKda0AnbG0&m=Y5sTjoEyQhEnvYqP-rmi1P
>>> mviZ_5jj7ur9P8ujvLiBc&s=w0p6b_yBQ1jDH3amMKQGvmEKYJD-BAid_CphFO37yu0&e
>>> = ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mai
>>> lman_listinfo_r-2Dpackage-2Ddevel&d=DwIGaQ&c=U0G0XJAMhEk_X0GAGzCL7Q&r
>>> =7rQvU8hscCTWlvO-F5wI2-2eTiW40XI5qUKda0AnbG0&m=Y5sTjoEyQhEnvYqP-rmi1P
>>> mviZ_5jj7ur9P8ujvLiBc&s=w0p6b_yBQ1jDH3amMKQGvmEKYJD-BAid_CphFO37yu0&e
>>> = ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>


From he|mut@@chuetz @end|ng |rom beb@c@@t  Wed Jul 22 14:36:06 2020
From: he|mut@@chuetz @end|ng |rom beb@c@@t (=?UTF-8?Q?Helmut_Sch=c3=bctz?=)
Date: Wed, 22 Jul 2020 14:36:06 +0200
Subject: [R-pkg-devel] Error in CHECK caused by dev.off()
Message-ID: <15fca50d-de12-f13b-af24-aabebdf22d8a@bebac.at>

Dear all,

I have two variables, foo and bar. The first is TRUE if a png should be 
created and the second is TRUE if an already existing one should be 
overwritten.
At the end of the plot I had
if (foo | (foo & bar)) dev.off()
This worked as expected in all versions of my package built in R up to 
v3.6.3. However, when I CHECK the package in v4.0.2 I get:
 > grDevices::dev.off()
Error in grDevices::dev.off() :
 ? cannot shut down device 1 (the null device)
Execution halted

I tried:
if (foo | (foo & bar)) {
 ? dev <- dev.list()
 ? if (!is.null(dev)) {
 ??? if (dev == 2) invisible(dev.off())
 ? }
}
without success (same error).

Even the more general
if (foo | (foo & bar)) {
 ? graphics.off()
}
did not work.

The plot is called only in an example of one man-page -- though embedded 
in \donttest{}.
Even if I set both foo and bar to FALSE (i.e., the respective part of 
the code should not be executed at all), I get the same error.

Any ideas/suggestions?

Regards,
Helmut

-- 
Ing. Helmut Sch?tz
BEBAC?? Consultancy Services for
Bioequivalence and Bioavailability Studies
Neubaugasse 36/11
1070 Vienna, Austria
W https://bebac.at/
F https://forum.bebac.at/


From @ergue|@@oko| @end|ng |rom gm@||@com  Wed Jul 22 15:51:08 2020
From: @ergue|@@oko| @end|ng |rom gm@||@com (Serguei Sokol)
Date: Wed, 22 Jul 2020 15:51:08 +0200
Subject: [R-pkg-devel] Error in CHECK caused by dev.off()
In-Reply-To: <15fca50d-de12-f13b-af24-aabebdf22d8a@bebac.at>
References: <15fca50d-de12-f13b-af24-aabebdf22d8a@bebac.at>
Message-ID: <1da2909d-7469-1065-78da-e9b1a7c7a2eb@gmail.com>

Le 22/07/2020 ? 14:36, Helmut Sch?tz a ?crit?:
> Dear all,
> 
> I have two variables, foo and bar. The first is TRUE if a png should be 
> created and the second is TRUE if an already existing one should be 
> overwritten.
> At the end of the plot I had
> if (foo | (foo & bar)) dev.off()
> This worked as expected in all versions of my package built in R up to 
> v3.6.3. However, when I CHECK the package in v4.0.2 I get:
>  > grDevices::dev.off()
> Error in grDevices::dev.off() :
>  ? cannot shut down device 1 (the null device)
> Execution halted
> 
> I tried:
> if (foo | (foo & bar)) {
>  ? dev <- dev.list()
>  ? if (!is.null(dev)) {
>  ??? if (dev == 2) invisible(dev.off())
>  ? }
> }
> without success (same error).
> 
> Even the more general
> if (foo | (foo & bar)) {
>  ? graphics.off()
> }
> did not work.
> 
> The plot is called only in an example of one man-page -- though embedded 
> in \donttest{}.
> Even if I set both foo and bar to FALSE (i.e., the respective part of 
> the code should not be executed at all), I get the same error.
Hmm... I see 2 possibilities for still getting an error while the 
concerned part of code is not supposed to be run:

  - either you are running not updated version of your package;
  - or the error comes from some other place of the code.

Sorry but without a minimal reproducible example I cannot help more.
Best,
Serguei.


From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Wed Jul 22 16:00:56 2020
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Wed, 22 Jul 2020 07:00:56 -0700
Subject: [R-pkg-devel] Error in CHECK caused by dev.off()
In-Reply-To: <15fca50d-de12-f13b-af24-aabebdf22d8a@bebac.at>
References: <15fca50d-de12-f13b-af24-aabebdf22d8a@bebac.at>
Message-ID: <5DDF0CAC-B44C-4F6E-85FC-35E74F3C4F3A@dcn.davis.ca.us>

I suspect your foo and bar variables are not logical anymore... insufficient info. However, why aren't you using short-circuit && and || operators?

On July 22, 2020 5:36:06 AM PDT, "Helmut Sch?tz" <helmut.schuetz at bebac.at> wrote:
>Dear all,
>
>I have two variables, foo and bar. The first is TRUE if a png should be
>
>created and the second is TRUE if an already existing one should be 
>overwritten.
>At the end of the plot I had
>if (foo | (foo & bar)) dev.off()
>This worked as expected in all versions of my package built in R up to 
>v3.6.3. However, when I CHECK the package in v4.0.2 I get:
> > grDevices::dev.off()
>Error in grDevices::dev.off() :
> ? cannot shut down device 1 (the null device)
>Execution halted
>
>I tried:
>if (foo | (foo & bar)) {
> ? dev <- dev.list()
> ? if (!is.null(dev)) {
> ??? if (dev == 2) invisible(dev.off())
> ? }
>}
>without success (same error).
>
>Even the more general
>if (foo | (foo & bar)) {
> ? graphics.off()
>}
>did not work.
>
>The plot is called only in an example of one man-page -- though
>embedded 
>in \donttest{}.
>Even if I set both foo and bar to FALSE (i.e., the respective part of 
>the code should not be executed at all), I get the same error.
>
>Any ideas/suggestions?
>
>Regards,
>Helmut

-- 
Sent from my phone. Please excuse my brevity.


From murdoch@dunc@n @end|ng |rom gm@||@com  Wed Jul 22 16:59:36 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Wed, 22 Jul 2020 10:59:36 -0400
Subject: [R-pkg-devel] Error in CHECK caused by dev.off()
In-Reply-To: <15fca50d-de12-f13b-af24-aabebdf22d8a@bebac.at>
References: <15fca50d-de12-f13b-af24-aabebdf22d8a@bebac.at>
Message-ID: <6f718b19-ed4f-90a8-9508-0b9c4d65fd5d@gmail.com>

On 22/07/2020 8:36 a.m., Helmut Sch?tz wrote:
> Dear all,
> 
> I have two variables, foo and bar. The first is TRUE if a png should be
> created and the second is TRUE if an already existing one should be
> overwritten.
> At the end of the plot I had
> if (foo | (foo & bar)) dev.off()
> This worked as expected in all versions of my package built in R up to
> v3.6.3. However, when I CHECK the package in v4.0.2 I get:
>   > grDevices::dev.off()
> Error in grDevices::dev.off() :
>   ? cannot shut down device 1 (the null device)
> Execution halted
> 
> I tried:
> if (foo | (foo & bar)) {

Assuming that foo and bar are each length one variables, this test is 
logically equivalent to

   if (foo) {

Is that really what you intended?

Duncan Murdoch

>   ? dev <- dev.list()
>   ? if (!is.null(dev)) {
>   ??? if (dev == 2) invisible(dev.off())
>   ? }
> }
> without success (same error).
> 
> Even the more general
> if (foo | (foo & bar)) {
>   ? graphics.off()
> }
> did not work.
> 
> The plot is called only in an example of one man-page -- though embedded
> in \donttest{}.
> Even if I set both foo and bar to FALSE (i.e., the respective part of
> the code should not be executed at all), I get the same error.
> 
> Any ideas/suggestions?
> 
> Regards,
> Helmut
>


From he|mut@@chuetz @end|ng |rom beb@c@@t  Wed Jul 22 19:25:55 2020
From: he|mut@@chuetz @end|ng |rom beb@c@@t (=?UTF-8?Q?Helmut_Sch=c3=bctz?=)
Date: Wed, 22 Jul 2020 19:25:55 +0200
Subject: [R-pkg-devel] Error in CHECK caused by dev.off()
In-Reply-To: <1da2909d-7469-1065-78da-e9b1a7c7a2eb@gmail.com>
References: <15fca50d-de12-f13b-af24-aabebdf22d8a@bebac.at>
 <1da2909d-7469-1065-78da-e9b1a7c7a2eb@gmail.com>
Message-ID: <1d15db6a-27d3-91ca-fd22-79d94f5d61b6@bebac.at>

Hi Serguei,

Serguei Sokol wrote on 2020-07-22 15:51:
> Hmm... I see 2 possibilities for still getting an error while the 
> concerned part of code is not supposed to be run:
>
> ?- either you are running not updated version of your package;

I _can_ built the package and it runs as intended. Only the CHECK throws 
the error.

> ?- or the error comes from some other place of the code.

Closing the device is required only _once_ in the entire package.
In my NAMESPACE I have (and had in all previous versions):
importFrom(grDevices, png, graphics.off, dev.list, dev.off)

> Sorry but without a minimal reproducible example I cannot help more.

The problem is that I cannot reproduce it as well. Only CHECK laments 
about dev.off() which I changed to graphics.off() in the meantime.

library(grDevices)
foo <- TRUE?? # shall we plot?
png.path <- "~/" # user's home folder
png.path <- normalizePath(png.path)
if (foo) {
 ? png(paste0(png.path, "test.png"), width = 480, height = 480, 
pointsize = 12)
}
plot(x = 0:1, y = 0:1, type = "l", xlab = "x", ylab = "y")
if (foo) {
 ? graphics.off()
}

Best,
Helmut

-- 
Ing. Helmut Sch?tz
BEBAC?? Consultancy Services for
Bioequivalence and Bioavailability Studies
Neubaugasse 36/11
1070 Vienna, Austria
T +43 1 2311746
M +43 699 10792458
E helmut.schuetz at bebac.at
W https://bebac.at/
C https://bebac.at/Contact.htm
F https://forum.bebac.at/
GIS 24799386, VAT?ATU61115625, DUNS?300370568, EORI?ATEOS1000096209
GDPR https://bebac.at/Data-Protection.htm


From murdoch@dunc@n @end|ng |rom gm@||@com  Wed Jul 22 21:42:55 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Wed, 22 Jul 2020 15:42:55 -0400
Subject: [R-pkg-devel] Error in CHECK caused by dev.off()
In-Reply-To: <1d15db6a-27d3-91ca-fd22-79d94f5d61b6@bebac.at>
References: <15fca50d-de12-f13b-af24-aabebdf22d8a@bebac.at>
 <1da2909d-7469-1065-78da-e9b1a7c7a2eb@gmail.com>
 <1d15db6a-27d3-91ca-fd22-79d94f5d61b6@bebac.at>
Message-ID: <f3fc57e5-8450-fef3-dc9d-13c98f211050@gmail.com>

On 22/07/2020 1:25 p.m., Helmut Sch?tz wrote:
> Hi Serguei,
> 
> Serguei Sokol wrote on 2020-07-22 15:51:
>> Hmm... I see 2 possibilities for still getting an error while the
>> concerned part of code is not supposed to be run:
>>
>>  ?- either you are running not updated version of your package;
> 
> I _can_ built the package and it runs as intended. Only the CHECK throws
> the error.
> 
>>  ?- or the error comes from some other place of the code.
> 
> Closing the device is required only _once_ in the entire package.
> In my NAMESPACE I have (and had in all previous versions):
> importFrom(grDevices, png, graphics.off, dev.list, dev.off)
> 
>> Sorry but without a minimal reproducible example I cannot help more.
> 
> The problem is that I cannot reproduce it as well. Only CHECK laments
> about dev.off() which I changed to graphics.off() in the meantime.
> 
> library(grDevices)
> foo <- TRUE?? # shall we plot?
> png.path <- "~/" # user's home folder
> png.path <- normalizePath(png.path)
> if (foo) {
>   ? png(paste0(png.path, "test.png"), width = 480, height = 480,
> pointsize = 12)
> }
> plot(x = 0:1, y = 0:1, type = "l", xlab = "x", ylab = "y")
> if (foo) {
>   ? graphics.off()
> }

You don't test whether the call to png() succeeded.  During a check, it 
probably wouldn't, because you aren't allowed to write to "~/".  Your 
package should be writing to tempdir(), or a location entered by the user.

Duncan Murdoch


From @eb@meyer @end|ng |rom |@u@de  Wed Jul 22 23:12:36 2020
From: @eb@meyer @end|ng |rom |@u@de (Sebastian Meyer)
Date: Wed, 22 Jul 2020 23:12:36 +0200
Subject: [R-pkg-devel] import 'as' from another package
In-Reply-To: <CANnL8gqKfrFjE6cLO2FEULeB72auA+aR-juD7viWYM9aWY1KNw@mail.gmail.com>
References: <CANnL8gpOa2GUFLQ9-fMvNmXi3RSPiuZ0NcRtQupR-87ZRPOFRQ@mail.gmail.com>
 <e474baff-217f-daba-1688-accb7461d455@gmail.com>
 <CANnL8gpxkr70HimCWwrqDx_3Mg0wK7OYnWS11xUhOLx7r5HZkQ@mail.gmail.com>
 <a0e918ce-089a-24b3-5c5b-3c7f364ecb28@gmail.com>
 <3220DD20-FFC4-4D8C-9A49-989E3DBED013@fau.de>
 <CANnL8gqKfrFjE6cLO2FEULeB72auA+aR-juD7viWYM9aWY1KNw@mail.gmail.com>
Message-ID: <cf816ed3-01d3-0772-126c-5df8a68ebe7b@fau.de>

Following WRE 1.5.6 (Namespaces with S4 classes and methods), you should
have "Depends: methods" in your DESCRIPTION, and "import(methods)" or a
more selective "importFrom(methods, ...)" directive in your NAMESPACE.

Then you would usually use the NAMESPACE directive

    importMethodsFrom(package, generic)

to explicitly import S4 methods exported from another package.
However, the raster package does not do

    exportMethods(coerce)

so if you try

    importMethodsFrom(raster, coerce)

you will get

> Error: object ?coerce? is not exported by 'namespace:raster'

when trying to install your package (also during R CMD check, of course).

To solve this problem, you could either

- import raster's entire NAMESPACE via import(raster)

- or ask maintainer("raster") to exportMethods(coerce)

- or do

    importClassesFrom(raster, RasterLayer)

which will magically make the corresponding coerce methods available as
well.

HTH!

	Sebastian Meyer


Am 21.07.20 um 00:41 schrieb Tim Keitt:
> Thanks for pointing to the bug.
> 
> Now I am finding I cannot use the 'as' definitions from 'raster' without
> loading the package. Do I need an?@import directive that specifies the
> definitions in the 'raster' package? My understanding is that the
> 'setAs' function generates a 'coerce,...' signature but I'm not sure how
> to import it to my package.
> 
> Thanks again.
> 
> THK
> 
> On Mon, Jul 20, 2020 at 2:25 PM Sebastian Meyer <seb.meyer at fau.de
> <mailto:seb.meyer at fau.de>> wrote:
> 
>     Yes, indeed, it is confusing. You don't need to file a new bug
>     report, though. There is one already:
> 
>     https://bugs.r-project.org/bugzilla/show_bug.cgi?id=17179
> 
>     Please feel free to comment there. This thread could serve as
>     another confirmation. :-)
> 
>     Best regards,
>     Sebastian
> 
>     Am 20. Juli 2020 18:36:21 MESZ schrieb Ben Bolker <bbolker at gmail.com
>     <mailto:bbolker at gmail.com>>:
>     > ?? I think this is a classic confusing R message.? Try adding methods
>     >to the Imports: statement in your DESCRIPTION file and see if that
>     >helps. (Maybe I should file a bug report about that error message - it
>     >confuses me every time.)
>     >
>     >On 7/20/20 12:34 PM, Tim Keitt wrote:
>     >> It works but "check" gives
>     >>
>     >> > checking package dependencies ... ERROR
>     >> ? Namespace dependency not required: ?methods?
>     >>
>     >> THK
>     >>
>     >> On Mon, Jul 20, 2020 at 11:24 AM Ben Bolker <bbolker at gmail.com
>     <mailto:bbolker at gmail.com>
>     >> <mailto:bbolker at gmail.com <mailto:bbolker at gmail.com>>> wrote:
>     >>
>     >>? ? ?@importFrom methods as
>     >>
>     >>? ? ??
>     >>
>     >>? ? ?On 7/20/20 12:06 PM, Tim Keitt wrote:
>     >>? ? ?> I have
>     >>? ? ?>
>     >>? ? ?>? ? if (!inherits(x, "RasterLayer")) x <- as(x, "RasterLayer")
>     >>? ? ?>
>     >>? ? ?> in a package and its not finding the coerce definition from the
>     >>? ? ?raster
>     >>? ? ?> package. I know I need to add an @import roxygen2 directive of
>     >>? ? ?some kind,
>     >>? ? ?> but I'm not sure the correct syntax. My first try generated a
>     >>? ? ?warning that
>     >>? ? ?> it was not needed.
>     >>? ? ?>
>     >>? ? ?> What is the correct way to do this? Or does raster need to
>     >>? ? ?export this
>     >>? ? ?> definition?
>     >>? ? ?>
>     >>? ? ?> THK
>     >>? ? ?>
>     >>? ? ?>? ? ? ?[[alternative HTML version deleted]]
>     >>? ? ?>
>     >>? ? ?> ______________________________________________
>     >>? ? ?> R-package-devel at r-project.org
>     <mailto:R-package-devel at r-project.org>
>     >>? ? ?<mailto:R-package-devel at r-project.org
>     <mailto:R-package-devel at r-project.org>> mailing list
>     >>? ? ?> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>     >>
>     >>? ? ?______________________________________________
>     >>? ? ?R-package-devel at r-project.org
>     <mailto:R-package-devel at r-project.org>
>     >>? ? ?<mailto:R-package-devel at r-project.org
>     <mailto:R-package-devel at r-project.org>> mailing list
>     >>? ? ?https://stat.ethz.ch/mailman/listinfo/r-package-devel
>     >>
>     >
>     >? ? ? ?[[alternative HTML version deleted]]
>     >
>     >______________________________________________
>     >R-package-devel at r-project.org
>     <mailto:R-package-devel at r-project.org> mailing list
>     >https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From he|mut@@chuetz @end|ng |rom beb@c@@t  Wed Jul 22 23:40:31 2020
From: he|mut@@chuetz @end|ng |rom beb@c@@t (=?UTF-8?Q?Helmut_Sch=c3=bctz?=)
Date: Wed, 22 Jul 2020 23:40:31 +0200
Subject: [R-pkg-devel] Error in CHECK caused by dev.off()
In-Reply-To: <f3fc57e5-8450-fef3-dc9d-13c98f211050@gmail.com>
References: <15fca50d-de12-f13b-af24-aabebdf22d8a@bebac.at>
 <1da2909d-7469-1065-78da-e9b1a7c7a2eb@gmail.com>
 <1d15db6a-27d3-91ca-fd22-79d94f5d61b6@bebac.at>
 <f3fc57e5-8450-fef3-dc9d-13c98f211050@gmail.com>
Message-ID: <48dce2a0-85e4-f369-2af4-0a3484c94d7f@bebac.at>



Duncan Murdoch wrote on 2020-07-22 21:42:
> On 22/07/2020 1:25 p.m., Helmut Sch?tz wrote:
>> [...]
>> The problem is that I cannot reproduce it as well. Only CHECK laments
>> about dev.off() which I changed to graphics.off() in the meantime.
>>
>> library(grDevices)
>> foo <- TRUE?? # shall we plot?
>> png.path <- "~/" # user's home folder
>> png.path <- normalizePath(png.path)
>> if (foo) {
>> ? ? png(paste0(png.path, "test.png"), width = 480, height = 480,
>> pointsize = 12)
>> }
>> plot(x = 0:1, y = 0:1, type = "l", xlab = "x", ylab = "y")
>> if (foo) {
>> ? ? graphics.off()
>> }
>
> You don't test whether the call to png() succeeded.
Correct. However,
 ? if (file.exists(paste0(png.path, "test.png"))) graphics.off()
worked in the example but not in the package...

> During a check, it probably wouldn't, because you aren't allowed to 
> write to "~/".? Your package should be writing to tempdir(), or a 
> location entered by the user.

The user is asked to provide a certain path indeed. Only if none is 
provided, the fallback is "~/" (which is always writable). The package 
is intended for "common" users and not "R-geeks". If I would write to 
tempdir(), I guess chances are pretty low that a user will be able to 
locate the file.
What I still fail to understand: CHECK laments about 
grDevices::dev.off() in a certain man page, where I removed the argument 
foo completely in one example (which is within \donttest{}). Hence, the 
entire plotting routine is not executed at all. Furthermore, dev.off() 
is nowhere used, only graphics.off() - now after file.exists().

Regards,
Helmut

-- 
Ing. Helmut Sch?tz
BEBAC?? Consultancy Services for
Bioequivalence and Bioavailability Studies
Neubaugasse 36/11
1070 Vienna, Austria
E helmut.schuetz at bebac.at
W https://bebac.at/
F https://forum.bebac.at/


	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Wed Jul 22 23:48:29 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Wed, 22 Jul 2020 17:48:29 -0400
Subject: [R-pkg-devel] Error in CHECK caused by dev.off()
In-Reply-To: <48dce2a0-85e4-f369-2af4-0a3484c94d7f@bebac.at>
References: <15fca50d-de12-f13b-af24-aabebdf22d8a@bebac.at>
 <1da2909d-7469-1065-78da-e9b1a7c7a2eb@gmail.com>
 <1d15db6a-27d3-91ca-fd22-79d94f5d61b6@bebac.at>
 <f3fc57e5-8450-fef3-dc9d-13c98f211050@gmail.com>
 <48dce2a0-85e4-f369-2af4-0a3484c94d7f@bebac.at>
Message-ID: <4f0c1784-8b57-ab92-c771-9a8449a27732@gmail.com>

On 22/07/2020 5:40 p.m., Helmut Sch?tz wrote:
> 
> 
> Duncan Murdoch wrote on 2020-07-22 21:42:
>> On 22/07/2020 1:25 p.m., Helmut Sch?tz wrote:
>>> [...]
>>> The problem is that I cannot reproduce it as well. Only CHECK laments
>>> about dev.off() which I changed to graphics.off() in the meantime.
>>>
>>> library(grDevices)
>>> foo <- TRUE?? # shall we plot?
>>> png.path <- "~/" # user's home folder
>>> png.path <- normalizePath(png.path)
>>> if (foo) {
>>> ? ? png(paste0(png.path, "test.png"), width = 480, height = 480,
>>> pointsize = 12)
>>> }
>>> plot(x = 0:1, y = 0:1, type = "l", xlab = "x", ylab = "y")
>>> if (foo) {
>>> ? ? graphics.off()
>>> }
>>
>> You don't test whether the call to png() succeeded.
> Correct. However,
>  ? if (file.exists(paste0(png.path, "test.png"))) graphics.off()
> worked in the example but not in the package...
> 
>> During a check, it probably wouldn't, because you aren't allowed to 
>> write to "~/".? Your package should be writing to tempdir(), or a 
>> location entered by the user.
> 
> The user is asked to provide a certain path indeed. Only if none is 
> provided, the fallback is "~/" (which is always writable). 

That disqualifies your package from inclusion on CRAN.  If no 
destination is provided and tempdir() isn't acceptable, you shouldn't 
write anything.  The user may be keeping an irreplaceable piece of 
information in "~/test.png", and your package would destroy it.  It's 
not your decision to make to trespass on the user's file space.

Duncan Murdoch


The package
> is intended for "common" users and not "R-geeks". If I would write to 
> tempdir(), I guess chances are pretty low that a user will be able to 
> locate the file.
> What I still fail to understand: CHECK laments about 
> grDevices::dev.off() in a certain man page, where I removed the argument 
> foo completely in one example (which is within \donttest{}). Hence, the 
> entire plotting routine is not executed at all. Furthermore, dev.off() 
> is nowhere used, only graphics.off() - now after file.exists().
> 
> Regards,
> Helmut
> 
> -- 
> Ing. Helmut Sch?tz
> BEBAC?? Consultancy Services for
> Bioequivalence and Bioavailability Studies
> Neubaugasse 36/11
> 1070 Vienna, Austria
> Ehelmut.schuetz at bebac.at
> Whttps://bebac.at/
> Fhttps://forum.bebac.at/
>


From br|@nk@||@t@ @end|ng |rom gm@||@com  Thu Jul 23 01:05:03 2020
From: br|@nk@||@t@ @end|ng |rom gm@||@com (brian knaus)
Date: Wed, 22 Jul 2020 16:05:03 -0700
Subject: [R-pkg-devel] inappropriate maintainer moniker
Message-ID: <CAEp5mpCNDh11KpWqdmA0MRH43ok5iFHOFKoURwY9wVJ_uJrzPA@mail.gmail.com>

Hello R-pkg-devel,

Our package vcfR,

https://github.com/knausb/vcfR

has been removed from CRAN because they asked me to make changes that I
have not been able to make before their deadline. One of the issues was
that the moniker

"briank.lists"

is not appropriate and that we should see CRAN policy. I interpret "CRAN
policy" here to be the following link.

https://cran.r-project.org/web/packages/policies.html

I'm struggling with *why* is this inappropriate, so I do not understand how
to fix it. My attempt to interpret this issue is that this "moniker" has
been interpreted as a "mailing list" by a CRAN member. The policy states
that a "single designated maintainer (a person, not a mailing list)" should
be included in the DESCRIPTION. However, in vcfR this address is a "single
designated maintainer" (me). It's where I receive mail from various mailing
lists I've signed up for. For example, mail I receive from "R-pkg-devel"
comes to this address. So I feel that this is confusion on the side of
CRAN. Does anyone see a reason for *why* this may be considered
inappropriate?

Thank you!
Brian Knaus

	[[alternative HTML version deleted]]


From bbo|ker @end|ng |rom gm@||@com  Thu Jul 23 02:56:40 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Wed, 22 Jul 2020 20:56:40 -0400
Subject: [R-pkg-devel] inappropriate maintainer moniker
In-Reply-To: <CAEp5mpCNDh11KpWqdmA0MRH43ok5iFHOFKoURwY9wVJ_uJrzPA@mail.gmail.com>
References: <CAEp5mpCNDh11KpWqdmA0MRH43ok5iFHOFKoURwY9wVJ_uJrzPA@mail.gmail.com>
Message-ID: <04ae0a7c-4547-d06e-220a-af7287b0cd51@gmail.com>

 ??? Once all the other issues are resolved, I'd suggest e-mailing 
r-cran-submissions with this explanation and asking for clarification.

 ??? My interpretation would have been the same as yours (i.e., that 
this is an appropriate e-mail address, and that CRAN maintainers may 
have misinterpreted it a mailing list address).

On 7/22/20 7:05 PM, brian knaus wrote:
> Hello R-pkg-devel,
>
> Our package vcfR,
>
> https://github.com/knausb/vcfR
>
> has been removed from CRAN because they asked me to make changes that I
> have not been able to make before their deadline. One of the issues was
> that the moniker
>
> "briank.lists"
>
> is not appropriate and that we should see CRAN policy. I interpret "CRAN
> policy" here to be the following link.
>
> https://cran.r-project.org/web/packages/policies.html
>
> I'm struggling with *why* is this inappropriate, so I do not understand how
> to fix it. My attempt to interpret this issue is that this "moniker" has
> been interpreted as a "mailing list" by a CRAN member. The policy states
> that a "single designated maintainer (a person, not a mailing list)" should
> be included in the DESCRIPTION. However, in vcfR this address is a "single
> designated maintainer" (me). It's where I receive mail from various mailing
> lists I've signed up for. For example, mail I receive from "R-pkg-devel"
> comes to this address. So I feel that this is confusion on the side of
> CRAN. Does anyone see a reason for *why* this may be considered
> inappropriate?
>
> Thank you!
> Brian Knaus
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From he|mut@@chuetz @end|ng |rom beb@c@@t  Thu Jul 23 12:44:06 2020
From: he|mut@@chuetz @end|ng |rom beb@c@@t (=?UTF-8?Q?Helmut_Sch=c3=bctz?=)
Date: Thu, 23 Jul 2020 12:44:06 +0200
Subject: [R-pkg-devel] Error in CHECK caused by dev.off()
In-Reply-To: <4f0c1784-8b57-ab92-c771-9a8449a27732@gmail.com>
References: <15fca50d-de12-f13b-af24-aabebdf22d8a@bebac.at>
 <1da2909d-7469-1065-78da-e9b1a7c7a2eb@gmail.com>
 <1d15db6a-27d3-91ca-fd22-79d94f5d61b6@bebac.at>
 <f3fc57e5-8450-fef3-dc9d-13c98f211050@gmail.com>
 <48dce2a0-85e4-f369-2af4-0a3484c94d7f@bebac.at>
 <4f0c1784-8b57-ab92-c771-9a8449a27732@gmail.com>
Message-ID: <27ab87fa-cd47-a348-c220-d147b0576465@bebac.at>

Dear Duncan,

Duncan Murdoch wrote on 2020-07-22 23:48:
> On 22/07/2020 5:40 p.m., Helmut Sch?tz wrote:
>>
>>
>> Duncan Murdoch wrote on 2020-07-22 21:42:
>>
>>> During a check, it probably wouldn't, because you aren't allowed to 
>>> write to "~/".? Your package should be writing to tempdir(), or a 
>>> location entered by the user.
>>
>> The user is asked to provide a certain path indeed. Only if none is 
>> provided, the fallback is "~/" (which is always writable). 
>
> That disqualifies your package from inclusion on CRAN.

Can you please point to such a policy in the R-Extension Manual? Eight 
versions of the package were accepted by CRAN and three times checked by 
members of the team.

BTW, the package passed on winbuilder:
Your package replicateBE_1.0.14.9000.tar.gz has been built (if working) 
and checked for Windows.
Please check the log files and (if working) the binary package at:
https://win-builder.r-project.org/k2tGfNoY7y88
The files will be removed after roughly 72 hours.
Installation time in seconds: 41
Check time in seconds: 251
Status: 1 NOTE
R version 4.0.2 (2020-06-22)
Hence, I suspect that there is a problem with CHECK which I run locally 
on my machine.

> If no destination is provided and tempdir() isn't acceptable, you 
> shouldn't write anything.? The user may be keeping an irreplaceable 
> piece of information in "~/test.png", and your package would destroy 
> it.? It's not your decision to make to trespass on the user's file space.

The package is used in a regulated environment (e.g., for the FDA). The 
name of the file is always unique, i.e., depends on the input. The code 
checks whether a file with the same name already exist and -- if yes -- 
asks the user to confirm overwriting it.
The man-pages make clear that a path should be provided. If none is 
provided, a message is issued informing the user that results are saved 
in the home directory. By using tempdir() the user would have to move 
all files to another location before the session is closed.

Helmut

-- 
Ing. Helmut Sch?tz
BEBAC?? Consultancy Services for
Bioequivalence and Bioavailability Studies
Neubaugasse 36/11
1070 Vienna, Austria
E helmut.schuetz at bebac.at
W https://bebac.at/
F https://forum.bebac.at/


From d@v|d@corte@@r|ver@ @end|ng |rom gm@||@com  Thu Jul 23 13:16:22 2020
From: d@v|d@corte@@r|ver@ @end|ng |rom gm@||@com (David Cortes)
Date: Thu, 23 Jul 2020 14:16:22 +0300
Subject: [R-pkg-devel] Error in CHECK caused by dev.off()
In-Reply-To: <27ab87fa-cd47-a348-c220-d147b0576465@bebac.at>
References: <15fca50d-de12-f13b-af24-aabebdf22d8a@bebac.at>
 <1da2909d-7469-1065-78da-e9b1a7c7a2eb@gmail.com>
 <1d15db6a-27d3-91ca-fd22-79d94f5d61b6@bebac.at>
 <f3fc57e5-8450-fef3-dc9d-13c98f211050@gmail.com>
 <48dce2a0-85e4-f369-2af4-0a3484c94d7f@bebac.at>
 <4f0c1784-8b57-ab92-c771-9a8449a27732@gmail.com>
 <27ab87fa-cd47-a348-c220-d147b0576465@bebac.at>
Message-ID: <b5b75c270c64d4df3f6b9421efac27afda78c49f.camel@gmail.com>

It is explained here:
https://cran.r-project.org/web/packages/policies.html
Section about source packages:
"Packages should not write in the user?s home filespace (including
clipboards), nor anywhere else on the file system apart from the R
session?s temporary directory (or during installation in the location
pointed to by TMPDIR: and such usage should be cleaned up)."

And I think the policy was different at some point in the past. Anyway,
it's a good policy - just get a temporary folder and your desired file
name - e.g.:
file.path(tempdir(), "your_file.png")

Best regards,
David Cortes

On Thu, 2020-07-23 at 12:44 +0200, Helmut Sch?tz wrote:
> Dear Duncan,
> 
> Duncan Murdoch wrote on 2020-07-22 23:48:
> > On 22/07/2020 5:40 p.m., Helmut Sch?tz wrote:
> > > 
> > > Duncan Murdoch wrote on 2020-07-22 21:42:
> > > 
> > > > During a check, it probably wouldn't, because you aren't
> > > > allowed to 
> > > > write to "~/".  Your package should be writing to tempdir(), or
> > > > a 
> > > > location entered by the user.
> > > 
> > > The user is asked to provide a certain path indeed. Only if none
> > > is 
> > > provided, the fallback is "~/" (which is always writable). 
> > 
> > That disqualifies your package from inclusion on CRAN.
> 
> Can you please point to such a policy in the R-Extension Manual?
> Eight 
> versions of the package were accepted by CRAN and three times checked
> by 
> members of the team.
> 
> BTW, the package passed on winbuilder:
> Your package replicateBE_1.0.14.9000.tar.gz has been built (if
> working) 
> and checked for Windows.
> Please check the log files and (if working) the binary package at:
> https://win-builder.r-project.org/k2tGfNoY7y88
> The files will be removed after roughly 72 hours.
> Installation time in seconds: 41
> Check time in seconds: 251
> Status: 1 NOTE
> R version 4.0.2 (2020-06-22)
> Hence, I suspect that there is a problem with CHECK which I run
> locally 
> on my machine.
> 
> > If no destination is provided and tempdir() isn't acceptable, you 
> > shouldn't write anything.  The user may be keeping an
> > irreplaceable 
> > piece of information in "~/test.png", and your package would
> > destroy 
> > it.  It's not your decision to make to trespass on the user's file
> > space.
> 
> The package is used in a regulated environment (e.g., for the FDA).
> The 
> name of the file is always unique, i.e., depends on the input. The
> code 
> checks whether a file with the same name already exist and -- if yes
> -- 
> asks the user to confirm overwriting it.
> The man-pages make clear that a path should be provided. If none is 
> provided, a message is issued informing the user that results are
> saved 
> in the home directory. By using tempdir() the user would have to
> move 
> all files to another location before the session is closed.
> 
> Helmut
>


From he|mut@@chuetz @end|ng |rom beb@c@@t  Thu Jul 23 14:18:42 2020
From: he|mut@@chuetz @end|ng |rom beb@c@@t (=?UTF-8?Q?Helmut_Sch=c3=bctz?=)
Date: Thu, 23 Jul 2020 14:18:42 +0200
Subject: [R-pkg-devel] Error in CHECK caused by dev.off()
In-Reply-To: <b5b75c270c64d4df3f6b9421efac27afda78c49f.camel@gmail.com>
References: <15fca50d-de12-f13b-af24-aabebdf22d8a@bebac.at>
 <1da2909d-7469-1065-78da-e9b1a7c7a2eb@gmail.com>
 <1d15db6a-27d3-91ca-fd22-79d94f5d61b6@bebac.at>
 <f3fc57e5-8450-fef3-dc9d-13c98f211050@gmail.com>
 <48dce2a0-85e4-f369-2af4-0a3484c94d7f@bebac.at>
 <4f0c1784-8b57-ab92-c771-9a8449a27732@gmail.com>
 <27ab87fa-cd47-a348-c220-d147b0576465@bebac.at>
 <b5b75c270c64d4df3f6b9421efac27afda78c49f.camel@gmail.com>
Message-ID: <92a34f39-bae0-25ff-50e5-ee9323c2e56b@bebac.at>

Hi David,

David Cortes wrote on 2020-07-23 13:16:
> It is explained here:
> https://cran.r-project.org/web/packages/policies.html
> Section about source packages:
> "Packages should not write in the user?s home filespace (including
> clipboards), nor anywhere else on the file system apart from the R
> session?s temporary directory (or during installation in the location
> pointed to by TMPDIR: and such usage should be cleaned up)."

THX; I missed that! However, the policy continues:
"Limited exceptions may be allowed in interactive sessions if the 
package obtains confirmation from the user."
IMHO, this is applicable here (i.e., the user _should_ specify a 
directory (as recommended in the man-pages), and only if none is 
provided, a warning is issued and confirmation obtained).
If I would use tempdir() and the user forgets to copy the result files 
to another location and closes the console, everything would be lost and 
the user would have to start again from scratch. I think that this is 
not very user-friendly.

Helmut

-- 
Ing. Helmut Sch?tz
BEBAC?? Consultancy Services for
Bioequivalence and Bioavailability Studies
Neubaugasse 36/11
1070 Vienna, Austria
E helmut.schuetz at bebac.at
W https://bebac.at/
F https://forum.bebac.at/


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu Jul 23 15:13:31 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 23 Jul 2020 09:13:31 -0400
Subject: [R-pkg-devel] Error in CHECK caused by dev.off()
In-Reply-To: <92a34f39-bae0-25ff-50e5-ee9323c2e56b@bebac.at>
References: <15fca50d-de12-f13b-af24-aabebdf22d8a@bebac.at>
 <1da2909d-7469-1065-78da-e9b1a7c7a2eb@gmail.com>
 <1d15db6a-27d3-91ca-fd22-79d94f5d61b6@bebac.at>
 <f3fc57e5-8450-fef3-dc9d-13c98f211050@gmail.com>
 <48dce2a0-85e4-f369-2af4-0a3484c94d7f@bebac.at>
 <4f0c1784-8b57-ab92-c771-9a8449a27732@gmail.com>
 <27ab87fa-cd47-a348-c220-d147b0576465@bebac.at>
 <b5b75c270c64d4df3f6b9421efac27afda78c49f.camel@gmail.com>
 <92a34f39-bae0-25ff-50e5-ee9323c2e56b@bebac.at>
Message-ID: <14867889-1399-ec2d-f01c-9e0913995d8d@gmail.com>

On 23/07/2020 8:18 a.m., Helmut Sch?tz wrote:
> Hi David,
> 
> David Cortes wrote on 2020-07-23 13:16:
>> It is explained here:
>> https://cran.r-project.org/web/packages/policies.html
>> Section about source packages:
>> "Packages should not write in the user?s home filespace (including
>> clipboards), nor anywhere else on the file system apart from the R
>> session?s temporary directory (or during installation in the location
>> pointed to by TMPDIR: and such usage should be cleaned up)."
> 
> THX; I missed that! However, the policy continues:
> "Limited exceptions may be allowed in interactive sessions if the
> package obtains confirmation from the user."
> IMHO, this is applicable here (i.e., the user _should_ specify a
> directory (as recommended in the man-pages), and only if none is
> provided, a warning is issued and confirmation obtained).
> If I would use tempdir() and the user forgets to copy the result files
> to another location and closes the console, everything would be lost and
> the user would have to start again from scratch. I think that this is
> not very user-friendly.

I would issue an error instead of a warning, and in the error message, 
suggest some code that should work.

Duncan Murdoch


From edd @end|ng |rom deb|@n@org  Thu Jul 23 15:16:37 2020
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Thu, 23 Jul 2020 08:16:37 -0500
Subject: [R-pkg-devel] Error in CHECK caused by dev.off()
In-Reply-To: <27ab87fa-cd47-a348-c220-d147b0576465@bebac.at>
References: <15fca50d-de12-f13b-af24-aabebdf22d8a@bebac.at>
 <1da2909d-7469-1065-78da-e9b1a7c7a2eb@gmail.com>
 <1d15db6a-27d3-91ca-fd22-79d94f5d61b6@bebac.at>
 <f3fc57e5-8450-fef3-dc9d-13c98f211050@gmail.com>
 <48dce2a0-85e4-f369-2af4-0a3484c94d7f@bebac.at>
 <4f0c1784-8b57-ab92-c771-9a8449a27732@gmail.com>
 <27ab87fa-cd47-a348-c220-d147b0576465@bebac.at>
Message-ID: <24345.36277.448655.785117@rob.eddelbuettel.com>


Helmut,

For previous uploads you affirmed that you read the CRAN Repository Policy
which states

     * The code and examples provided in a package should never do anything
       which might be regarded as malicious or anti-social. The following are
       illustrative examples from past experience.

       [...]

          * - Packages should not write in the user?s home filespace
            (including clipboards), nor anywhere else on the file system
            apart from the R session?s temporary directory (or during
            installation in the location pointed to by TMPDIR: and such usage
            should be cleaned up). Installing into the system?s R
            installation (e.g., scripts to its bin directory) is not allowed.

Your package appears to violate that requirement. I would fix the package.

Dirk

-- 
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From @eb@meyer @end|ng |rom |@u@de  Thu Jul 23 16:52:25 2020
From: @eb@meyer @end|ng |rom |@u@de (Sebastian Meyer)
Date: Thu, 23 Jul 2020 16:52:25 +0200
Subject: [R-pkg-devel] Error in CHECK caused by dev.off()
In-Reply-To: <1d15db6a-27d3-91ca-fd22-79d94f5d61b6@bebac.at>
References: <15fca50d-de12-f13b-af24-aabebdf22d8a@bebac.at>
 <1da2909d-7469-1065-78da-e9b1a7c7a2eb@gmail.com>
 <1d15db6a-27d3-91ca-fd22-79d94f5d61b6@bebac.at>
Message-ID: <e85d52e6-fced-a0d7-b87d-7ea60006d618@fau.de>

Back to the original topic: graphics.off() is probably not what you
want. It shuts down *all* open graphics devices, not just the current
one. Example code or your plotting functions should not do that.

Calling graphics.off() in example code will also disturb standard R CMD
check. Before running the examples, R CMD check opens a pdf device to
store any graphics output [1]. You will find the resulting pdf file in
{PACKAGE}.Rcheck/{PACKAGE}-Ex.pdf after R CMD check. [BTW, the plots
therein will be usefully annotated with the names of the originating
help pages.]

R CMD check will eventually fail from trying to close this pdf device
after running the examples [2], if you have already closed all graphics
devices (including this pdf device) through code in your examples. This
is where the

Error in grDevices::dev.off() :
  cannot shut down device 1 (the null device)
Execution halted

actually came from.

Finally, many of the graphics devices are platform-specific and the png
device may not even be available. So it is reasonable to condition on
capabilities("png") or to put such examples in \donttest. The latter is
also used in the example code for grDevices::png, at least in the Unix
version of the man page [3].

HTH!

	Sebastian


[1]: file.path(R.home("share"), "R", "examples-header.R")
[2]: file.path(R.home("share"), "R", "examples-footer.R")
[3]:
https://github.com/r-devel/r-svn/blob/15253534aa1f4e91d33d9b0e3f035daedfe750bb/src/library/grDevices/man/unix/png.Rd#L249-L259

BTW, on Unix-alikes, example(png) writes to files myplot.png,
myplot1.jpeg, and myplot2.jpeg in the current working directory. This
should be fixed.



Am 22.07.20 um 19:25 schrieb Helmut Sch?tz:
> Hi Serguei,
> 
> Serguei Sokol wrote on 2020-07-22 15:51:
>> Hmm... I see 2 possibilities for still getting an error while the
>> concerned part of code is not supposed to be run:
>>
>> ?- either you are running not updated version of your package;
> 
> I _can_ built the package and it runs as intended. Only the CHECK throws
> the error.
> 
>> ?- or the error comes from some other place of the code.
> 
> Closing the device is required only _once_ in the entire package.
> In my NAMESPACE I have (and had in all previous versions):
> importFrom(grDevices, png, graphics.off, dev.list, dev.off)
> 
>> Sorry but without a minimal reproducible example I cannot help more.
> 
> The problem is that I cannot reproduce it as well. Only CHECK laments
> about dev.off() which I changed to graphics.off() in the meantime.
> 
> library(grDevices)
> foo <- TRUE?? # shall we plot?
> png.path <- "~/" # user's home folder
> png.path <- normalizePath(png.path)
> if (foo) {
> ? png(paste0(png.path, "test.png"), width = 480, height = 480, pointsize
> = 12)
> }
> plot(x = 0:1, y = 0:1, type = "l", xlab = "x", ylab = "y")
> if (foo) {
> ? graphics.off()
> }
> 
> Best,
> Helmut
>


From biii m@iii@g oii de@@ey@ws  Thu Jul 23 22:14:05 2020
From: biii m@iii@g oii de@@ey@ws (biii m@iii@g oii de@@ey@ws)
Date: Thu, 23 Jul 2020 16:14:05 -0400
Subject: [R-pkg-devel] Check Error Due to Unicode in Documentation
Message-ID: <02ce01d6612d$d1323740$7396a5c0$@denney.ws>

Hello,

 

I have a personal package that I?d eventually like to clean up and either
find other packages to be homes for the functions or perhaps eventually
release it on CRAN.  To that end, I try to keep package checks working.

 

One of the functions that I use is to try to simplify Unicode text to ASCII.
With that, I tend to receive data that is scientifically-focused to the mu
character should be converted to a ?u? instead of the standard conversion to
?m?.  On top of that, there are at least two Unicode characters that are
visually the mu character, one is the micro character and the other is an
actual lowercase mu.  This function converts both of those to ?u? as
desired.

 

I generate the documentation using roxygen2, but the text in the
documentation aligns with the expected Unicode character, so I think the
issue is not with roxygen.

 

The issue is that Codoc gives the following error:

 

* checking for code/documentation mismatches ... WARNING

Codoc mismatches from documentation object 'unicode_to_ascii':

unicode_to_ascii.character

  Code: function(x, verbose = FALSE, pattern = c("?", "?"), replacement

                 = c("u", "u"), general_

 

But, the code and documentation appear to be the same.  I think that the
issue relates to something with Unicode support in Codoc, but I?m not sure
how to test for that.  The code is here:

 

https://github.com/billdenney/bsd.report/blob/454caf217c5b333af1d65c7e63bbad
4194320e07/R/unicode_to_ascii.R#L28-L31

 

And the documentation is here:

 

https://github.com/billdenney/bsd.report/blob/454caf217c5b333af1d65c7e63bbad
4194320e07/man/unicode_to_ascii.Rd#L17-L24

 

Do you have any suggestions on how to make this code/documentation work with
Codoc?

 

Thanks,

 

Bill


	[[alternative HTML version deleted]]


From he|mut@@chuetz @end|ng |rom beb@c@@t  Thu Jul 23 22:44:41 2020
From: he|mut@@chuetz @end|ng |rom beb@c@@t (=?UTF-8?Q?Helmut_Sch=c3=bctz?=)
Date: Thu, 23 Jul 2020 22:44:41 +0200
Subject: [R-pkg-devel] Error in CHECK caused by dev.off()
In-Reply-To: <e85d52e6-fced-a0d7-b87d-7ea60006d618@fau.de>
References: <15fca50d-de12-f13b-af24-aabebdf22d8a@bebac.at>
 <1da2909d-7469-1065-78da-e9b1a7c7a2eb@gmail.com>
 <1d15db6a-27d3-91ca-fd22-79d94f5d61b6@bebac.at>
 <e85d52e6-fced-a0d7-b87d-7ea60006d618@fau.de>
Message-ID: <51f5cc83-4ccb-17cd-18cc-727792c35998@bebac.at>

Hi Sebastian,

Sebastian Meyer wrote on 2020-07-23 16:52:
> Back to the original topic:

THX!

> Calling graphics.off() in example code will also disturb standard R CMD
> check. Before running the examples, R CMD check opens a pdf device to
> store any graphics output [1]. You will find the resulting pdf file in
> {PACKAGE}.Rcheck/{PACKAGE}-Ex.pdf after R CMD check.

Ah! For years I was wondering where the PDF comes from.

> R CMD check will eventually fail from trying to close this pdf device
> after running the examples [2], if you have already closed all graphics
> devices (including this pdf device) through code in your examples. This
> is where the
>
> Error in grDevices::dev.off() :
>    cannot shut down device 1 (the null device)
> Execution halted
>
> actually came from.

OK, now I have:
if (file.exists("myfile") & !is.null(dev.list()["png"]) {
 ? invisible(dev.off(dev.list()["png"]))
}
You made my day. No error in check() any more.

> Finally, [?] the png device may not even be available.

Ouch!

> So it is reasonable to condition on
> capabilities("png")

Done.

>   or to put such examples in \donttest.

It was already in \donttest{} but check() ignored that.

> HTH!

It did. Additionally I've learned a new abbreviation...

Helmut

-- 
Ing. Helmut Sch?tz
BEBAC?? Consultancy Services for
Bioequivalence and Bioavailability Studies
Neubaugasse 36/11
1070 Vienna, Austria
E helmut.schuetz at bebac.at
W https://bebac.at/
F https://forum.bebac.at/


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu Jul 23 22:58:07 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 23 Jul 2020 16:58:07 -0400
Subject: [R-pkg-devel] Check Error Due to Unicode in Documentation
In-Reply-To: <02ce01d6612d$d1323740$7396a5c0$@denney.ws>
References: <02ce01d6612d$d1323740$7396a5c0$@denney.ws>
Message-ID: <1796d810-e2c2-062b-d4f7-8cff95aabcfd@gmail.com>

On 23/07/2020 4:14 p.m., bill at denney.ws wrote:
> Hello,
> 
>   
> 
> I have a personal package that I?d eventually like to clean up and either
> find other packages to be homes for the functions or perhaps eventually
> release it on CRAN.  To that end, I try to keep package checks working.
> 
>   
> 
> One of the functions that I use is to try to simplify Unicode text to ASCII.
> With that, I tend to receive data that is scientifically-focused to the mu
> character should be converted to a ?u? instead of the standard conversion to
> ?m?.  On top of that, there are at least two Unicode characters that are
> visually the mu character, one is the micro character and the other is an
> actual lowercase mu.  This function converts both of those to ?u? as
> desired.
> 
>   
> 
> I generate the documentation using roxygen2, but the text in the
> documentation aligns with the expected Unicode character, so I think the
> issue is not with roxygen.
> 
>   
> 
> The issue is that Codoc gives the following error:
> 
>   
> 
> * checking for code/documentation mismatches ... WARNING
> 
> Codoc mismatches from documentation object 'unicode_to_ascii':
> 
> unicode_to_ascii.character
> 
>    Code: function(x, verbose = FALSE, pattern = c("?", "?"), replacement
> 
>                   = c("u", "u"), general_
> 
>   
> 
> But, the code and documentation appear to be the same.  I think that the
> issue relates to something with Unicode support in Codoc, but I?m not sure
> how to test for that.  The code is here:
> 
>   
> 
> https://github.com/billdenney/bsd.report/blob/454caf217c5b333af1d65c7e63bbad
> 4194320e07/R/unicode_to_ascii.R#L28-L31
> 
>   
> 
> And the documentation is here:
> 
>   
> 
> https://github.com/billdenney/bsd.report/blob/454caf217c5b333af1d65c7e63bbad
> 4194320e07/man/unicode_to_ascii.Rd#L17-L24
> 
>   
> 
> Do you have any suggestions on how to make this code/documentation work with
> Codoc?

If you change the source to include the explicit characters (i.e. use 
pattern = c("?", "?") instead of pattern=c("\u03bc", "\u00b5")), does 
that help?

It may cause other issues:  WRE recommends against including UTF-8 chars 
in source code.

If that doesn't solve the problem, then it looks like an issue with 
Roxygen2.  I don't know if there's a way to tell it not to convert \u 
escapes into the corresponding character.  If there isn't, it seems like 
that's something they should add.  As a workaround, is there a way to 
say that this one particular .Rd file should be edited by hand, instead 
of auto-generated?

Duncan Murdoch


From he|mut@@chuetz @end|ng |rom beb@c@@t  Thu Jul 23 23:11:29 2020
From: he|mut@@chuetz @end|ng |rom beb@c@@t (=?UTF-8?Q?Helmut_Sch=c3=bctz?=)
Date: Thu, 23 Jul 2020 23:11:29 +0200
Subject: [R-pkg-devel] Error in CHECK caused by dev.off()
In-Reply-To: <24345.36277.448655.785117@rob.eddelbuettel.com>
References: <15fca50d-de12-f13b-af24-aabebdf22d8a@bebac.at>
 <1da2909d-7469-1065-78da-e9b1a7c7a2eb@gmail.com>
 <1d15db6a-27d3-91ca-fd22-79d94f5d61b6@bebac.at>
 <f3fc57e5-8450-fef3-dc9d-13c98f211050@gmail.com>
 <48dce2a0-85e4-f369-2af4-0a3484c94d7f@bebac.at>
 <4f0c1784-8b57-ab92-c771-9a8449a27732@gmail.com>
 <27ab87fa-cd47-a348-c220-d147b0576465@bebac.at>
 <24345.36277.448655.785117@rob.eddelbuettel.com>
Message-ID: <0661a05e-ed34-a9cd-75c2-e25a7a5d3747@bebac.at>

Hi Dirk,

Dirk Eddelbuettel wrote on 2020-07-23 15:16:
> Helmut,
>
> For previous uploads you affirmed that you read the CRAN Repository Policy
> which states
>
>       [...]
>
> Your package appears to violate that requirement.

As I wrote previously the statement continues with
"Limited exceptions may be allowed in interactive sessions if the 
package obtains confirmation from the user."

I'm not a native speaker of English but for me "should not write" != 
"must not write".

>   I would fix the package.

I removed the automatic switch to "~/" if no path is given. As before I 
recommend in the man-pages to give the full path. However, I _still_ 
state that "~/" _can_ be used for convenience.
The package is used in a regulated environment. The output file contains 
an entire audit-trail (name of the user and system, version and date of 
the OS, R, all packages, functions used, time of execution, blablah). If 
the package would write to tempdir() I would have to add a warning in 
bold font of every man-page like "Execute the command tempdir() to find 
out where your result files reside. Copy the files to a safe location 
before you quit the R-session. If you fail to do so, your results will 
be lost."

Off topic: I don't like it that on Windows tempdir is located at 
"C:/Users/{Username}/AppData/Local/Temp/Rtmp..." I strictly separate my 
OSes (on C), software (on D), data (on E), backups (on F). Writing to 
the system disk is not what I prefer. However, in my installation "~/" 
resolves to "E:/Users/{Username}/Documents/"...

-- 
Ing. Helmut Sch?tz
BEBAC?? Consultancy Services for
Bioequivalence and Bioavailability Studies
Neubaugasse 36/11
1070 Vienna, Austria
T +43 1 2311746
M +43 699 10792458
E helmut.schuetz at bebac.at
W https://bebac.at/
C https://bebac.at/Contact.htm
F https://forum.bebac.at/
GIS 24799386, VAT?ATU61115625, DUNS?300370568, EORI?ATEOS1000096209
GDPR https://bebac.at/Data-Protection.htm


From c@@rd|@g@bor @end|ng |rom gm@||@com  Thu Jul 23 23:25:04 2020
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Thu, 23 Jul 2020 22:25:04 +0100
Subject: [R-pkg-devel] Check Error Due to Unicode in Documentation
In-Reply-To: <1796d810-e2c2-062b-d4f7-8cff95aabcfd@gmail.com>
References: <02ce01d6612d$d1323740$7396a5c0$@denney.ws>
 <1796d810-e2c2-062b-d4f7-8cff95aabcfd@gmail.com>
Message-ID: <CABtg=K=P=Wh2vtOTMumemrh82TECONMw-DoSen41Upy+oUrGNQ@mail.gmail.com>

On Thu, Jul 23, 2020 at 9:58 PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>
> On 23/07/2020 4:14 p.m., bill at denney.ws wrote:
[...]
>
> If you change the source to include the explicit characters (i.e. use
> pattern = c("?", "?") instead of pattern=c("\u03bc", "\u00b5")), does
> that help?
>
> It may cause other issues:  WRE recommends against including UTF-8 chars
> in source code.
>
> If that doesn't solve the problem, then it looks like an issue with
> Roxygen2.  I don't know if there's a way to tell it not to convert \u
> escapes into the corresponding character.  If there isn't, it seems like
> that's something they should add.  As a workaround, is there a way to
> say that this one particular .Rd file should be edited by hand, instead
> of auto-generated?

I don't think roxygen2 intentionally converts \u sequences, I think
this is just a consequence of the parse() + deparse() roundtrip:

x <- '"\\u03bc"'
charToRaw(x)
#>  [1] 22 5c 75 30 33 62 63 22
y <- deparse(eval(parse(text = x)))
charToRaw(y)
#> [1] 22 b5 22

Bill, please report a roxygen2 issue at
https://github.com/r-lib/roxygen2/issues and we can probably fix this.
Thanks!

Gabor


From c@@rd|@g@bor @end|ng |rom gm@||@com  Thu Jul 23 23:27:05 2020
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Thu, 23 Jul 2020 22:27:05 +0100
Subject: [R-pkg-devel] Check Error Due to Unicode in Documentation
In-Reply-To: <CABtg=K=P=Wh2vtOTMumemrh82TECONMw-DoSen41Upy+oUrGNQ@mail.gmail.com>
References: <02ce01d6612d$d1323740$7396a5c0$@denney.ws>
 <1796d810-e2c2-062b-d4f7-8cff95aabcfd@gmail.com>
 <CABtg=K=P=Wh2vtOTMumemrh82TECONMw-DoSen41Upy+oUrGNQ@mail.gmail.com>
Message-ID: <CABtg=KmA=k07Vvt3WHRi+dVyELkT8ZfZA9K46+ndkm1xOXi93A@mail.gmail.com>

On Thu, Jul 23, 2020 at 10:25 PM G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:
>
> On Thu, Jul 23, 2020 at 9:58 PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> >
> > On 23/07/2020 4:14 p.m., bill at denney.ws wrote:
[...]
> Bill, please report a roxygen2 issue at
> https://github.com/r-lib/roxygen2/issues and we can probably fix this.
[...]

Btw. you can possibly work around this by manually providing the
@usage for this one function.

Gabor


From biii m@iii@g oii de@@ey@ws  Thu Jul 23 23:39:20 2020
From: biii m@iii@g oii de@@ey@ws (biii m@iii@g oii de@@ey@ws)
Date: Thu, 23 Jul 2020 17:39:20 -0400
Subject: [R-pkg-devel] Check Error Due to Unicode in Documentation
In-Reply-To: <CABtg=K=P=Wh2vtOTMumemrh82TECONMw-DoSen41Upy+oUrGNQ@mail.gmail.com>
References: <02ce01d6612d$d1323740$7396a5c0$@denney.ws>
 <1796d810-e2c2-062b-d4f7-8cff95aabcfd@gmail.com>
 <CABtg=K=P=Wh2vtOTMumemrh82TECONMw-DoSen41Upy+oUrGNQ@mail.gmail.com>
Message-ID: <030101d66139$b9854f40$2c8fedc0$@denney.ws>

Thanks for the quick response both Duncan and G?bor.  I've reported it here in case others want to follow-up there: https://github.com/r-lib/roxygen2/issues/1121

-----Original Message-----
From: G?bor Cs?rdi <csardi.gabor at gmail.com> 
Sent: Thursday, July 23, 2020 5:25 PM
To: Duncan Murdoch <murdoch.duncan at gmail.com>
Cc: bill at denney.ws; R Package Devel <r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] Check Error Due to Unicode in Documentation

On Thu, Jul 23, 2020 at 9:58 PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>
> On 23/07/2020 4:14 p.m., bill at denney.ws wrote:
[...]
>
> If you change the source to include the explicit characters (i.e. use 
> pattern = c("?", "?") instead of pattern=c("\u03bc", "\u00b5")), does 
> that help?
>
> It may cause other issues:  WRE recommends against including UTF-8 
> chars in source code.
>
> If that doesn't solve the problem, then it looks like an issue with 
> Roxygen2.  I don't know if there's a way to tell it not to convert \u 
> escapes into the corresponding character.  If there isn't, it seems 
> like that's something they should add.  As a workaround, is there a 
> way to say that this one particular .Rd file should be edited by hand, 
> instead of auto-generated?

I don't think roxygen2 intentionally converts \u sequences, I think this is just a consequence of the parse() + deparse() roundtrip:

x <- '"\\u03bc"'
charToRaw(x)
#>  [1] 22 5c 75 30 33 62 63 22
y <- deparse(eval(parse(text = x)))
charToRaw(y)
#> [1] 22 b5 22

Bill, please report a roxygen2 issue at
https://github.com/r-lib/roxygen2/issues and we can probably fix this.
Thanks!

Gabor


From wdun|@p @end|ng |rom t|bco@com  Thu Jul 23 23:55:45 2020
From: wdun|@p @end|ng |rom t|bco@com (William Dunlap)
Date: Thu, 23 Jul 2020 14:55:45 -0700
Subject: [R-pkg-devel] Error in CHECK caused by dev.off()
In-Reply-To: <0661a05e-ed34-a9cd-75c2-e25a7a5d3747@bebac.at>
References: <15fca50d-de12-f13b-af24-aabebdf22d8a@bebac.at>
 <1da2909d-7469-1065-78da-e9b1a7c7a2eb@gmail.com>
 <1d15db6a-27d3-91ca-fd22-79d94f5d61b6@bebac.at>
 <f3fc57e5-8450-fef3-dc9d-13c98f211050@gmail.com>
 <48dce2a0-85e4-f369-2af4-0a3484c94d7f@bebac.at>
 <4f0c1784-8b57-ab92-c771-9a8449a27732@gmail.com>
 <27ab87fa-cd47-a348-c220-d147b0576465@bebac.at>
 <24345.36277.448655.785117@rob.eddelbuettel.com>
 <0661a05e-ed34-a9cd-75c2-e25a7a5d3747@bebac.at>
Message-ID: <CAF8bMcasTFtk4Hd=zvsac5fA6B1D190n7dAMvB5z6jAwzm701w@mail.gmail.com>

R-4.0 introduced a new function, tools::R_user_dir(package, which),
where which is one of "data", "config", and "cache".  It gives
standard directory names in which to place package-and-user-specific
files which you want to last longer than one R session.

I suppose you will still have to ask the user if it is ok to use those
directories, but you might want to put your log files in one of them
instead of in ~/ itself.

Bill Dunlap
TIBCO Software
wdunlap tibco.com

On Thu, Jul 23, 2020 at 2:15 PM Helmut Sch?tz <helmut.schuetz at bebac.at> wrote:
>
> Hi Dirk,
>
> Dirk Eddelbuettel wrote on 2020-07-23 15:16:
> > Helmut,
> >
> > For previous uploads you affirmed that you read the CRAN Repository Policy
> > which states
> >
> >       [...]
> >
> > Your package appears to violate that requirement.
>
> As I wrote previously the statement continues with
> "Limited exceptions may be allowed in interactive sessions if the
> package obtains confirmation from the user."
>
> I'm not a native speaker of English but for me "should not write" !=
> "must not write".
>
> >   I would fix the package.
>
> I removed the automatic switch to "~/" if no path is given. As before I
> recommend in the man-pages to give the full path. However, I _still_
> state that "~/" _can_ be used for convenience.
> The package is used in a regulated environment. The output file contains
> an entire audit-trail (name of the user and system, version and date of
> the OS, R, all packages, functions used, time of execution, blablah). If
> the package would write to tempdir() I would have to add a warning in
> bold font of every man-page like "Execute the command tempdir() to find
> out where your result files reside. Copy the files to a safe location
> before you quit the R-session. If you fail to do so, your results will
> be lost."
>
> Off topic: I don't like it that on Windows tempdir is located at
> "C:/Users/{Username}/AppData/Local/Temp/Rtmp..." I strictly separate my
> OSes (on C), software (on D), data (on E), backups (on F). Writing to
> the system disk is not what I prefer. However, in my installation "~/"
> resolves to "E:/Users/{Username}/Documents/"...
>
> --
> Ing. Helmut Sch?tz
> BEBAC ? Consultancy Services for
> Bioequivalence and Bioavailability Studies
> Neubaugasse 36/11
> 1070 Vienna, Austria
> T +43 1 2311746
> M +43 699 10792458
> E helmut.schuetz at bebac.at
> W https://bebac.at/
> C https://bebac.at/Contact.htm
> F https://forum.bebac.at/
> GIS 24799386, VAT ATU61115625, DUNS 300370568, EORI ATEOS1000096209
> GDPR https://bebac.at/Data-Protection.htm
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From murdoch@dunc@n @end|ng |rom gm@||@com  Fri Jul 24 01:05:02 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 23 Jul 2020 19:05:02 -0400
Subject: [R-pkg-devel] Error in CHECK caused by dev.off()
In-Reply-To: <0661a05e-ed34-a9cd-75c2-e25a7a5d3747@bebac.at>
References: <15fca50d-de12-f13b-af24-aabebdf22d8a@bebac.at>
 <1da2909d-7469-1065-78da-e9b1a7c7a2eb@gmail.com>
 <1d15db6a-27d3-91ca-fd22-79d94f5d61b6@bebac.at>
 <f3fc57e5-8450-fef3-dc9d-13c98f211050@gmail.com>
 <48dce2a0-85e4-f369-2af4-0a3484c94d7f@bebac.at>
 <4f0c1784-8b57-ab92-c771-9a8449a27732@gmail.com>
 <27ab87fa-cd47-a348-c220-d147b0576465@bebac.at>
 <24345.36277.448655.785117@rob.eddelbuettel.com>
 <0661a05e-ed34-a9cd-75c2-e25a7a5d3747@bebac.at>
Message-ID: <479efc0d-6e95-8533-7b43-49ff2d05dcec@gmail.com>

On 23/07/2020 5:11 p.m., Helmut Sch?tz wrote:
> Hi Dirk,
> 
> Dirk Eddelbuettel wrote on 2020-07-23 15:16:
>> Helmut,
>>
>> For previous uploads you affirmed that you read the CRAN Repository Policy
>> which states
>>
>>        [...]
>>
>> Your package appears to violate that requirement.
> 
> As I wrote previously the statement continues with
> "Limited exceptions may be allowed in interactive sessions if the
> package obtains confirmation from the user."
> 
> I'm not a native speaker of English but for me "should not write" !=
> "must not write".

And "may be allowed" is not "will be allowed".

> 
>>    I would fix the package.
> 
> I removed the automatic switch to "~/" if no path is given. As before I
> recommend in the man-pages to give the full path. However, I _still_
> state that "~/" _can_ be used for convenience.

This is a little unclear (perhaps the language issue again).  It's fine 
if your documentation recommends the user choose that.  That's a 
variation on what I recommended to you (that you generate an error 
message that suggests how to avoid the error).

I don't agree with it if you mean to say the CRAN policy gets it wrong, 
and you should be allowed to have your original automatic fallback.

> The package is used in a regulated environment. The output file contains
> an entire audit-trail (name of the user and system, version and date of
> the OS, R, all packages, functions used, time of execution, blablah). If
> the package would write to tempdir() I would have to add a warning in
> bold font of every man-page like "Execute the command tempdir() to find
> out where your result files reside. Copy the files to a safe location
> before you quit the R-session. If you fail to do so, your results will
> be lost."
> 
> Off topic: I don't like it that on Windows tempdir is located at
> "C:/Users/{Username}/AppData/Local/Temp/Rtmp..." I strictly separate my
> OSes (on C), software (on D), data (on E), backups (on F). Writing to
> the system disk is not what I prefer. However, in my installation "~/"
> resolves to "E:/Users/{Username}/Documents/"...

It can resolve anywhere you like (as long as its writable), by 
specifying the TMPDIR environment variable.

Duncan Murdoch


From he|mut@@chuetz @end|ng |rom beb@c@@t  Fri Jul 24 11:02:37 2020
From: he|mut@@chuetz @end|ng |rom beb@c@@t (=?UTF-8?Q?Helmut_Sch=c3=bctz?=)
Date: Fri, 24 Jul 2020 11:02:37 +0200
Subject: [R-pkg-devel] Error in CHECK caused by dev.off()
In-Reply-To: <479efc0d-6e95-8533-7b43-49ff2d05dcec@gmail.com>
References: <15fca50d-de12-f13b-af24-aabebdf22d8a@bebac.at>
 <1da2909d-7469-1065-78da-e9b1a7c7a2eb@gmail.com>
 <1d15db6a-27d3-91ca-fd22-79d94f5d61b6@bebac.at>
 <f3fc57e5-8450-fef3-dc9d-13c98f211050@gmail.com>
 <48dce2a0-85e4-f369-2af4-0a3484c94d7f@bebac.at>
 <4f0c1784-8b57-ab92-c771-9a8449a27732@gmail.com>
 <27ab87fa-cd47-a348-c220-d147b0576465@bebac.at>
 <24345.36277.448655.785117@rob.eddelbuettel.com>
 <0661a05e-ed34-a9cd-75c2-e25a7a5d3747@bebac.at>
 <479efc0d-6e95-8533-7b43-49ff2d05dcec@gmail.com>
Message-ID: <9125b103-9ef7-4a7f-f14a-5b93d2c01500@bebac.at>


Duncan Murdoch wrote on 2020-07-24 01:05:
> On 23/07/2020 5:11 p.m., Helmut Sch?tz wrote:
>> I'm not a native speaker of English but for me "should not write" !=
>> "must not write".
>
> And "may be allowed" is not "will be allowed".

Which leaves the question open _who_ may -- or may not -- allow it. ;-)
>
>> I removed the automatic switch to "~/" if no path is given. As before I
>> recommend in the man-pages to give the full path. However, I _still_
>> state that "~/" _can_ be used for convenience.
>
> [...] It's fine if your documentation recommends the user choose 
> that.? That's a variation on what I recommended to you (that you 
> generate an error message that suggests how to avoid the error).

Yes, I've done that.

>
>> Off topic: I don't like it that on Windows tempdir is located at
>> "C:/Users/{Username}/AppData/Local/Temp/Rtmp..." I strictly separate my
>> OSes (on C), software (on D), data (on E), backups (on F). Writing to
>> the system disk is not what I prefer. However, in my installation "~/"
>> resolves to "E:/Users/{Username}/Documents/"...
>
> It can resolve anywhere you like (as long as its writable), by 
> specifying the TMPDIR environment variable.

Agree. Though I can change it permanently in _my_ Rcmd_environ file, in 
a package I _must not_ change the users environment.

Helmut

-- 
Ing. Helmut Sch?tz
BEBAC?? Consultancy Services for
Bioequivalence and Bioavailability Studies
Neubaugasse 36/11
1070 Vienna, Austria
E helmut.schuetz at bebac.at
W https://bebac.at/
F https://forum.bebac.at/


From berryboe@@enkoo| @end|ng |rom hotm@||@com  Sun Jul 26 12:31:43 2020
From: berryboe@@enkoo| @end|ng |rom hotm@||@com (Berry Boessenkool)
Date: Sun, 26 Jul 2020 10:31:43 +0000
Subject: [R-pkg-devel] Error in CHECK caused by dev.off()
In-Reply-To: <9125b103-9ef7-4a7f-f14a-5b93d2c01500@bebac.at>
References: <15fca50d-de12-f13b-af24-aabebdf22d8a@bebac.at>
 <1da2909d-7469-1065-78da-e9b1a7c7a2eb@gmail.com>
 <1d15db6a-27d3-91ca-fd22-79d94f5d61b6@bebac.at>
 <f3fc57e5-8450-fef3-dc9d-13c98f211050@gmail.com>
 <48dce2a0-85e4-f369-2af4-0a3484c94d7f@bebac.at>
 <4f0c1784-8b57-ab92-c771-9a8449a27732@gmail.com>
 <27ab87fa-cd47-a348-c220-d147b0576465@bebac.at>
 <24345.36277.448655.785117@rob.eddelbuettel.com>
 <0661a05e-ed34-a9cd-75c2-e25a7a5d3747@bebac.at>
 <479efc0d-6e95-8533-7b43-49ff2d05dcec@gmail.com>,
 <9125b103-9ef7-4a7f-f14a-5b93d2c01500@bebac.at>
Message-ID: <AM0PR01MB4033872887CC5B89F1815834D5750@AM0PR01MB4033.eurprd01.prod.exchangelabs.com>


One (late) additional command:

in the following setup:

pdf("some_path")
plot(1)
dev.off()

if the plotting function fails, code execution stops and dev.off never gets called, leaving (potentially nested) devices open.

I suggest:

pdf("some_path")
on.exit(dev.off(), add=TRUE)
plot(1)


add=TRUE is technically only needed if you have several on.exit calls.
I trained myself to always include it after it bit me when I introduced more on.exit calls later on.

HTH,
Berry



________________________________
From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Helmut Sch?tz <helmut.schuetz at bebac.at>
Sent: Friday, July 24, 2020 11:02
To: Duncan Murdoch <murdoch.duncan at gmail.com>
Cc: r-package-devel at r-project.org <r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] Error in CHECK caused by dev.off()


Duncan Murdoch wrote on 2020-07-24 01:05:
> On 23/07/2020 5:11 p.m., Helmut Sch?tz wrote:
>> I'm not a native speaker of English but for me "should not write" !=
>> "must not write".
>
> And "may be allowed" is not "will be allowed".

Which leaves the question open _who_ may -- or may not -- allow it. ;-)
>
>> I removed the automatic switch to "~/" if no path is given. As before I
>> recommend in the man-pages to give the full path. However, I _still_
>> state that "~/" _can_ be used for convenience.
>
> [...] It's fine if your documentation recommends the user choose
> that.  That's a variation on what I recommended to you (that you
> generate an error message that suggests how to avoid the error).

Yes, I've done that.

>

>> "C:/Users/{Username}/AppData/Local/Temp/Rtmp..." I strictly separate my
>> OSes (on C), software (on D), data (on E), backups (on F). Writing to
>> the system disk is not what I prefer. However, in my installation "~/"
>> resolves to "E:/Users/{Username}/Documents/"...
>
> It can resolve anywhere you like (as long as its writable), by
> specifying the TMPDIR environment variable.

Agree. Though I can change it permanently in _my_ Rcmd_environ file, in
a package I _must not_ change the users environment.

Helmut

--
Ing. Helmut Sch?tz
BEBAC ? Consultancy Services for
Bioequivalence and Bioavailability Studies
Neubaugasse 36/11
1070 Vienna, Austria
E helmut.schuetz at bebac.at
W https://bebac.at/
F https://forum.bebac.at/

______________________________________________
R-package-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel

	[[alternative HTML version deleted]]


From roy@mende|@@ohn @end|ng |rom no@@@gov  Sun Jul 26 16:12:16 2020
From: roy@mende|@@ohn @end|ng |rom no@@@gov (Roy Mendelssohn - NOAA Federal)
Date: Sun, 26 Jul 2020 07:12:16 -0700
Subject: [R-pkg-devel] Warnings from gdal
Message-ID: <F289E8AA-BB76-420C-8966-11ACA83E47F1@noaa.gov>

I have a package on CRAN that  has a graphics component that calls a package that ultimately calls 'rgdal that CRAN is unhappy about.  'rgdal' now throws a warning if 'crs' is used,  and unless I am misreading the problems (see https://cran.r-project.org/web/checks/check_results_rerddapXtracto.html) that is what is causing the problems.  I am not certain that I can suppress warnings because it is from a package that calls a package (in this case raster) that calls rgdal.

Any advice appreciated, in particular if I am mis-reading the warning.

Thanks,

-Roy
 

**********************
"The contents of this message do not reflect any position of the U.S. Government or NOAA."
**********************
Roy Mendelssohn
Supervisory Operations Research Analyst
NOAA/NMFS
Environmental Research Division
Southwest Fisheries Science Center
***Note new street address***
110 McAllister Way
Santa Cruz, CA 95060
Phone: (831)-420-3666
Fax: (831) 420-3980
e-mail: Roy.Mendelssohn at noaa.gov www: https://www.pfeg.noaa.gov/

"Old age and treachery will overcome youth and skill."
"From those who have been given much, much will be expected" 
"the arc of the moral universe is long, but it bends toward justice" -MLK Jr.


From br|@nk@||@t@ @end|ng |rom gm@||@com  Sun Jul 26 21:48:52 2020
From: br|@nk@||@t@ @end|ng |rom gm@||@com (brian knaus)
Date: Sun, 26 Jul 2020 12:48:52 -0700
Subject: [R-pkg-devel] inappropriate maintainer moniker
In-Reply-To: <04ae0a7c-4547-d06e-220a-af7287b0cd51@gmail.com>
References: <CAEp5mpCNDh11KpWqdmA0MRH43ok5iFHOFKoURwY9wVJ_uJrzPA@mail.gmail.com>
 <04ae0a7c-4547-d06e-220a-af7287b0cd51@gmail.com>
Message-ID: <CAEp5mpC8MzK=ivSj2_O5ZZ54zdn0myrZ-zwioHWi-mJVwNLgrg@mail.gmail.com>

Thanks for giving this a look Ben! Good to hear I can convince at least one
person of my position. My brain had not thought of
CRAN-submissions at R-project.org, thanks for the suggestion!

Brian


On Wed, Jul 22, 2020 at 5:57 PM Ben Bolker <bbolker at gmail.com> wrote:

>      Once all the other issues are resolved, I'd suggest e-mailing
> r-cran-submissions with this explanation and asking for clarification.
>
>      My interpretation would have been the same as yours (i.e., that
> this is an appropriate e-mail address, and that CRAN maintainers may
> have misinterpreted it a mailing list address).
>
> On 7/22/20 7:05 PM, brian knaus wrote:
> > Hello R-pkg-devel,
> >
> > Our package vcfR,
> >
> > https://github.com/knausb/vcfR
> >
> > has been removed from CRAN because they asked me to make changes that I
> > have not been able to make before their deadline. One of the issues was
> > that the moniker
> >
> > "briank.lists"
> >
> > is not appropriate and that we should see CRAN policy. I interpret "CRAN
> > policy" here to be the following link.
> >
> > https://cran.r-project.org/web/packages/policies.html
> >
> > I'm struggling with *why* is this inappropriate, so I do not understand
> how
> > to fix it. My attempt to interpret this issue is that this "moniker" has
> > been interpreted as a "mailing list" by a CRAN member. The policy states
> > that a "single designated maintainer (a person, not a mailing list)"
> should
> > be included in the DESCRIPTION. However, in vcfR this address is a
> "single
> > designated maintainer" (me). It's where I receive mail from various
> mailing
> > lists I've signed up for. For example, mail I receive from "R-pkg-devel"
> > comes to this address. So I feel that this is confusion on the side of
> > CRAN. Does anyone see a reason for *why* this may be considered
> > inappropriate?
> >
> > Thank you!
> > Brian Knaus
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From tmcdon@|d @end|ng |rom we@t-|nc@com  Mon Jul 27 19:20:03 2020
From: tmcdon@|d @end|ng |rom we@t-|nc@com (Trent McDonald)
Date: Mon, 27 Jul 2020 11:20:03 -0600
Subject: [R-pkg-devel] Warnings from gdal
In-Reply-To: <F289E8AA-BB76-420C-8966-11ACA83E47F1@noaa.gov>
References: <F289E8AA-BB76-420C-8966-11ACA83E47F1@noaa.gov>
Message-ID: <CAFfyi7F1a4o4FPjgMCDkxZ6E9YZNcT9YONWT=n2okNuZGiighw@mail.gmail.com>

Hope this helps.  I had a similar issue with my package.  Prior to the
recent change, GDAL did not throw a warning for empty (NA) CRS
strings. After change, it does.  projectRaster is throwing the warning
because it thinks input and output crs are the same (perhaps CRS is
missing?).  The purpose of projectRaster is to change crs's, so
identical crs's make little sense. I suggest making sure the input CRS
is valid (not NA) and that output CRS is different than the input.

Trent McDonald
Principal Statistician

Western EcoSystems Technology, Inc.
Environmental & Statistical Consultants
1610 Reynolds Street
Laramie, WY 82072
307-760-4721
www.west-inc.com

Trent McDonald
Principal Statistician

Western EcoSystems Technology, Inc.
Environmental & Statistical Consultants
1610 Reynolds Street
Laramie, WY 82072
307-760-4721
www.west-inc.com


On Sun, Jul 26, 2020 at 8:12 AM Roy Mendelssohn - NOAA Federal via
R-package-devel <r-package-devel at r-project.org> wrote:
>
> I have a package on CRAN that  has a graphics component that calls a package that ultimately calls 'rgdal that CRAN is unhappy about.  'rgdal' now throws a warning if 'crs' is used,  and unless I am misreading the problems (see https://cran.r-project.org/web/checks/check_results_rerddapXtracto.html) that is what is causing the problems.  I am not certain that I can suppress warnings because it is from a package that calls a package (in this case raster) that calls rgdal.
>
> Any advice appreciated, in particular if I am mis-reading the warning.
>
> Thanks,
>
> -Roy
>
>
> **********************
> "The contents of this message do not reflect any position of the U.S. Government or NOAA."
> **********************
> Roy Mendelssohn
> Supervisory Operations Research Analyst
> NOAA/NMFS
> Environmental Research Division
> Southwest Fisheries Science Center
> ***Note new street address***
> 110 McAllister Way
> Santa Cruz, CA 95060
> Phone: (831)-420-3666
> Fax: (831) 420-3980
> e-mail: Roy.Mendelssohn at noaa.gov www: https://www.pfeg.noaa.gov/
>
> "Old age and treachery will overcome youth and skill."
> "From those who have been given much, much will be expected"
> "the arc of the moral universe is long, but it bends toward justice" -MLK Jr.
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From roy@mende|@@ohn @end|ng |rom no@@@gov  Mon Jul 27 19:47:29 2020
From: roy@mende|@@ohn @end|ng |rom no@@@gov (Roy Mendelssohn - NOAA Federal)
Date: Mon, 27 Jul 2020 10:47:29 -0700
Subject: [R-pkg-devel] Warnings from gdal
In-Reply-To: <CAFfyi7F1a4o4FPjgMCDkxZ6E9YZNcT9YONWT=n2okNuZGiighw@mail.gmail.com>
References: <F289E8AA-BB76-420C-8966-11ACA83E47F1@noaa.gov>
 <CAFfyi7F1a4o4FPjgMCDkxZ6E9YZNcT9YONWT=n2okNuZGiighw@mail.gmail.com>
Message-ID: <1D28D25B-5937-4660-A0DD-A118C5384E79@noaa.gov>

Thanks.  What has made it really difficult is that devtools::check() runs fine on my Mac,  I installed Fedora on a virtual machine on my Mac,  devtools::check() also runs fine,  so it makes it really difficult to pin down things because I can't get into a debugger to see why CRAN is throwing errors, or more importantly if steps I have taken to correct the errors are working.  When I can't reproduce the warning it makes it very difficult.

-Roy


> On Jul 27, 2020, at 10:20 AM, Trent McDonald <tmcdonald at west-inc.com> wrote:
> 
> Hope this helps.  I had a similar issue with my package.  Prior to the
> recent change, GDAL did not throw a warning for empty (NA) CRS
> strings. After change, it does.  projectRaster is throwing the warning
> because it thinks input and output crs are the same (perhaps CRS is
> missing?).  The purpose of projectRaster is to change crs's, so
> identical crs's make little sense. I suggest making sure the input CRS
> is valid (not NA) and that output CRS is different than the input.
> 
> Trent McDonald
> Principal Statistician
> 
> Western EcoSystems Technology, Inc.
> Environmental & Statistical Consultants
> 1610 Reynolds Street
> Laramie, WY 82072
> 307-760-4721
> www.west-inc.com
> 
> Trent McDonald
> Principal Statistician
> 
> Western EcoSystems Technology, Inc.
> Environmental & Statistical Consultants
> 1610 Reynolds Street
> Laramie, WY 82072
> 307-760-4721
> www.west-inc.com
> 
> 
> On Sun, Jul 26, 2020 at 8:12 AM Roy Mendelssohn - NOAA Federal via
> R-package-devel <r-package-devel at r-project.org> wrote:
>> 
>> I have a package on CRAN that  has a graphics component that calls a package that ultimately calls 'rgdal that CRAN is unhappy about.  'rgdal' now throws a warning if 'crs' is used,  and unless I am misreading the problems (see https://cran.r-project.org/web/checks/check_results_rerddapXtracto.html) that is what is causing the problems.  I am not certain that I can suppress warnings because it is from a package that calls a package (in this case raster) that calls rgdal.
>> 
>> Any advice appreciated, in particular if I am mis-reading the warning.
>> 
>> Thanks,
>> 
>> -Roy
>> 
>> 
>> **********************
>> "The contents of this message do not reflect any position of the U.S. Government or NOAA."
>> **********************
>> Roy Mendelssohn
>> Supervisory Operations Research Analyst
>> NOAA/NMFS
>> Environmental Research Division
>> Southwest Fisheries Science Center
>> ***Note new street address***
>> 110 McAllister Way
>> Santa Cruz, CA 95060
>> Phone: (831)-420-3666
>> Fax: (831) 420-3980
>> e-mail: Roy.Mendelssohn at noaa.gov www: https://www.pfeg.noaa.gov/
>> 
>> "Old age and treachery will overcome youth and skill."
>> "From those who have been given much, much will be expected"
>> "the arc of the moral universe is long, but it bends toward justice" -MLK Jr.
>> 
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel

**********************
"The contents of this message do not reflect any position of the U.S. Government or NOAA."
**********************
Roy Mendelssohn
Supervisory Operations Research Analyst
NOAA/NMFS
Environmental Research Division
Southwest Fisheries Science Center
***Note new street address***
110 McAllister Way
Santa Cruz, CA 95060
Phone: (831)-420-3666
Fax: (831) 420-3980
e-mail: Roy.Mendelssohn at noaa.gov www: https://www.pfeg.noaa.gov/

"Old age and treachery will overcome youth and skill."
"From those who have been given much, much will be expected" 
"the arc of the moral universe is long, but it bends toward justice" -MLK Jr.


From @zz@||n| @end|ng |rom @t@t@un|pd@|t  Tue Jul 28 11:46:08 2020
From: @zz@||n| @end|ng |rom @t@t@un|pd@|t (Adelchi Azzalini)
Date: Tue, 28 Jul 2020 11:46:08 +0200
Subject: [R-pkg-devel] install.packages() seems not to select the latest
 suitable version
Message-ID: <7E6FCD0E-8690-4FA7-B66B-D1A0BF295DEF@stat.unipd.it>

When I updated package mnormt to version 2.0.0 in June (now at 2.0.1), 
at the stage of --as-cran checking, there was a compilation error,  
which was overcome by setting the 

Depends:	R (? 4.0.0)

With this option, all worked fine.

However, shortly afterwards, complaints started coming, 
either from users or from maintainers of packages making use of mnormt,
because this high version dependence causes troubles to some people,
such as those using Debian installations, currently at a much lower 
R version.

At the time I select that dependence value, I relied on the fact that
install.packages() selected the most recent suitable version of a package,
given the existing R installation. I expected that people without
R 4.0.0 would have the older version of mnormt, 1.5-7, installed.
As my memory goes (and the memory of other people too), this was 
the working in the past, but apparently not any more. 

For instance, this is a passage from a specific user:
 
"install.packages() used tp just install the most recent available 
for your current version of R.  In the past it might have done just that, 
but that's clearly not the case currently."

Can anyone clarify the reason of this (apparent? real?) change?
...and possibly indicate a way who people with lower R version (and perhaps
limited R expertise) can install the older version of mnormt, 1.5-7, 
without much hassle?

 
----
Adelchi Azzalini
http://azzalini.stat.unipd.it/


From edd @end|ng |rom deb|@n@org  Tue Jul 28 13:21:36 2020
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Tue, 28 Jul 2020 06:21:36 -0500
Subject: [R-pkg-devel] install.packages() seems not to select the latest
 suitable version
In-Reply-To: <7E6FCD0E-8690-4FA7-B66B-D1A0BF295DEF@stat.unipd.it>
References: <7E6FCD0E-8690-4FA7-B66B-D1A0BF295DEF@stat.unipd.it>
Message-ID: <24352.2624.767112.748461@rob.eddelbuettel.com>


Hi Adelchi,

On 28 July 2020 at 11:46, Adelchi Azzalini wrote:
| When I updated package mnormt to version 2.0.0 in June (now at 2.0.1), 
| at the stage of --as-cran checking, there was a compilation error,  
| which was overcome by setting the 
| 
| Depends:	R (? 4.0.0)
| 
| With this option, all worked fine.
| 
| However, shortly afterwards, complaints started coming, 
| either from users or from maintainers of packages making use of mnormt,
| because this high version dependence causes troubles to some people,
| such as those using Debian installations, currently at a much lower 
| R version.

You can point those users to a) the r-sig-debian list and b) the Debian
directory at CRAN as we have always had "backports" of the current R to older
Debian releases---thanks to the work by Johannes Ranke "backporting" whatever
my current Debian packages of R are.

Moreover, you can also point them at `apt install r-cran-mnormt` -- I have
maintained your package within Debian since 2007 (!!) and continue to do so
giving Debian (and Ubuntu) users the choice between a distro binary and
installation from CRAN source. 
 
| At the time I select that dependence value, I relied on the fact that
| install.packages() selected the most recent suitable version of a package,
| given the existing R installation. I expected that people without
| R 4.0.0 would have the older version of mnormt, 1.5-7, installed.
| As my memory goes (and the memory of other people too), this was 
| the working in the past, but apparently not any more. 

I don't think that is quite correct. The CRAN repo is always set up for the
currently released version, and may allow constraints such 'R (>= 4.0.0)'
imposing the current (major) release.

There is no recent change in this behavior.

| For instance, this is a passage from a specific user:
|  
| "install.packages() used tp just install the most recent available 
| for your current version of R.  In the past it might have done just that, 
| but that's clearly not the case currently."

Yes and no. I don't think this correctly stated. `install.packages()` always
picks the most recent version, but this may also require running _the
current_ R release.  I disagree about "not the case currently" -- no change
as stated above.

| Can anyone clarify the reason of this (apparent? real?) change?
| ...and possibly indicate a way who people with lower R version (and perhaps
| limited R expertise) can install the older version of mnormt, 1.5-7, 
| without much hassle?

"Versioned" installs were never supported by `install.packages()`.

But one could always download an older version to a local file, and point
install.packages() at that file (and setting 'repos=NULL'), or use `R CMD
INSTALL` directly. No change there either.

Dirk

-- 
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From pro|jcn@@h @end|ng |rom gm@||@com  Tue Jul 28 15:05:36 2020
From: pro|jcn@@h @end|ng |rom gm@||@com (J C Nash)
Date: Tue, 28 Jul 2020 09:05:36 -0400
Subject: [R-pkg-devel] install.packages() seems not to select the latest
 suitable version
In-Reply-To: <24352.2624.767112.748461@rob.eddelbuettel.com>
References: <7E6FCD0E-8690-4FA7-B66B-D1A0BF295DEF@stat.unipd.it>
 <24352.2624.767112.748461@rob.eddelbuettel.com>
Message-ID: <e86a7157-7df7-8dc7-5fa3-f0c2c614bd32@gmail.com>

Possibly the "old" site-library is not getting over-written. I had to
manually delete.

See https://www.mail-archive.com/r-help at r-project.org/msg259132.html

JN

On 2020-07-28 7:21 a.m., Dirk Eddelbuettel wrote:
> 
> Hi Adelchi,
> 
> On 28 July 2020 at 11:46, Adelchi Azzalini wrote:
> | When I updated package mnormt to version 2.0.0 in June (now at 2.0.1), 
> | at the stage of --as-cran checking, there was a compilation error,  
> | which was overcome by setting the 
> | 
> | Depends:	R (? 4.0.0)
> | 
> | With this option, all worked fine.
> | 
> | However, shortly afterwards, complaints started coming, 
> | either from users or from maintainers of packages making use of mnormt,
> | because this high version dependence causes troubles to some people,
> | such as those using Debian installations, currently at a much lower 
> | R version.
> 
> You can point those users to a) the r-sig-debian list and b) the Debian
> directory at CRAN as we have always had "backports" of the current R to older
> Debian releases---thanks to the work by Johannes Ranke "backporting" whatever
> my current Debian packages of R are.
> 
> Moreover, you can also point them at `apt install r-cran-mnormt` -- I have
> maintained your package within Debian since 2007 (!!) and continue to do so
> giving Debian (and Ubuntu) users the choice between a distro binary and
> installation from CRAN source. 
>  
> | At the time I select that dependence value, I relied on the fact that
> | install.packages() selected the most recent suitable version of a package,
> | given the existing R installation. I expected that people without
> | R 4.0.0 would have the older version of mnormt, 1.5-7, installed.
> | As my memory goes (and the memory of other people too), this was 
> | the working in the past, but apparently not any more. 
> 
> I don't think that is quite correct. The CRAN repo is always set up for the
> currently released version, and may allow constraints such 'R (>= 4.0.0)'
> imposing the current (major) release.
> 
> There is no recent change in this behavior.
> 
> | For instance, this is a passage from a specific user:
> |  
> | "install.packages() used tp just install the most recent available 
> | for your current version of R.  In the past it might have done just that, 
> | but that's clearly not the case currently."
> 
> Yes and no. I don't think this correctly stated. `install.packages()` always
> picks the most recent version, but this may also require running _the
> current_ R release.  I disagree about "not the case currently" -- no change
> as stated above.
> 
> | Can anyone clarify the reason of this (apparent? real?) change?
> | ...and possibly indicate a way who people with lower R version (and perhaps
> | limited R expertise) can install the older version of mnormt, 1.5-7, 
> | without much hassle?
> 
> "Versioned" installs were never supported by `install.packages()`.
> 
> But one could always download an older version to a local file, and point
> install.packages() at that file (and setting 'repos=NULL'), or use `R CMD
> INSTALL` directly. No change there either.
> 
> Dirk
>


From @zz@||n| @end|ng |rom @t@t@un|pd@|t  Thu Jul 30 16:30:30 2020
From: @zz@||n| @end|ng |rom @t@t@un|pd@|t (Adelchi Azzalini)
Date: Thu, 30 Jul 2020 16:30:30 +0200
Subject: [R-pkg-devel] install.packages() seems not to select the latest
 suitable version
In-Reply-To: <24352.2624.767112.748461@rob.eddelbuettel.com>
References: <7E6FCD0E-8690-4FA7-B66B-D1A0BF295DEF@stat.unipd.it>
 <24352.2624.767112.748461@rob.eddelbuettel.com>
Message-ID: <9BEDCBA8-F8C5-413B-BD36-65CBBE192D30@stat.unipd.it>

Many thanks for your detailed explanations/annotations.

Adelchi

> On 28 Jul 2020, at 13:21, Dirk Eddelbuettel <edd at debian.org> wrote:
> 
> 
> Hi Adelchi,
> 
> On 28 July 2020 at 11:46, Adelchi Azzalini wrote:
> | When I updated package mnormt to version 2.0.0 in June (now at 2.0.1), 
> | at the stage of --as-cran checking, there was a compilation error,  
> | which was overcome by setting the 
> | 
> | Depends:	R (? 4.0.0)
> | 
> | With this option, all worked fine.
> | 
> | However, shortly afterwards, complaints started coming, 
> | either from users or from maintainers of packages making use of mnormt,
> | because this high version dependence causes troubles to some people,
> | such as those using Debian installations, currently at a much lower 
> | R version.
> 
> You can point those users to a) the r-sig-debian list and b) the Debian
> directory at CRAN as we have always had "backports" of the current R to older
> Debian releases---thanks to the work by Johannes Ranke "backporting" whatever
> my current Debian packages of R are.
> 
> Moreover, you can also point them at `apt install r-cran-mnormt` -- I have
> maintained your package within Debian since 2007 (!!) and continue to do so
> giving Debian (and Ubuntu) users the choice between a distro binary and
> installation from CRAN source. 
> 
> | At the time I select that dependence value, I relied on the fact that
> | install.packages() selected the most recent suitable version of a package,
> | given the existing R installation. I expected that people without
> | R 4.0.0 would have the older version of mnormt, 1.5-7, installed.
> | As my memory goes (and the memory of other people too), this was 
> | the working in the past, but apparently not any more. 
> 
> I don't think that is quite correct. The CRAN repo is always set up for the
> currently released version, and may allow constraints such 'R (>= 4.0.0)'
> imposing the current (major) release.
> 
> There is no recent change in this behavior.
> 
> | For instance, this is a passage from a specific user:
> |  
> | "install.packages() used tp just install the most recent available 
> | for your current version of R.  In the past it might have done just that, 
> | but that's clearly not the case currently."
> 
> Yes and no. I don't think this correctly stated. `install.packages()` always
> picks the most recent version, but this may also require running _the
> current_ R release.  I disagree about "not the case currently" -- no change
> as stated above.
> 
> | Can anyone clarify the reason of this (apparent? real?) change?
> | ...and possibly indicate a way who people with lower R version (and perhaps
> | limited R expertise) can install the older version of mnormt, 1.5-7, 
> | without much hassle?
> 
> "Versioned" installs were never supported by `install.packages()`.
> 
> But one could always download an older version to a local file, and point
> install.packages() at that file (and setting 'repos=NULL'), or use `R CMD
> INSTALL` directly. No change there either.
> 
> Dirk
> 
> -- 
> https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From jw|j||e|@ @end|ng |rom bno@@c@be  Mon Aug  3 11:46:58 2020
From: jw|j||e|@ @end|ng |rom bno@@c@be (Jan Wijffels)
Date: Mon, 03 Aug 2020 09:46:58 +0000
Subject: [R-pkg-devel] c++17 on solaris cran
Message-ID: <DT2KKhLuN663D96X2yNeRSjFXB7rDxQKSvQu6OsGkZm_SZpGij63Xr8RBUz_dGvzyWvyrR50TgH4kB_CxglPDei7YTpw43KxEzjQo8775u4=@bnosac.be>

Hello everyone,

I've got at package on CRAN which uses C++17. Package is at https://cran.r-project.org/web/packages/image.binarization/index.html
The package fails on Solaris with the following message as my Makevars just contains CXX_STD = CXX17 indicating it requires C++17

* installing to library ?/home/ripley/R/Lib32?
* installing *source* package ?image.binarization? ...
** package ?image.binarization? successfully unpacked and MD5 sums checked
** using staged installation
** libs
Error: C++17 standard requested but CXX17 is not defined
* removing ?/home/ripley/R/Lib32/image.binarization?

real        1.0
user        0.7
sys         0.1

Looks like Solaris does not support C++17 yet. Is this error something that needs to be fixed by me? Will the package be removed from CRAN because of this. Any other people with C++17 code who can provide some advise.

best,
Jan

Jan Wijffels
Statistician
www.bnosac.be | +32 486 611708
	[[alternative HTML version deleted]]


From p@u|@buerkner @end|ng |rom gm@||@com  Mon Aug  3 16:42:20 2020
From: p@u|@buerkner @end|ng |rom gm@||@com (Paul Buerkner)
Date: Mon, 3 Aug 2020 16:42:20 +0200
Subject: [R-pkg-devel] Problem with V8 on CRAN Debian
Message-ID: <CAGoSky-j4ZHyiZap0hHHUi73e8U-RJaCJJNn6cu6HUWeqcBYpA@mail.gmail.com>

Dear R community,

in an effort to re-submit one of my packages (thurstonianIRT) to CRAN
because of some test failures after updates of other packages, I get the
following error from the CRAN debian installation, which I don't know how
to address:

* installing *source* package ?thurstonianIRT? ...
** using staged installation
** libs
"/home/hornik/tmp/R/bin/Rscript" -e "source(file.path('..', 'tools',
'make_cc.R')); make_cc(commandArgs(TRUE))"
stan_files/thurstonian_irt_model.stan
Error in dyn.load(file, DLLpath = DLLpath, ...) :
  unable to load shared object
?/home/hornik/lib/R/Library/4.1/x86_64-linux-gnu/V8/libs/V8.so?:
  libnode.so.64: cannot open shared object file: No such file or directory
Calls: make_cc ... asNamespace -> loadNamespace -> library.dynam -> dyn.load
Execution halted
make: *** [Makevars:17: stan_files/thurstonian_irt_model.cc] Error 1
ERROR: compilation failed for package ?thurstonianIRT?
* removing ?/srv/hornik/tmp/CRAN/thurstonianIRT.Rcheck/thurstonianIRT?


It seems to be a problem with the V8 package (on which the latest version
of rstan depends) but I don't know if I can fix it from my side.

Many thanks for your advice
Paul

	[[alternative HTML version deleted]]


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Mon Aug  3 16:45:15 2020
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Mon, 3 Aug 2020 16:45:15 +0200
Subject: [R-pkg-devel] Problem with V8 on CRAN Debian
In-Reply-To: <CAGoSky-j4ZHyiZap0hHHUi73e8U-RJaCJJNn6cu6HUWeqcBYpA@mail.gmail.com>
References: <CAGoSky-j4ZHyiZap0hHHUi73e8U-RJaCJJNn6cu6HUWeqcBYpA@mail.gmail.com>
Message-ID: <9a5469d9-3493-2757-b47a-57862b4ea837@statistik.tu-dortmund.de>

I have triggered new checks on the CRAN machines.

Best,
Uwe Ligges

On 03.08.2020 16:42, Paul Buerkner wrote:
> Dear R community,
> 
> in an effort to re-submit one of my packages (thurstonianIRT) to CRAN
> because of some test failures after updates of other packages, I get the
> following error from the CRAN debian installation, which I don't know how
> to address:
> 
> * installing *source* package ?thurstonianIRT? ...
> ** using staged installation
> ** libs
> "/home/hornik/tmp/R/bin/Rscript" -e "source(file.path('..', 'tools',
> 'make_cc.R')); make_cc(commandArgs(TRUE))"
> stan_files/thurstonian_irt_model.stan
> Error in dyn.load(file, DLLpath = DLLpath, ...) :
>    unable to load shared object
> ?/home/hornik/lib/R/Library/4.1/x86_64-linux-gnu/V8/libs/V8.so?:
>    libnode.so.64: cannot open shared object file: No such file or directory
> Calls: make_cc ... asNamespace -> loadNamespace -> library.dynam -> dyn.load
> Execution halted
> make: *** [Makevars:17: stan_files/thurstonian_irt_model.cc] Error 1
> ERROR: compilation failed for package ?thurstonianIRT?
> * removing ?/srv/hornik/tmp/CRAN/thurstonianIRT.Rcheck/thurstonianIRT?
> 
> 
> It seems to be a problem with the V8 package (on which the latest version
> of rstan depends) but I don't know if I can fix it from my side.
> 
> Many thanks for your advice
> Paul
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From edd @end|ng |rom deb|@n@org  Mon Aug  3 17:07:49 2020
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Mon, 3 Aug 2020 10:07:49 -0500
Subject: [R-pkg-devel] Problem with V8 on CRAN Debian
In-Reply-To: <CAGoSky-j4ZHyiZap0hHHUi73e8U-RJaCJJNn6cu6HUWeqcBYpA@mail.gmail.com>
References: <CAGoSky-j4ZHyiZap0hHHUi73e8U-RJaCJJNn6cu6HUWeqcBYpA@mail.gmail.com>
Message-ID: <24360.10309.425499.453681@rob.eddelbuettel.com>


On 3 August 2020 at 16:42, Paul Buerkner wrote:
| Dear R community,
| 
| in an effort to re-submit one of my packages (thurstonianIRT) to CRAN
| because of some test failures after updates of other packages, I get the
| following error from the CRAN debian installation, which I don't know how
| to address:
| 
| * installing *source* package ?thurstonianIRT? ...
| ** using staged installation
| ** libs
| "/home/hornik/tmp/R/bin/Rscript" -e "source(file.path('..', 'tools',
| 'make_cc.R')); make_cc(commandArgs(TRUE))"
| stan_files/thurstonian_irt_model.stan
| Error in dyn.load(file, DLLpath = DLLpath, ...) :
|   unable to load shared object
| ?/home/hornik/lib/R/Library/4.1/x86_64-linux-gnu/V8/libs/V8.so?:
|   libnode.so.64: cannot open shared object file: No such file or directory
| Calls: make_cc ... asNamespace -> loadNamespace -> library.dynam -> dyn.load
| Execution halted
| make: *** [Makevars:17: stan_files/thurstonian_irt_model.cc] Error 1
| ERROR: compilation failed for package ?thurstonianIRT?
| * removing ?/srv/hornik/tmp/CRAN/thurstonianIRT.Rcheck/thurstonianIRT?
| 
| 
| It seems to be a problem with the V8 package (on which the latest version
| of rstan depends) but I don't know if I can fix it from my side.

Tracing it:

  edd at rob:~$ locate libnode.so.64
  /usr/lib/x86_64-linux-gnu/libnode.so.64
  edd at rob:~$ dpkg -S $(locate libnode.so.64)
  libnode64:amd64: /usr/lib/x86_64-linux-gnu/libnode.so.64
  edd at rob:~$ 

Looks like libnode64 needs to be installed. On systems that lack complete
dependency resolutions (cough, RSPM, cough) one needs libnode-dev; this
libnode64 above is dependency of libnode-dev.

Maybe you need to add 'libnode-dev' in SystemRequirements:  ?

Dirk

-- 
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From edd @end|ng |rom deb|@n@org  Mon Aug  3 17:32:19 2020
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Mon, 3 Aug 2020 10:32:19 -0500
Subject: [R-pkg-devel] Problem with V8 on CRAN Debian
In-Reply-To: <24360.10309.425499.453681@rob.eddelbuettel.com>
References: <CAGoSky-j4ZHyiZap0hHHUi73e8U-RJaCJJNn6cu6HUWeqcBYpA@mail.gmail.com>
 <24360.10309.425499.453681@rob.eddelbuettel.com>
Message-ID: <24360.11779.976625.89757@rob.eddelbuettel.com>


On 3 August 2020 at 10:07, Dirk Eddelbuettel wrote:
| Tracing it:
| 
|   edd at rob:~$ locate libnode.so.64
|   /usr/lib/x86_64-linux-gnu/libnode.so.64
|   edd at rob:~$ dpkg -S $(locate libnode.so.64)
|   libnode64:amd64: /usr/lib/x86_64-linux-gnu/libnode.so.64
|   edd at rob:~$ 
| 
| Looks like libnode64 needs to be installed. On systems that lack complete
| dependency resolutions (cough, RSPM, cough) one needs libnode-dev; this
| libnode64 above is dependency of libnode-dev.
| 
| Maybe you need to add 'libnode-dev' in SystemRequirements:  ?

Much simpler. On Debian the so number is now 72 and no longer 64, so CRAN
package V8 needs a simple rebuild to look for 72 and not the no-longer
existing 64. CC'ing Kurt Hornik.

I was, coincidentally, hitting the exact same issue on a Debian testing box
running reverse depends.

It's "the price we pay" by not having CRAN package tied to the system-level
dependencies which can at time also change.

Dirk

-- 
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From @|mon@bonner @end|ng |rom uwo@c@  Thu Aug  6 00:31:27 2020
From: @|mon@bonner @end|ng |rom uwo@c@ (Simon Bonner)
Date: Wed, 5 Aug 2020 22:31:27 +0000
Subject: [R-pkg-devel] Package can't be imported with Suggests
Message-ID: <YQXPR0101MB1671B95AEDBE24142A674445F94B0@YQXPR0101MB1671.CANPRD01.PROD.OUTLOOK.COM>

Hi all,

I?m wondering if someone an offer advice on a problem I?m facing in developing a package.

My package essentially generates code and formats data for one of two MCMC sampling engines, JAGS accessed via rjags or nimble (a native R package), calls the engines, and then provides functions to access the results. Since only one of the engines is needed I would like to include rjags and nimble in Suggests in the DESCRIPTION and use requireNamespace() to load the appropriate package when its functionality is needed.

Unfortunately, nimble will not work with this mechanism. It relies on a complex mechanism to compile C++ code to run the sampler, and some of the functions cannot be found when the package is loaded in this way. I?ve been in touch with the maintainers and they are aware of the issue but the current fix is to include the package under Depends. However, this forces a user to install nimble (which itself requires compiling lengthy C++ code) even if the user intends to run the sampler in JAGS.

I thought I?d solved the problem by including nimble in Suggests and then loading it via library() so that all of its functions are attached. This works, but produces a note during the check:
? checking dependencies in R code ... NOTE
  'library' or 'require' call to ?nimble? in package code.
    Please use :: or requireNamespace() instead.
    See section 'Suggested packages' in the 'Writing R Extensions' manual

What is the recommendation?

I see two options:


  1.  Include nimble in Depends and force user to install it.
  2.  Ignore the note and explain the problem when I resubmit to CRAN.

Am I missing anything?

Thanks in advance!

Simon





Simon Bonner
Assistant Professor of Environmetrics
Department of Statistical and Actuarial Sciences
University of Western Ontario

Office: Western Science Centre rm 276

Email: sbonner6 at uwo.ca<mailto:sbonner6 at uwo.ca> | Telephone: 519-661-2111 x88205 | Fax: 519-661-3813
Twitter: @bonnerstatslab | Website: http://simon.bonners.ca/bonner-lab/wpblog/


	[[alternative HTML version deleted]]


From g@ood07 @end|ng |rom gm@||@com  Thu Aug  6 00:45:45 2020
From: g@ood07 @end|ng |rom gm@||@com (Gaurav Sood)
Date: Wed, 5 Aug 2020 15:45:45 -0700
Subject: [R-pkg-devel] Package can't be imported with Suggests
In-Reply-To: <YQXPR0101MB1671B95AEDBE24142A674445F94B0@YQXPR0101MB1671.CANPRD01.PROD.OUTLOOK.COM>
References: <YQXPR0101MB1671B95AEDBE24142A674445F94B0@YQXPR0101MB1671.CANPRD01.PROD.OUTLOOK.COM>
Message-ID: <CACNiqvT9-w1txOp13z0mwxNc2gHYMp9QSZhYqdfJmFnnoJEsOA@mail.gmail.com>

I think the key line = " Unfortunately, nimble will not work with this
mechanism. "

Given that, depends seems like a good short-term solution. Change it to
suggests once the upstream problem is fixed.


On Wed, Aug 5, 2020 at 3:36 PM Simon Bonner <simon.bonner at uwo.ca> wrote:

> Hi all,
>
> I?m wondering if someone an offer advice on a problem I?m facing in
> developing a package.
>
> My package essentially generates code and formats data for one of two MCMC
> sampling engines, JAGS accessed via rjags or nimble (a native R package),
> calls the engines, and then provides functions to access the results. Since
> only one of the engines is needed I would like to include rjags and nimble
> in Suggests in the DESCRIPTION and use requireNamespace() to load the
> appropriate package when its functionality is needed.
>
> Unfortunately, nimble will not work with this mechanism. It relies on a
> complex mechanism to compile C++ code to run the sampler, and some of the
> functions cannot be found when the package is loaded in this way. I?ve been
> in touch with the maintainers and they are aware of the issue but the
> current fix is to include the package under Depends. However, this forces a
> user to install nimble (which itself requires compiling lengthy C++ code)
> even if the user intends to run the sampler in JAGS.
>
> I thought I?d solved the problem by including nimble in Suggests and then
> loading it via library() so that all of its functions are attached. This
> works, but produces a note during the check:
> ? checking dependencies in R code ... NOTE
>   'library' or 'require' call to ?nimble? in package code.
>     Please use :: or requireNamespace() instead.
>     See section 'Suggested packages' in the 'Writing R Extensions' manual
>
> What is the recommendation?
>
> I see two options:
>
>
>   1.  Include nimble in Depends and force user to install it.
>   2.  Ignore the note and explain the problem when I resubmit to CRAN.
>
> Am I missing anything?
>
> Thanks in advance!
>
> Simon
>
>
>
>
>
> Simon Bonner
> Assistant Professor of Environmetrics
> Department of Statistical and Actuarial Sciences
> University of Western Ontario
>
> Office: Western Science Centre rm 276
>
> Email: sbonner6 at uwo.ca<mailto:sbonner6 at uwo.ca> | Telephone: 519-661-2111
> x88205 | Fax: 519-661-3813
> Twitter: @bonnerstatslab | Website:
> http://simon.bonners.ca/bonner-lab/wpblog/
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From wdun|@p @end|ng |rom t|bco@com  Thu Aug  6 01:25:08 2020
From: wdun|@p @end|ng |rom t|bco@com (William Dunlap)
Date: Wed, 5 Aug 2020 16:25:08 -0700
Subject: [R-pkg-devel] Package can't be imported with Suggests
In-Reply-To: <YQXPR0101MB1671B95AEDBE24142A674445F94B0@YQXPR0101MB1671.CANPRD01.PROD.OUTLOOK.COM>
References: <YQXPR0101MB1671B95AEDBE24142A674445F94B0@YQXPR0101MB1671.CANPRD01.PROD.OUTLOOK.COM>
Message-ID: <CAF8bMcZPSK_REDHmw9iR9rkEjUOApOt3AjGUgnUKD--w-aTBYw@mail.gmail.com>

You might make a second package that depends only on nimble and your
main package can then suggest that second package and JAGS.

Bill Dunlap
TIBCO Software
wdunlap tibco.com

On Wed, Aug 5, 2020 at 3:36 PM Simon Bonner <simon.bonner at uwo.ca> wrote:
>
> Hi all,
>
> I?m wondering if someone an offer advice on a problem I?m facing in developing a package.
>
> My package essentially generates code and formats data for one of two MCMC sampling engines, JAGS accessed via rjags or nimble (a native R package), calls the engines, and then provides functions to access the results. Since only one of the engines is needed I would like to include rjags and nimble in Suggests in the DESCRIPTION and use requireNamespace() to load the appropriate package when its functionality is needed.
>
> Unfortunately, nimble will not work with this mechanism. It relies on a complex mechanism to compile C++ code to run the sampler, and some of the functions cannot be found when the package is loaded in this way. I?ve been in touch with the maintainers and they are aware of the issue but the current fix is to include the package under Depends. However, this forces a user to install nimble (which itself requires compiling lengthy C++ code) even if the user intends to run the sampler in JAGS.
>
> I thought I?d solved the problem by including nimble in Suggests and then loading it via library() so that all of its functions are attached. This works, but produces a note during the check:
> ? checking dependencies in R code ... NOTE
>   'library' or 'require' call to ?nimble? in package code.
>     Please use :: or requireNamespace() instead.
>     See section 'Suggested packages' in the 'Writing R Extensions' manual
>
> What is the recommendation?
>
> I see two options:
>
>
>   1.  Include nimble in Depends and force user to install it.
>   2.  Ignore the note and explain the problem when I resubmit to CRAN.
>
> Am I missing anything?
>
> Thanks in advance!
>
> Simon
>
>
>
>
>
> Simon Bonner
> Assistant Professor of Environmetrics
> Department of Statistical and Actuarial Sciences
> University of Western Ontario
>
> Office: Western Science Centre rm 276
>
> Email: sbonner6 at uwo.ca<mailto:sbonner6 at uwo.ca> | Telephone: 519-661-2111 x88205 | Fax: 519-661-3813
> Twitter: @bonnerstatslab | Website: http://simon.bonners.ca/bonner-lab/wpblog/
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From edd @end|ng |rom deb|@n@org  Thu Aug  6 01:30:17 2020
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Wed, 5 Aug 2020 18:30:17 -0500
Subject: [R-pkg-devel] Package can't be imported with Suggests
In-Reply-To: <CAF8bMcZPSK_REDHmw9iR9rkEjUOApOt3AjGUgnUKD--w-aTBYw@mail.gmail.com>
References: <YQXPR0101MB1671B95AEDBE24142A674445F94B0@YQXPR0101MB1671.CANPRD01.PROD.OUTLOOK.COM>
 <CAF8bMcZPSK_REDHmw9iR9rkEjUOApOt3AjGUgnUKD--w-aTBYw@mail.gmail.com>
Message-ID: <24363.16649.607570.550014@rob.eddelbuettel.com>


On 5 August 2020 at 16:25, William Dunlap wrote:
| You might make a second package that depends only on nimble and your
| main package can then suggest that second package and JAGS.

Nice. "We can solve any problem by introducing an extra level of indirection."

See https://en.wikipedia.org/wiki/Fundamental_theorem_of_software_engineering

Dirk
 
| Bill Dunlap
| TIBCO Software
| wdunlap tibco.com
| 
| On Wed, Aug 5, 2020 at 3:36 PM Simon Bonner <simon.bonner at uwo.ca> wrote:
| >
| > Hi all,
| >
| > I?m wondering if someone an offer advice on a problem I?m facing in developing a package.
| >
| > My package essentially generates code and formats data for one of two MCMC sampling engines, JAGS accessed via rjags or nimble (a native R package), calls the engines, and then provides functions to access the results. Since only one of the engines is needed I would like to include rjags and nimble in Suggests in the DESCRIPTION and use requireNamespace() to load the appropriate package when its functionality is needed.
| >
| > Unfortunately, nimble will not work with this mechanism. It relies on a complex mechanism to compile C++ code to run the sampler, and some of the functions cannot be found when the package is loaded in this way. I?ve been in touch with the maintainers and they are aware of the issue but the current fix is to include the package under Depends. However, this forces a user to install nimble (which itself requires compiling lengthy C++ code) even if the user intends to run the sampler in JAGS.
| >
| > I thought I?d solved the problem by including nimble in Suggests and then loading it via library() so that all of its functions are attached. This works, but produces a note during the check:
| > ? checking dependencies in R code ... NOTE
| >   'library' or 'require' call to ?nimble? in package code.
| >     Please use :: or requireNamespace() instead.
| >     See section 'Suggested packages' in the 'Writing R Extensions' manual
| >
| > What is the recommendation?
| >
| > I see two options:
| >
| >
| >   1.  Include nimble in Depends and force user to install it.
| >   2.  Ignore the note and explain the problem when I resubmit to CRAN.
| >
| > Am I missing anything?
| >
| > Thanks in advance!
| >
| > Simon
| >
| >
| >
| >
| >
| > Simon Bonner
| > Assistant Professor of Environmetrics
| > Department of Statistical and Actuarial Sciences
| > University of Western Ontario
| >
| > Office: Western Science Centre rm 276
| >
| > Email: sbonner6 at uwo.ca<mailto:sbonner6 at uwo.ca> | Telephone: 519-661-2111 x88205 | Fax: 519-661-3813
| > Twitter: @bonnerstatslab | Website: http://simon.bonners.ca/bonner-lab/wpblog/
| >
| >
| >         [[alternative HTML version deleted]]
| >
| > ______________________________________________
| > R-package-devel at r-project.org mailing list
| > https://stat.ethz.ch/mailman/listinfo/r-package-devel
| 
| ______________________________________________
| R-package-devel at r-project.org mailing list
| https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From ru@@e||-|enth @end|ng |rom u|ow@@edu  Thu Aug  6 02:57:55 2020
From: ru@@e||-|enth @end|ng |rom u|ow@@edu (Lenth, Russell V)
Date: Thu, 6 Aug 2020 00:57:55 +0000
Subject: [R-pkg-devel] Documenting courtesy S3 methods
Message-ID: <CH2PR04MB6855A30C1C04E6891806A46DF1480@CH2PR04MB6855.namprd04.prod.outlook.com>

Dear package developers,

My package offers a few methods whose generics are in other packages; for example, 'cld', for which the generic is in the 'multcomp' package. Unless the user wants to use cld() (which I don't even encourage), they do not need the multcomp package to use other features of my package. Therefore, I do not want to import and re-export multcomp::cld. Instead, on loading my package, I dynamically register the method via RegisterS3Method() if the user's system happens to have multcomp installed; and if they don't, then they can still use my package, just not the cld method. this has worked well and keeps down the number of dependencies.

The problem is documenting it. I thought I had it solved by using this roxygen2 tag:

    #' @method multcomp::cld emmGrid

In turn, this tag generates these lines in the \usage section of my .Rd file:

    \method{multcomp::cld}{emmGrid}(object, details = FALSE, sort = TRUE, by,
      alpha = 0.05, Letters = c("1234567890", LETTERS, letters),
      reversed = FALSE, ...)

and the resulting help file looks like this:

    ## S3 method for class 'emmGrid'
    multcomp::cld(object, details = FALSE, sort = TRUE, by,
      alpha = 0.05, Letters = c("1234567890", LETTERS, letters),
      reversed = FALSE, ...)

This is exactly what I want. It tells the user clearly that if they want to use cld(), they have to have multcomp installed, and either name it explicitly in the call or have it in the search path.

No problems occur until I check the package, when I get this warning message:

    Bad \usage lines found in documentation object 'summary.emmGrid':
      <unescaped bksl>method{multcomp::cld}{emmGrid}(object, details = FALSE, sort = TRUE, by,
        alpha = 0.05, Letters = c("1234567890", LETTERS, letters),
        reversed = FALSE, ...)

Well I suppose this is "bad" as in unexpected; but it seems to be not bad in that it doesn't keep the help page from formatting correctly. And truly, I don't see how it could cause any harm. At lest the usage comes out correctly in both the HTML help and the PDF manual.

I can avoid the problem just by omitting "multcomp::". But then the user doesn't get such a clear message about how to use the function. 

I'm interested in suggestions, but again I would regard importing multcomp::cld as an unhelpful suggestion. We ought to be able to provide courtesy methods for generics in other packages (and this is not the only one in my package) without importing a whole bunch of unneeded stuff and doubling the number of required installations.

Thanks

Russ

Russell V. Lenth? -? Professor Emeritus
Department of Statistics and Actuarial Science?? 
The University of Iowa ?-? Iowa City, IA 52242? USA?? 
Voice (319)335-0712 (Dept. office)? -? FAX (319)335-3017


From bgunter@4567 @end|ng |rom gm@||@com  Thu Aug  6 04:31:27 2020
From: bgunter@4567 @end|ng |rom gm@||@com (Bert Gunter)
Date: Wed, 5 Aug 2020 19:31:27 -0700
Subject: [R-pkg-devel] Documenting courtesy S3 methods
In-Reply-To: <CH2PR04MB6855A30C1C04E6891806A46DF1480@CH2PR04MB6855.namprd04.prod.outlook.com>
References: <CH2PR04MB6855A30C1C04E6891806A46DF1480@CH2PR04MB6855.namprd04.prod.outlook.com>
Message-ID: <CAGxFJbQiwHxp393F6NDOVX7=OV7GNRx-S_+Bbm7aRLsRH1u8pA@mail.gmail.com>

From WRE:

"As from R 3.6.0 one can also use S3method() directives to perform
*delayed*registration.
With

if(getRversion() >= "3.6.0") {
    S3method(pkg::gen, cls)
}

function gen.cls will get registered as an S3 method for class cls and
generic gen from package pkg only when the namespace of pkg is loaded. This
can be employed to deal with situations where the method is not
?immediately? needed, and having to pre-load the namespace of pkg (and all
its strong dependencies) in order to perform immediate registration is
considered too onerous."

I understand the issue is documentation, but if you took this route, could
you not document your S3 method as usual without loading multcomp's (or
whatever) namespace. You could include a \note section in the doc saying
that the multcomp namespace must be explicitly loaded if your method is to
be used (perhaps showing the code to do so)

If I am clearly mistaken about this, feel free to dismiss without reply.


Cheers,
Bert Gunter

"The trouble with having an open mind is that people keep coming along and
sticking things into it."
-- Opus (aka Berkeley Breathed in his "Bloom County" comic strip )


On Wed, Aug 5, 2020 at 5:58 PM Lenth, Russell V <russell-lenth at uiowa.edu>
wrote:

> Dear package developers,
>
> My package offers a few methods whose generics are in other packages; for
> example, 'cld', for which the generic is in the 'multcomp' package. Unless
> the user wants to use cld() (which I don't even encourage), they do not
> need the multcomp package to use other features of my package. Therefore, I
> do not want to import and re-export multcomp::cld. Instead, on loading my
> package, I dynamically register the method via RegisterS3Method() if the
> user's system happens to have multcomp installed; and if they don't, then
> they can still use my package, just not the cld method. this has worked
> well and keeps down the number of dependencies.
>
> The problem is documenting it. I thought I had it solved by using this
> roxygen2 tag:
>
>     #' @method multcomp::cld emmGrid
>
> In turn, this tag generates these lines in the \usage section of my .Rd
> file:
>
>     \method{multcomp::cld}{emmGrid}(object, details = FALSE, sort = TRUE,
> by,
>       alpha = 0.05, Letters = c("1234567890", LETTERS, letters),
>       reversed = FALSE, ...)
>
> and the resulting help file looks like this:
>
>     ## S3 method for class 'emmGrid'
>     multcomp::cld(object, details = FALSE, sort = TRUE, by,
>       alpha = 0.05, Letters = c("1234567890", LETTERS, letters),
>       reversed = FALSE, ...)
>
> This is exactly what I want. It tells the user clearly that if they want
> to use cld(), they have to have multcomp installed, and either name it
> explicitly in the call or have it in the search path.
>
> No problems occur until I check the package, when I get this warning
> message:
>
>     Bad \usage lines found in documentation object 'summary.emmGrid':
>       <unescaped bksl>method{multcomp::cld}{emmGrid}(object, details =
> FALSE, sort = TRUE, by,
>         alpha = 0.05, Letters = c("1234567890", LETTERS, letters),
>         reversed = FALSE, ...)
>
> Well I suppose this is "bad" as in unexpected; but it seems to be not bad
> in that it doesn't keep the help page from formatting correctly. And truly,
> I don't see how it could cause any harm. At lest the usage comes out
> correctly in both the HTML help and the PDF manual.
>
> I can avoid the problem just by omitting "multcomp::". But then the user
> doesn't get such a clear message about how to use the function.
>
> I'm interested in suggestions, but again I would regard importing
> multcomp::cld as an unhelpful suggestion. We ought to be able to provide
> courtesy methods for generics in other packages (and this is not the only
> one in my package) without importing a whole bunch of unneeded stuff and
> doubling the number of required installations.
>
> Thanks
>
> Russ
>
> Russell V. Lenth  -  Professor Emeritus
> Department of Statistics and Actuarial Science
> The University of Iowa  -  Iowa City, IA 52242  USA
> Voice (319)335-0712 (Dept. office)  -  FAX (319)335-3017
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From jen@@oeh|@ch|@ege| @end|ng |rom truec|u@ter@com  Thu Aug  6 12:21:26 2020
From: jen@@oeh|@ch|@ege| @end|ng |rom truec|u@ter@com (=?UTF-8?Q?Dr=2E_Jens_Oehlschl=C3=A4gel?=)
Date: Thu, 6 Aug 2020 12:21:26 +0200
Subject: [R-pkg-devel] Package can't be imported with Suggests
In-Reply-To: <24363.16649.607570.550014@rob.eddelbuettel.com>
References: <YQXPR0101MB1671B95AEDBE24142A674445F94B0@YQXPR0101MB1671.CANPRD01.PROD.OUTLOOK.COM>
 <CAF8bMcZPSK_REDHmw9iR9rkEjUOApOt3AjGUgnUKD--w-aTBYw@mail.gmail.com>
 <24363.16649.607570.550014@rob.eddelbuettel.com>
Message-ID: <trinity-f54dfce4-9b35-44a5-b113-01412939fc05-1596709286554@3c-app-webde-bap10>

Dirk,

This sounds familiar: in package 'bit' for  

bit | bitwhich 

R did neither S3-dispatch to "|.bit" nor to "|.bitwhich" but nonsensically to the default method. 

It took me a while to reverse my class thinking enough to realize that I could get control by forcing dispatch to a common class 'booltype'.  So far this sounds harmless. But the truth is that to make this work 'booltype' must not be a common superclass but needs to be a subclass of 'bit' in bit-objects and needs to be a subclass of 'bitwhich' in bitwhich-objects. Only then the dispatch to "|.booltype" dominates and we get a seemingly conflict-free dispatch to "|.booltype" which then resolves possible conflicts. I hope using R's S3 class system upside-down does not introduce "another problem". Citing from "Beautiful Code":

"
it is worth bringing our discussion to an end by noting that Lampson attributes the aphorism that started our exploration (all problems in computer science can be solved by another level of indirection) to David Wheeler, the inventor of the subroutine. Significantly, Wheeler completed his quote with another phrase: "But that usually will create another problem."
"

Best

Jens



#
> Gesendet: Donnerstag, 06. August 2020 um 01:30 Uhr
> Von: "Dirk Eddelbuettel" <edd at debian.org>
> An: "William Dunlap" <wdunlap at tibco.com>
> Cc: "r-package-devel at r-project.org" <r-package-devel at r-project.org>
> Betreff: Re: [R-pkg-devel] Package can't be imported with Suggests
>
> 
> On 5 August 2020 at 16:25, William Dunlap wrote:
> | You might make a second package that depends only on nimble and your
> | main package can then suggest that second package and JAGS.
> 
> Nice. "We can solve any problem by introducing an extra level of indirection."
> 
> See https://en.wikipedia.org/wiki/Fundamental_theorem_of_software_engineering
> 
> Dirk
>  
> | Bill Dunlap
> | TIBCO Software
> | wdunlap tibco.com
> | 
> | On Wed, Aug 5, 2020 at 3:36 PM Simon Bonner <simon.bonner at uwo.ca> wrote:
> | >
> | > Hi all,
> | >
> | > I?m wondering if someone an offer advice on a problem I?m facing in developing a package.
> | >
> | > My package essentially generates code and formats data for one of two MCMC sampling engines, JAGS accessed via rjags or nimble (a native R package), calls the engines, and then provides functions to access the results. Since only one of the engines is needed I would like to include rjags and nimble in Suggests in the DESCRIPTION and use requireNamespace() to load the appropriate package when its functionality is needed.
> | >
> | > Unfortunately, nimble will not work with this mechanism. It relies on a complex mechanism to compile C++ code to run the sampler, and some of the functions cannot be found when the package is loaded in this way. I?ve been in touch with the maintainers and they are aware of the issue but the current fix is to include the package under Depends. However, this forces a user to install nimble (which itself requires compiling lengthy C++ code) even if the user intends to run the sampler in JAGS.
> | >
> | > I thought I?d solved the problem by including nimble in Suggests and then loading it via library() so that all of its functions are attached. This works, but produces a note during the check:
> | > ? checking dependencies in R code ... NOTE
> | >   'library' or 'require' call to ?nimble? in package code.
> | >     Please use :: or requireNamespace() instead.
> | >     See section 'Suggested packages' in the 'Writing R Extensions' manual
> | >
> | > What is the recommendation?
> | >
> | > I see two options:
> | >
> | >
> | >   1.  Include nimble in Depends and force user to install it.
> | >   2.  Ignore the note and explain the problem when I resubmit to CRAN.
> | >
> | > Am I missing anything?
> | >
> | > Thanks in advance!
> | >
> | > Simon
> | >
> | >
> | >
> | >
> | >
> | > Simon Bonner
> | > Assistant Professor of Environmetrics
> | > Department of Statistical and Actuarial Sciences
> | > University of Western Ontario
> | >
> | > Office: Western Science Centre rm 276
> | >
> | > Email: sbonner6 at uwo.ca<mailto:sbonner6 at uwo.ca> | Telephone: 519-661-2111 x88205 | Fax: 519-661-3813
> | > Twitter: @bonnerstatslab | Website: http://simon.bonners.ca/bonner-lab/wpblog/
> | >
> | >
> | >         [[alternative HTML version deleted]]
> | >
> | > ______________________________________________
> | > R-package-devel at r-project.org mailing list
> | > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> | 
> | ______________________________________________
> | R-package-devel at r-project.org mailing list
> | https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> -- 
> https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From ru@@e||-|enth @end|ng |rom u|ow@@edu  Thu Aug  6 17:12:13 2020
From: ru@@e||-|enth @end|ng |rom u|ow@@edu (Lenth, Russell V)
Date: Thu, 6 Aug 2020 15:12:13 +0000
Subject: [R-pkg-devel] Documenting courtesy S3 methods
Message-ID: <CH2PR04MB68553C1886F7E12E5A5B7663F1480@CH2PR04MB6855.namprd04.prod.outlook.com>

Thanks, Bert. 

This looks potentially useful as an alternative to the way I currently dynamically register the method. It does seem to require that 'pkg' must actually be installed on the system in order to work, and that pkg would have to be listed in Import. I'd rather not force users to install packages they will never use. I am not sure of this requirement, but I'm sure I could verify it one way or the other using the checking system.

And yes, I could (and do) document within the Details and Examples (and could add a note as well) that users need to use multcomp::cld(). It just seems that actually showing that in the Usage section is by far the clearest way to communicate that requirement.

Russ

From: Bert Gunter <bgunter.4567 at gmail.com> 
Sent: Wednesday, August 5, 2020 9:31 PM
To: Lenth, Russell V <russell-lenth at uiowa.edu>
Cc: r-package-devel at r-project.org
Subject: [External] Re: [R-pkg-devel] Documenting courtesy S3 methods

From WRE:

"As from R 3.6.0 one can also use?S3method()?directives to perform?delayed registration. With
if(getRversion() >= "3.6.0") {
    S3method(pkg::gen, cls)
}
function?gen.cls?will get registered as an S3 method for class?cls?and generic?gen?from package?pkg?only when the namespace of?pkg?is loaded. This can be employed to deal with situations where the method is not ?immediately? needed, and having to pre-load the namespace of?pkg?(and all its strong dependencies) in order to perform immediate registration is considered too onerous."
I understand the issue is documentation, but if you took this route, could you not document your S3 method as usual without loading multcomp's (or whatever) namespace. You could include a \note section in the doc saying that the multcomp namespace must be explicitly loaded if your method is to be used (perhaps showing the code to do so)
If I am clearly mistaken about this, feel free to dismiss without reply.

Cheers,
Bert Gunter



From ru@@e||-|enth @end|ng |rom u|ow@@edu  Thu Aug  6 21:13:30 2020
From: ru@@e||-|enth @end|ng |rom u|ow@@edu (Lenth, Russell V)
Date: Thu, 6 Aug 2020 19:13:30 +0000
Subject: [R-pkg-devel] Documenting courtesy S3 methods
In-Reply-To: <CAGxFJbS_Dgf+UY20z2_YACRPDPAJGGTsBg79UTtfRHxCCyWWWA@mail.gmail.com>
References: <CH2PR04MB68553C1886F7E12E5A5B7663F1480@CH2PR04MB6855.namprd04.prod.outlook.com>
 <CAGxFJbS_Dgf+UY20z2_YACRPDPAJGGTsBg79UTtfRHxCCyWWWA@mail.gmail.com>
Message-ID: <CH2PR04MB685592A688571EE0A9F7B2BCF1480@CH2PR04MB6855.namprd04.prod.outlook.com>

Testing results for Bert's suggestion...

I tested this with a different -- much smaller -- package: Put the S3method() construct in NAMESPACE but the generic package is not mentioned at all in any DESCRIPTION field. I built the package and checked it --as-cran. Interesting results:

  * Calling multcomp::cld(object) worked just fine without my doing anything to register the method. 
  * In checking, there was no objection to my not importing the generic for cld.

So this looks like a potentially good solution, except for the documentation issue.

BTW, note this parallel:

  * In NAMESPACE, the construct    S3method(pkg::gen, cls)
  * In Rd files, the macro    \S3method{pkg::gen}{cls}(args)

The latter is what I am asking about, that creates a warning. However, the parallel between these just cries out to be valid!

Russ

From: Bert Gunter <bgunter.4567 at gmail.com> 
Sent: Thursday, August 6, 2020 12:22 PM
To: Lenth, Russell V <russell-lenth at uiowa.edu>
Subject: Re: [R-pkg-devel] Documenting courtesy S3 methods

Probably unnecessary to say, but if/when you determine whether the package must be installed, let us all know.

Bert

From @|mon@bonner @end|ng |rom uwo@c@  Fri Aug  7 13:51:26 2020
From: @|mon@bonner @end|ng |rom uwo@c@ (Simon Bonner)
Date: Fri, 7 Aug 2020 11:51:26 +0000
Subject: [R-pkg-devel] Package can't be imported with Suggests
In-Reply-To: <trinity-f54dfce4-9b35-44a5-b113-01412939fc05-1596709286554@3c-app-webde-bap10>
References: <YQXPR0101MB1671B95AEDBE24142A674445F94B0@YQXPR0101MB1671.CANPRD01.PROD.OUTLOOK.COM>
 <CAF8bMcZPSK_REDHmw9iR9rkEjUOApOt3AjGUgnUKD--w-aTBYw@mail.gmail.com>
 <24363.16649.607570.550014@rob.eddelbuettel.com>
 <trinity-f54dfce4-9b35-44a5-b113-01412939fc05-1596709286554@3c-app-webde-bap10>
Message-ID: <YTOPR0101MB16769EDAA1017294B45E17C0F9490@YTOPR0101MB1676.CANPRD01.PROD.OUTLOOK.COM>

Hi all,

Thanks for the suggestions and comments. I found a way to allow nimble to work and avoid the note when checking the package. My solution is to use:

requireNamespace(nimble)
attachNamespace("nimble")

I have a feeling that this may be against the spirit of the check (I believe that it essentially replicates library()), but it does allow nimble to find its own functions without any notes.

Cheers,

Simon



Simon Bonner
Assistant Professor of Environmetrics
Department of Statistical and Actuarial Sciences
University of Western Ontario
?
Office: Western Science Centre rm 276
?
Email: sbonner6 at uwo.ca | Telephone: 519-661-2111 x88205 | Fax: 519-661-3813
Twitter: @bonnerstatslab | Website: http://simon.bonners.ca/bonner-lab/wpblog/


From he|mut@@chuetz @end|ng |rom beb@c@@t  Fri Aug  7 16:45:06 2020
From: he|mut@@chuetz @end|ng |rom beb@c@@t (=?UTF-8?Q?Helmut_Sch=c3=bctz?=)
Date: Fri, 7 Aug 2020 16:45:06 +0200
Subject: [R-pkg-devel] NOTE in r-devel-linux-x86_64-fedora-clang
Message-ID: <2d2b52d7-e243-2cb2-7a71-c1b2b19ca363@bebac.at>

Dear all,

I'm struggling to understand this NOTE in 
r-devel-linux-x86_64-fedora-clang (only)
https://cran.r-project.org/web/checks/check_results_PowerTOST.html
emmeans is a great package (THX Russell!) but we don't use it anywhere 
in ours.

Only in two man pages we have
... obtained via \code{\link[emmeans]{emmeans}} of package \code{emmeans}.

Previously we had plain text and were asked by users for details.
AFAIK, this is the correct syntax acc. to the REM linking to the man 
page of another package. In the library links work as intended.

Our package is used in a regulated environment where even a NOTE raises 
eyebrows.
In all other R-versions and operating systems there is no problem. What 
surprises me is that on Fedora the results depends on the C-compiler. 
Strange.

Of course, we could use in NAMESPACE
 ? importFrom(emmeans, emmeans)
but that would force users to install a package they might not need at all.


Helmut

-- 
Ing. Helmut Sch?tz
BEBAC?? Consultancy Services for
Bioequivalence and Bioavailability Studies
Neubaugasse 36/11
1070 Vienna, Austria
E helmut.schuetz at bebac.at
W https://bebac.at/
F https://forum.bebac.at/


From c@@rd|@g@bor @end|ng |rom gm@||@com  Fri Aug  7 16:46:52 2020
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Fri, 7 Aug 2020 15:46:52 +0100
Subject: [R-pkg-devel] NOTE in r-devel-linux-x86_64-fedora-clang
In-Reply-To: <2d2b52d7-e243-2cb2-7a71-c1b2b19ca363@bebac.at>
References: <2d2b52d7-e243-2cb2-7a71-c1b2b19ca363@bebac.at>
Message-ID: <CABtg=Kk_sGEE3AxAEgBKWBhiM9++QTV8Y1W20fZ0BT4JPd8nfg@mail.gmail.com>

If you want to link to a package in the documentation, you'll have to
add it to Suggests.

Gabor

On Fri, Aug 7, 2020 at 3:45 PM Helmut Sch?tz <helmut.schuetz at bebac.at> wrote:
>
> Dear all,
>
> I'm struggling to understand this NOTE in
> r-devel-linux-x86_64-fedora-clang (only)
> https://cran.r-project.org/web/checks/check_results_PowerTOST.html
> emmeans is a great package (THX Russell!) but we don't use it anywhere
> in ours.
>
> Only in two man pages we have
> ... obtained via \code{\link[emmeans]{emmeans}} of package \code{emmeans}.
>
> Previously we had plain text and were asked by users for details.
> AFAIK, this is the correct syntax acc. to the REM linking to the man
> page of another package. In the library links work as intended.
>
> Our package is used in a regulated environment where even a NOTE raises
> eyebrows.
> In all other R-versions and operating systems there is no problem. What
> surprises me is that on Fedora the results depends on the C-compiler.
> Strange.
>
> Of course, we could use in NAMESPACE
>    importFrom(emmeans, emmeans)
> but that would force users to install a package they might not need at all.
>
>
> Helmut
>
> --
> Ing. Helmut Sch?tz
> BEBAC ? Consultancy Services for
> Bioequivalence and Bioavailability Studies
> Neubaugasse 36/11
> 1070 Vienna, Austria
> E helmut.schuetz at bebac.at
> W https://bebac.at/
> F https://forum.bebac.at/
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From he|mut@@chuetz @end|ng |rom beb@c@@t  Fri Aug  7 16:51:53 2020
From: he|mut@@chuetz @end|ng |rom beb@c@@t (=?UTF-8?Q?Helmut_Sch=c3=bctz?=)
Date: Fri, 7 Aug 2020 16:51:53 +0200
Subject: [R-pkg-devel] NOTE in r-devel-linux-x86_64-fedora-clang
In-Reply-To: <CABtg=Kk_sGEE3AxAEgBKWBhiM9++QTV8Y1W20fZ0BT4JPd8nfg@mail.gmail.com>
References: <2d2b52d7-e243-2cb2-7a71-c1b2b19ca363@bebac.at>
 <CABtg=Kk_sGEE3AxAEgBKWBhiM9++QTV8Y1W20fZ0BT4JPd8nfg@mail.gmail.com>
Message-ID: <ac77de5b-bc40-9791-6079-4c77c1fd7968@bebac.at>

Hi G?bor,

G?bor Cs?rdi wrote on 2020-08-07 16:46:
> If you want to link to a package in the documentation, you'll have to
> add it to Suggests.

THX, will do. Is this documented somewhere? Any why don't the *other* 
installations of CRAN complain as well?

Helmut

-- 
Ing. Helmut Sch?tz
BEBAC?? Consultancy Services for
Bioequivalence and Bioavailability Studies
Neubaugasse 36/11
1070 Vienna, Austria
T +43 1 2311746
M +43 699 10792458
E helmut.schuetz at bebac.at
W https://bebac.at/
C https://bebac.at/Contact.htm
F https://forum.bebac.at/
GIS 24799386, VAT?ATU61115625, DUNS?300370568, EORI?ATEOS1000096209
GDPR https://bebac.at/Data-Protection.htm


From c@@rd|@g@bor @end|ng |rom gm@||@com  Fri Aug  7 17:02:23 2020
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Fri, 7 Aug 2020 16:02:23 +0100
Subject: [R-pkg-devel] NOTE in r-devel-linux-x86_64-fedora-clang
In-Reply-To: <ac77de5b-bc40-9791-6079-4c77c1fd7968@bebac.at>
References: <2d2b52d7-e243-2cb2-7a71-c1b2b19ca363@bebac.at>
 <CABtg=Kk_sGEE3AxAEgBKWBhiM9++QTV8Y1W20fZ0BT4JPd8nfg@mail.gmail.com>
 <ac77de5b-bc40-9791-6079-4c77c1fd7968@bebac.at>
Message-ID: <CABtg=KmuUWbjsF9hggLvpPA+WiB7ruxqdCbqxL=D1c80__13Pg@mail.gmail.com>

On Fri, Aug 7, 2020 at 3:51 PM Helmut Sch?tz <helmut.schuetz at bebac.at> wrote:
>
> Hi G?bor,
>
> G?bor Cs?rdi wrote on 2020-08-07 16:46:
> > If you want to link to a package in the documentation, you'll have to
> > add it to Suggests.
>
> THX, will do. Is this documented somewhere?

The check is documented in
https://cran.r-project.org/doc/manuals/r-devel/R-ints.html
You can turn it on with the _R_CHECK_XREFS_PKGS_ARE_DECLARED_
environment variable.

> Any why don't the *other*
> installations of CRAN complain as well?

I don't know if they run a different set of checks on purpose or by accident.

G.

> Helmut
>
> --
> Ing. Helmut Sch?tz
> BEBAC ? Consultancy Services for
> Bioequivalence and Bioavailability Studies
> Neubaugasse 36/11
> 1070 Vienna, Austria
> T +43 1 2311746
> M +43 699 10792458
> E helmut.schuetz at bebac.at
> W https://bebac.at/
> C https://bebac.at/Contact.htm
> F https://forum.bebac.at/
> GIS 24799386, VAT ATU61115625, DUNS 300370568, EORI ATEOS1000096209
> GDPR https://bebac.at/Data-Protection.htm
>
>


From br|@n @end|ng |rom br@verock@com  Fri Aug  7 17:02:47 2020
From: br|@n @end|ng |rom br@verock@com (Brian G. Peterson)
Date: Fri, 07 Aug 2020 10:02:47 -0500
Subject: [R-pkg-devel] NOTE in r-devel-linux-x86_64-fedora-clang
In-Reply-To: <CABtg=Kk_sGEE3AxAEgBKWBhiM9++QTV8Y1W20fZ0BT4JPd8nfg@mail.gmail.com>
References: <2d2b52d7-e243-2cb2-7a71-c1b2b19ca363@bebac.at>
 <CABtg=Kk_sGEE3AxAEgBKWBhiM9++QTV8Y1W20fZ0BT4JPd8nfg@mail.gmail.com>
Message-ID: <aed6a1c6fac25ee9f98e38a8c56ed6eb46e0eb46.camel@braverock.com>


On Fri, 2020-08-07 at 15:46 +0100, G?bor Cs?rdi wrote:
> If you want to link to a package in the documentation, you'll have to
> add it to Suggests.

This doesn't make any sense.  If you don't use the code from that
package anywhere, then a cross-reference to that package should not
require the extra dependency in Suggests.  

Cross references should be able to point to other functionality that
might be useful to the user, or might add extra depth of understanding
to a concept.  If the user doesn't have the package installed, no
worries, it is just a cross reference.

The requirement you are suggesting is also not discussed in Writing R
Extensions:

https://cran.r-project.org/doc/manuals/r-patched/R-exts.html#Cross_002dreferences

In fact, it explicitly allows links to potentially uninstalled
packages.

Regards,

Brian


From he|mut@@chuetz @end|ng |rom beb@c@@t  Fri Aug  7 17:04:45 2020
From: he|mut@@chuetz @end|ng |rom beb@c@@t (=?UTF-8?Q?Helmut_Sch=c3=bctz?=)
Date: Fri, 7 Aug 2020 17:04:45 +0200
Subject: [R-pkg-devel] NOTE in r-devel-linux-x86_64-fedora-clang
In-Reply-To: <CABtg=KmuUWbjsF9hggLvpPA+WiB7ruxqdCbqxL=D1c80__13Pg@mail.gmail.com>
References: <2d2b52d7-e243-2cb2-7a71-c1b2b19ca363@bebac.at>
 <CABtg=Kk_sGEE3AxAEgBKWBhiM9++QTV8Y1W20fZ0BT4JPd8nfg@mail.gmail.com>
 <ac77de5b-bc40-9791-6079-4c77c1fd7968@bebac.at>
 <CABtg=KmuUWbjsF9hggLvpPA+WiB7ruxqdCbqxL=D1c80__13Pg@mail.gmail.com>
Message-ID: <3ffdfff0-774f-7622-bc43-71aaa21d689d@bebac.at>

Hi G?bor,

THX again. Case closed.

Helmut

G?bor Cs?rdi wrote on 2020-08-07 17:02:
> On Fri, Aug 7, 2020 at 3:51 PM Helmut Sch?tz <helmut.schuetz at bebac.at> wrote:
>> Hi G?bor,
>>
>> G?bor Cs?rdi wrote on 2020-08-07 16:46:
>>> If you want to link to a package in the documentation, you'll have to
>>> add it to Suggests.
>> THX, will do. Is this documented somewhere?
> The check is documented in
> https://cran.r-project.org/doc/manuals/r-devel/R-ints.html
> You can turn it on with the _R_CHECK_XREFS_PKGS_ARE_DECLARED_
> environment variable.
>
>> Any why don't the *other*
>> installations of CRAN complain as well?
> I don't know if they run a different set of checks on purpose or by accident.
>
> G.

-- 
Ing. Helmut Sch?tz
BEBAC?? Consultancy Services for
Bioequivalence and Bioavailability Studies
Neubaugasse 36/11
1070 Vienna, Austria
E helmut.schuetz at bebac.at
W https://bebac.at/
F https://forum.bebac.at/


From he|mut@@chuetz @end|ng |rom beb@c@@t  Fri Aug  7 17:08:00 2020
From: he|mut@@chuetz @end|ng |rom beb@c@@t (=?UTF-8?Q?Helmut_Sch=c3=bctz?=)
Date: Fri, 7 Aug 2020 17:08:00 +0200
Subject: [R-pkg-devel] NOTE in r-devel-linux-x86_64-fedora-clang
In-Reply-To: <aed6a1c6fac25ee9f98e38a8c56ed6eb46e0eb46.camel@braverock.com>
References: <2d2b52d7-e243-2cb2-7a71-c1b2b19ca363@bebac.at>
 <CABtg=Kk_sGEE3AxAEgBKWBhiM9++QTV8Y1W20fZ0BT4JPd8nfg@mail.gmail.com>
 <aed6a1c6fac25ee9f98e38a8c56ed6eb46e0eb46.camel@braverock.com>
Message-ID: <681cf81e-25f3-e5c5-89cb-e86fbbfa37fb@bebac.at>

Hi Brian,

you take the words out of my mouth. However, we were slapped in the face...

Helmut

Brian G. Peterson wrote on 2020-08-07 17:02:
> On Fri, 2020-08-07 at 15:46 +0100, G?bor Cs?rdi wrote:
>> If you want to link to a package in the documentation, you'll have to
>> add it to Suggests.
> This doesn't make any sense.  If you don't use the code from that
> package anywhere, then a cross-reference to that package should not
> require the extra dependency in Suggests.
>
> Cross references should be able to point to other functionality that
> might be useful to the user, or might add extra depth of understanding
> to a concept.  If the user doesn't have the package installed, no
> worries, it is just a cross reference.
>
> The requirement you are suggesting is also not discussed in Writing R
> Extensions:
>
> https://cran.r-project.org/doc/manuals/r-patched/R-exts.html#Cross_002dreferences
>
> In fact, it explicitly allows links to potentially uninstalled
> packages.
>
> Regards,
>
> Brian

-- 
Ing. Helmut Sch?tz
BEBAC?? Consultancy Services for
Bioequivalence and Bioavailability Studies
Neubaugasse 36/11
1070 Vienna, Austria
E helmut.schuetz at bebac.at
W https://bebac.at/
F https://forum.bebac.at/


From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Fri Aug  7 17:32:03 2020
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Fri, 07 Aug 2020 08:32:03 -0700
Subject: [R-pkg-devel] NOTE in r-devel-linux-x86_64-fedora-clang
In-Reply-To: <aed6a1c6fac25ee9f98e38a8c56ed6eb46e0eb46.camel@braverock.com>
References: <2d2b52d7-e243-2cb2-7a71-c1b2b19ca363@bebac.at>
 <CABtg=Kk_sGEE3AxAEgBKWBhiM9++QTV8Y1W20fZ0BT4JPd8nfg@mail.gmail.com>
 <aed6a1c6fac25ee9f98e38a8c56ed6eb46e0eb46.camel@braverock.com>
Message-ID: <EC9329F3-D135-454B-BD89-7FE9262D7670@dcn.davis.ca.us>

The whole point of the Suggests package relationship is that you don't actually have to have it installed to use the package. It does have to be installed to check the package, which allows the link to be tested at least once before being released.

On August 7, 2020 8:02:47 AM PDT, "Brian G. Peterson" <brian at braverock.com> wrote:
>
>On Fri, 2020-08-07 at 15:46 +0100, G?bor Cs?rdi wrote:
>> If you want to link to a package in the documentation, you'll have to
>> add it to Suggests.
>
>This doesn't make any sense.  If you don't use the code from that
>package anywhere, then a cross-reference to that package should not
>require the extra dependency in Suggests.  
>
>Cross references should be able to point to other functionality that
>might be useful to the user, or might add extra depth of understanding
>to a concept.  If the user doesn't have the package installed, no
>worries, it is just a cross reference.
>
>The requirement you are suggesting is also not discussed in Writing R
>Extensions:
>
>https://cran.r-project.org/doc/manuals/r-patched/R-exts.html#Cross_002dreferences
>
>In fact, it explicitly allows links to potentially uninstalled
>packages.
>
>Regards,
>
>Brian
>
>______________________________________________
>R-package-devel at r-project.org mailing list
>https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
Sent from my phone. Please excuse my brevity.


From murdoch@dunc@n @end|ng |rom gm@||@com  Fri Aug  7 18:39:05 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Fri, 7 Aug 2020 12:39:05 -0400
Subject: [R-pkg-devel] NOTE in r-devel-linux-x86_64-fedora-clang
In-Reply-To: <aed6a1c6fac25ee9f98e38a8c56ed6eb46e0eb46.camel@braverock.com>
References: <2d2b52d7-e243-2cb2-7a71-c1b2b19ca363@bebac.at>
 <CABtg=Kk_sGEE3AxAEgBKWBhiM9++QTV8Y1W20fZ0BT4JPd8nfg@mail.gmail.com>
 <aed6a1c6fac25ee9f98e38a8c56ed6eb46e0eb46.camel@braverock.com>
Message-ID: <592a71c9-8a49-98e5-1b23-4339f02111d2@gmail.com>

On 07/08/2020 11:02 a.m., Brian G. Peterson wrote:
> 
> On Fri, 2020-08-07 at 15:46 +0100, G?bor Cs?rdi wrote:
>> If you want to link to a package in the documentation, you'll have to
>> add it to Suggests.
> 
> This doesn't make any sense.  If you don't use the code from that
> package anywhere, then a cross-reference to that package should not
> require the extra dependency in Suggests.
> 
> Cross references should be able to point to other functionality that
> might be useful to the user, or might add extra depth of understanding
> to a concept.  If the user doesn't have the package installed, no
> worries, it is just a cross reference.
> 
> The requirement you are suggesting is also not discussed in Writing R
> Extensions:
> 
> https://cran.r-project.org/doc/manuals/r-patched/R-exts.html#Cross_002dreferences
> 
> In fact, it explicitly allows links to potentially uninstalled
> packages.

You're reading the wrong version of the manual.  This is in the R-devel 
manual:

"Packages referred to by these ?other forms? should be declared in the 
DESCRIPTION file, in the ?Depends?, ?Imports?, ?Suggests? or ?Enhances? 
fields. "

This is at the end of section 2.5 in 
https://cran.r-project.org/doc/manuals/r-devel/R-exts.html.

Duncan Murdoch


From he|mut@@chuetz @end|ng |rom beb@c@@t  Fri Aug  7 21:22:46 2020
From: he|mut@@chuetz @end|ng |rom beb@c@@t (=?UTF-8?Q?Helmut_Sch=c3=bctz?=)
Date: Fri, 7 Aug 2020 21:22:46 +0200
Subject: [R-pkg-devel] NOTE in r-devel-linux-x86_64-fedora-clang
In-Reply-To: <592a71c9-8a49-98e5-1b23-4339f02111d2@gmail.com>
References: <2d2b52d7-e243-2cb2-7a71-c1b2b19ca363@bebac.at>
 <CABtg=Kk_sGEE3AxAEgBKWBhiM9++QTV8Y1W20fZ0BT4JPd8nfg@mail.gmail.com>
 <aed6a1c6fac25ee9f98e38a8c56ed6eb46e0eb46.camel@braverock.com>
 <592a71c9-8a49-98e5-1b23-4339f02111d2@gmail.com>
Message-ID: <f0e39912-1c89-df16-fd1a-c28785bb002b@bebac.at>

Hi Duncan,

Duncan Murdoch wrote on 2020-08-07 18:39:
> You're reading the wrong version of the manual.? This is in the 
> R-devel manual:
>
> "Packages referred to by these ?other forms? should be declared in the 
> DESCRIPTION file, in the ?Depends?, ?Imports?, ?Suggests? or 
> ?Enhances? fields. "
>
> This is at the end of section 2.5 in 
> https://cran.r-project.org/doc/manuals/r-devel/R-exts.html.

I see. However, the HTML-source states
This manual is for R, version 4.1.0 Under development (2020-08-06).

I was relying on the PDF-version (4.0.2 of 2020-06-22) which does *not* 
contain this sentence. Hence, I fell into the trap. Should be stated in 
the PDF as well, IMHO.

Helmut

-- 
Ing. Helmut Sch?tz
BEBAC?? Consultancy Services for
Bioequivalence and Bioavailability Studies
Neubaugasse 36/11
1070 Vienna, Austria
E helmut.schuetz at bebac.at
W https://bebac.at/
F https://forum.bebac.at/


From murdoch@dunc@n @end|ng |rom gm@||@com  Fri Aug  7 21:55:40 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Fri, 7 Aug 2020 15:55:40 -0400
Subject: [R-pkg-devel] NOTE in r-devel-linux-x86_64-fedora-clang
In-Reply-To: <f0e39912-1c89-df16-fd1a-c28785bb002b@bebac.at>
References: <2d2b52d7-e243-2cb2-7a71-c1b2b19ca363@bebac.at>
 <CABtg=Kk_sGEE3AxAEgBKWBhiM9++QTV8Y1W20fZ0BT4JPd8nfg@mail.gmail.com>
 <aed6a1c6fac25ee9f98e38a8c56ed6eb46e0eb46.camel@braverock.com>
 <592a71c9-8a49-98e5-1b23-4339f02111d2@gmail.com>
 <f0e39912-1c89-df16-fd1a-c28785bb002b@bebac.at>
Message-ID: <509c7cb5-f155-dd82-d015-930c219cf909@gmail.com>

On 07/08/2020 3:22 p.m., Helmut Sch?tz wrote:
> Hi Duncan,
> 
> Duncan Murdoch wrote on 2020-08-07 18:39:
>> You're reading the wrong version of the manual.? This is in the
>> R-devel manual:
>>
>> "Packages referred to by these ?other forms? should be declared in the
>> DESCRIPTION file, in the ?Depends?, ?Imports?, ?Suggests? or
>> ?Enhances? fields. "
>>
>> This is at the end of section 2.5 in
>> https://cran.r-project.org/doc/manuals/r-devel/R-exts.html.
> 
> I see. However, the HTML-source states
> This manual is for R, version 4.1.0 Under development (2020-08-06).
> 
> I was relying on the PDF-version (4.0.2 of 2020-06-22) which does *not*
> contain this sentence. Hence, I fell into the trap. Should be stated in
> the PDF as well, IMHO.

Oh, c'mon.  It will be a new requirement in R 4.1.0  It's not a 
requirement in 4.0.2, and you didn't get a NOTE about it there, you only 
got the note in one of the r-devel platforms.

The general way things work in R is that changes get announced well in 
advance of release *by putting them in R-devel*.  That's why you're 
asked to check your package against R-devel before submitting:  so that 
it meets upcoming announced changes to requirements as well as ones that 
are in the current release.

Duncan Murdoch


From he|mut@@chuetz @end|ng |rom beb@c@@t  Sat Aug  8 00:53:57 2020
From: he|mut@@chuetz @end|ng |rom beb@c@@t (=?UTF-8?Q?Helmut_Sch=c3=bctz?=)
Date: Sat, 8 Aug 2020 00:53:57 +0200
Subject: [R-pkg-devel] NOTE in r-devel-linux-x86_64-fedora-clang
In-Reply-To: <509c7cb5-f155-dd82-d015-930c219cf909@gmail.com>
References: <2d2b52d7-e243-2cb2-7a71-c1b2b19ca363@bebac.at>
 <CABtg=Kk_sGEE3AxAEgBKWBhiM9++QTV8Y1W20fZ0BT4JPd8nfg@mail.gmail.com>
 <aed6a1c6fac25ee9f98e38a8c56ed6eb46e0eb46.camel@braverock.com>
 <592a71c9-8a49-98e5-1b23-4339f02111d2@gmail.com>
 <f0e39912-1c89-df16-fd1a-c28785bb002b@bebac.at>
 <509c7cb5-f155-dd82-d015-930c219cf909@gmail.com>
Message-ID: <01a4ccdb-f6a2-0b32-d0a4-ff23678630f9@bebac.at>

Hi Duncan,

Duncan Murdoch wrote on 2020-08-07 21:55:
> On 07/08/2020 3:22 p.m., Helmut Sch?tz wrote:
>> I see. However, the HTML-source states
>> This manual is for R, version 4.1.0 Under development (2020-08-06).
>>
>> I was relying on the PDF-version (4.0.2 of 2020-06-22) which does *not*
>> contain this sentence. Hence, I fell into the trap. Should be stated in
>> the PDF as well, IMHO.
>
> Oh, c'mon.? It will be a new requirement in R 4.1.0? It's not a 
> requirement in 4.0.2, and you didn't get a NOTE about it there, you 
> only got the note in one of the r-devel platforms.

Yep, but why are the others not configured in the same way (with setenv 
_R_CHECK_SUGGESTS_ONLY_ false)? Doesn't sound consistent to me.

> The general way things work in R is that changes get announced well in 
> advance of release *by putting them in R-devel*.? That's why you're 
> asked to check your package against R-devel before submitting:? so 
> that it meets upcoming announced changes to requirements as well as 
> ones that are in the current release.

Of course, we checked the package on winbuilder... Are you suggesting to 
set up a multi-boot system for all those OSs? Even if one -- not us -- 
would aim at that: Where to get Solaris v10? Buy a Mac to run checks on 
maxOS?

At least I understand now the differences between 
r-devel-linux-x86_64-debian-gcc and r-devel-linux-x86_64-debian-gcc 
(given in the last line there: 
https://www.stats.ox.ac.uk/pub/bdr/Rconfig/r-devel-linux-x86_64-fedora-gcc).

Helmut

-- 
Ing. Helmut Sch?tz
BEBAC?? Consultancy Services for
Bioequivalence and Bioavailability Studies
Neubaugasse 36/11
1070 Vienna, Austria
E helmut.schuetz at bebac.at
W https://bebac.at/
F https://forum.bebac.at/


From murdoch@dunc@n @end|ng |rom gm@||@com  Sat Aug  8 02:35:56 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Fri, 7 Aug 2020 20:35:56 -0400
Subject: [R-pkg-devel] NOTE in r-devel-linux-x86_64-fedora-clang
In-Reply-To: <01a4ccdb-f6a2-0b32-d0a4-ff23678630f9@bebac.at>
References: <2d2b52d7-e243-2cb2-7a71-c1b2b19ca363@bebac.at>
 <CABtg=Kk_sGEE3AxAEgBKWBhiM9++QTV8Y1W20fZ0BT4JPd8nfg@mail.gmail.com>
 <aed6a1c6fac25ee9f98e38a8c56ed6eb46e0eb46.camel@braverock.com>
 <592a71c9-8a49-98e5-1b23-4339f02111d2@gmail.com>
 <f0e39912-1c89-df16-fd1a-c28785bb002b@bebac.at>
 <509c7cb5-f155-dd82-d015-930c219cf909@gmail.com>
 <01a4ccdb-f6a2-0b32-d0a4-ff23678630f9@bebac.at>
Message-ID: <93a0d939-e6a5-4bba-3d99-06691eec4103@gmail.com>

On 07/08/2020 6:53 p.m., Helmut Sch?tz wrote:
> Hi Duncan,
> 
> Duncan Murdoch wrote on 2020-08-07 21:55:
>> On 07/08/2020 3:22 p.m., Helmut Sch?tz wrote:
>>> I see. However, the HTML-source states
>>> This manual is for R, version 4.1.0 Under development (2020-08-06).
>>>
>>> I was relying on the PDF-version (4.0.2 of 2020-06-22) which does *not*
>>> contain this sentence. Hence, I fell into the trap. Should be stated in
>>> the PDF as well, IMHO.
>>
>> Oh, c'mon.? It will be a new requirement in R 4.1.0? It's not a
>> requirement in 4.0.2, and you didn't get a NOTE about it there, you
>> only got the note in one of the r-devel platforms.
> 
> Yep, but why are the others not configured in the same way (with setenv
> _R_CHECK_SUGGESTS_ONLY_ false)? Doesn't sound consistent to me.

What has this got to do with your suggestion that changes that will be 
released in R 4.1.0 next year should be documented in R 4.0.2?

Duncan Murdoch

> 
>> The general way things work in R is that changes get announced well in
>> advance of release *by putting them in R-devel*.? That's why you're
>> asked to check your package against R-devel before submitting:? so
>> that it meets upcoming announced changes to requirements as well as
>> ones that are in the current release.
> 
> Of course, we checked the package on winbuilder... Are you suggesting to
> set up a multi-boot system for all those OSs? Even if one -- not us --
> would aim at that: Where to get Solaris v10? Buy a Mac to run checks on
> maxOS?
> 
> At least I understand now the differences between
> r-devel-linux-x86_64-debian-gcc and r-devel-linux-x86_64-debian-gcc
> (given in the last line there:
> https://www.stats.ox.ac.uk/pub/bdr/Rconfig/r-devel-linux-x86_64-fedora-gcc).
> 
> Helmut
>


From bbo|ker @end|ng |rom gm@||@com  Sat Aug  8 02:39:58 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Fri, 7 Aug 2020 20:39:58 -0400
Subject: [R-pkg-devel] NOTE in r-devel-linux-x86_64-fedora-clang
In-Reply-To: <93a0d939-e6a5-4bba-3d99-06691eec4103@gmail.com>
References: <2d2b52d7-e243-2cb2-7a71-c1b2b19ca363@bebac.at>
 <CABtg=Kk_sGEE3AxAEgBKWBhiM9++QTV8Y1W20fZ0BT4JPd8nfg@mail.gmail.com>
 <aed6a1c6fac25ee9f98e38a8c56ed6eb46e0eb46.camel@braverock.com>
 <592a71c9-8a49-98e5-1b23-4339f02111d2@gmail.com>
 <f0e39912-1c89-df16-fd1a-c28785bb002b@bebac.at>
 <509c7cb5-f155-dd82-d015-930c219cf909@gmail.com>
 <01a4ccdb-f6a2-0b32-d0a4-ff23678630f9@bebac.at>
 <93a0d939-e6a5-4bba-3d99-06691eec4103@gmail.com>
Message-ID: <f83a80c4-a2df-9118-cee5-30de656f0a65@gmail.com>


On 8/7/20 8:35 PM, Duncan Murdoch wrote:
> On 07/08/2020 6:53 p.m., Helmut Sch?tz wrote:
>> Hi Duncan,
>>
>> Duncan Murdoch wrote on 2020-08-07 21:55:
>>> On 07/08/2020 3:22 p.m., Helmut Sch?tz wrote:
>>>> I see. However, the HTML-source states
>>>> This manual is for R, version 4.1.0 Under development (2020-08-06).
>>>>
>>>> I was relying on the PDF-version (4.0.2 of 2020-06-22) which does 
>>>> *not*
>>>> contain this sentence. Hence, I fell into the trap. Should be 
>>>> stated in
>>>> the PDF as well, IMHO.
>>>
>>> Oh, c'mon.? It will be a new requirement in R 4.1.0? It's not a
>>> requirement in 4.0.2, and you didn't get a NOTE about it there, you
>>> only got the note in one of the r-devel platforms.
>>
>> Yep, but why are the others not configured in the same way (with setenv
>> _R_CHECK_SUGGESTS_ONLY_ false)? Doesn't sound consistent to me.
>
> What has this got to do with your suggestion that changes that will be 
> released in R 4.1.0 next year should be documented in R 4.0.2?
>
> Duncan Murdoch
 ? I agree that package developers should always be reading the very 
most recent version of the docs. But I also agree that it gets confusing 
when the settings for different r-devel platforms on CRAN are 
different/inconsistent in ways that don't seem required by intrinsic 
between-platform differences ...
>
>>
>>> The general way things work in R is that changes get announced well in
>>> advance of release *by putting them in R-devel*.? That's why you're
>>> asked to check your package against R-devel before submitting:? so
>>> that it meets upcoming announced changes to requirements as well as
>>> ones that are in the current release.
>>
>> Of course, we checked the package on winbuilder... Are you suggesting to
>> set up a multi-boot system for all those OSs? Even if one -- not us --
>> would aim at that: Where to get Solaris v10? Buy a Mac to run checks on
>> maxOS?
>>
>> At least I understand now the differences between
>> r-devel-linux-x86_64-debian-gcc and r-devel-linux-x86_64-debian-gcc
>> (given in the last line there:
>> https://www.stats.ox.ac.uk/pub/bdr/Rconfig/r-devel-linux-x86_64-fedora-gcc). 
>>
>>
>> Helmut
>>
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From jmount @end|ng |rom w|n-vector@com  Sun Aug  9 20:01:30 2020
From: jmount @end|ng |rom w|n-vector@com (John Mount)
Date: Sun, 9 Aug 2020 18:01:30 +0000
Subject: [R-pkg-devel] Package Anchored Links with R-Dev
Message-ID: <266E440F-A823-4073-AE84-2817BDD0A839@win-vector.com>

With "R Under development (unstable) (2020-07-05 r78784)" (Windows) documentation references such as "\link[utils]{dump.frames}" trigger "Non-file package-anchored link(s) in documentation object" warnings even if the package is in your "Imports."

Is that not the right form? Is there any way to fix this other than the workaround of just removing links from the documentation? I kind of don't want to do that as the links were there to help the user.


From bbo|ker @end|ng |rom gm@||@com  Sun Aug  9 20:04:50 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Sun, 9 Aug 2020 14:04:50 -0400
Subject: [R-pkg-devel] Package Anchored Links with R-Dev
In-Reply-To: <266E440F-A823-4073-AE84-2817BDD0A839@win-vector.com>
References: <266E440F-A823-4073-AE84-2817BDD0A839@win-vector.com>
Message-ID: <CABghstQEgVHrZ6-XHDPkPp0ftb-KJg4_xhfqfgcv0w1xKffZaw@mail.gmail.com>

This might have to be \link[utils:debugger]{dump.frames} now, i.e.
explicitly linking to the man page on which dump.frames is found
rather than following aliases?

On Sun, Aug 9, 2020 at 2:01 PM John Mount <jmount at win-vector.com> wrote:
>
> With "R Under development (unstable) (2020-07-05 r78784)" (Windows) documentation references such as "\link[utils]{dump.frames}" trigger "Non-file package-anchored link(s) in documentation object" warnings even if the package is in your "Imports."
>
> Is that not the right form? Is there any way to fix this other than the workaround of just removing links from the documentation? I kind of don't want to do that as the links were there to help the user.
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From jmount @end|ng |rom w|n-vector@com  Sun Aug  9 20:20:36 2020
From: jmount @end|ng |rom w|n-vector@com (John Mount)
Date: Sun, 9 Aug 2020 18:20:36 +0000
Subject: [R-pkg-devel] Package Anchored Links with R-Dev
In-Reply-To: <CABghstQEgVHrZ6-XHDPkPp0ftb-KJg4_xhfqfgcv0w1xKffZaw@mail.gmail.com>
References: <266E440F-A823-4073-AE84-2817BDD0A839@win-vector.com>
 <CABghstQEgVHrZ6-XHDPkPp0ftb-KJg4_xhfqfgcv0w1xKffZaw@mail.gmail.com>
Message-ID: <D80B3D73-FC3A-4F68-A939-215FE13BE116@win-vector.com>

Thanks Ben!

I'll see if that style change works for me.

> On Aug 9, 2020, at 11:04 AM, Ben Bolker <bbolker at gmail.com> wrote:
> 
> This might have to be \link[utils:debugger]{dump.frames} now, i.e.
> explicitly linking to the man page on which dump.frames is found
> rather than following aliases?
> 
> On Sun, Aug 9, 2020 at 2:01 PM John Mount <jmount at win-vector.com> wrote:
>> 
>> With "R Under development (unstable) (2020-07-05 r78784)" (Windows) documentation references such as "\link[utils]{dump.frames}" trigger "Non-file package-anchored link(s) in documentation object" warnings even if the package is in your "Imports."
>> 
>> Is that not the right form? Is there any way to fix this other than the workaround of just removing links from the documentation? I kind of don't want to do that as the links were there to help the user.
>> 
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From murdoch@dunc@n @end|ng |rom gm@||@com  Sun Aug  9 20:58:46 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sun, 9 Aug 2020 14:58:46 -0400
Subject: [R-pkg-devel] Package Anchored Links with R-Dev
In-Reply-To: <CABghstQEgVHrZ6-XHDPkPp0ftb-KJg4_xhfqfgcv0w1xKffZaw@mail.gmail.com>
References: <266E440F-A823-4073-AE84-2817BDD0A839@win-vector.com>
 <CABghstQEgVHrZ6-XHDPkPp0ftb-KJg4_xhfqfgcv0w1xKffZaw@mail.gmail.com>
Message-ID: <2817b890-d3ca-ef53-5122-abc856c36aa8@gmail.com>

On 09/08/2020 2:04 p.m., Ben Bolker wrote:
> This might have to be \link[utils:debugger]{dump.frames} now, i.e.
> explicitly linking to the man page on which dump.frames is found
> rather than following aliases?

It's always had to be that way for reliable links.  It's just that the 
QC checks are finally warning about the unreliability.

Duncan Murdoch

> 
> On Sun, Aug 9, 2020 at 2:01 PM John Mount <jmount at win-vector.com> wrote:
>>
>> With "R Under development (unstable) (2020-07-05 r78784)" (Windows) documentation references such as "\link[utils]{dump.frames}" trigger "Non-file package-anchored link(s) in documentation object" warnings even if the package is in your "Imports."
>>
>> Is that not the right form? Is there any way to fix this other than the workaround of just removing links from the documentation? I kind of don't want to do that as the links were there to help the user.
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From jmount @end|ng |rom w|n-vector@com  Sun Aug  9 20:59:53 2020
From: jmount @end|ng |rom w|n-vector@com (John Mount)
Date: Sun, 9 Aug 2020 18:59:53 +0000
Subject: [R-pkg-devel] Package Anchored Links with R-Dev
In-Reply-To: <CABghstQEgVHrZ6-XHDPkPp0ftb-KJg4_xhfqfgcv0w1xKffZaw@mail.gmail.com>
References: <266E440F-A823-4073-AE84-2817BDD0A839@win-vector.com>
 <CABghstQEgVHrZ6-XHDPkPp0ftb-KJg4_xhfqfgcv0w1xKffZaw@mail.gmail.com>
Message-ID: <A669B52A-3077-402E-BB6A-4C21AF98B430@win-vector.com>

Firstly: thanks to Ben for the help/fix.

I know nobody asked, but.

Having to guess where the documentation is just to refer to it is just going to be really brittle going forward. Previous: if the function you referred to existed in the package you were fine. Future: if don't correctly specify where the help is you are wrong. Going forward: reorganizing a package's help can break referring packages. This sort of brittleness is going to be a big time-waster going forward. It seems like really the wrong direction in packaging, isolation, and separation of concerns (SOLID style principles).

> On Aug 9, 2020, at 11:04 AM, Ben Bolker <bbolker at gmail.com> wrote:
> 
> This might have to be \link[utils:debugger]{dump.frames} now, i.e.
> explicitly linking to the man page on which dump.frames is found
> rather than following aliases?
> 
> On Sun, Aug 9, 2020 at 2:01 PM John Mount <jmount at win-vector.com> wrote:
>> 
>> With "R Under development (unstable) (2020-07-05 r78784)" (Windows) documentation references such as "\link[utils]{dump.frames}" trigger "Non-file package-anchored link(s) in documentation object" warnings even if the package is in your "Imports."
>> 
>> Is that not the right form? Is there any way to fix this other than the workaround of just removing links from the documentation? I kind of don't want to do that as the links were there to help the user.
>> 
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From murdoch@dunc@n @end|ng |rom gm@||@com  Sun Aug  9 21:08:54 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sun, 9 Aug 2020 15:08:54 -0400
Subject: [R-pkg-devel] Package Anchored Links with R-Dev
In-Reply-To: <A669B52A-3077-402E-BB6A-4C21AF98B430@win-vector.com>
References: <266E440F-A823-4073-AE84-2817BDD0A839@win-vector.com>
 <CABghstQEgVHrZ6-XHDPkPp0ftb-KJg4_xhfqfgcv0w1xKffZaw@mail.gmail.com>
 <A669B52A-3077-402E-BB6A-4C21AF98B430@win-vector.com>
Message-ID: <6d99e356-bd08-09ab-48ad-81573360e48a@gmail.com>

On 09/08/2020 2:59 p.m., John Mount wrote:
> Firstly: thanks to Ben for the help/fix.
> 
> I know nobody asked, but.
> 
> Having to guess where the documentation is just to refer to it is just going to be really brittle going forward. Previous: if the function you referred to existed in the package you were fine.

That's not correct.  The system could often work around the error, but 
not always.

Duncan Murdoch


  Future: if don't correctly specify where the help is you are wrong. 
Going forward: reorganizing a package's help can break referring 
packages. This sort of brittleness is going to be a big time-waster 
going forward. It seems like really the wrong direction in packaging, 
isolation, and separation of concerns (SOLID style principles).
> 
>> On Aug 9, 2020, at 11:04 AM, Ben Bolker <bbolker at gmail.com> wrote:
>>
>> This might have to be \link[utils:debugger]{dump.frames} now, i.e.
>> explicitly linking to the man page on which dump.frames is found
>> rather than following aliases?
>>
>> On Sun, Aug 9, 2020 at 2:01 PM John Mount <jmount at win-vector.com> wrote:
>>>
>>> With "R Under development (unstable) (2020-07-05 r78784)" (Windows) documentation references such as "\link[utils]{dump.frames}" trigger "Non-file package-anchored link(s) in documentation object" warnings even if the package is in your "Imports."
>>>
>>> Is that not the right form? Is there any way to fix this other than the workaround of just removing links from the documentation? I kind of don't want to do that as the links were there to help the user.
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From bbo|ker @end|ng |rom gm@||@com  Sun Aug  9 21:15:08 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Sun, 9 Aug 2020 15:15:08 -0400
Subject: [R-pkg-devel] Package Anchored Links with R-Dev
In-Reply-To: <6d99e356-bd08-09ab-48ad-81573360e48a@gmail.com>
References: <266E440F-A823-4073-AE84-2817BDD0A839@win-vector.com>
 <CABghstQEgVHrZ6-XHDPkPp0ftb-KJg4_xhfqfgcv0w1xKffZaw@mail.gmail.com>
 <A669B52A-3077-402E-BB6A-4C21AF98B430@win-vector.com>
 <6d99e356-bd08-09ab-48ad-81573360e48a@gmail.com>
Message-ID: <075cd730-5b7b-44cb-3185-e8d42919f6fe@gmail.com>


On 8/9/20 3:08 PM, Duncan Murdoch wrote:
> On 09/08/2020 2:59 p.m., John Mount wrote:
>> Firstly: thanks to Ben for the help/fix.
>>
>> I know nobody asked, but.
>>
>> Having to guess where the documentation is just to refer to it is 
>> just going to be really brittle going forward. Previous: if the 
>> function you referred to existed in the package you were fine.
>
> That's not correct.? The system could often work around the error, but 
> not always.

 ? I may be missing something. It may well be that referring to a 
cross-package link by alias rather than by the name of the Rd page 
actually never worked, but: would there be a big barrier to making 
cross-package documentation links be able to follow aliases? I can 
imagine there may be technical hurdles but it seems like a well-defined 
problem ...


>
> Duncan Murdoch
>
>
> ?Future: if don't correctly specify where the help is you are wrong. 
> Going forward: reorganizing a package's help can break referring 
> packages. This sort of brittleness is going to be a big time-waster 
> going forward. It seems like really the wrong direction in packaging, 
> isolation, and separation of concerns (SOLID style principles).
>>
>>> On Aug 9, 2020, at 11:04 AM, Ben Bolker <bbolker at gmail.com> wrote:
>>>
>>> This might have to be \link[utils:debugger]{dump.frames} now, i.e.
>>> explicitly linking to the man page on which dump.frames is found
>>> rather than following aliases?
>>>
>>> On Sun, Aug 9, 2020 at 2:01 PM John Mount <jmount at win-vector.com> 
>>> wrote:
>>>>
>>>> With "R Under development (unstable) (2020-07-05 r78784)" (Windows) 
>>>> documentation references such as "\link[utils]{dump.frames}" 
>>>> trigger "Non-file package-anchored link(s) in documentation object" 
>>>> warnings even if the package is in your "Imports."
>>>>
>>>> Is that not the right form? Is there any way to fix this other than 
>>>> the workaround of just removing links from the documentation? I 
>>>> kind of don't want to do that as the links were there to help the 
>>>> user.
>>>>
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>


From murdoch@dunc@n @end|ng |rom gm@||@com  Sun Aug  9 21:35:27 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sun, 9 Aug 2020 15:35:27 -0400
Subject: [R-pkg-devel] Package Anchored Links with R-Dev
In-Reply-To: <075cd730-5b7b-44cb-3185-e8d42919f6fe@gmail.com>
References: <266E440F-A823-4073-AE84-2817BDD0A839@win-vector.com>
 <CABghstQEgVHrZ6-XHDPkPp0ftb-KJg4_xhfqfgcv0w1xKffZaw@mail.gmail.com>
 <A669B52A-3077-402E-BB6A-4C21AF98B430@win-vector.com>
 <6d99e356-bd08-09ab-48ad-81573360e48a@gmail.com>
 <075cd730-5b7b-44cb-3185-e8d42919f6fe@gmail.com>
Message-ID: <273850c8-b897-3bb7-bb83-c5a1405be637@gmail.com>

On 09/08/2020 3:15 p.m., Ben Bolker wrote:
> 
> On 8/9/20 3:08 PM, Duncan Murdoch wrote:
>> On 09/08/2020 2:59 p.m., John Mount wrote:
>>> Firstly: thanks to Ben for the help/fix.
>>>
>>> I know nobody asked, but.
>>>
>>> Having to guess where the documentation is just to refer to it is
>>> just going to be really brittle going forward. Previous: if the
>>> function you referred to existed in the package you were fine.
>>
>> That's not correct.? The system could often work around the error, but
>> not always.
> 
>   ? I may be missing something. It may well be that referring to a
> cross-package link by alias rather than by the name of the Rd page
> actually never worked, but: would there be a big barrier to making
> cross-package documentation links be able to follow aliases? I can
> imagine there may be technical hurdles but it seems like a well-defined
> problem ...

To link to "?utils::dump.frames", you need to construct a URL that leads 
to the HTML file containing that help page on static builds of the help 
system.

If utils is available, no problem, just look up the fact that the page 
you want is debugger.html at the time you construct the link.  But it 
was documented that such links should work even if the target package 
was not available at the time the link was being made.  So you need a 
link that you are sure will be available when the referenced package is 
eventually installed.  Obviously that's going to be brittle.

Perhaps the new requirement that referenced packages be mentioned in the 
DESCRIPTION file is a step towards addressing this.  If everything 
that's referenced is present when the help system is being built, there 
will be an easy solution.

Nowadays, it would probably be reasonable to put in stub pages for every 
alias, so that when you try to load dump.frames.html, the page itself 
redirects you to debugger.html.  Or maybe you could just have a single 
page in each package that handles aliases via Javascript.

Or R could just no longer support static copies of the help system.

When you are using dynamically generated help pages, the link can be 
resolved by the server, and that's why those links have appeared to work 
for so long, even though the requirement to link to the filename instead 
of the alias has been there since before I wrote the dynamic help server.

Duncan Murdoch

> 
> 
>>
>> Duncan Murdoch
>>
>>
>>  ?Future: if don't correctly specify where the help is you are wrong.
>> Going forward: reorganizing a package's help can break referring
>> packages. This sort of brittleness is going to be a big time-waster
>> going forward. It seems like really the wrong direction in packaging,
>> isolation, and separation of concerns (SOLID style principles).
>>>
>>>> On Aug 9, 2020, at 11:04 AM, Ben Bolker <bbolker at gmail.com> wrote:
>>>>
>>>> This might have to be \link[utils:debugger]{dump.frames} now, i.e.
>>>> explicitly linking to the man page on which dump.frames is found
>>>> rather than following aliases?
>>>>
>>>> On Sun, Aug 9, 2020 at 2:01 PM John Mount <jmount at win-vector.com>
>>>> wrote:
>>>>>
>>>>> With "R Under development (unstable) (2020-07-05 r78784)" (Windows)
>>>>> documentation references such as "\link[utils]{dump.frames}"
>>>>> trigger "Non-file package-anchored link(s) in documentation object"
>>>>> warnings even if the package is in your "Imports."
>>>>>
>>>>> Is that not the right form? Is there any way to fix this other than
>>>>> the workaround of just removing links from the documentation? I
>>>>> kind of don't want to do that as the links were there to help the
>>>>> user.
>>>>>
>>>>> ______________________________________________
>>>>> R-package-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>>


From jmount @end|ng |rom w|n-vector@com  Mon Aug 10 17:51:19 2020
From: jmount @end|ng |rom w|n-vector@com (John Mount)
Date: Mon, 10 Aug 2020 15:51:19 +0000
Subject: [R-pkg-devel] Package Anchored Links with R-Dev
In-Reply-To: <273850c8-b897-3bb7-bb83-c5a1405be637@gmail.com>
References: <266E440F-A823-4073-AE84-2817BDD0A839@win-vector.com>
 <CABghstQEgVHrZ6-XHDPkPp0ftb-KJg4_xhfqfgcv0w1xKffZaw@mail.gmail.com>
 <A669B52A-3077-402E-BB6A-4C21AF98B430@win-vector.com>
 <6d99e356-bd08-09ab-48ad-81573360e48a@gmail.com>
 <075cd730-5b7b-44cb-3185-e8d42919f6fe@gmail.com>
 <273850c8-b897-3bb7-bb83-c5a1405be637@gmail.com>
Message-ID: <C411723B-BB96-4781-8210-4AFCD7A9AD30@win-vector.com>

To all: I'd like to apologize for my negative tone and imprecision in my points. Thanks for the discussion and the effort you put into these systems.

> On Aug 9, 2020, at 12:35 PM, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> 
> On 09/08/2020 3:15 p.m., Ben Bolker wrote:
>> On 8/9/20 3:08 PM, Duncan Murdoch wrote:
>>> On 09/08/2020 2:59 p.m., John Mount wrote:
>>>> Firstly: thanks to Ben for the help/fix.
>>>> 
>>>> I know nobody asked, but.
>>>> 
>>>> Having to guess where the documentation is just to refer to it is
>>>> just going to be really brittle going forward. Previous: if the
>>>> function you referred to existed in the package you were fine.
>>> 
>>> That's not correct.  The system could often work around the error, but
>>> not always.
>>    I may be missing something. It may well be that referring to a
>> cross-package link by alias rather than by the name of the Rd page
>> actually never worked, but: would there be a big barrier to making
>> cross-package documentation links be able to follow aliases? I can
>> imagine there may be technical hurdles but it seems like a well-defined
>> problem ...
> 
> To link to "?utils::dump.frames", you need to construct a URL that leads to the HTML file containing that help page on static builds of the help system.
> 
> If utils is available, no problem, just look up the fact that the page you want is debugger.html at the time you construct the link.  But it was documented that such links should work even if the target package was not available at the time the link was being made.  So you need a link that you are sure will be available when the referenced package is eventually installed.  Obviously that's going to be brittle.
> 
> Perhaps the new requirement that referenced packages be mentioned in the DESCRIPTION file is a step towards addressing this.  If everything that's referenced is present when the help system is being built, there will be an easy solution.
> 
> Nowadays, it would probably be reasonable to put in stub pages for every alias, so that when you try to load dump.frames.html, the page itself redirects you to debugger.html.  Or maybe you could just have a single page in each package that handles aliases via Javascript.
> 
> Or R could just no longer support static copies of the help system.
> 
> When you are using dynamically generated help pages, the link can be resolved by the server, and that's why those links have appeared to work for so long, even though the requirement to link to the filename instead of the alias has been there since before I wrote the dynamic help server.
> 
> Duncan Murdoch
> 
>>> 
>>> Duncan Murdoch
>>> 
>>> 
>>>  Future: if don't correctly specify where the help is you are wrong.
>>> Going forward: reorganizing a package's help can break referring
>>> packages. This sort of brittleness is going to be a big time-waster
>>> going forward. It seems like really the wrong direction in packaging,
>>> isolation, and separation of concerns (SOLID style principles).
>>>> 
>>>>> On Aug 9, 2020, at 11:04 AM, Ben Bolker <bbolker at gmail.com> wrote:
>>>>> 
>>>>> This might have to be \link[utils:debugger]{dump.frames} now, i.e.
>>>>> explicitly linking to the man page on which dump.frames is found
>>>>> rather than following aliases?
>>>>> 
>>>>> On Sun, Aug 9, 2020 at 2:01 PM John Mount <jmount at win-vector.com>
>>>>> wrote:
>>>>>> 
>>>>>> With "R Under development (unstable) (2020-07-05 r78784)" (Windows)
>>>>>> documentation references such as "\link[utils]{dump.frames}"
>>>>>> trigger "Non-file package-anchored link(s) in documentation object"
>>>>>> warnings even if the package is in your "Imports."
>>>>>> 
>>>>>> Is that not the right form? Is there any way to fix this other than
>>>>>> the workaround of just removing links from the documentation? I
>>>>>> kind of don't want to do that as the links were there to help the
>>>>>> user.
>>>>>> 
>>>>>> ______________________________________________
>>>>>> R-package-devel at r-project.org mailing list
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>> 
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>> 
>>> 
> 


From henr|k@bengt@@on @end|ng |rom gm@||@com  Mon Aug 10 18:03:08 2020
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Mon, 10 Aug 2020 09:03:08 -0700
Subject: [R-pkg-devel] Package Anchored Links with R-Dev
In-Reply-To: <C411723B-BB96-4781-8210-4AFCD7A9AD30@win-vector.com>
References: <266E440F-A823-4073-AE84-2817BDD0A839@win-vector.com>
 <CABghstQEgVHrZ6-XHDPkPp0ftb-KJg4_xhfqfgcv0w1xKffZaw@mail.gmail.com>
 <A669B52A-3077-402E-BB6A-4C21AF98B430@win-vector.com>
 <6d99e356-bd08-09ab-48ad-81573360e48a@gmail.com>
 <075cd730-5b7b-44cb-3185-e8d42919f6fe@gmail.com>
 <273850c8-b897-3bb7-bb83-c5a1405be637@gmail.com>
 <C411723B-BB96-4781-8210-4AFCD7A9AD30@win-vector.com>
Message-ID: <CAFDcVCShX1N_PvdAURATpXtZGzppW0VMcfGCPrgPE7ietmCrDw@mail.gmail.com>

These recently introduced 'R CMD check' WARNINGs were disabled again
in R-devel on July 8, 2020:

r78793: https://github.com/wch/r-source/commit/ccd903e47ab42e1c181396256aea56454a2e70c9
r78794: https://github.com/wch/r-source/commit/b70f90ae11dd516c1c954ed15eb5a7c2a304b37f

This is because there's a plan to add support for what we're all
asking for in one way or the other. That's all I know.

/Henrik

On Mon, Aug 10, 2020 at 8:51 AM John Mount <jmount at win-vector.com> wrote:
>
> To all: I'd like to apologize for my negative tone and imprecision in my points. Thanks for the discussion and the effort you put into these systems.
>
> > On Aug 9, 2020, at 12:35 PM, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> >
> > On 09/08/2020 3:15 p.m., Ben Bolker wrote:
> >> On 8/9/20 3:08 PM, Duncan Murdoch wrote:
> >>> On 09/08/2020 2:59 p.m., John Mount wrote:
> >>>> Firstly: thanks to Ben for the help/fix.
> >>>>
> >>>> I know nobody asked, but.
> >>>>
> >>>> Having to guess where the documentation is just to refer to it is
> >>>> just going to be really brittle going forward. Previous: if the
> >>>> function you referred to existed in the package you were fine.
> >>>
> >>> That's not correct.  The system could often work around the error, but
> >>> not always.
> >>    I may be missing something. It may well be that referring to a
> >> cross-package link by alias rather than by the name of the Rd page
> >> actually never worked, but: would there be a big barrier to making
> >> cross-package documentation links be able to follow aliases? I can
> >> imagine there may be technical hurdles but it seems like a well-defined
> >> problem ...
> >
> > To link to "?utils::dump.frames", you need to construct a URL that leads to the HTML file containing that help page on static builds of the help system.
> >
> > If utils is available, no problem, just look up the fact that the page you want is debugger.html at the time you construct the link.  But it was documented that such links should work even if the target package was not available at the time the link was being made.  So you need a link that you are sure will be available when the referenced package is eventually installed.  Obviously that's going to be brittle.
> >
> > Perhaps the new requirement that referenced packages be mentioned in the DESCRIPTION file is a step towards addressing this.  If everything that's referenced is present when the help system is being built, there will be an easy solution.
> >
> > Nowadays, it would probably be reasonable to put in stub pages for every alias, so that when you try to load dump.frames.html, the page itself redirects you to debugger.html.  Or maybe you could just have a single page in each package that handles aliases via Javascript.
> >
> > Or R could just no longer support static copies of the help system.
> >
> > When you are using dynamically generated help pages, the link can be resolved by the server, and that's why those links have appeared to work for so long, even though the requirement to link to the filename instead of the alias has been there since before I wrote the dynamic help server.
> >
> > Duncan Murdoch
> >
> >>>
> >>> Duncan Murdoch
> >>>
> >>>
> >>>  Future: if don't correctly specify where the help is you are wrong.
> >>> Going forward: reorganizing a package's help can break referring
> >>> packages. This sort of brittleness is going to be a big time-waster
> >>> going forward. It seems like really the wrong direction in packaging,
> >>> isolation, and separation of concerns (SOLID style principles).
> >>>>
> >>>>> On Aug 9, 2020, at 11:04 AM, Ben Bolker <bbolker at gmail.com> wrote:
> >>>>>
> >>>>> This might have to be \link[utils:debugger]{dump.frames} now, i.e.
> >>>>> explicitly linking to the man page on which dump.frames is found
> >>>>> rather than following aliases?
> >>>>>
> >>>>> On Sun, Aug 9, 2020 at 2:01 PM John Mount <jmount at win-vector.com>
> >>>>> wrote:
> >>>>>>
> >>>>>> With "R Under development (unstable) (2020-07-05 r78784)" (Windows)
> >>>>>> documentation references such as "\link[utils]{dump.frames}"
> >>>>>> trigger "Non-file package-anchored link(s) in documentation object"
> >>>>>> warnings even if the package is in your "Imports."
> >>>>>>
> >>>>>> Is that not the right form? Is there any way to fix this other than
> >>>>>> the workaround of just removing links from the documentation? I
> >>>>>> kind of don't want to do that as the links were there to help the
> >>>>>> user.
> >>>>>>
> >>>>>> ______________________________________________
> >>>>>> R-package-devel at r-project.org mailing list
> >>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>>>
> >>>> ______________________________________________
> >>>> R-package-devel at r-project.org mailing list
> >>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>>>
> >>>
> >
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From br|@nk@||@t@ @end|ng |rom gm@||@com  Tue Aug 11 04:54:09 2020
From: br|@nk@||@t@ @end|ng |rom gm@||@com (brian knaus)
Date: Mon, 10 Aug 2020 19:54:09 -0700
Subject: [R-pkg-devel] WARNING: A complete check needs the 'checkbashisms'
 script.
Message-ID: <CAEp5mpAywq7SFwfHBeTBGUOp_40X7aBuj_CasG8AgkBQvmL6zA@mail.gmail.com>

Hi R-pkg-devel,

My package

https://github.com/knausb/vcfR

has been archived on CRAN because I was asked by CRAN to address issues
that I was unable to address before the deadline I was given. The issue I'm
struggling with is that when I use

```
R CMD check --as-cran vcfR_1.12.0.tar.gz
```

I get

```
* checking top-level files ... WARNING
A complete check needs the 'checkbashisms' script.
See section ?Configure and cleanup? in the ?Writing R Extensions?
manual..
```
.

Dirk Eddelbeuttel has proposed a solution on SO. (Thank you again Dirk!)

```
https://stackoverflow.com/a/62721142
```

I've implemented this change, but I am concerned that it won't be accepted
by CRAN. My concern is that this works on my local machines (Ubuntu and
MacOS), where I can install checkbashisms, but I can't control whether
checkbashisms is installed on CRAN machines or on user machines. This means
it will generate a WARNING on machines where checkbashisms is not
installed. Most of me feels that I need to address this somehow. But I do
not know how. Part of me is wondering if I should expect users to manage
this. Any help would be appreciated!

Thank you!
Brian (knausb)

	[[alternative HTML version deleted]]


From rtob@r @end|ng |rom |cr@r@org  Tue Aug 11 05:41:01 2020
From: rtob@r @end|ng |rom |cr@r@org (Rodrigo Tobar)
Date: Tue, 11 Aug 2020 11:41:01 +0800
Subject: [R-pkg-devel] 
 WARNING: A complete check needs the 'checkbashisms' script.
In-Reply-To: <CAEp5mpAywq7SFwfHBeTBGUOp_40X7aBuj_CasG8AgkBQvmL6zA@mail.gmail.com>
References: <CAEp5mpAywq7SFwfHBeTBGUOp_40X7aBuj_CasG8AgkBQvmL6zA@mail.gmail.com>
Message-ID: <93d25049-5f80-39ec-bb96-7ca61e4fb3c2@icrar.org>

Hi Brian,

The checkbashisms script is invoked by the R checks automatically:

https://github.com/wch/r-source/blob/trunk/src/library/tools/R/check.R#L1216-L1267

Thus there shouldn't be any need for you to invoke it manually in your 
configure script, even less so to worry about its presence. You can 
still install it locally so the R checks can proceed without the warning 
(or set _R_CHECK_BASHISMS_ to FALSE to skip that particular check, again 
locally), but that shouldn't be a problem in CRAN, as it should be 
installed there already.

Cheers,

Rodrigo

On 11/8/20 10:54 am, brian knaus wrote:
> Hi R-pkg-devel,
> 
> My package
> 
> https://aus01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fknausb%2FvcfR&amp;data=02%7C01%7Crodrigo.tobarcarrizo%40uwa.edu.au%7C6f00588f63164cc6f8d208d83da1e836%7C05894af0cb2846d8871674cdb46e2226%7C1%7C0%7C637327112896039359&amp;sdata=afGjqTjB%2B8lVCmXDWb8OhFNIYwIR%2BoIVX1QLFpLSfwA%3D&amp;reserved=0
> 
> has been archived on CRAN because I was asked by CRAN to address issues
> that I was unable to address before the deadline I was given. The issue I'm
> struggling with is that when I use
> 
> ```
> R CMD check --as-cran vcfR_1.12.0.tar.gz
> ```
> 
> I get
> 
> ```
> * checking top-level files ... WARNING
> A complete check needs the 'checkbashisms' script.
> See section ?Configure and cleanup? in the ?Writing R Extensions?
> manual..
> ```
> .
> 
> Dirk Eddelbeuttel has proposed a solution on SO. (Thank you again Dirk!)
> 
> ```
> https://aus01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstackoverflow.com%2Fa%2F62721142&amp;data=02%7C01%7Crodrigo.tobarcarrizo%40uwa.edu.au%7C6f00588f63164cc6f8d208d83da1e836%7C05894af0cb2846d8871674cdb46e2226%7C1%7C0%7C637327112896039359&amp;sdata=G5BGCuyWMSItqbm0zwWbncrGapgNUldsuOIp6RvQlqs%3D&amp;reserved=0
> ```
> 
> I've implemented this change, but I am concerned that it won't be accepted
> by CRAN. My concern is that this works on my local machines (Ubuntu and
> MacOS), where I can install checkbashisms, but I can't control whether
> checkbashisms is installed on CRAN machines or on user machines. This means
> it will generate a WARNING on machines where checkbashisms is not
> installed. Most of me feels that I need to address this somehow. But I do
> not know how. Part of me is wondering if I should expect users to manage
> this. Any help would be appreciated!
> 
> Thank you!
> Brian (knausb)
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://aus01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-package-devel&amp;data=02%7C01%7Crodrigo.tobarcarrizo%40uwa.edu.au%7C6f00588f63164cc6f8d208d83da1e836%7C05894af0cb2846d8871674cdb46e2226%7C1%7C0%7C637327112896039359&amp;sdata=7zy%2BLfU7WVDBzP0sP0axZpg8MF4AsD5wtrTu3plbF3o%3D&amp;reserved=0
> 


From d@v|d@corte@@r|ver@ @end|ng |rom gm@||@com  Tue Aug 11 20:28:52 2020
From: d@v|d@corte@@r|ver@ @end|ng |rom gm@||@com (David Cortes)
Date: Tue, 11 Aug 2020 21:28:52 +0300
Subject: [R-pkg-devel] Conditional linking in Makevars
Message-ID: <de8907ebd3f6ee7b130220b99956933746b01d0a.camel@gmail.com>

I am having issues with undefined compiler symbols in a package with C
code that I recently updated:
https://www.r-project.org/nosvn/R.check/r-devel-linux-x86_64-debian-clang/poismf-00install.html
The issue seems to be connected with usage of OpenMP, and happens only
when compiling with clang:
?Error: package or namespace load failed for 'poismf' in dyn.load(file,
DLLpath = DLLpath, ...):
 unable to load shared object '/home/hornik/tmp/R.check/r-devel-
clang/Work/build/Packages/00LOCK-poismf/00new/poismf/libs/poismf.so':
  /home/hornik/tmp/R.check/r-devel-clang/Work/build/Packages/00LOCK-
poismf/00new/poismf/libs/poismf.so: undefined symbol:
__atomic_compare_exchange?


Prof. Ripley left the following comment:
?I don't know what makes your use of OpenMP uniquely different but
when 
using clang you need to include -latomic in the link (where it exists, 
as it does on Linux and probably on FreeBSD).?

I am wondering if it is somehow possible to add conditional link
arguments in a Makevars file depending on the user?s operating system,
or if not possible, whether it would somehow hurt in windows/mac
installations to add a raw -latomic in there.


Best regards,
David Cortes


From br|@nk@||@t@ @end|ng |rom gm@||@com  Wed Aug 12 04:21:38 2020
From: br|@nk@||@t@ @end|ng |rom gm@||@com (brian knaus)
Date: Tue, 11 Aug 2020 19:21:38 -0700
Subject: [R-pkg-devel] 
 WARNING: A complete check needs the 'checkbashisms' script.
In-Reply-To: <93d25049-5f80-39ec-bb96-7ca61e4fb3c2@icrar.org>
References: <CAEp5mpAywq7SFwfHBeTBGUOp_40X7aBuj_CasG8AgkBQvmL6zA@mail.gmail.com>
 <93d25049-5f80-39ec-bb96-7ca61e4fb3c2@icrar.org>
Message-ID: <CAEp5mpDzrD--1iq5WHTTSgxWj9A6DGXnD_9XEK=AT2GqN+kRtA@mail.gmail.com>

Thank you Dirk "Eddelbuettel" (apologies for my spelling, it's your name,
so I should be able to spell it correctly, particularly if I'm asking you
for help) and Rodrigo Tobar for the responses! It sounds like I've gone
down a rabbit hole that I should not have.

When I omit ```configure``` (in my case it only includes this call to
```checkbashisms```) I build with no ERRORs or WARNINGs on Ubuntu 18.0.4
and R 4.0.2 with ```checkbashisms``` installed. When I build on macos
10.15.6 and R 4.0.2 without ```checkbashisms``` installed I throw the
previously reported WARNING (when using --as-cran but not when I omit this
flag). I feel I need to address this because it is a WARNING. It sounds
like I can assume that CRAN machines will have ```checkbashisms```
installed where necessary and handle this appropriately when not? And that
users will not try to use R CMD check --as-cran? Suspecting like I'm trying
too hard now. But also feeling like I've been down this path with CRAN
already and am trying to respect their time.

Thanks!
Brian

On Mon, Aug 10, 2020 at 8:41 PM Rodrigo Tobar <rtobar at icrar.org> wrote:

> Hi Brian,
>
> The checkbashisms script is invoked by the R checks automatically:
>
>
> https://github.com/wch/r-source/blob/trunk/src/library/tools/R/check.R#L1216-L1267
>
> Thus there shouldn't be any need for you to invoke it manually in your
> configure script, even less so to worry about its presence. You can
> still install it locally so the R checks can proceed without the warning
> (or set _R_CHECK_BASHISMS_ to FALSE to skip that particular check, again
> locally), but that shouldn't be a problem in CRAN, as it should be
> installed there already.
>
> Cheers,
>
> Rodrigo
>
> On 11/8/20 10:54 am, brian knaus wrote:
> > Hi R-pkg-devel,
> >
> > My package
> >
> >
> https://aus01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fknausb%2FvcfR&amp;data=02%7C01%7Crodrigo.tobarcarrizo%40uwa.edu.au%7C6f00588f63164cc6f8d208d83da1e836%7C05894af0cb2846d8871674cdb46e2226%7C1%7C0%7C637327112896039359&amp;sdata=afGjqTjB%2B8lVCmXDWb8OhFNIYwIR%2BoIVX1QLFpLSfwA%3D&amp;reserved=0
> >
> > has been archived on CRAN because I was asked by CRAN to address issues
> > that I was unable to address before the deadline I was given. The issue
> I'm
> > struggling with is that when I use
> >
> > ```
> > R CMD check --as-cran vcfR_1.12.0.tar.gz
> > ```
> >
> > I get
> >
> > ```
> > * checking top-level files ... WARNING
> > A complete check needs the 'checkbashisms' script.
> > See section ?Configure and cleanup? in the ?Writing R Extensions?
> > manual..
> > ```
> > .
> >
> > Dirk Eddelbeuttel has proposed a solution on SO. (Thank you again Dirk!)
> >
> > ```
> >
> https://aus01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstackoverflow.com%2Fa%2F62721142&amp;data=02%7C01%7Crodrigo.tobarcarrizo%40uwa.edu.au%7C6f00588f63164cc6f8d208d83da1e836%7C05894af0cb2846d8871674cdb46e2226%7C1%7C0%7C637327112896039359&amp;sdata=G5BGCuyWMSItqbm0zwWbncrGapgNUldsuOIp6RvQlqs%3D&amp;reserved=0
> > ```
> >
> > I've implemented this change, but I am concerned that it won't be
> accepted
> > by CRAN. My concern is that this works on my local machines (Ubuntu and
> > MacOS), where I can install checkbashisms, but I can't control whether
> > checkbashisms is installed on CRAN machines or on user machines. This
> means
> > it will generate a WARNING on machines where checkbashisms is not
> > installed. Most of me feels that I need to address this somehow. But I do
> > not know how. Part of me is wondering if I should expect users to manage
> > this. Any help would be appreciated!
> >
> > Thank you!
> > Brian (knausb)
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> >
> https://aus01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-package-devel&amp;data=02%7C01%7Crodrigo.tobarcarrizo%40uwa.edu.au%7C6f00588f63164cc6f8d208d83da1e836%7C05894af0cb2846d8871674cdb46e2226%7C1%7C0%7C637327112896039359&amp;sdata=7zy%2BLfU7WVDBzP0sP0axZpg8MF4AsD5wtrTu3plbF3o%3D&amp;reserved=0
> >
>

	[[alternative HTML version deleted]]


From rtob@r @end|ng |rom |cr@r@org  Wed Aug 12 08:28:29 2020
From: rtob@r @end|ng |rom |cr@r@org (Rodrigo Tobar)
Date: Wed, 12 Aug 2020 14:28:29 +0800
Subject: [R-pkg-devel] 
 WARNING: A complete check needs the 'checkbashisms' script.
In-Reply-To: <CAEp5mpDzrD--1iq5WHTTSgxWj9A6DGXnD_9XEK=AT2GqN+kRtA@mail.gmail.com>
References: <CAEp5mpAywq7SFwfHBeTBGUOp_40X7aBuj_CasG8AgkBQvmL6zA@mail.gmail.com>
 <93d25049-5f80-39ec-bb96-7ca61e4fb3c2@icrar.org>
 <CAEp5mpDzrD--1iq5WHTTSgxWj9A6DGXnD_9XEK=AT2GqN+kRtA@mail.gmail.com>
Message-ID: <9907ded9-4d38-4a78-c5dd-0d869e0e321c@icrar.org>

Hi Brian,

On 12/8/20 10:21 am, brian knaus wrote:
> [...] It sounds like I can assume that CRAN machines will have 
> ```checkbashisms``` installed where necessary 

That's my reading, yes.

> and handle this appropriately when not?

I don't think you need to handle this at all. As you experimented, 
simply removing your otherwise empty configure script should suffice.

> And that users will not try to use R CMD check 
> --as-cran?

Note that by default (i.e., without --as-cran) the check is not 
included. The documentation for _R_CHECK_BASHISMS_ reads "... Default: 
false (but true for CRAN submission checks except on Windows).". Adding 
--as-cran effectively turns that check on.

Having said that, users can still run checks with --as-cran, but they 
would need to be aware that it requires certain infrastructure to run 
those checks. That's true for all packages though, not only yours, so I 
don't think you need to specially worry about it.

Cheers,

Rodrigo


From br|@nk@||@t@ @end|ng |rom gm@||@com  Wed Aug 12 21:49:38 2020
From: br|@nk@||@t@ @end|ng |rom gm@||@com (brian knaus)
Date: Wed, 12 Aug 2020 12:49:38 -0700
Subject: [R-pkg-devel] 
 WARNING: A complete check needs the 'checkbashisms' script.
In-Reply-To: <9907ded9-4d38-4a78-c5dd-0d869e0e321c@icrar.org>
References: <CAEp5mpAywq7SFwfHBeTBGUOp_40X7aBuj_CasG8AgkBQvmL6zA@mail.gmail.com>
 <93d25049-5f80-39ec-bb96-7ca61e4fb3c2@icrar.org>
 <CAEp5mpDzrD--1iq5WHTTSgxWj9A6DGXnD_9XEK=AT2GqN+kRtA@mail.gmail.com>
 <9907ded9-4d38-4a78-c5dd-0d869e0e321c@icrar.org>
Message-ID: <CAEp5mpAi1is0XmK=cPtEc4STHxW61N8jfhz_OkV6E3vKv67+Hg@mail.gmail.com>

Thank you again for your responses Rodrigo Tobar. I'm happy to call this a
solution. I've got some testing to do but I'm hoping to get this sent back
to CRAN soon.

Thank you for your help!
Brian

On Tue, Aug 11, 2020 at 11:28 PM Rodrigo Tobar <rtobar at icrar.org> wrote:

> Hi Brian,
>
> On 12/8/20 10:21 am, brian knaus wrote:
> > [...] It sounds like I can assume that CRAN machines will have
> > ```checkbashisms``` installed where necessary
>
> That's my reading, yes.
>
> > and handle this appropriately when not?
>
> I don't think you need to handle this at all. As you experimented,
> simply removing your otherwise empty configure script should suffice.
>
> > And that users will not try to use R CMD check
> > --as-cran?
>
> Note that by default (i.e., without --as-cran) the check is not
> included. The documentation for _R_CHECK_BASHISMS_ reads "... Default:
> false (but true for CRAN submission checks except on Windows).". Adding
> --as-cran effectively turns that check on.
>
> Having said that, users can still run checks with --as-cran, but they
> would need to be aware that it requires certain infrastructure to run
> those checks. That's true for all packages though, not only yours, so I
> don't think you need to specially worry about it.
>
> Cheers,
>
> Rodrigo
>

	[[alternative HTML version deleted]]


From c@@rd|@g@bor @end|ng |rom gm@||@com  Thu Aug 13 16:54:47 2020
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Thu, 13 Aug 2020 15:54:47 +0100
Subject: [R-pkg-devel] cran macos metadata error for ps package
Message-ID: <CABtg=KmFr1kejYCCco3Kvz_Qc574PKY79ubATLH41WeGOUiEFQ@mail.gmail.com>

? install.packages("ps", repos = "https://cran.r-project.org")
Installing package into ?/Users/gaborcsardi/Library/R/4.0/library?
(as ?lib? is unspecified)
trying URL 'https://cran.r-project.org/bin/macosx/contrib/4.0/ps_1.3.4.tgz'
Error in download.file(url, destfile, method, mode = "wb", ...) :
  cannot open URL
'https://cran.r-project.org/bin/macosx/contrib/4.0/ps_1.3.4.tgz'
In addition: Warning message:
In download.file(url, destfile, method, mode = "wb", ...) :
  cannot open URL
'https://cran.r-project.org/bin/macosx/contrib/4.0/ps_1.3.4.tgz': HTTP
status was '404 Not Found'
Warning in download.packages(pkgs, destdir = tmpd, available = available,  :
  download of package ?ps? failed

FYI,
Gabor


From c@c@voeten @end|ng |rom hum@|e|denun|v@n|  Fri Aug 14 21:08:55 2020
From: c@c@voeten @end|ng |rom hum@|e|denun|v@n| (Cesko Voeten)
Date: Fri, 14 Aug 2020 21:08:55 +0200
Subject: [R-pkg-devel] Etiquette for package submissions that do not
 automatically pass checks?
Message-ID: <fd761a57-9ec5-6f89-a151-80b2af2d905c@hum.leidenuniv.nl>

A while ago, I submitted an update to my package 'buildmer' that does not pass R CMD check. This is deliberate. The package contains functionality to run on cluster nodes that were set up by the user and needs to access its own internal functions from there. In previous versions of the package, I had maintained a list of those functions and clusterExport()ed them, but that had the side effect of overwriting any same-named user objects on the user-provided cluster nodes, which I thought was poor form. The update therefore accesses these functions using ':::', which triggers a check warning.

I thought the etiquette was to explain this in the 'Comments' box when submitting, but this gave me the same automated message that the package does not pass checks and that I should fix it or reply-all and explain. This led me to believe that I should not have used the 'Comments' box for this purpose, hence I resubmitted the package leaving the comments box empty, and I replied-all to the subsequent e-mail I got with an explanation similar to the above.

It has now been a while since I sent that e-mail (ten days), and I have yet to hear back. I was wondering if the message had gotten lost, if they simply haven't gotten around to it yet (I have no idea how much mail they receive on a daily basis, but I'd think it's a lot more than I do), or if I should have handled this differently. Only CRAN can answer the first two questions, but before I bother them: was this the correct procedure, or should I simply have done something differently?

Thanks,
Cesko


From murdoch@dunc@n @end|ng |rom gm@||@com  Fri Aug 14 21:54:08 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Fri, 14 Aug 2020 15:54:08 -0400
Subject: [R-pkg-devel] Etiquette for package submissions that do not
 automatically pass checks?
In-Reply-To: <fd761a57-9ec5-6f89-a151-80b2af2d905c@hum.leidenuniv.nl>
References: <fd761a57-9ec5-6f89-a151-80b2af2d905c@hum.leidenuniv.nl>
Message-ID: <cdc51ab6-be94-9f18-4456-b70c1f9a1c30@gmail.com>

On 14/08/2020 3:08 p.m., Cesko Voeten wrote:
> A while ago, I submitted an update to my package 'buildmer' that does not pass R CMD check. This is deliberate. The package contains functionality to run on cluster nodes that were set up by the user and needs to access its own internal functions from there. In previous versions of the package, I had maintained a list of those functions and clusterExport()ed them, but that had the side effect of overwriting any same-named user objects on the user-provided cluster nodes, which I thought was poor form. The update therefore accesses these functions using ':::', which triggers a check warning.
> 
> I thought the etiquette was to explain this in the 'Comments' box when submitting, but this gave me the same automated message that the package does not pass checks and that I should fix it or reply-all and explain. This led me to believe that I should not have used the 'Comments' box for this purpose, hence I resubmitted the package leaving the comments box empty, and I replied-all to the subsequent e-mail I got with an explanation similar to the above.

It seems to me that what you should have done is "reply-all and 
explain", as the automated message said.

> It has now been a while since I sent that e-mail (ten days), and I have yet to hear back. I was wondering if the message had gotten lost, if they simply haven't gotten around to it yet (I have no idea how much mail they receive on a daily basis, but I'd think it's a lot more than I do), or if I should have handled this differently. Only CRAN can answer the first two questions, but before I bother them: was this the correct procedure, or should I simply have done something differently?
> 

You can see the state of your submission using the foghorn package. 
cran_incoming("buildmer") currently shows your package is in the 
"archive", which means "package rejected: it does not pass the checks 
cleanly and the problems are unlikely to be false positives".

I only see version 1.7 there, which may indicate that you resubmitted 
exactly the same package (down to the version number).  As the 
instructions at 
https://cran.r-project.org/web/packages/policies.html#Re_002dsubmission 
say, "Increasing the version number at each submission reduces confusion 
so is preferred even when a previous submission was not accepted."

What I'd suggest now is that you do nothing more for a day or two, 
because CRAN members who aren't on holiday might read and respond to 
your message.  If you don't hear anything, then I'd start over again, 
with a new version number, and an explanation in the comments, and 
likely a followup reply-all.

Alternatively, you could export those troublesome functions from your 
package but document them as for internal use only.  Renaming them with 
a name starting with "." will make them harder for users to stumble 
upon, but you can still access them using buildmer::.something, you 
shouldn't need clusterExport(). Then you will meet the technical 
requirement and not need any explanation.

Duncan Murdoch


From jo@h@m@u|r|ch @end|ng |rom gm@||@com  Fri Aug 14 22:31:21 2020
From: jo@h@m@u|r|ch @end|ng |rom gm@||@com (Joshua Ulrich)
Date: Fri, 14 Aug 2020 15:31:21 -0500
Subject: [R-pkg-devel] Etiquette for package submissions that do not
 automatically pass checks?
In-Reply-To: <cdc51ab6-be94-9f18-4456-b70c1f9a1c30@gmail.com>
References: <fd761a57-9ec5-6f89-a151-80b2af2d905c@hum.leidenuniv.nl>
 <cdc51ab6-be94-9f18-4456-b70c1f9a1c30@gmail.com>
Message-ID: <CAPPM_gTYbCuw2f4p5UZGn2YOiZUmq_aHnpmAbbSaCBFLyfuN9w@mail.gmail.com>

On Fri, Aug 14, 2020 at 2:54 PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>
> On 14/08/2020 3:08 p.m., Cesko Voeten wrote:
> > A while ago, I submitted an update to my package 'buildmer' that does not pass R CMD check. This is deliberate. The package contains functionality to run on cluster nodes that were set up by the user and needs to access its own internal functions from there. In previous versions of the package, I had maintained a list of those functions and clusterExport()ed them, but that had the side effect of overwriting any same-named user objects on the user-provided cluster nodes, which I thought was poor form. The update therefore accesses these functions using ':::', which triggers a check warning.
> >
> > I thought the etiquette was to explain this in the 'Comments' box when submitting, but this gave me the same automated message that the package does not pass checks and that I should fix it or reply-all and explain. This led me to believe that I should not have used the 'Comments' box for this purpose, hence I resubmitted the package leaving the comments box empty, and I replied-all to the subsequent e-mail I got with an explanation similar to the above.
>
> It seems to me that what you should have done is "reply-all and
> explain", as the automated message said.
>
> > It has now been a while since I sent that e-mail (ten days), and I have yet to hear back. I was wondering if the message had gotten lost, if they simply haven't gotten around to it yet (I have no idea how much mail they receive on a daily basis, but I'd think it's a lot more than I do), or if I should have handled this differently. Only CRAN can answer the first two questions, but before I bother them: was this the correct procedure, or should I simply have done something differently?
> >
>
> You can see the state of your submission using the foghorn package.
> cran_incoming("buildmer") currently shows your package is in the
> "archive", which means "package rejected: it does not pass the checks
> cleanly and the problems are unlikely to be false positives".
>
> I only see version 1.7 there, which may indicate that you resubmitted
> exactly the same package (down to the version number).  As the
> instructions at
> https://cran.r-project.org/web/packages/policies.html#Re_002dsubmission
> say, "Increasing the version number at each submission reduces confusion
> so is preferred even when a previous submission was not accepted."
>
> What I'd suggest now is that you do nothing more for a day or two,
> because CRAN members who aren't on holiday might read and respond to
> your message.  If you don't hear anything, then I'd start over again,
> with a new version number, and an explanation in the comments, and
> likely a followup reply-all.
>
You have more than a few days.  As it says on CRAN:
"CRAN submission is offline from Aug 14 to Aug 24, 2020 (CRAN team
vacation and maintainance work)"

> Alternatively, you could export those troublesome functions from your
> package but document them as for internal use only.  Renaming them with
> a name starting with "." will make them harder for users to stumble
> upon, but you can still access them using buildmer::.something, you
> shouldn't need clusterExport(). Then you will meet the technical
> requirement and not need any explanation.
>
> Duncan Murdoch
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel



-- 
Joshua Ulrich  |  about.me/joshuaulrich
FOSS Trading  |  www.fosstrading.com


From c@c@voeten @end|ng |rom hum@|e|denun|v@n|  Sat Aug 15 08:30:05 2020
From: c@c@voeten @end|ng |rom hum@|e|denun|v@n| (Cesko Voeten)
Date: Sat, 15 Aug 2020 08:30:05 +0200
Subject: [R-pkg-devel] Etiquette for package submissions that do not
 automatically pass checks?
In-Reply-To: <CAPPM_gTYbCuw2f4p5UZGn2YOiZUmq_aHnpmAbbSaCBFLyfuN9w@mail.gmail.com>
References: <fd761a57-9ec5-6f89-a151-80b2af2d905c@hum.leidenuniv.nl>
 <cdc51ab6-be94-9f18-4456-b70c1f9a1c30@gmail.com>
 <CAPPM_gTYbCuw2f4p5UZGn2YOiZUmq_aHnpmAbbSaCBFLyfuN9w@mail.gmail.com>
Message-ID: <0e8214e1-55bd-3371-ebdf-0f8896229a83@hum.leidenuniv.nl>

Duncan, Joshua,

Thanks for the feedback. I had indeed forgotten to increment the version number, so that may explain it. I'll give it until a few days after the 24th, and then just resubmit with a new version number.

Also, thanks for introducing me to the foghorn package, I wasn't aware of it before.

Best,
Cesko

Op 14-08-2020 om 22:31 schreef Joshua Ulrich:
> On Fri, Aug 14, 2020 at 2:54 PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>>
>> On 14/08/2020 3:08 p.m., Cesko Voeten wrote:
>>> A while ago, I submitted an update to my package 'buildmer' that does not pass R CMD check. This is deliberate. The package contains functionality to run on cluster nodes that were set up by the user and needs to access its own internal functions from there. In previous versions of the package, I had maintained a list of those functions and clusterExport()ed them, but that had the side effect of overwriting any same-named user objects on the user-provided cluster nodes, which I thought was poor form. The update therefore accesses these functions using ':::', which triggers a check warning.
>>>
>>> I thought the etiquette was to explain this in the 'Comments' box when submitting, but this gave me the same automated message that the package does not pass checks and that I should fix it or reply-all and explain. This led me to believe that I should not have used the 'Comments' box for this purpose, hence I resubmitted the package leaving the comments box empty, and I replied-all to the subsequent e-mail I got with an explanation similar to the above.
>>
>> It seems to me that what you should have done is "reply-all and
>> explain", as the automated message said.
>>
>>> It has now been a while since I sent that e-mail (ten days), and I have yet to hear back. I was wondering if the message had gotten lost, if they simply haven't gotten around to it yet (I have no idea how much mail they receive on a daily basis, but I'd think it's a lot more than I do), or if I should have handled this differently. Only CRAN can answer the first two questions, but before I bother them: was this the correct procedure, or should I simply have done something differently?
>>>
>>
>> You can see the state of your submission using the foghorn package.
>> cran_incoming("buildmer") currently shows your package is in the
>> "archive", which means "package rejected: it does not pass the checks
>> cleanly and the problems are unlikely to be false positives".
>>
>> I only see version 1.7 there, which may indicate that you resubmitted
>> exactly the same package (down to the version number).  As the
>> instructions at
>> https://cran.r-project.org/web/packages/policies.html#Re_002dsubmission
>> say, "Increasing the version number at each submission reduces confusion
>> so is preferred even when a previous submission was not accepted."
>>
>> What I'd suggest now is that you do nothing more for a day or two,
>> because CRAN members who aren't on holiday might read and respond to
>> your message.  If you don't hear anything, then I'd start over again,
>> with a new version number, and an explanation in the comments, and
>> likely a followup reply-all.
>>
> You have more than a few days.  As it says on CRAN:
> "CRAN submission is offline from Aug 14 to Aug 24, 2020 (CRAN team
> vacation and maintainance work)"
> 
>> Alternatively, you could export those troublesome functions from your
>> package but document them as for internal use only.  Renaming them with
>> a name starting with "." will make them harder for users to stumble
>> upon, but you can still access them using buildmer::.something, you
>> shouldn't need clusterExport(). Then you will meet the technical
>> requirement and not need any explanation.
>>
>> Duncan Murdoch
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> 
>


From @ch@r@@k@h|t @end|ng |rom gm@||@com  Sat Aug 15 16:20:41 2020
From: @ch@r@@k@h|t @end|ng |rom gm@||@com (Akshit Achara)
Date: Sat, 15 Aug 2020 19:50:41 +0530
Subject: [R-pkg-devel] How to retrieve a flag set in configure.ac (filled in
 Makevars.in) during package installation in an R or C++ script ?
Message-ID: <CAJ=u__OOabSyH-+kbgF+wkRCbge8RtvZ2OspSynSx5cfj9XCdA@mail.gmail.com>

Hi everyone,

Background:

The package rminizinc <https://github.com/acharaakshit/RMiniZinc> provides
an interface to MiniZinc
<https://www.minizinc.org/tutorial/minizinc-tute.pdf> in R. The package
provides various functionalities to parse, solve and manipulate MiniZinc
models. This is done by using the MiniZinc C++ API (libminizinc
<https://github.com/MiniZinc/libminizinc>).

The installation requires linking of the library an including the header
files for which PKG_LIBS flag(-L/path/to/libminizinc -lmzn) , and
PKG_CPPFLAGS (-I/path/to/libminizinc/include) are filled in Makevars.in
which is set by configure based on the path of the library provided by the
user using --configure-args or if the user doesn't provide any arguments, a
default path is passed from configure (using configure.ac).

Question:

In one of my Rcpp functions mzn_parse() which is used to parse MiniZinc
models, I sometimes need to use the files in the subdirectories of the
libminizinc library. To access these files, I need to use the path of
libminizinc (which can change per installation). I want to extract this
path from either Makevars or configure to use it in my package. Is there
any way I could retrieve this path in my scripts?

Please let me know if this question is not relevant to the mailing list.

The Makevars.in looks like this:

CXX_STD = CXX11
PKG_CPPFLAGS = -I. @MZN_INCLUDE@
PKG_LIBS = @MZN_LIBS@
OBJECTS.tests = cpp_tests/test-runner.o cpp_tests/test-mzn_parse.o
cpp_tests/test-
set_params.o cpp_tests/test-mzn_eval.o cpp_tests/test-sol_parse.o
cpp_tests/test-
getMissingPars.o
OBJECTS.sources = RcppExports.o set_params.o mzn_parse.o mzn_eval.o sol_parse.o
getMissingPars.o
OBJECTS.helpers = filetoString.o helper_parse.o expDetails.o pathStringcheck.o
OBJECTS = $(OBJECTS.sources) $(OBJECTS.tests) $(OBJECTS.helpers)
$(SOURCES:.cpp=.o)
strippedLib: $(SHLIB)
    if test -e "/usr/bin/strip"; then /usr/bin/strip --strip-debug
$(SHLIB); fi.phony: strippedLib
all: clean
clean:
    rm -f $(OBJECTS.sources) $(OBJECTS.tests) $(OBJECTS.helpers)  *.so

Thanks!

	[[alternative HTML version deleted]]


From @ndre@@@b|@ette @end|ng |rom un|-due@de  Mon Aug 17 12:06:19 2020
From: @ndre@@@b|@ette @end|ng |rom un|-due@de (=?utf-8?B?QmzDpHR0ZSwgQW5kcmVhcw==?=)
Date: Mon, 17 Aug 2020 10:06:19 +0000
Subject: [R-pkg-devel] 
 How to retrieve a flag set in configure.ac (filled in
 Makevars.in) during package installation in an R or C++ script ?
In-Reply-To: <CAJ=u__OOabSyH-+kbgF+wkRCbge8RtvZ2OspSynSx5cfj9XCdA@mail.gmail.com>
References: <CAJ=u__OOabSyH-+kbgF+wkRCbge8RtvZ2OspSynSx5cfj9XCdA@mail.gmail.com>
Message-ID: <A68CECDA-D52E-462D-A308-9DADB32F0FA2@uni-due.de>

Dear Akshit,

in the configure script of my package RcppCWB, I use the command line call 'R CMD config ...' to get the installation flags. 

Calling 'R CMD config' will display options. For your scenario, you can use 'R CMD config CPPFLAGS' to get the value of CPPFLAGS. 

To call R CMD config safely, you will need to prepend $R_HOME/bin. In the configure script of RcppCWB, I need to detect the compiler used and I do it using this snippet:
CC_R=`$R_HOME/bin/R CMD config CC`

More experienced people following R-package-devel than myself may be aware of a better solution, and I would also be happy to learn about it.

Kind regards
Andreas 


?Am 15.08.20, 16:25 schrieb "R-package-devel im Auftrag von Akshit Achara" <r-package-devel-bounces at r-project.org im Auftrag von acharaakshit at gmail.com>:

    Hi everyone,

    Background:

    The package rminizinc <https://github.com/acharaakshit/RMiniZinc> provides
    an interface to MiniZinc
    <https://www.minizinc.org/tutorial/minizinc-tute.pdf> in R. The package
    provides various functionalities to parse, solve and manipulate MiniZinc
    models. This is done by using the MiniZinc C++ API (libminizinc
    <https://github.com/MiniZinc/libminizinc>).

    The installation requires linking of the library an including the header
    files for which PKG_LIBS flag(-L/path/to/libminizinc -lmzn) , and
    PKG_CPPFLAGS (-I/path/to/libminizinc/include) are filled in Makevars.in
    which is set by configure based on the path of the library provided by the
    user using --configure-args or if the user doesn't provide any arguments, a
    default path is passed from configure (using configure.ac).

    Question:

    In one of my Rcpp functions mzn_parse() which is used to parse MiniZinc
    models, I sometimes need to use the files in the subdirectories of the
    libminizinc library. To access these files, I need to use the path of
    libminizinc (which can change per installation). I want to extract this
    path from either Makevars or configure to use it in my package. Is there
    any way I could retrieve this path in my scripts?

    Please let me know if this question is not relevant to the mailing list.

    The Makevars.in looks like this:

    CXX_STD = CXX11
    PKG_CPPFLAGS = -I. @MZN_INCLUDE@
    PKG_LIBS = @MZN_LIBS@
    OBJECTS.tests = cpp_tests/test-runner.o cpp_tests/test-mzn_parse.o
    cpp_tests/test-
    set_params.o cpp_tests/test-mzn_eval.o cpp_tests/test-sol_parse.o
    cpp_tests/test-
    getMissingPars.o
    OBJECTS.sources = RcppExports.o set_params.o mzn_parse.o mzn_eval.o sol_parse.o
    getMissingPars.o
    OBJECTS.helpers = filetoString.o helper_parse.o expDetails.o pathStringcheck.o
    OBJECTS = $(OBJECTS.sources) $(OBJECTS.tests) $(OBJECTS.helpers)
    $(SOURCES:.cpp=.o)
    strippedLib: $(SHLIB)
        if test -e "/usr/bin/strip"; then /usr/bin/strip --strip-debug
    $(SHLIB); fi.phony: strippedLib
    all: clean
    clean:
        rm -f $(OBJECTS.sources) $(OBJECTS.tests) $(OBJECTS.helpers)  *.so

    Thanks!

    	[[alternative HTML version deleted]]

    ______________________________________________
    R-package-devel at r-project.org mailing list
    https://stat.ethz.ch/mailman/listinfo/r-package-devel


From kry|ov@r00t @end|ng |rom gm@||@com  Mon Aug 17 13:33:38 2020
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Mon, 17 Aug 2020 14:33:38 +0300
Subject: [R-pkg-devel] Etiquette for package submissions that do not
 automatically pass checks?
In-Reply-To: <fd761a57-9ec5-6f89-a151-80b2af2d905c@hum.leidenuniv.nl>
References: <fd761a57-9ec5-6f89-a151-80b2af2d905c@hum.leidenuniv.nl>
Message-ID: <20200817143338.1362e66c@trisector>

Dear Cesko,

On Fri, 14 Aug 2020 21:08:55 +0200
Cesko Voeten <c.c.voeten at hum.leidenuniv.nl> wrote:

> The package contains functionality to run on cluster nodes that were
> set up by the user and needs to access its own internal functions
> from there.

Apologies for derailing the thread, but I had a similar problem a few
months ago [*], found what looks like a different solution but did not
have time to investigate it further.

Given that serialize() does not send package namespaces over the wire
[**], why would it be a bad idea to pass actual functions (instead of
character strings naming functions) to parallel::parLapply and friends?
This seems to avoid the need to export the worker functions or use :::
in calls to parallel functions from package functions. Unless I am
missing something, which I probably am.

-- 
Best regards,
Ivan

[*] https://stat.ethz.ch/pipermail/r-package-devel/2020q2/005468.html

[**]
https://cran.r-project.org/doc/manuals/r-release/R-ints.html#Serialization-Formats

"Package and namespace environments are written with pseudo-SEXPTYPEs
followed by the name."


From @ch@r@@k@h|t @end|ng |rom gm@||@com  Mon Aug 17 14:23:38 2020
From: @ch@r@@k@h|t @end|ng |rom gm@||@com (Akshit Achara)
Date: Mon, 17 Aug 2020 17:53:38 +0530
Subject: [R-pkg-devel] 
 How to retrieve a flag set in configure.ac (filled in
 Makevars.in) during package installation in an R or C++ script ?
In-Reply-To: <A68CECDA-D52E-462D-A308-9DADB32F0FA2@uni-due.de>
References: <CAJ=u__OOabSyH-+kbgF+wkRCbge8RtvZ2OspSynSx5cfj9XCdA@mail.gmail.com>
 <A68CECDA-D52E-462D-A308-9DADB32F0FA2@uni-due.de>
Message-ID: <CAJ=u__P4_Y+y0raH6ZB7Ft=EbCyqmMk69AaVUyM1xip3wOSq6g@mail.gmail.com>

Dear Andreas,

Thanks for your answer!

I also got an answer from Rcpp-devel list by Nik Pocuca. He suggested me to
create an .RData or .rda file
(say config.RData) in the data folder of my package and then execute the
statement given below in Makevars.in
to save the flag in the .RData file.
$(R_HOME)/bin/Rscript -e "LIBMINIZINC_PATH <- '@MZN_LIBS@';
save(LIBMINIZINC_PATH, file='../data/config.RData')"

This way the flag would be saved in the data file. Then in the script I
call data("config") and the LIBMINIZINC_PATH flag is
loaded in the global environment from where I can access and use it. I am
currently using this solution and haven't faced
any issues.

Thanks,
Akshit


On Mon, Aug 17, 2020 at 3:36 PM Bl?tte, Andreas <andreas.blaette at uni-due.de>
wrote:

> Dear Akshit,
>
> in the configure script of my package RcppCWB, I use the command line call
> 'R CMD config ...' to get the installation flags.
>
> Calling 'R CMD config' will display options. For your scenario, you can
> use 'R CMD config CPPFLAGS' to get the value of CPPFLAGS.
>
> To call R CMD config safely, you will need to prepend $R_HOME/bin. In the
> configure script of RcppCWB, I need to detect the compiler used and I do it
> using this snippet:
> CC_R=`$R_HOME/bin/R CMD config CC`
>
> More experienced people following R-package-devel than myself may be aware
> of a better solution, and I would also be happy to learn about it.
>
> Kind regards
> Andreas
>
>
> ?Am 15.08.20, 16:25 schrieb "R-package-devel im Auftrag von Akshit Achara"
> <r-package-devel-bounces at r-project.org im Auftrag von
> acharaakshit at gmail.com>:
>
>     Hi everyone,
>
>     Background:
>
>     The package rminizinc <https://github.com/acharaakshit/RMiniZinc>
> provides
>     an interface to MiniZinc
>     <https://www.minizinc.org/tutorial/minizinc-tute.pdf> in R. The
> package
>     provides various functionalities to parse, solve and manipulate
> MiniZinc
>     models. This is done by using the MiniZinc C++ API (libminizinc
>     <https://github.com/MiniZinc/libminizinc>).
>
>     The installation requires linking of the library an including the
> header
>     files for which PKG_LIBS flag(-L/path/to/libminizinc -lmzn) , and
>     PKG_CPPFLAGS (-I/path/to/libminizinc/include) are filled in Makevars.in
>     which is set by configure based on the path of the library provided by
> the
>     user using --configure-args or if the user doesn't provide any
> arguments, a
>     default path is passed from configure (using configure.ac).
>
>     Question:
>
>     In one of my Rcpp functions mzn_parse() which is used to parse MiniZinc
>     models, I sometimes need to use the files in the subdirectories of the
>     libminizinc library. To access these files, I need to use the path of
>     libminizinc (which can change per installation). I want to extract this
>     path from either Makevars or configure to use it in my package. Is
> there
>     any way I could retrieve this path in my scripts?
>
>     Please let me know if this question is not relevant to the mailing
> list.
>
>     The Makevars.in looks like this:
>
>     CXX_STD = CXX11
>     PKG_CPPFLAGS = -I. @MZN_INCLUDE@
>     PKG_LIBS = @MZN_LIBS@
>     OBJECTS.tests = cpp_tests/test-runner.o cpp_tests/test-mzn_parse.o
>     cpp_tests/test-
>     set_params.o cpp_tests/test-mzn_eval.o cpp_tests/test-sol_parse.o
>     cpp_tests/test-
>     getMissingPars.o
>     OBJECTS.sources = RcppExports.o set_params.o mzn_parse.o mzn_eval.o
> sol_parse.o
>     getMissingPars.o
>     OBJECTS.helpers = filetoString.o helper_parse.o expDetails.o
> pathStringcheck.o
>     OBJECTS = $(OBJECTS.sources) $(OBJECTS.tests) $(OBJECTS.helpers)
>     $(SOURCES:.cpp=.o)
>     strippedLib: $(SHLIB)
>         if test -e "/usr/bin/strip"; then /usr/bin/strip --strip-debug
>     $(SHLIB); fi.phony: strippedLib
>     all: clean
>     clean:
>         rm -f $(OBJECTS.sources) $(OBJECTS.tests) $(OBJECTS.helpers)  *.so
>
>     Thanks!
>
>         [[alternative HTML version deleted]]
>
>     ______________________________________________
>     R-package-devel at r-project.org mailing list
>     https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>

	[[alternative HTML version deleted]]


From th|erry@onke||nx @end|ng |rom |nbo@be  Mon Aug 17 15:56:07 2020
From: th|erry@onke||nx @end|ng |rom |nbo@be (Thierry Onkelinx)
Date: Mon, 17 Aug 2020 15:56:07 +0200
Subject: [R-pkg-devel] Formatting .Rbuildignore
Message-ID: <CAJuCY5zoTar22HNCokw351LTdi5xdOtdckCWZ7HbTTgbp_DpYA@mail.gmail.com>

Dear all,

Can we add blank lines in .Rbuildignore? Or lines with only comments (line
starting with #)?

Best regards,

ir. Thierry Onkelinx
Statisticus / Statistician

Vlaamse Overheid / Government of Flanders
INSTITUUT VOOR NATUUR- EN BOSONDERZOEK / RESEARCH INSTITUTE FOR NATURE AND
FOREST
Team Biometrie & Kwaliteitszorg / Team Biometrics & Quality Assurance
thierry.onkelinx at inbo.be
Havenlaan 88 bus 73, 1000 Brussel
www.inbo.be

///////////////////////////////////////////////////////////////////////////////////////////
To call in the statistician after the experiment is done may be no more
than asking him to perform a post-mortem examination: he may be able to say
what the experiment died of. ~ Sir Ronald Aylmer Fisher
The plural of anecdote is not data. ~ Roger Brinner
The combination of some data and an aching desire for an answer does not
ensure that a reasonable answer can be extracted from a given body of data.
~ John Tukey
///////////////////////////////////////////////////////////////////////////////////////////

<https://www.inbo.be>

	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Mon Aug 17 16:50:31 2020
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Mon, 17 Aug 2020 17:50:31 +0300
Subject: [R-pkg-devel] 
 How to retrieve a flag set in configure.ac (filled in
 Makevars.in) during package installation in an R or C++ script ?
In-Reply-To: <CAJ=u__OOabSyH-+kbgF+wkRCbge8RtvZ2OspSynSx5cfj9XCdA@mail.gmail.com>
References: <CAJ=u__OOabSyH-+kbgF+wkRCbge8RtvZ2OspSynSx5cfj9XCdA@mail.gmail.com>
Message-ID: <20200817175031.6ac5a5fa@trisector>

On Sat, 15 Aug 2020 19:50:41 +0530
Akshit Achara <acharaakshit at gmail.com> wrote:

> To access these files, I need to use the path of libminizinc (which
> can change per installation). I want to extract this path from either
> Makevars or configure to use it in my package. 

Just as Makevars is generated during ./configure run from Makefile.in,
you could generate a config.h from a config.h.in and substitute all the
necessary #defines in it. This is how GNU autoconf is typically used in
stand-alone programs [*].

A simpler option would be to add an equivalent of
-DMZN_PATH='"@MZN_PATH"' to PKG_CPPFLAGS in Makevars.in and make sure
that AC_SUBST is called for that variable in configure.ac [**]. Then
the C or C++ code would be able to use MZN_PATH as if it was #defined
in a header file.

-- 
Best regards,
Ivan

[*]
https://www.gnu.org/software/autoconf/manual/autoconf-2.69/html_node/Configuration-Headers.html

[**]
https://www.gnu.org/software/autoconf/manual/autoconf-2.69/html_node/Makefile-Substitutions.html


From kry|ov@r00t @end|ng |rom gm@||@com  Mon Aug 17 18:46:58 2020
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Mon, 17 Aug 2020 19:46:58 +0300
Subject: [R-pkg-devel] Formatting .Rbuildignore
In-Reply-To: <CAJuCY5zoTar22HNCokw351LTdi5xdOtdckCWZ7HbTTgbp_DpYA@mail.gmail.com>
References: <CAJuCY5zoTar22HNCokw351LTdi5xdOtdckCWZ7HbTTgbp_DpYA@mail.gmail.com>
Message-ID: <20200817194658.04372f79@trisector>

On Mon, 17 Aug 2020 15:56:07 +0200
Thierry Onkelinx <thierry.onkelinx at inbo.be> wrote:

> Can we add blank lines in .Rbuildignore? Or lines with only comments
> (line starting with #)?

.Rbuildignore is not documented [1] to allow comments, but the
current implementation does skip empty lines [2] since 2010 [3]
(otherwise empty regular expressions would match all file names).

It could be possible to get away with comment lines, since the
resulting regular expressions are unlikely to ever match anything, but
it would cost CPU cycles to match every file name against every
regular expression, and some regular expressions may turn out to be
really expensive on some inputs [4].

I think that it's best not to try to add comments to .Rbuildignore, and
to avoid blank lines unless not having them becomes really inconvenient.

-- 
Best regards,
Ivan

[1]
https://cran.r-project.org/doc/manuals/R-exts.html#Building-package-tarballs

[2]
https://github.com/wch/r-source/blob/9d13622f41cfa0f36db2595bd6a5bf93e2010e21/src/library/tools/R/build.R#L85

[3]
https://github.com/wch/r-source/commit/b2065b2c36235b876977e405f567afec6ab644b3

[4] https://en.wikipedia.org/wiki/ReDoS


From wdun|@p @end|ng |rom t|bco@com  Mon Aug 17 20:12:47 2020
From: wdun|@p @end|ng |rom t|bco@com (William Dunlap)
Date: Mon, 17 Aug 2020 11:12:47 -0700
Subject: [R-pkg-devel] Formatting .Rbuildignore
In-Reply-To: <20200817194658.04372f79@trisector>
References: <CAJuCY5zoTar22HNCokw351LTdi5xdOtdckCWZ7HbTTgbp_DpYA@mail.gmail.com>
 <20200817194658.04372f79@trisector>
Message-ID: <CAF8bMcYgqzOsR7+KqOHwMamss5nTjZYOP9=so-MYNXUHkgxCbA@mail.gmail.com>

I just tried this out with R-4.0.2 on Linux and it looks like
.Rbuildignore does not treat lines with '#'s as comments.  E.g.,

% mkdir test test/inst
% touch 'test/inst/#octothorp.txt' 'test/inst/normal.txt'
% echo > test/DESCRIPTION 'Package: test\nVersion: 0.1\nTitle:
test\nDescription: A test of .Rbuildignore'
% touch test/NAMESPACE
% R CMD build test > /dev/null

% tar ztf test_0.1.tar.gz | grep '\.txt$'
test/inst/#octothorp.txt
test/inst/normal.txt
% echo '#.*[.]txt' > test/.Rbuildignore
% R CMD build test > /dev/null

% tar ztf test_0.1.tar.gz | grep '\.txt$'
test/inst/normal.txt

Bill Dunlap
TIBCO Software
wdunlap tibco.com

On Mon, Aug 17, 2020 at 9:47 AM Ivan Krylov <krylov.r00t at gmail.com> wrote:
>
> On Mon, 17 Aug 2020 15:56:07 +0200
> Thierry Onkelinx <thierry.onkelinx at inbo.be> wrote:
>
> > Can we add blank lines in .Rbuildignore? Or lines with only comments
> > (line starting with #)?
>
> .Rbuildignore is not documented [1] to allow comments, but the
> current implementation does skip empty lines [2] since 2010 [3]
> (otherwise empty regular expressions would match all file names).
>
> It could be possible to get away with comment lines, since the
> resulting regular expressions are unlikely to ever match anything, but
> it would cost CPU cycles to match every file name against every
> regular expression, and some regular expressions may turn out to be
> really expensive on some inputs [4].
>
> I think that it's best not to try to add comments to .Rbuildignore, and
> to avoid blank lines unless not having them becomes really inconvenient.
>
> --
> Best regards,
> Ivan
>
> [1]
> https://cran.r-project.org/doc/manuals/R-exts.html#Building-package-tarballs
>
> [2]
> https://github.com/wch/r-source/blob/9d13622f41cfa0f36db2595bd6a5bf93e2010e21/src/library/tools/R/build.R#L85
>
> [3]
> https://github.com/wch/r-source/commit/b2065b2c36235b876977e405f567afec6ab644b3
>
> [4] https://en.wikipedia.org/wiki/ReDoS
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From th|erry@onke||nx @end|ng |rom |nbo@be  Tue Aug 18 10:12:04 2020
From: th|erry@onke||nx @end|ng |rom |nbo@be (Thierry Onkelinx)
Date: Tue, 18 Aug 2020 10:12:04 +0200
Subject: [R-pkg-devel] Formatting .Rbuildignore
In-Reply-To: <CAF8bMcYgqzOsR7+KqOHwMamss5nTjZYOP9=so-MYNXUHkgxCbA@mail.gmail.com>
References: <CAJuCY5zoTar22HNCokw351LTdi5xdOtdckCWZ7HbTTgbp_DpYA@mail.gmail.com>
 <20200817194658.04372f79@trisector>
 <CAF8bMcYgqzOsR7+KqOHwMamss5nTjZYOP9=so-MYNXUHkgxCbA@mail.gmail.com>
Message-ID: <CAJuCY5xt8n_Uh80s1JHHwvp4smV5kSvK3EroQg4Ezga1RfDKew@mail.gmail.com>

Thanks for the feedback. It seems like I was under the impression that
.Rbuildignore would follow similar rules as .gitignore.

Best regards,

ir. Thierry Onkelinx
Statisticus / Statistician

Vlaamse Overheid / Government of Flanders
INSTITUUT VOOR NATUUR- EN BOSONDERZOEK / RESEARCH INSTITUTE FOR NATURE AND
FOREST
Team Biometrie & Kwaliteitszorg / Team Biometrics & Quality Assurance
thierry.onkelinx at inbo.be
Havenlaan 88 bus 73, 1000 Brussel
www.inbo.be

///////////////////////////////////////////////////////////////////////////////////////////
To call in the statistician after the experiment is done may be no more
than asking him to perform a post-mortem examination: he may be able to say
what the experiment died of. ~ Sir Ronald Aylmer Fisher
The plural of anecdote is not data. ~ Roger Brinner
The combination of some data and an aching desire for an answer does not
ensure that a reasonable answer can be extracted from a given body of data.
~ John Tukey
///////////////////////////////////////////////////////////////////////////////////////////

<https://www.inbo.be>


Op ma 17 aug. 2020 om 20:12 schreef William Dunlap <wdunlap at tibco.com>:

> I just tried this out with R-4.0.2 on Linux and it looks like
> .Rbuildignore does not treat lines with '#'s as comments.  E.g.,
>
> % mkdir test test/inst
> % touch 'test/inst/#octothorp.txt' 'test/inst/normal.txt'
> % echo > test/DESCRIPTION 'Package: test\nVersion: 0.1\nTitle:
> test\nDescription: A test of .Rbuildignore'
> % touch test/NAMESPACE
> % R CMD build test > /dev/null
>
> % tar ztf test_0.1.tar.gz | grep '\.txt$'
> test/inst/#octothorp.txt
> test/inst/normal.txt
> % echo '#.*[.]txt' > test/.Rbuildignore
> % R CMD build test > /dev/null
>
> % tar ztf test_0.1.tar.gz | grep '\.txt$'
> test/inst/normal.txt
>
> Bill Dunlap
> TIBCO Software
> wdunlap tibco.com
>
> On Mon, Aug 17, 2020 at 9:47 AM Ivan Krylov <krylov.r00t at gmail.com> wrote:
> >
> > On Mon, 17 Aug 2020 15:56:07 +0200
> > Thierry Onkelinx <thierry.onkelinx at inbo.be> wrote:
> >
> > > Can we add blank lines in .Rbuildignore? Or lines with only comments
> > > (line starting with #)?
> >
> > .Rbuildignore is not documented [1] to allow comments, but the
> > current implementation does skip empty lines [2] since 2010 [3]
> > (otherwise empty regular expressions would match all file names).
> >
> > It could be possible to get away with comment lines, since the
> > resulting regular expressions are unlikely to ever match anything, but
> > it would cost CPU cycles to match every file name against every
> > regular expression, and some regular expressions may turn out to be
> > really expensive on some inputs [4].
> >
> > I think that it's best not to try to add comments to .Rbuildignore, and
> > to avoid blank lines unless not having them becomes really inconvenient.
> >
> > --
> > Best regards,
> > Ivan
> >
> > [1]
> >
> https://cran.r-project.org/doc/manuals/R-exts.html#Building-package-tarballs
> >
> > [2]
> >
> https://github.com/wch/r-source/blob/9d13622f41cfa0f36db2595bd6a5bf93e2010e21/src/library/tools/R/build.R#L85
> >
> > [3]
> >
> https://github.com/wch/r-source/commit/b2065b2c36235b876977e405f567afec6ab644b3
> >
> > [4] https://en.wikipedia.org/wiki/ReDoS
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From c@c@voeten @end|ng |rom hum@|e|denun|v@n|  Tue Aug 18 18:39:58 2020
From: c@c@voeten @end|ng |rom hum@|e|denun|v@n| (Voeten, C.C.)
Date: Tue, 18 Aug 2020 16:39:58 +0000
Subject: [R-pkg-devel] Etiquette for package submissions that do not
 automatically pass checks?
In-Reply-To: <20200817143338.1362e66c@trisector>
References: <fd761a57-9ec5-6f89-a151-80b2af2d905c@hum.leidenuniv.nl>
 <20200817143338.1362e66c@trisector>
Message-ID: <1569775aaeb944e8a512aab43f1b6fa9@hum.leidenuniv.nl>

Dear Ivan,

> Apologies for derailing the thread, but I had a similar problem a few
> months ago [*], found what looks like a different solution but did not
> have time to investigate it further.
> 
> Given that serialize() does not send package namespaces over the wire
> [**], why would it be a bad idea to pass actual functions (instead of
> character strings naming functions) to parallel::parLapply and friends?
> This seems to avoid the need to export the worker functions or use :::
> in calls to parallel functions from package functions. Unless I am
> missing something, which I probably am.

No worries, these issues are also what this mailing list is for! I've meanwhile heard back from Uwe that I should resubmit after the 24th, and that he still would like the warning to go away. Your suggestion certainly makes sense, but it would require a rewrite of some delicate parts. Fortunately, I was already passing a parameter list around anyway, so I can just add those functions in that list, and I'll probably end up indeed taking that approach. Thank you for the suggestion! It does feel like an awful hack, though, given that the language supports doing this in a clean way using the ::: operator. But I also understand that CRAN want to impose certain limitations to discourage bad practices, and I trust their judgment that ::: is one of those.

Best,
Cesko

From @@meh@@bdu|@h @end|ng |rom k@u@t@edu@@@  Wed Aug 19 13:03:37 2020
From: @@meh@@bdu|@h @end|ng |rom k@u@t@edu@@@ (Sameh M. Abdulah)
Date: Wed, 19 Aug 2020 11:03:37 +0000
Subject: [R-pkg-devel] R CMD INSTALL -l /path/lib
Message-ID: <8C19E54E-6E49-40C3-9259-8249DE0B4583@kaust.edu.sa>

If a user is using this command to install my package,

R CMD INSTALL -l /path/lib  package_r.tar.gz


How can I get the lib value within the configure file?


--Sameh

	[[alternative HTML version deleted]]


From c@@rd|@g@bor @end|ng |rom gm@||@com  Wed Aug 19 14:01:50 2020
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Wed, 19 Aug 2020 13:01:50 +0100
Subject: [R-pkg-devel] R CMD INSTALL -l /path/lib
In-Reply-To: <8C19E54E-6E49-40C3-9259-8249DE0B4583@kaust.edu.sa>
References: <8C19E54E-6E49-40C3-9259-8249DE0B4583@kaust.edu.sa>
Message-ID: <CABtg=KnGvYCtaK-d+0jJ-F89QDwb_GyQgEPWdE_we34+J_vZNQ@mail.gmail.com>

>From https://cran.r-project.org/doc/manuals/R-exts.html:

> The script is run in a separate R environment containing the following
variables: R_PACKAGE_NAME (the name of the package), R_PACKAGE_SOURCE (the
path to the source directory of the package), R_PACKAGE_DIR (the path of
the target installation directory of the package), R_ARCH (the
arch-dependent part of the path, often empty), SHLIB_EXT (the extension of
shared objects) and WINDOWS (TRUE on Windows, FALSE elsewhere).

This is for `install.libs.R`, but AFAIR it is also true for `configure`. So
you need the `R_PACKAGE_DIR` env var.

Gabor

On Wed, Aug 19, 2020 at 12:03 PM Sameh M. Abdulah <
sameh.abdulah at kaust.edu.sa> wrote:

> If a user is using this command to install my package,
>
> R CMD INSTALL -l /path/lib  package_r.tar.gz
>
>
> How can I get the lib value within the configure file?
>
>
> --Sameh
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From edd @end|ng |rom deb|@n@org  Wed Aug 19 15:00:15 2020
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Wed, 19 Aug 2020 08:00:15 -0500
Subject: [R-pkg-devel] R CMD INSTALL -l /path/lib
In-Reply-To: <CABtg=KnGvYCtaK-d+0jJ-F89QDwb_GyQgEPWdE_we34+J_vZNQ@mail.gmail.com>
References: <8C19E54E-6E49-40C3-9259-8249DE0B4583@kaust.edu.sa>
 <CABtg=KnGvYCtaK-d+0jJ-F89QDwb_GyQgEPWdE_we34+J_vZNQ@mail.gmail.com>
Message-ID: <24381.8799.517345.962083@rob.eddelbuettel.com>


On 19 August 2020 at 13:01, G?bor Cs?rdi wrote:
| >From https://cran.r-project.org/doc/manuals/R-exts.html:
| 
| > The script is run in a separate R environment containing the following
| variables: R_PACKAGE_NAME (the name of the package), R_PACKAGE_SOURCE (the
| path to the source directory of the package), R_PACKAGE_DIR (the path of
| the target installation directory of the package), R_ARCH (the
| arch-dependent part of the path, often empty), SHLIB_EXT (the extension of
| shared objects) and WINDOWS (TRUE on Windows, FALSE elsewhere).
| 
| This is for `install.libs.R`, but AFAIR it is also true for `configure`. So
| you need the `R_PACKAGE_DIR` env var.

Nice. An alternate approach I have used is to call

    $(R_HOME)/bin/Rscript -e 'cat(.libPaths()[1])'

from configure but Gabor's approach saves a process.

Dirk

-- 
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From |uc@r @end|ng |rom |edor@project@org  Wed Aug 19 17:44:15 2020
From: |uc@r @end|ng |rom |edor@project@org (=?UTF-8?Q?I=C3=B1aki_Ucar?=)
Date: Wed, 19 Aug 2020 17:44:15 +0200
Subject: [R-pkg-devel] R CMD INSTALL -l /path/lib
In-Reply-To: <CABtg=KnGvYCtaK-d+0jJ-F89QDwb_GyQgEPWdE_we34+J_vZNQ@mail.gmail.com>
References: <8C19E54E-6E49-40C3-9259-8249DE0B4583@kaust.edu.sa>
 <CABtg=KnGvYCtaK-d+0jJ-F89QDwb_GyQgEPWdE_we34+J_vZNQ@mail.gmail.com>
Message-ID: <CALEXWq25Z+JLF=Fc2nCziOq_nzUQjRQmcirma+pE7dp_VzEPQw@mail.gmail.com>

On Wed, 19 Aug 2020 at 14:02, G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:
>
> From https://cran.r-project.org/doc/manuals/R-exts.html:
>
> > The script is run in a separate R environment containing the following
> variables: R_PACKAGE_NAME (the name of the package), R_PACKAGE_SOURCE (the
> path to the source directory of the package), R_PACKAGE_DIR (the path of
> the target installation directory of the package), R_ARCH (the
> arch-dependent part of the path, often empty), SHLIB_EXT (the extension of
> shared objects) and WINDOWS (TRUE on Windows, FALSE elsewhere).
>
> This is for `install.libs.R`, but AFAIR it is also true for `configure`. So
> you need the `R_PACKAGE_DIR` env var.

But R_PACKAGE_DIR contains the temporary path for staged
installations. Instead, I think R_LIBRARY_DIR is the desired path.

> Gabor
>
> On Wed, Aug 19, 2020 at 12:03 PM Sameh M. Abdulah <
> sameh.abdulah at kaust.edu.sa> wrote:
>
> > If a user is using this command to install my package,
> >
> > R CMD INSTALL -l /path/lib  package_r.tar.gz
> >
> >
> > How can I get the lib value within the configure file?
> >
> >
> > --Sameh

-- 
I?aki ?car


From @@meh@@bdu|@h @end|ng |rom k@u@t@edu@@@  Wed Aug 19 17:48:45 2020
From: @@meh@@bdu|@h @end|ng |rom k@u@t@edu@@@ (Sameh M. Abdulah)
Date: Wed, 19 Aug 2020 15:48:45 +0000
Subject: [R-pkg-devel] R CMD INSTALL -l /path/lib
In-Reply-To: <CALEXWq25Z+JLF=Fc2nCziOq_nzUQjRQmcirma+pE7dp_VzEPQw@mail.gmail.com>
References: <8C19E54E-6E49-40C3-9259-8249DE0B4583@kaust.edu.sa>
 <CABtg=KnGvYCtaK-d+0jJ-F89QDwb_GyQgEPWdE_we34+J_vZNQ@mail.gmail.com>,
 <CALEXWq25Z+JLF=Fc2nCziOq_nzUQjRQmcirma+pE7dp_VzEPQw@mail.gmail.com>
Message-ID: <0D270DB6-6EEA-476A-B50E-DE0A80E27795@kaust.edu.sa>

Many Thanks Gabor! It works with me.

?Sameh


On Aug 19, 2020, at 6:44 PM, I?aki Ucar <iucar at fedoraproject.org> wrote:
> 
> ?On Wed, 19 Aug 2020 at 14:02, G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:
>> 
>> From https://cran.r-project.org/doc/manuals/R-exts.html:
>> 
>>> The script is run in a separate R environment containing the following
>> variables: R_PACKAGE_NAME (the name of the package), R_PACKAGE_SOURCE (the
>> path to the source directory of the package), R_PACKAGE_DIR (the path of
>> the target installation directory of the package), R_ARCH (the
>> arch-dependent part of the path, often empty), SHLIB_EXT (the extension of
>> shared objects) and WINDOWS (TRUE on Windows, FALSE elsewhere).
>> 
>> This is for `install.libs.R`, but AFAIR it is also true for `configure`. So
>> you need the `R_PACKAGE_DIR` env var.
> 
> But R_PACKAGE_DIR contains the temporary path for staged
> installations. Instead, I think R_LIBRARY_DIR is the desired path.
> 
>> Gabor
>> 
>>> On Wed, Aug 19, 2020 at 12:03 PM Sameh M. Abdulah <
>>> sameh.abdulah at kaust.edu.sa> wrote:
>>> 
>>> If a user is using this command to install my package,
>>> 
>>> R CMD INSTALL -l /path/lib  package_r.tar.gz
>>> 
>>> 
>>> How can I get the lib value within the configure file?
>>> 
>>> 
>>> --Sameh
> 
> -- 
> I?aki ?car

From @@meh@@bdu|@h @end|ng |rom k@u@t@edu@@@  Sat Aug 22 22:08:12 2020
From: @@meh@@bdu|@h @end|ng |rom k@u@t@edu@@@ (Sameh M. Abdulah)
Date: Sat, 22 Aug 2020 20:08:12 +0000
Subject: [R-pkg-devel] install_git +submodules
Message-ID: <2007C9BC-2FAA-4223-BC36-EB502C2FCEFE@kaust.edu.sa>


I am using install_git to download my package from Github. The problem that I am using submodule on my repo and install_git always uses the master branch of this submodule.
I defined mu submodules to uses a specific commit, not the master.

I tried to used args="--recursive" but the same problem is still occurring.


--Sameh

	[[alternative HTML version deleted]]


From c@@rd|@g@bor @end|ng |rom gm@||@com  Sat Aug 22 22:15:23 2020
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Sat, 22 Aug 2020 21:15:23 +0100
Subject: [R-pkg-devel] install_git +submodules
In-Reply-To: <2007C9BC-2FAA-4223-BC36-EB502C2FCEFE@kaust.edu.sa>
References: <2007C9BC-2FAA-4223-BC36-EB502C2FCEFE@kaust.edu.sa>
Message-ID: <CABtg=Kn-SpLZ1WpdHYtAsHF34Pcm3q+JL9k0PC3m8xOs0u5OzA@mail.gmail.com>

Hi, If you mean remotes::install_git(), and you think this is a bug in
remotes, then please open an issue in the remotes issue tracker:
https://github.com/r-lib/remotes/issues

Thanks,
Gabor


On Sat, Aug 22, 2020 at 9:08 PM Sameh M. Abdulah
<sameh.abdulah at kaust.edu.sa> wrote:
>
>
> I am using install_git to download my package from Github. The problem that I am using submodule on my repo and install_git always uses the master branch of this submodule.
> I defined mu submodules to uses a specific commit, not the master.
>
> I tried to used args="--recursive" but the same problem is still occurring.
>
>
> --Sameh
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From r|che| @end|ng |rom r|che|b||derbeek@n|  Mon Aug 24 11:22:50 2020
From: r|che| @end|ng |rom r|che|b||derbeek@n| (Richel Bilderbeek)
Date: Mon, 24 Aug 2020 11:22:50 +0200
Subject: [R-pkg-devel] Package that needs installation URL to function
 optimally eligible for CRAN
Message-ID: <1598260970191.21076.170832@webmail6>

Dear fellow package developers,

I send this email for advice whether if I should submit a package to CRAN.

I have written a GPL-3 licensed package, that allows one to install and use a command-line tool. This command-line tool, however, has a restriction: it is to be used by academics only. To be able to actually install it, there is a web form to request a download URL (valid for 4 hours). After confirmation of being an academic, one receives this URL by email.


I feel the package on its own is useful enough to be put on CRAN. It 'R CMD check's cleanly without the install, yet if helps the install the command-line tool from the emailed URL (see <https://github.com/richelbilderbeek/netmhc2pan#install> ).
Should I submit my package to CRAN?

Thanks for your advice, Richel Bilderbeek



From jen@@oeh|@ch|@ege| @end|ng |rom truec|u@ter@com  Mon Aug 24 22:29:54 2020
From: jen@@oeh|@ch|@ege| @end|ng |rom truec|u@ter@com (=?UTF-8?Q?Dr=2E_Jens_Oehlschl=C3=A4gel?=)
Date: Mon, 24 Aug 2020 22:29:54 +0200
Subject: [R-pkg-devel] need help to identify ff error on
 r-oldrel-macos-x86_64
Message-ID: <trinity-e221f992-627c-4605-9032-ef40d672106a-1598300994815@3c-app-webde-bs37>

Dear Mac users,

Can someone of you identify the cause of the problem in

https://www.r-project.org/nosvn/R.check/r-oldrel-macos-x86_64/ff-00check.html

I can't because I don't have access to a Mac.

It seems that gc() after rm(ffobject) does not remove the ff file in rows

(@test-zero_lengths.R#34)
(@test-zero_lengths.R#35)
(@test-zero_lengths.R#63)
(@test-zero_lengths.R#64)

so maybe the finalizer is not triggered? Does delete(ffobject) work?

Kind regards


Jens


-------- Forwarded Message --------
Subject: Re: CRAN package ff
Date: Mon, 24 Aug 2020 08:23:24 +0100
From: Prof Brian Ripley <ripley at stats.ox.ac.uk>
Reply-To: CRAN at R-project.org
To: jens.oehlschlaegel at truecluster.com
CC: CRAN at R-project.org

On 24/08/2020 08:19, Prof Brian Ripley wrote:
> Dear maintainer,
>
> Please see the problems shown on
> <https://cran.r-project.org/web/checks/check_results_ff.html>.
>
> Please correct before 2020-09-07 to safely retain your package on CRAN.
>
> The CRAN Team
>
I am seeing the macOS errors on all flavours: a more complete log is
installed.

--
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Emeritus Professor of Applied Statistics, University of Oxford


-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: ff.out
URL: <https://stat.ethz.ch/pipermail/r-package-devel/attachments/20200824/837fae79/attachment.ksh>

From t@jendoub|14 @end|ng |rom |mper|@|@@c@uk  Mon Aug 24 23:08:59 2020
From: t@jendoub|14 @end|ng |rom |mper|@|@@c@uk (Jendoubi Bedhiafi, Takoua)
Date: Mon, 24 Aug 2020 21:08:59 +0000
Subject: [R-pkg-devel] help in identifying a segfault (rhub)
Message-ID: <3C0F7C1B-8102-4D0C-B577-AC326F1E15DB@ic.ac.uk>

Hi all,

I am reaching out to seeking help in debugging my package.
The package has been already on CRAN for some time, updated twice. Also, I have been checking the package regularly on rhub, since my last submission to CRAN, with no errors.

However, recently last checks on rhub end with a segmentation fault for the following platform:
Platform:       Fedora Linux, R-devel, clang, gfortran

From the error log below it seems that the error happens after running the examples:


* checking examples with --run-donttest ...sh: line 1: 10229 Segmentation fault      (core dumped) LANGUAGE=en _R_CHECK_INTERNALS2_=1 R_LIBS=/tmp/RtmpBr5Iyu/RLIBS_264b50c09c34 R_ENVIRON_USER='' R_LIBS_USER='' R_LIBS_SITE='no_such_dir' '/opt/R-devel/lib64/R/bin/R' --vanilla --encoding=UTF-8 > 'iCARH-Ex.Rout' 2>&1 < 'iCARH-Ex.R'
 ERROR
Running examples in ?iCARH-Ex.R? failed
The error most likely occurred in:

> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: iCARH.getPathwaysMat
> ### Title: Builds pathways adjacency matrices
> ### Aliases: iCARH.getPathwaysMat
>
> ### ** Examples
>
> keggid = list("C08363")
> iCARH.getPathwaysMat(keggid, "rno")
[1] "no result"
NULL
> ## No test:
> keggid = list("Unk1", "C00350","Unk2",c("C08363", "C00712"))
> iCARH.getPathwaysMat(keggid, "rno")
named list()
> ## End(No test)
>
>
>
>
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("iCARH.getPathwaysMat", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()

 *** caught segfault ***
address 0xffffffffffffff96, cause 'memory not mapped'
An irrecoverable exception occurred. R is aborting now ...


 The full log link is below:
https://builder.r-hub.io/status/original/iCARH_2.0.2.1.tar.gz-5af530549db347e2827b37d9e8b00231

Any ideas on how this can be solved are welcome.

Thanks in advance,
Bw,

Dr. Takoua Jendoubi
Statistics section | Department of Mathematics |
Imperial College London | Room 533 |
South Kensington Campus | London |
SW7 2AZ |


	[[alternative HTML version deleted]]


From c@@rd|@g@bor @end|ng |rom gm@||@com  Mon Aug 24 23:17:59 2020
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Mon, 24 Aug 2020 22:17:59 +0100
Subject: [R-pkg-devel] help in identifying a segfault (rhub)
In-Reply-To: <3C0F7C1B-8102-4D0C-B577-AC326F1E15DB@ic.ac.uk>
References: <3C0F7C1B-8102-4D0C-B577-AC326F1E15DB@ic.ac.uk>
Message-ID: <CABtg=Km3+yjj0gV8yYzyUnefe0KgB8yvCBtpruqK0ymEMcQ4-A@mail.gmail.com>

Is this reproducible on R-hub? Do you see it with the other R-devel
containers as well?

Some things to try:

Try running address sanitizer on your package to see if it can find
any memory errors. You can do this on R-hub as well, if you cannot do
it on your machine.

Try downloading the https://hub.docker.com/r/rhub/fedora-clang-devel
Docker container and reproduce this locally.

Gabor

On Mon, Aug 24, 2020 at 10:09 PM Jendoubi Bedhiafi, Takoua
<t.jendoubi14 at imperial.ac.uk> wrote:
>
> Hi all,
>
> I am reaching out to seeking help in debugging my package.
> The package has been already on CRAN for some time, updated twice. Also, I have been checking the package regularly on rhub, since my last submission to CRAN, with no errors.
>
> However, recently last checks on rhub end with a segmentation fault for the following platform:
> Platform:       Fedora Linux, R-devel, clang, gfortran
>
> From the error log below it seems that the error happens after running the examples:
>
>
> * checking examples with --run-donttest ...sh: line 1: 10229 Segmentation fault      (core dumped) LANGUAGE=en _R_CHECK_INTERNALS2_=1 R_LIBS=/tmp/RtmpBr5Iyu/RLIBS_264b50c09c34 R_ENVIRON_USER='' R_LIBS_USER='' R_LIBS_SITE='no_such_dir' '/opt/R-devel/lib64/R/bin/R' --vanilla --encoding=UTF-8 > 'iCARH-Ex.Rout' 2>&1 < 'iCARH-Ex.R'
>  ERROR
> Running examples in ?iCARH-Ex.R? failed
> The error most likely occurred in:
>
> > base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> > ### Name: iCARH.getPathwaysMat
> > ### Title: Builds pathways adjacency matrices
> > ### Aliases: iCARH.getPathwaysMat
> >
> > ### ** Examples
> >
> > keggid = list("C08363")
> > iCARH.getPathwaysMat(keggid, "rno")
> [1] "no result"
> NULL
> > ## No test:
> > keggid = list("Unk1", "C00350","Unk2",c("C08363", "C00712"))
> > iCARH.getPathwaysMat(keggid, "rno")
> named list()
> > ## End(No test)
> >
> >
> >
> >
> > base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> > base::cat("iCARH.getPathwaysMat", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> > cleanEx()
>
>  *** caught segfault ***
> address 0xffffffffffffff96, cause 'memory not mapped'
> An irrecoverable exception occurred. R is aborting now ...
>
>
>  The full log link is below:
> https://builder.r-hub.io/status/original/iCARH_2.0.2.1.tar.gz-5af530549db347e2827b37d9e8b00231
>
> Any ideas on how this can be solved are welcome.
>
> Thanks in advance,
> Bw,
>
> Dr. Takoua Jendoubi
> Statistics section | Department of Mathematics |
> Imperial College London | Room 533 |
> South Kensington Campus | London |
> SW7 2AZ |
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From n|cho|@@@t|erney @end|ng |rom gm@||@com  Tue Aug 25 15:54:30 2020
From: n|cho|@@@t|erney @end|ng |rom gm@||@com (Nicholas Tierney)
Date: Tue, 25 Aug 2020 23:54:30 +1000
Subject: [R-pkg-devel] Error in winbuilder
Message-ID: <CACrL82WYooy2hM5KAfkUfoYJ721bQWN0OPgOG94ZocgHLdsg7g@mail.gmail.com>

Hi Everyone,

I have an error when submitting to Winbuilder for my R package, naniar
<https://github.com/njtierney/naniar>.

When using `devtools::check_win_devel()` or `devtools::check_win_release()`
on naniar, I get the following logfile from winbuilder:

```
* using log directory 'd:/RCompile/CRANguest/R-release/naniar.Rcheck'
* using R version 4.0.2 (2020-06-22)
* using platform: x86_64-w64-mingw32 (64-bit)
* using session charset: ISO8859-1
* checking for file 'naniar/DESCRIPTION' ... OK
* checking extension type ... Package
* this is package 'naniar' version '0.5.3'
* package encoding: UTF-8
* checking CRAN incoming feasibility ... ERROR
Check process probably crashed or hung up for 20 minutes ... killed
Most likely this happened in the example checks (?),
if not, ignore the following last lines of example output:

======== End of example output (where/before crash/hang up occured ?)
========
```

(submission URL here: https://win-builder.r-project.org/77PYyM2kMri1/)

I had previously thought this was a problem to do with CRAN being closed
last week, but apparently this is not the case, and it should have been
working. I cannot find any details on CRAN for this, but it passes build on
R HUB for windows, and it passes build with no warnings, errors, or notes
for me on Mac OSX, as well as on github actions (windows, macOS, and
ubuntu).

Just wondering if anyone has thoughts on this? I have also cross
posted on Rstudio
community
<
https://community.rstudio.com/t/winbuilder-error-check-process-probably-crashed-or-hung-up-for-20-minutes-killed/77492
>,
in case that is of interest.

Thanks for your time, and apologies if I have missed something obvious.

All the best,

Nick

	[[alternative HTML version deleted]]


From jo@hu@@gr@nt@h@rr|@on @end|ng |rom gm@||@com  Tue Aug 25 20:39:49 2020
From: jo@hu@@gr@nt@h@rr|@on @end|ng |rom gm@||@com (Joshua Harrison)
Date: Tue, 25 Aug 2020 12:39:49 -0600
Subject: [R-pkg-devel] =?utf-8?q?Package_inputenc_Error=3A_Unicode_char_?=
	=?utf-8?q?=E2=80=90_=28U+2010=29_during_Windows_build?=
Message-ID: <CAKw8BGJguhq20+UT-1+y0gCW5XPhCL2LOe-hAU5FbSULoghpWg@mail.gmail.com>

Hi all,

I cannot get my package to correctly build on Windows because of an
encoding error that I just can't figure out. The package builds on my Mac
(10.14.6) and on a recent Debian release.

The source code for the package can be viewed here:
https://github.com/JHarrisonEcoEvo/CNVRG

The error code thrown by the "check_win_release" function of devtools is:

* checking PDF version of manual ... WARNING
LaTeX errors when creating PDF version.
This typically indicates Rd problems.
LaTeX errors found:
! Package inputenc Error: Unicode char ? (U+2010)
(inputenc)                not set up for use with LaTeX.

See the inputenc package documentation for explanation.
Type  H <return>  for immediate help.
! Package inputenc Error: Unicode char ? (U+2010)
(inputenc)                not set up for use with LaTeX.

See the inputenc package documentation for explanation.
Type  H <return>  for immediate help.
* checking PDF version of manual without hyperrefs or index ... ERROR
* checking for detritus in the temp directory ... OK
* DONE
Status: 1 ERROR, 1 WARNING, 1 NOTE

FYI the note referenced is because the package is a new submission.

I figured the problem was with hyphens (the unicode 2010) and so I went
through the manual and vignette and deleted all the hyphens in the regular
text. There are still hyphen symbols in the assignment operator of the
examples ("<-"). Are these the problem?

I have spent way too much time trying to figure this out so any help would
be greatly appreciated. I see that many folks have similar issues with
vignettes and manuals but I haven't found a solution that works for me.

I am completely fine not having the package build on Windows. Users of that
system can download the manual or view it in a browser. However, I don't
see how I can get the package on CRAN without fixing this.

Thanks for your time and assistance!

--
J. G. Harrison
Postdoctoral researcher
University of Wyoming
jgharrison.weebly.com

	[[alternative HTML version deleted]]


From v|ncentv@nhee@ @end|ng |rom gm@||@com  Wed Aug 26 14:22:58 2020
From: v|ncentv@nhee@ @end|ng |rom gm@||@com (Vincent van Hees)
Date: Wed, 26 Aug 2020 14:22:58 +0200
Subject: [R-pkg-devel] url checks not working for me
Message-ID: <CALnEB14VV2weCWkLNpw3SGK3uO-QYzMSJjDM0gNj3M5HCmrr7g@mail.gmail.com>

Hello,
URL errors in my DESCRIPTION file and package vignette are not picked up
when I do R CMD check --as-cran or devtools::check(). I only know about
these errors because CRAN has rejected my package submission and instructed
me to fix the urls (example at end of this message).

I am trying to figure out how I can get R CMD check --as-cran to detect
these URL mistakes. From
https://cran.r-project.org/web/packages/URL_checks.html I understand that I
need libcurl installed, which I have.

Can anyone tell me whether I am using the wrong combination of libcurl
version, R version, and Ubuntu version? (see versions below). If not, what
else can I do to get the URL checks to work?

Thanks, Vincent

vincent at vincent-VB:~$ curl-config --version
*libcurl 7.58.0*

vincent at vincent-VB:~$ curl -V
*curl 7.58.0* (x86_64-pc-linux-gnu) libcurl/7.58.0 OpenSSL/1.1.1
zlib/1.2.11 libidn2/2.0.4 libpsl/0.19.1 (+libidn2/2.0.4) nghttp2/1.30.0
librtmp/2.3
Release-Date: 2018-01-24
Protocols: dict file ftp ftps gopher http https imap imaps ldap ldaps pop3
pop3s rtmp rtsp smb smbs smtp smtps telnet tftp
Features: AsynchDNS IDN IPv6 Largefile GSS-API Kerberos SPNEGO NTLM NTLM_WB
SSL libz TLS-SRP HTTP2 UnixSockets HTTPS-proxy PSL

vincent at vincent-VB:~$ R --version
*R version 4.0.2* (2020-06-22) -- "Taking Off Again"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under the terms of the
GNU General Public License versions 2 or 3.
For more information about these matters see
https://www.gnu.org/licenses/.

vincent at vincent-VB:~$ lsb_release -a
No LSB modules are available.
Distributor ID: Ubuntu
Description: *Ubuntu 18.04.5 LTS*
Release: 18.04
Codename: bionic

Example of most recent URL mistakes in my package detected by CRAN package
submission process which I could not detect locally:
Found the following (possibly) invalid URLs: URL:
http://journals.plos.org/plosone/article?id=10.1371/journal.pone.0142533
(moved to
https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0142533)
From: inst/CITATION Status: 200 Message: OK URL: https://geneactiv.org/
(moved to https://www.activinsights.com/) From: inst/doc/GGIR.html Status:
200 Message: OK URL: https://www.accelting.com/ (moved to
https://accelting.com/) From: inst/doc/GGIR.html Status: 200 Message: OK
URL: https://www.physiology.org/doi/10.1152/japplphysiol.00421.2014 (moved
to https://journals.physiology.org/doi/10.1152/japplphysiol.00421.2014)
From: inst/CITATION Status: 200 Message: OK

	[[alternative HTML version deleted]]


From h@n@on @end|ng |rom dep@uw@edu  Wed Aug 26 14:30:41 2020
From: h@n@on @end|ng |rom dep@uw@edu (Bryan Hanson)
Date: Wed, 26 Aug 2020 08:30:41 -0400
Subject: [R-pkg-devel] url checks not working for me
In-Reply-To: <CALnEB14VV2weCWkLNpw3SGK3uO-QYzMSJjDM0gNj3M5HCmrr7g@mail.gmail.com>
References: <CALnEB14VV2weCWkLNpw3SGK3uO-QYzMSJjDM0gNj3M5HCmrr7g@mail.gmail.com>
Message-ID: <131AA116-1C8F-46EF-AA4E-57C6B1A7EA46@depauw.edu>

At the minimum you should look at the ?moved to? URLs and change your links to those (some are outright changes in URLs that were redirected and some are http to https changes).

Bryan

> On Aug 26, 2020, at 8:22 AM, Vincent van Hees <vincentvanhees at gmail.com> wrote:
> 
> Hello,
> URL errors in my DESCRIPTION file and package vignette are not picked up
> when I do R CMD check --as-cran or devtools::check(). I only know about
> these errors because CRAN has rejected my package submission and instructed
> me to fix the urls (example at end of this message).
> 
> I am trying to figure out how I can get R CMD check --as-cran to detect
> these URL mistakes. From
> https://cran.r-project.org/web/packages/URL_checks.html I understand that I
> need libcurl installed, which I have.
> 
> Can anyone tell me whether I am using the wrong combination of libcurl
> version, R version, and Ubuntu version? (see versions below). If not, what
> else can I do to get the URL checks to work?
> 
> Thanks, Vincent
> 
> vincent at vincent-VB:~$ curl-config --version
> *libcurl 7.58.0*
> 
> vincent at vincent-VB:~$ curl -V
> *curl 7.58.0* (x86_64-pc-linux-gnu) libcurl/7.58.0 OpenSSL/1.1.1
> zlib/1.2.11 libidn2/2.0.4 libpsl/0.19.1 (+libidn2/2.0.4) nghttp2/1.30.0
> librtmp/2.3
> Release-Date: 2018-01-24
> Protocols: dict file ftp ftps gopher http https imap imaps ldap ldaps pop3
> pop3s rtmp rtsp smb smbs smtp smtps telnet tftp
> Features: AsynchDNS IDN IPv6 Largefile GSS-API Kerberos SPNEGO NTLM NTLM_WB
> SSL libz TLS-SRP HTTP2 UnixSockets HTTPS-proxy PSL
> 
> vincent at vincent-VB:~$ R --version
> *R version 4.0.2* (2020-06-22) -- "Taking Off Again"
> Copyright (C) 2020 The R Foundation for Statistical Computing
> Platform: x86_64-pc-linux-gnu (64-bit)
> 
> R is free software and comes with ABSOLUTELY NO WARRANTY.
> You are welcome to redistribute it under the terms of the
> GNU General Public License versions 2 or 3.
> For more information about these matters see
> https://www.gnu.org/licenses/.
> 
> vincent at vincent-VB:~$ lsb_release -a
> No LSB modules are available.
> Distributor ID: Ubuntu
> Description: *Ubuntu 18.04.5 LTS*
> Release: 18.04
> Codename: bionic
> 
> Example of most recent URL mistakes in my package detected by CRAN package
> submission process which I could not detect locally:
> Found the following (possibly) invalid URLs: URL:
> http://journals.plos.org/plosone/article?id=10.1371/journal.pone.0142533
> (moved to
> https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0142533)
> From: inst/CITATION Status: 200 Message: OK URL: https://geneactiv.org/
> (moved to https://www.activinsights.com/) From: inst/doc/GGIR.html Status:
> 200 Message: OK URL: https://www.accelting.com/ (moved to
> https://accelting.com/) From: inst/doc/GGIR.html Status: 200 Message: OK
> URL: https://www.physiology.org/doi/10.1152/japplphysiol.00421.2014 (moved
> to https://journals.physiology.org/doi/10.1152/japplphysiol.00421.2014)
> From: inst/CITATION Status: 200 Message: OK
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From v|ncentv@nhee@ @end|ng |rom gm@||@com  Wed Aug 26 14:34:48 2020
From: v|ncentv@nhee@ @end|ng |rom gm@||@com (Vincent van Hees)
Date: Wed, 26 Aug 2020 14:34:48 +0200
Subject: [R-pkg-devel] url checks not working for me
In-Reply-To: <131AA116-1C8F-46EF-AA4E-57C6B1A7EA46@depauw.edu>
References: <CALnEB14VV2weCWkLNpw3SGK3uO-QYzMSJjDM0gNj3M5HCmrr7g@mail.gmail.com>
 <131AA116-1C8F-46EF-AA4E-57C6B1A7EA46@depauw.edu>
Message-ID: <CALnEB17A00q5DqNyww3JeOT-jdq=qTudQP0oxC-tNjtw7AN8mw@mail.gmail.com>

Addressing the errors is not the problem. I want to be able to detect these
problems when I do: R CMD check --as-cran.
At the moment, I can only detect the errors by submitting the package to
CRAN, because only their package check triggers these errors.

On Wed, 26 Aug 2020 at 14:30, Bryan Hanson <hanson at depauw.edu> wrote:

> At the minimum you should look at the ?moved to? URLs and change your
> links to those (some are outright changes in URLs that were redirected and
> some are http to https changes).
>
> Bryan
>
> > On Aug 26, 2020, at 8:22 AM, Vincent van Hees <vincentvanhees at gmail.com>
> wrote:
> >
> > Hello,
> > URL errors in my DESCRIPTION file and package vignette are not picked up
> > when I do R CMD check --as-cran or devtools::check(). I only know about
> > these errors because CRAN has rejected my package submission and
> instructed
> > me to fix the urls (example at end of this message).
> >
> > I am trying to figure out how I can get R CMD check --as-cran to detect
> > these URL mistakes. From
> > https://cran.r-project.org/web/packages/URL_checks.html I understand
> that I
> > need libcurl installed, which I have.
> >
> > Can anyone tell me whether I am using the wrong combination of libcurl
> > version, R version, and Ubuntu version? (see versions below). If not,
> what
> > else can I do to get the URL checks to work?
> >
> > Thanks, Vincent
> >
> > vincent at vincent-VB:~$ curl-config --version
> > *libcurl 7.58.0*
> >
> > vincent at vincent-VB:~$ curl -V
> > *curl 7.58.0* (x86_64-pc-linux-gnu) libcurl/7.58.0 OpenSSL/1.1.1
> > zlib/1.2.11 libidn2/2.0.4 libpsl/0.19.1 (+libidn2/2.0.4) nghttp2/1.30.0
> > librtmp/2.3
> > Release-Date: 2018-01-24
> > Protocols: dict file ftp ftps gopher http https imap imaps ldap ldaps
> pop3
> > pop3s rtmp rtsp smb smbs smtp smtps telnet tftp
> > Features: AsynchDNS IDN IPv6 Largefile GSS-API Kerberos SPNEGO NTLM
> NTLM_WB
> > SSL libz TLS-SRP HTTP2 UnixSockets HTTPS-proxy PSL
> >
> > vincent at vincent-VB:~$ R --version
> > *R version 4.0.2* (2020-06-22) -- "Taking Off Again"
> > Copyright (C) 2020 The R Foundation for Statistical Computing
> > Platform: x86_64-pc-linux-gnu (64-bit)
> >
> > R is free software and comes with ABSOLUTELY NO WARRANTY.
> > You are welcome to redistribute it under the terms of the
> > GNU General Public License versions 2 or 3.
> > For more information about these matters see
> > https://www.gnu.org/licenses/.
> >
> > vincent at vincent-VB:~$ lsb_release -a
> > No LSB modules are available.
> > Distributor ID: Ubuntu
> > Description: *Ubuntu 18.04.5 LTS*
> > Release: 18.04
> > Codename: bionic
> >
> > Example of most recent URL mistakes in my package detected by CRAN
> package
> > submission process which I could not detect locally:
> > Found the following (possibly) invalid URLs: URL:
> > http://journals.plos.org/plosone/article?id=10.1371/journal.pone.0142533
> > (moved to
> >
> https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0142533)
> > From: inst/CITATION Status: 200 Message: OK URL: https://geneactiv.org/
> > (moved to https://www.activinsights.com/) From: inst/doc/GGIR.html
> Status:
> > 200 Message: OK URL: https://www.accelting.com/ (moved to
> > https://accelting.com/) From: inst/doc/GGIR.html Status: 200 Message: OK
> > URL: https://www.physiology.org/doi/10.1152/japplphysiol.00421.2014
> (moved
> > to https://journals.physiology.org/doi/10.1152/japplphysiol.00421.2014)
> > From: inst/CITATION Status: 200 Message: OK
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>

	[[alternative HTML version deleted]]


From ||@t@ @end|ng |rom dewey@myzen@co@uk  Wed Aug 26 14:48:59 2020
From: ||@t@ @end|ng |rom dewey@myzen@co@uk (Michael Dewey)
Date: Wed, 26 Aug 2020 13:48:59 +0100
Subject: [R-pkg-devel] Error in winbuilder
In-Reply-To: <CACrL82WYooy2hM5KAfkUfoYJ721bQWN0OPgOG94ZocgHLdsg7g@mail.gmail.com>
References: <CACrL82WYooy2hM5KAfkUfoYJ721bQWN0OPgOG94ZocgHLdsg7g@mail.gmail.com>
Message-ID: <8d6a04f7-10af-d7fe-ad67-4af5dae45155@dewey.myzen.co.uk>

Dear Nicholas

Do you in fact have many examples in the package? Perhaps for some 
mysterious reason they take longer there than when you check at home.

Michael

On 25/08/2020 14:54, Nicholas Tierney wrote:
> Hi Everyone,
> 
> I have an error when submitting to Winbuilder for my R package, naniar
> <https://github.com/njtierney/naniar>.
> 
> When using `devtools::check_win_devel()` or `devtools::check_win_release()`
> on naniar, I get the following logfile from winbuilder:
> 
> ```
> * using log directory 'd:/RCompile/CRANguest/R-release/naniar.Rcheck'
> * using R version 4.0.2 (2020-06-22)
> * using platform: x86_64-w64-mingw32 (64-bit)
> * using session charset: ISO8859-1
> * checking for file 'naniar/DESCRIPTION' ... OK
> * checking extension type ... Package
> * this is package 'naniar' version '0.5.3'
> * package encoding: UTF-8
> * checking CRAN incoming feasibility ... ERROR
> Check process probably crashed or hung up for 20 minutes ... killed
> Most likely this happened in the example checks (?),
> if not, ignore the following last lines of example output:
> 
> ======== End of example output (where/before crash/hang up occured ?)
> ========
> ```
> 
> (submission URL here: https://win-builder.r-project.org/77PYyM2kMri1/)
> 
> I had previously thought this was a problem to do with CRAN being closed
> last week, but apparently this is not the case, and it should have been
> working. I cannot find any details on CRAN for this, but it passes build on
> R HUB for windows, and it passes build with no warnings, errors, or notes
> for me on Mac OSX, as well as on github actions (windows, macOS, and
> ubuntu).
> 
> Just wondering if anyone has thoughts on this? I have also cross
> posted on Rstudio
> community
> <
> https://community.rstudio.com/t/winbuilder-error-check-process-probably-crashed-or-hung-up-for-20-minutes-killed/77492
>> ,
> in case that is of interest.
> 
> Thanks for your time, and apologies if I have missed something obvious.
> 
> All the best,
> 
> Nick
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 

-- 
Michael
http://www.dewey.myzen.co.uk/home.html


From jo@h@m@u|r|ch @end|ng |rom gm@||@com  Wed Aug 26 14:52:34 2020
From: jo@h@m@u|r|ch @end|ng |rom gm@||@com (Joshua Ulrich)
Date: Wed, 26 Aug 2020 07:52:34 -0500
Subject: [R-pkg-devel] url checks not working for me
In-Reply-To: <CALnEB17A00q5DqNyww3JeOT-jdq=qTudQP0oxC-tNjtw7AN8mw@mail.gmail.com>
References: <CALnEB14VV2weCWkLNpw3SGK3uO-QYzMSJjDM0gNj3M5HCmrr7g@mail.gmail.com>
 <131AA116-1C8F-46EF-AA4E-57C6B1A7EA46@depauw.edu>
 <CALnEB17A00q5DqNyww3JeOT-jdq=qTudQP0oxC-tNjtw7AN8mw@mail.gmail.com>
Message-ID: <CAPPM_gRQm4YgLwkHKGZqG5QUfy-qTc4t8QGkBxJYf4hk0_4yng@mail.gmail.com>

On Wed, Aug 26, 2020 at 7:43 AM Vincent van Hees
<vincentvanhees at gmail.com> wrote:
>
> Addressing the errors is not the problem. I want to be able to detect these
> problems when I do: R CMD check --as-cran.
> At the moment, I can only detect the errors by submitting the package to
> CRAN, because only their package check triggers these errors.
>
The win-builder system will also detect them.

These checks trigger for me on your package.

> R CMD check GGIR_2.1-0.tar.gz --as-cran
* using log directory '/home/josh/git/GGIR.Rcheck'
* using R version 4.0.2 (2020-06-22)
* using platform: x86_64-pc-linux-gnu (64-bit)
* using session charset: UTF-8
* using option '--as-cran'
* checking for file 'GGIR/DESCRIPTION' ... OK
* checking extension type ... Package
* this is package 'GGIR' version '2.1-0'
* checking CRAN incoming feasibility ... NOTE
Maintainer: 'Vincent T van Hees <v.vanhees at accelting.com>'

New maintainer:
  Vincent T van Hees <v.vanhees at accelting.com>
Old maintainer(s):
  Vincent T van Hees <vincentvanhees at gmail.com>

Found the following (possibly) invalid URLs:
  URL: https://cran.r-project.org/web/packages/activityCounts/index.html
    From: inst/doc/ExternalFunction.html
    Status: 200
    Message: OK
    CRAN URL not in canonical form
  URL: https://europepmc.org/article/med/22770768
    From: inst/doc/GGIR.html
    Status: Error
    Message: libcurl error code 35:
          error:14094410:SSL routines:ssl3_read_bytes:sslv3 alert
handshake failure
  The canonical URL of the CRAN page for a package is
    https://CRAN.R-project.org/package=pkgname
* checking package namespace information ... OK
* checking package dependencies ... OK
...

Make sure you have incoming checks enabled, by setting the environment
variable _R_CHECK_CRAN_INCOMING_=TRUE.

Best,
Josh

> On Wed, 26 Aug 2020 at 14:30, Bryan Hanson <hanson at depauw.edu> wrote:
>
> > At the minimum you should look at the ?moved to? URLs and change your
> > links to those (some are outright changes in URLs that were redirected and
> > some are http to https changes).
> >
> > Bryan
> >
> > > On Aug 26, 2020, at 8:22 AM, Vincent van Hees <vincentvanhees at gmail.com>
> > wrote:
> > >
> > > Hello,
> > > URL errors in my DESCRIPTION file and package vignette are not picked up
> > > when I do R CMD check --as-cran or devtools::check(). I only know about
> > > these errors because CRAN has rejected my package submission and
> > instructed
> > > me to fix the urls (example at end of this message).
> > >
> > > I am trying to figure out how I can get R CMD check --as-cran to detect
> > > these URL mistakes. From
> > > https://cran.r-project.org/web/packages/URL_checks.html I understand
> > that I
> > > need libcurl installed, which I have.
> > >
> > > Can anyone tell me whether I am using the wrong combination of libcurl
> > > version, R version, and Ubuntu version? (see versions below). If not,
> > what
> > > else can I do to get the URL checks to work?
> > >
> > > Thanks, Vincent
> > >
> > > vincent at vincent-VB:~$ curl-config --version
> > > *libcurl 7.58.0*
> > >
> > > vincent at vincent-VB:~$ curl -V
> > > *curl 7.58.0* (x86_64-pc-linux-gnu) libcurl/7.58.0 OpenSSL/1.1.1
> > > zlib/1.2.11 libidn2/2.0.4 libpsl/0.19.1 (+libidn2/2.0.4) nghttp2/1.30.0
> > > librtmp/2.3
> > > Release-Date: 2018-01-24
> > > Protocols: dict file ftp ftps gopher http https imap imaps ldap ldaps
> > pop3
> > > pop3s rtmp rtsp smb smbs smtp smtps telnet tftp
> > > Features: AsynchDNS IDN IPv6 Largefile GSS-API Kerberos SPNEGO NTLM
> > NTLM_WB
> > > SSL libz TLS-SRP HTTP2 UnixSockets HTTPS-proxy PSL
> > >
> > > vincent at vincent-VB:~$ R --version
> > > *R version 4.0.2* (2020-06-22) -- "Taking Off Again"
> > > Copyright (C) 2020 The R Foundation for Statistical Computing
> > > Platform: x86_64-pc-linux-gnu (64-bit)
> > >
> > > R is free software and comes with ABSOLUTELY NO WARRANTY.
> > > You are welcome to redistribute it under the terms of the
> > > GNU General Public License versions 2 or 3.
> > > For more information about these matters see
> > > https://www.gnu.org/licenses/.
> > >
> > > vincent at vincent-VB:~$ lsb_release -a
> > > No LSB modules are available.
> > > Distributor ID: Ubuntu
> > > Description: *Ubuntu 18.04.5 LTS*
> > > Release: 18.04
> > > Codename: bionic
> > >
> > > Example of most recent URL mistakes in my package detected by CRAN
> > package
> > > submission process which I could not detect locally:
> > > Found the following (possibly) invalid URLs: URL:
> > > http://journals.plos.org/plosone/article?id=10.1371/journal.pone.0142533
> > > (moved to
> > >
> > https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0142533)
> > > From: inst/CITATION Status: 200 Message: OK URL: https://geneactiv.org/
> > > (moved to https://www.activinsights.com/) From: inst/doc/GGIR.html
> > Status:
> > > 200 Message: OK URL: https://www.accelting.com/ (moved to
> > > https://accelting.com/) From: inst/doc/GGIR.html Status: 200 Message: OK
> > > URL: https://www.physiology.org/doi/10.1152/japplphysiol.00421.2014
> > (moved
> > > to https://journals.physiology.org/doi/10.1152/japplphysiol.00421.2014)
> > > From: inst/CITATION Status: 200 Message: OK
> > >
> > >       [[alternative HTML version deleted]]
> > >
> > > ______________________________________________
> > > R-package-devel at r-project.org mailing list
> > > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
> >
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel



-- 
Joshua Ulrich  |  about.me/joshuaulrich
FOSS Trading  |  www.fosstrading.com


From edd @end|ng |rom deb|@n@org  Wed Aug 26 14:54:02 2020
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Wed, 26 Aug 2020 07:54:02 -0500
Subject: [R-pkg-devel] url checks not working for me
In-Reply-To: <CALnEB17A00q5DqNyww3JeOT-jdq=qTudQP0oxC-tNjtw7AN8mw@mail.gmail.com>
References: <CALnEB14VV2weCWkLNpw3SGK3uO-QYzMSJjDM0gNj3M5HCmrr7g@mail.gmail.com>
 <131AA116-1C8F-46EF-AA4E-57C6B1A7EA46@depauw.edu>
 <CALnEB17A00q5DqNyww3JeOT-jdq=qTudQP0oxC-tNjtw7AN8mw@mail.gmail.com>
Message-ID: <24390.23402.259981.582643@rob.eddelbuettel.com>


On 26 August 2020 at 14:34, Vincent van Hees wrote:
| Addressing the errors is not the problem. I want to be able to detect these
| problems when I do: R CMD check --as-cran.

You cannot :-/. I pointed that out to CRAN maintainers a few times myself.

| At the moment, I can only detect the errors by submitting the package to
| CRAN, because only their package check triggers these errors.

Apparently we are supposed to find that in the generated ${package}.Rcheck
directory even when no warning was issued. Supposedly one has to live in
Auckland, Dortmund, Oxford or Vienna to find that normal.

Dirk

-- 
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From h@n@on @end|ng |rom dep@uw@edu  Wed Aug 26 14:54:08 2020
From: h@n@on @end|ng |rom dep@uw@edu (Bryan Hanson)
Date: Wed, 26 Aug 2020 08:54:08 -0400
Subject: [R-pkg-devel] url checks not working for me
In-Reply-To: <CALnEB17A00q5DqNyww3JeOT-jdq=qTudQP0oxC-tNjtw7AN8mw@mail.gmail.com>
References: <CALnEB14VV2weCWkLNpw3SGK3uO-QYzMSJjDM0gNj3M5HCmrr7g@mail.gmail.com>
 <131AA116-1C8F-46EF-AA4E-57C6B1A7EA46@depauw.edu>
 <CALnEB17A00q5DqNyww3JeOT-jdq=qTudQP0oxC-tNjtw7AN8mw@mail.gmail.com>
Message-ID: <8B76DA31-8947-4C21-A3ED-FF2298A5B5C8@depauw.edu>

Sorry, I was reading too fast.  One possibility is your R version is wee bit old.  Try a more recently daily build.

I recently saw such errors when submitting to Win-Builder, but was fine locally (per your situation).

Bryan

> On Aug 26, 2020, at 8:34 AM, Vincent van Hees <vincentvanhees at gmail.com> wrote:
> 
> Addressing the errors is not the problem. I want to be able to detect these problems when I do: R CMD check --as-cran.
> At the moment, I can only detect the errors by submitting the package to CRAN, because only their package check triggers these errors.
> 
> On Wed, 26 Aug 2020 at 14:30, Bryan Hanson <hanson at depauw.edu <mailto:hanson at depauw.edu>> wrote:
> At the minimum you should look at the ?moved to? URLs and change your links to those (some are outright changes in URLs that were redirected and some are http to https changes).
> 
> Bryan
> 
> > On Aug 26, 2020, at 8:22 AM, Vincent van Hees <vincentvanhees at gmail.com <mailto:vincentvanhees at gmail.com>> wrote:
> > 
> > Hello,
> > URL errors in my DESCRIPTION file and package vignette are not picked up
> > when I do R CMD check --as-cran or devtools::check(). I only know about
> > these errors because CRAN has rejected my package submission and instructed
> > me to fix the urls (example at end of this message).
> > 
> > I am trying to figure out how I can get R CMD check --as-cran to detect
> > these URL mistakes. From
> > https://cran.r-project.org/web/packages/URL_checks.html <https://cran.r-project.org/web/packages/URL_checks.html> I understand that I
> > need libcurl installed, which I have.
> > 
> > Can anyone tell me whether I am using the wrong combination of libcurl
> > version, R version, and Ubuntu version? (see versions below). If not, what
> > else can I do to get the URL checks to work?
> > 
> > Thanks, Vincent
> > 
> > vincent at vincent-VB:~$ curl-config --version
> > *libcurl 7.58.0*
> > 
> > vincent at vincent-VB:~$ curl -V
> > *curl 7.58.0* (x86_64-pc-linux-gnu) libcurl/7.58.0 OpenSSL/1.1.1
> > zlib/1.2.11 libidn2/2.0.4 libpsl/0.19.1 (+libidn2/2.0.4) nghttp2/1.30.0
> > librtmp/2.3
> > Release-Date: 2018-01-24
> > Protocols: dict file ftp ftps gopher http https imap imaps ldap ldaps pop3
> > pop3s rtmp rtsp smb smbs smtp smtps telnet tftp
> > Features: AsynchDNS IDN IPv6 Largefile GSS-API Kerberos SPNEGO NTLM NTLM_WB
> > SSL libz TLS-SRP HTTP2 UnixSockets HTTPS-proxy PSL
> > 
> > vincent at vincent-VB:~$ R --version
> > *R version 4.0.2* (2020-06-22) -- "Taking Off Again"
> > Copyright (C) 2020 The R Foundation for Statistical Computing
> > Platform: x86_64-pc-linux-gnu (64-bit)
> > 
> > R is free software and comes with ABSOLUTELY NO WARRANTY.
> > You are welcome to redistribute it under the terms of the
> > GNU General Public License versions 2 or 3.
> > For more information about these matters see
> > https://www.gnu.org/licenses/ <https://www.gnu.org/licenses/>.
> > 
> > vincent at vincent-VB:~$ lsb_release -a
> > No LSB modules are available.
> > Distributor ID: Ubuntu
> > Description: *Ubuntu 18.04.5 LTS*
> > Release: 18.04
> > Codename: bionic
> > 
> > Example of most recent URL mistakes in my package detected by CRAN package
> > submission process which I could not detect locally:
> > Found the following (possibly) invalid URLs: URL:
> > http://journals.plos.org/plosone/article?id=10.1371/journal.pone.0142533 <http://journals.plos.org/plosone/article?id=10.1371/journal.pone.0142533>
> > (moved to
> > https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0142533 <https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0142533>)
> > From: inst/CITATION Status: 200 Message: OK URL: https://geneactiv.org/ <https://geneactiv.org/>
> > (moved to https://www.activinsights.com/ <https://www.activinsights.com/>) From: inst/doc/GGIR.html Status:
> > 200 Message: OK URL: https://www.accelting.com/ <https://www.accelting.com/> (moved to
> > https://accelting.com/ <https://accelting.com/>) From: inst/doc/GGIR.html Status: 200 Message: OK
> > URL: https://www.physiology.org/doi/10.1152/japplphysiol.00421.2014 <https://www.physiology.org/doi/10.1152/japplphysiol.00421.2014> (moved
> > to https://journals.physiology.org/doi/10.1152/japplphysiol.00421.2014 <https://journals.physiology.org/doi/10.1152/japplphysiol.00421.2014>)
> > From: inst/CITATION Status: 200 Message: OK
> > 
> >       [[alternative HTML version deleted]]
> > 
> > ______________________________________________
> > R-package-devel at r-project.org <mailto:R-package-devel at r-project.org> mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
> 


	[[alternative HTML version deleted]]


From n|cho|@@@t|erney @end|ng |rom gm@||@com  Wed Aug 26 14:57:15 2020
From: n|cho|@@@t|erney @end|ng |rom gm@||@com (Nicholas Tierney)
Date: Wed, 26 Aug 2020 22:57:15 +1000
Subject: [R-pkg-devel] Error in winbuilder
In-Reply-To: <8d6a04f7-10af-d7fe-ad67-4af5dae45155@dewey.myzen.co.uk>
References: <CACrL82WYooy2hM5KAfkUfoYJ721bQWN0OPgOG94ZocgHLdsg7g@mail.gmail.com>
 <8d6a04f7-10af-d7fe-ad67-4af5dae45155@dewey.myzen.co.uk>
Message-ID: <CACrL82UNLSyo9sfr4gc1SOv97UZ1663sJ9eDmqzgJqpK+9OY4Q@mail.gmail.com>

Hi Michael,

I do indeed have quite a few examples in the package, this hasn't been a
problem in the past, but I guess I could try reducing them down. Have you
had this problem before?

Cheers,

Nick

On Wed, 26 Aug 2020 at 22:49, Michael Dewey <lists at dewey.myzen.co.uk> wrote:

> Dear Nicholas
>
> Do you in fact have many examples in the package? Perhaps for some
> mysterious reason they take longer there than when you check at home.
>
> Michael
>
> On 25/08/2020 14:54, Nicholas Tierney wrote:
> > Hi Everyone,
> >
> > I have an error when submitting to Winbuilder for my R package, naniar
> > <https://github.com/njtierney/naniar>.
> >
> > When using `devtools::check_win_devel()` or
> `devtools::check_win_release()`
> > on naniar, I get the following logfile from winbuilder:
> >
> > ```
> > * using log directory 'd:/RCompile/CRANguest/R-release/naniar.Rcheck'
> > * using R version 4.0.2 (2020-06-22)
> > * using platform: x86_64-w64-mingw32 (64-bit)
> > * using session charset: ISO8859-1
> > * checking for file 'naniar/DESCRIPTION' ... OK
> > * checking extension type ... Package
> > * this is package 'naniar' version '0.5.3'
> > * package encoding: UTF-8
> > * checking CRAN incoming feasibility ... ERROR
> > Check process probably crashed or hung up for 20 minutes ... killed
> > Most likely this happened in the example checks (?),
> > if not, ignore the following last lines of example output:
> >
> > ======== End of example output (where/before crash/hang up occured ?)
> > ========
> > ```
> >
> > (submission URL here: https://win-builder.r-project.org/77PYyM2kMri1/)
> >
> > I had previously thought this was a problem to do with CRAN being closed
> > last week, but apparently this is not the case, and it should have been
> > working. I cannot find any details on CRAN for this, but it passes build
> on
> > R HUB for windows, and it passes build with no warnings, errors, or notes
> > for me on Mac OSX, as well as on github actions (windows, macOS, and
> > ubuntu).
> >
> > Just wondering if anyone has thoughts on this? I have also cross
> > posted on Rstudio
> > community
> > <
> >
> https://community.rstudio.com/t/winbuilder-error-check-process-probably-crashed-or-hung-up-for-20-minutes-killed/77492
> >> ,
> > in case that is of interest.
> >
> > Thanks for your time, and apologies if I have missed something obvious.
> >
> > All the best,
> >
> > Nick
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
>
> --
> Michael
> http://www.dewey.myzen.co.uk/home.html
>

	[[alternative HTML version deleted]]


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Wed Aug 26 15:06:31 2020
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Wed, 26 Aug 2020 15:06:31 +0200
Subject: [R-pkg-devel] Error in winbuilder
In-Reply-To: <CACrL82UNLSyo9sfr4gc1SOv97UZ1663sJ9eDmqzgJqpK+9OY4Q@mail.gmail.com>
References: <CACrL82WYooy2hM5KAfkUfoYJ721bQWN0OPgOG94ZocgHLdsg7g@mail.gmail.com>
 <8d6a04f7-10af-d7fe-ad67-4af5dae45155@dewey.myzen.co.uk>
 <CACrL82UNLSyo9sfr4gc1SOv97UZ1663sJ9eDmqzgJqpK+9OY4Q@mail.gmail.com>
Message-ID: <7a2ba563-d2eb-91e5-9bbf-6d512e6e36f2@statistik.tu-dortmund.de>

Friends, thias looks like a hang in the CRAN incoming feasibility 
checks, hence may well be some web related issue as it seems it ran into 
the timeout there.

Best,
Uwe Ligges

On 26.08.2020 14:57, Nicholas Tierney wrote:
> Hi Michael,
> 
> I do indeed have quite a few examples in the package, this hasn't been a
> problem in the past, but I guess I could try reducing them down. Have you
> had this problem before?
> 
> Cheers,
> 
> Nick
> 
> On Wed, 26 Aug 2020 at 22:49, Michael Dewey <lists at dewey.myzen.co.uk> wrote:
> 
>> Dear Nicholas
>>
>> Do you in fact have many examples in the package? Perhaps for some
>> mysterious reason they take longer there than when you check at home.
>>
>> Michael
>>
>> On 25/08/2020 14:54, Nicholas Tierney wrote:
>>> Hi Everyone,
>>>
>>> I have an error when submitting to Winbuilder for my R package, naniar
>>> <https://github.com/njtierney/naniar>.
>>>
>>> When using `devtools::check_win_devel()` or
>> `devtools::check_win_release()`
>>> on naniar, I get the following logfile from winbuilder:
>>>
>>> ```
>>> * using log directory 'd:/RCompile/CRANguest/R-release/naniar.Rcheck'
>>> * using R version 4.0.2 (2020-06-22)
>>> * using platform: x86_64-w64-mingw32 (64-bit)
>>> * using session charset: ISO8859-1
>>> * checking for file 'naniar/DESCRIPTION' ... OK
>>> * checking extension type ... Package
>>> * this is package 'naniar' version '0.5.3'
>>> * package encoding: UTF-8
>>> * checking CRAN incoming feasibility ... ERROR
>>> Check process probably crashed or hung up for 20 minutes ... killed
>>> Most likely this happened in the example checks (?),
>>> if not, ignore the following last lines of example output:
>>>
>>> ======== End of example output (where/before crash/hang up occured ?)
>>> ========
>>> ```
>>>
>>> (submission URL here: https://win-builder.r-project.org/77PYyM2kMri1/)
>>>
>>> I had previously thought this was a problem to do with CRAN being closed
>>> last week, but apparently this is not the case, and it should have been
>>> working. I cannot find any details on CRAN for this, but it passes build
>> on
>>> R HUB for windows, and it passes build with no warnings, errors, or notes
>>> for me on Mac OSX, as well as on github actions (windows, macOS, and
>>> ubuntu).
>>>
>>> Just wondering if anyone has thoughts on this? I have also cross
>>> posted on Rstudio
>>> community
>>> <
>>>
>> https://community.rstudio.com/t/winbuilder-error-check-process-probably-crashed-or-hung-up-for-20-minutes-killed/77492
>>>> ,
>>> in case that is of interest.
>>>
>>> Thanks for your time, and apologies if I have missed something obvious.
>>>
>>> All the best,
>>>
>>> Nick
>>>
>>>        [[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>>
>> --
>> Michael
>> http://www.dewey.myzen.co.uk/home.html
>>
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From n|cho|@@@t|erney @end|ng |rom gm@||@com  Wed Aug 26 15:13:11 2020
From: n|cho|@@@t|erney @end|ng |rom gm@||@com (Nicholas Tierney)
Date: Wed, 26 Aug 2020 23:13:11 +1000
Subject: [R-pkg-devel] Error in winbuilder
In-Reply-To: <7a2ba563-d2eb-91e5-9bbf-6d512e6e36f2@statistik.tu-dortmund.de>
References: <CACrL82WYooy2hM5KAfkUfoYJ721bQWN0OPgOG94ZocgHLdsg7g@mail.gmail.com>
 <8d6a04f7-10af-d7fe-ad67-4af5dae45155@dewey.myzen.co.uk>
 <CACrL82UNLSyo9sfr4gc1SOv97UZ1663sJ9eDmqzgJqpK+9OY4Q@mail.gmail.com>
 <7a2ba563-d2eb-91e5-9bbf-6d512e6e36f2@statistik.tu-dortmund.de>
Message-ID: <CACrL82ULG4X94QLmD4C5yQ6RnMqNUsTzm5qmVFJTi+K_7q5mNw@mail.gmail.com>

Hi Uwe,

OK thank you for that, good to know! I imagine it might be a bit tricky to
know when, but do you have an idea of when submissions might return to
normal? Or should I be good to submit again soon?

Thanks again,

Nick

On Wed, 26 Aug 2020 at 23:06, Uwe Ligges <ligges at statistik.tu-dortmund.de>
wrote:

> Friends, thias looks like a hang in the CRAN incoming feasibility
> checks, hence may well be some web related issue as it seems it ran into
> the timeout there.
>
> Best,
> Uwe Ligges
>
> On 26.08.2020 14:57, Nicholas Tierney wrote:
> > Hi Michael,
> >
> > I do indeed have quite a few examples in the package, this hasn't been a
> > problem in the past, but I guess I could try reducing them down. Have you
> > had this problem before?
> >
> > Cheers,
> >
> > Nick
> >
> > On Wed, 26 Aug 2020 at 22:49, Michael Dewey <lists at dewey.myzen.co.uk>
> wrote:
> >
> >> Dear Nicholas
> >>
> >> Do you in fact have many examples in the package? Perhaps for some
> >> mysterious reason they take longer there than when you check at home.
> >>
> >> Michael
> >>
> >> On 25/08/2020 14:54, Nicholas Tierney wrote:
> >>> Hi Everyone,
> >>>
> >>> I have an error when submitting to Winbuilder for my R package, naniar
> >>> <https://github.com/njtierney/naniar>.
> >>>
> >>> When using `devtools::check_win_devel()` or
> >> `devtools::check_win_release()`
> >>> on naniar, I get the following logfile from winbuilder:
> >>>
> >>> ```
> >>> * using log directory 'd:/RCompile/CRANguest/R-release/naniar.Rcheck'
> >>> * using R version 4.0.2 (2020-06-22)
> >>> * using platform: x86_64-w64-mingw32 (64-bit)
> >>> * using session charset: ISO8859-1
> >>> * checking for file 'naniar/DESCRIPTION' ... OK
> >>> * checking extension type ... Package
> >>> * this is package 'naniar' version '0.5.3'
> >>> * package encoding: UTF-8
> >>> * checking CRAN incoming feasibility ... ERROR
> >>> Check process probably crashed or hung up for 20 minutes ... killed
> >>> Most likely this happened in the example checks (?),
> >>> if not, ignore the following last lines of example output:
> >>>
> >>> ======== End of example output (where/before crash/hang up occured ?)
> >>> ========
> >>> ```
> >>>
> >>> (submission URL here: https://win-builder.r-project.org/77PYyM2kMri1/)
> >>>
> >>> I had previously thought this was a problem to do with CRAN being
> closed
> >>> last week, but apparently this is not the case, and it should have been
> >>> working. I cannot find any details on CRAN for this, but it passes
> build
> >> on
> >>> R HUB for windows, and it passes build with no warnings, errors, or
> notes
> >>> for me on Mac OSX, as well as on github actions (windows, macOS, and
> >>> ubuntu).
> >>>
> >>> Just wondering if anyone has thoughts on this? I have also cross
> >>> posted on Rstudio
> >>> community
> >>> <
> >>>
> >>
> https://community.rstudio.com/t/winbuilder-error-check-process-probably-crashed-or-hung-up-for-20-minutes-killed/77492
> >>>> ,
> >>> in case that is of interest.
> >>>
> >>> Thanks for your time, and apologies if I have missed something obvious.
> >>>
> >>> All the best,
> >>>
> >>> Nick
> >>>
> >>>        [[alternative HTML version deleted]]
> >>>
> >>> ______________________________________________
> >>> R-package-devel at r-project.org mailing list
> >>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>>
> >>
> >> --
> >> Michael
> >> http://www.dewey.myzen.co.uk/home.html
> >>
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
>

	[[alternative HTML version deleted]]


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Wed Aug 26 15:18:26 2020
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Wed, 26 Aug 2020 15:18:26 +0200
Subject: [R-pkg-devel] Error in winbuilder
In-Reply-To: <CACrL82ULG4X94QLmD4C5yQ6RnMqNUsTzm5qmVFJTi+K_7q5mNw@mail.gmail.com>
References: <CACrL82WYooy2hM5KAfkUfoYJ721bQWN0OPgOG94ZocgHLdsg7g@mail.gmail.com>
 <8d6a04f7-10af-d7fe-ad67-4af5dae45155@dewey.myzen.co.uk>
 <CACrL82UNLSyo9sfr4gc1SOv97UZ1663sJ9eDmqzgJqpK+9OY4Q@mail.gmail.com>
 <7a2ba563-d2eb-91e5-9bbf-6d512e6e36f2@statistik.tu-dortmund.de>
 <CACrL82ULG4X94QLmD4C5yQ6RnMqNUsTzm5qmVFJTi+K_7q5mNw@mail.gmail.com>
Message-ID: <4b24e7f5-8345-2740-7b88-1c9949d4133d@statistik.tu-dortmund.de>

Pls try agaibn, if it fails again, pls let me know privately.

Best,
Uwe Ligges



On 26.08.2020 15:13, Nicholas Tierney wrote:
> Hi Uwe,
> 
> OK thank you for that, good to know! I imagine it might be a bit tricky 
> to know when, but do you have an idea of when submissions might return 
> to normal? Or should I be good to submit again soon?
> 
> Thanks again,
> 
> Nick
> 
> On Wed, 26 Aug 2020 at 23:06, Uwe Ligges 
> <ligges at statistik.tu-dortmund.de 
> <mailto:ligges at statistik.tu-dortmund.de>> wrote:
> 
>     Friends, thias looks like a hang in the CRAN incoming feasibility
>     checks, hence may well be some web related issue as it seems it ran
>     into
>     the timeout there.
> 
>     Best,
>     Uwe Ligges
> 
>     On 26.08.2020 14:57, Nicholas Tierney wrote:
>      > Hi Michael,
>      >
>      > I do indeed have quite a few examples in the package, this hasn't
>     been a
>      > problem in the past, but I guess I could try reducing them down.
>     Have you
>      > had this problem before?
>      >
>      > Cheers,
>      >
>      > Nick
>      >
>      > On Wed, 26 Aug 2020 at 22:49, Michael Dewey
>     <lists at dewey.myzen.co.uk <mailto:lists at dewey.myzen.co.uk>> wrote:
>      >
>      >> Dear Nicholas
>      >>
>      >> Do you in fact have many examples in the package? Perhaps for some
>      >> mysterious reason they take longer there than when you check at
>     home.
>      >>
>      >> Michael
>      >>
>      >> On 25/08/2020 14:54, Nicholas Tierney wrote:
>      >>> Hi Everyone,
>      >>>
>      >>> I have an error when submitting to Winbuilder for my R package,
>     naniar
>      >>> <https://github.com/njtierney/naniar>.
>      >>>
>      >>> When using `devtools::check_win_devel()` or
>      >> `devtools::check_win_release()`
>      >>> on naniar, I get the following logfile from winbuilder:
>      >>>
>      >>> ```
>      >>> * using log directory
>     'd:/RCompile/CRANguest/R-release/naniar.Rcheck'
>      >>> * using R version 4.0.2 (2020-06-22)
>      >>> * using platform: x86_64-w64-mingw32 (64-bit)
>      >>> * using session charset: ISO8859-1
>      >>> * checking for file 'naniar/DESCRIPTION' ... OK
>      >>> * checking extension type ... Package
>      >>> * this is package 'naniar' version '0.5.3'
>      >>> * package encoding: UTF-8
>      >>> * checking CRAN incoming feasibility ... ERROR
>      >>> Check process probably crashed or hung up for 20 minutes ... killed
>      >>> Most likely this happened in the example checks (?),
>      >>> if not, ignore the following last lines of example output:
>      >>>
>      >>> ======== End of example output (where/before crash/hang up
>     occured ?)
>      >>> ========
>      >>> ```
>      >>>
>      >>> (submission URL here:
>     https://win-builder.r-project.org/77PYyM2kMri1/)
>      >>>
>      >>> I had previously thought this was a problem to do with CRAN
>     being closed
>      >>> last week, but apparently this is not the case, and it should
>     have been
>      >>> working. I cannot find any details on CRAN for this, but it
>     passes build
>      >> on
>      >>> R HUB for windows, and it passes build with no warnings,
>     errors, or notes
>      >>> for me on Mac OSX, as well as on github actions (windows,
>     macOS, and
>      >>> ubuntu).
>      >>>
>      >>> Just wondering if anyone has thoughts on this? I have also cross
>      >>> posted on Rstudio
>      >>> community
>      >>> <
>      >>>
>      >>
>     https://community.rstudio.com/t/winbuilder-error-check-process-probably-crashed-or-hung-up-for-20-minutes-killed/77492
>      >>>> ,
>      >>> in case that is of interest.
>      >>>
>      >>> Thanks for your time, and apologies if I have missed something
>     obvious.
>      >>>
>      >>> All the best,
>      >>>
>      >>> Nick
>      >>>
>      >>>? ? ? ? [[alternative HTML version deleted]]
>      >>>
>      >>> ______________________________________________
>      >>> R-package-devel at r-project.org
>     <mailto:R-package-devel at r-project.org> mailing list
>      >>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>      >>>
>      >>
>      >> --
>      >> Michael
>      >> http://www.dewey.myzen.co.uk/home.html
>      >>
>      >
>      >? ? ? ?[[alternative HTML version deleted]]
>      >
>      > ______________________________________________
>      > R-package-devel at r-project.org
>     <mailto:R-package-devel at r-project.org> mailing list
>      > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>      >
>


From edd @end|ng |rom deb|@n@org  Wed Aug 26 15:46:40 2020
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Wed, 26 Aug 2020 08:46:40 -0500
Subject: [R-pkg-devel] url checks not working for me
In-Reply-To: <8B76DA31-8947-4C21-A3ED-FF2298A5B5C8@depauw.edu>
References: <CALnEB14VV2weCWkLNpw3SGK3uO-QYzMSJjDM0gNj3M5HCmrr7g@mail.gmail.com>
 <131AA116-1C8F-46EF-AA4E-57C6B1A7EA46@depauw.edu>
 <CALnEB17A00q5DqNyww3JeOT-jdq=qTudQP0oxC-tNjtw7AN8mw@mail.gmail.com>
 <8B76DA31-8947-4C21-A3ED-FF2298A5B5C8@depauw.edu>
Message-ID: <24390.26560.80611.90596@rob.eddelbuettel.com>


Ok, Uwe was kind enough to take me to task off-list and I can now confirm
that I _can_ replicate the URL issue locally by ensuring all three of

 - recent enough r-devel build (that was true, I may add that the
   rocker/r-devel and rocker/drd containers I look after can help)

 - built with libcurl support so check capabilities()[["libcurl"]] (that was
   also true for me)

 - CRAN incoming checks turned on (and that was my issue)

One way to ensure the last point is to have a file

  ~/.R/check.Renviron-Rdevel

which I had (but where I had commented out 'incoming' as it can take a
moment).  Current values below, with thanks to Uwe for the reminder.

I reiterate that this really should be part of R CMD check --as-cran.  Maybe
one day it will be.

Dirk

-- 
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From edd @end|ng |rom deb|@n@org  Wed Aug 26 16:13:09 2020
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Wed, 26 Aug 2020 09:13:09 -0500
Subject: [R-pkg-devel] url checks not working for me
In-Reply-To: <24390.26560.80611.90596@rob.eddelbuettel.com>
References: <CALnEB14VV2weCWkLNpw3SGK3uO-QYzMSJjDM0gNj3M5HCmrr7g@mail.gmail.com>
 <131AA116-1C8F-46EF-AA4E-57C6B1A7EA46@depauw.edu>
 <CALnEB17A00q5DqNyww3JeOT-jdq=qTudQP0oxC-tNjtw7AN8mw@mail.gmail.com>
 <8B76DA31-8947-4C21-A3ED-FF2298A5B5C8@depauw.edu>
 <24390.26560.80611.90596@rob.eddelbuettel.com>
Message-ID: <24390.28149.535846.167266@rob.eddelbuettel.com>


On 26 August 2020 at 08:46, Dirk Eddelbuettel wrote:
| One way to ensure the last point is to have a file
| 
|   ~/.R/check.Renviron-Rdevel
| 
| which I had (but where I had commented out 'incoming' as it can take a
| moment).  Current values below, with thanks to Uwe for the reminder.

And I forgot to add them.  This time.  One of the values is local to my
R-devel build.  I am sure Henrik will follow-up soon with an extended list :)

| I reiterate that this really should be part of R CMD check --as-cran.  Maybe
| one day it will be.


edd at rob:~$ cat ~/.R/check.Renviron-Rdevel 
# See R Internals manual -- there is now --as-cran too
_R_CHECK_CRAN_INCOMING_=FALSE
_R_CHECK_FORCE_SUGGESTS_=FALSE
_R_CHECK_VC_DIRS_=TRUE
_R_CHECK_UNSAFE_CALLS_=TRUE
_R_CHECK_TIMINGS_=10
_R_CHECK_INSTALL_DEPENDS_=TRUE
_R_CHECK_SUGGESTS_ONLY_=TRUE
_R_CHECK_NO_RECOMMENDED_=TRUE
_R_CHECK_SUBDIRS_NOCASE_=TRUE
_R_CHECK_EXECUTABLES_EXCLUSIONS_=FALSE
_R_CHECK_LICENSE_=TRUE
_R_CHECK_DOC_SIZES2_=TRUE
_R_CHECK_CODETOOLS_PROFILE_='suppressPartialMatchArgs=false'
#
_R_CHECK_VIGNETTES_NLINES_=50
_R_CHECK_DOT_INTERNAL_=TRUE
#
# edd Apr 2015
_R_CHECK_CRAN_INCOMING_USE_ASPELL_=TRUE

# edd Jan 2018  for RD 
R_LIBS="/usr/local/lib/R-devel/site-library"

# edd Aug 2020
_R_CHECK_CRAN_INCOMING_=TRUE
edd at rob:~$


Dirk

-- 
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Thu Aug 27 14:16:42 2020
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Thu, 27 Aug 2020 14:16:42 +0200
Subject: [R-pkg-devel] 
 =?utf-8?q?Package_inputenc_Error=3A_Unicode_char_?=
 =?utf-8?q?=E2=80=90_=28U+2010=29_during_Windows_build?=
In-Reply-To: <CAKw8BGJguhq20+UT-1+y0gCW5XPhCL2LOe-hAU5FbSULoghpWg@mail.gmail.com>
References: <CAKw8BGJguhq20+UT-1+y0gCW5XPhCL2LOe-hAU5FbSULoghpWg@mail.gmail.com>
Message-ID: <3f4ecdd2-598a-a7b2-930a-7d6b991681d3@statistik.tu-dortmund.de>

Hyphens that, e.g., get auto generated in MS Word are non ASCII. You 
have to declare an appropriate encoding, or even better, replace by 
regular hypehsn.

See functions

tools:::showNonASCII     tools:::showNonASCIIfile

that may help to see where these are...

Best,
Uwe Ligges

On 25.08.2020 20:39, Joshua Harrison wrote:
> Hi all,
> 
> I cannot get my package to correctly build on Windows because of an
> encoding error that I just can't figure out. The package builds on my Mac
> (10.14.6) and on a recent Debian release.
> 
> The source code for the package can be viewed here:
> https://github.com/JHarrisonEcoEvo/CNVRG
> 
> The error code thrown by the "check_win_release" function of devtools is:
> 
> * checking PDF version of manual ... WARNING
> LaTeX errors when creating PDF version.
> This typically indicates Rd problems.
> LaTeX errors found:
> ! Package inputenc Error: Unicode char ? (U+2010)
> (inputenc)                not set up for use with LaTeX.
> 
> See the inputenc package documentation for explanation.
> Type  H <return>  for immediate help.
> ! Package inputenc Error: Unicode char ? (U+2010)
> (inputenc)                not set up for use with LaTeX.
> 
> See the inputenc package documentation for explanation.
> Type  H <return>  for immediate help.
> * checking PDF version of manual without hyperrefs or index ... ERROR
> * checking for detritus in the temp directory ... OK
> * DONE
> Status: 1 ERROR, 1 WARNING, 1 NOTE
> 
> FYI the note referenced is because the package is a new submission.
> 
> I figured the problem was with hyphens (the unicode 2010) and so I went
> through the manual and vignette and deleted all the hyphens in the regular
> text. There are still hyphen symbols in the assignment operator of the
> examples ("<-"). Are these the problem?
> 
> I have spent way too much time trying to figure this out so any help would
> be greatly appreciated. I see that many folks have similar issues with
> vignettes and manuals but I haven't found a solution that works for me.
> 
> I am completely fine not having the package build on Windows. Users of that
> system can download the manual or view it in a browser. However, I don't
> see how I can get the package on CRAN without fixing this.
> 
> Thanks for your time and assistance!
> 
> --
> J. G. Harrison
> Postdoctoral researcher
> University of Wyoming
> jgharrison.weebly.com
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From jo@hu@@gr@nt@h@rr|@on @end|ng |rom gm@||@com  Thu Aug 27 18:01:12 2020
From: jo@hu@@gr@nt@h@rr|@on @end|ng |rom gm@||@com (Joshua Harrison)
Date: Thu, 27 Aug 2020 10:01:12 -0600
Subject: [R-pkg-devel] 
	=?utf-8?q?Package_inputenc_Error=3A_Unicode_char_?=
	=?utf-8?q?=E2=80=90_=28U+2010=29_during_Windows_build?=
In-Reply-To: <3f4ecdd2-598a-a7b2-930a-7d6b991681d3@statistik.tu-dortmund.de>
References: <CAKw8BGJguhq20+UT-1+y0gCW5XPhCL2LOe-hAU5FbSULoghpWg@mail.gmail.com>
 <3f4ecdd2-598a-a7b2-930a-7d6b991681d3@statistik.tu-dortmund.de>
Message-ID: <CAKw8BGLn+oDLoW04uRJ7fsTOtRQmSoTojXD2wgzXsFOtpY-JEw@mail.gmail.com>

Hi Uwe,

Thanks for the response and for mentioning the 'tools::' functions. Those
functions were super helpful in identifying a hyphen that I missed in a
supporting file that roxygen used to build the manual.

My package builds without warnings and errors now on a few systems, so I
think I am good to go. Thanks again.

jh

On Thu, Aug 27, 2020 at 6:16 AM Uwe Ligges <ligges at statistik.tu-dortmund.de>
wrote:

> Hyphens that, e.g., get auto generated in MS Word are non ASCII. You
> have to declare an appropriate encoding, or even better, replace by
> regular hypehsn.
>
> See functions
>
> tools:::showNonASCII     tools:::showNonASCIIfile
>
> that may help to see where these are...
>
> Best,
> Uwe Ligges
>
> On 25.08.2020 20:39, Joshua Harrison wrote:
> > Hi all,
> >
> > I cannot get my package to correctly build on Windows because of an
> > encoding error that I just can't figure out. The package builds on my Mac
> > (10.14.6) and on a recent Debian release.
> >
> > The source code for the package can be viewed here:
> > https://github.com/JHarrisonEcoEvo/CNVRG
> >
> > The error code thrown by the "check_win_release" function of devtools is:
> >
> > * checking PDF version of manual ... WARNING
> > LaTeX errors when creating PDF version.
> > This typically indicates Rd problems.
> > LaTeX errors found:
> > ! Package inputenc Error: Unicode char ? (U+2010)
> > (inputenc)                not set up for use with LaTeX.
> >
> > See the inputenc package documentation for explanation.
> > Type  H <return>  for immediate help.
> > ! Package inputenc Error: Unicode char ? (U+2010)
> > (inputenc)                not set up for use with LaTeX.
> >
> > See the inputenc package documentation for explanation.
> > Type  H <return>  for immediate help.
> > * checking PDF version of manual without hyperrefs or index ... ERROR
> > * checking for detritus in the temp directory ... OK
> > * DONE
> > Status: 1 ERROR, 1 WARNING, 1 NOTE
> >
> > FYI the note referenced is because the package is a new submission.
> >
> > I figured the problem was with hyphens (the unicode 2010) and so I went
> > through the manual and vignette and deleted all the hyphens in the
> regular
> > text. There are still hyphen symbols in the assignment operator of the
> > examples ("<-"). Are these the problem?
> >
> > I have spent way too much time trying to figure this out so any help
> would
> > be greatly appreciated. I see that many folks have similar issues with
> > vignettes and manuals but I haven't found a solution that works for me.
> >
> > I am completely fine not having the package build on Windows. Users of
> that
> > system can download the manual or view it in a browser. However, I don't
> > see how I can get the package on CRAN without fixing this.
> >
> > Thanks for your time and assistance!
> >
> > --
> > J. G. Harrison
> > Postdoctoral researcher
> > University of Wyoming
> > jgharrison.weebly.com
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
>


-- 
J. G. Harrison
Postdoctoral researcher
University of Wyoming
jgharrison.weebly.com

	[[alternative HTML version deleted]]


From tr@cy @end|ng |rom ch@pm@n@edu  Thu Aug 27 18:45:05 2020
From: tr@cy @end|ng |rom ch@pm@n@edu (Tracy, Josef)
Date: Thu, 27 Aug 2020 16:45:05 +0000
Subject: [R-pkg-devel] changing maintainer email address
Message-ID: <BN8PR11MB3764BA377999AFE4DC898AD3A5550@BN8PR11MB3764.namprd11.prod.outlook.com>

Hi,

I submitted a package, "PhysActBedRest" to the CRAN a couple of years ago and am trying to update it.  In writing the update, I realized I forgot to update my email address when I changed institutions.  As a consequence, when I run CMD check on the updated package there is a NOTE that the maintainer has changed.  How to I get my update to pass the check and correct my email address?

Thanks,
Dustin

	[[alternative HTML version deleted]]


From j|ox @end|ng |rom mcm@@ter@c@  Thu Aug 27 19:23:36 2020
From: j|ox @end|ng |rom mcm@@ter@c@ (John Fox)
Date: Thu, 27 Aug 2020 13:23:36 -0400
Subject: [R-pkg-devel] R CMD check "unable to verify current time"
Message-ID: <b2489dda-5e8a-6b30-4152-0b0d16712a4b@mcmaster.ca>

Dear r-package-devel list members,

I got the following note when checking two different packages today 
--as-cran, both under R 4.0.2 and under R-devel, on my Windows 10 and 
macOS Catalina systems, and on several platforms on rhub:

	* checking for future file timestamps ... NOTE
unable to verify current time

I'm writing to inquire about the note because no one else has mentioned 
this problem recently, in case it's produced by something that I'm 
doing. There is a discussion of a similar problem from 2019 at 
<https://stat.ethz.ch/pipermail/r-package-devel/2019q1/003577.html>.

Both packages that I was checking are close to CRAN releases and so I'd 
like to know whether I can disregard the note.

Any help would be appreciated.

John

-- 
John Fox, Professor Emeritus
McMaster University
Hamilton, Ontario, Canada
web: https://socialsciences.mcmaster.ca/jfox/


From ||@t@ @end|ng |rom dewey@myzen@co@uk  Thu Aug 27 19:39:42 2020
From: ||@t@ @end|ng |rom dewey@myzen@co@uk (Michael Dewey)
Date: Thu, 27 Aug 2020 18:39:42 +0100
Subject: [R-pkg-devel] changing maintainer email address
In-Reply-To: <BN8PR11MB3764BA377999AFE4DC898AD3A5550@BN8PR11MB3764.namprd11.prod.outlook.com>
References: <BN8PR11MB3764BA377999AFE4DC898AD3A5550@BN8PR11MB3764.namprd11.prod.outlook.com>
Message-ID: <043db71c-a9a0-8028-4171-047b6059d47a@dewey.myzen.co.uk>

Dear Josef

 From the policy

Explain any change in the maintainer?s email address and if possible 
send confirmation from the previous address (by a separate email to 
CRAN-submissions at R-project.org) or explain why it is not possible.

Burned into my cortex since I did it incorrectly a few years back.

Michael

On 27/08/2020 17:45, Tracy, Josef wrote:
> Hi,
> 
> I submitted a package, "PhysActBedRest" to the CRAN a couple of years ago and am trying to update it.  In writing the update, I realized I forgot to update my email address when I changed institutions.  As a consequence, when I run CMD check on the updated package there is a NOTE that the maintainer has changed.  How to I get my update to pass the check and correct my email address?
> 
> Thanks,
> Dustin
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 

-- 
Michael
http://www.dewey.myzen.co.uk/home.html


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu Aug 27 20:17:17 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 27 Aug 2020 14:17:17 -0400
Subject: [R-pkg-devel] R CMD check "unable to verify current time"
In-Reply-To: <b2489dda-5e8a-6b30-4152-0b0d16712a4b@mcmaster.ca>
References: <b2489dda-5e8a-6b30-4152-0b0d16712a4b@mcmaster.ca>
Message-ID: <065d324f-641e-a52a-bb78-89c98e82e045@gmail.com>

R tries to get the time from

http://worldtimeapi.org/api/timezone/UTC or
http://worldclockapi.com/api/json/utc/now

The first one doesn't accept UTC as a timezone; it appears to want 
etc/UTC instead.  The second one is offline.

Duncan Murdoch

If both of those fail, you'll get the message you saw.

On 27/08/2020 1:23 p.m., John Fox wrote:
> Dear r-package-devel list members,
> 
> I got the following note when checking two different packages today
> --as-cran, both under R 4.0.2 and under R-devel, on my Windows 10 and
> macOS Catalina systems, and on several platforms on rhub:
> 
> 	* checking for future file timestamps ... NOTE
> unable to verify current time
> 
> I'm writing to inquire about the note because no one else has mentioned
> this problem recently, in case it's produced by something that I'm
> doing. There is a discussion of a similar problem from 2019 at
> <https://stat.ethz.ch/pipermail/r-package-devel/2019q1/003577.html>.
> 
> Both packages that I was checking are close to CRAN releases and so I'd
> like to know whether I can disregard the note.
> 
> Any help would be appreciated.
> 
> John
>


From j|ox @end|ng |rom mcm@@ter@c@  Thu Aug 27 20:39:03 2020
From: j|ox @end|ng |rom mcm@@ter@c@ (John Fox)
Date: Thu, 27 Aug 2020 14:39:03 -0400
Subject: [R-pkg-devel] R CMD check "unable to verify current time"
In-Reply-To: <065d324f-641e-a52a-bb78-89c98e82e045@gmail.com>
References: <b2489dda-5e8a-6b30-4152-0b0d16712a4b@mcmaster.ca>
 <065d324f-641e-a52a-bb78-89c98e82e045@gmail.com>
Message-ID: <ac3f6fa8-8dc4-78b1-65ed-6f970bf81a85@mcmaster.ca>

Dear Duncan,

Thank you and the others who responded to my message.

John

On 2020-08-27 2:17 p.m., Duncan Murdoch wrote:
> R tries to get the time from
> 
> http://worldtimeapi.org/api/timezone/UTC or
> http://worldclockapi.com/api/json/utc/now
> 
> The first one doesn't accept UTC as a timezone; it appears to want 
> etc/UTC instead.? The second one is offline.
> 
> Duncan Murdoch
> 
> If both of those fail, you'll get the message you saw.
> 
> On 27/08/2020 1:23 p.m., John Fox wrote:
>> Dear r-package-devel list members,
>>
>> I got the following note when checking two different packages today
>> --as-cran, both under R 4.0.2 and under R-devel, on my Windows 10 and
>> macOS Catalina systems, and on several platforms on rhub:
>>
>> ????* checking for future file timestamps ... NOTE
>> unable to verify current time
>>
>> I'm writing to inquire about the note because no one else has mentioned
>> this problem recently, in case it's produced by something that I'm
>> doing. There is a discussion of a similar problem from 2019 at
>> <https://stat.ethz.ch/pipermail/r-package-devel/2019q1/003577.html>.
>>
>> Both packages that I was checking are close to CRAN releases and so I'd
>> like to know whether I can disregard the note.
>>
>> Any help would be appreciated.
>>
>> John
>>
>


From bbo|ker @end|ng |rom gm@||@com  Fri Aug 28 02:22:05 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Thu, 27 Aug 2020 20:22:05 -0400
Subject: [R-pkg-devel] 
 Checking for future file timestamps - warning with
 worldclockapi HTTP status 403 Site Disabled
In-Reply-To: <FCBE4919-D8E9-4171-813E-3DC7899F9A46@krugs.de>
References: <C1C13933-05A9-465B-AB76-8C0E637CC069@mailbox.org>
 <5422D390-AAC5-43B4-9EFE-01EE9A3DEB53@krugs.de>
 <4847AF76-FD39-4376-B943-FDB09D0EE539@rud.is>
 <2A749434-4EFA-4F92-B95C-4E1F9308C3AD@gmail.com>
 <8B1CCC41-567A-4FB3-A686-3E1EA37F3EB7@rud.is>
 <CABdHhvGK8oj9AyMZrheumJ7vshgUCF+PEbF8dfia-pv_8FxWHg@mail.gmail.com>
 <CABdHhvH+Zc_FZ1gAjOPgwyJ2eS-vgNSgAfamjYBaQdPTnLFXhw@mail.gmail.com>
 <CADVZz_rv0KQp-Hz5rLrNvKnfvCuuzH2R3Ly1mek20b3b2W4ubQ@mail.gmail.com>
 <CABtg=KkCqvw=yB+bsMUMX8mkp0BxGzUB=ufdFgjOE5-_aGf7Eg@mail.gmail.com>
 <FCBE4919-D8E9-4171-813E-3DC7899F9A46@krugs.de>
Message-ID: <e2d9177a-9435-88f2-07bd-df393d04f68e@gmail.com>

  It seems to have gotten worse at the moment (package checking on my 
local machine hangs at this step).  Sorry if this is cross-threading.

On 3/19/19 7:11 AM, Rainer M Krug wrote:
> Can anyone confirm if this has been fixed? I would like to remove the _R_CHECK_SYSTEM_CLOCK_=0 but would like to know in advance.
> 
> Thanks
> 
> Rainer
> 
> 
>> On 8 Mar 2019, at 10:03, G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:
>>
>> I think you can put this in appveyor.yml:
>>
>> environment:
>>    _R_CHECK_SYSTEM_CLOCK_: 0
>>
>> before the "build_script" section.
>>
>> Gabor
>>
>> On Fri, Mar 8, 2019 at 5:15 AM Marta Kara? <marta.karass at gmail.com> wrote:
>>>
>>> I have faced the same problem with using http://worldclockapi.com/. I dealt
>>> with Travis fail (because warnings are changed to errors) after setting
>>> environment variable _R_CHECK_SYSTEM_CLOCK_ to zero, as adviced above.
>>>
>>> How I deal with appveyor fail for the same reason? It may be seen in my
>>> built output here (link)
>>> <https://ci.appveyor.com/project/martakarass/adept/build/job/vq4ncvg6qbh526u4>.
>>> I googled but was unable to find the equivalent of
>>>
>>> env:
>>>   - _R_CHECK_SYSTEM_CLOCK_=0
>>>
>>>
>>> for appveyor. Would appreciate any hint a lot - thank you!
>>> Marta
>>>
>>> On Thu, Mar 7, 2019 at 2:53 PM Hadley Wickham <h.wickham at gmail.com> wrote:
>>>
>>>> As of ~7 hours ago, the warning is suppressed:
>>>>
>>>> https://github.com/wch/r-source/commit/31ee14c620eb1b939acd322f3b5617f998aab8e8
>>>>
>>>> (But the service still doesn't work)
>>>>
>>>> Hadley
>>>>
>>>> On Thu, Mar 7, 2019 at 11:03 AM Hadley Wickham <h.wickham at gmail.com>
>>>> wrote:
>>>>>
>>>>> It appears that the code was added by BDR on 2 Sep 2018:
>>>>>
>>>> https://github.com/wch/r-source/commit/d839b1e04e173f90b51ad809ef0bdb18095abe6f
>>>>>
>>>>> I assume we are seeing failing R CMD check results because
>>>>> http://worldclockapi.com/api/json/utc/now has recently died.
>>>>>
>>>>> It would be appreciated if someone from R-core could look into this as
>>>>> it's currently causing all R-devel builds on travis to fail.
>>>>>
>>>>> Hadley
>>>>>
>>>>> On Thu, Mar 7, 2019 at 9:32 AM Bob Rudis <bob at rud.is> wrote:
>>>>>>
>>>>>> (a) that's gd news (#ty)
>>>>>> (b) genuine apologies for my confusion
>>>>>> (c) why was the introduction of reliance on a third-party site even
>>>> under consideration?
>>>>>>
>>>>>>> On Mar 7, 2019, at 09:32, peter dalgaard <pdalgd at gmail.com> wrote:
>>>>>>>
>>>>>>> It's not "stealth fixed"! It was never there... (on the release
>>>> branch)
>>>>>>>
>>>>>>> The timestamp checking code is still present in R-devel. I presume
>>>> something needs to be done about the breakage.
>>>>>>>
>>>>>>> - pd
>>>>>>>
>>>>>>>> On 7 Mar 2019, at 14:38 , Bob Rudis <bob at rud.is> wrote:
>>>>>>>>
>>>>>>>> It's fixed in the RC that's GA on the 11th.
>>>>>>>>
>>>>>>>> I think perhaps "stealth fixed" may be more appropro since it's not
>>>> in SVN logs, Bugzilla nor noted prominently in any of the various NEWS*
>>>> files.
>>>>>>>>
>>>>>>>> Then there's the "why was the core R installation using a third
>>>> party, non-HTTPS site for this to begin with".
>>>>>>>>
>>>>>>>> And, in other news, there are tests in the R source that rely on a
>>>> check of `foo.bar` for connectivity. `.bar` is a valid domain and `foo.bar`
>>>> is registered. Thankfully there's no current IP address associated with it.
>>>> Anything under `*.invalid` (https://en.wikipedia.org/wiki/.invalid) might
>>>> be a better choice as well since that won't break the reason for the
>>>> connectivity checks and won't arbitrarily send telemetry pings to third
>>>> parties in the even anyone outside of R Core decides to run the tests (say,
>>>> when patching something in R).
>>>>>>>>
>>>>>>>> -boB
>>>>>>>>
>>>>>>>>> On Mar 7, 2019, at 07:54, Rainer M Krug <Rainer at krugs.de> wrote:
>>>>>>>>>
>>>>>>>>> I can confirm the same when checking on travis with r-devel.
>>>>>>>>>
>>>>>>>>> And thanks for the tip with
>>>>>>>>>
>>>>>>>>> env:
>>>>>>>>> - _R_CHECK_SYSTEM_CLOCK_=0
>>>>>>>>>
>>>>>>>>> In .travis.yml
>>>>>>>>>
>>>>>>>>> Seems to be working now
>>>>>>>>>
>>>>>>>>> Rainer
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>> On 7 Mar 2019, at 12:48, Ralf Herold <ralf.herold at mailbox.org>
>>>> wrote:
>>>>>>>>>>
>>>>>>>>>> Dear All,
>>>>>>>>>>
>>>>>>>>>> Checking a new package under development produces a warning in a
>>>> local R-devel MS Windows environment (output below).
>>>>>>>>>>
>>>>>>>>>> Building it with R-devel on Travis fails (because warnings are
>>>> changed to errors), but is successful when setting environment variable
>>>> _R_CHECK_SYSTEM_CLOCK_ to zero.
>>>>>>>>>>
>>>>>>>>>> No issue occurs when checking and building with R-stable and
>>>> R-oldrel on Travis, or with any R version on win-builder.r-project.org.
>>>>>>>>>>
>>>>>>>>>> The warning concerns using http://worldclockapi.com/, which
>>>> however seems out of service ("The web app you have attempted to reach is
>>>> currently stopped and does not accept any requests."). This is referenced
>>>> in the main function for R CMD check (
>>>> https://svn.r-project.org/R/trunk/src/library/tools/R/check.R) and may
>>>> concern more R-devel than R-package-devel. I am posting here to check if
>>>> the issue was noticed by other package developers and to check the impact.
>>>>>>>>>>
>>>>>>>>>> Thanks for any suggestions.
>>>>>>>>>> Best regards,
>>>>>>>>>> Ralf
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>> PS C:\Users\username> & 'C:\Program Files\R\R-devel\bin\R.exe'
>>>> CMD check E:\mypackage_0.1.2.3.tar.gz --as-cran
>>>>>>>>>> * using log directory 'C:/Users/username/ctrdata.Rcheck'
>>>>>>>>>> * using R Under development (unstable) (2019-03-05 r76200)
>>>>>>>>>> * using platform: x86_64-w64-mingw32 (64-bit)
>>>>>>>>>> * using session charset: ISO8859-1
>>>>>>>>>> * using option '--as-cran'
>>>>>>>>>> [...]
>>>>>>>>>> * checking package directory ... OK
>>>>>>>>>> * checking for future file timestamps ...Warning in file(con,
>>>> "r") :
>>>>>>>>>> cannot open URL 'http://worldclockapi.com/api/json/utc/now':
>>>> HTTP status was '403 Site Disabled'
>>>>>>>>>> WARNING
>>>>>>>>>> unable to verify current time
>>>>>>>>>> * checking 'build' directory ? OK
>>>>>>>>>> [...]
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>> ## Ralf Herold
>>>>>>>>>> ## mailto: ralf.herold at mailbox.org [S/MIME]
>>>>>>>>>> ## https://paediatricdata.eu/
>>>>>>>>>>
>>>>>>>>>> ______________________________________________
>>>>>>>>>> R-package-devel at r-project.org mailing list
>>>>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>> --
>>>>>>>>> Rainer M. Krug
>>>>>>>>> email: Rainer<at>krugs<dot>de
>>>>>>>>> PGP: 0x0F52F982
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>     [[alternative HTML version deleted]]
>>>>>>>>>
>>>>>>>>> ______________________________________________
>>>>>>>>> R-package-devel at r-project.org mailing list
>>>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>>>>>
>>>>>>>> ______________________________________________
>>>>>>>> R-package-devel at r-project.org mailing list
>>>>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>>>>
>>>>>>> --
>>>>>>> Peter Dalgaard, Professor,
>>>>>>> Center for Statistics, Copenhagen Business School
>>>>>>> Solbjerg Plads 3, 2000 Frederiksberg, Denmark
>>>>>>> Phone: (+45)38153501
>>>>>>> Office: A 4.23
>>>>>>> Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>
>>>>>> ______________________________________________
>>>>>> R-package-devel at r-project.org mailing list
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>>
>>>>>
>>>>>
>>>>> --
>>>>> http://hadley.nz
>>>>
>>>>
>>>>
>>>> --
>>>> http://hadley.nz
>>>>
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>
>>>
>>>         [[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From j|ox @end|ng |rom mcm@@ter@c@  Fri Aug 28 05:10:45 2020
From: j|ox @end|ng |rom mcm@@ter@c@ (John Fox)
Date: Thu, 27 Aug 2020 23:10:45 -0400
Subject: [R-pkg-devel] R CMD check "unable to verify current time"
In-Reply-To: <BN8PR11MB3764C33BE4514B31BD98B258A5520@BN8PR11MB3764.namprd11.prod.outlook.com>
References: <b2489dda-5e8a-6b30-4152-0b0d16712a4b@mcmaster.ca>
 <065d324f-641e-a52a-bb78-89c98e82e045@gmail.com>
 <ac3f6fa8-8dc4-78b1-65ed-6f970bf81a85@mcmaster.ca>
 <BN8PR11MB3764C33BE4514B31BD98B258A5520@BN8PR11MB3764.namprd11.prod.outlook.com>
Message-ID: <39f1e537-df74-e3c4-f9e0-16705212485f@mcmaster.ca>

Dear Dustin,

On 2020-08-27 8:26 p.m., Tracy, Josef wrote:
> Hi John,
> 
> Duncan explained the cause of the problem, but i'm afraid I didn't 
> follow how one solves it.? Did you manage to get a check without that note?

I didn't -- I just disregarded the note assuming that it would go away 
when the time server was back up.

(I've cc'd the R-package-devel list so that others can see your question 
and my response.)

Best,
  John

> 
> Thanks You,
> Dustin
> 
> Dustin Tracy
> 
> Postdoctoral Researcher
> 
> Economic Science Institute
> 
> Chapman University
> 
> www.DustinTracy.com <http://www.DustinTracy.com>
> 
> 
> 
> ------------------------------------------------------------------------
> *From:* R-package-devel <r-package-devel-bounces at r-project.org> on 
> behalf of John Fox <jfox at mcmaster.ca>
> *Sent:* Thursday, August 27, 2020 11:39 AM
> *To:* Duncan Murdoch <murdoch.duncan at gmail.com>; 
> r-package-devel at r-project.org <r-package-devel at r-project.org>
> *Subject:* Re: [R-pkg-devel] R CMD check "unable to verify current time"
> External Message
> 
> 
> [External Message]
> 
> Dear Duncan,
> 
> Thank you and the others who responded to my message.
> 
> John
> 
> On 2020-08-27 2:17 p.m., Duncan Murdoch wrote:
>> R tries to get the time from
>>
>> https://nam03.safelinks.protection.outlook.com/?url=http%3A%2F%2Fworldtimeapi.org%2Fapi%2Ftimezone%2FUTC&amp;data=02%7C01%7Ctracy%40chapman.edu%7Ce1a2215e59904aaee08708d84ab888d0%7C809929af2d2545bf9837089eb9cfbd01%7C1%7C0%7C637341504003489320&amp;sdata=GHBn6K9Yl7qaRU6tYzAEzymO3751Uczj51xB9c17Zm4%3D&amp;reserved=0 
> or
>> https://nam03.safelinks.protection.outlook.com/?url=http%3A%2F%2Fworldclockapi.com%2Fapi%2Fjson%2Futc%2Fnow&amp;data=02%7C01%7Ctracy%40chapman.edu%7Ce1a2215e59904aaee08708d84ab888d0%7C809929af2d2545bf9837089eb9cfbd01%7C1%7C0%7C637341504003489320&amp;sdata=psttxEnhMO6MjLyEv%2BchRopHyhLvgCxgqLT0JDPQVys%3D&amp;reserved=0
>>
>> The first one doesn't accept UTC as a timezone; it appears to want
>> etc/UTC instead.? The second one is offline.
>>
>> Duncan Murdoch
>>
>> If both of those fail, you'll get the message you saw.
>>
>> On 27/08/2020 1:23 p.m., John Fox wrote:
>>> Dear r-package-devel list members,
>>>
>>> I got the following note when checking two different packages today
>>> --as-cran, both under R 4.0.2 and under R-devel, on my Windows 10 and
>>> macOS Catalina systems, and on several platforms on rhub:
>>>
>>>???? * checking for future file timestamps ... NOTE
>>> unable to verify current time
>>>
>>> I'm writing to inquire about the note because no one else has mentioned
>>> this problem recently, in case it's produced by something that I'm
>>> doing. There is a discussion of a similar problem from 2019 at
>>> <https://nam03.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fpipermail%2Fr-package-devel%2F2019q1%2F003577.html&amp;data=02%7C01%7Ctracy%40chapman.edu%7Ce1a2215e59904aaee08708d84ab888d0%7C809929af2d2545bf9837089eb9cfbd01%7C1%7C0%7C637341504003489320&amp;sdata=GWnhngNH3UypXzbCzQOOwVHa8q87slWBhEW6n4PthGQ%3D&amp;reserved=0>.
>>>
>>> Both packages that I was checking are close to CRAN releases and so I'd
>>> like to know whether I can disregard the note.
>>>
>>> Any help would be appreciated.
>>>
>>> John
>>>
>>
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://nam03.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-package-devel&amp;data=02%7C01%7Ctracy%40chapman.edu%7Ce1a2215e59904aaee08708d84ab888d0%7C809929af2d2545bf9837089eb9cfbd01%7C1%7C0%7C637341504003489320&amp;sdata=rMlgTGg8rp7hxPhaiADuBl4%2FWSqGgx4wbKLIPgPS9o8%3D&amp;reserved=0
> - NOTE: This email originated from outside Chapman?s network. Do not 
> click links or open attachments unless you recognize the sender and know 
> content is safe.
> 
> NOTE: This email originated from outside Chapman?s network. Do not click 
> links or open attachments unless you recognize the sender and know 
> content is safe.
>


From r|che| @end|ng |rom r|che|b||derbeek@n|  Tue Sep  1 09:43:17 2020
From: r|che| @end|ng |rom r|che|b||derbeek@n| (Richel Bilderbeek)
Date: Tue, 01 Sep 2020 09:43:17 +0200
Subject: [R-pkg-devel] =?utf-8?q?Should_a_package_run_without_calling_lib?=
 =?utf-8?q?rary=3F?=
Message-ID: <1598946197192.22292.40366@webmail3>

Dear fellow R package maintainers,

I would enjoy your advice to clarify a CRAN policy issue.

The question is: should a package be able to work, when calling its exported functions using the scope operator? Or, in the example code below, should #1 work?



```
# 1. Scope operator: should this always work?
mypackage::myfunction()

# Possible error message:
# Error in myfunction() :
# object 'myhiddenfunction' of mode 'function' was not found


# 2. Calling library first
library(mypackage)
myfunction()
```

I feel the answer is 'yes, #1 should work', as I feel this is only indirectly a CRAN repository policy [1] , the IMHO relevant one which I quote: 'Packages should not modify the global environment (user?s workspace).'. This means that if I have a function that calls `mypackage::myfunction`, it will call `library`:


```
#' Function in another package, that depends on my package
do_something <- function() {
library(mypackage)
myfunction()
}
```

So, should a package be able to work, when calling its exported functions using the scope operator?

Thanks for your advice/pointers, Richel Bilderbeek


* [1] <https://mirror.las.iastate.edu/CRAN/web/packages/policies.html>




From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Tue Sep  1 10:02:57 2020
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Tue, 1 Sep 2020 10:02:57 +0200
Subject: [R-pkg-devel] Should a package run without calling library?
In-Reply-To: <1598946197192.22292.40366@webmail3>
References: <1598946197192.22292.40366@webmail3>
Message-ID: <4337ea08-956e-63e4-3bf5-bed01680f714@statistik.tu-dortmund.de>



On 01.09.2020 09:43, Richel Bilderbeek wrote:
> Dear fellow R package maintainers,
> 
> I would enjoy your advice to clarify a CRAN policy issue.
> 
> The question is: should a package be able to work, when calling its exported functions using the scope operator? Or, in the example code below, should #1 work?
> 
> 
> 
> ```
> # 1. Scope operator: should this always work?
> mypackage::myfunction()
> 
> # Possible error message:
> # Error in myfunction() :
> # object 'myhiddenfunction' of mode 'function' was not found

Yes.

> 
> # 2. Calling library first
> library(mypackage)
> myfunction()
> ```

Yes.


> I feel the answer is 'yes, #1 should work', as I feel this is only indirectly a CRAN repository policy [1] , the IMHO relevant one which I quote: 'Packages should not modify the global environment (user?s workspace).'. This means that if I have a function that calls `mypackage::myfunction`, it will call `library`:

No, it can import from the namespace, i.e. it loads the package, but 
does not modify the search path (i.e. does not attach the package).

Also note the workspace (=.GlobalEnv) is not the search path.

Best,
Uwe Ligges






> 
> ```
> #' Function in another package, that depends on my package
> do_something <- function() {
> library(mypackage)
> myfunction()
> }
> ```
> 
> So, should a package be able to work, when calling its exported functions using the scope operator?
> 
> Thanks for your advice/pointers, Richel Bilderbeek
> 
> 
> * [1] <https://mirror.las.iastate.edu/CRAN/web/packages/policies.html>
> 
> 
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From md@ncho @end|ng |rom bu@|ne@@-@c|ence@|o  Tue Sep  1 17:26:06 2020
From: md@ncho @end|ng |rom bu@|ne@@-@c|ence@|o (Matt Dancho)
Date: Tue, 1 Sep 2020 11:26:06 -0400
Subject: [R-pkg-devel] Modeltime 0.1.0 Submission Failing - Not Sure What To
 Do
Message-ID: <CAN9wbhwb1b9=4CM1BBf7YcUKYRvzaBydgQsMWof9izgpAhRB8g@mail.gmail.com>

Hi,

I'm having a difficult time with the pre-tests for Modeltime 0.1.0, a new
version that I'm trying to get onto CRAN. The pre-tests indicate Windows &
Debian are OK. Any help would be much appreciated.

Thanks, Matt


*CRAN Pretest Results*

Dear maintainer,

package modeltime_0.1.0.tar.gz does not pass the incoming checks
automatically, please see the following pre-tests:
Windows: <
https://win-builder.r-project.org/incoming_pretest/modeltime_0.1.0_20200901_161424/Windows/00check.log
>
Status: OK
Debian: <
https://win-builder.r-project.org/incoming_pretest/modeltime_0.1.0_20200901_161424/Debian/00check.log
>
Status: OK

Last released version's CRAN status: ERROR: 1, WARN: 3, NOTE: 1, OK: 7
See: <https://CRAN.R-project.org/web/checks/check_results_modeltime.html
<https://cran.r-project.org/web/checks/check_results_modeltime.html>>

CRAN Web: <https://cran.r-project.org/package=modeltime>

Please fix all problems and resubmit a fixed version via the webform.
If you are not sure how to fix the problems shown, please ask for help on
the R-package-devel mailing list:
<https://stat.ethz.ch/mailman/listinfo/r-package-devel>
If you are fairly certain the rejection is a false positive, please
reply-all to this message and explain.

More details are given in the directory:
<
https://win-builder.r-project.org/incoming_pretest/modeltime_0.1.0_20200901_161424/
>
The files will be removed after roughly 7 days.

No strong reverse dependencies to be checked.

Best regards,
CRAN teams' auto-check service
Flavor: r-devel-windows-ix86+x86_64
Check: CRAN incoming feasibility, Result: NA
  Maintainer: 'Matt Dancho <mdancho at business-science.io>'

Flavor: r-devel-windows-ix86+x86_64
Check: Overall checktime, Result: NOTE
  Overall checktime 16 min > 10 min

Flavor: r-devel-linux-x86_64-debian-gcc
Check: CRAN incoming feasibility, Result: Note_to_CRAN_maintainers
  Maintainer: 'Matt Dancho <mdancho at business-science.io>'



*Matt Dancho | Founder, CEO | Business Science*
p: 570-419-4337 <(570)%20419-4337> | www.business-science.io

Want to learn Data Science for Business? Get started today with Business
Science <https://university.business-science.io/>.

<http://www.business-science.io/> <https://twitter.com/bizScienc>

	[[alternative HTML version deleted]]


From M@x@Turgeon @end|ng |rom um@n|tob@@c@  Tue Sep  1 17:52:07 2020
From: M@x@Turgeon @end|ng |rom um@n|tob@@c@ (Max Turgeon)
Date: Tue, 1 Sep 2020 15:52:07 +0000
Subject: [R-pkg-devel] 
 Modeltime 0.1.0 Submission Failing - Not Sure What To Do
In-Reply-To: <CAN9wbhwb1b9=4CM1BBf7YcUKYRvzaBydgQsMWof9izgpAhRB8g@mail.gmail.com>
References: <CAN9wbhwb1b9=4CM1BBf7YcUKYRvzaBydgQsMWof9izgpAhRB8g@mail.gmail.com>
Message-ID: <7426037a5f92417399d2ffc24413f1be@umanitoba.ca>

Hi Matt,


If you scroll down just below the Windows and Debian OKs, you'll see these lines:


Last released version's CRAN status: ERROR: 1, WARN: 3, NOTE: 1, OK: 7
See: <https://CRAN.R-project.org/web/checks/check_results_modeltime.html
<https://cran.r-project.org/web/checks/check_results_modeltime.html>>


It seems one of your vignettes is causing issues when trying to use phantomJS.


Best,


Max Turgeon
Assistant Professor
Department of Statistics
Department of Computer Science
University of Manitoba
maxturgeon.ca<http://maxturgeon.ca>


________________________________
From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Matt Dancho <mdancho at business-science.io>
Sent: September 1, 2020 10:26:06 AM
To: r-package-devel at r-project.org
Subject: [R-pkg-devel] Modeltime 0.1.0 Submission Failing - Not Sure What To Do

********************************************************
Caution: This message was sent from outside the University of Manitoba.
********************************************************

Hi,

I'm having a difficult time with the pre-tests for Modeltime 0.1.0, a new
version that I'm trying to get onto CRAN. The pre-tests indicate Windows &
Debian are OK. Any help would be much appreciated.

Thanks, Matt


*CRAN Pretest Results*

Dear maintainer,

package modeltime_0.1.0.tar.gz does not pass the incoming checks
automatically, please see the following pre-tests:
Windows: <
https://win-builder.r-project.org/incoming_pretest/modeltime_0.1.0_20200901_161424/Windows/00check.log
>
Status: OK
Debian: <
https://win-builder.r-project.org/incoming_pretest/modeltime_0.1.0_20200901_161424/Debian/00check.log
>
Status: OK

Last released version's CRAN status: ERROR: 1, WARN: 3, NOTE: 1, OK: 7
See: <https://CRAN.R-project.org/web/checks/check_results_modeltime.html
<https://cran.r-project.org/web/checks/check_results_modeltime.html>>

CRAN Web: <https://cran.r-project.org/package=modeltime>

Please fix all problems and resubmit a fixed version via the webform.
If you are not sure how to fix the problems shown, please ask for help on
the R-package-devel mailing list:
<https://stat.ethz.ch/mailman/listinfo/r-package-devel>
If you are fairly certain the rejection is a false positive, please
reply-all to this message and explain.

More details are given in the directory:
<
https://win-builder.r-project.org/incoming_pretest/modeltime_0.1.0_20200901_161424/
>
The files will be removed after roughly 7 days.

No strong reverse dependencies to be checked.

Best regards,
CRAN teams' auto-check service
Flavor: r-devel-windows-ix86+x86_64
Check: CRAN incoming feasibility, Result: NA
  Maintainer: 'Matt Dancho <mdancho at business-science.io>'

Flavor: r-devel-windows-ix86+x86_64
Check: Overall checktime, Result: NOTE
  Overall checktime 16 min > 10 min

Flavor: r-devel-linux-x86_64-debian-gcc
Check: CRAN incoming feasibility, Result: Note_to_CRAN_maintainers
  Maintainer: 'Matt Dancho <mdancho at business-science.io>'



*Matt Dancho | Founder, CEO | Business Science*
p: 570-419-4337 <(570)%20419-4337> | www.business-science.io<http://www.business-science.io>

Want to learn Data Science for Business? Get started today with Business
Science <https://university.business-science.io/>.

<http://www.business-science.io/> <https://twitter.com/bizScienc>

        [[alternative HTML version deleted]]

______________________________________________
R-package-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel


	[[alternative HTML version deleted]]


From t@jendoub|14 @end|ng |rom |mper|@|@@c@uk  Tue Sep  1 17:56:43 2020
From: t@jendoub|14 @end|ng |rom |mper|@|@@c@uk (Jendoubi Bedhiafi, Takoua)
Date: Tue, 1 Sep 2020 15:56:43 +0000
Subject: [R-pkg-devel] bioconductor package required but not available
Message-ID: <DFE2FFC3-3982-4C26-882E-31351A258426@ic.ac.uk>

Hi all,

All checks for my updated package seem to be all fine except for  r-release-macos-x86_64 <https://cran.r-project.org/web/checks/check_flavors.html#r-release-macos-x86_64> .
KEGGgraph a bio conductor package is required for my package to run but is not available on the platform.

It is however available on the devel version.
Full log below:
https://www.r-project.org/nosvn/R.check/r-release-macos-x86_64/iCARH-00check.html

Does this mean the package might be removed from CRAN?

Thanks in advance,
bw,
________________________________
Dr. Takoua Jendoubi, PhD, MSc, PGCert ULT, FHEA
Strategic Teaching Fellow in Statistics

Statistics section | Department of Mathematics |
Imperial College London | Room 533 |
South Kensington Campus | London |
SW7 2AZ |


	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Tue Sep  1 17:59:57 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Tue, 1 Sep 2020 11:59:57 -0400
Subject: [R-pkg-devel] 
 Modeltime 0.1.0 Submission Failing - Not Sure What To Do
In-Reply-To: <7426037a5f92417399d2ffc24413f1be@umanitoba.ca>
References: <CAN9wbhwb1b9=4CM1BBf7YcUKYRvzaBydgQsMWof9izgpAhRB8g@mail.gmail.com>
 <7426037a5f92417399d2ffc24413f1be@umanitoba.ca>
Message-ID: <965c2ce6-11fa-3c5e-3d52-66cc60decf57@gmail.com>

On 01/09/2020 11:52 a.m., Max Turgeon wrote:
> Hi Matt,
> 
> 
> If you scroll down just below the Windows and Debian OKs, you'll see these lines:
> 
> 
> Last released version's CRAN status: ERROR: 1, WARN: 3, NOTE: 1, OK: 7
> See: <https://CRAN.R-project.org/web/checks/check_results_modeltime.html
> <https://cran.r-project.org/web/checks/check_results_modeltime.html>>
> 
> 
> It seems one of your vignettes is causing issues when trying to use phantomJS.

That message is about the version that's on CRAN, not the new 
submission.  I think Matt should just follow this directions:  "If you 
are fairly certain the rejection is a false positive, please reply-all 
to this message and explain."  Having OK results rejected sure seems 
like a false positive!

Duncan Murdoch

> 
> 
> Best,
> 
> 
> Max Turgeon
> Assistant Professor
> Department of Statistics
> Department of Computer Science
> University of Manitoba
> maxturgeon.ca<http://maxturgeon.ca>
> 
> 
> ________________________________
> From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Matt Dancho <mdancho at business-science.io>
> Sent: September 1, 2020 10:26:06 AM
> To: r-package-devel at r-project.org
> Subject: [R-pkg-devel] Modeltime 0.1.0 Submission Failing - Not Sure What To Do
> 
> ********************************************************
> Caution: This message was sent from outside the University of Manitoba.
> ********************************************************
> 
> Hi,
> 
> I'm having a difficult time with the pre-tests for Modeltime 0.1.0, a new
> version that I'm trying to get onto CRAN. The pre-tests indicate Windows &
> Debian are OK. Any help would be much appreciated.
> 
> Thanks, Matt
> 
> 
> *CRAN Pretest Results*
> 
> Dear maintainer,
> 
> package modeltime_0.1.0.tar.gz does not pass the incoming checks
> automatically, please see the following pre-tests:
> Windows: <
> https://win-builder.r-project.org/incoming_pretest/modeltime_0.1.0_20200901_161424/Windows/00check.log
>>
> Status: OK
> Debian: <
> https://win-builder.r-project.org/incoming_pretest/modeltime_0.1.0_20200901_161424/Debian/00check.log
>>
> Status: OK
> 
> Last released version's CRAN status: ERROR: 1, WARN: 3, NOTE: 1, OK: 7
> See: <https://CRAN.R-project.org/web/checks/check_results_modeltime.html
> <https://cran.r-project.org/web/checks/check_results_modeltime.html>>
> 
> CRAN Web: <https://cran.r-project.org/package=modeltime>
> 
> Please fix all problems and resubmit a fixed version via the webform.
> If you are not sure how to fix the problems shown, please ask for help on
> the R-package-devel mailing list:
> <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
> If you are fairly certain the rejection is a false positive, please
> reply-all to this message and explain.
> 
> More details are given in the directory:
> <
> https://win-builder.r-project.org/incoming_pretest/modeltime_0.1.0_20200901_161424/
>>
> The files will be removed after roughly 7 days.
> 
> No strong reverse dependencies to be checked.
> 
> Best regards,
> CRAN teams' auto-check service
> Flavor: r-devel-windows-ix86+x86_64
> Check: CRAN incoming feasibility, Result: NA
>    Maintainer: 'Matt Dancho <mdancho at business-science.io>'
> 
> Flavor: r-devel-windows-ix86+x86_64
> Check: Overall checktime, Result: NOTE
>    Overall checktime 16 min > 10 min
> 
> Flavor: r-devel-linux-x86_64-debian-gcc
> Check: CRAN incoming feasibility, Result: Note_to_CRAN_maintainers
>    Maintainer: 'Matt Dancho <mdancho at business-science.io>'
> 
> 
> 
> *Matt Dancho | Founder, CEO | Business Science*
> p: 570-419-4337 <(570)%20419-4337> | www.business-science.io<http://www.business-science.io>
> 
> Want to learn Data Science for Business? Get started today with Business
> Science <https://university.business-science.io/>.
> 
> <http://www.business-science.io/> <https://twitter.com/bizScienc>
> 
>          [[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From md@ncho @end|ng |rom bu@|ne@@-@c|ence@|o  Tue Sep  1 18:18:52 2020
From: md@ncho @end|ng |rom bu@|ne@@-@c|ence@|o (Matt Dancho)
Date: Tue, 1 Sep 2020 12:18:52 -0400
Subject: [R-pkg-devel] 
 Modeltime 0.1.0 Submission Failing - Not Sure What To Do
In-Reply-To: <965c2ce6-11fa-3c5e-3d52-66cc60decf57@gmail.com>
References: <CAN9wbhwb1b9=4CM1BBf7YcUKYRvzaBydgQsMWof9izgpAhRB8g@mail.gmail.com>
 <7426037a5f92417399d2ffc24413f1be@umanitoba.ca>
 <965c2ce6-11fa-3c5e-3d52-66cc60decf57@gmail.com>
Message-ID: <CAN9wbhwCRUr3vWCo_A5L-WmUexz=5WVuZbbdfpX-cwaskWPX-g@mail.gmail.com>

Hi Max,

I appreciate the quick response - The webshot should no longer be an issue.
My latest submission has only one vignette and I switched all of the plots
from interactive (which uses webshot to convert to PNG) to ggplot2 so
webshot should not be necessary.

I think the CRAN Modeltime 0.2.0 results should be corrected. The only one
I see that may still be an issue is the prophet library, which modeltime
uses.

What do you think?

*Matt Dancho | Founder, CEO | Business Science*
p: 570-419-4337 <(570)%20419-4337> | www.business-science.io

Want to learn Data Science for Business? Get started today with Business
Science <https://university.business-science.io/>.

<http://www.business-science.io/> <https://twitter.com/bizScienc>


On Tue, Sep 1, 2020 at 12:00 PM Duncan Murdoch <murdoch.duncan at gmail.com>
wrote:

> On 01/09/2020 11:52 a.m., Max Turgeon wrote:
> > Hi Matt,
> >
> >
> > If you scroll down just below the Windows and Debian OKs, you'll see
> these lines:
> >
> >
> > Last released version's CRAN status: ERROR: 1, WARN: 3, NOTE: 1, OK: 7
> > See: <https://CRAN.R-project.org/web/checks/check_results_modeltime.html
> > <https://cran.r-project.org/web/checks/check_results_modeltime.html>>
> >
> >
> > It seems one of your vignettes is causing issues when trying to use
> phantomJS.
>
> That message is about the version that's on CRAN, not the new
> submission.  I think Matt should just follow this directions:  "If you
> are fairly certain the rejection is a false positive, please reply-all
> to this message and explain."  Having OK results rejected sure seems
> like a false positive!
>
> Duncan Murdoch
>
> >
> >
> > Best,
> >
> >
> > Max Turgeon
> > Assistant Professor
> > Department of Statistics
> > Department of Computer Science
> > University of Manitoba
> > maxturgeon.ca<http://maxturgeon.ca>
> >
> >
> > ________________________________
> > From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf
> of Matt Dancho <mdancho at business-science.io>
> > Sent: September 1, 2020 10:26:06 AM
> > To: r-package-devel at r-project.org
> > Subject: [R-pkg-devel] Modeltime 0.1.0 Submission Failing - Not Sure
> What To Do
> >
> > ********************************************************
> > Caution: This message was sent from outside the University of Manitoba.
> > ********************************************************
> >
> > Hi,
> >
> > I'm having a difficult time with the pre-tests for Modeltime 0.1.0, a new
> > version that I'm trying to get onto CRAN. The pre-tests indicate Windows
> &
> > Debian are OK. Any help would be much appreciated.
> >
> > Thanks, Matt
> >
> >
> > *CRAN Pretest Results*
> >
> > Dear maintainer,
> >
> > package modeltime_0.1.0.tar.gz does not pass the incoming checks
> > automatically, please see the following pre-tests:
> > Windows: <
> >
> https://win-builder.r-project.org/incoming_pretest/modeltime_0.1.0_20200901_161424/Windows/00check.log
> >>
> > Status: OK
> > Debian: <
> >
> https://win-builder.r-project.org/incoming_pretest/modeltime_0.1.0_20200901_161424/Debian/00check.log
> >>
> > Status: OK
> >
> > Last released version's CRAN status: ERROR: 1, WARN: 3, NOTE: 1, OK: 7
> > See: <https://CRAN.R-project.org/web/checks/check_results_modeltime.html
> > <https://cran.r-project.org/web/checks/check_results_modeltime.html>>
> >
> > CRAN Web: <https://cran.r-project.org/package=modeltime>
> >
> > Please fix all problems and resubmit a fixed version via the webform.
> > If you are not sure how to fix the problems shown, please ask for help on
> > the R-package-devel mailing list:
> > <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
> > If you are fairly certain the rejection is a false positive, please
> > reply-all to this message and explain.
> >
> > More details are given in the directory:
> > <
> >
> https://win-builder.r-project.org/incoming_pretest/modeltime_0.1.0_20200901_161424/
> >>
> > The files will be removed after roughly 7 days.
> >
> > No strong reverse dependencies to be checked.
> >
> > Best regards,
> > CRAN teams' auto-check service
> > Flavor: r-devel-windows-ix86+x86_64
> > Check: CRAN incoming feasibility, Result: NA
> >    Maintainer: 'Matt Dancho <mdancho at business-science.io>'
> >
> > Flavor: r-devel-windows-ix86+x86_64
> > Check: Overall checktime, Result: NOTE
> >    Overall checktime 16 min > 10 min
> >
> > Flavor: r-devel-linux-x86_64-debian-gcc
> > Check: CRAN incoming feasibility, Result: Note_to_CRAN_maintainers
> >    Maintainer: 'Matt Dancho <mdancho at business-science.io>'
> >
> >
> >
> > *Matt Dancho | Founder, CEO | Business Science*
> > p: 570-419-4337 <(570)%20419-4337> | www.business-science.io<
> http://www.business-science.io>
> >
> > Want to learn Data Science for Business? Get started today with Business
> > Science <https://university.business-science.io/>.
> >
> > <http://www.business-science.io/> <https://twitter.com/bizScienc>
> >
> >          [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
>
>

	[[alternative HTML version deleted]]


From M@x@Turgeon @end|ng |rom um@n|tob@@c@  Tue Sep  1 18:23:08 2020
From: M@x@Turgeon @end|ng |rom um@n|tob@@c@ (Max Turgeon)
Date: Tue, 1 Sep 2020 16:23:08 +0000
Subject: [R-pkg-devel] 
 Modeltime 0.1.0 Submission Failing - Not Sure What To Do
In-Reply-To: <CAN9wbhwCRUr3vWCo_A5L-WmUexz=5WVuZbbdfpX-cwaskWPX-g@mail.gmail.com>
References: <CAN9wbhwb1b9=4CM1BBf7YcUKYRvzaBydgQsMWof9izgpAhRB8g@mail.gmail.com>
 <7426037a5f92417399d2ffc24413f1be@umanitoba.ca>
 <965c2ce6-11fa-3c5e-3d52-66cc60decf57@gmail.com>,
 <CAN9wbhwCRUr3vWCo_A5L-WmUexz=5WVuZbbdfpX-cwaskWPX-g@mail.gmail.com>
Message-ID: <27ba9d7118434dbe9631fa3348f712c6@umanitoba.ca>

Hi Matt,


If you addressed the issues with the current CRAN version, then I would go with Duncan's suggestion below and treat this as a false positive.


Best,


Max Turgeon
Assistant Professor
Department of Statistics
Department of Computer Science
University of Manitoba
maxturgeon.ca<http://maxturgeon.ca>


________________________________
From: Matt Dancho <mdancho at business-science.io>
Sent: September 1, 2020 11:18:52 AM
To: Duncan Murdoch
Cc: Max Turgeon; r-package-devel at r-project.org
Subject: Re: [R-pkg-devel] Modeltime 0.1.0 Submission Failing - Not Sure What To Do

Caution: This message was sent from outside the University of Manitoba.
Hi Max,

I appreciate the quick response - The webshot should no longer be an issue. My latest submission has only one vignette and I switched all of the plots from interactive (which uses webshot to convert to PNG) to ggplot2 so webshot should not be necessary.

I think the CRAN Modeltime 0.2.0 results should be corrected. The only one I see that may still be an issue is the prophet library, which modeltime uses.

What do you think?

Matt Dancho | Founder, CEO | Business Science
p: 570-419-4337<tel:(570)%20419-4337> | www.business-science.io<http://www.business-science.io/>

Want to learn Data Science for Business? Get started today with Business Science<https://university.business-science.io/>.

[https://github.com/mdancho84/mdancho84.github.io/blob/master/img/social/bizsci.png?raw=true]<http://www.business-science.io/>[https://github.com/mdancho84/mdancho84.github.io/blob/master/img/social/linkedin.png?raw=true][https://github.com/mdancho84/mdancho84.github.io/blob/master/img/social/twitter.png?raw=true]<https://twitter.com/bizScienc>


On Tue, Sep 1, 2020 at 12:00 PM Duncan Murdoch <murdoch.duncan at gmail.com<mailto:murdoch.duncan at gmail.com>> wrote:
On 01/09/2020 11:52 a.m., Max Turgeon wrote:
> Hi Matt,
>
>
> If you scroll down just below the Windows and Debian OKs, you'll see these lines:
>
>
> Last released version's CRAN status: ERROR: 1, WARN: 3, NOTE: 1, OK: 7
> See: <https://CRAN.R-project.org/web/checks/check_results_modeltime.html
> <https://cran.r-project.org/web/checks/check_results_modeltime.html>>
>
>
> It seems one of your vignettes is causing issues when trying to use phantomJS.

That message is about the version that's on CRAN, not the new
submission.  I think Matt should just follow this directions:  "If you
are fairly certain the rejection is a false positive, please reply-all
to this message and explain."  Having OK results rejected sure seems
like a false positive!

Duncan Murdoch

>
>
> Best,
>
>
> Max Turgeon
> Assistant Professor
> Department of Statistics
> Department of Computer Science
> University of Manitoba
> maxturgeon.ca<http://maxturgeon.ca><http://maxturgeon.ca>
>
>
> ________________________________
> From: R-package-devel <r-package-devel-bounces at r-project.org<mailto:r-package-devel-bounces at r-project.org>> on behalf of Matt Dancho <mdancho at business-science.io<mailto:mdancho at business-science.io>>
> Sent: September 1, 2020 10:26:06 AM
> To: r-package-devel at r-project.org<mailto:r-package-devel at r-project.org>
> Subject: [R-pkg-devel] Modeltime 0.1.0 Submission Failing - Not Sure What To Do
>
> ********************************************************
> Caution: This message was sent from outside the University of Manitoba.
> ********************************************************
>
> Hi,
>
> I'm having a difficult time with the pre-tests for Modeltime 0.1.0, a new
> version that I'm trying to get onto CRAN. The pre-tests indicate Windows &
> Debian are OK. Any help would be much appreciated.
>
> Thanks, Matt
>
>
> *CRAN Pretest Results*
>
> Dear maintainer,
>
> package modeltime_0.1.0.tar.gz does not pass the incoming checks
> automatically, please see the following pre-tests:
> Windows: <
> https://win-builder.r-project.org/incoming_pretest/modeltime_0.1.0_20200901_161424/Windows/00check.log
>>
> Status: OK
> Debian: <
> https://win-builder.r-project.org/incoming_pretest/modeltime_0.1.0_20200901_161424/Debian/00check.log
>>
> Status: OK
>
> Last released version's CRAN status: ERROR: 1, WARN: 3, NOTE: 1, OK: 7
> See: <https://CRAN.R-project.org/web/checks/check_results_modeltime.html
> <https://cran.r-project.org/web/checks/check_results_modeltime.html>>
>
> CRAN Web: <https://cran.r-project.org/package=modeltime>
>
> Please fix all problems and resubmit a fixed version via the webform.
> If you are not sure how to fix the problems shown, please ask for help on
> the R-package-devel mailing list:
> <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
> If you are fairly certain the rejection is a false positive, please
> reply-all to this message and explain.
>
> More details are given in the directory:
> <
> https://win-builder.r-project.org/incoming_pretest/modeltime_0.1.0_20200901_161424/
>>
> The files will be removed after roughly 7 days.
>
> No strong reverse dependencies to be checked.
>
> Best regards,
> CRAN teams' auto-check service
> Flavor: r-devel-windows-ix86+x86_64
> Check: CRAN incoming feasibility, Result: NA
>    Maintainer: 'Matt Dancho <mdancho at business-science.io<mailto:mdancho at business-science.io>>'
>
> Flavor: r-devel-windows-ix86+x86_64
> Check: Overall checktime, Result: NOTE
>    Overall checktime 16 min > 10 min
>
> Flavor: r-devel-linux-x86_64-debian-gcc
> Check: CRAN incoming feasibility, Result: Note_to_CRAN_maintainers
>    Maintainer: 'Matt Dancho <mdancho at business-science.io<mailto:mdancho at business-science.io>>'
>
>
>
> *Matt Dancho | Founder, CEO | Business Science*
> p: 570-419-4337 <(570)%20419-4337> | www.business-science.io<http://www.business-science.io><http://www.business-science.io>
>
> Want to learn Data Science for Business? Get started today with Business
> Science <https://university.business-science.io/>.
>
> <http://www.business-science.io/> <https://twitter.com/bizScienc>
>
>          [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org<mailto:R-package-devel at r-project.org> mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>
>       [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org<mailto:R-package-devel at r-project.org> mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


	[[alternative HTML version deleted]]


From md@ncho @end|ng |rom bu@|ne@@-@c|ence@|o  Tue Sep  1 18:27:42 2020
From: md@ncho @end|ng |rom bu@|ne@@-@c|ence@|o (Matt Dancho)
Date: Tue, 1 Sep 2020 12:27:42 -0400
Subject: [R-pkg-devel] 
 Modeltime 0.1.0 Submission Failing - Not Sure What To Do
In-Reply-To: <27ba9d7118434dbe9631fa3348f712c6@umanitoba.ca>
References: <CAN9wbhwb1b9=4CM1BBf7YcUKYRvzaBydgQsMWof9izgpAhRB8g@mail.gmail.com>
 <7426037a5f92417399d2ffc24413f1be@umanitoba.ca>
 <965c2ce6-11fa-3c5e-3d52-66cc60decf57@gmail.com>
 <CAN9wbhwCRUr3vWCo_A5L-WmUexz=5WVuZbbdfpX-cwaskWPX-g@mail.gmail.com>
 <27ba9d7118434dbe9631fa3348f712c6@umanitoba.ca>
Message-ID: <CAN9wbhzVfvx+E2ZYt0hyDTA8CCM+REeZ3NZ6AaT4493otcbPPQ@mail.gmail.com>

Oh, I missed that. Thank you Max and Duncan!

*Matt Dancho | Founder, CEO | Business Science*
p: 570-419-4337 <(570)%20419-4337> | www.business-science.io

Want to learn Data Science for Business? Get started today with Business
Science <https://university.business-science.io/>.

<http://www.business-science.io/> <https://twitter.com/bizScienc>


On Tue, Sep 1, 2020 at 12:23 PM Max Turgeon <Max.Turgeon at umanitoba.ca>
wrote:

> Hi Matt,
>
>
> If you addressed the issues with the current CRAN version, then I would go
> with Duncan's suggestion below and treat this as a false positive.
>
>
> Best,
>
>
> Max Turgeon
> Assistant Professor
> Department of Statistics
> Department of Computer Science
> University of Manitoba
> maxturgeon.ca
>
>
> ------------------------------
> *From:* Matt Dancho <mdancho at business-science.io>
> *Sent:* September 1, 2020 11:18:52 AM
> *To:* Duncan Murdoch
> *Cc:* Max Turgeon; r-package-devel at r-project.org
> *Subject:* Re: [R-pkg-devel] Modeltime 0.1.0 Submission Failing - Not
> Sure What To Do
>
> *Caution:* This message was sent from outside the University of Manitoba.
> Hi Max,
>
> I appreciate the quick response - The webshot should no longer be an
> issue. My latest submission has only one vignette and I switched all of the
> plots from interactive (which uses webshot to convert to PNG) to ggplot2 so
> webshot should not be necessary.
>
> I think the CRAN Modeltime 0.2.0 results should be corrected. The only one
> I see that may still be an issue is the prophet library, which modeltime
> uses.
>
> What do you think?
>
> *Matt Dancho | Founder, CEO | Business Science*
> p: 570-419-4337 <(570)%20419-4337> | www.business-science.io
>
> Want to learn Data Science for Business? Get started today with Business
> Science <https://university.business-science.io/>.
>
> <http://www.business-science.io/> <https://twitter.com/bizScienc>
>
>
> On Tue, Sep 1, 2020 at 12:00 PM Duncan Murdoch <murdoch.duncan at gmail.com>
> wrote:
>
>> On 01/09/2020 11:52 a.m., Max Turgeon wrote:
>> > Hi Matt,
>> >
>> >
>> > If you scroll down just below the Windows and Debian OKs, you'll see
>> these lines:
>> >
>> >
>> > Last released version's CRAN status: ERROR: 1, WARN: 3, NOTE: 1, OK: 7
>> > See: <
>> https://CRAN.R-project.org/web/checks/check_results_modeltime.html
>> > <https://cran.r-project.org/web/checks/check_results_modeltime.html>>
>> >
>> >
>> > It seems one of your vignettes is causing issues when trying to use
>> phantomJS.
>>
>> That message is about the version that's on CRAN, not the new
>> submission.  I think Matt should just follow this directions:  "If you
>> are fairly certain the rejection is a false positive, please reply-all
>> to this message and explain."  Having OK results rejected sure seems
>> like a false positive!
>>
>> Duncan Murdoch
>>
>> >
>> >
>> > Best,
>> >
>> >
>> > Max Turgeon
>> > Assistant Professor
>> > Department of Statistics
>> > Department of Computer Science
>> > University of Manitoba
>> > maxturgeon.ca<http://maxturgeon.ca>
>> >
>> >
>> > ________________________________
>> > From: R-package-devel <r-package-devel-bounces at r-project.org> on
>> behalf of Matt Dancho <mdancho at business-science.io>
>> > Sent: September 1, 2020 10:26:06 AM
>> > To: r-package-devel at r-project.org
>> > Subject: [R-pkg-devel] Modeltime 0.1.0 Submission Failing - Not Sure
>> What To Do
>> >
>> > ********************************************************
>> > Caution: This message was sent from outside the University of Manitoba.
>> > ********************************************************
>> >
>> > Hi,
>> >
>> > I'm having a difficult time with the pre-tests for Modeltime 0.1.0, a
>> new
>> > version that I'm trying to get onto CRAN. The pre-tests indicate
>> Windows &
>> > Debian are OK. Any help would be much appreciated.
>> >
>> > Thanks, Matt
>> >
>> >
>> > *CRAN Pretest Results*
>> >
>> > Dear maintainer,
>> >
>> > package modeltime_0.1.0.tar.gz does not pass the incoming checks
>> > automatically, please see the following pre-tests:
>> > Windows: <
>> >
>> https://win-builder.r-project.org/incoming_pretest/modeltime_0.1.0_20200901_161424/Windows/00check.log
>> >>
>> > Status: OK
>> > Debian: <
>> >
>> https://win-builder.r-project.org/incoming_pretest/modeltime_0.1.0_20200901_161424/Debian/00check.log
>> >>
>> > Status: OK
>> >
>> > Last released version's CRAN status: ERROR: 1, WARN: 3, NOTE: 1, OK: 7
>> > See: <
>> https://CRAN.R-project.org/web/checks/check_results_modeltime.html
>> > <https://cran.r-project.org/web/checks/check_results_modeltime.html>>
>> >
>> > CRAN Web: <https://cran.r-project.org/package=modeltime>
>> >
>> > Please fix all problems and resubmit a fixed version via the webform.
>> > If you are not sure how to fix the problems shown, please ask for help
>> on
>> > the R-package-devel mailing list:
>> > <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
>> > If you are fairly certain the rejection is a false positive, please
>> > reply-all to this message and explain.
>> >
>> > More details are given in the directory:
>> > <
>> >
>> https://win-builder.r-project.org/incoming_pretest/modeltime_0.1.0_20200901_161424/
>> >>
>> > The files will be removed after roughly 7 days.
>> >
>> > No strong reverse dependencies to be checked.
>> >
>> > Best regards,
>> > CRAN teams' auto-check service
>> > Flavor: r-devel-windows-ix86+x86_64
>> > Check: CRAN incoming feasibility, Result: NA
>> >    Maintainer: 'Matt Dancho <mdancho at business-science.io>'
>> >
>> > Flavor: r-devel-windows-ix86+x86_64
>> > Check: Overall checktime, Result: NOTE
>> >    Overall checktime 16 min > 10 min
>> >
>> > Flavor: r-devel-linux-x86_64-debian-gcc
>> > Check: CRAN incoming feasibility, Result: Note_to_CRAN_maintainers
>> >    Maintainer: 'Matt Dancho <mdancho at business-science.io>'
>> >
>> >
>> >
>> > *Matt Dancho | Founder, CEO | Business Science*
>> > p: 570-419-4337 <(570)%20419-4337> | www.business-science.io<
>> http://www.business-science.io>
>> >
>> > Want to learn Data Science for Business? Get started today with Business
>> > Science <https://university.business-science.io/>.
>> >
>> > <http://www.business-science.io/> <https://twitter.com/bizScienc>
>> >
>> >          [[alternative HTML version deleted]]
>> >
>> > ______________________________________________
>> > R-package-devel at r-project.org mailing list
>> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> >
>> >
>> >       [[alternative HTML version deleted]]
>> >
>> > ______________________________________________
>> > R-package-devel at r-project.org mailing list
>> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> >
>>
>>

	[[alternative HTML version deleted]]


From mtmorg@n@b|oc @end|ng |rom gm@||@com  Tue Sep  1 21:33:26 2020
From: mtmorg@n@b|oc @end|ng |rom gm@||@com (Martin Morgan)
Date: Tue, 1 Sep 2020 19:33:26 +0000
Subject: [R-pkg-devel] bioconductor package required but not available
In-Reply-To: <DFE2FFC3-3982-4C26-882E-31351A258426@ic.ac.uk>
References: <DFE2FFC3-3982-4C26-882E-31351A258426@ic.ac.uk>
Message-ID: <BL0PR04MB6609FF452DF3D2FF7BE11BFEF92E0@BL0PR04MB6609.namprd04.prod.outlook.com>

Here is the build report for KEGGgraph

http://bioconductor.org/packages/release/bioc/html/KEGGgraph.html

where it builds, and is available, across all platforms. This does not seem to be a Bioconductor problem, but rather a CRAN configuration issue.

Martin Morgan
Bioconductor

?On 9/1/20, 12:05 PM, "R-package-devel on behalf of Jendoubi Bedhiafi, Takoua" <r-package-devel-bounces at r-project.org on behalf of t.jendoubi14 at imperial.ac.uk> wrote:

    Hi all,

    All checks for my updated package seem to be all fine except for  r-release-macos-x86_64 <https://cran.r-project.org/web/checks/check_flavors.html#r-release-macos-x86_64> .
    KEGGgraph a bio conductor package is required for my package to run but is not available on the platform.

    It is however available on the devel version.
    Full log below:
    https://www.r-project.org/nosvn/R.check/r-release-macos-x86_64/iCARH-00check.html

    Does this mean the package might be removed from CRAN?

    Thanks in advance,
    bw,
    ________________________________
    Dr. Takoua Jendoubi, PhD, MSc, PGCert ULT, FHEA
    Strategic Teaching Fellow in Statistics

    Statistics section | Department of Mathematics |
    Imperial College London | Room 533 |
    South Kensington Campus | London |
    SW7 2AZ |


    	[[alternative HTML version deleted]]

    ______________________________________________
    R-package-devel at r-project.org mailing list
    https://stat.ethz.ch/mailman/listinfo/r-package-devel

From emm@nue|@b|onde|1 @end|ng |rom gm@||@com  Wed Sep  2 23:59:45 2020
From: emm@nue|@b|onde|1 @end|ng |rom gm@||@com (Emmanuel Blondel (GMAIL))
Date: Wed, 2 Sep 2020 23:59:45 +0200
Subject: [R-pkg-devel] Advice for solving ERRORs in Fedora reported on CRAN
 / zen4R package
Message-ID: <438e05e4-1ec9-dc36-5be4-525b80b3e9cb@gmail.com>

Dear all,

I've received a notification of errors from CRAN on some package (zen4R) 
recently updated, being asked to fix within the 2 weeks before archiving.

The error deals with 'keyring' package import at test time, on _Fedora_ 
flavors only.

See https://cran.r-project.org/web/checks/check_results_zen4R.html 
<https://cran.r-project.org/web/checks/check_results_zen4R.html>

I'm not running this OS so I used the R-hub package builder 
(https://builder.r-hub.io/advanced <https://builder.r-hub.io/advanced>) 
to re-test on these flavors:

 ??? - Fedora Linux, R-devel, GCC : 
https://builder.r-hub.io/status/zen4R_0.4.tar.gz-8031e4afba828ef9d3f7933b7231207e 
<https://builder.r-hub.io/status/zen4R_0.4.tar.gz-8031e4afba828ef9d3f7933b7231207e>

 ??? - Fedora Linux, R-devel, clang, gfortran: 
https://builder.r-hub.io/status/zen4R_0.4.tar.gz-5fc1d63c756b7c4b650da06ed87f7c35 
<https://builder.r-hub.io/status/zen4R_0.4.tar.gz-5fc1d63c756b7c4b650da06ed87f7c35>

On both, status is OK, so I still wonder why I get these errors on CRAN,

Your advice in order to solve that would be much appreciated,

Thanks a lot

Emmanuel




	[[alternative HTML version deleted]]


From edd @end|ng |rom deb|@n@org  Thu Sep  3 00:11:27 2020
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Wed, 2 Sep 2020 17:11:27 -0500
Subject: [R-pkg-devel] 
 Advice for solving ERRORs in Fedora reported on CRAN / zen4R package
In-Reply-To: <438e05e4-1ec9-dc36-5be4-525b80b3e9cb@gmail.com>
References: <438e05e4-1ec9-dc36-5be4-525b80b3e9cb@gmail.com>
Message-ID: <24400.6287.262562.801729@rob.eddelbuettel.com>


On 2 September 2020 at 23:59, Emmanuel Blondel (GMAIL) wrote:
| Dear all,
| 
| I've received a notification of errors from CRAN on some package (zen4R) 
| recently updated, being asked to fix within the 2 weeks before archiving.
| 
| The error deals with 'keyring' package import at test time, on _Fedora_ 
| flavors only.
| 
| See https://cran.r-project.org/web/checks/check_results_zen4R.html 
| <https://cran.r-project.org/web/checks/check_results_zen4R.html>
| 
| I'm not running this OS so I used the R-hub package builder 
| (https://builder.r-hub.io/advanced <https://builder.r-hub.io/advanced>) 
| to re-test on these flavors:
| 
|  ??? - Fedora Linux, R-devel, GCC : 
| https://builder.r-hub.io/status/zen4R_0.4.tar.gz-8031e4afba828ef9d3f7933b7231207e 
| <https://builder.r-hub.io/status/zen4R_0.4.tar.gz-8031e4afba828ef9d3f7933b7231207e>
| 
|  ??? - Fedora Linux, R-devel, clang, gfortran: 
| https://builder.r-hub.io/status/zen4R_0.4.tar.gz-5fc1d63c756b7c4b650da06ed87f7c35 
| <https://builder.r-hub.io/status/zen4R_0.4.tar.gz-5fc1d63c756b7c4b650da06ed87f7c35>
| 
| On both, status is OK, so I still wonder why I get these errors on CRAN,
| 
| Your advice in order to solve that would be much appreciated,

Life, as they say, "is too short" so you could just comment-out the test.

Dirk

-- 
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From c@@rd|@g@bor @end|ng |rom gm@||@com  Thu Sep  3 00:39:21 2020
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Wed, 2 Sep 2020 23:39:21 +0100
Subject: [R-pkg-devel] 
 Advice for solving ERRORs in Fedora reported on CRAN / zen4R package
In-Reply-To: <24400.6287.262562.801729@rob.eddelbuettel.com>
References: <438e05e4-1ec9-dc36-5be4-525b80b3e9cb@gmail.com>
 <24400.6287.262562.801729@rob.eddelbuettel.com>
Message-ID: <CABtg=KnByJEG8G_k+VyJVEFuCqapOECSPyJNU4EOy1qQuZPfGA@mail.gmail.com>

On Wed, Sep 2, 2020 at 11:11 PM Dirk Eddelbuettel <edd at debian.org> wrote:
>
>
> On 2 September 2020 at 23:59, Emmanuel Blondel (GMAIL) wrote:
[...]
> | Your advice in order to solve that would be much appreciated,
>
> Life, as they say, "is too short" so you could just comment-out the test.

Indeed, it is probably best not to run this test on CRAN's machines.

It probably fails because CRAN's keyring package is built without the
OS's keyring library, at least on Fedora.

But really, ideally you would not access the OS keyring in test cases,
except when running on a CI, or on the developers' machines.

Gabor

[...]


From emm@nue|@b|onde|1 @end|ng |rom gm@||@com  Thu Sep  3 13:14:49 2020
From: emm@nue|@b|onde|1 @end|ng |rom gm@||@com (Emmanuel Blondel (GMAIL))
Date: Thu, 3 Sep 2020 13:14:49 +0200
Subject: [R-pkg-devel] 
 Advice for solving ERRORs in Fedora reported on CRAN / zen4R package
In-Reply-To: <CABtg=KnByJEG8G_k+VyJVEFuCqapOECSPyJNU4EOy1qQuZPfGA@mail.gmail.com>
References: <438e05e4-1ec9-dc36-5be4-525b80b3e9cb@gmail.com>
 <24400.6287.262562.801729@rob.eddelbuettel.com>
 <CABtg=KnByJEG8G_k+VyJVEFuCqapOECSPyJNU4EOy1qQuZPfGA@mail.gmail.com>
Message-ID: <87267a10-1d1c-0114-57be-57ad27f66995@gmail.com>

Thanks both for your quick answers,

I've implemented a solution to avoid the keyring issue by handling 
properly the error, and catch it properly in test-all.R (as a better 
control to deactivate CI integration tests if Zenodo token is invalid - 
which is the case on CRAN).

https://github.com/eblondel/zen4R/commit/ff3c34a20b486e547bbc684a696cfe15eb8c37bd 
<https://github.com/eblondel/zen4R/commit/ff3c34a20b486e547bbc684a696cfe15eb8c37bd>

zen4R has been resubmitted and Fedora CRAN builds are fine now.

Emmanuel

Le 03/09/2020 ? 00:39, G?bor Cs?rdi a ?crit?:
> On Wed, Sep 2, 2020 at 11:11 PM Dirk Eddelbuettel <edd at debian.org> wrote:
>>
>> On 2 September 2020 at 23:59, Emmanuel Blondel (GMAIL) wrote:
> [...]
>> | Your advice in order to solve that would be much appreciated,
>>
>> Life, as they say, "is too short" so you could just comment-out the test.
> Indeed, it is probably best not to run this test on CRAN's machines.
>
> It probably fails because CRAN's keyring package is built without the
> OS's keyring library, at least on Fedora.
>
> But really, ideally you would not access the OS keyring in test cases,
> except when running on a CI, or on the developers' machines.
>
> Gabor
>
> [...]


From b|oodr@ven166 @end|ng |rom gm@||@com  Thu Sep  3 07:48:35 2020
From: b|oodr@ven166 @end|ng |rom gm@||@com (Anirban)
Date: Thu, 3 Sep 2020 11:18:35 +0530
Subject: [R-pkg-devel] Help with a note
Message-ID: <CANTnqEhUVbMvNFy_FoB2OY3gV4gLzNRJZp2sBJfmSbaFYRXTAA@mail.gmail.com>

Hi, I've one note in my package which I can't seem to resolve while
submitting to CRAN:

  New submission

Flavor: r-devel-linux-x86_64-debian-gcc, r-devel-windows-ix86+x86_64
Check: R code for possible problems, Result: NOTE
  Possibly missing '()' after 'return' in the following functions:
    'asymptoticMemoryUsage' 'asymptoticTimings'


There are opening and closing brackets with the return statement to the
functions already. The source code can be found here:
asymptoticTimings:
https://github.com/Anirban166/testComplexity/blob/master/R/asymptoticTimings.R
asymptoticMemoryUsage:
https://github.com/Anirban166/testComplexity/blob/master/R/asymptoticMemoryUsage.R


The note seems trivial but I can't seem to get rid of it. Any help would be
appreciated.

Thanks,
Anirban

	[[alternative HTML version deleted]]


From c@@rd|@g@bor @end|ng |rom gm@||@com  Thu Sep  3 20:02:57 2020
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Thu, 3 Sep 2020 19:02:57 +0100
Subject: [R-pkg-devel] Help with a note
In-Reply-To: <CANTnqEhUVbMvNFy_FoB2OY3gV4gLzNRJZp2sBJfmSbaFYRXTAA@mail.gmail.com>
References: <CANTnqEhUVbMvNFy_FoB2OY3gV4gLzNRJZp2sBJfmSbaFYRXTAA@mail.gmail.com>
Message-ID: <CABtg=KkAHLGi+r+L5MWPk+WULeCYSz-KArCmCxzJJ+7KhpDnbg@mail.gmail.com>

`return()` is a function in R, so `return` does nothing. You probably
want `return()`.

Here:
https://github.com/Anirban166/testComplexity/blob/c991c31e5250bcaf804c3ad781fbc126c6a17e57/R/asymptoticMemoryUsage.R#L22
https://github.com/Anirban166/testComplexity/blob/master/R/asymptoticTimings.R#L22

Gabor

On Thu, Sep 3, 2020 at 6:42 PM Anirban <bloodraven166 at gmail.com> wrote:
>
> Hi, I've one note in my package which I can't seem to resolve while
> submitting to CRAN:
>
>   New submission
>
> Flavor: r-devel-linux-x86_64-debian-gcc, r-devel-windows-ix86+x86_64
> Check: R code for possible problems, Result: NOTE
>   Possibly missing '()' after 'return' in the following functions:
>     'asymptoticMemoryUsage' 'asymptoticTimings'
>
>
> There are opening and closing brackets with the return statement to the
> functions already. The source code can be found here:
> asymptoticTimings:
> https://github.com/Anirban166/testComplexity/blob/master/R/asymptoticTimings.R
> asymptoticMemoryUsage:
> https://github.com/Anirban166/testComplexity/blob/master/R/asymptoticMemoryUsage.R
>
>
> The note seems trivial but I can't seem to get rid of it. Any help would be
> appreciated.
>
> Thanks,
> Anirban
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From M@x@Turgeon @end|ng |rom um@n|tob@@c@  Thu Sep  3 20:04:22 2020
From: M@x@Turgeon @end|ng |rom um@n|tob@@c@ (Max Turgeon)
Date: Thu, 3 Sep 2020 18:04:22 +0000
Subject: [R-pkg-devel] Help with a note
In-Reply-To: <CANTnqEhUVbMvNFy_FoB2OY3gV4gLzNRJZp2sBJfmSbaFYRXTAA@mail.gmail.com>
References: <CANTnqEhUVbMvNFy_FoB2OY3gV4gLzNRJZp2sBJfmSbaFYRXTAA@mail.gmail.com>
Message-ID: <YTOPR0101MB10681C69326BF538B4EE7F189A2C0@YTOPR0101MB1068.CANPRD01.PROD.OUTLOOK.COM>

Hi Anirban,

I don't think the issue is coming from the return statement at the end of your function. I think it's triggered by your "ifelse" statement, where you have "return" as the expression to be run if the condition isn't met.

A more idiomatic way of achieving what you're trying to do would be to use "stopifnot".

Best,


Max Turgeon
Assistant Professor
Department of Statistics
Department of Computer Science
University of Manitoba
maxturgeon.ca<http://maxturgeon.ca>


________________________________
From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Anirban <bloodraven166 at gmail.com>
Sent: Thursday, September 3, 2020 12:48 AM
To: r-package-devel at r-project.org <r-package-devel at r-project.org>
Subject: [R-pkg-devel] Help with a note

********************************************************
Caution: This message was sent from outside the University of Manitoba.
********************************************************

Hi, I've one note in my package which I can't seem to resolve while
submitting to CRAN:

  New submission

Flavor: r-devel-linux-x86_64-debian-gcc, r-devel-windows-ix86+x86_64
Check: R code for possible problems, Result: NOTE
  Possibly missing '()' after 'return' in the following functions:
    'asymptoticMemoryUsage' 'asymptoticTimings'


There are opening and closing brackets with the return statement to the
functions already. The source code can be found here:
asymptoticTimings:
https://github.com/Anirban166/testComplexity/blob/master/R/asymptoticTimings.R
asymptoticMemoryUsage:
https://github.com/Anirban166/testComplexity/blob/master/R/asymptoticMemoryUsage.R


The note seems trivial but I can't seem to get rid of it. Any help would be
appreciated.

Thanks,
Anirban

        [[alternative HTML version deleted]]

______________________________________________
R-package-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel


	[[alternative HTML version deleted]]


From b|oodr@ven166 @end|ng |rom gm@||@com  Thu Sep  3 20:10:46 2020
From: b|oodr@ven166 @end|ng |rom gm@||@com (Anirban)
Date: Thu, 3 Sep 2020 23:40:46 +0530
Subject: [R-pkg-devel] Help with a note
In-Reply-To: <CANTnqEhUVbMvNFy_FoB2OY3gV4gLzNRJZp2sBJfmSbaFYRXTAA@mail.gmail.com>
References: <CANTnqEhUVbMvNFy_FoB2OY3gV4gLzNRJZp2sBJfmSbaFYRXTAA@mail.gmail.com>
Message-ID: <CANTnqEg2Y6U-2XrBEqoUv+wopBGz1Tq52+Y=_yYRxcBWOhYu-g@mail.gmail.com>

Thank you for the helpful replies! I got it now, I overlooked the return on
the ifelse() before.

Thanks a lot again!

- Anirban

On Thu, Sep 3, 2020, 11:18 AM Anirban <bloodraven166 at gmail.com> wrote:

> Hi, I've one note in my package which I can't seem to resolve while
> submitting to CRAN:
>
>   New submission
>
> Flavor: r-devel-linux-x86_64-debian-gcc, r-devel-windows-ix86+x86_64
> Check: R code for possible problems, Result: NOTE
>   Possibly missing '()' after 'return' in the following functions:
>     'asymptoticMemoryUsage' 'asymptoticTimings'
>
>
> There are opening and closing brackets with the return statement to the
> functions already. The source code can be found here:
> asymptoticTimings:
> https://github.com/Anirban166/testComplexity/blob/master/R/asymptoticTimings.R
> asymptoticMemoryUsage:
> https://github.com/Anirban166/testComplexity/blob/master/R/asymptoticMemoryUsage.R
>
>
> The note seems trivial but I can't seem to get rid of it. Any help would
> be appreciated.
>
> Thanks,
> Anirban
>

	[[alternative HTML version deleted]]


From djz @end|ng |rom @hmonk@com  Thu Sep  3 22:31:26 2020
From: djz @end|ng |rom @hmonk@com (Dan Zigmond)
Date: Thu, 3 Sep 2020 13:31:26 -0700
Subject: [R-pkg-devel] visible binding for '<<-' assignment
Message-ID: <CAJbAZz6P1qn8b8H+4WUzp--Y9hm8zj==VCt1nzEhxLt7kzoWAQ@mail.gmail.com>

Hi, all. I am developing a package that includes some global variables.
Because these are non-ASCII, I have escaped them. But then because these
are difficult to read, I want to provide an easy way for users to unescape
all of them up front. Thus I have code like to create and save the data in
global variables in one file:

pali_vowels <-
  c("a", "\u0101", "i", "\u012b", "u", "\u016b", "e", "o")
pali_consonants <-
  c("k", "kh", "g", "gh", "\u1e45",
    "c", "ch", "j", "jh", "\u00f1",
    "\u1e6d", "\u1e6dh", "\u1e0d", "\u1e0dh", "\u1e47",
    "t", "th", "d", "dh", "n",
    "p", "ph", "b", "bh", "m",
    "y", "r", "l", "v", "s", "h", "\u1e37", "\u1e43")
pali_alphabet <-c(pali_vowels, pali_consonants)
use_data(pali_alphabet, overwrite = TRUE)

and then I try to export a function like this in another file:

pali_string_fix <- function() {
  pali_alphabet <<-
     stringi::stri_unescape_unicode(pali_alphabet)
  # Several more of these...
  }

The idea is that users can run pali_string_fix() once when they load the
package and then they won't need to deal with all the Unicode escape
sequences after that.

However, this is getting rejected by the CRAN checks with the message:

* checking R code for possible problems ... [4s] NOTE
pali_string_fix: no visible binding for '<<-' assignment to
  'pali_alphabet'

I'm guessing this is because the data and the function are defined in
different files, so even though those globals are defined by my package,
that isn't obvious when the check is run on this code.

Does anyone have advice for how to fix this?

     Dan

.
-------------------------
Dan Zigmond
djz at shmonk.com

	[[alternative HTML version deleted]]


From c@@rd|@g@bor @end|ng |rom gm@||@com  Thu Sep  3 22:39:56 2020
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Thu, 3 Sep 2020 21:39:56 +0100
Subject: [R-pkg-devel] visible binding for '<<-' assignment
In-Reply-To: <CAJbAZz6P1qn8b8H+4WUzp--Y9hm8zj==VCt1nzEhxLt7kzoWAQ@mail.gmail.com>
References: <CAJbAZz6P1qn8b8H+4WUzp--Y9hm8zj==VCt1nzEhxLt7kzoWAQ@mail.gmail.com>
Message-ID: <CABtg=KmLs_1gJWmXkihYM-4MGvXHNq5g71kupO1o+TSS9d_-Dw@mail.gmail.com>

Store the cached data in an environment within the package:

pali_data <- new.env(parent = emptyenv())

pali_string_fix <- function() {
  pali_data$alphabet <-
     stringi::stri_unescape_unicode(pali_alphabet)
...
}

Gabor

On Thu, Sep 3, 2020 at 9:33 PM Dan Zigmond <djz at shmonk.com> wrote:
>
> Hi, all. I am developing a package that includes some global variables.
> Because these are non-ASCII, I have escaped them. But then because these
> are difficult to read, I want to provide an easy way for users to unescape
> all of them up front. Thus I have code like to create and save the data in
> global variables in one file:
>
> pali_vowels <-
>   c("a", "\u0101", "i", "\u012b", "u", "\u016b", "e", "o")
> pali_consonants <-
>   c("k", "kh", "g", "gh", "\u1e45",
>     "c", "ch", "j", "jh", "\u00f1",
>     "\u1e6d", "\u1e6dh", "\u1e0d", "\u1e0dh", "\u1e47",
>     "t", "th", "d", "dh", "n",
>     "p", "ph", "b", "bh", "m",
>     "y", "r", "l", "v", "s", "h", "\u1e37", "\u1e43")
> pali_alphabet <-c(pali_vowels, pali_consonants)
> use_data(pali_alphabet, overwrite = TRUE)
>
> and then I try to export a function like this in another file:
>
> pali_string_fix <- function() {
>   pali_alphabet <<-
>      stringi::stri_unescape_unicode(pali_alphabet)
>   # Several more of these...
>   }
>
> The idea is that users can run pali_string_fix() once when they load the
> package and then they won't need to deal with all the Unicode escape
> sequences after that.
>
> However, this is getting rejected by the CRAN checks with the message:
>
> * checking R code for possible problems ... [4s] NOTE
> pali_string_fix: no visible binding for '<<-' assignment to
>   'pali_alphabet'
>
> I'm guessing this is because the data and the function are defined in
> different files, so even though those globals are defined by my package,
> that isn't obvious when the check is run on this code.
>
> Does anyone have advice for how to fix this?
>
>      Dan
>
> .
> -------------------------
> Dan Zigmond
> djz at shmonk.com
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From djz @end|ng |rom @hmonk@com  Thu Sep  3 23:25:36 2020
From: djz @end|ng |rom @hmonk@com (Dan Zigmond)
Date: Thu, 3 Sep 2020 14:25:36 -0700
Subject: [R-pkg-devel] visible binding for '<<-' assignment
In-Reply-To: <CABtg=KmLs_1gJWmXkihYM-4MGvXHNq5g71kupO1o+TSS9d_-Dw@mail.gmail.com>
References: <CAJbAZz6P1qn8b8H+4WUzp--Y9hm8zj==VCt1nzEhxLt7kzoWAQ@mail.gmail.com>
 <CABtg=KmLs_1gJWmXkihYM-4MGvXHNq5g71kupO1o+TSS9d_-Dw@mail.gmail.com>
Message-ID: <CAJbAZz6QRCnQMEJtZSBuJFPYoja05PZuuYft1n2JrWWiZHvKYQ@mail.gmail.com>

Thanks, Gabor. I want these to be easily available to package users though
? that's why they are in the package. So I would rather not "hide" them in
a local environment. This is fundamentally a data package, so access to
this data is the primary point of installing it.

Is there any other solution?

     Dan

.
--------------------------
Dan Zigmond
djz at shmonk.com



On Thu, Sep 3, 2020 at 1:40 PM G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:

> Store the cached data in an environment within the package:
>
> pali_data <- new.env(parent = emptyenv())
>
> pali_string_fix <- function() {
>   pali_data$alphabet <-
>      stringi::stri_unescape_unicode(pali_alphabet)
> ...
> }
>
> Gabor
>
> On Thu, Sep 3, 2020 at 9:33 PM Dan Zigmond <djz at shmonk.com> wrote:
> >
> > Hi, all. I am developing a package that includes some global variables.
> > Because these are non-ASCII, I have escaped them. But then because these
> > are difficult to read, I want to provide an easy way for users to
> unescape
> > all of them up front. Thus I have code like to create and save the data
> in
> > global variables in one file:
> >
> > pali_vowels <-
> >   c("a", "\u0101", "i", "\u012b", "u", "\u016b", "e", "o")
> > pali_consonants <-
> >   c("k", "kh", "g", "gh", "\u1e45",
> >     "c", "ch", "j", "jh", "\u00f1",
> >     "\u1e6d", "\u1e6dh", "\u1e0d", "\u1e0dh", "\u1e47",
> >     "t", "th", "d", "dh", "n",
> >     "p", "ph", "b", "bh", "m",
> >     "y", "r", "l", "v", "s", "h", "\u1e37", "\u1e43")
> > pali_alphabet <-c(pali_vowels, pali_consonants)
> > use_data(pali_alphabet, overwrite = TRUE)
> >
> > and then I try to export a function like this in another file:
> >
> > pali_string_fix <- function() {
> >   pali_alphabet <<-
> >      stringi::stri_unescape_unicode(pali_alphabet)
> >   # Several more of these...
> >   }
> >
> > The idea is that users can run pali_string_fix() once when they load the
> > package and then they won't need to deal with all the Unicode escape
> > sequences after that.
> >
> > However, this is getting rejected by the CRAN checks with the message:
> >
> > * checking R code for possible problems ... [4s] NOTE
> > pali_string_fix: no visible binding for '<<-' assignment to
> >   'pali_alphabet'
> >
> > I'm guessing this is because the data and the function are defined in
> > different files, so even though those globals are defined by my package,
> > that isn't obvious when the check is run on this code.
> >
> > Does anyone have advice for how to fix this?
> >
> >      Dan
> >
> > .
> > -------------------------
> > Dan Zigmond
> > djz at shmonk.com
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From bbo|ker @end|ng |rom gm@||@com  Thu Sep  3 23:35:43 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Thu, 3 Sep 2020 17:35:43 -0400
Subject: [R-pkg-devel] visible binding for '<<-' assignment
In-Reply-To: <CAJbAZz6QRCnQMEJtZSBuJFPYoja05PZuuYft1n2JrWWiZHvKYQ@mail.gmail.com>
References: <CAJbAZz6P1qn8b8H+4WUzp--Y9hm8zj==VCt1nzEhxLt7kzoWAQ@mail.gmail.com>
 <CABtg=KmLs_1gJWmXkihYM-4MGvXHNq5g71kupO1o+TSS9d_-Dw@mail.gmail.com>
 <CAJbAZz6QRCnQMEJtZSBuJFPYoja05PZuuYft1n2JrWWiZHvKYQ@mail.gmail.com>
Message-ID: <34c8e3b0-ce52-5bf8-cc5b-616dc938ae98@gmail.com>

  Is there a reason that this slightly more explicit version wouldn't work?

pali_string_fix <- function() {
     assign("pali_alphabet", stringi::stri_unescape_unicode(pali_alphabet),
            .GlobalEnv)
}


On 9/3/20 5:25 PM, Dan Zigmond wrote:
> Thanks, Gabor. I want these to be easily available to package users though
> ? that's why they are in the package. So I would rather not "hide" them in
> a local environment. This is fundamentally a data package, so access to
> this data is the primary point of installing it.
> 
> Is there any other solution?
> 
>       Dan
> 
> .
> --------------------------
> Dan Zigmond
> djz at shmonk.com
> 
> 
> 
> On Thu, Sep 3, 2020 at 1:40 PM G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:
> 
>> Store the cached data in an environment within the package:
>>
>> pali_data <- new.env(parent = emptyenv())
>>
>> pali_string_fix <- function() {
>>    pali_data$alphabet <-
>>       stringi::stri_unescape_unicode(pali_alphabet)
>> ...
>> }
>>
>> Gabor
>>
>> On Thu, Sep 3, 2020 at 9:33 PM Dan Zigmond <djz at shmonk.com> wrote:
>>>
>>> Hi, all. I am developing a package that includes some global variables.
>>> Because these are non-ASCII, I have escaped them. But then because these
>>> are difficult to read, I want to provide an easy way for users to
>> unescape
>>> all of them up front. Thus I have code like to create and save the data
>> in
>>> global variables in one file:
>>>
>>> pali_vowels <-
>>>    c("a", "\u0101", "i", "\u012b", "u", "\u016b", "e", "o")
>>> pali_consonants <-
>>>    c("k", "kh", "g", "gh", "\u1e45",
>>>      "c", "ch", "j", "jh", "\u00f1",
>>>      "\u1e6d", "\u1e6dh", "\u1e0d", "\u1e0dh", "\u1e47",
>>>      "t", "th", "d", "dh", "n",
>>>      "p", "ph", "b", "bh", "m",
>>>      "y", "r", "l", "v", "s", "h", "\u1e37", "\u1e43")
>>> pali_alphabet <-c(pali_vowels, pali_consonants)
>>> use_data(pali_alphabet, overwrite = TRUE)
>>>
>>> and then I try to export a function like this in another file:
>>>
>>> pali_string_fix <- function() {
>>>    pali_alphabet <<-
>>>       stringi::stri_unescape_unicode(pali_alphabet)
>>>    # Several more of these...
>>>    }
>>>
>>> The idea is that users can run pali_string_fix() once when they load the
>>> package and then they won't need to deal with all the Unicode escape
>>> sequences after that.
>>>
>>> However, this is getting rejected by the CRAN checks with the message:
>>>
>>> * checking R code for possible problems ... [4s] NOTE
>>> pali_string_fix: no visible binding for '<<-' assignment to
>>>    'pali_alphabet'
>>>
>>> I'm guessing this is because the data and the function are defined in
>>> different files, so even though those globals are defined by my package,
>>> that isn't obvious when the check is run on this code.
>>>
>>> Does anyone have advice for how to fix this?
>>>
>>>       Dan
>>>
>>> .
>>> -------------------------
>>> Dan Zigmond
>>> djz at shmonk.com
>>>
>>>          [[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From jo@h@m@u|r|ch @end|ng |rom gm@||@com  Thu Sep  3 23:37:30 2020
From: jo@h@m@u|r|ch @end|ng |rom gm@||@com (Joshua Ulrich)
Date: Thu, 3 Sep 2020 16:37:30 -0500
Subject: [R-pkg-devel] visible binding for '<<-' assignment
In-Reply-To: <34c8e3b0-ce52-5bf8-cc5b-616dc938ae98@gmail.com>
References: <CAJbAZz6P1qn8b8H+4WUzp--Y9hm8zj==VCt1nzEhxLt7kzoWAQ@mail.gmail.com>
 <CABtg=KmLs_1gJWmXkihYM-4MGvXHNq5g71kupO1o+TSS9d_-Dw@mail.gmail.com>
 <CAJbAZz6QRCnQMEJtZSBuJFPYoja05PZuuYft1n2JrWWiZHvKYQ@mail.gmail.com>
 <34c8e3b0-ce52-5bf8-cc5b-616dc938ae98@gmail.com>
Message-ID: <CAPPM_gR5XWv8pO7nSNemKd5hKFeLKgJsPvq6w99UzbzADOzptA@mail.gmail.com>

On Thu, Sep 3, 2020 at 4:36 PM Ben Bolker <bbolker at gmail.com> wrote:
>
>   Is there a reason that this slightly more explicit version wouldn't work?
>
> pali_string_fix <- function() {
>      assign("pali_alphabet", stringi::stri_unescape_unicode(pali_alphabet),
>             .GlobalEnv)
> }
>
Using assign will also cause R CMD check to throw a NOTE that you will
need to explain upon pkg submission to CRAN.

>
> On 9/3/20 5:25 PM, Dan Zigmond wrote:
> > Thanks, Gabor. I want these to be easily available to package users though
> > ? that's why they are in the package. So I would rather not "hide" them in
> > a local environment. This is fundamentally a data package, so access to
> > this data is the primary point of installing it.
> >
> > Is there any other solution?
> >
> >       Dan
> >
> > .
> > --------------------------
> > Dan Zigmond
> > djz at shmonk.com
> >
> >
> >
> > On Thu, Sep 3, 2020 at 1:40 PM G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:
> >
> >> Store the cached data in an environment within the package:
> >>
> >> pali_data <- new.env(parent = emptyenv())
> >>
> >> pali_string_fix <- function() {
> >>    pali_data$alphabet <-
> >>       stringi::stri_unescape_unicode(pali_alphabet)
> >> ...
> >> }
> >>
> >> Gabor
> >>
> >> On Thu, Sep 3, 2020 at 9:33 PM Dan Zigmond <djz at shmonk.com> wrote:
> >>>
> >>> Hi, all. I am developing a package that includes some global variables.
> >>> Because these are non-ASCII, I have escaped them. But then because these
> >>> are difficult to read, I want to provide an easy way for users to
> >> unescape
> >>> all of them up front. Thus I have code like to create and save the data
> >> in
> >>> global variables in one file:
> >>>
> >>> pali_vowels <-
> >>>    c("a", "\u0101", "i", "\u012b", "u", "\u016b", "e", "o")
> >>> pali_consonants <-
> >>>    c("k", "kh", "g", "gh", "\u1e45",
> >>>      "c", "ch", "j", "jh", "\u00f1",
> >>>      "\u1e6d", "\u1e6dh", "\u1e0d", "\u1e0dh", "\u1e47",
> >>>      "t", "th", "d", "dh", "n",
> >>>      "p", "ph", "b", "bh", "m",
> >>>      "y", "r", "l", "v", "s", "h", "\u1e37", "\u1e43")
> >>> pali_alphabet <-c(pali_vowels, pali_consonants)
> >>> use_data(pali_alphabet, overwrite = TRUE)
> >>>
> >>> and then I try to export a function like this in another file:
> >>>
> >>> pali_string_fix <- function() {
> >>>    pali_alphabet <<-
> >>>       stringi::stri_unescape_unicode(pali_alphabet)
> >>>    # Several more of these...
> >>>    }
> >>>
> >>> The idea is that users can run pali_string_fix() once when they load the
> >>> package and then they won't need to deal with all the Unicode escape
> >>> sequences after that.
> >>>
> >>> However, this is getting rejected by the CRAN checks with the message:
> >>>
> >>> * checking R code for possible problems ... [4s] NOTE
> >>> pali_string_fix: no visible binding for '<<-' assignment to
> >>>    'pali_alphabet'
> >>>
> >>> I'm guessing this is because the data and the function are defined in
> >>> different files, so even though those globals are defined by my package,
> >>> that isn't obvious when the check is run on this code.
> >>>
> >>> Does anyone have advice for how to fix this?
> >>>
> >>>       Dan
> >>>
> >>> .
> >>> -------------------------
> >>> Dan Zigmond
> >>> djz at shmonk.com
> >>>
> >>>          [[alternative HTML version deleted]]
> >>>
> >>> ______________________________________________
> >>> R-package-devel at r-project.org mailing list
> >>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel



-- 
Joshua Ulrich  |  about.me/joshuaulrich
FOSS Trading  |  www.fosstrading.com


From wdun|@p @end|ng |rom t|bco@com  Thu Sep  3 23:46:59 2020
From: wdun|@p @end|ng |rom t|bco@com (William Dunlap)
Date: Thu, 3 Sep 2020 14:46:59 -0700
Subject: [R-pkg-devel] visible binding for '<<-' assignment
In-Reply-To: <34c8e3b0-ce52-5bf8-cc5b-616dc938ae98@gmail.com>
References: <CAJbAZz6P1qn8b8H+4WUzp--Y9hm8zj==VCt1nzEhxLt7kzoWAQ@mail.gmail.com>
 <CABtg=KmLs_1gJWmXkihYM-4MGvXHNq5g71kupO1o+TSS9d_-Dw@mail.gmail.com>
 <CAJbAZz6QRCnQMEJtZSBuJFPYoja05PZuuYft1n2JrWWiZHvKYQ@mail.gmail.com>
 <34c8e3b0-ce52-5bf8-cc5b-616dc938ae98@gmail.com>
Message-ID: <CAF8bMcY0ELXz2e-mXPDfOaDNQcGmnY8Hn_aeGTHkxUpnbkzntg@mail.gmail.com>

> Is there a reason that this slightly more explicit
> version [assign(envir=.GlobalEnv)] wouldn't work?

https://cran.r-project.org/web/packages/policies.html
- Packages should not modify the global environment (user?s workspace).

Bill Dunlap
TIBCO Software
wdunlap tibco.com

On Thu, Sep 3, 2020 at 2:36 PM Ben Bolker <bbolker at gmail.com> wrote:
>
>   Is there a reason that this slightly more explicit version wouldn't work?
>
> pali_string_fix <- function() {
>      assign("pali_alphabet", stringi::stri_unescape_unicode(pali_alphabet),
>             .GlobalEnv)
> }
>
>
> On 9/3/20 5:25 PM, Dan Zigmond wrote:
> > Thanks, Gabor. I want these to be easily available to package users though
> > ? that's why they are in the package. So I would rather not "hide" them in
> > a local environment. This is fundamentally a data package, so access to
> > this data is the primary point of installing it.
> >
> > Is there any other solution?
> >
> >       Dan
> >
> > .
> > --------------------------
> > Dan Zigmond
> > djz at shmonk.com
> >
> >
> >
> > On Thu, Sep 3, 2020 at 1:40 PM G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:
> >
> >> Store the cached data in an environment within the package:
> >>
> >> pali_data <- new.env(parent = emptyenv())
> >>
> >> pali_string_fix <- function() {
> >>    pali_data$alphabet <-
> >>       stringi::stri_unescape_unicode(pali_alphabet)
> >> ...
> >> }
> >>
> >> Gabor
> >>
> >> On Thu, Sep 3, 2020 at 9:33 PM Dan Zigmond <djz at shmonk.com> wrote:
> >>>
> >>> Hi, all. I am developing a package that includes some global variables.
> >>> Because these are non-ASCII, I have escaped them. But then because these
> >>> are difficult to read, I want to provide an easy way for users to
> >> unescape
> >>> all of them up front. Thus I have code like to create and save the data
> >> in
> >>> global variables in one file:
> >>>
> >>> pali_vowels <-
> >>>    c("a", "\u0101", "i", "\u012b", "u", "\u016b", "e", "o")
> >>> pali_consonants <-
> >>>    c("k", "kh", "g", "gh", "\u1e45",
> >>>      "c", "ch", "j", "jh", "\u00f1",
> >>>      "\u1e6d", "\u1e6dh", "\u1e0d", "\u1e0dh", "\u1e47",
> >>>      "t", "th", "d", "dh", "n",
> >>>      "p", "ph", "b", "bh", "m",
> >>>      "y", "r", "l", "v", "s", "h", "\u1e37", "\u1e43")
> >>> pali_alphabet <-c(pali_vowels, pali_consonants)
> >>> use_data(pali_alphabet, overwrite = TRUE)
> >>>
> >>> and then I try to export a function like this in another file:
> >>>
> >>> pali_string_fix <- function() {
> >>>    pali_alphabet <<-
> >>>       stringi::stri_unescape_unicode(pali_alphabet)
> >>>    # Several more of these...
> >>>    }
> >>>
> >>> The idea is that users can run pali_string_fix() once when they load the
> >>> package and then they won't need to deal with all the Unicode escape
> >>> sequences after that.
> >>>
> >>> However, this is getting rejected by the CRAN checks with the message:
> >>>
> >>> * checking R code for possible problems ... [4s] NOTE
> >>> pali_string_fix: no visible binding for '<<-' assignment to
> >>>    'pali_alphabet'
> >>>
> >>> I'm guessing this is because the data and the function are defined in
> >>> different files, so even though those globals are defined by my package,
> >>> that isn't obvious when the check is run on this code.
> >>>
> >>> Does anyone have advice for how to fix this?
> >>>
> >>>       Dan
> >>>
> >>> .
> >>> -------------------------
> >>> Dan Zigmond
> >>> djz at shmonk.com
> >>>
> >>>          [[alternative HTML version deleted]]
> >>>
> >>> ______________________________________________
> >>> R-package-devel at r-project.org mailing list
> >>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From djz @end|ng |rom @hmonk@com  Thu Sep  3 23:48:05 2020
From: djz @end|ng |rom @hmonk@com (Dan Zigmond)
Date: Thu, 3 Sep 2020 14:48:05 -0700
Subject: [R-pkg-devel] visible binding for '<<-' assignment
In-Reply-To: <CAPPM_gR5XWv8pO7nSNemKd5hKFeLKgJsPvq6w99UzbzADOzptA@mail.gmail.com>
References: <CAJbAZz6P1qn8b8H+4WUzp--Y9hm8zj==VCt1nzEhxLt7kzoWAQ@mail.gmail.com>
 <CABtg=KmLs_1gJWmXkihYM-4MGvXHNq5g71kupO1o+TSS9d_-Dw@mail.gmail.com>
 <CAJbAZz6QRCnQMEJtZSBuJFPYoja05PZuuYft1n2JrWWiZHvKYQ@mail.gmail.com>
 <34c8e3b0-ce52-5bf8-cc5b-616dc938ae98@gmail.com>
 <CAPPM_gR5XWv8pO7nSNemKd5hKFeLKgJsPvq6w99UzbzADOzptA@mail.gmail.com>
Message-ID: <CAJbAZz4K52m-eW9np-oK9ZHLznSrmc1O=JS-6qcFAP2y08sHDw@mail.gmail.com>

Given that both trigger a NOTE, is there a reason to favor the assign
solution over just using <<-?

     Dan

.
--------------------------
Dan Zigmond
djz at shmonk.com



On Thu, Sep 3, 2020 at 2:46 PM Joshua Ulrich <josh.m.ulrich at gmail.com>
wrote:

> On Thu, Sep 3, 2020 at 4:36 PM Ben Bolker <bbolker at gmail.com> wrote:
> >
> >   Is there a reason that this slightly more explicit version wouldn't
> work?
> >
> > pali_string_fix <- function() {
> >      assign("pali_alphabet",
> stringi::stri_unescape_unicode(pali_alphabet),
> >             .GlobalEnv)
> > }
> >
> Using assign will also cause R CMD check to throw a NOTE that you will
> need to explain upon pkg submission to CRAN.
>
> >
> > On 9/3/20 5:25 PM, Dan Zigmond wrote:
> > > Thanks, Gabor. I want these to be easily available to package users
> though
> > > ? that's why they are in the package. So I would rather not "hide"
> them in
> > > a local environment. This is fundamentally a data package, so access to
> > > this data is the primary point of installing it.
> > >
> > > Is there any other solution?
> > >
> > >       Dan
> > >
> > > .
> > > --------------------------
> > > Dan Zigmond
> > > djz at shmonk.com
> > >
> > >
> > >
> > > On Thu, Sep 3, 2020 at 1:40 PM G?bor Cs?rdi <csardi.gabor at gmail.com>
> wrote:
> > >
> > >> Store the cached data in an environment within the package:
> > >>
> > >> pali_data <- new.env(parent = emptyenv())
> > >>
> > >> pali_string_fix <- function() {
> > >>    pali_data$alphabet <-
> > >>       stringi::stri_unescape_unicode(pali_alphabet)
> > >> ...
> > >> }
> > >>
> > >> Gabor
> > >>
> > >> On Thu, Sep 3, 2020 at 9:33 PM Dan Zigmond <djz at shmonk.com> wrote:
> > >>>
> > >>> Hi, all. I am developing a package that includes some global
> variables.
> > >>> Because these are non-ASCII, I have escaped them. But then because
> these
> > >>> are difficult to read, I want to provide an easy way for users to
> > >> unescape
> > >>> all of them up front. Thus I have code like to create and save the
> data
> > >> in
> > >>> global variables in one file:
> > >>>
> > >>> pali_vowels <-
> > >>>    c("a", "\u0101", "i", "\u012b", "u", "\u016b", "e", "o")
> > >>> pali_consonants <-
> > >>>    c("k", "kh", "g", "gh", "\u1e45",
> > >>>      "c", "ch", "j", "jh", "\u00f1",
> > >>>      "\u1e6d", "\u1e6dh", "\u1e0d", "\u1e0dh", "\u1e47",
> > >>>      "t", "th", "d", "dh", "n",
> > >>>      "p", "ph", "b", "bh", "m",
> > >>>      "y", "r", "l", "v", "s", "h", "\u1e37", "\u1e43")
> > >>> pali_alphabet <-c(pali_vowels, pali_consonants)
> > >>> use_data(pali_alphabet, overwrite = TRUE)
> > >>>
> > >>> and then I try to export a function like this in another file:
> > >>>
> > >>> pali_string_fix <- function() {
> > >>>    pali_alphabet <<-
> > >>>       stringi::stri_unescape_unicode(pali_alphabet)
> > >>>    # Several more of these...
> > >>>    }
> > >>>
> > >>> The idea is that users can run pali_string_fix() once when they load
> the
> > >>> package and then they won't need to deal with all the Unicode escape
> > >>> sequences after that.
> > >>>
> > >>> However, this is getting rejected by the CRAN checks with the
> message:
> > >>>
> > >>> * checking R code for possible problems ... [4s] NOTE
> > >>> pali_string_fix: no visible binding for '<<-' assignment to
> > >>>    'pali_alphabet'
> > >>>
> > >>> I'm guessing this is because the data and the function are defined in
> > >>> different files, so even though those globals are defined by my
> package,
> > >>> that isn't obvious when the check is run on this code.
> > >>>
> > >>> Does anyone have advice for how to fix this?
> > >>>
> > >>>       Dan
> > >>>
> > >>> .
> > >>> -------------------------
> > >>> Dan Zigmond
> > >>> djz at shmonk.com
> > >>>
> > >>>          [[alternative HTML version deleted]]
> > >>>
> > >>> ______________________________________________
> > >>> R-package-devel at r-project.org mailing list
> > >>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> > >>
> > >
> > >       [[alternative HTML version deleted]]
> > >
> > > ______________________________________________
> > > R-package-devel at r-project.org mailing list
> > > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> > >
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>
>
> --
> Joshua Ulrich  |  about.me/joshuaulrich
> FOSS Trading  |  www.fosstrading.com
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu Sep  3 23:50:52 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 3 Sep 2020 17:50:52 -0400
Subject: [R-pkg-devel] visible binding for '<<-' assignment
In-Reply-To: <CAJbAZz6P1qn8b8H+4WUzp--Y9hm8zj==VCt1nzEhxLt7kzoWAQ@mail.gmail.com>
References: <CAJbAZz6P1qn8b8H+4WUzp--Y9hm8zj==VCt1nzEhxLt7kzoWAQ@mail.gmail.com>
Message-ID: <5c9e5c21-fb59-9ca2-09b3-9b79fa64d389@gmail.com>

On 03/09/2020 4:31 p.m., Dan Zigmond wrote:
> Hi, all. I am developing a package that includes some global variables.
> Because these are non-ASCII, I have escaped them. But then because these
> are difficult to read, I want to provide an easy way for users to unescape
> all of them up front. Thus I have code like to create and save the data in
> global variables in one file:
> 
> pali_vowels <-
>    c("a", "\u0101", "i", "\u012b", "u", "\u016b", "e", "o")
> pali_consonants <-
>    c("k", "kh", "g", "gh", "\u1e45",
>      "c", "ch", "j", "jh", "\u00f1",
>      "\u1e6d", "\u1e6dh", "\u1e0d", "\u1e0dh", "\u1e47",
>      "t", "th", "d", "dh", "n",
>      "p", "ph", "b", "bh", "m",
>      "y", "r", "l", "v", "s", "h", "\u1e37", "\u1e43")
> pali_alphabet <-c(pali_vowels, pali_consonants)
> use_data(pali_alphabet, overwrite = TRUE)
> 
> and then I try to export a function like this in another file:
> 
> pali_string_fix <- function() {
>    pali_alphabet <<-
>       stringi::stri_unescape_unicode(pali_alphabet)
>    # Several more of these...
>    }
> 
> The idea is that users can run pali_string_fix() once when they load the
> package and then they won't need to deal with all the Unicode escape
> sequences after that.

You shouldn't be doing that.  Write a function that returns those 
results, and tell the user that if they store them in a global variable 
named "string_fixes" (or whatever), then your function will use their 
values instead of your own built in ones.  You should never write to the 
global environment, but you can read from it.

Duncan Murdoch
> 
> However, this is getting rejected by the CRAN checks with the message:
> 
> * checking R code for possible problems ... [4s] NOTE
> pali_string_fix: no visible binding for '<<-' assignment to
>    'pali_alphabet'
> 
> I'm guessing this is because the data and the function are defined in
> different files, so even though those globals are defined by my package,
> that isn't obvious when the check is run on this code.
> 
> Does anyone have advice for how to fix this?
> 
>       Dan
> 
> .
> -------------------------
> Dan Zigmond
> djz at shmonk.com
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From djz @end|ng |rom @hmonk@com  Thu Sep  3 23:59:10 2020
From: djz @end|ng |rom @hmonk@com (Dan Zigmond)
Date: Thu, 3 Sep 2020 14:59:10 -0700
Subject: [R-pkg-devel] visible binding for '<<-' assignment
In-Reply-To: <CAF8bMcY0ELXz2e-mXPDfOaDNQcGmnY8Hn_aeGTHkxUpnbkzntg@mail.gmail.com>
References: <CAJbAZz6P1qn8b8H+4WUzp--Y9hm8zj==VCt1nzEhxLt7kzoWAQ@mail.gmail.com>
 <CABtg=KmLs_1gJWmXkihYM-4MGvXHNq5g71kupO1o+TSS9d_-Dw@mail.gmail.com>
 <CAJbAZz6QRCnQMEJtZSBuJFPYoja05PZuuYft1n2JrWWiZHvKYQ@mail.gmail.com>
 <34c8e3b0-ce52-5bf8-cc5b-616dc938ae98@gmail.com>
 <CAF8bMcY0ELXz2e-mXPDfOaDNQcGmnY8Hn_aeGTHkxUpnbkzntg@mail.gmail.com>
Message-ID: <CAJbAZz7K4AYA++zMT=YCwBkz0SufqwajX_+-1Miwju=WA9o-Ug@mail.gmail.com>

I get that, but these variables are created by the package. It's a data
package so the whole point is to provide access to the data. I'm just
trying to provide an option to make the data more readable since I can't
include Unicode strings directly in the package. In other words, these
variables (eg, pali_alphabet) will already exist when the user attaches the
package ? but is there a way I can tweak them after the package has been
loaded?

     Dan

.
--------------------------
Dan Zigmond
djz at shmonk.com



On Thu, Sep 3, 2020 at 2:56 PM William Dunlap <wdunlap at tibco.com> wrote:

> > Is there a reason that this slightly more explicit
> > version [assign(envir=.GlobalEnv)] wouldn't work?
>
> https://cran.r-project.org/web/packages/policies.html
> - Packages should not modify the global environment (user?s workspace).
>
> Bill Dunlap
> TIBCO Software
> wdunlap tibco.com
>
> On Thu, Sep 3, 2020 at 2:36 PM Ben Bolker <bbolker at gmail.com> wrote:
> >
> >   Is there a reason that this slightly more explicit version wouldn't
> work?
> >
> > pali_string_fix <- function() {
> >      assign("pali_alphabet",
> stringi::stri_unescape_unicode(pali_alphabet),
> >             .GlobalEnv)
> > }
> >
> >
> > On 9/3/20 5:25 PM, Dan Zigmond wrote:
> > > Thanks, Gabor. I want these to be easily available to package users
> though
> > > ? that's why they are in the package. So I would rather not "hide"
> them in
> > > a local environment. This is fundamentally a data package, so access to
> > > this data is the primary point of installing it.
> > >
> > > Is there any other solution?
> > >
> > >       Dan
> > >
> > > .
> > > --------------------------
> > > Dan Zigmond
> > > djz at shmonk.com
> > >
> > >
> > >
> > > On Thu, Sep 3, 2020 at 1:40 PM G?bor Cs?rdi <csardi.gabor at gmail.com>
> wrote:
> > >
> > >> Store the cached data in an environment within the package:
> > >>
> > >> pali_data <- new.env(parent = emptyenv())
> > >>
> > >> pali_string_fix <- function() {
> > >>    pali_data$alphabet <-
> > >>       stringi::stri_unescape_unicode(pali_alphabet)
> > >> ...
> > >> }
> > >>
> > >> Gabor
> > >>
> > >> On Thu, Sep 3, 2020 at 9:33 PM Dan Zigmond <djz at shmonk.com> wrote:
> > >>>
> > >>> Hi, all. I am developing a package that includes some global
> variables.
> > >>> Because these are non-ASCII, I have escaped them. But then because
> these
> > >>> are difficult to read, I want to provide an easy way for users to
> > >> unescape
> > >>> all of them up front. Thus I have code like to create and save the
> data
> > >> in
> > >>> global variables in one file:
> > >>>
> > >>> pali_vowels <-
> > >>>    c("a", "\u0101", "i", "\u012b", "u", "\u016b", "e", "o")
> > >>> pali_consonants <-
> > >>>    c("k", "kh", "g", "gh", "\u1e45",
> > >>>      "c", "ch", "j", "jh", "\u00f1",
> > >>>      "\u1e6d", "\u1e6dh", "\u1e0d", "\u1e0dh", "\u1e47",
> > >>>      "t", "th", "d", "dh", "n",
> > >>>      "p", "ph", "b", "bh", "m",
> > >>>      "y", "r", "l", "v", "s", "h", "\u1e37", "\u1e43")
> > >>> pali_alphabet <-c(pali_vowels, pali_consonants)
> > >>> use_data(pali_alphabet, overwrite = TRUE)
> > >>>
> > >>> and then I try to export a function like this in another file:
> > >>>
> > >>> pali_string_fix <- function() {
> > >>>    pali_alphabet <<-
> > >>>       stringi::stri_unescape_unicode(pali_alphabet)
> > >>>    # Several more of these...
> > >>>    }
> > >>>
> > >>> The idea is that users can run pali_string_fix() once when they load
> the
> > >>> package and then they won't need to deal with all the Unicode escape
> > >>> sequences after that.
> > >>>
> > >>> However, this is getting rejected by the CRAN checks with the
> message:
> > >>>
> > >>> * checking R code for possible problems ... [4s] NOTE
> > >>> pali_string_fix: no visible binding for '<<-' assignment to
> > >>>    'pali_alphabet'
> > >>>
> > >>> I'm guessing this is because the data and the function are defined in
> > >>> different files, so even though those globals are defined by my
> package,
> > >>> that isn't obvious when the check is run on this code.
> > >>>
> > >>> Does anyone have advice for how to fix this?
> > >>>
> > >>>       Dan
> > >>>
> > >>> .
> > >>> -------------------------
> > >>> Dan Zigmond
> > >>> djz at shmonk.com
> > >>>
> > >>>          [[alternative HTML version deleted]]
> > >>>
> > >>> ______________________________________________
> > >>> R-package-devel at r-project.org mailing list
> > >>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> > >>
> > >
> > >       [[alternative HTML version deleted]]
> > >
> > > ______________________________________________
> > > R-package-devel at r-project.org mailing list
> > > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> > >
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From c@@rd|@g@bor @end|ng |rom gm@||@com  Thu Sep  3 23:59:11 2020
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Thu, 3 Sep 2020 22:59:11 +0100
Subject: [R-pkg-devel] visible binding for '<<-' assignment
In-Reply-To: <CAJbAZz6QRCnQMEJtZSBuJFPYoja05PZuuYft1n2JrWWiZHvKYQ@mail.gmail.com>
References: <CAJbAZz6P1qn8b8H+4WUzp--Y9hm8zj==VCt1nzEhxLt7kzoWAQ@mail.gmail.com>
 <CABtg=KmLs_1gJWmXkihYM-4MGvXHNq5g71kupO1o+TSS9d_-Dw@mail.gmail.com>
 <CAJbAZz6QRCnQMEJtZSBuJFPYoja05PZuuYft1n2JrWWiZHvKYQ@mail.gmail.com>
Message-ID: <CABtg=KkbnMUGPuM47JBLi19Kopx3oTACNkvP9vryKG9tu0PgwA@mail.gmail.com>

On Thu, Sep 3, 2020 at 10:25 PM Dan Zigmond <djz at shmonk.com> wrote:
>
> Thanks, Gabor. I want these to be easily available to package users though ? that's why they are in the package. So I would rather not "hide" them in a local environment. This is fundamentally a data package, so access to this data is the primary point of installing it.

Well, if you want to put a cache in a package, then the way I showed
you works well.

Possibly more importantly, maybe I misunderstood something, but
stringi::stri_unescape_unicode() is not doing anything or your
character vectors, because they do not contain escaped characters:

fixed <- stringi::stri_unescape_unicode(pali_alphabet)
identical(pali_alphabet, fixed)
#> TRUE

Gabor

> Is there any other solution?
>
>      Dan
>
> .
> --------------------------
> Dan Zigmond
> djz at shmonk.com
>
>
>
> On Thu, Sep 3, 2020 at 1:40 PM G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:
>>
>> Store the cached data in an environment within the package:
>>
>> pali_data <- new.env(parent = emptyenv())
>>
>> pali_string_fix <- function() {
>>   pali_data$alphabet <-
>>      stringi::stri_unescape_unicode(pali_alphabet)
>> ...
>> }
>>
>> Gabor
>>
>> On Thu, Sep 3, 2020 at 9:33 PM Dan Zigmond <djz at shmonk.com> wrote:
>> >
>> > Hi, all. I am developing a package that includes some global variables.
>> > Because these are non-ASCII, I have escaped them. But then because these
>> > are difficult to read, I want to provide an easy way for users to unescape
>> > all of them up front. Thus I have code like to create and save the data in
>> > global variables in one file:
>> >
>> > pali_vowels <-
>> >   c("a", "\u0101", "i", "\u012b", "u", "\u016b", "e", "o")
>> > pali_consonants <-
>> >   c("k", "kh", "g", "gh", "\u1e45",
>> >     "c", "ch", "j", "jh", "\u00f1",
>> >     "\u1e6d", "\u1e6dh", "\u1e0d", "\u1e0dh", "\u1e47",
>> >     "t", "th", "d", "dh", "n",
>> >     "p", "ph", "b", "bh", "m",
>> >     "y", "r", "l", "v", "s", "h", "\u1e37", "\u1e43")
>> > pali_alphabet <-c(pali_vowels, pali_consonants)
>> > use_data(pali_alphabet, overwrite = TRUE)
>> >
>> > and then I try to export a function like this in another file:
>> >
>> > pali_string_fix <- function() {
>> >   pali_alphabet <<-
>> >      stringi::stri_unescape_unicode(pali_alphabet)
>> >   # Several more of these...
>> >   }
>> >
>> > The idea is that users can run pali_string_fix() once when they load the
>> > package and then they won't need to deal with all the Unicode escape
>> > sequences after that.
>> >
>> > However, this is getting rejected by the CRAN checks with the message:
>> >
>> > * checking R code for possible problems ... [4s] NOTE
>> > pali_string_fix: no visible binding for '<<-' assignment to
>> >   'pali_alphabet'
>> >
>> > I'm guessing this is because the data and the function are defined in
>> > different files, so even though those globals are defined by my package,
>> > that isn't obvious when the check is run on this code.
>> >
>> > Does anyone have advice for how to fix this?
>> >
>> >      Dan
>> >
>> > .
>> > -------------------------
>> > Dan Zigmond
>> > djz at shmonk.com
>> >
>> >         [[alternative HTML version deleted]]
>> >
>> > ______________________________________________
>> > R-package-devel at r-project.org mailing list
>> > https://stat.ethz.ch/mailman/listinfo/r-package-devel


From bbo|ker @end|ng |rom gm@||@com  Fri Sep  4 00:05:25 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Thu, 3 Sep 2020 18:05:25 -0400
Subject: [R-pkg-devel] visible binding for '<<-' assignment
In-Reply-To: <CAJbAZz6P1qn8b8H+4WUzp--Y9hm8zj==VCt1nzEhxLt7kzoWAQ@mail.gmail.com>
References: <CAJbAZz6P1qn8b8H+4WUzp--Y9hm8zj==VCt1nzEhxLt7kzoWAQ@mail.gmail.com>
Message-ID: <12f93f8e-0909-dd6b-4aa8-5a02e8f50bef@gmail.com>

   OK, trying again.

   Would it work to save the unescaped versions in a .RData file as in 
https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Data-in-packages 
?  Presumably the problems with non-ASCII variables arise when they show 
up in a text-format (e.g. .R) file, not when they are read from a 
binary-format file?

   Then, if you use LazyData: yes in the DESCRIPTION file (this may be 
the default?), these should automatically be accessible to users when 
the package is loaded?


On 9/3/20 4:31 PM, Dan Zigmond wrote:
> Hi, all. I am developing a package that includes some global variables.
> Because these are non-ASCII, I have escaped them. But then because these
> are difficult to read, I want to provide an easy way for users to unescape
> all of them up front. Thus I have code like to create and save the data in
> global variables in one file:
> 
> pali_vowels <-
>    c("a", "\u0101", "i", "\u012b", "u", "\u016b", "e", "o")
> pali_consonants <-
>    c("k", "kh", "g", "gh", "\u1e45",
>      "c", "ch", "j", "jh", "\u00f1",
>      "\u1e6d", "\u1e6dh", "\u1e0d", "\u1e0dh", "\u1e47",
>      "t", "th", "d", "dh", "n",
>      "p", "ph", "b", "bh", "m",
>      "y", "r", "l", "v", "s", "h", "\u1e37", "\u1e43")
> pali_alphabet <-c(pali_vowels, pali_consonants)
> use_data(pali_alphabet, overwrite = TRUE)
> 
> and then I try to export a function like this in another file:
> 
> pali_string_fix <- function() {
>    pali_alphabet <<-
>       stringi::stri_unescape_unicode(pali_alphabet)
>    # Several more of these...
>    }
> 
> The idea is that users can run pali_string_fix() once when they load the
> package and then they won't need to deal with all the Unicode escape
> sequences after that.
> 
> However, this is getting rejected by the CRAN checks with the message:
> 
> * checking R code for possible problems ... [4s] NOTE
> pali_string_fix: no visible binding for '<<-' assignment to
>    'pali_alphabet'
> 
> I'm guessing this is because the data and the function are defined in
> different files, so even though those globals are defined by my package,
> that isn't obvious when the check is run on this code.
> 
> Does anyone have advice for how to fix this?
> 
>       Dan
> 
> .
> -------------------------
> Dan Zigmond
> djz at shmonk.com
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From djz @end|ng |rom @hmonk@com  Fri Sep  4 00:25:23 2020
From: djz @end|ng |rom @hmonk@com (Dan Zigmond)
Date: Thu, 3 Sep 2020 15:25:23 -0700
Subject: [R-pkg-devel] visible binding for '<<-' assignment
In-Reply-To: <CABtg=KkbnMUGPuM47JBLi19Kopx3oTACNkvP9vryKG9tu0PgwA@mail.gmail.com>
References: <CAJbAZz6P1qn8b8H+4WUzp--Y9hm8zj==VCt1nzEhxLt7kzoWAQ@mail.gmail.com>
 <CABtg=KmLs_1gJWmXkihYM-4MGvXHNq5g71kupO1o+TSS9d_-Dw@mail.gmail.com>
 <CAJbAZz6QRCnQMEJtZSBuJFPYoja05PZuuYft1n2JrWWiZHvKYQ@mail.gmail.com>
 <CABtg=KkbnMUGPuM47JBLi19Kopx3oTACNkvP9vryKG9tu0PgwA@mail.gmail.com>
Message-ID: <CAJbAZz6t7VbNvYM8O9ueR8HZopKXWE8FkPU_U1skL+PnywoTGQ@mail.gmail.com>

I chose a bad example. :-) Trust me that I have a bunch of strings with
escaped Unicode.

It seems the consensus is that I should not try to do what I'm trying to
do. I think instead I'll just document how users can fix the escaping if
they want to, since it's not very hard anyway.

     Dan

.
--------------------------
Dan Zigmond
djz at shmonk.com



On Thu, Sep 3, 2020 at 2:59 PM G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:

> On Thu, Sep 3, 2020 at 10:25 PM Dan Zigmond <djz at shmonk.com> wrote:
> >
> > Thanks, Gabor. I want these to be easily available to package users
> though ? that's why they are in the package. So I would rather not "hide"
> them in a local environment. This is fundamentally a data package, so
> access to this data is the primary point of installing it.
>
> Well, if you want to put a cache in a package, then the way I showed
> you works well.
>
> Possibly more importantly, maybe I misunderstood something, but
> stringi::stri_unescape_unicode() is not doing anything or your
> character vectors, because they do not contain escaped characters:
>
> fixed <- stringi::stri_unescape_unicode(pali_alphabet)
> identical(pali_alphabet, fixed)
> #> TRUE
>
> Gabor
>
> > Is there any other solution?
> >
> >      Dan
> >
> > .
> > --------------------------
> > Dan Zigmond
> > djz at shmonk.com
> >
> >
> >
> > On Thu, Sep 3, 2020 at 1:40 PM G?bor Cs?rdi <csardi.gabor at gmail.com>
> wrote:
> >>
> >> Store the cached data in an environment within the package:
> >>
> >> pali_data <- new.env(parent = emptyenv())
> >>
> >> pali_string_fix <- function() {
> >>   pali_data$alphabet <-
> >>      stringi::stri_unescape_unicode(pali_alphabet)
> >> ...
> >> }
> >>
> >> Gabor
> >>
> >> On Thu, Sep 3, 2020 at 9:33 PM Dan Zigmond <djz at shmonk.com> wrote:
> >> >
> >> > Hi, all. I am developing a package that includes some global
> variables.
> >> > Because these are non-ASCII, I have escaped them. But then because
> these
> >> > are difficult to read, I want to provide an easy way for users to
> unescape
> >> > all of them up front. Thus I have code like to create and save the
> data in
> >> > global variables in one file:
> >> >
> >> > pali_vowels <-
> >> >   c("a", "\u0101", "i", "\u012b", "u", "\u016b", "e", "o")
> >> > pali_consonants <-
> >> >   c("k", "kh", "g", "gh", "\u1e45",
> >> >     "c", "ch", "j", "jh", "\u00f1",
> >> >     "\u1e6d", "\u1e6dh", "\u1e0d", "\u1e0dh", "\u1e47",
> >> >     "t", "th", "d", "dh", "n",
> >> >     "p", "ph", "b", "bh", "m",
> >> >     "y", "r", "l", "v", "s", "h", "\u1e37", "\u1e43")
> >> > pali_alphabet <-c(pali_vowels, pali_consonants)
> >> > use_data(pali_alphabet, overwrite = TRUE)
> >> >
> >> > and then I try to export a function like this in another file:
> >> >
> >> > pali_string_fix <- function() {
> >> >   pali_alphabet <<-
> >> >      stringi::stri_unescape_unicode(pali_alphabet)
> >> >   # Several more of these...
> >> >   }
> >> >
> >> > The idea is that users can run pali_string_fix() once when they load
> the
> >> > package and then they won't need to deal with all the Unicode escape
> >> > sequences after that.
> >> >
> >> > However, this is getting rejected by the CRAN checks with the message:
> >> >
> >> > * checking R code for possible problems ... [4s] NOTE
> >> > pali_string_fix: no visible binding for '<<-' assignment to
> >> >   'pali_alphabet'
> >> >
> >> > I'm guessing this is because the data and the function are defined in
> >> > different files, so even though those globals are defined by my
> package,
> >> > that isn't obvious when the check is run on this code.
> >> >
> >> > Does anyone have advice for how to fix this?
> >> >
> >> >      Dan
> >> >
> >> > .
> >> > -------------------------
> >> > Dan Zigmond
> >> > djz at shmonk.com
> >> >
> >> >         [[alternative HTML version deleted]]
> >> >
> >> > ______________________________________________
> >> > R-package-devel at r-project.org mailing list
> >> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From djz @end|ng |rom @hmonk@com  Fri Sep  4 00:28:32 2020
From: djz @end|ng |rom @hmonk@com (Dan Zigmond)
Date: Thu, 3 Sep 2020 15:28:32 -0700
Subject: [R-pkg-devel] visible binding for '<<-' assignment
In-Reply-To: <12f93f8e-0909-dd6b-4aa8-5a02e8f50bef@gmail.com>
References: <CAJbAZz6P1qn8b8H+4WUzp--Y9hm8zj==VCt1nzEhxLt7kzoWAQ@mail.gmail.com>
 <12f93f8e-0909-dd6b-4aa8-5a02e8f50bef@gmail.com>
Message-ID: <CAJbAZz7VtCCi1RkPS3Xi0yktRYeYG5HtoMyNrXepqfvaa9ceag@mail.gmail.com>

That was where I started, but for some reason that triggered a WARNING
about these non-ASCII characters, which seemed worse. :-)

     Dan

.
--------------------------
Dan Zigmond
djz at shmonk.com



On Thu, Sep 3, 2020 at 3:26 PM Ben Bolker <bbolker at gmail.com> wrote:

>    OK, trying again.
>
>    Would it work to save the unescaped versions in a .RData file as in
>
> https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Data-in-packages
> ?  Presumably the problems with non-ASCII variables arise when they show
> up in a text-format (e.g. .R) file, not when they are read from a
> binary-format file?
>
>    Then, if you use LazyData: yes in the DESCRIPTION file (this may be
> the default?), these should automatically be accessible to users when
> the package is loaded?
>
>
> On 9/3/20 4:31 PM, Dan Zigmond wrote:
> > Hi, all. I am developing a package that includes some global variables.
> > Because these are non-ASCII, I have escaped them. But then because these
> > are difficult to read, I want to provide an easy way for users to
> unescape
> > all of them up front. Thus I have code like to create and save the data
> in
> > global variables in one file:
> >
> > pali_vowels <-
> >    c("a", "\u0101", "i", "\u012b", "u", "\u016b", "e", "o")
> > pali_consonants <-
> >    c("k", "kh", "g", "gh", "\u1e45",
> >      "c", "ch", "j", "jh", "\u00f1",
> >      "\u1e6d", "\u1e6dh", "\u1e0d", "\u1e0dh", "\u1e47",
> >      "t", "th", "d", "dh", "n",
> >      "p", "ph", "b", "bh", "m",
> >      "y", "r", "l", "v", "s", "h", "\u1e37", "\u1e43")
> > pali_alphabet <-c(pali_vowels, pali_consonants)
> > use_data(pali_alphabet, overwrite = TRUE)
> >
> > and then I try to export a function like this in another file:
> >
> > pali_string_fix <- function() {
> >    pali_alphabet <<-
> >       stringi::stri_unescape_unicode(pali_alphabet)
> >    # Several more of these...
> >    }
> >
> > The idea is that users can run pali_string_fix() once when they load the
> > package and then they won't need to deal with all the Unicode escape
> > sequences after that.
> >
> > However, this is getting rejected by the CRAN checks with the message:
> >
> > * checking R code for possible problems ... [4s] NOTE
> > pali_string_fix: no visible binding for '<<-' assignment to
> >    'pali_alphabet'
> >
> > I'm guessing this is because the data and the function are defined in
> > different files, so even though those globals are defined by my package,
> > that isn't obvious when the check is run on this code.
> >
> > Does anyone have advice for how to fix this?
> >
> >       Dan
> >
> > .
> > -------------------------
> > Dan Zigmond
> > djz at shmonk.com
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From c@@rd|@g@bor @end|ng |rom gm@||@com  Fri Sep  4 00:34:25 2020
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Thu, 3 Sep 2020 23:34:25 +0100
Subject: [R-pkg-devel] visible binding for '<<-' assignment
In-Reply-To: <CAJbAZz7K4AYA++zMT=YCwBkz0SufqwajX_+-1Miwju=WA9o-Ug@mail.gmail.com>
References: <CAJbAZz6P1qn8b8H+4WUzp--Y9hm8zj==VCt1nzEhxLt7kzoWAQ@mail.gmail.com>
 <CABtg=KmLs_1gJWmXkihYM-4MGvXHNq5g71kupO1o+TSS9d_-Dw@mail.gmail.com>
 <CAJbAZz6QRCnQMEJtZSBuJFPYoja05PZuuYft1n2JrWWiZHvKYQ@mail.gmail.com>
 <34c8e3b0-ce52-5bf8-cc5b-616dc938ae98@gmail.com>
 <CAF8bMcY0ELXz2e-mXPDfOaDNQcGmnY8Hn_aeGTHkxUpnbkzntg@mail.gmail.com>
 <CAJbAZz7K4AYA++zMT=YCwBkz0SufqwajX_+-1Miwju=WA9o-Ug@mail.gmail.com>
Message-ID: <CABtg=KmHOaKOsOPyn41Bz=gQR1SBF-XjLBV6HJ4KDHj+Ywg9ag@mail.gmail.com>

You can include Unicode strings in a package, either as data, or just
as character vectors. Or character vectors returned by functions. Many
packages do that. E.g. cli:::symbol_utf8$tick is Unicode (not
exported, but it could be).

The only restriction is that the source file must be ASCII, i.e. you
need to create these vectors with `\u` escapes. For example the tick
in cli is created like this:
https://github.com/r-lib/cli/blob/e3ca34656f5bb82df63bfc1c741e75acc79b13d9/R/symbol.R#L27

When you print it (e.g. with something like
`cat(cli:::symbol_utf8$tick)`) the proper Unicode character is
printed, as long as the platform supports it. E.g. on macOS:

? cli:::symbol_utf8$tick
[1] "?"

Gabor

On Thu, Sep 3, 2020 at 11:26 PM Dan Zigmond <djz at shmonk.com> wrote:
>
> I get that, but these variables are created by the package. It's a data
> package so the whole point is to provide access to the data. I'm just
> trying to provide an option to make the data more readable since I can't
> include Unicode strings directly in the package. In other words, these
> variables (eg, pali_alphabet) will already exist when the user attaches the
> package ? but is there a way I can tweak them after the package has been
> loaded?
>
>      Dan
>
> .
> --------------------------
> Dan Zigmond
> djz at shmonk.com
>
>
>
> On Thu, Sep 3, 2020 at 2:56 PM William Dunlap <wdunlap at tibco.com> wrote:
>
> > > Is there a reason that this slightly more explicit
> > > version [assign(envir=.GlobalEnv)] wouldn't work?
> >
> > https://cran.r-project.org/web/packages/policies.html
> > - Packages should not modify the global environment (user?s workspace).
> >
> > Bill Dunlap
> > TIBCO Software
> > wdunlap tibco.com
> >
> > On Thu, Sep 3, 2020 at 2:36 PM Ben Bolker <bbolker at gmail.com> wrote:
> > >
> > >   Is there a reason that this slightly more explicit version wouldn't
> > work?
> > >
> > > pali_string_fix <- function() {
> > >      assign("pali_alphabet",
> > stringi::stri_unescape_unicode(pali_alphabet),
> > >             .GlobalEnv)
> > > }
> > >
> > >
> > > On 9/3/20 5:25 PM, Dan Zigmond wrote:
> > > > Thanks, Gabor. I want these to be easily available to package users
> > though
> > > > ? that's why they are in the package. So I would rather not "hide"
> > them in
> > > > a local environment. This is fundamentally a data package, so access to
> > > > this data is the primary point of installing it.
> > > >
> > > > Is there any other solution?
> > > >
> > > >       Dan
> > > >
> > > > .
> > > > --------------------------
> > > > Dan Zigmond
> > > > djz at shmonk.com
> > > >
> > > >
> > > >
> > > > On Thu, Sep 3, 2020 at 1:40 PM G?bor Cs?rdi <csardi.gabor at gmail.com>
> > wrote:
> > > >
> > > >> Store the cached data in an environment within the package:
> > > >>
> > > >> pali_data <- new.env(parent = emptyenv())
> > > >>
> > > >> pali_string_fix <- function() {
> > > >>    pali_data$alphabet <-
> > > >>       stringi::stri_unescape_unicode(pali_alphabet)
> > > >> ...
> > > >> }
> > > >>
> > > >> Gabor
> > > >>
> > > >> On Thu, Sep 3, 2020 at 9:33 PM Dan Zigmond <djz at shmonk.com> wrote:
> > > >>>
> > > >>> Hi, all. I am developing a package that includes some global
> > variables.
> > > >>> Because these are non-ASCII, I have escaped them. But then because
> > these
> > > >>> are difficult to read, I want to provide an easy way for users to
> > > >> unescape
> > > >>> all of them up front. Thus I have code like to create and save the
> > data
> > > >> in
> > > >>> global variables in one file:
> > > >>>
> > > >>> pali_vowels <-
> > > >>>    c("a", "\u0101", "i", "\u012b", "u", "\u016b", "e", "o")
> > > >>> pali_consonants <-
> > > >>>    c("k", "kh", "g", "gh", "\u1e45",
> > > >>>      "c", "ch", "j", "jh", "\u00f1",
> > > >>>      "\u1e6d", "\u1e6dh", "\u1e0d", "\u1e0dh", "\u1e47",
> > > >>>      "t", "th", "d", "dh", "n",
> > > >>>      "p", "ph", "b", "bh", "m",
> > > >>>      "y", "r", "l", "v", "s", "h", "\u1e37", "\u1e43")
> > > >>> pali_alphabet <-c(pali_vowels, pali_consonants)
> > > >>> use_data(pali_alphabet, overwrite = TRUE)
> > > >>>
> > > >>> and then I try to export a function like this in another file:
> > > >>>
> > > >>> pali_string_fix <- function() {
> > > >>>    pali_alphabet <<-
> > > >>>       stringi::stri_unescape_unicode(pali_alphabet)
> > > >>>    # Several more of these...
> > > >>>    }
> > > >>>
> > > >>> The idea is that users can run pali_string_fix() once when they load
> > the
> > > >>> package and then they won't need to deal with all the Unicode escape
> > > >>> sequences after that.
> > > >>>
> > > >>> However, this is getting rejected by the CRAN checks with the
> > message:
> > > >>>
> > > >>> * checking R code for possible problems ... [4s] NOTE
> > > >>> pali_string_fix: no visible binding for '<<-' assignment to
> > > >>>    'pali_alphabet'
> > > >>>
> > > >>> I'm guessing this is because the data and the function are defined in
> > > >>> different files, so even though those globals are defined by my
> > package,
> > > >>> that isn't obvious when the check is run on this code.
> > > >>>
> > > >>> Does anyone have advice for how to fix this?
> > > >>>
> > > >>>       Dan
> > > >>>
> > > >>> .
> > > >>> -------------------------
> > > >>> Dan Zigmond
> > > >>> djz at shmonk.com
> > > >>>
> > > >>>          [[alternative HTML version deleted]]
> > > >>>
> > > >>> ______________________________________________
> > > >>> R-package-devel at r-project.org mailing list
> > > >>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> > > >>
> > > >
> > > >       [[alternative HTML version deleted]]
> > > >
> > > > ______________________________________________
> > > > R-package-devel at r-project.org mailing list
> > > > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> > > >
> > >
> > > ______________________________________________
> > > R-package-devel at r-project.org mailing list
> > > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From R@|ner @end|ng |rom krug@@de  Fri Sep  4 10:24:36 2020
From: R@|ner @end|ng |rom krug@@de (Rainer M Krug)
Date: Fri, 4 Sep 2020 10:24:36 +0200
Subject: [R-pkg-devel] CRAN, API packages, Keys and tests
Message-ID: <41AB2974-96E3-4F20-989A-EFC931D6F278@krugs.de>

I know this has been asked a few times - but I can?t find anything which might help me.

I have a package (https://github.com/rkrug/ROriginStamp) which wraps around API calls to OriginStamp (https://originstamp.com) to obtain trusted time stamps.

The package works, but the tests are the problem on remote machines.

My question is:

1) I have disabled all tests and all examples if there is no environmental variable set with the API Key - is this OK for CRAN?
2) If not, how can I make this CRAN compliant?

Thanks,

Rainer


--
Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)

Orcid ID: 0000-0002-7490-0066

Department of Evolutionary Biology and Environmental Studies
University of Z?rich
Office Y34-J-74
Winterthurerstrasse 190
8075 Z?rich
Switzerland

Office:	+41 (0)44 635 47 64
Cell:       	+41 (0)78 630 66 57
email:      Rainer.Krug at uzh.ch
		Rainer at krugs.de
Skype:     RMkrug

PGP: 0x0F52F982





--
Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)

Orcid ID: 0000-0002-7490-0066

Department of Evolutionary Biology and Environmental Studies
University of Z?rich
Office Y34-J-74
Winterthurerstrasse 190
8075 Z?rich
Switzerland

Office:	+41 (0)44 635 47 64
Cell:       	+41 (0)78 630 66 57
email:      Rainer.Krug at uzh.ch
		Rainer at krugs.de
Skype:     RMkrug

PGP: 0x0F52F982


From d@v|d@p|eyde|| @end|ng |rom |nr@e@|r  Fri Sep  4 11:07:24 2020
From: d@v|d@p|eyde|| @end|ng |rom |nr@e@|r (David Pleydell)
Date: Fri, 4 Sep 2020 09:07:24 +0000
Subject: [R-pkg-devel] Can these two notes be safely ignored?
Message-ID: <1599210444735.22429@inrae.fr>

Hi


I've a package that I'd like to submit to CRAN.  When I run the command  rhub::check_for_cran()  the checks on both Windows and Ubuntu virtual machines send me emails with the following two notes...


* checking CRAN incoming feasibility ... NOTE

Maintainer: 'David Pleydell <david.pleydell at inrae.fr>'
New submission

* checking for future file timestamps ... NOTE
unable to verify current time


Could you please confirm my best-guess that I can safely ignore these notes: the first is just printing out correct information that is contained within the DESCRIPTION file. The second is related to a time check being performed on a website that is currently down - and so a check on any package would currently generate the same note.


Many thanks

David


	[[alternative HTML version deleted]]


From bbo|ker @end|ng |rom gm@||@com  Fri Sep  4 13:01:27 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Fri, 4 Sep 2020 07:01:27 -0400
Subject: [R-pkg-devel] Can these two notes be safely ignored?
In-Reply-To: <1599210444735.22429@inrae.fr>
References: <1599210444735.22429@inrae.fr>
Message-ID: <CABghstQc0pgb-a8BporBpNaxZ5jGJjPz0RDDoUPdODT1asFcEw@mail.gmail.com>

Yes

On Fri, Sep 4, 2020, 6:55 AM David Pleydell <david.pleydell at inrae.fr> wrote:

> Hi
>
>
> I've a package that I'd like to submit to CRAN.  When I run the command
> rhub::check_for_cran()  the checks on both Windows and Ubuntu virtual
> machines send me emails with the following two notes...
>
>
> * checking CRAN incoming feasibility ... NOTE
>
> Maintainer: 'David Pleydell <david.pleydell at inrae.fr>'
> New submission
>
> * checking for future file timestamps ... NOTE
> unable to verify current time
>
>
> Could you please confirm my best-guess that I can safely ignore these
> notes: the first is just printing out correct information that is contained
> within the DESCRIPTION file. The second is related to a time check being
> performed on a website that is currently down - and so a check on any
> package would currently generate the same note.
>
>
> Many thanks
>
> David
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From nowo@@d@j@kub @end|ng |rom gm@||@com  Fri Sep  4 14:43:47 2020
From: nowo@@d@j@kub @end|ng |rom gm@||@com (Jakub Nowosad)
Date: Fri, 4 Sep 2020 14:43:47 +0200
Subject: [R-pkg-devel] Submission to CRAN Contributed Documentation
Message-ID: <5cd99597-18bb-f8f2-9888-f58584eaedf1@gmail.com>

Dear all,

I have tried to submit a textbook to the CRAN Contributed Documentation
(https://cran.r-project.org/other-docs.html#nenglish).

However, the instruction on how to do that are vague. The Contributed
Documentation page states "To submit, follow the submission instructions
on the CRAN main page.", however, it is impossible to upload non-R
package using the standard way (https://cran.r-project.org/submit.html).
Therefore, I decided to follow another CRAN suggestion "If this fails,
upload toftp://CRAN.R-project.org/incoming/  and send an email to
CRAN-submissions at R-project.org  <mailto:CRAN-submissions at R-project.org>  
following the policy.", uploaded the PDF to CRAN incoming FTP and wrote
an email several days ago. I did not get any answers back.

Could you suggest me a proper way how to add a document to the CRAN
Contributed Documentation?

Best,

Jakub Nowosad

-- 
https://nowosad.github.io/ | @jakub_nowosad | nowosad.jakub at gmail.com


From @te|@nML @end|ng |rom co||oc@t|on@@de  Fri Sep  4 14:55:16 2020
From: @te|@nML @end|ng |rom co||oc@t|on@@de (Stefan Evert)
Date: Fri, 4 Sep 2020 14:55:16 +0200
Subject: [R-pkg-devel] Submission to CRAN Contributed Documentation
In-Reply-To: <5cd99597-18bb-f8f2-9888-f58584eaedf1@gmail.com>
References: <5cd99597-18bb-f8f2-9888-f58584eaedf1@gmail.com>
Message-ID: <597DF6F6-798F-4067-BEEE-26BA3A1A8B94@collocations.de>

Did you read the notice

	Note: The CRAN area for contributed documentation is frozen and no longer actively maintained

at the top of that page?

Best,
Stefan


> On 4 Sep 2020, at 14:43, Jakub Nowosad <nowosad.jakub at gmail.com> wrote:
> 
> Dear all,
> 
> I have tried to submit a textbook to the CRAN Contributed Documentation
> (https://cran.r-project.org/other-docs.html#nenglish).
> 
> However, the instruction on how to do that are vague. The Contributed
> Documentation page states "To submit, follow the submission instructions
> on the CRAN main page.", however, it is impossible to upload non-R
> package using the standard way (https://cran.r-project.org/submit.html).
> Therefore, I decided to follow another CRAN suggestion "If this fails,
> upload toftp://CRAN.R-project.org/incoming/  and send an email to
> CRAN-submissions at R-project.org  <mailto:CRAN-submissions at R-project.org>  following the policy.", uploaded the PDF to CRAN incoming FTP and wrote
> an email several days ago. I did not get any answers back.
> 
> Could you suggest me a proper way how to add a document to the CRAN
> Contributed Documentation?
> 
> Best,
> 
> Jakub Nowosad
> 
> -- 
> https://nowosad.github.io/ | @jakub_nowosad | nowosad.jakub at gmail.com
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From jo@h@m@u|r|ch @end|ng |rom gm@||@com  Fri Sep  4 16:20:16 2020
From: jo@h@m@u|r|ch @end|ng |rom gm@||@com (Joshua Ulrich)
Date: Fri, 4 Sep 2020 09:20:16 -0500
Subject: [R-pkg-devel] CRAN, API packages, Keys and tests
In-Reply-To: <41AB2974-96E3-4F20-989A-EFC931D6F278@krugs.de>
References: <41AB2974-96E3-4F20-989A-EFC931D6F278@krugs.de>
Message-ID: <CAPPM_gQJSqcYZsyv=41rjfG=tmnadO7kh9r2AnpSEWVyAhua0g@mail.gmail.com>

Hi Rainer,

You could set an environment variable with the API key, and only run
the tests if the variable is set.

Here's an example that I use:
https://github.com/joshuaulrich/quantmod/blob/master/tests/test_getSymbols.R#L4

Best,
Josh

On Fri, Sep 4, 2020 at 3:25 AM Rainer M Krug <Rainer at krugs.de> wrote:
>
> I know this has been asked a few times - but I can?t find anything which might help me.
>
> I have a package (https://github.com/rkrug/ROriginStamp) which wraps around API calls to OriginStamp (https://originstamp.com) to obtain trusted time stamps.
>
> The package works, but the tests are the problem on remote machines.
>
> My question is:
>
> 1) I have disabled all tests and all examples if there is no environmental variable set with the API Key - is this OK for CRAN?
> 2) If not, how can I make this CRAN compliant?
>
> Thanks,
>
> Rainer
>
>
> --
> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
>
> Orcid ID: 0000-0002-7490-0066
>
> Department of Evolutionary Biology and Environmental Studies
> University of Z?rich
> Office Y34-J-74
> Winterthurerstrasse 190
> 8075 Z?rich
> Switzerland
>
> Office: +41 (0)44 635 47 64
> Cell:           +41 (0)78 630 66 57
> email:      Rainer.Krug at uzh.ch
>                 Rainer at krugs.de
> Skype:     RMkrug
>
> PGP: 0x0F52F982
>
>
>
>
>
> --
> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
>
> Orcid ID: 0000-0002-7490-0066
>
> Department of Evolutionary Biology and Environmental Studies
> University of Z?rich
> Office Y34-J-74
> Winterthurerstrasse 190
> 8075 Z?rich
> Switzerland
>
> Office: +41 (0)44 635 47 64
> Cell:           +41 (0)78 630 66 57
> email:      Rainer.Krug at uzh.ch
>                 Rainer at krugs.de
> Skype:     RMkrug
>
> PGP: 0x0F52F982
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel



-- 
Joshua Ulrich  |  about.me/joshuaulrich
FOSS Trading  |  www.fosstrading.com


From jo@h@m@u|r|ch @end|ng |rom gm@||@com  Fri Sep  4 16:22:39 2020
From: jo@h@m@u|r|ch @end|ng |rom gm@||@com (Joshua Ulrich)
Date: Fri, 4 Sep 2020 09:22:39 -0500
Subject: [R-pkg-devel] CRAN, API packages, Keys and tests
In-Reply-To: <CAPPM_gQJSqcYZsyv=41rjfG=tmnadO7kh9r2AnpSEWVyAhua0g@mail.gmail.com>
References: <41AB2974-96E3-4F20-989A-EFC931D6F278@krugs.de>
 <CAPPM_gQJSqcYZsyv=41rjfG=tmnadO7kh9r2AnpSEWVyAhua0g@mail.gmail.com>
Message-ID: <CAPPM_gRScaYd41FY-drQJ6G=LWicm5ECGbctA=eb9ej77JYWCg@mail.gmail.com>

On Fri, Sep 4, 2020 at 9:20 AM Joshua Ulrich <josh.m.ulrich at gmail.com> wrote:
>
> Hi Rainer,
>
> You could set an environment variable with the API key, and only run
> the tests if the variable is set.
>
Sorry, I missed that you're already doing this.  I confirm that it
works for CRAN.  I also set my API key as a private/secure variable on
TravisCI, so the tests will run there.

IIRC, testthat does something similar. You could look at that pattern,
since it works on CRAN for many packages.

> Here's an example that I use:
> https://github.com/joshuaulrich/quantmod/blob/master/tests/test_getSymbols.R#L4
>
> Best,
> Josh
>
> On Fri, Sep 4, 2020 at 3:25 AM Rainer M Krug <Rainer at krugs.de> wrote:
> >
> > I know this has been asked a few times - but I can?t find anything which might help me.
> >
> > I have a package (https://github.com/rkrug/ROriginStamp) which wraps around API calls to OriginStamp (https://originstamp.com) to obtain trusted time stamps.
> >
> > The package works, but the tests are the problem on remote machines.
> >
> > My question is:
> >
> > 1) I have disabled all tests and all examples if there is no environmental variable set with the API Key - is this OK for CRAN?
> > 2) If not, how can I make this CRAN compliant?
> >
> > Thanks,
> >
> > Rainer
> >
> >
> > --
> > Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
> >
> > Orcid ID: 0000-0002-7490-0066
> >
> > Department of Evolutionary Biology and Environmental Studies
> > University of Z?rich
> > Office Y34-J-74
> > Winterthurerstrasse 190
> > 8075 Z?rich
> > Switzerland
> >
> > Office: +41 (0)44 635 47 64
> > Cell:           +41 (0)78 630 66 57
> > email:      Rainer.Krug at uzh.ch
> >                 Rainer at krugs.de
> > Skype:     RMkrug
> >
> > PGP: 0x0F52F982
> >
> >
> >
> >
> >
> > --
> > Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
> >
> > Orcid ID: 0000-0002-7490-0066
> >
> > Department of Evolutionary Biology and Environmental Studies
> > University of Z?rich
> > Office Y34-J-74
> > Winterthurerstrasse 190
> > 8075 Z?rich
> > Switzerland
> >
> > Office: +41 (0)44 635 47 64
> > Cell:           +41 (0)78 630 66 57
> > email:      Rainer.Krug at uzh.ch
> >                 Rainer at krugs.de
> > Skype:     RMkrug
> >
> > PGP: 0x0F52F982
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>
>
> --
> Joshua Ulrich  |  about.me/joshuaulrich
> FOSS Trading  |  www.fosstrading.com



-- 
Joshua Ulrich  |  about.me/joshuaulrich
FOSS Trading  |  www.fosstrading.com


From vhmore@u @end|ng |rom gm@||@com  Fri Sep  4 18:41:14 2020
From: vhmore@u @end|ng |rom gm@||@com (Vitor Hugo Moreau)
Date: Fri, 4 Sep 2020 13:41:14 -0300
Subject: [R-pkg-devel] fixing problems in submitted R package
Message-ID: <CA+-z4p9ib857aPbFK9M2gQ2JMwN9eoFDGwWswnTWA59A9gRjTg@mail.gmail.com>

Hello, all.

I have submitted a R package and it returns some NOTES from the automatic
checks. It is the first time I create and deposit a package so I would like
to know what to do. My package was built with Rstudio and it gave some of
these NOTES too, bby I don't know how to solve them.
These are the NOTES:

1.
The build time stamp is missing.

2.
* checking CRAN incoming feasibility ... NOTE
Maintainer: ?The package maintainer <vitorhmc at ufba.br>?

"I don't even know what is wrong here, this is my professional email.
Should I just ignore it?"

3.
* checking DESCRIPTION meta-information ... NOTE
Checking should be performed on sources prepared by ?R CMD build?.

4.
checking R code for possible problems ... [4s/4s] NOTE

likelihood: no visible binding for global variable ?xi?
likelihood: no visible binding for global variable ?yi?
weibull4.fit: no visible binding for '<<-' assignment to ?xi?
weibull4.fit: no visible binding for '<<-' assignment to ?yi?
weibull4.fit: no visible binding for global variable ?yi?
weibull4.fit: no visible binding for global variable ?xi?
Undefined global functions or variables:
  xi yi

"There are two variable defined globally (xi and yi) and they are used
for some - not all - functions. Is this really a problem or can I
ignore it too?"

5.
* checking Rd files ... NOTE
prepare_Rd: likelihood.Rd:15-16: Dropping empty section \details
prepare_Rd: likelihood.Rd:25-26: Dropping empty section \note
prepare_Rd: likelihood.Rd:28-29: Dropping empty section \seealso
prepare_Rd: posterior.Rd:17-18: Dropping empty section \details
prepare_Rd: posterior.Rd:28-29: Dropping empty section \note
prepare_Rd: posterior.Rd:31-32: Dropping empty section \seealso
prepare_Rd: prior.Rd:17-18: Dropping empty section \details
prepare_Rd: prior.Rd:28-29: Dropping empty section \note
prepare_Rd: prior.Rd:31-32: Dropping empty section \seealso
prepare_Rd: proposalfunction.Rd:15-16: Dropping empty section \details
prepare_Rd: proposalfunction.Rd:26-27: Dropping empty section \note
prepare_Rd: proposalfunction.Rd:29-30: Dropping empty section \seealso
prepare_Rd: run_metropolis_MCMC.Rd:20-21: Dropping empty section \details
prepare_Rd: run_metropolis_MCMC.Rd:31-32: Dropping empty section \note
prepare_Rd: run_metropolis_MCMC.Rd:34-35: Dropping empty section \seealso
prepare_Rd: weibull4.Rd:37-38: Dropping empty section \seealso
prepare_Rd: weibull4.fit.Rd:57-58: Dropping empty section \seealso

"Is it a real problem to drop some empty sections in some MAN files. These
functions will not be direct used by users"

Thank you a lot and sorry for so basic questions.

Prof. Vitor Hugo Moreau, Ph.D.
Departamento de Biotecnologia
Universidade Federal da Bahia - UFBA

	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Fri Sep  4 21:18:06 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Fri, 4 Sep 2020 15:18:06 -0400
Subject: [R-pkg-devel] fixing problems in submitted R package
In-Reply-To: <CA+-z4p9ib857aPbFK9M2gQ2JMwN9eoFDGwWswnTWA59A9gRjTg@mail.gmail.com>
References: <CA+-z4p9ib857aPbFK9M2gQ2JMwN9eoFDGwWswnTWA59A9gRjTg@mail.gmail.com>
Message-ID: <1c32f791-3df4-fe2e-4ffc-13383248468a@gmail.com>

On 04/09/2020 12:41 p.m., Vitor Hugo Moreau wrote:
> Hello, all.
> 
> I have submitted a R package and it returns some NOTES from the automatic
> checks. It is the first time I create and deposit a package so I would like
> to know what to do. My package was built with Rstudio and it gave some of
> these NOTES too, bby I don't know how to solve them.
> These are the NOTES:
> 
> 1.
> The build time stamp is missing.

This is because you didn't use R CMD build to build your package.
> 
> 2.
> * checking CRAN incoming feasibility ... NOTE
> Maintainer: ?The package maintainer <vitorhmc at ufba.br>?
> 
> "I don't even know what is wrong here, this is my professional email.
> Should I just ignore it?"

If the text "The package maintainer" is in your DESCRIPTION file, you 
should replace it with your name.

> 
> 3.
> * checking DESCRIPTION meta-information ... NOTE
> Checking should be performed on sources prepared by ?R CMD build?.

Same as 1.

> 
> 4.
> checking R code for possible problems ... [4s/4s] NOTE
> 
> likelihood: no visible binding for global variable ?xi?
> likelihood: no visible binding for global variable ?yi?
> weibull4.fit: no visible binding for '<<-' assignment to ?xi?
> weibull4.fit: no visible binding for '<<-' assignment to ?yi?
> weibull4.fit: no visible binding for global variable ?yi?
> weibull4.fit: no visible binding for global variable ?xi?
> Undefined global functions or variables:
>    xi yi
> 
> "There are two variable defined globally (xi and yi) and they are used
> for some - not all - functions. Is this really a problem or can I
> ignore it too?"

You can't ignore it.  You need to make sure xi and yi are defined in the 
source of your package, and they shouldn't be the top level if you are 
modifying them. It's possible but tricky to have global in packages, and 
it would be best to just avoid the problem by not having them.
> 
> 5.
> * checking Rd files ... NOTE
> prepare_Rd: likelihood.Rd:15-16: Dropping empty section \details
> prepare_Rd: likelihood.Rd:25-26: Dropping empty section \note
> prepare_Rd: likelihood.Rd:28-29: Dropping empty section \seealso
> prepare_Rd: posterior.Rd:17-18: Dropping empty section \details
> prepare_Rd: posterior.Rd:28-29: Dropping empty section \note
> prepare_Rd: posterior.Rd:31-32: Dropping empty section \seealso
> prepare_Rd: prior.Rd:17-18: Dropping empty section \details
> prepare_Rd: prior.Rd:28-29: Dropping empty section \note
> prepare_Rd: prior.Rd:31-32: Dropping empty section \seealso
> prepare_Rd: proposalfunction.Rd:15-16: Dropping empty section \details
> prepare_Rd: proposalfunction.Rd:26-27: Dropping empty section \note
> prepare_Rd: proposalfunction.Rd:29-30: Dropping empty section \seealso
> prepare_Rd: run_metropolis_MCMC.Rd:20-21: Dropping empty section \details
> prepare_Rd: run_metropolis_MCMC.Rd:31-32: Dropping empty section \note
> prepare_Rd: run_metropolis_MCMC.Rd:34-35: Dropping empty section \seealso
> prepare_Rd: weibull4.Rd:37-38: Dropping empty section \seealso
> prepare_Rd: weibull4.fit.Rd:57-58: Dropping empty section \seealso
> 
> "Is it a real problem to drop some empty sections in some MAN files. These
> functions will not be direct used by users"

If they aren't functions that the users will see, then they don't need 
to be exported and documented.

Duncan Murdoch

> 
> Thank you a lot and sorry for so basic questions.
> 
> Prof. Vitor Hugo Moreau, Ph.D.
> Departamento de Biotecnologia
> Universidade Federal da Bahia - UFBA
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From nowo@@d@j@kub @end|ng |rom gm@||@com  Sun Sep  6 17:38:33 2020
From: nowo@@d@j@kub @end|ng |rom gm@||@com (Jakub Nowosad)
Date: Sun, 6 Sep 2020 17:38:33 +0200
Subject: [R-pkg-devel] Submission to CRAN Contributed Documentation
In-Reply-To: <597DF6F6-798F-4067-BEEE-26BA3A1A8B94@collocations.de>
References: <5cd99597-18bb-f8f2-9888-f58584eaedf1@gmail.com>
 <597DF6F6-798F-4067-BEEE-26BA3A1A8B94@collocations.de>
Message-ID: <73695e4a-8779-b2f3-e29f-22dec8a01abf@gmail.com>

Thanks, Stefan.

Yes, I have seen that. However I decided to ask here, as the next 
section of the Contributed Documentation website still encourages people 
to contribute. Thanks once more for clarifying it.

On 9/4/20 2:55 PM, Stefan Evert wrote:
> Did you read the notice
>
> 	Note: The CRAN area for contributed documentation is frozen and no longer actively maintained
>
> at the top of that page?
>
> Best,
> Stefan
>
>
>> On 4 Sep 2020, at 14:43, Jakub Nowosad <nowosad.jakub at gmail.com> wrote:
>>
>> Dear all,
>>
>> I have tried to submit a textbook to the CRAN Contributed Documentation
>> (https://cran.r-project.org/other-docs.html#nenglish).
>>
>> However, the instruction on how to do that are vague. The Contributed
>> Documentation page states "To submit, follow the submission instructions
>> on the CRAN main page.", however, it is impossible to upload non-R
>> package using the standard way (https://cran.r-project.org/submit.html).
>> Therefore, I decided to follow another CRAN suggestion "If this fails,
>> upload toftp://CRAN.R-project.org/incoming/  and send an email to
>> CRAN-submissions at R-project.org  <mailto:CRAN-submissions at R-project.org>  following the policy.", uploaded the PDF to CRAN incoming FTP and wrote
>> an email several days ago. I did not get any answers back.
>>
>> Could you suggest me a proper way how to add a document to the CRAN
>> Contributed Documentation?
>>
>> Best,
>>
>> Jakub Nowosad
>>
>> -- 
>> https://nowosad.github.io/ | @jakub_nowosad | nowosad.jakub at gmail.com
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
https://nowosad.github.io/ | @jakub_nowosad | nowosad.jakub at gmail.com


From edo@rdo@b@|don| @end|ng |rom gm@||@com  Sun Sep  6 21:48:14 2020
From: edo@rdo@b@|don| @end|ng |rom gm@||@com (Edoardo Baldoni)
Date: Sun, 6 Sep 2020 21:48:14 +0200
Subject: [R-pkg-devel] CRAN check error in Debian R only
Message-ID: <CAOcqoUO+FuFY2eWjYjwi0bnFXZk5PH7r6RzuJdRmyh0-Aq2f3Q@mail.gmail.com>

Hi all,

I am trying to publish on CRAN a package that uses the INLA::inla function
from the INLA package. The INLA package is outside CRAN. After package
submission, CRAN gives me an error that seems to be related to the use of
this INLA::inla function on Debian R. The error says that the INLA package
is not available. Below the result of the CRAN check.

Can I do anything about it? Can I still publish my package on CRAN?
Thanks
Edoardo

package AGPRIS_1.0.tar.gz does not pass the incoming checks automatically,
please see the following pre-tests:
Windows: <
https://win-builder.r-project.org/incoming_pretest/AGPRIS_1.0_20200906_195909/Windows/00check.log
>
Status: 1 WARNING, 2 NOTEs
Debian: <
https://win-builder.r-project.org/incoming_pretest/AGPRIS_1.0_20200906_195909/Debian/00check.log
>
Status: 1 ERROR, 1 WARNING

 * using log directory ?/srv/hornik/tmp/CRAN/AGPRIS.Rcheck?

* using R Under development (unstable) (2020-09-04 r79137)
* using platform: x86_64-pc-linux-gnu (64-bit)
* using session charset: UTF-8
* checking for file ?AGPRIS/DESCRIPTION? ... OK
* this is package ?AGPRIS? version ?1.0?
* package encoding: UTF-8
* checking CRAN incoming feasibility ... WARNING
Maintainer: ?Edoardo Baldoni <edoardo.baldoni at gmail.com>?

New submission

Strong dependencies not in mainstream repositories:
  INLA

Size of tarball: 13345524 bytes
* checking package namespace information ... OK
* checking package dependencies ... ERROR
Package required but not available: ?INLA?

See section ?The DESCRIPTION file? in the ?Writing R Extensions?
manual.
* DONE
Status: 1 ERROR, 1 WARNING

	[[alternative HTML version deleted]]


From bbo|ker @end|ng |rom gm@||@com  Sun Sep  6 22:37:15 2020
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Sun, 6 Sep 2020 16:37:15 -0400
Subject: [R-pkg-devel] CRAN check error in Debian R only
In-Reply-To: <CAOcqoUO+FuFY2eWjYjwi0bnFXZk5PH7r6RzuJdRmyh0-Aq2f3Q@mail.gmail.com>
References: <CAOcqoUO+FuFY2eWjYjwi0bnFXZk5PH7r6RzuJdRmyh0-Aq2f3Q@mail.gmail.com>
Message-ID: <99468b58-b5dc-0f7a-090f-9f0eb75efd37@gmail.com>

   It's surprising that this is only an error on Debian ...
   In general "strong dependencies not in mainstream repositories" is a 
non-starter. Here is the relevant paragraph from the CRAN repository 
policies:

 > Packages on which a CRAN package depends should be available from a 
mainstream repository ...  [where "depends" means 
"Depends/Imports/LinkingTo]

    In principle you could create a package that only "Suggests:" INLA 
(and uses it conditionally) but is effectively non-functional without it 
(i.e. in the absence of INLA, all examples or tests that depend on INLA 
are disabled).  This does seem to defeat the intention of the policy, 
though.  I don't know if the CRAN maintainers would reject it for 
violating the spirit of the policy ...

    cheers
     Ben Bolker


On 9/6/20 3:48 PM, Edoardo Baldoni wrote:
> Hi all,
> 
> I am trying to publish on CRAN a package that uses the INLA::inla function
> from the INLA package. The INLA package is outside CRAN. After package
> submission, CRAN gives me an error that seems to be related to the use of
> this INLA::inla function on Debian R. The error says that the INLA package
> is not available. Below the result of the CRAN check.
> 
> Can I do anything about it? Can I still publish my package on CRAN?
> Thanks
> Edoardo
> 
> package AGPRIS_1.0.tar.gz does not pass the incoming checks automatically,
> please see the following pre-tests:
> Windows: <
> https://win-builder.r-project.org/incoming_pretest/AGPRIS_1.0_20200906_195909/Windows/00check.log
>>
> Status: 1 WARNING, 2 NOTEs
> Debian: <
> https://win-builder.r-project.org/incoming_pretest/AGPRIS_1.0_20200906_195909/Debian/00check.log
>>
> Status: 1 ERROR, 1 WARNING
> 
>   * using log directory ?/srv/hornik/tmp/CRAN/AGPRIS.Rcheck?
> 
> * using R Under development (unstable) (2020-09-04 r79137)
> * using platform: x86_64-pc-linux-gnu (64-bit)
> * using session charset: UTF-8
> * checking for file ?AGPRIS/DESCRIPTION? ... OK
> * this is package ?AGPRIS? version ?1.0?
> * package encoding: UTF-8
> * checking CRAN incoming feasibility ... WARNING
> Maintainer: ?Edoardo Baldoni <edoardo.baldoni at gmail.com>?
> 
> New submission
> 
> Strong dependencies not in mainstream repositories:
>    INLA
> 
> Size of tarball: 13345524 bytes
> * checking package namespace information ... OK
> * checking package dependencies ... ERROR
> Package required but not available: ?INLA?
> 
> See section ?The DESCRIPTION file? in the ?Writing R Extensions?
> manual.
> * DONE
> Status: 1 ERROR, 1 WARNING
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From R@|ner @end|ng |rom krug@@de  Mon Sep  7 13:01:27 2020
From: R@|ner @end|ng |rom krug@@de (Rainer M Krug)
Date: Mon, 7 Sep 2020 13:01:27 +0200
Subject: [R-pkg-devel] CRAN, API packages, Keys and tests
In-Reply-To: <CAPPM_gRScaYd41FY-drQJ6G=LWicm5ECGbctA=eb9ej77JYWCg@mail.gmail.com>
References: <41AB2974-96E3-4F20-989A-EFC931D6F278@krugs.de>
 <CAPPM_gQJSqcYZsyv=41rjfG=tmnadO7kh9r2AnpSEWVyAhua0g@mail.gmail.com>
 <CAPPM_gRScaYd41FY-drQJ6G=LWicm5ECGbctA=eb9ej77JYWCg@mail.gmail.com>
Message-ID: <DFBC4EA0-68D2-4123-B996-BEA9F1733C22@krugs.de>

Hi Josh,

Thanks for the thumbs-up for CRAN.

With the secure variable on Travis - that is exactly what I am doing.

Thanks a lot,

Rainer


> On 4 Sep 2020, at 16:22, Joshua Ulrich <josh.m.ulrich at gmail.com> wrote:
> 
> On Fri, Sep 4, 2020 at 9:20 AM Joshua Ulrich <josh.m.ulrich at gmail.com <mailto:josh.m.ulrich at gmail.com>> wrote:
>> 
>> Hi Rainer,
>> 
>> You could set an environment variable with the API key, and only run
>> the tests if the variable is set.
>> 
> Sorry, I missed that you're already doing this.  I confirm that it
> works for CRAN.  I also set my API key as a private/secure variable on
> TravisCI, so the tests will run there.
> 
> IIRC, testthat does something similar. You could look at that pattern,
> since it works on CRAN for many packages.
> 
>> Here's an example that I use:
>> https://github.com/joshuaulrich/quantmod/blob/master/tests/test_getSymbols.R#L4
>> 
>> Best,
>> Josh
>> 
>> On Fri, Sep 4, 2020 at 3:25 AM Rainer M Krug <Rainer at krugs.de> wrote:
>>> 
>>> I know this has been asked a few times - but I can?t find anything which might help me.
>>> 
>>> I have a package (https://github.com/rkrug/ROriginStamp) which wraps around API calls to OriginStamp (https://originstamp.com) to obtain trusted time stamps.
>>> 
>>> The package works, but the tests are the problem on remote machines.
>>> 
>>> My question is:
>>> 
>>> 1) I have disabled all tests and all examples if there is no environmental variable set with the API Key - is this OK for CRAN?
>>> 2) If not, how can I make this CRAN compliant?
>>> 
>>> Thanks,
>>> 
>>> Rainer
>>> 
>>> 
>>> --
>>> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
>>> 
>>> Orcid ID: 0000-0002-7490-0066
>>> 
>>> Department of Evolutionary Biology and Environmental Studies
>>> University of Z?rich
>>> Office Y34-J-74
>>> Winterthurerstrasse 190
>>> 8075 Z?rich
>>> Switzerland
>>> 
>>> Office: +41 (0)44 635 47 64
>>> Cell:           +41 (0)78 630 66 57
>>> email:      Rainer.Krug at uzh.ch
>>>                Rainer at krugs.de
>>> Skype:     RMkrug
>>> 
>>> PGP: 0x0F52F982
>>> 
>>> 
>>> 
>>> 
>>> 
>>> --
>>> Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)
>>> 
>>> Orcid ID: 0000-0002-7490-0066
>>> 
>>> Department of Evolutionary Biology and Environmental Studies
>>> University of Z?rich
>>> Office Y34-J-74
>>> Winterthurerstrasse 190
>>> 8075 Z?rich
>>> Switzerland
>>> 
>>> Office: +41 (0)44 635 47 64
>>> Cell:           +41 (0)78 630 66 57
>>> email:      Rainer.Krug at uzh.ch
>>>                Rainer at krugs.de
>>> Skype:     RMkrug
>>> 
>>> PGP: 0x0F52F982
>>> 
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> 
>> 
>> 
>> --
>> Joshua Ulrich  |  about.me/joshuaulrich
>> FOSS Trading  |  www.fosstrading.com
> 
> 
> 
> -- 
> Joshua Ulrich  |  about.me/joshuaulrich <http://about.me/joshuaulrich>
> FOSS Trading  |  www.fosstrading.com <http://www.fosstrading.com/>
--
Rainer M. Krug, PhD (Conservation Ecology, SUN), MSc (Conservation Biology, UCT), Dipl. Phys. (Germany)

Orcid ID: 0000-0002-7490-0066

Department of Evolutionary Biology and Environmental Studies
University of Z?rich
Office Y34-J-74
Winterthurerstrasse 190
8075 Z?rich
Switzerland

Office:	+41 (0)44 635 47 64
Cell:       	+41 (0)78 630 66 57
email:      Rainer.Krug at uzh.ch
		Rainer at krugs.de
Skype:     RMkrug

PGP: 0x0F52F982




	[[alternative HTML version deleted]]


From biii m@iii@g oii de@@ey@ws  Mon Sep  7 19:07:59 2020
From: biii m@iii@g oii de@@ey@ws (biii m@iii@g oii de@@ey@ws)
Date: Mon, 7 Sep 2020 13:07:59 -0400
Subject: [R-pkg-devel] Compiling 32-bit on Windows using 64-bit gcc and -m32
Message-ID: <003b01d68539$70553230$50ff9690$@denney.ws>

Hello,

 

My question is:

Can I use the 64-bit gcc to build a 32-bit package with the -m32 command
line option with Rtools?  And, can that work for CRAN?  Or more generally,
is there a work-around for needing lots of RAM during compilation with the
32-bit compiler?

 

The background is:

I'm trying to compile a the development version of RxODE
(https://github.com/nlmixrdevelopment/RxODE/issues/278), but I'm hitting
32-bit memory limits (using >3GB and possibly >4GB RAM during compilation)
using the 32-bit version of gcc.  Specifically, 

 

"C:/rtools40/mingw32/bin/"gcc [etc., see the link above for the full command
line]

 

yields the error

 

cc1.exe: out of memory allocating 65536 bytes

 

There is no problem building with mingw64, and I played around to confirm
that by using:

 

Sys.setenv(BINPREF="c:/rtools40/mingw64/bin/")

 

And compilation completed successfully (though installation failed as
expected because the compiled .dll couldn't load on 32-bit R).

 

Thanks,

 

Bill


	[[alternative HTML version deleted]]


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Wed Sep  9 09:35:34 2020
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Wed, 9 Sep 2020 09:35:34 +0200
Subject: [R-pkg-devel] 
 Anyone Know How To Setup Wine for Windows Testing?
In-Reply-To: <CAAVP=anjuOq9ZM=c=Hd7UdTkDy6qg8-a=YqHm185JbrzZhzXKw@mail.gmail.com>
References: <CAAVP=a=JBcHYaLWJLUUj9qisufmDkwTLB+4Z=VsB44Kmiq3wVQ@mail.gmail.com>
 <b1ef86ec-c289-caf3-8ba8-fb327579957c@gmail.com>
 <CAL9B2veMU6DzVcqyW=vXKcO6UaktebTE+og2KXipaXrkGmXBsA@mail.gmail.com>
 <CAAVP=anjuOq9ZM=c=Hd7UdTkDy6qg8-a=YqHm185JbrzZhzXKw@mail.gmail.com>
Message-ID: <98efac23-35d5-0672-0a7f-c27c3d99dc86@gmail.com>

On 7/16/20 7:57 PM, Steve Bronder wrote:
> On Wed, Jul 15, 2020 at 2:22 PM Neal Fultz <nfultz at gmail.com> wrote:
>
>> If you don't mind multi-gig docker containers, this can be helpful:
>>
>> https://github.com/scottyhardy/docker-wine
>>
>> It doesn't work with 64 bit versions of R as far as I could tell, but 32
>> bit did install and start correctly in a few clicks when I tried last year.
>>
> Thanks! I'm hoping if I can get this all working locally I can put
> everything into a docker container for other folks. At this point I have R
> up and running and it can install binary packages, but there are some
> terrible terrible Cygwin/Rtools errors I can't figure out. In particular
> this warning / message seems worrisome
>
> Cygwin WARNING:
>    Couldn't compute FAST_CWD pointer.  This typically occurs if you're using
>    an older Cygwin version on a newer Windows.  Please update to the latest
>    available Cygwin version from https://cygwin.com/.  If the problem
> persists,
>    please see https://cygwin.com/problems.html
>
> If anyone has interest I can post a script for setting up the wine instance
> as far as I can get atm.

Did you have any update on this? If there is a problem with MinGW-w64 
version, you can (just for experimentation) try UCRT demo build, which 
uses a newer version of MinGW-w64 than RTools 4:

https://developer.r-project.org/Blog/public/2020/07/30/windows/utf-8-build-of-r-and-cran-packages/index.html
(reference at very bottom)

> On Wed, Jul 15, 2020 at 10:56 AM J C Nash <profjcnash at gmail.com> wrote:
>
>>> Are you sure you want to try to run R etc. under Wine?
>>>
> Do I want to? No :-). But we (Stan) want to use flto and are seeing errors
> on windows I want to be able to debug locally.

Please note Brian Ripley has added/improved support for cross-compiling 
on Linux for Windows, so that it can be used for diagnosing LTO warnings 
(see NEWS in R-devel and src/gnuwin32/README.compilation). The 
cross-compilers and needed cross-compiled libraries for R itself are 
part of at least some Linux distributions (he tested on Fedora).

>>> - If you have Windows running, either directly or in a VM, you can run R
>>> there.
>>>
> Sadly I don't have access to a windows machine. If I can't figure this out
> then I'll probably just get a windows aws instance. But it would be nice
> for people to have a wine setup they could test locally on.

Microsoft is giving for free time-limited VMs primarily for testing 
Edge/MSIE, you can run them in e.g. in Virtualbox. As instructed in the 
VM, take snapshots often.

>> - If you have Windows and want to run R under some other OS, then set up a
>>> VM
>>> e.g., Linux Mint, for that. I sometimes test R for Windows in a
>>> VirtualBox VM
>>> for Win10, but generally run in Linux Mint. I've also run R in some Linux
>>> VMs
>>> to test for specific dependencies in some distros.
>>>
>>> I rather doubt R will run very well in Linux under Wine. My experience
>>> with Wine
>>> is that a few apps (e.g. Irfanview) run well, but many give lots of
>>> trouble.
>>>
> Yes I'm 80/20 on whether compilation with Rtools will totally work on wine.
> But if I can get this all setup and put it into a docker file I think it
> will be useful for other people as well so it's worth spending a bit of
> time on.

Being able to test R on Wine may be useful, if you figure it out, I 
would be interested to learn more. It is easier to obtain, may be easier 
to automate, and some low-level bugs may be easier to diagnose. Of 
course, for the price of sometimes seeing errors not present on real 
Windows.

Best
Tomas

>>> JN
>>>
>>>
>>> On 2020-07-15 1:17 p.m., Steve Bronder wrote:
>>>> Does anyone know of a setup guide for getting R and Rtools 4.0 up and
>>>> running on Wine with the Windows Server 2008 R2 VM? Do other maintainers
>>>> with more knowhow think that would be useful for debugging purposes?
>>>>
>>>> I've been trying to test out some flto gcc things for windows by
>>> setting up
>>>> a local wine VM on my ubuntu box. Wine has an option for Windows Server
>>>> 2008 R2 (which I believe is the windows session CRAN uses?) If anyone
>>> has
>>>> done this before and knows of a guide somewhere that would be very
>>> helpful!
>>>> Regards,
>>>>
>>>> Steve Bronder
>>>>
>>>>        [[alternative HTML version deleted]]
>>>>
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
> - Steve Bronder
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Wed Sep  9 10:33:53 2020
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Wed, 9 Sep 2020 10:33:53 +0200
Subject: [R-pkg-devel] 
 Compiling 32-bit on Windows using 64-bit gcc and -m32
In-Reply-To: <003b01d68539$70553230$50ff9690$@denney.ws>
References: <003b01d68539$70553230$50ff9690$@denney.ws>
Message-ID: <178bbb85-fd71-f892-a22a-e7807746e648@gmail.com>

On 9/7/20 7:07 PM, bill at denney.ws wrote:
> Hello,
>
>   
>
> My question is:
>
> Can I use the 64-bit gcc to build a 32-bit package with the -m32 command
> line option with Rtools?  And, can that work for CRAN?  Or more generally,
> is there a work-around for needing lots of RAM during compilation with the
> 32-bit compiler?
>
> The background is:
>
> I'm trying to compile a the development version of RxODE
> (https://github.com/nlmixrdevelopment/RxODE/issues/278), but I'm hitting
> 32-bit memory limits (using >3GB and possibly >4GB RAM during compilation)
> using the 32-bit version of gcc.  Specifically,

I think this is too much memory to be used for compilation. I think it 
would be best to simplify the code, possibly split it, or just reduce 
the optimization level, as I read you have done already anyway. Maybe it 
doesn't have to be -O0, maybe you can enable some. In the past I've seen 
similar cases when inlining too aggressively in large files, maybe you 
could just reduce that a bit. It may very well be that reducing the 
optimization level just a little bit will provide about the same 
performance, but require far less memory at compile time (in the past 
there have been cases when -O3 did not produce faster code than -O2 on a 
set of standard benchmarks, of course that may be different in today's 
compilers).

Spending much more time for optimizing of the 32-bit builds may not be 
worth the effort (and neither on the R/CRAN side).

Best
Tomas


>
>   
>
> "C:/rtools40/mingw32/bin/"gcc [etc., see the link above for the full command
> line]
>
>   
>
> yields the error
>
>   
>
> cc1.exe: out of memory allocating 65536 bytes
>
>   
>
> There is no problem building with mingw64, and I played around to confirm
> that by using:
>
>   
>
> Sys.setenv(BINPREF="c:/rtools40/mingw64/bin/")
>
>   
>
> And compilation completed successfully (though installation failed as
> expected because the compiled .dll couldn't load on 32-bit R).
>
>   
>
> Thanks,
>
>   
>
> Bill
>
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From edd @end|ng |rom deb|@n@org  Wed Sep  9 14:56:15 2020
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Wed, 9 Sep 2020 07:56:15 -0500
Subject: [R-pkg-devel] 
 Compiling 32-bit on Windows using 64-bit gcc and -m32
In-Reply-To: <178bbb85-fd71-f892-a22a-e7807746e648@gmail.com>
References: <003b01d68539$70553230$50ff9690$@denney.ws>
 <178bbb85-fd71-f892-a22a-e7807746e648@gmail.com>
Message-ID: <24408.53487.431189.826291@rob.eddelbuettel.com>


On 9 September 2020 at 10:33, Tomas Kalibera wrote:
| Spending much more time for optimizing of the 32-bit builds may not be 
| worth the effort (and neither on the R/CRAN side).

As we are in conditional mode: maybe that could be recognized by adding an
explicit flag allowing us to disable 32-bit builds on a case by case basis?

And it would be nice to be able to do this for that other OS none of us have
access too (outside of a win-builder instance that differs subtly in setup
from the CRAN one).

Dirk

-- 
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From biii m@iii@g oii de@@ey@ws  Wed Sep  9 15:36:20 2020
From: biii m@iii@g oii de@@ey@ws (biii m@iii@g oii de@@ey@ws)
Date: Wed, 9 Sep 2020 09:36:20 -0400
Subject: [R-pkg-devel] 
 Compiling 32-bit on Windows using 64-bit gcc and -m32
In-Reply-To: <178bbb85-fd71-f892-a22a-e7807746e648@gmail.com>
References: <003b01d68539$70553230$50ff9690$@denney.ws>
 <178bbb85-fd71-f892-a22a-e7807746e648@gmail.com>
Message-ID: <015e01d686ae$342a0990$9c7e1cb0$@denney.ws>

> From: Tomas Kalibera <tomas.kalibera at gmail.com> 
> > Can I use the 64-bit gcc to build a 32-bit package with the -m32 
> > command line option with Rtools?  And, can that work for CRAN?  Or 
> > more generally, is there a work-around for needing lots of RAM during 
> > compilation with the 32-bit compiler?
> >
> > The background is:
> >
> > I'm trying to compile a the development version of RxODE 
> > (https://github.com/nlmixrdevelopment/RxODE/issues/278), but I'm 
> > hitting 32-bit memory limits (using >3GB and possibly >4GB RAM during 
> > compilation) using the 32-bit version of gcc.
>
> I think this is too much memory to be used for compilation. I think it would be best to
> simplify the code, possibly split it, or just reduce the optimization level, as I read you have > done already anyway. Maybe it doesn't have to be -O0, maybe you can enable some. In 
> the past I've seen similar cases when inlining too aggressively in large files, maybe you
> could just reduce that a bit. It may very well be that reducing the optimization level just a 
> little bit will provide about the same performance, but require far less memory at compile 
> time (in the past there have been cases when -O3 did not produce faster code than -O2 on
> a set of standard benchmarks, of course that may be different in today's compilers).

Yes, we are testing reducing the optimization level.  Using -O0 works to compile using ~500 MB.  The code can't be simplified as it is a very long algebraic equation.  The function is often used in the middle of an optimization routine that can often takes minutes to hours (statistical minimization here, not meaning compiler optimization), so optimization is preferable.  But, it's a fair point that I don't know the value of the different -O optimization levels for what is only long algebra.

Thanks,

Bill


From n@r@@ @end|ng |rom @t@n|ord@edu  Wed Sep  9 19:40:12 2020
From: n@r@@ @end|ng |rom @t@n|ord@edu (Balasubramanian Narasimhan)
Date: Wed, 9 Sep 2020 10:40:12 -0700
Subject: [R-pkg-devel] Help in getting past CRAN submission rejections
Message-ID: <f87af79b-5fcb-0326-599b-a04a56cde8e1@stanford.edu>

We've been struggling to get past CRAN's rejections for a new upload of 
CVXR.? The new version makes essentially one change to the existing 
version on CRAN: the addition of a DOI to an article to appear in JSS.? 
We realize that CRAN may tighten policies in the meantime forcing some 
changes to be made, which we are happy to do. But we are not sure what.

The automated check 
<https://win-builder.r-project.org/incoming_pretest/CVXR_1.0-6_20200908_223033/> 
came back with 2 notes on Debian and Windows, both addressed in replies 
and submission comments. (Solaris failures are expected, also noted.)

The communications with CRAN indicates that the problem might be that 
our package (the current version too) _suggests_ solvers not available 
on CRAN. These are either on github or on vendor websites (free to 
academics after login).? One reply from CRAN suggested that we either 
use the "Additional_repositories" field or provide some text in 
Description. The former is not applicable---these are not CRAN-like 
repositories---so we added text in the description with URL links.

What could we be missing?

Thanks.

-Naras


From tdhock5 @end|ng |rom gm@||@com  Thu Sep 10 01:38:55 2020
From: tdhock5 @end|ng |rom gm@||@com (Toby Hocking)
Date: Wed, 9 Sep 2020 16:38:55 -0700
Subject: [R-pkg-devel] Help in getting past CRAN submission rejections
In-Reply-To: <f87af79b-5fcb-0326-599b-a04a56cde8e1@stanford.edu>
References: <f87af79b-5fcb-0326-599b-a04a56cde8e1@stanford.edu>
Message-ID: <CALK03d37pPgX3fGgjWxhwqhdMftaftS9T_YaRG8VJuKQCuCERw@mail.gmail.com>

Hi Naras
I had a similar issue recently with
https://cloud.r-project.org/web/packages/nc/ --- it Suggests: re2r which is
a package that is no longer on CRAN, but available on github. To solve the
issue I just copied the re2r into a drat repo, which is a CRAN-like
repository hosted on github. More info on drat here
http://eddelbuettel.github.io/drat/DratForPackageAuthors.html So if those
solver packages you have in Suggests are open-source, you can just copy
them to your drat repo, and list that drat repo in Additional_repositories.
If they aren't open-source then you should provide a description of how to
obtain those packages in Description. Something like "gurobi package is not
available in any public open-source repositories but can be downloaded for
academic use free of charge from $GUROBI_URL"
BTW thanks for your efforts in getting CVXR on CRAN, that is really
important work!
Toby


On Wed, Sep 9, 2020 at 10:40 AM Balasubramanian Narasimhan <
naras at stanford.edu> wrote:

> We've been struggling to get past CRAN's rejections for a new upload of
> CVXR.  The new version makes essentially one change to the existing
> version on CRAN: the addition of a DOI to an article to appear in JSS.
> We realize that CRAN may tighten policies in the meantime forcing some
> changes to be made, which we are happy to do. But we are not sure what.
>
> The automated check
> <
> https://win-builder.r-project.org/incoming_pretest/CVXR_1.0-6_20200908_223033/>
>
> came back with 2 notes on Debian and Windows, both addressed in replies
> and submission comments. (Solaris failures are expected, also noted.)
>
> The communications with CRAN indicates that the problem might be that
> our package (the current version too) _suggests_ solvers not available
> on CRAN. These are either on github or on vendor websites (free to
> academics after login).  One reply from CRAN suggested that we either
> use the "Additional_repositories" field or provide some text in
> Description. The former is not applicable---these are not CRAN-like
> repositories---so we added text in the description with URL links.
>
> What could we be missing?
>
> Thanks.
>
> -Naras
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From n@r@@ @end|ng |rom @t@n|ord@edu  Thu Sep 10 02:16:49 2020
From: n@r@@ @end|ng |rom @t@n|ord@edu (Balasubramanian Narasimhan)
Date: Wed, 9 Sep 2020 17:16:49 -0700
Subject: [R-pkg-devel] Help in getting past CRAN submission rejections
In-Reply-To: <CALK03d37pPgX3fGgjWxhwqhdMftaftS9T_YaRG8VJuKQCuCERw@mail.gmail.com>
References: <f87af79b-5fcb-0326-599b-a04a56cde8e1@stanford.edu>
 <CALK03d37pPgX3fGgjWxhwqhdMftaftS9T_YaRG8VJuKQCuCERw@mail.gmail.com>
Message-ID: <dc5e7ef6-31f2-d808-482d-ffc349a86a62@stanford.edu>

Thanks Toby, so there is hope.? The drat suggestion for rcbc is worth a 
try, gurobi is noted as you recommend.

-Naras

On 9/9/20 4:38 PM, Toby Hocking wrote:
> Hi Naras
> I had a similar issue recently with 
> https://cloud.r-project.org/web/packages/nc/ --- it Suggests: re2r 
> which is a package that is no longer on CRAN, but available on github. 
> To solve the issue I just copied the re2r into a drat repo, which is a 
> CRAN-like repository hosted on github. More info on drat here 
> http://eddelbuettel.github.io/drat/DratForPackageAuthors.html So if 
> those solver packages you have in Suggests are open-source, you can 
> just copy them to your drat repo, and list that drat repo in 
> Additional_repositories. If they aren't open-source then you should 
> provide a description of how to obtain those packages in Description. 
> Something like "gurobi package is not available in any public 
> open-source repositories but can be downloaded for academic use free 
> of charge from $GUROBI_URL"
> BTW thanks for your efforts in getting CVXR on CRAN, that is really 
> important work!
> Toby
>
>
> On Wed, Sep 9, 2020 at 10:40 AM Balasubramanian Narasimhan 
> <naras at stanford.edu <mailto:naras at stanford.edu>> wrote:
>
>     We've been struggling to get past CRAN's rejections for a new
>     upload of
>     CVXR.? The new version makes essentially one change to the existing
>     version on CRAN: the addition of a DOI to an article to appear in
>     JSS.
>     We realize that CRAN may tighten policies in the meantime forcing
>     some
>     changes to be made, which we are happy to do. But we are not sure
>     what.
>
>     The automated check
>     <https://win-builder.r-project.org/incoming_pretest/CVXR_1.0-6_20200908_223033/>
>
>     came back with 2 notes on Debian and Windows, both addressed in
>     replies
>     and submission comments. (Solaris failures are expected, also noted.)
>
>     The communications with CRAN indicates that the problem might be that
>     our package (the current version too) _suggests_ solvers not
>     available
>     on CRAN. These are either on github or on vendor websites (free to
>     academics after login).? One reply from CRAN suggested that we either
>     use the "Additional_repositories" field or provide some text in
>     Description. The former is not applicable---these are not CRAN-like
>     repositories---so we added text in the description with URL links.
>
>     What could we be missing?
>
>     Thanks.
>
>     -Naras
>
>     ______________________________________________
>     R-package-devel at r-project.org
>     <mailto:R-package-devel at r-project.org> mailing list
>     https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From m@rt@@k@r@@@ @end|ng |rom gm@||@com  Thu Sep 10 04:09:18 2020
From: m@rt@@k@r@@@ @end|ng |rom gm@||@com (=?UTF-8?B?TWFydGEgS2FyYcWb?=)
Date: Wed, 9 Sep 2020 22:09:18 -0400
Subject: [R-pkg-devel] Fixing travis build fail due to fftwtools fatal error
 (fftw3.h: No such file or directory)
Message-ID: <CADVZz_oa0SsbYPCT2SsWymnDsi1VXtyQ7ViM+aKzGGuZhiwnwQ@mail.gmail.com>

Dear all,

I have been facing travis build fail on linux xenial due to *fftwtools
fatal error* (fftw3.h: No such file or directory) with my R package. The
error appeared at a random time a few months ago (at a random time := I do
not link it with any fftwtools-function related change commit I did) and
persists.

There is not much I achieved in googling and trying to decipher it, sadly;
I am hoping maybe some Community members saw a similar error with their dev
work and can suggest a hint/solution?

Package GitHub: https://github.com/martakarass/runstats
Failed Travis job log:
https://travis-ci.com/github/martakarass/runstats/jobs/383037333

Error excerpt:

* installing *source* package ?fftwtools? ...
** package ?fftwtools? successfully unpacked and MD5 sums checked
** using staged installation
** libs
gcc -I"/opt/R/4.0.2/lib/R/include" -DNDEBUG   -I/usr/local/include   -fpic
 -g -O2  -c fftwtools.c -o fftwtools.o
fftwtools.c:28:18: fatal error: fftw3.h: No such file or directory
compilation terminated.
/opt/R/4.0.2/lib/R/etc/Makeconf:167: recipe for target 'fftwtools.o' failed
make: *** [fftwtools.o] Error 1
ERROR: compilation failed for package ?fftwtools?
* removing ?/home/travis/R/Library/fftwtools?
Error in i.p(...) :
  (converted from warning) installation of package ?fftwtools? had non-zero
exit status
Calls: <Anonymous> ... with_rprofile_user -> with_envvar -> force -> force
-> i.p
Execution halted
The command "Rscript -e 'deps <- remotes::dev_package_deps(dependencies =
NA);remotes::install_deps(dependencies = TRUE);if (!all(deps$package %in%
installed.packages())) { message("missing: ", paste(setdiff(deps$package,
installed.packages()), collapse=", ")); q(status = 1, save = "no")}'"
failed and exited with 1 during .
Your build has been stopped.


Thank you,

Marta

	[[alternative HTML version deleted]]


From M@x@Turgeon @end|ng |rom um@n|tob@@c@  Thu Sep 10 04:27:12 2020
From: M@x@Turgeon @end|ng |rom um@n|tob@@c@ (Max Turgeon)
Date: Thu, 10 Sep 2020 02:27:12 +0000
Subject: [R-pkg-devel] 
 Fixing travis build fail due to fftwtools fatal error
 (fftw3.h: No such file or directory)
In-Reply-To: <CADVZz_oa0SsbYPCT2SsWymnDsi1VXtyQ7ViM+aKzGGuZhiwnwQ@mail.gmail.com>
References: <CADVZz_oa0SsbYPCT2SsWymnDsi1VXtyQ7ViM+aKzGGuZhiwnwQ@mail.gmail.com>
Message-ID: <YTOPR0101MB1068FC986301CA8584F875339A270@YTOPR0101MB1068.CANPRD01.PROD.OUTLOOK.COM>

Hi Marta,

One change I can see from your Git history that seems to match the first failed build on Travis is when you added "Imports: fftwtools" to your DESCRIPTION file. And it makes sense, because if we look at its DESCRIPTION file, we can see that it has fftw3 as a SystemRequirements. In other words, it needs to be installed on Travis before you can run the checks on your package.

As for solutions, I can see that Karim wrote a short description of how to install the library on Linux, and there's a link for Mac; all this is on the Github repo: https://github.com/krahim/fftwtools

I also noticed that there is an R package wrapping fftw on CRAN (https://cran.r-project.org/package=fftw) and I can see that it's a Suggested package for fftwtools. I haven't tried it, but presumably you could install the fftw R package, instead of the fftw3 library.

HTH,


Max Turgeon
Assistant Professor
Department of Statistics
Department of Computer Science
University of Manitoba
maxturgeon.ca<http://maxturgeon.ca>



________________________________
From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Marta Kara? <marta.karass at gmail.com>
Sent: Wednesday, September 9, 2020 9:09 PM
To: package-develop <r-package-devel at r-project.org>
Cc: karim.rahim at queensu.ca <karim.rahim at queensu.ca>
Subject: [R-pkg-devel] Fixing travis build fail due to fftwtools fatal error (fftw3.h: No such file or directory)

********************************************************
Caution: This message was sent from outside the University of Manitoba.
********************************************************

Dear all,

I have been facing travis build fail on linux xenial due to *fftwtools
fatal error* (fftw3.h: No such file or directory) with my R package. The
error appeared at a random time a few months ago (at a random time := I do
not link it with any fftwtools-function related change commit I did) and
persists.

There is not much I achieved in googling and trying to decipher it, sadly;
I am hoping maybe some Community members saw a similar error with their dev
work and can suggest a hint/solution?

Package GitHub: https://github.com/martakarass/runstats
Failed Travis job log:
https://travis-ci.com/github/martakarass/runstats/jobs/383037333

Error excerpt:

* installing *source* package ?fftwtools? ...
** package ?fftwtools? successfully unpacked and MD5 sums checked
** using staged installation
** libs
gcc -I"/opt/R/4.0.2/lib/R/include" -DNDEBUG   -I/usr/local/include   -fpic
 -g -O2  -c fftwtools.c -o fftwtools.o
fftwtools.c:28:18: fatal error: fftw3.h: No such file or directory
compilation terminated.
/opt/R/4.0.2/lib/R/etc/Makeconf:167: recipe for target 'fftwtools.o' failed
make: *** [fftwtools.o] Error 1
ERROR: compilation failed for package ?fftwtools?
* removing ?/home/travis/R/Library/fftwtools?
Error in i.p(...) :
  (converted from warning) installation of package ?fftwtools? had non-zero
exit status
Calls: <Anonymous> ... with_rprofile_user -> with_envvar -> force -> force
-> i.p
Execution halted
The command "Rscript -e 'deps <- remotes::dev_package_deps(dependencies =
NA);remotes::install_deps(dependencies = TRUE);if (!all(deps$package %in%
installed.packages())) { message("missing: ", paste(setdiff(deps$package,
installed.packages()), collapse=", ")); q(status = 1, save = "no")}'"
failed and exited with 1 during .
Your build has been stopped.


Thank you,

Marta

        [[alternative HTML version deleted]]

______________________________________________
R-package-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel

	[[alternative HTML version deleted]]


From k@r|m@r@h|m @end|ng |rom gm@||@com  Thu Sep 10 05:45:45 2020
From: k@r|m@r@h|m @end|ng |rom gm@||@com (Karim Rahim)
Date: Wed, 9 Sep 2020 23:45:45 -0400
Subject: [R-pkg-devel] 
 Fixing travis build fail due to fftwtools fatal error
 (fftw3.h: No such file or directory)
In-Reply-To: <34cef351271140fca036eba8277fbf41@YQBPR0101MB1652.CANPRD01.PROD.OUTLOOK.COM>
References: <CADVZz_oa0SsbYPCT2SsWymnDsi1VXtyQ7ViM+aKzGGuZhiwnwQ@mail.gmail.com>
 <34cef351271140fca036eba8277fbf41@YQBPR0101MB1652.CANPRD01.PROD.OUTLOOK.COM>
Message-ID: <CAAZer4k0fhbVddf+=9zZwDVz1Lf3wgbHAsBBBKP_7tbmYA6AnQ@mail.gmail.com>

 sudo apt-get install -y fftw3

Then try again.

Let me know if it doesn't work.

Cheers!
Karim

On Wed, Sep 9, 2020 at 10:27 PM Max Turgeon <Max.Turgeon at umanitoba.ca> wrote:
>
> Hi Marta,
>
> One change I can see from your Git history that seems to match the first failed build on Travis is when you added "Imports: fftwtools" to your DESCRIPTION file. And it makes sense, because if we look at its DESCRIPTION file, we can see that it has fftw3 as a SystemRequirements. In other words, it needs to be installed on Travis before you can run the checks on your package.
>
> As for solutions, I can see that Karim wrote a short description of how to install the library on Linux, and there's a link for Mac; all this is on the Github repo: https://github.com/krahim/fftwtools
>
> I also noticed that there is an R package wrapping fftw on CRAN (https://cran.r-project.org/package=fftw) and I can see that it's a Suggested package for fftwtools. I haven't tried it, but presumably you could install the fftw R package, instead of the fftw3 library.
>
> HTH,
>
> Max Turgeon
> Assistant Professor
> Department of Statistics
> Department of Computer Science
> University of Manitoba
> maxturgeon.ca
>
>
>
> ________________________________
> From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Marta Kara? <marta.karass at gmail.com>
> Sent: Wednesday, September 9, 2020 9:09 PM
> To: package-develop <r-package-devel at r-project.org>
> Cc: karim.rahim at queensu.ca <karim.rahim at queensu.ca>
> Subject: [R-pkg-devel] Fixing travis build fail due to fftwtools fatal error (fftw3.h: No such file or directory)
>
> ********************************************************
> Caution: This message was sent from outside the University of Manitoba.
> ********************************************************
>
> Dear all,
>
> I have been facing travis build fail on linux xenial due to *fftwtools
> fatal error* (fftw3.h: No such file or directory) with my R package. The
> error appeared at a random time a few months ago (at a random time := I do
> not link it with any fftwtools-function related change commit I did) and
> persists.
>
> There is not much I achieved in googling and trying to decipher it, sadly;
> I am hoping maybe some Community members saw a similar error with their dev
> work and can suggest a hint/solution?
>
> Package GitHub: https://github.com/martakarass/runstats
> Failed Travis job log:
> https://travis-ci.com/github/martakarass/runstats/jobs/383037333
>
> Error excerpt:
>
> * installing *source* package ?fftwtools? ...
> ** package ?fftwtools? successfully unpacked and MD5 sums checked
> ** using staged installation
> ** libs
> gcc -I"/opt/R/4.0.2/lib/R/include" -DNDEBUG   -I/usr/local/include   -fpic
>  -g -O2  -c fftwtools.c -o fftwtools.o
> fftwtools.c:28:18: fatal error: fftw3.h: No such file or directory
> compilation terminated.
> /opt/R/4.0.2/lib/R/etc/Makeconf:167: recipe for target 'fftwtools.o' failed
> make: *** [fftwtools.o] Error 1
> ERROR: compilation failed for package ?fftwtools?
> * removing ?/home/travis/R/Library/fftwtools?
> Error in i.p(...) :
>   (converted from warning) installation of package ?fftwtools? had non-zero
> exit status
> Calls: <Anonymous> ... with_rprofile_user -> with_envvar -> force -> force
> -> i.p
> Execution halted
> The command "Rscript -e 'deps <- remotes::dev_package_deps(dependencies =
> NA);remotes::install_deps(dependencies = TRUE);if (!all(deps$package %in%
> installed.packages())) { message("missing: ", paste(setdiff(deps$package,
> installed.packages()), collapse=", ")); q(status = 1, save = "no")}'"
> failed and exited with 1 during .
> Your build has been stopped.
>
>
> Thank you,
>
> Marta
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From edd @end|ng |rom deb|@n@org  Thu Sep 10 14:16:02 2020
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Thu, 10 Sep 2020 07:16:02 -0500
Subject: [R-pkg-devel] 
 Fixing travis build fail due to fftwtools fatal error
 (fftw3.h: No such file or directory)
In-Reply-To: <CAAZer4k0fhbVddf+=9zZwDVz1Lf3wgbHAsBBBKP_7tbmYA6AnQ@mail.gmail.com>
References: <CADVZz_oa0SsbYPCT2SsWymnDsi1VXtyQ7ViM+aKzGGuZhiwnwQ@mail.gmail.com>
 <34cef351271140fca036eba8277fbf41@YQBPR0101MB1652.CANPRD01.PROD.OUTLOOK.COM>
 <CAAZer4k0fhbVddf+=9zZwDVz1Lf3wgbHAsBBBKP_7tbmYA6AnQ@mail.gmail.com>
Message-ID: <24410.6402.188382.979860@rob.eddelbuettel.com>


On 9 September 2020 at 23:45, Karim Rahim wrote:
|  sudo apt-get install -y fftw3

Or maybe rather

   sudo apt-get install libfftw3-dev

to get the development headers?

Dirk
 
| Then try again.
| 
| Let me know if it doesn't work.
| 
| Cheers!
| Karim
| 
| On Wed, Sep 9, 2020 at 10:27 PM Max Turgeon <Max.Turgeon at umanitoba.ca> wrote:
| >
| > Hi Marta,
| >
| > One change I can see from your Git history that seems to match the first failed build on Travis is when you added "Imports: fftwtools" to your DESCRIPTION file. And it makes sense, because if we look at its DESCRIPTION file, we can see that it has fftw3 as a SystemRequirements. In other words, it needs to be installed on Travis before you can run the checks on your package.
| >
| > As for solutions, I can see that Karim wrote a short description of how to install the library on Linux, and there's a link for Mac; all this is on the Github repo: https://github.com/krahim/fftwtools
| >
| > I also noticed that there is an R package wrapping fftw on CRAN (https://cran.r-project.org/package=fftw) and I can see that it's a Suggested package for fftwtools. I haven't tried it, but presumably you could install the fftw R package, instead of the fftw3 library.
| >
| > HTH,
| >
| > Max Turgeon
| > Assistant Professor
| > Department of Statistics
| > Department of Computer Science
| > University of Manitoba
| > maxturgeon.ca
| >
| >
| >
| > ________________________________
| > From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Marta Kara? <marta.karass at gmail.com>
| > Sent: Wednesday, September 9, 2020 9:09 PM
| > To: package-develop <r-package-devel at r-project.org>
| > Cc: karim.rahim at queensu.ca <karim.rahim at queensu.ca>
| > Subject: [R-pkg-devel] Fixing travis build fail due to fftwtools fatal error (fftw3.h: No such file or directory)
| >
| > ********************************************************
| > Caution: This message was sent from outside the University of Manitoba.
| > ********************************************************
| >
| > Dear all,
| >
| > I have been facing travis build fail on linux xenial due to *fftwtools
| > fatal error* (fftw3.h: No such file or directory) with my R package. The
| > error appeared at a random time a few months ago (at a random time := I do
| > not link it with any fftwtools-function related change commit I did) and
| > persists.
| >
| > There is not much I achieved in googling and trying to decipher it, sadly;
| > I am hoping maybe some Community members saw a similar error with their dev
| > work and can suggest a hint/solution?
| >
| > Package GitHub: https://github.com/martakarass/runstats
| > Failed Travis job log:
| > https://travis-ci.com/github/martakarass/runstats/jobs/383037333
| >
| > Error excerpt:
| >
| > * installing *source* package ?fftwtools? ...
| > ** package ?fftwtools? successfully unpacked and MD5 sums checked
| > ** using staged installation
| > ** libs
| > gcc -I"/opt/R/4.0.2/lib/R/include" -DNDEBUG   -I/usr/local/include   -fpic
| >  -g -O2  -c fftwtools.c -o fftwtools.o
| > fftwtools.c:28:18: fatal error: fftw3.h: No such file or directory
| > compilation terminated.
| > /opt/R/4.0.2/lib/R/etc/Makeconf:167: recipe for target 'fftwtools.o' failed
| > make: *** [fftwtools.o] Error 1
| > ERROR: compilation failed for package ?fftwtools?
| > * removing ?/home/travis/R/Library/fftwtools?
| > Error in i.p(...) :
| >   (converted from warning) installation of package ?fftwtools? had non-zero
| > exit status
| > Calls: <Anonymous> ... with_rprofile_user -> with_envvar -> force -> force
| > -> i.p
| > Execution halted
| > The command "Rscript -e 'deps <- remotes::dev_package_deps(dependencies =
| > NA);remotes::install_deps(dependencies = TRUE);if (!all(deps$package %in%
| > installed.packages())) { message("missing: ", paste(setdiff(deps$package,
| > installed.packages()), collapse=", ")); q(status = 1, save = "no")}'"
| > failed and exited with 1 during .
| > Your build has been stopped.
| >
| >
| > Thank you,
| >
| > Marta
| >
| >         [[alternative HTML version deleted]]
| >
| > ______________________________________________
| > R-package-devel at r-project.org mailing list
| > https://stat.ethz.ch/mailman/listinfo/r-package-devel
| 
| ______________________________________________
| R-package-devel at r-project.org mailing list
| https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From k@r|m@r@h|m @end|ng |rom gm@||@com  Thu Sep 10 14:35:12 2020
From: k@r|m@r@h|m @end|ng |rom gm@||@com (Karim Rahim)
Date: Thu, 10 Sep 2020 08:35:12 -0400
Subject: [R-pkg-devel] 
 Fixing travis build fail due to fftwtools fatal error
 (fftw3.h: No such file or directory)
In-Reply-To: <24410.6402.188382.979860@rob.eddelbuettel.com>
References: <CADVZz_oa0SsbYPCT2SsWymnDsi1VXtyQ7ViM+aKzGGuZhiwnwQ@mail.gmail.com>
 <34cef351271140fca036eba8277fbf41@YQBPR0101MB1652.CANPRD01.PROD.OUTLOOK.COM>
 <CAAZer4k0fhbVddf+=9zZwDVz1Lf3wgbHAsBBBKP_7tbmYA6AnQ@mail.gmail.com>
 <24410.6402.188382.979860@rob.eddelbuettel.com>
Message-ID: <CAAZer4=Y=yAmxgOSWhDswp0rOZAau=AwG3R2JXnncfFm-Vd1GQ@mail.gmail.com>

Thanks,

That may be it. It is a missing dependency.

It's been a while and I'm not sure which package exposes fftw3.h ...

Karim

On Thu, Sep 10, 2020 at 8:16 AM Dirk Eddelbuettel <edd at debian.org> wrote:

>
> On 9 September 2020 at 23:45, Karim Rahim wrote:
> |  sudo apt-get install -y fftw3
>
> Or maybe rather
>
>    sudo apt-get install libfftw3-dev
>
> to get the development headers?
>
> Dirk
>
> | Then try again.
> |
> | Let me know if it doesn't work.
> |
> | Cheers!
> | Karim
> |
> | On Wed, Sep 9, 2020 at 10:27 PM Max Turgeon <Max.Turgeon at umanitoba.ca>
> wrote:
> | >
> | > Hi Marta,
> | >
> | > One change I can see from your Git history that seems to match the
> first failed build on Travis is when you added "Imports: fftwtools" to your
> DESCRIPTION file. And it makes sense, because if we look at its DESCRIPTION
> file, we can see that it has fftw3 as a SystemRequirements. In other words,
> it needs to be installed on Travis before you can run the checks on your
> package.
> | >
> | > As for solutions, I can see that Karim wrote a short description of
> how to install the library on Linux, and there's a link for Mac; all this
> is on the Github repo: https://github.com/krahim/fftwtools
> | >
> | > I also noticed that there is an R package wrapping fftw on CRAN (
> https://cran.r-project.org/package=fftw) and I can see that it's a
> Suggested package for fftwtools. I haven't tried it, but presumably you
> could install the fftw R package, instead of the fftw3 library.
> | >
> | > HTH,
> | >
> | > Max Turgeon
> | > Assistant Professor
> | > Department of Statistics
> | > Department of Computer Science
> | > University of Manitoba
> | > maxturgeon.ca
> | >
> | >
> | >
> | > ________________________________
> | > From: R-package-devel <r-package-devel-bounces at r-project.org> on
> behalf of Marta Kara? <marta.karass at gmail.com>
> | > Sent: Wednesday, September 9, 2020 9:09 PM
> | > To: package-develop <r-package-devel at r-project.org>
> | > Cc: karim.rahim at queensu.ca <karim.rahim at queensu.ca>
> | > Subject: [R-pkg-devel] Fixing travis build fail due to fftwtools fatal
> error (fftw3.h: No such file or directory)
> | >
> | > ********************************************************
> | > Caution: This message was sent from outside the University of Manitoba.
> | > ********************************************************
> | >
> | > Dear all,
> | >
> | > I have been facing travis build fail on linux xenial due to *fftwtools
> | > fatal error* (fftw3.h: No such file or directory) with my R package.
> The
> | > error appeared at a random time a few months ago (at a random time :=
> I do
> | > not link it with any fftwtools-function related change commit I did)
> and
> | > persists.
> | >
> | > There is not much I achieved in googling and trying to decipher it,
> sadly;
> | > I am hoping maybe some Community members saw a similar error with
> their dev
> | > work and can suggest a hint/solution?
> | >
> | > Package GitHub: https://github.com/martakarass/runstats
> | > Failed Travis job log:
> | > https://travis-ci.com/github/martakarass/runstats/jobs/383037333
> | >
> | > Error excerpt:
> | >
> | > * installing *source* package ?fftwtools? ...
> | > ** package ?fftwtools? successfully unpacked and MD5 sums checked
> | > ** using staged installation
> | > ** libs
> | > gcc -I"/opt/R/4.0.2/lib/R/include" -DNDEBUG   -I/usr/local/include
>  -fpic
> | >  -g -O2  -c fftwtools.c -o fftwtools.o
> | > fftwtools.c:28:18: fatal error: fftw3.h: No such file or directory
> | > compilation terminated.
> | > /opt/R/4.0.2/lib/R/etc/Makeconf:167: recipe for target 'fftwtools.o'
> failed
> | > make: *** [fftwtools.o] Error 1
> | > ERROR: compilation failed for package ?fftwtools?
> | > * removing ?/home/travis/R/Library/fftwtools?
> | > Error in i.p(...) :
> | >   (converted from warning) installation of package ?fftwtools? had
> non-zero
> | > exit status
> | > Calls: <Anonymous> ... with_rprofile_user -> with_envvar -> force ->
> force
> | > -> i.p
> | > Execution halted
> | > The command "Rscript -e 'deps <-
> remotes::dev_package_deps(dependencies =
> | > NA);remotes::install_deps(dependencies = TRUE);if (!all(deps$package
> %in%
> | > installed.packages())) { message("missing: ",
> paste(setdiff(deps$package,
> | > installed.packages()), collapse=", ")); q(status = 1, save = "no")}'"
> | > failed and exited with 1 during .
> | > Your build has been stopped.
> | >
> | >
> | > Thank you,
> | >
> | > Marta
> | >
> | >         [[alternative HTML version deleted]]
> | >
> | > ______________________________________________
> | > R-package-devel at r-project.org mailing list
> | > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> |
> | ______________________________________________
> | R-package-devel at r-project.org mailing list
> | https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
> --
> https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>

	[[alternative HTML version deleted]]


From kev|n@r@coombe@ @end|ng |rom gm@||@com  Thu Sep 10 18:14:12 2020
From: kev|n@r@coombe@ @end|ng |rom gm@||@com (Kevin R. Coombes)
Date: Thu, 10 Sep 2020 12:14:12 -0400
Subject: [R-pkg-devel] DOI for archived package?
Message-ID: <58f64994-30da-d9a5-724d-5f2ba3e11e79@gmail.com>

Hi,

I am in the process of submitting a "workflow" article about an R 
package (which is onCRAN) to F1000Research. The associate editor that I 
am dealing with wants a "DOI" for the source code of the package being 
described in the manuscript.? I have already explained that CRAN 
archives all versions of packages, and I sent him the URL to the archive 
page for the package, However, he still seems to believe that a DOI 
needs to be assigned by some site like Zenodo.

I haven't yet responded by pointing out that CRAN has been archiving all 
versions of packages since at least the year 2000, it has mirrors all 
over the world, and the URL/URI used here is likely to be far more 
permanent than the DOI from Zenodo. Nor have I pointed out that there 
are more than 15,000 packages at CRAN, nor that not a single R user 
would ever think to go look on Zenodo for an R package.

Does anyone have other suggestions for how to respond? (I know;? I could 
just put the [expletive] thing into Zenodo and move on, but creating a 
permanent identifier for something that will *never *be accessed just 
seems stupid.)

Thanks,
 ? Kevin

	[[alternative HTML version deleted]]


From th|erry@onke||nx @end|ng |rom |nbo@be  Thu Sep 10 18:25:31 2020
From: th|erry@onke||nx @end|ng |rom |nbo@be (Thierry Onkelinx)
Date: Thu, 10 Sep 2020 18:25:31 +0200
Subject: [R-pkg-devel] DOI for archived package?
In-Reply-To: <58f64994-30da-d9a5-724d-5f2ba3e11e79@gmail.com>
References: <58f64994-30da-d9a5-724d-5f2ba3e11e79@gmail.com>
Message-ID: <CAJuCY5x7O9=DXHxyBR6AYxCfBOHEm1ZZiZGg0uTG7fHPx0VTtw@mail.gmail.com>

Dear Kevin,

My git2rdata package is on CRAN, ROpenSci and Zenodo. The GitHub repo is
linked to Zenodo, so every release on GitHub gets its own DOI.

The benefit of the DOI is that it makes it easier for others to cite your
package in a consistent manner. And you'll get a better overview of those
citations.

So I won't waste time arguing over this and use that time to put it on
Zenodo.

Best regards,

PS Zenodo is well funded (https://about.zenodo.org/infrastructure/) and
IMHO equally likely to be permanent as CRAN is.

ir. Thierry Onkelinx
Statisticus / Statistician

Vlaamse Overheid / Government of Flanders
INSTITUUT VOOR NATUUR- EN BOSONDERZOEK / RESEARCH INSTITUTE FOR NATURE AND
FOREST
Team Biometrie & Kwaliteitszorg / Team Biometrics & Quality Assurance
thierry.onkelinx at inbo.be
Havenlaan 88 bus 73, 1000 Brussel
www.inbo.be

///////////////////////////////////////////////////////////////////////////////////////////
To call in the statistician after the experiment is done may be no more
than asking him to perform a post-mortem examination: he may be able to say
what the experiment died of. ~ Sir Ronald Aylmer Fisher
The plural of anecdote is not data. ~ Roger Brinner
The combination of some data and an aching desire for an answer does not
ensure that a reasonable answer can be extracted from a given body of data.
~ John Tukey
///////////////////////////////////////////////////////////////////////////////////////////

<https://www.inbo.be>


Op do 10 sep. 2020 om 18:14 schreef Kevin R. Coombes <
kevin.r.coombes at gmail.com>:

> Hi,
>
> I am in the process of submitting a "workflow" article about an R
> package (which is onCRAN) to F1000Research. The associate editor that I
> am dealing with wants a "DOI" for the source code of the package being
> described in the manuscript.  I have already explained that CRAN
> archives all versions of packages, and I sent him the URL to the archive
> page for the package, However, he still seems to believe that a DOI
> needs to be assigned by some site like Zenodo.
>
> I haven't yet responded by pointing out that CRAN has been archiving all
> versions of packages since at least the year 2000, it has mirrors all
> over the world, and the URL/URI used here is likely to be far more
> permanent than the DOI from Zenodo. Nor have I pointed out that there
> are more than 15,000 packages at CRAN, nor that not a single R user
> would ever think to go look on Zenodo for an R package.
>
> Does anyone have other suggestions for how to respond? (I know;  I could
> just put the [expletive] thing into Zenodo and move on, but creating a
> permanent identifier for something that will *never *be accessed just
> seems stupid.)
>
> Thanks,
>    Kevin
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From |uc@r @end|ng |rom |edor@project@org  Thu Sep 10 18:32:45 2020
From: |uc@r @end|ng |rom |edor@project@org (=?UTF-8?Q?I=C3=B1aki_Ucar?=)
Date: Thu, 10 Sep 2020 18:32:45 +0200
Subject: [R-pkg-devel] DOI for archived package?
In-Reply-To: <58f64994-30da-d9a5-724d-5f2ba3e11e79@gmail.com>
References: <58f64994-30da-d9a5-724d-5f2ba3e11e79@gmail.com>
Message-ID: <CALEXWq0OEgTccmr-X40hEMVs9JKdop-OeWdFv-tLniEARik2eA@mail.gmail.com>

If you proposed
https://cran.r-project.org/src/contrib/Archive/<pkg>/<pkg>_<version>.tar.gz
and the editor is suspicious about the "src/contrib/Archive" stuff, you
could propose instead
https://cran.r-project.org/package=<pkg>&version=<version>,
which *looks* more permanent I guess.

I?aki

On Thu, 10 Sep 2020 at 18:14, Kevin R. Coombes <kevin.r.coombes at gmail.com>
wrote:

> Hi,
>
> I am in the process of submitting a "workflow" article about an R
> package (which is onCRAN) to F1000Research. The associate editor that I
> am dealing with wants a "DOI" for the source code of the package being
> described in the manuscript.  I have already explained that CRAN
> archives all versions of packages, and I sent him the URL to the archive
> page for the package, However, he still seems to believe that a DOI
> needs to be assigned by some site like Zenodo.
>
> I haven't yet responded by pointing out that CRAN has been archiving all
> versions of packages since at least the year 2000, it has mirrors all
> over the world, and the URL/URI used here is likely to be far more
> permanent than the DOI from Zenodo. Nor have I pointed out that there
> are more than 15,000 packages at CRAN, nor that not a single R user
> would ever think to go look on Zenodo for an R package.
>
> Does anyone have other suggestions for how to respond? (I know;  I could
> just put the [expletive] thing into Zenodo and move on, but creating a
> permanent identifier for something that will *never *be accessed just
> seems stupid.)
>
> Thanks,
>    Kevin
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


-- 
I?aki ?car

	[[alternative HTML version deleted]]


From @e@nd@v| @end|ng |rom gm@||@com  Thu Sep 10 18:51:04 2020
From: @e@nd@v| @end|ng |rom gm@||@com (Sean Davis)
Date: Thu, 10 Sep 2020 12:51:04 -0400
Subject: [R-pkg-devel] DOI for archived package?
In-Reply-To: <CALEXWq0OEgTccmr-X40hEMVs9JKdop-OeWdFv-tLniEARik2eA@mail.gmail.com>
References: <58f64994-30da-d9a5-724d-5f2ba3e11e79@gmail.com>
 <CALEXWq0OEgTccmr-X40hEMVs9JKdop-OeWdFv-tLniEARik2eA@mail.gmail.com>
Message-ID: <CANeAVB=CiT+0CdtLodXPipT7+tdjBLVSOnS6sprXVQJxNYPydg@mail.gmail.com>

I have found reminding editors of this editorial to be useful:

https://www.nature.com/articles/ng.2869

Community repositories that carry out testing are ideal for commonly used
> programs (for example, those used in statistical analysis), and a fair
> proportion of the genetics community is fortunately familiar with the
> Comprehensive R Archive Network (http://cran.r-project.org/) and the
> principles of stewardship of modular software embodied in the Bioconductor
> suite (http://www.bioconductor.org/). The journal has sufficient
> experience with these resources to endorse their use by authors. We do not
> yet provide any endorsement for the suitability or usefulness of other
> solutions but will work with our authors and readers, as well as with other
> journals, to arrive at a set of principles and recommendations.
>

As a tangential but informational comment, Bioconductor started minting
minimalist DOIs for packages a couple years ago. I do not think DOIs have
seen broad uptake as a citation mechanism for Bioc packages (I states
without evidence), but the opportunity arose to do so and we took it.

https://github.com/seandavi/BiocPkgTools/blob/master/R/newBiocPkgDOI.R

Sean


On Thu, Sep 10, 2020 at 12:36 PM I?aki Ucar <iucar at fedoraproject.org> wrote:

> If you proposed
> https://cran.r-project.org/src/contrib/Archive/
> <pkg>/<pkg>_<version>.tar.gz
> and the editor is suspicious about the "src/contrib/Archive" stuff, you
> could propose instead
> https://cran.r-project.org/package=<pkg>&version=<version>,
> which *looks* more permanent I guess.
>
> I?aki
>
> On Thu, 10 Sep 2020 at 18:14, Kevin R. Coombes <kevin.r.coombes at gmail.com>
> wrote:
>
> > Hi,
> >
> > I am in the process of submitting a "workflow" article about an R
> > package (which is onCRAN) to F1000Research. The associate editor that I
> > am dealing with wants a "DOI" for the source code of the package being
> > described in the manuscript.  I have already explained that CRAN
> > archives all versions of packages, and I sent him the URL to the archive
> > page for the package, However, he still seems to believe that a DOI
> > needs to be assigned by some site like Zenodo.
> >
> > I haven't yet responded by pointing out that CRAN has been archiving all
> > versions of packages since at least the year 2000, it has mirrors all
> > over the world, and the URL/URI used here is likely to be far more
> > permanent than the DOI from Zenodo. Nor have I pointed out that there
> > are more than 15,000 packages at CRAN, nor that not a single R user
> > would ever think to go look on Zenodo for an R package.
> >
> > Does anyone have other suggestions for how to respond? (I know;  I could
> > just put the [expletive] thing into Zenodo and move on, but creating a
> > permanent identifier for something that will *never *be accessed just
> > seems stupid.)
> >
> > Thanks,
> >    Kevin
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
>
>
> --
> I?aki ?car
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


-- 
Sean Davis, MD, PhD
Center for Cancer Research
National Cancer Institute
National Institutes of Health
Bethesda, MD 20892
https://seandavi.github.io/
https://twitter.com/seandavis12

	[[alternative HTML version deleted]]


From m@rt@@k@r@@@ @end|ng |rom gm@||@com  Thu Sep 10 20:14:42 2020
From: m@rt@@k@r@@@ @end|ng |rom gm@||@com (=?UTF-8?B?TWFydGEgS2FyYcWb?=)
Date: Thu, 10 Sep 2020 14:14:42 -0400
Subject: [R-pkg-devel] 
 Fixing travis build fail due to fftwtools fatal error
 (fftw3.h: No such file or directory)
In-Reply-To: <CAAZer4=Y=yAmxgOSWhDswp0rOZAau=AwG3R2JXnncfFm-Vd1GQ@mail.gmail.com>
References: <CADVZz_oa0SsbYPCT2SsWymnDsi1VXtyQ7ViM+aKzGGuZhiwnwQ@mail.gmail.com>
 <34cef351271140fca036eba8277fbf41@YQBPR0101MB1652.CANPRD01.PROD.OUTLOOK.COM>
 <CAAZer4k0fhbVddf+=9zZwDVz1Lf3wgbHAsBBBKP_7tbmYA6AnQ@mail.gmail.com>
 <24410.6402.188382.979860@rob.eddelbuettel.com>
 <CAAZer4=Y=yAmxgOSWhDswp0rOZAau=AwG3R2JXnncfFm-Vd1GQ@mail.gmail.com>
Message-ID: <CADVZz_qnOd8bXfFQX_Y81bnsQWPzWp3ieHyo7QEaWtPh3U8-Bw@mail.gmail.com>

Adding the following to .travis.yml:

before_install:
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo apt-get -y install
libfftw3-dev ; fi

did the trick!

Thank you both for your attention to this issue!

Bests,
Marta Karas





On Thu, Sep 10, 2020 at 8:35 AM Karim Rahim <karim.rahim at gmail.com> wrote:

> Thanks,
>
> That may be it. It is a missing dependency.
>
> It's been a while and I'm not sure which package exposes fftw3.h ...
>
> Karim
>
> On Thu, Sep 10, 2020 at 8:16 AM Dirk Eddelbuettel <edd at debian.org> wrote:
>
>>
>> On 9 September 2020 at 23:45, Karim Rahim wrote:
>> |  sudo apt-get install -y fftw3
>>
>> Or maybe rather
>>
>>    sudo apt-get install libfftw3-dev
>>
>> to get the development headers?
>>
>> Dirk
>>
>> | Then try again.
>> |
>> | Let me know if it doesn't work.
>> |
>> | Cheers!
>> | Karim
>> |
>> | On Wed, Sep 9, 2020 at 10:27 PM Max Turgeon <Max.Turgeon at umanitoba.ca>
>> wrote:
>> | >
>> | > Hi Marta,
>> | >
>> | > One change I can see from your Git history that seems to match the
>> first failed build on Travis is when you added "Imports: fftwtools" to your
>> DESCRIPTION file. And it makes sense, because if we look at its DESCRIPTION
>> file, we can see that it has fftw3 as a SystemRequirements. In other words,
>> it needs to be installed on Travis before you can run the checks on your
>> package.
>> | >
>> | > As for solutions, I can see that Karim wrote a short description of
>> how to install the library on Linux, and there's a link for Mac; all this
>> is on the Github repo: https://github.com/krahim/fftwtools
>> | >
>> | > I also noticed that there is an R package wrapping fftw on CRAN (
>> https://cran.r-project.org/package=fftw) and I can see that it's a
>> Suggested package for fftwtools. I haven't tried it, but presumably you
>> could install the fftw R package, instead of the fftw3 library.
>> | >
>> | > HTH,
>> | >
>> | > Max Turgeon
>> | > Assistant Professor
>> | > Department of Statistics
>> | > Department of Computer Science
>> | > University of Manitoba
>> | > maxturgeon.ca
>> | >
>> | >
>> | >
>> | > ________________________________
>> | > From: R-package-devel <r-package-devel-bounces at r-project.org> on
>> behalf of Marta Kara? <marta.karass at gmail.com>
>> | > Sent: Wednesday, September 9, 2020 9:09 PM
>> | > To: package-develop <r-package-devel at r-project.org>
>> | > Cc: karim.rahim at queensu.ca <karim.rahim at queensu.ca>
>> | > Subject: [R-pkg-devel] Fixing travis build fail due to fftwtools
>> fatal error (fftw3.h: No such file or directory)
>> | >
>> | > ********************************************************
>> | > Caution: This message was sent from outside the University of
>> Manitoba.
>> | > ********************************************************
>> | >
>> | > Dear all,
>> | >
>> | > I have been facing travis build fail on linux xenial due to *fftwtools
>> | > fatal error* (fftw3.h: No such file or directory) with my R package.
>> The
>> | > error appeared at a random time a few months ago (at a random time :=
>> I do
>> | > not link it with any fftwtools-function related change commit I did)
>> and
>> | > persists.
>> | >
>> | > There is not much I achieved in googling and trying to decipher it,
>> sadly;
>> | > I am hoping maybe some Community members saw a similar error with
>> their dev
>> | > work and can suggest a hint/solution?
>> | >
>> | > Package GitHub: https://github.com/martakarass/runstats
>> | > Failed Travis job log:
>> | > https://travis-ci.com/github/martakarass/runstats/jobs/383037333
>> | >
>> | > Error excerpt:
>> | >
>> | > * installing *source* package ?fftwtools? ...
>> | > ** package ?fftwtools? successfully unpacked and MD5 sums checked
>> | > ** using staged installation
>> | > ** libs
>> | > gcc -I"/opt/R/4.0.2/lib/R/include" -DNDEBUG   -I/usr/local/include
>>  -fpic
>> | >  -g -O2  -c fftwtools.c -o fftwtools.o
>> | > fftwtools.c:28:18: fatal error: fftw3.h: No such file or directory
>> | > compilation terminated.
>> | > /opt/R/4.0.2/lib/R/etc/Makeconf:167: recipe for target 'fftwtools.o'
>> failed
>> | > make: *** [fftwtools.o] Error 1
>> | > ERROR: compilation failed for package ?fftwtools?
>> | > * removing ?/home/travis/R/Library/fftwtools?
>> | > Error in i.p(...) :
>> | >   (converted from warning) installation of package ?fftwtools? had
>> non-zero
>> | > exit status
>> | > Calls: <Anonymous> ... with_rprofile_user -> with_envvar -> force ->
>> force
>> | > -> i.p
>> | > Execution halted
>> | > The command "Rscript -e 'deps <-
>> remotes::dev_package_deps(dependencies =
>> | > NA);remotes::install_deps(dependencies = TRUE);if (!all(deps$package
>> %in%
>> | > installed.packages())) { message("missing: ",
>> paste(setdiff(deps$package,
>> | > installed.packages()), collapse=", ")); q(status = 1, save = "no")}'"
>> | > failed and exited with 1 during .
>> | > Your build has been stopped.
>> | >
>> | >
>> | > Thank you,
>> | >
>> | > Marta
>> | >
>> | >         [[alternative HTML version deleted]]
>> | >
>> | > ______________________________________________
>> | > R-package-devel at r-project.org mailing list
>> | > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> |
>> | ______________________________________________
>> | R-package-devel at r-project.org mailing list
>> | https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>> --
>> https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>>
>

	[[alternative HTML version deleted]]


From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Fri Sep 11 03:14:39 2020
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Thu, 10 Sep 2020 18:14:39 -0700
Subject: [R-pkg-devel] DOI for archived package?
In-Reply-To: <58f64994-30da-d9a5-724d-5f2ba3e11e79@gmail.com>
References: <58f64994-30da-d9a5-724d-5f2ba3e11e79@gmail.com>
Message-ID: <25D4A529-1307-45E3-B815-13F8DC4129FE@dcn.davis.ca.us>

If your article is published with a DOI and read by anyone actually interested in it then it will be likely be accessed, so "never" seems rather pessimistic of you. You could simply not argue with your editor and acquiesce.



On September 10, 2020 9:14:12 AM PDT, "Kevin R. Coombes" <kevin.r.coombes at gmail.com> wrote:
>Hi,
>
>I am in the process of submitting a "workflow" article about an R 
>package (which is onCRAN) to F1000Research. The associate editor that I
>
>am dealing with wants a "DOI" for the source code of the package being 
>described in the manuscript.? I have already explained that CRAN 
>archives all versions of packages, and I sent him the URL to the
>archive 
>page for the package, However, he still seems to believe that a DOI 
>needs to be assigned by some site like Zenodo.
>
>I haven't yet responded by pointing out that CRAN has been archiving
>all 
>versions of packages since at least the year 2000, it has mirrors all 
>over the world, and the URL/URI used here is likely to be far more 
>permanent than the DOI from Zenodo. Nor have I pointed out that there 
>are more than 15,000 packages at CRAN, nor that not a single R user 
>would ever think to go look on Zenodo for an R package.
>
>Does anyone have other suggestions for how to respond? (I know;? I
>could 
>just put the [expletive] thing into Zenodo and move on, but creating a 
>permanent identifier for something that will *never *be accessed just 
>seems stupid.)
>
>Thanks,
> ? Kevin
>
>	[[alternative HTML version deleted]]
>
>______________________________________________
>R-package-devel at r-project.org mailing list
>https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
Sent from my phone. Please excuse my brevity.


From edd @end|ng |rom deb|@n@org  Fri Sep 11 17:20:01 2020
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Fri, 11 Sep 2020 10:20:01 -0500
Subject: [R-pkg-devel] 
 Fixing travis build fail due to fftwtools fatal error
 (fftw3.h: No such file or directory)
In-Reply-To: <CADVZz_qnOd8bXfFQX_Y81bnsQWPzWp3ieHyo7QEaWtPh3U8-Bw@mail.gmail.com>
References: <CADVZz_oa0SsbYPCT2SsWymnDsi1VXtyQ7ViM+aKzGGuZhiwnwQ@mail.gmail.com>
 <34cef351271140fca036eba8277fbf41@YQBPR0101MB1652.CANPRD01.PROD.OUTLOOK.COM>
 <CAAZer4k0fhbVddf+=9zZwDVz1Lf3wgbHAsBBBKP_7tbmYA6AnQ@mail.gmail.com>
 <24410.6402.188382.979860@rob.eddelbuettel.com>
 <CAAZer4=Y=yAmxgOSWhDswp0rOZAau=AwG3R2JXnncfFm-Vd1GQ@mail.gmail.com>
 <CADVZz_qnOd8bXfFQX_Y81bnsQWPzWp3ieHyo7QEaWtPh3U8-Bw@mail.gmail.com>
Message-ID: <24411.38305.39197.894488@rob.eddelbuettel.com>


On 10 September 2020 at 14:14, Marta Kara? wrote:
| Adding the following to .travis.yml:
| 
| before_install:
|   - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo apt-get -y install
| libfftw3-dev ; fi
| 
| did the trick!

I think that is an example of the issue discussed in this blog post:
  http://dirk.eddelbuettel.com/blog/2020/08/26#029_introducing_bspm

The RSPM system gets you the package, but it is by its (on purpose simple)
design disconnected and unaware of the dependency required which sent you
down a rabbit hole. (One could also suggest that maybe Karim should expand
   SystemRequirements:	fftw3 (>= 3.1.2)
to maybe list the packages offering fftw3 _headers_. Jeroen uses a pattern
for this, eg curl has
   SystemRequirements:	libcurl: libcurl-devel (rpm) or libcurl4-openssl-dev (deb).
which is already one step better.)

Only systems with actual dependency resolution can go further, but it is hard
to do that cross-platform / cross-OS.  On Linux we have both BSPM utilising
the existing rpm and deb binaries, respectively, maintained by tireless
volunteers, as well as the older use of directly using the binaries.

Eg looking at the Ubuntu binary from the Rutter PPA shows that
r-cran-fftwtools will bring the fftw3 runtime in:

   docker at 08d894be427a:/work$ apt-cache show r-cran-fftwtools | grep ^Depends
   Depends: r-base-core, libfftw3-double3 (>= 3.3.5)
   docker at 08d894be427a:/work$ 

That would be an easier binary install as it skips the 'from source' build
step that sent Marta hunting for the required header.

If I find some time I will try to set up some Travis CI examples utilizing
BSPM.  Until then, one can do as I have done for over half a decade and point
Travis CI to these binaries via the (still maintained and simple) r-travis
setup.  Works for me.  See http://eddelbuettel.github.io/r-travis/  and
numerous .travis.yml in packages of mine and a few other users.

Dirk

| Thank you both for your attention to this issue!
| 
| Bests,
| Marta Karas
| 
| 
| 
| 
| 
| On Thu, Sep 10, 2020 at 8:35 AM Karim Rahim <karim.rahim at gmail.com> wrote:
| 
| > Thanks,
| >
| > That may be it. It is a missing dependency.
| >
| > It's been a while and I'm not sure which package exposes fftw3.h ...
| >
| > Karim
| >
| > On Thu, Sep 10, 2020 at 8:16 AM Dirk Eddelbuettel <edd at debian.org> wrote:
| >
| >>
| >> On 9 September 2020 at 23:45, Karim Rahim wrote:
| >> |  sudo apt-get install -y fftw3
| >>
| >> Or maybe rather
| >>
| >>    sudo apt-get install libfftw3-dev
| >>
| >> to get the development headers?
| >>
| >> Dirk
| >>
| >> | Then try again.
| >> |
| >> | Let me know if it doesn't work.
| >> |
| >> | Cheers!
| >> | Karim
| >> |
| >> | On Wed, Sep 9, 2020 at 10:27 PM Max Turgeon <Max.Turgeon at umanitoba.ca>
| >> wrote:
| >> | >
| >> | > Hi Marta,
| >> | >
| >> | > One change I can see from your Git history that seems to match the
| >> first failed build on Travis is when you added "Imports: fftwtools" to your
| >> DESCRIPTION file. And it makes sense, because if we look at its DESCRIPTION
| >> file, we can see that it has fftw3 as a SystemRequirements. In other words,
| >> it needs to be installed on Travis before you can run the checks on your
| >> package.
| >> | >
| >> | > As for solutions, I can see that Karim wrote a short description of
| >> how to install the library on Linux, and there's a link for Mac; all this
| >> is on the Github repo: https://github.com/krahim/fftwtools
| >> | >
| >> | > I also noticed that there is an R package wrapping fftw on CRAN (
| >> https://cran.r-project.org/package=fftw) and I can see that it's a
| >> Suggested package for fftwtools. I haven't tried it, but presumably you
| >> could install the fftw R package, instead of the fftw3 library.
| >> | >
| >> | > HTH,
| >> | >
| >> | > Max Turgeon
| >> | > Assistant Professor
| >> | > Department of Statistics
| >> | > Department of Computer Science|
 >> | > University of Manitoba
| >> | > maxturgeon.ca
| >> | >
| >> | >
| >> | >
| >> | > ________________________________
| >> | > From: R-package-devel <r-package-devel-bounces at r-project.org> on
| >> behalf of Marta Kara? <marta.karass at gmail.com>
| >> | > Sent: Wednesday, September 9, 2020 9:09 PM
| >> | > To: package-develop <r-package-devel at r-project.org>
| >> | > Cc: karim.rahim at queensu.ca <karim.rahim at queensu.ca>
| >> | > Subject: [R-pkg-devel] Fixing travis build fail due to fftwtools
| >> fatal error (fftw3.h: No such file or directory)
| >> | >
| >> | > ********************************************************
| >> | > Caution: This message was sent from outside the University of
| >> Manitoba.
| >> | > ********************************************************
| >> | >
| >> | > Dear all,
| >> | >
| >> | > I have been facing travis build fail on linux xenial due to *fftwtools
| >> | > fatal error* (fftw3.h: No such file or directory) with my R package.
| >> The
| >> | > error appeared at a random time a few months ago (at a random time :=
| >> I do
| >> | > not link it with any fftwtools-function related change commit I did)
| >> and
| >> | > persists.
| >> | >
| >> | > There is not much I achieved in googling and trying to decipher it,
| >> sadly;
| >> | > I am hoping maybe some Community members saw a similar error with
| >> their dev
| >> | > work and can suggest a hint/solution?
| >> | >
| >> | > Package GitHub: https://github.com/martakarass/runstats
| >> | > Failed Travis job log:
| >> | > https://travis-ci.com/github/martakarass/runstats/jobs/383037333
| >> | >
| >> | > Error excerpt:
| >> | >
| >> | > * installing *source* package ?fftwtools? ...
| >> | > ** package ?fftwtools? successfully unpacked and MD5 sums checked
| >> | > ** using staged installation
| >> | > ** libs
| >> | > gcc -I"/opt/R/4.0.2/lib/R/include" -DNDEBUG   -I/usr/local/include
| >>  -fpic
| >> | >  -g -O2  -c fftwtools.c -o fftwtools.o
| >> | > fftwtools.c:28:18: fatal error: fftw3.h: No such file or directory
| >> | > compilation terminated.
| >> | > /opt/R/4.0.2/lib/R/etc/Makeconf:167: recipe for target 'fftwtools.o'
| >> failed
| >> | > make: *** [fftwtools.o] Error 1
| >> | > ERROR: compilation failed for package ?fftwtools?
| >> | > * removing ?/home/travis/R/Library/fftwtools?
| >> | > Error in i.p(...) :
| >> | >   (converted from warning) installation of package ?fftwtools? had
| >> non-zero
| >> | > exit status
| >> | > Calls: <Anonymous> ... with_rprofile_user -> with_envvar -> force ->
| >> force
| >> | > -> i.p
| >> | > Execution halted
| >> | > The command "Rscript -e 'deps <-
| >> remotes::dev_package_deps(dependencies =
| >> | > NA);remotes::install_deps(dependencies = TRUE);if (!all(deps$package
| >> %in%
| >> | > installed.packages())) { message("missing: ",
| >> paste(setdiff(deps$package,
| >> | > installed.packages()), collapse=", ")); q(status = 1, save = "no")}'"
| >> | > failed and exited with 1 during .
| >> | > Your build has been stopped.
| >> | >
| >> | >
| >> | > Thank you,
| >> | >
| >> | > Marta
| >> | >
| >> | >         [[alternative HTML version deleted]]
| >> | >
| >> | > ______________________________________________
| >> | > R-package-devel at r-project.org mailing list
| >> | > https://stat.ethz.ch/mailman/listinfo/r-package-devel
| >> |
| >> | ______________________________________________
| >> | R-package-devel at r-project.org mailing list
| >> | https://stat.ethz.ch/mailman/listinfo/r-package-devel
| >>
| >> --
| >> https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
| >>
| >

-- 
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From k@r|m@r@h|m @end|ng |rom gm@||@com  Fri Sep 11 19:09:58 2020
From: k@r|m@r@h|m @end|ng |rom gm@||@com (Karim Rahim)
Date: Fri, 11 Sep 2020 13:09:58 -0400
Subject: [R-pkg-devel] 
 Fixing travis build fail due to fftwtools fatal error
 (fftw3.h: No such file or directory)
In-Reply-To: <24411.38305.39197.894488@rob.eddelbuettel.com>
References: <CADVZz_oa0SsbYPCT2SsWymnDsi1VXtyQ7ViM+aKzGGuZhiwnwQ@mail.gmail.com>
 <34cef351271140fca036eba8277fbf41@YQBPR0101MB1652.CANPRD01.PROD.OUTLOOK.COM>
 <CAAZer4k0fhbVddf+=9zZwDVz1Lf3wgbHAsBBBKP_7tbmYA6AnQ@mail.gmail.com>
 <24410.6402.188382.979860@rob.eddelbuettel.com>
 <CAAZer4=Y=yAmxgOSWhDswp0rOZAau=AwG3R2JXnncfFm-Vd1GQ@mail.gmail.com>
 <CADVZz_qnOd8bXfFQX_Y81bnsQWPzWp3ieHyo7QEaWtPh3U8-Bw@mail.gmail.com>
 <24411.38305.39197.894488@rob.eddelbuettel.com>
Message-ID: <CAAZer4=D8UGKcNH1=_dx0FL-PEYRvF-v+ZZBB7NzS6rB3sjbGQ@mail.gmail.com>

Hi Dirk,

Thanks for resolving this! It's been awhile since I've worked on this...

So for dependencies, I'd like to keep it as simple as possible. I agree
fftw3 may need to be updated.

It's my understanding that if one were to install the latest fftw (3.3.8)
from source then it would expose the header file.

Is this incorrect?

If this is the case, then it becomes about the various distribution
specific packages.
So then I want to aim people in the right direction.

How about?

fftw3 (>= 3.1.2; ensure fftw3.h is exposed - libfftw3-dev in Ubuntu)

Kind Regards,
Karim





On Fri, Sep 11, 2020 at 11:20 AM Dirk Eddelbuettel <edd at debian.org> wrote:
>
>
> On 10 September 2020 at 14:14, Marta Kara? wrote:
> | Adding the following to .travis.yml:
> |
> | before_install:
> |   - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo apt-get -y install
> | libfftw3-dev ; fi
> |
> | did the trick!
>
> I think that is an example of the issue discussed in this blog post:
>   http://dirk.eddelbuettel.com/blog/2020/08/26#029_introducing_bspm
>
> The RSPM system gets you the package, but it is by its (on purpose simple)
> design disconnected and unaware of the dependency required which sent you
> down a rabbit hole. (One could also suggest that maybe Karim should expand
>    SystemRequirements:  fftw3 (>= 3.1.2)
> to maybe list the packages offering fftw3 _headers_. Jeroen uses a pattern
> for this, eg curl has
>    SystemRequirements:  libcurl: libcurl-devel (rpm) or
libcurl4-openssl-dev (deb).
> which is already one step better.)
>
> Only systems with actual dependency resolution can go further, but it is
hard
> to do that cross-platform / cross-OS.  On Linux we have both BSPM
utilising
> the existing rpm and deb binaries, respectively, maintained by tireless
> volunteers, as well as the older use of directly using the binaries.
>
> Eg looking at the Ubuntu binary from the Rutter PPA shows that
> r-cran-fftwtools will bring the fftw3 runtime in:
>
>    docker at 08d894be427a:/work$ apt-cache show r-cran-fftwtools | grep
^Depends
>    Depends: r-base-core, libfftw3-double3 (>= 3.3.5)
>    docker at 08d894be427a:/work$
>
> That would be an easier binary install as it skips the 'from source' build
> step that sent Marta hunting for the required header.
>
> If I find some time I will try to set up some Travis CI examples utilizing
> BSPM.  Until then, one can do as I have done for over half a decade and
point
> Travis CI to these binaries via the (still maintained and simple) r-travis
> setup.  Works for me.  See http://eddelbuettel.github.io/r-travis/  and
> numerous .travis.yml in packages of mine and a few other users.
>
> Dirk
>
> | Thank you both for your attention to this issue!
> |
> | Bests,
> | Marta Karas
> |
> |
> |
> |
> |
> | On Thu, Sep 10, 2020 at 8:35 AM Karim Rahim <karim.rahim at gmail.com>
wrote:
> |
> | > Thanks,
> | >
> | > That may be it. It is a missing dependency.
> | >
> | > It's been a while and I'm not sure which package exposes fftw3.h ...
> | >
> | > Karim
> | >
> | > On Thu, Sep 10, 2020 at 8:16 AM Dirk Eddelbuettel <edd at debian.org>
wrote:
> | >
> | >>
> | >> On 9 September 2020 at 23:45, Karim Rahim wrote:
> | >> |  sudo apt-get install -y fftw3
> | >>
> | >> Or maybe rather
> | >>
> | >>    sudo apt-get install libfftw3-dev
> | >>
> | >> to get the development headers?
> | >>
> | >> Dirk
> | >>
> | >> | Then try again.
> | >> |
> | >> | Let me know if it doesn't work.
> | >> |
> | >> | Cheers!
> | >> | Karim
> | >> |
> | >> | On Wed, Sep 9, 2020 at 10:27 PM Max Turgeon <
Max.Turgeon at umanitoba.ca>
> | >> wrote:
> | >> | >
> | >> | > Hi Marta,
> | >> | >
> | >> | > One change I can see from your Git history that seems to match
the
> | >> first failed build on Travis is when you added "Imports: fftwtools"
to your
> | >> DESCRIPTION file. And it makes sense, because if we look at its
DESCRIPTION
> | >> file, we can see that it has fftw3 as a SystemRequirements. In other
words,
> | >> it needs to be installed on Travis before you can run the checks on
your
> | >> package.
> | >> | >
> | >> | > As for solutions, I can see that Karim wrote a short description
of
> | >> how to install the library on Linux, and there's a link for Mac; all
this
> | >> is on the Github repo: https://github.com/krahim/fftwtools
> | >> | >
> | >> | > I also noticed that there is an R package wrapping fftw on CRAN (
> | >> https://cran.r-project.org/package=fftw) and I can see that it's a
> | >> Suggested package for fftwtools. I haven't tried it, but presumably
you
> | >> could install the fftw R package, instead of the fftw3 library.
> | >> | >
> | >> | > HTH,
> | >> | >
> | >> | > Max Turgeon
> | >> | > Assistant Professor
> | >> | > Department of Statistics
> | >> | > Department of Computer Science|
>  >> | > University of Manitoba
> | >> | > maxturgeon.ca
> | >> | >
> | >> | >
> | >> | >
> | >> | > ________________________________
> | >> | > From: R-package-devel <r-package-devel-bounces at r-project.org> on
> | >> behalf of Marta Kara? <marta.karass at gmail.com>
> | >> | > Sent: Wednesday, September 9, 2020 9:09 PM
> | >> | > To: package-develop <r-package-devel at r-project.org>
> | >> | > Cc: karim.rahim at queensu.ca <karim.rahim at queensu.ca>
> | >> | > Subject: [R-pkg-devel] Fixing travis build fail due to fftwtools
> | >> fatal error (fftw3.h: No such file or directory)
> | >> | >
> | >> | > ********************************************************
> | >> | > Caution: This message was sent from outside the University of
> | >> Manitoba.
> | >> | > ********************************************************
> | >> | >
> | >> | > Dear all,
> | >> | >
> | >> | > I have been facing travis build fail on linux xenial due to
*fftwtools
> | >> | > fatal error* (fftw3.h: No such file or directory) with my R
package.
> | >> The
> | >> | > error appeared at a random time a few months ago (at a random
time :=
> | >> I do
> | >> | > not link it with any fftwtools-function related change commit I
did)
> | >> and
> | >> | > persists.
> | >> | >
> | >> | > There is not much I achieved in googling and trying to decipher
it,
> | >> sadly;
> | >> | > I am hoping maybe some Community members saw a similar error with
> | >> their dev
> | >> | > work and can suggest a hint/solution?
> | >> | >
> | >> | > Package GitHub: https://github.com/martakarass/runstats
> | >> | > Failed Travis job log:
> | >> | > https://travis-ci.com/github/martakarass/runstats/jobs/383037333
> | >> | >
> | >> | > Error excerpt:
> | >> | >
> | >> | > * installing *source* package ?fftwtools? ...
> | >> | > ** package ?fftwtools? successfully unpacked and MD5 sums checked
> | >> | > ** using staged installation
> | >> | > ** libs
> | >> | > gcc -I"/opt/R/4.0.2/lib/R/include" -DNDEBUG
 -I/usr/local/include
> | >>  -fpic
> | >> | >  -g -O2  -c fftwtools.c -o fftwtools.o
> | >> | > fftwtools.c:28:18: fatal error: fftw3.h: No such file or
directory
> | >> | > compilation terminated.
> | >> | > /opt/R/4.0.2/lib/R/etc/Makeconf:167: recipe for target
'fftwtools.o'
> | >> failed
> | >> | > make: *** [fftwtools.o] Error 1
> | >> | > ERROR: compilation failed for package ?fftwtools?
> | >> | > * removing ?/home/travis/R/Library/fftwtools?
> | >> | > Error in i.p(...) :
> | >> | >   (converted from warning) installation of package ?fftwtools?
had
> | >> non-zero
> | >> | > exit status
> | >> | > Calls: <Anonymous> ... with_rprofile_user -> with_envvar ->
force ->
> | >> force
> | >> | > -> i.p
> | >> | > Execution halted
> | >> | > The command "Rscript -e 'deps <-
> | >> remotes::dev_package_deps(dependencies =
> | >> | > NA);remotes::install_deps(dependencies = TRUE);if
(!all(deps$package
> | >> %in%
> | >> | > installed.packages())) { message("missing: ",
> | >> paste(setdiff(deps$package,
> | >> | > installed.packages()), collapse=", ")); q(status = 1, save =
"no")}'"
> | >> | > failed and exited with 1 during .
> | >> | > Your build has been stopped.
> | >> | >
> | >> | >
> | >> | > Thank you,
> | >> | >
> | >> | > Marta
> | >> | >
> | >> | >         [[alternative HTML version deleted]]
> | >> | >
> | >> | > ______________________________________________
> | >> | > R-package-devel at r-project.org mailing list
> | >> | > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> | >> |
> | >> | ______________________________________________
> | >> | R-package-devel at r-project.org mailing list
> | >> | https://stat.ethz.ch/mailman/listinfo/r-package-devel
> | >>
> | >> --
> | >> https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
> | >>
> | >
>
> --
> https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org

	[[alternative HTML version deleted]]


From edd @end|ng |rom deb|@n@org  Fri Sep 11 19:39:19 2020
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Fri, 11 Sep 2020 12:39:19 -0500
Subject: [R-pkg-devel] 
 Fixing travis build fail due to fftwtools fatal error
 (fftw3.h: No such file or directory)
In-Reply-To: <CAAZer4=D8UGKcNH1=_dx0FL-PEYRvF-v+ZZBB7NzS6rB3sjbGQ@mail.gmail.com>
References: <CADVZz_oa0SsbYPCT2SsWymnDsi1VXtyQ7ViM+aKzGGuZhiwnwQ@mail.gmail.com>
 <34cef351271140fca036eba8277fbf41@YQBPR0101MB1652.CANPRD01.PROD.OUTLOOK.COM>
 <CAAZer4k0fhbVddf+=9zZwDVz1Lf3wgbHAsBBBKP_7tbmYA6AnQ@mail.gmail.com>
 <24410.6402.188382.979860@rob.eddelbuettel.com>
 <CAAZer4=Y=yAmxgOSWhDswp0rOZAau=AwG3R2JXnncfFm-Vd1GQ@mail.gmail.com>
 <CADVZz_qnOd8bXfFQX_Y81bnsQWPzWp3ieHyo7QEaWtPh3U8-Bw@mail.gmail.com>
 <24411.38305.39197.894488@rob.eddelbuettel.com>
 <CAAZer4=D8UGKcNH1=_dx0FL-PEYRvF-v+ZZBB7NzS6rB3sjbGQ@mail.gmail.com>
Message-ID: <24411.46663.674586.92542@rob.eddelbuettel.com>


Hi Karim,

On 11 September 2020 at 13:09, Karim Rahim wrote:
| Thanks for resolving this! It's been awhile since I've worked on this...
| 
| So for dependencies, I'd like to keep it as simple as possible. I agree
| fftw3 may need to be updated.
| 
| It's my understanding that if one were to install the latest fftw (3.3.8)
| from source then it would expose the header file.

Not necessarily and it depends on how the package is setup.

In general you want a '-dev' or '-devel' package but I do not know what this
one is called in the Fedora/RH/CentOS world.
 
| Is this incorrect?
| 
| If this is the case, then it becomes about the various distribution
| specific packages.
| So then I want to aim people in the right direction.
| 
| How about?
| 
| fftw3 (>= 3.1.2; ensure fftw3.h is exposed - libfftw3-dev in Ubuntu)

So per the above I would suggest you reconsider the curl example I emailed
earlier and do something like

  fftw3 development package: libfftw3-dev (deb), ..... (rpm)

Maybe someone can help with the rpm package name.

Cheers, Dirk

| 
| Kind Regards,
| Karim
| 
| 
| 
| 
| 
| On Fri, Sep 11, 2020 at 11:20 AM Dirk Eddelbuettel <edd at debian.org> wrote:
| >
| >
| > On 10 September 2020 at 14:14, Marta Kara? wrote:
| > | Adding the following to .travis.yml:
| > |
| > | before_install:
| > |   - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo apt-get -y install
| > | libfftw3-dev ; fi
| > |
| > | did the trick!
| >
| > I think that is an example of the issue discussed in this blog post:
| >   http://dirk.eddelbuettel.com/blog/2020/08/26#029_introducing_bspm
| >
| > The RSPM system gets you the package, but it is by its (on purpose simple)
| > design disconnected and unaware of the dependency required which sent you
| > down a rabbit hole. (One could also suggest that maybe Karim should expand
| >    SystemRequirements:  fftw3 (>= 3.1.2)
| > to maybe list the packages offering fftw3 _headers_. Jeroen uses a pattern
| > for this, eg curl has
| >    SystemRequirements:  libcurl: libcurl-devel (rpm) or
| libcurl4-openssl-dev (deb).
| > which is already one step better.)
| >
| > Only systems with actual dependency resolution can go further, but it is
| hard
| > to do that cross-platform / cross-OS.  On Linux we have both BSPM
| utilising
| > the existing rpm and deb binaries, respectively, maintained by tireless
| > volunteers, as well as the older use of directly using the binaries.
| >
| > Eg looking at the Ubuntu binary from the Rutter PPA shows that
| > r-cran-fftwtools will bring the fftw3 runtime in:
| >
| >    docker at 08d894be427a:/work$ apt-cache show r-cran-fftwtools | grep
| ^Depends
| >    Depends: r-base-core, libfftw3-double3 (>= 3.3.5)
| >    docker at 08d894be427a:/work$
| >
| > That would be an easier binary install as it skips the 'from source' build
| > step that sent Marta hunting for the required header.
| >
| > If I find some time I will try to set up some Travis CI examples utilizing
| > BSPM.  Until then, one can do as I have done for over half a decade and
| point
| > Travis CI to these binaries via the (still maintained and simple) r-travis
| > setup.  Works for me.  See http://eddelbuettel.github.io/r-travis/  and
| > numerous .travis.yml in packages of mine and a few other users.
| >
| > Dirk
| >
| > | Thank you both for your attention to this issue!
| > |
| > | Bests,
| > | Marta Karas
| > |
| > |
| > |
| > |
| > |
| > | On Thu, Sep 10, 2020 at 8:35 AM Karim Rahim <karim.rahim at gmail.com>
| wrote:
| > |
| > | > Thanks,
| > | >
| > | > That may be it. It is a missing dependency.
| > | >
| > | > It's been a while and I'm not sure which package exposes fftw3.h ...
| > | >
| > | > Karim
| > | >
| > | > On Thu, Sep 10, 2020 at 8:16 AM Dirk Eddelbuettel <edd at debian.org>
| wrote:
| > | >
| > | >>
| > | >> On 9 September 2020 at 23:45, Karim Rahim wrote:
| > | >> |  sudo apt-get install -y fftw3
| > | >>
| > | >> Or maybe rather
| > | >>
| > | >>    sudo apt-get install libfftw3-dev
| > | >>
| > | >> to get the development headers?
| > | >>
| > | >> Dirk
| > | >>
| > | >> | Then try again.
| > | >> |
| > | >> | Let me know if it doesn't work.
| > | >> |
| > | >> | Cheers!
| > | >> | Karim
| > | >> |
| > | >> | On Wed, Sep 9, 2020 at 10:27 PM Max Turgeon <
| Max.Turgeon at umanitoba.ca>
| > | >> wrote:
| > | >> | >
| > | >> | > Hi Marta,
| > | >> | >
| > | >> | > One change I can see from your Git history that seems to match
| the
| > | >> first failed build on Travis is when you added "Imports: fftwtools"
| to your
| > | >> DESCRIPTION file. And it makes sense, because if we look at its
| DESCRIPTION
| > | >> file, we can see that it has fftw3 as a SystemRequirements. In other
| words,
| > | >> it needs to be installed on Travis before you can run the checks on
| your
| > | >> package.
| > | >> | >
| > | >> | > As for solutions, I can see that Karim wrote a short description
| of
| > | >> how to install the library on Linux, and there's a link for Mac; all
| this
| > | >> is on the Github repo: https://github.com/krahim/fftwtools
| > | >> | >
| > | >> | > I also noticed that there is an R package wrapping fftw on CRAN (
| > | >> https://cran.r-project.org/package=fftw) and I can see that it's a
| > | >> Suggested package for fftwtools. I haven't tried it, but presumably
| you
| > | >> could install the fftw R package, instead of the fftw3 library.
| > | >> | >
| > | >> | > HTH,
| > | >> | >
| > | >> | > Max Turgeon
| > | >> | > Assistant Professor
| > | >> | > Department of Statistics
| > | >> | > Department of Computer Science|
| >  >> | > University of Manitoba
| > | >> | > maxturgeon.ca
| > | >> | >
| > | >> | >
| > | >> | >
| > | >> | > ________________________________
| > | >> | > From: R-package-devel <r-package-devel-bounces at r-project.org> on
| > | >> behalf of Marta Kara? <marta.karass at gmail.com>
| > | >> | > Sent: Wednesday, September 9, 2020 9:09 PM
| > | >> | > To: package-develop <r-package-devel at r-project.org>
| > | >> | > Cc: karim.rahim at queensu.ca <karim.rahim at queensu.ca>
| > | >> | > Subject: [R-pkg-devel] Fixing travis build fail due to fftwtools
| > | >> fatal error (fftw3.h: No such file or directory)
| > | >> | >
| > | >> | > ********************************************************
| > | >> | > Caution: This message was sent from outside the University of
| > | >> Manitoba.
| > | >> | > ********************************************************
| > | >> | >
| > | >> | > Dear all,
| > | >> | >
| > | >> | > I have been facing travis build fail on linux xenial due to
| *fftwtools
| > | >> | > fatal error* (fftw3.h: No such file or directory) with my R
| package.
| > | >> The
| > | >> | > error appeared at a random time a few months ago (at a random
| time :=
| > | >> I do
| > | >> | > not link it with any fftwtools-function related change commit I
| did)
| > | >> and
| > | >> | > persists.
| > | >> | >
| > | >> | > There is not much I achieved in googling and trying to decipher
| it,
| > | >> sadly;
| > | >> | > I am hoping maybe some Community members saw a similar error with
| > | >> their dev
| > | >> | > work and can suggest a hint/solution?
| > | >> | >
| > | >> | > Package GitHub: https://github.com/martakarass/runstats
| > | >> | > Failed Travis job log:
| > | >> | > https://travis-ci.com/github/martakarass/runstats/jobs/383037333
| > | >> | >
| > | >> | > Error excerpt:
| > | >> | >
| > | >> | > * installing *source* package ?fftwtools? ...
| > | >> | > ** package ?fftwtools? successfully unpacked and MD5 sums checked
| > | >> | > ** using staged installation
| > | >> | > ** libs
| > | >> | > gcc -I"/opt/R/4.0.2/lib/R/include" -DNDEBUG
|  -I/usr/local/include
| > | >>  -fpic
| > | >> | >  -g -O2  -c fftwtools.c -o fftwtools.o
| > | >> | > fftwtools.c:28:18: fatal error: fftw3.h: No such file or
| directory
| > | >> | > compilation terminated.
| > | >> | > /opt/R/4.0.2/lib/R/etc/Makeconf:167: recipe for target
| 'fftwtools.o'
| > | >> failed
| > | >> | > make: *** [fftwtools.o] Error 1
| > | >> | > ERROR: compilation failed for package ?fftwtools?
| > | >> | > * removing ?/home/travis/R/Library/fftwtools?
| > | >> | > Error in i.p(...) :
| > | >> | >   (converted from warning) installation of package ?fftwtools?
| had
| > | >> non-zero
| > | >> | > exit status
| > | >> | > Calls: <Anonymous> ... with_rprofile_user -> with_envvar ->
| force ->
| > | >> force
| > | >> | > -> i.p
| > | >> | > Execution halted
| > | >> | > The command "Rscript -e 'deps <-
| > | >> remotes::dev_package_deps(dependencies =
| > | >> | > NA);remotes::install_deps(dependencies = TRUE);if
| (!all(deps$package
| > | >> %in%
| > | >> | > installed.packages())) { message("missing: ",
| > | >> paste(setdiff(deps$package,
| > | >> | > installed.packages()), collapse=", ")); q(status = 1, save =
| "no")}'"
| > | >> | > failed and exited with 1 during .
| > | >> | > Your build has been stopped.
| > | >> | >
| > | >> | >
| > | >> | > Thank you,
| > | >> | >
| > | >> | > Marta
| > | >> | >
| > | >> | >         [[alternative HTML version deleted]]
| > | >> | >
| > | >> | > ______________________________________________
| > | >> | > R-package-devel at r-project.org mailing list
| > | >> | > https://stat.ethz.ch/mailman/listinfo/r-package-devel
| > | >> |
| > | >> | ______________________________________________
| > | >> | R-package-devel at r-project.org mailing list
| > | >> | https://stat.ethz.ch/mailman/listinfo/r-package-devel
| > | >>
| > | >> --
| > | >> https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
| > | >>
| > | >
| >
| > --
| > https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org

-- 
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From jen@@oeh|@ch|@ege| @end|ng |rom truec|u@ter@com  Fri Sep 11 21:00:56 2020
From: jen@@oeh|@ch|@ege| @end|ng |rom truec|u@ter@com (=?UTF-8?Q?Dr=2E_Jens_Oehlschl=C3=A4gel?=)
Date: Fri, 11 Sep 2020 21:00:56 +0200
Subject: [R-pkg-devel] Rcpp with clang++ -stdlib=libc++ ?
Message-ID: <trinity-2cfc6a32-a200-435b-a3f6-823956451a0e-1599850856474@3c-app-webde-bs58>

I can compile a package under clang++ with -stdlib=libstdc++, but with -stdlib=libc++ I get

"
In file included from /home/jo/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/r/headers.h:67:
/home/jo/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/platform/compiler.h:100:10: fatal error: 'cmath' file not found
#include <cmath>
???????? ^~~~~~~
1 error generated.
"

Is there any howto for using Rcpp with -stdlib=libc++ ?
Greetings from Munich

Jens Oehlschl?gel

?
P.S.

Package Makevars
CXX_STD = CXX17
PKG_CXXFLAGS=-O3 -march=native -pthread
PKG_LIBS=-latomic -pthread

~.R/Makevars
CXX17 = clang++ -stdlib=libc++
CXX17FLAGS = -fstack-protector-strong -D_FORTIFY_SOURCE=2 -g $(LTO)
CXX17STD = -std=c++17

> packageVersion("Rcpp")
[1] ?1.0.5?

> version
?????????????? _??????????????????????????
platform?????? x86_64-pc-linux-gnu????????
arch?????????? x86_64?????????????????????
os???????????? linux-gnu??????????????????
system???????? x86_64, linux-gnu??????????
status????????????????????????????????????
major????????? 4??????????????????????????
minor????????? 0.2????????????????????????
year?????????? 2020???????????????????????
month????????? 06?????????????????????????
day??????????? 22?????????????????????????
svn rev??????? 78730??????????????????????
language?????? R??????????????????????????
version.string R version 4.0.2 (2020-06-22)
nickname?????? Taking Off Again


From k@r|m@r@h|m @end|ng |rom gm@||@com  Sat Sep 12 11:28:53 2020
From: k@r|m@r@h|m @end|ng |rom gm@||@com (Karim Rahim)
Date: Sat, 12 Sep 2020 05:28:53 -0400
Subject: [R-pkg-devel] 
 Fixing travis build fail due to fftwtools fatal error
 (fftw3.h: No such file or directory)
In-Reply-To: <24411.46663.674586.92542@rob.eddelbuettel.com>
References: <CADVZz_oa0SsbYPCT2SsWymnDsi1VXtyQ7ViM+aKzGGuZhiwnwQ@mail.gmail.com>
 <34cef351271140fca036eba8277fbf41@YQBPR0101MB1652.CANPRD01.PROD.OUTLOOK.COM>
 <CAAZer4k0fhbVddf+=9zZwDVz1Lf3wgbHAsBBBKP_7tbmYA6AnQ@mail.gmail.com>
 <24410.6402.188382.979860@rob.eddelbuettel.com>
 <CAAZer4=Y=yAmxgOSWhDswp0rOZAau=AwG3R2JXnncfFm-Vd1GQ@mail.gmail.com>
 <CADVZz_qnOd8bXfFQX_Y81bnsQWPzWp3ieHyo7QEaWtPh3U8-Bw@mail.gmail.com>
 <24411.38305.39197.894488@rob.eddelbuettel.com>
 <CAAZer4=D8UGKcNH1=_dx0FL-PEYRvF-v+ZZBB7NzS6rB3sjbGQ@mail.gmail.com>
 <24411.46663.674586.92542@rob.eddelbuettel.com>
Message-ID: <CAAZer4=6sMz0GWvwh4aTWkWLK7nGTpV0MrvXoN80qMZERS=GzA@mail.gmail.com>

Hello,

There is only one fftw3 tar.gz  file that I see.

http://www.fftw.org/download.html

Once built it provides headers and static libraries to use fftw3 in cpp.

For an example of how it's used in cpp see:
http://www.fftw.org/fftw3_doc/Complex-One_002dDimensional-DFTs.html#Complex-One_002dDimensional-DFTs

As a general rule, you will need header files and to compile cpp code
using libraries.

This package basically provides a wrapper for fftw3 cpp routines. I
wrote it so I could easily swap fftw for fft in my multitaper package.

Ok I looked at the curl dependencies on the cran page.

If I do something similar, I would have:
libfftw3-dev (deb)
fftw-devel (rpm)

The documentation for these two packages state these contain the
header files and static libraries.

https://packages.debian.org/stretch/libfftw3-dev
http://rpmfind.net/linux/rpm2html/search.php?query=fftw-devel

I don't expect to rush this update, and I would appreciate
confirmation before doing this from a redhat user.

I appreciate that this is of use. I get less comments about this than
multitaper.

Kind regards,
Karim




On Fri., Sep. 11, 2020, 19:54 Dirk Eddelbuettel, <edd at debian.org> wrote:
>
>
> Hi Karim,
>
> On 11 September 2020 at 13:09, Karim Rahim wrote:
> | Thanks for resolving this! It's been awhile since I've worked on this...
> |
> | So for dependencies, I'd like to keep it as simple as possible. I agree
> | fftw3 may need to be updated.
> |
> | It's my understanding that if one were to install the latest fftw (3.3.8)
> | from source then it would expose the header file.
>
> Not necessarily and it depends on how the package is setup.
>
> In general you want a '-dev' or '-devel' package but I do not know what this
> one is called in the Fedora/RH/CentOS world.
>
> | Is this incorrect?
> |
> | If this is the case, then it becomes about the various distribution
> | specific packages.
> | So then I want to aim people in the right direction.
> |
> | How about?
> |
> | fftw3 (>= 3.1.2; ensure fftw3.h is exposed - libfftw3-dev in Ubuntu)
>
> So per the above I would suggest you reconsider the curl example I emailed
> earlier and do something like
>
>   fftw3 development package: libfftw3-dev (deb), ..... (rpm)
>
> Maybe someone can help with the rpm package name.
>
> Cheers, Dirk
>
> |
> | Kind Regards,
> | Karim
> |
> |
> |
> |
> |
> | On Fri, Sep 11, 2020 at 11:20 AM Dirk Eddelbuettel <edd at debian.org> wrote:
> | >
> | >
> | > On 10 September 2020 at 14:14, Marta Kara? wrote:
> | > | Adding the following to .travis.yml:
> | > |
> | > | before_install:
> | > |   - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo apt-get -y install
> | > | libfftw3-dev ; fi
> | > |
> | > | did the trick!
> | >
> | > I think that is an example of the issue discussed in this blog post:
> | >   http://dirk.eddelbuettel.com/blog/2020/08/26#029_introducing_bspm
> | >
> | > The RSPM system gets you the package, but it is by its (on purpose simple)
> | > design disconnected and unaware of the dependency required which sent you
> | > down a rabbit hole. (One could also suggest that maybe Karim should expand
> | >    SystemRequirements:  fftw3 (>= 3.1.2)
> | > to maybe list the packages offering fftw3 _headers_. Jeroen uses a pattern
> | > for this, eg curl has
> | >    SystemRequirements:  libcurl: libcurl-devel (rpm) or
> | libcurl4-openssl-dev (deb).
> | > which is already one step better.)
> | >
> | > Only systems with actual dependency resolution can go further, but it is
> | hard
> | > to do that cross-platform / cross-OS.  On Linux we have both BSPM
> | utilising
> | > the existing rpm and deb binaries, respectively, maintained by tireless
> | > volunteers, as well as the older use of directly using the binaries.
> | >
> | > Eg looking at the Ubuntu binary from the Rutter PPA shows that
> | > r-cran-fftwtools will bring the fftw3 runtime in:
> | >
> | >    docker at 08d894be427a:/work$ apt-cache show r-cran-fftwtools | grep
> | ^Depends
> | >    Depends: r-base-core, libfftw3-double3 (>= 3.3.5)
> | >    docker at 08d894be427a:/work$
> | >
> | > That would be an easier binary install as it skips the 'from source' build
> | > step that sent Marta hunting for the required header.
> | >
> | > If I find some time I will try to set up some Travis CI examples utilizing
> | > BSPM.  Until then, one can do as I have done for over half a decade and
> | point
> | > Travis CI to these binaries via the (still maintained and simple) r-travis
> | > setup.  Works for me.  See http://eddelbuettel.github.io/r-travis/  and
> | > numerous .travis.yml in packages of mine and a few other users.
> | >
> | > Dirk
> | >
> | > | Thank you both for your attention to this issue!
> | > |
> | > | Bests,
> | > | Marta Karas
> | > |
> | > |
> | > |
> | > |
> | > |
> | > | On Thu, Sep 10, 2020 at 8:35 AM Karim Rahim <karim.rahim at gmail.com>
> | wrote:
> | > |
> | > | > Thanks,
> | > | >
> | > | > That may be it. It is a missing dependency.
> | > | >
> | > | > It's been a while and I'm not sure which package exposes fftw3.h ...
> | > | >
> | > | > Karim
> | > | >
> | > | > On Thu, Sep 10, 2020 at 8:16 AM Dirk Eddelbuettel <edd at debian.org>
> | wrote:
> | > | >
> | > | >>
> | > | >> On 9 September 2020 at 23:45, Karim Rahim wrote:
> | > | >> |  sudo apt-get install -y fftw3
> | > | >>
> | > | >> Or maybe rather
> | > | >>
> | > | >>    sudo apt-get install libfftw3-dev
> | > | >>
> | > | >> to get the development headers?
> | > | >>
> | > | >> Dirk
> | > | >>
> | > | >> | Then try again.
> | > | >> |
> | > | >> | Let me know if it doesn't work.
> | > | >> |
> | > | >> | Cheers!
> | > | >> | Karim
> | > | >> |
> | > | >> | On Wed, Sep 9, 2020 at 10:27 PM Max Turgeon <
> | Max.Turgeon at umanitoba.ca>
> | > | >> wrote:
> | > | >> | >
> | > | >> | > Hi Marta,
> | > | >> | >
> | > | >> | > One change I can see from your Git history that seems to match
> | the
> | > | >> first failed build on Travis is when you added "Imports: fftwtools"
> | to your
> | > | >> DESCRIPTION file. And it makes sense, because if we look at its
> | DESCRIPTION
> | > | >> file, we can see that it has fftw3 as a SystemRequirements. In other
> | words,
> | > | >> it needs to be installed on Travis before you can run the checks on
> | your
> | > | >> package.
> | > | >> | >
> | > | >> | > As for solutions, I can see that Karim wrote a short description
> | of
> | > | >> how to install the library on Linux, and there's a link for Mac; all
> | this
> | > | >> is on the Github repo: https://github.com/krahim/fftwtools
> | > | >> | >
> | > | >> | > I also noticed that there is an R package wrapping fftw on CRAN (
> | > | >> https://cran.r-project.org/package=fftw) and I can see that it's a
> | > | >> Suggested package for fftwtools. I haven't tried it, but presumably
> | you
> | > | >> could install the fftw R package, instead of the fftw3 library.
> | > | >> | >
> | > | >> | > HTH,
> | > | >> | >
> | > | >> | > Max Turgeon
> | > | >> | > Assistant Professor
> | > | >> | > Department of Statistics
> | > | >> | > Department of Computer Science|
> | >  >> | > University of Manitoba
> | > | >> | > maxturgeon.ca
> | > | >> | >
> | > | >> | >
> | > | >> | >
> | > | >> | > ________________________________
> | > | >> | > From: R-package-devel <r-package-devel-bounces at r-project.org> on
> | > | >> behalf of Marta Kara? <marta.karass at gmail.com>
> | > | >> | > Sent: Wednesday, September 9, 2020 9:09 PM
> | > | >> | > To: package-develop <r-package-devel at r-project.org>
> | > | >> | > Cc: karim.rahim at queensu.ca <karim.rahim at queensu.ca>
> | > | >> | > Subject: [R-pkg-devel] Fixing travis build fail due to fftwtools
> | > | >> fatal error (fftw3.h: No such file or directory)
> | > | >> | >
> | > | >> | > ********************************************************
> | > | >> | > Caution: This message was sent from outside the University of
> | > | >> Manitoba.
> | > | >> | > ********************************************************
> | > | >> | >
> | > | >> | > Dear all,
> | > | >> | >
> | > | >> | > I have been facing travis build fail on linux xenial due to
> | *fftwtools
> | > | >> | > fatal error* (fftw3.h: No such file or directory) with my R
> | package.
> | > | >> The
> | > | >> | > error appeared at a random time a few months ago (at a random
> | time :=
> | > | >> I do
> | > | >> | > not link it with any fftwtools-function related change commit I
> | did)
> | > | >> and
> | > | >> | > persists.
> | > | >> | >
> | > | >> | > There is not much I achieved in googling and trying to decipher
> | it,
> | > | >> sadly;
> | > | >> | > I am hoping maybe some Community members saw a similar error with
> | > | >> their dev
> | > | >> | > work and can suggest a hint/solution?
> | > | >> | >
> | > | >> | > Package GitHub: https://github.com/martakarass/runstats
> | > | >> | > Failed Travis job log:
> | > | >> | > https://travis-ci.com/github/martakarass/runstats/jobs/383037333
> | > | >> | >
> | > | >> | > Error excerpt:
> | > | >> | >
> | > | >> | > * installing *source* package ?fftwtools? ...
> | > | >> | > ** package ?fftwtools? successfully unpacked and MD5 sums checked
> | > | >> | > ** using staged installation
> | > | >> | > ** libs
> | > | >> | > gcc -I"/opt/R/4.0.2/lib/R/include" -DNDEBUG
> |  -I/usr/local/include
> | > | >>  -fpic
> | > | >> | >  -g -O2  -c fftwtools.c -o fftwtools.o
> | > | >> | > fftwtools.c:28:18: fatal error: fftw3.h: No such file or
> | directory
> | > | >> | > compilation terminated.
> | > | >> | > /opt/R/4.0.2/lib/R/etc/Makeconf:167: recipe for target
> | 'fftwtools.o'
> | > | >> failed
> | > | >> | > make: *** [fftwtools.o] Error 1
> | > | >> | > ERROR: compilation failed for package ?fftwtools?
> | > | >> | > * removing ?/home/travis/R/Library/fftwtools?
> | > | >> | > Error in i.p(...) :
> | > | >> | >   (converted from warning) installation of package ?fftwtools?
> | had
> | > | >> non-zero
> | > | >> | > exit status
> | > | >> | > Calls: <Anonymous> ... with_rprofile_user -> with_envvar ->
> | force ->
> | > | >> force
> | > | >> | > -> i.p
> | > | >> | > Execution halted
> | > | >> | > The command "Rscript -e 'deps <-
> | > | >> remotes::dev_package_deps(dependencies =
> | > | >> | > NA);remotes::install_deps(dependencies = TRUE);if
> | (!all(deps$package
> | > | >> %in%
> | > | >> | > installed.packages())) { message("missing: ",
> | > | >> paste(setdiff(deps$package,
> | > | >> | > installed.packages()), collapse=", ")); q(status = 1, save =
> | "no")}'"
> | > | >> | > failed and exited with 1 during .
> | > | >> | > Your build has been stopped.
> | > | >> | >
> | > | >> | >
> | > | >> | > Thank you,
> | > | >> | >
> | > | >> | > Marta
> | > | >> | >
> | > | >> | >         [[alternative HTML version deleted]]
> | > | >> | >
> | > | >> | > ______________________________________________
> | > | >> | > R-package-devel at r-project.org mailing list
> | > | >> | > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> | > | >> |
> | > | >> | ______________________________________________
> | > | >> | R-package-devel at r-project.org mailing list
> | > | >> | https://stat.ethz.ch/mailman/listinfo/r-package-devel
> | > | >>
> | > | >> --
> | > | >> https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
> | > | >>
> | > | >
> | >
> | > --
> | > https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>
> --
> https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From edd @end|ng |rom deb|@n@org  Sat Sep 12 14:50:11 2020
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Sat, 12 Sep 2020 07:50:11 -0500
Subject: [R-pkg-devel] Rcpp with clang++ -stdlib=libc++ ?
In-Reply-To: <trinity-2cfc6a32-a200-435b-a3f6-823956451a0e-1599850856474@3c-app-webde-bs58>
References: <trinity-2cfc6a32-a200-435b-a3f6-823956451a0e-1599850856474@3c-app-webde-bs58>
Message-ID: <24412.50179.251274.357996@rob.eddelbuettel.com>


Hi Jens,

On 11 September 2020 at 21:00, Dr. Jens Oehlschl?gel wrote:
| I can compile a package under clang++ with -stdlib=libstdc++, but with -stdlib=libc++ I get
| 
| "
| In file included from /home/jo/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/r/headers.h:67:
| /home/jo/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/platform/compiler.h:100:10: fatal error: 'cmath' file not found
| #include <cmath>
| ???????? ^~~~~~~
| 1 error generated.
| "
| 
| Is there any howto for using Rcpp with -stdlib=libc++ ?

That has zero to do with Rcpp.  You are lacking a C++ library header when
switching the C++ standard library along with clang. Nothing that Rcpp ships,
or governs, or selects.  

I am forgetting the fine details here (and someone may hopefully fill in
fuller details) but in short, "that is just the way it is".  I think we
simply pivot back to the g++ standard C++ library even when using clang++.

Cheers from Chicago,  Dirk

| Greetings from Munich
| 
| Jens Oehlschl?gel
| 
| ?
| P.S.
| 
| Package Makevars
| CXX_STD = CXX17
| PKG_CXXFLAGS=-O3 -march=native -pthread
| PKG_LIBS=-latomic -pthread
| 
| ~.R/Makevars
| CXX17 = clang++ -stdlib=libc++
| CXX17FLAGS = -fstack-protector-strong -D_FORTIFY_SOURCE=2 -g $(LTO)
| CXX17STD = -std=c++17
| 
| > packageVersion("Rcpp")
| [1] ?1.0.5?
| 
| > version
| ?????????????? _??????????????????????????
| platform?????? x86_64-pc-linux-gnu????????
| arch?????????? x86_64?????????????????????
| os???????????? linux-gnu??????????????????
| system???????? x86_64, linux-gnu??????????
| status????????????????????????????????????
| major????????? 4??????????????????????????
| minor????????? 0.2????????????????????????
| year?????????? 2020???????????????????????
| month????????? 06?????????????????????????
| day??????????? 22?????????????????????????
| svn rev??????? 78730??????????????????????
| language?????? R??????????????????????????
| version.string R version 4.0.2 (2020-06-22)
| nickname?????? Taking Off Again
| 
| ______________________________________________
| R-package-devel at r-project.org mailing list
| https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From @|m|t @end|ng |rom @|xjup|ter@com  Sat Sep 12 22:58:15 2020
From: @|m|t @end|ng |rom @|xjup|ter@com (=?UTF-8?Q?Simit_Patel?=)
Date: Sat, 12 Sep 2020 20:58:15 +0000
Subject: [R-pkg-devel] failing on win and debian -- because of new
 submission?
References: <mail.5f5d3666.4a52.6b96b0735ad1ea1d@storage.wm.amazon.com>
Message-ID: <01010174841c8446-1ccfb8cc-ceb1-44b6-8e4a-c43c5ea91504-000000@us-west-2.amazonses.com>

hello,

?
i am submitting my first package for CRAN, but am failing pre-check on windows and debian. below is an excerpt from the failure message:

?

package wordpressr_0.1.0.tar.gz does not pass the incoming checks automatically, please see the following pre-tests:
Windows: <https://win-builder.r-project.org/incoming_pretest/wordpressr_0.1.0_20200912_211523/Windows/00check.log>
Status: 1 NOTE
Debian: <https://win-builder.r-project.org/incoming_pretest/wordpressr_0.1.0_20200912_211523/Debian/00check.log>
Status: 1 NOTE

?
as the logs confirm, the only note is related to this being a new submission. should i email CRAN staff noting that this is a false-positive that should be reviewed??

?
any and all help is most appreciated!

?
thanks

simit?

?
--?

URL: https://sixjupiter.com

Email: simit at sixjupiter.com

Phone/SMS/whatsapp: +1 646 327 3895

Skype: simitp_1

Telegram: @SimitPatel

?

	[[alternative HTML version deleted]]


From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Sun Sep 13 01:47:37 2020
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Sat, 12 Sep 2020 16:47:37 -0700
Subject: [R-pkg-devel] failing on win and debian -- because of new
 submission?
In-Reply-To: <01010174841c8446-1ccfb8cc-ceb1-44b6-8e4a-c43c5ea91504-000000@us-west-2.amazonses.com>
References: <mail.5f5d3666.4a52.6b96b0735ad1ea1d@storage.wm.amazon.com>
 <01010174841c8446-1ccfb8cc-ceb1-44b6-8e4a-c43c5ea91504-000000@us-west-2.amazonses.com>
Message-ID: <9733FB35-07DC-4D11-BCA2-308F97054431@dcn.davis.ca.us>

I would not read anything into this. Does [1] help?

[1] https://jef.works/blog/2018/06/18/get-your-package-on-cran-in-10-steps/

On September 12, 2020 1:58:15 PM PDT, Simit Patel <simit at sixjupiter.com> wrote:
>hello,
>
>?
>i am submitting my first package for CRAN, but am failing pre-check on
>windows and debian. below is an excerpt from the failure message:
>
>?
>
>package wordpressr_0.1.0.tar.gz does not pass the incoming checks
>automatically, please see the following pre-tests:
>Windows:
><https://win-builder.r-project.org/incoming_pretest/wordpressr_0.1.0_20200912_211523/Windows/00check.log>
>Status: 1 NOTE
>Debian:
><https://win-builder.r-project.org/incoming_pretest/wordpressr_0.1.0_20200912_211523/Debian/00check.log>
>Status: 1 NOTE
>
>?
>as the logs confirm, the only note is related to this being a new
>submission. should i email CRAN staff noting that this is a
>false-positive that should be reviewed??
>
>?
>any and all help is most appreciated!
>
>?
>thanks
>
>simit?
>
>?
>--?
>
>URL: https://sixjupiter.com
>
>Email: simit at sixjupiter.com
>
>Phone/SMS/whatsapp: +1 646 327 3895
>
>Skype: simitp_1
>
>Telegram: @SimitPatel
>
>?
>
>	[[alternative HTML version deleted]]
>
>______________________________________________
>R-package-devel at r-project.org mailing list
>https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
Sent from my phone. Please excuse my brevity.


From M@x@Turgeon @end|ng |rom um@n|tob@@c@  Sun Sep 13 02:02:08 2020
From: M@x@Turgeon @end|ng |rom um@n|tob@@c@ (Max Turgeon)
Date: Sun, 13 Sep 2020 00:02:08 +0000
Subject: [R-pkg-devel] failing on win and debian -- because of new
 submission?
In-Reply-To: <9733FB35-07DC-4D11-BCA2-308F97054431@dcn.davis.ca.us>
References: <mail.5f5d3666.4a52.6b96b0735ad1ea1d@storage.wm.amazon.com>
 <01010174841c8446-1ccfb8cc-ceb1-44b6-8e4a-c43c5ea91504-000000@us-west-2.amazonses.com>,
 <9733FB35-07DC-4D11-BCA2-308F97054431@dcn.davis.ca.us>
Message-ID: <YTOPR0101MB10689E0F84CEE51860268DA49A250@YTOPR0101MB1068.CANPRD01.PROD.OUTLOOK.COM>

Hi Simit,

There's actually more happening in the NOTE than simply a reminder that this is a new submission. You get a message about a possibly invalid URL because of a redirect, and you also get this:

Package has a VignetteBuilder field but no prebuilt vignette index.

You may get this message when the "vignettes.rds" file is omitted because of a line in .Rbuildignore; see for example this: https://stackoverflow.com/questions/39649133/package-has-a-vignettebuilder-field-but-no-prebuilt-vignette-index
[https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon at 2.png?v=73d79a89bded]<https://stackoverflow.com/questions/39649133/package-has-a-vignettebuilder-field-but-no-prebuilt-vignette-index>
r - Package has a VignetteBuilder field but no prebuilt vignette index - Stack Overflow<https://stackoverflow.com/questions/39649133/package-has-a-vignettebuilder-field-but-no-prebuilt-vignette-index>
I am submitting a package to CRAN and I have got the below warning from the reviewers team: Package has a VignetteBuilder field but no prebuilt vignette index. that I have in fact seen also when
stackoverflow.com



Max Turgeon
Assistant Professor
Department of Statistics
Department of Computer Science
University of Manitoba
maxturgeon.ca<http://maxturgeon.ca>


________________________________
From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Jeff Newmiller <jdnewmil at dcn.davis.ca.us>
Sent: Saturday, September 12, 2020 6:47 PM
To: r-package-devel at r-project.org <r-package-devel at r-project.org>; Simit Patel <simit at sixjupiter.com>; r-package-devel at r-project.org <r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] failing on win and debian -- because of new submission?

********************************************************
Caution: This message was sent from outside the University of Manitoba.
********************************************************

I would not read anything into this. Does [1] help?

[1] https://jef.works/blog/2018/06/18/get-your-package-on-cran-in-10-steps/

On September 12, 2020 1:58:15 PM PDT, Simit Patel <simit at sixjupiter.com> wrote:
>hello,
>
>
>i am submitting my first package for CRAN, but am failing pre-check on
>windows and debian. below is an excerpt from the failure message:
>
>
>
>package wordpressr_0.1.0.tar.gz does not pass the incoming checks
>automatically, please see the following pre-tests:
>Windows:
><https://win-builder.r-project.org/incoming_pretest/wordpressr_0.1.0_20200912_211523/Windows/00check.log>
>Status: 1 NOTE
>Debian:
><https://win-builder.r-project.org/incoming_pretest/wordpressr_0.1.0_20200912_211523/Debian/00check.log>
>Status: 1 NOTE
>
>
>as the logs confirm, the only note is related to this being a new
>submission. should i email CRAN staff noting that this is a
>false-positive that should be reviewed?
>
>
>any and all help is most appreciated!
>
>
>thanks
>
>simit
>
>
>--
>
>URL: https://sixjupiter.com
>
>Email: simit at sixjupiter.com
>
>Phone/SMS/whatsapp: +1 646 327 3895
>
>Skype: simitp_1
>
>Telegram: @SimitPatel
>
>
>
>       [[alternative HTML version deleted]]
>
>______________________________________________
>R-package-devel at r-project.org mailing list
>https://stat.ethz.ch/mailman/listinfo/r-package-devel

--
Sent from my phone. Please excuse my brevity.

______________________________________________
R-package-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel

	[[alternative HTML version deleted]]


From kev|nu@hey @end|ng |rom gm@||@com  Sun Sep 13 02:55:21 2020
From: kev|nu@hey @end|ng |rom gm@||@com (Kevin Ushey)
Date: Sat, 12 Sep 2020 17:55:21 -0700
Subject: [R-pkg-devel] Rcpp with clang++ -stdlib=libc++ ?
In-Reply-To: <24412.50179.251274.357996@rob.eddelbuettel.com>
References: <trinity-2cfc6a32-a200-435b-a3f6-823956451a0e-1599850856474@3c-app-webde-bs58>
 <24412.50179.251274.357996@rob.eddelbuettel.com>
Message-ID: <CAJXgQP0p55DLosy4Nq+pyt5bQJKAVxfdqTg060Sx-aQs05A1fg@mail.gmail.com>

My understanding is that many Linux OSes package the clang compiler, the
libc++ standard library, and the headers used by the libc++ standard
library separately. To install those headers, you likely need (e.g. on
Ubuntu):

    sudo apt install libc++-dev libc++abi-dev

to be able to build and compile programs against libc++.

This also comes with the caveat that mixing programs built against
different standard library implementations is in general a bad idea, so you
may see issues if you mix libraries compiled with libstdc++ and libc++ in
the same R session. (This can come up with R packages that link to other
libraries installed on the system, which will typically be built with and
linked against the "default" system compiler + standard library
implementations.) I'm not sure if this will be an issue in practice with
what you're doing, but it's worth being aware of.

Best,
Kevin

On Sat, Sep 12, 2020 at 5:50 AM Dirk Eddelbuettel <edd at debian.org> wrote:

>
> Hi Jens,
>
> On 11 September 2020 at 21:00, Dr. Jens Oehlschl?gel wrote:
> | I can compile a package under clang++ with -stdlib=libstdc++, but with
> -stdlib=libc++ I get
> |
> | "
> | In file included from
> /home/jo/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/r/headers.h:67:
> |
> /home/jo/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/platform/compiler.h:100:10:
> fatal error: 'cmath' file not found
> | #include <cmath>
> |          ^~~~~~~
> | 1 error generated.
> | "
> |
> | Is there any howto for using Rcpp with -stdlib=libc++ ?
>
> That has zero to do with Rcpp.  You are lacking a C++ library header when
> switching the C++ standard library along with clang. Nothing that Rcpp
> ships,
> or governs, or selects.
>
> I am forgetting the fine details here (and someone may hopefully fill in
> fuller details) but in short, "that is just the way it is".  I think we
> simply pivot back to the g++ standard C++ library even when using clang++.
>
> Cheers from Chicago,  Dirk
>
> | Greetings from Munich
> |
> | Jens Oehlschl?gel
> |
> |
> | P.S.
> |
> | Package Makevars
> | CXX_STD = CXX17
> | PKG_CXXFLAGS=-O3 -march=native -pthread
> | PKG_LIBS=-latomic -pthread
> |
> | ~.R/Makevars
> | CXX17 = clang++ -stdlib=libc++
> | CXX17FLAGS = -fstack-protector-strong -D_FORTIFY_SOURCE=2 -g $(LTO)
> | CXX17STD = -std=c++17
> |
> | > packageVersion("Rcpp")
> | [1] ?1.0.5?
> |
> | > version
> |                _
> | platform       x86_64-pc-linux-gnu
> | arch           x86_64
> | os             linux-gnu
> | system         x86_64, linux-gnu
> | status
> | major          4
> | minor          0.2
> | year           2020
> | month          06
> | day            22
> | svn rev        78730
> | language       R
> | version.string R version 4.0.2 (2020-06-22)
> | nickname       Taking Off Again
> |
> | ______________________________________________
> | R-package-devel at r-project.org mailing list
> | https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
> --
> https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From jen@@oeh|@ch|@ege| @end|ng |rom truec|u@ter@com  Sun Sep 13 16:04:56 2020
From: jen@@oeh|@ch|@ege| @end|ng |rom truec|u@ter@com (=?UTF-8?Q?Dr=2E_Jens_Oehlschl=C3=A4gel?=)
Date: Sun, 13 Sep 2020 16:04:56 +0200
Subject: [R-pkg-devel] Rcpp with clang++ -stdlib=libc++ ?
Message-ID: <trinity-ced8b2f2-bbd9-4dd4-95c9-2d8f6c285f2a-1600005896629@3c-app-webde-bs09>

Thank you Dirk and Kevin,

that was very helpful and

 >      sudo apt install libc++-dev libc++abi-dev

did the job!

Great, this was very important to me.
Thanks again

Jens



On 13.09.20 02:55, Kevin Ushey wrote:
> My understanding is that many Linux OSes package the clang compiler, the 
> libc++ standard library, and the headers used by the libc++ standard 
> library separately. To install those headers, you likely need (e.g. on 
> Ubuntu):
> 
>  ? ? sudo apt install libc++-dev libc++abi-dev
> 
> to be able to build and compile programs against libc++.
> 
> This also comes with the caveat that mixing programs built against 
> different standard library?implementations is in general a bad idea, so 
> you may see issues if you mix libraries compiled with libstdc++ and 
> libc++ in the same R session. (This can come up with R packages that 
> link to other libraries installed on the system, which will typically be 
> built with and linked against the "default" system compiler?+ standard 
> library implementations.) I'm not sure if this will be an?issue in 
> practice with what you're doing, but it's worth being aware of.
> 
> Best,
> Kevin
> 
> On Sat, Sep 12, 2020 at 5:50 AM Dirk Eddelbuettel <edd at debian.org 
> <mailto:edd at debian.org>> wrote:
> 
> 
>     Hi Jens,
> 
>     On 11 September 2020 at 21:00, Dr. Jens Oehlschl?gel wrote:
>     | I can compile a package under clang++ with -stdlib=libstdc++, but
>     with -stdlib=libc++ I get
>     |
>     | "
>     | In file included from
>     /home/jo/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/r/headers.h:67:
>     |
>     /home/jo/R/x86_64-pc-linux-gnu-library/4.0/Rcpp/include/Rcpp/platform/compiler.h:100:10:
>     fatal error: 'cmath' file not found
>     | #include <cmath>
>     | ???????? ^~~~~~~
>     | 1 error generated.
>     | "
>     |
>     | Is there any howto for using Rcpp with -stdlib=libc++ ?
> 
>     That has zero to do with Rcpp.? You are lacking a C++ library header
>     when
>     switching the C++ standard library along with clang. Nothing that
>     Rcpp ships,
>     or governs, or selects.
> 
>     I am forgetting the fine details here (and someone may hopefully fill in
>     fuller details) but in short, "that is just the way it is".? I think we
>     simply pivot back to the g++ standard C++ library even when using
>     clang++.
> 
>     Cheers from Chicago,? Dirk
> 
>     | Greetings from Munich
>     |
>     | Jens Oehlschl?gel
>     |
>     |
>     | P.S.
>     |
>     | Package Makevars
>     | CXX_STD = CXX17
>     | PKG_CXXFLAGS=-O3 -march=native -pthread
>     | PKG_LIBS=-latomic -pthread
>     |
>     | ~.R/Makevars
>     | CXX17 = clang++ -stdlib=libc++
>     | CXX17FLAGS = -fstack-protector-strong -D_FORTIFY_SOURCE=2 -g $(LTO)
>     | CXX17STD = -std=c++17
>     |
>     | > packageVersion("Rcpp")
>     | [1] ?1.0.5?
>     |
>     | > version
>     | ?????????????? _
>     | platform?????? x86_64-pc-linux-gnu
>     | arch?????????? x86_64
>     | os???????????? linux-gnu
>     | system???????? x86_64, linux-gnu
>     | status
>     | major????????? 4
>     | minor????????? 0.2
>     | year?????????? 2020
>     | month????????? 06
>     | day??????????? 22
>     | svn rev??????? 78730
>     | language?????? R
>     | version.string R version 4.0.2 (2020-06-22)
>     | nickname?????? Taking Off Again
>     |
>     | ______________________________________________
>     | R-package-devel at r-project.org
>     <mailto:R-package-devel at r-project.org> mailing list
>     | https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
>     -- 
>     https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>     <mailto:edd at debian.org>
> 
>     ______________________________________________
>     R-package-devel at r-project.org <mailto:R-package-devel at r-project.org>
>     mailing list
>     https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 


From d@v|d@kepp||nger @end|ng |rom gm@||@com  Sun Sep 13 21:22:19 2020
From: d@v|d@kepp||nger @end|ng |rom gm@||@com (David Kepplinger)
Date: Sun, 13 Sep 2020 12:22:19 -0700
Subject: [R-pkg-devel] CRAN incoming checks email
Message-ID: <CAGmyFCGsE7zxs-kNt9MrkWoRONu9sL4f6=zGWK_f=-80WLUhxA@mail.gmail.com>

Dear List-Members:

The email from the automatic incoming checks says to "reply-all" in case
one suspects a false-positive, yet the reply-to header is set only to "
CRAN-submissions at r-project.org". My email program (just as myself)
interprets this as "reply-all means replying only to
CRAN-submissions at r-project.org". The wording in the email, on the other
hand, suggests I also should reply to Uwe Ligges. I find the current
disagreement of wording and email headers more than confusing.

Can someone clarify the correct protocol of replying to the email? I
wouldn't want to unnecessarily bother Uwe Ligges with even more emails.

Thanks,
David

	[[alternative HTML version deleted]]


From d@v|d@kepp||nger @end|ng |rom gm@||@com  Sun Sep 13 21:51:41 2020
From: d@v|d@kepp||nger @end|ng |rom gm@||@com (David Kepplinger)
Date: Sun, 13 Sep 2020 12:51:41 -0700
Subject: [R-pkg-devel] Use of `:::` in a package for code run in a parallel
 cluster
Message-ID: <CAGmyFCFVBXmyUR+YbOKB0Sc=KK67kYjQH18mewXDCTgGiNgQOg@mail.gmail.com>

Dear list members,

I submitted an update for my package and got automatically rejected by the
incoming checks (as expected from my own checks) for using `:::` calls to
access the package's namespace.
"There are ::: calls to the package's namespace in its code. A package
*almost* never needs to use ::: for its own objects:?" (emphasis mine)

This was a conscious decision on my part as the package runs code on a
user-supplied parallel cluster and I consider cluster-exporting the
required functions a no-go as it would potentially overwrite objects in the
clusters R sessions. The package code does not own the cluster and hence
the R sessions. Therefore overwriting objects could potentially lead to
unintended behaviour which is opaque to the user and difficult to debug.

Another solution to circumvent the R CMD check note is to export the
functions to the public namespace but mark them as internal. This was also
suggested in another thread on this mailing list (c.f. "Etiquette for
package submissions that do not automatically pass checks?"). I do not
agree with this work-around as the methods are indeed internal and should
never be used by users. Exporting truly internal functions for the sake of
satisfying R CMD check is a bad argument, in particular if there is a
clean, well-documented, solution by using `:::`.

I argue `:::` is the only clean solution to this problem and no dirty
work-arounds are necessary. This is a prime example of where `:::` is
actually useful and needed inside a package. If the R community disagrees,
I think R CMD check should at least emit a WARNING instead of a NOTE and
elaborate on the problem and accepted work-arounds in "Writing R
extensions". Or keep emitting a NOTE but listing those nebulous reasons
where `:::` would be tolerated inside a package. Having more transparent
criteria for submitting to CRAN would be really helpful to the entire R
community and probably also reduce the traffic on this mailing list.

Best,
David

	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Sun Sep 13 22:19:46 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sun, 13 Sep 2020 16:19:46 -0400
Subject: [R-pkg-devel] 
 Use of `:::` in a package for code run in a parallel cluster
In-Reply-To: <CAGmyFCFVBXmyUR+YbOKB0Sc=KK67kYjQH18mewXDCTgGiNgQOg@mail.gmail.com>
References: <CAGmyFCFVBXmyUR+YbOKB0Sc=KK67kYjQH18mewXDCTgGiNgQOg@mail.gmail.com>
Message-ID: <225b137b-052c-6145-3d5e-0b15ca0dc581@gmail.com>

On 13/09/2020 3:51 p.m., David Kepplinger wrote:
> Dear list members,
> 
> I submitted an update for my package and got automatically rejected by the
> incoming checks (as expected from my own checks) for using `:::` calls to
> access the package's namespace.
> "There are ::: calls to the package's namespace in its code. A package
> *almost* never needs to use ::: for its own objects:?" (emphasis mine)
> 
> This was a conscious decision on my part as the package runs code on a
> user-supplied parallel cluster and I consider cluster-exporting the
> required functions a no-go as it would potentially overwrite objects in the
> clusters R sessions. The package code does not own the cluster and hence
> the R sessions. Therefore overwriting objects could potentially lead to
> unintended behaviour which is opaque to the user and difficult to debug.
> 
> Another solution to circumvent the R CMD check note is to export the
> functions to the public namespace but mark them as internal. This was also
> suggested in another thread on this mailing list (c.f. "Etiquette for
> package submissions that do not automatically pass checks?"). I do not
> agree with this work-around as the methods are indeed internal and should
> never be used by users. Exporting truly internal functions for the sake of
> satisfying R CMD check is a bad argument, in particular if there is a
> clean, well-documented, solution by using `:::`

Who is calling this function:  package code or user code?  I assume it's 
a bit of a mix:  your package writes a script that calls the function 
when it runs in user space.  (It would help if you gave an explicit 
example of when you need to use this technique.)

If my assumption is correct, there are other simple workarounds besides 
exporting the functions.  Instead of putting

    pkg:::foo(args)

into your script, put

    pkg::callInternal("foo", args)

where pkg::callInternal is an exported function that can look up 
unexported functions in the namespace.

You may argue that you prefer pkg:::foo for some reason:  to which I'd 
respond that you are being rude to the CRAN volunteers.  I've offered 
two options (one in the previous thread, a different one here), and 
there was a third one in that thread offered by Ivan Krylov.  Surely one 
of these is good enough for your needs, and you shouldn't force CRAN to 
handle you specially.

Duncan

> 
> I argue `:::` is the only clean solution to this problem and no dirty
> work-arounds are necessary. This is a prime example of where `:::` is
> actually useful and needed inside a package. If the R community disagrees,
> I think R CMD check should at least emit a WARNING instead of a NOTE and
> elaborate on the problem and accepted work-arounds in "Writing R
> extensions". Or keep emitting a NOTE but listing those nebulous reasons
> where `:::` would be tolerated inside a package. Having more transparent
> criteria for submitting to CRAN would be really helpful to the entire R
> community and probably also reduce the traffic on this mailing list.
> 
> Best,
> David
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From mtmorg@n@b|oc @end|ng |rom gm@||@com  Mon Sep 14 00:04:54 2020
From: mtmorg@n@b|oc @end|ng |rom gm@||@com (Martin Morgan)
Date: Sun, 13 Sep 2020 22:04:54 +0000
Subject: [R-pkg-devel] 
 Use of `:::` in a package for code run in a parallel cluster
In-Reply-To: <CAGmyFCFVBXmyUR+YbOKB0Sc=KK67kYjQH18mewXDCTgGiNgQOg@mail.gmail.com>
References: <CAGmyFCFVBXmyUR+YbOKB0Sc=KK67kYjQH18mewXDCTgGiNgQOg@mail.gmail.com>
Message-ID: <BL0PR04MB660968418CA6161F5D51234CF9220@BL0PR04MB6609.namprd04.prod.outlook.com>

At least in the 'parallel' package

library(parallel)
cl = makePSOCKcluster(2)

and because of the nature of the R language, the entire namespace is exported, analogous to

baz <- local({
    foo <- function() 2
    function(...) foo()
})

so making a package function baz available makes all functions in the package available -- a function in the package already has access to other functions in the namespace, whether those functions are exported or not, so there is no need to use :::.

> parSapply(1:2, baz)
[1] 2 2

This is in contrast to what one might expect from exploring things on the command line, where foo is defined in the global environment and, by convention, the global environment is not serialized to the workers

> foo <- function() 1
> bar <- function(...) foo()
> parLapply(cl, 1:2, bar)
Error in checkForRemoteErrors(val) : 
  2 nodes produced errors; first error: could not find function "foo"

Do you really need to use `:::`?

Martin Morgan



?On 9/13/20, 3:52 PM, "R-package-devel on behalf of David Kepplinger" <r-package-devel-bounces at r-project.org on behalf of david.kepplinger at gmail.com> wrote:

    Dear list members,

    I submitted an update for my package and got automatically rejected by the
    incoming checks (as expected from my own checks) for using `:::` calls to
    access the package's namespace.
    "There are ::: calls to the package's namespace in its code. A package
    *almost* never needs to use ::: for its own objects:?" (emphasis mine)

    This was a conscious decision on my part as the package runs code on a
    user-supplied parallel cluster and I consider cluster-exporting the
    required functions a no-go as it would potentially overwrite objects in the
    clusters R sessions. The package code does not own the cluster and hence
    the R sessions. Therefore overwriting objects could potentially lead to
    unintended behaviour which is opaque to the user and difficult to debug.

    Another solution to circumvent the R CMD check note is to export the
    functions to the public namespace but mark them as internal. This was also
    suggested in another thread on this mailing list (c.f. "Etiquette for
    package submissions that do not automatically pass checks?"). I do not
    agree with this work-around as the methods are indeed internal and should
    never be used by users. Exporting truly internal functions for the sake of
    satisfying R CMD check is a bad argument, in particular if there is a
    clean, well-documented, solution by using `:::`.

    I argue `:::` is the only clean solution to this problem and no dirty
    work-arounds are necessary. This is a prime example of where `:::` is
    actually useful and needed inside a package. If the R community disagrees,
    I think R CMD check should at least emit a WARNING instead of a NOTE and
    elaborate on the problem and accepted work-arounds in "Writing R
    extensions". Or keep emitting a NOTE but listing those nebulous reasons
    where `:::` would be tolerated inside a package. Having more transparent
    criteria for submitting to CRAN would be really helpful to the entire R
    community and probably also reduce the traffic on this mailing list.

    Best,
    David

    	[[alternative HTML version deleted]]

    ______________________________________________
    R-package-devel at r-project.org mailing list
    https://stat.ethz.ch/mailman/listinfo/r-package-devel

From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Mon Sep 14 00:05:16 2020
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Mon, 14 Sep 2020 00:05:16 +0200
Subject: [R-pkg-devel] CRAN incoming checks email
In-Reply-To: <CAGmyFCGsE7zxs-kNt9MrkWoRONu9sL4f6=zGWK_f=-80WLUhxA@mail.gmail.com>
References: <CAGmyFCGsE7zxs-kNt9MrkWoRONu9sL4f6=zGWK_f=-80WLUhxA@mail.gmail.com>
Message-ID: <fa0d16d4-35b0-fedc-d8c3-6e53c3f61f9f@statistik.tu-dortmund.de>



On 13.09.2020 21:22, David Kepplinger wrote:
> Dear List-Members:
> 
> The email from the automatic incoming checks says to "reply-all" in case
> one suspects a false-positive, yet the reply-to header is set only to "
> CRAN-submissions at r-project.org". My email program (just as myself)
> interprets this as "reply-all means replying only to
> CRAN-submissions at r-project.org". The wording in the email, on the other
> hand, suggests I also should reply to Uwe Ligges. I find the current
> disagreement of wording and email headers more than confusing.
> 
> Can someone clarify the correct protocol of replying to the email? I
> wouldn't want to unnecessarily bother Uwe Ligges with even more emails.

Thanks: Uwe has configured mails in a way he always receives one mail in 
a CRAN-submissions folder for both cases.

Best,
Uwe


> 
> Thanks,
> David
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From jo@h@m@u|r|ch @end|ng |rom gm@||@com  Mon Sep 14 00:32:13 2020
From: jo@h@m@u|r|ch @end|ng |rom gm@||@com (Joshua Ulrich)
Date: Sun, 13 Sep 2020 17:32:13 -0500
Subject: [R-pkg-devel] 
 Use of `:::` in a package for code run in a parallel cluster
In-Reply-To: <225b137b-052c-6145-3d5e-0b15ca0dc581@gmail.com>
References: <CAGmyFCFVBXmyUR+YbOKB0Sc=KK67kYjQH18mewXDCTgGiNgQOg@mail.gmail.com>
 <225b137b-052c-6145-3d5e-0b15ca0dc581@gmail.com>
Message-ID: <CAPPM_gSC=7jUhdAtBie=po_pQBuRDFY0mrpifa+RRLPzHrp94A@mail.gmail.com>

On Sun, Sep 13, 2020 at 3:19 PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>
> On 13/09/2020 3:51 p.m., David Kepplinger wrote:
> > Dear list members,
> >
> > I submitted an update for my package and got automatically rejected by the
> > incoming checks (as expected from my own checks) for using `:::` calls to
> > access the package's namespace.
> > "There are ::: calls to the package's namespace in its code. A package
> > *almost* never needs to use ::: for its own objects:?" (emphasis mine)
> >
> > This was a conscious decision on my part as the package runs code on a
> > user-supplied parallel cluster and I consider cluster-exporting the
> > required functions a no-go as it would potentially overwrite objects in the
> > clusters R sessions. The package code does not own the cluster and hence
> > the R sessions. Therefore overwriting objects could potentially lead to
> > unintended behaviour which is opaque to the user and difficult to debug.
> >
> > Another solution to circumvent the R CMD check note is to export the
> > functions to the public namespace but mark them as internal. This was also
> > suggested in another thread on this mailing list (c.f. "Etiquette for
> > package submissions that do not automatically pass checks?"). I do not
> > agree with this work-around as the methods are indeed internal and should
> > never be used by users. Exporting truly internal functions for the sake of
> > satisfying R CMD check is a bad argument, in particular if there is a
> > clean, well-documented, solution by using `:::`
>
> Who is calling this function:  package code or user code?  I assume it's
> a bit of a mix:  your package writes a script that calls the function
> when it runs in user space.  (It would help if you gave an explicit
> example of when you need to use this technique.)
>
> If my assumption is correct, there are other simple workarounds besides
> exporting the functions.  Instead of putting
>
>     pkg:::foo(args)
>
> into your script, put
>
>     pkg::callInternal("foo", args)
>
> where pkg::callInternal is an exported function that can look up
> unexported functions in the namespace.
>
Another possibility is what quantmod::newTA() does.
https://github.com/joshuaulrich/quantmod/blob/a8e9cb87825c0997a8468f5105db6c507b26ac5d/R/newTA.

It's a function that creates a user-facing function.  The created
function needs to access unexported objects from the quantmod
namespace.  newTA() accomplishes that by setting the environment of
the function it returns to the quantmod namespace.

https://github.com/joshuaulrich/quantmod/blob/a8e9cb87825c0997a8468f5105db6c507b26ac5d/R/newTA.R#L98

That gives the user's new function access to the unexported charting
objects it needs to work.

Hope that helps.

Best,
Josh


> You may argue that you prefer pkg:::foo for some reason:  to which I'd
> respond that you are being rude to the CRAN volunteers.  I've offered
> two options (one in the previous thread, a different one here), and
> there was a third one in that thread offered by Ivan Krylov.  Surely one
> of these is good enough for your needs, and you shouldn't force CRAN to
> handle you specially.
>
> Duncan
>
> >
> > I argue `:::` is the only clean solution to this problem and no dirty
> > work-arounds are necessary. This is a prime example of where `:::` is
> > actually useful and needed inside a package. If the R community disagrees,
> > I think R CMD check should at least emit a WARNING instead of a NOTE and
> > elaborate on the problem and accepted work-arounds in "Writing R
> > extensions". Or keep emitting a NOTE but listing those nebulous reasons
> > where `:::` would be tolerated inside a package. Having more transparent
> > criteria for submitting to CRAN would be really helpful to the entire R
> > community and probably also reduce the traffic on this mailing list.
> >
> > Best,
> > David
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel



--
Joshua Ulrich  |  about.me/joshuaulrich
FOSS Trading  |  www.fosstrading.com


From d@v|d@kepp||nger @end|ng |rom gm@||@com  Mon Sep 14 02:00:46 2020
From: d@v|d@kepp||nger @end|ng |rom gm@||@com (David Kepplinger)
Date: Sun, 13 Sep 2020 17:00:46 -0700
Subject: [R-pkg-devel] 
 Use of `:::` in a package for code run in a parallel cluster
In-Reply-To: <BL0PR04MB660968418CA6161F5D51234CF9220@BL0PR04MB6609.namprd04.prod.outlook.com>
References: <CAGmyFCFVBXmyUR+YbOKB0Sc=KK67kYjQH18mewXDCTgGiNgQOg@mail.gmail.com>
 <BL0PR04MB660968418CA6161F5D51234CF9220@BL0PR04MB6609.namprd04.prod.outlook.com>
Message-ID: <CAGmyFCEUtz-VnaMCYRKk=01qWGT3pADgacQ-mmYKTmUmW_E6fw@mail.gmail.com>

Thank you all for the discussion and suggestions.

so making a package function baz available makes all functions in the
> package available -- a function in the package already has access to other
> functions in the namespace, whether those functions are exported or not, so
> there is no need to use :::.
>

Thanks, Martin. I completely missed that the parallel package serializes
the entire environment of the function, including the package namespace and
so `:::` is indeed unnecessary in my use case. I probably experimented in
the global environment first and extrapolated the observed behaviour to the
package. Sorry for annoying everyone with this.

I also have another use of `:::` for which I am not sure if it's considered
disallowed use of `:::`, so I'm throwing it out there for feedback.
I have one internal function which checks a long list of common arguments
to several other functions, similar to
internal_check_args <- function (sd = 2, type = c("bootstrap",
"theoretical"), ...) {
  # check arguments for valid ranges, etc.
  return(list(sd = sd, type = match.arg(type))
}

And several functions which use the internal function for argument checking
and such, similar to
exported_foo <- function (x, sd = 2, type = c("bootstrap", "theoretical")) {
  args_call <- match.call()
  args_call[[1]] <- quote(mypackage:::internal_check_args)
  args <- eval.parent(args_call)
}

exported_foo_cv <- function (x, cv_folds = 3, ...) {
  args_call <- match.call(expand.dots = TRUE)
  args_call[[1]] <- quote(mypackage:::internal_check_args)
  args <- eval.parent(args_call)
}

This is modelled after what, e.g., `lm()` does with `model.frame()`, only
that `internal_check_args()` is not exported, hence I use `:::`. There are
other solutions for this type of use of `:::` (probably some considered
cleaner) but again without guidelines on when `:::` is acceptable it's
difficult for package maintainers to know when to use/not use it. From all
the discussions it seems that there is absolutely no acceptable use of
`:::` and work-arounds are always the better alternative.

In light of the other interesting points brought up by discussants, I also
want to honor their time and reply here.

You may argue that you prefer pkg:::foo for some reason:  to which I'd
> respond that you are being rude to the CRAN volunteers.  I've offered
> two options (one in the previous thread, a different one here), and
> there was a third one in that thread offered by Ivan Krylov.  Surely one
> of these is good enough for your needs, and you shouldn't force CRAN to
> handle you specially.
>

I am sorry it came across rude when I tried to solicit arguments for why
the use of `:::` is considered "bad practice", while work-arounds are
considered to be okay. I wouldn't force CRAN to handle my case specially; I
rather wanted to challenge the general "attitude" towards the use of `:::`.
I am sure there is a need to discourage the use of `:::` in packages as
CRAN volunteers probably have seen hundreds of cases where `:::` was abused
(such as mine, as Martin Morgan pointed out).

you can use
>
> get("internal_function", asNamespace("mypackage"))(arg1, arg2)
>
> In fact, if you look at the source code of `:::`, that's exactly how
> it is implemented:
>

That would be a work-around I would have used if necessary. But my general
question remains: why should I reinvent the wheel when R already comes with
`:::`? The only advantage of all the work-arounds I've seen would be to
trick R CMD check that the code is okay, when in fact the same "bad
practice" is practiced.

Best,
David

On Sun, Sep 13, 2020 at 3:04 PM Martin Morgan <mtmorgan.bioc at gmail.com>
wrote:

> At least in the 'parallel' package
>
> library(parallel)
> cl = makePSOCKcluster(2)
>
> and because of the nature of the R language, the entire namespace is
> exported, analogous to
>
> baz <- local({
>     foo <- function() 2
>     function(...) foo()
> })
>
> so making a package function baz available makes all functions in the
> package available -- a function in the package already has access to other
> functions in the namespace, whether those functions are exported or not, so
> there is no need to use :::.
>
> > parSapply(1:2, baz)
> [1] 2 2
>
> This is in contrast to what one might expect from exploring things on the
> command line, where foo is defined in the global environment and, by
> convention, the global environment is not serialized to the workers
>
> > foo <- function() 1
> > bar <- function(...) foo()
> > parLapply(cl, 1:2, bar)
> Error in checkForRemoteErrors(val) :
>   2 nodes produced errors; first error: could not find function "foo"
>
> Do you really need to use `:::`?
>
> Martin Morgan
>
>
>
> ?On 9/13/20, 3:52 PM, "R-package-devel on behalf of David Kepplinger" <
> r-package-devel-bounces at r-project.org on behalf of
> david.kepplinger at gmail.com> wrote:
>
>     Dear list members,
>
>     I submitted an update for my package and got automatically rejected by
> the
>     incoming checks (as expected from my own checks) for using `:::` calls
> to
>     access the package's namespace.
>     "There are ::: calls to the package's namespace in its code. A package
>     *almost* never needs to use ::: for its own objects:?" (emphasis mine)
>
>     This was a conscious decision on my part as the package runs code on a
>     user-supplied parallel cluster and I consider cluster-exporting the
>     required functions a no-go as it would potentially overwrite objects
> in the
>     clusters R sessions. The package code does not own the cluster and
> hence
>     the R sessions. Therefore overwriting objects could potentially lead to
>     unintended behaviour which is opaque to the user and difficult to
> debug.
>
>     Another solution to circumvent the R CMD check note is to export the
>     functions to the public namespace but mark them as internal. This was
> also
>     suggested in another thread on this mailing list (c.f. "Etiquette for
>     package submissions that do not automatically pass checks?"). I do not
>     agree with this work-around as the methods are indeed internal and
> should
>     never be used by users. Exporting truly internal functions for the
> sake of
>     satisfying R CMD check is a bad argument, in particular if there is a
>     clean, well-documented, solution by using `:::`.
>
>     I argue `:::` is the only clean solution to this problem and no dirty
>     work-arounds are necessary. This is a prime example of where `:::` is
>     actually useful and needed inside a package. If the R community
> disagrees,
>     I think R CMD check should at least emit a WARNING instead of a NOTE
> and
>     elaborate on the problem and accepted work-arounds in "Writing R
>     extensions". Or keep emitting a NOTE but listing those nebulous reasons
>     where `:::` would be tolerated inside a package. Having more
> transparent
>     criteria for submitting to CRAN would be really helpful to the entire R
>     community and probably also reduce the traffic on this mailing list.
>
>     Best,
>     David
>
>         [[alternative HTML version deleted]]
>
>     ______________________________________________
>     R-package-devel at r-project.org mailing list
>     https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From w@ngz1 @end|ng |rom uth@c@@@edu  Mon Sep 14 02:47:22 2020
From: w@ngz1 @end|ng |rom uth@c@@@edu (Wang, Zhu)
Date: Mon, 14 Sep 2020 00:47:22 +0000
Subject: [R-pkg-devel] 
 Use of `:::` in a package for code run in a parallel cluster
In-Reply-To: <225b137b-052c-6145-3d5e-0b15ca0dc581@gmail.com>
References: <CAGmyFCFVBXmyUR+YbOKB0Sc=KK67kYjQH18mewXDCTgGiNgQOg@mail.gmail.com>
 <225b137b-052c-6145-3d5e-0b15ca0dc581@gmail.com>
Message-ID: <SN6PR10MB24320CB8AA24B1A1DA6BBA8A9F230@SN6PR10MB2432.namprd10.prod.outlook.com>

Apologize if I hijack this thread, but the use of ::: is something I was puzzled.

I tried Duncan's solution in my R package mypkg, something like:

pkg::callInternal("foo", args)

R CMD check mypkg

* checking dependencies in R code ... WARNING
'::' or ':::' import not declared from: ?pkg'

I probably missed something here.

Thanks,
Zhu

-----Original Message-----
From: R-package-devel <r-package-devel-bounces at r-project.org> On Behalf Of Duncan Murdoch
Sent: Sunday, September 13, 2020 3:20 PM
To: David Kepplinger <david.kepplinger at gmail.com>; R Package Devel <r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] Use of `:::` in a package for code run in a parallel cluster

On 13/09/2020 3:51 p.m., David Kepplinger wrote:
> Dear list members,
> 
> I submitted an update for my package and got automatically rejected by 
> the incoming checks (as expected from my own checks) for using `:::` 
> calls to access the package's namespace.
> "There are ::: calls to the package's namespace in its code. A package
> *almost* never needs to use ::: for its own objects:?" (emphasis mine)
> 
> This was a conscious decision on my part as the package runs code on a 
> user-supplied parallel cluster and I consider cluster-exporting the 
> required functions a no-go as it would potentially overwrite objects 
> in the clusters R sessions. The package code does not own the cluster 
> and hence the R sessions. Therefore overwriting objects could 
> potentially lead to unintended behaviour which is opaque to the user and difficult to debug.
> 
> Another solution to circumvent the R CMD check note is to export the 
> functions to the public namespace but mark them as internal. This was 
> also suggested in another thread on this mailing list (c.f. "Etiquette 
> for package submissions that do not automatically pass checks?"). I do 
> not agree with this work-around as the methods are indeed internal and 
> should never be used by users. Exporting truly internal functions for 
> the sake of satisfying R CMD check is a bad argument, in particular if 
> there is a clean, well-documented, solution by using `:::`

Who is calling this function:  package code or user code?  I assume it's a bit of a mix:  your package writes a script that calls the function when it runs in user space.  (It would help if you gave an explicit example of when you need to use this technique.)

If my assumption is correct, there are other simple workarounds besides exporting the functions.  Instead of putting

    pkg:::foo(args)

into your script, put

    pkg::callInternal("foo", args)

where pkg::callInternal is an exported function that can look up unexported functions in the namespace.

You may argue that you prefer pkg:::foo for some reason:  to which I'd respond that you are being rude to the CRAN volunteers.  I've offered two options (one in the previous thread, a different one here), and there was a third one in that thread offered by Ivan Krylov.  Surely one of these is good enough for your needs, and you shouldn't force CRAN to handle you specially.

Duncan

> 
> I argue `:::` is the only clean solution to this problem and no dirty 
> work-arounds are necessary. This is a prime example of where `:::` is 
> actually useful and needed inside a package. If the R community 
> disagrees, I think R CMD check should at least emit a WARNING instead 
> of a NOTE and elaborate on the problem and accepted work-arounds in 
> "Writing R extensions". Or keep emitting a NOTE but listing those 
> nebulous reasons where `:::` would be tolerated inside a package. 
> Having more transparent criteria for submitting to CRAN would be 
> really helpful to the entire R community and probably also reduce the traffic on this mailing list.
> 
> Best,
> David
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list 
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

______________________________________________
R-package-devel at r-project.org mailing list https://stat.ethz.ch/mailman/listinfo/r-package-devel

From georg|@bo@hn@kov @end|ng |rom m@nche@ter@@c@uk  Mon Sep 14 12:19:36 2020
From: georg|@bo@hn@kov @end|ng |rom m@nche@ter@@c@uk (Georgi Boshnakov)
Date: Mon, 14 Sep 2020 10:19:36 +0000
Subject: [R-pkg-devel] 
 Use of `:::` in a package for code run in a parallel cluster
In-Reply-To: <CAGmyFCFVBXmyUR+YbOKB0Sc=KK67kYjQH18mewXDCTgGiNgQOg@mail.gmail.com>
References: <CAGmyFCFVBXmyUR+YbOKB0Sc=KK67kYjQH18mewXDCTgGiNgQOg@mail.gmail.com>
Message-ID: <AM0PR0102MB34431FD43538A9E1D4069528AE230@AM0PR0102MB3443.eurprd01.prod.exchangelabs.com>

You may have a case to argue to CRAN that you can get the "almost" exemption (can't say without details) but your views look overly rigid.

Exporting an object and marking it as internal is not a "work around", even less a "dirty trick". 
Export makes the object available outside the package's namespace and makes it clear that this is intentional. 
If you can't drop the 'package:::' prefix in your use case, this means that this is what you actually do (i.e. use those objects outside the namespace of the package). I would be grateful to CRAN for asking me to export and hence document this. 


Georgi Boshnakov

PS Note that there is no such thing as "public namespace".


-----Original Message-----
From: R-package-devel <r-package-devel-bounces at r-project.org> On Behalf Of David Kepplinger
Sent: 13 September 2020 20:52
To: R Package Devel <r-package-devel at r-project.org>
Subject: [R-pkg-devel] Use of `:::` in a package for code run in a parallel cluster

Dear list members,

I submitted an update for my package and got automatically rejected by the incoming checks (as expected from my own checks) for using `:::` calls to access the package's namespace.
"There are ::: calls to the package's namespace in its code. A package
*almost* never needs to use ::: for its own objects:?" (emphasis mine)

This was a conscious decision on my part as the package runs code on a user-supplied parallel cluster and I consider cluster-exporting the required functions a no-go as it would potentially overwrite objects in the clusters R sessions. The package code does not own the cluster and hence the R sessions. Therefore overwriting objects could potentially lead to unintended behaviour which is opaque to the user and difficult to debug.

Another solution to circumvent the R CMD check note is to export the functions to the public namespace but mark them as internal. This was also suggested in another thread on this mailing list (c.f. "Etiquette for package submissions that do not automatically pass checks?"). I do not agree with this work-around as the methods are indeed internal and should never be used by users. Exporting truly internal functions for the sake of satisfying R CMD check is a bad argument, in particular if there is a clean, well-documented, solution by using `:::`.

I argue `:::` is the only clean solution to this problem and no dirty work-arounds are necessary. This is a prime example of where `:::` is actually useful and needed inside a package. If the R community disagrees, I think R CMD check should at least emit a WARNING instead of a NOTE and elaborate on the problem and accepted work-arounds in "Writing R extensions". Or keep emitting a NOTE but listing those nebulous reasons where `:::` would be tolerated inside a package. Having more transparent criteria for submitting to CRAN would be really helpful to the entire R community and probably also reduce the traffic on this mailing list.

Best,
David

	[[alternative HTML version deleted]]

______________________________________________
R-package-devel at r-project.org mailing list https://stat.ethz.ch/mailman/listinfo/r-package-devel

From murdoch@dunc@n @end|ng |rom gm@||@com  Mon Sep 14 14:16:36 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Mon, 14 Sep 2020 08:16:36 -0400
Subject: [R-pkg-devel] 
 Use of `:::` in a package for code run in a parallel cluster
In-Reply-To: <SN6PR10MB24320CB8AA24B1A1DA6BBA8A9F230@SN6PR10MB2432.namprd10.prod.outlook.com>
References: <CAGmyFCFVBXmyUR+YbOKB0Sc=KK67kYjQH18mewXDCTgGiNgQOg@mail.gmail.com>
 <225b137b-052c-6145-3d5e-0b15ca0dc581@gmail.com>
 <SN6PR10MB24320CB8AA24B1A1DA6BBA8A9F230@SN6PR10MB2432.namprd10.prod.outlook.com>
Message-ID: <0bdcd1bd-c61b-8542-4e65-40848d23549d@gmail.com>

On 13/09/2020 8:47 p.m., Wang, Zhu wrote:
> Apologize if I hijack this thread, but the use of ::: is something I was puzzled.
> 
> I tried Duncan's solution in my R package mypkg, something like:
> 
> pkg::callInternal("foo", args)
> 
> R CMD check mypkg
> 
> * checking dependencies in R code ... WARNING
> '::' or ':::' import not declared from: ?pkg'
> 
> I probably missed something here.

You don't need either pkg:: or pkg::: if you are calling the function 
from within the package.  You may need one of those if the call is 
coming from a user script.

If you use pkg:: from mypkg, you need to declare that mypkg Imports pkg. 
  (This is a line in its DESCRIPTION file.)  I think that's what the 
WARNING is telling you.

Duncan Murdoch

> 
> Thanks,
> Zhu
> 
> -----Original Message-----
> From: R-package-devel <r-package-devel-bounces at r-project.org> On Behalf Of Duncan Murdoch
> Sent: Sunday, September 13, 2020 3:20 PM
> To: David Kepplinger <david.kepplinger at gmail.com>; R Package Devel <r-package-devel at r-project.org>
> Subject: Re: [R-pkg-devel] Use of `:::` in a package for code run in a parallel cluster
> 
> On 13/09/2020 3:51 p.m., David Kepplinger wrote:
>> Dear list members,
>>
>> I submitted an update for my package and got automatically rejected by
>> the incoming checks (as expected from my own checks) for using `:::`
>> calls to access the package's namespace.
>> "There are ::: calls to the package's namespace in its code. A package
>> *almost* never needs to use ::: for its own objects:?" (emphasis mine)
>>
>> This was a conscious decision on my part as the package runs code on a
>> user-supplied parallel cluster and I consider cluster-exporting the
>> required functions a no-go as it would potentially overwrite objects
>> in the clusters R sessions. The package code does not own the cluster
>> and hence the R sessions. Therefore overwriting objects could
>> potentially lead to unintended behaviour which is opaque to the user and difficult to debug.
>>
>> Another solution to circumvent the R CMD check note is to export the
>> functions to the public namespace but mark them as internal. This was
>> also suggested in another thread on this mailing list (c.f. "Etiquette
>> for package submissions that do not automatically pass checks?"). I do
>> not agree with this work-around as the methods are indeed internal and
>> should never be used by users. Exporting truly internal functions for
>> the sake of satisfying R CMD check is a bad argument, in particular if
>> there is a clean, well-documented, solution by using `:::`
> 
> Who is calling this function:  package code or user code?  I assume it's a bit of a mix:  your package writes a script that calls the function when it runs in user space.  (It would help if you gave an explicit example of when you need to use this technique.)
> 
> If my assumption is correct, there are other simple workarounds besides exporting the functions.  Instead of putting
> 
>      pkg:::foo(args)
> 
> into your script, put
> 
>      pkg::callInternal("foo", args)
> 
> where pkg::callInternal is an exported function that can look up unexported functions in the namespace.
> 
> You may argue that you prefer pkg:::foo for some reason:  to which I'd respond that you are being rude to the CRAN volunteers.  I've offered two options (one in the previous thread, a different one here), and there was a third one in that thread offered by Ivan Krylov.  Surely one of these is good enough for your needs, and you shouldn't force CRAN to handle you specially.
> 
> Duncan
> 
>>
>> I argue `:::` is the only clean solution to this problem and no dirty
>> work-arounds are necessary. This is a prime example of where `:::` is
>> actually useful and needed inside a package. If the R community
>> disagrees, I think R CMD check should at least emit a WARNING instead
>> of a NOTE and elaborate on the problem and accepted work-arounds in
>> "Writing R extensions". Or keep emitting a NOTE but listing those
>> nebulous reasons where `:::` would be tolerated inside a package.
>> Having more transparent criteria for submitting to CRAN would be
>> really helpful to the entire R community and probably also reduce the traffic on this mailing list.
>>
>> Best,
>> David
>>
>> 	[[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From w@ngz1 @end|ng |rom uth@c@@@edu  Mon Sep 14 16:30:12 2020
From: w@ngz1 @end|ng |rom uth@c@@@edu (Wang, Zhu)
Date: Mon, 14 Sep 2020 14:30:12 +0000
Subject: [R-pkg-devel] 
 Use of `:::` in a package for code run in a parallel cluster
In-Reply-To: <0bdcd1bd-c61b-8542-4e65-40848d23549d@gmail.com>
References: <CAGmyFCFVBXmyUR+YbOKB0Sc=KK67kYjQH18mewXDCTgGiNgQOg@mail.gmail.com>
 <225b137b-052c-6145-3d5e-0b15ca0dc581@gmail.com>
 <SN6PR10MB24320CB8AA24B1A1DA6BBA8A9F230@SN6PR10MB2432.namprd10.prod.outlook.com>
 <0bdcd1bd-c61b-8542-4e65-40848d23549d@gmail.com>
Message-ID: <SN6PR10MB2432F38550F0989D2800437C9F230@SN6PR10MB2432.namprd10.prod.outlook.com>

In mypkg, I want to call a function foo from pkg,  and foo is not exported. I thought I should use pkg:: or pkg:::, but R CMD check provided a warning.

Thanks,
Zhu

> You don't need either pkg:: or pkg::: if you are calling the function from within the package.  You may need one of those if the call is coming from a user script.

-----Original Message-----
From: Duncan Murdoch <murdoch.duncan at gmail.com> 
Sent: Monday, September 14, 2020 7:17 AM
To: Wang, Zhu <wangz1 at uthscsa.edu>; David Kepplinger <david.kepplinger at gmail.com>; R Package Devel <r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] Use of `:::` in a package for code run in a parallel cluster

On 13/09/2020 8:47 p.m., Wang, Zhu wrote:
> Apologize if I hijack this thread, but the use of ::: is something I was puzzled.
> 
> I tried Duncan's solution in my R package mypkg, something like:
> 
> pkg::callInternal("foo", args)
> 
> R CMD check mypkg
> 
> * checking dependencies in R code ... WARNING '::' or ':::' import not 
> declared from: ?pkg'
> 
> I probably missed something here.

You don't need either pkg:: or pkg::: if you are calling the function from within the package.  You may need one of those if the call is coming from a user script.

If you use pkg:: from mypkg, you need to declare that mypkg Imports pkg. 
  (This is a line in its DESCRIPTION file.)  I think that's what the WARNING is telling you.

Duncan Murdoch

> 
> Thanks,
> Zhu
> 
> -----Original Message-----
> From: R-package-devel <r-package-devel-bounces at r-project.org> On 
> Behalf Of Duncan Murdoch
> Sent: Sunday, September 13, 2020 3:20 PM
> To: David Kepplinger <david.kepplinger at gmail.com>; R Package Devel 
> <r-package-devel at r-project.org>
> Subject: Re: [R-pkg-devel] Use of `:::` in a package for code run in a 
> parallel cluster
> 
> On 13/09/2020 3:51 p.m., David Kepplinger wrote:
>> Dear list members,
>>
>> I submitted an update for my package and got automatically rejected 
>> by the incoming checks (as expected from my own checks) for using 
>> `:::` calls to access the package's namespace.
>> "There are ::: calls to the package's namespace in its code. A 
>> package
>> *almost* never needs to use ::: for its own objects:?" (emphasis 
>> mine)
>>
>> This was a conscious decision on my part as the package runs code on 
>> a user-supplied parallel cluster and I consider cluster-exporting the 
>> required functions a no-go as it would potentially overwrite objects 
>> in the clusters R sessions. The package code does not own the cluster 
>> and hence the R sessions. Therefore overwriting objects could 
>> potentially lead to unintended behaviour which is opaque to the user and difficult to debug.
>>
>> Another solution to circumvent the R CMD check note is to export the 
>> functions to the public namespace but mark them as internal. This was 
>> also suggested in another thread on this mailing list (c.f. 
>> "Etiquette for package submissions that do not automatically pass 
>> checks?"). I do not agree with this work-around as the methods are 
>> indeed internal and should never be used by users. Exporting truly 
>> internal functions for the sake of satisfying R CMD check is a bad 
>> argument, in particular if there is a clean, well-documented, 
>> solution by using `:::`
> 
> Who is calling this function:  package code or user code?  I assume 
> it's a bit of a mix:  your package writes a script that calls the 
> function when it runs in user space.  (It would help if you gave an 
> explicit example of when you need to use this technique.)
> 
> If my assumption is correct, there are other simple workarounds 
> besides exporting the functions.  Instead of putting
> 
>      pkg:::foo(args)
> 
> into your script, put
> 
>      pkg::callInternal("foo", args)
> 
> where pkg::callInternal is an exported function that can look up unexported functions in the namespace.
> 
> You may argue that you prefer pkg:::foo for some reason:  to which I'd respond that you are being rude to the CRAN volunteers.  I've offered two options (one in the previous thread, a different one here), and there was a third one in that thread offered by Ivan Krylov.  Surely one of these is good enough for your needs, and you shouldn't force CRAN to handle you specially.
> 
> Duncan
> 
>>
>> I argue `:::` is the only clean solution to this problem and no dirty 
>> work-arounds are necessary. This is a prime example of where `:::` is 
>> actually useful and needed inside a package. If the R community 
>> disagrees, I think R CMD check should at least emit a WARNING instead 
>> of a NOTE and elaborate on the problem and accepted work-arounds in 
>> "Writing R extensions". Or keep emitting a NOTE but listing those 
>> nebulous reasons where `:::` would be tolerated inside a package.
>> Having more transparent criteria for submitting to CRAN would be 
>> really helpful to the entire R community and probably also reduce the traffic on this mailing list.
>>
>> Best,
>> David
>>
>> 	[[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list 
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list 
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 


From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Mon Sep 14 17:06:32 2020
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Mon, 14 Sep 2020 08:06:32 -0700
Subject: [R-pkg-devel] 
 Use of `:::` in a package for code run in a parallel cluster
In-Reply-To: <SN6PR10MB2432F38550F0989D2800437C9F230@SN6PR10MB2432.namprd10.prod.outlook.com>
References: <CAGmyFCFVBXmyUR+YbOKB0Sc=KK67kYjQH18mewXDCTgGiNgQOg@mail.gmail.com>
 <225b137b-052c-6145-3d5e-0b15ca0dc581@gmail.com>
 <SN6PR10MB24320CB8AA24B1A1DA6BBA8A9F230@SN6PR10MB2432.namprd10.prod.outlook.com>
 <0bdcd1bd-c61b-8542-4e65-40848d23549d@gmail.com>
 <SN6PR10MB2432F38550F0989D2800437C9F230@SN6PR10MB2432.namprd10.prod.outlook.com>
Message-ID: <76B949BD-E999-43AC-AABF-7CD752587A4A@dcn.davis.ca.us>

As Duncan said, if you are calling FROM a function in your package, and the function you are CALLING is in the same package, then you do NOT need any colons at all, whether exported or not.

On September 14, 2020 7:30:12 AM PDT, "Wang, Zhu" <wangz1 at uthscsa.edu> wrote:
>In mypkg, I want to call a function foo from pkg,  and foo is not
>exported. I thought I should use pkg:: or pkg:::, but R CMD check
>provided a warning.
>
>Thanks,
>Zhu
>
>> You don't need either pkg:: or pkg::: if you are calling the function
>from within the package.  You may need one of those if the call is
>coming from a user script.
>
>-----Original Message-----
>From: Duncan Murdoch <murdoch.duncan at gmail.com> 
>Sent: Monday, September 14, 2020 7:17 AM
>To: Wang, Zhu <wangz1 at uthscsa.edu>; David Kepplinger
><david.kepplinger at gmail.com>; R Package Devel
><r-package-devel at r-project.org>
>Subject: Re: [R-pkg-devel] Use of `:::` in a package for code run in a
>parallel cluster
>
>On 13/09/2020 8:47 p.m., Wang, Zhu wrote:
>> Apologize if I hijack this thread, but the use of ::: is something I
>was puzzled.
>> 
>> I tried Duncan's solution in my R package mypkg, something like:
>> 
>> pkg::callInternal("foo", args)
>> 
>> R CMD check mypkg
>> 
>> * checking dependencies in R code ... WARNING '::' or ':::' import
>not 
>> declared from: ?pkg'
>> 
>> I probably missed something here.
>
>You don't need either pkg:: or pkg::: if you are calling the function
>from within the package.  You may need one of those if the call is
>coming from a user script.
>
>If you use pkg:: from mypkg, you need to declare that mypkg Imports
>pkg. 
>(This is a line in its DESCRIPTION file.)  I think that's what the
>WARNING is telling you.
>
>Duncan Murdoch
>
>> 
>> Thanks,
>> Zhu
>> 
>> -----Original Message-----
>> From: R-package-devel <r-package-devel-bounces at r-project.org> On 
>> Behalf Of Duncan Murdoch
>> Sent: Sunday, September 13, 2020 3:20 PM
>> To: David Kepplinger <david.kepplinger at gmail.com>; R Package Devel 
>> <r-package-devel at r-project.org>
>> Subject: Re: [R-pkg-devel] Use of `:::` in a package for code run in
>a 
>> parallel cluster
>> 
>> On 13/09/2020 3:51 p.m., David Kepplinger wrote:
>>> Dear list members,
>>>
>>> I submitted an update for my package and got automatically rejected 
>>> by the incoming checks (as expected from my own checks) for using 
>>> `:::` calls to access the package's namespace.
>>> "There are ::: calls to the package's namespace in its code. A 
>>> package
>>> *almost* never needs to use ::: for its own objects:?" (emphasis 
>>> mine)
>>>
>>> This was a conscious decision on my part as the package runs code on
>
>>> a user-supplied parallel cluster and I consider cluster-exporting
>the 
>>> required functions a no-go as it would potentially overwrite objects
>
>>> in the clusters R sessions. The package code does not own the
>cluster 
>>> and hence the R sessions. Therefore overwriting objects could 
>>> potentially lead to unintended behaviour which is opaque to the user
>and difficult to debug.
>>>
>>> Another solution to circumvent the R CMD check note is to export the
>
>>> functions to the public namespace but mark them as internal. This
>was 
>>> also suggested in another thread on this mailing list (c.f. 
>>> "Etiquette for package submissions that do not automatically pass 
>>> checks?"). I do not agree with this work-around as the methods are 
>>> indeed internal and should never be used by users. Exporting truly 
>>> internal functions for the sake of satisfying R CMD check is a bad 
>>> argument, in particular if there is a clean, well-documented, 
>>> solution by using `:::`
>> 
>> Who is calling this function:  package code or user code?  I assume 
>> it's a bit of a mix:  your package writes a script that calls the 
>> function when it runs in user space.  (It would help if you gave an 
>> explicit example of when you need to use this technique.)
>> 
>> If my assumption is correct, there are other simple workarounds 
>> besides exporting the functions.  Instead of putting
>> 
>>      pkg:::foo(args)
>> 
>> into your script, put
>> 
>>      pkg::callInternal("foo", args)
>> 
>> where pkg::callInternal is an exported function that can look up
>unexported functions in the namespace.
>> 
>> You may argue that you prefer pkg:::foo for some reason:  to which
>I'd respond that you are being rude to the CRAN volunteers.  I've
>offered two options (one in the previous thread, a different one here),
>and there was a third one in that thread offered by Ivan Krylov. 
>Surely one of these is good enough for your needs, and you shouldn't
>force CRAN to handle you specially.
>> 
>> Duncan
>> 
>>>
>>> I argue `:::` is the only clean solution to this problem and no
>dirty 
>>> work-arounds are necessary. This is a prime example of where `:::`
>is 
>>> actually useful and needed inside a package. If the R community 
>>> disagrees, I think R CMD check should at least emit a WARNING
>instead 
>>> of a NOTE and elaborate on the problem and accepted work-arounds in 
>>> "Writing R extensions". Or keep emitting a NOTE but listing those 
>>> nebulous reasons where `:::` would be tolerated inside a package.
>>> Having more transparent criteria for submitting to CRAN would be 
>>> really helpful to the entire R community and probably also reduce
>the traffic on this mailing list.
>>>
>>> Best,
>>> David
>>>
>>> 	[[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list 
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>> 
>> ______________________________________________
>> R-package-devel at r-project.org mailing list 
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> 
>
>______________________________________________
>R-package-devel at r-project.org mailing list
>https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
Sent from my phone. Please excuse my brevity.


From murdoch@dunc@n @end|ng |rom gm@||@com  Mon Sep 14 17:49:06 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Mon, 14 Sep 2020 11:49:06 -0400
Subject: [R-pkg-devel] 
 Use of `:::` in a package for code run in a parallel cluster
In-Reply-To: <SN6PR10MB2432F38550F0989D2800437C9F230@SN6PR10MB2432.namprd10.prod.outlook.com>
References: <CAGmyFCFVBXmyUR+YbOKB0Sc=KK67kYjQH18mewXDCTgGiNgQOg@mail.gmail.com>
 <225b137b-052c-6145-3d5e-0b15ca0dc581@gmail.com>
 <SN6PR10MB24320CB8AA24B1A1DA6BBA8A9F230@SN6PR10MB2432.namprd10.prod.outlook.com>
 <0bdcd1bd-c61b-8542-4e65-40848d23549d@gmail.com>
 <SN6PR10MB2432F38550F0989D2800437C9F230@SN6PR10MB2432.namprd10.prod.outlook.com>
Message-ID: <6e51a334-ebf7-2807-587f-d30b44b7ac8b@gmail.com>

On 14/09/2020 10:30 a.m., Wang, Zhu wrote:
> In mypkg, I want to call a function foo from pkg,  and foo is not exported. I thought I should use pkg:: or pkg:::, but R CMD check provided a warning.

I'm assuming that mypkg is not the same as pkg; Jeff Newmiller's answer 
assumes the opposite.

In that case where they are different, there is only one circumstance 
where you should be calling foo, and you'll have to do it using 
foo:::pkg.  That circumstance is that you are the maintainer of both 
packages.  You should explain this in your submission message, and ask 
CRAN to ignore the warning if there is one.

The reason for this is the following.  If someone else is maintaining 
pkg, then they are free to change the behaviour of foo without any 
consideration for you, because as an internal function, they have no 
contract with you to maintain its behaviour.  On the other hand, if you 
maintain both packages, then you should be ready to modify mypkg as soon 
as you modify pkg:::foo.

Duncan Murdoch


> 
> Thanks,
> Zhu
> 
>> You don't need either pkg:: or pkg::: if you are calling the function from within the package.  You may need one of those if the call is coming from a user script.
> 
> -----Original Message-----
> From: Duncan Murdoch <murdoch.duncan at gmail.com>
> Sent: Monday, September 14, 2020 7:17 AM
> To: Wang, Zhu <wangz1 at uthscsa.edu>; David Kepplinger <david.kepplinger at gmail.com>; R Package Devel <r-package-devel at r-project.org>
> Subject: Re: [R-pkg-devel] Use of `:::` in a package for code run in a parallel cluster
> 
> On 13/09/2020 8:47 p.m., Wang, Zhu wrote:
>> Apologize if I hijack this thread, but the use of ::: is something I was puzzled.
>>
>> I tried Duncan's solution in my R package mypkg, something like:
>>
>> pkg::callInternal("foo", args)
>>
>> R CMD check mypkg
>>
>> * checking dependencies in R code ... WARNING '::' or ':::' import not
>> declared from: ?pkg'
>>
>> I probably missed something here.
> 
> You don't need either pkg:: or pkg::: if you are calling the function from within the package.  You may need one of those if the call is coming from a user script.
> 
> If you use pkg:: from mypkg, you need to declare that mypkg Imports pkg.
>    (This is a line in its DESCRIPTION file.)  I think that's what the WARNING is telling you.
> 
> Duncan Murdoch
> 
>>
>> Thanks,
>> Zhu
>>
>> -----Original Message-----
>> From: R-package-devel <r-package-devel-bounces at r-project.org> On
>> Behalf Of Duncan Murdoch
>> Sent: Sunday, September 13, 2020 3:20 PM
>> To: David Kepplinger <david.kepplinger at gmail.com>; R Package Devel
>> <r-package-devel at r-project.org>
>> Subject: Re: [R-pkg-devel] Use of `:::` in a package for code run in a
>> parallel cluster
>>
>> On 13/09/2020 3:51 p.m., David Kepplinger wrote:
>>> Dear list members,
>>>
>>> I submitted an update for my package and got automatically rejected
>>> by the incoming checks (as expected from my own checks) for using
>>> `:::` calls to access the package's namespace.
>>> "There are ::: calls to the package's namespace in its code. A
>>> package
>>> *almost* never needs to use ::: for its own objects:?" (emphasis
>>> mine)
>>>
>>> This was a conscious decision on my part as the package runs code on
>>> a user-supplied parallel cluster and I consider cluster-exporting the
>>> required functions a no-go as it would potentially overwrite objects
>>> in the clusters R sessions. The package code does not own the cluster
>>> and hence the R sessions. Therefore overwriting objects could
>>> potentially lead to unintended behaviour which is opaque to the user and difficult to debug.
>>>
>>> Another solution to circumvent the R CMD check note is to export the
>>> functions to the public namespace but mark them as internal. This was
>>> also suggested in another thread on this mailing list (c.f.
>>> "Etiquette for package submissions that do not automatically pass
>>> checks?"). I do not agree with this work-around as the methods are
>>> indeed internal and should never be used by users. Exporting truly
>>> internal functions for the sake of satisfying R CMD check is a bad
>>> argument, in particular if there is a clean, well-documented,
>>> solution by using `:::`
>>
>> Who is calling this function:  package code or user code?  I assume
>> it's a bit of a mix:  your package writes a script that calls the
>> function when it runs in user space.  (It would help if you gave an
>> explicit example of when you need to use this technique.)
>>
>> If my assumption is correct, there are other simple workarounds
>> besides exporting the functions.  Instead of putting
>>
>>       pkg:::foo(args)
>>
>> into your script, put
>>
>>       pkg::callInternal("foo", args)
>>
>> where pkg::callInternal is an exported function that can look up unexported functions in the namespace.
>>
>> You may argue that you prefer pkg:::foo for some reason:  to which I'd respond that you are being rude to the CRAN volunteers.  I've offered two options (one in the previous thread, a different one here), and there was a third one in that thread offered by Ivan Krylov.  Surely one of these is good enough for your needs, and you shouldn't force CRAN to handle you specially.
>>
>> Duncan
>>
>>>
>>> I argue `:::` is the only clean solution to this problem and no dirty
>>> work-arounds are necessary. This is a prime example of where `:::` is
>>> actually useful and needed inside a package. If the R community
>>> disagrees, I think R CMD check should at least emit a WARNING instead
>>> of a NOTE and elaborate on the problem and accepted work-arounds in
>>> "Writing R extensions". Or keep emitting a NOTE but listing those
>>> nebulous reasons where `:::` would be tolerated inside a package.
>>> Having more transparent criteria for submitting to CRAN would be
>>> really helpful to the entire R community and probably also reduce the traffic on this mailing list.
>>>
>>> Best,
>>> David
>>>
>>> 	[[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>


From w@ngz1 @end|ng |rom uth@c@@@edu  Mon Sep 14 17:56:20 2020
From: w@ngz1 @end|ng |rom uth@c@@@edu (Wang, Zhu)
Date: Mon, 14 Sep 2020 15:56:20 +0000
Subject: [R-pkg-devel] 
 Use of `:::` in a package for code run in a parallel cluster
In-Reply-To: <6e51a334-ebf7-2807-587f-d30b44b7ac8b@gmail.com>
References: <CAGmyFCFVBXmyUR+YbOKB0Sc=KK67kYjQH18mewXDCTgGiNgQOg@mail.gmail.com>
 <225b137b-052c-6145-3d5e-0b15ca0dc581@gmail.com>
 <SN6PR10MB24320CB8AA24B1A1DA6BBA8A9F230@SN6PR10MB2432.namprd10.prod.outlook.com>
 <0bdcd1bd-c61b-8542-4e65-40848d23549d@gmail.com>
 <SN6PR10MB2432F38550F0989D2800437C9F230@SN6PR10MB2432.namprd10.prod.outlook.com>
 <6e51a334-ebf7-2807-587f-d30b44b7ac8b@gmail.com>
Message-ID: <SN6PR10MB24327128710B7095383E0EEF9F230@SN6PR10MB2432.namprd10.prod.outlook.com>

Yes, mypkg is different from pkg, and I am the maintainer of mypkg, but not pkg. Otherwise, things can be easier. Sorry for not clear enough.

Thanks to Duncan for a practical solution.

Best,
Zhu

-----Original Message-----
From: Duncan Murdoch <murdoch.duncan at gmail.com> 
Sent: Monday, September 14, 2020 10:49 AM
To: Wang, Zhu <wangz1 at uthscsa.edu>; David Kepplinger <david.kepplinger at gmail.com>; R Package Devel <r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] Use of `:::` in a package for code run in a parallel cluster

On 14/09/2020 10:30 a.m., Wang, Zhu wrote:
> In mypkg, I want to call a function foo from pkg,  and foo is not exported. I thought I should use pkg:: or pkg:::, but R CMD check provided a warning.

I'm assuming that mypkg is not the same as pkg; Jeff Newmiller's answer assumes the opposite.

In that case where they are different, there is only one circumstance where you should be calling foo, and you'll have to do it using foo:::pkg.  That circumstance is that you are the maintainer of both packages.  You should explain this in your submission message, and ask CRAN to ignore the warning if there is one.

The reason for this is the following.  If someone else is maintaining pkg, then they are free to change the behaviour of foo without any consideration for you, because as an internal function, they have no contract with you to maintain its behaviour.  On the other hand, if you maintain both packages, then you should be ready to modify mypkg as soon as you modify pkg:::foo.

Duncan Murdoch


> 
> Thanks,
> Zhu
> 
>> You don't need either pkg:: or pkg::: if you are calling the function from within the package.  You may need one of those if the call is coming from a user script.
> 
> -----Original Message-----
> From: Duncan Murdoch <murdoch.duncan at gmail.com>
> Sent: Monday, September 14, 2020 7:17 AM
> To: Wang, Zhu <wangz1 at uthscsa.edu>; David Kepplinger 
> <david.kepplinger at gmail.com>; R Package Devel 
> <r-package-devel at r-project.org>
> Subject: Re: [R-pkg-devel] Use of `:::` in a package for code run in a 
> parallel cluster
> 
> On 13/09/2020 8:47 p.m., Wang, Zhu wrote:
>> Apologize if I hijack this thread, but the use of ::: is something I was puzzled.
>>
>> I tried Duncan's solution in my R package mypkg, something like:
>>
>> pkg::callInternal("foo", args)
>>
>> R CMD check mypkg
>>
>> * checking dependencies in R code ... WARNING '::' or ':::' import 
>> not declared from: ?pkg'
>>
>> I probably missed something here.
> 
> You don't need either pkg:: or pkg::: if you are calling the function from within the package.  You may need one of those if the call is coming from a user script.
> 
> If you use pkg:: from mypkg, you need to declare that mypkg Imports pkg.
>    (This is a line in its DESCRIPTION file.)  I think that's what the WARNING is telling you.
> 
> Duncan Murdoch
> 
>>
>> Thanks,
>> Zhu
>>
>> -----Original Message-----
>> From: R-package-devel <r-package-devel-bounces at r-project.org> On 
>> Behalf Of Duncan Murdoch
>> Sent: Sunday, September 13, 2020 3:20 PM
>> To: David Kepplinger <david.kepplinger at gmail.com>; R Package Devel 
>> <r-package-devel at r-project.org>
>> Subject: Re: [R-pkg-devel] Use of `:::` in a package for code run in 
>> a parallel cluster
>>
>> On 13/09/2020 3:51 p.m., David Kepplinger wrote:
>>> Dear list members,
>>>
>>> I submitted an update for my package and got automatically rejected 
>>> by the incoming checks (as expected from my own checks) for using 
>>> `:::` calls to access the package's namespace.
>>> "There are ::: calls to the package's namespace in its code. A 
>>> package
>>> *almost* never needs to use ::: for its own objects:?" (emphasis
>>> mine)
>>>
>>> This was a conscious decision on my part as the package runs code on 
>>> a user-supplied parallel cluster and I consider cluster-exporting 
>>> the required functions a no-go as it would potentially overwrite 
>>> objects in the clusters R sessions. The package code does not own 
>>> the cluster and hence the R sessions. Therefore overwriting objects 
>>> could potentially lead to unintended behaviour which is opaque to the user and difficult to debug.
>>>
>>> Another solution to circumvent the R CMD check note is to export the 
>>> functions to the public namespace but mark them as internal. This 
>>> was also suggested in another thread on this mailing list (c.f.
>>> "Etiquette for package submissions that do not automatically pass 
>>> checks?"). I do not agree with this work-around as the methods are 
>>> indeed internal and should never be used by users. Exporting truly 
>>> internal functions for the sake of satisfying R CMD check is a bad 
>>> argument, in particular if there is a clean, well-documented, 
>>> solution by using `:::`
>>
>> Who is calling this function:  package code or user code?  I assume 
>> it's a bit of a mix:  your package writes a script that calls the 
>> function when it runs in user space.  (It would help if you gave an 
>> explicit example of when you need to use this technique.)
>>
>> If my assumption is correct, there are other simple workarounds 
>> besides exporting the functions.  Instead of putting
>>
>>       pkg:::foo(args)
>>
>> into your script, put
>>
>>       pkg::callInternal("foo", args)
>>
>> where pkg::callInternal is an exported function that can look up unexported functions in the namespace.
>>
>> You may argue that you prefer pkg:::foo for some reason:  to which I'd respond that you are being rude to the CRAN volunteers.  I've offered two options (one in the previous thread, a different one here), and there was a third one in that thread offered by Ivan Krylov.  Surely one of these is good enough for your needs, and you shouldn't force CRAN to handle you specially.
>>
>> Duncan
>>
>>>
>>> I argue `:::` is the only clean solution to this problem and no 
>>> dirty work-arounds are necessary. This is a prime example of where 
>>> `:::` is actually useful and needed inside a package. If the R 
>>> community disagrees, I think R CMD check should at least emit a 
>>> WARNING instead of a NOTE and elaborate on the problem and accepted 
>>> work-arounds in "Writing R extensions". Or keep emitting a NOTE but 
>>> listing those nebulous reasons where `:::` would be tolerated inside a package.
>>> Having more transparent criteria for submitting to CRAN would be 
>>> really helpful to the entire R community and probably also reduce the traffic on this mailing list.
>>>
>>> Best,
>>> David
>>>
>>> 	[[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list 
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list 
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
> 


From murdoch@dunc@n @end|ng |rom gm@||@com  Mon Sep 14 18:12:07 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Mon, 14 Sep 2020 12:12:07 -0400
Subject: [R-pkg-devel] 
 Use of `:::` in a package for code run in a parallel cluster
In-Reply-To: <SN6PR10MB24327128710B7095383E0EEF9F230@SN6PR10MB2432.namprd10.prod.outlook.com>
References: <CAGmyFCFVBXmyUR+YbOKB0Sc=KK67kYjQH18mewXDCTgGiNgQOg@mail.gmail.com>
 <225b137b-052c-6145-3d5e-0b15ca0dc581@gmail.com>
 <SN6PR10MB24320CB8AA24B1A1DA6BBA8A9F230@SN6PR10MB2432.namprd10.prod.outlook.com>
 <0bdcd1bd-c61b-8542-4e65-40848d23549d@gmail.com>
 <SN6PR10MB2432F38550F0989D2800437C9F230@SN6PR10MB2432.namprd10.prod.outlook.com>
 <6e51a334-ebf7-2807-587f-d30b44b7ac8b@gmail.com>
 <SN6PR10MB24327128710B7095383E0EEF9F230@SN6PR10MB2432.namprd10.prod.outlook.com>
Message-ID: <1a093651-ddb6-e6e8-897b-77c234660294@gmail.com>

On 14/09/2020 11:56 a.m., Wang, Zhu wrote:
> Yes, mypkg is different from pkg, and I am the maintainer of mypkg, but not pkg. Otherwise, things can be easier. Sorry for not clear enough.

Then you should not call foo, for the reasons I stated.

Alternatives are to contact the maintainer of pkg and explain why you 
would like them to export foo, or (if the license permits it) just copy 
the source of foo into your own package, giving appropriate credit to 
the original author.

Duncan Murdoch

> 
> Thanks to Duncan for a practical solution.
> 
> Best,
> Zhu
> 
> -----Original Message-----
> From: Duncan Murdoch <murdoch.duncan at gmail.com>
> Sent: Monday, September 14, 2020 10:49 AM
> To: Wang, Zhu <wangz1 at uthscsa.edu>; David Kepplinger <david.kepplinger at gmail.com>; R Package Devel <r-package-devel at r-project.org>
> Subject: Re: [R-pkg-devel] Use of `:::` in a package for code run in a parallel cluster
> 
> On 14/09/2020 10:30 a.m., Wang, Zhu wrote:
>> In mypkg, I want to call a function foo from pkg,  and foo is not exported. I thought I should use pkg:: or pkg:::, but R CMD check provided a warning.
> 
> I'm assuming that mypkg is not the same as pkg; Jeff Newmiller's answer assumes the opposite.
> 
> In that case where they are different, there is only one circumstance where you should be calling foo, and you'll have to do it using foo:::pkg.  That circumstance is that you are the maintainer of both packages.  You should explain this in your submission message, and ask CRAN to ignore the warning if there is one.
> 
> The reason for this is the following.  If someone else is maintaining pkg, then they are free to change the behaviour of foo without any consideration for you, because as an internal function, they have no contract with you to maintain its behaviour.  On the other hand, if you maintain both packages, then you should be ready to modify mypkg as soon as you modify pkg:::foo.
> 
> Duncan Murdoch
> 
> 
>>
>> Thanks,
>> Zhu
>>
>>> You don't need either pkg:: or pkg::: if you are calling the function from within the package.  You may need one of those if the call is coming from a user script.
>>
>> -----Original Message-----
>> From: Duncan Murdoch <murdoch.duncan at gmail.com>
>> Sent: Monday, September 14, 2020 7:17 AM
>> To: Wang, Zhu <wangz1 at uthscsa.edu>; David Kepplinger
>> <david.kepplinger at gmail.com>; R Package Devel
>> <r-package-devel at r-project.org>
>> Subject: Re: [R-pkg-devel] Use of `:::` in a package for code run in a
>> parallel cluster
>>
>> On 13/09/2020 8:47 p.m., Wang, Zhu wrote:
>>> Apologize if I hijack this thread, but the use of ::: is something I was puzzled.
>>>
>>> I tried Duncan's solution in my R package mypkg, something like:
>>>
>>> pkg::callInternal("foo", args)
>>>
>>> R CMD check mypkg
>>>
>>> * checking dependencies in R code ... WARNING '::' or ':::' import
>>> not declared from: ?pkg'
>>>
>>> I probably missed something here.
>>
>> You don't need either pkg:: or pkg::: if you are calling the function from within the package.  You may need one of those if the call is coming from a user script.
>>
>> If you use pkg:: from mypkg, you need to declare that mypkg Imports pkg.
>>     (This is a line in its DESCRIPTION file.)  I think that's what the WARNING is telling you.
>>
>> Duncan Murdoch
>>
>>>
>>> Thanks,
>>> Zhu
>>>
>>> -----Original Message-----
>>> From: R-package-devel <r-package-devel-bounces at r-project.org> On
>>> Behalf Of Duncan Murdoch
>>> Sent: Sunday, September 13, 2020 3:20 PM
>>> To: David Kepplinger <david.kepplinger at gmail.com>; R Package Devel
>>> <r-package-devel at r-project.org>
>>> Subject: Re: [R-pkg-devel] Use of `:::` in a package for code run in
>>> a parallel cluster
>>>
>>> On 13/09/2020 3:51 p.m., David Kepplinger wrote:
>>>> Dear list members,
>>>>
>>>> I submitted an update for my package and got automatically rejected
>>>> by the incoming checks (as expected from my own checks) for using
>>>> `:::` calls to access the package's namespace.
>>>> "There are ::: calls to the package's namespace in its code. A
>>>> package
>>>> *almost* never needs to use ::: for its own objects:?" (emphasis
>>>> mine)
>>>>
>>>> This was a conscious decision on my part as the package runs code on
>>>> a user-supplied parallel cluster and I consider cluster-exporting
>>>> the required functions a no-go as it would potentially overwrite
>>>> objects in the clusters R sessions. The package code does not own
>>>> the cluster and hence the R sessions. Therefore overwriting objects
>>>> could potentially lead to unintended behaviour which is opaque to the user and difficult to debug.
>>>>
>>>> Another solution to circumvent the R CMD check note is to export the
>>>> functions to the public namespace but mark them as internal. This
>>>> was also suggested in another thread on this mailing list (c.f.
>>>> "Etiquette for package submissions that do not automatically pass
>>>> checks?"). I do not agree with this work-around as the methods are
>>>> indeed internal and should never be used by users. Exporting truly
>>>> internal functions for the sake of satisfying R CMD check is a bad
>>>> argument, in particular if there is a clean, well-documented,
>>>> solution by using `:::`
>>>
>>> Who is calling this function:  package code or user code?  I assume
>>> it's a bit of a mix:  your package writes a script that calls the
>>> function when it runs in user space.  (It would help if you gave an
>>> explicit example of when you need to use this technique.)
>>>
>>> If my assumption is correct, there are other simple workarounds
>>> besides exporting the functions.  Instead of putting
>>>
>>>        pkg:::foo(args)
>>>
>>> into your script, put
>>>
>>>        pkg::callInternal("foo", args)
>>>
>>> where pkg::callInternal is an exported function that can look up unexported functions in the namespace.
>>>
>>> You may argue that you prefer pkg:::foo for some reason:  to which I'd respond that you are being rude to the CRAN volunteers.  I've offered two options (one in the previous thread, a different one here), and there was a third one in that thread offered by Ivan Krylov.  Surely one of these is good enough for your needs, and you shouldn't force CRAN to handle you specially.
>>>
>>> Duncan
>>>
>>>>
>>>> I argue `:::` is the only clean solution to this problem and no
>>>> dirty work-arounds are necessary. This is a prime example of where
>>>> `:::` is actually useful and needed inside a package. If the R
>>>> community disagrees, I think R CMD check should at least emit a
>>>> WARNING instead of a NOTE and elaborate on the problem and accepted
>>>> work-arounds in "Writing R extensions". Or keep emitting a NOTE but
>>>> listing those nebulous reasons where `:::` would be tolerated inside a package.
>>>> Having more transparent criteria for submitting to CRAN would be
>>>> really helpful to the entire R community and probably also reduce the traffic on this mailing list.
>>>>
>>>> Best,
>>>> David
>>>>
>>>> 	[[alternative HTML version deleted]]
>>>>
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>>
>


From d@v|d@kepp||nger @end|ng |rom gm@||@com  Mon Sep 14 21:06:08 2020
From: d@v|d@kepp||nger @end|ng |rom gm@||@com (David Kepplinger)
Date: Mon, 14 Sep 2020 12:06:08 -0700
Subject: [R-pkg-devel] 
 Use of `:::` in a package for code run in a parallel cluster
In-Reply-To: <AM0PR0102MB34431FD43538A9E1D4069528AE230@AM0PR0102MB3443.eurprd01.prod.exchangelabs.com>
References: <CAGmyFCFVBXmyUR+YbOKB0Sc=KK67kYjQH18mewXDCTgGiNgQOg@mail.gmail.com>
 <AM0PR0102MB34431FD43538A9E1D4069528AE230@AM0PR0102MB3443.eurprd01.prod.exchangelabs.com>
Message-ID: <CAGmyFCGDJGAoVj86P-tE2oYAk28BqJczhYJi-qQk+mxQPcTrhQ@mail.gmail.com>

Yes, my view is certainly rigid and I agree that in the cases where the
function is actually used directly by the user, exporting it is the correct
step.

However, it seems some packages actually need to access internal functions
from an outside context, but the code that accesses the function is
logically contained completely inside the package. In these cases, package
maintainers seem to be looking for alternatives to `:::` for the sake of
avoiding the R CMD check note. I argue that the work arounds, however,
either (a) achieve the exact same result as `:::`, but in a less
transparent and likely more error prone way, or (b) unnecessarily making an
internal function available to the user.

I also agree with the CRAN team that package maintainers need to be made
aware of the issue when using `:::` inside their package as it is most
likely unnecessary. But the phrasing of the note ("almost never needs to
use :::") combined with a lack of transparent guidelines on when it is
acceptable leads to maintainers looking for alternatives mimicking the
behavior of `:::`. I haven't found any official instructions in Writing R
extensions or on the mailing list under what circumstances `:::` is deemed
to be acceptable by the CRAN team (I have to admit searching for `:::` in
the archives yields so many results I haven't looked at all of them). It's
probably impossible to conceive every possible use case for `:::`, but a
good start may be to have something in the documentation explicitly
mentioning commonly observed patterns where `:::` is not acceptable, and
the common exceptions to the rule (if there are any).

Maybe this issue is so miniscule and almost never comes up that it's not
worth mentioning in the documentation.

Best,
David



On Mon, Sep 14, 2020 at 3:19 AM Georgi Boshnakov <
georgi.boshnakov at manchester.ac.uk> wrote:

> You may have a case to argue to CRAN that you can get the "almost"
> exemption (can't say without details) but your views look overly rigid.
>
> Exporting an object and marking it as internal is not a "work around",
> even less a "dirty trick".
> Export makes the object available outside the package's namespace and
> makes it clear that this is intentional.
> If you can't drop the 'package:::' prefix in your use case, this means
> that this is what you actually do (i.e. use those objects outside the
> namespace of the package). I would be grateful to CRAN for asking me to
> export and hence document this.
>
>
> Georgi Boshnakov
>
> PS Note that there is no such thing as "public namespace".
>
>
> -----Original Message-----
> From: R-package-devel <r-package-devel-bounces at r-project.org> On Behalf
> Of David Kepplinger
> Sent: 13 September 2020 20:52
> To: R Package Devel <r-package-devel at r-project.org>
> Subject: [R-pkg-devel] Use of `:::` in a package for code run in a
> parallel cluster
>
> Dear list members,
>
> I submitted an update for my package and got automatically rejected by the
> incoming checks (as expected from my own checks) for using `:::` calls to
> access the package's namespace.
> "There are ::: calls to the package's namespace in its code. A package
> *almost* never needs to use ::: for its own objects:?" (emphasis mine)
>
> This was a conscious decision on my part as the package runs code on a
> user-supplied parallel cluster and I consider cluster-exporting the
> required functions a no-go as it would potentially overwrite objects in the
> clusters R sessions. The package code does not own the cluster and hence
> the R sessions. Therefore overwriting objects could potentially lead to
> unintended behaviour which is opaque to the user and difficult to debug.
>
> Another solution to circumvent the R CMD check note is to export the
> functions to the public namespace but mark them as internal. This was also
> suggested in another thread on this mailing list (c.f. "Etiquette for
> package submissions that do not automatically pass checks?"). I do not
> agree with this work-around as the methods are indeed internal and should
> never be used by users. Exporting truly internal functions for the sake of
> satisfying R CMD check is a bad argument, in particular if there is a
> clean, well-documented, solution by using `:::`.
>
> I argue `:::` is the only clean solution to this problem and no dirty
> work-arounds are necessary. This is a prime example of where `:::` is
> actually useful and needed inside a package. If the R community disagrees,
> I think R CMD check should at least emit a WARNING instead of a NOTE and
> elaborate on the problem and accepted work-arounds in "Writing R
> extensions". Or keep emitting a NOTE but listing those nebulous reasons
> where `:::` would be tolerated inside a package. Having more transparent
> criteria for submitting to CRAN would be really helpful to the entire R
> community and probably also reduce the traffic on this mailing list.
>
> Best,
> David
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From henr|k@bengt@@on @end|ng |rom gm@||@com  Mon Sep 14 21:42:31 2020
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Mon, 14 Sep 2020 12:42:31 -0700
Subject: [R-pkg-devel] 
 Use of `:::` in a package for code run in a parallel cluster
In-Reply-To: <CAGmyFCGDJGAoVj86P-tE2oYAk28BqJczhYJi-qQk+mxQPcTrhQ@mail.gmail.com>
References: <CAGmyFCFVBXmyUR+YbOKB0Sc=KK67kYjQH18mewXDCTgGiNgQOg@mail.gmail.com>
 <AM0PR0102MB34431FD43538A9E1D4069528AE230@AM0PR0102MB3443.eurprd01.prod.exchangelabs.com>
 <CAGmyFCGDJGAoVj86P-tE2oYAk28BqJczhYJi-qQk+mxQPcTrhQ@mail.gmail.com>
Message-ID: <CAFDcVCQ+y6WX=3cWhR7zZF51fiZGUrLDG6qcj2E2T-HqMRmiBA@mail.gmail.com>

Without having read all of the comments already made here, but my
understanding why ::: is not allowed is because you are reaching into
the internal API that the package owner does not guarantee will exist
in the next release.  If you rely on the internal code of another CRAN
package in your CRAN package, your CRAN package might break without
your control.  This might release an avalanche of reverse package
dependencies failing on CRAN.

The only thing you can safely rely on is the API that is explicitly
*exported* by an R package.  In order for the maintainer to break that
API for reverse dependent packages, they need to go through a process
of deprecating and defuncting what they want to break/remove - a
process that involves multiple releases and often reaching out to
package maintainers and asking them to update accordingly.   CRAN runs
reverse package dependency checks making sure that a package does not
break its exported API.  If it does, it will not roll out on CRAN.
So, in that sense CRAN helps uphold the contract of the exported APIs.
In contrast, a maintainer can do whatever they want whenever they want
with their internal code/API.

With more and more packages being infrastructure packages, I think
there is room for "protected" API, which is not exported to avoid
cluttering up the search path for end-users while it yet provides a
contract toward package developers relying on it.  There are various
ways to emulate such protected APIs but we don't have a standard and
there's a risk that 'R CMD check' fails to detect when the contract is
broken (resulting in delayed run-time errors on the user end).

My $.02

Henrik

On Mon, Sep 14, 2020 at 12:06 PM David Kepplinger
<david.kepplinger at gmail.com> wrote:
>
> Yes, my view is certainly rigid and I agree that in the cases where the
> function is actually used directly by the user, exporting it is the correct
> step.
>
> However, it seems some packages actually need to access internal functions
> from an outside context, but the code that accesses the function is
> logically contained completely inside the package. In these cases, package
> maintainers seem to be looking for alternatives to `:::` for the sake of
> avoiding the R CMD check note. I argue that the work arounds, however,
> either (a) achieve the exact same result as `:::`, but in a less
> transparent and likely more error prone way, or (b) unnecessarily making an
> internal function available to the user.
>
> I also agree with the CRAN team that package maintainers need to be made
> aware of the issue when using `:::` inside their package as it is most
> likely unnecessary. But the phrasing of the note ("almost never needs to
> use :::") combined with a lack of transparent guidelines on when it is
> acceptable leads to maintainers looking for alternatives mimicking the
> behavior of `:::`. I haven't found any official instructions in Writing R
> extensions or on the mailing list under what circumstances `:::` is deemed
> to be acceptable by the CRAN team (I have to admit searching for `:::` in
> the archives yields so many results I haven't looked at all of them). It's
> probably impossible to conceive every possible use case for `:::`, but a
> good start may be to have something in the documentation explicitly
> mentioning commonly observed patterns where `:::` is not acceptable, and
> the common exceptions to the rule (if there are any).
>
> Maybe this issue is so miniscule and almost never comes up that it's not
> worth mentioning in the documentation.
>
> Best,
> David
>
>
>
> On Mon, Sep 14, 2020 at 3:19 AM Georgi Boshnakov <
> georgi.boshnakov at manchester.ac.uk> wrote:
>
> > You may have a case to argue to CRAN that you can get the "almost"
> > exemption (can't say without details) but your views look overly rigid.
> >
> > Exporting an object and marking it as internal is not a "work around",
> > even less a "dirty trick".
> > Export makes the object available outside the package's namespace and
> > makes it clear that this is intentional.
> > If you can't drop the 'package:::' prefix in your use case, this means
> > that this is what you actually do (i.e. use those objects outside the
> > namespace of the package). I would be grateful to CRAN for asking me to
> > export and hence document this.
> >
> >
> > Georgi Boshnakov
> >
> > PS Note that there is no such thing as "public namespace".
> >
> >
> > -----Original Message-----
> > From: R-package-devel <r-package-devel-bounces at r-project.org> On Behalf
> > Of David Kepplinger
> > Sent: 13 September 2020 20:52
> > To: R Package Devel <r-package-devel at r-project.org>
> > Subject: [R-pkg-devel] Use of `:::` in a package for code run in a
> > parallel cluster
> >
> > Dear list members,
> >
> > I submitted an update for my package and got automatically rejected by the
> > incoming checks (as expected from my own checks) for using `:::` calls to
> > access the package's namespace.
> > "There are ::: calls to the package's namespace in its code. A package
> > *almost* never needs to use ::: for its own objects:?" (emphasis mine)
> >
> > This was a conscious decision on my part as the package runs code on a
> > user-supplied parallel cluster and I consider cluster-exporting the
> > required functions a no-go as it would potentially overwrite objects in the
> > clusters R sessions. The package code does not own the cluster and hence
> > the R sessions. Therefore overwriting objects could potentially lead to
> > unintended behaviour which is opaque to the user and difficult to debug.
> >
> > Another solution to circumvent the R CMD check note is to export the
> > functions to the public namespace but mark them as internal. This was also
> > suggested in another thread on this mailing list (c.f. "Etiquette for
> > package submissions that do not automatically pass checks?"). I do not
> > agree with this work-around as the methods are indeed internal and should
> > never be used by users. Exporting truly internal functions for the sake of
> > satisfying R CMD check is a bad argument, in particular if there is a
> > clean, well-documented, solution by using `:::`.
> >
> > I argue `:::` is the only clean solution to this problem and no dirty
> > work-arounds are necessary. This is a prime example of where `:::` is
> > actually useful and needed inside a package. If the R community disagrees,
> > I think R CMD check should at least emit a WARNING instead of a NOTE and
> > elaborate on the problem and accepted work-arounds in "Writing R
> > extensions". Or keep emitting a NOTE but listing those nebulous reasons
> > where `:::` would be tolerated inside a package. Having more transparent
> > criteria for submitting to CRAN would be really helpful to the entire R
> > community and probably also reduce the traffic on this mailing list.
> >
> > Best,
> > David
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From c@c@voeten @end|ng |rom hum@|e|denun|v@n|  Tue Sep 15 10:27:57 2020
From: c@c@voeten @end|ng |rom hum@|e|denun|v@n| (Cesko Voeten)
Date: Tue, 15 Sep 2020 10:27:57 +0200
Subject: [R-pkg-devel] 
 Use of `:::` in a package for code run in a parallel cluster
In-Reply-To: <CAFDcVCQ+y6WX=3cWhR7zZF51fiZGUrLDG6qcj2E2T-HqMRmiBA@mail.gmail.com>
References: <CAGmyFCFVBXmyUR+YbOKB0Sc=KK67kYjQH18mewXDCTgGiNgQOg@mail.gmail.com>
 <AM0PR0102MB34431FD43538A9E1D4069528AE230@AM0PR0102MB3443.eurprd01.prod.exchangelabs.com>
 <CAGmyFCGDJGAoVj86P-tE2oYAk28BqJczhYJi-qQk+mxQPcTrhQ@mail.gmail.com>
 <CAFDcVCQ+y6WX=3cWhR7zZF51fiZGUrLDG6qcj2E2T-HqMRmiBA@mail.gmail.com>
Message-ID: <d07a0e14-4ab9-9827-cc6e-f973c318026f@hum.leidenuniv.nl>

Henrik,

I completely agree with everything you wrote, but note that the issue at hand is using `:::' in *the same* package, for example when a package needs to access its own internal functions from an outside context, where running on a cluster node set up by the package is one thing I can think of. So there is no API contract to violate, except the one the package makes with itself. Given this, I'm inclined to agree with David: the language provides an obvious way to do this, why write a semantic kludge that is obviously intended only to circumvent the CRAN warning to achieve something that is necessary for the package? Of course, just my ?.02 in a thought-provoking discussion!

Cesko

Op 14-09-2020 om 21:42 schreef Henrik Bengtsson:
> Without having read all of the comments already made here, but my
> understanding why ::: is not allowed is because you are reaching into
> the internal API that the package owner does not guarantee will exist
> in the next release.  If you rely on the internal code of another CRAN
> package in your CRAN package, your CRAN package might break without
> your control.  This might release an avalanche of reverse package
> dependencies failing on CRAN.
> 
> The only thing you can safely rely on is the API that is explicitly
> *exported* by an R package.  In order for the maintainer to break that
> API for reverse dependent packages, they need to go through a process
> of deprecating and defuncting what they want to break/remove - a
> process that involves multiple releases and often reaching out to
> package maintainers and asking them to update accordingly.   CRAN runs
> reverse package dependency checks making sure that a package does not
> break its exported API.  If it does, it will not roll out on CRAN.
> So, in that sense CRAN helps uphold the contract of the exported APIs.
> In contrast, a maintainer can do whatever they want whenever they want
> with their internal code/API.
> 
> With more and more packages being infrastructure packages, I think
> there is room for "protected" API, which is not exported to avoid
> cluttering up the search path for end-users while it yet provides a
> contract toward package developers relying on it.  There are various
> ways to emulate such protected APIs but we don't have a standard and
> there's a risk that 'R CMD check' fails to detect when the contract is
> broken (resulting in delayed run-time errors on the user end).
> 
> My $.02
> 
> Henrik
> 
> On Mon, Sep 14, 2020 at 12:06 PM David Kepplinger
> <david.kepplinger at gmail.com> wrote:
>>
>> Yes, my view is certainly rigid and I agree that in the cases where the
>> function is actually used directly by the user, exporting it is the correct
>> step.
>>
>> However, it seems some packages actually need to access internal functions
>> from an outside context, but the code that accesses the function is
>> logically contained completely inside the package. In these cases, package
>> maintainers seem to be looking for alternatives to `:::` for the sake of
>> avoiding the R CMD check note. I argue that the work arounds, however,
>> either (a) achieve the exact same result as `:::`, but in a less
>> transparent and likely more error prone way, or (b) unnecessarily making an
>> internal function available to the user.
>>
>> I also agree with the CRAN team that package maintainers need to be made
>> aware of the issue when using `:::` inside their package as it is most
>> likely unnecessary. But the phrasing of the note ("almost never needs to
>> use :::") combined with a lack of transparent guidelines on when it is
>> acceptable leads to maintainers looking for alternatives mimicking the
>> behavior of `:::`. I haven't found any official instructions in Writing R
>> extensions or on the mailing list under what circumstances `:::` is deemed
>> to be acceptable by the CRAN team (I have to admit searching for `:::` in
>> the archives yields so many results I haven't looked at all of them). It's
>> probably impossible to conceive every possible use case for `:::`, but a
>> good start may be to have something in the documentation explicitly
>> mentioning commonly observed patterns where `:::` is not acceptable, and
>> the common exceptions to the rule (if there are any).
>>
>> Maybe this issue is so miniscule and almost never comes up that it's not
>> worth mentioning in the documentation.
>>
>> Best,
>> David
>>
>>
>>
>> On Mon, Sep 14, 2020 at 3:19 AM Georgi Boshnakov <
>> georgi.boshnakov at manchester.ac.uk> wrote:
>>
>>> You may have a case to argue to CRAN that you can get the "almost"
>>> exemption (can't say without details) but your views look overly rigid.
>>>
>>> Exporting an object and marking it as internal is not a "work around",
>>> even less a "dirty trick".
>>> Export makes the object available outside the package's namespace and
>>> makes it clear that this is intentional.
>>> If you can't drop the 'package:::' prefix in your use case, this means
>>> that this is what you actually do (i.e. use those objects outside the
>>> namespace of the package). I would be grateful to CRAN for asking me to
>>> export and hence document this.
>>>
>>>
>>> Georgi Boshnakov
>>>
>>> PS Note that there is no such thing as "public namespace".
>>>
>>>
>>> -----Original Message-----
>>> From: R-package-devel <r-package-devel-bounces at r-project.org> On Behalf
>>> Of David Kepplinger
>>> Sent: 13 September 2020 20:52
>>> To: R Package Devel <r-package-devel at r-project.org>
>>> Subject: [R-pkg-devel] Use of `:::` in a package for code run in a
>>> parallel cluster
>>>
>>> Dear list members,
>>>
>>> I submitted an update for my package and got automatically rejected by the
>>> incoming checks (as expected from my own checks) for using `:::` calls to
>>> access the package's namespace.
>>> "There are ::: calls to the package's namespace in its code. A package
>>> *almost* never needs to use ::: for its own objects:?" (emphasis mine)
>>>
>>> This was a conscious decision on my part as the package runs code on a
>>> user-supplied parallel cluster and I consider cluster-exporting the
>>> required functions a no-go as it would potentially overwrite objects in the
>>> clusters R sessions. The package code does not own the cluster and hence
>>> the R sessions. Therefore overwriting objects could potentially lead to
>>> unintended behaviour which is opaque to the user and difficult to debug.
>>>
>>> Another solution to circumvent the R CMD check note is to export the
>>> functions to the public namespace but mark them as internal. This was also
>>> suggested in another thread on this mailing list (c.f. "Etiquette for
>>> package submissions that do not automatically pass checks?"). I do not
>>> agree with this work-around as the methods are indeed internal and should
>>> never be used by users. Exporting truly internal functions for the sake of
>>> satisfying R CMD check is a bad argument, in particular if there is a
>>> clean, well-documented, solution by using `:::`.
>>>
>>> I argue `:::` is the only clean solution to this problem and no dirty
>>> work-arounds are necessary. This is a prime example of where `:::` is
>>> actually useful and needed inside a package. If the R community disagrees,
>>> I think R CMD check should at least emit a WARNING instead of a NOTE and
>>> elaborate on the problem and accepted work-arounds in "Writing R
>>> extensions". Or keep emitting a NOTE but listing those nebulous reasons
>>> where `:::` would be tolerated inside a package. Having more transparent
>>> criteria for submitting to CRAN would be really helpful to the entire R
>>> community and probably also reduce the traffic on this mailing list.
>>>
>>> Best,
>>> David
>>>
>>>          [[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>>
>>          [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From edd @end|ng |rom deb|@n@org  Tue Sep 15 13:55:48 2020
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Tue, 15 Sep 2020 06:55:48 -0500
Subject: [R-pkg-devel] 
 Use of `:::` in a package for code run in a parallel cluster
In-Reply-To: <d07a0e14-4ab9-9827-cc6e-f973c318026f@hum.leidenuniv.nl>
References: <CAGmyFCFVBXmyUR+YbOKB0Sc=KK67kYjQH18mewXDCTgGiNgQOg@mail.gmail.com>
 <AM0PR0102MB34431FD43538A9E1D4069528AE230@AM0PR0102MB3443.eurprd01.prod.exchangelabs.com>
 <CAGmyFCGDJGAoVj86P-tE2oYAk28BqJczhYJi-qQk+mxQPcTrhQ@mail.gmail.com>
 <CAFDcVCQ+y6WX=3cWhR7zZF51fiZGUrLDG6qcj2E2T-HqMRmiBA@mail.gmail.com>
 <d07a0e14-4ab9-9827-cc6e-f973c318026f@hum.leidenuniv.nl>
Message-ID: <24416.43972.350522.798945@rob.eddelbuettel.com>


On 15 September 2020 at 10:27, Cesko Voeten wrote:
| the language provides an obvious way to do this, why write a semantic kludge 

As already said, Occam's Razor give the answer: keep it simple(r) and don't
write the kludge. Stick it all into a package, load the package on every node
and use the code. A package does not need ':::' to reach its own code.

Dirk

-- 
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From n@r@@ @end|ng |rom @t@n|ord@edu  Wed Sep 16 19:27:58 2020
From: n@r@@ @end|ng |rom @t@n|ord@edu (Balasubramanian Narasimhan)
Date: Wed, 16 Sep 2020 10:27:58 -0700
Subject: [R-pkg-devel] Help in getting past CRAN submission rejections
In-Reply-To: <dc5e7ef6-31f2-d808-482d-ffc349a86a62@stanford.edu>
References: <f87af79b-5fcb-0326-599b-a04a56cde8e1@stanford.edu>
 <CALK03d37pPgX3fGgjWxhwqhdMftaftS9T_YaRG8VJuKQCuCERw@mail.gmail.com>
 <dc5e7ef6-31f2-d808-482d-ffc349a86a62@stanford.edu>
Message-ID: <06766b2f-d911-6fcb-3364-fe94c9295a67@stanford.edu>

Just to close the loop on this: the drat suggestion for both packages 
and also moving things to enhances worked. I could do this also for 
Gurobi because it is LGPL'd. Thanks Toby and Dirk (for drat).

-Naras

On 9/9/20 5:16 PM, Balasubramanian Narasimhan wrote:
> Thanks Toby, so there is hope.? The drat suggestion for rcbc is worth a
> try, gurobi is noted as you recommend.
>
> -Naras
>
> On 9/9/20 4:38 PM, Toby Hocking wrote:
>> Hi Naras
>> I had a similar issue recently with
>> https://cloud.r-project.org/web/packages/nc/ --- it Suggests: re2r
>> which is a package that is no longer on CRAN, but available on github.
>> To solve the issue I just copied the re2r into a drat repo, which is a
>> CRAN-like repository hosted on github. More info on drat here
>> http://eddelbuettel.github.io/drat/DratForPackageAuthors.html So if
>> those solver packages you have in Suggests are open-source, you can
>> just copy them to your drat repo, and list that drat repo in
>> Additional_repositories. If they aren't open-source then you should
>> provide a description of how to obtain those packages in Description.
>> Something like "gurobi package is not available in any public
>> open-source repositories but can be downloaded for academic use free
>> of charge from $GUROBI_URL"
>> BTW thanks for your efforts in getting CVXR on CRAN, that is really
>> important work!
>> Toby
>>
>>
>> On Wed, Sep 9, 2020 at 10:40 AM Balasubramanian Narasimhan
>> <naras at stanford.edu <mailto:naras at stanford.edu>> wrote:
>>
>>      We've been struggling to get past CRAN's rejections for a new
>>      upload of
>>      CVXR.? The new version makes essentially one change to the existing
>>      version on CRAN: the addition of a DOI to an article to appear in
>>      JSS.
>>      We realize that CRAN may tighten policies in the meantime forcing
>>      some
>>      changes to be made, which we are happy to do. But we are not sure
>>      what.
>>
>>      The automated check
>>      <https://win-builder.r-project.org/incoming_pretest/CVXR_1.0-6_20200908_223033/>
>>
>>      came back with 2 notes on Debian and Windows, both addressed in
>>      replies
>>      and submission comments. (Solaris failures are expected, also noted.)
>>
>>      The communications with CRAN indicates that the problem might be that
>>      our package (the current version too) _suggests_ solvers not
>>      available
>>      on CRAN. These are either on github or on vendor websites (free to
>>      academics after login).? One reply from CRAN suggested that we either
>>      use the "Additional_repositories" field or provide some text in
>>      Description. The former is not applicable---these are not CRAN-like
>>      repositories---so we added text in the description with URL links.
>>
>>      What could we be missing?
>>
>>      Thanks.
>>
>>      -Naras
>>
>>      ______________________________________________
>>      R-package-devel at r-project.org
>>      <mailto:R-package-devel at r-project.org> mailing list
>>      https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From @d@mh@p@rk@ @end|ng |rom gm@||@com  Thu Sep 17 10:00:34 2020
From: @d@mh@p@rk@ @end|ng |rom gm@||@com (Adam H Sparks)
Date: Thu, 17 Sep 2020 18:00:34 +1000
Subject: [R-pkg-devel] Still Getting an Error in Winbuilder
Message-ID: <1ADBD3CC-7821-4F9A-A9A1-5940326E22EC@gmail.com>

Hi all-
I?ve followed Nick?s thread about the error on Winbuilder with Naniar with interest, since at the same time I was having issues with GSODR, https://github.com/ropensci/GSODR <https://github.com/ropensci/GSODR> as well. I was hoping that the issue was resolved but I?m still getting the same error message that Nick reported and I experienced last month as well when submitting to Winbuilder. I get the same response both with the devel and current release tests. Today, the response has been much faster, previously it would take >24 hrs for me to get the following response. 

* using log directory 'd:/RCompile/CRANguest/R-devel/GSODR.Rcheck'
* using R Under development (unstable) (2020-09-09 r79174)
* using platform: x86_64-w64-mingw32 (64-bit)
* using session charset: ISO8859-1
* checking for file 'GSODR/DESCRIPTION' ... OK
* checking extension type ... Package
* this is package 'GSODR' version '2.1.2'
* package encoding: UTF-8
* checking CRAN incoming feasibility ... ERROR
Check process probably crashed or hung up for 20 minutes ... killed
Most likely this happened in the example checks (?),
if not, ignore the following last lines of example output:

======== End of example output (where/before crash/hang up occured ?) ========
Here?s the submission URL response https://win-builder.r-project.org/4Y3Ffqcq25n1 <https://win-builder.r-project.org/4Y3Ffqcq25n1> for my latest attempt. 

Is there some way to approach this that handles the issue satisfactorily? I?ve a simple bug fix update ready to go but want to be sure and check it with Winbuilder first. It it passes build tests on R HUB for Windows and Ubuntu and it passes build with no warnings, errors, or notes for me on macOS locally, as well as on GitHub actions (Windows, macOS, and Ubuntu).

With thanks,
Adam


--
Dr Adam H. Sparks 
Associate Professor of Field Crops Pathology | Centre for Crop Health 
Institute for Agriculture and the Environment | Research and Innovation Division 
University of Southern Queensland | Toowoomba, Queensland | 4350 | Australia 

https://www.adamhsparks.com/




	[[alternative HTML version deleted]]


From d@v|dhughjone@ @end|ng |rom gm@||@com  Thu Sep 17 21:55:01 2020
From: d@v|dhughjone@ @end|ng |rom gm@||@com (David Hugh-Jones)
Date: Thu, 17 Sep 2020 20:55:01 +0100
Subject: [R-pkg-devel] How long to wait before resending response to CRAN
Message-ID: <CAARY7kikbSeEZSMRt707Ct-T45ms+x429cn==87Lf6HMpccXYg@mail.gmail.com>

Hi all,

I submitted a package update to CRAN (package "huxtable") and got a couple
of NOTES and the usual message about replying-all if I thought the NOTES
were false positives. Rightly or wrongly, I did think this, so I replied
all with my explanation. This was a week ago. I have not yet heard back.
How long ought I to wait before replying again with a nudge or follow-up?

Cheers,
David

	[[alternative HTML version deleted]]


From M@x@Turgeon @end|ng |rom um@n|tob@@c@  Thu Sep 17 22:39:37 2020
From: M@x@Turgeon @end|ng |rom um@n|tob@@c@ (Max Turgeon)
Date: Thu, 17 Sep 2020 20:39:37 +0000
Subject: [R-pkg-devel] 
 How long to wait before resending response to CRAN
In-Reply-To: <CAARY7kikbSeEZSMRt707Ct-T45ms+x429cn==87Lf6HMpccXYg@mail.gmail.com>
References: <CAARY7kikbSeEZSMRt707Ct-T45ms+x429cn==87Lf6HMpccXYg@mail.gmail.com>
Message-ID: <YTOPR0101MB106854B8A79055FECFD0F8229A3E0@YTOPR0101MB1068.CANPRD01.PROD.OUTLOOK.COM>

Hi David,

I think you'll need to resubmit, because your package is now in the archive folder. You can check this by running 'foghorn::cran_incoming(pkg = "huxtable")'.

But you probably want to address these NOTES during your resubmission, otherwise you're likely to face the same outcome.

Cheers,


Max Turgeon
Assistant Professor
Department of Statistics
Department of Computer Science
University of Manitoba
maxturgeon.ca<http://maxturgeon.ca>



________________________________
From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of David Hugh-Jones <davidhughjones at gmail.com>
Sent: Thursday, September 17, 2020 2:55 PM
To: R package devel <r-package-devel at r-project.org>
Subject: [R-pkg-devel] How long to wait before resending response to CRAN

********************************************************
Caution: This message was sent from outside the University of Manitoba.
********************************************************

Hi all,

I submitted a package update to CRAN (package "huxtable") and got a couple
of NOTES and the usual message about replying-all if I thought the NOTES
were false positives. Rightly or wrongly, I did think this, so I replied
all with my explanation. This was a week ago. I have not yet heard back.
How long ought I to wait before replying again with a nudge or follow-up?

Cheers,
David

        [[alternative HTML version deleted]]

______________________________________________
R-package-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel


	[[alternative HTML version deleted]]


From d@v|dhughjone@ @end|ng |rom gm@||@com  Fri Sep 18 10:37:48 2020
From: d@v|dhughjone@ @end|ng |rom gm@||@com (David Hugh-Jones)
Date: Fri, 18 Sep 2020 09:37:48 +0100
Subject: [R-pkg-devel] 
 How long to wait before resending response to CRAN
In-Reply-To: <YTOPR0101MB106854B8A79055FECFD0F8229A3E0@YTOPR0101MB1068.CANPRD01.PROD.OUTLOOK.COM>
References: <CAARY7kikbSeEZSMRt707Ct-T45ms+x429cn==87Lf6HMpccXYg@mail.gmail.com>
 <YTOPR0101MB106854B8A79055FECFD0F8229A3E0@YTOPR0101MB1068.CANPRD01.PROD.OUTLOOK.COM>
Message-ID: <CAARY7kijcoEDVqaajNhEKFZERAXjUFD-2ENjNmzym-VgJtVKag@mail.gmail.com>

So if I reply all, do they not reply back?

David


On Thu, 17 Sep 2020 at 21:39, Max Turgeon <Max.Turgeon at umanitoba.ca> wrote:

> Hi David,
>
> I think you'll need to resubmit, because your package is now in the
> archive folder. You can check this by running 'foghorn::cran_incoming(pkg
> = "huxtable")'.
>
> But you probably want to address these NOTES during your resubmission,
> otherwise you're likely to face the same outcome.
>
> Cheers,
>
> Max Turgeon
> Assistant Professor
> Department of Statistics
> Department of Computer Science
> University of Manitoba
> maxturgeon.ca
>
>
>
> ------------------------------
> *From:* R-package-devel <r-package-devel-bounces at r-project.org> on behalf
> of David Hugh-Jones <davidhughjones at gmail.com>
> *Sent:* Thursday, September 17, 2020 2:55 PM
> *To:* R package devel <r-package-devel at r-project.org>
> *Subject:* [R-pkg-devel] How long to wait before resending response to
> CRAN
>
> ********************************************************
> Caution: This message was sent from outside the University of Manitoba.
> ********************************************************
>
> Hi all,
>
> I submitted a package update to CRAN (package "huxtable") and got a couple
> of NOTES and the usual message about replying-all if I thought the NOTES
> were false positives. Rightly or wrongly, I did think this, so I replied
> all with my explanation. This was a week ago. I have not yet heard back.
> How long ought I to wait before replying again with a nudge or follow-up?
>
> Cheers,
> David
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>

	[[alternative HTML version deleted]]


From nur|@@perez @end|ng |rom b@c@e@  Fri Sep 18 18:38:53 2020
From: nur|@@perez @end|ng |rom b@c@e@ (Nuria Perez-Zanon)
Date: Fri, 18 Sep 2020 18:38:53 +0200
Subject: [R-pkg-devel] Dependency needs to be loaded manually even its
 specified in the package
Message-ID: <7ba6dbb0-c87a-9fbc-cb32-a116de8811c0@bsc.es>

Dear all,

I am maintaining a package call CSTools which is aimed for 
post-processing climate simulations.

The package is already published on CRAN with all dependencies correctly 
state in DESCRIPTION, NAMESPACE and roxygen2 headers.

However, when using one specific function which depends on 'qmap' 
package, I should loaded both packages by executing:

 ??? library(CSTools)
 ??? library(qmap)

In case I don't load the second library, I get the error

Error in doQmap(x = sample_cor, fobj = adjust, ...) :
 ? doQmap not defined for class(fobj) ==fitQmapQUANT

Has anyone an idea for needing to manually load a dependency? I provide 
a code below if someone wants to test it.

Thanks in advace,

N?ria

P.S.: Here is the code: library(CSTools) exp <- lonlat_data$exp
obs <- lonlat_data$obs
res <- CST_QuantileMapping(exp, obs)



http://bsc.es/disclaimer
	[[alternative HTML version deleted]]


From edd @end|ng |rom deb|@n@org  Fri Sep 18 18:52:58 2020
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Fri, 18 Sep 2020 11:52:58 -0500
Subject: [R-pkg-devel] Dependency needs to be loaded manually even its
 specified in the package
In-Reply-To: <7ba6dbb0-c87a-9fbc-cb32-a116de8811c0@bsc.es>
References: <7ba6dbb0-c87a-9fbc-cb32-a116de8811c0@bsc.es>
Message-ID: <24420.58858.67891.614511@rob.eddelbuettel.com>


On 18 September 2020 at 18:38, Nuria Perez-Zanon wrote:
| I am maintaining a package call CSTools which is aimed for 
| post-processing climate simulations.
[...]
|  ??? library(CSTools)
|  ??? library(qmap)

You never use library() in a package. Rather, you declare dependency
relationsships via DESCRIPTION (and likely NAMESPACE). See "Writing R
Extensions" for all the details.

Dirk

-- 
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From jo@h@m@u|r|ch @end|ng |rom gm@||@com  Fri Sep 18 18:57:46 2020
From: jo@h@m@u|r|ch @end|ng |rom gm@||@com (Joshua Ulrich)
Date: Fri, 18 Sep 2020 11:57:46 -0500
Subject: [R-pkg-devel] Dependency needs to be loaded manually even its
 specified in the package
In-Reply-To: <24420.58858.67891.614511@rob.eddelbuettel.com>
References: <7ba6dbb0-c87a-9fbc-cb32-a116de8811c0@bsc.es>
 <24420.58858.67891.614511@rob.eddelbuettel.com>
Message-ID: <CAPPM_gRcBYWQwsiLcpR2En3o5TkrNkN13L5y9hDujSTH0F4A=w@mail.gmail.com>

On Fri, Sep 18, 2020 at 11:56 AM Dirk Eddelbuettel <edd at debian.org> wrote:
>
>
> On 18 September 2020 at 18:38, Nuria Perez-Zanon wrote:
> | I am maintaining a package call CSTools which is aimed for
> | post-processing climate simulations.
> [...]
> |      library(CSTools)
> |      library(qmap)
>
> You never use library() in a package. Rather, you declare dependency
> relationsships via DESCRIPTION (and likely NAMESPACE). See "Writing R
> Extensions" for all the details.
>

And here's the relevant section:
https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Registering-S3-methods

Best,
Josh

>
> Dirk
>
> --
> https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel



-- 
Joshua Ulrich  |  about.me/joshuaulrich
FOSS Trading  |  www.fosstrading.com


From nur|@@perez @end|ng |rom b@c@e@  Fri Sep 18 18:59:18 2020
From: nur|@@perez @end|ng |rom b@c@e@ (Nuria Perez-Zanon)
Date: Fri, 18 Sep 2020 18:59:18 +0200
Subject: [R-pkg-devel] Dependency needs to be loaded manually even its
 specified in the package
In-Reply-To: <24420.58858.67891.614511@rob.eddelbuettel.com>
References: <7ba6dbb0-c87a-9fbc-cb32-a116de8811c0@bsc.es>
 <24420.58858.67891.614511@rob.eddelbuettel.com>
Message-ID: <7f9d45f9-6b80-b9e5-4fa2-8c2e46019b5d@bsc.es>

Hi Dirk,

Thanks for your comment. Maybe I haven't been enough clear. The package 
declares all the necessary dependencies correctly following the 
guidelines you provide. I am only able to detect the problem by running 
an example:

This works:

      library(CSTools)
  ??? library(qmap)
      exp <- lonlat_data$exp
     ?obs <- lonlat_data$obs
     ?res <- CST_QuantileMapping(exp, obs)

This fails:
      library(CSTools)
      exp <- lonlat_data$exp
     ?obs <- lonlat_data$obs
     ?res <- CST_QuantileMapping(exp, obs)

The DESCRIPTION sets:
Imports:
qmap,

The function sets:
|#'@import qmap|  

The NAMESPACE sets:
|import(qmap) I guess I am missing something to check but I don't know 
what. Thanks for your help. N?ria |

El 18/9/20 a las 18:52, Dirk Eddelbuettel escribi?:
> On 18 September 2020 at 18:38, Nuria Perez-Zanon wrote:
> | I am maintaining a package call CSTools which is aimed for
> | post-processing climate simulations.
> [...]
> |  ??? library(CSTools)
> |  ??? library(qmap)
>
> You never use library() in a package. Rather, you declare dependency
> relationsships via DESCRIPTION (and likely NAMESPACE). See "Writing R
> Extensions" for all the details.
>
> Dirk
>


http://bsc.es/disclaimer
	[[alternative HTML version deleted]]


From nur|@@perez @end|ng |rom b@c@e@  Fri Sep 18 19:03:30 2020
From: nur|@@perez @end|ng |rom b@c@e@ (Nuria Perez-Zanon)
Date: Fri, 18 Sep 2020 19:03:30 +0200
Subject: [R-pkg-devel] Dependency needs to be loaded manually even its
 specified in the package
In-Reply-To: <CAPPM_gRcBYWQwsiLcpR2En3o5TkrNkN13L5y9hDujSTH0F4A=w@mail.gmail.com>
References: <7ba6dbb0-c87a-9fbc-cb32-a116de8811c0@bsc.es>
 <24420.58858.67891.614511@rob.eddelbuettel.com>
 <CAPPM_gRcBYWQwsiLcpR2En3o5TkrNkN13L5y9hDujSTH0F4A=w@mail.gmail.com>
Message-ID: <8aa1e9f5-f890-f8f8-c896-0866dce0c89d@bsc.es>

Thanks, Jost. I don't know where to set this S3method(print, foo) but I 
will look at this in? depth.

Best,

N?ria

El 18/9/20 a las 18:57, Joshua Ulrich escribi?:
> On Fri, Sep 18, 2020 at 11:56 AM Dirk Eddelbuettel <edd at debian.org> wrote:
>>
>> On 18 September 2020 at 18:38, Nuria Perez-Zanon wrote:
>> | I am maintaining a package call CSTools which is aimed for
>> | post-processing climate simulations.
>> [...]
>> |      library(CSTools)
>> |      library(qmap)
>>
>> You never use library() in a package. Rather, you declare dependency
>> relationsships via DESCRIPTION (and likely NAMESPACE). See "Writing R
>> Extensions" for all the details.
>>
> And here's the relevant section:
> https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Registering-S3-methods
>
> Best,
> Josh
>
>> Dirk
>>
>> --
>> https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>


http://bsc.es/disclaimer
	[[alternative HTML version deleted]]


From d@v|d@kepp||nger @end|ng |rom gm@||@com  Fri Sep 18 19:07:08 2020
From: d@v|d@kepp||nger @end|ng |rom gm@||@com (David Kepplinger)
Date: Fri, 18 Sep 2020 10:07:08 -0700
Subject: [R-pkg-devel] Dependency needs to be loaded manually even its
 specified in the package
In-Reply-To: <7ba6dbb0-c87a-9fbc-cb32-a116de8811c0@bsc.es>
References: <7ba6dbb0-c87a-9fbc-cb32-a116de8811c0@bsc.es>
Message-ID: <CAGmyFCHei7FRKyrf7tQO6y957G4xyAHPk5O6Uu_6KpLw_KEyNA@mail.gmail.com>

Hi N?ria,

I've never used qmap, but looking at the source code it seems it's not
using S3 or S4 methods in `doQmap()` but is looking for the proper method
using `exists()`. Given that your package doesn't import the required
function, it's not found by `exists()` and the `doQmap()` function
complains.

I think the only way around it is to declare the qmap package in the
Depends field, rather than the Imports field.

Best,
David

On Fri, Sep 18, 2020 at 9:39 AM Nuria Perez-Zanon <nuria.perez at bsc.es>
wrote:

> Dear all,
>
> I am maintaining a package call CSTools which is aimed for
> post-processing climate simulations.
>
> The package is already published on CRAN with all dependencies correctly
> state in DESCRIPTION, NAMESPACE and roxygen2 headers.
>
> However, when using one specific function which depends on 'qmap'
> package, I should loaded both packages by executing:
>
>      library(CSTools)
>      library(qmap)
>
> In case I don't load the second library, I get the error
>
> Error in doQmap(x = sample_cor, fobj = adjust, ...) :
>    doQmap not defined for class(fobj) ==fitQmapQUANT
>
> Has anyone an idea for needing to manually load a dependency? I provide
> a code below if someone wants to test it.
>
> Thanks in advace,
>
> N?ria
>
> P.S.: Here is the code: library(CSTools) exp <- lonlat_data$exp
> obs <- lonlat_data$obs
> res <- CST_QuantileMapping(exp, obs)
>
>
>
> http://bsc.es/disclaimer
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From nur|@@perez @end|ng |rom b@c@e@  Fri Sep 18 19:10:10 2020
From: nur|@@perez @end|ng |rom b@c@e@ (Nuria Perez-Zanon)
Date: Fri, 18 Sep 2020 19:10:10 +0200
Subject: [R-pkg-devel] Dependency needs to be loaded manually even its
 specified in the package
In-Reply-To: <CAGmyFCHei7FRKyrf7tQO6y957G4xyAHPk5O6Uu_6KpLw_KEyNA@mail.gmail.com>
References: <7ba6dbb0-c87a-9fbc-cb32-a116de8811c0@bsc.es>
 <CAGmyFCHei7FRKyrf7tQO6y957G4xyAHPk5O6Uu_6KpLw_KEyNA@mail.gmail.com>
Message-ID: <836f5f87-cf70-561e-59b0-11b61286815f@bsc.es>

Oooooh! Thanks, David. I was almost crazy. :D

I'll try it!

Best whishes,

N?ria

El 18/9/20 a las 19:07, David Kepplinger escribi?:
> Hi N?ria,
>
> I've never used qmap, but looking at the source code it seems it's not 
> using S3 or S4 methods in `doQmap()` but is looking for the proper 
> method using `exists()`. Given that your package doesn't import the 
> required function, it's not found by `exists()` and the `doQmap()` 
> function complains.
>
> I think the only way around it is to declare the qmap package in the 
> Depends field, rather than the Imports field.
>
> Best,
> David
>
> On Fri, Sep 18, 2020 at 9:39 AM Nuria Perez-Zanon <nuria.perez at bsc.es 
> <mailto:nuria.perez at bsc.es>> wrote:
>
>     Dear all,
>
>     I am maintaining a package call CSTools which is aimed for
>     post-processing climate simulations.
>
>     The package is already published on CRAN with all dependencies
>     correctly
>     state in DESCRIPTION, NAMESPACE and roxygen2 headers.
>
>     However, when using one specific function which depends on 'qmap'
>     package, I should loaded both packages by executing:
>
>     ???? library(CSTools)
>     ???? library(qmap)
>
>     In case I don't load the second library, I get the error
>
>     Error in doQmap(x = sample_cor, fobj = adjust, ...) :
>     ?? doQmap not defined for class(fobj) ==fitQmapQUANT
>
>     Has anyone an idea for needing to manually load a dependency? I
>     provide
>     a code below if someone wants to test it.
>
>     Thanks in advace,
>
>     N?ria
>
>     P.S.: Here is the code: library(CSTools) exp <- lonlat_data$exp
>     obs <- lonlat_data$obs
>     res <- CST_QuantileMapping(exp, obs)
>
>
>
>     http://bsc.es/disclaimer
>     ? ? ? ? [[alternative HTML version deleted]]
>
>     ______________________________________________
>     R-package-devel at r-project.org
>     <mailto:R-package-devel at r-project.org> mailing list
>     https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


http://bsc.es/disclaimer
	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Fri Sep 18 19:13:37 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Fri, 18 Sep 2020 13:13:37 -0400
Subject: [R-pkg-devel] Dependency needs to be loaded manually even its
 specified in the package
In-Reply-To: <7ba6dbb0-c87a-9fbc-cb32-a116de8811c0@bsc.es>
References: <7ba6dbb0-c87a-9fbc-cb32-a116de8811c0@bsc.es>
Message-ID: <84e1c48a-4a6e-3026-0120-26bfd4c068cf@gmail.com>


On 18/09/2020 12:38 p.m., Nuria Perez-Zanon wrote:
> Dear all,
> 
> I am maintaining a package call CSTools which is aimed for
> post-processing climate simulations.
> 
> The package is already published on CRAN with all dependencies correctly
> state in DESCRIPTION, NAMESPACE and roxygen2 headers.
> 
> However, when using one specific function which depends on 'qmap'
> package, I should loaded both packages by executing:
> 
>   ??? library(CSTools)
>   ??? library(qmap)
> 
> In case I don't load the second library, I get the error
> 
> Error in doQmap(x = sample_cor, fobj = adjust, ...) :
>   ? doQmap not defined for class(fobj) ==fitQmapQUANT
> 
> Has anyone an idea for needing to manually load a dependency? I provide
> a code below if someone wants to test it.
> 
> Thanks in advace,
> 
> N?ria
> 
> P.S.: Here is the code: library(CSTools) exp <- lonlat_data$exp
> obs <- lonlat_data$obs
> res <- CST_QuantileMapping(exp, obs)
> 
> 

That's a design flaw in the doQmap function.  It looks like this:

function (x, fobj, ...)
{
     cc <- class(fobj)
     ffun <- substring(cc, 4, nchar(cc))
     ffun <- paste("do", ffun, sep = "")
     test <- sapply(ffun, exists, mode = "function")
     if (all(test)) {
         ffun <- match.fun(ffun)
     }
     else {
         stop("doQmap not defined for class(fobj) ==", class(fobj))
     }
     ffun(x, fobj, ...)
}

There are at least a couple of errors there:

- It appears to assume class(fobj) is a single element character string. 
  This wouldn't have caused your problem, but it will probably cause 
problems sometime..

- It tries to do something like S3 methods dispatch without using S3, by 
looking up "doQmapQUANT" in that line producing "test", but not saying 
where to look for it.  You could probably fix this by adding the envir 
argument to exists() in that call, e.g.

   test <- sapply(ffun, exists, mode = "function", envir = 
parent.env(environment()))

but it would be better to not try to invent a new object system.

Duncan Murdoch


From murdoch@dunc@n @end|ng |rom gm@||@com  Fri Sep 18 19:14:23 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Fri, 18 Sep 2020 13:14:23 -0400
Subject: [R-pkg-devel] Dependency needs to be loaded manually even its
 specified in the package
In-Reply-To: <24420.58858.67891.614511@rob.eddelbuettel.com>
References: <7ba6dbb0-c87a-9fbc-cb32-a116de8811c0@bsc.es>
 <24420.58858.67891.614511@rob.eddelbuettel.com>
Message-ID: <50720ce0-5461-55d5-d3f2-3bc4fbc3c943@gmail.com>

On 18/09/2020 12:52 p.m., Dirk Eddelbuettel wrote:
> 
> On 18 September 2020 at 18:38, Nuria Perez-Zanon wrote:
> | I am maintaining a package call CSTools which is aimed for
> | post-processing climate simulations.
> [...]
> |  ??? library(CSTools)
> |  ??? library(qmap)
> 
> You never use library() in a package. Rather, you declare dependency
> relationsships via DESCRIPTION (and likely NAMESPACE). See "Writing R
> Extensions" for all the details.

I think you misread the post:  this was an example of code a user would 
run, not code from the package.

Duncan Murdoch


From nur|@@perez @end|ng |rom b@c@e@  Fri Sep 18 19:17:23 2020
From: nur|@@perez @end|ng |rom b@c@e@ (Nuria Perez-Zanon)
Date: Fri, 18 Sep 2020 19:17:23 +0200
Subject: [R-pkg-devel] Dependency needs to be loaded manually even its
 specified in the package
In-Reply-To: <84e1c48a-4a6e-3026-0120-26bfd4c068cf@gmail.com>
References: <7ba6dbb0-c87a-9fbc-cb32-a116de8811c0@bsc.es>
 <84e1c48a-4a6e-3026-0120-26bfd4c068cf@gmail.com>
Message-ID: <2514902c-59f2-e9cc-51c5-309914e0282c@bsc.es>

Thanks Duncan for look at this. I will avoid to invent a new object system.

Best,

N?ria

El 18/9/20 a las 19:13, Duncan Murdoch escribi?:
>
> On 18/09/2020 12:38 p.m., Nuria Perez-Zanon wrote:
>> Dear all,
>>
>> I am maintaining a package call CSTools which is aimed for
>> post-processing climate simulations.
>>
>> The package is already published on CRAN with all dependencies correctly
>> state in DESCRIPTION, NAMESPACE and roxygen2 headers.
>>
>> However, when using one specific function which depends on 'qmap'
>> package, I should loaded both packages by executing:
>>
>> ? ??? library(CSTools)
>> ? ??? library(qmap)
>>
>> In case I don't load the second library, I get the error
>>
>> Error in doQmap(x = sample_cor, fobj = adjust, ...) :
>> ? ? doQmap not defined for class(fobj) ==fitQmapQUANT
>>
>> Has anyone an idea for needing to manually load a dependency? I provide
>> a code below if someone wants to test it.
>>
>> Thanks in advace,
>>
>> N?ria
>>
>> P.S.: Here is the code: library(CSTools) exp <- lonlat_data$exp
>> obs <- lonlat_data$obs
>> res <- CST_QuantileMapping(exp, obs)
>>
>>
>
> That's a design flaw in the doQmap function.? It looks like this:
>
> function (x, fobj, ...)
> {
> ??? cc <- class(fobj)
> ??? ffun <- substring(cc, 4, nchar(cc))
> ??? ffun <- paste("do", ffun, sep = "")
> ??? test <- sapply(ffun, exists, mode = "function")
> ??? if (all(test)) {
> ??????? ffun <- match.fun(ffun)
> ??? }
> ??? else {
> ??????? stop("doQmap not defined for class(fobj) ==", class(fobj))
> ??? }
> ??? ffun(x, fobj, ...)
> }
>
> There are at least a couple of errors there:
>
> - It appears to assume class(fobj) is a single element character 
> string. ?This wouldn't have caused your problem, but it will probably 
> cause problems sometime..
>
> - It tries to do something like S3 methods dispatch without using S3, 
> by looking up "doQmapQUANT" in that line producing "test", but not 
> saying where to look for it.? You could probably fix this by adding 
> the envir argument to exists() in that call, e.g.
>
> ? test <- sapply(ffun, exists, mode = "function", envir = 
> parent.env(environment()))
>
> but it would be better to not try to invent a new object system.
>
> Duncan Murdoch

http://bsc.es/disclaimer


From @bronder @end|ng |rom @tevebronder@com  Fri Sep 18 23:56:57 2020
From: @bronder @end|ng |rom @tevebronder@com (Steve Bronder)
Date: Fri, 18 Sep 2020 17:56:57 -0400
Subject: [R-pkg-devel] 
 Anyone Know How To Setup Wine for Windows Testing?
In-Reply-To: <98efac23-35d5-0672-0a7f-c27c3d99dc86@gmail.com>
References: <CAAVP=a=JBcHYaLWJLUUj9qisufmDkwTLB+4Z=VsB44Kmiq3wVQ@mail.gmail.com>
 <b1ef86ec-c289-caf3-8ba8-fb327579957c@gmail.com>
 <CAL9B2veMU6DzVcqyW=vXKcO6UaktebTE+og2KXipaXrkGmXBsA@mail.gmail.com>
 <CAAVP=anjuOq9ZM=c=Hd7UdTkDy6qg8-a=YqHm185JbrzZhzXKw@mail.gmail.com>
 <98efac23-35d5-0672-0a7f-c27c3d99dc86@gmail.com>
Message-ID: <CAAVP=anODyPQpQQWgEGmuTiPFFxBAah-yxiat2ULpDixjdtJsw@mail.gmail.com>

inline


On Wed, Sep 9, 2020 at 3:35 AM Tomas Kalibera <tomas.kalibera at gmail.com>
wrote:

> On 7/16/20 7:57 PM, Steve Bronder wrote:
> > On Wed, Jul 15, 2020 at 2:22 PM Neal Fultz <nfultz at gmail.com> wrote:
> >
> >> If you don't mind multi-gig docker containers, this can be helpful:
> >>
> >> https://github.com/scottyhardy/docker-wine
> >>
> >> It doesn't work with 64 bit versions of R as far as I could tell, but 32
> >> bit did install and start correctly in a few clicks when I tried last
> year.
> >>
> > Thanks! I'm hoping if I can get this all working locally I can put
> > everything into a docker container for other folks. At this point I have
> R
> > up and running and it can install binary packages, but there are some
> > terrible terrible Cygwin/Rtools errors I can't figure out. In particular
> > this warning / message seems worrisome
> >
> > Cygwin WARNING:
> >    Couldn't compute FAST_CWD pointer.  This typically occurs if you're
> using
> >    an older Cygwin version on a newer Windows.  Please update to the
> latest
> >    available Cygwin version from https://cygwin.com/.  If the problem
> > persists,
> >    please see https://cygwin.com/problems.html
> >
> > If anyone has interest I can post a script for setting up the wine
> instance
> > as far as I can get atm.
>
> Did you have any update on this? If there is a problem with MinGW-w64
> version, you can (just for experimentation) try UCRT demo build, which
> uses a newer version of MinGW-w64 than RTools 4:
>

So this worked with a patched version of wine. that fixed the above error.
I'm waiting for that patch to go in and for the next wine release to try
this again.


>
> https://developer.r-project.org/Blog/public/2020/07/30/windows/utf-8-build-of-r-and-cran-packages/index.html
> (reference at very bottom)
>
> > On Wed, Jul 15, 2020 at 10:56 AM J C Nash <profjcnash at gmail.com> wrote:
> >
> >>> Are you sure you want to try to run R etc. under Wine?
> >>>
> > Do I want to? No :-). But we (Stan) want to use flto and are seeing
> errors
> > on windows I want to be able to debug locally.
>
> Please note Brian Ripley has added/improved support for cross-compiling
> on Linux for Windows, so that it can be used for diagnosing LTO warnings
> (see NEWS in R-devel and src/gnuwin32/README.compilation). The
> cross-compilers and needed cross-compiled libraries for R itself are
> part of at least some Linux distributions (he tested on Fedora).
>

Yes very exciting!



>
> >>> - If you have Windows running, either directly or in a VM, you can run
> R
> >>> there.
> >>>
> > Sadly I don't have access to a windows machine. If I can't figure this
> out
> > then I'll probably just get a windows aws instance. But it would be nice
> > for people to have a wine setup they could test locally on.
>
> Microsoft is giving for free time-limited VMs primarily for testing
> Edge/MSIE, you can run them in e.g. in Virtualbox. As instructed in the
> VM, take snapshots often.
>

We have a Jenkins box that we use to spinup AWS windows sessions when we
need to thoroughly debug now but ty for the info!

>
> >> - If you have Windows and want to run R under some other OS, then set
> up a
> >>> VM
> >>> e.g., Linux Mint, for that. I sometimes test R for Windows in a
> >>> VirtualBox VM
> >>> for Win10, but generally run in Linux Mint. I've also run R in some
> Linux
> >>> VMs
> >>> to test for specific dependencies in some distros.
> >>>
> >>> I rather doubt R will run very well in Linux under Wine. My experience
> >>> with Wine
> >>> is that a few apps (e.g. Irfanview) run well, but many give lots of
> >>> trouble.
> >>>
> > Yes I'm 80/20 on whether compilation with Rtools will totally work on
> wine.
> > But if I can get this all setup and put it into a docker file I think it
> > will be useful for other people as well so it's worth spending a bit of
> > time on.
>
> Being able to test R on Wine may be useful, if you figure it out, I
> would be interested to learn more. It is easier to obtain, may be easier
> to automate, and some low-level bugs may be easier to diagnose. Of
> course, for the price of sometimes seeing errors not present on real
> Windows.
>

Do you think there would be more false positives or true negatives? That
was my one big concern since it's just emulating the actual windows
software environment.



>
> Best
> Tomas
>
> >>> JN
> >>>
> >>>
> >>> On 2020-07-15 1:17 p.m., Steve Bronder wrote:
> >>>> Does anyone know of a setup guide for getting R and Rtools 4.0 up and
> >>>> running on Wine with the Windows Server 2008 R2 VM? Do other
> maintainers
> >>>> with more knowhow think that would be useful for debugging purposes?
> >>>>
> >>>> I've been trying to test out some flto gcc things for windows by
> >>> setting up
> >>>> a local wine VM on my ubuntu box. Wine has an option for Windows
> Server
> >>>> 2008 R2 (which I believe is the windows session CRAN uses?) If anyone
> >>> has
> >>>> done this before and knows of a guide somewhere that would be very
> >>> helpful!
> >>>> Regards,
> >>>>
> >>>> Steve Bronder
> >>>>
> >>>>        [[alternative HTML version deleted]]
> >>>>
> >>>> ______________________________________________
> >>>> R-package-devel at r-project.org mailing list
> >>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>>>
> >>> ______________________________________________
> >>> R-package-devel at r-project.org mailing list
> >>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>
> > - Steve Bronder
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel


- Steve Bronder

	[[alternative HTML version deleted]]


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Mon Sep 21 16:15:41 2020
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Mon, 21 Sep 2020 16:15:41 +0200
Subject: [R-pkg-devel] 
 Anyone Know How To Setup Wine for Windows Testing?
In-Reply-To: <CAAVP=anODyPQpQQWgEGmuTiPFFxBAah-yxiat2ULpDixjdtJsw@mail.gmail.com>
References: <CAAVP=a=JBcHYaLWJLUUj9qisufmDkwTLB+4Z=VsB44Kmiq3wVQ@mail.gmail.com>
 <b1ef86ec-c289-caf3-8ba8-fb327579957c@gmail.com>
 <CAL9B2veMU6DzVcqyW=vXKcO6UaktebTE+og2KXipaXrkGmXBsA@mail.gmail.com>
 <CAAVP=anjuOq9ZM=c=Hd7UdTkDy6qg8-a=YqHm185JbrzZhzXKw@mail.gmail.com>
 <98efac23-35d5-0672-0a7f-c27c3d99dc86@gmail.com>
 <CAAVP=anODyPQpQQWgEGmuTiPFFxBAah-yxiat2ULpDixjdtJsw@mail.gmail.com>
Message-ID: <d00162b5-3eff-11fb-bcc3-84bd6ac57b35@gmail.com>

On 9/18/20 11:56 PM, Steve Bronder wrote:
> inline
>
>
> On Wed, Sep 9, 2020 at 3:35 AM Tomas Kalibera 
> <tomas.kalibera at gmail.com <mailto:tomas.kalibera at gmail.com>> wrote:
>
>     On 7/16/20 7:57 PM, Steve Bronder wrote:
>     > On Wed, Jul 15, 2020 at 2:22 PM Neal Fultz <nfultz at gmail.com
>     <mailto:nfultz at gmail.com>> wrote:
>     >
>     >> If you don't mind multi-gig docker containers, this can be helpful:
>     >>
>     >> https://github.com/scottyhardy/docker-wine
>     >>
>     >> It doesn't work with 64 bit versions of R as far as I could
>     tell, but 32
>     >> bit did install and start correctly in a few clicks when I
>     tried last year.
>     >>
>     > Thanks! I'm hoping if I can get this all working locally I can put
>     > everything into a docker container for other folks. At this
>     point I have R
>     > up and running and it can install binary packages, but there are
>     some
>     > terrible terrible Cygwin/Rtools errors I can't figure out. In
>     particular
>     > this warning / message seems worrisome
>     >
>     > Cygwin WARNING:
>     >? ? Couldn't compute FAST_CWD pointer.? This typically occurs if
>     you're using
>     >? ? an older Cygwin version on a newer Windows.? Please update to
>     the latest
>     >? ? available Cygwin version from https://cygwin.com/. If the problem
>     > persists,
>     >? ? please see https://cygwin.com/problems.html
>     >
>     > If anyone has interest I can post a script for setting up the
>     wine instance
>     > as far as I can get atm.
>
>     Did you have any update on this? If there is a problem with MinGW-w64
>     version, you can (just for experimentation) try UCRT demo build,
>     which
>     uses a newer version of MinGW-w64 than RTools 4:
>
>
> So this worked with a patched version of wine. that fixed the above 
> error. I'm waiting for that patch to go in and for the next wine 
> release to try this again.
Thanks!
>
>
>     https://developer.r-project.org/Blog/public/2020/07/30/windows/utf-8-build-of-r-and-cran-packages/index.html
>     (reference at very bottom)
>
>     > On Wed, Jul 15, 2020 at 10:56 AM J C Nash <profjcnash at gmail.com
>     <mailto:profjcnash at gmail.com>> wrote:
>     >
>     >>> Are you sure you want to try to run R etc. under Wine?
>     >>>
>     > Do I want to? No :-). But we (Stan) want to use flto and are
>     seeing errors
>     > on windows I want to be able to debug locally.
>
>     Please note Brian Ripley has added/improved support for
>     cross-compiling
>     on Linux for Windows, so that it can be used for diagnosing LTO
>     warnings
>     (see NEWS in R-devel and src/gnuwin32/README.compilation). The
>     cross-compilers and needed cross-compiled libraries for R itself are
>     part of at least some Linux distributions (he tested on Fedora).
>
>
> Yes very exciting!
>
>
>     >>> - If you have Windows running, either directly or in a VM, you
>     can run R
>     >>> there.
>     >>>
>     > Sadly I don't have access to a windows machine. If I can't
>     figure this out
>     > then I'll probably just get a windows aws instance. But it would
>     be nice
>     > for people to have a wine setup they could test locally on.
>
>     Microsoft is giving for free time-limited VMs primarily for testing
>     Edge/MSIE, you can run them in e.g. in Virtualbox. As instructed
>     in the
>     VM, take snapshots often.
>
>
> We have a Jenkins box that we use to spinup AWS windows sessions when 
> we need to thoroughly debug now but ty for the info!
>
>
>     >> - If you have Windows and want to run R under some other OS,
>     then set up a
>     >>> VM
>     >>> e.g., Linux Mint, for that. I sometimes test R for Windows in a
>     >>> VirtualBox VM
>     >>> for Win10, but generally run in Linux Mint. I've also run R in
>     some Linux
>     >>> VMs
>     >>> to test for specific dependencies in some distros.
>     >>>
>     >>> I rather doubt R will run very well in Linux under Wine. My
>     experience
>     >>> with Wine
>     >>> is that a few apps (e.g. Irfanview) run well, but many give
>     lots of
>     >>> trouble.
>     >>>
>     > Yes I'm 80/20 on whether compilation with Rtools will totally
>     work on wine.
>     > But if I can get this all setup and put it into a docker file I
>     think it
>     > will be useful for other people as well so it's worth spending a
>     bit of
>     > time on.
>
>     Being able to test R on Wine may be useful, if you figure it out, I
>     would be interested to learn more. It is easier to obtain, may be
>     easier
>     to automate, and some low-level bugs may be easier to diagnose. Of
>     course, for the price of sometimes seeing errors not present on real
>     Windows.
>
>
> Do you think there would be more false positives or true negatives? 
> That was my one big concern since it's just emulating the actual 
> windows software environment.
An (expensive) way to try out would be to run all CRAN/BIOC checks on 
Windows and in Wine and compare the results.? Things breaking in Wine, 
but not in Windows: hopefully often it would be clear immediately from 
Wine messages in many cases that it is a Wine issue. Also it may be a 
real problem that just does not map to a failure on Windows. Things 
working in Wine, but breaking in Windows, hopefully would be uncommon.

If Wine turns up usable for this, we could legally distribute a virtual 
disk with say R-devel and free applications needed by it, with a simple 
script that would just run a package check there on any Linux 
distribution. Maybe even as a docker/singularity image. This should make 
it easy and fast for Linux users to check their packages (of course, 
this can't replace completely testing on Windows, and there is 
winbuilder and rhub, too).

That is in addition to the added flexibility of debugging the low-level 
bugs having the source code for the "OS".

Best
Tomas


>
>     Best
>     Tomas
>
>     >>> JN
>     >>>
>     >>>
>     >>> On 2020-07-15 1:17 p.m., Steve Bronder wrote:
>     >>>> Does anyone know of a setup guide for getting R and Rtools
>     4.0 up and
>     >>>> running on Wine with the Windows Server 2008 R2 VM? Do other
>     maintainers
>     >>>> with more knowhow think that would be useful for debugging
>     purposes?
>     >>>>
>     >>>> I've been trying to test out some flto gcc things for windows by
>     >>> setting up
>     >>>> a local wine VM on my ubuntu box. Wine has an option for
>     Windows Server
>     >>>> 2008 R2 (which I believe is the windows session CRAN uses?)
>     If anyone
>     >>> has
>     >>>> done this before and knows of a guide somewhere that would be
>     very
>     >>> helpful!
>     >>>> Regards,
>     >>>>
>     >>>> Steve Bronder
>     >>>>
>     >>>>? ? ? ? [[alternative HTML version deleted]]
>     >>>>
>     >>>> ______________________________________________
>     >>>> R-package-devel at r-project.org
>     <mailto:R-package-devel at r-project.org> mailing list
>     >>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>     >>>>
>     >>> ______________________________________________
>     >>> R-package-devel at r-project.org
>     <mailto:R-package-devel at r-project.org> mailing list
>     >>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>     >>
>     > - Steve Bronder
>     >
>     >? ? ? ?[[alternative HTML version deleted]]
>     >
>     > ______________________________________________
>     > R-package-devel at r-project.org
>     <mailto:R-package-devel at r-project.org> mailing list
>     > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>
> - Steve Bronder



	[[alternative HTML version deleted]]


From henr|k@bengt@@on @end|ng |rom gm@||@com  Mon Sep 21 18:35:45 2020
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Mon, 21 Sep 2020 09:35:45 -0700
Subject: [R-pkg-devel] 
 Anyone Know How To Setup Wine for Windows Testing?
In-Reply-To: <d00162b5-3eff-11fb-bcc3-84bd6ac57b35@gmail.com>
References: <CAAVP=a=JBcHYaLWJLUUj9qisufmDkwTLB+4Z=VsB44Kmiq3wVQ@mail.gmail.com>
 <b1ef86ec-c289-caf3-8ba8-fb327579957c@gmail.com>
 <CAL9B2veMU6DzVcqyW=vXKcO6UaktebTE+og2KXipaXrkGmXBsA@mail.gmail.com>
 <CAAVP=anjuOq9ZM=c=Hd7UdTkDy6qg8-a=YqHm185JbrzZhzXKw@mail.gmail.com>
 <98efac23-35d5-0672-0a7f-c27c3d99dc86@gmail.com>
 <CAAVP=anODyPQpQQWgEGmuTiPFFxBAah-yxiat2ULpDixjdtJsw@mail.gmail.com>
 <d00162b5-3eff-11fb-bcc3-84bd6ac57b35@gmail.com>
Message-ID: <CAFDcVCSZWsNsCGPKKoKRmhoB5j_DEp+0Q6tNh_WmedJdKii4bg@mail.gmail.com>

Getting R to run well on Wine would be really neat.  Here are some
additional comments that might encourage someone to move this forward.

On Ubuntu 18.04, you can install and run R 3.6.0 on Wine as:

curl -O https://cloud.r-project.org/bin/windows/base/old/3.6.0/R-3.6.0-win.exe
wine R-3.6.0-win.exe /SILENT
wine start "%ProgramW6432%/R/R-3.6.0/bin/i386/R"

However, for me, never versions of R (e.g. R 3.6.1) fail to install
with an error "This program does not support the version of Windows
your computer is running."  This is with the current stable version of
Wine is 5.0.2 (August 2020) available from https://www.winehq.org/.
(If you struggle to install Wine (>= 4.5) on Ubuntu 18.04, see also
https://askubuntu.com/questions/1145473/how-do-i-install-libfaudio0).
I observed the same with Wine 3.0.


Some more comments: Back in 2016 I was looking into running R on Wine
via futures.  This could make it possible to access features in
Windows-only R packages from R sessions running Linux.  I only spent
so much time on it before concluding it wasn't stable and not worth my
time to investigate further.  For instance, I managed to launch a Wine
background worker as in:

rscript <- c("wine", "start", "/Unix",
normalizePath("~/.wine/drive_c/Program\
Files/R/R-3.5.1/bin/i386/Rscript.exe", mustWork = TRUE))
cl <- future::makeClusterPSOCK(1L, rscript=rscript, verbose=TRUE)

but only when running 32-bit Wine.  On 64-bit Wine is stalled.

/Henrik

On Mon, Sep 21, 2020 at 7:16 AM Tomas Kalibera <tomas.kalibera at gmail.com> wrote:
>
> On 9/18/20 11:56 PM, Steve Bronder wrote:
> > inline
> >
> >
> > On Wed, Sep 9, 2020 at 3:35 AM Tomas Kalibera
> > <tomas.kalibera at gmail.com <mailto:tomas.kalibera at gmail.com>> wrote:
> >
> >     On 7/16/20 7:57 PM, Steve Bronder wrote:
> >     > On Wed, Jul 15, 2020 at 2:22 PM Neal Fultz <nfultz at gmail.com
> >     <mailto:nfultz at gmail.com>> wrote:
> >     >
> >     >> If you don't mind multi-gig docker containers, this can be helpful:
> >     >>
> >     >> https://github.com/scottyhardy/docker-wine
> >     >>
> >     >> It doesn't work with 64 bit versions of R as far as I could
> >     tell, but 32
> >     >> bit did install and start correctly in a few clicks when I
> >     tried last year.
> >     >>
> >     > Thanks! I'm hoping if I can get this all working locally I can put
> >     > everything into a docker container for other folks. At this
> >     point I have R
> >     > up and running and it can install binary packages, but there are
> >     some
> >     > terrible terrible Cygwin/Rtools errors I can't figure out. In
> >     particular
> >     > this warning / message seems worrisome
> >     >
> >     > Cygwin WARNING:
> >     >    Couldn't compute FAST_CWD pointer.  This typically occurs if
> >     you're using
> >     >    an older Cygwin version on a newer Windows.  Please update to
> >     the latest
> >     >    available Cygwin version from https://cygwin.com/. If the problem
> >     > persists,
> >     >    please see https://cygwin.com/problems.html
> >     >
> >     > If anyone has interest I can post a script for setting up the
> >     wine instance
> >     > as far as I can get atm.
> >
> >     Did you have any update on this? If there is a problem with MinGW-w64
> >     version, you can (just for experimentation) try UCRT demo build,
> >     which
> >     uses a newer version of MinGW-w64 than RTools 4:
> >
> >
> > So this worked with a patched version of wine. that fixed the above
> > error. I'm waiting for that patch to go in and for the next wine
> > release to try this again.
> Thanks!
> >
> >
> >     https://developer.r-project.org/Blog/public/2020/07/30/windows/utf-8-build-of-r-and-cran-packages/index.html
> >     (reference at very bottom)
> >
> >     > On Wed, Jul 15, 2020 at 10:56 AM J C Nash <profjcnash at gmail.com
> >     <mailto:profjcnash at gmail.com>> wrote:
> >     >
> >     >>> Are you sure you want to try to run R etc. under Wine?
> >     >>>
> >     > Do I want to? No :-). But we (Stan) want to use flto and are
> >     seeing errors
> >     > on windows I want to be able to debug locally.
> >
> >     Please note Brian Ripley has added/improved support for
> >     cross-compiling
> >     on Linux for Windows, so that it can be used for diagnosing LTO
> >     warnings
> >     (see NEWS in R-devel and src/gnuwin32/README.compilation). The
> >     cross-compilers and needed cross-compiled libraries for R itself are
> >     part of at least some Linux distributions (he tested on Fedora).
> >
> >
> > Yes very exciting!
> >
> >
> >     >>> - If you have Windows running, either directly or in a VM, you
> >     can run R
> >     >>> there.
> >     >>>
> >     > Sadly I don't have access to a windows machine. If I can't
> >     figure this out
> >     > then I'll probably just get a windows aws instance. But it would
> >     be nice
> >     > for people to have a wine setup they could test locally on.
> >
> >     Microsoft is giving for free time-limited VMs primarily for testing
> >     Edge/MSIE, you can run them in e.g. in Virtualbox. As instructed
> >     in the
> >     VM, take snapshots often.
> >
> >
> > We have a Jenkins box that we use to spinup AWS windows sessions when
> > we need to thoroughly debug now but ty for the info!
> >
> >
> >     >> - If you have Windows and want to run R under some other OS,
> >     then set up a
> >     >>> VM
> >     >>> e.g., Linux Mint, for that. I sometimes test R for Windows in a
> >     >>> VirtualBox VM
> >     >>> for Win10, but generally run in Linux Mint. I've also run R in
> >     some Linux
> >     >>> VMs
> >     >>> to test for specific dependencies in some distros.
> >     >>>
> >     >>> I rather doubt R will run very well in Linux under Wine. My
> >     experience
> >     >>> with Wine
> >     >>> is that a few apps (e.g. Irfanview) run well, but many give
> >     lots of
> >     >>> trouble.
> >     >>>
> >     > Yes I'm 80/20 on whether compilation with Rtools will totally
> >     work on wine.
> >     > But if I can get this all setup and put it into a docker file I
> >     think it
> >     > will be useful for other people as well so it's worth spending a
> >     bit of
> >     > time on.
> >
> >     Being able to test R on Wine may be useful, if you figure it out, I
> >     would be interested to learn more. It is easier to obtain, may be
> >     easier
> >     to automate, and some low-level bugs may be easier to diagnose. Of
> >     course, for the price of sometimes seeing errors not present on real
> >     Windows.
> >
> >
> > Do you think there would be more false positives or true negatives?
> > That was my one big concern since it's just emulating the actual
> > windows software environment.
> An (expensive) way to try out would be to run all CRAN/BIOC checks on
> Windows and in Wine and compare the results.  Things breaking in Wine,
> but not in Windows: hopefully often it would be clear immediately from
> Wine messages in many cases that it is a Wine issue. Also it may be a
> real problem that just does not map to a failure on Windows. Things
> working in Wine, but breaking in Windows, hopefully would be uncommon.
>
> If Wine turns up usable for this, we could legally distribute a virtual
> disk with say R-devel and free applications needed by it, with a simple
> script that would just run a package check there on any Linux
> distribution. Maybe even as a docker/singularity image. This should make
> it easy and fast for Linux users to check their packages (of course,
> this can't replace completely testing on Windows, and there is
> winbuilder and rhub, too).
>
> That is in addition to the added flexibility of debugging the low-level
> bugs having the source code for the "OS".
>
> Best
> Tomas
>
>
> >
> >     Best
> >     Tomas
> >
> >     >>> JN
> >     >>>
> >     >>>
> >     >>> On 2020-07-15 1:17 p.m., Steve Bronder wrote:
> >     >>>> Does anyone know of a setup guide for getting R and Rtools
> >     4.0 up and
> >     >>>> running on Wine with the Windows Server 2008 R2 VM? Do other
> >     maintainers
> >     >>>> with more knowhow think that would be useful for debugging
> >     purposes?
> >     >>>>
> >     >>>> I've been trying to test out some flto gcc things for windows by
> >     >>> setting up
> >     >>>> a local wine VM on my ubuntu box. Wine has an option for
> >     Windows Server
> >     >>>> 2008 R2 (which I believe is the windows session CRAN uses?)
> >     If anyone
> >     >>> has
> >     >>>> done this before and knows of a guide somewhere that would be
> >     very
> >     >>> helpful!
> >     >>>> Regards,
> >     >>>>
> >     >>>> Steve Bronder
> >     >>>>
> >     >>>>        [[alternative HTML version deleted]]
> >     >>>>
> >     >>>> ______________________________________________
> >     >>>> R-package-devel at r-project.org
> >     <mailto:R-package-devel at r-project.org> mailing list
> >     >>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >     >>>>
> >     >>> ______________________________________________
> >     >>> R-package-devel at r-project.org
> >     <mailto:R-package-devel at r-project.org> mailing list
> >     >>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >     >>
> >     > - Steve Bronder
> >     >
> >     >       [[alternative HTML version deleted]]
> >     >
> >     > ______________________________________________
> >     > R-package-devel at r-project.org
> >     <mailto:R-package-devel at r-project.org> mailing list
> >     > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
> >
> > - Steve Bronder
>
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org  Tue Sep 22 09:04:28 2020
From: @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org (Spencer Graves)
Date: Tue, 22 Sep 2020 02:04:28 -0500
Subject: [R-pkg-devel] installed package size problem on Mac but not Linux
 nor Windows
Message-ID: <af5a2970-66e5-5c97-f588-e98ae9a9f96d@effectivedefense.org>

Hello, All:


	  R CMD check of "https://github.com/sbgraves237/Ecfun" on Mac produces 
the following NOTE:


* checking installed package size ... NOTE
   installed size is  5.9Mb
   sub-directories of 1Mb or more:
     doc   5.2Mb


	  It doesn't do that with Travis CI[1] nor on a Windows 10 computer I 
have.  "Writing R Extensions" suggested using "--compact-vignettes" with 
qpdf.  That changed nothing.


	  Suggestions?
	  Will this be problem on CRAN?
	  Thanks,
	  Spencer


[1]
https://travis-ci.org/github/sbgraves237/Ecfun/builds/727906753


From hugh@p@r@on@ge @end|ng |rom gm@||@com  Tue Sep 22 09:22:24 2020
From: hugh@p@r@on@ge @end|ng |rom gm@||@com (Hugh Parsonage)
Date: Tue, 22 Sep 2020 17:22:24 +1000
Subject: [R-pkg-devel] 
 installed package size problem on Mac but not Linux nor Windows
In-Reply-To: <af5a2970-66e5-5c97-f588-e98ae9a9f96d@effectivedefense.org>
References: <af5a2970-66e5-5c97-f588-e98ae9a9f96d@effectivedefense.org>
Message-ID: <CAJmOi+OUEkEHEUByKWE6pDHypkd5wy1zJd9rbB0U1pQ7ZOnQUQ@mail.gmail.com>

One of your vignettes is a 52-page pdf. It may be more suitable to provide
a link to it rather than distributing it with the package, or distribute an
excerpt.

Some the images in the PDFs could be PDFs themselves, or be pngs with lower
resolution.

On Tue, 22 Sep 2020 at 5:04 pm, Spencer Graves <
spencer.graves at effectivedefense.org> wrote:

> Hello, All:
>
>
>           R CMD check of "https://github.com/sbgraves237/Ecfun" on Mac
> produces
> the following NOTE:
>
>
> * checking installed package size ... NOTE
>    installed size is  5.9Mb
>    sub-directories of 1Mb or more:
>      doc   5.2Mb
>
>
>           It doesn't do that with Travis CI[1] nor on a Windows 10
> computer I
> have.  "Writing R Extensions" suggested using "--compact-vignettes" with
> qpdf.  That changed nothing.
>
>
>           Suggestions?
>           Will this be problem on CRAN?
>           Thanks,
>           Spencer
>
>
> [1]
> https://travis-ci.org/github/sbgraves237/Ecfun/builds/727906753
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org  Tue Sep 22 09:45:24 2020
From: @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org (Spencer Graves)
Date: Tue, 22 Sep 2020 02:45:24 -0500
Subject: [R-pkg-devel] 
 installed package size problem on Mac but not Linux nor Windows
In-Reply-To: <CAJmOi+OUEkEHEUByKWE6pDHypkd5wy1zJd9rbB0U1pQ7ZOnQUQ@mail.gmail.com>
References: <af5a2970-66e5-5c97-f588-e98ae9a9f96d@effectivedefense.org>
 <CAJmOi+OUEkEHEUByKWE6pDHypkd5wy1zJd9rbB0U1pQ7ZOnQUQ@mail.gmail.com>
Message-ID: <6160c6ed-639c-111a-44ef-4c2514e9ac7e@effectivedefense.org>



On 2020-09-22 02:22, Hugh Parsonage wrote:
> One of your vignettes is a 52-page pdf. It may be more suitable to 
> provide a link to it rather than distributing it with the package, or 
> distribute an excerpt.
> 
> Some the images in the PDFs could be PDFs themselves, or be pngs with 
> lower resolution.


	  Yes.  That's done by default by "R CMD build / check" on my Mac but 
not on Linux nor Windows 10.  I'm not sure, but I think this problem is 
fairly recent:  I think that "R CMD build / check" on Mac used to run 
like on Linux and Win10 without creating these huge PDF and HTML files 
from vignettes.  If it's only the figures, I would naively think there 
should be an option to make sure that the figures were coded in svg so 
it wouldn't take up as much space.  Or, failing that, if the problem is 
the figures, I can code it so the figures don't plot unless people run 
them manually.  Or maybe I shouldn't be trying to distribute vignettes 
like this.


	  Thanks for the reply.
	  Spencer

> 
> On Tue, 22 Sep 2020 at 5:04 pm, Spencer Graves 
> <spencer.graves at effectivedefense.org 
> <mailto:spencer.graves at effectivedefense.org>> wrote:
> 
>     Hello, All:
> 
> 
>      ? ? ? ? ? R CMD check of "https://github.com/sbgraves237/Ecfun" on
>     Mac produces
>     the following NOTE:
> 
> 
>     * checking installed package size ... NOTE
>      ? ?installed size is? 5.9Mb
>      ? ?sub-directories of 1Mb or more:
>      ? ? ?doc? ?5.2Mb
> 
> 
>      ? ? ? ? ? It doesn't do that with Travis CI[1] nor on a Windows 10
>     computer I
>     have.? "Writing R Extensions" suggested using "--compact-vignettes"
>     with
>     qpdf.? That changed nothing.
> 
> 
>      ? ? ? ? ? Suggestions?
>      ? ? ? ? ? Will this be problem on CRAN?
>      ? ? ? ? ? Thanks,
>      ? ? ? ? ? Spencer
> 
> 
>     [1]
>     https://travis-ci.org/github/sbgraves237/Ecfun/builds/727906753
> 
>     ______________________________________________
>     R-package-devel at r-project.org <mailto:R-package-devel at r-project.org>
>     mailing list
>     https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From r@|@@pere|r@@br @end|ng |rom gm@||@com  Fri Sep 25 14:44:03 2020
From: r@|@@pere|r@@br @end|ng |rom gm@||@com (Rafael H. M. Pereira)
Date: Fri, 25 Sep 2020 09:44:03 -0300
Subject: [R-pkg-devel] Solaris: Error with package imports
Message-ID: <CAA42DGkUXSAc4N06oeR6iX6Li0qf_2J+5XxiOTEXju1tNJZaEQ@mail.gmail.com>

Hi all.

I'm having a strange error with the CRAN checks on Solaris. The Solaris
server throws the error: Package required but not available: ?jdx? even
though jdx is listed in 'Imports' in my DESCRIPTION file. This error only
occurs on the solaris server. Any suggestions?

More info on this issue: https://github.com/ipeaGIT/r5r/issues/113

best,

Rafael Pereira

	[[alternative HTML version deleted]]


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Fri Sep 25 14:58:06 2020
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Fri, 25 Sep 2020 14:58:06 +0200
Subject: [R-pkg-devel] Solaris: Error with package imports
In-Reply-To: <CAA42DGkUXSAc4N06oeR6iX6Li0qf_2J+5XxiOTEXju1tNJZaEQ@mail.gmail.com>
References: <CAA42DGkUXSAc4N06oeR6iX6Li0qf_2J+5XxiOTEXju1tNJZaEQ@mail.gmail.com>
Message-ID: <f402fd6e-a6e0-824a-43c4-2fcefd7d3f9d@statistik.tu-dortmund.de>

Yes, jdx has

SystemRequirements: 	Java Runtime Environment (>= 8)

hence not on Solaris.

Best,
Uwe Ligges


On 25.09.2020 14:44, Rafael H. M. Pereira wrote:
> Hi all.
> 
> I'm having a strange error with the CRAN checks on Solaris. The Solaris
> server throws the error: Package required but not available: ?jdx? even
> though jdx is listed in 'Imports' in my DESCRIPTION file. This error only
> occurs on the solaris server. Any suggestions?
> 
> More info on this issue: https://github.com/ipeaGIT/r5r/issues/113
> 
> best,
> 
> Rafael Pereira
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From r@|@@pere|r@@br @end|ng |rom gm@||@com  Fri Sep 25 14:59:54 2020
From: r@|@@pere|r@@br @end|ng |rom gm@||@com (Rafael H. M. Pereira)
Date: Fri, 25 Sep 2020 09:59:54 -0300
Subject: [R-pkg-devel] Solaris: Error with package imports
In-Reply-To: <f402fd6e-a6e0-824a-43c4-2fcefd7d3f9d@statistik.tu-dortmund.de>
References: <CAA42DGkUXSAc4N06oeR6iX6Li0qf_2J+5XxiOTEXju1tNJZaEQ@mail.gmail.com>
 <f402fd6e-a6e0-824a-43c4-2fcefd7d3f9d@statistik.tu-dortmund.de>
Message-ID: <CAA42DGnMeRWTf6P0j=-D2k3dpni=Ag=FV43pcGSY1aKMtk_a7Q@mail.gmail.com>

Thank you for the clarification, Uwe.

in this case, this error on Solaris alone should not be a problem to keep
the package on CRAN. right?

best,

Rafa

On Fri, Sep 25, 2020 at 9:57 AM Uwe Ligges <ligges at statistik.tu-dortmund.de>
wrote:

> Yes, jdx has
>
> SystemRequirements:     Java Runtime Environment (>= 8)
>
> hence not on Solaris.
>
> Best,
> Uwe Ligges
>
>
> On 25.09.2020 14:44, Rafael H. M. Pereira wrote:
> > Hi all.
> >
> > I'm having a strange error with the CRAN checks on Solaris. The Solaris
> > server throws the error: Package required but not available: ?jdx? even
> > though jdx is listed in 'Imports' in my DESCRIPTION file. This error only
> > occurs on the solaris server. Any suggestions?
> >
> > More info on this issue: https://github.com/ipeaGIT/r5r/issues/113
> >
> > best,
> >
> > Rafael Pereira
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
>

	[[alternative HTML version deleted]]


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Fri Sep 25 15:17:42 2020
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Fri, 25 Sep 2020 15:17:42 +0200
Subject: [R-pkg-devel] Solaris: Error with package imports
In-Reply-To: <CAA42DGnMeRWTf6P0j=-D2k3dpni=Ag=FV43pcGSY1aKMtk_a7Q@mail.gmail.com>
References: <CAA42DGkUXSAc4N06oeR6iX6Li0qf_2J+5XxiOTEXju1tNJZaEQ@mail.gmail.com>
 <f402fd6e-a6e0-824a-43c4-2fcefd7d3f9d@statistik.tu-dortmund.de>
 <CAA42DGnMeRWTf6P0j=-D2k3dpni=Ag=FV43pcGSY1aKMtk_a7Q@mail.gmail.com>
Message-ID: <d1c57be5-e290-f088-08f0-5104f1680edb@statistik.tu-dortmund.de>



On 25.09.2020 14:59, Rafael H. M. Pereira wrote:
> Thank you for the clarification, Uwe.
> 
> in this case, this error on Solaris alone should not be a problem to keep
> the package on CRAN. right?

Ideally move the jdx dependency to "Suggests" if that nmakes sense and 
you have funtionality that does not strictly depend on jdx in order to 
make your package available on more platforms. If you need it strictly, 
that's OK, too.

Best,
Uwe Ligges



> best,
> 
> Rafa
> 
> On Fri, Sep 25, 2020 at 9:57 AM Uwe Ligges <ligges at statistik.tu-dortmund.de>
> wrote:
> 
>> Yes, jdx has
>>
>> SystemRequirements:     Java Runtime Environment (>= 8)
>>
>> hence not on Solaris.
>>
>> Best,
>> Uwe Ligges
>>
>>
>> On 25.09.2020 14:44, Rafael H. M. Pereira wrote:
>>> Hi all.
>>>
>>> I'm having a strange error with the CRAN checks on Solaris. The Solaris
>>> server throws the error: Package required but not available: ?jdx? even
>>> though jdx is listed in 'Imports' in my DESCRIPTION file. This error only
>>> occurs on the solaris server. Any suggestions?
>>>
>>> More info on this issue: https://github.com/ipeaGIT/r5r/issues/113
>>>
>>> best,
>>>
>>> Rafael Pereira
>>>
>>>        [[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>>
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From edd @end|ng |rom deb|@n@org  Sat Sep 26 15:14:56 2020
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Sat, 26 Sep 2020 08:14:56 -0500
Subject: [R-pkg-devel] CRAN Windows failure due to old pandoc ?
Message-ID: <24431.16080.360859.499222@rob.eddelbuettel.com>


I had a submission fail and bomb with this error on Windows:

  Flavor: r-devel-windows-ix86+x86_64
  Check: re-building of vignette outputs, Result: WARNING
    Error(s) in re-building vignettes:
    --- re-building 'vignettefilename.Rmd' using rmarkdown
    pandoc.exe: unrecognized option `--lua-filter'
    unrecognized option `--lua-filter'
    unrecognized option `--lua-filter'
    Try pandoc.exe --help for more information.
    Error: processing vignette 'vignettefilename.Rmd' failed with diagnostics:
    pandoc document conversion failed with error 2
    --- failed re-building 'vignettefilename.Rmd'
    
    SUMMARY: processing the following file failed:
      'vignettefilename.Rmd'
    
    Error: Vignette re-building failed.
    Execution halted

This looks like a host configuration problem:

  edd at rob:~$ pandoc --help | grep lua
    -L SCRIPTPATH         --lua-filter=SCRIPTPATH                         
  edd at rob:~$ pandoc --version | head -1
  pandoc 2.9.2.1
  edd at rob:~$ 

Can we expect CRAN to update its pandoc binary? Or will we have to 'for now'
rely on 'reply-all', explaining to CRAN that the failure is from their end?

As they in the press, I had reached out to CRAN but they 'have not yet
responded to requests for comments' as we know they're busy. Anybody seen
this error though?

Dirk

-- 
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From murdoch@dunc@n @end|ng |rom gm@||@com  Sat Sep 26 17:50:38 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sat, 26 Sep 2020 11:50:38 -0400
Subject: [R-pkg-devel] CRAN Windows failure due to old pandoc ?
In-Reply-To: <24431.16080.360859.499222@rob.eddelbuettel.com>
References: <24431.16080.360859.499222@rob.eddelbuettel.com>
Message-ID: <39defb0b-3e28-9276-502f-b545829d428b@gmail.com>

On 26/09/2020 9:14 a.m., Dirk Eddelbuettel wrote:
> 
> I had a submission fail and bomb with this error on Windows:
> 
>    Flavor: r-devel-windows-ix86+x86_64
>    Check: re-building of vignette outputs, Result: WARNING
>      Error(s) in re-building vignettes:
>      --- re-building 'vignettefilename.Rmd' using rmarkdown
>      pandoc.exe: unrecognized option `--lua-filter'
>      unrecognized option `--lua-filter'
>      unrecognized option `--lua-filter'
>      Try pandoc.exe --help for more information.
>      Error: processing vignette 'vignettefilename.Rmd' failed with diagnostics:
>      pandoc document conversion failed with error 2
>      --- failed re-building 'vignettefilename.Rmd'
>      
>      SUMMARY: processing the following file failed:
>        'vignettefilename.Rmd'
>      
>      Error: Vignette re-building failed.
>      Execution halted
> 
> This looks like a host configuration problem:
> 
>    edd at rob:~$ pandoc --help | grep lua
>      -L SCRIPTPATH         --lua-filter=SCRIPTPATH
>    edd at rob:~$ pandoc --version | head -1
>    pandoc 2.9.2.1
>    edd at rob:~$
> 
> Can we expect CRAN to update its pandoc binary? Or will we have to 'for now'
> rely on 'reply-all', explaining to CRAN that the failure is from their end?
> 
> As they in the press, I had reached out to CRAN but they 'have not yet
> responded to requests for comments' as we know they're busy. Anybody seen
> this error though?

I haven't seen that one, but I regularly get errors in rgl and tables 
because of missing or insufficient pandoc on some systems.  I added 
lines like

   SystemRequirements:  pandoc (>= 1.12.3) for vignettes

to DESCRIPTION to state the Pandoc version, added rmarkdown to the 
Suggests list, and added code like this to the start of HTML vignettes:

```{r echo = FALSE}
if (!requireNamespace("rmarkdown") || 
!rmarkdown::pandoc_available("1.12.3")) {
   warning("This vignette requires pandoc version 1.12.3; code will not 
run in older versions.")
   knitr::opts_chunk$set(eval = FALSE)
}
```

This makes the test happy, though it also makes the vignette pretty 
useless on systems that don't meet the stated requirements.  Since 
SystemRequirements is free-form, I can see why CRAN doesn't do automatic 
interpretation of it, but it would be nice if they did.

Duncan Murdoch


From edd @end|ng |rom deb|@n@org  Sat Sep 26 18:54:34 2020
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Sat, 26 Sep 2020 11:54:34 -0500
Subject: [R-pkg-devel] CRAN Windows failure due to old pandoc ?
In-Reply-To: <39defb0b-3e28-9276-502f-b545829d428b@gmail.com>
References: <24431.16080.360859.499222@rob.eddelbuettel.com>
 <39defb0b-3e28-9276-502f-b545829d428b@gmail.com>
Message-ID: <24431.29258.479690.841632@rob.eddelbuettel.com>


On 26 September 2020 at 11:50, Duncan Murdoch wrote:
| On 26/09/2020 9:14 a.m., Dirk Eddelbuettel wrote:
| > 
| > I had a submission fail and bomb with this error on Windows:
| > 
| >    Flavor: r-devel-windows-ix86+x86_64
| >    Check: re-building of vignette outputs, Result: WARNING
| >      Error(s) in re-building vignettes:
| >      --- re-building 'vignettefilename.Rmd' using rmarkdown
| >      pandoc.exe: unrecognized option `--lua-filter'
| >      unrecognized option `--lua-filter'
| >      unrecognized option `--lua-filter'
| >      Try pandoc.exe --help for more information.
| >      Error: processing vignette 'vignettefilename.Rmd' failed with diagnostics:
| >      pandoc document conversion failed with error 2
| >      --- failed re-building 'vignettefilename.Rmd'
| >      
| >      SUMMARY: processing the following file failed:
| >        'vignettefilename.Rmd'
| >      
| >      Error: Vignette re-building failed.
| >      Execution halted
| > 
| > This looks like a host configuration problem:
| > 
| >    edd at rob:~$ pandoc --help | grep lua
| >      -L SCRIPTPATH         --lua-filter=SCRIPTPATH
| >    edd at rob:~$ pandoc --version | head -1
| >    pandoc 2.9.2.1
| >    edd at rob:~$
| > 
| > Can we expect CRAN to update its pandoc binary? Or will we have to 'for now'
| > rely on 'reply-all', explaining to CRAN that the failure is from their end?
| > 
| > As they in the press, I had reached out to CRAN but they 'have not yet
| > responded to requests for comments' as we know they're busy. Anybody seen
| > this error though?
| 
| I haven't seen that one, but I regularly get errors in rgl and tables 
| because of missing or insufficient pandoc on some systems.  I added 
| lines like
| 
|    SystemRequirements:  pandoc (>= 1.12.3) for vignettes
| 
| to DESCRIPTION to state the Pandoc version, added rmarkdown to the 
| Suggests list, and added code like this to the start of HTML vignettes:
| 
| ```{r echo = FALSE}
| if (!requireNamespace("rmarkdown") || 
| !rmarkdown::pandoc_available("1.12.3")) {
|    warning("This vignette requires pandoc version 1.12.3; code will not 
| run in older versions.")
|    knitr::opts_chunk$set(eval = FALSE)
| }
| ```

Good point!  Brooke and I actually recommend exactly that---conditional
vignette builds---in our R Journal paper on drat for data repos (via Suggests).

But (because of the overall fragility of these pipelines as well as
preference for generally lighter setups) my vignettes actually tend to not
even run code.  I mostly just use three backticks followed by the language
for which I desire highlighting from pandoc, i.e. ```r or ```c++.

Maybe we would need to pass the minimum version check into rmarkdown as an
option so that rmarkdown knows not to ask for `--lua-filter` on setups where
rmarkdown knows pandoc is too old?  Or maybe make the vignette builder barf?
 
| This makes the test happy, though it also makes the vignette pretty 
| useless on systems that don't meet the stated requirements.  Since 
| SystemRequirements is free-form, I can see why CRAN doesn't do automatic 
| interpretation of it, but it would be nice if they did.

Alas, the free-form requirement has been a constraint for a long time indeed.

Dirk

-- 
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From murdoch@dunc@n @end|ng |rom gm@||@com  Sat Sep 26 20:20:56 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sat, 26 Sep 2020 14:20:56 -0400
Subject: [R-pkg-devel] CRAN Windows failure due to old pandoc ?
In-Reply-To: <24431.29258.479690.841632@rob.eddelbuettel.com>
References: <24431.16080.360859.499222@rob.eddelbuettel.com>
 <39defb0b-3e28-9276-502f-b545829d428b@gmail.com>
 <24431.29258.479690.841632@rob.eddelbuettel.com>
Message-ID: <653d67db-c205-3d62-3164-7bbe889e39ca@gmail.com>

On 26/09/2020 12:54 p.m., Dirk Eddelbuettel wrote:
> 
> On 26 September 2020 at 11:50, Duncan Murdoch wrote:
> | On 26/09/2020 9:14 a.m., Dirk Eddelbuettel wrote:
> | >
> | > I had a submission fail and bomb with this error on Windows:
> | >
> | >    Flavor: r-devel-windows-ix86+x86_64
> | >    Check: re-building of vignette outputs, Result: WARNING
> | >      Error(s) in re-building vignettes:
> | >      --- re-building 'vignettefilename.Rmd' using rmarkdown
> | >      pandoc.exe: unrecognized option `--lua-filter'
> | >      unrecognized option `--lua-filter'
> | >      unrecognized option `--lua-filter'
> | >      Try pandoc.exe --help for more information.
> | >      Error: processing vignette 'vignettefilename.Rmd' failed with diagnostics:
> | >      pandoc document conversion failed with error 2
> | >      --- failed re-building 'vignettefilename.Rmd'
> | >
> | >      SUMMARY: processing the following file failed:
> | >        'vignettefilename.Rmd'
> | >
> | >      Error: Vignette re-building failed.
> | >      Execution halted
> | >
> | > This looks like a host configuration problem:
> | >
> | >    edd at rob:~$ pandoc --help | grep lua
> | >      -L SCRIPTPATH         --lua-filter=SCRIPTPATH
> | >    edd at rob:~$ pandoc --version | head -1
> | >    pandoc 2.9.2.1
> | >    edd at rob:~$
> | >
> | > Can we expect CRAN to update its pandoc binary? Or will we have to 'for now'
> | > rely on 'reply-all', explaining to CRAN that the failure is from their end?
> | >
> | > As they in the press, I had reached out to CRAN but they 'have not yet
> | > responded to requests for comments' as we know they're busy. Anybody seen
> | > this error though?
> |
> | I haven't seen that one, but I regularly get errors in rgl and tables
> | because of missing or insufficient pandoc on some systems.  I added
> | lines like
> |
> |    SystemRequirements:  pandoc (>= 1.12.3) for vignettes
> |
> | to DESCRIPTION to state the Pandoc version, added rmarkdown to the
> | Suggests list, and added code like this to the start of HTML vignettes:
> |
> | ```{r echo = FALSE}
> | if (!requireNamespace("rmarkdown") ||
> | !rmarkdown::pandoc_available("1.12.3")) {
> |    warning("This vignette requires pandoc version 1.12.3; code will not
> | run in older versions.")
> |    knitr::opts_chunk$set(eval = FALSE)
> | }
> | ```
> 
> Good point!  Brooke and I actually recommend exactly that---conditional
> vignette builds---in our R Journal paper on drat for data repos (via Suggests).
> 
> But (because of the overall fragility of these pipelines as well as
> preference for generally lighter setups) my vignettes actually tend to not
> even run code.  I mostly just use three backticks followed by the language
> for which I desire highlighting from pandoc, i.e. ```r or ```c++.

Hmmm, that's strange.  From what I can see you only get the --lua-filter 
if pandoc 2.0 is available:

https://github.com/rstudio/rmarkdown/blob/66d27e09befd5f0579f0f4e27c4b9325284b9b15/R/pandoc.R#L719

I think this is the current rmarkdown version.

Duncan Murdoch


> 
> Maybe we would need to pass the minimum version check into rmarkdown as an
> option so that rmarkdown knows not to ask for `--lua-filter` on setups where
> rmarkdown knows pandoc is too old?  Or maybe make the vignette builder barf?
>   
> | This makes the test happy, though it also makes the vignette pretty
> | useless on systems that don't meet the stated requirements.  Since
> | SystemRequirements is free-form, I can see why CRAN doesn't do automatic
> | interpretation of it, but it would be nice if they did.
> 
> Alas, the free-form requirement has been a constraint for a long time indeed.
> 
> Dirk
>


From edd @end|ng |rom deb|@n@org  Sat Sep 26 21:42:06 2020
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Sat, 26 Sep 2020 14:42:06 -0500
Subject: [R-pkg-devel] CRAN Windows failure due to old pandoc ?
In-Reply-To: <653d67db-c205-3d62-3164-7bbe889e39ca@gmail.com>
References: <24431.16080.360859.499222@rob.eddelbuettel.com>
 <39defb0b-3e28-9276-502f-b545829d428b@gmail.com>
 <24431.29258.479690.841632@rob.eddelbuettel.com>
 <653d67db-c205-3d62-3164-7bbe889e39ca@gmail.com>
Message-ID: <24431.39310.24225.620883@rob.eddelbuettel.com>


On 26 September 2020 at 14:20, Duncan Murdoch wrote:
| On 26/09/2020 12:54 p.m., Dirk Eddelbuettel wrote:
| Hmmm, that's strange.  From what I can see you only get the --lua-filter 
| if pandoc 2.0 is available:
| 
| https://github.com/rstudio/rmarkdown/blob/66d27e09befd5f0579f0f4e27c4b9325284b9b15/R/pandoc.R#L719
| 
| I think this is the current rmarkdown version.

I was using a different document driver which may not make that check.

In the meantime, I think I will just follow the usual advice 'stop doing that
then' after complaining that it hurts and may just switch to a pdf vignette.

Dirk

--
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From Er|c@Kort @end|ng |rom v@|@org  Fri Sep 25 19:40:06 2020
From: Er|c@Kort @end|ng |rom v@|@org (Kort, Eric)
Date: Fri, 25 Sep 2020 17:40:06 +0000
Subject: [R-pkg-devel] rtiff Build failure on r-release-macos-x86_64
Message-ID: <8C1C7472-903B-42AA-8F98-7F329822C1C0@vai.org>

Good afternoon. Forgive me if this belongs on R-SIG-Mac.

I am the maintainer of the rtiff package. It has come to my attention that binaries are not being successfully built on CRAN, although build succeeds on r-oldrel-macos-x86_64.  The error is:

checking for TIFFOpen in -ltiff... no
Try static libs needed on OS X
checking for TIFFOpen in -ltiff... no
Error: Could not find libtiff.
ERROR: configuration failed for package ?rtiff?
* removing ?/Volumes/Builds/packages/high-sierra-x86_64/results/4.0/rtiff.Rcheck/rtiff?

Is it an option to include libtiff in the new build environment for Mac OS?

Thanks,
Eric



From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Sun Sep 27 01:51:20 2020
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Sun, 27 Sep 2020 01:51:20 +0200
Subject: [R-pkg-devel] rtiff Build failure on r-release-macos-x86_64
In-Reply-To: <8C1C7472-903B-42AA-8F98-7F329822C1C0@vai.org>
References: <8C1C7472-903B-42AA-8F98-7F329822C1C0@vai.org>
Message-ID: <5dd54512-a626-4f06-fdf0-b56bb98fcfa7@statistik.tu-dortmund.de>

Ideally send a note to Imion Urbanek, the Mac maintainer.

Best,
Uwe Ligges


On 25.09.2020 19:40, Kort, Eric wrote:
> Good afternoon. Forgive me if this belongs on R-SIG-Mac.
> 
> I am the maintainer of the rtiff package. It has come to my attention that binaries are not being successfully built on CRAN, although build succeeds on r-oldrel-macos-x86_64.  The error is:
> 
> checking for TIFFOpen in -ltiff... no
> Try static libs needed on OS X
> checking for TIFFOpen in -ltiff... no
> Error: Could not find libtiff.
> ERROR: configuration failed for package ?rtiff?
> * removing ?/Volumes/Builds/packages/high-sierra-x86_64/results/4.0/rtiff.Rcheck/rtiff?
> 
> Is it an option to include libtiff in the new build environment for Mac OS?
> 
> Thanks,
> Eric
> 
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From y|cheng @end|ng |rom |@@t@te@edu  Mon Sep 28 17:10:00 2020
From: y|cheng @end|ng |rom |@@t@te@edu (Yicheng Yang)
Date: Mon, 28 Sep 2020 10:10:00 -0500
Subject: [R-pkg-devel] A note from CRAN package check
Message-ID: <CANZ1ACO4X7Vi4YmsWu-QvMGCwLVnL6d1KxLD3OrfR8ugumwFEw@mail.gmail.com>

Dear all,

I notice that there is a note from CRAN package check results for our
package as follows:

Version: 1.4.1
Check: installed package size
Result: NOTE
     installed size is 5.3Mb
     sub-directories of 1Mb or more:
     libs 5.2Mb

The link to our package is here:
https://cran.r-project.org/web/packages/FHDI/index.html

So I know the problem is that our package exceeds the maximum size of 5MB.
But I don't understand where we can trim our package to meet
this requirement. We can not modify the source codes (C++ file and R files)
because we may lose some functionalities of the package. Do we have to trim
R documents? Any suggestions?

So many thanks.

Best regards,
Yicheng Yang

	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Mon Sep 28 18:41:10 2020
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Mon, 28 Sep 2020 12:41:10 -0400
Subject: [R-pkg-devel] A note from CRAN package check
In-Reply-To: <CANZ1ACO4X7Vi4YmsWu-QvMGCwLVnL6d1KxLD3OrfR8ugumwFEw@mail.gmail.com>
References: <CANZ1ACO4X7Vi4YmsWu-QvMGCwLVnL6d1KxLD3OrfR8ugumwFEw@mail.gmail.com>
Message-ID: <6d9926cd-6b4a-2cf3-7c76-ad6c78fdd305@gmail.com>

On 28/09/2020 11:10 a.m., Yicheng Yang wrote:
> Dear all,
> 
> I notice that there is a note from CRAN package check results for our
> package as follows:
> 
> Version: 1.4.1
> Check: installed package size
> Result: NOTE
>       installed size is 5.3Mb
>       sub-directories of 1Mb or more:
>       libs 5.2Mb
> 
> The link to our package is here:
> https://cran.r-project.org/web/packages/FHDI/index.html
> 
> So I know the problem is that our package exceeds the maximum size of 5MB.
> But I don't understand where we can trim our package to meet
> this requirement. We can not modify the source codes (C++ file and R files)
> because we may lose some functionalities of the package. Do we have to trim
> R documents? Any suggestions?

Reducing documents isn't going to be enough:  most of the problem is in 
libs.

You should investigate whether the libs you need are provided by other 
packages, or (if you wrote them yourself), whether it's really true that 
you can't shrink them.

You could consider splitting your package into two packages, if there 
are several libs.

You could try to explain to CRAN why you need to use all that space. 
There are packages on CRAN that exceed the 5Mb limit.

Finally, you could choose to distribute your package in some other way 
besides CRAN.

Duncan Murdoch


From georg|@bo@hn@kov @end|ng |rom m@nche@ter@@c@uk  Mon Sep 28 19:17:10 2020
From: georg|@bo@hn@kov @end|ng |rom m@nche@ter@@c@uk (Georgi Boshnakov)
Date: Mon, 28 Sep 2020 17:17:10 +0000
Subject: [R-pkg-devel] force revdepcheck to use local version of a dependency
Message-ID: <AM0PR0102MB344316AB62C63A3C99F89BC3AE350@AM0PR0102MB3443.eurprd01.prod.exchangelabs.com>

Hi,

I am using package 'revdepcheck' to check reverse dependencies of a package and it works great. But now I have a scenario such that I wish it to use a local version of one of the dependencies of the checked package and am not able to find out how.

Some context: Package A imports package B. Package A has many reverse dependencies. I wish to check if an update to package B will break some of the reverse dependencies of A and/or repair broken reverse dependencies of A. It is obvious to update B on CRAN but this may lead unnecessarily to a number of CRAN updates.


Georgi Boshnakov


	[[alternative HTML version deleted]]


From edd @end|ng |rom deb|@n@org  Mon Sep 28 19:35:39 2020
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Mon, 28 Sep 2020 12:35:39 -0500
Subject: [R-pkg-devel] force revdepcheck to use local version of a
 dependency
In-Reply-To: <AM0PR0102MB344316AB62C63A3C99F89BC3AE350@AM0PR0102MB3443.eurprd01.prod.exchangelabs.com>
References: <AM0PR0102MB344316AB62C63A3C99F89BC3AE350@AM0PR0102MB3443.eurprd01.prod.exchangelabs.com>
Message-ID: <24434.7915.542812.477806@rob.eddelbuettel.com>


On 28 September 2020 at 17:17, Georgi Boshnakov wrote:
| I am using package 'revdepcheck' to check reverse dependencies of a package and it works great. But now I have a scenario such that I wish it to use a local version of one of the dependencies of the checked package and am not able to find out how.

Altering the set of directories as showsn by .libPaths() ? This could be as
easy as setting `R_LIBS_USER` or `R_LIBS_SITE` or calling .libPaths().
 
| Some context: Package A imports package B. Package A has many reverse dependencies. I wish to check if an update to package B will break some of the reverse dependencies of A and/or repair broken reverse dependencies of A. It is obvious to update B on CRAN but this may lead unnecessarily to a number of CRAN updates.

We have similar issue with CI Runners, RHub, win-builder -- they may only see
the fixed set of CRAN packages and versions, and/or system libraries.  Plus,
these days getting an update onto CRAN is no longer as simple as it used be
(unless the package is small, in excellent health, and without many reverse
depends itself).

Dirk

-- 
https://dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From c@@rd|@g@bor @end|ng |rom gm@||@com  Mon Sep 28 19:46:21 2020
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Mon, 28 Sep 2020 18:46:21 +0100
Subject: [R-pkg-devel] force revdepcheck to use local version of a
 dependency
In-Reply-To: <AM0PR0102MB344316AB62C63A3C99F89BC3AE350@AM0PR0102MB3443.eurprd01.prod.exchangelabs.com>
References: <AM0PR0102MB344316AB62C63A3C99F89BC3AE350@AM0PR0102MB3443.eurprd01.prod.exchangelabs.com>
Message-ID: <CABtg=Kk0OEZH3+YdaNRKdnV62XU+-cfQ23kzojVapaCJD=T+Bw@mail.gmail.com>

You can define the special dependency of the revdep-checked package in
the `Remotes` field. More info:
https://cran.rstudio.com/web/packages/remotes/vignettes/dependencies.html

E.g. if you are revdep-checking package PKG, then you can add
something like this in the DESCRIPTION file of PKG:
Remotes: local::/path/to/your/package
or if the package is on GitHub:
Remotes: user/repo

Then revdepcheck will automatically install the special version of the
dependency, for the dev version of the revdep-checked package. (But
not for the CRAN version of the package.)

Best,
Gabor

On Mon, Sep 28, 2020 at 6:17 PM Georgi Boshnakov
<georgi.boshnakov at manchester.ac.uk> wrote:
>
> Hi,
>
> I am using package 'revdepcheck' to check reverse dependencies of a package and it works great. But now I have a scenario such that I wish it to use a local version of one of the dependencies of the checked package and am not able to find out how.
>
> Some context: Package A imports package B. Package A has many reverse dependencies. I wish to check if an update to package B will break some of the reverse dependencies of A and/or repair broken reverse dependencies of A. It is obvious to update B on CRAN but this may lead unnecessarily to a number of CRAN updates.
>
>
> Georgi Boshnakov
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From georg|@bo@hn@kov @end|ng |rom m@nche@ter@@c@uk  Mon Sep 28 23:24:09 2020
From: georg|@bo@hn@kov @end|ng |rom m@nche@ter@@c@uk (Georgi Boshnakov)
Date: Mon, 28 Sep 2020 21:24:09 +0000
Subject: [R-pkg-devel] force revdepcheck to use local version of a
 dependency
In-Reply-To: <CABtg=Kk0OEZH3+YdaNRKdnV62XU+-cfQ23kzojVapaCJD=T+Bw@mail.gmail.com>
References: <AM0PR0102MB344316AB62C63A3C99F89BC3AE350@AM0PR0102MB3443.eurprd01.prod.exchangelabs.com>
 <CABtg=Kk0OEZH3+YdaNRKdnV62XU+-cfQ23kzojVapaCJD=T+Bw@mail.gmail.com>
Message-ID: <AM0PR0102MB34431C01E8B7833D12F0B7B6AE350@AM0PR0102MB3443.eurprd01.prod.exchangelabs.com>

Thanks, adding remotes to DESCRIPTION did what I was after. 

For reference (including me), here is an outline of a possible workflow:

1. run revdep_check(), with many reverse dependencies something like  revdep_check(num_workers = 4)
     speeds the things up dramatically. 

2, if there are  failures run   revdep_add_broken() 
     
3. bug-fix

4. run revdep_check() or revdep_check(num_workers = 4),
     Due to 2. Above, this will run only the checks that failed the previous time. Of course this assumes that the bug-fixes didn't break things that work.

5. repeat 2. - 4. 


Georgi Boshnakov
   





-----Original Message-----
From: G?bor Cs?rdi <csardi.gabor at gmail.com> 
Sent: 28 September 2020 18:46
To: Georgi Boshnakov <georgi.boshnakov at manchester.ac.uk>
Cc: r-package-devel at r-project.org
Subject: Re: [R-pkg-devel] force revdepcheck to use local version of a dependency

You can define the special dependency of the revdep-checked package in the `Remotes` field. More info:
https://cran.rstudio.com/web/packages/remotes/vignettes/dependencies.html

E.g. if you are revdep-checking package PKG, then you can add something like this in the DESCRIPTION file of PKG:
Remotes: local::/path/to/your/package
or if the package is on GitHub:
Remotes: user/repo

Then revdepcheck will automatically install the special version of the dependency, for the dev version of the revdep-checked package. (But not for the CRAN version of the package.)

Best,
Gabor

On Mon, Sep 28, 2020 at 6:17 PM Georgi Boshnakov <georgi.boshnakov at manchester.ac.uk> wrote:
>
> Hi,
>
> I am using package 'revdepcheck' to check reverse dependencies of a package and it works great. But now I have a scenario such that I wish it to use a local version of one of the dependencies of the checked package and am not able to find out how.
>
> Some context: Package A imports package B. Package A has many reverse dependencies. I wish to check if an update to package B will break some of the reverse dependencies of A and/or repair broken reverse dependencies of A. It is obvious to update B on CRAN but this may lead unnecessarily to a number of CRAN updates.
>
>
> Georgi Boshnakov
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list 
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Mon Sep 28 23:34:57 2020
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Mon, 28 Sep 2020 23:34:57 +0200
Subject: [R-pkg-devel] A note from CRAN package check
In-Reply-To: <6d9926cd-6b4a-2cf3-7c76-ad6c78fdd305@gmail.com>
References: <CANZ1ACO4X7Vi4YmsWu-QvMGCwLVnL6d1KxLD3OrfR8ugumwFEw@mail.gmail.com>
 <6d9926cd-6b4a-2cf3-7c76-ad6c78fdd305@gmail.com>
Message-ID: <3340c91f-97b1-0507-d87b-0d4a1dbddde1@statistik.tu-dortmund.de>

Indeed, in this case, the CRAN team will let is pass anyway.

Best,
Uwe Ligges

On 28.09.2020 18:41, Duncan Murdoch wrote:
> On 28/09/2020 11:10 a.m., Yicheng Yang wrote:
>> Dear all,
>>
>> I notice that there is a note from CRAN package check results for our
>> package as follows:
>>
>> Version: 1.4.1
>> Check: installed package size
>> Result: NOTE
>> ????? installed size is 5.3Mb
>> ????? sub-directories of 1Mb or more:
>> ????? libs 5.2Mb
>>
>> The link to our package is here:
>> https://cran.r-project.org/web/packages/FHDI/index.html
>>
>> So I know the problem is that our package exceeds the maximum size of 
>> 5MB.
>> But I don't understand where we can trim our package to meet
>> this requirement. We can not modify the source codes (C++ file and R 
>> files)
>> because we may lose some functionalities of the package. Do we have to 
>> trim
>> R documents? Any suggestions?
> 
> Reducing documents isn't going to be enough:? most of the problem is in 
> libs.
> 
> You should investigate whether the libs you need are provided by other 
> packages, or (if you wrote them yourself), whether it's really true that 
> you can't shrink them.
> 
> You could consider splitting your package into two packages, if there 
> are several libs.
> 
> You could try to explain to CRAN why you need to use all that space. 
> There are packages on CRAN that exceed the 5Mb limit.
> 
> Finally, you could choose to distribute your package in some other way 
> besides CRAN.
> 
> Duncan Murdoch
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From y|cheng @end|ng |rom |@@t@te@edu  Tue Sep 29 00:38:14 2020
From: y|cheng @end|ng |rom |@@t@te@edu (Yicheng Yang)
Date: Mon, 28 Sep 2020 17:38:14 -0500
Subject: [R-pkg-devel] A note from CRAN package check
In-Reply-To: <3340c91f-97b1-0507-d87b-0d4a1dbddde1@statistik.tu-dortmund.de>
References: <CANZ1ACO4X7Vi4YmsWu-QvMGCwLVnL6d1KxLD3OrfR8ugumwFEw@mail.gmail.com>
 <6d9926cd-6b4a-2cf3-7c76-ad6c78fdd305@gmail.com>
 <3340c91f-97b1-0507-d87b-0d4a1dbddde1@statistik.tu-dortmund.de>
Message-ID: <CANZ1ACM+r4KzEn7pwVSrkSrQakG0SG=O6hNTP3Uja69xZ2OF6A@mail.gmail.com>

Dear Uwe and Duncan,

Thanks a lot for your patient explanations. Because this problem is not an
urgent error now, we will try to minimize the libs in our package regarding
your suggestions in the next updates for other reasons. If we still can not
meet this requirement of package size in the next update, we may try to
explain to the CRAN team why we actually need this space as you suggested.
Have a nice day.

Best regards,
Yicheng Yang


On Mon, Sep 28, 2020 at 4:34 PM Uwe Ligges <ligges at statistik.tu-dortmund.de>
wrote:

> Indeed, in this case, the CRAN team will let is pass anyway.
>
> Best,
> Uwe Ligges
>
> On 28.09.2020 18:41, Duncan Murdoch wrote:
> > On 28/09/2020 11:10 a.m., Yicheng Yang wrote:
> >> Dear all,
> >>
> >> I notice that there is a note from CRAN package check results for our
> >> package as follows:
> >>
> >> Version: 1.4.1
> >> Check: installed package size
> >> Result: NOTE
> >>       installed size is 5.3Mb
> >>       sub-directories of 1Mb or more:
> >>       libs 5.2Mb
> >>
> >> The link to our package is here:
> >> https://cran.r-project.org/web/packages/FHDI/index.html
> >>
> >> So I know the problem is that our package exceeds the maximum size of
> >> 5MB.
> >> But I don't understand where we can trim our package to meet
> >> this requirement. We can not modify the source codes (C++ file and R
> >> files)
> >> because we may lose some functionalities of the package. Do we have to
> >> trim
> >> R documents? Any suggestions?
> >
> > Reducing documents isn't going to be enough:  most of the problem is in
> > libs.
> >
> > You should investigate whether the libs you need are provided by other
> > packages, or (if you wrote them yourself), whether it's really true that
> > you can't shrink them.
> >
> > You could consider splitting your package into two packages, if there
> > are several libs.
> >
> > You could try to explain to CRAN why you need to use all that space.
> > There are packages on CRAN that exceed the 5Mb limit.
> >
> > Finally, you could choose to distribute your package in some other way
> > besides CRAN.
> >
> > Duncan Murdoch
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From conver@eg @end|ng |rom gm@||@com  Tue Sep 29 18:06:27 2020
From: conver@eg @end|ng |rom gm@||@com (Geoff Converse)
Date: Tue, 29 Sep 2020 11:06:27 -0500
Subject: [R-pkg-devel] Automatic check errors
Message-ID: <CAO2Ag_uhR+bGPMU1jVTyGaGn54eO1a5noTCHe9hB3AZvwXrOzQ@mail.gmail.com>

Hello,

I am trying to submit a package to CRAN, but it failed the auto checks at
win-builder.r-project.org with errors that I do not know how to fix. My
package uses Tensorflow for R, which in turn requires a Python installation
of Tensorflow. I am unsure of how to get R / reticulate to find the Python
installations on other machines. Here are the two errors I get:

*Debian*:

Error: Installation of TensorFlow not found.
Python environments searched for 'tensorflow' package:
 /usr/bin/python3.8
You can install TensorFlow using the install_tensorflow() function.

It seems best to avoid using the "install_tensorflow()" function, and I
have followed the instructions at
https://cran.r-project.org/web/packages/reticulate/vignettes/python_dependencies.html
including making changes to the DESCRIPTION file and .onLoad function, but
to no avail.

*Windows*:

Error in python_config(miniconda_python, NULL, miniconda_python) :
  Error 2 occurred running
C:/Users/ligges/AppData/Local/r-miniconda/envs/r-reticulate/python.exe

I am not familiar with reticulate, and do not know what "Error 2" refers
to. This error occurs every time a test tries to use "tensorflow::" or
"keras::". I would be very grateful if someone could help me solve this
issue.

Thank you!
Geoff Converse

	[[alternative HTML version deleted]]


