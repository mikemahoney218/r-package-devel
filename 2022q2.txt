From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Fri Apr  1 00:49:19 2022
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Fri, 1 Apr 2022 00:49:19 +0200
Subject: [R-pkg-devel] 
 "Setting LC_CTYPE=en_US.UTF-8" failed and "qpdf28.dll
 was not found" on Win 10
In-Reply-To: <f6aaf5e9-466b-c43b-f4a8-4828e25a3488@effectivedefense.org>
References: <1fbf0809-9e2f-448d-3809-5883ddfb94f9@effectivedefense.org>
 <20220331093934.51b68e24@Tarkus>
 <13e5ac7d-e559-90f1-3d5e-c5a0e212565b@gmail.com>
 <f6aaf5e9-466b-c43b-f4a8-4828e25a3488@effectivedefense.org>
Message-ID: <2d80665e-87c7-70b4-ea15-b466251ef62b@statistik.tu-dortmund.de>

Spencer, the suggestion are for chcks with R-4.2.0 alpha, for R-4.1.3 
the older toolchain is needed (but if no compiled code is used it may be 
fine to use the new one).

But then your qpdf is really in the Windows system32 directoy as 
suggested by
"C:\Windows\System32\qpdf_bin\qpdf.exe"
? I guess this is not the one from the new toolchain?


Best,
Uwe



On 31.03.2022 23:58, Spencer Graves wrote:
> Hi, Tomas and Ivan:
> 
> 
> On 3/31/22 1:52 AM, Tomas Kalibera wrote:
>>
>> On 3/31/22 08:39, Ivan Krylov wrote:
>>> On Wed, 30 Mar 2022 16:46:52 -0500
>>> Spencer Graves <spencer.graves at effectivedefense.org> wrote:
>>>
>>>> I'm getting different errors with MINGW64 and "Git CMD" under Windows
>>>> 10
>>> All these shortcuts do is launch cmd.exe or bash, optionally after
>>> setting %PATH%, optionally in a non-standard terminal application.
>>> Evidently, something in the %PATH% set by the shortcuts conflicts with
>>> the R CMD check process.
>>>
>>> For a package that doesn't have any compiled code, there should be no
>>> need for these tricks. Just start cmd.exe (for example, using Win+R,
>>> "cmd", Enter), navigate to your package and run something like
>>> "C:\Program Files\R-version\bin\R.exe" CMD check sos_2.1-4.tar.gz.
>>>
>>> If you're still having problems, try editing your %PATH% and trimming
>>> anything you don't need from there.
>>>
>>> If you're sure you need a special shortcut to launch a command line to
>>> check your package in, try installing Rtools and performing checks from
>>> "Rtools bash".
>>
>> With Rtools42, you don't need to run the Rtools bash, either, to check 
>> packages. You can use cmd.exe (or any other console/shell) or you can 
>> run the checks from R? (e.g. via tools::Rcmd). This has more details 
>> for R 4.2 with Rtools42 (but the same applies to R-devel):
>>
>> https://cran.r-project.org/bin/windows/base/howto-R-4.2.html
>>
>> With Rtools40 and R 4.0-4.1, this is almost the same but you need to 
>> adjust PATH in the running session of R (see 6.3.1 in R admin manual 
>> for the respective R release).
>>
>> Best
>> Tomas
> 
> Thanks.? On March 29, I upgraded to the latest version of R, RStudio 
> (free version), and installed rtools4.2.? I now have "Rtools", 
> "rtools40" and "rtools42" installed in the "C:\" root directory.? In a 
> terminal, I got "path", and noted that it does NOT contain anything 
> matching "rtools".
> 
> 
> After reviewing "howto-R-4.3.html", I ran "tools::Rcmd('check 
> sos_2.1-4.tar.gz')" as suggested there, with results given below.? I 
> have the sos package installed in "~Documents\R\sos\sos".? I have an R 
> project in "~Documents\R\sos", and I used devtools::load_all('sos') to 
> get RStudio to recognize the package.? With that, I pressed "Install and 
> Restart" and then "Check", and got seemingly the same results as 
> recorded below.
> 
> 
>  ????? What do you think?
>  ????? Thanks for the help.
>  ????? Spencer Graves
> 
> p.s.? On my Mac, "R CMD check sos_2.1-4.tar.gz" works fine, as does the 
> check process from within RStudio.? Something's wrong in my setup on my 
> Windows machine.
> 
> 
> tools::Rcmd('check sos_2.1-4.tar.gz')
> 
>  > tools::Rcmd('check sos_2.1-4.tar.gz')
> * using log directory 'C:/Users/spenc/Documents/R/sos/sos.Rcheck'
> * using R version 4.1.3 (2022-03-10)
> * using platform: x86_64-w64-mingw32 (64-bit)
> * using session charset: ISO8859-1
> * checking for file 'sos/DESCRIPTION' ... OK
> * this is package 'sos' version '2.1-4'
> * checking package namespace information ... OK
> * checking package dependencies ... OK
> * checking if this is a source package ... OK
> * checking if there is a namespace ... OK
> * checking for executable files ... OK
> * checking for hidden files and directories ... OK
> * checking for portable file names ... OK
> * checking whether package 'sos' can be installed ... OK
> * checking installed package size ... OK
> * checking package directory ... OK
> * checking 'build' directory ... OK
> * checking DESCRIPTION meta-information ... OK
> * checking top-level files ... OK
> * checking for left-over files ... OK
> * checking index information ... OK
> * checking package subdirectories ... OK
> * checking R files for non-ASCII characters ... OK
> * checking R files for syntax errors ... OK
> * checking whether the package can be loaded ... OK
> * checking whether the package can be loaded with stated dependencies 
> ... OK
> * checking whether the package can be unloaded cleanly ... OK
> * checking whether the namespace can be loaded with stated dependencies 
> ... OK
> * checking whether the namespace can be unloaded cleanly ... OK
> * checking dependencies in R code ... OK
> * checking S3 generic/method consistency ... OK
> * checking replacement functions ... OK
> * checking foreign function calls ... OK
> * checking R code for possible problems ... OK
> * checking Rd files ... OK
> * checking Rd metadata ... OK
> * checking Rd cross-references ... OK
> * checking for missing documentation entries ... OK
> * checking for code/documentation mismatches ... OK
> * checking Rd \usage sections ... OK
> * checking Rd contents ... OK
> * checking for unstated dependencies in examples ... OK
> * checking sizes of PDF files under 'inst/doc' ...Warning in 
> system2(qpdf, "--version", TRUE) :
>  ? running command '"C:\Windows\System32\qpdf_bin\qpdf.exe" --version' 
> had status 309
> Error: invalid version specification 'NA'
> Execution halted
> 
> 
> R version 4.1.3 (2022-03-10)
> Platform: x86_64-w64-mingw32/x64 (64-bit)
> Running under: Windows 10 x64 (build 19043)
> 
> Matrix products: default
> 
> locale:
> [1] LC_COLLATE=English_United States.1252
> [2] LC_CTYPE=English_United States.1252
> [3] LC_MONETARY=English_United States.1252
> [4] LC_NUMERIC=C
> [5] LC_TIME=English_United States.1252
> 
> attached base packages:
> [1] stats???? graphics? grDevices utils???? datasets
> [6] methods?? base
> 
> other attached packages:
> [1] sos_2.1-4? brew_1.0-7
> 
> loaded via a namespace (and not attached):
> [1] compiler_4.1.3 tools_4.1.3
> 
>>
>>>
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From ||@t@ @end|ng |rom dewey@myzen@co@uk  Fri Apr  1 11:59:57 2022
From: ||@t@ @end|ng |rom dewey@myzen@co@uk (Michael Dewey)
Date: Fri, 1 Apr 2022 10:59:57 +0100
Subject: [R-pkg-devel] 
 "Setting LC_CTYPE=en_US.UTF-8" failed and "qpdf28.dll
 was not found" on Win 10
In-Reply-To: <f6aaf5e9-466b-c43b-f4a8-4828e25a3488@effectivedefense.org>
References: <1fbf0809-9e2f-448d-3809-5883ddfb94f9@effectivedefense.org>
 <20220331093934.51b68e24@Tarkus>
 <13e5ac7d-e559-90f1-3d5e-c5a0e212565b@gmail.com>
 <f6aaf5e9-466b-c43b-f4a8-4828e25a3488@effectivedefense.org>
Message-ID: <6bb5d84b-cf4f-1923-60fd-b54a3e327b46@dewey.myzen.co.uk>

Dear Spencer

If I understand correctly your package sos does not have compiled code 
so as someone suggested earlier you do not need Rtools at all. The only 
drawback is that when I check my packages I get a note that it cannot 
find qpdf but they all pass checks on CRAN (which obviously does have qpdf).

Michael

On 31/03/2022 22:58, Spencer Graves wrote:
> Hi, Tomas and Ivan:
> 
> 
> On 3/31/22 1:52 AM, Tomas Kalibera wrote:
>>
>> On 3/31/22 08:39, Ivan Krylov wrote:
>>> On Wed, 30 Mar 2022 16:46:52 -0500
>>> Spencer Graves <spencer.graves at effectivedefense.org> wrote:
>>>
>>>> I'm getting different errors with MINGW64 and "Git CMD" under Windows
>>>> 10
>>> All these shortcuts do is launch cmd.exe or bash, optionally after
>>> setting %PATH%, optionally in a non-standard terminal application.
>>> Evidently, something in the %PATH% set by the shortcuts conflicts with
>>> the R CMD check process.
>>>
>>> For a package that doesn't have any compiled code, there should be no
>>> need for these tricks. Just start cmd.exe (for example, using Win+R,
>>> "cmd", Enter), navigate to your package and run something like
>>> "C:\Program Files\R-version\bin\R.exe" CMD check sos_2.1-4.tar.gz.
>>>
>>> If you're still having problems, try editing your %PATH% and trimming
>>> anything you don't need from there.
>>>
>>> If you're sure you need a special shortcut to launch a command line to
>>> check your package in, try installing Rtools and performing checks from
>>> "Rtools bash".
>>
>> With Rtools42, you don't need to run the Rtools bash, either, to check 
>> packages. You can use cmd.exe (or any other console/shell) or you can 
>> run the checks from R? (e.g. via tools::Rcmd). This has more details 
>> for R 4.2 with Rtools42 (but the same applies to R-devel):
>>
>> https://cran.r-project.org/bin/windows/base/howto-R-4.2.html
>>
>> With Rtools40 and R 4.0-4.1, this is almost the same but you need to 
>> adjust PATH in the running session of R (see 6.3.1 in R admin manual 
>> for the respective R release).
>>
>> Best
>> Tomas
> 
> Thanks.? On March 29, I upgraded to the latest version of R, RStudio 
> (free version), and installed rtools4.2.? I now have "Rtools", 
> "rtools40" and "rtools42" installed in the "C:\" root directory.? In a 
> terminal, I got "path", and noted that it does NOT contain anything 
> matching "rtools".
> 
> 
> After reviewing "howto-R-4.3.html", I ran "tools::Rcmd('check 
> sos_2.1-4.tar.gz')" as suggested there, with results given below.? I 
> have the sos package installed in "~Documents\R\sos\sos".? I have an R 
> project in "~Documents\R\sos", and I used devtools::load_all('sos') to 
> get RStudio to recognize the package.? With that, I pressed "Install and 
> Restart" and then "Check", and got seemingly the same results as 
> recorded below.
> 
> 
>  ????? What do you think?
>  ????? Thanks for the help.
>  ????? Spencer Graves
> 
> p.s.? On my Mac, "R CMD check sos_2.1-4.tar.gz" works fine, as does the 
> check process from within RStudio.? Something's wrong in my setup on my 
> Windows machine.
> 
> 
> tools::Rcmd('check sos_2.1-4.tar.gz')
> 
>  > tools::Rcmd('check sos_2.1-4.tar.gz')
> * using log directory 'C:/Users/spenc/Documents/R/sos/sos.Rcheck'
> * using R version 4.1.3 (2022-03-10)
> * using platform: x86_64-w64-mingw32 (64-bit)
> * using session charset: ISO8859-1
> * checking for file 'sos/DESCRIPTION' ... OK
> * this is package 'sos' version '2.1-4'
> * checking package namespace information ... OK
> * checking package dependencies ... OK
> * checking if this is a source package ... OK
> * checking if there is a namespace ... OK
> * checking for executable files ... OK
> * checking for hidden files and directories ... OK
> * checking for portable file names ... OK
> * checking whether package 'sos' can be installed ... OK
> * checking installed package size ... OK
> * checking package directory ... OK
> * checking 'build' directory ... OK
> * checking DESCRIPTION meta-information ... OK
> * checking top-level files ... OK
> * checking for left-over files ... OK
> * checking index information ... OK
> * checking package subdirectories ... OK
> * checking R files for non-ASCII characters ... OK
> * checking R files for syntax errors ... OK
> * checking whether the package can be loaded ... OK
> * checking whether the package can be loaded with stated dependencies 
> ... OK
> * checking whether the package can be unloaded cleanly ... OK
> * checking whether the namespace can be loaded with stated dependencies 
> ... OK
> * checking whether the namespace can be unloaded cleanly ... OK
> * checking dependencies in R code ... OK
> * checking S3 generic/method consistency ... OK
> * checking replacement functions ... OK
> * checking foreign function calls ... OK
> * checking R code for possible problems ... OK
> * checking Rd files ... OK
> * checking Rd metadata ... OK
> * checking Rd cross-references ... OK
> * checking for missing documentation entries ... OK
> * checking for code/documentation mismatches ... OK
> * checking Rd \usage sections ... OK
> * checking Rd contents ... OK
> * checking for unstated dependencies in examples ... OK
> * checking sizes of PDF files under 'inst/doc' ...Warning in 
> system2(qpdf, "--version", TRUE) :
>  ? running command '"C:\Windows\System32\qpdf_bin\qpdf.exe" --version' 
> had status 309
> Error: invalid version specification 'NA'
> Execution halted
> 
> 
> R version 4.1.3 (2022-03-10)
> Platform: x86_64-w64-mingw32/x64 (64-bit)
> Running under: Windows 10 x64 (build 19043)
> 
> Matrix products: default
> 
> locale:
> [1] LC_COLLATE=English_United States.1252
> [2] LC_CTYPE=English_United States.1252
> [3] LC_MONETARY=English_United States.1252
> [4] LC_NUMERIC=C
> [5] LC_TIME=English_United States.1252
> 
> attached base packages:
> [1] stats???? graphics? grDevices utils???? datasets
> [6] methods?? base
> 
> other attached packages:
> [1] sos_2.1-4? brew_1.0-7
> 
> loaded via a namespace (and not attached):
> [1] compiler_4.1.3 tools_4.1.3
> 
>>
>>>
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 

-- 
Michael
http://www.dewey.myzen.co.uk/home.html


From m@pjg @end|ng |rom br|@to|@@c@uk  Fri Apr  1 17:46:51 2022
From: m@pjg @end|ng |rom br|@to|@@c@uk (Peter Green)
Date: Fri, 1 Apr 2022 16:46:51 +0100
Subject: [R-pkg-devel] Obscure-to-me parallel make issue
Message-ID: <8d05c5f1-1be0-f20e-45a3-747c015ffc2b@bristol.ac.uk>

I am having persistent but difficult-to-reproduce compilation errors for 
some CRAN tests on my package Nmix. These may be instances of the 
'parallel make' problem. A typical error message is
---
 ?? 30 |???????? use f2cio
 ????? |???????????????? 1
Fatal Error: Cannot open module file ?f2cio.mod? for reading at (1): No 
such file or directory
---

Apart from Nmix_init.c, my src directory has 8 source files:
---
.f : Nmix-sub3z, Nmix-aux, pnorm, rgamma, RNGfns
.c: wrapper.c
.f90: fef2cio, f2cio (each defining modules of the same name)
---

The dependency structure among them is summarised by:
---
Nmix-sub3z.f
 ?? ?calls pnorm.f rgamma.f Nmix-aux.f RNGfns.f
 ?? ?uses??? fef2cio.mod f2cio.mod
fef2cio.f90
 ?? ?uses? f2cio.mod
Nmix-aux.f
 ?? ?calls rgamma.f RNGfns.f
pnorm.f
 ?? ?calls RNGfns.f
rgamma.f
 ?? ?calls RNGfns.f
RNGfns.f
 ?? ?calls wrapper.c
---

My Makevars is:
---
C_OBJS = wrapper.o Nmix_init.o
FT_OBJS = Nmix-aux.o Nmix-sub3z.o RNGfns.o f2cio.o fef2cio.o pnorm.o 
rgamma2.o
all: $(SHLIB) clean
$(SHLIB): $(FT_OBJS) $(C_OBJS)
f2cio.mod: f2cio.o
fef2cio.mod: fef2cio.o f2cio.o
Nmix-sub3z.o: f2cio.mod fef2cio.mod
clean:
 ??? @rm -rf *.mod *.o
---

What dependency am I failing to capture? Or is there some other fault in 
the Makevars? Any clues welcome!

Peter Green



From tom@@@k@||ber@ @end|ng |rom gm@||@com  Fri Apr  1 18:09:29 2022
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Fri, 1 Apr 2022 18:09:29 +0200
Subject: [R-pkg-devel] Obscure-to-me parallel make issue
In-Reply-To: <8d05c5f1-1be0-f20e-45a3-747c015ffc2b@bristol.ac.uk>
References: <8d05c5f1-1be0-f20e-45a3-747c015ffc2b@bristol.ac.uk>
Message-ID: <c31ef7d5-4d24-778c-2577-a9489f91bcea@gmail.com>


On 4/1/22 17:46, Peter Green wrote:
> I am having persistent but difficult-to-reproduce compilation errors 
> for some CRAN tests on my package Nmix. These may be instances of the 
> 'parallel make' problem. A typical error message is
> ---
> ?? 30 |???????? use f2cio
> ????? |???????????????? 1
> Fatal Error: Cannot open module file ?f2cio.mod? for reading at (1): 
> No such file or directory
> ---
>
> Apart from Nmix_init.c, my src directory has 8 source files:
> ---
> .f : Nmix-sub3z, Nmix-aux, pnorm, rgamma, RNGfns
> .c: wrapper.c
> .f90: fef2cio, f2cio (each defining modules of the same name)
> ---
>
> The dependency structure among them is summarised by:
> ---
> Nmix-sub3z.f
> ?? ?calls pnorm.f rgamma.f Nmix-aux.f RNGfns.f
> ?? ?uses??? fef2cio.mod f2cio.mod
> fef2cio.f90
> ?? ?uses? f2cio.mod
> Nmix-aux.f
> ?? ?calls rgamma.f RNGfns.f
> pnorm.f
> ?? ?calls RNGfns.f
> rgamma.f
> ?? ?calls RNGfns.f
> RNGfns.f
> ?? ?calls wrapper.c
> ---
>
> My Makevars is:
> ---
> C_OBJS = wrapper.o Nmix_init.o
> FT_OBJS = Nmix-aux.o Nmix-sub3z.o RNGfns.o f2cio.o fef2cio.o pnorm.o 
> rgamma2.o
> all: $(SHLIB) clean
> $(SHLIB): $(FT_OBJS) $(C_OBJS)
> f2cio.mod: f2cio.o
> fef2cio.mod: fef2cio.o f2cio.o
> Nmix-sub3z.o: f2cio.mod fef2cio.mod
> clean:
> ??? @rm -rf *.mod *.o
> ---
>
> What dependency am I failing to capture? Or is there some other fault 
> in the Makevars? Any clues welcome!

Maybe that fef2cio.o depends on f2cio.mod

make -d might be useful for finding out what is make doing and why.

It might be easier to debug via an incremental serial build - once the 
build succeeds (e.g. by coincidence), touch specific files and run 
"make" again to see if things that should be rebuilt actually are.

Tomas

>
> Peter Green
>
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From kry|ov@r00t @end|ng |rom gm@||@com  Fri Apr  1 18:36:12 2022
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Fri, 1 Apr 2022 19:36:12 +0300
Subject: [R-pkg-devel] Obscure-to-me parallel make issue
In-Reply-To: <8d05c5f1-1be0-f20e-45a3-747c015ffc2b@bristol.ac.uk>
References: <8d05c5f1-1be0-f20e-45a3-747c015ffc2b@bristol.ac.uk>
Message-ID: <20220401193612.613a56e3@arachnoid>

On Fri, 1 Apr 2022 16:46:51 +0100
Peter Green <mapjg at bristol.ac.uk> wrote:

> f2cio.mod: f2cio.o
> fef2cio.mod: fef2cio.o f2cio.o
> Nmix-sub3z.o: f2cio.mod fef2cio.mod

What rule does Make use for the f2cio.o -> f2cio.mod transition? GNU
Make could have a built-in rule for .mod files and get confused thinking
it has a circular dependency:

Nmix/src$ make -n Nmix-sub3z.o -f Makevars
make: Circular f2cio.o <- f2cio.mod dependency dropped.
m2c    -o f2cio.o
make: Circular fef2cio.o <- fef2cio.mod dependency dropped.
m2c    -o fef2cio.o
f77   -c -o Nmix-sub3z.o Nmix-sub3z.f

In my experience, it can be easier to express the Fortran module
dependencies by lying to Make and telling it that the .o file depends
on the .o file corresponding to the .mod file, not the .mod file
itself. This way, the dependent rule shouldn't be started until the
parent rule is finished producing both files.

If you have a quick way of reproducing the problem, does it help to use

Nmix-sub3z.o: f2cio.o fef2cio.o

in your dependencies and avoid mentioning *.mod at all?

-- 
Best regards,
Ivan


From edd @end|ng |rom deb|@n@org  Mon Apr  4 20:46:49 2022
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Mon, 4 Apr 2022 13:46:49 -0500
Subject: [R-pkg-devel] Preparing for R 4.2.0 and UCRT via MXE builds
Message-ID: <25163.15641.715595.766989@rob.eddelbuettel.com>


Is anybody else looking into trying to come to terms with MXE for
cross-compiling for UCRT for R 4.2.0 and its updated Windows toolchain?  I
have been bugging Tomas in private email for a bit and figured it might be
useful to spread the load a little.

Is anybody else looking into this?  Any interest in pooling resources around
some virtual meeting place? New mailing list? Or an ad-hoc slack (or channel
on existing one)?

Dirk

PS My current status:
- MXE installed on Ubuntu as cross-compilation. Pretty straightforward.
- One initial test build (using cmake) failed:
     fatal error: Windows.h: No such file or directory
- Another of a known cmake-using library (nlopt) succeeded. Good. 

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From m@tth|@@-gond@n @end|ng |rom gmx@de  Mon Apr  4 21:05:12 2022
From: m@tth|@@-gond@n @end|ng |rom gmx@de (matthias-gondan)
Date: Mon, 04 Apr 2022 21:05:12 +0200
Subject: [R-pkg-devel] Preparing for R 4.2.0 and UCRT via MXE builds
In-Reply-To: <25163.15641.715595.766989@rob.eddelbuettel.com>
Message-ID: <1MZTmY-1nXadl3z6c-00WXR3@mail.gmx.net>

Still compiling... but when it is done, I might also need some advice. I don't mind if mxe help is given on this mailing list.Best wishesMatthias?
-------- Urspr?ngliche Nachricht --------Von: Dirk Eddelbuettel <edd at debian.org> Datum: 04.04.22  20:47  (GMT+01:00) An: r-package-devel at r-project.org Betreff: [R-pkg-devel] Preparing for R 4.2.0 and UCRT via MXE builds Is anybody else looking into trying to come to terms with MXE forcross-compiling for UCRT for R 4.2.0 and its updated Windows toolchain?? Ihave been bugging Tomas in private email for a bit and figured it might beuseful to spread the load a little.Is anybody else looking into this?? Any interest in pooling resources aroundsome virtual meeting place? New mailing list? Or an ad-hoc slack (or channelon existing one)?DirkPS My current status:- MXE installed on Ubuntu as cross-compilation. Pretty straightforward.- One initial test build (using cmake) failed:???? fatal error: Windows.h: No such file or directory- Another of a known cmake-using library (nlopt) succeeded. Good. -- dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org______________________________________________R-package-devel@r-project.org mailing listhttps://stat.ethz.ch/mailman/listinfo/r-package-devel
	[[alternative HTML version deleted]]


