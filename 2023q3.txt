From obr|@o||@u @end|ng |rom gm@||@com  Sat Jul  1 07:58:05 2023
From: obr|@o||@u @end|ng |rom gm@||@com (obrl soil)
Date: Sat, 1 Jul 2023 05:58:05 +0000
Subject: [R-pkg-devel] How to request for an Non Maintainer update - NMU
In-Reply-To: <ME3PR01MB7944B16B926E4A1700E2ECCCD452A@ME3PR01MB7944.ausprd01.prod.outlook.com>
References: <ME3PR01MB7944B16B926E4A1700E2ECCCD452A@ME3PR01MB7944.ausprd01.prod.outlook.com>
Message-ID: <DB4PR05MB1055933A638174C5584A8D2B9FC2BA@DB4PR05MB10559.eurprd05.prod.outlook.com>

Hi,

A note for the list, since this may pop up again: ggtern is not abandoned, and is back on CRAN. The active development repo is on bitbucket at https://bitbucket.org/nicholasehamilton/ggtern/src/master/ 

There is also a github repo https://github.com/nicholasehamilton/ggtern that is not active, but does get pinged regularly because its not been made clear that development is ongoing elsewhere. The package DESCRIPTION URL field points to http://www.ggtern.com/, but its not obvious where the active repo is until you navigate to http://www.ggtern.com/docs/ and look at the dev url quoted. 

I wonder if it should be CRAN policy that the DESCRIPTION URL points only to an active repo, but I imagine there would be a significant policing burden associated with such a change.

L

From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Bernd.Gruber <Bernd.Gruber at canberra.edu.au>
Sent: Tuesday, June 6, 2023 6:04 PM
To: r-package-devel at r-project.org <r-package-devel at r-project.org>
Subject: [R-pkg-devel] How to request for an Non Maintainer update - NMU 
?
Hi everyone,

I am the maintainer of a package (dartR) that depends on ggtern (a package that seems not to be maintained anymore).
Currently the package was removed from CRAN (about 4 weeks ago) due to a simple error, which can be easily fixed. This was kindly achieved by Roger Bivand (simply the remove of a backslash does the trick).

In an github exchange he also suggested to have an non maintainer update (NMU) for the package in the short term (and find a replacement of orphan the package and find a new maintainer in the long term).

Here is my first question as I did not find an answer googling it.

How can I ask, request for an NMU? Would I simply write to CRAN and describe the situation and send the files that need to be replaced?

The second question is, how I would request to orphan the package and what is the procedure to find a new maintainer (as it relies on ggplot code and this is not really my strength, hence I would try to find someone else to take over).

Thanks a lot, Bernd



==============================================================================
Dr Bernd Gruber????????????????????????????????????????????? )/_
???????????????????????????????????????????????????????? _.--..---"-,--c_
Professor Ecological Modelling????????????????????? \|..'?????????? ._O__)_
Tel: (02) 6206 3804???????????????????????? ,=.??? _.+?? _ \..--( /
Fax: (02) 6201 2328?????????????????????????? \\.-''_.-' \ (???? \_
Institute for Applied Ecology????????????????? `'''?????? `\__?? /\
Faculty of Science and Technology????????????????????????? ')
University of Canberra?? ACT 2601 AUSTRALIA
Email: bernd.gruber at canberra.edu.au<mailto:bernd.gruber at canberra.edu.au>
WWW: bernd-gruber<https://researchprofiles.canberra.edu.au/en/persons/bernd-gruber>

Australian Government Higher Education Provider Number CRICOS #00212K
NOTICE & DISCLAIMER: This email and any files transmitted with it may contain
confidential or copyright material and are for the attention of the addressee
only. If you have received this email in error please notify us by email
reply and delete it from your system. The University of Canberra accepts
no liability for any damage caused by any virus transmitted by this email.
==============================================================================

[UC Logo]<http://www.canberra.edu.au>

[Research Festival,5-8 June 2023]<https://www.canberra.edu.au/about-uc/events/research-festival/research-festival-2023>



The Ngunnawal people are the Traditional Custodians of the ACT where UC's Bruce Campus is situated and are an integral and celebrated part of UC's culture. We also acknowledge other First Nations Peoples.

Australian Government Higher Education Registered Provider (CRICOS) #00212K. TEQSA Provider ID: PRV12003 (Australian University)
Email Disclaimer<https://www.canberra.edu.au/about-uc/disclaimer-copyright-privacy-accessibility>

[UC Facebook]<https://www.facebook.com/UniversityOfCanberra>??? [UC Twitter] <https://twitter.com/UniCanberra>???? [UC Instagram] <https://www.instagram.com/unicanberra/>???? [UC Linkedin] <https://au.linkedin.com/school/university-of-canberra/>???? [UC Youtube] <https://www.youtube.com/user/uniofcanberra>???? [University of Canberra] <http://www.canberra.edu.au>

??????? [[alternative HTML version deleted]]

______________________________________________
R-package-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel

From kry|ov@r00t @end|ng |rom gm@||@com  Sat Jul  1 21:00:06 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Sat, 1 Jul 2023 22:00:06 +0300
Subject: [R-pkg-devel] New R CMD check warnings for html files
In-Reply-To: <CAEO2ku+=nGbp2KqJNyXPPzFmo1nWGR7ePDL83cfC4AYm-WzK7Q@mail.gmail.com>
References: <CAEO2ku+=nGbp2KqJNyXPPzFmo1nWGR7ePDL83cfC4AYm-WzK7Q@mail.gmail.com>
Message-ID: <20230701220006.1ac80104@parabola>

? Fri, 30 Jun 2023 14:20:00 -0700
arilamstein at gmail.com ?????:

> However, when I run R CMD check I now get a ton of warnings in what I
> assume is the conversion of the man files from .Rd to .html files. I
> assume that CRAN will reject the package due to the warnings.
> However, I don't really understand the warnings, or why they are
> occurring now (they did not happen before).

roxygen2-7.2.3 seems to produce a lot of warnings on your source files.
I don't have a lot of experience with roxygen2, but they may be part of
the problem:

>> 38: [county.R:5] Undocumented R6 methods: initialize and clip
>> 39: [county.R:5] Undocumented R6 field: add_state_outline
>> 40: [county.R:5] Must use one @param for each argument
>> ? $initialize(user.df) is not documented

(and so on for more than 50 warnings... or is it something on my end?)

> The entire file has not changed in 3 years. When I run roxygenize()
> locally the .Rd file does look much (at all?) different than what was
> checked into github year ago

What does `git diff` say after you run roxygenise()? For me, latest
roxygen2 seems to lead to zero HTML warnings and zero Rd changes.

What are your versions of roxygen2 and HTML Tidy? Do you get the HTML
warnings when checking your package on R-hub, Win-Builder, or Mac
Builder?

-- 
Best regards,
Ivan


From chr|@ho|d @end|ng |rom p@yctc@org  Wed Jul  5 10:44:26 2023
From: chr|@ho|d @end|ng |rom p@yctc@org (Chris Evans)
Date: Wed, 5 Jul 2023 09:44:26 +0100
Subject: [R-pkg-devel] Help with a github/Rstudio mess
Message-ID: <fc59ef69-73fd-cb5e-fc96-3e13a5113115@psyctc.org>

I hope this is a legitimate question here.? I have a package of very 
simple functions: https://github.com/cpsyctc/CECPfuns.? For the forseeable
future it's really only to stop me constantly having to rewrite 
functions I use and it is only also used by probably two or three 
colleagues who
also use R and are even less IT/programming/R competent than I am and 
are very happy to use my functions.

I hadn't done any work on it for two years but came back to it yesterday 
and added a function (getCIforQuantiles).? There were warnings about
things that are deprecated now in some of the older functions but 
otherwise things seemed OK.? However, I got a pkgdown error and warning 
after
pushing the updated package to github:

Annotations
1 error and 1 warning
pkgdown
Failed to get R 4.3.1: Failed to get R 4.3.1: Failed to download version 
4.3.1: Error: Unexpected HTTP response: 404
r-lib/actions/setup-r at v1 is deprecated.
r-lib/actions/setup-r at v1 is deprecated. Please update your workflow to 
use the 'v2' version. Also look at the examples at 
https://github.com/r-lib/actions/tree/v2/examples because '@v2' 
workflows are much simpler than 'v1' workflows.

So I tweaked 
https://github.com/cpsyctc/CECPfuns/blob/main/.github/workflows/pkgdown.yaml 
to change
 ?? - uses: r-lib/actions/setup-r at v1
to
 ?? - uses: r-lib/actions/setup-r at v2
rather optimistically hoping that might make the warning go away.

Today I did some work on the new function (trivial, correcting one 
"!is.na(" to the correct "is.na(" !!!).? More importantly, I created the
test-getCIforQuantiles.R file for testthat to test the sanity checks and 
add three simple output checks.

I built the source package locally, committed the changes and tried to 
push the update to github (inside Rstudio) but I get:

 >>> /usr/bin/git push origin HEAD:refs/heads/main
To https://github.com/cpsyctc/CECPfuns.git
 ?! [rejected]??????? HEAD -> main (fetch first)
error: failed to push some refs to 'https://github.com/cpsyctc/CECPfuns.git'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.

OK.? So I try to pull thinking that made sense and that the change to 
pkgdown.yaml on github that I made yesterday is the offending change.

However, when I pull (in Rstudio again) I get this:

 >>> /usr/bin/git pull
fatal: pack has 6 unresolved deltas
fatal: fetch-pack: invalid index-pack output

I have never felt on top of the complexities of git and github but I'm 
clearly way out of my depth.? I am hoping someone here can see what
I need to do to get things back in synch and be able to get back to 
developing the package.

TIA,

Chris

-- 
Chris Evans (he/him)
Visiting Professor, UDLA, Quito, Ecuador & Honorary Professor, 
University of Roehampton, London, UK.
Work web site: https://www.psyctc.org/psyctc/
CORE site: http://www.coresystemtrust.org.uk/
Personal site: https://www.psyctc.org/pelerinage2016/


From murdoch@dunc@n @end|ng |rom gm@||@com  Wed Jul  5 11:03:11 2023
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Wed, 5 Jul 2023 05:03:11 -0400
Subject: [R-pkg-devel] Help with a github/Rstudio mess
In-Reply-To: <fc59ef69-73fd-cb5e-fc96-3e13a5113115@psyctc.org>
References: <fc59ef69-73fd-cb5e-fc96-3e13a5113115@psyctc.org>
Message-ID: <555198e1-0c39-f25a-8253-f115c4d2dbf9@gmail.com>

I think this isn't the right place to ask for this sort of help. Maybe 
stackoverflow instead?

What I'd do in this case is to rename the local dir holding the 
repository, then clone a new copy from Github.  Assuming that works, 
compare all the files to make sure that you have all recent changes,
commit any that were missed, then throw away the damaged one.

Duncan Murdoch

On 05/07/2023 4:44 a.m., Chris Evans wrote:
> I hope this is a legitimate question here.? I have a package of very
> simple functions: https://github.com/cpsyctc/CECPfuns.? For the forseeable
> future it's really only to stop me constantly having to rewrite
> functions I use and it is only also used by probably two or three
> colleagues who
> also use R and are even less IT/programming/R competent than I am and
> are very happy to use my functions.
> 
> I hadn't done any work on it for two years but came back to it yesterday
> and added a function (getCIforQuantiles).? There were warnings about
> things that are deprecated now in some of the older functions but
> otherwise things seemed OK.? However, I got a pkgdown error and warning
> after
> pushing the updated package to github:
> 
> Annotations
> 1 error and 1 warning
> pkgdown
> Failed to get R 4.3.1: Failed to get R 4.3.1: Failed to download version
> 4.3.1: Error: Unexpected HTTP response: 404
> r-lib/actions/setup-r at v1 is deprecated.
> r-lib/actions/setup-r at v1 is deprecated. Please update your workflow to
> use the 'v2' version. Also look at the examples at
> https://github.com/r-lib/actions/tree/v2/examples because '@v2'
> workflows are much simpler than 'v1' workflows.
> 
> So I tweaked
> https://github.com/cpsyctc/CECPfuns/blob/main/.github/workflows/pkgdown.yaml
> to change
>   ?? - uses: r-lib/actions/setup-r at v1
> to
>   ?? - uses: r-lib/actions/setup-r at v2
> rather optimistically hoping that might make the warning go away.
> 
> Today I did some work on the new function (trivial, correcting one
> "!is.na(" to the correct "is.na(" !!!).? More importantly, I created the
> test-getCIforQuantiles.R file for testthat to test the sanity checks and
> add three simple output checks.
> 
> I built the source package locally, committed the changes and tried to
> push the update to github (inside Rstudio) but I get:
> 
>   >>> /usr/bin/git push origin HEAD:refs/heads/main
> To https://github.com/cpsyctc/CECPfuns.git
>   ?! [rejected]??????? HEAD -> main (fetch first)
> error: failed to push some refs to 'https://github.com/cpsyctc/CECPfuns.git'
> hint: Updates were rejected because the remote contains work that you do
> hint: not have locally. This is usually caused by another repository pushing
> hint: to the same ref. You may want to first integrate the remote changes
> hint: (e.g., 'git pull ...') before pushing again.
> hint: See the 'Note about fast-forwards' in 'git push --help' for details.
> 
> OK.? So I try to pull thinking that made sense and that the change to
> pkgdown.yaml on github that I made yesterday is the offending change.
> 
> However, when I pull (in Rstudio again) I get this:
> 
>   >>> /usr/bin/git pull
> fatal: pack has 6 unresolved deltas
> fatal: fetch-pack: invalid index-pack output
> 
> I have never felt on top of the complexities of git and github but I'm
> clearly way out of my depth.? I am hoping someone here can see what
> I need to do to get things back in synch and be able to get back to
> developing the package.
>


From kry|ov@r00t @end|ng |rom gm@||@com  Wed Jul  5 11:12:29 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Wed, 5 Jul 2023 12:12:29 +0300
Subject: [R-pkg-devel] Help with a github/Rstudio mess
In-Reply-To: <fc59ef69-73fd-cb5e-fc96-3e13a5113115@psyctc.org>
References: <fc59ef69-73fd-cb5e-fc96-3e13a5113115@psyctc.org>
Message-ID: <20230705121229.5f36c7e9@Tarkus>

On Wed, 5 Jul 2023 09:44:26 +0100
Chris Evans <chrishold at psyctc.org> wrote:

> OK.? So I try to pull thinking that made sense and that the change to 
> pkgdown.yaml on github that I made yesterday is the offending change.

You are right about this.

> However, when I pull (in Rstudio again) I get this:
> 
>  >>> /usr/bin/git pull  
> fatal: pack has 6 unresolved deltas
> fatal: fetch-pack: invalid index-pack output

I think it should be possible to get your work online if you push it
into a separate branch:

git checkout -b test-getCIforQuantiles
git push -u origin test-getCIforQuantiles

This still leaves the problem of merging it back into "main", but at
least you'll have a separate copy you'll be able to get back to.

Your clone of the repo seems to have become corrupted somehow. People
on the Internet mention that this may be related to "shallow" clones
(made with git clone --depth=...). `git fsck --full` may provide more
information, but will probably not be able to fix the problem. Removing
the "origin" remote and adding it back again may fix the problem, or
not. https://phabricator.wikimedia.org/T46129 is the most informative
discussion of this problem I could find, and they couldn't solve it
either.

If you have any other important local branches, push them to GitHub (in
a similar manner: git push origin LOCAL_BRANCH_NAME:REMOTE_BRANCH_NAME).
Move your current clone of the repository away and create it anew using
`git clone`. Once you have merged the branches into appropriate places,
you will be able to remove them using git branch -d BRANCH_NAME
(locally) and git push origin :BRANCH_NAME (on GitHub).

-- 
Best regards,
Ivan


From chr|@ho|d @end|ng |rom p@yctc@org  Wed Jul  5 12:04:53 2023
From: chr|@ho|d @end|ng |rom p@yctc@org (Chris Evans)
Date: Wed, 5 Jul 2023 11:04:53 +0100
Subject: [R-pkg-devel] Help with a github/Rstudio mess
In-Reply-To: <20230705121229.5f36c7e9@Tarkus>
References: <fc59ef69-73fd-cb5e-fc96-3e13a5113115@psyctc.org>
 <20230705121229.5f36c7e9@Tarkus>
Message-ID: <bf04b911-3544-d9ac-2474-d16ea241385f@psyctc.org>

First, apologies for being off topic.? I guess I can see that this was 
pretty pure git/github/Rstudio with hindsight.? I am very leary of
stackoverflow, probably wrongly, but I find such a mix of misinformation 
and showboating there.? By contrast this list is a haven for me
to learn. However, point taken and I will try to be focused on the R 
package side if I post here again (quite possible as so much of this
is at my outer limits in skills and experience).

So huge thanks to Ivan for so much background: not sure if it's 
depressing or reassuring to see that this seems to be an erratic but known
thing.? Huge thanks to Duncan as I decided that I understood more of his 
suggested fix than of Ivan's so I would start there ... and it
simply worked!

Many thanks both and to all who have taught me so much here,

Chris

On 05/07/2023 10:12, Ivan Krylov wrote:
> On Wed, 5 Jul 2023 09:44:26 +0100
> Chris Evans <chrishold at psyctc.org> wrote:
>
>> OK.? So I try to pull thinking that made sense and that the change to
>> pkgdown.yaml on github that I made yesterday is the offending change.
> You are right about this.
>
>> However, when I pull (in Rstudio again) I get this:
>>
>>   >>> /usr/bin/git pull
>> fatal: pack has 6 unresolved deltas
>> fatal: fetch-pack: invalid index-pack output
> I think it should be possible to get your work online if you push it
> into a separate branch:
>
> git checkout -b test-getCIforQuantiles
> git push -u origin test-getCIforQuantiles
>
> This still leaves the problem of merging it back into "main", but at
> least you'll have a separate copy you'll be able to get back to.
>
> Your clone of the repo seems to have become corrupted somehow. People
> on the Internet mention that this may be related to "shallow" clones
> (made with git clone --depth=...). `git fsck --full` may provide more
> information, but will probably not be able to fix the problem. Removing
> the "origin" remote and adding it back again may fix the problem, or
> not. https://phabricator.wikimedia.org/T46129 is the most informative
> discussion of this problem I could find, and they couldn't solve it
> either.
>
> If you have any other important local branches, push them to GitHub (in
> a similar manner: git push origin LOCAL_BRANCH_NAME:REMOTE_BRANCH_NAME).
> Move your current clone of the repository away and create it anew using
> `git clone`. Once you have merged the branches into appropriate places,
> you will be able to remove them using git branch -d BRANCH_NAME
> (locally) and git push origin :BRANCH_NAME (on GitHub).
>
-- 
Chris Evans (he/him)
Visiting Professor, UDLA, Quito, Ecuador & Honorary Professor, 
University of Roehampton, London, UK.
Work web site: https://www.psyctc.org/psyctc/
CORE site: http://www.coresystemtrust.org.uk/
Personal site: https://www.psyctc.org/pelerinage2016/
E


From georg|@bo@hn@kov @end|ng |rom m@nche@ter@@c@uk  Wed Jul  5 13:14:21 2023
From: georg|@bo@hn@kov @end|ng |rom m@nche@ter@@c@uk (Georgi Boshnakov)
Date: Wed, 5 Jul 2023 11:14:21 +0000
Subject: [R-pkg-devel] Help with a github/Rstudio mess
In-Reply-To: <555198e1-0c39-f25a-8253-f115c4d2dbf9@gmail.com>
References: <fc59ef69-73fd-cb5e-fc96-3e13a5113115@psyctc.org>
 <555198e1-0c39-f25a-8253-f115c4d2dbf9@gmail.com>
Message-ID: <CWLP265MB3505057F50801DF8829455E1AE2FA@CWLP265MB3505.GBRP265.PROD.OUTLOOK.COM>

If I understand correctly, the errors come from github actions run on github. I think that you should update them first, since github switched to new versions in the meantime.

Georgi Boshnakov

Sent from Outlook for Android<https://aka.ms/AAb9ysg>
________________________________
From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Duncan Murdoch <murdoch.duncan at gmail.com>
Sent: Wednesday, July 5, 2023 10:03:11 AM
To: chrishold at psyctc.org <chrishold at psyctc.org>; r-package-devel at r-project.org <r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] Help with a github/Rstudio mess

I think this isn't the right place to ask for this sort of help. Maybe
stackoverflow instead?

What I'd do in this case is to rename the local dir holding the
repository, then clone a new copy from Github.  Assuming that works,
compare all the files to make sure that you have all recent changes,
commit any that were missed, then throw away the damaged one.

Duncan Murdoch

On 05/07/2023 4:44 a.m., Chris Evans wrote:
> I hope this is a legitimate question here.  I have a package of very
> simple functions: https://urldefense.com/v3/__https://github.com/cpsyctc/CECPfuns__;!!PDiH4ENfjr2_Jw!FZGzBDcbpIrmi_GwRh-AOLdv_s3ZxBSRedrQOny_05Q7aFCZq6Qz2deRH-xf1t-f2t_aYV98T4tnvzDCQlxqxh28IYKhYCCSSxRo1w$ [github[.]com].  For the forseeable
> future it's really only to stop me constantly having to rewrite
> functions I use and it is only also used by probably two or three
> colleagues who
> also use R and are even less IT/programming/R competent than I am and
> are very happy to use my functions.
>
> I hadn't done any work on it for two years but came back to it yesterday
> and added a function (getCIforQuantiles).  There were warnings about
> things that are deprecated now in some of the older functions but
> otherwise things seemed OK.  However, I got a pkgdown error and warning
> after
> pushing the updated package to github:
>
> Annotations
> 1 error and 1 warning
> pkgdown
> Failed to get R 4.3.1: Failed to get R 4.3.1: Failed to download version
> 4.3.1: Error: Unexpected HTTP response: 404
> r-lib/actions/setup-r at v1 is deprecated.
> r-lib/actions/setup-r at v1 is deprecated. Please update your workflow to
> use the 'v2' version. Also look at the examples at
> https://urldefense.com/v3/__https://github.com/r-lib/actions/tree/v2/examples__;!!PDiH4ENfjr2_Jw!FZGzBDcbpIrmi_GwRh-AOLdv_s3ZxBSRedrQOny_05Q7aFCZq6Qz2deRH-xf1t-f2t_aYV98T4tnvzDCQlxqxh28IYKhYCD0u-NayA$ [github[.]com] because '@v2'
> workflows are much simpler than 'v1' workflows.
>
> So I tweaked
> https://urldefense.com/v3/__https://github.com/cpsyctc/CECPfuns/blob/main/.github/workflows/pkgdown.yaml__;!!PDiH4ENfjr2_Jw!FZGzBDcbpIrmi_GwRh-AOLdv_s3ZxBSRedrQOny_05Q7aFCZq6Qz2deRH-xf1t-f2t_aYV98T4tnvzDCQlxqxh28IYKhYCCnQO2uOA$ [github[.]com]
> to change
>      - uses: r-lib/actions/setup-r at v1
> to
>      - uses: r-lib/actions/setup-r at v2
> rather optimistically hoping that might make the warning go away.
>
> Today I did some work on the new function (trivial, correcting one
> "!is.na(" to the correct "is.na(" !!!).  More importantly, I created the
> test-getCIforQuantiles.R file for testthat to test the sanity checks and
> add three simple output checks.
>
> I built the source package locally, committed the changes and tried to
> push the update to github (inside Rstudio) but I get:
>
>   >>> /usr/bin/git push origin HEAD:refs/heads/main
> To https://urldefense.com/v3/__https://github.com/cpsyctc/CECPfuns.git__;!!PDiH4ENfjr2_Jw!FZGzBDcbpIrmi_GwRh-AOLdv_s3ZxBSRedrQOny_05Q7aFCZq6Qz2deRH-xf1t-f2t_aYV98T4tnvzDCQlxqxh28IYKhYCCMv5veZQ$ [github[.]com]
>    ! [rejected]        HEAD -> main (fetch first)
> error: failed to push some refs to 'https://urldefense.com/v3/__https://github.com/cpsyctc/CECPfuns.git__;!!PDiH4ENfjr2_Jw!FZGzBDcbpIrmi_GwRh-AOLdv_s3ZxBSRedrQOny_05Q7aFCZq6Qz2deRH-xf1t-f2t_aYV98T4tnvzDCQlxqxh28IYKhYCCMv5veZQ$ [github[.]com]'
> hint: Updates were rejected because the remote contains work that you do
> hint: not have locally. This is usually caused by another repository pushing
> hint: to the same ref. You may want to first integrate the remote changes
> hint: (e.g., 'git pull ...') before pushing again.
> hint: See the 'Note about fast-forwards' in 'git push --help' for details.
>
> OK.  So I try to pull thinking that made sense and that the change to
> pkgdown.yaml on github that I made yesterday is the offending change.
>
> However, when I pull (in Rstudio again) I get this:
>
>   >>> /usr/bin/git pull
> fatal: pack has 6 unresolved deltas
> fatal: fetch-pack: invalid index-pack output
>
> I have never felt on top of the complexities of git and github but I'm
> clearly way out of my depth.  I am hoping someone here can see what
> I need to do to get things back in synch and be able to get back to
> developing the package.
>

______________________________________________
R-package-devel at r-project.org mailing list
https://urldefense.com/v3/__https://stat.ethz.ch/mailman/listinfo/r-package-devel__;!!PDiH4ENfjr2_Jw!FZGzBDcbpIrmi_GwRh-AOLdv_s3ZxBSRedrQOny_05Q7aFCZq6Qz2deRH-xf1t-f2t_aYV98T4tnvzDCQlxqxh28IYKhYCCPKVmhQw$ [stat[.]ethz[.]ch]

	[[alternative HTML version deleted]]


From @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org  Wed Jul  5 23:44:29 2023
From: @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org (Spencer Graves)
Date: Wed, 5 Jul 2023 16:44:29 -0500
Subject: [R-pkg-devel] GitHub Action not triggered by a commit to a fork
Message-ID: <2fdedef5-ab49-bd14-f6b4-825ac54b0e08@effectivedefense.org>

Hello:


	  Can someone help me understand why a commit to 
"https://github.com/sbgraves237/KFAS" does not trigger the GitHub 
Actions specified in ".github/workflows/check-standard.yaml"?


	  Thanks,
	  Spencer Graves


p.s.  This is a branch of helske/KFAS:master.  That may have something 
to do with the problem.


From d|ego@hern@ngomezherrero @end|ng |rom gm@||@com  Wed Jul  5 23:50:23 2023
From: d|ego@hern@ngomezherrero @end|ng |rom gm@||@com (=?UTF-8?Q?Diego_Hernang=C3=B3mez_Herrero?=)
Date: Wed, 5 Jul 2023 23:50:23 +0200
Subject: [R-pkg-devel] GitHub Action not triggered by a commit to a fork
In-Reply-To: <2fdedef5-ab49-bd14-f6b4-825ac54b0e08@effectivedefense.org>
References: <2fdedef5-ab49-bd14-f6b4-825ac54b0e08@effectivedefense.org>
Message-ID: <CAA-ibaz-ZF665+MXAfL=vA=2Gu28xMc1wbR0TjFYA_2FT+y-oQ@mail.gmail.com>

Hi,

GH actions are disabled by default on forks, have you checked <
https://github.com/sbgraves237/KFAS/actions> and clicked on the green
button?


Best

El mi?, 5 jul 2023 a las 23:45, Spencer Graves (<
spencer.graves at effectivedefense.org>) escribi?:

> Hello:
>
>
>           Can someone help me understand why a commit to
> "https://github.com/sbgraves237/KFAS" does not trigger the GitHub
> Actions specified in ".github/workflows/check-standard.yaml"?
>
>
>           Thanks,
>           Spencer Graves
>
>
> p.s.  This is a branch of helske/KFAS:master.  That may have something
> to do with the problem.
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


-- 



Have a nice day!

	[[alternative HTML version deleted]]


From @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org  Thu Jul  6 00:56:48 2023
From: @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org (Spencer Graves)
Date: Wed, 5 Jul 2023 17:56:48 -0500
Subject: [R-pkg-devel] GitHub Action not triggered by a commit to a fork
In-Reply-To: <CAA-ibaz-ZF665+MXAfL=vA=2Gu28xMc1wbR0TjFYA_2FT+y-oQ@mail.gmail.com>
References: <2fdedef5-ab49-bd14-f6b4-825ac54b0e08@effectivedefense.org>
 <CAA-ibaz-ZF665+MXAfL=vA=2Gu28xMc1wbR0TjFYA_2FT+y-oQ@mail.gmail.com>
Message-ID: <da45b8f9-c089-9e38-85ed-9240137ffba5@effectivedefense.org>

Hi, Diego:


	  Thanks for the reply.


On 7/5/23 4:50 PM, Diego Hernang?mez Herrero wrote:
> Hi,
> 
> GH actions are disabled by default on forks, have you checked 
> <https://github.com/sbgraves237/KFAS/actions 
> <https://github.com/sbgraves237/KFAS/actions>> and clicked on the green 
> button?


	  Got it.  I pushed another change, and that triggered GitHub Action.


	  Thanks again, Spencer Graves
> 
> 
> Best
> 
> El mi?, 5 jul 2023 a las 23:45, Spencer Graves 
> (<spencer.graves at effectivedefense.org 
> <mailto:spencer.graves at effectivedefense.org>>) escribi?:
> 
>     Hello:
> 
> 
>      ? ? ? ? ? Can someone help me understand why a commit to
>     "https://github.com/sbgraves237/KFAS
>     <https://github.com/sbgraves237/KFAS>" does not trigger the GitHub
>     Actions specified in ".github/workflows/check-standard.yaml"?
> 
> 
>      ? ? ? ? ? Thanks,
>      ? ? ? ? ? Spencer Graves
> 
> 
>     p.s.? This is a branch of helske/KFAS:master.? That may have something
>     to do with the problem.
> 
>     ______________________________________________
>     R-package-devel at r-project.org <mailto:R-package-devel at r-project.org>
>     mailing list
>     https://stat.ethz.ch/mailman/listinfo/r-package-devel
>     <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
> 
> 
> 
> -- 
> 
> 
> 
> Have a nice day!


From @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org  Thu Jul  6 01:50:33 2023
From: @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org (Spencer Graves)
Date: Wed, 5 Jul 2023 18:50:33 -0500
Subject: [R-pkg-devel] gfortran: command not found
Message-ID: <481d3cd0-b1fb-e1c7-a66a-4f1cca8a0826@effectivedefense.org>

Hello:


	  "R CMD build KFAS" under macOS 11.7.8 stopped with:


using C compiler: ?Apple clang version 12.0.5 (clang-1205.0.22.9)?
sh: gfortran: command not found
using SDK: ?MacOSX11.3.sdk?
gfortran -arch x86_64  -fPIC  -Wall -g -O2  -c  approx.f90 -o approx.o
make: gfortran: No such file or directory
make: *** [approx.o] Error 1
ERROR: compilation failed for package ?KFAS'


	  My web search suggests several different ways to fix this problem, 
but I don't know which to try.



	  Suggestions?
	  Thanks,
	  Spencer Graves


p.s.  I have both "brew" and "port" installed.  I recently used "port" 
to upgrade another software package.  A web search suggested the 
following:


sudo port install gcc48
sudo port select -set gcc mp-gcc48


	  However, this comment was posted roughly 9 years ago.  Below please 
find sessionInfo().


sessionInfo()
R version 4.3.1 (2023-06-16)
Platform: x86_64-apple-darwin20 (64-bit)
Running under: macOS Big Sur 11.7.8

Matrix products: default
BLAS: 
/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib 

LAPACK: 
/Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRlapack.dylib; 
  LAPACK version 3.11.0

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

time zone: America/Chicago
tzcode source: internal

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

loaded via a namespace (and not attached):
  [1] compiler_4.3.1  R6_2.5.1        magrittr_2.0.3  cli_3.6.1
  [5] tools_4.3.1     glue_1.6.2      rstudioapi_0.14 roxygen2_7.2.3
  [9] xml2_1.3.4      vctrs_0.6.2     stringi_1.7.12  knitr_1.42
[13] xfun_0.39       stringr_1.5.0   lifecycle_1.0.3 rlang_1.1.1
[17] purrr_1.0.1


From @|mon@urb@nek @end|ng |rom R-project@org  Thu Jul  6 01:57:35 2023
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Thu, 6 Jul 2023 11:57:35 +1200
Subject: [R-pkg-devel] gfortran: command not found
In-Reply-To: <481d3cd0-b1fb-e1c7-a66a-4f1cca8a0826@effectivedefense.org>
References: <481d3cd0-b1fb-e1c7-a66a-4f1cca8a0826@effectivedefense.org>
Message-ID: <AB038664-AD56-446E-99A0-6A7607A548F7@R-project.org>

To quote from the page you downloaded R from:

This release uses Xcode 14.2/14.3 and GNU Fortran 12.2. If you wish to compile R packages which contain Fortran code, you may need to download the corresponding GNU Fortran compiler from https://mac.R-project.org/tools. 



> On Jul 6, 2023, at 11:50 AM, Spencer Graves <spencer.graves at effectivedefense.org> wrote:
> 
> Hello:
> 
> 
> 	  "R CMD build KFAS" under macOS 11.7.8 stopped with:
> 
> 
> using C compiler: ?Apple clang version 12.0.5 (clang-1205.0.22.9)?
> sh: gfortran: command not found
> using SDK: ?MacOSX11.3.sdk?
> gfortran -arch x86_64  -fPIC  -Wall -g -O2  -c  approx.f90 -o approx.o
> make: gfortran: No such file or directory
> make: *** [approx.o] Error 1
> ERROR: compilation failed for package ?KFAS'
> 
> 
> 	  My web search suggests several different ways to fix this problem, but I don't know which to try.
> 
> 
> 
> 	  Suggestions?
> 	  Thanks,
> 	  Spencer Graves
> 
> 
> p.s.  I have both "brew" and "port" installed.  I recently used "port" to upgrade another software package.  A web search suggested the following:
> 
> 
> sudo port install gcc48
> sudo port select -set gcc mp-gcc48
> 
> 
> 	  However, this comment was posted roughly 9 years ago.  Below please find sessionInfo().
> 
> 
> sessionInfo()
> R version 4.3.1 (2023-06-16)
> Platform: x86_64-apple-darwin20 (64-bit)
> Running under: macOS Big Sur 11.7.8
> 
> Matrix products: default
> BLAS: /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib 
> LAPACK: /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0
> 
> locale:
> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
> 
> time zone: America/Chicago
> tzcode source: internal
> 
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
> 
> loaded via a namespace (and not attached):
> [1] compiler_4.3.1  R6_2.5.1        magrittr_2.0.3  cli_3.6.1
> [5] tools_4.3.1     glue_1.6.2      rstudioapi_0.14 roxygen2_7.2.3
> [9] xml2_1.3.4      vctrs_0.6.2     stringi_1.7.12  knitr_1.42
> [13] xfun_0.39       stringr_1.5.0   lifecycle_1.0.3 rlang_1.1.1
> [17] purrr_1.0.1
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 


From v|ncentv@nhee@ @end|ng |rom gm@||@com  Thu Jul  6 09:54:20 2023
From: v|ncentv@nhee@ @end|ng |rom gm@||@com (Vincent van Hees)
Date: Thu, 6 Jul 2023 09:54:20 +0200
Subject: [R-pkg-devel] Warning 'as.data.frame.POSIXct()' is deprecated
Message-ID: <CALnEB16CAR28kTtkvVcEOQj3Tmyc_rwCjckwexnQsA3_ZkFPCg@mail.gmail.com>

Dear all,

I see the following warning in my package test results:

```
Warning
Direct call of 'as.data.frame.POSIXct()' is deprecated.  Use
'as.data.frame.vector()' or 'as.data.frame()' instead
```

The warning is not always there and I struggle to make it reproducible. I
have encountered it in both Ubuntu 22.04 and in Windows 11, in both R 4.3.0
and 4.3.1, in both RStudio and in an GitHub Actions environment (example
<https://github.com/wadpac/GGIR/actions/runs/5463862340/jobs/9945096566>).
The warning gives the impression that I am doing something that R no longer
supports. However, I am not using the command as.data.frame.POSIXct()
anywhere directly in my code.

When I dive into the code where the warnings occur I see patterns like:

```
now = Sys.time()
df = data.frame (time = seq(now, now + 10, by =1),  B  = 1:11)
```

(this is a simplification of for example:
https://github.com/wadpac/GGIR/blob/master/tests/testthat/test_read.myacc.csv.R
)

Does this mean I am discouraged from putting a vector with POSIXct values
in a data.frame?
If yes, what would be the recommended work around?

I have been trying to find documentation or online discussions about this
warning but no luck so far. I see R NEWS
<https://cran.r-project.org/doc/manuals/r-release/NEWS.html> mentions
updates to POSIXct related objects several times in the past year but those
seem to be different issues.

Best,

Vincent

	[[alternative HTML version deleted]]


From t|m@t@y|or @end|ng |rom h|ddene|eph@nt@@co@uk  Thu Jul  6 10:26:06 2023
From: t|m@t@y|or @end|ng |rom h|ddene|eph@nt@@co@uk (Tim Taylor)
Date: Thu, 6 Jul 2023 09:26:06 +0100
Subject: [R-pkg-devel] Warning 'as.data.frame.POSIXct()' is deprecated
In-Reply-To: <CALnEB16CAR28kTtkvVcEOQj3Tmyc_rwCjckwexnQsA3_ZkFPCg@mail.gmail.com>
References: <CALnEB16CAR28kTtkvVcEOQj3Tmyc_rwCjckwexnQsA3_ZkFPCg@mail.gmail.com>
Message-ID: <1e8bc3aa-1614-3cd4-f0db-01735c152e7f@hiddenelephants.co.uk>

This *may* be an issue in lapply.? Let's see what others day. Reprex below

Sys.setenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_" = TRUE)
dat <- Sys.Date()
as.data.frame(dat)
#>????????? dat
#> 1 2023-07-06
lapply(dat, as.data.frame)
#> Warning: Direct call of 'as.data.frame.Date()' is deprecated.? Use
#> 'as.data.frame.vector()' or 'as.data.frame()' instead
#> [[1]]
#>?????? X[[i]]
#> 1 2023-07-06

Tim

On 06/07/2023 08:54, Vincent van Hees wrote:
> Dear all,
>
> I see the following warning in my package test results:
>
> ```
> Warning
> Direct call of 'as.data.frame.POSIXct()' is deprecated.  Use
> 'as.data.frame.vector()' or 'as.data.frame()' instead
> ```
>
> The warning is not always there and I struggle to make it reproducible. I
> have encountered it in both Ubuntu 22.04 and in Windows 11, in both R 4.3.0
> and 4.3.1, in both RStudio and in an GitHub Actions environment (example
> <https://github.com/wadpac/GGIR/actions/runs/5463862340/jobs/9945096566>).
> The warning gives the impression that I am doing something that R no longer
> supports. However, I am not using the command as.data.frame.POSIXct()
> anywhere directly in my code.
>
> When I dive into the code where the warnings occur I see patterns like:
>
> ```
> now = Sys.time()
> df = data.frame (time = seq(now, now + 10, by =1),  B  = 1:11)
> ```
>
> (this is a simplification of for example:
> https://github.com/wadpac/GGIR/blob/master/tests/testthat/test_read.myacc.csv.R
> )
>
> Does this mean I am discouraged from putting a vector with POSIXct values
> in a data.frame?
> If yes, what would be the recommended work around?
>
> I have been trying to find documentation or online discussions about this
> warning but no luck so far. I see R NEWS
> <https://cran.r-project.org/doc/manuals/r-release/NEWS.html> mentions
> updates to POSIXct related objects several times in the past year but those
> seem to be different issues.
>
> Best,
>
> Vincent
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From t|m@t@y|or @end|ng |rom h|ddene|eph@nt@@co@uk  Thu Jul  6 10:41:45 2023
From: t|m@t@y|or @end|ng |rom h|ddene|eph@nt@@co@uk (Tim Taylor)
Date: Thu, 6 Jul 2023 09:41:45 +0100
Subject: [R-pkg-devel] Warning 'as.data.frame.POSIXct()' is deprecated
In-Reply-To: <1e8bc3aa-1614-3cd4-f0db-01735c152e7f@hiddenelephants.co.uk>
References: <CALnEB16CAR28kTtkvVcEOQj3Tmyc_rwCjckwexnQsA3_ZkFPCg@mail.gmail.com>
 <1e8bc3aa-1614-3cd4-f0db-01735c152e7f@hiddenelephants.co.uk>
Message-ID: <15178f56-0d28-e7fa-000f-959c00dd63ca@hiddenelephants.co.uk>

Apologies - I've not had enough caffeine just yet. The reprex below 
highlights the issue but I think the code which implemented the change 
*may* need tweaking not lapply.

Tim

On 06/07/2023 09:26, Tim Taylor wrote:
> This *may* be an issue in lapply.? Let's see what others day. Reprex 
> below
>
> Sys.setenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_" = TRUE)
> dat <- Sys.Date()
> as.data.frame(dat)
> #>????????? dat
> #> 1 2023-07-06
> lapply(dat, as.data.frame)
> #> Warning: Direct call of 'as.data.frame.Date()' is deprecated.? Use
> #> 'as.data.frame.vector()' or 'as.data.frame()' instead
> #> [[1]]
> #>?????? X[[i]]
> #> 1 2023-07-06
>
> Tim
>
> On 06/07/2023 08:54, Vincent van Hees wrote:
>> Dear all,
>>
>> I see the following warning in my package test results:
>>
>> ```
>> Warning
>> Direct call of 'as.data.frame.POSIXct()' is deprecated.? Use
>> 'as.data.frame.vector()' or 'as.data.frame()' instead
>> ```
>>
>> The warning is not always there and I struggle to make it 
>> reproducible. I
>> have encountered it in both Ubuntu 22.04 and in Windows 11, in both R 
>> 4.3.0
>> and 4.3.1, in both RStudio and in an GitHub Actions environment (example
>> <https://github.com/wadpac/GGIR/actions/runs/5463862340/jobs/9945096566>). 
>>
>> The warning gives the impression that I am doing something that R no 
>> longer
>> supports. However, I am not using the command as.data.frame.POSIXct()
>> anywhere directly in my code.
>>
>> When I dive into the code where the warnings occur I see patterns like:
>>
>> ```
>> now = Sys.time()
>> df = data.frame (time = seq(now, now + 10, by =1),? B? = 1:11)
>> ```
>>
>> (this is a simplification of for example:
>> https://github.com/wadpac/GGIR/blob/master/tests/testthat/test_read.myacc.csv.R 
>>
>> )
>>
>> Does this mean I am discouraged from putting a vector with POSIXct 
>> values
>> in a data.frame?
>> If yes, what would be the recommended work around?
>>
>> I have been trying to find documentation or online discussions about 
>> this
>> warning but no luck so far. I see R NEWS
>> <https://cran.r-project.org/doc/manuals/r-release/NEWS.html> mentions
>> updates to POSIXct related objects several times in the past year but 
>> those
>> seem to be different issues.
>>
>> Best,
>>
>> Vincent
>>
>> ????[[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From v|ncentv@nhee@ @end|ng |rom gm@||@com  Thu Jul  6 14:31:54 2023
From: v|ncentv@nhee@ @end|ng |rom gm@||@com (Vincent van Hees)
Date: Thu, 6 Jul 2023 14:31:54 +0200
Subject: [R-pkg-devel] Warning 'as.data.frame.POSIXct()' is deprecated
In-Reply-To: <15178f56-0d28-e7fa-000f-959c00dd63ca@hiddenelephants.co.uk>
References: <CALnEB16CAR28kTtkvVcEOQj3Tmyc_rwCjckwexnQsA3_ZkFPCg@mail.gmail.com>
 <1e8bc3aa-1614-3cd4-f0db-01735c152e7f@hiddenelephants.co.uk>
 <15178f56-0d28-e7fa-000f-959c00dd63ca@hiddenelephants.co.uk>
Message-ID: <CALnEB17VsNZC5U_usC+qxXgx4ngZFwGpO2W_Tg8L6WQ9rm83Qg@mail.gmail.com>

Thanks, in that case the REPLEX for the issue may need to be:

> remember = Sys.getenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_")
> Sys.setenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_" = TRUE)
> data.frame(time = Sys.time())
                 time
1 2023-07-06 14:29:37
> data.frame(time = as.POSIXlt(Sys.time()))
                 time
1 2023-07-06 14:29:37
Warning message:
Direct call of 'as.data.frame.POSIXct()' is deprecated.  Use
'as.data.frame.vector()' or 'as.data.frame()' instead
> Sys.setenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_" = remember)

Vincent

On Thu, 6 Jul 2023 at 10:41, Tim Taylor <tim.taylor at hiddenelephants.co.uk>
wrote:

> Apologies - I've not had enough caffeine just yet. The reprex below
> highlights the issue but I think the code which implemented the change
> *may* need tweaking not lapply.
>
> Tim
>
> On 06/07/2023 09:26, Tim Taylor wrote:
> > This *may* be an issue in lapply.  Let's see what others day. Reprex
> > below
> >
> > Sys.setenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_" = TRUE)
> > dat <- Sys.Date()
> > as.data.frame(dat)
> > #>          dat
> > #> 1 2023-07-06
> > lapply(dat, as.data.frame)
> > #> Warning: Direct call of 'as.data.frame.Date()' is deprecated.  Use
> > #> 'as.data.frame.vector()' or 'as.data.frame()' instead
> > #> [[1]]
> > #>       X[[i]]
> > #> 1 2023-07-06
> >
> > Tim
> >
> > On 06/07/2023 08:54, Vincent van Hees wrote:
> >> Dear all,
> >>
> >> I see the following warning in my package test results:
> >>
> >> ```
> >> Warning
> >> Direct call of 'as.data.frame.POSIXct()' is deprecated.  Use
> >> 'as.data.frame.vector()' or 'as.data.frame()' instead
> >> ```
> >>
> >> The warning is not always there and I struggle to make it
> >> reproducible. I
> >> have encountered it in both Ubuntu 22.04 and in Windows 11, in both R
> >> 4.3.0
> >> and 4.3.1, in both RStudio and in an GitHub Actions environment (example
> >> <https://github.com/wadpac/GGIR/actions/runs/5463862340/jobs/9945096566>).
>
> >>
> >> The warning gives the impression that I am doing something that R no
> >> longer
> >> supports. However, I am not using the command as.data.frame.POSIXct()
> >> anywhere directly in my code.
> >>
> >> When I dive into the code where the warnings occur I see patterns like:
> >>
> >> ```
> >> now = Sys.time()
> >> df = data.frame (time = seq(now, now + 10, by =1),  B  = 1:11)
> >> ```
> >>
> >> (this is a simplification of for example:
> >>
> https://github.com/wadpac/GGIR/blob/master/tests/testthat/test_read.myacc.csv.R
> >>
> >> )
> >>
> >> Does this mean I am discouraged from putting a vector with POSIXct
> >> values
> >> in a data.frame?
> >> If yes, what would be the recommended work around?
> >>
> >> I have been trying to find documentation or online discussions about
> >> this
> >> warning but no luck so far. I see R NEWS
> >> <https://cran.r-project.org/doc/manuals/r-release/NEWS.html> mentions
> >> updates to POSIXct related objects several times in the past year but
> >> those
> >> seem to be different issues.
> >>
> >> Best,
> >>
> >> Vincent
> >>
> >>     [[alternative HTML version deleted]]
> >>
> >> ______________________________________________
> >> R-package-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From edd @end|ng |rom deb|@n@org  Thu Jul  6 15:14:31 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Thu, 6 Jul 2023 08:14:31 -0500
Subject: [R-pkg-devel] Warning 'as.data.frame.POSIXct()' is deprecated
In-Reply-To: <CALnEB17VsNZC5U_usC+qxXgx4ngZFwGpO2W_Tg8L6WQ9rm83Qg@mail.gmail.com>
References: <CALnEB16CAR28kTtkvVcEOQj3Tmyc_rwCjckwexnQsA3_ZkFPCg@mail.gmail.com>
 <1e8bc3aa-1614-3cd4-f0db-01735c152e7f@hiddenelephants.co.uk>
 <15178f56-0d28-e7fa-000f-959c00dd63ca@hiddenelephants.co.uk>
 <CALnEB17VsNZC5U_usC+qxXgx4ngZFwGpO2W_Tg8L6WQ9rm83Qg@mail.gmail.com>
Message-ID: <25766.48695.704943.188152@rob.eddelbuettel.com>


On 6 July 2023 at 14:31, Vincent van Hees wrote:
| Thanks, in that case the REPLEX for the issue may need to be:
| 
| > remember = Sys.getenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_")
| > Sys.setenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_" = TRUE)
| > data.frame(time = Sys.time())
|                  time
| 1 2023-07-06 14:29:37
| > data.frame(time = as.POSIXlt(Sys.time()))
|                  time
| 1 2023-07-06 14:29:37
| Warning message:
| Direct call of 'as.data.frame.POSIXct()' is deprecated.  Use
| 'as.data.frame.vector()' or 'as.data.frame()' instead
| > Sys.setenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_" = remember)

Does _not_ happen in a plain R session.

Does happen when `library(tidyverse)` is executed first. May come from
`tibble` or `vectors`, I have a habit of not using those much. 

Dirk
 
| Vincent
| 
| On Thu, 6 Jul 2023 at 10:41, Tim Taylor <tim.taylor at hiddenelephants.co.uk>
| wrote:
| 
| > Apologies - I've not had enough caffeine just yet. The reprex below
| > highlights the issue but I think the code which implemented the change
| > *may* need tweaking not lapply.
| >
| > Tim
| >
| > On 06/07/2023 09:26, Tim Taylor wrote:
| > > This *may* be an issue in lapply.  Let's see what others day. Reprex
| > > below
| > >
| > > Sys.setenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_" = TRUE)
| > > dat <- Sys.Date()
| > > as.data.frame(dat)
| > > #>          dat
| > > #> 1 2023-07-06
| > > lapply(dat, as.data.frame)
| > > #> Warning: Direct call of 'as.data.frame.Date()' is deprecated.  Use
| > > #> 'as.data.frame.vector()' or 'as.data.frame()' instead
| > > #> [[1]]
| > > #>       X[[i]]
| > > #> 1 2023-07-06
| > >
| > > Tim
| > >
| > > On 06/07/2023 08:54, Vincent van Hees wrote:
| > >> Dear all,
| > >>
| > >> I see the following warning in my package test results:
| > >>
| > >> ```
| > >> Warning
| > >> Direct call of 'as.data.frame.POSIXct()' is deprecated.  Use
| > >> 'as.data.frame.vector()' or 'as.data.frame()' instead
| > >> ```
| > >>
| > >> The warning is not always there and I struggle to make it
| > >> reproducible. I
| > >> have encountered it in both Ubuntu 22.04 and in Windows 11, in both R
| > >> 4.3.0
| > >> and 4.3.1, in both RStudio and in an GitHub Actions environment (example
| > >> <https://github.com/wadpac/GGIR/actions/runs/5463862340/jobs/9945096566>).
| >
| > >>
| > >> The warning gives the impression that I am doing something that R no
| > >> longer
| > >> supports. However, I am not using the command as.data.frame.POSIXct()
| > >> anywhere directly in my code.
| > >>
| > >> When I dive into the code where the warnings occur I see patterns like:
| > >>
| > >> ```
| > >> now = Sys.time()
| > >> df = data.frame (time = seq(now, now + 10, by =1),  B  = 1:11)
| > >> ```
| > >>
| > >> (this is a simplification of for example:
| > >>
| > https://github.com/wadpac/GGIR/blob/master/tests/testthat/test_read.myacc.csv.R
| > >>
| > >> )
| > >>
| > >> Does this mean I am discouraged from putting a vector with POSIXct
| > >> values
| > >> in a data.frame?
| > >> If yes, what would be the recommended work around?
| > >>
| > >> I have been trying to find documentation or online discussions about
| > >> this
| > >> warning but no luck so far. I see R NEWS
| > >> <https://cran.r-project.org/doc/manuals/r-release/NEWS.html> mentions
| > >> updates to POSIXct related objects several times in the past year but
| > >> those
| > >> seem to be different issues.
| > >>
| > >> Best,
| > >>
| > >> Vincent
| > >>
| > >>     [[alternative HTML version deleted]]
| > >>
| > >> ______________________________________________
| > >> R-package-devel at r-project.org mailing list
| > >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
| > >
| > > ______________________________________________
| > > R-package-devel at r-project.org mailing list
| > > https://stat.ethz.ch/mailman/listinfo/r-package-devel
| >
| 
| 	[[alternative HTML version deleted]]
| 
| ______________________________________________
| R-package-devel at r-project.org mailing list
| https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From edd @end|ng |rom deb|@n@org  Thu Jul  6 15:22:24 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Thu, 6 Jul 2023 08:22:24 -0500
Subject: [R-pkg-devel] Warning 'as.data.frame.POSIXct()' is deprecated
In-Reply-To: <25766.48695.704943.188152@rob.eddelbuettel.com>
References: <CALnEB16CAR28kTtkvVcEOQj3Tmyc_rwCjckwexnQsA3_ZkFPCg@mail.gmail.com>
 <1e8bc3aa-1614-3cd4-f0db-01735c152e7f@hiddenelephants.co.uk>
 <15178f56-0d28-e7fa-000f-959c00dd63ca@hiddenelephants.co.uk>
 <CALnEB17VsNZC5U_usC+qxXgx4ngZFwGpO2W_Tg8L6WQ9rm83Qg@mail.gmail.com>
 <25766.48695.704943.188152@rob.eddelbuettel.com>
Message-ID: <25766.49168.981543.584124@rob.eddelbuettel.com>


On 6 July 2023 at 08:14, Dirk Eddelbuettel wrote:
| 
| On 6 July 2023 at 14:31, Vincent van Hees wrote:
| | Thanks, in that case the REPLEX for the issue may need to be:
| | 
| | > remember = Sys.getenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_")
| | > Sys.setenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_" = TRUE)
| | > data.frame(time = Sys.time())
| |                  time
| | 1 2023-07-06 14:29:37
| | > data.frame(time = as.POSIXlt(Sys.time()))
| |                  time
| | 1 2023-07-06 14:29:37
| | Warning message:
| | Direct call of 'as.data.frame.POSIXct()' is deprecated.  Use
| | 'as.data.frame.vector()' or 'as.data.frame()' instead
| | > Sys.setenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_" = remember)
| 
| Does _not_ happen in a plain R session.
| 
| Does happen when `library(tidyverse)` is executed first. May come from
| `tibble` or `vectors`, I have a habit of not using those much. 

Err, no, wait. I may have confused myself here jumping between R-devel and
R (release).  Please disregard, and apologies for the noise.

In any event, assigning a POSIXlt (which is an 11-element list) to a single
column is not a great idiom and we had the POSIXct conversion there for a
while IIRC.

But assigning a POSIXct to a column should always work, and I would be
surprised to find a minimally complete reproducible example showing that it
does not.  

Dirk

| Dirk
|  
| | Vincent
| | 
| | On Thu, 6 Jul 2023 at 10:41, Tim Taylor <tim.taylor at hiddenelephants.co.uk>
| | wrote:
| | 
| | > Apologies - I've not had enough caffeine just yet. The reprex below
| | > highlights the issue but I think the code which implemented the change
| | > *may* need tweaking not lapply.
| | >
| | > Tim
| | >
| | > On 06/07/2023 09:26, Tim Taylor wrote:
| | > > This *may* be an issue in lapply.  Let's see what others day. Reprex
| | > > below
| | > >
| | > > Sys.setenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_" = TRUE)
| | > > dat <- Sys.Date()
| | > > as.data.frame(dat)
| | > > #>          dat
| | > > #> 1 2023-07-06
| | > > lapply(dat, as.data.frame)
| | > > #> Warning: Direct call of 'as.data.frame.Date()' is deprecated.  Use
| | > > #> 'as.data.frame.vector()' or 'as.data.frame()' instead
| | > > #> [[1]]
| | > > #>       X[[i]]
| | > > #> 1 2023-07-06
| | > >
| | > > Tim
| | > >
| | > > On 06/07/2023 08:54, Vincent van Hees wrote:
| | > >> Dear all,
| | > >>
| | > >> I see the following warning in my package test results:
| | > >>
| | > >> ```
| | > >> Warning
| | > >> Direct call of 'as.data.frame.POSIXct()' is deprecated.  Use
| | > >> 'as.data.frame.vector()' or 'as.data.frame()' instead
| | > >> ```
| | > >>
| | > >> The warning is not always there and I struggle to make it
| | > >> reproducible. I
| | > >> have encountered it in both Ubuntu 22.04 and in Windows 11, in both R
| | > >> 4.3.0
| | > >> and 4.3.1, in both RStudio and in an GitHub Actions environment (example
| | > >> <https://github.com/wadpac/GGIR/actions/runs/5463862340/jobs/9945096566>).
| | >
| | > >>
| | > >> The warning gives the impression that I am doing something that R no
| | > >> longer
| | > >> supports. However, I am not using the command as.data.frame.POSIXct()
| | > >> anywhere directly in my code.
| | > >>
| | > >> When I dive into the code where the warnings occur I see patterns like:
| | > >>
| | > >> ```
| | > >> now = Sys.time()
| | > >> df = data.frame (time = seq(now, now + 10, by =1),  B  = 1:11)
| | > >> ```
| | > >>
| | > >> (this is a simplification of for example:
| | > >>
| | > https://github.com/wadpac/GGIR/blob/master/tests/testthat/test_read.myacc.csv.R
| | > >>
| | > >> )
| | > >>
| | > >> Does this mean I am discouraged from putting a vector with POSIXct
| | > >> values
| | > >> in a data.frame?
| | > >> If yes, what would be the recommended work around?
| | > >>
| | > >> I have been trying to find documentation or online discussions about
| | > >> this
| | > >> warning but no luck so far. I see R NEWS
| | > >> <https://cran.r-project.org/doc/manuals/r-release/NEWS.html> mentions
| | > >> updates to POSIXct related objects several times in the past year but
| | > >> those
| | > >> seem to be different issues.
| | > >>
| | > >> Best,
| | > >>
| | > >> Vincent
| | > >>
| | > >>     [[alternative HTML version deleted]]
| | > >>
| | > >> ______________________________________________
| | > >> R-package-devel at r-project.org mailing list
| | > >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
| | > >
| | > > ______________________________________________
| | > > R-package-devel at r-project.org mailing list
| | > > https://stat.ethz.ch/mailman/listinfo/r-package-devel
| | >
| | 
| | 	[[alternative HTML version deleted]]
| | 
| | ______________________________________________
| | R-package-devel at r-project.org mailing list
| | https://stat.ethz.ch/mailman/listinfo/r-package-devel
| 
| -- 
| dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From e@ @end|ng |rom enr|co@chum@nn@net  Thu Jul  6 15:42:12 2023
From: e@ @end|ng |rom enr|co@chum@nn@net (Enrico Schumann)
Date: Thu, 06 Jul 2023 15:42:12 +0200
Subject: [R-pkg-devel] Warning 'as.data.frame.POSIXct()' is deprecated
In-Reply-To: <CALnEB17VsNZC5U_usC+qxXgx4ngZFwGpO2W_Tg8L6WQ9rm83Qg@mail.gmail.com>
 (Vincent van Hees's message of "Thu, 6 Jul 2023 14:31:54 +0200")
References: <CALnEB16CAR28kTtkvVcEOQj3Tmyc_rwCjckwexnQsA3_ZkFPCg@mail.gmail.com>
 <1e8bc3aa-1614-3cd4-f0db-01735c152e7f@hiddenelephants.co.uk>
 <15178f56-0d28-e7fa-000f-959c00dd63ca@hiddenelephants.co.uk>
 <CALnEB17VsNZC5U_usC+qxXgx4ngZFwGpO2W_Tg8L6WQ9rm83Qg@mail.gmail.com>
Message-ID: <87wmzdcg23.fsf@aldus>

On Thu, 06 Jul 2023, Vincent van Hees writes:

> Thanks, in that case the REPLEX for the issue may need to be:
>
>> remember = Sys.getenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_")
>> Sys.setenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_" = TRUE)
>> data.frame(time = Sys.time())
>                  time
> 1 2023-07-06 14:29:37
>> data.frame(time = as.POSIXlt(Sys.time()))
>                  time
> 1 2023-07-06 14:29:37
> Warning message:
> Direct call of 'as.data.frame.POSIXct()' is deprecated.  Use
> 'as.data.frame.vector()' or 'as.data.frame()' instead
>> Sys.setenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_" = remember)


I think it happens because

    data.frame(<POSIXlt>)

calls 'as.data.frame.POSIXlt' (per its S3-class), which
in turn directly calls 'as.data.frame.POSIXct':

    ## as.data.frame.POSIXlt
    function (x, row.names = NULL, optional = FALSE, ...) 
    {
        value <- as.data.frame.POSIXct(as.POSIXct(x), row.names, 
            optional, ...)
        if (!optional) 
            names(value) <- deparse1(substitute(x))
        value
    }
    <environment: namespace:base>

Kind regards
    Enrico

> Vincent
>
> On Thu, 6 Jul 2023 at 10:41, Tim Taylor <tim.taylor at hiddenelephants.co.uk>
> wrote:
>
>> Apologies - I've not had enough caffeine just yet. The reprex below
>> highlights the issue but I think the code which implemented the change
>> *may* need tweaking not lapply.
>>
>> Tim
>>
>> On 06/07/2023 09:26, Tim Taylor wrote:
>> > This *may* be an issue in lapply.  Let's see what others day. Reprex
>> > below
>> >
>> > Sys.setenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_" = TRUE)
>> > dat <- Sys.Date()
>> > as.data.frame(dat)
>> > #>          dat
>> > #> 1 2023-07-06
>> > lapply(dat, as.data.frame)
>> > #> Warning: Direct call of 'as.data.frame.Date()' is deprecated.  Use
>> > #> 'as.data.frame.vector()' or 'as.data.frame()' instead
>> > #> [[1]]
>> > #>       X[[i]]
>> > #> 1 2023-07-06
>> >
>> > Tim
>> >
>> > On 06/07/2023 08:54, Vincent van Hees wrote:
>> >> Dear all,
>> >>
>> >> I see the following warning in my package test results:
>> >>
>> >> ```
>> >> Warning
>> >> Direct call of 'as.data.frame.POSIXct()' is deprecated.  Use
>> >> 'as.data.frame.vector()' or 'as.data.frame()' instead
>> >> ```
>> >>
>> >> The warning is not always there and I struggle to make it
>> >> reproducible. I
>> >> have encountered it in both Ubuntu 22.04 and in Windows 11, in both R
>> >> 4.3.0
>> >> and 4.3.1, in both RStudio and in an GitHub Actions environment (example
>> >> <https://github.com/wadpac/GGIR/actions/runs/5463862340/jobs/9945096566>).
>>
>> >>
>> >> The warning gives the impression that I am doing something that R no
>> >> longer
>> >> supports. However, I am not using the command as.data.frame.POSIXct()
>> >> anywhere directly in my code.
>> >>
>> >> When I dive into the code where the warnings occur I see patterns like:
>> >>
>> >> ```
>> >> now = Sys.time()
>> >> df = data.frame (time = seq(now, now + 10, by =1),  B  = 1:11)
>> >> ```
>> >>
>> >> (this is a simplification of for example:
>> >>
>> https://github.com/wadpac/GGIR/blob/master/tests/testthat/test_read.myacc.csv.R
>> >>
>> >> )
>> >>
>> >> Does this mean I am discouraged from putting a vector with POSIXct
>> >> values
>> >> in a data.frame?
>> >> If yes, what would be the recommended work around?
>> >>
>> >> I have been trying to find documentation or online discussions about
>> >> this
>> >> warning but no luck so far. I see R NEWS
>> >> <https://cran.r-project.org/doc/manuals/r-release/NEWS.html> mentions
>> >> updates to POSIXct related objects several times in the past year but
>> >> those
>> >> seem to be different issues.
>> >>
>> >> Best,
>> >>
>> >> Vincent
>> >>
>> >>     [[alternative HTML version deleted]]
>> >>
>> >> ______________________________________________
>> >> R-package-devel at r-project.org mailing list
>> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> >
>> > ______________________________________________
>> > R-package-devel at r-project.org mailing list
>> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
Enrico Schumann
Lucerne, Switzerland
http://enricoschumann.net


From v|ncentv@nhee@ @end|ng |rom gm@||@com  Thu Jul  6 15:54:22 2023
From: v|ncentv@nhee@ @end|ng |rom gm@||@com (Vincent van Hees)
Date: Thu, 6 Jul 2023 15:54:22 +0200
Subject: [R-pkg-devel] Warning 'as.data.frame.POSIXct()' is deprecated
In-Reply-To: <25766.49168.981543.584124@rob.eddelbuettel.com>
References: <CALnEB16CAR28kTtkvVcEOQj3Tmyc_rwCjckwexnQsA3_ZkFPCg@mail.gmail.com>
 <1e8bc3aa-1614-3cd4-f0db-01735c152e7f@hiddenelephants.co.uk>
 <15178f56-0d28-e7fa-000f-959c00dd63ca@hiddenelephants.co.uk>
 <CALnEB17VsNZC5U_usC+qxXgx4ngZFwGpO2W_Tg8L6WQ9rm83Qg@mail.gmail.com>
 <25766.48695.704943.188152@rob.eddelbuettel.com>
 <25766.49168.981543.584124@rob.eddelbuettel.com>
Message-ID: <CALnEB16wamBT7XFT_4ThGoDZ8byv8CVD5ZE2bzmVgiiDdGKjQA@mail.gmail.com>

Thanks Dirk,
My plan will then be to revise my package to avoid using POSIXlt when
POSIXct is also sufficient, given that I am storing timestamps in
data.frames a lot. In the few instances where POSIXlt may be necessary I
will avoid storing them in a data.frame.
Vincent

On Thu, 6 Jul 2023 at 15:22, Dirk Eddelbuettel <edd at debian.org> wrote:

>
> On 6 July 2023 at 08:14, Dirk Eddelbuettel wrote:
> |
> | On 6 July 2023 at 14:31, Vincent van Hees wrote:
> | | Thanks, in that case the REPLEX for the issue may need to be:
> | |
> | | > remember = Sys.getenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_")
> | | > Sys.setenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_" = TRUE)
> | | > data.frame(time = Sys.time())
> | |                  time
> | | 1 2023-07-06 14:29:37
> | | > data.frame(time = as.POSIXlt(Sys.time()))
> | |                  time
> | | 1 2023-07-06 14:29:37
> | | Warning message:
> | | Direct call of 'as.data.frame.POSIXct()' is deprecated.  Use
> | | 'as.data.frame.vector()' or 'as.data.frame()' instead
> | | > Sys.setenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_" = remember)
> |
> | Does _not_ happen in a plain R session.
> |
> | Does happen when `library(tidyverse)` is executed first. May come from
> | `tibble` or `vectors`, I have a habit of not using those much.
>
> Err, no, wait. I may have confused myself here jumping between R-devel and
> R (release).  Please disregard, and apologies for the noise.
>
> In any event, assigning a POSIXlt (which is an 11-element list) to a single
> column is not a great idiom and we had the POSIXct conversion there for a
> while IIRC.
>
> But assigning a POSIXct to a column should always work, and I would be
> surprised to find a minimally complete reproducible example showing that it
> does not.
>
> Dirk
>
> | Dirk
> |
> | | Vincent
> | |
> | | On Thu, 6 Jul 2023 at 10:41, Tim Taylor <
> tim.taylor at hiddenelephants.co.uk>
> | | wrote:
> | |
> | | > Apologies - I've not had enough caffeine just yet. The reprex below
> | | > highlights the issue but I think the code which implemented the
> change
> | | > *may* need tweaking not lapply.
> | | >
> | | > Tim
> | | >
> | | > On 06/07/2023 09:26, Tim Taylor wrote:
> | | > > This *may* be an issue in lapply.  Let's see what others day.
> Reprex
> | | > > below
> | | > >
> | | > > Sys.setenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_" = TRUE)
> | | > > dat <- Sys.Date()
> | | > > as.data.frame(dat)
> | | > > #>          dat
> | | > > #> 1 2023-07-06
> | | > > lapply(dat, as.data.frame)
> | | > > #> Warning: Direct call of 'as.data.frame.Date()' is deprecated.
> Use
> | | > > #> 'as.data.frame.vector()' or 'as.data.frame()' instead
> | | > > #> [[1]]
> | | > > #>       X[[i]]
> | | > > #> 1 2023-07-06
> | | > >
> | | > > Tim
> | | > >
> | | > > On 06/07/2023 08:54, Vincent van Hees wrote:
> | | > >> Dear all,
> | | > >>
> | | > >> I see the following warning in my package test results:
> | | > >>
> | | > >> ```
> | | > >> Warning
> | | > >> Direct call of 'as.data.frame.POSIXct()' is deprecated.  Use
> | | > >> 'as.data.frame.vector()' or 'as.data.frame()' instead
> | | > >> ```
> | | > >>
> | | > >> The warning is not always there and I struggle to make it
> | | > >> reproducible. I
> | | > >> have encountered it in both Ubuntu 22.04 and in Windows 11, in
> both R
> | | > >> 4.3.0
> | | > >> and 4.3.1, in both RStudio and in an GitHub Actions environment
> (example
> | | > >> <
> https://github.com/wadpac/GGIR/actions/runs/5463862340/jobs/9945096566>).
> | | >
> | | > >>
> | | > >> The warning gives the impression that I am doing something that R
> no
> | | > >> longer
> | | > >> supports. However, I am not using the command
> as.data.frame.POSIXct()
> | | > >> anywhere directly in my code.
> | | > >>
> | | > >> When I dive into the code where the warnings occur I see patterns
> like:
> | | > >>
> | | > >> ```
> | | > >> now = Sys.time()
> | | > >> df = data.frame (time = seq(now, now + 10, by =1),  B  = 1:11)
> | | > >> ```
> | | > >>
> | | > >> (this is a simplification of for example:
> | | > >>
> | | >
> https://github.com/wadpac/GGIR/blob/master/tests/testthat/test_read.myacc.csv.R
> | | > >>
> | | > >> )
> | | > >>
> | | > >> Does this mean I am discouraged from putting a vector with POSIXct
> | | > >> values
> | | > >> in a data.frame?
> | | > >> If yes, what would be the recommended work around?
> | | > >>
> | | > >> I have been trying to find documentation or online discussions
> about
> | | > >> this
> | | > >> warning but no luck so far. I see R NEWS
> | | > >> <https://cran.r-project.org/doc/manuals/r-release/NEWS.html>
> mentions
> | | > >> updates to POSIXct related objects several times in the past year
> but
> | | > >> those
> | | > >> seem to be different issues.
> | | > >>
> | | > >> Best,
> | | > >>
> | | > >> Vincent
> | | > >>
> | | > >>     [[alternative HTML version deleted]]
> | | > >>
> | | > >> ______________________________________________
> | | > >> R-package-devel at r-project.org mailing list
> | | > >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> | | > >
> | | > > ______________________________________________
> | | > > R-package-devel at r-project.org mailing list
> | | > > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> | | >
> | |
> | |     [[alternative HTML version deleted]]
> | |
> | | ______________________________________________
> | | R-package-devel at r-project.org mailing list
> | | https://stat.ethz.ch/mailman/listinfo/r-package-devel
> |
> | --
> | dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>
> --
> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>

	[[alternative HTML version deleted]]


From t|m@t@y|or @end|ng |rom h|ddene|eph@nt@@co@uk  Thu Jul  6 16:11:41 2023
From: t|m@t@y|or @end|ng |rom h|ddene|eph@nt@@co@uk (Tim Taylor)
Date: Thu, 6 Jul 2023 15:11:41 +0100
Subject: [R-pkg-devel] Warning 'as.data.frame.POSIXct()' is deprecated
In-Reply-To: <87wmzdcg23.fsf@aldus>
References: <CALnEB16CAR28kTtkvVcEOQj3Tmyc_rwCjckwexnQsA3_ZkFPCg@mail.gmail.com>
 <1e8bc3aa-1614-3cd4-f0db-01735c152e7f@hiddenelephants.co.uk>
 <15178f56-0d28-e7fa-000f-959c00dd63ca@hiddenelephants.co.uk>
 <CALnEB17VsNZC5U_usC+qxXgx4ngZFwGpO2W_Tg8L6WQ9rm83Qg@mail.gmail.com>
 <87wmzdcg23.fsf@aldus>
Message-ID: <4d7bc097-0ea9-96b2-81ea-36203a7f7310@hiddenelephants.co.uk>

Ah yes ... and reading the as.data.frame help we see (emphasis mine):

"... Direct calls to as.data.frame.<class>() are still possible (*base 
package!*), for 12 atomic base classes, but will deprecated ..."

So it does seem that a lot of these warnings are triggered by base R and 
updating this code may be a work in progress.


A little tangential (but related) to this though is still the fact that 
we can trigger the warning with:

lapply(Sys.Date(), as.data.frame)

so I wonder if the code in base/R/zzz.R 
(https://github.com/wch/r-source/blob/9f1940663f902174034a01197e55fd17c767213a/src/library/base/R/zzz.R#L664-L686) 
does need tweaking?

At this stage this is probably more a question for R-devel though.

Tim


On 06/07/2023 14:42, Enrico Schumann wrote:
> On Thu, 06 Jul 2023, Vincent van Hees writes:
>
>> Thanks, in that case the REPLEX for the issue may need to be:
>>
>>> remember = Sys.getenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_")
>>> Sys.setenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_" = TRUE)
>>> data.frame(time = Sys.time())
>>                   time
>> 1 2023-07-06 14:29:37
>>> data.frame(time = as.POSIXlt(Sys.time()))
>>                   time
>> 1 2023-07-06 14:29:37
>> Warning message:
>> Direct call of 'as.data.frame.POSIXct()' is deprecated.  Use
>> 'as.data.frame.vector()' or 'as.data.frame()' instead
>>> Sys.setenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_" = remember)
>
> I think it happens because
>
>      data.frame(<POSIXlt>)
>
> calls 'as.data.frame.POSIXlt' (per its S3-class), which
> in turn directly calls 'as.data.frame.POSIXct':
>
>      ## as.data.frame.POSIXlt
>      function (x, row.names = NULL, optional = FALSE, ...)
>      {
>          value <- as.data.frame.POSIXct(as.POSIXct(x), row.names,
>              optional, ...)
>          if (!optional)
>              names(value) <- deparse1(substitute(x))
>          value
>      }
>      <environment: namespace:base>
>
> Kind regards
>      Enrico
>
>> Vincent
>>
>> On Thu, 6 Jul 2023 at 10:41, Tim Taylor <tim.taylor at hiddenelephants.co.uk>
>> wrote:
>>
>>> Apologies - I've not had enough caffeine just yet. The reprex below
>>> highlights the issue but I think the code which implemented the change
>>> *may* need tweaking not lapply.
>>>
>>> Tim
>>>
>>> On 06/07/2023 09:26, Tim Taylor wrote:
>>>> This *may* be an issue in lapply.  Let's see what others day. Reprex
>>>> below
>>>>
>>>> Sys.setenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_" = TRUE)
>>>> dat <- Sys.Date()
>>>> as.data.frame(dat)
>>>> #>          dat
>>>> #> 1 2023-07-06
>>>> lapply(dat, as.data.frame)
>>>> #> Warning: Direct call of 'as.data.frame.Date()' is deprecated.  Use
>>>> #> 'as.data.frame.vector()' or 'as.data.frame()' instead
>>>> #> [[1]]
>>>> #>       X[[i]]
>>>> #> 1 2023-07-06
>>>>
>>>> Tim
>>>>
>>>> On 06/07/2023 08:54, Vincent van Hees wrote:
>>>>> Dear all,
>>>>>
>>>>> I see the following warning in my package test results:
>>>>>
>>>>> ```
>>>>> Warning
>>>>> Direct call of 'as.data.frame.POSIXct()' is deprecated.  Use
>>>>> 'as.data.frame.vector()' or 'as.data.frame()' instead
>>>>> ```
>>>>>
>>>>> The warning is not always there and I struggle to make it
>>>>> reproducible. I
>>>>> have encountered it in both Ubuntu 22.04 and in Windows 11, in both R
>>>>> 4.3.0
>>>>> and 4.3.1, in both RStudio and in an GitHub Actions environment (example
>>>>> <https://github.com/wadpac/GGIR/actions/runs/5463862340/jobs/9945096566>).
>>>>> The warning gives the impression that I am doing something that R no
>>>>> longer
>>>>> supports. However, I am not using the command as.data.frame.POSIXct()
>>>>> anywhere directly in my code.
>>>>>
>>>>> When I dive into the code where the warnings occur I see patterns like:
>>>>>
>>>>> ```
>>>>> now = Sys.time()
>>>>> df = data.frame (time = seq(now, now + 10, by =1),  B  = 1:11)
>>>>> ```
>>>>>
>>>>> (this is a simplification of for example:
>>>>>
>>> https://github.com/wadpac/GGIR/blob/master/tests/testthat/test_read.myacc.csv.R
>>>>> )
>>>>>
>>>>> Does this mean I am discouraged from putting a vector with POSIXct
>>>>> values
>>>>> in a data.frame?
>>>>> If yes, what would be the recommended work around?
>>>>>
>>>>> I have been trying to find documentation or online discussions about
>>>>> this
>>>>> warning but no luck so far. I see R NEWS
>>>>> <https://cran.r-project.org/doc/manuals/r-release/NEWS.html> mentions
>>>>> updates to POSIXct related objects several times in the past year but
>>>>> those
>>>>> seem to be different issues.
>>>>>
>>>>> Best,
>>>>>
>>>>> Vincent
>>>>>
>>>>>      [[alternative HTML version deleted]]
>>>>>
>>>>> ______________________________________________
>>>>> R-package-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> 	[[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From dewey @end|ng |rom dunn|ngton@c@  Thu Jul  6 20:22:26 2023
From: dewey @end|ng |rom dunn|ngton@c@ (Dewey Dunnington)
Date: Thu, 06 Jul 2023 15:22:26 -0300
Subject: [R-pkg-devel] Best practices for CRAN package using Go
Message-ID: <399846c80a91ae21c96942890fc8d3b8@dunnington.ca>

Hi all,

I'm wondering if there is any precedent for using Go in a CRAN R 
package. Go is a particularly good language for writing database drivers 
for the Arrow Database Connectivity framework [1][2] and - importantly - 
there are several active developers writing these drivers from which R 
users might be able to benefit (notably, the Snowflake driver, for which 
there isn't currently a readily-available R connector).

I've wrapped two of these drivers for R that seem to build and install 
on MacOS, Linux, and Windows [3][4]; however, I am not sure if the 
pattern I used is suitable for CRAN or whether these packages will have 
to be GitHub-only for the foreseeable future. The pattern is roughly the 
same as for Rust (build a static library and link it), and the build 
process has similar requirements (a `go` binary with which `go build` 
can be run; the build process downloads dependencies as it goes just 
like `cargo build`).

Thanks in advance for any insight!

Cheers,

-dewey

[1] https://arrow.apache.org/adbc
[2] https://cran.r-project.org/package=adbcdrivermanager
[3] 
https://github.com/apache/arrow-adbc/tree/main/r/adbcflightsql#readme
[4] 
https://github.com/apache/arrow-adbc/tree/main/r/adbcsnowflake#readme


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Fri Jul  7 09:15:36 2023
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Fri, 7 Jul 2023 09:15:36 +0200
Subject: [R-pkg-devel] Warning 'as.data.frame.POSIXct()' is deprecated
In-Reply-To: <4d7bc097-0ea9-96b2-81ea-36203a7f7310@hiddenelephants.co.uk>
References: <CALnEB16CAR28kTtkvVcEOQj3Tmyc_rwCjckwexnQsA3_ZkFPCg@mail.gmail.com>
 <1e8bc3aa-1614-3cd4-f0db-01735c152e7f@hiddenelephants.co.uk>
 <15178f56-0d28-e7fa-000f-959c00dd63ca@hiddenelephants.co.uk>
 <CALnEB17VsNZC5U_usC+qxXgx4ngZFwGpO2W_Tg8L6WQ9rm83Qg@mail.gmail.com>
 <87wmzdcg23.fsf@aldus>
 <4d7bc097-0ea9-96b2-81ea-36203a7f7310@hiddenelephants.co.uk>
Message-ID: <25767.48024.101154.596908@stat.math.ethz.ch>

>>>>> Tim Taylor 
>>>>>     on Thu, 6 Jul 2023 15:11:41 +0100 writes:

    > Ah yes ... and reading the as.data.frame help we see (emphasis mine):
    > "... Direct calls to as.data.frame.<class>() are still possible (*base 
    > package!*), for 12 atomic base classes, but will deprecated ..."

    > So it does seem that a lot of these warnings are triggered by base R and 
    > updating this code may be a work in progress.


    > A little tangential (but related) to this though is still the fact that 
    > we can trigger the warning with:

    > lapply(Sys.Date(), as.data.frame)

    > so I wonder if the code in base/R/zzz.R 
    > (https://github.com/wch/r-source/blob/9f1940663f902174034a01197e55fd17c767213a/src/library/base/R/zzz.R#L664-L686) 
    > does need tweaking?

    > At this stage this is probably more a question for R-devel though.

Indeed. ... and so I've sent a long reply to you, Enrico,
Vincent *AND* the R-devel mailing list.  In its archives you see it here

     https://stat.ethz.ch/pipermail/r-devel/2023-July/082725.html

With thanks to Vincent, Tim, Enrico, (and Mikael who started
"moving" this to R-devel, see there).

Martin

--
Martin Maechler
ETH Zurich   and   R Core team


From yut@n|@|n| @end|ng |rom gm@||@com  Mon Jul 10 10:24:37 2023
From: yut@n|@|n| @end|ng |rom gm@||@com (Hiroaki Yutani)
Date: Mon, 10 Jul 2023 17:24:37 +0900
Subject: [R-pkg-devel] Is it a wrong assumption that ${R_HOME}/lib always
 exists?
Message-ID: <CALyqOb-9xoBMDg_Xd69Gmju1Fj8rqoRAA2344giXKPiKq=Nr-A@mail.gmail.com>

Hi,

My package, string2path, using Rust fails on the CRAN check of MKL [1],
with an error that seems irrelevant to MKL. The error says:

>   thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value:
Os { code: 2, kind: NotFound, message: "No such file or directory" }',
/data/gannet/ripley/R/packages/tests-MKL/string2path/src/rust/vendor/libR-sys/build.rs:637
:40

The line 637 of build.rs of libR-sys crate is here [2]:

    r_paths.library.canonicalize().unwrap().display()

Compared to the previous version, which didn't experience such a failure,
.canonicalize() was added, and it seems this is the cause. This method
normalizes the path expression like R's normalizePath(), and it fails
because the path specified didn't exist.

libR-sys assumes the path to R's shared libraries is `${R_HOME}/lib` on
Unix-alike platforms. Is it possible that this path doesn't exist on the
MKL server? Actually, it compiles fine on the other Linux platforms, so I'm
wondering what's different there from the other servers.

Best,
Yutani

[1]: https://cran.r-project.org/web/checks/check_results_string2path.html
[2]: https://github.com/extendr/libR-sys/blob/v0.5.0/build.rs#L637C1-L637C58

	[[alternative HTML version deleted]]


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Mon Jul 10 10:51:46 2023
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Mon, 10 Jul 2023 10:51:46 +0200
Subject: [R-pkg-devel] 
 Is it a wrong assumption that ${R_HOME}/lib always exists?
In-Reply-To: <CALyqOb-9xoBMDg_Xd69Gmju1Fj8rqoRAA2344giXKPiKq=Nr-A@mail.gmail.com>
References: <CALyqOb-9xoBMDg_Xd69Gmju1Fj8rqoRAA2344giXKPiKq=Nr-A@mail.gmail.com>
Message-ID: <25771.50850.238743.106346@stat.math.ethz.ch>

>>>>> Hiroaki Yutani 
>>>>>     on Mon, 10 Jul 2023 17:24:37 +0900 writes:

[...............]

Short answer to your questsion (from the 'Subject') is :    NO !
For an example, see below:

    > libR-sys assumes the path to R's shared libraries is
    > `${R_HOME}/lib` on Unix-alike platforms.

In some configurations, R does not need *any* shared libraries,
and there,  $R_HOME/lib  does *not* exist.

E.g., I have one of my R-devel versions installed (on Fedora
Linux) with

        ../R/configure --with-blas=-lflexiblas 

using the nice, currently Fedora/Redhat-only "flexiblas"
approach, with which I can nicely switch the versions of BLAS
and Lapack libraries that R works with from within R.

As that version of R is not "shared", i.e., no libR.so , *and*
gets both its BLAS and Lapack libraries from "external" (not
from R), there's no need for a ./lib/  and so none is created.

Martin Maechler
ETH Zurich  and  R Core Team


    > Is it possible
    > that this path doesn't exist on the MKL server? 

    > Actually, it compiles fine on the other Linux platforms,
    > so I'm wondering what's different there from the other
    > servers.


    > Best, Yutani
    > 	[[alternative HTML version deleted]]


From yut@n|@|n| @end|ng |rom gm@||@com  Mon Jul 10 11:41:29 2023
From: yut@n|@|n| @end|ng |rom gm@||@com (Hiroaki Yutani)
Date: Mon, 10 Jul 2023 18:41:29 +0900
Subject: [R-pkg-devel] 
 Is it a wrong assumption that ${R_HOME}/lib always exists?
In-Reply-To: <25771.50850.238743.106346@stat.math.ethz.ch>
References: <CALyqOb-9xoBMDg_Xd69Gmju1Fj8rqoRAA2344giXKPiKq=Nr-A@mail.gmail.com>
 <25771.50850.238743.106346@stat.math.ethz.ch>
Message-ID: <CALyqOb8YQgfR1zDY68HHEwiRfR-50upVih6So-aSPy35mMHp7Q@mail.gmail.com>

Thanks so much for the quick response. It answered everything!
It was my mistake that I didn't consider these types of installations.
I'll fix my package as soon as I can.

Best,
Yutani

2023?7?10?(?) 17:51 Martin Maechler <maechler at stat.math.ethz.ch>:

> >>>>> Hiroaki Yutani
> >>>>>     on Mon, 10 Jul 2023 17:24:37 +0900 writes:
>
> [...............]
>
> Short answer to your questsion (from the 'Subject') is :    NO !
> For an example, see below:
>
>     > libR-sys assumes the path to R's shared libraries is
>     > `${R_HOME}/lib` on Unix-alike platforms.
>
> In some configurations, R does not need *any* shared libraries,
> and there,  $R_HOME/lib  does *not* exist.
>
> E.g., I have one of my R-devel versions installed (on Fedora
> Linux) with
>
>         ../R/configure --with-blas=-lflexiblas
>
> using the nice, currently Fedora/Redhat-only "flexiblas"
> approach, with which I can nicely switch the versions of BLAS
> and Lapack libraries that R works with from within R.
>
> As that version of R is not "shared", i.e., no libR.so , *and*
> gets both its BLAS and Lapack libraries from "external" (not
> from R), there's no need for a ./lib/  and so none is created.
>
> Martin Maechler
> ETH Zurich  and  R Core Team
>
>
>     > Is it possible
>     > that this path doesn't exist on the MKL server?
>
>     > Actually, it compiles fine on the other Linux platforms,
>     > so I'm wondering what's different there from the other
>     > servers.
>
>
>     > Best, Yutani
>     >   [[alternative HTML version deleted]]
>
>

	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Mon Jul 10 16:09:51 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Mon, 10 Jul 2023 17:09:51 +0300
Subject: [R-pkg-devel] Best practices for CRAN package using Go
In-Reply-To: <399846c80a91ae21c96942890fc8d3b8@dunnington.ca>
References: <399846c80a91ae21c96942890fc8d3b8@dunnington.ca>
Message-ID: <20230710170951.35efc274@arachnoid>

? Thu, 06 Jul 2023 15:22:26 -0300
Dewey Dunnington <dewey at dunnington.ca> ?????:

> I've wrapped two of these drivers for R that seem to build and
> install on MacOS, Linux, and Windows [3][4]; however, I am not sure
> if the pattern I used is suitable for CRAN or whether these packages
> will have to be GitHub-only for the foreseeable future.

There are a few parts to following the CRAN policy [*] regarding
external dependencies.

I think (but don't know for sure) that your package will not be allowed
to download Go by itself. The policy says: "Only as a last resort and
with the agreement of the CRAN team should a package download
pre-compiled software."

An already installed Go should be able to "first look to see if [a
dependency] is already installed and if so is of a suitable version"
when installing the dependencies of the Go part of the code. The go.mod
and go.sum files specify the exact versions and checksums of the
dependencies, which satisfies the requirement for fixed dependency
versions ("it is acceptable to download them as part of installation,
but do ensure that the download is of a fixed version rather than the
latest"), so your package seems to be fine in this respect.

One more thing: when bootstrapping the source package, can you run go
mod vendor [**] in order to bundle *all* the Go dependencies together
with the package? Is the resulting directory prohibitively large? Would
it satisfy the CRAN policy preference to "include the library sources
in the package and compile them as part of package installation"
without requiring Internet access? Unfortunately, I don't know enough
about Go to answer these questions myself. I think that a small bundle
of vendored Go code would be preferrable for CRAN but *not* preferrable
for packaging in a GNU/Linux distro like Debian where dynamic linking
(in the widest possible sense) is a strong preference.

-- 
Best regards,
Ivan

[*] https://cran.r-project.org/web/packages/policies.html

[**] https://go.dev/ref/mod#vendoring


From kry|ov@r00t @end|ng |rom gm@||@com  Mon Jul 10 16:30:34 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Mon, 10 Jul 2023 17:30:34 +0300
Subject: [R-pkg-devel] A replacement idiom for \value{\item{\var{...}}{}}
Message-ID: <20230710173034.1c241295@arachnoid>

Hello R-package-devel,

I've got a function that returns a data.frame. The columns (and their
names) of the return value are parametrised by the arguments of the
function. See, for example, the following function:

foo <- function(n = 10, out.M = c(2, 3, 5))
 as.data.frame(setNames(
  lapply(out.M, \(M) M * runif(n)),
  paste0('fooval.', out.M)
 ))

If I call it as foo(out.M = 1), I get a data.frame containing a column
named fooval.1. If I call it as foo(), I get columns fooval.2,
fooval.3, and fooval.5 instead.

I would like to document this relationship between the arguments and
the output value like so:

\arguments{
 \item{out.M}{Return the foo vectors for every M value given here.}
 % more arguments that behave in a similar manner
}
% ...
\value{
 A \code{data.frame} containing the following columns:

 \item{fooval.\var{m}}{
  The foo values, for every \var{m} in \code{out.M}.
 }
 % more parametrised output columns to follow
}

It turns out that \value{} description lists now escape their \item{}
arguments, preventing me from using \var{} markup there, but only in
plain text and HTML outputs. I think that the change occurred in the
last year or so; old versions of R process markup in \item{} arguments
even in \value{} description lists, but they have other Rd problems. I
understand the motivation of the change: in \arguments{} and \value{}
environments, it makes sense to typeset \item{} headings as \code{}.

Should I try to fix Rd2latex (or at least file a ticket) to escape the
\item{...} arguments in \value{} (but not \describe{}!) environments
too?

What would be a better Rd idiom for such function argument ? output
component relationships?

-- 
Best regards,
Ivan


From @eb@meyer @end|ng |rom |@u@de  Mon Jul 10 20:08:23 2023
From: @eb@meyer @end|ng |rom |@u@de (Sebastian Meyer)
Date: Mon, 10 Jul 2023 20:08:23 +0200
Subject: [R-pkg-devel] 
 A replacement idiom for \value{\item{\var{...}}{}}
In-Reply-To: <20230710173034.1c241295@arachnoid>
References: <20230710173034.1c241295@arachnoid>
Message-ID: <ca3da5f8-8b0f-6465-15d7-1c730e08ff0e@fau.de>

Am 10.07.23 um 16:30 schrieb Ivan Krylov:
> Hello R-package-devel,
> 
> I've got a function that returns a data.frame. The columns (and their
> names) of the return value are parametrised by the arguments of the
> function. See, for example, the following function:
> 
> foo <- function(n = 10, out.M = c(2, 3, 5))
>   as.data.frame(setNames(
>    lapply(out.M, \(M) M * runif(n)),
>    paste0('fooval.', out.M)
>   ))
> 
> If I call it as foo(out.M = 1), I get a data.frame containing a column
> named fooval.1. If I call it as foo(), I get columns fooval.2,
> fooval.3, and fooval.5 instead.
> 
> I would like to document this relationship between the arguments and
> the output value like so:
> 
> \arguments{
>   \item{out.M}{Return the foo vectors for every M value given here.}
>   % more arguments that behave in a similar manner
> }
> % ...
> \value{
>   A \code{data.frame} containing the following columns:
> 
>   \item{fooval.\var{m}}{
>    The foo values, for every \var{m} in \code{out.M}.
>   }
>   % more parametrised output columns to follow
> }
> 
> It turns out that \value{} description lists now escape their \item{}
> arguments, preventing me from using \var{} markup there, but only in
> plain text and HTML outputs. I think that the change occurred in the
> last year or so; old versions of R process markup in \item{} arguments
> even in \value{} description lists, but they have other Rd problems. I
> understand the motivation of the change: in \arguments{} and \value{}
> environments, it makes sense to typeset \item{} headings as \code{}.

Thank you for the report. AFAICS, this only affects HTML conversion in R 
 >= 4.3.0. It is an "internally" known limitation (see corresponding 
source code comment in Rd2HTML).

OTOH, WRE does not clearly specify that \item labels in \arguments or 
\value could actually contain any markup. That said, the referenced 
"Parsing Rd files" document 
(<https://developer.r-project.org/parseRd.pdf>) does tell us that 
\item{}{} arguments are parsed as LaTeX-like text, \dots probably being 
the most common example.

> 
> Should I try to fix Rd2latex (or at least file a ticket) to escape the
> \item{...} arguments in \value{} (but not \describe{}!) environments
> too?

Yes, I think this belongs to "R-devel" and a problem report in Bugzilla 
would be useful; the problem being that Rd markup in \item labels is 
handled inconsistently by the Rd converters. It is currently unclear to 
me, however, which one is at fault here. Your example at least provides 
one (admittedly quiet special) use case for LaTeX-like content in an 
\item label of the \value section.

> 
> What would be a better Rd idiom for such function argument ? output
> component relationships?
> 

I think a workaround that currently works for your use case is to use 
\code{fooval.\var{m}} as the label (i.e., wrapped inside \code).

Best regards,

	Sebastian Meyer


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Wed Jul 12 09:40:20 2023
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Wed, 12 Jul 2023 09:40:20 +0200
Subject: [R-pkg-devel] issues with CRAN incoming submissions / summer break
 announcement
Message-ID: <7c654dd5-721a-cdb6-f432-94b9ddbae176@statistik.tu-dortmund.de>

Dear developers,

CRAN submissions are currently partly not possible due to some 
infrastructure issues. Please so NOT contact us if you see "Unpacking 
failed. Please make sure the tar.gz was created with R CMD build. [...]".

In addition, processing the CRAN incoming queue of packages (CRAN 
pretest) is currently delayed by 2 days.

Both issues are known and CRAN sysadmins will work on the issues.


Note that this year's CRAN submission summer break will be from Jul 21, 
2023 to Aug 7, 2023.

Best,
Uwe Ligges
for the CRAN team


From ru@@e||@g@@|mond @end|ng |rom gm@||@com  Wed Jul 12 15:41:11 2023
From: ru@@e||@g@@|mond @end|ng |rom gm@||@com (Russell Almond)
Date: Wed, 12 Jul 2023 09:41:11 -0400
Subject: [R-pkg-devel] Package Load fails to find 3rd Party DLL
Message-ID: <7feb7697-be2f-7bf8-3e7c-4276a0cb69c8@gmail.com>

I have an R package (RNetica available at 
https://ralmond.r-universe.dev/RNetica and 
https://github.com/ralmond/RNetica) which links to a 3rd party library 
Netica.dll, so RNetica.dll (built from my C code) calls the 3rd party code.

The config.win script downloads Netica.dll and moves it into the 
libs/x64 directory, where it should get loaded when RNetica.dll is 
loaded.? However this is not happening:

Here is the relevant portion of the build log (build is on R-universe, 
but I think it is the same script as CRAN):

```

cp 
"/d/a/ralmond/ralmond/RNETIC~1.RCH/00_PKG~1/RNetica/src/Netica/Netica_API_5
10/lib64/Netica.dll" 
"D:/a/ralmond/ralmond/RNetica.Rcheck/00LOCK-RNetica/00new/R
Netica/libs/x64"
 ? cp 
"/d/a/ralmond/ralmond/RNETIC~1.RCH/00_PKG~1/RNetica/src/Netica/Netica_API_5
10/lib64/Netica.lib" 
"D:/a/ralmond/ralmond/RNetica.Rcheck/00LOCK-RNetica/00new/R
Netica/libs/x64"
 ? C:\rtools43\x86_64-w64-mingw32.static.posix\bin\nm.exe: 'NeticaDLL': 
No such f
ile
 ? gcc -shared -s -static-libgcc -o RNetica.dll tmp.def Cases.o 
Continuous.o Edge
s.o Experience.o Inference.o Networks.o Node.o Random.o Registration.o 
Session.o
 ?-L. 
-LD:/a/ralmond/ralmond/RNetica.Rcheck/00LOCK-RNetica/00new/RNetica/libs/x64
 ?-lNetica -LC:/rtools43/x86_64-w64-mingw32.static.posix/lib/x64 
-LC:/rtools43/x8
6_64-w64-mingw32.static.posix/lib -LC:/R/bin/x64 -lR
 ? C:\rtools43\x86_64-w64-mingw32.static.posix\bin/ld.exe: internal 
error: aborti
ng at ../../binutils-2.40/ld/ldlang.c:527 in compare_section
 ? C:\rtools43\x86_64-w64-mingw32.static.posix\bin/ld.exe: please report 
this bug
 ? collect2.exe: error: ld returned 1 exit status
```

A little bit of searching on the internet, indicates that Windows 
sometimes reports Dll A not found when Dll A needs Dll B and it can't 
find B.

This used to work under older versions of R and the tool chain and I 
don't think I've changed anything related to the C side of the code.

1) Have the paths changed, so I no longer should be moving the (64 bit 
version of the) 3rd party DLL to `libs/x64`?

2) Is there something that has changed with the mingw tools (nm.exe and 
ld.exe) which are changing things?

3) Is there a change on how win32 and win64 variants are handled (I have 
both 32 and 64 bit copies of the 3rd party DLL, I just need to move them 
to the right places).

Thanks for any enlightenment you can offer,

 ??? --Russell Almond




-- 
Russell Almond
https://ralmond.net/

	[[alternative HTML version deleted]]


From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Wed Jul 12 16:00:14 2023
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Wed, 12 Jul 2023 07:00:14 -0700
Subject: [R-pkg-devel] Package Load fails to find 3rd Party DLL
In-Reply-To: <7feb7697-be2f-7bf8-3e7c-4276a0cb69c8@gmail.com>
References: <7feb7697-be2f-7bf8-3e7c-4276a0cb69c8@gmail.com>
Message-ID: <02C6131C-2CD4-41FA-9B32-B0B74969F86E@dcn.davis.ca.us>

Use of precompiled code is not allowed in CRAN. This looks like your package needs to be distributed elsewhere... e.g. via GitHub.

On July 12, 2023 6:41:11 AM PDT, Russell Almond <russell.g.almond at gmail.com> wrote:
>I have an R package (RNetica available at 
>https://ralmond.r-universe.dev/RNetica and 
>https://github.com/ralmond/RNetica) which links to a 3rd party library 
>Netica.dll, so RNetica.dll (built from my C code) calls the 3rd party code.
>
>The config.win script downloads Netica.dll and moves it into the 
>libs/x64 directory, where it should get loaded when RNetica.dll is 
>loaded.? However this is not happening:
>
>Here is the relevant portion of the build log (build is on R-universe, 
>but I think it is the same script as CRAN):
>
>```
>
>cp 
>"/d/a/ralmond/ralmond/RNETIC~1.RCH/00_PKG~1/RNetica/src/Netica/Netica_API_5
>10/lib64/Netica.dll" 
>"D:/a/ralmond/ralmond/RNetica.Rcheck/00LOCK-RNetica/00new/R
>Netica/libs/x64"
> ? cp 
>"/d/a/ralmond/ralmond/RNETIC~1.RCH/00_PKG~1/RNetica/src/Netica/Netica_API_5
>10/lib64/Netica.lib" 
>"D:/a/ralmond/ralmond/RNetica.Rcheck/00LOCK-RNetica/00new/R
>Netica/libs/x64"
> ? C:\rtools43\x86_64-w64-mingw32.static.posix\bin\nm.exe: 'NeticaDLL': 
>No such f
>ile
> ? gcc -shared -s -static-libgcc -o RNetica.dll tmp.def Cases.o 
>Continuous.o Edge
>s.o Experience.o Inference.o Networks.o Node.o Random.o Registration.o 
>Session.o
> ?-L. 
>-LD:/a/ralmond/ralmond/RNetica.Rcheck/00LOCK-RNetica/00new/RNetica/libs/x64
> ?-lNetica -LC:/rtools43/x86_64-w64-mingw32.static.posix/lib/x64 
>-LC:/rtools43/x8
>6_64-w64-mingw32.static.posix/lib -LC:/R/bin/x64 -lR
> ? C:\rtools43\x86_64-w64-mingw32.static.posix\bin/ld.exe: internal 
>error: aborti
>ng at ../../binutils-2.40/ld/ldlang.c:527 in compare_section
> ? C:\rtools43\x86_64-w64-mingw32.static.posix\bin/ld.exe: please report 
>this bug
> ? collect2.exe: error: ld returned 1 exit status
>```
>
>A little bit of searching on the internet, indicates that Windows 
>sometimes reports Dll A not found when Dll A needs Dll B and it can't 
>find B.
>
>This used to work under older versions of R and the tool chain and I 
>don't think I've changed anything related to the C side of the code.
>
>1) Have the paths changed, so I no longer should be moving the (64 bit 
>version of the) 3rd party DLL to `libs/x64`?
>
>2) Is there something that has changed with the mingw tools (nm.exe and 
>ld.exe) which are changing things?
>
>3) Is there a change on how win32 and win64 variants are handled (I have 
>both 32 and 64 bit copies of the 3rd party DLL, I just need to move them 
>to the right places).
>
>Thanks for any enlightenment you can offer,
>
> ??? --Russell Almond
>
>
>
>

-- 
Sent from my phone. Please excuse my brevity.


From dewey @end|ng |rom dunn|ngton@c@  Wed Jul 12 16:36:30 2023
From: dewey @end|ng |rom dunn|ngton@c@ (Dewey Dunnington)
Date: Wed, 12 Jul 2023 11:36:30 -0300
Subject: [R-pkg-devel] Best practices for CRAN package using Go
In-Reply-To: <20230710170951.35efc274@arachnoid>
References: <399846c80a91ae21c96942890fc8d3b8@dunnington.ca>
 <20230710170951.35efc274@arachnoid>
Message-ID: <d4522c8b37d7b8e1a3441a50c3988246@dunnington.ca>

Thank you! It seems I needed the refresher on CRAN policy regarding 
downloading sources: it seems like the go.sum/go.mod provide sufficient 
checksumming to comply with the policy, as you noted (with `go mod 
vendor` as a backup if this turns out to not be acceptable). Downloading 
Go is probably out based on the advice for Rust that explicitly forbids 
this.

Cheers!

-dewey

On 2023-07-10 11:09, Ivan Krylov wrote:
> ? Thu, 06 Jul 2023 15:22:26 -0300
> Dewey Dunnington <dewey at dunnington.ca> ?????:
> 
>> I've wrapped two of these drivers for R that seem to build and
>> install on MacOS, Linux, and Windows [3][4]; however, I am not sure
>> if the pattern I used is suitable for CRAN or whether these packages
>> will have to be GitHub-only for the foreseeable future.
> 
> There are a few parts to following the CRAN policy [*] regarding
> external dependencies.
> 
> I think (but don't know for sure) that your package will not be allowed
> to download Go by itself. The policy says: "Only as a last resort and
> with the agreement of the CRAN team should a package download
> pre-compiled software."
> 
> An already installed Go should be able to "first look to see if [a
> dependency] is already installed and if so is of a suitable version"
> when installing the dependencies of the Go part of the code. The go.mod
> and go.sum files specify the exact versions and checksums of the
> dependencies, which satisfies the requirement for fixed dependency
> versions ("it is acceptable to download them as part of installation,
> but do ensure that the download is of a fixed version rather than the
> latest"), so your package seems to be fine in this respect.
> 
> One more thing: when bootstrapping the source package, can you run go
> mod vendor [**] in order to bundle *all* the Go dependencies together
> with the package? Is the resulting directory prohibitively large? Would
> it satisfy the CRAN policy preference to "include the library sources
> in the package and compile them as part of package installation"
> without requiring Internet access? Unfortunately, I don't know enough
> about Go to answer these questions myself. I think that a small bundle
> of vendored Go code would be preferrable for CRAN but *not* preferrable
> for packaging in a GNU/Linux distro like Debian where dynamic linking
> (in the widest possible sense) is a strong preference.
> 
> --
> Best regards,
> Ivan
> 
> [*] https://cran.r-project.org/web/packages/policies.html
> 
> [**] https://go.dev/ref/mod#vendoring


From kry|ov@r00t @end|ng |rom gm@||@com  Wed Jul 12 18:29:14 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Wed, 12 Jul 2023 19:29:14 +0300
Subject: [R-pkg-devel] 
 A replacement idiom for \value{\item{\var{...}}{}}
In-Reply-To: <ca3da5f8-8b0f-6465-15d7-1c730e08ff0e@fau.de>
References: <20230710173034.1c241295@arachnoid>
 <ca3da5f8-8b0f-6465-15d7-1c730e08ff0e@fau.de>
Message-ID: <20230712192914.589b233c@arachnoid>

Dear Sebastian,

Thank you for the advice!

On Mon, 10 Jul 2023 20:08:23 +0200
Sebastian Meyer <seb.meyer at fau.de> wrote:

> I think a workaround that currently works for your use case is to use 
> \code{fooval.\var{m}} as the label (i.e., wrapped inside \code).

The workaround works well, but I think I agree that \item{fooval.<m>}{}
is the the better option here. (I'm tempted, but I shouldn't use
\item{\code{fooval.\var{<m>}}}, because \code{} arguments should be
syntactically valid R.)

I will also use \var{<m>} outside the \item headers, at least for now.

-- 
Best regards,
Ivan


From @|mon@urb@nek @end|ng |rom R-project@org  Thu Jul 13 01:01:20 2023
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Thu, 13 Jul 2023 11:01:20 +1200
Subject: [R-pkg-devel] Best practices for CRAN package using Go
In-Reply-To: <d4522c8b37d7b8e1a3441a50c3988246@dunnington.ca>
References: <399846c80a91ae21c96942890fc8d3b8@dunnington.ca>
 <20230710170951.35efc274@arachnoid>
 <d4522c8b37d7b8e1a3441a50c3988246@dunnington.ca>
Message-ID: <F85C4A1A-75FA-46C1-B2FC-1EF1E1F6E4F3@R-project.org>

Dewey,

you will definitely need to include all the necessary sources for your package. You may want to have a look at the "Using Rust"[1] document linked from the CRAN policy. I think Go is quite similar to Rust in that sense so you should use the same approach, i.e. checking for system and user installations (for go the official location is /usr/local/go/bin/go and it may not be on the PATH), declaring Go version dependency and making sure your package has included all module dependency sources (i.e. don't use install-time module resolution/download).

If you need to include a large source tar ball that is not permissible on CRAN, I'd recommend using Zenodo.org since it is specifically designed to facilitate longevity and reproducibility (as opposed to Github or other transient storage that may disappear at any point).

All that said, you may run into the same issues as Rust (errors and segfaults due to limited interoperability of compilers) so use with care and test well. External bindings like Rust or Go are only provided on "best effort" basis.

Cheers,
Simon

[1] - https://cran.r-project.org/web/packages/using_rust.html

PS: go is now available on the CRAN macOS builder machines and the Mac Builder (https://mac.r-project.org/macbuilder/submit.html).


> On 13/07/2023, at 2:36 AM, Dewey Dunnington <dewey at dunnington.ca> wrote:
> 
> Thank you! It seems I needed the refresher on CRAN policy regarding downloading sources: it seems like the go.sum/go.mod provide sufficient checksumming to comply with the policy, as you noted (with `go mod vendor` as a backup if this turns out to not be acceptable). Downloading Go is probably out based on the advice for Rust that explicitly forbids this.
> 
> Cheers!
> 
> -dewey
> 
> On 2023-07-10 11:09, Ivan Krylov wrote:
>> ? Thu, 06 Jul 2023 15:22:26 -0300
>> Dewey Dunnington <dewey at dunnington.ca> ?????:
>>> I've wrapped two of these drivers for R that seem to build and
>>> install on MacOS, Linux, and Windows [3][4]; however, I am not sure
>>> if the pattern I used is suitable for CRAN or whether these packages
>>> will have to be GitHub-only for the foreseeable future.
>> There are a few parts to following the CRAN policy [*] regarding
>> external dependencies.
>> I think (but don't know for sure) that your package will not be allowed
>> to download Go by itself. The policy says: "Only as a last resort and
>> with the agreement of the CRAN team should a package download
>> pre-compiled software."
>> An already installed Go should be able to "first look to see if [a
>> dependency] is already installed and if so is of a suitable version"
>> when installing the dependencies of the Go part of the code. The go.mod
>> and go.sum files specify the exact versions and checksums of the
>> dependencies, which satisfies the requirement for fixed dependency
>> versions ("it is acceptable to download them as part of installation,
>> but do ensure that the download is of a fixed version rather than the
>> latest"), so your package seems to be fine in this respect.
>> One more thing: when bootstrapping the source package, can you run go
>> mod vendor [**] in order to bundle *all* the Go dependencies together
>> with the package? Is the resulting directory prohibitively large? Would
>> it satisfy the CRAN policy preference to "include the library sources
>> in the package and compile them as part of package installation"
>> without requiring Internet access? Unfortunately, I don't know enough
>> about Go to answer these questions myself. I think that a small bundle
>> of vendored Go code would be preferrable for CRAN but *not* preferrable
>> for packaging in a GNU/Linux distro like Debian where dynamic linking
>> (in the widest possible sense) is a strong preference.
>> --
>> Best regards,
>> Ivan
>> [*] https://cran.r-project.org/web/packages/policies.html
>> [**] https://go.dev/ref/mod#vendoring
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 


From edd @end|ng |rom deb|@n@org  Thu Jul 13 02:02:57 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Wed, 12 Jul 2023 19:02:57 -0500
Subject: [R-pkg-devel] macOS results not mirrored/updated at CRAN
Message-ID: <25775.16177.937585.974774@rob.eddelbuettel.com>


Simon,

It looks like some result mirroring / pushing from your machines to CRAN fell
over.  One of my packages, digest 0.6.33, arrived on CRAN about a week ago,
is built almost everywhere (apart from macOS_release_x86_64 stuck at 0.6.32)
but the result page still has nags from the 0.6.31 build for macOS release
and one of the oldrel builds.

Could you look into that?  And if it is "just" general issue at CRAN as per
Uwe's email earlier I will happily wait.  But it has been in this frozen /
partial update of results state for a few days now.

Thanks,  Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From yut@n|@|n| @end|ng |rom gm@||@com  Thu Jul 13 02:37:41 2023
From: yut@n|@|n| @end|ng |rom gm@||@com (Hiroaki Yutani)
Date: Thu, 13 Jul 2023 09:37:41 +0900
Subject: [R-pkg-devel] Feedback on "Using Rust in CRAN packages"
Message-ID: <CALyqOb__9-M_rEJ20dz3T07aNKP9_BRG25jdQ248WJA0ShuFCA@mail.gmail.com>

Hi,

I'm glad to see CRAN now has its official policy about Rust [1]!
It seems it probably needs some feedback from those who are familiar with
the Rust workflow. I'm not an expert, but let me leave some quick feedback.
This email is sent to the R-package-devel mailing list as well as to cran@~
so that we can publicly discuss.

It seems most of the concern is about how to make the build deterministic.
In this regard, the policy should encourage including "Cargo.lock" file
[2]. Cargo.lock is created on the first compile, and the resolved versions
of dependencies are recorded. As long as this file exists, the dependency
versions are locked to the ones in this file, except when the package
author explicitly updates the versions.

Cargo.lock also records the SHA256 checksums of the crates if they are from
crates.io, Rust's official crate registry. If the checksums don't match,
the build will fail with the following message:

    error: checksum for `foo v0.1.2` changed between lock files

    this could be indicative of a few possible errors:

        * the lock file is corrupt
        * a replacement source in use (e.g., a mirror) returned a different
checksum
        * the source itself may be corrupt in one way or another

    unable to verify that `foo v0.1.2` is the same as when the lockfile was
generated

For dependencies from Git repositories, Cargo.lock records the commit
hashes. So, the version of the source code (not the version of the crate)
is uniquely determined. That said, unlike cargo.io, it's possible that the
commit or the Git repository itself has disappeared at the time of
building, which makes the build fail. So, it might be reasonable the CRAN
policy prohibits the use of Git dependency unless the source code is
bundled. I have no strong opinion here.

Accordingly, I believe this sentence

> In practice maintainers have found it nigh-impossible to meet these
conditions whilst downloading as they have too little control.

is not quite true. More specifically, these things

> The standard way to download a Rust ?crate? is by its version number, and
these have been changed without changing their number.
> Downloading a ?crate? normally entails downloading its dependencies, and
that is done without fixing their version numbers

won't happen if the R package does include Cargo.lock because

- if the crate is from crates.io, "the version can never be overwritten,
and the code cannot be deleted" there [3]
- if the crate is from a Git repository, the commit hash is unique in its
nature. The version of the crate might be the same between commits, but a
git dependency is specified by the commit hash, not the version of the
crate.

I'm keen to know what problems the CRAN maintainers have experienced that
Cargo.lock cannot solve. I hope we can help somehow to improve the policy.

Best,
Yutani

[1]: https://cran.r-project.org/web/packages/using_rust.html
[2]: https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
[3]: https://doc.rust-lang.org/cargo/reference/publishing.html

	[[alternative HTML version deleted]]


From @|mon@urb@nek @end|ng |rom R-project@org  Thu Jul 13 04:34:47 2023
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Thu, 13 Jul 2023 14:34:47 +1200
Subject: [R-pkg-devel] Feedback on "Using Rust in CRAN packages"
In-Reply-To: <CALyqOb__9-M_rEJ20dz3T07aNKP9_BRG25jdQ248WJA0ShuFCA@mail.gmail.com>
References: <CALyqOb__9-M_rEJ20dz3T07aNKP9_BRG25jdQ248WJA0ShuFCA@mail.gmail.com>
Message-ID: <389056FE-88DD-4A07-8FD1-63E0F286B3A8@R-project.org>

Yutani,

I'm not quite sure your reading fully matches the intent of the policy. Cargo.lock is not sufficient, it is expected that the package will provide *all* the sources, it is not expected to use cargo to resolve them from random (possibly inaccessible) places. So the package author is expected to either include the sources in the package *or* (if prohibitive due to extreme size) have a release tar ball available at a fixed, secure, reliable location (I was recommending Zenodo.org for that reason - GitHub is neither fixed nor reliable by definition).

Based on that, I'm not sure I fully understand the scope of your proposal for improvement. Carlo.lock is certainly the first step that the package author should take in creating the distribution tar ball so you can fix the versions, but it is not sufficient as the next step involves collecting the related sources. We don't want R users to be involved in that can of worms (especially since the lock file itself provides no guarantees of accessibility of the components and we don't want to have to manually inspect it), the package should be ready to be used which is why it has to do that step first. Does that explain the intent better? (In general, the downloading at install time is actually a problem, because it's not uncommon to use R in environments that have no Internet access, but the download is a concession for extreme cases where the tar balls may be too big to make it part of the package, but it's yet another can of worms...).

Cheers,
Simon



> On 13/07/2023, at 12:37 PM, Hiroaki Yutani <yutani.ini at gmail.com> wrote:
> 
> Hi,
> 
> I'm glad to see CRAN now has its official policy about Rust [1]!
> It seems it probably needs some feedback from those who are familiar with
> the Rust workflow. I'm not an expert, but let me leave some quick feedback.
> This email is sent to the R-package-devel mailing list as well as to cran@~
> so that we can publicly discuss.
> 
> It seems most of the concern is about how to make the build deterministic.
> In this regard, the policy should encourage including "Cargo.lock" file
> [2]. Cargo.lock is created on the first compile, and the resolved versions
> of dependencies are recorded. As long as this file exists, the dependency
> versions are locked to the ones in this file, except when the package
> author explicitly updates the versions.
> 
> Cargo.lock also records the SHA256 checksums of the crates if they are from
> crates.io, Rust's official crate registry. If the checksums don't match,
> the build will fail with the following message:
> 
>    error: checksum for `foo v0.1.2` changed between lock files
> 
>    this could be indicative of a few possible errors:
> 
>        * the lock file is corrupt
>        * a replacement source in use (e.g., a mirror) returned a different
> checksum
>        * the source itself may be corrupt in one way or another
> 
>    unable to verify that `foo v0.1.2` is the same as when the lockfile was
> generated
> 
> For dependencies from Git repositories, Cargo.lock records the commit
> hashes. So, the version of the source code (not the version of the crate)
> is uniquely determined. That said, unlike cargo.io, it's possible that the
> commit or the Git repository itself has disappeared at the time of
> building, which makes the build fail. So, it might be reasonable the CRAN
> policy prohibits the use of Git dependency unless the source code is
> bundled. I have no strong opinion here.
> 
> Accordingly, I believe this sentence
> 
>> In practice maintainers have found it nigh-impossible to meet these
> conditions whilst downloading as they have too little control.
> 
> is not quite true. More specifically, these things
> 
>> The standard way to download a Rust ?crate? is by its version number, and
> these have been changed without changing their number.
>> Downloading a ?crate? normally entails downloading its dependencies, and
> that is done without fixing their version numbers
> 
> won't happen if the R package does include Cargo.lock because
> 
> - if the crate is from crates.io, "the version can never be overwritten,
> and the code cannot be deleted" there [3]
> - if the crate is from a Git repository, the commit hash is unique in its
> nature. The version of the crate might be the same between commits, but a
> git dependency is specified by the commit hash, not the version of the
> crate.
> 
> I'm keen to know what problems the CRAN maintainers have experienced that
> Cargo.lock cannot solve. I hope we can help somehow to improve the policy.
> 
> Best,
> Yutani
> 
> [1]: https://cran.r-project.org/web/packages/using_rust.html
> [2]: https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
> [3]: https://doc.rust-lang.org/cargo/reference/publishing.html
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 


From kev|nu@hey @end|ng |rom gm@||@com  Thu Jul 13 04:50:26 2023
From: kev|nu@hey @end|ng |rom gm@||@com (Kevin Ushey)
Date: Wed, 12 Jul 2023 19:50:26 -0700
Subject: [R-pkg-devel] Feedback on "Using Rust in CRAN packages"
In-Reply-To: <389056FE-88DD-4A07-8FD1-63E0F286B3A8@R-project.org>
References: <CALyqOb__9-M_rEJ20dz3T07aNKP9_BRG25jdQ248WJA0ShuFCA@mail.gmail.com>
 <389056FE-88DD-4A07-8FD1-63E0F286B3A8@R-project.org>
Message-ID: <CAJXgQP2qZkTEYg5=GQ3Ka9jVsAumsMq1rkZaWD+JgxBQmNKrww@mail.gmail.com>

Package authors could use 'cargo vendor' to include Rust crate sources
directly in their source R packages. Would that be acceptable?

Presumedly, the vendored sources would be built using the versions
specified in an accompanying Cargo.lock as well.

https://doc.rust-lang.org/cargo/commands/cargo-vendor.html


On Wed, Jul 12, 2023, 7:35 PM Simon Urbanek <simon.urbanek at r-project.org>
wrote:

> Yutani,
>
> I'm not quite sure your reading fully matches the intent of the policy.
> Cargo.lock is not sufficient, it is expected that the package will provide
> *all* the sources, it is not expected to use cargo to resolve them from
> random (possibly inaccessible) places. So the package author is expected to
> either include the sources in the package *or* (if prohibitive due to
> extreme size) have a release tar ball available at a fixed, secure,
> reliable location (I was recommending Zenodo.org for that reason - GitHub
> is neither fixed nor reliable by definition).
>
> Based on that, I'm not sure I fully understand the scope of your proposal
> for improvement. Carlo.lock is certainly the first step that the package
> author should take in creating the distribution tar ball so you can fix the
> versions, but it is not sufficient as the next step involves collecting the
> related sources. We don't want R users to be involved in that can of worms
> (especially since the lock file itself provides no guarantees of
> accessibility of the components and we don't want to have to manually
> inspect it), the package should be ready to be used which is why it has to
> do that step first. Does that explain the intent better? (In general, the
> downloading at install time is actually a problem, because it's not
> uncommon to use R in environments that have no Internet access, but the
> download is a concession for extreme cases where the tar balls may be too
> big to make it part of the package, but it's yet another can of worms...).
>
> Cheers,
> Simon
>
>
>
> > On 13/07/2023, at 12:37 PM, Hiroaki Yutani <yutani.ini at gmail.com> wrote:
> >
> > Hi,
> >
> > I'm glad to see CRAN now has its official policy about Rust [1]!
> > It seems it probably needs some feedback from those who are familiar with
> > the Rust workflow. I'm not an expert, but let me leave some quick
> feedback.
> > This email is sent to the R-package-devel mailing list as well as to
> cran@~
> > so that we can publicly discuss.
> >
> > It seems most of the concern is about how to make the build
> deterministic.
> > In this regard, the policy should encourage including "Cargo.lock" file
> > [2]. Cargo.lock is created on the first compile, and the resolved
> versions
> > of dependencies are recorded. As long as this file exists, the dependency
> > versions are locked to the ones in this file, except when the package
> > author explicitly updates the versions.
> >
> > Cargo.lock also records the SHA256 checksums of the crates if they are
> from
> > crates.io, Rust's official crate registry. If the checksums don't match,
> > the build will fail with the following message:
> >
> >    error: checksum for `foo v0.1.2` changed between lock files
> >
> >    this could be indicative of a few possible errors:
> >
> >        * the lock file is corrupt
> >        * a replacement source in use (e.g., a mirror) returned a
> different
> > checksum
> >        * the source itself may be corrupt in one way or another
> >
> >    unable to verify that `foo v0.1.2` is the same as when the lockfile
> was
> > generated
> >
> > For dependencies from Git repositories, Cargo.lock records the commit
> > hashes. So, the version of the source code (not the version of the crate)
> > is uniquely determined. That said, unlike cargo.io, it's possible that
> the
> > commit or the Git repository itself has disappeared at the time of
> > building, which makes the build fail. So, it might be reasonable the CRAN
> > policy prohibits the use of Git dependency unless the source code is
> > bundled. I have no strong opinion here.
> >
> > Accordingly, I believe this sentence
> >
> >> In practice maintainers have found it nigh-impossible to meet these
> > conditions whilst downloading as they have too little control.
> >
> > is not quite true. More specifically, these things
> >
> >> The standard way to download a Rust ?crate? is by its version number,
> and
> > these have been changed without changing their number.
> >> Downloading a ?crate? normally entails downloading its dependencies, and
> > that is done without fixing their version numbers
> >
> > won't happen if the R package does include Cargo.lock because
> >
> > - if the crate is from crates.io, "the version can never be overwritten,
> > and the code cannot be deleted" there [3]
> > - if the crate is from a Git repository, the commit hash is unique in its
> > nature. The version of the crate might be the same between commits, but a
> > git dependency is specified by the commit hash, not the version of the
> > crate.
> >
> > I'm keen to know what problems the CRAN maintainers have experienced that
> > Cargo.lock cannot solve. I hope we can help somehow to improve the
> policy.
> >
> > Best,
> > Yutani
> >
> > [1]: https://cran.r-project.org/web/packages/using_rust.html
> > [2]: https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
> > [3]: https://doc.rust-lang.org/cargo/reference/publishing.html
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From @|mon@urb@nek @end|ng |rom R-project@org  Thu Jul 13 04:57:57 2023
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Thu, 13 Jul 2023 14:57:57 +1200
Subject: [R-pkg-devel] Feedback on "Using Rust in CRAN packages"
In-Reply-To: <CAJXgQP2qZkTEYg5=GQ3Ka9jVsAumsMq1rkZaWD+JgxBQmNKrww@mail.gmail.com>
References: <CALyqOb__9-M_rEJ20dz3T07aNKP9_BRG25jdQ248WJA0ShuFCA@mail.gmail.com>
 <389056FE-88DD-4A07-8FD1-63E0F286B3A8@R-project.org>
 <CAJXgQP2qZkTEYg5=GQ3Ka9jVsAumsMq1rkZaWD+JgxBQmNKrww@mail.gmail.com>
Message-ID: <E4BF4174-3CF2-4DF4-8BAB-22019C5CBD53@R-project.org>



> On 13/07/2023, at 2:50 PM, Kevin Ushey <kevinushey at gmail.com> wrote:
> 
> Package authors could use 'cargo vendor' to include Rust crate sources directly in their source R packages. Would that be acceptable?
> 


Yes, that is exactly what was suggested in the original thread.

Cheers,
Simon



> Presumedly, the vendored sources would be built using the versions specified in an accompanying Cargo.lock as well.
> 
> https://doc.rust-lang.org/cargo/commands/cargo-vendor.html
> 
> 
> On Wed, Jul 12, 2023, 7:35 PM Simon Urbanek <simon.urbanek at r-project.org> wrote:
> Yutani,
> 
> I'm not quite sure your reading fully matches the intent of the policy. Cargo.lock is not sufficient, it is expected that the package will provide *all* the sources, it is not expected to use cargo to resolve them from random (possibly inaccessible) places. So the package author is expected to either include the sources in the package *or* (if prohibitive due to extreme size) have a release tar ball available at a fixed, secure, reliable location (I was recommending Zenodo.org for that reason - GitHub is neither fixed nor reliable by definition).
> 
> Based on that, I'm not sure I fully understand the scope of your proposal for improvement. Carlo.lock is certainly the first step that the package author should take in creating the distribution tar ball so you can fix the versions, but it is not sufficient as the next step involves collecting the related sources. We don't want R users to be involved in that can of worms (especially since the lock file itself provides no guarantees of accessibility of the components and we don't want to have to manually inspect it), the package should be ready to be used which is why it has to do that step first. Does that explain the intent better? (In general, the downloading at install time is actually a problem, because it's not uncommon to use R in environments that have no Internet access, but the download is a concession for extreme cases where the tar balls may be too big to make it part of the package, but it's yet another can of worms...).
> 
> Cheers,
> Simon
> 
> 
> 
> > On 13/07/2023, at 12:37 PM, Hiroaki Yutani <yutani.ini at gmail.com> wrote:
> > 
> > Hi,
> > 
> > I'm glad to see CRAN now has its official policy about Rust [1]!
> > It seems it probably needs some feedback from those who are familiar with
> > the Rust workflow. I'm not an expert, but let me leave some quick feedback.
> > This email is sent to the R-package-devel mailing list as well as to cran@~
> > so that we can publicly discuss.
> > 
> > It seems most of the concern is about how to make the build deterministic.
> > In this regard, the policy should encourage including "Cargo.lock" file
> > [2]. Cargo.lock is created on the first compile, and the resolved versions
> > of dependencies are recorded. As long as this file exists, the dependency
> > versions are locked to the ones in this file, except when the package
> > author explicitly updates the versions.
> > 
> > Cargo.lock also records the SHA256 checksums of the crates if they are from
> > crates.io, Rust's official crate registry. If the checksums don't match,
> > the build will fail with the following message:
> > 
> >    error: checksum for `foo v0.1.2` changed between lock files
> > 
> >    this could be indicative of a few possible errors:
> > 
> >        * the lock file is corrupt
> >        * a replacement source in use (e.g., a mirror) returned a different
> > checksum
> >        * the source itself may be corrupt in one way or another
> > 
> >    unable to verify that `foo v0.1.2` is the same as when the lockfile was
> > generated
> > 
> > For dependencies from Git repositories, Cargo.lock records the commit
> > hashes. So, the version of the source code (not the version of the crate)
> > is uniquely determined. That said, unlike cargo.io, it's possible that the
> > commit or the Git repository itself has disappeared at the time of
> > building, which makes the build fail. So, it might be reasonable the CRAN
> > policy prohibits the use of Git dependency unless the source code is
> > bundled. I have no strong opinion here.
> > 
> > Accordingly, I believe this sentence
> > 
> >> In practice maintainers have found it nigh-impossible to meet these
> > conditions whilst downloading as they have too little control.
> > 
> > is not quite true. More specifically, these things
> > 
> >> The standard way to download a Rust ?crate? is by its version number, and
> > these have been changed without changing their number.
> >> Downloading a ?crate? normally entails downloading its dependencies, and
> > that is done without fixing their version numbers
> > 
> > won't happen if the R package does include Cargo.lock because
> > 
> > - if the crate is from crates.io, "the version can never be overwritten,
> > and the code cannot be deleted" there [3]
> > - if the crate is from a Git repository, the commit hash is unique in its
> > nature. The version of the crate might be the same between commits, but a
> > git dependency is specified by the commit hash, not the version of the
> > crate.
> > 
> > I'm keen to know what problems the CRAN maintainers have experienced that
> > Cargo.lock cannot solve. I hope we can help somehow to improve the policy.
> > 
> > Best,
> > Yutani
> > 
> > [1]: https://cran.r-project.org/web/packages/using_rust.html
> > [2]: https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
> > [3]: https://doc.rust-lang.org/cargo/reference/publishing.html
> > 
> >       [[alternative HTML version deleted]]
> > 
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> > 
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From yut@n|@|n| @end|ng |rom gm@||@com  Thu Jul 13 05:08:25 2023
From: yut@n|@|n| @end|ng |rom gm@||@com (Hiroaki Yutani)
Date: Thu, 13 Jul 2023 12:08:25 +0900
Subject: [R-pkg-devel] Feedback on "Using Rust in CRAN packages"
In-Reply-To: <CAJXgQP2qZkTEYg5=GQ3Ka9jVsAumsMq1rkZaWD+JgxBQmNKrww@mail.gmail.com>
References: <CALyqOb__9-M_rEJ20dz3T07aNKP9_BRG25jdQ248WJA0ShuFCA@mail.gmail.com>
 <389056FE-88DD-4A07-8FD1-63E0F286B3A8@R-project.org>
 <CAJXgQP2qZkTEYg5=GQ3Ka9jVsAumsMq1rkZaWD+JgxBQmNKrww@mail.gmail.com>
Message-ID: <CALyqOb9=ivxKMGCB_9EMf-5bkPSGP30fY1dn6hzE-v-+o2ZXvg@mail.gmail.com>

I actually use cargo vendor.

https://github.com/yutannihilation/string2path/blob/main/src/rust/vendor.sh

One thing to note is that, prior to R 4.3.0, the vendored directories hit
the Windows' path limit so I had to put them into a TAR file. I haven't
tested on R 4.3.0, but probably this problem is solved by this improvement.
So, if you target only R >= 4.3, you can just cargo vendor.

https://blog.r-project.org/2023/03/07/path-length-limit-on-windows/index.html

Best,
Yutani

2023?7?13?(?) 11:50 Kevin Ushey <kevinushey at gmail.com>:

> Package authors could use 'cargo vendor' to include Rust crate sources
> directly in their source R packages. Would that be acceptable?
>
> Presumedly, the vendored sources would be built using the versions
> specified in an accompanying Cargo.lock as well.
>
> https://doc.rust-lang.org/cargo/commands/cargo-vendor.html
>
>
> On Wed, Jul 12, 2023, 7:35 PM Simon Urbanek <simon.urbanek at r-project.org>
> wrote:
>
>> Yutani,
>>
>> I'm not quite sure your reading fully matches the intent of the policy.
>> Cargo.lock is not sufficient, it is expected that the package will provide
>> *all* the sources, it is not expected to use cargo to resolve them from
>> random (possibly inaccessible) places. So the package author is expected to
>> either include the sources in the package *or* (if prohibitive due to
>> extreme size) have a release tar ball available at a fixed, secure,
>> reliable location (I was recommending Zenodo.org for that reason - GitHub
>> is neither fixed nor reliable by definition).
>>
>> Based on that, I'm not sure I fully understand the scope of your proposal
>> for improvement. Carlo.lock is certainly the first step that the package
>> author should take in creating the distribution tar ball so you can fix the
>> versions, but it is not sufficient as the next step involves collecting the
>> related sources. We don't want R users to be involved in that can of worms
>> (especially since the lock file itself provides no guarantees of
>> accessibility of the components and we don't want to have to manually
>> inspect it), the package should be ready to be used which is why it has to
>> do that step first. Does that explain the intent better? (In general, the
>> downloading at install time is actually a problem, because it's not
>> uncommon to use R in environments that have no Internet access, but the
>> download is a concession for extreme cases where the tar balls may be too
>> big to make it part of the package, but it's yet another can of worms...).
>>
>> Cheers,
>> Simon
>>
>>
>>
>> > On 13/07/2023, at 12:37 PM, Hiroaki Yutani <yutani.ini at gmail.com>
>> wrote:
>> >
>> > Hi,
>> >
>> > I'm glad to see CRAN now has its official policy about Rust [1]!
>> > It seems it probably needs some feedback from those who are familiar
>> with
>> > the Rust workflow. I'm not an expert, but let me leave some quick
>> feedback.
>> > This email is sent to the R-package-devel mailing list as well as to
>> cran@~
>> > so that we can publicly discuss.
>> >
>> > It seems most of the concern is about how to make the build
>> deterministic.
>> > In this regard, the policy should encourage including "Cargo.lock" file
>> > [2]. Cargo.lock is created on the first compile, and the resolved
>> versions
>> > of dependencies are recorded. As long as this file exists, the
>> dependency
>> > versions are locked to the ones in this file, except when the package
>> > author explicitly updates the versions.
>> >
>> > Cargo.lock also records the SHA256 checksums of the crates if they are
>> from
>> > crates.io, Rust's official crate registry. If the checksums don't
>> match,
>> > the build will fail with the following message:
>> >
>> >    error: checksum for `foo v0.1.2` changed between lock files
>> >
>> >    this could be indicative of a few possible errors:
>> >
>> >        * the lock file is corrupt
>> >        * a replacement source in use (e.g., a mirror) returned a
>> different
>> > checksum
>> >        * the source itself may be corrupt in one way or another
>> >
>> >    unable to verify that `foo v0.1.2` is the same as when the lockfile
>> was
>> > generated
>> >
>> > For dependencies from Git repositories, Cargo.lock records the commit
>> > hashes. So, the version of the source code (not the version of the
>> crate)
>> > is uniquely determined. That said, unlike cargo.io, it's possible that
>> the
>> > commit or the Git repository itself has disappeared at the time of
>> > building, which makes the build fail. So, it might be reasonable the
>> CRAN
>> > policy prohibits the use of Git dependency unless the source code is
>> > bundled. I have no strong opinion here.
>> >
>> > Accordingly, I believe this sentence
>> >
>> >> In practice maintainers have found it nigh-impossible to meet these
>> > conditions whilst downloading as they have too little control.
>> >
>> > is not quite true. More specifically, these things
>> >
>> >> The standard way to download a Rust ?crate? is by its version number,
>> and
>> > these have been changed without changing their number.
>> >> Downloading a ?crate? normally entails downloading its dependencies,
>> and
>> > that is done without fixing their version numbers
>> >
>> > won't happen if the R package does include Cargo.lock because
>> >
>> > - if the crate is from crates.io, "the version can never be
>> overwritten,
>> > and the code cannot be deleted" there [3]
>> > - if the crate is from a Git repository, the commit hash is unique in
>> its
>> > nature. The version of the crate might be the same between commits, but
>> a
>> > git dependency is specified by the commit hash, not the version of the
>> > crate.
>> >
>> > I'm keen to know what problems the CRAN maintainers have experienced
>> that
>> > Cargo.lock cannot solve. I hope we can help somehow to improve the
>> policy.
>> >
>> > Best,
>> > Yutani
>> >
>> > [1]: https://cran.r-project.org/web/packages/using_rust.html
>> > [2]:
>> https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
>> > [3]: https://doc.rust-lang.org/cargo/reference/publishing.html
>> >
>> >       [[alternative HTML version deleted]]
>> >
>> > ______________________________________________
>> > R-package-devel at r-project.org mailing list
>> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> >
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>

	[[alternative HTML version deleted]]


From yut@n|@|n| @end|ng |rom gm@||@com  Thu Jul 13 05:34:26 2023
From: yut@n|@|n| @end|ng |rom gm@||@com (Hiroaki Yutani)
Date: Thu, 13 Jul 2023 12:34:26 +0900
Subject: [R-pkg-devel] Feedback on "Using Rust in CRAN packages"
In-Reply-To: <389056FE-88DD-4A07-8FD1-63E0F286B3A8@R-project.org>
References: <CALyqOb__9-M_rEJ20dz3T07aNKP9_BRG25jdQ248WJA0ShuFCA@mail.gmail.com>
 <389056FE-88DD-4A07-8FD1-63E0F286B3A8@R-project.org>
Message-ID: <CALyqOb8C24csrQHV+kVUhgL1=Lk0bFF=+dMBU-uG+TOiSFmfNg@mail.gmail.com>

Hi Simon,

Thanks for the response. I thought

> download a specific version from a secure site and check that the
download is the expected code by some sort of checksum

refers to the usual process that's done by Cargo automatically. If it's
not, I think the policy should have a clear explanation. It seems it's not
only me who wondered why this policy doesn't mention Cargo.lock at all.

> it is not expected to use cargo to resolve them from random (possibly
inaccessible) places

Yes, I agree with you. So, I suggested the possibility of forbidding the
Git dependency. Or, do you call crates.io, Rust's official repository,
"random places"? If CRAN cannot trust even the official one of Rust, why
does CRAN have Rust at all?

That said, I agree with your concern about downloading via the Internet in
general. Downloading is one of the common sources of failure. If you want
to prevent cargo from downloading any source files, you can enforce adding
--offline option to "cargo build". While the package author might feel
unhappy, I think this would make your intent a bit clearer.

Best,
Yutani


2023?7?13?(?) 11:34 Simon Urbanek <simon.urbanek at r-project.org>:

> Yutani,
>
> I'm not quite sure your reading fully matches the intent of the policy.
> Cargo.lock is not sufficient, it is expected that the package will provide
> *all* the sources, it is not expected to use cargo to resolve them from
> random (possibly inaccessible) places. So the package author is expected to
> either include the sources in the package *or* (if prohibitive due to
> extreme size) have a release tar ball available at a fixed, secure,
> reliable location (I was recommending Zenodo.org for that reason - GitHub
> is neither fixed nor reliable by definition).
>
> Based on that, I'm not sure I fully understand the scope of your proposal
> for improvement. Carlo.lock is certainly the first step that the package
> author should take in creating the distribution tar ball so you can fix the
> versions, but it is not sufficient as the next step involves collecting the
> related sources. We don't want R users to be involved in that can of worms
> (especially since the lock file itself provides no guarantees of
> accessibility of the components and we don't want to have to manually
> inspect it), the package should be ready to be used which is why it has to
> do that step first. Does that explain the intent better? (In general, the
> downloading at install time is actually a problem, because it's not
> uncommon to use R in environments that have no Internet access, but the
> download is a concession for extreme cases where the tar balls may be too
> big to make it part of the package, but it's yet another can of worms...).
>
> Cheers,
> Simon
>
>
>
> > On 13/07/2023, at 12:37 PM, Hiroaki Yutani <yutani.ini at gmail.com> wrote:
> >
> > Hi,
> >
> > I'm glad to see CRAN now has its official policy about Rust [1]!
> > It seems it probably needs some feedback from those who are familiar with
> > the Rust workflow. I'm not an expert, but let me leave some quick
> feedback.
> > This email is sent to the R-package-devel mailing list as well as to
> cran@~
> > so that we can publicly discuss.
> >
> > It seems most of the concern is about how to make the build
> deterministic.
> > In this regard, the policy should encourage including "Cargo.lock" file
> > [2]. Cargo.lock is created on the first compile, and the resolved
> versions
> > of dependencies are recorded. As long as this file exists, the dependency
> > versions are locked to the ones in this file, except when the package
> > author explicitly updates the versions.
> >
> > Cargo.lock also records the SHA256 checksums of the crates if they are
> from
> > crates.io, Rust's official crate registry. If the checksums don't match,
> > the build will fail with the following message:
> >
> >    error: checksum for `foo v0.1.2` changed between lock files
> >
> >    this could be indicative of a few possible errors:
> >
> >        * the lock file is corrupt
> >        * a replacement source in use (e.g., a mirror) returned a
> different
> > checksum
> >        * the source itself may be corrupt in one way or another
> >
> >    unable to verify that `foo v0.1.2` is the same as when the lockfile
> was
> > generated
> >
> > For dependencies from Git repositories, Cargo.lock records the commit
> > hashes. So, the version of the source code (not the version of the crate)
> > is uniquely determined. That said, unlike cargo.io, it's possible that
> the
> > commit or the Git repository itself has disappeared at the time of
> > building, which makes the build fail. So, it might be reasonable the CRAN
> > policy prohibits the use of Git dependency unless the source code is
> > bundled. I have no strong opinion here.
> >
> > Accordingly, I believe this sentence
> >
> >> In practice maintainers have found it nigh-impossible to meet these
> > conditions whilst downloading as they have too little control.
> >
> > is not quite true. More specifically, these things
> >
> >> The standard way to download a Rust ?crate? is by its version number,
> and
> > these have been changed without changing their number.
> >> Downloading a ?crate? normally entails downloading its dependencies, and
> > that is done without fixing their version numbers
> >
> > won't happen if the R package does include Cargo.lock because
> >
> > - if the crate is from crates.io, "the version can never be overwritten,
> > and the code cannot be deleted" there [3]
> > - if the crate is from a Git repository, the commit hash is unique in its
> > nature. The version of the crate might be the same between commits, but a
> > git dependency is specified by the commit hash, not the version of the
> > crate.
> >
> > I'm keen to know what problems the CRAN maintainers have experienced that
> > Cargo.lock cannot solve. I hope we can help somehow to improve the
> policy.
> >
> > Best,
> > Yutani
> >
> > [1]: https://cran.r-project.org/web/packages/using_rust.html
> > [2]: https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
> > [3]: https://doc.rust-lang.org/cargo/reference/publishing.html
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
>
>

	[[alternative HTML version deleted]]


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Thu Jul 13 09:08:41 2023
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Thu, 13 Jul 2023 09:08:41 +0200
Subject: [R-pkg-devel] Feedback on "Using Rust in CRAN packages"
In-Reply-To: <CALyqOb9=ivxKMGCB_9EMf-5bkPSGP30fY1dn6hzE-v-+o2ZXvg@mail.gmail.com>
References: <CALyqOb__9-M_rEJ20dz3T07aNKP9_BRG25jdQ248WJA0ShuFCA@mail.gmail.com>
 <389056FE-88DD-4A07-8FD1-63E0F286B3A8@R-project.org>
 <CAJXgQP2qZkTEYg5=GQ3Ka9jVsAumsMq1rkZaWD+JgxBQmNKrww@mail.gmail.com>
 <CALyqOb9=ivxKMGCB_9EMf-5bkPSGP30fY1dn6hzE-v-+o2ZXvg@mail.gmail.com>
Message-ID: <f3e44a51-a06e-6aa0-b685-ce5908837483@gmail.com>


On 7/13/23 05:08, Hiroaki Yutani wrote:
> I actually use cargo vendor.
>
> https://github.com/yutannihilation/string2path/blob/main/src/rust/vendor.sh
>
> One thing to note is that, prior to R 4.3.0, the vendored directories hit
> the Windows' path limit so I had to put them into a TAR file. I haven't
> tested on R 4.3.0, but probably this problem is solved by this improvement.
> So, if you target only R >= 4.3, you can just cargo vendor.
>
> https://blog.r-project.org/2023/03/07/path-length-limit-on-windows/index.html

I wouldn't rely on that long paths on Windows are supported even in R >= 
4.3, because it requires at least Windows 10 1607, and it needs to be 
enabled system-wide in Windows - so, users/admins have to do that, and 
it impacts also other applications. The blog post has more details and 
recommendations.

Best
Tomas

>
> Best,
> Yutani
>
> 2023?7?13?(?) 11:50 Kevin Ushey <kevinushey at gmail.com>:
>
>> Package authors could use 'cargo vendor' to include Rust crate sources
>> directly in their source R packages. Would that be acceptable?
>>
>> Presumedly, the vendored sources would be built using the versions
>> specified in an accompanying Cargo.lock as well.
>>
>> https://doc.rust-lang.org/cargo/commands/cargo-vendor.html
>>
>>
>> On Wed, Jul 12, 2023, 7:35 PM Simon Urbanek <simon.urbanek at r-project.org>
>> wrote:
>>
>>> Yutani,
>>>
>>> I'm not quite sure your reading fully matches the intent of the policy.
>>> Cargo.lock is not sufficient, it is expected that the package will provide
>>> *all* the sources, it is not expected to use cargo to resolve them from
>>> random (possibly inaccessible) places. So the package author is expected to
>>> either include the sources in the package *or* (if prohibitive due to
>>> extreme size) have a release tar ball available at a fixed, secure,
>>> reliable location (I was recommending Zenodo.org for that reason - GitHub
>>> is neither fixed nor reliable by definition).
>>>
>>> Based on that, I'm not sure I fully understand the scope of your proposal
>>> for improvement. Carlo.lock is certainly the first step that the package
>>> author should take in creating the distribution tar ball so you can fix the
>>> versions, but it is not sufficient as the next step involves collecting the
>>> related sources. We don't want R users to be involved in that can of worms
>>> (especially since the lock file itself provides no guarantees of
>>> accessibility of the components and we don't want to have to manually
>>> inspect it), the package should be ready to be used which is why it has to
>>> do that step first. Does that explain the intent better? (In general, the
>>> downloading at install time is actually a problem, because it's not
>>> uncommon to use R in environments that have no Internet access, but the
>>> download is a concession for extreme cases where the tar balls may be too
>>> big to make it part of the package, but it's yet another can of worms...).
>>>
>>> Cheers,
>>> Simon
>>>
>>>
>>>
>>>> On 13/07/2023, at 12:37 PM, Hiroaki Yutani <yutani.ini at gmail.com>
>>> wrote:
>>>> Hi,
>>>>
>>>> I'm glad to see CRAN now has its official policy about Rust [1]!
>>>> It seems it probably needs some feedback from those who are familiar
>>> with
>>>> the Rust workflow. I'm not an expert, but let me leave some quick
>>> feedback.
>>>> This email is sent to the R-package-devel mailing list as well as to
>>> cran@~
>>>> so that we can publicly discuss.
>>>>
>>>> It seems most of the concern is about how to make the build
>>> deterministic.
>>>> In this regard, the policy should encourage including "Cargo.lock" file
>>>> [2]. Cargo.lock is created on the first compile, and the resolved
>>> versions
>>>> of dependencies are recorded. As long as this file exists, the
>>> dependency
>>>> versions are locked to the ones in this file, except when the package
>>>> author explicitly updates the versions.
>>>>
>>>> Cargo.lock also records the SHA256 checksums of the crates if they are
>>> from
>>>> crates.io, Rust's official crate registry. If the checksums don't
>>> match,
>>>> the build will fail with the following message:
>>>>
>>>>     error: checksum for `foo v0.1.2` changed between lock files
>>>>
>>>>     this could be indicative of a few possible errors:
>>>>
>>>>         * the lock file is corrupt
>>>>         * a replacement source in use (e.g., a mirror) returned a
>>> different
>>>> checksum
>>>>         * the source itself may be corrupt in one way or another
>>>>
>>>>     unable to verify that `foo v0.1.2` is the same as when the lockfile
>>> was
>>>> generated
>>>>
>>>> For dependencies from Git repositories, Cargo.lock records the commit
>>>> hashes. So, the version of the source code (not the version of the
>>> crate)
>>>> is uniquely determined. That said, unlike cargo.io, it's possible that
>>> the
>>>> commit or the Git repository itself has disappeared at the time of
>>>> building, which makes the build fail. So, it might be reasonable the
>>> CRAN
>>>> policy prohibits the use of Git dependency unless the source code is
>>>> bundled. I have no strong opinion here.
>>>>
>>>> Accordingly, I believe this sentence
>>>>
>>>>> In practice maintainers have found it nigh-impossible to meet these
>>>> conditions whilst downloading as they have too little control.
>>>>
>>>> is not quite true. More specifically, these things
>>>>
>>>>> The standard way to download a Rust ?crate? is by its version number,
>>> and
>>>> these have been changed without changing their number.
>>>>> Downloading a ?crate? normally entails downloading its dependencies,
>>> and
>>>> that is done without fixing their version numbers
>>>>
>>>> won't happen if the R package does include Cargo.lock because
>>>>
>>>> - if the crate is from crates.io, "the version can never be
>>> overwritten,
>>>> and the code cannot be deleted" there [3]
>>>> - if the crate is from a Git repository, the commit hash is unique in
>>> its
>>>> nature. The version of the crate might be the same between commits, but
>>> a
>>>> git dependency is specified by the commit hash, not the version of the
>>>> crate.
>>>>
>>>> I'm keen to know what problems the CRAN maintainers have experienced
>>> that
>>>> Cargo.lock cannot solve. I hope we can help somehow to improve the
>>> policy.
>>>> Best,
>>>> Yutani
>>>>
>>>> [1]: https://cran.r-project.org/web/packages/using_rust.html
>>>> [2]:
>>> https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
>>>> [3]: https://doc.rust-lang.org/cargo/reference/publishing.html
>>>>
>>>>        [[alternative HTML version deleted]]
>>>>
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From yut@n|@|n| @end|ng |rom gm@||@com  Thu Jul 13 09:16:08 2023
From: yut@n|@|n| @end|ng |rom gm@||@com (Hiroaki Yutani)
Date: Thu, 13 Jul 2023 16:16:08 +0900
Subject: [R-pkg-devel] Feedback on "Using Rust in CRAN packages"
In-Reply-To: <f3e44a51-a06e-6aa0-b685-ce5908837483@gmail.com>
References: <CALyqOb__9-M_rEJ20dz3T07aNKP9_BRG25jdQ248WJA0ShuFCA@mail.gmail.com>
 <389056FE-88DD-4A07-8FD1-63E0F286B3A8@R-project.org>
 <CAJXgQP2qZkTEYg5=GQ3Ka9jVsAumsMq1rkZaWD+JgxBQmNKrww@mail.gmail.com>
 <CALyqOb9=ivxKMGCB_9EMf-5bkPSGP30fY1dn6hzE-v-+o2ZXvg@mail.gmail.com>
 <f3e44a51-a06e-6aa0-b685-ce5908837483@gmail.com>
Message-ID: <CALyqOb-Jp3aCRKDiHuQ0s8uu0O0KwNYE3qcNkYS9q23OYyBe7g@mail.gmail.com>

Thank you for the correction. I see.

Best,
Yutani

2023?7?13?(?) 16:08 Tomas Kalibera <tomas.kalibera at gmail.com>:

>
> On 7/13/23 05:08, Hiroaki Yutani wrote:
> > I actually use cargo vendor.
> >
> >
> https://github.com/yutannihilation/string2path/blob/main/src/rust/vendor.sh
> >
> > One thing to note is that, prior to R 4.3.0, the vendored directories hit
> > the Windows' path limit so I had to put them into a TAR file. I haven't
> > tested on R 4.3.0, but probably this problem is solved by this
> improvement.
> > So, if you target only R >= 4.3, you can just cargo vendor.
> >
> >
> https://blog.r-project.org/2023/03/07/path-length-limit-on-windows/index.html
>
> I wouldn't rely on that long paths on Windows are supported even in R >=
> 4.3, because it requires at least Windows 10 1607, and it needs to be
> enabled system-wide in Windows - so, users/admins have to do that, and
> it impacts also other applications. The blog post has more details and
> recommendations.
>
> Best
> Tomas
>
> >
> > Best,
> > Yutani
> >
> > 2023?7?13?(?) 11:50 Kevin Ushey <kevinushey at gmail.com>:
> >
> >> Package authors could use 'cargo vendor' to include Rust crate sources
> >> directly in their source R packages. Would that be acceptable?
> >>
> >> Presumedly, the vendored sources would be built using the versions
> >> specified in an accompanying Cargo.lock as well.
> >>
> >> https://doc.rust-lang.org/cargo/commands/cargo-vendor.html
> >>
> >>
> >> On Wed, Jul 12, 2023, 7:35 PM Simon Urbanek <
> simon.urbanek at r-project.org>
> >> wrote:
> >>
> >>> Yutani,
> >>>
> >>> I'm not quite sure your reading fully matches the intent of the policy.
> >>> Cargo.lock is not sufficient, it is expected that the package will
> provide
> >>> *all* the sources, it is not expected to use cargo to resolve them from
> >>> random (possibly inaccessible) places. So the package author is
> expected to
> >>> either include the sources in the package *or* (if prohibitive due to
> >>> extreme size) have a release tar ball available at a fixed, secure,
> >>> reliable location (I was recommending Zenodo.org for that reason -
> GitHub
> >>> is neither fixed nor reliable by definition).
> >>>
> >>> Based on that, I'm not sure I fully understand the scope of your
> proposal
> >>> for improvement. Carlo.lock is certainly the first step that the
> package
> >>> author should take in creating the distribution tar ball so you can
> fix the
> >>> versions, but it is not sufficient as the next step involves
> collecting the
> >>> related sources. We don't want R users to be involved in that can of
> worms
> >>> (especially since the lock file itself provides no guarantees of
> >>> accessibility of the components and we don't want to have to manually
> >>> inspect it), the package should be ready to be used which is why it
> has to
> >>> do that step first. Does that explain the intent better? (In general,
> the
> >>> downloading at install time is actually a problem, because it's not
> >>> uncommon to use R in environments that have no Internet access, but the
> >>> download is a concession for extreme cases where the tar balls may be
> too
> >>> big to make it part of the package, but it's yet another can of
> worms...).
> >>>
> >>> Cheers,
> >>> Simon
> >>>
> >>>
> >>>
> >>>> On 13/07/2023, at 12:37 PM, Hiroaki Yutani <yutani.ini at gmail.com>
> >>> wrote:
> >>>> Hi,
> >>>>
> >>>> I'm glad to see CRAN now has its official policy about Rust [1]!
> >>>> It seems it probably needs some feedback from those who are familiar
> >>> with
> >>>> the Rust workflow. I'm not an expert, but let me leave some quick
> >>> feedback.
> >>>> This email is sent to the R-package-devel mailing list as well as to
> >>> cran@~
> >>>> so that we can publicly discuss.
> >>>>
> >>>> It seems most of the concern is about how to make the build
> >>> deterministic.
> >>>> In this regard, the policy should encourage including "Cargo.lock"
> file
> >>>> [2]. Cargo.lock is created on the first compile, and the resolved
> >>> versions
> >>>> of dependencies are recorded. As long as this file exists, the
> >>> dependency
> >>>> versions are locked to the ones in this file, except when the package
> >>>> author explicitly updates the versions.
> >>>>
> >>>> Cargo.lock also records the SHA256 checksums of the crates if they are
> >>> from
> >>>> crates.io, Rust's official crate registry. If the checksums don't
> >>> match,
> >>>> the build will fail with the following message:
> >>>>
> >>>>     error: checksum for `foo v0.1.2` changed between lock files
> >>>>
> >>>>     this could be indicative of a few possible errors:
> >>>>
> >>>>         * the lock file is corrupt
> >>>>         * a replacement source in use (e.g., a mirror) returned a
> >>> different
> >>>> checksum
> >>>>         * the source itself may be corrupt in one way or another
> >>>>
> >>>>     unable to verify that `foo v0.1.2` is the same as when the
> lockfile
> >>> was
> >>>> generated
> >>>>
> >>>> For dependencies from Git repositories, Cargo.lock records the commit
> >>>> hashes. So, the version of the source code (not the version of the
> >>> crate)
> >>>> is uniquely determined. That said, unlike cargo.io, it's possible
> that
> >>> the
> >>>> commit or the Git repository itself has disappeared at the time of
> >>>> building, which makes the build fail. So, it might be reasonable the
> >>> CRAN
> >>>> policy prohibits the use of Git dependency unless the source code is
> >>>> bundled. I have no strong opinion here.
> >>>>
> >>>> Accordingly, I believe this sentence
> >>>>
> >>>>> In practice maintainers have found it nigh-impossible to meet these
> >>>> conditions whilst downloading as they have too little control.
> >>>>
> >>>> is not quite true. More specifically, these things
> >>>>
> >>>>> The standard way to download a Rust ?crate? is by its version number,
> >>> and
> >>>> these have been changed without changing their number.
> >>>>> Downloading a ?crate? normally entails downloading its dependencies,
> >>> and
> >>>> that is done without fixing their version numbers
> >>>>
> >>>> won't happen if the R package does include Cargo.lock because
> >>>>
> >>>> - if the crate is from crates.io, "the version can never be
> >>> overwritten,
> >>>> and the code cannot be deleted" there [3]
> >>>> - if the crate is from a Git repository, the commit hash is unique in
> >>> its
> >>>> nature. The version of the crate might be the same between commits,
> but
> >>> a
> >>>> git dependency is specified by the commit hash, not the version of the
> >>>> crate.
> >>>>
> >>>> I'm keen to know what problems the CRAN maintainers have experienced
> >>> that
> >>>> Cargo.lock cannot solve. I hope we can help somehow to improve the
> >>> policy.
> >>>> Best,
> >>>> Yutani
> >>>>
> >>>> [1]: https://cran.r-project.org/web/packages/using_rust.html
> >>>> [2]:
> >>> https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
> >>>> [3]: https://doc.rust-lang.org/cargo/reference/publishing.html
> >>>>
> >>>>        [[alternative HTML version deleted]]
> >>>>
> >>>> ______________________________________________
> >>>> R-package-devel at r-project.org mailing list
> >>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>>>
> >>> ______________________________________________
> >>> R-package-devel at r-project.org mailing list
> >>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>>
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From h@w|ckh@m @end|ng |rom gm@||@com  Thu Jul 13 20:38:24 2023
From: h@w|ckh@m @end|ng |rom gm@||@com (Hadley Wickham)
Date: Thu, 13 Jul 2023 13:38:24 -0500
Subject: [R-pkg-devel] Feedback on "Using Rust in CRAN packages"
In-Reply-To: <CALyqOb8C24csrQHV+kVUhgL1=Lk0bFF=+dMBU-uG+TOiSFmfNg@mail.gmail.com>
References: <CALyqOb__9-M_rEJ20dz3T07aNKP9_BRG25jdQ248WJA0ShuFCA@mail.gmail.com>
 <389056FE-88DD-4A07-8FD1-63E0F286B3A8@R-project.org>
 <CALyqOb8C24csrQHV+kVUhgL1=Lk0bFF=+dMBU-uG+TOiSFmfNg@mail.gmail.com>
Message-ID: <CABdHhvH7aOaXrZ7Z02Ku4yQES86gTrEG2akEZiMa1qdDc7URbg@mail.gmail.com>

> > it is not expected to use cargo to resolve them from random (possibly
> inaccessible) places
>
> Yes, I agree with you. So, I suggested the possibility of forbidding the
> Git dependency. Or, do you call crates.io, Rust's official repository,
> "random places"? If CRAN cannot trust even the official one of Rust, why
> does CRAN have Rust at all?

It's worth noting that crates.io is supported by the Rust foundation
(https://foundation.rust-lang.org). Judging from their most recent
annual report (https://foundation.rust-lang.org/static/publications/annual-reports/annual-report-2022.pdf),
where they reported a $880k surplus, I think they're probably going to
be around for a while.

Hadley

-- 
http://hadley.nz


From @|mon@urb@nek @end|ng |rom R-project@org  Fri Jul 14 00:49:17 2023
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Fri, 14 Jul 2023 10:49:17 +1200
Subject: [R-pkg-devel] Feedback on "Using Rust in CRAN packages"
In-Reply-To: <CALyqOb8C24csrQHV+kVUhgL1=Lk0bFF=+dMBU-uG+TOiSFmfNg@mail.gmail.com>
References: <CALyqOb__9-M_rEJ20dz3T07aNKP9_BRG25jdQ248WJA0ShuFCA@mail.gmail.com>
 <389056FE-88DD-4A07-8FD1-63E0F286B3A8@R-project.org>
 <CALyqOb8C24csrQHV+kVUhgL1=Lk0bFF=+dMBU-uG+TOiSFmfNg@mail.gmail.com>
Message-ID: <06675DF4-6655-4AB5-B636-1AE443A0B651@R-project.org>

Yutani,

[moving back to the original thread, please don't cross-post]


> On Jul 13, 2023, at 3:34 PM, Hiroaki Yutani <yutani.ini at gmail.com> wrote:
> 
> Hi Simon,
> 
> Thanks for the response. I thought
> 
>> download a specific version from a secure site and check that the
> download is the expected code by some sort of checksum
> 
> refers to the usual process that's done by Cargo automatically. If it's
> not, I think the policy should have a clear explanation. It seems it's not
> only me who wondered why this policy doesn't mention Cargo.lock at all.
> 


as explained. The instructions will be updated to make it clear that "cargo vendor" is the right tool here.


>> it is not expected to use cargo to resolve them from random (possibly
> inaccessible) places
> 
> Yes, I agree with you. So, I suggested the possibility of forbidding the Git dependency. Or, do you call crates.io, Rust's official repository, "random places"?


No, as I understand it, the lock file can have arbitrary URLs, that's what I was referring to.


> If CRAN cannot trust even the official one of Rust, why does CRAN have Rust at all?
> 


I don't see the connection - if you downloaded something in the past it doesn't mean you will be able to do so in the future. And CRAN has Rust because it sounded like a good idea to allow packages to use it, but I can see that it opened a can of worms that we trying to tame here.


> That said, I agree with your concern about downloading via the Internet in
> general. Downloading is one of the common sources of failure. If you want
> to prevent cargo from downloading any source files, you can enforce adding
> --offline option to "cargo build". While the package author might feel
> unhappy, I think this would make your intent a bit clearer.
> 


I'm not a cargo expert, but I thought cargo build --offline is not needed if the dependencies are already vendored? If you think cargo users need more help with the steps, then feel free to propose what the instructions should say (we really assume that the authors know what they are doing).

Cheers,
Simon


From h@w|ckh@m @end|ng |rom gm@||@com  Fri Jul 14 01:19:46 2023
From: h@w|ckh@m @end|ng |rom gm@||@com (Hadley Wickham)
Date: Thu, 13 Jul 2023 18:19:46 -0500
Subject: [R-pkg-devel] Feedback on "Using Rust in CRAN packages"
In-Reply-To: <06675DF4-6655-4AB5-B636-1AE443A0B651@R-project.org>
References: <CALyqOb__9-M_rEJ20dz3T07aNKP9_BRG25jdQ248WJA0ShuFCA@mail.gmail.com>
 <389056FE-88DD-4A07-8FD1-63E0F286B3A8@R-project.org>
 <CALyqOb8C24csrQHV+kVUhgL1=Lk0bFF=+dMBU-uG+TOiSFmfNg@mail.gmail.com>
 <06675DF4-6655-4AB5-B636-1AE443A0B651@R-project.org>
Message-ID: <CABdHhvFTo4dWm-v0Hwuoba9uiKffVMZQNuAy+YM_RL3gWmbOHw@mail.gmail.com>

> > If CRAN cannot trust even the official one of Rust, why does CRAN have Rust at all?
> >
>
> I don't see the connection - if you downloaded something in the past it doesn't mean you will be able to do so in the future. And CRAN has Rust because it sounded like a good idea to allow packages to use it, but I can see that it opened a can of worms that we trying to tame here.

Can you give a bit more detail about your concerns here? Obviously
crates.io isn't some random site on the internet, it's the official
repository of the Rust language, supported by the corresponding
foundation for the language. To me that makes it feel very much like
CRAN, where we can assume if you downloaded something in the past, you
can download something in the future.

Hadley

-- 
http://hadley.nz


From murdoch@dunc@n @end|ng |rom gm@||@com  Fri Jul 14 01:49:35 2023
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 13 Jul 2023 19:49:35 -0400
Subject: [R-pkg-devel] Feedback on "Using Rust in CRAN packages"
In-Reply-To: <CABdHhvFTo4dWm-v0Hwuoba9uiKffVMZQNuAy+YM_RL3gWmbOHw@mail.gmail.com>
References: <CALyqOb__9-M_rEJ20dz3T07aNKP9_BRG25jdQ248WJA0ShuFCA@mail.gmail.com>
 <389056FE-88DD-4A07-8FD1-63E0F286B3A8@R-project.org>
 <CALyqOb8C24csrQHV+kVUhgL1=Lk0bFF=+dMBU-uG+TOiSFmfNg@mail.gmail.com>
 <06675DF4-6655-4AB5-B636-1AE443A0B651@R-project.org>
 <CABdHhvFTo4dWm-v0Hwuoba9uiKffVMZQNuAy+YM_RL3gWmbOHw@mail.gmail.com>
Message-ID: <a4db0a6d-c42a-6464-f59e-32d42327b1b3@gmail.com>

On 13/07/2023 7:19 p.m., Hadley Wickham wrote:
>>> If CRAN cannot trust even the official one of Rust, why does CRAN have Rust at all?
>>>
>>
>> I don't see the connection - if you downloaded something in the past it doesn't mean you will be able to do so in the future. And CRAN has Rust because it sounded like a good idea to allow packages to use it, but I can see that it opened a can of worms that we trying to tame here.
> 
> Can you give a bit more detail about your concerns here? Obviously
> crates.io isn't some random site on the internet, it's the official
> repository of the Rust language, supported by the corresponding
> foundation for the language. To me that makes it feel very much like
> CRAN, where we can assume if you downloaded something in the past, you
> can download something in the future.

That last statement is true, but also sort of false: you should be able 
to download the same version of the package that you downloaded last 
time, but you might not be able to download a version of the package 
that works with the current version of R.

Duncan Murdoch


From @|mon@urb@nek @end|ng |rom R-project@org  Fri Jul 14 02:06:21 2023
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Fri, 14 Jul 2023 12:06:21 +1200
Subject: [R-pkg-devel] Feedback on "Using Rust in CRAN packages"
In-Reply-To: <CABdHhvFTo4dWm-v0Hwuoba9uiKffVMZQNuAy+YM_RL3gWmbOHw@mail.gmail.com>
References: <CALyqOb__9-M_rEJ20dz3T07aNKP9_BRG25jdQ248WJA0ShuFCA@mail.gmail.com>
 <389056FE-88DD-4A07-8FD1-63E0F286B3A8@R-project.org>
 <CALyqOb8C24csrQHV+kVUhgL1=Lk0bFF=+dMBU-uG+TOiSFmfNg@mail.gmail.com>
 <06675DF4-6655-4AB5-B636-1AE443A0B651@R-project.org>
 <CABdHhvFTo4dWm-v0Hwuoba9uiKffVMZQNuAy+YM_RL3gWmbOHw@mail.gmail.com>
Message-ID: <6EAE6A61-F6DB-4747-8D00-07DA4A3AE39F@R-project.org>



> On Jul 14, 2023, at 11:19 AM, Hadley Wickham <h.wickham at gmail.com> wrote:
> 
>>> If CRAN cannot trust even the official one of Rust, why does CRAN have Rust at all?
>>> 
>> 
>> I don't see the connection - if you downloaded something in the past it doesn't mean you will be able to do so in the future. And CRAN has Rust because it sounded like a good idea to allow packages to use it, but I can see that it opened a can of worms that we trying to tame here.
> 
> Can you give a bit more detail about your concerns here? Obviously
> crates.io isn't some random site on the internet, it's the official
> repository of the Rust language, supported by the corresponding
> foundation for the language. To me that makes it feel very much like
> CRAN, where we can assume if you downloaded something in the past, you
> can download something in the future.
> 

I was just responding to Yutani's question why we downloaded the Rust compilers on CRAN at all. This has really nothing to do with the previous discussion which is why I did say "I don't see the connection". Also I wasn't talking about crates.io anywhere in my responses in this thread. The only thing I wanted to discuss here was that I think the existing Rust model  ("vendor" into the package sources) seems like a good one to apply to Go, but that got somehow hijacked...

Cheers,
Simon


From edd @end|ng |rom deb|@n@org  Fri Jul 14 02:18:56 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Thu, 13 Jul 2023 19:18:56 -0500
Subject: [R-pkg-devel] Feedback on "Using Rust in CRAN packages"
In-Reply-To: <CABdHhvFTo4dWm-v0Hwuoba9uiKffVMZQNuAy+YM_RL3gWmbOHw@mail.gmail.com>
References: <CALyqOb__9-M_rEJ20dz3T07aNKP9_BRG25jdQ248WJA0ShuFCA@mail.gmail.com>
 <389056FE-88DD-4A07-8FD1-63E0F286B3A8@R-project.org>
 <CALyqOb8C24csrQHV+kVUhgL1=Lk0bFF=+dMBU-uG+TOiSFmfNg@mail.gmail.com>
 <06675DF4-6655-4AB5-B636-1AE443A0B651@R-project.org>
 <CABdHhvFTo4dWm-v0Hwuoba9uiKffVMZQNuAy+YM_RL3gWmbOHw@mail.gmail.com>
Message-ID: <25776.38000.34041.495290@rob.eddelbuettel.com>


The concerns over github going away (!!) (or altering references, tags,
releases, ...) may be somewhat alleviated by Software Heritage [1] covering
and 'preserving' it.  FWIW I briefly spoke about that iniative and a possible
CRAN connection at useR! in Toulouse four years ago [2].

I think I understand where CRAN is coming from. Builds for Debian have the
same requirements of 'everythin all at once better be local'.  Sadly what I
see in day to day life (hello cmake, hello vcpkg) moves firmly the other way.
We shall see how it all shakes out.

I would be very much in favor of workable rust (and then go, and so on)
solution. 

Dirk

[1] https://www.softwareheritage.org/
[2] https://dirk.eddelbuettel.com/papers/useR2019_swh_cran_talk.pdf

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From yut@n|@|n| @end|ng |rom gm@||@com  Fri Jul 14 02:58:20 2023
From: yut@n|@|n| @end|ng |rom gm@||@com (Hiroaki Yutani)
Date: Fri, 14 Jul 2023 09:58:20 +0900
Subject: [R-pkg-devel] Feedback on "Using Rust in CRAN packages"
In-Reply-To: <6EAE6A61-F6DB-4747-8D00-07DA4A3AE39F@R-project.org>
References: <CALyqOb__9-M_rEJ20dz3T07aNKP9_BRG25jdQ248WJA0ShuFCA@mail.gmail.com>
 <389056FE-88DD-4A07-8FD1-63E0F286B3A8@R-project.org>
 <CALyqOb8C24csrQHV+kVUhgL1=Lk0bFF=+dMBU-uG+TOiSFmfNg@mail.gmail.com>
 <06675DF4-6655-4AB5-B636-1AE443A0B651@R-project.org>
 <CABdHhvFTo4dWm-v0Hwuoba9uiKffVMZQNuAy+YM_RL3gWmbOHw@mail.gmail.com>
 <6EAE6A61-F6DB-4747-8D00-07DA4A3AE39F@R-project.org>
Message-ID: <CALyqOb9-uKX3P1xeic9yKxxHBOuiqjtbKeBD8S2AzQUfKMRzHA@mail.gmail.com>

Simin,

Sorry that my question was not clear. Let me clarify.

I think we all agree that "cargo vendor" is the primary option. Since
downloading without explicit permission is not allowed on CRAN in general,
it's reasonable. I'm happy that the instructions will describe it clearly.

But, some R packages have too large dependencies to bundle. In this case,
downloading can be allowed with "the explicit permission of the CRAN team,"
if I understand correctly. For this, I think Cargo's downloading mechanism
satisfy this requirement if (1) all the dependencies are from crates.io and
(2) Cargo.lock exists:

> download a specific version from a secure site and check that the
download is the expected code by some sort of checksum

Because Cargo downloads specific versions recorded in Cargo.lock, verifies
the checksums, and crates.io is the "secure site" that we can rely on as
Hadley wrote.

My question is, does CRAN allow Cargo to download the dependency sources on
CRAN? The policy says:

> So downloading of Rust ?crates? will in future require the explicit
permission of the CRAN team

To my eyes, this implies

- CRAN currently allows Cargo's downloading of dependency Rust crates even
without the permission
- CRAN will keep allowing Cargo's downloading if the package author asks
the permission

And, if CRAN doesn't allow it, I (and probably many Rust users) would like
to know why. As I described above, it should satisfy the requirement.

>  please don't cross-post

Sorry.

> I thought cargo build --offline is not needed if the dependencies are
already vendored?

Yes, you are right. --offline is not needed if vendering is properly
configured. But, this probably means you have to review the build
configurations in .cargo/config.toml or so, so I just thought it would be
easier for you to check if --offline is specified to the command. This
seems a bit off-topic, so please ignore.

Best,
Yutani


2023?7?14?(?) 9:06 Simon Urbanek <simon.urbanek at r-project.org>:

>
>
> > On Jul 14, 2023, at 11:19 AM, Hadley Wickham <h.wickham at gmail.com>
> wrote:
> >
> >>> If CRAN cannot trust even the official one of Rust, why does CRAN have
> Rust at all?
> >>>
> >>
> >> I don't see the connection - if you downloaded something in the past it
> doesn't mean you will be able to do so in the future. And CRAN has Rust
> because it sounded like a good idea to allow packages to use it, but I can
> see that it opened a can of worms that we trying to tame here.
> >
> > Can you give a bit more detail about your concerns here? Obviously
> > crates.io isn't some random site on the internet, it's the official
> > repository of the Rust language, supported by the corresponding
> > foundation for the language. To me that makes it feel very much like
> > CRAN, where we can assume if you downloaded something in the past, you
> > can download something in the future.
> >
>
> I was just responding to Yutani's question why we downloaded the Rust
> compilers on CRAN at all. This has really nothing to do with the previous
> discussion which is why I did say "I don't see the connection". Also I
> wasn't talking about crates.io anywhere in my responses in this thread.
> The only thing I wanted to discuss here was that I think the existing Rust
> model  ("vendor" into the package sources) seems like a good one to apply
> to Go, but that got somehow hijacked...
>
> Cheers,
> Simon
>
>

	[[alternative HTML version deleted]]


From yut@n|@|n| @end|ng |rom gm@||@com  Fri Jul 14 15:21:50 2023
From: yut@n|@|n| @end|ng |rom gm@||@com (Hiroaki Yutani)
Date: Fri, 14 Jul 2023 22:21:50 +0900
Subject: [R-pkg-devel] Feedback on "Using Rust in CRAN packages"
In-Reply-To: <CALyqOb9-uKX3P1xeic9yKxxHBOuiqjtbKeBD8S2AzQUfKMRzHA@mail.gmail.com>
References: <CALyqOb__9-M_rEJ20dz3T07aNKP9_BRG25jdQ248WJA0ShuFCA@mail.gmail.com>
 <389056FE-88DD-4A07-8FD1-63E0F286B3A8@R-project.org>
 <CALyqOb8C24csrQHV+kVUhgL1=Lk0bFF=+dMBU-uG+TOiSFmfNg@mail.gmail.com>
 <06675DF4-6655-4AB5-B636-1AE443A0B651@R-project.org>
 <CABdHhvFTo4dWm-v0Hwuoba9uiKffVMZQNuAy+YM_RL3gWmbOHw@mail.gmail.com>
 <6EAE6A61-F6DB-4747-8D00-07DA4A3AE39F@R-project.org>
 <CALyqOb9-uKX3P1xeic9yKxxHBOuiqjtbKeBD8S2AzQUfKMRzHA@mail.gmail.com>
Message-ID: <CALyqOb8pmTymO=5NkO7ZXnNjVLzovZapYfs1y7A64RZjuaQ7UA@mail.gmail.com>

I just found the policy is updated and I now understand why GitHub matters
in your opinion. Thanks for the clarification, I forgot this fact.

>  CRAN does not regard github.com (which hosts the index of crates.io) as
sufficiently reliable.

The good news is that, as of Rust 1.68, Cargo supports the "sparse" index
protocol [1][2]. In this case, the index is hosted at
https://index.crates.io/, crates.io's own infrastructure. So, if I
understand correctly, when all the CRAN servers have Cargo >=1.68
installed, CRAN is ready to believe crates.io is reliable?

Note that, at the time of writing this, the version on Debian testing is
still 1.66 [3] and it's not updated very frequently (about once a year?),
so it probably takes a while before the day.

Best,
Yutani


[1]:
https://blog.rust-lang.org/2023/03/09/Rust-1.68.0.html#cargos-sparse-protocol
[2]:
https://blog.rust-lang.org/inside-rust/2023/01/30/cargo-sparse-protocol.html
[3]: https://packages.debian.org/testing/cargo (it seems 0.66 means 1.66)

2023?7?14?(?) 9:58 Hiroaki Yutani <yutani.ini at gmail.com>:

> Simin,
>
> Sorry that my question was not clear. Let me clarify.
>
> I think we all agree that "cargo vendor" is the primary option. Since
> downloading without explicit permission is not allowed on CRAN in general,
> it's reasonable. I'm happy that the instructions will describe it clearly.
>
> But, some R packages have too large dependencies to bundle. In this case,
> downloading can be allowed with "the explicit permission of the CRAN team,"
> if I understand correctly. For this, I think Cargo's downloading mechanism
> satisfy this requirement if (1) all the dependencies are from crates.io
> and (2) Cargo.lock exists:
>
> > download a specific version from a secure site and check that the
> download is the expected code by some sort of checksum
>
> Because Cargo downloads specific versions recorded in Cargo.lock, verifies
> the checksums, and crates.io is the "secure site" that we can rely on as
> Hadley wrote.
>
> My question is, does CRAN allow Cargo to download the dependency sources
> on CRAN? The policy says:
>
> > So downloading of Rust ?crates? will in future require the explicit
> permission of the CRAN team
>
> To my eyes, this implies
>
> - CRAN currently allows Cargo's downloading of dependency Rust crates even
> without the permission
> - CRAN will keep allowing Cargo's downloading if the package author asks
> the permission
>
> And, if CRAN doesn't allow it, I (and probably many Rust users) would like
> to know why. As I described above, it should satisfy the requirement.
>
> >  please don't cross-post
>
> Sorry.
>
> > I thought cargo build --offline is not needed if the dependencies are
> already vendored?
>
> Yes, you are right. --offline is not needed if vendering is properly
> configured. But, this probably means you have to review the build
> configurations in .cargo/config.toml or so, so I just thought it would be
> easier for you to check if --offline is specified to the command. This
> seems a bit off-topic, so please ignore.
>
> Best,
> Yutani
>
>
> 2023?7?14?(?) 9:06 Simon Urbanek <simon.urbanek at r-project.org>:
>
>>
>>
>> > On Jul 14, 2023, at 11:19 AM, Hadley Wickham <h.wickham at gmail.com>
>> wrote:
>> >
>> >>> If CRAN cannot trust even the official one of Rust, why does CRAN
>> have Rust at all?
>> >>>
>> >>
>> >> I don't see the connection - if you downloaded something in the past
>> it doesn't mean you will be able to do so in the future. And CRAN has Rust
>> because it sounded like a good idea to allow packages to use it, but I can
>> see that it opened a can of worms that we trying to tame here.
>> >
>> > Can you give a bit more detail about your concerns here? Obviously
>> > crates.io isn't some random site on the internet, it's the official
>> > repository of the Rust language, supported by the corresponding
>> > foundation for the language. To me that makes it feel very much like
>> > CRAN, where we can assume if you downloaded something in the past, you
>> > can download something in the future.
>> >
>>
>> I was just responding to Yutani's question why we downloaded the Rust
>> compilers on CRAN at all. This has really nothing to do with the previous
>> discussion which is why I did say "I don't see the connection". Also I
>> wasn't talking about crates.io anywhere in my responses in this thread.
>> The only thing I wanted to discuss here was that I think the existing Rust
>> model  ("vendor" into the package sources) seems like a good one to apply
>> to Go, but that got somehow hijacked...
>>
>> Cheers,
>> Simon
>>
>>

	[[alternative HTML version deleted]]


From dewey @end|ng |rom dunn|ngton@c@  Fri Jul 14 16:36:11 2023
From: dewey @end|ng |rom dunn|ngton@c@ (Dewey Dunnington)
Date: Fri, 14 Jul 2023 11:36:11 -0300
Subject: [R-pkg-devel] Best practices for CRAN package using Go
In-Reply-To: <F85C4A1A-75FA-46C1-B2FC-1EF1E1F6E4F3@R-project.org>
References: <399846c80a91ae21c96942890fc8d3b8@dunnington.ca>
 <20230710170951.35efc274@arachnoid>
 <d4522c8b37d7b8e1a3441a50c3988246@dunnington.ca>
 <F85C4A1A-75FA-46C1-B2FC-1EF1E1F6E4F3@R-project.org>
Message-ID: <6133281842fd9c9256c4cf5472734f7b@dunnington.ca>

Simon,

Thanks! I look forward to packaging the next ADBC driver release and 
submitting.

Cheers,

-dewey

On 2023-07-12 20:01, Simon Urbanek wrote:
> Dewey,
> 
> you will definitely need to include all the necessary sources for your 
> package. You may want to have a look at the "Using Rust"[1] document 
> linked from the CRAN policy. I think Go is quite similar to Rust in 
> that sense so you should use the same approach, i.e. checking for 
> system and user installations (for go the official location is 
> /usr/local/go/bin/go and it may not be on the PATH), declaring Go 
> version dependency and making sure your package has included all module 
> dependency sources (i.e. don't use install-time module 
> resolution/download).
> 
> If you need to include a large source tar ball that is not permissible 
> on CRAN, I'd recommend using Zenodo.org since it is specifically 
> designed to facilitate longevity and reproducibility (as opposed to 
> Github or other transient storage that may disappear at any point).
> 
> All that said, you may run into the same issues as Rust (errors and 
> segfaults due to limited interoperability of compilers) so use with 
> care and test well. External bindings like Rust or Go are only provided 
> on "best effort" basis.
> 
> Cheers,
> Simon
> 
> [1] - https://cran.r-project.org/web/packages/using_rust.html
> 
> PS: go is now available on the CRAN macOS builder machines and the Mac 
> Builder (https://mac.r-project.org/macbuilder/submit.html).
> 
> 
>> On 13/07/2023, at 2:36 AM, Dewey Dunnington <dewey at dunnington.ca> 
>> wrote:
>> 
>> Thank you! It seems I needed the refresher on CRAN policy regarding 
>> downloading sources: it seems like the go.sum/go.mod provide 
>> sufficient checksumming to comply with the policy, as you noted (with 
>> `go mod vendor` as a backup if this turns out to not be acceptable). 
>> Downloading Go is probably out based on the advice for Rust that 
>> explicitly forbids this.
>> 
>> Cheers!
>> 
>> -dewey
>> 
>> On 2023-07-10 11:09, Ivan Krylov wrote:
>>> ? Thu, 06 Jul 2023 15:22:26 -0300
>>> Dewey Dunnington <dewey at dunnington.ca> ?????:
>>>> I've wrapped two of these drivers for R that seem to build and
>>>> install on MacOS, Linux, and Windows [3][4]; however, I am not sure
>>>> if the pattern I used is suitable for CRAN or whether these packages
>>>> will have to be GitHub-only for the foreseeable future.
>>> There are a few parts to following the CRAN policy [*] regarding
>>> external dependencies.
>>> I think (but don't know for sure) that your package will not be 
>>> allowed
>>> to download Go by itself. The policy says: "Only as a last resort and
>>> with the agreement of the CRAN team should a package download
>>> pre-compiled software."
>>> An already installed Go should be able to "first look to see if [a
>>> dependency] is already installed and if so is of a suitable version"
>>> when installing the dependencies of the Go part of the code. The 
>>> go.mod
>>> and go.sum files specify the exact versions and checksums of the
>>> dependencies, which satisfies the requirement for fixed dependency
>>> versions ("it is acceptable to download them as part of installation,
>>> but do ensure that the download is of a fixed version rather than the
>>> latest"), so your package seems to be fine in this respect.
>>> One more thing: when bootstrapping the source package, can you run go
>>> mod vendor [**] in order to bundle *all* the Go dependencies together
>>> with the package? Is the resulting directory prohibitively large? 
>>> Would
>>> it satisfy the CRAN policy preference to "include the library sources
>>> in the package and compile them as part of package installation"
>>> without requiring Internet access? Unfortunately, I don't know enough
>>> about Go to answer these questions myself. I think that a small 
>>> bundle
>>> of vendored Go code would be preferrable for CRAN but *not* 
>>> preferrable
>>> for packaging in a GNU/Linux distro like Debian where dynamic linking
>>> (in the widest possible sense) is a strong preference.
>>> --
>>> Best regards,
>>> Ivan
>>> [*] https://cran.r-project.org/web/packages/policies.html
>>> [**] https://go.dev/ref/mod#vendoring
>> 
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>


From kry|ov@r00t @end|ng |rom gm@||@com  Fri Jul 14 17:14:41 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Fri, 14 Jul 2023 18:14:41 +0300
Subject: [R-pkg-devel] Package Load fails to find 3rd Party DLL
In-Reply-To: <7feb7697-be2f-7bf8-3e7c-4276a0cb69c8@gmail.com>
References: <7feb7697-be2f-7bf8-3e7c-4276a0cb69c8@gmail.com>
Message-ID: <20230714181441.03c47c08@arachnoid>

? Wed, 12 Jul 2023 09:41:11 -0400
Russell Almond <russell.g.almond at gmail.com> ?????:

>  ? C:\rtools43\x86_64-w64-mingw32.static.posix\bin\nm.exe:
> 'NeticaDLL': No such file

This is where the problem starts. You can retrace the steps that R
takes when building and installing the package by running sh
configure.win manually and then running something like
R_PACKAGE_DIR="$(pwd)" R CMD SHLIB -n *.c in the src subdirectory of
the package. That will in turn tell you the exact command lines to be
run while building your package, including the following:

 nm Cases.o Continuous.o Edges.o Experience.o Inference.o Networks.o \
  Node.o Random.o Registration.o Session.o NeticaDLL \
 | sed -n 's/^.* [BCDRT] / /p' \
 | sed -e '/[.]refptr[.]/d' -e '/[.]weak[.]/d' \
 | sed 's/[^ ][^ ]*/"&"/g' \
 >> tmp.def;

That "NeticaDLL" at the end of the list of object files doesn't belong
there. I think it gets added because it's among the dependencies of the
$(SHLIB) Make target. It would be best to make that target a real
object file that nm.exe can process. Otherwise, you could also write
your own .def file and skip its automatic generation.

After nm fails, you get a crash in the linker (while parsing the
resulting incomplete .def file?), which leaves your package without a
shared library to use:

> C:\rtools43\x86_64-w64-mingw32.static.posix\bin/ld.exe: internal
> error: aborting at ../../binutils-2.40/ld/ldlang.c:527 in
> compare_section
> C:\rtools43\x86_64-w64-mingw32.static.posix\bin/ld.exe: please report
> this bug

There must be a way to streamline this process. Maybe put all the
library-downloading and extraction code into a portable
tools/configure.R (to be launched manually from the configure shell
script), leaving src/Makevars only to compile your own code, link with
Netica using PKG_LIBS, then copy the additional Netica DLL from a
custom install.libs.R file?

-- 
Best regards,
Ivan


From ru@@e||@g@@|mond @end|ng |rom gm@||@com  Fri Jul 14 19:29:32 2023
From: ru@@e||@g@@|mond @end|ng |rom gm@||@com (Russell Almond)
Date: Fri, 14 Jul 2023 13:29:32 -0400
Subject: [R-pkg-devel] Package Load fails to find 3rd Party DLL
In-Reply-To: <20230714181441.03c47c08@arachnoid>
References: <7feb7697-be2f-7bf8-3e7c-4276a0cb69c8@gmail.com>
 <20230714181441.03c47c08@arachnoid>
Message-ID: <06ea7d13-ab84-dc3b-2c5d-1acb574260b1@gmail.com>

Thanks.? I know know the problem is in the Makevars.win; however, I'm 
still confused.

My `Makevars.win` had

| .PHONY:?? all NeticaDLL clean

| all: $(SHLIB)
| $(SHLIB): NeticaDLL
|
| NeticaDLL:
|? ? mkdir -p "$(INSTALL_LIB)"
|? ? cp "${NETICA_LIB}/Netica.dll" "${INSTALL_LIB}"
|??? cp "${NETICA_LIB}/Netica.lib" "${INSTALL_LIB}"

[BTW, I tried change this to

| all: NeticaDLL $(SHLIB)

and got the same problem.]

This looks very much like the `mylibs` example in 
https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Using-Makevars

So I'm confused.? Why is the Makevars -> Makefile conversion assuming 
that all targets of $(SHLIB) (or all) are executable files, ignoring the 
PHONY declaration?

Also, does the example in the Writing R Extensions manual still work?

 ??? --Russell



On 7/14/23 11:14 AM, Ivan Krylov wrote:
> ? Wed, 12 Jul 2023 09:41:11 -0400
> Russell Almond<russell.g.almond at gmail.com>  ?????:
>
>>   ? C:\rtools43\x86_64-w64-mingw32.static.posix\bin\nm.exe:
>> 'NeticaDLL': No such file
> This is where the problem starts. You can retrace the steps that R
> takes when building and installing the package by running sh
> configure.win manually and then running something like
> R_PACKAGE_DIR="$(pwd)" R CMD SHLIB -n *.c in the src subdirectory of
> the package. That will in turn tell you the exact command lines to be
> run while building your package, including the following:
>
>   nm Cases.o Continuous.o Edges.o Experience.o Inference.o Networks.o \
>    Node.o Random.o Registration.o Session.o NeticaDLL \
>   | sed -n 's/^.* [BCDRT] / /p' \
>   | sed -e '/[.]refptr[.]/d' -e '/[.]weak[.]/d' \
>   | sed 's/[^ ][^ ]*/"&"/g' \
>   >> tmp.def;
>
> That "NeticaDLL" at the end of the list of object files doesn't belong
> there. I think it gets added because it's among the dependencies of the
> $(SHLIB) Make target. It would be best to make that target a real
> object file that nm.exe can process. Otherwise, you could also write
> your own .def file and skip its automatic generation.
>
> After nm fails, you get a crash in the linker (while parsing the
> resulting incomplete .def file?), which leaves your package without a
> shared library to use:
>
>> C:\rtools43\x86_64-w64-mingw32.static.posix\bin/ld.exe: internal
>> error: aborting at ../../binutils-2.40/ld/ldlang.c:527 in
>> compare_section
>> C:\rtools43\x86_64-w64-mingw32.static.posix\bin/ld.exe: please report
>> this bug
> There must be a way to streamline this process. Maybe put all the
> library-downloading and extraction code into a portable
> tools/configure.R (to be launched manually from the configure shell
> script), leaving src/Makevars only to compile your own code, link with
> Netica using PKG_LIBS, then copy the additional Netica DLL from a
> custom install.libs.R file?
>
-- 
Russell Almond
https://ralmond.net/

	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Fri Jul 14 21:25:51 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Fri, 14 Jul 2023 22:25:51 +0300
Subject: [R-pkg-devel] Package Load fails to find 3rd Party DLL
In-Reply-To: <06ea7d13-ab84-dc3b-2c5d-1acb574260b1@gmail.com>
References: <7feb7697-be2f-7bf8-3e7c-4276a0cb69c8@gmail.com>
 <20230714181441.03c47c08@arachnoid>
 <06ea7d13-ab84-dc3b-2c5d-1acb574260b1@gmail.com>
Message-ID: <20230714222551.10428ef8@Tarkus>

On Fri, 14 Jul 2023 13:29:32 -0400
Russell Almond <russell.g.almond at gmail.com> wrote:

> So I'm confused.? Why is the Makevars -> Makefile conversion assuming 
> that all targets of $(SHLIB) (or all) are executable files, ignoring
> the PHONY declaration?

The $(SHLIB) target is defined in ${R_HOME}/share/make/winshlib.mk. In
particular, it says:

 echo EXPORTS > tmp.def; \
 $(NM) $^ | $(SED) -n $(SYMPAT) $(NM_FILTER) | \
  $(SED) $(ADDQU) >> tmp.def; \

Unfortunately for our case, the $^ automatic variable contains the
names of all prerequisites of the $(SHLIB) target [*], including .PHONY
ones. So as long as $(SHLIB) is declared to depend on NeticaDLL, this
string will get mentioned here.

Maybe it's a red herring. Maybe the message from nm about missing file
has always been harmless, and what we're seeing here is a bug in the
toolchain; perhaps ld.exe doesn't like something about Netica.lib so
much that it crashes. I think that's less likely. If you run the
commands manually but without mentioning NeticaDLL, do you get a DLL in
the end?

> Also, does the example in the Writing R Extensions manual still work?

It should. At the very least, rgl uses the same approach without any
apparent problems:
https://github.com/dmurdoch/rgl/blob/master/src/Makevars.ucrt
(But then it also provides rgl-win.def, which sidesteps the automatic
.def generation, and then has $(OBJECTS), not $^, linked into $(SHLIB).
You may have found a bug in winshlib.mk.)

There's also a different idiom, where all: but not $(SHLIB): depends on
the non-file target:
https://github.com/eddelbuettel/rprotobuf/blob/master/src/Makevars.win
(Not sure how the dependency resolution order is supposed to work in
this case. If winshlib.mk declares that all: depends on $(SHLIB) and
later Makevars declares that all: also depends on winlibs, why doesn't
Make attempt to build $(SHLIB) first, with no regard for winlibs?)

-- 
Best regards,
Ivan

[*]
https://www.gnu.org/software/make/manual/html_node/Automatic-Variables.html


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Sat Jul 15 00:33:40 2023
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Sat, 15 Jul 2023 00:33:40 +0200
Subject: [R-pkg-devel] 
 issues with CRAN incoming submissions / summer break announcement
In-Reply-To: <7c654dd5-721a-cdb6-f432-94b9ddbae176@statistik.tu-dortmund.de>
References: <7c654dd5-721a-cdb6-f432-94b9ddbae176@statistik.tu-dortmund.de>
Message-ID: <ac1a22d2-fd33-e9ef-2aac-8b1c05773bf5@statistik.tu-dortmund.de>



On 12.07.2023 09:40, Uwe Ligges wrote:
> Dear developers,
> 
> CRAN submissions are currently partly not possible due to some 
> infrastructure issues. Please so NOT contact us if you see "Unpacking 
> failed. Please make sure the tar.gz was created with R CMD build. [...]".
> 
> In addition, processing the CRAN incoming queue of packages (CRAN 
> pretest) is currently delayed by 2 days.
> 
> Both issues are known and CRAN sysadmins will work on the issues.

Both issues have been resolved.

Best,
Uwe Ligges


> 
> 
> Note that this year's CRAN submission summer break will be from Jul 21, 
> 2023 to Aug 7, 2023.
> 
> Best,
> Uwe Ligges
> for the CRAN team
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Sat Jul 15 01:08:08 2023
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Sat, 15 Jul 2023 01:08:08 +0200
Subject: [R-pkg-devel] 
 issues with CRAN incoming submissions / summer break announcement
In-Reply-To: <CADPubGSEALLrLABN7V5i5oh8OVF0OdfDS-u7F04G2krF9-gcig@mail.gmail.com>
References: <7c654dd5-721a-cdb6-f432-94b9ddbae176@statistik.tu-dortmund.de>
 <ac1a22d2-fd33-e9ef-2aac-8b1c05773bf5@statistik.tu-dortmund.de>
 <CADPubGSEALLrLABN7V5i5oh8OVF0OdfDS-u7F04G2krF9-gcig@mail.gmail.com>
Message-ID: <344dcfad-5d31-3840-b069-075860e2328f@statistik.tu-dortmund.de>

I know, this has to be removed by the sysadmins in Vienna.

Best,
Uwe



On 15.07.2023 01:05, James Lamb wrote:
> Thank you as always, Uwe!
> 
> By the way, the warning is still up on the submission page at 
> https://cran.r-project.org/submit.html 
> <https://cran.r-project.org/submit.html>.
> 
> image.png
> 
> Just sharing in case you hadn't noticed that yet.
> 
> Cheers,
> 
> -James
> 
> On Fri, Jul 14, 2023 at 5:33?PM Uwe Ligges 
> <ligges at statistik.tu-dortmund.de 
> <mailto:ligges at statistik.tu-dortmund.de>> wrote:
> 
> 
> 
>     On 12.07.2023 09:40, Uwe Ligges wrote:
>      > Dear developers,
>      >
>      > CRAN submissions are currently partly not possible due to some
>      > infrastructure issues. Please so NOT contact us if you see
>     "Unpacking
>      > failed. Please make sure the tar.gz was created with R CMD build.
>     [...]".
>      >
>      > In addition, processing the CRAN incoming queue of packages (CRAN
>      > pretest) is currently delayed by 2 days.
>      >
>      > Both issues are known and CRAN sysadmins will work on the issues.
> 
>     Both issues have been resolved.
> 
>     Best,
>     Uwe Ligges
> 
> 
>      >
>      >
>      > Note that this year's CRAN submission summer break will be from
>     Jul 21,
>      > 2023 to Aug 7, 2023.
>      >
>      > Best,
>      > Uwe Ligges
>      > for the CRAN team
>      >
>      > ______________________________________________
>      > R-package-devel at r-project.org
>     <mailto:R-package-devel at r-project.org> mailing list
>      > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>     <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
> 
>     ______________________________________________
>     R-package-devel at r-project.org <mailto:R-package-devel at r-project.org>
>     mailing list
>     https://stat.ethz.ch/mailman/listinfo/r-package-devel
>     <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
> 
> 
> 
> -- 
> James Lamb
> GitHub <https://github.com/jameslamb>?| Twitter 
> <https://twitter.com/_jameslamb> | LinkedIn 
> <https://www.linkedin.com/in/jameslamb1/>


From edd @end|ng |rom deb|@n@org  Sun Jul 16 01:25:05 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Sat, 15 Jul 2023 18:25:05 -0500
Subject: [R-pkg-devel] macOS results not mirrored/updated at CRAN
In-Reply-To: <25775.16177.937585.974774@rob.eddelbuettel.com>
References: <25775.16177.937585.974774@rob.eddelbuettel.com>
Message-ID: <25779.10961.299898.418341@rob.eddelbuettel.com>


Simon,

On 12 July 2023 at 19:02, Dirk Eddelbuettel wrote:
| 
| Simon,
| 
| It looks like some result mirroring / pushing from your machines to CRAN fell
| over.  One of my packages, digest 0.6.33, arrived on CRAN about a week ago,
| is built almost everywhere (apart from macOS_release_x86_64 stuck at 0.6.32)
| but the result page still has nags from the 0.6.31 build for macOS release
| and one of the oldrel builds.
| 
| Could you look into that?  And if it is "just" general issue at CRAN as per
| Uwe's email earlier I will happily wait.  But it has been in this frozen /
| partial update of results state for a few days now.

digest on macOS x86_64 is still stuck at 0.6.31 results on the summary
displaying a now very stale and factually incorrect NOTE.

Can you please look into this?

Thanks,  Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From @|mon@urb@nek @end|ng |rom r-project@org  Sun Jul 16 04:31:15 2023
From: @|mon@urb@nek @end|ng |rom r-project@org (Simon Urbanek)
Date: Sun, 16 Jul 2023 14:31:15 +1200
Subject: [R-pkg-devel] macOS results not mirrored/updated at CRAN
In-Reply-To: <25779.10961.299898.418341@rob.eddelbuettel.com>
References: <25779.10961.299898.418341@rob.eddelbuettel.com>
Message-ID: <4D42E4F0-1D57-4A7B-9597-A8D52197B2D8@r-project.org>

I looked into it and there was no issue on the build machine or staging server, so it will require some more digging in the international waters .. hopefully sometime next week?

Cheers,
Simon


> On 16/07/2023, at 11:25, Dirk Eddelbuettel <edd at debian.org> wrote:
> 
> ?
> Simon,
> 
> On 12 July 2023 at 19:02, Dirk Eddelbuettel wrote:
> | 
> | Simon,
> | 
> | It looks like some result mirroring / pushing from your machines to CRAN fell
> | over.  One of my packages, digest 0.6.33, arrived on CRAN about a week ago,
> | is built almost everywhere (apart from macOS_release_x86_64 stuck at 0.6.32)
> | but the result page still has nags from the 0.6.31 build for macOS release
> | and one of the oldrel builds.
> | 
> | Could you look into that?  And if it is "just" general issue at CRAN as per
> | Uwe's email earlier I will happily wait.  But it has been in this frozen /
> | partial update of results state for a few days now.
> 
> digest on macOS x86_64 is still stuck at 0.6.31 results on the summary
> displaying a now very stale and factually incorrect NOTE.
> 
> Can you please look into this?
> 
> Thanks,  Dirk
> 
> -- 
> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
> 


From edd @end|ng |rom deb|@n@org  Sun Jul 16 04:54:22 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Sat, 15 Jul 2023 21:54:22 -0500
Subject: [R-pkg-devel] macOS results not mirrored/updated at CRAN
In-Reply-To: <4D42E4F0-1D57-4A7B-9597-A8D52197B2D8@r-project.org>
References: <25779.10961.299898.418341@rob.eddelbuettel.com>
 <4D42E4F0-1D57-4A7B-9597-A8D52197B2D8@r-project.org>
Message-ID: <25779.23518.499850.325589@rob.eddelbuettel.com>


On 16 July 2023 at 14:31, Simon Urbanek wrote:
| I looked into it and there was no issue on the build machine or staging server, so it will require some more digging in the international waters .. hopefully sometime next week?

Thanks for checking, sometimes one-offs happen.

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From murr@y@e||ord @end|ng |rom ot@go@@c@nz  Sun Jul 16 06:22:50 2023
From: murr@y@e||ord @end|ng |rom ot@go@@c@nz (Murray Efford)
Date: Sun, 16 Jul 2023 04:22:50 +0000
Subject: [R-pkg-devel] macOS results not mirrored/updated at CRAN
In-Reply-To: <25779.10961.299898.418341@rob.eddelbuettel.com>
References: <25775.16177.937585.974774@rob.eddelbuettel.com>
 <25779.10961.299898.418341@rob.eddelbuettel.com>
Message-ID: <SY4PR01MB56580500A52A8E91A06D1C53AC3AA@SY4PR01MB5658.ausprd01.prod.outlook.com>

For the record, the problem is more general: the r-release-macos-x86_64 CRAN checks of my package secr failed to update for 4.6.0 (2023-05-23) or 4.6.1 (2023-07-10) and remain stuck at version 4.5.10 (all MacOS binaries updated OK).

________________________________________
From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Dirk Eddelbuettel <edd at debian.org>
Sent: 16 July 2023 11:25
To: Dirk Eddelbuettel
Cc: r-package-devel
Subject: Re: [R-pkg-devel] macOS results not mirrored/updated at CRAN


Simon,

On 12 July 2023 at 19:02, Dirk Eddelbuettel wrote:
|
| Simon,
|
| It looks like some result mirroring / pushing from your machines to CRAN fell
| over.  One of my packages, digest 0.6.33, arrived on CRAN about a week ago,
| is built almost everywhere (apart from macOS_release_x86_64 stuck at 0.6.32)
| but the result page still has nags from the 0.6.31 build for macOS release
| and one of the oldrel builds.
|
| Could you look into that?  And if it is "just" general issue at CRAN as per
| Uwe's email earlier I will happily wait.  But it has been in this frozen /
| partial update of results state for a few days now.

digest on macOS x86_64 is still stuck at 0.6.31 results on the summary
displaying a now very stale and factually incorrect NOTE.

Can you please look into this?

Thanks,  Dirk

--
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org

______________________________________________
R-package-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel


From rhe|p @end|ng |rom eoo@@dd@@n|  Sun Jul 16 13:30:24 2023
From: rhe|p @end|ng |rom eoo@@dd@@n| (Jan van der Laan)
Date: Sun, 16 Jul 2023 13:30:24 +0200
Subject: [R-pkg-devel] Issue with CPU time > 2.5 times elapsed time
Message-ID: <b59d150b-c90d-5731-980d-4b36e7443c52@dds.nl>


I am trying to upload a new version of the reclin2 package, but it fails 
the pre-tests on Debian with the following message:

 > * checking examples ... [14s/4s] NOTE
 > Examples with CPU time > 2.5 times elapsed time
 >                   user system elapsed ratio
 > select_threshold 3.700  0.122   0.455 8.400
 > select_n_to_m    4.228  0.180   0.623 7.075
 > * checking for unstated dependencies in ?tests? ... OK

See
https://win-builder.r-project.org/incoming_pretest/reclin2_0.3.1_20230716_124651/Debian/00check.log 
for the complete output.

I can't see why this happens and I can't seem to reproduce this on my 
machine. The examples do call makeCluster from parallel, but only start 
one thread. The code that is ran in the examples only call base-r 
functions and data.table functions. I can imagine data.table starting 
multiple threads. However the example consists only of 17 records; and 
data.table should not use more than two threads on that system anyway. 
So I don't see where the large difference between the two is coming 
from. Does anyone have a clue?

The code is here: https://github.com/djvanderlaan/reclin2 one of the 
examples that fails is here: 
https://github.com/djvanderlaan/reclin2/blob/master/R/select_threshold.R#L21. 


Thanks.
Jan


From rodr|go@tob@rc@rr|zo @end|ng |rom uw@@edu@@u  Mon Jul 17 05:30:23 2023
From: rodr|go@tob@rc@rr|zo @end|ng |rom uw@@edu@@u (Rodrigo Tobar Carrizo)
Date: Mon, 17 Jul 2023 03:30:23 +0000
Subject: [R-pkg-devel] Issue with CPU time > 2.5 times elapsed time
In-Reply-To: <b59d150b-c90d-5731-980d-4b36e7443c52@dds.nl>
References: <b59d150b-c90d-5731-980d-4b36e7443c52@dds.nl>
Message-ID: <SYCPR01MB4047A284AFED3005D25E5323A93BA@SYCPR01MB4047.ausprd01.prod.outlook.com>

Hi Jan,

I faced a similar issue recently with the imager package, see https://stat.ethz.ch/pipermail/r-package-devel/2023q2/009042.html for the email thread on this list. In your case, it's probably data.tables creating more threads than what you think are being created, but you might want to double-check.

It ultimately boils down to you having to constrain the number of threads your code and dependencies use during tests/vignettes/example runs. After guidance from Dirk, I painstakingly ended up doing exactly that for our package, see https://github.com/asgr/imager/compare/0ef8afd6249506bfec98c1250a0a2558149d88d9...47d59a942d04cef8bd7cb2d36be926d637e3df11

Regards,

Rodrigo

________________________________
Von: R-package-devel <r-package-devel-bounces at r-project.org> im Auftrag von Jan van der Laan <rhelp at eoos.dds.nl>
Gesendet: Sonntag, 16. Juli 2023 19:30
An: r-package-devel <r-package-devel at r-project.org>
Betreff: [R-pkg-devel] Issue with CPU time > 2.5 times elapsed time


I am trying to upload a new version of the reclin2 package, but it fails
the pre-tests on Debian with the following message:

 > * checking examples ... [14s/4s] NOTE
 > Examples with CPU time > 2.5 times elapsed time
 >                   user system elapsed ratio
 > select_threshold 3.700  0.122   0.455 8.400
 > select_n_to_m    4.228  0.180   0.623 7.075
 > * checking for unstated dependencies in ?tests? ... OK

See
https://aus01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwin-builder.r-project.org%2Fincoming_pretest%2Freclin2_0.3.1_20230716_124651%2FDebian%2F00check.log&data=05%7C01%7Crodrigo.tobarcarrizo%40uwa.edu.au%7Cd0dacf8919cc41c1eb7e08db85f01ec8%7C05894af0cb2846d8871674cdb46e2226%7C0%7C0%7C638251038592720229%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=pxDjGepeLXPXEYv4sKNsd1hHiXGaSDBM6BA%2FmJLsYrY%3D&reserved=0<https://win-builder.r-project.org/incoming_pretest/reclin2_0.3.1_20230716_124651/Debian/00check.log>
for the complete output.

I can't see why this happens and I can't seem to reproduce this on my
machine. The examples do call makeCluster from parallel, but only start
one thread. The code that is ran in the examples only call base-r
functions and data.table functions. I can imagine data.table starting
multiple threads. However the example consists only of 17 records; and
data.table should not use more than two threads on that system anyway.
So I don't see where the large difference between the two is coming
from. Does anyone have a clue?

The code is here: https://aus01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fdjvanderlaan%2Freclin2&data=05%7C01%7Crodrigo.tobarcarrizo%40uwa.edu.au%7Cd0dacf8919cc41c1eb7e08db85f01ec8%7C05894af0cb2846d8871674cdb46e2226%7C0%7C0%7C638251038592720229%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=YgID3y0ersGkKJp0H5QzpfENtecPYHlPE97HloJoo%2FM%3D&reserved=0<https://github.com/djvanderlaan/reclin2> one of the
examples that fails is here:
https://aus01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fdjvanderlaan%2Freclin2%2Fblob%2Fmaster%2FR%2Fselect_threshold.R%23L21&data=05%7C01%7Crodrigo.tobarcarrizo%40uwa.edu.au%7Cd0dacf8919cc41c1eb7e08db85f01ec8%7C05894af0cb2846d8871674cdb46e2226%7C0%7C0%7C638251038592720229%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=nLI1T7q5IBtfPmU8%2Buj0hJGcE1wMXTkACzEsO0KEntY%3D&reserved=0<https://github.com/djvanderlaan/reclin2/blob/master/R/select_threshold.R#L21>.


Thanks.
Jan

______________________________________________
R-package-devel at r-project.org mailing list
https://aus01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-package-devel&data=05%7C01%7Crodrigo.tobarcarrizo%40uwa.edu.au%7Cd0dacf8919cc41c1eb7e08db85f01ec8%7C05894af0cb2846d8871674cdb46e2226%7C0%7C0%7C638251038592720229%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=nQoVas1cmOUfDG0sh%2BXEyEjsDKYljaJXqy5tqRSzU%2BU%3D&reserved=0<https://stat.ethz.ch/mailman/listinfo/r-package-devel>

	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Mon Jul 17 11:30:39 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Mon, 17 Jul 2023 12:30:39 +0300
Subject: [R-pkg-devel] Package Load fails to find 3rd Party DLL
In-Reply-To: <20230714222551.10428ef8@Tarkus>
References: <7feb7697-be2f-7bf8-3e7c-4276a0cb69c8@gmail.com>
 <20230714181441.03c47c08@arachnoid>
 <06ea7d13-ab84-dc3b-2c5d-1acb574260b1@gmail.com>
 <20230714222551.10428ef8@Tarkus>
Message-ID: <20230717123039.64db63fa@arachnoid>

? Fri, 14 Jul 2023 22:25:51 +0300
Ivan Krylov <krylov.r00t at gmail.com> ?????:

> Maybe it's a red herring. Maybe the message from nm about missing file
> has always been harmless, and what we're seeing here is a bug in the
> toolchain; perhaps ld.exe doesn't like something about Netica.lib so
> much that it crashes. I think that's less likely. If you run the
> commands manually but without mentioning NeticaDLL, do you get a DLL
> in the end?

Judging by your build logs, this could be a toolchain bug. If you set
the *.lib file aside and only give the *.dll to the linker (using
-l:Netica.dll if necessary), does it still fail? I know that GCC can
link directly to *.dll files, without relying on import libraries.

-- 
Best regards,
Ivan


From ru@@e||@g@@|mond @end|ng |rom gm@||@com  Mon Jul 17 17:28:32 2023
From: ru@@e||@g@@|mond @end|ng |rom gm@||@com (Russell Almond)
Date: Mon, 17 Jul 2023 11:28:32 -0400
Subject: [R-pkg-devel] Package Load fails to find 3rd Party DLL
In-Reply-To: <20230717123039.64db63fa@arachnoid>
References: <7feb7697-be2f-7bf8-3e7c-4276a0cb69c8@gmail.com>
 <20230714181441.03c47c08@arachnoid>
 <06ea7d13-ab84-dc3b-2c5d-1acb574260b1@gmail.com>
 <20230714222551.10428ef8@Tarkus> <20230717123039.64db63fa@arachnoid>
Message-ID: <58aed791-76f5-98bd-3d9a-d00c818f7af3@gmail.com>

Thanks for the suggestion.  In previous versions of the build tools, I 
know I needed the .lib files.

I'm also not sure I'm copying the DLL files into the right directory, so 
that maybe the linker isn't seeing it.  This always confuses me as the 
location used to build and compile is (potentially) different from the 
test location and the final build location, and I'm not sure of the best 
way to refer to these directories in my script.  I'm thinking maybe I 
need to copy the DLL into the src directory.

Unfortunately, I don't have a windows box on which to easily test.  I'm 
trying to get a virtualBox setup working so I can test more quickly.

   --Russell


On 7/17/23 5:30 AM, Ivan Krylov wrote:
> ? Fri, 14 Jul 2023 22:25:51 +0300
> Ivan Krylov <krylov.r00t at gmail.com> ?????:
> 
>> Maybe it's a red herring. Maybe the message from nm about missing file
>> has always been harmless, and what we're seeing here is a bug in the
>> toolchain; perhaps ld.exe doesn't like something about Netica.lib so
>> much that it crashes. I think that's less likely. If you run the
>> commands manually but without mentioning NeticaDLL, do you get a DLL
>> in the end?
> 
> Judging by your build logs, this could be a toolchain bug. If you set
> the *.lib file aside and only give the *.dll to the linker (using
> -l:Netica.dll if necessary), does it still fail? I know that GCC can
> link directly to *.dll files, without relying on import libraries.
>


From ru@@e||@g@@|mond @end|ng |rom gm@||@com  Mon Jul 17 20:42:36 2023
From: ru@@e||@g@@|mond @end|ng |rom gm@||@com (Russell Almond)
Date: Mon, 17 Jul 2023 14:42:36 -0400
Subject: [R-pkg-devel] Package Load fails to find 3rd Party DLL
In-Reply-To: <20230717123039.64db63fa@arachnoid>
References: <7feb7697-be2f-7bf8-3e7c-4276a0cb69c8@gmail.com>
 <20230714181441.03c47c08@arachnoid>
 <06ea7d13-ab84-dc3b-2c5d-1acb574260b1@gmail.com>
 <20230714222551.10428ef8@Tarkus> <20230717123039.64db63fa@arachnoid>
Message-ID: <89f44a7f-78c0-0eaa-4f54-cd1f10272dc5@gmail.com>

Okay,  I've changed my Makevars.win so that it has:

PKG_LIBS = -L. -L${NETICA_LIB} -lNetica

and

all: NeticaDLL

where ${NETICA_LIB} is set to the appropriate lib subdirectory of the 
unpacked sources.  I'm no longer getting the nm.exe error, so it may be 
a bug in ld.exe.


| gcc -shared -s -static-libgcc -o RNetica.dll tmp.def Cases.o 
Continuous.o Edges.o Experience.o Inference.o Networks.o Node.o Random.o 
Registration.o Session.o -L. 
-L/c/Users/ralmond/Projects/RNetica/src/Netica/Netica_API_510/lib64 
-lNetica -LC:/rtools43/x86_64-w64-mingw32.static.posix/lib/x64 
-LC:/rtools43/x86_64-w64-mingw32.static.posix/lib 
-LC:/PROGRA~1/R/R-43~1.1/bin/x64 -lR
| C:\rtools43\x86_64-w64-mingw32.static.posix\bin/ld.exe: internal 
error: aborting at ../../binutils-2.40/ld/ldlang.c:527 in compare_section
| C:\rtools43\x86_64-w64-mingw32.static.posix\bin/ld.exe: please report 
this bug
| collect2.exe: error: ld returned 1 exit status

However, when I manually moved Netica.dll to the source directory, and 
removed NETICA_LIB from the path, it compiled correctly.

So, I'm guessing this is a bug in ld.exe, and in fact it is here:
https://github.com/msys2/MINGW-packages/issues/15469

So I'll see if I can try to fix my script to only copy the .dll and not 
the .lib.
	--Russell


On 7/17/23 5:30 AM, Ivan Krylov wrote:
> ? Fri, 14 Jul 2023 22:25:51 +0300
> Ivan Krylov <krylov.r00t at gmail.com> ?????:
> 
>> Maybe it's a red herring. Maybe the message from nm about missing file
>> has always been harmless, and what we're seeing here is a bug in the
>> toolchain; perhaps ld.exe doesn't like something about Netica.lib so
>> much that it crashes. I think that's less likely. If you run the
>> commands manually but without mentioning NeticaDLL, do you get a DLL
>> in the end?
> 
> Judging by your build logs, this could be a toolchain bug. If you set
> the *.lib file aside and only give the *.dll to the linker (using
> -l:Netica.dll if necessary), does it still fail? I know that GCC can
> link directly to *.dll files, without relying on import libraries.
>


From john@m@h@rro|d @end|ng |rom gm@||@com  Tue Jul 18 16:37:40 2023
From: john@m@h@rro|d @end|ng |rom gm@||@com (John Harrold)
Date: Tue, 18 Jul 2023 07:37:40 -0700
Subject: [R-pkg-devel] Check package without suggests
Message-ID: <CANAiAiVZ-xP_1BO8O5QZStcs506ZnVJyw1eYFuPr=ZSpcNOXOA@mail.gmail.com>

Howdy Folks,

I recent had a package start failing because I wasn't checking properly in
my tests to make sure my suggested packages were installed before running
tests. I think this is something new running on CRAN where packages are
tested with only the packages specified as Imports in the DESCRIPTION file
are installed. It took me a bit of back and forth to get all of these
issues worked out.  I was wondering if anyone has a good way to run R CMD
check with only the imports installed?  A github action, or a
specific platform on rhub?

Thank you,

John
:wq

	[[alternative HTML version deleted]]


From @ergue|@@oko| @end|ng |rom gm@||@com  Tue Jul 18 16:58:37 2023
From: @ergue|@@oko| @end|ng |rom gm@||@com (Serguei Sokol)
Date: Tue, 18 Jul 2023 16:58:37 +0200
Subject: [R-pkg-devel] Check package without suggests
In-Reply-To: <CANAiAiVZ-xP_1BO8O5QZStcs506ZnVJyw1eYFuPr=ZSpcNOXOA@mail.gmail.com>
References: <CANAiAiVZ-xP_1BO8O5QZStcs506ZnVJyw1eYFuPr=ZSpcNOXOA@mail.gmail.com>
Message-ID: <2a6dda88-990c-ee7a-63b1-7ed49fa030fd@gmail.com>

Is it possible that you have complicated the task unnecessarily?
Normally, you can just do

if (requireNamespace("<suggested_pkg>", quietly=TRUE)) {
  # do the tests involving <suggested_pkg>
}

Wasn't that enough?

Best,
Serguei.


Le 18/07/2023 ? 16:37, John Harrold a ?crit?:
> Howdy Folks,
> 
> I recent had a package start failing because I wasn't checking properly in
> my tests to make sure my suggested packages were installed before running
> tests. I think this is something new running on CRAN where packages are
> tested with only the packages specified as Imports in the DESCRIPTION file
> are installed. It took me a bit of back and forth to get all of these
> issues worked out.  I was wondering if anyone has a good way to run R CMD
> check with only the imports installed?  A github action, or a
> specific platform on rhub?
> 
> Thank you,
> 
> John
> :wq
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From kry|ov@r00t @end|ng |rom gm@||@com  Tue Jul 18 17:03:01 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Tue, 18 Jul 2023 18:03:01 +0300
Subject: [R-pkg-devel] Check package without suggests
In-Reply-To: <CANAiAiVZ-xP_1BO8O5QZStcs506ZnVJyw1eYFuPr=ZSpcNOXOA@mail.gmail.com>
References: <CANAiAiVZ-xP_1BO8O5QZStcs506ZnVJyw1eYFuPr=ZSpcNOXOA@mail.gmail.com>
Message-ID: <20230718180301.6e4c841f@arachnoid>

? Tue, 18 Jul 2023 07:37:40 -0700
John Harrold <john.m.harrold at gmail.com> ?????:

> I was wondering if anyone has a good way to run R CMD
> check with only the imports installed?

According to "R Internals", running R CMD check with the environment
variable _R_CHECK_DEPENDS_ONLY_ set to "TRUE" will populate a temporary
library with only the hard dependencies of the package (Depends and
Imports) before running the tests.

If this works, you should see a NOTE:

* checking package dependencies ... NOTE
Packages which this enhances but not available for checking: <...>

(This NOTE also happens during the CRAN check but doesn't count against
your package.)

One caveat is that the library pointed to by the .Library variable is
also available during the check. In a packaged R it's a system
directory where non-base or recommended packages are not normally
installed, so _R_CHECK_DEPENDS_ONLY_ works. If you're running a custom
build of R with a writeable .Library (say, a copy of R-devel in your
home directory), the packages end up being installed there by default
and therefore available to the package being checked, despite
_R_CHECK_DEPENDS_ONLY_=TRUE. For recommended packages, there exists a
separate environment variable _R_CHECK_NO_RECOMMENDED_=TRUE, which
makes R CMD check create fake recommended packages in the temporary
library, which fail to load.

-- 
Best regards,
Ivan


From john@m@h@rro|d @end|ng |rom gm@||@com  Tue Jul 18 17:15:05 2023
From: john@m@h@rro|d @end|ng |rom gm@||@com (John Harrold)
Date: Tue, 18 Jul 2023 08:15:05 -0700
Subject: [R-pkg-devel] Check package without suggests
In-Reply-To: <2a6dda88-990c-ee7a-63b1-7ed49fa030fd@gmail.com>
References: <CANAiAiVZ-xP_1BO8O5QZStcs506ZnVJyw1eYFuPr=ZSpcNOXOA@mail.gmail.com>
 <2a6dda88-990c-ee7a-63b1-7ed49fa030fd@gmail.com>
Message-ID: <CANAiAiVzjSEm46j0p7vtxP=iqHjgRHjs+LGYcSh9Fk+eOdiNDw@mail.gmail.com>

I want to check my package to make sure I'm properly using suggested
packages. I'm trying to catch mistakes where I forgot to do what you're
suggesting.

On Tue, Jul 18, 2023 at 7:58?AM Serguei Sokol <serguei.sokol at gmail.com>
wrote:

> Is it possible that you have complicated the task unnecessarily?
> Normally, you can just do
>
> if (requireNamespace("<suggested_pkg>", quietly=TRUE)) {
>   # do the tests involving <suggested_pkg>
> }
>
> Wasn't that enough?
>
> Best,
> Serguei.
>
>
> Le 18/07/2023 ? 16:37, John Harrold a ?crit :
> > Howdy Folks,
> >
> > I recent had a package start failing because I wasn't checking properly
> in
> > my tests to make sure my suggested packages were installed before running
> > tests. I think this is something new running on CRAN where packages are
> > tested with only the packages specified as Imports in the DESCRIPTION
> file
> > are installed. It took me a bit of back and forth to get all of these
> > issues worked out.  I was wondering if anyone has a good way to run R CMD
> > check with only the imports installed?  A github action, or a
> > specific platform on rhub?
> >
> > Thank you,
> >
> > John
> > :wq
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>

	[[alternative HTML version deleted]]


From w|||ge@rty @end|ng |rom gm@||@com  Tue Jul 18 16:52:32 2023
From: w|||ge@rty @end|ng |rom gm@||@com (William Gearty)
Date: Tue, 18 Jul 2023 10:52:32 -0400
Subject: [R-pkg-devel] Check package without suggests
In-Reply-To: <CANAiAiVZ-xP_1BO8O5QZStcs506ZnVJyw1eYFuPr=ZSpcNOXOA@mail.gmail.com>
References: <CANAiAiVZ-xP_1BO8O5QZStcs506ZnVJyw1eYFuPr=ZSpcNOXOA@mail.gmail.com>
Message-ID: <CADH2hDmUtXXXcXYXmub1dbTST+NyH6tPVW=y907ZEdgY1NykRA@mail.gmail.com>

Hi John,

You need to set the R CMD check environment variable
_R_CHECK_FORCE_SUGGESTS_ to FALSE/0. You should be able to do this
with the env_vars
argument in rhub::check(). You can also achieve this with github actions by
customizing your yaml file (example here:
https://github.com/willgearty/deeptime/blob/master/.github/workflows/R-CMD-check.yaml#L57
).

Best,
Will

------------------------------
*William Gearty*
*Lerner-Gray Postdoctoral Research Fellow*
Division of Paleontology
American Museum of Natural History
williamgearty.com



On Tue, Jul 18, 2023 at 10:38?AM John Harrold <john.m.harrold at gmail.com>
wrote:

> Howdy Folks,
>
> I recent had a package start failing because I wasn't checking properly in
> my tests to make sure my suggested packages were installed before running
> tests. I think this is something new running on CRAN where packages are
> tested with only the packages specified as Imports in the DESCRIPTION file
> are installed. It took me a bit of back and forth to get all of these
> issues worked out.  I was wondering if anyone has a good way to run R CMD
> check with only the imports installed?  A github action, or a
> specific platform on rhub?
>
> Thank you,
>
> John
> :wq
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From g@br|e|@b|@|n @end|ng |rom @p@gov@br  Tue Jul 18 18:37:46 2023
From: g@br|e|@b|@|n @end|ng |rom @p@gov@br (Gabriel Constantino Blain)
Date: Tue, 18 Jul 2023 16:37:46 +0000
Subject: [R-pkg-devel] Package PowerSDI NOTES
Message-ID: <CPYP284MB15437A8686D73F4501F312DBA738A@CPYP284MB1543.BRAP284.PROD.OUTLOOK.COM>

Dears,
I submitted my R package to CRAN.
However, it didn't pass the CRAN checks because of 2 notes:
Note 1:
Flavor: r-devel-linux-x86_64-debian-gcc, r-devel-windows-x86_64
Check: CRAN incoming feasibility, Result: NOTE
  Maintainer: 'Gabriel Constantino Blain <gabriel.blain at sp.gov.br>'
  New submission
    Possibly misspelled words in DESCRIPTION:
    EP (14:45)
    NASAPOWER (11:18)
    OperatSDI (12:9)
    PowerSDI (7:18, 13:9)
    SPEI (3:31, 7:50, 10:20)
    SPI (3:23, 7:42, 10:12)
    ScientSDI (9:19)
    evapotranspitation (13:44)
    subperiods (15:76)
Note 2:
Flavor: r-devel-windows-x86_64
Check: examples, Result: NOTE
  Examples with CPU (user + system) or elapsed time > 10s
             user system elapsed
  ScientSDI 82.71   0.75   88.00
  Reference 29.75   0.05   29.80
  Accuracy  10.02   1.11   11.12
Flavor: r-devel-linux-x86_64-debian-gcc
Check: examples, Result: NOTE
  Examples with CPU (user + system) or elapsed time > 5s
              user system elapsed
  ScientSDI 52.674  0.176  57.765
  Reference 20.749  0.148  20.898
  Accuracy   6.001  0.024   6.024

Regarding note 1, not all the words are misspelled,
EP, SPI and SPEI are acronyms
OperatSDI and ScientSDI are functions of my package
PowerSDI is the name of my package's name
 NASAPOWER is the project's name.

Regarding note 2, I don't know what's wrong. Is it related to the time to run the examples (>5s)? If is it so, it is not an error. There are so many calculations that it does take some time to do it.

The package is available at https://github.com/gabrielblain/PowerSDI
I really appreciate any help you can provide.
Best regards
Gabriel

	[[alternative HTML version deleted]]


From @vr@h@m@@d|er @end|ng |rom gm@||@com  Tue Jul 18 20:24:45 2023
From: @vr@h@m@@d|er @end|ng |rom gm@||@com (Avraham Adler)
Date: Tue, 18 Jul 2023 21:24:45 +0300
Subject: [R-pkg-devel] Package PowerSDI NOTES
In-Reply-To: <CPYP284MB15437A8686D73F4501F312DBA738A@CPYP284MB1543.BRAP284.PROD.OUTLOOK.COM>
References: <CPYP284MB15437A8686D73F4501F312DBA738A@CPYP284MB1543.BRAP284.PROD.OUTLOOK.COM>
Message-ID: <A40C34DD-C140-4C26-9833-107EBBD5E493@gmail.com>

Hello, Gabriel. 

CRAN policy is to rarely, if ever, allow long-running examples. It would be best if you could give an example of the function which requires as little run time as possible. Perhaps pre-compute some stages?

Avi

Sent from my iPhone

> On Jul 18, 2023, at 9:07 PM, Gabriel Constantino Blain <gabriel.blain at sp.gov.br> wrote:
> 
> ?Dears,
> I submitted my R package to CRAN.
> However, it didn't pass the CRAN checks because of 2 notes:
> Note 1:
> Flavor: r-devel-linux-x86_64-debian-gcc, r-devel-windows-x86_64
> Check: CRAN incoming feasibility, Result: NOTE
>  Maintainer: 'Gabriel Constantino Blain <gabriel.blain at sp.gov.br>'
>  New submission
>    Possibly misspelled words in DESCRIPTION:
>    EP (14:45)
>    NASAPOWER (11:18)
>    OperatSDI (12:9)
>    PowerSDI (7:18, 13:9)
>    SPEI (3:31, 7:50, 10:20)
>    SPI (3:23, 7:42, 10:12)
>    ScientSDI (9:19)
>    evapotranspitation (13:44)
>    subperiods (15:76)
> Note 2:
> Flavor: r-devel-windows-x86_64
> Check: examples, Result: NOTE
>  Examples with CPU (user + system) or elapsed time > 10s
>             user system elapsed
>  ScientSDI 82.71   0.75   88.00
>  Reference 29.75   0.05   29.80
>  Accuracy  10.02   1.11   11.12
> Flavor: r-devel-linux-x86_64-debian-gcc
> Check: examples, Result: NOTE
>  Examples with CPU (user + system) or elapsed time > 5s
>              user system elapsed
>  ScientSDI 52.674  0.176  57.765
>  Reference 20.749  0.148  20.898
>  Accuracy   6.001  0.024   6.024
> 
> Regarding note 1, not all the words are misspelled,
> EP, SPI and SPEI are acronyms
> OperatSDI and ScientSDI are functions of my package
> PowerSDI is the name of my package's name
> NASAPOWER is the project's name.
> 
> Regarding note 2, I don't know what's wrong. Is it related to the time to run the examples (>5s)? If is it so, it is not an error. There are so many calculations that it does take some time to do it.
> 
> The package is available at https://github.com/gabrielblain/PowerSDI
> I really appreciate any help you can provide.
> Best regards
> Gabriel
> 
>    [[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From kry|ov@r00t @end|ng |rom gm@||@com  Tue Jul 18 20:30:17 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Tue, 18 Jul 2023 21:30:17 +0300
Subject: [R-pkg-devel] Package PowerSDI NOTES
In-Reply-To: <CPYP284MB15437A8686D73F4501F312DBA738A@CPYP284MB1543.BRAP284.PROD.OUTLOOK.COM>
References: <CPYP284MB15437A8686D73F4501F312DBA738A@CPYP284MB1543.BRAP284.PROD.OUTLOOK.COM>
Message-ID: <20230718213017.28e8bb3c@Tarkus>

On Tue, 18 Jul 2023 16:37:46 +0000
Gabriel Constantino Blain <gabriel.blain at sp.gov.br> wrote:

> Regarding note 1, not all the words are misspelled,

This is fine, especially if you add a comment to your package
submission.

> Regarding note 2, I don't know what's wrong. Is it related to the
> time to run the examples (>5s)? If is it so, it is not an error.
> There are so many calculations that it does take some time to do it.

I'm sorry, but it's a policy of CRAN to require examples that run "for
no more than a few seconds each":
https://cran.r-project.org/web/packages/policies.html

I know it may be non-trivial, but I hope it's possible to reduce the
amount of data processed by your examples until they take around 5
seconds or less on a typical computer. For example, could it be
possible to reduce the date range of the ScientSDI example to one year
and/or increase(?) the TS parameter?

-- 
Best regards,
Ivan


From murdoch@dunc@n @end|ng |rom gm@||@com  Tue Jul 18 21:11:45 2023
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Tue, 18 Jul 2023 15:11:45 -0400
Subject: [R-pkg-devel] Package PowerSDI NOTES
In-Reply-To: <CPYP284MB15437A8686D73F4501F312DBA738A@CPYP284MB1543.BRAP284.PROD.OUTLOOK.COM>
References: <CPYP284MB15437A8686D73F4501F312DBA738A@CPYP284MB1543.BRAP284.PROD.OUTLOOK.COM>
Message-ID: <92e931a4-8e58-0e0d-2838-288f39cf059d@gmail.com>

On 18/07/2023 12:37 p.m., Gabriel Constantino Blain wrote:
> Dears,
> I submitted my R package to CRAN.
> However, it didn't pass the CRAN checks because of 2 notes:
> Note 1:
> Flavor: r-devel-linux-x86_64-debian-gcc, r-devel-windows-x86_64
> Check: CRAN incoming feasibility, Result: NOTE
>    Maintainer: 'Gabriel Constantino Blain <gabriel.blain at sp.gov.br>'
>    New submission
>      Possibly misspelled words in DESCRIPTION:
>      EP (14:45)
>      NASAPOWER (11:18)
>      OperatSDI (12:9)
>      PowerSDI (7:18, 13:9)
>      SPEI (3:31, 7:50, 10:20)
>      SPI (3:23, 7:42, 10:12)
>      ScientSDI (9:19)
>      evapotranspitation (13:44)
>      subperiods (15:76)
> Note 2:
> Flavor: r-devel-windows-x86_64
> Check: examples, Result: NOTE
>    Examples with CPU (user + system) or elapsed time > 10s
>               user system elapsed
>    ScientSDI 82.71   0.75   88.00
>    Reference 29.75   0.05   29.80
>    Accuracy  10.02   1.11   11.12
> Flavor: r-devel-linux-x86_64-debian-gcc
> Check: examples, Result: NOTE
>    Examples with CPU (user + system) or elapsed time > 5s
>                user system elapsed
>    ScientSDI 52.674  0.176  57.765
>    Reference 20.749  0.148  20.898
>    Accuracy   6.001  0.024   6.024
> 
> Regarding note 1, not all the words are misspelled,
> EP, SPI and SPEI are acronyms
> OperatSDI and ScientSDI are functions of my package
> PowerSDI is the name of my package's name
>   NASAPOWER is the project's name.

Writing R Extensions section 1.1.1 describes some rules for quoting 
non-English words.  I think they imply OperatSDI, ScientSDI and PowerSDI 
should be in single quotes.  I am not sure whether that also applies to 
your other non-English words.

Duncan Murdoch

> 
> Regarding note 2, I don't know what's wrong. Is it related to the time to run the examples (>5s)? If is it so, it is not an error. There are so many calculations that it does take some time to do it.
> 
> The package is available at https://github.com/gabrielblain/PowerSDI
> I really appreciate any help you can provide.
> Best regards
> Gabriel
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From bbo|ker @end|ng |rom gm@||@com  Tue Jul 18 23:33:59 2023
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Tue, 18 Jul 2023 17:33:59 -0400
Subject: [R-pkg-devel] Package PowerSDI NOTES
In-Reply-To: <92e931a4-8e58-0e0d-2838-288f39cf059d@gmail.com>
References: <CPYP284MB15437A8686D73F4501F312DBA738A@CPYP284MB1543.BRAP284.PROD.OUTLOOK.COM>
 <92e931a4-8e58-0e0d-2838-288f39cf059d@gmail.com>
Message-ID: <014be75b-8cd4-5f47-7c58-73b89ae7972e@gmail.com>

   See also

https://ropensci.org/blog/2022/01/21/ropensci-news-digest-january-2022/#to-quote-or-not-to-quote-non-existing-words-in-description

https://stat.ethz.ch/R-manual/R-patched/library/utils/html/aspell-utils.html

On 2023-07-18 3:11 p.m., Duncan Murdoch wrote:
> On 18/07/2023 12:37 p.m., Gabriel Constantino Blain wrote:
>> Dears,
>> I submitted my R package to CRAN.
>> However, it didn't pass the CRAN checks because of 2 notes:
>> Note 1:
>> Flavor: r-devel-linux-x86_64-debian-gcc, r-devel-windows-x86_64
>> Check: CRAN incoming feasibility, Result: NOTE
>> ?? Maintainer: 'Gabriel Constantino Blain <gabriel.blain at sp.gov.br>'
>> ?? New submission
>> ???? Possibly misspelled words in DESCRIPTION:
>> ???? EP (14:45)
>> ???? NASAPOWER (11:18)
>> ???? OperatSDI (12:9)
>> ???? PowerSDI (7:18, 13:9)
>> ???? SPEI (3:31, 7:50, 10:20)
>> ???? SPI (3:23, 7:42, 10:12)
>> ???? ScientSDI (9:19)
>> ???? evapotranspitation (13:44)
>> ???? subperiods (15:76)
>> Note 2:
>> Flavor: r-devel-windows-x86_64
>> Check: examples, Result: NOTE
>> ?? Examples with CPU (user + system) or elapsed time > 10s
>> ????????????? user system elapsed
>> ?? ScientSDI 82.71?? 0.75?? 88.00
>> ?? Reference 29.75?? 0.05?? 29.80
>> ?? Accuracy? 10.02?? 1.11?? 11.12
>> Flavor: r-devel-linux-x86_64-debian-gcc
>> Check: examples, Result: NOTE
>> ?? Examples with CPU (user + system) or elapsed time > 5s
>> ?????????????? user system elapsed
>> ?? ScientSDI 52.674? 0.176? 57.765
>> ?? Reference 20.749? 0.148? 20.898
>> ?? Accuracy?? 6.001? 0.024?? 6.024
>>
>> Regarding note 1, not all the words are misspelled,
>> EP, SPI and SPEI are acronyms
>> OperatSDI and ScientSDI are functions of my package
>> PowerSDI is the name of my package's name
>> ? NASAPOWER is the project's name.
> 
> Writing R Extensions section 1.1.1 describes some rules for quoting 
> non-English words.? I think they imply OperatSDI, ScientSDI and PowerSDI 
> should be in single quotes.? I am not sure whether that also applies to 
> your other non-English words.
> 
> Duncan Murdoch
> 
>>
>> Regarding note 2, I don't know what's wrong. Is it related to the time 
>> to run the examples (>5s)? If is it so, it is not an error. There are 
>> so many calculations that it does take some time to do it.
>>
>> The package is available at https://github.com/gabrielblain/PowerSDI
>> I really appreciate any help you can provide.
>> Best regards
>> Gabriel
>>
>> ????[[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From bbo|ker @end|ng |rom gm@||@com  Tue Jul 18 23:51:03 2023
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Tue, 18 Jul 2023 17:51:03 -0400
Subject: [R-pkg-devel] "Version contains leading zeroes" note: clarity
Message-ID: <d36d84e6-d4ac-5256-dec5-1b28bdcc6c54@gmail.com>

   Hi folks,

   I got the dreaded

Version contains leading zeroes

NOTE from a package check - the version was 0.0.1.000.

until I dug into the code and found the regex "(^|[.-])0[0-9]+" I didn't 
realize the restriction was on leading zeroes *within a version 
component* - I was interpreting it as leftmost in the whole version 
(i.e., the initial 0).

   I eventually found the documentation in ?package_version (feels like 
it should also be pointed to somewhere in Writing R Extensions?

Numeric versions are sequences of one or more non-negative
      integers, usually (e.g., in package ?DESCRIPTION? files)
      represented as character strings with the elements of the sequence
      concatenated and separated by single ?.? or ?-? characters.  R
      package versions consist of at least two such integers, an R
      system version of exactly three (major, minor and patchlevel).

Doesn't say anything about leading zero(e)s here ...

   "Zeroes" looks weird to me, but I see that "zeroes" is used on 26 
lines in .Rd files in the R code base, while "zeros" is used on 36 lines 
... so close to a tie. (Maybe someone wants to clean this up ... ? 
Maybe a mini-project for the R bug sprint at the end of the summer?

   Also, I'm sure this has been asked a few 100 times but: a new-to-CRAN 
maintainer triggers a NOTE.  Is there any way that a new user would know 
that this was informational only?  (There is also a 
Note_to_CRAN_maintainers 
<https://github.com/r-devel/r-svn/blob/0252cdbf14c73acd26ae2090df3c04aa6118b523/src/library/tools/R/check.R#L6009>: 
wouldn't that be more appropriate here?)

   cheers
    Ben Bolker


From henr|k@bengt@@on @end|ng |rom gm@||@com  Wed Jul 19 09:21:46 2023
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Wed, 19 Jul 2023 09:21:46 +0200
Subject: [R-pkg-devel] Check package without suggests
In-Reply-To: <CADH2hDmUtXXXcXYXmub1dbTST+NyH6tPVW=y907ZEdgY1NykRA@mail.gmail.com>
References: <CANAiAiVZ-xP_1BO8O5QZStcs506ZnVJyw1eYFuPr=ZSpcNOXOA@mail.gmail.com>
 <CADH2hDmUtXXXcXYXmub1dbTST+NyH6tPVW=y907ZEdgY1NykRA@mail.gmail.com>
Message-ID: <CAFDcVCR_931ZkBY4b+EFnEm0cE0Os5rfaK1xkmrD7v46u6Z8tw@mail.gmail.com>

Hello,

this is *not* a new behavior on CRAN, at least on (re-)submissions to
CRAN.  The package has to pass R CMD check --as-cran with all OK. If
one of the Suggests:ed package is not installed, but one of your
examples or package tests needed it, that would be detected by the
check system.

The win-builder service is will detect this
(https://win-builder.r-project.org/).

See <https://github.com/HenrikBengtsson/port4me/blob/develop/.github/workflows/R-CMD-check.yaml>
for an example how to do this on GitHub Actions.

If you're on macOS, and have installed R the default way, it takes
more work to test on that platform. It works out of the box on Linux
and MS Windows.  See the '[R-SIG-Mac] CRAN installer for macOS -
directory permissions' thread started in April 2022
<https://stat.ethz.ch/pipermail/r-sig-mac/2022-April/014371.html>,
continued in May 2022
<https://stat.ethz.ch/pipermail/r-sig-mac/2022-May/thread.html>, and
June 2022 <https://stat.ethz.ch/pipermail/r-sig-mac/2022-June/014469.html>.
It was then renamed to 'System-wide site library [Was: CRAN installer
for macOS - directory permissions]' in June 2022
<https://stat.ethz.ch/pipermail/r-sig-mac/2022-June/014501.html>.

/Henrik

On Tue, Jul 18, 2023 at 8:07?PM William Gearty <willgearty at gmail.com> wrote:
>
> Hi John,
>
> You need to set the R CMD check environment variable
> _R_CHECK_FORCE_SUGGESTS_ to FALSE/0. You should be able to do this
> with the env_vars
> argument in rhub::check(). You can also achieve this with github actions by
> customizing your yaml file (example here:
> https://github.com/willgearty/deeptime/blob/master/.github/workflows/R-CMD-check.yaml#L57
> ).
>
> Best,
> Will
>
> ------------------------------
> *William Gearty*
> *Lerner-Gray Postdoctoral Research Fellow*
> Division of Paleontology
> American Museum of Natural History
> williamgearty.com
>
>
>
> On Tue, Jul 18, 2023 at 10:38?AM John Harrold <john.m.harrold at gmail.com>
> wrote:
>
> > Howdy Folks,
> >
> > I recent had a package start failing because I wasn't checking properly in
> > my tests to make sure my suggested packages were installed before running
> > tests. I think this is something new running on CRAN where packages are
> > tested with only the packages specified as Imports in the DESCRIPTION file
> > are installed. It took me a bit of back and forth to get all of these
> > issues worked out.  I was wondering if anyone has a good way to run R CMD
> > check with only the imports installed?  A github action, or a
> > specific platform on rhub?
> >
> > Thank you,
> >
> > John
> > :wq
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From J||@n@W@ng @end|ng |rom tu|t@@edu  Wed Jul 19 17:11:33 2023
From: J||@n@W@ng @end|ng |rom tu|t@@edu (Wang, Jifan)
Date: Wed, 19 Jul 2023 15:11:33 +0000
Subject: [R-pkg-devel] Reference in the DESCRIPTION file
Message-ID: <MN2PR05MB7039C50C0E46C1BD61AF94CF9B39A@MN2PR05MB7039.namprd05.prod.outlook.com>

Hi all,
I was asked to add references describing the methods in my package. I plan to publish a paper describing this package and methods in details, but I wanted to refer the CRAN page in our paper. I have described the method briefly in the function documentation. I wonder what is the order of publishing a paper vs. submitting to CRAN. Is it fine to respond in the resubmission saying that we do not have the reference now but will add it later?

Thank you,
Jifan


	[[alternative HTML version deleted]]


From ru@@e||@g@@|mond @end|ng |rom gm@||@com  Wed Jul 19 20:55:04 2023
From: ru@@e||@g@@|mond @end|ng |rom gm@||@com (Russell Almond)
Date: Wed, 19 Jul 2023 14:55:04 -0400
Subject: [R-pkg-devel] Package Load fails to find 3rd Party DLL
In-Reply-To: <20230717123039.64db63fa@arachnoid>
References: <7feb7697-be2f-7bf8-3e7c-4276a0cb69c8@gmail.com>
 <20230714181441.03c47c08@arachnoid>
 <06ea7d13-ab84-dc3b-2c5d-1acb574260b1@gmail.com>
 <20230714222551.10428ef8@Tarkus> <20230717123039.64db63fa@arachnoid>
Message-ID: <0b9d4329-36b5-3a5d-d224-5080fda581ae@gmail.com>

Not sure if I reported the success here or not.

Copying the 3rd party DLL, but not the .lib file, to the src directory 
does work around the bug in the linker.

The complete working solution can be seen at 
https://github.com/ralmond/RNetica.

Thanks for the help.
	--Russell


On 7/17/23 5:30 AM, Ivan Krylov wrote:
> ? Fri, 14 Jul 2023 22:25:51 +0300
> Ivan Krylov <krylov.r00t at gmail.com> ?????:
> 
>> Maybe it's a red herring. Maybe the message from nm about missing file
>> has always been harmless, and what we're seeing here is a bug in the
>> toolchain; perhaps ld.exe doesn't like something about Netica.lib so
>> much that it crashes. I think that's less likely. If you run the
>> commands manually but without mentioning NeticaDLL, do you get a DLL
>> in the end?
> 
> Judging by your build logs, this could be a toolchain bug. If you set
> the *.lib file aside and only give the *.dll to the linker (using
> -l:Netica.dll if necessary), does it still fail? I know that GCC can
> link directly to *.dll files, without relying on import libraries.
>


From @p@@nder@on @end|ng |rom gm@||@com  Wed Jul 19 22:18:44 2023
From: @p@@nder@on @end|ng |rom gm@||@com (Steven P Sanderson II)
Date: Wed, 19 Jul 2023 16:18:44 -0400
Subject: [R-pkg-devel] Reference in the DESCRIPTION file
In-Reply-To: <MN2PR05MB7039C50C0E46C1BD61AF94CF9B39A@MN2PR05MB7039.namprd05.prod.outlook.com>
References: <MN2PR05MB7039C50C0E46C1BD61AF94CF9B39A@MN2PR05MB7039.namprd05.prod.outlook.com>
Message-ID: <CALXsb3J07hK4qxbDj_wxEHesXgg-O=kNQwoTBrMO73piehB+fQ@mail.gmail.com>

It should be, I have done this, I do not have a paper published for my
packages so there is nothing to refer to for them. This can be the case for
a great many packages.

On Wed, Jul 19, 2023 at 2:26?PM Wang, Jifan <Jifan.Wang at tufts.edu> wrote:

> Hi all,
> I was asked to add references describing the methods in my package. I plan
> to publish a paper describing this package and methods in details, but I
> wanted to refer the CRAN page in our paper. I have described the method
> briefly in the function documentation. I wonder what is the order of
> publishing a paper vs. submitting to CRAN. Is it fine to respond in the
> resubmission saying that we do not have the reference now but will add it
> later?
>
> Thank you,
> Jifan
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


-- 
Steven P Sanderson II, MPH
Book on Lulu <http://goo.gl/lmrlFI>
Personal Site <http://www.spsanderson.com>

	[[alternative HTML version deleted]]


From J||@n@W@ng @end|ng |rom tu|t@@edu  Wed Jul 19 22:24:47 2023
From: J||@n@W@ng @end|ng |rom tu|t@@edu (Wang, Jifan)
Date: Wed, 19 Jul 2023 20:24:47 +0000
Subject: [R-pkg-devel] [External] Re:  Reference in the DESCRIPTION file
In-Reply-To: <CALXsb3J07hK4qxbDj_wxEHesXgg-O=kNQwoTBrMO73piehB+fQ@mail.gmail.com>
References: <MN2PR05MB7039C50C0E46C1BD61AF94CF9B39A@MN2PR05MB7039.namprd05.prod.outlook.com>
 <CALXsb3J07hK4qxbDj_wxEHesXgg-O=kNQwoTBrMO73piehB+fQ@mail.gmail.com>
Message-ID: <MN2PR05MB70397A5E24CC60EC97F7986C9B39A@MN2PR05MB7039.namprd05.prod.outlook.com>

Perfect, thank you!

From: Steven P Sanderson II <spsanderson at gmail.com>
Sent: Wednesday, July 19, 2023 4:19 PM
To: Wang, Jifan <Jifan.Wang at tufts.edu>
Cc: r-package-devel at r-project.org
Subject: [External] Re: [R-pkg-devel] Reference in the DESCRIPTION file

It should be, I have done this, I do not have a paper published for my packages so there is nothing to refer to for them. This can be the case for a great many packages.

On Wed, Jul 19, 2023 at 2:26?PM Wang, Jifan <Jifan.Wang at tufts.edu<mailto:Jifan.Wang at tufts.edu>> wrote:
Hi all,
I was asked to add references describing the methods in my package. I plan to publish a paper describing this package and methods in details, but I wanted to refer the CRAN page in our paper. I have described the method briefly in the function documentation. I wonder what is the order of publishing a paper vs. submitting to CRAN. Is it fine to respond in the resubmission saying that we do not have the reference now but will add it later?

Thank you,
Jifan


        [[alternative HTML version deleted]]

______________________________________________
R-package-devel at r-project.org<mailto:R-package-devel at r-project.org> mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel


--
Steven P Sanderson II, MPH
Book on Lulu<http://goo.gl/lmrlFI>
Personal Site<http://www.spsanderson.com>

Caution: This message originated from outside of the Tufts University organization. Please exercise caution when clicking links or opening attachments. When in doubt, email the TTS Service Desk at it at tufts.edu<mailto:it at tufts.edu> or call them directly at 617-627-3376.


	[[alternative HTML version deleted]]


From og@n@m@nc@rc| @end|ng |rom gm@||@com  Thu Jul 20 22:56:31 2023
From: og@n@m@nc@rc| @end|ng |rom gm@||@com (Ogan Mancarci)
Date: Thu, 20 Jul 2023 13:56:31 -0700
Subject: [R-pkg-devel] Re-submission of removed package
Message-ID: <CADPf3_0H1Tpek1HB8uzwh3ZpxV_hF5ha_MRCK4s1PSY9LRDzSw@mail.gmail.com>

I am an author but not the maintainer of the package staplr that was
recently removed from CRAN. I have been trying to reach the maintainer to
resubmit the package after the required fixes but was unsuccessful in
doing so. I have submitted the package myself but it appears that it
requires approval from the creator to finalise submission which I am unsure
if we'll get. What is the procedure to follow in this case?

Cheers,
Ogan

	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Thu Jul 20 23:16:52 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Fri, 21 Jul 2023 00:16:52 +0300
Subject: [R-pkg-devel] Re-submission of removed package
In-Reply-To: <CADPf3_0H1Tpek1HB8uzwh3ZpxV_hF5ha_MRCK4s1PSY9LRDzSw@mail.gmail.com>
References: <CADPf3_0H1Tpek1HB8uzwh3ZpxV_hF5ha_MRCK4s1PSY9LRDzSw@mail.gmail.com>
Message-ID: <20230721001652.220eee36@Tarkus>

On Thu, 20 Jul 2023 13:56:31 -0700
Ogan Mancarci <ogan.mancarci at gmail.com> wrote:

> I have been trying to reach the maintainer to resubmit the package
> after the required fixes but was unsuccessful in doing so. I have
> submitted the package myself but it appears that it requires approval
> from the creator to finalise submission which I am unsure if we'll
> get. What is the procedure to follow in this case?

Would you like to become the maintainer instead?

Here's what CRAN policy has to say:

>> Explain any change in the maintainer?s email address and if possible
>> send confirmation from the previous address (by a separate email to
>> CRAN-submissions at R-project.org) or explain why it is not possible. 
 -- https://cran.r-project.org/web/packages/policies.html

I think you can change the Maintainer: field and note the original
maintainer being unreachable in the submission comment. I would expect
it to take some time to confirm that the original maintainer is
actually unavailable.

-- 
Best regards,
Ivan


From og@n@m@nc@rc| @end|ng |rom gm@||@com  Fri Jul 21 00:56:19 2023
From: og@n@m@nc@rc| @end|ng |rom gm@||@com (Ogan Mancarci)
Date: Thu, 20 Jul 2023 15:56:19 -0700
Subject: [R-pkg-devel] Re-submission of removed package
In-Reply-To: <20230721001652.220eee36@Tarkus>
References: <CADPf3_0H1Tpek1HB8uzwh3ZpxV_hF5ha_MRCK4s1PSY9LRDzSw@mail.gmail.com>
 <20230721001652.220eee36@Tarkus>
Message-ID: <CADPf3_2wLDdT+GK0Qs-=VL6YfgbP-XBFqh+tXr5NU-s6pHmOpw@mail.gmail.com>

I would if the maintainer really is unavailable but it is possible that
it's just a rather long vacation so I'm happy to wait while, especially
since the package remains available on github regardless.

But just to confirm, there aren't any shorter term workarounds that'd bring
the package back without changing maintainers? If so I will give a bit more
time before re-submitting with myself as the maintainer.

Cheers,
Ogan

On Thu, Jul 20, 2023 at 2:16?PM Ivan Krylov <krylov.r00t at gmail.com> wrote:

> On Thu, 20 Jul 2023 13:56:31 -0700
> Ogan Mancarci <ogan.mancarci at gmail.com> wrote:
>
> > I have been trying to reach the maintainer to resubmit the package
> > after the required fixes but was unsuccessful in doing so. I have
> > submitted the package myself but it appears that it requires approval
> > from the creator to finalise submission which I am unsure if we'll
> > get. What is the procedure to follow in this case?
>
> Would you like to become the maintainer instead?
>
> Here's what CRAN policy has to say:
>
> >> Explain any change in the maintainer?s email address and if possible
> >> send confirmation from the previous address (by a separate email to
> >> CRAN-submissions at R-project.org) or explain why it is not possible.
>  -- https://cran.r-project.org/web/packages/policies.html
>
> I think you can change the Maintainer: field and note the original
> maintainer being unreachable in the submission comment. I would expect
> it to take some time to confirm that the original maintainer is
> actually unavailable.
>
> --
> Best regards,
> Ivan
>

	[[alternative HTML version deleted]]


From joh@nne@@r@nke @end|ng |rom jrwb@de  Fri Jul 21 09:43:49 2023
From: joh@nne@@r@nke @end|ng |rom jrwb@de (Johannes Ranke)
Date: Fri, 21 Jul 2023 09:43:49 +0200
Subject: [R-pkg-devel] Undocumented code objects:   '.__global__'
Message-ID: <2910383.Icojqenx9y@ryz>

Dear all,

while preparing a maintenance release of a dated package of mine, I was struck 
by this WARNING from the R-devel version of win-builder:

* checking for missing documentation entries ... WARNING
Undocumented code objects:
  '.__global__'

I don't understand where this code object '__global__' may come from. I 
checked in the R/*.R sources as well as in the data/*.rda files.

The package source lives here:

https://cgit.jrwb.de/drfit

Kind regards,

Johannes


From kry|ov@r00t @end|ng |rom gm@||@com  Fri Jul 21 09:47:52 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Fri, 21 Jul 2023 10:47:52 +0300
Subject: [R-pkg-devel] Undocumented code objects:   '.__global__'
In-Reply-To: <2910383.Icojqenx9y@ryz>
References: <2910383.Icojqenx9y@ryz>
Message-ID: <20230721104752.7d55d431@Tarkus>

On Fri, 21 Jul 2023 09:43:49 +0200
Johannes Ranke <johannes.ranke at jrwb.de> wrote:

> * checking for missing documentation entries ... WARNING
> Undocumented code objects:
>   '.__global__'
> 
> I don't understand where this code object '__global__' may come from.

It's an implementation detail of utils::globalVariables(). Normally, R
CMD check wouldn't complain about it, but because of exportPattern(".")
in your NAMESPACE it's exported, and thus considered to be a part of
your package's API, and thus required to be documented.

It may involve more typing, but export()ing individual functions will
prevent your package from exporting some other non-API object by
accident.

-- 
Best regards,
Ivan


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Fri Jul 21 13:39:21 2023
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Fri, 21 Jul 2023 13:39:21 +0200
Subject: [R-pkg-devel] Re-submission of removed package
In-Reply-To: <CADPf3_2wLDdT+GK0Qs-=VL6YfgbP-XBFqh+tXr5NU-s6pHmOpw@mail.gmail.com>
References: <CADPf3_0H1Tpek1HB8uzwh3ZpxV_hF5ha_MRCK4s1PSY9LRDzSw@mail.gmail.com>
 <20230721001652.220eee36@Tarkus>
 <CADPf3_2wLDdT+GK0Qs-=VL6YfgbP-XBFqh+tXr5NU-s6pHmOpw@mail.gmail.com>
Message-ID: <b5d83bba-250e-2f7f-2f88-9b84dad4be47@statistik.tu-dortmund.de>



On 21.07.2023 00:56, Ogan Mancarci wrote:
> I would if the maintainer really is unavailable but it is possible that
> it's just a rather long vacation so I'm happy to wait while, especially
> since the package remains available on github regardless.
> 
> But just to confirm, there aren't any shorter term workarounds that'd bring
> the package back without changing maintainers? If so I will give a bit more
> time before re-submitting with myself as the maintainer.

Right.

Best,
Uwe Ligges




> Cheers,
> Ogan
> 
> On Thu, Jul 20, 2023 at 2:16?PM Ivan Krylov <krylov.r00t at gmail.com> wrote:
> 
>> On Thu, 20 Jul 2023 13:56:31 -0700
>> Ogan Mancarci <ogan.mancarci at gmail.com> wrote:
>>
>>> I have been trying to reach the maintainer to resubmit the package
>>> after the required fixes but was unsuccessful in doing so. I have
>>> submitted the package myself but it appears that it requires approval
>>> from the creator to finalise submission which I am unsure if we'll
>>> get. What is the procedure to follow in this case?
>>
>> Would you like to become the maintainer instead?
>>
>> Here's what CRAN policy has to say:
>>
>>>> Explain any change in the maintainer?s email address and if possible
>>>> send confirmation from the previous address (by a separate email to
>>>> CRAN-submissions at R-project.org) or explain why it is not possible.
>>   -- https://cran.r-project.org/web/packages/policies.html
>>
>> I think you can change the Maintainer: field and note the original
>> maintainer being unreachable in the submission comment. I would expect
>> it to take some time to confirm that the original maintainer is
>> actually unavailable.
>>
>> --
>> Best regards,
>> Ivan
>>
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From joh@nne@@r@nke @end|ng |rom jrwb@de  Fri Jul 21 14:40:30 2023
From: joh@nne@@r@nke @end|ng |rom jrwb@de (Johannes Ranke)
Date: Fri, 21 Jul 2023 14:40:30 +0200
Subject: [R-pkg-devel] Undocumented code objects:   '.__global__'
In-Reply-To: <20230721104752.7d55d431@Tarkus>
References: <2910383.Icojqenx9y@ryz> <20230721104752.7d55d431@Tarkus>
Message-ID: <5256815.LvFx2qVVIh@ryz>

Am Freitag, 21. Juli 2023, 09:47:52 CEST schrieb Ivan Krylov:
> On Fri, 21 Jul 2023 09:43:49 +0200
> 
> Johannes Ranke <johannes.ranke at jrwb.de> wrote:
> > * checking for missing documentation entries ... WARNING
> > 
> > Undocumented code objects:
> >   '.__global__'
> > 
> > I don't understand where this code object '__global__' may come from.
> 
> It's an implementation detail of utils::globalVariables(). Normally, R
> CMD check wouldn't complain about it, but because of exportPattern(".")
> in your NAMESPACE it's exported, and thus considered to be a part of
> your package's API, and thus required to be documented.
> 
> It may involve more typing, but export()ing individual functions will
> prevent your package from exporting some other non-API object by
> accident.

Thanks, Ivan, for your insightful coment!

Specifying exports in the NAMESPACE file solved it.

Kind regards,

Johannes


From edd @end|ng |rom deb|@n@org  Sat Jul 22 14:26:08 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Sat, 22 Jul 2023 07:26:08 -0500
Subject: [R-pkg-devel] macOS results not mirrored/updated at CRAN
In-Reply-To: <SY4PR01MB56580500A52A8E91A06D1C53AC3AA@SY4PR01MB5658.ausprd01.prod.outlook.com>
References: <25775.16177.937585.974774@rob.eddelbuettel.com>
 <25779.10961.299898.418341@rob.eddelbuettel.com>
 <SY4PR01MB56580500A52A8E91A06D1C53AC3AA@SY4PR01MB5658.ausprd01.prod.outlook.com>
Message-ID: <25787.51936.871790.433852@rob.eddelbuettel.com>


Simon,

This still persists. As Murray reported, it happened for a while now, it is
still happening eg package tiledb has been rebuilt everywhere [1] since the
upload a few days ago -- yet the results page still reports builds two
uploads ago [2] for both arm64 variants of your macOS setup.

Can you take a look, please?

Thanks in advance,  Dirk


[1] https://cran.r-project.org/package=tiledb
[2] https://cran.r-project.org/web/checks/check_results_tiledb.html
-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From trb5me @end|ng |rom v|rg|n|@@edu  Sat Jul 22 02:51:41 2023
From: trb5me @end|ng |rom v|rg|n|@@edu (taylor brown)
Date: Fri, 21 Jul 2023 20:51:41 -0400
Subject: [R-pkg-devel] DESCRIPTION file question
Message-ID: <B7AE607C-2D14-47AD-B6BF-90796F82196A@virginia.edu>

Hi everyone,

I have a question about the DESCRIPTION file of an R package that has some c++ dependencies. 

This package of mine builds c++ code during an interactive R session, but does not contain any source c++ in itself. The c++ files make reference to some dependencies that are made available by other third party R packages.

LinkingTo is the appropriate field for the DESCRIPTION file (usually) here, not Imports, but if If I remove the dependencies (BH and RcppEigen) from the Imports field, the code examples in the vignette will fail to build on a fresh machine. 

The NOTES in my build mention that, because I have no src/ directory, LinkingTo is ignored. Simultaneously, there is another note that mentions Imports is also excessive. 

It?s kind of a catch 22. It feels like my options are either add the Imports lines and ignore the NOTE, or add a superfluous src/ directory to silence the NOTE. Which option is the preferred one? Or is there a third?

Best,

Taylor R. Brown, Ph.D.
Assistant Professor of Statistics, General Faculty
Department of Statistics
University of Virginia
	[[alternative HTML version deleted]]


From edd @end|ng |rom deb|@n@org  Sat Jul 22 23:07:03 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Sat, 22 Jul 2023 16:07:03 -0500
Subject: [R-pkg-devel] DESCRIPTION file question
In-Reply-To: <B7AE607C-2D14-47AD-B6BF-90796F82196A@virginia.edu>
References: <B7AE607C-2D14-47AD-B6BF-90796F82196A@virginia.edu>
Message-ID: <25788.17655.652585.247570@rob.eddelbuettel.com>


Taylor,

I believe we have been over this at StackOverflow but you may by now have
deleted the question/

On 21 July 2023 at 20:51, taylor brown via R-package-devel wrote:
| I have a question about the DESCRIPTION file of an R package that has some c++ dependencies. 
| 
| This package of mine builds c++ code during an interactive R session, but
|  does not contain any source c++ in itself. The c++ files make reference to
|  some dependencies that are made available by other third party R packages.
|
| LinkingTo is the appropriate field for the DESCRIPTION file (usually) here, not Imports, but if If I remove the dependencies (BH and RcppEigen) from the Imports field, the code examples in the vignette will fail to build on a fresh machine. 
| 
| The NOTES in my build mention that, because I have no src/ directory, LinkingTo is ignored. Simultaneously, there is another note that mentions Imports is also excessive. 

As your package has no src/ directory and does no compilation itself, you do
not need / have no use for LinkingTo to provide the include/ directory of one
or more listed packages.

(If you have offer that compilation ability in a helper function you need to
tell the deal with it in the function. You can use `requireNamespace()` to
check if a package is present, warn or error if not, and compute the include/
directory location using R helper functions such as system.file().)

| It?s kind of a catch 22. It feels like my options are either add the Imports lines and ignore the NOTE, or add a superfluous src/ directory to silence the NOTE. Which option is the preferred one? Or is there a third?

I think all you need is in Writing R Extensions. For us to help you more a
concrete example, maybe even from a mock package, would help.

Cheers, Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From edd @end|ng |rom deb|@n@org  Sun Jul 23 00:22:20 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Sat, 22 Jul 2023 17:22:20 -0500
Subject: [R-pkg-devel] DESCRIPTION file question
In-Reply-To: <25788.17655.652585.247570@rob.eddelbuettel.com>
References: <B7AE607C-2D14-47AD-B6BF-90796F82196A@virginia.edu>
 <25788.17655.652585.247570@rob.eddelbuettel.com>
Message-ID: <25788.22172.342211.311432@rob.eddelbuettel.com>


On 22 July 2023 at 16:07, Dirk Eddelbuettel wrote:
| 
| Taylor,
| 
| I believe we have been over this at StackOverflow but you may by now have
| deleted the question/
| 
| On 21 July 2023 at 20:51, taylor brown via R-package-devel wrote:
| | I have a question about the DESCRIPTION file of an R package that has some c++ dependencies. 
| | 
| | This package of mine builds c++ code during an interactive R session, but
| |  does not contain any source c++ in itself. The c++ files make reference to
| |  some dependencies that are made available by other third party R packages.
| |
| | LinkingTo is the appropriate field for the DESCRIPTION file (usually) here, not Imports, but if If I remove the dependencies (BH and RcppEigen) from the Imports field, the code examples in the vignette will fail to build on a fresh machine. 
| | 
| | The NOTES in my build mention that, because I have no src/ directory, LinkingTo is ignored. Simultaneously, there is another note that mentions Imports is also excessive. 
| 
| As your package has no src/ directory and does no compilation itself, you do
| not need / have no use for LinkingTo to provide the include/ directory of one
| or more listed packages.
| 
| (If you have offer that compilation ability in a helper function you need to
| tell the deal with it in the function. You can use `requireNamespace()` to
| check if a package is present, warn or error if not, and compute the include/
| directory location using R helper functions such as system.file().)
| 
| | It?s kind of a catch 22. It feels like my options are either add the Imports lines and ignore the NOTE, or add a superfluous src/ directory to silence the NOTE. Which option is the preferred one? Or is there a third?
| 
| I think all you need is in Writing R Extensions. For us to help you more a
| concrete example, maybe even from a mock package, would help.

PS An existing example is provided by the 'inline' package, originally by
Oleg Sklyar, extented by many, and maintained by me for some time. It lets
you work on code in C, C++, Fortran, ... and it compiles, links and loads it
for you from an R session just you seem to desire.

And 'inline' has no LinkingTo and only one Imports for 'methods' as it uses
some S4.

Hth, Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From @|mon@urb@nek @end|ng |rom R-project@org  Sun Jul 23 01:17:15 2023
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Sun, 23 Jul 2023 11:17:15 +1200
Subject: [R-pkg-devel] macOS results not mirrored/updated at CRAN
In-Reply-To: <25787.51936.871790.433852@rob.eddelbuettel.com>
References: <25775.16177.937585.974774@rob.eddelbuettel.com>
 <25779.10961.299898.418341@rob.eddelbuettel.com>
 <SY4PR01MB56580500A52A8E91A06D1C53AC3AA@SY4PR01MB5658.ausprd01.prod.outlook.com>
 <25787.51936.871790.433852@rob.eddelbuettel.com>
Message-ID: <D4DA5737-AD56-42FE-A8C7-6202DA1F8D80@R-project.org>

Drik,

thanks. I have tried to address the problem and the actual sync problem for big-sur-x86_64 was fixed (as you can the see the results have been updated after you reported it), but apparently there was another, independent, problem with the cron jobs on that machine. I have changed the way the results sync is triggered, so hopefully that will make it more reliable.

Cheers,
Simon


> On Jul 23, 2023, at 12:26 AM, Dirk Eddelbuettel <edd at debian.org> wrote:
> 
> 
> Simon,
> 
> This still persists. As Murray reported, it happened for a while now, it is
> still happening eg package tiledb has been rebuilt everywhere [1] since the
> upload a few days ago -- yet the results page still reports builds two
> uploads ago [2] for both arm64 variants of your macOS setup.
> 
> Can you take a look, please?
> 
> Thanks in advance,  Dirk
> 
> 
> [1] https://cran.r-project.org/package=tiledb
> [2] https://cran.r-project.org/web/checks/check_results_tiledb.html
> -- 
> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
> 


From trb5me @end|ng |rom v|rg|n|@@edu  Mon Jul 24 20:26:15 2023
From: trb5me @end|ng |rom v|rg|n|@@edu (Taylor R. Brown)
Date: Mon, 24 Jul 2023 14:26:15 -0400
Subject: [R-pkg-devel] DESCRIPTION file question
In-Reply-To: <25788.22172.342211.311432@rob.eddelbuettel.com>
References: <B7AE607C-2D14-47AD-B6BF-90796F82196A@virginia.edu>
 <25788.17655.652585.247570@rob.eddelbuettel.com>
 <25788.22172.342211.311432@rob.eddelbuettel.com>
Message-ID: <CANXUWnB=D28reuotb8N8QPLUd97-6QzhUDk6CQqX7LNsOKxddA@mail.gmail.com>

Hi Dirk,

Yes, that helps very much. Thank you.

Right, my package calls out to inline::cxxfunction() to interface with one
particular c++ library. inline is a much more ambitious project obviously,
and I get how it can't require everything as a dependency.

Regarding your first paragraph, okay I'm on board now. I think we're both
looking at the same passage in Writing R Extensions, too. I had some
grammatical confusion. When I read

"Specifying a package in ?LinkingTo? suffices if these are C/C++ headers
containing source code or static linking is done at installation"

it sounds like it's referring to c/c++ headers being included at
potentially other times besides installation. In other words, it sounds
like "at installation" only applies to the second of those two conditions.
However, if I continue on reading that same paragraph, I now think that "at
installation" applies to both conditions. It even gives explicit
instructions regarding what to do about vignettes requiring packages, which
is my exact situation.

I just removed everything from both LinkingTo and Imports, stuck them in
Suggests, and now all the notes are silenced after checking on a variety of
OSes. Thanks again.

Best,
Taylor





On Sat, Jul 22, 2023 at 6:27?PM Dirk Eddelbuettel <edd at debian.org> wrote:

>
> On 22 July 2023 at 16:07, Dirk Eddelbuettel wrote:
> |
> | Taylor,
> |
> | I believe we have been over this at StackOverflow but you may by now have
> | deleted the question/
> |
> | On 21 July 2023 at 20:51, taylor brown via R-package-devel wrote:
> | | I have a question about the DESCRIPTION file of an R package that has
> some c++ dependencies.
> | |
> | | This package of mine builds c++ code during an interactive R session,
> but
> | |  does not contain any source c++ in itself. The c++ files make
> reference to
> | |  some dependencies that are made available by other third party R
> packages.
> | |
> | | LinkingTo is the appropriate field for the DESCRIPTION file (usually)
> here, not Imports, but if If I remove the dependencies (BH and RcppEigen)
> from the Imports field, the code examples in the vignette will fail to
> build on a fresh machine.
> | |
> | | The NOTES in my build mention that, because I have no src/ directory,
> LinkingTo is ignored. Simultaneously, there is another note that mentions
> Imports is also excessive.
> |
> | As your package has no src/ directory and does no compilation itself,
> you do
> | not need / have no use for LinkingTo to provide the include/ directory
> of one
> | or more listed packages.
> |
> | (If you have offer that compilation ability in a helper function you
> need to
> | tell the deal with it in the function. You can use `requireNamespace()`
> to
> | check if a package is present, warn or error if not, and compute the
> include/
> | directory location using R helper functions such as system.file().)
> |
> | | It?s kind of a catch 22. It feels like my options are either add the
> Imports lines and ignore the NOTE, or add a superfluous src/ directory to
> silence the NOTE. Which option is the preferred one? Or is there a third?
> |
> | I think all you need is in Writing R Extensions. For us to help you more
> a
> | concrete example, maybe even from a mock package, would help.
>
> PS An existing example is provided by the 'inline' package, originally by
> Oleg Sklyar, extented by many, and maintained by me for some time. It lets
> you work on code in C, C++, Fortran, ... and it compiles, links and loads
> it
> for you from an R session just you seem to desire.
>
> And 'inline' has no LinkingTo and only one Imports for 'methods' as it uses
> some S4.
>
> Hth, Dirk
>
> --
> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>


-- 
Taylor R. Brown, Ph.D.
Assistant Professor of Statistics, General Faculty
Department of Statistics
University of Virginia

	[[alternative HTML version deleted]]


From pro|jcn@@h @end|ng |rom gm@||@com  Wed Jul 26 15:37:38 2023
From: pro|jcn@@h @end|ng |rom gm@||@com (J C Nash)
Date: Wed, 26 Jul 2023 09:37:38 -0400
Subject: [R-pkg-devel] Changes to checks on NEWS?
Message-ID: <33b8892d-b3cd-b7b8-7ffe-30ba8e2c7f8e@gmail.com>


In work on an upgrade to my optimx package, I added to my (plain text) NEWS
file.

The lines

VERSION 2023-06-25

       o This is a MAJOR revision and overhaul of the optimx package and its components.
       o Fixed CITATION file based on R CMD check --as-cran complaints
         regarding requirement for person() and bibentry() changes.

pass R CMD check --as-cran

but

VERSION 2023-06-25

     This is a MAJOR revision and overhaul of the optimx package and its components.
       o Fixed CITATION file based on R CMD check --as-cran complaints
         regarding requirement for person() and bibentry() changes.

give a NOTE that news cannot process the chunk/lines in NEWS.

R CMD check    passes. (i.e., CRAN checks are tripping the NOTE).

I don't see anything about this in Writing R Extensions at moment.

Does anyone have information on what may have changed. I'd like to avoid NOTEs if possible,
and since I'm using a plain-text NEWS, don't believe this should trigger one.

The version that passes was the result of some almost random tries to see what would
trigger a note.

Cheers,

John Nash


From kry|ov@r00t @end|ng |rom gm@||@com  Wed Jul 26 16:03:25 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Wed, 26 Jul 2023 17:03:25 +0300
Subject: [R-pkg-devel] Changes to checks on NEWS?
In-Reply-To: <33b8892d-b3cd-b7b8-7ffe-30ba8e2c7f8e@gmail.com>
References: <33b8892d-b3cd-b7b8-7ffe-30ba8e2c7f8e@gmail.com>
Message-ID: <20230726170325.410e9c1b@arachnoid>

? Wed, 26 Jul 2023 09:37:38 -0400
J C Nash <profjcnash at gmail.com> ?????:

> I'd like to avoid NOTEs if possible, and since I'm using a plain-text
> NEWS, don't believe this should trigger one.

Plain-text NEWS files are parsed according to the rules specified in
help(news), which is admittedly laconic in its description. If you run
tools:::.news_reader_default('https://cran.r-project.org/web/packages/optimx/NEWS')
(or news(package = 'optimx')), you can see that R's news() already
misunderstands some of the contents of your NEWS file.

A relatively recent change (r82543, July 2022) set
_R_CHECK_NEWS_IN_PLAIN_TEXT_=TRUE for R CMD check --as-cran and started
verifying that R's plain text "news reader" function could actually
parse plain-text NEWS files without warnings or errors.

I think that if you rename NEWS to ChangeLog, R will leave the file
alone, but CRAN will offer it to users as plain text.

-- 
Best regards,
Ivan


From pro|jcn@@h @end|ng |rom gm@||@com  Wed Jul 26 16:18:15 2023
From: pro|jcn@@h @end|ng |rom gm@||@com (J C Nash)
Date: Wed, 26 Jul 2023 10:18:15 -0400
Subject: [R-pkg-devel] Changes to checks on NEWS?
In-Reply-To: <20230726170325.410e9c1b@arachnoid>
References: <33b8892d-b3cd-b7b8-7ffe-30ba8e2c7f8e@gmail.com>
 <20230726170325.410e9c1b@arachnoid>
Message-ID: <a0de0fc4-a35c-97de-00e5-c94a3da36cbf@gmail.com>

Thanks for the info, though it seems odd that CRAN wants to
parse a plain text file that is purely for information, since it
should have no impact on the current package or any other. I suppose
there might be character set issues to check. The motive for parsing
it eludes me.

Does anyone know if there are plans to use NEWS for some purpose in
the future i.e., to actually track changes beyond package maintainer's
comments?

Cheers, and thanks again.

JN


On 2023-07-26 10:03, Ivan Krylov wrote:
> ? Wed, 26 Jul 2023 09:37:38 -0400
> J C Nash <profjcnash at gmail.com> ?????:
> 
>> I'd like to avoid NOTEs if possible, and since I'm using a plain-text
>> NEWS, don't believe this should trigger one.
> 
> Plain-text NEWS files are parsed according to the rules specified in
> help(news), which is admittedly laconic in its description. If you run
> tools:::.news_reader_default('https://cran.r-project.org/web/packages/optimx/NEWS')
> (or news(package = 'optimx')), you can see that R's news() already
> misunderstands some of the contents of your NEWS file.
> 
> A relatively recent change (r82543, July 2022) set
> _R_CHECK_NEWS_IN_PLAIN_TEXT_=TRUE for R CMD check --as-cran and started
> verifying that R's plain text "news reader" function could actually
> parse plain-text NEWS files without warnings or errors.
> 
> I think that if you rename NEWS to ChangeLog, R will leave the file
> alone, but CRAN will offer it to users as plain text.
>


From murdoch@dunc@n @end|ng |rom gm@||@com  Wed Jul 26 16:25:05 2023
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Wed, 26 Jul 2023 10:25:05 -0400
Subject: [R-pkg-devel] Changes to checks on NEWS?
In-Reply-To: <a0de0fc4-a35c-97de-00e5-c94a3da36cbf@gmail.com>
References: <33b8892d-b3cd-b7b8-7ffe-30ba8e2c7f8e@gmail.com>
 <20230726170325.410e9c1b@arachnoid>
 <a0de0fc4-a35c-97de-00e5-c94a3da36cbf@gmail.com>
Message-ID: <aba5b1d8-b7b1-800b-039d-3636b6b38c96@gmail.com>

On 26/07/2023 10:18 a.m., J C Nash wrote:
> Thanks for the info, though it seems odd that CRAN wants to
> parse a plain text file that is purely for information, since it
> should have no impact on the current package or any other. I suppose
> there might be character set issues to check. The motive for parsing
> it eludes me.
> 
> Does anyone know if there are plans to use NEWS for some purpose in
> the future i.e., to actually track changes beyond package maintainer's
> comments?

NEWS has been used for a long time by the utils::news() function, which 
in turn is used by the HTML help system.

Duncan Murdoch

> 
> Cheers, and thanks again.
> 
> JN
> 
> 
> On 2023-07-26 10:03, Ivan Krylov wrote:
>> ? Wed, 26 Jul 2023 09:37:38 -0400
>> J C Nash <profjcnash at gmail.com> ?????:
>>
>>> I'd like to avoid NOTEs if possible, and since I'm using a plain-text
>>> NEWS, don't believe this should trigger one.
>>
>> Plain-text NEWS files are parsed according to the rules specified in
>> help(news), which is admittedly laconic in its description. If you run
>> tools:::.news_reader_default('https://cran.r-project.org/web/packages/optimx/NEWS')
>> (or news(package = 'optimx')), you can see that R's news() already
>> misunderstands some of the contents of your NEWS file.
>>
>> A relatively recent change (r82543, July 2022) set
>> _R_CHECK_NEWS_IN_PLAIN_TEXT_=TRUE for R CMD check --as-cran and started
>> verifying that R's plain text "news reader" function could actually
>> parse plain-text NEWS files without warnings or errors.
>>
>> I think that if you rename NEWS to ChangeLog, R will leave the file
>> alone, but CRAN will offer it to users as plain text.
>>
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From pro|jcn@@h @end|ng |rom gm@||@com  Wed Jul 26 17:45:40 2023
From: pro|jcn@@h @end|ng |rom gm@||@com (J C Nash)
Date: Wed, 26 Jul 2023 11:45:40 -0400
Subject: [R-pkg-devel] Changes to checks on NEWS?
In-Reply-To: <aba5b1d8-b7b1-800b-039d-3636b6b38c96@gmail.com>
References: <33b8892d-b3cd-b7b8-7ffe-30ba8e2c7f8e@gmail.com>
 <20230726170325.410e9c1b@arachnoid>
 <a0de0fc4-a35c-97de-00e5-c94a3da36cbf@gmail.com>
 <aba5b1d8-b7b1-800b-039d-3636b6b38c96@gmail.com>
Message-ID: <b0ab0a5d-06f5-2d85-1adf-bb21bca70177@gmail.com>

The important information is in the body of the man page for news(),
i.e., found by
    ?utils::news

and this explains why putting an "o" in front of a line clears the
NOTE. Once I realized that CRAN is running this, I could see the
"why". Thanks.

JN

On 2023-07-26 10:25, Duncan Murdoch wrote:
> 
> NEWS has been used for a long time by the utils::news() function, which in turn is used by the HTML help system.
> 
> Duncan Murdoch
>


From remme|t @end|ng |rom yorku@c@  Tue Aug  1 04:15:37 2023
From: remme|t @end|ng |rom yorku@c@ (Tarmo K Remmel)
Date: Tue, 1 Aug 2023 02:15:37 +0000
Subject: [R-pkg-devel] CRAN HTML Warning
Message-ID: <E1D9F85A-A8C9-4A2D-9163-57D57742F8E1@yorku.ca>

Hello,

I have recently updated my ShapePattern package to deal with the looming retirement of rgeos and rgdal packages. That all works well. However, the  checks for CRAN throw a series of warnings when the HTML validation is performed (one example set of warnings below). A set of identical warnings are produced for each .Rd file in my package). These seem to be generated for the automatically produced HTML files during the build/check processing.

R CMD check --as-cran ShapePattern_3.0.0.tar.gz
(All checks are OK until)...
Found the following HTML validation problems:
CARsimu.html:4:1 (CARsimu.Rd:3): Warning: <link> inserting "type" attribute
CARsimu.html:12:1 (CARsimu.Rd:3): Warning: <script> proprietary attribute "onload"
CARsimu.html:12:1 (CARsimu.Rd:3): Warning: <script> inserting "type" attribute
CARsimu.html:17:1 (CARsimu.Rd:3): Warning: <table> lacks "summary" attribute
CARsimu.html:38:1 (CARsimu.Rd:14): Warning: <table> lacks "summary" attribute

Is there something that I can do to remedy these warnings? Can they be ignored during a submission to CRAN?

Insights welcome as I am at a loss here. I?m not finding any discussion about this online.

Thank you,

Tarmo



Tarmo K Remmel ? Professor
Faculty of Environmental & Urban Change

YORK UNIVERSITY
North 430 Ross Building ? 4700<x-apple-data-detectors://3/0> Keele<x-apple-data-detectors://3/0> Street<x-apple-data-detectors://3/0>
Toronto ON ? Canada M3J 1P3
T 416.736.2100<tel:416.736.2100;22496> ext<tel:416.736.2100;22496> 22496<tel:416.736.2100;22496> F 416.736.5988<tel:416.736.5988>
Twitter: @TKRspatial ? Skype: tarmoremmel
remmelt at yorku.ca<mailto:remmelt at yorku.ca> ? www.yorku.ca/remmelt <http://www.yorku.ca/remmelt>
This electronic mail (e-mail), including any attachments, is intended only for the recipient(s) to whom it is addressed and may contain information that is privileged, confidential and/or exempt from disclosure. No waiver of privilege, confidentiality or any other protection is intended by virtue of its communication by the internet. Any unauthorized use, dissemination or copying is strictly prohibited. If you have received this e-mail in error, or are not named as a recipient, please immediately notify the sender and destroy all copies of it.


	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Tue Aug  1 21:46:51 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Tue, 1 Aug 2023 22:46:51 +0300
Subject: [R-pkg-devel] CRAN HTML Warning
In-Reply-To: <E1D9F85A-A8C9-4A2D-9163-57D57742F8E1@yorku.ca>
References: <E1D9F85A-A8C9-4A2D-9163-57D57742F8E1@yorku.ca>
Message-ID: <20230801224651.597e12a0@parabola>

? Tue, 1 Aug 2023 02:15:37 +0000
Tarmo K Remmel <remmelt at yorku.ca> ?????:

> CARsimu.html:4:1 (CARsimu.Rd:3): Warning: <link> inserting "type"
> attribute
> CARsimu.html:12:1 (CARsimu.Rd:3): Warning: <script> proprietary
> attribute "onload"
> CARsimu.html:12:1 (CARsimu.Rd:3): Warning: <script> inserting "type"
> attribute
> CARsimu.html:17:1 (CARsimu.Rd:3): Warning: <table> lacks "summary"
> attribute
> CARsimu.html:38:1 (CARsimu.Rd:14): Warning: <table> lacks "summary"
> attribute

Unless you're seeing these warning on Win-Builder, Mac Builder, or
R-hub, it's likely that the version of HTML Tidy
<https://www.html-tidy.org/> installed on your computer is too old and
produces these warnings because it expects HTML4 instead of HTML5.
Check again using one of these services (or upgrade your local Tidy
installation) to make sure, but I think your package is fine.

(Maybe R CMD check could get a better test for versions of HTML Tidy
that are too old for HTML5 produced from R documentation.)

-- 
Best regards,
Ivan


From remme|t @end|ng |rom yorku@c@  Wed Aug  2 21:01:11 2023
From: remme|t @end|ng |rom yorku@c@ (Tarmo K Remmel)
Date: Wed, 2 Aug 2023 19:01:11 +0000
Subject: [R-pkg-devel] CRAN HTML Warning
In-Reply-To: <20230801224651.597e12a0@parabola>
References: <E1D9F85A-A8C9-4A2D-9163-57D57742F8E1@yorku.ca>
 <20230801224651.597e12a0@parabola>
Message-ID: <1A727D43-5F40-4C53-B3E2-CF62ABEBBA1F@yorku.ca>

Thank you Ivan, updating HTML Tidy solved my issue. Such a relief.

Tarmo



Tarmo K Remmel ? Professor
Faculty of Environmental & Urban Change

YORK UNIVERSITY
North 430 Ross Building ? 4700<x-apple-data-detectors://3/0> Keele<x-apple-data-detectors://3/0> Street<x-apple-data-detectors://3/0>
Toronto ON ? Canada M3J 1P3
T 416.736.2100<tel:416.736.2100;22496> ext<tel:416.736.2100;22496> 22496<tel:416.736.2100;22496> F 416.736.5988<tel:416.736.5988>
Twitter: @TKRspatial ? Skype: tarmoremmel
remmelt at yorku.ca<mailto:remmelt at yorku.ca> ? www.yorku.ca/remmelt <http://www.yorku.ca/remmelt>
This electronic mail (e-mail), including any attachments, is intended only for the recipient(s) to whom it is addressed and may contain information that is privileged, confidential and/or exempt from disclosure. No waiver of privilege, confidentiality or any other protection is intended by virtue of its communication by the internet. Any unauthorized use, dissemination or copying is strictly prohibited. If you have received this e-mail in error, or are not named as a recipient, please immediately notify the sender and destroy all copies of it.

On Aug 1, 2023, at 3:46 PM, Ivan Krylov <krylov.r00t at gmail.com> wrote:

? Tue, 1 Aug 2023 02:15:37 +0000
Tarmo K Remmel <remmelt at yorku.ca> ?????:

CARsimu.html:4:1 (CARsimu.Rd:3): Warning: <link> inserting "type"
attribute
CARsimu.html:12:1 (CARsimu.Rd:3): Warning: <script> proprietary
attribute "onload"
CARsimu.html:12:1 (CARsimu.Rd:3): Warning: <script> inserting "type"
attribute
CARsimu.html:17:1 (CARsimu.Rd:3): Warning: <table> lacks "summary"
attribute
CARsimu.html:38:1 (CARsimu.Rd:14): Warning: <table> lacks "summary"
attribute

Unless you're seeing these warning on Win-Builder, Mac Builder, or
R-hub, it's likely that the version of HTML Tidy
<https://www.html-tidy.org/> installed on your computer is too old and
produces these warnings because it expects HTML4 instead of HTML5.
Check again using one of these services (or upgrade your local Tidy
installation) to make sure, but I think your package is fine.

(Maybe R CMD check could get a better test for versions of HTML Tidy
that are too old for HTML5 produced from R documentation.)

--
Best regards,
Ivan


	[[alternative HTML version deleted]]


From biii m@iii@g oii de@@ey@ws  Sat Aug  5 18:26:20 2023
From: biii m@iii@g oii de@@ey@ws (biii m@iii@g oii de@@ey@ws)
Date: Sat, 5 Aug 2023 12:26:20 -0400
Subject: [R-pkg-devel] Possible bug in Codoc checking with R CMD Check
Message-ID: <02ec01d9c7b9$918ceef0$b4a6ccd0$@denney.ws>

Hello,

 

I have a function that is used to generate LaTeX code for reporting.  When
doing R CMD check, I get an error that the "\\ldots" argument does not match
between the code and documentation.  I think that the error is coming from
the Codoc check in R CMD check not escaping the backslash before ldots.  Is
my diagnosis correct?  If so, what is the best way to report this as a bug
in R CMD check?

 

The R CMD check warning:

 

Warning: Codoc mismatches from documentation object
'topic_long_table_header':

topic_long_table_header

  Code: function(x, col_names = NULL, above_col_names = "\\hline",

                 below_col_names = "\\hline",

                 subsequent_page_notification = "\\ldots continued",

                 latex_header = NULL, verbatim = NULL)

  Docs: function(x, col_names = NULL, above_col_names = "\\hline",

                 below_col_names = "\\hline",

                 subsequent_page_notification = "\... continued",

                 latex_header = NULL, verbatim = NULL)

  Mismatches in argument default values:

    Name: 'subsequent_page_notification' Code: "\\ldots continued" Docs:
"\... continued"

 

The function looks like:

 

topic_long_table_header <- function(x,

                                    col_names=NULL,

                                    above_col_names="\\hline",
below_col_names="\\hline",

                                    subsequent_page_notification="\\ldots
continued",

                                    latex_header=NULL,

                                    verbatim=NULL) {

 # do stuff here

}

 

The .Rd file (generated by roxygen2) looks like:

 

topic_long_table_header(

  x,

  col_names = NULL,

  above_col_names = "\\\\hline",

  below_col_names = "\\\\hline",

  subsequent_page_notification = "\\\\ldots continued",

  latex_header = NULL,

  verbatim = NULL

)

 

If looking in more detail would help, relevant parts of the GitHub repo are:

 

https://github.com/billdenney/TopicLongTableR/blob/main/R/topic_long_table_h
eader_footer.R

https://github.com/billdenney/TopicLongTableR/blob/main/man/topic_long_table
_header.Rd

https://github.com/billdenney/TopicLongTableR/actions/runs/5771551599/job/15
645624146#step:6:99

 

Thanks,

 

Bill


	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Sat Aug  5 21:43:02 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Sat, 5 Aug 2023 22:43:02 +0300
Subject: [R-pkg-devel] Possible bug in Codoc checking with R CMD Check
In-Reply-To: <02ec01d9c7b9$918ceef0$b4a6ccd0$@denney.ws>
References: <02ec01d9c7b9$918ceef0$b4a6ccd0$@denney.ws>
Message-ID: <20230805224302.5b43c4e7@parabola>

? Sat, 5 Aug 2023 12:26:20 -0400
<bill at denney.ws> ?????:

> I think that the error is coming from
> the Codoc check in R CMD check not escaping the backslash before
> ldots.  Is my diagnosis correct?  If so, what is the best way to
> report this as a bug in R CMD check?

>   Mismatches in argument default values:
> 
>     Name: 'subsequent_page_notification' Code: "\\ldots continued"
> Docs: "\... continued"

I think you're right. You can see the code doing the string
substitution in tools:::.parse_usage_as_much_as_possible.
Unfortunately, expressing "replace \whatever but only if the backslash
is not escaped" using regular expressions is hard; for example,
\\\whatever ought to be interpreted as an escaped backslash followed by
a non-escaped \whatever, and so on. A negative look-behind assertion
wouldn't do the right thing in this case.

Send an e-mail to R-devel at r-project.org to discuss a potential
solution, but be ready to file a problem report on R Bugzilla in order
to make sure that it's not forgotten (which takes more steps but may be
"more right"). See https://r-project.org/bugs.html for the official
instructions.

Meanwhile, I can suggest omitting the "\\ldots continued" default value
from the Rd file as a workaround. WRE is not explicit about this, but
missing default argument values currently don't count against you
during a codoc() check, which is useful if the actual expression used
to compute the default value is unwieldy.

-- 
Best regards,
Ivan


From d@n@gro@e @end|ng |rom |@nc@@ter@@c@uk  Mon Aug  7 14:58:30 2023
From: d@n@gro@e @end|ng |rom |@nc@@ter@@c@uk (Grose, Daniel)
Date: Mon, 7 Aug 2023 12:58:30 +0000
Subject: [R-pkg-devel] clang issue
Message-ID: <LO2P265MB41510EE6A06AF9D6F6781AD6BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>

Hi

My package submission fails due to --------



In file included from MeanAnomalyMV.cpp:7:
In file included from ./Functions_mean.h:4:
In file included from usr/local/clang-trunk/bin../include/c++/v1/vector:321:
In file included from
usr/local/clang-trunk/bin../include/c++/v1/__format/formatter_bool.h:20:
In file included from
usr/local/clang-trunk/bin../include/c++/v1/__format/formatter_integral.h:32:
In file included from usr/local/clang-trunk/bin../include/c++/v1/locale:202:
usr/local/clang-trunk/bin../include/c++/v1/__locale:962:34: error: too
many arguments provided to function-like macro invocation
   962 |     int length(state_type& __st, const extern_type* __frm,
const extern_type* __end, size_t __mx) const
       |                                  ^
/data/gannet/ripley/R/R-flang/include/Rinternals.h:968:9: note: macro
'length' defined here
   968 | #define length(x)               Rf_length(x)
       |         ^
...

Please define R_NO_REMAP and fix the fallout: it has Rinternals.h
included all over the place in both .h and .cpp files.  It must not be
included before <vector> nor any other C++ header.

Please fix and resubmit.

--------------------------------------------

I have tried to reproduce the error using clang-15 on Ubuntu-22.04, but everything seems fine --

 clang-15 -std=gnu++17 -I"/usr/share/R/include" -DNDEBUG -DBOOST_ALLOW_DEPRECATED_HEADERS -DR_NO_REMAP -I'/home/grosedj/R-packages/Rcpp/include' -I'/home/grosedj/R-packages/BH/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-a3XuZ5/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c MeanAnomalyMV.cpp -o MeanAnomalyMV.o


Any ideas ?

Many thanks,

Daniel Grose




	[[alternative HTML version deleted]]


From edd @end|ng |rom deb|@n@org  Mon Aug  7 15:13:38 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Mon, 7 Aug 2023 08:13:38 -0500
Subject: [R-pkg-devel] clang issue
In-Reply-To: <LO2P265MB41510EE6A06AF9D6F6781AD6BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
References: <LO2P265MB41510EE6A06AF9D6F6781AD6BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
Message-ID: <25808.60930.221146.150878@rob.eddelbuettel.com>


Daniel,

This is not new, and not related to clang.

On 7 August 2023 at 12:58, Grose, Daniel wrote:
| Any ideas ?

Add a line

   #define R_NO_REMAP 1

before _any_ inclusion of R headers. See Section 6 of Writing R Extensions.

If you use eg Rcpp it is done for you when you include Rcpp headers.

Cheers, Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From d@n@gro@e @end|ng |rom |@nc@@ter@@c@uk  Mon Aug  7 15:16:33 2023
From: d@n@gro@e @end|ng |rom |@nc@@ter@@c@uk (Grose, Daniel)
Date: Mon, 7 Aug 2023 13:16:33 +0000
Subject: [R-pkg-devel] [External] Re:  clang issue
In-Reply-To: <25808.60930.221146.150878@rob.eddelbuettel.com>
References: <LO2P265MB41510EE6A06AF9D6F6781AD6BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
 <25808.60930.221146.150878@rob.eddelbuettel.com>
Message-ID: <LO2P265MB4151E71C52A3A129B2E45BB2BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>

Hi Dirk

Thanks for the quick response.

I thought  -DR_NO_REMAP in Makevars would set R_NO_REMAP across all compilation units. Is this not the case ?

Thanks,

Dan
________________________________
From: Dirk Eddelbuettel <edd at debian.org>
Sent: 07 August 2023 14:13
To: Grose, Daniel <dan.grose at lancaster.ac.uk>
Cc: r-package-devel at r-project.org <r-package-devel at r-project.org>
Subject: [External] Re: [R-pkg-devel] clang issue

This email originated outside the University. Check before clicking links or attachments.

Daniel,

This is not new, and not related to clang.

On 7 August 2023 at 12:58, Grose, Daniel wrote:
| Any ideas ?

Add a line

   #define R_NO_REMAP 1

before _any_ inclusion of R headers. See Section 6 of Writing R Extensions.

If you use eg Rcpp it is done for you when you include Rcpp headers.

Cheers, Dirk

--
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org

	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Mon Aug  7 15:32:53 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Mon, 7 Aug 2023 16:32:53 +0300
Subject: [R-pkg-devel] [External] Re:  clang issue
In-Reply-To: <LO2P265MB4151E71C52A3A129B2E45BB2BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
References: <LO2P265MB41510EE6A06AF9D6F6781AD6BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
 <25808.60930.221146.150878@rob.eddelbuettel.com>
 <LO2P265MB4151E71C52A3A129B2E45BB2BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
Message-ID: <20230807163253.52f87a1c@parabola>

? Mon, 7 Aug 2023 13:16:33 +0000
"Grose, Daniel" <dan.grose at lancaster.ac.uk> ?????:

> I thought  -DR_NO_REMAP in Makevars would set R_NO_REMAP across all
> compilation units. Is this not the case ?

It should have worked. Can we see the code? Is there a visible compiler
command line in the check results that you quoted in the first message?

-- 
Best regards,
Ivan


From d@n@gro@e @end|ng |rom |@nc@@ter@@c@uk  Mon Aug  7 15:38:54 2023
From: d@n@gro@e @end|ng |rom |@nc@@ter@@c@uk (Grose, Daniel)
Date: Mon, 7 Aug 2023 13:38:54 +0000
Subject: [R-pkg-devel] [External] Re:  clang issue
In-Reply-To: <20230807163253.52f87a1c@parabola>
References: <LO2P265MB41510EE6A06AF9D6F6781AD6BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
 <25808.60930.221146.150878@rob.eddelbuettel.com>
 <LO2P265MB4151E71C52A3A129B2E45BB2BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
 <20230807163253.52f87a1c@parabola>
Message-ID: <LO2P265MB4151351FAC451BB01A8DC63EBE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>

Hi Ivan

No - unfortunately not. I cannot reproduce the error locally so I posted the snippet that Uwe Ligges sent me regarding the failed CRAN submission. That is all of the information I have.

For now I will follow Dirk's advice and see if the CRAN submission gets accepted.

Thanks for your help.

Best wishes,
Dan
________________________________
From: Ivan Krylov <krylov.r00t at gmail.com>
Sent: 07 August 2023 14:32
To: Grose, Daniel <dan.grose at lancaster.ac.uk>
Cc: Dirk Eddelbuettel <edd at debian.org>; r-package-devel at r-project.org <r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] [External] Re: clang issue

? Mon, 7 Aug 2023 13:16:33 +0000
"Grose, Daniel" <dan.grose at lancaster.ac.uk> ?????:

> I thought  -DR_NO_REMAP in Makevars would set R_NO_REMAP across all
> compilation units. Is this not the case ?

It should have worked. Can we see the code? Is there a visible compiler
command line in the check results that you quoted in the first message?

--
Best regards,
Ivan

	[[alternative HTML version deleted]]


From edd @end|ng |rom deb|@n@org  Mon Aug  7 15:53:06 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Mon, 7 Aug 2023 08:53:06 -0500
Subject: [R-pkg-devel] [External] Re:  clang issue
In-Reply-To: <LO2P265MB4151351FAC451BB01A8DC63EBE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
References: <LO2P265MB41510EE6A06AF9D6F6781AD6BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
 <25808.60930.221146.150878@rob.eddelbuettel.com>
 <LO2P265MB4151E71C52A3A129B2E45BB2BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
 <20230807163253.52f87a1c@parabola>
 <LO2P265MB4151351FAC451BB01A8DC63EBE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
Message-ID: <25808.63298.413970.189167@rob.eddelbuettel.com>


On 7 August 2023 at 13:38, Grose, Daniel wrote:
| No - unfortunately not. I cannot reproduce the error locally so I posted the
| snippet that Uwe Ligges sent me regarding the failed CRAN submission. That is
| all of the information I have.
| 
| For now I will follow Dirk's advice and see if the CRAN submission gets
| accepted.

Yes as Ivan state using PKG_CFLAGS etc should be equivalent but there can be
pitfalls if you eg set PKG_CFLAGS but also have a C++ (or Fortran) file.

So as Ivan already asked: what is you repo?  We can help better (and faster)
with reproducible code.

Best, Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From d@n@gro@e @end|ng |rom |@nc@@ter@@c@uk  Mon Aug  7 15:55:17 2023
From: d@n@gro@e @end|ng |rom |@nc@@ter@@c@uk (Grose, Daniel)
Date: Mon, 7 Aug 2023 13:55:17 +0000
Subject: [R-pkg-devel] [External] Re:  clang issue
In-Reply-To: <25808.63298.413970.189167@rob.eddelbuettel.com>
References: <LO2P265MB41510EE6A06AF9D6F6781AD6BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
 <25808.60930.221146.150878@rob.eddelbuettel.com>
 <LO2P265MB4151E71C52A3A129B2E45BB2BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
 <20230807163253.52f87a1c@parabola>
 <LO2P265MB4151351FAC451BB01A8DC63EBE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
 <25808.63298.413970.189167@rob.eddelbuettel.com>
Message-ID: <LO2P265MB4151D7C1F0C28A57E4BCEBB7BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>

Hi Ivan/Dirk

As I say - I cannot reproduce the error myself. I will try asking Uwe Ligges for more information.

Best wishes,
Dan
________________________________
From: Dirk Eddelbuettel <edd at debian.org>
Sent: 07 August 2023 14:53
To: Grose, Daniel <dan.grose at lancaster.ac.uk>
Cc: Ivan Krylov <krylov.r00t at gmail.com>; Dirk Eddelbuettel <edd at debian.org>; r-package-devel at r-project.org <r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] [External] Re: clang issue


On 7 August 2023 at 13:38, Grose, Daniel wrote:
| No - unfortunately not. I cannot reproduce the error locally so I posted the
| snippet that Uwe Ligges sent me regarding the failed CRAN submission. That is
| all of the information I have.
|
| For now I will follow Dirk's advice and see if the CRAN submission gets
| accepted.

Yes as Ivan state using PKG_CFLAGS etc should be equivalent but there can be
pitfalls if you eg set PKG_CFLAGS but also have a C++ (or Fortran) file.

So as Ivan already asked: what is you repo?  We can help better (and faster)
with reproducible code.

Best, Dirk

--
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org

	[[alternative HTML version deleted]]


From edd @end|ng |rom deb|@n@org  Mon Aug  7 17:19:04 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Mon, 7 Aug 2023 10:19:04 -0500
Subject: [R-pkg-devel] [External] Re:  clang issue
In-Reply-To: <LO2P265MB4151D7C1F0C28A57E4BCEBB7BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
References: <LO2P265MB41510EE6A06AF9D6F6781AD6BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
 <25808.60930.221146.150878@rob.eddelbuettel.com>
 <LO2P265MB4151E71C52A3A129B2E45BB2BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
 <20230807163253.52f87a1c@parabola>
 <LO2P265MB4151351FAC451BB01A8DC63EBE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
 <25808.63298.413970.189167@rob.eddelbuettel.com>
 <LO2P265MB4151D7C1F0C28A57E4BCEBB7BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
Message-ID: <25809.2920.490117.377050@rob.eddelbuettel.com>


On 7 August 2023 at 13:55, Grose, Daniel wrote:
| As I say - I cannot reproduce the error myself. I will try asking Uwe Ligges
| for more information.

Methinks you are doing it wrong. We created the r-package-devel list years
ago to take load away from the overworked CRAN maintainers who are "on the
critical path" and a bottleneck we would rather see lightened.

Also, you were asked twice to share your repo or package. As you won't I
stop here as you seemingly do not want us to help you. Your call.

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From d@n@gro@e @end|ng |rom |@nc@@ter@@c@uk  Mon Aug  7 17:52:38 2023
From: d@n@gro@e @end|ng |rom |@nc@@ter@@c@uk (Grose, Daniel)
Date: Mon, 7 Aug 2023 15:52:38 +0000
Subject: [R-pkg-devel] [External] Re:  clang issue
In-Reply-To: <25809.2920.490117.377050@rob.eddelbuettel.com>
References: <LO2P265MB41510EE6A06AF9D6F6781AD6BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
 <25808.60930.221146.150878@rob.eddelbuettel.com>
 <LO2P265MB4151E71C52A3A129B2E45BB2BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
 <20230807163253.52f87a1c@parabola>
 <LO2P265MB4151351FAC451BB01A8DC63EBE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
 <25808.63298.413970.189167@rob.eddelbuettel.com>
 <LO2P265MB4151D7C1F0C28A57E4BCEBB7BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
 <25809.2920.490117.377050@rob.eddelbuettel.com>
Message-ID: <LO2P265MB4151E819F9C8F1BD738E202CBE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>

Hi Dirk

My apologies. I thought you were asking for compiler output. You can find the code at


https://github.com/grosed/anomaly

[https://opengraph.githubassets.com/866d37f560339c5ee145d5cd7e40edf768223cf08b8e9f35ae97e14d1f2b47f5/grosed/anomaly]<https://github.com/grosed/anomaly>
GitHub - grosed/anomaly<https://github.com/grosed/anomaly>
Contribute to grosed/anomaly development by creating an account on GitHub.
github.com


in the version-4.3.0 branch.

Many thanks,
Dan
________________________________
From: Dirk Eddelbuettel <edd at debian.org>
Sent: 07 August 2023 16:19
To: Grose, Daniel <dan.grose at lancaster.ac.uk>
Cc: Dirk Eddelbuettel <edd at debian.org>; Ivan Krylov <krylov.r00t at gmail.com>; r-package-devel at r-project.org <r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] [External] Re: clang issue


On 7 August 2023 at 13:55, Grose, Daniel wrote:
| As I say - I cannot reproduce the error myself. I will try asking Uwe Ligges
| for more information.

Methinks you are doing it wrong. We created the r-package-devel list years
ago to take load away from the overworked CRAN maintainers who are "on the
critical path" and a bottleneck we would rather see lightened.

Also, you were asked twice to share your repo or package. As you won't I
stop here as you seemingly do not want us to help you. Your call.

Dirk

--
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org

	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Mon Aug  7 20:01:28 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Mon, 7 Aug 2023 21:01:28 +0300
Subject: [R-pkg-devel] [External] Re:  clang issue
In-Reply-To: <LO2P265MB4151E819F9C8F1BD738E202CBE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
References: <LO2P265MB41510EE6A06AF9D6F6781AD6BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
 <25808.60930.221146.150878@rob.eddelbuettel.com>
 <LO2P265MB4151E71C52A3A129B2E45BB2BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
 <20230807163253.52f87a1c@parabola>
 <LO2P265MB4151351FAC451BB01A8DC63EBE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
 <25808.63298.413970.189167@rob.eddelbuettel.com>
 <LO2P265MB4151D7C1F0C28A57E4BCEBB7BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
 <25809.2920.490117.377050@rob.eddelbuettel.com>
 <LO2P265MB4151E819F9C8F1BD738E202CBE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
Message-ID: <20230807210128.6db4ba49@parabola>

? Mon, 7 Aug 2023 15:52:38 +0000
"Grose, Daniel" <dan.grose at lancaster.ac.uk> ?????:

> https://github.com/grosed/anomaly

Ah, so this is why I couldn't find your package on CRAN. Now I can see
the compiler log, together with the compiler command line:
https://www.stats.ox.ac.uk/pub/bdr/clang17/anomaly.log

It looks like -DR_NO_REMAP is missing from src/Makevars, both in the
last archived version on CRAN and in the version-4.3.0 branch, but if
you add it to the line with PKG_CPPFLAGS, it should work.

If it's too much to fix, at least make sure to move any R-related
#includes below the system #includes. MeanAnomalyMV.cpp originally blew
up because (1) -DR_NO_REMAP was missing from the compiler command line,
(2) Rinternals.h was included, which provides #define length(x), and
(3) a standard C++ header was included, which tried to define a
function named length. Moving the R headers below the standard C++
headers would have prevented it.

It may also help to change the interface of MeanAnomalyMV so that it
either (1) uses Rcpp, enjoying built-in R_NO_REMAP or (2) works purely
in terms of R and C types, avoiding the need to #include <vector> and
<string>.

Hope you'll succeed in getting the package back in shape!

-- 
Best regards,
Ivan


From v|ncentv@nhee@ @end|ng |rom gm@||@com  Tue Aug  8 13:29:55 2023
From: v|ncentv@nhee@ @end|ng |rom gm@||@com (Vincent van Hees)
Date: Tue, 8 Aug 2023 13:29:55 +0200
Subject: [R-pkg-devel] my experiences of maintaining an R package for 10
 years
Message-ID: <CALnEB16LVC=WUwvEybaw1HJuUYrve1fY4_MbGVvrN7zfxcVE+A@mail.gmail.com>

Dear all,

This is not a question.
I just put a blog post online with a lengthy overview of how I have
developed and maintained the R package GGIR as available on CRAN for
the past 10 years:
https://www.accelting.com/updates/10th-anniversary-of-ggir/

The package itself is probably not of interest to anyone here as it is
very research domain specific, but you may find it interesting to read
about my personal journey to grow the package into a popular tool
within the research field it is designed for: human movement and sleep
research.

Thanks,

Vincent


From edd @end|ng |rom deb|@n@org  Tue Aug  8 14:45:35 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Tue, 8 Aug 2023 07:45:35 -0500
Subject: [R-pkg-devel] macOS results not mirrored/updated at CRAN
In-Reply-To: <D4DA5737-AD56-42FE-A8C7-6202DA1F8D80@R-project.org>
References: <25775.16177.937585.974774@rob.eddelbuettel.com>
 <25779.10961.299898.418341@rob.eddelbuettel.com>
 <SY4PR01MB56580500A52A8E91A06D1C53AC3AA@SY4PR01MB5658.ausprd01.prod.outlook.com>
 <25787.51936.871790.433852@rob.eddelbuettel.com>
 <D4DA5737-AD56-42FE-A8C7-6202DA1F8D80@R-project.org>
Message-ID: <25810.14575.345108.235926@rob.eddelbuettel.com>


Simon,

This is still an issue for arm64.  Uploaded tiledb and RQuantLib yesterday,
both already built binaries for macOS (thank you!) but on the x86_64 ones are
on the results page.  Can you take another peek at this?

Thanks so much,  Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From thom@@@petzo|dt @end|ng |rom tu-dre@den@de  Wed Aug  9 16:26:42 2023
From: thom@@@petzo|dt @end|ng |rom tu-dre@den@de (Thomas Petzoldt)
Date: Wed, 9 Aug 2023 16:26:42 +0200
Subject: [R-pkg-devel] preventing auto-update of R and c2d4u r-cran-*
 packages on Ubuntu 22.04
Message-ID: <31ae1e4f-3f95-cf6a-ef45-a93d4967b16e@tu-dresden.de>

Hi,

I am running a couple of? shiny servers with several apps that are based 
around own CRAN packages. It worked stable for years, but due to the 
growing number of packages, the compile time for regular manual package 
installation and updates became inconvenient.

Therefore, I have been very happy to use pre-compiled packages from the 
c2d4u repository: deb 
https://ppa.launchpadcontent.net/c2d4u.team/c2d4u4.0+/ubuntu/ jammy main

This is indeed a great service, thanks to Dirk Edelbuettel, mark Rutter 
and the complete team! The downside is, that now the r-cran-* binaries 
are installed automatically, together with the system update. I 
experienced now repeated cases that crashed some of the shiny apps, 
mainly due to conflicts between the binary packages and other packages 
installed from sources.

My question: what is best practise, to disallow automatic updates for 
all r-cran-* packages? Uncommenting the complete package source in the 
apt/sources.list.d/cd4u...list file? Fiddling around with? 
/etc/apt/preferences ?

The ideal approach would be to put a plain textfile of all installed 
r-cran packages somewhere to the system, where packages that are to be 
upgraded (or oppositely: pinned) are just commented or outcommented.

Thanks in advance,

Thomas


From edd @end|ng |rom deb|@n@org  Wed Aug  9 16:41:29 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Wed, 9 Aug 2023 09:41:29 -0500
Subject: [R-pkg-devel] preventing auto-update of R and c2d4u r-cran-*
 packages on Ubuntu 22.04
In-Reply-To: <31ae1e4f-3f95-cf6a-ef45-a93d4967b16e@tu-dresden.de>
References: <31ae1e4f-3f95-cf6a-ef45-a93d4967b16e@tu-dresden.de>
Message-ID: <25811.42393.429393.518363@rob.eddelbuettel.com>


On 9 August 2023 at 16:26, Thomas Petzoldt wrote:
| I am running a couple of? shiny servers with several apps that are based 
| around own CRAN packages. It worked stable for years, but due to the 
| growing number of packages, the compile time for regular manual package 
| installation and updates became inconvenient.
| 
| Therefore, I have been very happy to use pre-compiled packages from the 
| c2d4u repository: deb 
| https://ppa.launchpadcontent.net/c2d4u.team/c2d4u4.0+/ubuntu/ jammy main

These days you also have r2u which has all of CRAN ie 20k binaries (each, for
two Ubuntu flavors). See  https://eddelbuettel.github.io/r2u
 
| This is indeed a great service, thanks to Dirk Edelbuettel, mark Rutter

That would be Michael Rutter.

| and the complete team! The downside is, that now the r-cran-* binaries 
| are installed automatically, together with the system update. I 
| experienced now repeated cases that crashed some of the shiny apps, 
| mainly due to conflicts between the binary packages and other packages 
| installed from sources.

If you use r2u (as I do on a laptop, an ec2 server, all my CI testing for
work and testing for months now) you get all packages and do not need to
mix.  Try r2u, it's good.
 
| My question: what is best practise, to disallow automatic updates for 
| all r-cran-* packages? Uncommenting the complete package source in the 
| apt/sources.list.d/cd4u...list file? Fiddling around with? 
| /etc/apt/preferences ?
| 
| The ideal approach would be to put a plain textfile of all installed 
| r-cran packages somewhere to the system, where packages that are to be 
| upgraded (or oppositely: pinned) are just commented or outcommented.

That is very Debian / Ubuntu specific question.  Can I ask you to bring it to
the dedicated list r-sig-debian ?

>From the top of my head I can think of setting package status 'hold' (a
simpler per-package approach) or setting specific apt pinning values to not
alter packages from specific repos, see the manual pages.

But please ask on r-sig-debian. This list is for generic R packaging questions.

Thanks, Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From thom@@@petzo|dt @end|ng |rom tu-dre@den@de  Wed Aug  9 17:00:03 2023
From: thom@@@petzo|dt @end|ng |rom tu-dre@den@de (Thomas Petzoldt)
Date: Wed, 9 Aug 2023 17:00:03 +0200
Subject: [R-pkg-devel] preventing auto-update of R and c2d4u r-cran-*
 packages on Ubuntu 22.04
In-Reply-To: <25811.42393.429393.518363@rob.eddelbuettel.com>
References: <31ae1e4f-3f95-cf6a-ef45-a93d4967b16e@tu-dresden.de>
 <25811.42393.429393.518363@rob.eddelbuettel.com>
Message-ID: <fab18f12-bece-3050-e6ed-35da493150df@tu-dresden.de>

Hi Dirk,

thank you very much dirk for the quick response. I was aware that 
r-package-devel may not be the optimal place ;-) but hoped to address 
the right audience between r-devel and r-help.

Many thanks also for the suggestions, especially r2u and sorry for 
confusing the name of Michael.

Thomas

Am 09.08.2023 um 16:41 schrieb Dirk Eddelbuettel:
> On 9 August 2023 at 16:26, Thomas Petzoldt wrote:
> | I am running a couple of? shiny servers with several apps that are based
> | around own CRAN packages. It worked stable for years, but due to the
> | growing number of packages, the compile time for regular manual package
> | installation and updates became inconvenient.
> |
> | Therefore, I have been very happy to use pre-compiled packages from the
> | c2d4u repository: deb
> | https://ppa.launchpadcontent.net/c2d4u.team/c2d4u4.0+/ubuntu/ jammy main
>
> These days you also have r2u which has all of CRAN ie 20k binaries (each, for
> two Ubuntu flavors). See  https://eddelbuettel.github.io/r2u
>   
> | This is indeed a great service, thanks to Dirk Edelbuettel, mark Rutter
>
> That would be Michael Rutter.
>
> | and the complete team! The downside is, that now the r-cran-* binaries
> | are installed automatically, together with the system update. I
> | experienced now repeated cases that crashed some of the shiny apps,
> | mainly due to conflicts between the binary packages and other packages
> | installed from sources.
>
> If you use r2u (as I do on a laptop, an ec2 server, all my CI testing for
> work and testing for months now) you get all packages and do not need to
> mix.  Try r2u, it's good.
>   
> | My question: what is best practise, to disallow automatic updates for
> | all r-cran-* packages? Uncommenting the complete package source in the
> | apt/sources.list.d/cd4u...list file? Fiddling around with
> | /etc/apt/preferences ?
> |
> | The ideal approach would be to put a plain textfile of all installed
> | r-cran packages somewhere to the system, where packages that are to be
> | upgraded (or oppositely: pinned) are just commented or outcommented.
>
> That is very Debian / Ubuntu specific question.  Can I ask you to bring it to
> the dedicated list r-sig-debian ?
>
>  From the top of my head I can think of setting package status 'hold' (a
> simpler per-package approach) or setting specific apt pinning values to not
> alter packages from specific repos, see the manual pages.
>
> But please ask on r-sig-debian. This list is for generic R packaging questions.
>
> Thanks, Dirk


From em@nue|e@cord@no @end|ng |rom gm@||@com  Wed Aug  9 17:06:01 2023
From: em@nue|e@cord@no @end|ng |rom gm@||@com (Emanuele Cordano)
Date: Wed, 9 Aug 2023 17:06:01 +0200
Subject: [R-pkg-devel] LICENSE file in an R package for CRAN submission
Message-ID: <CAKw81f9o8MYv9x5-j54G-reur8q+DXQY1vdmmV0HfZJnFnjghg@mail.gmail.com>

Dear list,

is there a way to put the LICENSE file within an R package like in Github,
I have an R package on Github with a a LICENSE file compliant to Github and
containing the text of the licence citing in the DESCRIPION file. But when
I check the package , I obatained the following output:

* checking top-level files ... NOTE
File
  LICENSE

is not mentioned in the DESCRIPTION file.

How can I solve this?
Thank you
best
Emanuele Cordano
-- 
Emanuele Cordano, PhD
Environmental Engineer / Ingegnere per l' Ambiente e il territorio nr.
3587 (Albo A - Provincia di Trento)
cell: +39 3282818564
email: emanuele.cordano at gmail.com,emanuele.cordano at rendena100.eu,
emanuele.cordano at eurac.edu
PEC: emanuele.cordano at ingpec.eu
URL: www.rendena100.eu
LinkedIn: https://www.linkedin.com/in/emanuele-cordano-31995333
GitHub: https://github.com/ecor

	[[alternative HTML version deleted]]


From bbo|ker @end|ng |rom gm@||@com  Wed Aug  9 17:15:30 2023
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Wed, 9 Aug 2023 11:15:30 -0400
Subject: [R-pkg-devel] LICENSE file in an R package for CRAN submission
In-Reply-To: <CAKw81f9o8MYv9x5-j54G-reur8q+DXQY1vdmmV0HfZJnFnjghg@mail.gmail.com>
References: <CAKw81f9o8MYv9x5-j54G-reur8q+DXQY1vdmmV0HfZJnFnjghg@mail.gmail.com>
Message-ID: <db993691-1d48-632f-1ab0-c2868da8a4fc@gmail.com>

    You have two choices:

* put LICENSE in your .Rbuildignore file so that it shows up on Github 
but is excluded from the package

* follow the instructions in 
https://cran.r-project.org/doc/manuals/R-exts.html#Licensing to refer to 
LICENSE in your DESCRIPTION file. However, CRAN generally prefers that 
you use a standard license ("GPL-2", "GPL-3"), to make it easier for 
them to know that you've really complied with their openness 
requirements, and that you *not* include a license file that is 
redundant with that spec:

 > Whereas you should feel free to include a license file in your source 
distribution, please do not arrange to install yet another copy of the 
GNU COPYING or COPYING.LIB files but refer to the copies on 
https://www.R-project.org/Licenses/ and included in the R distribution 
(in directory share/licenses). Since files named LICENSE or LICENCE will 
be installed, do not use these names for standard license files. To 
include comments about the licensing rather than the body of a license, 
use a file named something like LICENSE.note.

On 2023-08-09 11:06 a.m., Emanuele Cordano wrote:
> Dear list,
> 
> is there a way to put the LICENSE file within an R package like in Github,
> I have an R package on Github with a a LICENSE file compliant to Github and
> containing the text of the licence citing in the DESCRIPION file. But when
> I check the package , I obatained the following output:
> 
> * checking top-level files ... NOTE
> File
>    LICENSE
> 
> is not mentioned in the DESCRIPTION file.
> 
> How can I solve this?
> Thank you
> best
> Emanuele Cordano

-- 
Dr. Benjamin Bolker
Professor, Mathematics & Statistics and Biology, McMaster University
Director, School of Computational Science and Engineering
(Acting) Graduate chair, Mathematics & Statistics
 > E-mail is sent at my convenience; I don't expect replies outside of 
working hours.


From kry|ov@r00t @end|ng |rom gm@||@com  Wed Aug  9 17:15:39 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Wed, 9 Aug 2023 18:15:39 +0300
Subject: [R-pkg-devel] LICENSE file in an R package for CRAN submission
In-Reply-To: <CAKw81f9o8MYv9x5-j54G-reur8q+DXQY1vdmmV0HfZJnFnjghg@mail.gmail.com>
References: <CAKw81f9o8MYv9x5-j54G-reur8q+DXQY1vdmmV0HfZJnFnjghg@mail.gmail.com>
Message-ID: <20230809181539.520265a4@Tarkus>

On Wed, 9 Aug 2023 17:06:01 +0200
Emanuele Cordano <emanuele.cordano at gmail.com> wrote:

> I have an R package on Github with a a LICENSE file compliant to
> Github and containing the text of the licence citing in the
> DESCRIPION file. But when I check the package , I obatained the
> following output:
> 
> * checking top-level files ... NOTE
> File
>   LICENSE
> 
> is not mentioned in the DESCRIPTION file.

What is the license? If it's something like GPL, just add LICENSE to
.Rbuildignore so that it stays in the repo, satisfying GitHub, but
doesn't get included inside the package file, satisfying R CMD check.

If it's something like MIT where you have to name the copyright holder
and the copyright year, things become more complicated.

See <https://cran.r-project.org/doc/manuals/R-exts.html#Licensing> for
the precise requirements.

-- 
Best regards,
Ivan


From edd @end|ng |rom deb|@n@org  Wed Aug  9 17:17:30 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Wed, 9 Aug 2023 10:17:30 -0500
Subject: [R-pkg-devel] preventing auto-update of R and c2d4u r-cran-*
 packages on Ubuntu 22.04
In-Reply-To: <fab18f12-bece-3050-e6ed-35da493150df@tu-dresden.de>
References: <31ae1e4f-3f95-cf6a-ef45-a93d4967b16e@tu-dresden.de>
 <25811.42393.429393.518363@rob.eddelbuettel.com>
 <fab18f12-bece-3050-e6ed-35da493150df@tu-dresden.de>
Message-ID: <25811.44554.983497.36842@rob.eddelbuettel.com>


Hi Thomas,

On 9 August 2023 at 17:00, Thomas Petzoldt wrote:
| thank you very much dirk for the quick response. I was aware that 
| r-package-devel may not be the optimal place ;-) but hoped to address 
| the right audience between r-devel and r-help.
| 
| Many thanks also for the suggestions, especially r2u and sorry for 
| confusing the name of Michael.

I have one more idea but I'll wait for you to post on r-sig-debian.

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From bbo|ker @end|ng |rom gm@||@com  Wed Aug  9 17:17:47 2023
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Wed, 9 Aug 2023 11:17:47 -0400
Subject: [R-pkg-devel] LICENSE file in an R package for CRAN submission
In-Reply-To: <db993691-1d48-632f-1ab0-c2868da8a4fc@gmail.com>
References: <CAKw81f9o8MYv9x5-j54G-reur8q+DXQY1vdmmV0HfZJnFnjghg@mail.gmail.com>
 <db993691-1d48-632f-1ab0-c2868da8a4fc@gmail.com>
Message-ID: <229060ad-b2f8-3237-b97b-91df62d13a74@gmail.com>

In case you're thinking of putting the package on CRAN, note also from 
the CRAN policy https://cran.r-project.org/web/packages/policies.html:

 > Packages with licenses not listed at 
https://svn.r-project.org/R/trunk/share/licenses/license.db will 
generally not be accepted.

On 2023-08-09 11:15 a.m., Ben Bolker wrote:
>  ?? You have two choices:
> 
> * put LICENSE in your .Rbuildignore file so that it shows up on Github 
> but is excluded from the package
> 
> * follow the instructions in 
> https://cran.r-project.org/doc/manuals/R-exts.html#Licensing to refer to 
> LICENSE in your DESCRIPTION file. However, CRAN generally prefers that 
> you use a standard license ("GPL-2", "GPL-3"), to make it easier for 
> them to know that you've really complied with their openness 
> requirements, and that you *not* include a license file that is 
> redundant with that spec:
> 
>  > Whereas you should feel free to include a license file in your source 
> distribution, please do not arrange to install yet another copy of the 
> GNU COPYING or COPYING.LIB files but refer to the copies on 
> https://www.R-project.org/Licenses/ and included in the R distribution 
> (in directory share/licenses). Since files named LICENSE or LICENCE will 
> be installed, do not use these names for standard license files. To 
> include comments about the licensing rather than the body of a license, 
> use a file named something like LICENSE.note.
> 
> On 2023-08-09 11:06 a.m., Emanuele Cordano wrote:
>> Dear list,
>>
>> is there a way to put the LICENSE file within an R package like in 
>> Github,
>> I have an R package on Github with a a LICENSE file compliant to 
>> Github and
>> containing the text of the licence citing in the DESCRIPION file. But 
>> when
>> I check the package , I obatained the following output:
>>
>> * checking top-level files ... NOTE
>> File
>> ?? LICENSE
>>
>> is not mentioned in the DESCRIPTION file.
>>
>> How can I solve this?
>> Thank you
>> best
>> Emanuele Cordano
> 

-- 
Dr. Benjamin Bolker
Professor, Mathematics & Statistics and Biology, McMaster University
Director, School of Computational Science and Engineering
(Acting) Graduate chair, Mathematics & Statistics
 > E-mail is sent at my convenience; I don't expect replies outside of 
working hours.


From h@w|ckh@m @end|ng |rom gm@||@com  Wed Aug  9 17:35:24 2023
From: h@w|ckh@m @end|ng |rom gm@||@com (Hadley Wickham)
Date: Wed, 9 Aug 2023 10:35:24 -0500
Subject: [R-pkg-devel] LICENSE file in an R package for CRAN submission
In-Reply-To: <CAKw81f9o8MYv9x5-j54G-reur8q+DXQY1vdmmV0HfZJnFnjghg@mail.gmail.com>
References: <CAKw81f9o8MYv9x5-j54G-reur8q+DXQY1vdmmV0HfZJnFnjghg@mail.gmail.com>
Message-ID: <CABdHhvG1syisnotuCVGNk1Zte_Hj9U+XFsLj_ZfAs388gR2XNw@mail.gmail.com>

If you're using one of the licenses supported by usethis
(https://usethis.r-lib.org/reference/licenses.html), you can just call
the appropriate function and it will do all the setup required to be
both CRAN and GitHub compatible.

Hadley

On Wed, Aug 9, 2023 at 10:10?AM Emanuele Cordano
<emanuele.cordano at gmail.com> wrote:
>
> Dear list,
>
> is there a way to put the LICENSE file within an R package like in Github,
> I have an R package on Github with a a LICENSE file compliant to Github and
> containing the text of the licence citing in the DESCRIPION file. But when
> I check the package , I obatained the following output:
>
> * checking top-level files ... NOTE
> File
>   LICENSE
>
> is not mentioned in the DESCRIPTION file.
>
> How can I solve this?
> Thank you
> best
> Emanuele Cordano
> --
> Emanuele Cordano, PhD
> Environmental Engineer / Ingegnere per l' Ambiente e il territorio nr.
> 3587 (Albo A - Provincia di Trento)
> cell: +39 3282818564
> email: emanuele.cordano at gmail.com,emanuele.cordano at rendena100.eu,
> emanuele.cordano at eurac.edu
> PEC: emanuele.cordano at ingpec.eu
> URL: www.rendena100.eu
> LinkedIn: https://www.linkedin.com/in/emanuele-cordano-31995333
> GitHub: https://github.com/ecor
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel



-- 
http://hadley.nz


From n|u|tz @end|ng |rom gm@||@com  Thu Aug 10 17:56:22 2023
From: n|u|tz @end|ng |rom gm@||@com (Neal Fultz)
Date: Thu, 10 Aug 2023 08:56:22 -0700
Subject: [R-pkg-devel] preventing auto-update of R and c2d4u r-cran-*
 packages on Ubuntu 22.04
In-Reply-To: <fab18f12-bece-3050-e6ed-35da493150df@tu-dresden.de>
References: <31ae1e4f-3f95-cf6a-ef45-a93d4967b16e@tu-dresden.de>
 <25811.42393.429393.518363@rob.eddelbuettel.com>
 <fab18f12-bece-3050-e6ed-35da493150df@tu-dresden.de>
Message-ID: <CAL9B2veROMdW+jtKY5OJSAyEG6fHxh1faZ-E9jwbKF5yE9cc3Q@mail.gmail.com>

In the past, I've extracted the pre-built debian packages into the user's
personal folder, instead of installing them via apt. It worked (but it was
not fun), and was pretty manual.  That might interact a bit better with
some of the third party tools for dealing with dependencies in shiny apps,
compared to system-wide installs; ymmv.

On Wed, Aug 9, 2023 at 8:00?AM Thomas Petzoldt <
thomas.petzoldt at tu-dresden.de> wrote:

> Hi Dirk,
>
> thank you very much dirk for the quick response. I was aware that
> r-package-devel may not be the optimal place ;-) but hoped to address
> the right audience between r-devel and r-help.
>
> Many thanks also for the suggestions, especially r2u and sorry for
> confusing the name of Michael.
>
> Thomas
>
> Am 09.08.2023 um 16:41 schrieb Dirk Eddelbuettel:
> > On 9 August 2023 at 16:26, Thomas Petzoldt wrote:
> > | I am running a couple of  shiny servers with several apps that are
> based
> > | around own CRAN packages. It worked stable for years, but due to the
> > | growing number of packages, the compile time for regular manual package
> > | installation and updates became inconvenient.
> > |
> > | Therefore, I have been very happy to use pre-compiled packages from the
> > | c2d4u repository: deb
> > | https://ppa.launchpadcontent.net/c2d4u.team/c2d4u4.0+/ubuntu/ jammy
> main
> >
> > These days you also have r2u which has all of CRAN ie 20k binaries
> (each, for
> > two Ubuntu flavors). See  https://eddelbuettel.github.io/r2u
> >
> > | This is indeed a great service, thanks to Dirk Edelbuettel, mark Rutter
> >
> > That would be Michael Rutter.
> >
> > | and the complete team! The downside is, that now the r-cran-* binaries
> > | are installed automatically, together with the system update. I
> > | experienced now repeated cases that crashed some of the shiny apps,
> > | mainly due to conflicts between the binary packages and other packages
> > | installed from sources.
> >
> > If you use r2u (as I do on a laptop, an ec2 server, all my CI testing for
> > work and testing for months now) you get all packages and do not need to
> > mix.  Try r2u, it's good.
> >
> > | My question: what is best practise, to disallow automatic updates for
> > | all r-cran-* packages? Uncommenting the complete package source in the
> > | apt/sources.list.d/cd4u...list file? Fiddling around with
> > | /etc/apt/preferences ?
> > |
> > | The ideal approach would be to put a plain textfile of all installed
> > | r-cran packages somewhere to the system, where packages that are to be
> > | upgraded (or oppositely: pinned) are just commented or outcommented.
> >
> > That is very Debian / Ubuntu specific question.  Can I ask you to bring
> it to
> > the dedicated list r-sig-debian ?
> >
> >  From the top of my head I can think of setting package status 'hold' (a
> > simpler per-package approach) or setting specific apt pinning values to
> not
> > alter packages from specific repos, see the manual pages.
> >
> > But please ask on r-sig-debian. This list is for generic R packaging
> questions.
> >
> > Thanks, Dirk
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From @|mon@urb@nek @end|ng |rom R-project@org  Fri Aug 11 05:22:45 2023
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Fri, 11 Aug 2023 15:22:45 +1200
Subject: [R-pkg-devel] macOS results not mirrored/updated at CRAN
In-Reply-To: <25810.14575.345108.235926@rob.eddelbuettel.com>
References: <25775.16177.937585.974774@rob.eddelbuettel.com>
 <25779.10961.299898.418341@rob.eddelbuettel.com>
 <SY4PR01MB56580500A52A8E91A06D1C53AC3AA@SY4PR01MB5658.ausprd01.prod.outlook.com>
 <25787.51936.871790.433852@rob.eddelbuettel.com>
 <D4DA5737-AD56-42FE-A8C7-6202DA1F8D80@R-project.org>
 <25810.14575.345108.235926@rob.eddelbuettel.com>
Message-ID: <625F1940-4187-4629-8701-44BD1E8CCC0A@R-project.org>

Dirk,

thanks - one of those annoying cases where a script works in the login shell, but not in the cron job -- hopefully fixed.

Cheers,
Simon


> On 9/08/2023, at 12:45 AM, Dirk Eddelbuettel <edd at debian.org> wrote:
> 
> 
> Simon,
> 
> This is still an issue for arm64.  Uploaded tiledb and RQuantLib yesterday,
> both already built binaries for macOS (thank you!) but on the x86_64 ones are
> on the results page.  Can you take another peek at this?
> 
> Thanks so much,  Dirk
> 
> -- 
> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
> 


From thom@@@petzo|dt @end|ng |rom tu-dre@den@de  Fri Aug 11 07:54:38 2023
From: thom@@@petzo|dt @end|ng |rom tu-dre@den@de (Thomas Petzoldt)
Date: Fri, 11 Aug 2023 07:54:38 +0200
Subject: [R-pkg-devel] preventing auto-update of R and c2d4u r-cran-*
 packages on Ubuntu 22.04
In-Reply-To: <CAL9B2veROMdW+jtKY5OJSAyEG6fHxh1faZ-E9jwbKF5yE9cc3Q@mail.gmail.com>
References: <31ae1e4f-3f95-cf6a-ef45-a93d4967b16e@tu-dresden.de>
 <25811.42393.429393.518363@rob.eddelbuettel.com>
 <fab18f12-bece-3050-e6ed-35da493150df@tu-dresden.de>
 <CAL9B2veROMdW+jtKY5OJSAyEG6fHxh1faZ-E9jwbKF5yE9cc3Q@mail.gmail.com>
Message-ID: <33deb4ee-dcd4-2ec3-4320-25b728bdbf61@tu-dresden.de>



On 10.08.2023 at 17:56 Neal Fultz wrote:
> In the past, I've extracted the pre-built debian packages into the 
> user's personal folder, instead of installing them via apt. It worked 
> (but it was not fun), and was pretty manual.? That might interact a bit 
> better with some of the third party tools for dealing with dependencies 
> in shiny apps, compared to system-wide installs; ymmv.

Thank you for the suggestion. My implemented approach works indeed 
similar to this.

After moving this discussion to R-SIG-Debian 
(https://stat.ethz.ch/pipermail/r-sig-debian/2023-August/thread.html), 
Dirk Eddelbuettel suggested five different approaches.

I made indeed a snapshot (a local copy) of the complete "site-library" 
folder to another place of the file system (e.g. 
"site-library-snapshot"). In the .Renviron file of the shiny user, the 
environment variable R_LIBS_USER then points to this location. The base 
packages from "library" are conservative, so I decided to use them from 
the original position.

Finally, an rmarkdown script provided by the shiny-server can report the 
value of .libPaths() and versions and locations of installed packages:

installed.packages()[,2:3]

This works well, except for a package that contained relative symbolic 
links to the file system.

Thomas



From edd @end|ng |rom deb|@n@org  Fri Aug 11 15:09:41 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Fri, 11 Aug 2023 08:09:41 -0500
Subject: [R-pkg-devel] preventing auto-update of R and c2d4u r-cran-*
 packages on Ubuntu 22.04
In-Reply-To: <33deb4ee-dcd4-2ec3-4320-25b728bdbf61@tu-dresden.de>
References: <31ae1e4f-3f95-cf6a-ef45-a93d4967b16e@tu-dresden.de>
 <25811.42393.429393.518363@rob.eddelbuettel.com>
 <fab18f12-bece-3050-e6ed-35da493150df@tu-dresden.de>
 <CAL9B2veROMdW+jtKY5OJSAyEG6fHxh1faZ-E9jwbKF5yE9cc3Q@mail.gmail.com>
 <33deb4ee-dcd4-2ec3-4320-25b728bdbf61@tu-dresden.de>
Message-ID: <25814.13077.692566.548117@rob.eddelbuettel.com>


On 11 August 2023 at 07:54, Thomas Petzoldt wrote:
| After moving this discussion to R-SIG-Debian 
| (https://stat.ethz.ch/pipermail/r-sig-debian/2023-August/thread.html), 
| Dirk Eddelbuettel suggested five different approaches.
| 
| I made indeed a snapshot (a local copy) of the complete "site-library" 
| folder to another place of the file system (e.g. 
| "site-library-snapshot"). In the .Renviron file of the shiny user, the 
| environment variable R_LIBS_USER then points to this location. The base 
| packages from "library" are conservative, so I decided to use them from 
| the original position.
| 
| Finally, an rmarkdown script provided by the shiny-server can report the 
| value of .libPaths() and versions and locations of installed packages:
| 
| installed.packages()[,2:3]
| 
| This works well, except for a package that contained relative symbolic 
| links to the file system.

Perfect, and thanks for reporting back.

One other exception would be 'bad' packages with a hard code installation
path (via rpath or install_name_tool) but luckily CRAN outlaws that so it
should be rare (but 'been there, done that' and had to fix a package or two
of mine). In short, 'should work most of the time as described here'.

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From pro|jcn@@h @end|ng |rom gm@||@com  Fri Aug 11 22:41:01 2023
From: pro|jcn@@h @end|ng |rom gm@||@com (J C Nash)
Date: Fri, 11 Aug 2023 16:41:01 -0400
Subject: [R-pkg-devel] CRAN test complaints about package that passes most
 platforms
Message-ID: <64f9f1a8-139b-918e-8397-43b9f923f473@gmail.com>

My nlsr package was revised mid-February. After CRAN approved it, I got a
message that it was "failing" M1Mac tests. The issue turned out to be ANOTHER
package that was being used in an example in a vignette. Because M1 does not
provide the IEEE 754 80 bit registers, a method in package minqa did not
"converge", that is, it did not pass a termination test. Relaxing a tolerance
got a "pass" on the test service for M1 Mac then available. This issue can
be found by searching the web, though it probably deserves some clarity in
R documentation somewhere. The presentation of such problems can, of course,
take many forms.

There was a minor revision to nlsr in May to rationalize the names of some functions
to produce summary information about solutions. This seemed to give no issues until
now.

Two days ago, however, I received a msg that the (unchanged!) package is failing tests
on M1 and on Fedora clang r-devel tests in building some vignettes. The messages
are about pandoc and a missing file "framed.sty". All other tests showing on
CRAN are OK. When I try with R-hub I seem to get even more complaints than
the messages from CRAN, but about the same issues, and about vignette
building.

2 queries:

- Is anyone else getting similar messages? If so, it may be useful to share
notes to try to get this resolved. It seems within reason that the issue is
some unfortunate detail in Fedora and M1 that interacts with particular
syntax in the vignette, or that the setup of those machines is inadequate.
Comparing notes may reveal what is causing complaints and help to fix either
in the .Rmd vignettes or in the pandoc structure.

- Is there an M1Mac test platform to which packages can be submitted? Brian
Ripley did have one, but trying the link I used before seems not to present
a submission dialog.

I'd like to be helpful, but have a suspicion that a humble package developer
is being used as a stooge to find and fix software glitches outside of R. However,
if it's a matter of an unfortunate mismatch of document and processor, I'll be
happy to help document and fix it.

It would be a pity if vignettes cause enough trouble that developers simply don't
include them.

Best,

John Nash


From roy@mende|@@ohn @end|ng |rom no@@@gov  Fri Aug 11 22:56:05 2023
From: roy@mende|@@ohn @end|ng |rom no@@@gov (Roy Mendelssohn - NOAA Federal)
Date: Fri, 11 Aug 2023 13:56:05 -0700
Subject: [R-pkg-devel] 
 CRAN test complaints about package that passes most platforms
In-Reply-To: <64f9f1a8-139b-918e-8397-43b9f923f473@gmail.com>
References: <64f9f1a8-139b-918e-8397-43b9f923f473@gmail.com>
Message-ID: <F9234AB8-A2B5-4FD8-80CE-B2F05412FD1E@noaa.gov>



> On Aug 11, 2023, at 1:41 PM, J C Nash <profjcnash at gmail.com> wrote:
> 
> - Is there an M1Mac test platform to which packages can be submitted? Brian
> Ripley did have one, but trying the link I used before seems not to present
> a submission dialog.

Perhaps:

https://mac.r-project.org/macbuilder/submit.html

-Roy

**********************
"The contents of this message do not reflect any position of the U.S. Government or NOAA."
**********************
Roy Mendelssohn
Supervisory Operations Research Analyst
NOAA/NMFS
Environmental Research Division
Southwest Fisheries Science Center
***Note new street address***
110 McAllister Way
Santa Cruz, CA 95060
Phone: (831)-420-3666
Fax: (831) 420-3980
e-mail: Roy.Mendelssohn at noaa.gov www: https://www.pfeg.noaa.gov/

"Old age and treachery will overcome youth and skill."
"From those who have been given much, much will be expected" 
"the arc of the moral universe is long, but it bends toward justice" -MLK Jr.


From |ent|nj @end|ng |rom @hutt|ethre@d@com  Sat Aug 12 15:10:37 2023
From: |ent|nj @end|ng |rom @hutt|ethre@d@com (Jamie Lentin)
Date: Sat, 12 Aug 2023 14:10:37 +0100
Subject: [R-pkg-devel] gdb availability on r-devel-linux-x86_64-fedora-gcc
Message-ID: <0c6f536870145fa037b2553ce5bb8f1f@shuttlethread.com>

Hello list,

Our package gadget3[0] has just started failing the "donttest" 
additional check[1] on r-devel-linux-x86_64-fedora-gcc, specifically:-

   > # Build the model in an isolated R session w/debugger
   > writeLines(TMB::gdbsource(g3_tmb_adfun(cpp, compile_flags = "-g", 
output_script = TRUE)))
   Error in system(cmd, intern = TRUE, ignore.stdout = FALSE, 
ignore.stderr = TRUE) :
     error in running command
   Calls: writeLines -> <Anonymous> -> system
   Execution halted

The system call in question is done by the TMB package[2], and not ours 
to tinker with:

   cmd <- paste("R --vanilla < ",file," -d gdb --debugger-args=\"-x",
                gdbscript,"\"")
   txt <- system(cmd,intern=TRUE,ignore.stdout=FALSE,ignore.stderr=TRUE)

My only vaguely reasonable guess is that gdb isn't available on the host 
in question (certainly R will be!). How likely is this? Is it worth 
trying to resubmit with the call wrapped with an "if (gdb is on the 
path)"?

If this is a silly idea, which I suspect it is, would a resubmission 
removing the example be accepted or just raise red flags? This is 
obviously cheating---and it's a useful example I'd rather keep---but I'm 
not sure we have many other options available to us.

This example isn't a problem when run elsewhere. The TMB package itself 
isn't failing[3], but there doesn't seem to be any examples exercising 
TMB::gdbsource() there.

Thanks for any help!

[0] https://CRAN.R-project.org/package=gadget3
[1] https://www.stats.ox.ac.uk/pub/bdr/donttest/gadget3.out
[2] 
https://github.com/kaskr/adcomp/blob/master/TMB/R/gdbsource.R#L40-L42
[3] https://cran.r-project.org/web/checks/check_results_TMB.html


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Sat Aug 12 18:12:35 2023
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Sat, 12 Aug 2023 18:12:35 +0200
Subject: [R-pkg-devel] 
 gdb availability on r-devel-linux-x86_64-fedora-gcc
In-Reply-To: <0c6f536870145fa037b2553ce5bb8f1f@shuttlethread.com>
References: <0c6f536870145fa037b2553ce5bb8f1f@shuttlethread.com>
Message-ID: <f49a77aa-c424-588c-0f46-c8d5004634dd@statistik.tu-dortmund.de>



On 12.08.2023 15:10, Jamie Lentin wrote:
> Hello list,
> 
> Our package gadget3[0] has just started failing the "donttest" 
> additional check[1] on r-devel-linux-x86_64-fedora-gcc, specifically:-
> 
>  ? > # Build the model in an isolated R session w/debugger
>  ? > writeLines(TMB::gdbsource(g3_tmb_adfun(cpp, compile_flags = "-g", 
> output_script = TRUE)))
>  ? Error in system(cmd, intern = TRUE, ignore.stdout = FALSE, 
> ignore.stderr = TRUE) :
>  ??? error in running command
>  ? Calls: writeLines -> <Anonymous> -> system
>  ? Execution halted
> 
> The system call in question is done by the TMB package[2], and not ours 
> to tinker with:
> 
>  ? cmd <- paste("R --vanilla < ",file," -d gdb --debugger-args=\"-x",
>  ?????????????? gdbscript,"\"")
>  ? txt <- system(cmd,intern=TRUE,ignore.stdout=FALSE,ignore.stderr=TRUE)
> 
> My only vaguely reasonable guess is that gdb isn't available on the host 
> in question (certainly R will be!). How likely is this? Is it worth 
> trying to resubmit with the call wrapped with an "if (gdb is on the path)"?


I guess it is really not available as that system got an update.
Note that you package does not declare any SystemRequirements. Please do 
so and mention gdb.

Wrapping it in "if (gdb is on the path)" seems a good solution.

Best,
Uwe Ligges


> 
> If this is a silly idea, which I suspect it is, would a resubmission 
> removing the example be accepted or just raise red flags? This is 
> obviously cheating---and it's a useful example I'd rather keep---but I'm 
> not sure we have many other options available to us.
> 
> This example isn't a problem when run elsewhere. The TMB package itself 
> isn't failing[3], but there doesn't seem to be any examples exercising 
> TMB::gdbsource() there.
> 
> Thanks for any help!
> 
> [0] https://CRAN.R-project.org/package=gadget3
> [1] https://www.stats.ox.ac.uk/pub/bdr/donttest/gadget3.out
> [2] https://github.com/kaskr/adcomp/blob/master/TMB/R/gdbsource.R#L40-L42
> [3] https://cran.r-project.org/web/checks/check_results_TMB.html
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From edd @end|ng |rom deb|@n@org  Sat Aug 12 23:19:33 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Sat, 12 Aug 2023 16:19:33 -0500
Subject: [R-pkg-devel] 
 gdb availability on r-devel-linux-x86_64-fedora-gcc
In-Reply-To: <f49a77aa-c424-588c-0f46-c8d5004634dd@statistik.tu-dortmund.de>
References: <0c6f536870145fa037b2553ce5bb8f1f@shuttlethread.com>
 <f49a77aa-c424-588c-0f46-c8d5004634dd@statistik.tu-dortmund.de>
Message-ID: <25815.63333.522184.604529@rob.eddelbuettel.com>


On 12 August 2023 at 18:12, Uwe Ligges wrote:
| On 12.08.2023 15:10, Jamie Lentin wrote:
| > The system call in question is done by the TMB package[2], and not ours 
| > to tinker with:
| > 
| >  ? cmd <- paste("R --vanilla < ",file," -d gdb --debugger-args=\"-x",
| >  ?????????????? gdbscript,"\"")
| >  ? txt <- system(cmd,intern=TRUE,ignore.stdout=FALSE,ignore.stderr=TRUE)
| > 
| > My only vaguely reasonable guess is that gdb isn't available on the host 
| > in question (certainly R will be!). How likely is this? Is it worth 
| > trying to resubmit with the call wrapped with an "if (gdb is on the path)"?
| 
| 
| I guess it is really not available as that system got an update.
| Note that you package does not declare any SystemRequirements. Please do 
| so and mention gdb.
| 
| Wrapping it in "if (gdb is on the path)" seems a good solution.

Seconded esp as some systems may have lldb instead of gdb, or neither.
Adding a simple `if (nzchar(Sys.which("gdb")))` should get you there.

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Sun Aug 13 00:52:14 2023
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Sun, 13 Aug 2023 00:52:14 +0200
Subject: [R-pkg-devel] 
 gdb availability on r-devel-linux-x86_64-fedora-gcc
In-Reply-To: <25815.63333.522184.604529@rob.eddelbuettel.com>
References: <0c6f536870145fa037b2553ce5bb8f1f@shuttlethread.com>
 <f49a77aa-c424-588c-0f46-c8d5004634dd@statistik.tu-dortmund.de>
 <25815.63333.522184.604529@rob.eddelbuettel.com>
Message-ID: <00d5c596-4fa9-9659-a53b-e0eaf18ee24d@statistik.tu-dortmund.de>



On 12.08.2023 23:19, Dirk Eddelbuettel wrote:
> 
> On 12 August 2023 at 18:12, Uwe Ligges wrote:
> | On 12.08.2023 15:10, Jamie Lentin wrote:
> | > The system call in question is done by the TMB package[2], and not ours
> | > to tinker with:
> | >
> | >  ? cmd <- paste("R --vanilla < ",file," -d gdb --debugger-args=\"-x",
> | >  ?????????????? gdbscript,"\"")
> | >  ? txt <- system(cmd,intern=TRUE,ignore.stdout=FALSE,ignore.stderr=TRUE)
> | >
> | > My only vaguely reasonable guess is that gdb isn't available on the host
> | > in question (certainly R will be!). How likely is this? Is it worth
> | > trying to resubmit with the call wrapped with an "if (gdb is on the path)"?
> |
> |
> | I guess it is really not available as that system got an update.
> | Note that you package does not declare any SystemRequirements. Please do
> | so and mention gdb.
> |
> | Wrapping it in "if (gdb is on the path)" seems a good solution.
> 
> Seconded esp as some systems may have lldb instead of gdb, or neither.
> Adding a simple `if (nzchar(Sys.which("gdb")))` should get you there.
> 
> Dirk
> 


Note that also

1. The machine does not have R on the path (but Rdev)
2. you need to use a current pandoc. Citing Professor Ripley: "The 
platforms failing are using pandoc 3.1.6 or (newly updated, M1mac) 3.1.6.1"

Best,
Uwe Ligges


From m|ketopper123 @end|ng |rom gm@||@com  Sun Aug 13 07:49:01 2023
From: m|ketopper123 @end|ng |rom gm@||@com (Michael Topper)
Date: Sat, 12 Aug 2023 22:49:01 -0700
Subject: [R-pkg-devel] Examples are too long in computation for CRAN
Message-ID: <CAN6696sn9Hc5=R50uK_iG=2DY+uffjjA+h+jgRsxv==VjPJ1gA@mail.gmail.com>

Hello all,

Not sure how to handle this, as it had not been an issue on my previous
CRAN submissions. It appears that some of my examples/tests are taking too
long to run for CRAN's standards. Is there a way around this other than the
simple "change the example" or "change the test"?

Moreover, is there any insight as to why this would happen on the third
update of the package rather than on the first or second?

Thanks in advance, and see below for the NOTE:


Flavor: r-devel-linux-x86_64-debian-gcc
Check: examples, Result: NOTE
  Examples with CPU (user + system) or elapsed time > 5s
                    user system elapsed
  panelsummary     9.574  0.273   0.817
  panelsummary_raw 6.048  0.164   0.450
  Examples with CPU time > 2.5 times elapsed time
                    user system elapsed  ratio
  panelsummary_raw 6.048  0.164   0.450 13.804
  panelsummary     9.574  0.273   0.817 12.053
  clean_raw        3.684  0.064   0.514  7.292

Flavor: r-devel-linux-x86_64-debian-gcc
Check: tests, Result: NOTE
    Running 'testthat.R' [54s/6s]
  Running R code in 'testthat.R' had CPU time 9.3 times elapsed time

	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Sun Aug 13 08:14:42 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Sun, 13 Aug 2023 09:14:42 +0300
Subject: [R-pkg-devel] Examples are too long in computation for CRAN
In-Reply-To: <CAN6696sn9Hc5=R50uK_iG=2DY+uffjjA+h+jgRsxv==VjPJ1gA@mail.gmail.com>
References: <CAN6696sn9Hc5=R50uK_iG=2DY+uffjjA+h+jgRsxv==VjPJ1gA@mail.gmail.com>
Message-ID: <20230813091442.37cc6189@parabola>

? Sat, 12 Aug 2023 22:49:01 -0700
Michael Topper <miketopper123 at gmail.com> ?????:

> It appears that some of my examples/tests are taking too
> long to run for CRAN's standards.

I don't think they are running too long; I think they are too parallel.
The elapsed time is below 1s, but the "user" time (CPU time spent in
the process) is 7 to 13 times that. This suggests that your code
resulted in starting more threads than CRAN allows (up to 2 if you have
to test parallellism). Are you using OpenMP? data.table? makeCluster()?
It's simplest to always to default to a parallelism factor of 2 in
examples an tests, because determining the right number is a hard
problem. (What if the computer is busy doing something else? What if
the BLAS is already parallel enough?)

> Moreover, is there any insight as to why this would happen on the
> third update of the package rather than on the first or second?

The rule has always depended on the particular system running the
checks (five seconds on my 12-year-old ThinkPad or on my ultraportative
with an Intel Atom that had snails in its ancestry?). Maybe some
dependency of your package has updated and started creating threads
where it previously didn't.

-- 
Best regards,
Ivan


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Sun Aug 13 08:26:23 2023
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Sun, 13 Aug 2023 08:26:23 +0200
Subject: [R-pkg-devel] Examples are too long in computation for CRAN
In-Reply-To: <20230813091442.37cc6189@parabola>
References: <CAN6696sn9Hc5=R50uK_iG=2DY+uffjjA+h+jgRsxv==VjPJ1gA@mail.gmail.com>
 <20230813091442.37cc6189@parabola>
Message-ID: <f033518a-c19a-a27d-c229-a5523ea92ed8@statistik.tu-dortmund.de>



On 13.08.2023 08:14, Ivan Krylov wrote:
> ? Sat, 12 Aug 2023 22:49:01 -0700
> Michael Topper <miketopper123 at gmail.com> ?????:
> 
>> It appears that some of my examples/tests are taking too
>> long to run for CRAN's standards.
> 
> I don't think they are running too long; I think they are too parallel.
> The elapsed time is below 1s, but the "user" time (CPU time spent in
> the process) is 7 to 13 times that. This suggests that your code
> resulted in starting more threads than CRAN allows (up to 2 if you have
> to test parallellism). Are you using OpenMP? data.table? makeCluster()?
> It's simplest to always to default to a parallelism factor of 2 in
> examples an tests, because determining the right number is a hard
> problem. (What if the computer is busy doing something else? What if
> the BLAS is already parallel enough?)
> 
>> Moreover, is there any insight as to why this would happen on the
>> third update of the package rather than on the first or second?
> 
> The rule has always depended on the particular system running the
> checks (five seconds on my 12-year-old ThinkPad or on my ultraportative
> with an Intel Atom that had snails in its ancestry?). Maybe some
> dependency of your package has updated and started creating threads
> where it previously didn't.
> 


Good points, not only for examples and tests, but also for defaults.

On shared resources (such as clusters) users may not expect the 
parallelization you use and then overallocate the resources.

Example: 20 cores available to the user who runs makeCluster() for 
paallelization, but the underlying code does multihreading on 20 cores. 
Then we end up in 20*20 threads on the machine slowing down the machine 
and processes of other uers.
Hence, defaults should also not be more than 2. Simply allow the user to 
ask for more.

Best,
Uwe Ligges


From m|ketopper123 @end|ng |rom gm@||@com  Sun Aug 13 09:59:40 2023
From: m|ketopper123 @end|ng |rom gm@||@com (Michael Topper)
Date: Sun, 13 Aug 2023 00:59:40 -0700
Subject: [R-pkg-devel] Examples are too long in computation for CRAN
In-Reply-To: <f033518a-c19a-a27d-c229-a5523ea92ed8@statistik.tu-dortmund.de>
References: <CAN6696sn9Hc5=R50uK_iG=2DY+uffjjA+h+jgRsxv==VjPJ1gA@mail.gmail.com>
 <20230813091442.37cc6189@parabola>
 <f033518a-c19a-a27d-c229-a5523ea92ed8@statistik.tu-dortmund.de>
Message-ID: <CAN6696sCCmHsMxUzBhA1WH7xJzxPUS=e8fTPyxmjGW0KGuO=Qg@mail.gmail.com>

I have tried the following:

   - Trimming down the examples substantially to only run 1 regression
   per-function.
   - Setting the nthreads argument to 2 in fixest::feels() in case this is
   the problem as suggested.
   - Tried to use skip_cran_test() on the tests that include fixest
   regressions

However, while the time has substantially been trimmed down, it still does
not pass. At this point, I'm not sure what the next step is.

Below is the results:

Flavor: r-devel-linux-x86_64-debian-gcc
Check: examples, Result: NOTE
  Examples with CPU time > 2.5 times elapsed time
                    user system elapsed ratio
  panelsummary_raw 3.354  0.054   0.461 7.393
  clean_raw        3.436  0.091   0.571 6.177
  panelsummary     3.636  0.136   0.824 4.578

Flavor: r-devel-linux-x86_64-debian-gcc
Check: tests, Result: NOTE
    Running 'testthat.R' [39s/4s]
  Running R code in 'testthat.R' had CPU time 8.7 times elapsed time

On Sat, Aug 12, 2023 at 11:26?PM Uwe Ligges <ligges at statistik.tu-dortmund.de>
wrote:

>
>
> On 13.08.2023 08:14, Ivan Krylov wrote:
> > ? Sat, 12 Aug 2023 22:49:01 -0700
> > Michael Topper <miketopper123 at gmail.com> ?????:
> >
> >> It appears that some of my examples/tests are taking too
> >> long to run for CRAN's standards.
> >
> > I don't think they are running too long; I think they are too parallel.
> > The elapsed time is below 1s, but the "user" time (CPU time spent in
> > the process) is 7 to 13 times that. This suggests that your code
> > resulted in starting more threads than CRAN allows (up to 2 if you have
> > to test parallellism). Are you using OpenMP? data.table? makeCluster()?
> > It's simplest to always to default to a parallelism factor of 2 in
> > examples an tests, because determining the right number is a hard
> > problem. (What if the computer is busy doing something else? What if
> > the BLAS is already parallel enough?)
> >
> >> Moreover, is there any insight as to why this would happen on the
> >> third update of the package rather than on the first or second?
> >
> > The rule has always depended on the particular system running the
> > checks (five seconds on my 12-year-old ThinkPad or on my ultraportative
> > with an Intel Atom that had snails in its ancestry?). Maybe some
> > dependency of your package has updated and started creating threads
> > where it previously didn't.
> >
>
>
> Good points, not only for examples and tests, but also for defaults.
>
> On shared resources (such as clusters) users may not expect the
> parallelization you use and then overallocate the resources.
>
> Example: 20 cores available to the user who runs makeCluster() for
> paallelization, but the underlying code does multihreading on 20 cores.
> Then we end up in 20*20 threads on the machine slowing down the machine
> and processes of other uers.
> Hence, defaults should also not be more than 2. Simply allow the user to
> ask for more.
>
> Best,
> Uwe Ligges
>


-- 
Michael Topper
B.S. Economics and Mathematics, University of California San Diego 2015
M.A. Economics, San Diego State University 2018
Mobile: (805) 914-4285
miketopper123 at gmail.com

	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Sun Aug 13 10:42:59 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Sun, 13 Aug 2023 11:42:59 +0300
Subject: [R-pkg-devel] Examples are too long in computation for CRAN
In-Reply-To: <CAN6696sCCmHsMxUzBhA1WH7xJzxPUS=e8fTPyxmjGW0KGuO=Qg@mail.gmail.com>
References: <CAN6696sn9Hc5=R50uK_iG=2DY+uffjjA+h+jgRsxv==VjPJ1gA@mail.gmail.com>
 <20230813091442.37cc6189@parabola>
 <f033518a-c19a-a27d-c229-a5523ea92ed8@statistik.tu-dortmund.de>
 <CAN6696sCCmHsMxUzBhA1WH7xJzxPUS=e8fTPyxmjGW0KGuO=Qg@mail.gmail.com>
Message-ID: <20230813114259.77e21bbe@parabola>

? Sun, 13 Aug 2023 00:59:40 -0700
Michael Topper <miketopper123 at gmail.com> ?????:

>    - Setting the nthreads argument to 2 in fixest::feels() in case
> this is the problem as suggested.

Any chance you could be hitting some other code paths in the fixest
package while working on the objects returned by fixest::feols()?

Try running trace(fixest::getFixest_nthreads) and then running examples
in the same R session. Assuming that (1) your only problem is fixest
and (2) every fixest function that uses OpenMP consults
getFixest_nthreads() by default, it should be possible to catch them
this way.

If you see a call but aren't sure about its origin, try tracer =
quote(traceback()) or tracer = quote(browser()). (As a precaution,
untrace() the function before trace()ing it again.)

FWIW, modelsummary depends on both fixest and data.table, but it
doesn't look like you're creating threads via these.

>    - Tried to use skip_cran_test() on the tests that include fixest
>    regressions

For tests, there's one more option: fixest::setFixest_nthreads(1) at
the beginning of the file. This should eliminate any extra threads
originating from fixest. If you do this and the problem persists, it
must be something else. Unfortunately, this is global state, and using
this in examples will involve saving the previous value and then
restoring it later.

(If you had separate test files in tests/*.R, R would be able to tell
you which one causes excessive CPU time. Unfortunately, testthat idioms
and core R idioms don't work well together.)

It really is unfortunate that you cannot reproduce this without a
computer with a lot of cores and working OpenMP.

-- 
Best regards,
Ivan


From |ent|nj @end|ng |rom @hutt|ethre@d@com  Sun Aug 13 19:25:11 2023
From: |ent|nj @end|ng |rom @hutt|ethre@d@com (Jamie Lentin)
Date: Sun, 13 Aug 2023 18:25:11 +0100
Subject: [R-pkg-devel] 
 gdb availability on r-devel-linux-x86_64-fedora-gcc
In-Reply-To: <00d5c596-4fa9-9659-a53b-e0eaf18ee24d@statistik.tu-dortmund.de>
References: <0c6f536870145fa037b2553ce5bb8f1f@shuttlethread.com>
 <f49a77aa-c424-588c-0f46-c8d5004634dd@statistik.tu-dortmund.de>
 <25815.63333.522184.604529@rob.eddelbuettel.com>
 <00d5c596-4fa9-9659-a53b-e0eaf18ee24d@statistik.tu-dortmund.de>
Message-ID: <7403d24efd019db3cb61e88d637650ee@shuttlethread.com>

Thanks both!

On 2023-08-12 23:52, Uwe Ligges wrote:
> On 12.08.2023 23:19, Dirk Eddelbuettel wrote:
>> 
>> On 12 August 2023 at 18:12, Uwe Ligges wrote:
>> | On 12.08.2023 15:10, Jamie Lentin wrote:
>> | > The system call in question is done by the TMB package[2], and not 
>> ours
>> | > to tinker with:
>> | >
>> | >  ? cmd <- paste("R --vanilla < ",file," -d gdb 
>> --debugger-args=\"-x",
>> | >  ?????????????? gdbscript,"\"")
>> | >  ? txt <- 
>> system(cmd,intern=TRUE,ignore.stdout=FALSE,ignore.stderr=TRUE)
>> | >
>> | > My only vaguely reasonable guess is that gdb isn't available on 
>> the host
>> | > in question (certainly R will be!). How likely is this? Is it 
>> worth
>> | > trying to resubmit with the call wrapped with an "if (gdb is on 
>> the path)"?
>> |
>> | I guess it is really not available as that system got an update.
>> | Note that you package does not declare any SystemRequirements. 
>> Please do
>> | so and mention gdb.

It's TMB::gdbsource() that's calling system("R -d gdb"), so presumably 
the SystemRequirements should live there rather than gadget3? I can 
raise an issue suggesting this.

>> | Wrapping it in "if (gdb is on the path)" seems a good solution.
>> 
>> Seconded esp as some systems may have lldb instead of gdb, or neither.
>> Adding a simple `if (nzchar(Sys.which("gdb")))` should get you there.
>> 
>> Dirk
>> 
> 
> Note that also
> 
> 1. The machine does not have R on the path (but Rdev)

Okay, I'll check for "all(nzchar(Sys.which(c('gdb', 'R'))))". This is 
overkill somewhat, and the example won't run in some environments that 
TMB::gdbsource() should work in. However, at least it'll check it does 
work for the relatively default case.

> 2. you need to use a current pandoc. Citing Professor Ripley: "The
> platforms failing are using pandoc 3.1.6 or (newly updated, M1mac)
> 3.1.6.1"

I'll be sure to try upgrading before resubmitting.

Thanks again for your help!

> Best,
> Uwe Ligges


From bbo|ker @end|ng |rom gm@||@com  Sun Aug 13 21:17:09 2023
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Sun, 13 Aug 2023 15:17:09 -0400
Subject: [R-pkg-devel] status of "possibly invalid URL/403 error" NOTEs?
Message-ID: <af047398-58dd-1289-c719-2aa1441595da@gmail.com>

   I have a package whose documentation includes the reference 
\doi{10.1137/18M1186411} which redirects here:
https://epubs.siam.org/doi/10.1137/18M1186411

Running R CMD check --as-cran on the package gives

Found the following (possibly) invalid URLs:
   URL: https://epubs.siam.org/doi/10.1137/18M1186411
     From: man/llig.Rd
     Status: 403
     Message: Forbidden

   I can access this perfectly well in the browser.

   Is there any way to avoid this (other than, say, including the URL in 
a form that does *not* provide a link so that R CMD check won't try to 
access it? (As Uwe Ligges says 
[here](https://stat.ethz.ch/pipermail/r-package-devel/2020q1/005195.html) 
(for a more obviously problematic case), "mention the URL in plain text 
but not link"

   Here Hadley Wickham says that these NOTEs can be ignored

https://twitter.com/hadleywickham/status/1358170607314235392

but "Hadley said it on twitter" is not an ideal source. The CRAN 
repository policy says that packages must pass checks without 
"significant" notes, but it's always hard to know what's significant and 
what's not ...

   There's a thread here: 
https://stat.ethz.ch/pipermail/r-package-devel/2020q1/005171.html

    Tangentially: is there a more convenient way to search the 
r-package-devel archives than googling (e.g.) 
"site:https://stat.ethz.ch/pipermail/r-package-devel  403" ?


From @vr@h@m@@d|er @end|ng |rom gm@||@com  Sun Aug 13 22:57:53 2023
From: @vr@h@m@@d|er @end|ng |rom gm@||@com (Avraham Adler)
Date: Sun, 13 Aug 2023 16:57:53 -0400
Subject: [R-pkg-devel] status of "possibly invalid URL/403 error" NOTEs?
In-Reply-To: <af047398-58dd-1289-c719-2aa1441595da@gmail.com>
References: <af047398-58dd-1289-c719-2aa1441595da@gmail.com>
Message-ID: <715F42AD-E205-43E6-9819-175FABA38B7E@gmail.com>

I had a similar issue with a paper on JSTOR. Usually CRAN let it through. However, I eventually switched from URL to DOI and now the user needs to find the free source so to rid myself of the constant hassle. CRAN really doesn?t like redirects. I guess you could wrap it in \code{} so as not to hyperlink. 

Avi

Sent from my iPhone

> On Aug 13, 2023, at 3:17 PM, Ben Bolker <bbolker at gmail.com> wrote:
> 
> ?  I have a package whose documentation includes the reference \doi{10.1137/18M1186411} which redirects here:
> https://epubs.siam.org/doi/10.1137/18M1186411
> 
> Running R CMD check --as-cran on the package gives
> 
> Found the following (possibly) invalid URLs:
>  URL: https://epubs.siam.org/doi/10.1137/18M1186411
>    From: man/llig.Rd
>    Status: 403
>    Message: Forbidden
> 
>  I can access this perfectly well in the browser.
> 
>  Is there any way to avoid this (other than, say, including the URL in a form that does *not* provide a link so that R CMD check won't try to access it? (As Uwe Ligges says [here](https://stat.ethz.ch/pipermail/r-package-devel/2020q1/005195.html) (for a more obviously problematic case), "mention the URL in plain text but not link"
> 
>  Here Hadley Wickham says that these NOTEs can be ignored
> 
> https://twitter.com/hadleywickham/status/1358170607314235392
> 
> but "Hadley said it on twitter" is not an ideal source. The CRAN repository policy says that packages must pass checks without "significant" notes, but it's always hard to know what's significant and what's not ...
> 
>  There's a thread here: https://stat.ethz.ch/pipermail/r-package-devel/2020q1/005171.html
> 
>   Tangentially: is there a more convenient way to search the r-package-devel archives than googling (e.g.) "site:https://stat.ethz.ch/pipermail/r-package-devel  403" ?
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Sun Aug 13 23:02:33 2023
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Sun, 13 Aug 2023 23:02:33 +0200
Subject: [R-pkg-devel] status of "possibly invalid URL/403 error" NOTEs?
In-Reply-To: <715F42AD-E205-43E6-9819-175FABA38B7E@gmail.com>
References: <af047398-58dd-1289-c719-2aa1441595da@gmail.com>
 <715F42AD-E205-43E6-9819-175FABA38B7E@gmail.com>
Message-ID: <04475695-33b8-b0e6-2bf9-079908b7963d@statistik.tu-dortmund.de>



On 13.08.2023 22:57, Avraham Adler wrote:
> I had a similar issue with a paper on JSTOR. Usually CRAN let it through. However, I eventually switched from URL to DOI and now the user needs to find the free source so to rid myself of the constant hassle. CRAN really doesn?t like redirects. I guess you could wrap it in \code{} so as not to hyperlink.
> 
> Avi
> 
> Sent from my iPhone
> 
>> On Aug 13, 2023, at 3:17 PM, Ben Bolker <bbolker at gmail.com> wrote:
>>
>> ?  I have a package whose documentation includes the reference \doi{10.1137/18M1186411} which redirects here:
>> https://epubs.siam.org/doi/10.1137/18M1186411
>>
>> Running R CMD check --as-cran on the package gives
>>
>> Found the following (possibly) invalid URLs:
>>   URL: https://epubs.siam.org/doi/10.1137/18M1186411
>>     From: man/llig.Rd
>>     Status: 403
>>     Message: Forbidden


CRAN will snpect this manually and let is pass.

Best,
Uwe Ligges


>>   I can access this perfectly well in the browser.
>>
>>   Is there any way to avoid this (other than, say, including the URL in a form that does *not* provide a link so that R CMD check won't try to access it? (As Uwe Ligges says [here](https://stat.ethz.ch/pipermail/r-package-devel/2020q1/005195.html) (for a more obviously problematic case), "mention the URL in plain text but not link"
>>
>>   Here Hadley Wickham says that these NOTEs can be ignored
>>
>> https://twitter.com/hadleywickham/status/1358170607314235392
>>
>> but "Hadley said it on twitter" is not an ideal source. The CRAN repository policy says that packages must pass checks without "significant" notes, but it's always hard to know what's significant and what's not ...
>>
>>   There's a thread here: https://stat.ethz.ch/pipermail/r-package-devel/2020q1/005171.html
>>
>>    Tangentially: is there a more convenient way to search the r-package-devel archives than googling (e.g.) "site:https://stat.ethz.ch/pipermail/r-package-devel  403" ?
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From @|mon@urb@nek @end|ng |rom R-project@org  Sun Aug 13 23:10:53 2023
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Mon, 14 Aug 2023 09:10:53 +1200
Subject: [R-pkg-devel] 
 gdb availability on r-devel-linux-x86_64-fedora-gcc
In-Reply-To: <7403d24efd019db3cb61e88d637650ee@shuttlethread.com>
References: <0c6f536870145fa037b2553ce5bb8f1f@shuttlethread.com>
 <f49a77aa-c424-588c-0f46-c8d5004634dd@statistik.tu-dortmund.de>
 <25815.63333.522184.604529@rob.eddelbuettel.com>
 <00d5c596-4fa9-9659-a53b-e0eaf18ee24d@statistik.tu-dortmund.de>
 <7403d24efd019db3cb61e88d637650ee@shuttlethread.com>
Message-ID: <EC20B2C6-3751-434D-A87E-A3D098853864@R-project.org>



> On 14/08/2023, at 5:25 AM, Jamie Lentin <lentinj at shuttlethread.com> wrote:
> 
> Thanks both!
> 
> On 2023-08-12 23:52, Uwe Ligges wrote:
>> On 12.08.2023 23:19, Dirk Eddelbuettel wrote:
>>> On 12 August 2023 at 18:12, Uwe Ligges wrote:
>>> | On 12.08.2023 15:10, Jamie Lentin wrote:
>>> | > The system call in question is done by the TMB package[2], and not ours
>>> | > to tinker with:
>>> | >
>>> | >    cmd <- paste("R --vanilla < ",file," -d gdb --debugger-args=\"-x",
>>> | >                 gdbscript,"\"")
>>> | >    txt <- system(cmd,intern=TRUE,ignore.stdout=FALSE,ignore.stderr=TRUE)
>>> | >
>>> | > My only vaguely reasonable guess is that gdb isn't available on the host
>>> | > in question (certainly R will be!). How likely is this? Is it worth
>>> | > trying to resubmit with the call wrapped with an "if (gdb is on the path)"?
>>> |
>>> | I guess it is really not available as that system got an update.
>>> | Note that you package does not declare any SystemRequirements. Please do
>>> | so and mention gdb.
> 
> It's TMB::gdbsource() that's calling system("R -d gdb"), so presumably the SystemRequirements should live there rather than gadget3? I can raise an issue suggesting this.
> 
>>> | Wrapping it in "if (gdb is on the path)" seems a good solution.
>>> Seconded esp as some systems may have lldb instead of gdb, or neither.
>>> Adding a simple `if (nzchar(Sys.which("gdb")))` should get you there.
>>> Dirk
>> Note that also
>> 1. The machine does not have R on the path (but Rdev)
> 
> Okay, I'll check for "all(nzchar(Sys.which(c('gdb', 'R'))))". This is overkill somewhat, and the example won't run in some environments that TMB::gdbsource() should work in. However, at least it'll check it does work for the relatively default case.
> 

Please note that it should not be calling some random program called R - it should be calling the R instance it's running in (as Uwe pointed out there may be several) so possibly something like file.path(R.home(),"bin","R")

Cheers,
Simon


>> 2. you need to use a current pandoc. Citing Professor Ripley: "The
>> platforms failing are using pandoc 3.1.6 or (newly updated, M1mac)
>> 3.1.6.1"
> 
> I'll be sure to try upgrading before resubmitting.
> 
> Thanks again for your help!
> 
>> Best,
>> Uwe Ligges
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 


From m@rk@p@dgh@m @end|ng |rom em@||@com  Mon Aug 14 11:51:20 2023
From: m@rk@p@dgh@m @end|ng |rom em@||@com (Mark Padgham)
Date: Mon, 14 Aug 2023 11:51:20 +0200
Subject: [R-pkg-devel] Suppressing compiler warnings?
Message-ID: <a3ca1dd5-8b36-47db-904b-e7ee4ee2f8ee@email.com>

An update of a package of mine got immediately kicked off CRAN because
an externally-bundled file which had not been changed for years, and
which included "pragma clang system_header" to suppress warnings. The
concern is fair enough. Removing that nevertheless now generates a heap
of warnings which CRAN will have to wade through / grep to assess
whether any are of concern. These can be easily suppressed by replacing
cheap "system_header" with targeted suppression of just two classes of
warnings for that bundled header file only. But I guess this is also
forbidden? Should I now just leave those warnings, and rely on CRAN's
grep policies to assess them? Is there any public list of what such grep
policies might be? (And no, I can't adapt the code to remove the
warnings, because most are "zero-as-null-pointer-constant", but the "0"
is actually better than nullptr the way the code is constructed. The
rest are - currently - unimportant deprecation warnings, all of one
specific class.)

Thanks,

Mark


From edd @end|ng |rom deb|@n@org  Mon Aug 14 14:43:10 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Mon, 14 Aug 2023 07:43:10 -0500
Subject: [R-pkg-devel] Suppressing compiler warnings?
In-Reply-To: <a3ca1dd5-8b36-47db-904b-e7ee4ee2f8ee@email.com>
References: <a3ca1dd5-8b36-47db-904b-e7ee4ee2f8ee@email.com>
Message-ID: <25818.8542.10323.686705@rob.eddelbuettel.com>


On 14 August 2023 at 11:51, Mark Padgham wrote:
| An update of a package of mine got immediately kicked off CRAN because
| an externally-bundled file which had not been changed for years, and
| which included "pragma clang system_header" to suppress warnings. The
| concern is fair enough. Removing that nevertheless now generates a heap
| of warnings which CRAN will have to wade through / grep to assess
| whether any are of concern. These can be easily suppressed by replacing
| cheap "system_header" with targeted suppression of just two classes of
| warnings for that bundled header file only. But I guess this is also
| forbidden? Should I now just leave those warnings, and rely on CRAN's
| grep policies to assess them? Is there any public list of what such grep
| policies might be? (And no, I can't adapt the code to remove the
| warnings, because most are "zero-as-null-pointer-constant", but the "0"
| is actually better than nullptr the way the code is constructed. The
| rest are - currently - unimportant deprecation warnings, all of one
| specific class.)

It is in the CRAN Repostory Policy:

   - Packages should not attempt to disable compiler diagnostics, nor to
     remove other diagnostic information such as symbols in shared objects. 

Per 'svn blame' it goes back to commit 4049 from Apr 2019, but a commit from
Nov 2017 has 'memtion (sic!) not disabling compiler diagnostics'.

FWIW I have had to do it for BH and RcppEigen for some time leading to both
of them 'spamming' package users with a lot of noise. I don't particularly
like that, but I also do not have too many choices here.

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From m@rk@p@dgh@m @end|ng |rom em@||@com  Mon Aug 14 14:59:05 2023
From: m@rk@p@dgh@m @end|ng |rom em@||@com (Mark Padgham)
Date: Mon, 14 Aug 2023 14:59:05 +0200
Subject: [R-pkg-devel] Suppressing compiler warnings?
In-Reply-To: <25818.8542.10323.686705@rob.eddelbuettel.com>
References: <a3ca1dd5-8b36-47db-904b-e7ee4ee2f8ee@email.com>
 <25818.8542.10323.686705@rob.eddelbuettel.com>
Message-ID: <4024eccd-adbd-44e0-8f05-6ada08d5a736@email.com>


On 14/08/2023 14:43, Dirk Eddelbuettel wrote:
> On 14 August 2023 at 11:51, Mark Padgham wrote:
> | An update of a package of mine got immediately kicked off CRAN because
> | an externally-bundled file which had not been changed for years, and
> | which included "pragma clang system_header" to suppress warnings. The
> | concern is fair enough. Removing that nevertheless now generates a heap
> | of warnings which CRAN will have to wade through / grep to assess
> | whether any are of concern. These can be easily suppressed by replacing
> | cheap "system_header" with targeted suppression of just two classes of
> | warnings for that bundled header file only. But I guess this is also
> | forbidden? Should I now just leave those warnings, and rely on CRAN's
> | grep policies to assess them? Is there any public list of what such grep
> | policies might be? (And no, I can't adapt the code to remove the
> | warnings, because most are "zero-as-null-pointer-constant", but the "0"
> | is actually better than nullptr the way the code is constructed. The
> | rest are - currently - unimportant deprecation warnings, all of one
> | specific class.)
>
> It is in the CRAN Repostory Policy:
>
>     - Packages should not attempt to disable compiler diagnostics, nor to
>       remove other diagnostic information such as symbols in shared objects.
>
> Per 'svn blame' it goes back to commit 4049 from Apr 2019, but a commit from
> Nov 2017 has 'memtion (sic!) not disabling compiler diagnostics'.
>
> FWIW I have had to do it for BH and RcppEigen for some time leading to both
> of them 'spamming' package users with a lot of noise. I don't particularly
> like that, but I also do not have too many choices here.
>
> Dirk
>
Thanks Dirk! I've seen also that a couple of tidyverse and r-lib pkgs
bundle the same header, and they also do nothing to suppress this
compiler spam. But gee it would be good to have some "official"
reference for what compiler warnings CRAN are likely to complain about,
and which ones they'll ignore!


From bbo|ker @end|ng |rom gm@||@com  Tue Aug 15 01:43:51 2023
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Mon, 14 Aug 2023 19:43:51 -0400
Subject: [R-pkg-devel] Suppressing compiler warnings?
In-Reply-To: <4024eccd-adbd-44e0-8f05-6ada08d5a736@email.com>
References: <a3ca1dd5-8b36-47db-904b-e7ee4ee2f8ee@email.com>
 <25818.8542.10323.686705@rob.eddelbuettel.com>
 <4024eccd-adbd-44e0-8f05-6ada08d5a736@email.com>
Message-ID: <ae720cb1-5ebc-95be-fbd4-dee3ea75dcaa@gmail.com>

   This also doesn't answer your question, but:

A trick that the TMB package uses to help users is to suggest that they 
add "CXXFLAGS += -Wno-ignored-attributes" to their `.R/Makevars` file. 
This means that *they* don't have to see useless warnings when compiling 
code.

   In your case I don't know if there is a compiler flag that is 
equivalent to your pragma, or you could add your own macro/#ifdef 
(CXXFLAGS += -DSUPPRESS_WARNINGS) so that *you* don't have to see the 
warning messages. (If CRAN doesn't want to see all the warnings that's 
their problem ...)


On 2023-08-14 8:59 a.m., Mark Padgham wrote:
> 
> On 14/08/2023 14:43, Dirk Eddelbuettel wrote:
>> On 14 August 2023 at 11:51, Mark Padgham wrote:
>> | An update of a package of mine got immediately kicked off CRAN because
>> | an externally-bundled file which had not been changed for years, and
>> | which included "pragma clang system_header" to suppress warnings. The
>> | concern is fair enough. Removing that nevertheless now generates a heap
>> | of warnings which CRAN will have to wade through / grep to assess
>> | whether any are of concern. These can be easily suppressed by replacing
>> | cheap "system_header" with targeted suppression of just two classes of
>> | warnings for that bundled header file only. But I guess this is also
>> | forbidden? Should I now just leave those warnings, and rely on CRAN's
>> | grep policies to assess them? Is there any public list of what such 
>> grep
>> | policies might be? (And no, I can't adapt the code to remove the
>> | warnings, because most are "zero-as-null-pointer-constant", but the "0"
>> | is actually better than nullptr the way the code is constructed. The
>> | rest are - currently - unimportant deprecation warnings, all of one
>> | specific class.)
>>
>> It is in the CRAN Repostory Policy:
>>
>> ??? - Packages should not attempt to disable compiler diagnostics, nor to
>> ????? remove other diagnostic information such as symbols in shared 
>> objects.
>>
>> Per 'svn blame' it goes back to commit 4049 from Apr 2019, but a 
>> commit from
>> Nov 2017 has 'memtion (sic!) not disabling compiler diagnostics'.
>>
>> FWIW I have had to do it for BH and RcppEigen for some time leading to 
>> both
>> of them 'spamming' package users with a lot of noise. I don't 
>> particularly
>> like that, but I also do not have too many choices here.
>>
>> Dirk
>>
> Thanks Dirk! I've seen also that a couple of tidyverse and r-lib pkgs
> bundle the same header, and they also do nothing to suppress this
> compiler spam. But gee it would be good to have some "official"
> reference for what compiler warnings CRAN are likely to complain about,
> and which ones they'll ignore!
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
Dr. Benjamin Bolker
Professor, Mathematics & Statistics and Biology, McMaster University
Director, School of Computational Science and Engineering
(Acting) Graduate chair, Mathematics & Statistics
 > E-mail is sent at my convenience; I don't expect replies outside of 
working hours.


From v|ncent@gou|et @end|ng |rom me@com  Wed Aug 16 18:25:58 2023
From: v|ncent@gou|et @end|ng |rom me@com (Vincent Goulet)
Date: Wed, 16 Aug 2023 12:25:58 -0400
Subject: [R-pkg-devel] LICENSE file in an R package for CRAN submission
In-Reply-To: <CAKw81f9o8MYv9x5-j54G-reur8q+DXQY1vdmmV0HfZJnFnjghg@mail.gmail.com>
References: <CAKw81f9o8MYv9x5-j54G-reur8q+DXQY1vdmmV0HfZJnFnjghg@mail.gmail.com>
Message-ID: <E3D04009-4224-4FDC-BC9E-07029BC83BAD@me.com>

Although late to the party, I thought I might chime in with a different take on the question. 

Most answers seem to pertain to the actual license used for the package. For my part, I read the question as: "GitHub wants me to have a LICENSE file at the root of the repository, but R CMD check complains about it. What should I do?"

If you need to use the LICENSE file in your package, Ben Bolker already pointed you at the correct way to do it.

If the file is just there to please GitHub (and in any case), here's what I tend to do: put the source code of your package in a subdirectory (say 'src') of the repository. You may then put the GitHub files (README.md, LICENSE, whatever else) at the top level without interfering with R CMD build/check. The added benefit is that you will then build the package in the directory of the project (say 'mypkg') with 'R CMD build src' and end up with a file .../mypkg/mypkg_x.y-z.tar.gz, rather than in the parent directory of 'mypkg'.

(Mind you, I build my packages manually. The tidyverse tools may very well take care of this sort of things automatically and I wouldn't know.)

Hope this helps,

v.

Vincent Goulet
Professeur titulaire
?cole d'actuariat, Universit? Laval

> Le 9 ao?t 2023 ? 11:06, Emanuele Cordano <emanuele.cordano at gmail.com> a ?crit :
> 
> Dear list,
> 
> is there a way to put the LICENSE file within an R package like in Github,
> I have an R package on Github with a a LICENSE file compliant to Github and
> containing the text of the licence citing in the DESCRIPION file. But when
> I check the package , I obatained the following output:
> 
> * checking top-level files ... NOTE
> File
> LICENSE
> 
> is not mentioned in the DESCRIPTION file.
> 
> How can I solve this?
> Thank you
> best
> Emanuele Cordano
> -- 
> Emanuele Cordano, PhD
> Environmental Engineer / Ingegnere per l' Ambiente e il territorio nr.
> 3587 (Albo A - Provincia di Trento)
> cell: +39 3282818564
> email: emanuele.cordano at gmail.com,emanuele.cordano at rendena100.eu,
> emanuele.cordano at eurac.edu
> PEC: emanuele.cordano at ingpec.eu
> URL: www.rendena100.eu
> LinkedIn: https://www.linkedin.com/in/emanuele-cordano-31995333
> GitHub: https://github.com/ecor
> 
> [[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From jo@h@m@u|r|ch @end|ng |rom gm@||@com  Wed Aug 16 19:25:12 2023
From: jo@h@m@u|r|ch @end|ng |rom gm@||@com (Joshua Ulrich)
Date: Wed, 16 Aug 2023 12:25:12 -0500
Subject: [R-pkg-devel] LICENSE file in an R package for CRAN submission
In-Reply-To: <E3D04009-4224-4FDC-BC9E-07029BC83BAD@me.com>
References: <CAKw81f9o8MYv9x5-j54G-reur8q+DXQY1vdmmV0HfZJnFnjghg@mail.gmail.com>
 <E3D04009-4224-4FDC-BC9E-07029BC83BAD@me.com>
Message-ID: <CAPPM_gQYx+MFQ+EZUwct4kJOKqDDjtFE=8K9X8BD7L2bP9uT7Q@mail.gmail.com>

On Wed, Aug 16, 2023 at 11:41?AM Vincent Goulet <vincent.goulet at me.com> wrote:
>
> Although late to the party, I thought I might chime in with a different take on the question.
>
> Most answers seem to pertain to the actual license used for the package. For my part, I read the question as: "GitHub wants me to have a LICENSE file at the root of the repository, but R CMD check complains about it. What should I do?"
>
> If you need to use the LICENSE file in your package, Ben Bolker already pointed you at the correct way to do it.
>
> If the file is just there to please GitHub (and in any case), here's what I tend to do: put the source code of your package in a subdirectory (say 'src') of the repository. You may then put the GitHub files (README.md, LICENSE, whatever else) at the top level without interfering with R CMD build/check. The added benefit is that you will then build the package in the directory of the project (say 'mypkg') with 'R CMD build src' and end up with a file .../mypkg/mypkg_x.y-z.tar.gz, rather than in the parent directory of 'mypkg'.
>
Another alternative is put everything you don't want to be included in
your package in the .Rbuildignore file. For example:
https://github.com/joshuaulrich/xts/blob/main/.Rbuildignore

> (Mind you, I build my packages manually. The tidyverse tools may very well take care of this sort of things automatically and I wouldn't know.)
>
I also build my packages manually (with a makefile) and have my own
personal preferences, so the patterns in my file may need to be
changed for others' packages.


> Hope this helps,
>
> v.
>
> Vincent Goulet
> Professeur titulaire
> ?cole d'actuariat, Universit? Laval
>
> > Le 9 ao?t 2023 ? 11:06, Emanuele Cordano <emanuele.cordano at gmail.com> a ?crit :
> >
> > Dear list,
> >
> > is there a way to put the LICENSE file within an R package like in Github,
> > I have an R package on Github with a a LICENSE file compliant to Github and
> > containing the text of the licence citing in the DESCRIPION file. But when
> > I check the package , I obatained the following output:
> >
> > * checking top-level files ... NOTE
> > File
> > LICENSE
> >
> > is not mentioned in the DESCRIPTION file.
> >
> > How can I solve this?
> > Thank you
> > best
> > Emanuele Cordano
> > --
> > Emanuele Cordano, PhD
> > Environmental Engineer / Ingegnere per l' Ambiente e il territorio nr.
> > 3587 (Albo A - Provincia di Trento)
> > cell: +39 3282818564
> > email: emanuele.cordano at gmail.com,emanuele.cordano at rendena100.eu,
> > emanuele.cordano at eurac.edu
> > PEC: emanuele.cordano at ingpec.eu
> > URL: www.rendena100.eu
> > LinkedIn: https://www.linkedin.com/in/emanuele-cordano-31995333
> > GitHub: https://github.com/ecor
> >
> > [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel



--
Joshua Ulrich  |  about.me/joshuaulrich
FOSS Trading  |  www.fosstrading.com


From ke||ey @end|ng |rom d@|@c@  Sat Aug 19 14:54:40 2023
From: ke||ey @end|ng |rom d@|@c@ (Daniel Kelley)
Date: Sat, 19 Aug 2023 12:54:40 +0000
Subject: [R-pkg-devel] possible solution to package-documentation-alias
 problem
Message-ID: <E79A0C00-6FE3-48DA-AAC3-29A63D28A452@dal.ca>

# Preamble

This email is to tell other developers what I did to address an issue with
documenting a package.  I'm not sure that I am correct in my approach --
comments would definitely be appreciated -- but at least this email is fairly
concrete about the changes I made. To be honest, I don't know how to test
whether my changes are suitable, since no problem is reported in local builds or
in remote windows checks, and no problem is listed on the CRAN tests page.

# The problem

Today I received multiple emails from K. Hornik, telling me about problems with
the package-level documentation for several CRAN packages that I maintain. Here
is a key part of that email:

    You have file 'oce/man/oce.Rd' with \docType{package}, likely intended as a
    package overview help file, but without the appropriate PKGNAME-package
    \alias as per "Documenting packages" in R-exts.

# Possible solution

As a test (using the 'plan' package, which is much smaller and thus ought to
give faster test results), I changed my Roxygen2 block

    #' @name plan
    #' @docType package
    #' @author Dan Kelley
    NULL

to read

    #' @name plan
    #' @docType package
    #' @author Dan Kelley
    #' @keywords internal
    "_PACKAGE"
    ## usethis namespace: start
    ## usethis namespace: end
    NULL

Note that the two ## comments are likely not required, but I included them
because I saw them at

https://github.com/jonesor/mpmsim/commit/e8d0f0d657ffa24c25ddd3165c7ddcad16322e3d

which I found to be quite a helpful resource.

# Local testing

After rebuilding locally, I can now do

    package?plan

and get the expected documentation for the package as a whole.

# CRAN submission

I submitted the update to CRAN, and it has appeared as a tarball.  It has not
yet appeared in built-up packages sources, but perhaps the fact that I didn't
get any warnings from CRAN suggests that the flaw has been addressed.

# Conclusions

If I am right, a simple fix is all that will be required for many packages.
However, I don't know of any way to know if this fix follows recommended
procedures.  There appear to be multiple ways of addressing the issue.

Perhaps other developers will have better solutions than the one I've outlined
above.  Or, if I happen to have done something right, then perhaps this email
will be of some use to other developers.

Dan Kelley / Department of Oceanography / Dalhousie University / Canada


From roy@mende|@@ohn @end|ng |rom no@@@gov  Sat Aug 19 18:22:03 2023
From: roy@mende|@@ohn @end|ng |rom no@@@gov (Roy Mendelssohn - NOAA Federal)
Date: Sat, 19 Aug 2023 09:22:03 -0700
Subject: [R-pkg-devel] possible solution to package-documentation-alias
 problem
In-Reply-To: <E79A0C00-6FE3-48DA-AAC3-29A63D28A452@dal.ca>
References: <E79A0C00-6FE3-48DA-AAC3-29A63D28A452@dal.ca>
Message-ID: <85911D6F-C571-4D17-91CC-93B158CC8FA9@noaa.gov>

Thanks Dan.  Also see:

https://r-pkgs.org/man.html#sec-man-package-doc

My understanding is that literally thousands of packages are broken in the same way.

-Roy

> On Aug 19, 2023, at 5:54 AM, Daniel Kelley <kelley at dal.ca> wrote:
> 
> # Preamble
> 
> This email is to tell other developers what I did to address an issue with
> documenting a package.  I'm not sure that I am correct in my approach --
> comments would definitely be appreciated -- but at least this email is fairly
> concrete about the changes I made. To be honest, I don't know how to test
> whether my changes are suitable, since no problem is reported in local builds or
> in remote windows checks, and no problem is listed on the CRAN tests page.
> 
> # The problem
> 
> Today I received multiple emails from K. Hornik, telling me about problems with
> the package-level documentation for several CRAN packages that I maintain. Here
> is a key part of that email:
> 
>    You have file 'oce/man/oce.Rd' with \docType{package}, likely intended as a
>    package overview help file, but without the appropriate PKGNAME-package
>    \alias as per "Documenting packages" in R-exts.
> 
> # Possible solution
> 
> As a test (using the 'plan' package, which is much smaller and thus ought to
> give faster test results), I changed my Roxygen2 block
> 
>    #' @name plan
>    #' @docType package
>    #' @author Dan Kelley
>    NULL
> 
> to read
> 
>    #' @name plan
>    #' @docType package
>    #' @author Dan Kelley
>    #' @keywords internal
>    "_PACKAGE"
>    ## usethis namespace: start
>    ## usethis namespace: end
>    NULL
> 
> Note that the two ## comments are likely not required, but I included them
> because I saw them at
> 
> https://github.com/jonesor/mpmsim/commit/e8d0f0d657ffa24c25ddd3165c7ddcad16322e3d
> 
> which I found to be quite a helpful resource.
> 
> # Local testing
> 
> After rebuilding locally, I can now do
> 
>    package?plan
> 
> and get the expected documentation for the package as a whole.
> 
> # CRAN submission
> 
> I submitted the update to CRAN, and it has appeared as a tarball.  It has not
> yet appeared in built-up packages sources, but perhaps the fact that I didn't
> get any warnings from CRAN suggests that the flaw has been addressed.
> 
> # Conclusions
> 
> If I am right, a simple fix is all that will be required for many packages.
> However, I don't know of any way to know if this fix follows recommended
> procedures.  There appear to be multiple ways of addressing the issue.
> 
> Perhaps other developers will have better solutions than the one I've outlined
> above.  Or, if I happen to have done something right, then perhaps this email
> will be of some use to other developers.
> 
> Dan Kelley / Department of Oceanography / Dalhousie University / Canada
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

**********************
"The contents of this message do not reflect any position of the U.S. Government or NOAA."
**********************
Roy Mendelssohn
Supervisory Operations Research Analyst
NOAA/NMFS
Environmental Research Division
Southwest Fisheries Science Center
***Note new street address***
110 McAllister Way
Santa Cruz, CA 95060
Phone: (831)-420-3666
Fax: (831) 420-3980
e-mail: Roy.Mendelssohn at noaa.gov www: https://www.pfeg.noaa.gov/

"Old age and treachery will overcome youth and skill."
"From those who have been given much, much will be expected" 
"the arc of the moral universe is long, but it bends toward justice" -MLK Jr.


From murdoch@dunc@n @end|ng |rom gm@||@com  Sat Aug 19 19:04:04 2023
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sat, 19 Aug 2023 13:04:04 -0400
Subject: [R-pkg-devel] possible solution to package-documentation-alias
 problem
In-Reply-To: <E79A0C00-6FE3-48DA-AAC3-29A63D28A452@dal.ca>
References: <E79A0C00-6FE3-48DA-AAC3-29A63D28A452@dal.ca>
Message-ID: <94bef1fa-2507-5a5f-1677-69ca09a044c1@gmail.com>

When you get a note from CRAN, remember that it ignores Roxygen comments 
completely.  It's just looking at the files that Roxygen produces.  So 
you should look at the .Rd files when you get a complaint about them.

Your previous code would have produced a file named plan.Rd, and that 
file didn't include the "plan-package" alias that was requested.  The 
new version does, so things are now fine.  I think that up until a few 
years ago, the old version would have worked, but this news item from 
2019 hints at the change:

"Using @docType package no longer automatically adds -name. Instead 
document _PACKAGE to get all the defaults for package documentation, or 
use @name to override the default file name."

Duncan Murdoch

On 19/08/2023 8:54 a.m., Daniel Kelley wrote:
> # Preamble
> 
> This email is to tell other developers what I did to address an issue with
> documenting a package.  I'm not sure that I am correct in my approach --
> comments would definitely be appreciated -- but at least this email is fairly
> concrete about the changes I made. To be honest, I don't know how to test
> whether my changes are suitable, since no problem is reported in local builds or
> in remote windows checks, and no problem is listed on the CRAN tests page.
> 
> # The problem
> 
> Today I received multiple emails from K. Hornik, telling me about problems with
> the package-level documentation for several CRAN packages that I maintain. Here
> is a key part of that email:
> 
>      You have file 'oce/man/oce.Rd' with \docType{package}, likely intended as a
>      package overview help file, but without the appropriate PKGNAME-package
>      \alias as per "Documenting packages" in R-exts.
> 
> # Possible solution
> 
> As a test (using the 'plan' package, which is much smaller and thus ought to
> give faster test results), I changed my Roxygen2 block
> 
>      #' @name plan
>      #' @docType package
>      #' @author Dan Kelley
>      NULL
> 
> to read
> 
>      #' @name plan
>      #' @docType package
>      #' @author Dan Kelley
>      #' @keywords internal
>      "_PACKAGE"
>      ## usethis namespace: start
>      ## usethis namespace: end
>      NULL
> 
> Note that the two ## comments are likely not required, but I included them
> because I saw them at
> 
> https://github.com/jonesor/mpmsim/commit/e8d0f0d657ffa24c25ddd3165c7ddcad16322e3d
> 
> which I found to be quite a helpful resource.
> 
> # Local testing
> 
> After rebuilding locally, I can now do
> 
>      package?plan
> 
> and get the expected documentation for the package as a whole.
> 
> # CRAN submission
> 
> I submitted the update to CRAN, and it has appeared as a tarball.  It has not
> yet appeared in built-up packages sources, but perhaps the fact that I didn't
> get any warnings from CRAN suggests that the flaw has been addressed.
> 
> # Conclusions
> 
> If I am right, a simple fix is all that will be required for many packages.
> However, I don't know of any way to know if this fix follows recommended
> procedures.  There appear to be multiple ways of addressing the issue.
> 
> Perhaps other developers will have better solutions than the one I've outlined
> above.  Or, if I happen to have done something right, then perhaps this email
> will be of some use to other developers.
> 
> Dan Kelley / Department of Oceanography / Dalhousie University / Canada
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From thom@@@ru@ch @end|ng |rom wu@@c@@t  Sun Aug 20 14:22:49 2023
From: thom@@@ru@ch @end|ng |rom wu@@c@@t (Thomas Rusch)
Date: Sun, 20 Aug 2023 14:22:49 +0200
Subject: [R-pkg-devel] possible solution to package-documentation-alias
 problem
In-Reply-To: <mailman.9452.3.1692525601.57159.r-package-devel@r-project.org>
References: <mailman.9452.3.1692525601.57159.r-package-devel@r-project.org>
Message-ID: <7534faf6-4547-18a8-0207-0c30630e2d0d@wu.ac.at>

Dear list,

I'd like to add that it looks like if the package has the same name as a 
function in the package, the default aliasing using the "_PACKAGE" 
sentinel will create two aliases of the same name in different .Rd files 
and R CMD check --as-cran will complain,

E.g. using roxygen

#'@keywords internal

"_PACKAGE"

in a file foo-package.R if there also is a foo.R documented with 
roxygen, it creates foo-package.Rd with \alias{foo} and there will also 
be a file foo.Rd with \alias{foo}

The check says

Rd files with duplicated alias 'foo':
 ? ?foo-package.Rd? ?foo.Rd?

I prevented that by manually setting the aliases in foo-package.R to 
foo-package only, as

#'@keywords internal

#'@aliases foo-package

 ?"_PACKAGE"

Best,

Thomas

On 8/20/23 12:00, r-package-devel-request at r-project.org wrote:
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Sat, 19 Aug 2023 12:54:40 +0000
> From: Daniel Kelley <kelley at dal.ca>
> To: R package devel <r-package-devel at r-project.org>
> Subject: [R-pkg-devel] possible solution to
> 	package-documentation-alias problem
> Message-ID: <E79A0C00-6FE3-48DA-AAC3-29A63D28A452 at dal.ca>
> Content-Type: text/plain; charset="us-ascii"
>
> # Preamble
>
> This email is to tell other developers what I did to address an issue with
> documenting a package.  I'm not sure that I am correct in my approach --
> comments would definitely be appreciated -- but at least this email is fairly
> concrete about the changes I made. To be honest, I don't know how to test
> whether my changes are suitable, since no problem is reported in local builds or
> in remote windows checks, and no problem is listed on the CRAN tests page.
>
> # The problem
>
> Today I received multiple emails from K. Hornik, telling me about problems with
> the package-level documentation for several CRAN packages that I maintain. Here
> is a key part of that email:
>
>      You have file 'oce/man/oce.Rd' with \docType{package}, likely intended as a
>      package overview help file, but without the appropriate PKGNAME-package
>      \alias as per "Documenting packages" in R-exts.
>
> # Possible solution
>
> As a test (using the 'plan' package, which is much smaller and thus ought to
> give faster test results), I changed my Roxygen2 block
>
>      #' @name plan
>      #' @docType package
>      #' @author Dan Kelley
>      NULL
>
> to read
>
>      #' @name plan
>      #' @docType package
>      #' @author Dan Kelley
>      #' @keywords internal
>      "_PACKAGE"
>      ## usethis namespace: start
>      ## usethis namespace: end
>      NULL
>
> Note that the two ## comments are likely not required, but I included them
> because I saw them at
>
> https://github.com/jonesor/mpmsim/commit/e8d0f0d657ffa24c25ddd3165c7ddcad16322e3d
>
> which I found to be quite a helpful resource.
>
> # Local testing
>
> After rebuilding locally, I can now do
>
>      package?plan
>
> and get the expected documentation for the package as a whole.
>
> # CRAN submission
>
> I submitted the update to CRAN, and it has appeared as a tarball.  It has not
> yet appeared in built-up packages sources, but perhaps the fact that I didn't
> get any warnings from CRAN suggests that the flaw has been addressed.
>
> # Conclusions
>
> If I am right, a simple fix is all that will be required for many packages.
> However, I don't know of any way to know if this fix follows recommended
> procedures.  There appear to be multiple ways of addressing the issue.
>
> Perhaps other developers will have better solutions than the one I've outlined
> above.  Or, if I happen to have done something right, then perhaps this email
> will be of some use to other developers.
>
> Dan Kelley / Department of Oceanography / Dalhousie University / Canada
>


From murdoch@dunc@n @end|ng |rom gm@||@com  Sun Aug 20 15:22:59 2023
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sun, 20 Aug 2023 09:22:59 -0400
Subject: [R-pkg-devel] possible solution to package-documentation-alias
 problem
In-Reply-To: <7534faf6-4547-18a8-0207-0c30630e2d0d@wu.ac.at>
References: <mailman.9452.3.1692525601.57159.r-package-devel@r-project.org>
 <7534faf6-4547-18a8-0207-0c30630e2d0d@wu.ac.at>
Message-ID: <2cef9fea-47aa-ceb8-59a1-af8578f08744@gmail.com>

That seems like a bug that should be reported to the Roxygen authors.

Duncan Murdoch

On 20/08/2023 8:22 a.m., Thomas Rusch wrote:
> Dear list,
> 
> I'd like to add that it looks like if the package has the same name as a
> function in the package, the default aliasing using the "_PACKAGE"
> sentinel will create two aliases of the same name in different .Rd files
> and R CMD check --as-cran will complain,
> 
> E.g. using roxygen
> 
> #'@keywords internal
> 
> "_PACKAGE"
> 
> in a file foo-package.R if there also is a foo.R documented with
> roxygen, it creates foo-package.Rd with \alias{foo} and there will also
> be a file foo.Rd with \alias{foo}
> 
> The check says
> 
> Rd files with duplicated alias 'foo':
>   ? ?foo-package.Rd? ?foo.Rd?
> 
> I prevented that by manually setting the aliases in foo-package.R to
> foo-package only, as
> 
> #'@keywords internal
> 
> #'@aliases foo-package
> 
>   ?"_PACKAGE"
> 
> Best,
> 
> Thomas
> 
> On 8/20/23 12:00, r-package-devel-request at r-project.org wrote:
>> ----------------------------------------------------------------------
>>
>> Message: 1
>> Date: Sat, 19 Aug 2023 12:54:40 +0000
>> From: Daniel Kelley <kelley at dal.ca>
>> To: R package devel <r-package-devel at r-project.org>
>> Subject: [R-pkg-devel] possible solution to
>> 	package-documentation-alias problem
>> Message-ID: <E79A0C00-6FE3-48DA-AAC3-29A63D28A452 at dal.ca>
>> Content-Type: text/plain; charset="us-ascii"
>>
>> # Preamble
>>
>> This email is to tell other developers what I did to address an issue with
>> documenting a package.  I'm not sure that I am correct in my approach --
>> comments would definitely be appreciated -- but at least this email is fairly
>> concrete about the changes I made. To be honest, I don't know how to test
>> whether my changes are suitable, since no problem is reported in local builds or
>> in remote windows checks, and no problem is listed on the CRAN tests page.
>>
>> # The problem
>>
>> Today I received multiple emails from K. Hornik, telling me about problems with
>> the package-level documentation for several CRAN packages that I maintain. Here
>> is a key part of that email:
>>
>>       You have file 'oce/man/oce.Rd' with \docType{package}, likely intended as a
>>       package overview help file, but without the appropriate PKGNAME-package
>>       \alias as per "Documenting packages" in R-exts.
>>
>> # Possible solution
>>
>> As a test (using the 'plan' package, which is much smaller and thus ought to
>> give faster test results), I changed my Roxygen2 block
>>
>>       #' @name plan
>>       #' @docType package
>>       #' @author Dan Kelley
>>       NULL
>>
>> to read
>>
>>       #' @name plan
>>       #' @docType package
>>       #' @author Dan Kelley
>>       #' @keywords internal
>>       "_PACKAGE"
>>       ## usethis namespace: start
>>       ## usethis namespace: end
>>       NULL
>>
>> Note that the two ## comments are likely not required, but I included them
>> because I saw them at
>>
>> https://github.com/jonesor/mpmsim/commit/e8d0f0d657ffa24c25ddd3165c7ddcad16322e3d
>>
>> which I found to be quite a helpful resource.
>>
>> # Local testing
>>
>> After rebuilding locally, I can now do
>>
>>       package?plan
>>
>> and get the expected documentation for the package as a whole.
>>
>> # CRAN submission
>>
>> I submitted the update to CRAN, and it has appeared as a tarball.  It has not
>> yet appeared in built-up packages sources, but perhaps the fact that I didn't
>> get any warnings from CRAN suggests that the flaw has been addressed.
>>
>> # Conclusions
>>
>> If I am right, a simple fix is all that will be required for many packages.
>> However, I don't know of any way to know if this fix follows recommended
>> procedures.  There appear to be multiple ways of addressing the issue.
>>
>> Perhaps other developers will have better solutions than the one I've outlined
>> above.  Or, if I happen to have done something right, then perhaps this email
>> will be of some use to other developers.
>>
>> Dan Kelley / Department of Oceanography / Dalhousie University / Canada
>>
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From edd @end|ng |rom deb|@n@org  Sun Aug 20 22:01:22 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Sun, 20 Aug 2023 15:01:22 -0500
Subject: [R-pkg-devel] possible solution to package-documentation-alias
 problem
In-Reply-To: <2cef9fea-47aa-ceb8-59a1-af8578f08744@gmail.com>
References: <mailman.9452.3.1692525601.57159.r-package-devel@r-project.org>
 <7534faf6-4547-18a8-0207-0c30630e2d0d@wu.ac.at>
 <2cef9fea-47aa-ceb8-59a1-af8578f08744@gmail.com>
Message-ID: <25826.28946.71124.811030@rob.eddelbuettel.com>


On 20 August 2023 at 09:22, Duncan Murdoch wrote:
| That seems like a bug that should be reported to the Roxygen authors.

Seb did so in June:

   https://github.com/r-lib/roxygen2/issues/1491

There has not been a response (but given the CRAN email to many maintainers
it has now been referenced mulitple times).

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From @r|tch|e73 @end|ng |rom gm@||@com  Mon Aug 21 13:02:55 2023
From: @r|tch|e73 @end|ng |rom gm@||@com (Scott Ritchie)
Date: Mon, 21 Aug 2023 12:02:55 +0100
Subject: [R-pkg-devel] Trouble with long-running tests on CRAN debian server
Message-ID: <CAO1VBV0w03odWXX=jPHELnrwp8VejVD2L5V6PhUTFD+EA6J5cA@mail.gmail.com>

Dear all,

I'm currently having issues submitting an update to the ukbnmr package to
CRAN as the checks on their debian server are generating a NOTE due to long
running tests.

The offending test code is much faster on my own machine, and on all other
CRAN servers (running in < 1 second), and I tried flagging this as a
false-positive NOTE to CRAN without success.

I've tried cutting down the test dataset used, but this issue has
persisted, suggesting there is actually some sort of issue here that's only
cropping up on some architectures (although my package has no compiled
code).

Has anyone else had this issue before with the CRAN debian server, and have
suggestions on how to proceed with debugging?

If useful, the offending test code can be run with:

```
remotes::install_github("sritchie73/ukbnmr")
library(ukbnmr)
system.time({ remove_technical_variation(test_data) })
```

Kind Regards,

Scott Ritchie

	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Mon Aug 21 14:16:54 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Mon, 21 Aug 2023 15:16:54 +0300
Subject: [R-pkg-devel] 
 Trouble with long-running tests on CRAN debian server
In-Reply-To: <CAO1VBV0w03odWXX=jPHELnrwp8VejVD2L5V6PhUTFD+EA6J5cA@mail.gmail.com>
References: <CAO1VBV0w03odWXX=jPHELnrwp8VejVD2L5V6PhUTFD+EA6J5cA@mail.gmail.com>
Message-ID: <20230821151654.002682a0@Tarkus>

On Mon, 21 Aug 2023 12:02:55 +0100
Scott Ritchie <sritchie73 at gmail.com> wrote:

> remotes::install_github("sritchie73/ukbnmr")
> library(ukbnmr)
> system.time({ remove_technical_variation(test_data) })

data.tables, you say? Can you show us the NOTE message you're getting?
It could be that your example takes too much CPU time (as opposed to
"real", "wallclock" time) due to running too many threads started by
data.table.

It's not obvious why data.table would start too many threads (it's
supposed to honour the limits that CRAN expresses in environment
variables), but at least it should be easy to check and discount.

-- 
Best regards,
Ivan


From @r|tch|e73 @end|ng |rom gm@||@com  Mon Aug 21 14:28:54 2023
From: @r|tch|e73 @end|ng |rom gm@||@com (Scott Ritchie)
Date: Mon, 21 Aug 2023 13:28:54 +0100
Subject: [R-pkg-devel] 
 Trouble with long-running tests on CRAN debian server
In-Reply-To: <20230821151654.002682a0@Tarkus>
References: <CAO1VBV0w03odWXX=jPHELnrwp8VejVD2L5V6PhUTFD+EA6J5cA@mail.gmail.com>
 <20230821151654.002682a0@Tarkus>
Message-ID: <CAO1VBV39Tx_XQDZkwqsudXJkkRfR8cckiK-OV-Com3=2HA73_g@mail.gmail.com>

Hi Ivan,

Here is the NOTE generated by CRAN:

* checking examples ... [5s/2s] NOTE
Examples with CPU time > 2.5 times elapsed time
                            user system elapsed ratio
remove_technical_variation 2.603  0.027    0.94 2.798

This doesn't appear to be related to data.table threads, here is what
I see after explicitly setting setDTthreads(1)

On my own machine (OSX Monterey, arm64 M1 processor):

> system.time({ remove_technical_variation(test_data) })
   user  system elapsed
  0.460   0.004   0.466

And on my University's cluster (RHEL 7, intel xeon platinum 8276 CPU @ 2.2 GHz):

> system.time({ remove_technical_variation(test_data) })
   user  system elapsed
  1.108   0.020   1.130

Runtimes are similar on these two machines when using an older version
of ukbnmr that has a 5x- larger test dataset (50 rows instead of 10
rows).

Best,

Scott


On Mon, 21 Aug 2023 at 13:16, Ivan Krylov <krylov.r00t at gmail.com> wrote:

> On Mon, 21 Aug 2023 12:02:55 +0100
> Scott Ritchie <sritchie73 at gmail.com> wrote:
>
> > remotes::install_github("sritchie73/ukbnmr")
> > library(ukbnmr)
> > system.time({ remove_technical_variation(test_data) })
>
> data.tables, you say? Can you show us the NOTE message you're getting?
> It could be that your example takes too much CPU time (as opposed to
> "real", "wallclock" time) due to running too many threads started by
> data.table.
>
> It's not obvious why data.table would start too many threads (it's
> supposed to honour the limits that CRAN expresses in environment
> variables), but at least it should be easy to check and discount.
>
> --
> Best regards,
> Ivan
>

	[[alternative HTML version deleted]]


From edd @end|ng |rom deb|@n@org  Mon Aug 21 14:34:54 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Mon, 21 Aug 2023 07:34:54 -0500
Subject: [R-pkg-devel] 
 Trouble with long-running tests on CRAN debian server
In-Reply-To: <20230821151654.002682a0@Tarkus>
References: <CAO1VBV0w03odWXX=jPHELnrwp8VejVD2L5V6PhUTFD+EA6J5cA@mail.gmail.com>
 <20230821151654.002682a0@Tarkus>
Message-ID: <25827.23022.8549.686292@rob.eddelbuettel.com>


On 21 August 2023 at 15:16, Ivan Krylov wrote:
| On Mon, 21 Aug 2023 12:02:55 +0100
| Scott Ritchie <sritchie73 at gmail.com> wrote:
| 
| > remotes::install_github("sritchie73/ukbnmr")
| > library(ukbnmr)
| > system.time({ remove_technical_variation(test_data) })
| 
| data.tables, you say? Can you show us the NOTE message you're getting?
| It could be that your example takes too much CPU time (as opposed to
| "real", "wallclock" time) due to running too many threads started by
| data.table.

Yep, and that is a new test AFAIK.
 
| It's not obvious why data.table would start too many threads (it's
| supposed to honour the limits that CRAN expresses in environment
| variables), but at least it should be easy to check and discount.

It grabs all it can get which is what you want for performance (I am on a
six-core machine here):

  $ R -q
  > library(data.table)
  data.table 1.14.8 using 6 threads (see ?getDTthreads).  Latest news: r-datatable.com
  > 

and it honors variables if set

  $ OMP_THREAD_LIMIT=2 R -q
  > library(data.table)
  data.table 1.14.8 using 2 threads (see ?getDTthreads).  Latest news: r-datatable.com
  > 

so I presume that variable is NOT set by CRAN.  It might help if it were.

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From m@rk@p@dgh@m @end|ng |rom em@||@com  Mon Aug 21 15:02:24 2023
From: m@rk@p@dgh@m @end|ng |rom em@||@com (Mark Padgham)
Date: Mon, 21 Aug 2023 15:02:24 +0200
Subject: [R-pkg-devel] 
 Trouble with long-running tests on CRAN debian server
In-Reply-To: <25827.23022.8549.686292@rob.eddelbuettel.com>
References: <CAO1VBV0w03odWXX=jPHELnrwp8VejVD2L5V6PhUTFD+EA6J5cA@mail.gmail.com>
 <20230821151654.002682a0@Tarkus>
 <25827.23022.8549.686292@rob.eddelbuettel.com>
Message-ID: <11165b5d-2aef-4c0b-8121-c44a721587f1@email.com>


On 21/08/2023 14:34, Dirk Eddelbuettel wrote:
> On 21 August 2023 at 15:16, Ivan Krylov wrote:
> | On Mon, 21 Aug 2023 12:02:55 +0100
> | Scott Ritchie <sritchie73 at gmail.com> wrote:
> |
> | > remotes::install_github("sritchie73/ukbnmr")
> | > library(ukbnmr)
> | > system.time({ remove_technical_variation(test_data) })
> |
> | data.tables, you say? Can you show us the NOTE message you're getting?
> | It could be that your example takes too much CPU time (as opposed to
> | "real", "wallclock" time) due to running too many threads started by
> | data.table.
>
> Yep, and that is a new test AFAIK.
>
> | It's not obvious why data.table would start too many threads (it's
> | supposed to honour the limits that CRAN expresses in environment
> | variables), but at least it should be easy to check and discount.
>
> It grabs all it can get which is what you want for performance (I am on a
> six-core machine here):
>
>    $ R -q
>    > library(data.table)
>    data.table 1.14.8 using 6 threads (see ?getDTthreads).  Latest news: r-datatable.com
>    >
>
> and it honors variables if set
>
>    $ OMP_THREAD_LIMIT=2 R -q
>    > library(data.table)
>    data.table 1.14.8 using 2 threads (see ?getDTthreads).  Latest news: r-datatable.com
>    >
>
> so I presume that variable is NOT set by CRAN.  It might help if it were.
>
> Dirk
>
I had to update a package recently to get around this by putting
explicit 'data.table::setDTthreads(1)' in all examples, tests, and
vignettes. The incoming checks now do these CPU/elapsed tests, so you
can test by submitting, and if you're still over the ratio it will
auto-reject and tell you there. That was the only way to get my
submission to pass incoming.


From kry|ov@r00t @end|ng |rom gm@||@com  Mon Aug 21 15:05:02 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Mon, 21 Aug 2023 16:05:02 +0300
Subject: [R-pkg-devel] 
 Trouble with long-running tests on CRAN debian server
In-Reply-To: <CAO1VBV39Tx_XQDZkwqsudXJkkRfR8cckiK-OV-Com3=2HA73_g@mail.gmail.com>
References: <CAO1VBV0w03odWXX=jPHELnrwp8VejVD2L5V6PhUTFD+EA6J5cA@mail.gmail.com>
 <20230821151654.002682a0@Tarkus>
 <CAO1VBV39Tx_XQDZkwqsudXJkkRfR8cckiK-OV-Com3=2HA73_g@mail.gmail.com>
Message-ID: <20230821160502.66d8c505@Tarkus>

On Mon, 21 Aug 2023 13:28:54 +0100
Scott Ritchie <sritchie73 at gmail.com> wrote:

> Examples with CPU time > 2.5 times elapsed time
>                             user system elapsed ratio
> remove_technical_variation 2.603  0.027    0.94 2.798

In this context, "user" means the time spent executing userspace code
(as opposed to work done on behalf of the process by the operating
system kernel, "system"), and "elapsed" is the real time. Some threads
or child processes are definitely at work here.

Dirk is probably right that it's a good idea to have OMP_THREAD_LIMIT=2
set on the CRAN check machine. Either that, or place the responsibility
on data.table for setting the right number of threads by default. But
that's a policy question: should a CRAN package start no more than two
threads/child processes even if it doesn't know it's running in an
environment where the CPU time / elapsed time limit is two?

-- 
Best regards,
Ivan


From edd @end|ng |rom deb|@n@org  Mon Aug 21 15:38:02 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Mon, 21 Aug 2023 08:38:02 -0500
Subject: [R-pkg-devel] 
 Trouble with long-running tests on CRAN debian server
In-Reply-To: <20230821160502.66d8c505@Tarkus>
References: <CAO1VBV0w03odWXX=jPHELnrwp8VejVD2L5V6PhUTFD+EA6J5cA@mail.gmail.com>
 <20230821151654.002682a0@Tarkus>
 <CAO1VBV39Tx_XQDZkwqsudXJkkRfR8cckiK-OV-Com3=2HA73_g@mail.gmail.com>
 <20230821160502.66d8c505@Tarkus>
Message-ID: <25827.26810.377310.594496@rob.eddelbuettel.com>


On 21 August 2023 at 16:05, Ivan Krylov wrote:
| Dirk is probably right that it's a good idea to have OMP_THREAD_LIMIT=2
| set on the CRAN check machine. Either that, or place the responsibility
| on data.table for setting the right number of threads by default. But
| that's a policy question: should a CRAN package start no more than two
| threads/child processes even if it doesn't know it's running in an
| environment where the CPU time / elapsed time limit is two?

Methinks that given this language in the CRAN Repository Policy

  If running a package uses multiple threads/cores it must never use more
  than two simultaneously: the check farm is a shared resource and will
  typically be running many checks simultaneously.

it would indeed be nice if this variable, and/or equivalent ones, were set.

As I mentioned before, I had long added a similar throttle (not for
data.table) in a package I look after (for work, even). So a similar
throttler with optionality is below. I'll add this to my `dang` package
collecting various functions.

A usage example follows. It does nothing by default, ensuring 'full power'
but reflects the minimum of two possible options, or an explicit count:

    > dang::limitDataTableCores(verbose=TRUE)
    Limiting data.table to '12'.
    > Sys.setenv("OMP_THREAD_LIMIT"=3); dang::limitDataTableCores(verbose=TRUE)
    Limiting data.table to '3'.
    > options(Ncpus=2); dang::limitDataTableCores(verbose=TRUE)
    Limiting data.table to '2'.
    > dang::limitDataTableCores(1, verbose=TRUE)
    Limiting data.table to '1'.
    >

That makes it, in my eyes, preferable to any unconditional 'always pick 1 thread'.

Dirk


##' Set threads for data.table respecting possible local settings
##'
##' This function set the number of threads \pkg{data.table} will use
##' while reflecting two possible machine-specific settings from the
##' environment variable \sQuote{OMP_THREAD_LIMIT} as well as the R
##' option \sQuote{Ncpus} (uses e.g. for parallel builds).
##' @title Set data.table threads respecting default settingss
##' @param ncores A numeric or character variable with the desired
##' count of threads to use
##' @param verbose A logical value with a default of \sQuote{FALSE} to
##' operate more verbosely
##' @return The return value of the \pkg{data.table} function
##' \code{setDTthreads} which is called as a side-effect.
##' @author Dirk Eddelbuettel
##' @export
limitDataTableCores <- function(ncores, verbose = FALSE) {
    if (missing(ncores)) {
        ## start with a simple fallback: 'Ncpus' (if set) or else 2
        ncores <- getOption("Ncpus", 2L)
        ## also consider OMP_THREAD_LIMIT (cf Writing R Extensions), gets NA if envvar unset
        ompcores <- as.integer(Sys.getenv("OMP_THREAD_LIMIT"))
        ## and then keep the smaller
        ncores <- min(na.omit(c(ncores, ompcores)))
    }
    stopifnot("Package 'data.table' must be installed." = requireNamespace("data.table", quietly=TRUE))
    stopifnot("Argument 'ncores' must be numeric or character" = is.numeric(ncores) || is.character(ncores))
    if (verbose) message("Limiting data.table to '", ncores, "'.")
    data.table::setDTthreads(ncores)
}

| 
| -- 
| Best regards,
| Ivan
| 
| ______________________________________________
| R-package-devel at r-project.org mailing list
| https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From @r|tch|e73 @end|ng |rom gm@||@com  Mon Aug 21 19:23:30 2023
From: @r|tch|e73 @end|ng |rom gm@||@com (Scott Ritchie)
Date: Mon, 21 Aug 2023 18:23:30 +0100
Subject: [R-pkg-devel] 
 Trouble with long-running tests on CRAN debian server
In-Reply-To: <25827.26810.377310.594496@rob.eddelbuettel.com>
References: <CAO1VBV0w03odWXX=jPHELnrwp8VejVD2L5V6PhUTFD+EA6J5cA@mail.gmail.com>
 <20230821151654.002682a0@Tarkus>
 <CAO1VBV39Tx_XQDZkwqsudXJkkRfR8cckiK-OV-Com3=2HA73_g@mail.gmail.com>
 <20230821160502.66d8c505@Tarkus>
 <25827.26810.377310.594496@rob.eddelbuettel.com>
Message-ID: <CAO1VBV18ZVgxuX8_9EAmp99NGTyRLG6whfYVauM6sosccRQmbw@mail.gmail.com>

Thanks Dirk and Ivan,

I took a slightly different work-around of forcing the number of threads to
1 when running functions of the test dataset in the package, by adding the
following to each user facing function:

```
  # Check if running on package test_data, and if so, force data.table to
be
  # single threaded so that we can avoid a NOTE on CRAN submission
  if (isTRUE(all.equal(x, ukbnmr::test_data))) {
    registered_threads <- getDTthreads()
    setDTthreads(1)
    on.exit({ setDTthreads(registered_threads) }) # re-register so no
unintended side effects for users
  }
```
(i.e. here x is the input argument to the function)

It took some trial and error to get to pass the CRAN tests; the number of
columns in the input data was also contributing to the problem.

Best,

Scott


On Mon, 21 Aug 2023 at 14:38, Dirk Eddelbuettel <edd at debian.org> wrote:

>
> On 21 August 2023 at 16:05, Ivan Krylov wrote:
> | Dirk is probably right that it's a good idea to have OMP_THREAD_LIMIT=2
> | set on the CRAN check machine. Either that, or place the responsibility
> | on data.table for setting the right number of threads by default. But
> | that's a policy question: should a CRAN package start no more than two
> | threads/child processes even if it doesn't know it's running in an
> | environment where the CPU time / elapsed time limit is two?
>
> Methinks that given this language in the CRAN Repository Policy
>
>   If running a package uses multiple threads/cores it must never use more
>   than two simultaneously: the check farm is a shared resource and will
>   typically be running many checks simultaneously.
>
> it would indeed be nice if this variable, and/or equivalent ones, were set.
>
> As I mentioned before, I had long added a similar throttle (not for
> data.table) in a package I look after (for work, even). So a similar
> throttler with optionality is below. I'll add this to my `dang` package
> collecting various functions.
>
> A usage example follows. It does nothing by default, ensuring 'full power'
> but reflects the minimum of two possible options, or an explicit count:
>
>     > dang::limitDataTableCores(verbose=TRUE)
>     Limiting data.table to '12'.
>     > Sys.setenv("OMP_THREAD_LIMIT"=3);
> dang::limitDataTableCores(verbose=TRUE)
>     Limiting data.table to '3'.
>     > options(Ncpus=2); dang::limitDataTableCores(verbose=TRUE)
>     Limiting data.table to '2'.
>     > dang::limitDataTableCores(1, verbose=TRUE)
>     Limiting data.table to '1'.
>     >
>
> That makes it, in my eyes, preferable to any unconditional 'always pick 1
> thread'.
>
> Dirk
>
>
> ##' Set threads for data.table respecting possible local settings
> ##'
> ##' This function set the number of threads \pkg{data.table} will use
> ##' while reflecting two possible machine-specific settings from the
> ##' environment variable \sQuote{OMP_THREAD_LIMIT} as well as the R
> ##' option \sQuote{Ncpus} (uses e.g. for parallel builds).
> ##' @title Set data.table threads respecting default settingss
> ##' @param ncores A numeric or character variable with the desired
> ##' count of threads to use
> ##' @param verbose A logical value with a default of \sQuote{FALSE} to
> ##' operate more verbosely
> ##' @return The return value of the \pkg{data.table} function
> ##' \code{setDTthreads} which is called as a side-effect.
> ##' @author Dirk Eddelbuettel
> ##' @export
> limitDataTableCores <- function(ncores, verbose = FALSE) {
>     if (missing(ncores)) {
>         ## start with a simple fallback: 'Ncpus' (if set) or else 2
>         ncores <- getOption("Ncpus", 2L)
>         ## also consider OMP_THREAD_LIMIT (cf Writing R Extensions), gets
> NA if envvar unset
>         ompcores <- as.integer(Sys.getenv("OMP_THREAD_LIMIT"))
>         ## and then keep the smaller
>         ncores <- min(na.omit(c(ncores, ompcores)))
>     }
>     stopifnot("Package 'data.table' must be installed." =
> requireNamespace("data.table", quietly=TRUE))
>     stopifnot("Argument 'ncores' must be numeric or character" =
> is.numeric(ncores) || is.character(ncores))
>     if (verbose) message("Limiting data.table to '", ncores, "'.")
>     data.table::setDTthreads(ncores)
> }
>
> |
> | --
> | Best regards,
> | Ivan
> |
> | ______________________________________________
> | R-package-devel at r-project.org mailing list
> | https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
> --
> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>

	[[alternative HTML version deleted]]


From berryboe@@enkoo| @end|ng |rom hotm@||@com  Mon Aug 21 21:59:15 2023
From: berryboe@@enkoo| @end|ng |rom hotm@||@com (Berry Boessenkool)
Date: Mon, 21 Aug 2023 19:59:15 +0000
Subject: [R-pkg-devel] 
 Trouble with long-running tests on CRAN debian server
In-Reply-To: <CAO1VBV18ZVgxuX8_9EAmp99NGTyRLG6whfYVauM6sosccRQmbw@mail.gmail.com>
References: <CAO1VBV0w03odWXX=jPHELnrwp8VejVD2L5V6PhUTFD+EA6J5cA@mail.gmail.com>
 <20230821151654.002682a0@Tarkus>
 <CAO1VBV39Tx_XQDZkwqsudXJkkRfR8cckiK-OV-Com3=2HA73_g@mail.gmail.com>
 <20230821160502.66d8c505@Tarkus>
 <25827.26810.377310.594496@rob.eddelbuettel.com>
 <CAO1VBV18ZVgxuX8_9EAmp99NGTyRLG6whfYVauM6sosccRQmbw@mail.gmail.com>
Message-ID: <GV2PR02MB87700FF98E542FF85D2E0156D51EA@GV2PR02MB8770.eurprd02.prod.outlook.com>


If you add that to each exported function, isn't that a lot of code to read + maintain?
Also, it seems like unnecessary computational overhead.
>From a software design point of view, it might be nicer to set that in the examples + tests.

Regards,
Berry

________________________________
From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Scott Ritchie <sritchie73 at gmail.com>
Sent: Monday, August 21, 2023 19:23
To: Dirk Eddelbuettel <edd at debian.org>
Cc: r-package-devel at r-project.org <r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] Trouble with long-running tests on CRAN debian server

Thanks Dirk and Ivan,

I took a slightly different work-around of forcing the number of threads to
1 when running functions of the test dataset in the package, by adding the
following to each user facing function:

```
  # Check if running on package test_data, and if so, force data.table to
be
  # single threaded so that we can avoid a NOTE on CRAN submission
  if (isTRUE(all.equal(x, ukbnmr::test_data))) {
    registered_threads <- getDTthreads()
    setDTthreads(1)
    on.exit({ setDTthreads(registered_threads) }) # re-register so no
unintended side effects for users
  }
```
(i.e. here x is the input argument to the function)

It took some trial and error to get to pass the CRAN tests; the number of
columns in the input data was also contributing to the problem.

Best,

Scott


On Mon, 21 Aug 2023 at 14:38, Dirk Eddelbuettel <edd at debian.org> wrote:

>
> On 21 August 2023 at 16:05, Ivan Krylov wrote:
> | Dirk is probably right that it's a good idea to have OMP_THREAD_LIMIT=2
> | set on the CRAN check machine. Either that, or place the responsibility
> | on data.table for setting the right number of threads by default. But
> | that's a policy question: should a CRAN package start no more than two
> | threads/child processes even if it doesn't know it's running in an
> | environment where the CPU time / elapsed time limit is two?
>
> Methinks that given this language in the CRAN Repository Policy
>
>   If running a package uses multiple threads/cores it must never use more
>   than two simultaneously: the check farm is a shared resource and will
>   typically be running many checks simultaneously.
>
> it would indeed be nice if this variable, and/or equivalent ones, were set.
>
> As I mentioned before, I had long added a similar throttle (not for
> data.table) in a package I look after (for work, even). So a similar
> throttler with optionality is below. I'll add this to my `dang` package
> collecting various functions.
>
> A usage example follows. It does nothing by default, ensuring 'full power'
> but reflects the minimum of two possible options, or an explicit count:
>
>     > dang::limitDataTableCores(verbose=TRUE)
>     Limiting data.table to '12'.
>     > Sys.setenv("OMP_THREAD_LIMIT"=3);
> dang::limitDataTableCores(verbose=TRUE)
>     Limiting data.table to '3'.
>     > options(Ncpus=2); dang::limitDataTableCores(verbose=TRUE)
>     Limiting data.table to '2'.
>     > dang::limitDataTableCores(1, verbose=TRUE)
>     Limiting data.table to '1'.
>     >
>
> That makes it, in my eyes, preferable to any unconditional 'always pick 1
> thread'.
>
> Dirk
>
>
> ##' Set threads for data.table respecting possible local settings
> ##'
> ##' This function set the number of threads \pkg{data.table} will use
> ##' while reflecting two possible machine-specific settings from the
> ##' environment variable \sQuote{OMP_THREAD_LIMIT} as well as the R
> ##' option \sQuote{Ncpus} (uses e.g. for parallel builds).
> ##' @title Set data.table threads respecting default settingss
> ##' @param ncores A numeric or character variable with the desired
> ##' count of threads to use
> ##' @param verbose A logical value with a default of \sQuote{FALSE} to
> ##' operate more verbosely
> ##' @return The return value of the \pkg{data.table} function
> ##' \code{setDTthreads} which is called as a side-effect.
> ##' @author Dirk Eddelbuettel
> ##' @export
> limitDataTableCores <- function(ncores, verbose = FALSE) {
>     if (missing(ncores)) {
>         ## start with a simple fallback: 'Ncpus' (if set) or else 2
>         ncores <- getOption("Ncpus", 2L)
>         ## also consider OMP_THREAD_LIMIT (cf Writing R Extensions), gets
> NA if envvar unset
>         ompcores <- as.integer(Sys.getenv("OMP_THREAD_LIMIT"))
>         ## and then keep the smaller
>         ncores <- min(na.omit(c(ncores, ompcores)))
>     }
>     stopifnot("Package 'data.table' must be installed." =
> requireNamespace("data.table", quietly=TRUE))
>     stopifnot("Argument 'ncores' must be numeric or character" =
> is.numeric(ncores) || is.character(ncores))
>     if (verbose) message("Limiting data.table to '", ncores, "'.")
>     data.table::setDTthreads(ncores)
> }
>
> |
> | --
> | Best regards,
> | Ivan
> |
> | ______________________________________________
> | R-package-devel at r-project.org mailing list
> | https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
> --
> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>

        [[alternative HTML version deleted]]

______________________________________________
R-package-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel

	[[alternative HTML version deleted]]


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Wed Aug 23 15:31:01 2023
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Wed, 23 Aug 2023 15:31:01 +0200
Subject: [R-pkg-devel] 
 Trouble with long-running tests on CRAN debian server
In-Reply-To: <GV2PR02MB87700FF98E542FF85D2E0156D51EA@GV2PR02MB8770.eurprd02.prod.outlook.com>
References: <CAO1VBV0w03odWXX=jPHELnrwp8VejVD2L5V6PhUTFD+EA6J5cA@mail.gmail.com>
 <20230821151654.002682a0@Tarkus>
 <CAO1VBV39Tx_XQDZkwqsudXJkkRfR8cckiK-OV-Com3=2HA73_g@mail.gmail.com>
 <20230821160502.66d8c505@Tarkus>
 <25827.26810.377310.594496@rob.eddelbuettel.com>
 <CAO1VBV18ZVgxuX8_9EAmp99NGTyRLG6whfYVauM6sosccRQmbw@mail.gmail.com>
 <GV2PR02MB87700FF98E542FF85D2E0156D51EA@GV2PR02MB8770.eurprd02.prod.outlook.com>
Message-ID: <3a78262a-0760-9541-59c7-0403b0164d00@statistik.tu-dortmund.de>

I (any many collegues here) have been caught several times by the 
following example:

1. did something in parallel on a cluster, set up via 
parallel::makeCluster().
2. e.g. allocated 20 cores and got them on one single machine
3. ran some code in parallel via parLapply()

Bang! 400 threads;
So I have started 20 parallel processes, each of which is using the 
automatically set max. 20 threads as OMP_THREAD_LIMIT was also adjusted 
by the cluster to 20 (rather than 1).

Hence, I really believe a default should always be small, not only in 
examples and tests, but generally. And people who aim for more should be 
able to increase the defaults.

Do you believe a software that auto-occupies a 96 core machines with 96 
threads by default is sensible?

Best,
Uwe Ligges






On 21.08.2023 21:59, Berry Boessenkool wrote:
> 
> If you add that to each exported function, isn't that a lot of code to read + maintain?
> Also, it seems like unnecessary computational overhead.
>  From a software design point of view, it might be nicer to set that in the examples + tests.
> 
> Regards,
> Berry
> 
> ________________________________
> From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Scott Ritchie <sritchie73 at gmail.com>
> Sent: Monday, August 21, 2023 19:23
> To: Dirk Eddelbuettel <edd at debian.org>
> Cc: r-package-devel at r-project.org <r-package-devel at r-project.org>
> Subject: Re: [R-pkg-devel] Trouble with long-running tests on CRAN debian server
> 
> Thanks Dirk and Ivan,
> 
> I took a slightly different work-around of forcing the number of threads to
> 1 when running functions of the test dataset in the package, by adding the
> following to each user facing function:
> 
> ```
>    # Check if running on package test_data, and if so, force data.table to
> be
>    # single threaded so that we can avoid a NOTE on CRAN submission
>    if (isTRUE(all.equal(x, ukbnmr::test_data))) {
>      registered_threads <- getDTthreads()
>      setDTthreads(1)
>      on.exit({ setDTthreads(registered_threads) }) # re-register so no
> unintended side effects for users
>    }
> ```
> (i.e. here x is the input argument to the function)
> 
> It took some trial and error to get to pass the CRAN tests; the number of
> columns in the input data was also contributing to the problem.
> 
> Best,
> 
> Scott
> 
> 
> On Mon, 21 Aug 2023 at 14:38, Dirk Eddelbuettel <edd at debian.org> wrote:
> 
>>
>> On 21 August 2023 at 16:05, Ivan Krylov wrote:
>> | Dirk is probably right that it's a good idea to have OMP_THREAD_LIMIT=2
>> | set on the CRAN check machine. Either that, or place the responsibility
>> | on data.table for setting the right number of threads by default. But
>> | that's a policy question: should a CRAN package start no more than two
>> | threads/child processes even if it doesn't know it's running in an
>> | environment where the CPU time / elapsed time limit is two?
>>
>> Methinks that given this language in the CRAN Repository Policy
>>
>>    If running a package uses multiple threads/cores it must never use more
>>    than two simultaneously: the check farm is a shared resource and will
>>    typically be running many checks simultaneously.
>>
>> it would indeed be nice if this variable, and/or equivalent ones, were set.
>>
>> As I mentioned before, I had long added a similar throttle (not for
>> data.table) in a package I look after (for work, even). So a similar
>> throttler with optionality is below. I'll add this to my `dang` package
>> collecting various functions.
>>
>> A usage example follows. It does nothing by default, ensuring 'full power'
>> but reflects the minimum of two possible options, or an explicit count:
>>
>>      > dang::limitDataTableCores(verbose=TRUE)
>>      Limiting data.table to '12'.
>>      > Sys.setenv("OMP_THREAD_LIMIT"=3);
>> dang::limitDataTableCores(verbose=TRUE)
>>      Limiting data.table to '3'.
>>      > options(Ncpus=2); dang::limitDataTableCores(verbose=TRUE)
>>      Limiting data.table to '2'.
>>      > dang::limitDataTableCores(1, verbose=TRUE)
>>      Limiting data.table to '1'.
>>      >
>>
>> That makes it, in my eyes, preferable to any unconditional 'always pick 1
>> thread'.
>>
>> Dirk
>>
>>
>> ##' Set threads for data.table respecting possible local settings
>> ##'
>> ##' This function set the number of threads \pkg{data.table} will use
>> ##' while reflecting two possible machine-specific settings from the
>> ##' environment variable \sQuote{OMP_THREAD_LIMIT} as well as the R
>> ##' option \sQuote{Ncpus} (uses e.g. for parallel builds).
>> ##' @title Set data.table threads respecting default settingss
>> ##' @param ncores A numeric or character variable with the desired
>> ##' count of threads to use
>> ##' @param verbose A logical value with a default of \sQuote{FALSE} to
>> ##' operate more verbosely
>> ##' @return The return value of the \pkg{data.table} function
>> ##' \code{setDTthreads} which is called as a side-effect.
>> ##' @author Dirk Eddelbuettel
>> ##' @export
>> limitDataTableCores <- function(ncores, verbose = FALSE) {
>>      if (missing(ncores)) {
>>          ## start with a simple fallback: 'Ncpus' (if set) or else 2
>>          ncores <- getOption("Ncpus", 2L)
>>          ## also consider OMP_THREAD_LIMIT (cf Writing R Extensions), gets
>> NA if envvar unset
>>          ompcores <- as.integer(Sys.getenv("OMP_THREAD_LIMIT"))
>>          ## and then keep the smaller
>>          ncores <- min(na.omit(c(ncores, ompcores)))
>>      }
>>      stopifnot("Package 'data.table' must be installed." =
>> requireNamespace("data.table", quietly=TRUE))
>>      stopifnot("Argument 'ncores' must be numeric or character" =
>> is.numeric(ncores) || is.character(ncores))
>>      if (verbose) message("Limiting data.table to '", ncores, "'.")
>>      data.table::setDTthreads(ncores)
>> }
>>
>> |
>> | --
>> | Best regards,
>> | Ivan
>> |
>> | ______________________________________________
>> | R-package-devel at r-project.org mailing list
>> | https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>> --
>> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>>
> 
>          [[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Wed Aug 23 15:58:37 2023
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Wed, 23 Aug 2023 06:58:37 -0700
Subject: [R-pkg-devel] 
 Trouble with long-running tests on CRAN debian server
In-Reply-To: <3a78262a-0760-9541-59c7-0403b0164d00@statistik.tu-dortmund.de>
References: <CAO1VBV0w03odWXX=jPHELnrwp8VejVD2L5V6PhUTFD+EA6J5cA@mail.gmail.com>
 <20230821151654.002682a0@Tarkus>
 <CAO1VBV39Tx_XQDZkwqsudXJkkRfR8cckiK-OV-Com3=2HA73_g@mail.gmail.com>
 <20230821160502.66d8c505@Tarkus>
 <25827.26810.377310.594496@rob.eddelbuettel.com>
 <CAO1VBV18ZVgxuX8_9EAmp99NGTyRLG6whfYVauM6sosccRQmbw@mail.gmail.com>
 <GV2PR02MB87700FF98E542FF85D2E0156D51EA@GV2PR02MB8770.eurprd02.prod.outlook.com>
 <3a78262a-0760-9541-59c7-0403b0164d00@statistik.tu-dortmund.de>
Message-ID: <B42815E3-4326-4734-9107-EC7C9C9AE40F@dcn.davis.ca.us>

To whom are you addressing this question? The OpenMP developers who define the missing-OMP_THREAD_LIMIT behaviour and-or supply default config files? The CRAN server administrators who set the variable in their site-wide configuration intentionally or unintentionally? Or the package authors expected to kludge in settings to override those defaults for CRAN testing while not overriding them in normal use?

I would vote for explicitly addressing this (rhetorical?) question to the CRAN server administrators...

On August 23, 2023 6:31:01 AM PDT, Uwe Ligges <ligges at statistik.tu-dortmund.de> wrote:
>I (any many collegues here) have been caught several times by the following example:
>
>1. did something in parallel on a cluster, set up via parallel::makeCluster().
>2. e.g. allocated 20 cores and got them on one single machine
>3. ran some code in parallel via parLapply()
>
>Bang! 400 threads;
>So I have started 20 parallel processes, each of which is using the automatically set max. 20 threads as OMP_THREAD_LIMIT was also adjusted by the cluster to 20 (rather than 1).
>
>Hence, I really believe a default should always be small, not only in examples and tests, but generally. And people who aim for more should be able to increase the defaults.
>
>Do you believe a software that auto-occupies a 96 core machines with 96 threads by default is sensible?
>
>Best,
>Uwe Ligges
>
>
>
>
>
>
>On 21.08.2023 21:59, Berry Boessenkool wrote:
>> 
>> If you add that to each exported function, isn't that a lot of code to read + maintain?
>> Also, it seems like unnecessary computational overhead.
>>  From a software design point of view, it might be nicer to set that in the examples + tests.
>> 
>> Regards,
>> Berry
>> 
>> ________________________________
>> From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Scott Ritchie <sritchie73 at gmail.com>
>> Sent: Monday, August 21, 2023 19:23
>> To: Dirk Eddelbuettel <edd at debian.org>
>> Cc: r-package-devel at r-project.org <r-package-devel at r-project.org>
>> Subject: Re: [R-pkg-devel] Trouble with long-running tests on CRAN debian server
>> 
>> Thanks Dirk and Ivan,
>> 
>> I took a slightly different work-around of forcing the number of threads to
>> 1 when running functions of the test dataset in the package, by adding the
>> following to each user facing function:
>> 
>> ```
>>    # Check if running on package test_data, and if so, force data.table to
>> be
>>    # single threaded so that we can avoid a NOTE on CRAN submission
>>    if (isTRUE(all.equal(x, ukbnmr::test_data))) {
>>      registered_threads <- getDTthreads()
>>      setDTthreads(1)
>>      on.exit({ setDTthreads(registered_threads) }) # re-register so no
>> unintended side effects for users
>>    }
>> ```
>> (i.e. here x is the input argument to the function)
>> 
>> It took some trial and error to get to pass the CRAN tests; the number of
>> columns in the input data was also contributing to the problem.
>> 
>> Best,
>> 
>> Scott
>> 
>> 
>> On Mon, 21 Aug 2023 at 14:38, Dirk Eddelbuettel <edd at debian.org> wrote:
>> 
>>> 
>>> On 21 August 2023 at 16:05, Ivan Krylov wrote:
>>> | Dirk is probably right that it's a good idea to have OMP_THREAD_LIMIT=2
>>> | set on the CRAN check machine. Either that, or place the responsibility
>>> | on data.table for setting the right number of threads by default. But
>>> | that's a policy question: should a CRAN package start no more than two
>>> | threads/child processes even if it doesn't know it's running in an
>>> | environment where the CPU time / elapsed time limit is two?
>>> 
>>> Methinks that given this language in the CRAN Repository Policy
>>> 
>>>    If running a package uses multiple threads/cores it must never use more
>>>    than two simultaneously: the check farm is a shared resource and will
>>>    typically be running many checks simultaneously.
>>> 
>>> it would indeed be nice if this variable, and/or equivalent ones, were set.
>>> 
>>> As I mentioned before, I had long added a similar throttle (not for
>>> data.table) in a package I look after (for work, even). So a similar
>>> throttler with optionality is below. I'll add this to my `dang` package
>>> collecting various functions.
>>> 
>>> A usage example follows. It does nothing by default, ensuring 'full power'
>>> but reflects the minimum of two possible options, or an explicit count:
>>> 
>>>      > dang::limitDataTableCores(verbose=TRUE)
>>>      Limiting data.table to '12'.
>>>      > Sys.setenv("OMP_THREAD_LIMIT"=3);
>>> dang::limitDataTableCores(verbose=TRUE)
>>>      Limiting data.table to '3'.
>>>      > options(Ncpus=2); dang::limitDataTableCores(verbose=TRUE)
>>>      Limiting data.table to '2'.
>>>      > dang::limitDataTableCores(1, verbose=TRUE)
>>>      Limiting data.table to '1'.
>>>      >
>>> 
>>> That makes it, in my eyes, preferable to any unconditional 'always pick 1
>>> thread'.
>>> 
>>> Dirk
>>> 
>>> 
>>> ##' Set threads for data.table respecting possible local settings
>>> ##'
>>> ##' This function set the number of threads \pkg{data.table} will use
>>> ##' while reflecting two possible machine-specific settings from the
>>> ##' environment variable \sQuote{OMP_THREAD_LIMIT} as well as the R
>>> ##' option \sQuote{Ncpus} (uses e.g. for parallel builds).
>>> ##' @title Set data.table threads respecting default settingss
>>> ##' @param ncores A numeric or character variable with the desired
>>> ##' count of threads to use
>>> ##' @param verbose A logical value with a default of \sQuote{FALSE} to
>>> ##' operate more verbosely
>>> ##' @return The return value of the \pkg{data.table} function
>>> ##' \code{setDTthreads} which is called as a side-effect.
>>> ##' @author Dirk Eddelbuettel
>>> ##' @export
>>> limitDataTableCores <- function(ncores, verbose = FALSE) {
>>>      if (missing(ncores)) {
>>>          ## start with a simple fallback: 'Ncpus' (if set) or else 2
>>>          ncores <- getOption("Ncpus", 2L)
>>>          ## also consider OMP_THREAD_LIMIT (cf Writing R Extensions), gets
>>> NA if envvar unset
>>>          ompcores <- as.integer(Sys.getenv("OMP_THREAD_LIMIT"))
>>>          ## and then keep the smaller
>>>          ncores <- min(na.omit(c(ncores, ompcores)))
>>>      }
>>>      stopifnot("Package 'data.table' must be installed." =
>>> requireNamespace("data.table", quietly=TRUE))
>>>      stopifnot("Argument 'ncores' must be numeric or character" =
>>> is.numeric(ncores) || is.character(ncores))
>>>      if (verbose) message("Limiting data.table to '", ncores, "'.")
>>>      data.table::setDTthreads(ncores)
>>> }
>>> 
>>> |
>>> | --
>>> | Best regards,
>>> | Ivan
>>> |
>>> | ______________________________________________
>>> | R-package-devel at r-project.org mailing list
>>> | https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>> 
>>> --
>>> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>>> 
>> 
>>          [[alternative HTML version deleted]]
>> 
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> 
>> 	[[alternative HTML version deleted]]
>> 
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>______________________________________________
>R-package-devel at r-project.org mailing list
>https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
Sent from my phone. Please excuse my brevity.


From @r|tch|e73 @end|ng |rom gm@||@com  Wed Aug 23 16:00:20 2023
From: @r|tch|e73 @end|ng |rom gm@||@com (Scott Ritchie)
Date: Wed, 23 Aug 2023 15:00:20 +0100
Subject: [R-pkg-devel] 
 Trouble with long-running tests on CRAN debian server
In-Reply-To: <3a78262a-0760-9541-59c7-0403b0164d00@statistik.tu-dortmund.de>
References: <CAO1VBV0w03odWXX=jPHELnrwp8VejVD2L5V6PhUTFD+EA6J5cA@mail.gmail.com>
 <20230821151654.002682a0@Tarkus>
 <CAO1VBV39Tx_XQDZkwqsudXJkkRfR8cckiK-OV-Com3=2HA73_g@mail.gmail.com>
 <20230821160502.66d8c505@Tarkus>
 <25827.26810.377310.594496@rob.eddelbuettel.com>
 <CAO1VBV18ZVgxuX8_9EAmp99NGTyRLG6whfYVauM6sosccRQmbw@mail.gmail.com>
 <GV2PR02MB87700FF98E542FF85D2E0156D51EA@GV2PR02MB8770.eurprd02.prod.outlook.com>
 <3a78262a-0760-9541-59c7-0403b0164d00@statistik.tu-dortmund.de>
Message-ID: <CAO1VBV08vFUrgt3VL8Eqa==ao6GrMbB392f1n-YR8BrcWCJTVQ@mail.gmail.com>

Hi Uwe,

I agree and have also been burnt myself by programs occupying the maximum
number of cores available.

My understanding is that in the absence of explicit parallelisation, use of
data.table in a package should not lead to this type of behaviour?

Best,

Scott

On Wed, 23 Aug 2023 at 14:30, Uwe Ligges <ligges at statistik.tu-dortmund.de>
wrote:

> I (any many collegues here) have been caught several times by the
> following example:
>
> 1. did something in parallel on a cluster, set up via
> parallel::makeCluster().
> 2. e.g. allocated 20 cores and got them on one single machine
> 3. ran some code in parallel via parLapply()
>
> Bang! 400 threads;
> So I have started 20 parallel processes, each of which is using the
> automatically set max. 20 threads as OMP_THREAD_LIMIT was also adjusted
> by the cluster to 20 (rather than 1).
>
> Hence, I really believe a default should always be small, not only in
> examples and tests, but generally. And people who aim for more should be
> able to increase the defaults.
>
> Do you believe a software that auto-occupies a 96 core machines with 96
> threads by default is sensible?
>
> Best,
> Uwe Ligges
>
>
>
>
>
>
> On 21.08.2023 21:59, Berry Boessenkool wrote:
> >
> > If you add that to each exported function, isn't that a lot of code to
> read + maintain?
> > Also, it seems like unnecessary computational overhead.
> >  From a software design point of view, it might be nicer to set that in
> the examples + tests.
> >
> > Regards,
> > Berry
> >
> > ________________________________
> > From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf
> of Scott Ritchie <sritchie73 at gmail.com>
> > Sent: Monday, August 21, 2023 19:23
> > To: Dirk Eddelbuettel <edd at debian.org>
> > Cc: r-package-devel at r-project.org <r-package-devel at r-project.org>
> > Subject: Re: [R-pkg-devel] Trouble with long-running tests on CRAN
> debian server
> >
> > Thanks Dirk and Ivan,
> >
> > I took a slightly different work-around of forcing the number of threads
> to
> > 1 when running functions of the test dataset in the package, by adding
> the
> > following to each user facing function:
> >
> > ```
> >    # Check if running on package test_data, and if so, force data.table
> to
> > be
> >    # single threaded so that we can avoid a NOTE on CRAN submission
> >    if (isTRUE(all.equal(x, ukbnmr::test_data))) {
> >      registered_threads <- getDTthreads()
> >      setDTthreads(1)
> >      on.exit({ setDTthreads(registered_threads) }) # re-register so no
> > unintended side effects for users
> >    }
> > ```
> > (i.e. here x is the input argument to the function)
> >
> > It took some trial and error to get to pass the CRAN tests; the number of
> > columns in the input data was also contributing to the problem.
> >
> > Best,
> >
> > Scott
> >
> >
> > On Mon, 21 Aug 2023 at 14:38, Dirk Eddelbuettel <edd at debian.org> wrote:
> >
> >>
> >> On 21 August 2023 at 16:05, Ivan Krylov wrote:
> >> | Dirk is probably right that it's a good idea to have
> OMP_THREAD_LIMIT=2
> >> | set on the CRAN check machine. Either that, or place the
> responsibility
> >> | on data.table for setting the right number of threads by default. But
> >> | that's a policy question: should a CRAN package start no more than two
> >> | threads/child processes even if it doesn't know it's running in an
> >> | environment where the CPU time / elapsed time limit is two?
> >>
> >> Methinks that given this language in the CRAN Repository Policy
> >>
> >>    If running a package uses multiple threads/cores it must never use
> more
> >>    than two simultaneously: the check farm is a shared resource and will
> >>    typically be running many checks simultaneously.
> >>
> >> it would indeed be nice if this variable, and/or equivalent ones, were
> set.
> >>
> >> As I mentioned before, I had long added a similar throttle (not for
> >> data.table) in a package I look after (for work, even). So a similar
> >> throttler with optionality is below. I'll add this to my `dang` package
> >> collecting various functions.
> >>
> >> A usage example follows. It does nothing by default, ensuring 'full
> power'
> >> but reflects the minimum of two possible options, or an explicit count:
> >>
> >>      > dang::limitDataTableCores(verbose=TRUE)
> >>      Limiting data.table to '12'.
> >>      > Sys.setenv("OMP_THREAD_LIMIT"=3);
> >> dang::limitDataTableCores(verbose=TRUE)
> >>      Limiting data.table to '3'.
> >>      > options(Ncpus=2); dang::limitDataTableCores(verbose=TRUE)
> >>      Limiting data.table to '2'.
> >>      > dang::limitDataTableCores(1, verbose=TRUE)
> >>      Limiting data.table to '1'.
> >>      >
> >>
> >> That makes it, in my eyes, preferable to any unconditional 'always pick
> 1
> >> thread'.
> >>
> >> Dirk
> >>
> >>
> >> ##' Set threads for data.table respecting possible local settings
> >> ##'
> >> ##' This function set the number of threads \pkg{data.table} will use
> >> ##' while reflecting two possible machine-specific settings from the
> >> ##' environment variable \sQuote{OMP_THREAD_LIMIT} as well as the R
> >> ##' option \sQuote{Ncpus} (uses e.g. for parallel builds).
> >> ##' @title Set data.table threads respecting default settingss
> >> ##' @param ncores A numeric or character variable with the desired
> >> ##' count of threads to use
> >> ##' @param verbose A logical value with a default of \sQuote{FALSE} to
> >> ##' operate more verbosely
> >> ##' @return The return value of the \pkg{data.table} function
> >> ##' \code{setDTthreads} which is called as a side-effect.
> >> ##' @author Dirk Eddelbuettel
> >> ##' @export
> >> limitDataTableCores <- function(ncores, verbose = FALSE) {
> >>      if (missing(ncores)) {
> >>          ## start with a simple fallback: 'Ncpus' (if set) or else 2
> >>          ncores <- getOption("Ncpus", 2L)
> >>          ## also consider OMP_THREAD_LIMIT (cf Writing R Extensions),
> gets
> >> NA if envvar unset
> >>          ompcores <- as.integer(Sys.getenv("OMP_THREAD_LIMIT"))
> >>          ## and then keep the smaller
> >>          ncores <- min(na.omit(c(ncores, ompcores)))
> >>      }
> >>      stopifnot("Package 'data.table' must be installed." =
> >> requireNamespace("data.table", quietly=TRUE))
> >>      stopifnot("Argument 'ncores' must be numeric or character" =
> >> is.numeric(ncores) || is.character(ncores))
> >>      if (verbose) message("Limiting data.table to '", ncores, "'.")
> >>      data.table::setDTthreads(ncores)
> >> }
> >>
> >> |
> >> | --
> >> | Best regards,
> >> | Ivan
> >> |
> >> | ______________________________________________
> >> | R-package-devel at r-project.org mailing list
> >> | https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>
> >> --
> >> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
> >>
> >
> >          [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Wed Aug 23 16:24:46 2023
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Wed, 23 Aug 2023 16:24:46 +0200
Subject: [R-pkg-devel] 
 Trouble with long-running tests on CRAN debian server
In-Reply-To: <B42815E3-4326-4734-9107-EC7C9C9AE40F@dcn.davis.ca.us>
References: <CAO1VBV0w03odWXX=jPHELnrwp8VejVD2L5V6PhUTFD+EA6J5cA@mail.gmail.com>
 <20230821151654.002682a0@Tarkus>
 <CAO1VBV39Tx_XQDZkwqsudXJkkRfR8cckiK-OV-Com3=2HA73_g@mail.gmail.com>
 <20230821160502.66d8c505@Tarkus>
 <25827.26810.377310.594496@rob.eddelbuettel.com>
 <CAO1VBV18ZVgxuX8_9EAmp99NGTyRLG6whfYVauM6sosccRQmbw@mail.gmail.com>
 <GV2PR02MB87700FF98E542FF85D2E0156D51EA@GV2PR02MB8770.eurprd02.prod.outlook.com>
 <3a78262a-0760-9541-59c7-0403b0164d00@statistik.tu-dortmund.de>
 <B42815E3-4326-4734-9107-EC7C9C9AE40F@dcn.davis.ca.us>
Message-ID: <84a351e2-e9e5-f2c7-200d-3e9f17bf9337@statistik.tu-dortmund.de>



On 23.08.2023 15:58, Jeff Newmiller wrote:
> To whom are you addressing this question? The OpenMP developers who define the missing-OMP_THREAD_LIMIT behaviour and-or supply default config files? The CRAN server administrators who set the variable in their site-wide configuration intentionally or unintentionally? Or the package authors expected to kludge in settings to override those defaults for CRAN testing while not overriding them in normal use?

Of course , the CRAN teams controls the env vars on the CRAN servers, 
but not on a server a user might use. And a user is typically unaware 
that a package uses multithreading.
R users are typically not developers with a lot of insight in computer 
science. Most R users I know would not even know how to set an env var.

So why do you ecxpect your users to set an appropriate OMP_THREAD_LIMIT? 
Particularly when they aim at parallelization, they have to set it to 1.
I advocate not only to limit the number of cores for CRAN but also (and 
inparticular)  the default! Something we cannot check easily.


An alternative would be to teach R to set OMP_THREAD_LIMIT=1 locally by 
default and a mechanism to change that for users.

Best,
Uwe Ligges


> 
> I would vote for explicitly addressing this (rhetorical?) question to the CRAN server administrators...
> 
> On August 23, 2023 6:31:01 AM PDT, Uwe Ligges <ligges at statistik.tu-dortmund.de> wrote:
>> I (any many collegues here) have been caught several times by the following example:
>>
>> 1. did something in parallel on a cluster, set up via parallel::makeCluster().
>> 2. e.g. allocated 20 cores and got them on one single machine
>> 3. ran some code in parallel via parLapply()
>>
>> Bang! 400 threads;
>> So I have started 20 parallel processes, each of which is using the automatically set max. 20 threads as OMP_THREAD_LIMIT was also adjusted by the cluster to 20 (rather than 1).
>>
>> Hence, I really believe a default should always be small, not only in examples and tests, but generally. And people who aim for more should be able to increase the defaults.
>>
>> Do you believe a software that auto-occupies a 96 core machines with 96 threads by default is sensible?
>>
>> Best,
>> Uwe Ligges
>>
>>
>>
>>
>>
>>
>> On 21.08.2023 21:59, Berry Boessenkool wrote:
>>>
>>> If you add that to each exported function, isn't that a lot of code to read + maintain?
>>> Also, it seems like unnecessary computational overhead.
>>>   From a software design point of view, it might be nicer to set that in the examples + tests.
>>>
>>> Regards,
>>> Berry
>>>
>>> ________________________________
>>> From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Scott Ritchie <sritchie73 at gmail.com>
>>> Sent: Monday, August 21, 2023 19:23
>>> To: Dirk Eddelbuettel <edd at debian.org>
>>> Cc: r-package-devel at r-project.org <r-package-devel at r-project.org>
>>> Subject: Re: [R-pkg-devel] Trouble with long-running tests on CRAN debian server
>>>
>>> Thanks Dirk and Ivan,
>>>
>>> I took a slightly different work-around of forcing the number of threads to
>>> 1 when running functions of the test dataset in the package, by adding the
>>> following to each user facing function:
>>>
>>> ```
>>>     # Check if running on package test_data, and if so, force data.table to
>>> be
>>>     # single threaded so that we can avoid a NOTE on CRAN submission
>>>     if (isTRUE(all.equal(x, ukbnmr::test_data))) {
>>>       registered_threads <- getDTthreads()
>>>       setDTthreads(1)
>>>       on.exit({ setDTthreads(registered_threads) }) # re-register so no
>>> unintended side effects for users
>>>     }
>>> ```
>>> (i.e. here x is the input argument to the function)
>>>
>>> It took some trial and error to get to pass the CRAN tests; the number of
>>> columns in the input data was also contributing to the problem.
>>>
>>> Best,
>>>
>>> Scott
>>>
>>>
>>> On Mon, 21 Aug 2023 at 14:38, Dirk Eddelbuettel <edd at debian.org> wrote:
>>>
>>>>
>>>> On 21 August 2023 at 16:05, Ivan Krylov wrote:
>>>> | Dirk is probably right that it's a good idea to have OMP_THREAD_LIMIT=2
>>>> | set on the CRAN check machine. Either that, or place the responsibility
>>>> | on data.table for setting the right number of threads by default. But
>>>> | that's a policy question: should a CRAN package start no more than two
>>>> | threads/child processes even if it doesn't know it's running in an
>>>> | environment where the CPU time / elapsed time limit is two?
>>>>
>>>> Methinks that given this language in the CRAN Repository Policy
>>>>
>>>>     If running a package uses multiple threads/cores it must never use more
>>>>     than two simultaneously: the check farm is a shared resource and will
>>>>     typically be running many checks simultaneously.
>>>>
>>>> it would indeed be nice if this variable, and/or equivalent ones, were set.
>>>>
>>>> As I mentioned before, I had long added a similar throttle (not for
>>>> data.table) in a package I look after (for work, even). So a similar
>>>> throttler with optionality is below. I'll add this to my `dang` package
>>>> collecting various functions.
>>>>
>>>> A usage example follows. It does nothing by default, ensuring 'full power'
>>>> but reflects the minimum of two possible options, or an explicit count:
>>>>
>>>>       > dang::limitDataTableCores(verbose=TRUE)
>>>>       Limiting data.table to '12'.
>>>>       > Sys.setenv("OMP_THREAD_LIMIT"=3);
>>>> dang::limitDataTableCores(verbose=TRUE)
>>>>       Limiting data.table to '3'.
>>>>       > options(Ncpus=2); dang::limitDataTableCores(verbose=TRUE)
>>>>       Limiting data.table to '2'.
>>>>       > dang::limitDataTableCores(1, verbose=TRUE)
>>>>       Limiting data.table to '1'.
>>>>       >
>>>>
>>>> That makes it, in my eyes, preferable to any unconditional 'always pick 1
>>>> thread'.
>>>>
>>>> Dirk
>>>>
>>>>
>>>> ##' Set threads for data.table respecting possible local settings
>>>> ##'
>>>> ##' This function set the number of threads \pkg{data.table} will use
>>>> ##' while reflecting two possible machine-specific settings from the
>>>> ##' environment variable \sQuote{OMP_THREAD_LIMIT} as well as the R
>>>> ##' option \sQuote{Ncpus} (uses e.g. for parallel builds).
>>>> ##' @title Set data.table threads respecting default settingss
>>>> ##' @param ncores A numeric or character variable with the desired
>>>> ##' count of threads to use
>>>> ##' @param verbose A logical value with a default of \sQuote{FALSE} to
>>>> ##' operate more verbosely
>>>> ##' @return The return value of the \pkg{data.table} function
>>>> ##' \code{setDTthreads} which is called as a side-effect.
>>>> ##' @author Dirk Eddelbuettel
>>>> ##' @export
>>>> limitDataTableCores <- function(ncores, verbose = FALSE) {
>>>>       if (missing(ncores)) {
>>>>           ## start with a simple fallback: 'Ncpus' (if set) or else 2
>>>>           ncores <- getOption("Ncpus", 2L)
>>>>           ## also consider OMP_THREAD_LIMIT (cf Writing R Extensions), gets
>>>> NA if envvar unset
>>>>           ompcores <- as.integer(Sys.getenv("OMP_THREAD_LIMIT"))
>>>>           ## and then keep the smaller
>>>>           ncores <- min(na.omit(c(ncores, ompcores)))
>>>>       }
>>>>       stopifnot("Package 'data.table' must be installed." =
>>>> requireNamespace("data.table", quietly=TRUE))
>>>>       stopifnot("Argument 'ncores' must be numeric or character" =
>>>> is.numeric(ncores) || is.character(ncores))
>>>>       if (verbose) message("Limiting data.table to '", ncores, "'.")
>>>>       data.table::setDTthreads(ncores)
>>>> }
>>>>
>>>> |
>>>> | --
>>>> | Best regards,
>>>> | Ivan
>>>> |
>>>> | ______________________________________________
>>>> | R-package-devel at r-project.org mailing list
>>>> | https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>
>>>> --
>>>> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>>>>
>>>
>>>           [[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>>> 	[[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Wed Aug 23 17:47:43 2023
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Wed, 23 Aug 2023 08:47:43 -0700
Subject: [R-pkg-devel] 
 Trouble with long-running tests on CRAN debian server
In-Reply-To: <84a351e2-e9e5-f2c7-200d-3e9f17bf9337@statistik.tu-dortmund.de>
References: <CAO1VBV0w03odWXX=jPHELnrwp8VejVD2L5V6PhUTFD+EA6J5cA@mail.gmail.com>
 <20230821151654.002682a0@Tarkus>
 <CAO1VBV39Tx_XQDZkwqsudXJkkRfR8cckiK-OV-Com3=2HA73_g@mail.gmail.com>
 <20230821160502.66d8c505@Tarkus>
 <25827.26810.377310.594496@rob.eddelbuettel.com>
 <CAO1VBV18ZVgxuX8_9EAmp99NGTyRLG6whfYVauM6sosccRQmbw@mail.gmail.com>
 <GV2PR02MB87700FF98E542FF85D2E0156D51EA@GV2PR02MB8770.eurprd02.prod.outlook.com>
 <3a78262a-0760-9541-59c7-0403b0164d00@statistik.tu-dortmund.de>
 <B42815E3-4326-4734-9107-EC7C9C9AE40F@dcn.davis.ca.us>
 <84a351e2-e9e5-f2c7-200d-3e9f17bf9337@statistik.tu-dortmund.de>
Message-ID: <E9330AFF-E8EC-4A67-AD65-3E8E22D0FC40@dcn.davis.ca.us>

I think one should be very cautious about overriding "standard" mechanisms for controlling software infrastructure like OpenMP.  You risk making the task of navigating the already-complex task of configuring the software environment even more complex by increasing the number of places you have to look in to find out why the mechanism documented by OpenMP is having no effect.

It may be that R Core agrees with you and creates an R-specific setting to control this... but IMO it should be accompanied by warning messages to help people figure out why their real work is underperforming if they link with compiled code that is supposed to make use of threads.

On August 23, 2023 7:24:46 AM PDT, Uwe Ligges <ligges at statistik.tu-dortmund.de> wrote:
>
>
>On 23.08.2023 15:58, Jeff Newmiller wrote:
>> To whom are you addressing this question? The OpenMP developers who define the missing-OMP_THREAD_LIMIT behaviour and-or supply default config files? The CRAN server administrators who set the variable in their site-wide configuration intentionally or unintentionally? Or the package authors expected to kludge in settings to override those defaults for CRAN testing while not overriding them in normal use?
>
>Of course , the CRAN teams controls the env vars on the CRAN servers, but not on a server a user might use. And a user is typically unaware that a package uses multithreading.
>R users are typically not developers with a lot of insight in computer science. Most R users I know would not even know how to set an env var.
>
>So why do you ecxpect your users to set an appropriate OMP_THREAD_LIMIT? Particularly when they aim at parallelization, they have to set it to 1.
>I advocate not only to limit the number of cores for CRAN but also (and inparticular)  the default! Something we cannot check easily.
>
>
>An alternative would be to teach R to set OMP_THREAD_LIMIT=1 locally by default and a mechanism to change that for users.
>
>Best,
>Uwe Ligges
>
>
>> 
>> I would vote for explicitly addressing this (rhetorical?) question to the CRAN server administrators...
>> 
>> On August 23, 2023 6:31:01 AM PDT, Uwe Ligges <ligges at statistik.tu-dortmund.de> wrote:
>>> I (any many collegues here) have been caught several times by the following example:
>>> 
>>> 1. did something in parallel on a cluster, set up via parallel::makeCluster().
>>> 2. e.g. allocated 20 cores and got them on one single machine
>>> 3. ran some code in parallel via parLapply()
>>> 
>>> Bang! 400 threads;
>>> So I have started 20 parallel processes, each of which is using the automatically set max. 20 threads as OMP_THREAD_LIMIT was also adjusted by the cluster to 20 (rather than 1).
>>> 
>>> Hence, I really believe a default should always be small, not only in examples and tests, but generally. And people who aim for more should be able to increase the defaults.
>>> 
>>> Do you believe a software that auto-occupies a 96 core machines with 96 threads by default is sensible?
>>> 
>>> Best,
>>> Uwe Ligges
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> On 21.08.2023 21:59, Berry Boessenkool wrote:
>>>> 
>>>> If you add that to each exported function, isn't that a lot of code to read + maintain?
>>>> Also, it seems like unnecessary computational overhead.
>>>>   From a software design point of view, it might be nicer to set that in the examples + tests.
>>>> 
>>>> Regards,
>>>> Berry
>>>> 
>>>> ________________________________
>>>> From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Scott Ritchie <sritchie73 at gmail.com>
>>>> Sent: Monday, August 21, 2023 19:23
>>>> To: Dirk Eddelbuettel <edd at debian.org>
>>>> Cc: r-package-devel at r-project.org <r-package-devel at r-project.org>
>>>> Subject: Re: [R-pkg-devel] Trouble with long-running tests on CRAN debian server
>>>> 
>>>> Thanks Dirk and Ivan,
>>>> 
>>>> I took a slightly different work-around of forcing the number of threads to
>>>> 1 when running functions of the test dataset in the package, by adding the
>>>> following to each user facing function:
>>>> 
>>>> ```
>>>>     # Check if running on package test_data, and if so, force data.table to
>>>> be
>>>>     # single threaded so that we can avoid a NOTE on CRAN submission
>>>>     if (isTRUE(all.equal(x, ukbnmr::test_data))) {
>>>>       registered_threads <- getDTthreads()
>>>>       setDTthreads(1)
>>>>       on.exit({ setDTthreads(registered_threads) }) # re-register so no
>>>> unintended side effects for users
>>>>     }
>>>> ```
>>>> (i.e. here x is the input argument to the function)
>>>> 
>>>> It took some trial and error to get to pass the CRAN tests; the number of
>>>> columns in the input data was also contributing to the problem.
>>>> 
>>>> Best,
>>>> 
>>>> Scott
>>>> 
>>>> 
>>>> On Mon, 21 Aug 2023 at 14:38, Dirk Eddelbuettel <edd at debian.org> wrote:
>>>> 
>>>>> 
>>>>> On 21 August 2023 at 16:05, Ivan Krylov wrote:
>>>>> | Dirk is probably right that it's a good idea to have OMP_THREAD_LIMIT=2
>>>>> | set on the CRAN check machine. Either that, or place the responsibility
>>>>> | on data.table for setting the right number of threads by default. But
>>>>> | that's a policy question: should a CRAN package start no more than two
>>>>> | threads/child processes even if it doesn't know it's running in an
>>>>> | environment where the CPU time / elapsed time limit is two?
>>>>> 
>>>>> Methinks that given this language in the CRAN Repository Policy
>>>>> 
>>>>>     If running a package uses multiple threads/cores it must never use more
>>>>>     than two simultaneously: the check farm is a shared resource and will
>>>>>     typically be running many checks simultaneously.
>>>>> 
>>>>> it would indeed be nice if this variable, and/or equivalent ones, were set.
>>>>> 
>>>>> As I mentioned before, I had long added a similar throttle (not for
>>>>> data.table) in a package I look after (for work, even). So a similar
>>>>> throttler with optionality is below. I'll add this to my `dang` package
>>>>> collecting various functions.
>>>>> 
>>>>> A usage example follows. It does nothing by default, ensuring 'full power'
>>>>> but reflects the minimum of two possible options, or an explicit count:
>>>>> 
>>>>>       > dang::limitDataTableCores(verbose=TRUE)
>>>>>       Limiting data.table to '12'.
>>>>>       > Sys.setenv("OMP_THREAD_LIMIT"=3);
>>>>> dang::limitDataTableCores(verbose=TRUE)
>>>>>       Limiting data.table to '3'.
>>>>>       > options(Ncpus=2); dang::limitDataTableCores(verbose=TRUE)
>>>>>       Limiting data.table to '2'.
>>>>>       > dang::limitDataTableCores(1, verbose=TRUE)
>>>>>       Limiting data.table to '1'.
>>>>>       >
>>>>> 
>>>>> That makes it, in my eyes, preferable to any unconditional 'always pick 1
>>>>> thread'.
>>>>> 
>>>>> Dirk
>>>>> 
>>>>> 
>>>>> ##' Set threads for data.table respecting possible local settings
>>>>> ##'
>>>>> ##' This function set the number of threads \pkg{data.table} will use
>>>>> ##' while reflecting two possible machine-specific settings from the
>>>>> ##' environment variable \sQuote{OMP_THREAD_LIMIT} as well as the R
>>>>> ##' option \sQuote{Ncpus} (uses e.g. for parallel builds).
>>>>> ##' @title Set data.table threads respecting default settingss
>>>>> ##' @param ncores A numeric or character variable with the desired
>>>>> ##' count of threads to use
>>>>> ##' @param verbose A logical value with a default of \sQuote{FALSE} to
>>>>> ##' operate more verbosely
>>>>> ##' @return The return value of the \pkg{data.table} function
>>>>> ##' \code{setDTthreads} which is called as a side-effect.
>>>>> ##' @author Dirk Eddelbuettel
>>>>> ##' @export
>>>>> limitDataTableCores <- function(ncores, verbose = FALSE) {
>>>>>       if (missing(ncores)) {
>>>>>           ## start with a simple fallback: 'Ncpus' (if set) or else 2
>>>>>           ncores <- getOption("Ncpus", 2L)
>>>>>           ## also consider OMP_THREAD_LIMIT (cf Writing R Extensions), gets
>>>>> NA if envvar unset
>>>>>           ompcores <- as.integer(Sys.getenv("OMP_THREAD_LIMIT"))
>>>>>           ## and then keep the smaller
>>>>>           ncores <- min(na.omit(c(ncores, ompcores)))
>>>>>       }
>>>>>       stopifnot("Package 'data.table' must be installed." =
>>>>> requireNamespace("data.table", quietly=TRUE))
>>>>>       stopifnot("Argument 'ncores' must be numeric or character" =
>>>>> is.numeric(ncores) || is.character(ncores))
>>>>>       if (verbose) message("Limiting data.table to '", ncores, "'.")
>>>>>       data.table::setDTthreads(ncores)
>>>>> }
>>>>> 
>>>>> |
>>>>> | --
>>>>> | Best regards,
>>>>> | Ivan
>>>>> |
>>>>> | ______________________________________________
>>>>> | R-package-devel at r-project.org mailing list
>>>>> | https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>> 
>>>>> --
>>>>> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>>>>> 
>>>> 
>>>>           [[alternative HTML version deleted]]
>>>> 
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>> 
>>>> 	[[alternative HTML version deleted]]
>>>> 
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>> 
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> 

-- 
Sent from my phone. Please excuse my brevity.


From edd @end|ng |rom deb|@n@org  Wed Aug 23 20:54:02 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Wed, 23 Aug 2023 13:54:02 -0500
Subject: [R-pkg-devel] Setting valgrind options when running R CMD check
 --use-valgrind
Message-ID: <25830.21962.290050.855823@rob.eddelbuettel.com>


When I invoke valgrind via
   R -d valgrind -e '...'
the options in the file ~/.valgrindrc are being picked up. Good.

When I invok valgrind via
   R CMD check --use-valgrind ...
the options in the file ~/.valgrindrc are NOT being picked up. Bad.

And valgrind complains.  How can I add the needed options?  Adding
   --debugger-args="...."
does not work.  Is there another trick?

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From murdoch@dunc@n @end|ng |rom gm@||@com  Wed Aug 23 22:49:17 2023
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Wed, 23 Aug 2023 16:49:17 -0400
Subject: [R-pkg-devel] Setting valgrind options when running R CMD check
 --use-valgrind
In-Reply-To: <25830.21962.290050.855823@rob.eddelbuettel.com>
References: <25830.21962.290050.855823@rob.eddelbuettel.com>
Message-ID: <f67d0895-4dc4-1d99-0056-200631b07e9c@gmail.com>

On 23/08/2023 2:54 p.m., Dirk Eddelbuettel wrote:
> 
> When I invoke valgrind via
>     R -d valgrind -e '...'
> the options in the file ~/.valgrindrc are being picked up. Good.
> 
> When I invok valgrind via
>     R CMD check --use-valgrind ...
> the options in the file ~/.valgrindrc are NOT being picked up. Bad.
> 
> And valgrind complains.  How can I add the needed options?  Adding
>     --debugger-args="...."
> does not work.  Is there another trick?

I don't know the answer to your question, but here's something to try. 
There's a way to run an "R CMD check" equivalent from a regular session, 
so presumably it could be done from "R -d valgrind -e":

     tools:::.check_packages(c("pkg", "--option1", "--option2"))

A likely problem is that many of the check tests are run in separate 
processes; I don't know if the valgrind setting would be inherited or not.

Duncan Murdoch


From edd @end|ng |rom deb|@n@org  Thu Aug 24 00:27:01 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Wed, 23 Aug 2023 17:27:01 -0500
Subject: [R-pkg-devel] Setting valgrind options when running R CMD check
 --use-valgrind
In-Reply-To: <f67d0895-4dc4-1d99-0056-200631b07e9c@gmail.com>
References: <25830.21962.290050.855823@rob.eddelbuettel.com>
 <f67d0895-4dc4-1d99-0056-200631b07e9c@gmail.com>
Message-ID: <25830.34741.261609.618204@rob.eddelbuettel.com>


On 23 August 2023 at 16:49, Duncan Murdoch wrote:
| On 23/08/2023 2:54 p.m., Dirk Eddelbuettel wrote:
| > 
| > When I invoke valgrind via
| >     R -d valgrind -e '...'
| > the options in the file ~/.valgrindrc are being picked up. Good.
| > 
| > When I invok valgrind via
| >     R CMD check --use-valgrind ...
| > the options in the file ~/.valgrindrc are NOT being picked up. Bad.
| > 
| > And valgrind complains.  How can I add the needed options?  Adding
| >     --debugger-args="...."
| > does not work.  Is there another trick?
| 
| I don't know the answer to your question, but here's something to try. 
| There's a way to run an "R CMD check" equivalent from a regular session, 
| so presumably it could be done from "R -d valgrind -e":
| 
|      tools:::.check_packages(c("pkg", "--option1", "--option2"))
| 
| A likely problem is that many of the check tests are run in separate 
| processes; I don't know if the valgrind setting would be inherited or not.

Thanks for the reminder, I also re-realized by re-reading WRE that setting
VALGRIND_OPTS="...." works.  And with that I am no longer fully sure I can
claim that ~/.valgrindrc was ignored.  I may have misread an error.

Thanks for the prompt help, it is appreciated.

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From |redv|o|e @end|ng |rom gm@||@com  Thu Aug 24 13:42:41 2023
From: |redv|o|e @end|ng |rom gm@||@com (Fred Viole)
Date: Thu, 24 Aug 2023 07:42:41 -0400
Subject: [R-pkg-devel] Re-building vignettes had CPU time 9.2 times elapsed
 time
Message-ID: <CAEJTLzMw03xw18DBoSWJUw9LmtF2gRMT+ze4puKZUtUmT8r3=A@mail.gmail.com>

Hi, I am receiving a NOTE upon submission regarding the re-building of
vignettes for CPU time for the Debian check.

I am unable to find any documented instances or solutions to this issue.
The vignettes currently build in 1m 54.3s locally and in 56s on the Win
check.

https://win-builder.r-project.org/incoming_pretest/NNS_10.1_20230824_132459/Debian/00check.log


Thank you for your assistance,
Fred

	[[alternative HTML version deleted]]


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Fri Aug 25 15:29:55 2023
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Fri, 25 Aug 2023 15:29:55 +0200
Subject: [R-pkg-devel] 
 Re-building vignettes had CPU time 9.2 times elapsed time
In-Reply-To: <CAEJTLzMw03xw18DBoSWJUw9LmtF2gRMT+ze4puKZUtUmT8r3=A@mail.gmail.com>
References: <CAEJTLzMw03xw18DBoSWJUw9LmtF2gRMT+ze4puKZUtUmT8r3=A@mail.gmail.com>
Message-ID: <b136a33e-bb00-874c-bec7-b053a60d2e76@statistik.tu-dortmund.de>


* checking re-building of vignette outputs ... [577s/63s] NOTE
Re-building vignettes had CPU time 9.2 times elapsed time

--> Do not use more than 2 cores

Best,
Uwe Ligges


On 24.08.2023 13:42, Fred Viole wrote:
> Hi, I am receiving a NOTE upon submission regarding the re-building of
> vignettes for CPU time for the Debian check.
> 
> I am unable to find any documented instances or solutions to this issue.
> The vignettes currently build in 1m 54.3s locally and in 56s on the Win
> check.
> 
> https://win-builder.r-project.org/incoming_pretest/NNS_10.1_20230824_132459/Debian/00check.log
> 
> 
> Thank you for your assistance,
> Fred
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Fri Aug 25 15:37:47 2023
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Fri, 25 Aug 2023 15:37:47 +0200
Subject: [R-pkg-devel] 
 Trouble with long-running tests on CRAN debian server
In-Reply-To: <CAO1VBV08vFUrgt3VL8Eqa==ao6GrMbB392f1n-YR8BrcWCJTVQ@mail.gmail.com>
References: <CAO1VBV0w03odWXX=jPHELnrwp8VejVD2L5V6PhUTFD+EA6J5cA@mail.gmail.com>
 <20230821151654.002682a0@Tarkus>
 <CAO1VBV39Tx_XQDZkwqsudXJkkRfR8cckiK-OV-Com3=2HA73_g@mail.gmail.com>
 <20230821160502.66d8c505@Tarkus>
 <25827.26810.377310.594496@rob.eddelbuettel.com>
 <CAO1VBV18ZVgxuX8_9EAmp99NGTyRLG6whfYVauM6sosccRQmbw@mail.gmail.com>
 <GV2PR02MB87700FF98E542FF85D2E0156D51EA@GV2PR02MB8770.eurprd02.prod.outlook.com>
 <3a78262a-0760-9541-59c7-0403b0164d00@statistik.tu-dortmund.de>
 <CAO1VBV08vFUrgt3VL8Eqa==ao6GrMbB392f1n-YR8BrcWCJTVQ@mail.gmail.com>
Message-ID: <5a3b0c6d-0a75-f522-aaba-b8c259861375@statistik.tu-dortmund.de>



On 23.08.2023 16:00, Scott Ritchie wrote:
> Hi Uwe,
> 
> I agree and have also been burnt myself?by programs occupying the 
> maximum number of cores available.
> 
> My understanding is that in the absence of explicit parallelisation, use 
> of data.table in a package should not lead to this type of behaviour?

Yes, that would be my hope, too.

Best,
Uwe Ligges


> 
> Best,
> 
> Scott
> 
> On Wed, 23 Aug 2023 at 14:30, Uwe Ligges 
> <ligges at statistik.tu-dortmund.de 
> <mailto:ligges at statistik.tu-dortmund.de>> wrote:
> 
>     I (any many collegues here) have been caught several times by the
>     following example:
> 
>     1. did something in parallel on a cluster, set up via
>     parallel::makeCluster().
>     2. e.g. allocated 20 cores and got them on one single machine
>     3. ran some code in parallel via parLapply()
> 
>     Bang! 400 threads;
>     So I have started 20 parallel processes, each of which is using the
>     automatically set max. 20 threads as OMP_THREAD_LIMIT was also adjusted
>     by the cluster to 20 (rather than 1).
> 
>     Hence, I really believe a default should always be small, not only in
>     examples and tests, but generally. And people who aim for more
>     should be
>     able to increase the defaults.
> 
>     Do you believe a software that auto-occupies a 96 core machines with 96
>     threads by default is sensible?
> 
>     Best,
>     Uwe Ligges
> 
> 
> 
> 
> 
> 
>     On 21.08.2023 21:59, Berry Boessenkool wrote:
>      >
>      > If you add that to each exported function, isn't that a lot of
>     code to read + maintain?
>      > Also, it seems like unnecessary computational overhead.
>      >? From a software design point of view, it might be nicer to set
>     that in the examples + tests.
>      >
>      > Regards,
>      > Berry
>      >
>      > ________________________________
>      > From: R-package-devel <r-package-devel-bounces at r-project.org
>     <mailto:r-package-devel-bounces at r-project.org>> on behalf of Scott
>     Ritchie <sritchie73 at gmail.com <mailto:sritchie73 at gmail.com>>
>      > Sent: Monday, August 21, 2023 19:23
>      > To: Dirk Eddelbuettel <edd at debian.org <mailto:edd at debian.org>>
>      > Cc: r-package-devel at r-project.org
>     <mailto:r-package-devel at r-project.org>
>     <r-package-devel at r-project.org <mailto:r-package-devel at r-project.org>>
>      > Subject: Re: [R-pkg-devel] Trouble with long-running tests on
>     CRAN debian server
>      >
>      > Thanks Dirk and Ivan,
>      >
>      > I took a slightly different work-around of forcing the number of
>     threads to
>      > 1 when running functions of the test dataset in the package, by
>     adding the
>      > following to each user facing function:
>      >
>      > ```
>      >? ? # Check if running on package test_data, and if so, force
>     data.table to
>      > be
>      >? ? # single threaded so that we can avoid a NOTE on CRAN submission
>      >? ? if (isTRUE(all.equal(x, ukbnmr::test_data))) {
>      >? ? ? registered_threads <- getDTthreads()
>      >? ? ? setDTthreads(1)
>      >? ? ? on.exit({ setDTthreads(registered_threads) }) # re-register
>     so no
>      > unintended side effects for users
>      >? ? }
>      > ```
>      > (i.e. here x is the input argument to the function)
>      >
>      > It took some trial and error to get to pass the CRAN tests; the
>     number of
>      > columns in the input data was also contributing to the problem.
>      >
>      > Best,
>      >
>      > Scott
>      >
>      >
>      > On Mon, 21 Aug 2023 at 14:38, Dirk Eddelbuettel <edd at debian.org
>     <mailto:edd at debian.org>> wrote:
>      >
>      >>
>      >> On 21 August 2023 at 16:05, Ivan Krylov wrote:
>      >> | Dirk is probably right that it's a good idea to have
>     OMP_THREAD_LIMIT=2
>      >> | set on the CRAN check machine. Either that, or place the
>     responsibility
>      >> | on data.table for setting the right number of threads by
>     default. But
>      >> | that's a policy question: should a CRAN package start no more
>     than two
>      >> | threads/child processes even if it doesn't know it's running in an
>      >> | environment where the CPU time / elapsed time limit is two?
>      >>
>      >> Methinks that given this language in the CRAN Repository Policy
>      >>
>      >>? ? If running a package uses multiple threads/cores it must
>     never use more
>      >>? ? than two simultaneously: the check farm is a shared resource
>     and will
>      >>? ? typically be running many checks simultaneously.
>      >>
>      >> it would indeed be nice if this variable, and/or equivalent
>     ones, were set.
>      >>
>      >> As I mentioned before, I had long added a similar throttle (not for
>      >> data.table) in a package I look after (for work, even). So a similar
>      >> throttler with optionality is below. I'll add this to my `dang`
>     package
>      >> collecting various functions.
>      >>
>      >> A usage example follows. It does nothing by default, ensuring
>     'full power'
>      >> but reflects the minimum of two possible options, or an explicit
>     count:
>      >>
>      >>? ? ? > dang::limitDataTableCores(verbose=TRUE)
>      >>? ? ? Limiting data.table to '12'.
>      >>? ? ? > Sys.setenv("OMP_THREAD_LIMIT"=3);
>      >> dang::limitDataTableCores(verbose=TRUE)
>      >>? ? ? Limiting data.table to '3'.
>      >>? ? ? > options(Ncpus=2); dang::limitDataTableCores(verbose=TRUE)
>      >>? ? ? Limiting data.table to '2'.
>      >>? ? ? > dang::limitDataTableCores(1, verbose=TRUE)
>      >>? ? ? Limiting data.table to '1'.
>      >>? ? ? >
>      >>
>      >> That makes it, in my eyes, preferable to any unconditional
>     'always pick 1
>      >> thread'.
>      >>
>      >> Dirk
>      >>
>      >>
>      >> ##' Set threads for data.table respecting possible local settings
>      >> ##'
>      >> ##' This function set the number of threads \pkg{data.table}
>     will use
>      >> ##' while reflecting two possible machine-specific settings from the
>      >> ##' environment variable \sQuote{OMP_THREAD_LIMIT} as well as the R
>      >> ##' option \sQuote{Ncpus} (uses e.g. for parallel builds).
>      >> ##' @title Set data.table threads respecting default settingss
>      >> ##' @param ncores A numeric or character variable with the desired
>      >> ##' count of threads to use
>      >> ##' @param verbose A logical value with a default of
>     \sQuote{FALSE} to
>      >> ##' operate more verbosely
>      >> ##' @return The return value of the \pkg{data.table} function
>      >> ##' \code{setDTthreads} which is called as a side-effect.
>      >> ##' @author Dirk Eddelbuettel
>      >> ##' @export
>      >> limitDataTableCores <- function(ncores, verbose = FALSE) {
>      >>? ? ? if (missing(ncores)) {
>      >>? ? ? ? ? ## start with a simple fallback: 'Ncpus' (if set) or else 2
>      >>? ? ? ? ? ncores <- getOption("Ncpus", 2L)
>      >>? ? ? ? ? ## also consider OMP_THREAD_LIMIT (cf Writing R
>     Extensions), gets
>      >> NA if envvar unset
>      >>? ? ? ? ? ompcores <- as.integer(Sys.getenv("OMP_THREAD_LIMIT"))
>      >>? ? ? ? ? ## and then keep the smaller
>      >>? ? ? ? ? ncores <- min(na.omit(c(ncores, ompcores)))
>      >>? ? ? }
>      >>? ? ? stopifnot("Package 'data.table' must be installed." =
>      >> requireNamespace("data.table", quietly=TRUE))
>      >>? ? ? stopifnot("Argument 'ncores' must be numeric or character" =
>      >> is.numeric(ncores) || is.character(ncores))
>      >>? ? ? if (verbose) message("Limiting data.table to '", ncores, "'.")
>      >>? ? ? data.table::setDTthreads(ncores)
>      >> }
>      >>
>      >> |
>      >> | --
>      >> | Best regards,
>      >> | Ivan
>      >> |
>      >> | ______________________________________________
>      >> | R-package-devel at r-project.org
>     <mailto:R-package-devel at r-project.org> mailing list
>      >> | https://stat.ethz.ch/mailman/listinfo/r-package-devel
>     <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
>      >>
>      >> --
>      >> dirk.eddelbuettel.com <http://dirk.eddelbuettel.com> |
>     @eddelbuettel | edd at debian.org <mailto:edd at debian.org>
>      >>
>      >
>      >? ? ? ? ? [[alternative HTML version deleted]]
>      >
>      > ______________________________________________
>      > R-package-devel at r-project.org
>     <mailto:R-package-devel at r-project.org> mailing list
>      > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>     <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
>      >
>      >? ? ? ?[[alternative HTML version deleted]]
>      >
>      > ______________________________________________
>      > R-package-devel at r-project.org
>     <mailto:R-package-devel at r-project.org> mailing list
>      > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>     <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
>


From edd @end|ng |rom deb|@n@org  Fri Aug 25 15:41:49 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Fri, 25 Aug 2023 08:41:49 -0500
Subject: [R-pkg-devel] 
 Re-building vignettes had CPU time 9.2 times elapsed time
In-Reply-To: <CAEJTLzMw03xw18DBoSWJUw9LmtF2gRMT+ze4puKZUtUmT8r3=A@mail.gmail.com>
References: <CAEJTLzMw03xw18DBoSWJUw9LmtF2gRMT+ze4puKZUtUmT8r3=A@mail.gmail.com>
Message-ID: <25832.44957.847418.690770@rob.eddelbuettel.com>


On 24 August 2023 at 07:42, Fred Viole wrote:
| Hi, I am receiving a NOTE upon submission regarding the re-building of
| vignettes for CPU time for the Debian check.
| 
| I am unable to find any documented instances or solutions to this issue.
| The vignettes currently build in 1m 54.3s locally and in 56s on the Win
| check.
| 
| https://win-builder.r-project.org/incoming_pretest/NNS_10.1_20230824_132459/Debian/00check.log

Please see, inter alia, the long running thread

   "Trouble with long-running tests on CRAN debian server"

started earlier this week (!!) on this list covering exactly this issue.

We can only hope CRAN comes to understand our point that _it_ should set a
clearly-identifable variable (the OpenMP thread count would do) so that
package data.table can this for its several hundred users.

As things currently stand, CRAN expects several hundred packages (such as
your, guessing there this comes from data.table which I do not know for sure
but you do import it) to make the change which is pretty close to the text
book definition of madness.

Also see https://github.com/Rdatatable/data.table/issues/5658 with by now 24
comments.  It is on the same issue.

Uwe, Kurt: Please please please set OMP_THREAD_LIMIT to 2 on the Windows and
Debian machines doing this test.

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From edd @end|ng |rom deb|@n@org  Fri Aug 25 15:53:02 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Fri, 25 Aug 2023 08:53:02 -0500
Subject: [R-pkg-devel] 
 Trouble with long-running tests on CRAN debian server
In-Reply-To: <5a3b0c6d-0a75-f522-aaba-b8c259861375@statistik.tu-dortmund.de>
References: <CAO1VBV0w03odWXX=jPHELnrwp8VejVD2L5V6PhUTFD+EA6J5cA@mail.gmail.com>
 <20230821151654.002682a0@Tarkus>
 <CAO1VBV39Tx_XQDZkwqsudXJkkRfR8cckiK-OV-Com3=2HA73_g@mail.gmail.com>
 <20230821160502.66d8c505@Tarkus>
 <25827.26810.377310.594496@rob.eddelbuettel.com>
 <CAO1VBV18ZVgxuX8_9EAmp99NGTyRLG6whfYVauM6sosccRQmbw@mail.gmail.com>
 <GV2PR02MB87700FF98E542FF85D2E0156D51EA@GV2PR02MB8770.eurprd02.prod.outlook.com>
 <3a78262a-0760-9541-59c7-0403b0164d00@statistik.tu-dortmund.de>
 <CAO1VBV08vFUrgt3VL8Eqa==ao6GrMbB392f1n-YR8BrcWCJTVQ@mail.gmail.com>
 <5a3b0c6d-0a75-f522-aaba-b8c259861375@statistik.tu-dortmund.de>
Message-ID: <25832.45630.489031.528382@rob.eddelbuettel.com>


On 25 August 2023 at 15:37, Uwe Ligges wrote:
| 
| 
| On 23.08.2023 16:00, Scott Ritchie wrote:
| > Hi Uwe,
| > 
| > I agree and have also been burnt myself?by programs occupying the 
| > maximum number of cores available.
| > 
| > My understanding is that in the absence of explicit parallelisation, use 
| > of data.table in a package should not lead to this type of behaviour?
| 
| Yes, that would be my hope, too.

No everybody involved with data.table thinks using 50% is already a
compromise giving up performance, see eg Jan's comment from yesterday (and
everything leading up to it):

   https://github.com/Rdatatable/data.table/issues/5658#issuecomment-1691831704

*You* have a local constraint (that is perfectly reasonable) as *you* run
multiple package tests. So *you* should set a low value for OMP_THREAD_LIMIT.

Many users spend top dollars to have access to high-powered machines for
high-powered analyses. They do want all cores.

There simply cannot be one setting that addresses all situations. Please set
a low limit as your local deployment requires it.

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From @rmeyer@2 @end|ng |rom w|@c@edu  Fri Aug 25 17:27:46 2023
From: @rmeyer@2 @end|ng |rom w|@c@edu (Stephen Meyers)
Date: Fri, 25 Aug 2023 11:27:46 -0400
Subject: [R-pkg-devel] Problem calling R random number generator from Fortran
Message-ID: <bf7ed784-809c-d762-2e04-a204dffa0db5@wisc.edu>

Hello everyone,

I'm updating the 'astrochron' R package, and I am trying to remove the Fortran intrinsic RANDOM_NUMBER from source code, and replace it with R's rand_unif.? I've followed this approach:

https://cran.r-project.org/doc/manuals/R-exts.html#Calling-C-from-Fortran-and-vice-versa

but on complication I get:

/error: implicit declaration of function 'rand_unif' is invalid in C99 [-Werror,-Wimplicit-function-declaration]//
//double F77_SUB(getunif)(void) { return rand_unif(); /

I've created the C wrapper, and then call it from the Fortran code as such:

_C-wrapper:_

    #include <R.h>
    #include <Rmath.h>

    void F77_SUB(getseed)(void) { GetRNGstate(); }
    void F77_SUB(putseed)(void) { PutRNGstate(); }
    double F77_SUB(getunif)(void) { return rand_unif(); }

_Called from the Fortran as:_

 ?? ??? ? double precision getunif, e

 ??? ???? CALL getseed()

 ??? ???? e = getunif()

 ??? ???? CALL putseed()

Here is link to the full package with the above code implemented:

https://drive.google.com/file/d/1VyfFoWTAtCSYIqB3CZ8i--xL5E4_qz2w/view?usp=sharing

The relevant source is in /src/asm1.8cR.f and src/getunif.c

Many thanks for any advice!

All the best,

 ?Stephen Meyers

	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Fri Aug 25 18:40:21 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Fri, 25 Aug 2023 19:40:21 +0300
Subject: [R-pkg-devel] Problem calling R random number generator from
 Fortran
In-Reply-To: <bf7ed784-809c-d762-2e04-a204dffa0db5@wisc.edu>
References: <bf7ed784-809c-d762-2e04-a204dffa0db5@wisc.edu>
Message-ID: <20230825194021.2090471a@arachnoid>

? Fri, 25 Aug 2023 11:27:46 -0400
Stephen Meyers <srmeyers2 at wisc.edu> ?????:

> /error: implicit declaration of function 'rand_unif' is invalid in
> C99 [-Werror,-Wimplicit-function-declaration]// //double
> F77_SUB(getunif)(void) { return rand_unif(); 

I think you meant unif_rand(), not rand_unif():
https://cran.r-project.org/doc/manuals/R-exts.html#Random-numbers

-- 
Best regards,
Ivan


From tdhock5 @end|ng |rom gm@||@com  Sat Aug 26 00:13:13 2023
From: tdhock5 @end|ng |rom gm@||@com (Toby Hocking)
Date: Fri, 25 Aug 2023 15:13:13 -0700
Subject: [R-pkg-devel] 
 Re-building vignettes had CPU time 9.2 times elapsed time
In-Reply-To: <25832.44957.847418.690770@rob.eddelbuettel.com>
References: <CAEJTLzMw03xw18DBoSWJUw9LmtF2gRMT+ze4puKZUtUmT8r3=A@mail.gmail.com>
 <25832.44957.847418.690770@rob.eddelbuettel.com>
Message-ID: <CALK03d20nf5xhEvhM9RQmM=+pntkNNKrx_mSAoDZGFomPU9KCg@mail.gmail.com>

Thanks Dirk. I agree.
data.table is not in a situation to update very soon, so the easiest
solution for the R community would be for CRAN to set OMP_THREAD_LIMIT
to 2 on the Windows and Debian machines doing this test.
Otherwise the 1400+ packages with hard dependencies on data.table will
each have to implement custom logic to limit threads to 2.
Toby

On Fri, Aug 25, 2023 at 6:46?AM Dirk Eddelbuettel <edd at debian.org> wrote:
>
>
> On 24 August 2023 at 07:42, Fred Viole wrote:
> | Hi, I am receiving a NOTE upon submission regarding the re-building of
> | vignettes for CPU time for the Debian check.
> |
> | I am unable to find any documented instances or solutions to this issue.
> | The vignettes currently build in 1m 54.3s locally and in 56s on the Win
> | check.
> |
> | https://win-builder.r-project.org/incoming_pretest/NNS_10.1_20230824_132459/Debian/00check.log
>
> Please see, inter alia, the long running thread
>
>    "Trouble with long-running tests on CRAN debian server"
>
> started earlier this week (!!) on this list covering exactly this issue.
>
> We can only hope CRAN comes to understand our point that _it_ should set a
> clearly-identifable variable (the OpenMP thread count would do) so that
> package data.table can this for its several hundred users.
>
> As things currently stand, CRAN expects several hundred packages (such as
> your, guessing there this comes from data.table which I do not know for sure
> but you do import it) to make the change which is pretty close to the text
> book definition of madness.
>
> Also see https://github.com/Rdatatable/data.table/issues/5658 with by now 24
> comments.  It is on the same issue.
>
> Uwe, Kurt: Please please please set OMP_THREAD_LIMIT to 2 on the Windows and
> Debian machines doing this test.
>
> Dirk
>
> --
> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From murdoch@dunc@n @end|ng |rom gm@||@com  Sat Aug 26 00:45:45 2023
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Fri, 25 Aug 2023 18:45:45 -0400
Subject: [R-pkg-devel] 
 Re-building vignettes had CPU time 9.2 times elapsed time
In-Reply-To: <CALK03d20nf5xhEvhM9RQmM=+pntkNNKrx_mSAoDZGFomPU9KCg@mail.gmail.com>
References: <CAEJTLzMw03xw18DBoSWJUw9LmtF2gRMT+ze4puKZUtUmT8r3=A@mail.gmail.com>
 <25832.44957.847418.690770@rob.eddelbuettel.com>
 <CALK03d20nf5xhEvhM9RQmM=+pntkNNKrx_mSAoDZGFomPU9KCg@mail.gmail.com>
Message-ID: <39fe6b86-4d6e-8d9b-96f6-0846c7d36e62@gmail.com>

On 25/08/2023 6:13 p.m., Toby Hocking wrote:
> Thanks Dirk. I agree.
> data.table is not in a situation to update very soon, so the easiest
> solution for the R community would be for CRAN to set OMP_THREAD_LIMIT
> to 2 on the Windows and Debian machines doing this test.
> Otherwise the 1400+ packages with hard dependencies on data.table will
> each have to implement custom logic to limit threads to 2.

That doesn't follow.  data.table could update soon even if that wasn't 
their intention:  just include bug fixes and set the default 
OMP_THREAD_LIMIT to 2 in data.table.

The real problem is that there are two stubborn groups opposing each 
other:  the data.table developers and the CRAN maintainers.  The former 
think users should by default dedicate their whole machine to 
data.table.  The latter think users should opt in to do that.

Duncan Murdoch

> Toby
> 
> On Fri, Aug 25, 2023 at 6:46?AM Dirk Eddelbuettel <edd at debian.org> wrote:
>>
>>
>> On 24 August 2023 at 07:42, Fred Viole wrote:
>> | Hi, I am receiving a NOTE upon submission regarding the re-building of
>> | vignettes for CPU time for the Debian check.
>> |
>> | I am unable to find any documented instances or solutions to this issue.
>> | The vignettes currently build in 1m 54.3s locally and in 56s on the Win
>> | check.
>> |
>> | https://win-builder.r-project.org/incoming_pretest/NNS_10.1_20230824_132459/Debian/00check.log
>>
>> Please see, inter alia, the long running thread
>>
>>     "Trouble with long-running tests on CRAN debian server"
>>
>> started earlier this week (!!) on this list covering exactly this issue.
>>
>> We can only hope CRAN comes to understand our point that _it_ should set a
>> clearly-identifable variable (the OpenMP thread count would do) so that
>> package data.table can this for its several hundred users.
>>
>> As things currently stand, CRAN expects several hundred packages (such as
>> your, guessing there this comes from data.table which I do not know for sure
>> but you do import it) to make the change which is pretty close to the text
>> book definition of madness.
>>
>> Also see https://github.com/Rdatatable/data.table/issues/5658 with by now 24
>> comments.  It is on the same issue.
>>
>> Uwe, Kurt: Please please please set OMP_THREAD_LIMIT to 2 on the Windows and
>> Debian machines doing this test.
>>
>> Dirk
>>
>> --
>> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From r@c@rtwr|ght @end|ng |rom gm@||@com  Sat Aug 26 00:51:34 2023
From: r@c@rtwr|ght @end|ng |rom gm@||@com (Reed A. Cartwright)
Date: Fri, 25 Aug 2023 15:51:34 -0700
Subject: [R-pkg-devel] 
 Re-building vignettes had CPU time 9.2 times elapsed time
In-Reply-To: <39fe6b86-4d6e-8d9b-96f6-0846c7d36e62@gmail.com>
References: <CAEJTLzMw03xw18DBoSWJUw9LmtF2gRMT+ze4puKZUtUmT8r3=A@mail.gmail.com>
 <25832.44957.847418.690770@rob.eddelbuettel.com>
 <CALK03d20nf5xhEvhM9RQmM=+pntkNNKrx_mSAoDZGFomPU9KCg@mail.gmail.com>
 <39fe6b86-4d6e-8d9b-96f6-0846c7d36e62@gmail.com>
Message-ID: <CALOkxuwV1keSi7Zojqx5U_x-a_DRzb=NVEwYSea-eRDbfAFH6Q@mail.gmail.com>

I've been lurking on this discussion and have a question.

What does data.table do to pass CRAN tests? If this is a problem for
packages that use data.table, then it certainly is a problem for data.table
itself.

On Fri, Aug 25, 2023 at 3:46?PM Duncan Murdoch <murdoch.duncan at gmail.com>
wrote:

> On 25/08/2023 6:13 p.m., Toby Hocking wrote:
> > Thanks Dirk. I agree.
> > data.table is not in a situation to update very soon, so the easiest
> > solution for the R community would be for CRAN to set OMP_THREAD_LIMIT
> > to 2 on the Windows and Debian machines doing this test.
> > Otherwise the 1400+ packages with hard dependencies on data.table will
> > each have to implement custom logic to limit threads to 2.
>
> That doesn't follow.  data.table could update soon even if that wasn't
> their intention:  just include bug fixes and set the default
> OMP_THREAD_LIMIT to 2 in data.table.
>
> The real problem is that there are two stubborn groups opposing each
> other:  the data.table developers and the CRAN maintainers.  The former
> think users should by default dedicate their whole machine to
> data.table.  The latter think users should opt in to do that.
>
> Duncan Murdoch
>
> > Toby
> >
> > On Fri, Aug 25, 2023 at 6:46?AM Dirk Eddelbuettel <edd at debian.org>
> wrote:
> >>
> >>
> >> On 24 August 2023 at 07:42, Fred Viole wrote:
> >> | Hi, I am receiving a NOTE upon submission regarding the re-building of
> >> | vignettes for CPU time for the Debian check.
> >> |
> >> | I am unable to find any documented instances or solutions to this
> issue.
> >> | The vignettes currently build in 1m 54.3s locally and in 56s on the
> Win
> >> | check.
> >> |
> >> |
> https://urldefense.com/v3/__https://win-builder.r-project.org/incoming_pretest/NNS_10.1_20230824_132459/Debian/00check.log__;!!IKRxdwAv5BmarQ!bP_qGn5U4eBRE9TwPaPYCaT1Qxw309rspvwvyo1Vr940gwIy7A450mXBZS_k9RGH7CzesgCa8mnUgnH5h_G4aa1FRg$
> >>
> >> Please see, inter alia, the long running thread
> >>
> >>     "Trouble with long-running tests on CRAN debian server"
> >>
> >> started earlier this week (!!) on this list covering exactly this issue.
> >>
> >> We can only hope CRAN comes to understand our point that _it_ should
> set a
> >> clearly-identifable variable (the OpenMP thread count would do) so that
> >> package data.table can this for its several hundred users.
> >>
> >> As things currently stand, CRAN expects several hundred packages (such
> as
> >> your, guessing there this comes from data.table which I do not know for
> sure
> >> but you do import it) to make the change which is pretty close to the
> text
> >> book definition of madness.
> >>
> >> Also see
> https://urldefense.com/v3/__https://github.com/Rdatatable/data.table/issues/5658__;!!IKRxdwAv5BmarQ!bP_qGn5U4eBRE9TwPaPYCaT1Qxw309rspvwvyo1Vr940gwIy7A450mXBZS_k9RGH7CzesgCa8mnUgnH5h_Her9_pag$
> with by now 24
> >> comments.  It is on the same issue.
> >>
> >> Uwe, Kurt: Please please please set OMP_THREAD_LIMIT to 2 on the
> Windows and
> >> Debian machines doing this test.
> >>
> >> Dirk
> >>
> >> --
> >> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
> >>
> >> ______________________________________________
> >> R-package-devel at r-project.org mailing list
> >>
> https://urldefense.com/v3/__https://stat.ethz.ch/mailman/listinfo/r-package-devel__;!!IKRxdwAv5BmarQ!bP_qGn5U4eBRE9TwPaPYCaT1Qxw309rspvwvyo1Vr940gwIy7A450mXBZS_k9RGH7CzesgCa8mnUgnH5h_GGKzc1hA$
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> >
> https://urldefense.com/v3/__https://stat.ethz.ch/mailman/listinfo/r-package-devel__;!!IKRxdwAv5BmarQ!bP_qGn5U4eBRE9TwPaPYCaT1Qxw309rspvwvyo1Vr940gwIy7A450mXBZS_k9RGH7CzesgCa8mnUgnH5h_GGKzc1hA$
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
>
> https://urldefense.com/v3/__https://stat.ethz.ch/mailman/listinfo/r-package-devel__;!!IKRxdwAv5BmarQ!bP_qGn5U4eBRE9TwPaPYCaT1Qxw309rspvwvyo1Vr940gwIy7A450mXBZS_k9RGH7CzesgCa8mnUgnH5h_GGKzc1hA$
>

	[[alternative HTML version deleted]]


From @vr@h@m@@d|er @end|ng |rom gm@||@com  Sat Aug 26 00:52:22 2023
From: @vr@h@m@@d|er @end|ng |rom gm@||@com (Avraham Adler)
Date: Fri, 25 Aug 2023 18:52:22 -0400
Subject: [R-pkg-devel] 
 Re-building vignettes had CPU time 9.2 times elapsed time
In-Reply-To: <39fe6b86-4d6e-8d9b-96f6-0846c7d36e62@gmail.com>
References: <39fe6b86-4d6e-8d9b-96f6-0846c7d36e62@gmail.com>
Message-ID: <7C9E8CB3-5CD6-4188-A6CE-951ED31A672A@gmail.com>

To be fair, data.table defaults to using 1/2 the available cores; they do not take the entire machine by default. 

Avi

Sent from my iPhone

> On Aug 25, 2023, at 6:46 PM, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> 
> ?On 25/08/2023 6:13 p.m., Toby Hocking wrote:
>> Thanks Dirk. I agree.
>> data.table is not in a situation to update very soon, so the easiest
>> solution for the R community would be for CRAN to set OMP_THREAD_LIMIT
>> to 2 on the Windows and Debian machines doing this test.
>> Otherwise the 1400+ packages with hard dependencies on data.table will
>> each have to implement custom logic to limit threads to 2.
> 
> That doesn't follow.  data.table could update soon even if that wasn't their intention:  just include bug fixes and set the default OMP_THREAD_LIMIT to 2 in data.table.
> 
> The real problem is that there are two stubborn groups opposing each other:  the data.table developers and the CRAN maintainers.  The former think users should by default dedicate their whole machine to data.table.  The latter think users should opt in to do that.
> 
> Duncan Murdoch
> 
>> Toby
>>> On Fri, Aug 25, 2023 at 6:46?AM Dirk Eddelbuettel <edd at debian.org> wrote:
>>> 
>>> 
>>>> On 24 August 2023 at 07:42, Fred Viole wrote:
>>> | Hi, I am receiving a NOTE upon submission regarding the re-building of
>>> | vignettes for CPU time for the Debian check.
>>> |
>>> | I am unable to find any documented instances or solutions to this issue.
>>> | The vignettes currently build in 1m 54.3s locally and in 56s on the Win
>>> | check.
>>> |
>>> | https://win-builder.r-project.org/incoming_pretest/NNS_10.1_20230824_132459/Debian/00check.log
>>> 
>>> Please see, inter alia, the long running thread
>>> 
>>>    "Trouble with long-running tests on CRAN debian server"
>>> 
>>> started earlier this week (!!) on this list covering exactly this issue.
>>> 
>>> We can only hope CRAN comes to understand our point that _it_ should set a
>>> clearly-identifable variable (the OpenMP thread count would do) so that
>>> package data.table can this for its several hundred users.
>>> 
>>> As things currently stand, CRAN expects several hundred packages (such as
>>> your, guessing there this comes from data.table which I do not know for sure
>>> but you do import it) to make the change which is pretty close to the text
>>> book definition of madness.
>>> 
>>> Also see https://github.com/Rdatatable/data.table/issues/5658 with by now 24
>>> comments.  It is on the same issue.
>>> 
>>> Uwe, Kurt: Please please please set OMP_THREAD_LIMIT to 2 on the Windows and
>>> Debian machines doing this test.
>>> 
>>> Dirk
>>> 
>>> --
>>> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>>> 
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From edd @end|ng |rom deb|@n@org  Sat Aug 26 01:01:33 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Fri, 25 Aug 2023 18:01:33 -0500
Subject: [R-pkg-devel] 
 Re-building vignettes had CPU time 9.2 times elapsed time
In-Reply-To: <39fe6b86-4d6e-8d9b-96f6-0846c7d36e62@gmail.com>
References: <CAEJTLzMw03xw18DBoSWJUw9LmtF2gRMT+ze4puKZUtUmT8r3=A@mail.gmail.com>
 <25832.44957.847418.690770@rob.eddelbuettel.com>
 <CALK03d20nf5xhEvhM9RQmM=+pntkNNKrx_mSAoDZGFomPU9KCg@mail.gmail.com>
 <39fe6b86-4d6e-8d9b-96f6-0846c7d36e62@gmail.com>
Message-ID: <25833.13005.539098.412130@rob.eddelbuettel.com>


On 25 August 2023 at 18:45, Duncan Murdoch wrote:
| The real problem is that there are two stubborn groups opposing each 
| other:  the data.table developers and the CRAN maintainers.  The former 
| think users should by default dedicate their whole machine to 
| data.table.  The latter think users should opt in to do that.

No, it feels more like it is CRAN versus the rest of the world.

Take but one example, and as I may have mentioned elsewhere, my day job
consists in providing software so that (to take one recent example)
bioinformatics specialist can slice huge amounts of genomics data.  When that
happens on a dedicated (expensive) hardware with dozens of cores, it would be
wasteful to have an unconditional default of two threads. It would be the end
of R among serious people, no more, no less. Can you imagine how the internet
headlines would go: "R defaults to two threads". 

And it is not just data.table as even in the long thread over in its repo we
have people chiming in using OpenMP in their code (as data.table does but
which needs a different setter than the data.table thread count).

It is the CRAN servers which (rightly !!) want to impose constraints for when
packages are tested.  Nobody objects to that.

But some of us wonder if settings these defaults for all R user, all the
time, unconditional is really the right thing to do.  Anyway, Uwe told me he
will take it to an internal discussion, so let's hope sanity prevails.

Dirk
-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Sat Aug 26 01:28:20 2023
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Fri, 25 Aug 2023 16:28:20 -0700
Subject: [R-pkg-devel] 
 Re-building vignettes had CPU time 9.2 times elapsed time
In-Reply-To: <25833.13005.539098.412130@rob.eddelbuettel.com>
References: <CAEJTLzMw03xw18DBoSWJUw9LmtF2gRMT+ze4puKZUtUmT8r3=A@mail.gmail.com>
 <25832.44957.847418.690770@rob.eddelbuettel.com>
 <CALK03d20nf5xhEvhM9RQmM=+pntkNNKrx_mSAoDZGFomPU9KCg@mail.gmail.com>
 <39fe6b86-4d6e-8d9b-96f6-0846c7d36e62@gmail.com>
 <25833.13005.539098.412130@rob.eddelbuettel.com>
Message-ID: <8C9C5CCF-D036-43A7-B33F-8538861C1527@dcn.davis.ca.us>

Sanity seems to be in the eye of the beholder. FWIW I am certainly not CRAN or R Core, but I pretty strongly disagree with any package that defaults to using more than 2 cores. If I am using a shared HPC I can get in trouble if I over-consume cpu resources ... i.e. I may be given access to 10 cores out of 128, and I would rather be reading the documentation to figure out how to boost performance on my own time rather than getting kicked out for not playing nice on the sysadmin's schedule.

Data.table can do lots of things to educate users how to or make it easier to reserve more resources, but they cannot argue with my sysadmin for me.

On August 25, 2023 4:01:33 PM PDT, Dirk Eddelbuettel <edd at debian.org> wrote:
>
>On 25 August 2023 at 18:45, Duncan Murdoch wrote:
>| The real problem is that there are two stubborn groups opposing each 
>| other:  the data.table developers and the CRAN maintainers.  The former 
>| think users should by default dedicate their whole machine to 
>| data.table.  The latter think users should opt in to do that.
>
>No, it feels more like it is CRAN versus the rest of the world.
>
>Take but one example, and as I may have mentioned elsewhere, my day job
>consists in providing software so that (to take one recent example)
>bioinformatics specialist can slice huge amounts of genomics data.  When that
>happens on a dedicated (expensive) hardware with dozens of cores, it would be
>wasteful to have an unconditional default of two threads. It would be the end
>of R among serious people, no more, no less. Can you imagine how the internet
>headlines would go: "R defaults to two threads". 
>
>And it is not just data.table as even in the long thread over in its repo we
>have people chiming in using OpenMP in their code (as data.table does but
>which needs a different setter than the data.table thread count).
>
>It is the CRAN servers which (rightly !!) want to impose constraints for when
>packages are tested.  Nobody objects to that.
>
>But some of us wonder if settings these defaults for all R user, all the
>time, unconditional is really the right thing to do.  Anyway, Uwe told me he
>will take it to an internal discussion, so let's hope sanity prevails.
>
>Dirk

-- 
Sent from my phone. Please excuse my brevity.


From @|mon@urb@nek @end|ng |rom R-project@org  Sat Aug 26 02:05:06 2023
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Sat, 26 Aug 2023 12:05:06 +1200
Subject: [R-pkg-devel] 
 Re-building vignettes had CPU time 9.2 times elapsed time
In-Reply-To: <25833.13005.539098.412130@rob.eddelbuettel.com>
References: <CAEJTLzMw03xw18DBoSWJUw9LmtF2gRMT+ze4puKZUtUmT8r3=A@mail.gmail.com>
 <25832.44957.847418.690770@rob.eddelbuettel.com>
 <CALK03d20nf5xhEvhM9RQmM=+pntkNNKrx_mSAoDZGFomPU9KCg@mail.gmail.com>
 <39fe6b86-4d6e-8d9b-96f6-0846c7d36e62@gmail.com>
 <25833.13005.539098.412130@rob.eddelbuettel.com>
Message-ID: <C6E35AE4-FEAF-458A-AC3A-C067348D51B3@R-project.org>



> On Aug 26, 2023, at 11:01 AM, Dirk Eddelbuettel <edd at debian.org> wrote:
> 
> 
> On 25 August 2023 at 18:45, Duncan Murdoch wrote:
> | The real problem is that there are two stubborn groups opposing each 
> | other:  the data.table developers and the CRAN maintainers.  The former 
> | think users should by default dedicate their whole machine to 
> | data.table.  The latter think users should opt in to do that.
> 
> No, it feels more like it is CRAN versus the rest of the world.
> 


In reality it's more people running R on their laptops vs the rest of the world. Although people with laptops are the vast majority, they also are the least impacted by the decision going either way. I think Jeff summed up the core reasoning pretty well. Harm is done by excessive use, not other other way around.

That said, I think this thread is really missing the key point: there is no central mechanism that would govern the use of CPU resources. OMP_THREAD_LIMIT is just one of may ways and even that is vastly insufficient for reasons discussed (e.g, recursive use of processes). It is not CRAN's responsibility to figure out for each package what it needs to behave sanely - it has no way of knowing what type of parallelism is used, under which circumstances and how to control it. Only the package author knows that (hopefully), which is why it's on them. So instead of complaining here better use of time would be to look at what's being used in packages and come up with a unified approach to monitoring core usage and a mechanism by which the packages could self-govern to respect the desired limits. If there was one canonical place, it would be also easy for users to opt in/out as they desire - and I'd be happy to help if any components of it need to be in core R.



> Take but one example, and as I may have mentioned elsewhere, my day job consists in providing software so that (to take one recent example) bioinformatics specialist can slice huge amounts of genomics data.  When that happens on a dedicated (expensive) hardware with dozens of cores, it would be wasteful to have an unconditional default of two threads. It would be the end of R among serious people, no more, no less. Can you imagine how the internet headlines would go: "R defaults to two threads". 
> 

If you run on such a machine then you or your admin certainly know how to set the desired limits. From experience the problem is exactly the opposite - it's far more common for users to not know how to not overload such a machine. As for internet headlines, they will always be saying blatantly false things like "R is not for large data" even though we have been using it to analyze terabytes of data per minute ...

Cheers,
Simon



> And it is not just data.table as even in the long thread over in its repo we have people chiming in using OpenMP in their code (as data.table does but which needs a different setter than the data.table thread count).
> 
> It is the CRAN servers which (rightly !!) want to impose constraints for when packages are tested.  Nobody objects to that.
> 
> But some of us wonder if settings these defaults for all R user, all the time, unconditional is really the right thing to do.  Anyway, Uwe told me he will take it to an internal discussion, so let's hope sanity prevails.
> 


From edd @end|ng |rom deb|@n@org  Sat Aug 26 03:17:04 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Fri, 25 Aug 2023 20:17:04 -0500
Subject: [R-pkg-devel] 
 Re-building vignettes had CPU time 9.2 times elapsed time
In-Reply-To: <C6E35AE4-FEAF-458A-AC3A-C067348D51B3@R-project.org>
References: <CAEJTLzMw03xw18DBoSWJUw9LmtF2gRMT+ze4puKZUtUmT8r3=A@mail.gmail.com>
 <25832.44957.847418.690770@rob.eddelbuettel.com>
 <CALK03d20nf5xhEvhM9RQmM=+pntkNNKrx_mSAoDZGFomPU9KCg@mail.gmail.com>
 <39fe6b86-4d6e-8d9b-96f6-0846c7d36e62@gmail.com>
 <25833.13005.539098.412130@rob.eddelbuettel.com>
 <C6E35AE4-FEAF-458A-AC3A-C067348D51B3@R-project.org>
Message-ID: <25833.21136.715800.373319@rob.eddelbuettel.com>


On 26 August 2023 at 12:05, Simon Urbanek wrote:
| In reality it's more people running R on their laptops vs the rest of the world.

My point was that we also have 'single user on really Yuge workstation'. 

Plus we all know that those users are often not sysadmins, and do not have
our levels of accumulated systems knowledge.

So we should give _more_ power by default, not less.

| [...] they will always be saying blatantly false things like "R is not for large data"

By limiting R (and/or packages) to two threads we will only get more of
these.  Our collective call.

This whole thread is pretty sad, actually.

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Sat Aug 26 03:48:50 2023
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Fri, 25 Aug 2023 18:48:50 -0700
Subject: [R-pkg-devel] 
 Re-building vignettes had CPU time 9.2 times elapsed time
In-Reply-To: <25833.21136.715800.373319@rob.eddelbuettel.com>
References: <CAEJTLzMw03xw18DBoSWJUw9LmtF2gRMT+ze4puKZUtUmT8r3=A@mail.gmail.com>
 <25832.44957.847418.690770@rob.eddelbuettel.com>
 <CALK03d20nf5xhEvhM9RQmM=+pntkNNKrx_mSAoDZGFomPU9KCg@mail.gmail.com>
 <39fe6b86-4d6e-8d9b-96f6-0846c7d36e62@gmail.com>
 <25833.13005.539098.412130@rob.eddelbuettel.com>
 <C6E35AE4-FEAF-458A-AC3A-C067348D51B3@R-project.org>
 <25833.21136.715800.373319@rob.eddelbuettel.com>
Message-ID: <94DE2363-6ED8-43FD-BD2E-5BB458724D68@dcn.davis.ca.us>

You have a really bizarre way of twisting what others are saying, Dirk. I have seen no-one here saying 'limit R to 2 threads' except for you, as a way to paint opposing views to be absurd.

What _is_ being said is that users need to be in control_, but _the default needs to do least harm_ until those users take responsibility for that control. Do not turn the throttle up until the user is prepared for the consequences. Trying to subvert that responsibility into packages by default is going to make more trouble than giving the people using those packages simple examples of how to take that control.

A similar problem happens when users discover .Rprofile and insert all those pesky library statements into it, making their scripts irreproducible. If data.table made a warp10() function that activated this current default performance setting then the user would be clearly at fault for using it in an inappropriate environment like a shared HPC or the CRAN servers. Don't put a brick on the accelerator of a teenager's car before they even figure out where the brakes are.

On August 25, 2023 6:17:04 PM PDT, Dirk Eddelbuettel <edd at debian.org> wrote:
>
>On 26 August 2023 at 12:05, Simon Urbanek wrote:
>| In reality it's more people running R on their laptops vs the rest of the world.
>
>My point was that we also have 'single user on really Yuge workstation'. 
>
>Plus we all know that those users are often not sysadmins, and do not have
>our levels of accumulated systems knowledge.
>
>So we should give _more_ power by default, not less.
>
>| [...] they will always be saying blatantly false things like "R is not for large data"
>
>By limiting R (and/or packages) to two threads we will only get more of
>these.  Our collective call.
>
>This whole thread is pretty sad, actually.
>
>Dirk
>

-- 
Sent from my phone. Please excuse my brevity.


From edd @end|ng |rom deb|@n@org  Sat Aug 26 04:09:50 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Fri, 25 Aug 2023 21:09:50 -0500
Subject: [R-pkg-devel] 
 Re-building vignettes had CPU time 9.2 times elapsed time
In-Reply-To: <94DE2363-6ED8-43FD-BD2E-5BB458724D68@dcn.davis.ca.us>
References: <CAEJTLzMw03xw18DBoSWJUw9LmtF2gRMT+ze4puKZUtUmT8r3=A@mail.gmail.com>
 <25832.44957.847418.690770@rob.eddelbuettel.com>
 <CALK03d20nf5xhEvhM9RQmM=+pntkNNKrx_mSAoDZGFomPU9KCg@mail.gmail.com>
 <39fe6b86-4d6e-8d9b-96f6-0846c7d36e62@gmail.com>
 <25833.13005.539098.412130@rob.eddelbuettel.com>
 <C6E35AE4-FEAF-458A-AC3A-C067348D51B3@R-project.org>
 <25833.21136.715800.373319@rob.eddelbuettel.com>
 <94DE2363-6ED8-43FD-BD2E-5BB458724D68@dcn.davis.ca.us>
Message-ID: <25833.24302.740292.341938@rob.eddelbuettel.com>


On 25 August 2023 at 18:48, Jeff Newmiller wrote:
| You have a really bizarre way of twisting what others are saying, Dirk. I have seen no-one here saying 'limit R to 2 threads' except for you, as a way to paint opposing views to be absurd.

That's too cute.

Nobody needs to repeat it, and some of us know that "it is law"
as the "CRAN Repository Policy" (which each package uploads
promises to adhere to) says
 
   If running a package uses multiple threads/cores it must never
   use more than two simultaneously: the check farm is a shared
   resource and will typically be running many checks
   simultaneously.

You may find reading the document informative. The source reference
(mirrored for convenience at GH) of that line is

https://github.com/r-devel/r-dev-web/blob/master/CRAN/Policy/CRAN_policies.texi#L244-L246

and the rendered page is at https://cran.r-project.org/web/packages/policies.html

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From greg @end|ng |rom ||rm@n@y@h@com  Sat Aug 26 04:13:57 2023
From: greg @end|ng |rom ||rm@n@y@h@com (Greg Hunt)
Date: Sat, 26 Aug 2023 12:13:57 +1000
Subject: [R-pkg-devel] 
 Re-building vignettes had CPU time 9.2 times elapsed time
In-Reply-To: <94DE2363-6ED8-43FD-BD2E-5BB458724D68@dcn.davis.ca.us>
References: <CAEJTLzMw03xw18DBoSWJUw9LmtF2gRMT+ze4puKZUtUmT8r3=A@mail.gmail.com>
 <25832.44957.847418.690770@rob.eddelbuettel.com>
 <CALK03d20nf5xhEvhM9RQmM=+pntkNNKrx_mSAoDZGFomPU9KCg@mail.gmail.com>
 <39fe6b86-4d6e-8d9b-96f6-0846c7d36e62@gmail.com>
 <25833.13005.539098.412130@rob.eddelbuettel.com>
 <C6E35AE4-FEAF-458A-AC3A-C067348D51B3@R-project.org>
 <25833.21136.715800.373319@rob.eddelbuettel.com>
 <94DE2363-6ED8-43FD-BD2E-5BB458724D68@dcn.davis.ca.us>
Message-ID: <CAAS8PAK+aiMgU1TvRfvb1PkQJNDiiZ2nSj5zjq9zZ2i7wBQBrQ@mail.gmail.com>

The question should be, in how many cases is the current behaviour a
problem?  In a shared environment, sure, you have to be more careful.  I'd
say don't let the teenagers in there. The CRAN build server does need to do
something to protect itself and I don't greatly mind the 2 thread limit, I
implemented it by hand in my examples and didn't think about it
afterwards.  On most 8, 16 or 32 way environments, dedicated or
semi-dedicated to a particular workload, the defaults make some level of
sense and they are probably most of the use cases.  Protecting high
processor count environments from people who don't know what they are doing
would seem to be a mismatch between the people and the environment, not so
much a matter of software.

On Sat, 26 Aug 2023 at 11:49, Jeff Newmiller <jdnewmil at dcn.davis.ca.us>
wrote:

> You have a really bizarre way of twisting what others are saying, Dirk. I
> have seen no-one here saying 'limit R to 2 threads' except for you, as a
> way to paint opposing views to be absurd.
>
> What _is_ being said is that users need to be in control_, but _the
> default needs to do least harm_ until those users take responsibility for
> that control. Do not turn the throttle up until the user is prepared for
> the consequences. Trying to subvert that responsibility into packages by
> default is going to make more trouble than giving the people using those
> packages simple examples of how to take that control.
>
> A similar problem happens when users discover .Rprofile and insert all
> those pesky library statements into it, making their scripts
> irreproducible. If data.table made a warp10() function that activated this
> current default performance setting then the user would be clearly at fault
> for using it in an inappropriate environment like a shared HPC or the CRAN
> servers. Don't put a brick on the accelerator of a teenager's car before
> they even figure out where the brakes are.
>
> On August 25, 2023 6:17:04 PM PDT, Dirk Eddelbuettel <edd at debian.org>
> wrote:
> >
> >On 26 August 2023 at 12:05, Simon Urbanek wrote:
> >| In reality it's more people running R on their laptops vs the rest of
> the world.
> >
> >My point was that we also have 'single user on really Yuge workstation'.
> >
> >Plus we all know that those users are often not sysadmins, and do not have
> >our levels of accumulated systems knowledge.
> >
> >So we should give _more_ power by default, not less.
> >
> >| [...] they will always be saying blatantly false things like "R is not
> for large data"
> >
> >By limiting R (and/or packages) to two threads we will only get more of
> >these.  Our collective call.
> >
> >This whole thread is pretty sad, actually.
> >
> >Dirk
> >
>
> --
> Sent from my phone. Please excuse my brevity.
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From t|m@t@y|or @end|ng |rom h|ddene|eph@nt@@co@uk  Sat Aug 26 10:15:40 2023
From: t|m@t@y|or @end|ng |rom h|ddene|eph@nt@@co@uk (Tim Taylor)
Date: Sat, 26 Aug 2023 09:15:40 +0100
Subject: [R-pkg-devel] 
 Re-building vignettes had CPU time 9.2 times elapsed time
In-Reply-To: <CAAS8PAK+aiMgU1TvRfvb1PkQJNDiiZ2nSj5zjq9zZ2i7wBQBrQ@mail.gmail.com>
References: <CAAS8PAK+aiMgU1TvRfvb1PkQJNDiiZ2nSj5zjq9zZ2i7wBQBrQ@mail.gmail.com>
Message-ID: <54057A0B-8271-49A8-A615-FB8139595A5C@hiddenelephants.co.uk>

I?m definitely sympathetic to both sides but have come around to the view of Greg, Dirk et al. It seems sensible to have a default that benefits the majority of ?normal? users and require explicit action in shared environments not vice-versa.

That is not to say that data.table could not do better with it?s heuristics (e.g. respecting CGroups settings as raised by Henrik in https://github.com/Rdatatable/data.table/issues/5620) but the current defaults (50%) seem reasonable for, dare I say, most users.

Tim

> On 26 Aug 2023, at 03:20, Greg Hunt <greg at firmansyah.com> wrote:
> 
> ?The question should be, in how many cases is the current behaviour a
> problem?  In a shared environment, sure, you have to be more careful.  I'd
> say don't let the teenagers in there. The CRAN build server does need to do
> something to protect itself and I don't greatly mind the 2 thread limit, I
> implemented it by hand in my examples and didn't think about it
> afterwards.  On most 8, 16 or 32 way environments, dedicated or
> semi-dedicated to a particular workload, the defaults make some level of
> sense and they are probably most of the use cases.  Protecting high
> processor count environments from people who don't know what they are doing
> would seem to be a mismatch between the people and the environment, not so
> much a matter of software.
> 
>> On Sat, 26 Aug 2023 at 11:49, Jeff Newmiller <jdnewmil at dcn.davis.ca.us>
>> wrote:
>> 
>> You have a really bizarre way of twisting what others are saying, Dirk. I
>> have seen no-one here saying 'limit R to 2 threads' except for you, as a
>> way to paint opposing views to be absurd.
>> 
>> What _is_ being said is that users need to be in control_, but _the
>> default needs to do least harm_ until those users take responsibility for
>> that control. Do not turn the throttle up until the user is prepared for
>> the consequences. Trying to subvert that responsibility into packages by
>> default is going to make more trouble than giving the people using those
>> packages simple examples of how to take that control.
>> 
>> A similar problem happens when users discover .Rprofile and insert all
>> those pesky library statements into it, making their scripts
>> irreproducible. If data.table made a warp10() function that activated this
>> current default performance setting then the user would be clearly at fault
>> for using it in an inappropriate environment like a shared HPC or the CRAN
>> servers. Don't put a brick on the accelerator of a teenager's car before
>> they even figure out where the brakes are.
>> 
>>> On August 25, 2023 6:17:04 PM PDT, Dirk Eddelbuettel <edd at debian.org>
>>> wrote:
>>> 
>>>> On 26 August 2023 at 12:05, Simon Urbanek wrote:
>>> | In reality it's more people running R on their laptops vs the rest of
>> the world.
>>> 
>>> My point was that we also have 'single user on really Yuge workstation'.
>>> 
>>> Plus we all know that those users are often not sysadmins, and do not have
>>> our levels of accumulated systems knowledge.
>>> 
>>> So we should give _more_ power by default, not less.
>>> 
>>> | [...] they will always be saying blatantly false things like "R is not
>> for large data"
>>> 
>>> By limiting R (and/or packages) to two threads we will only get more of
>>> these.  Our collective call.
>>> 
>>> This whole thread is pretty sad, actually.
>>> 
>>> Dirk
>>> 
>> 
>> --
>> Sent from my phone. Please excuse my brevity.
>> 
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> 
> 
>    [[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

	[[alternative HTML version deleted]]


From t@1@1@ndn @end|ng |rom gm@||@com  Sat Aug 26 04:46:44 2023
From: t@1@1@ndn @end|ng |rom gm@||@com (SHIMA Tatsuya)
Date: Sat, 26 Aug 2023 11:46:44 +0900
Subject: [R-pkg-devel] What to do when a package is archived from CRAN
Message-ID: <08ba44ac-fd5c-4e45-b310-7ce9372ea1a3@gmail.com>

Hi,

I noticed that my submitted package `prqlr` 0.5.0 was archived from CRAN 
on 2023-08-19.
<https://CRAN.R-project.org/package=prqlr>

I submitted prqlr 0.5.0 on 2023-08-13. I believe I have since only 
received word from CRAN that it passed the automated release process. 
<https://github.com/eitsupi/prqlr/pull/161>
So I was very surprised to find out after I returned from my trip that 
this was archived.

The CRAN page says "Archived on 2023-08-19 for policy violation. " but I 
don't know what exactly was the problem.
I have no idea what more to fix as I believe I have solved all the 
problems when I submitted 0.5.0.

Is there any way to know what exactly was the problem?
(I thought I sent an e-mail to CRAN 5 days ago but have not yet received 
an answer, so I decided to ask my question on this mailing list, 
thinking that there is a possibility that there will be no answer to my 
e-mail, although I may have to wait a few weeks for an answer. My 
apologies if this idea is incorrect.)

Best,
Tatsuya


From @@r@h@go@|ee @end|ng |rom gm@||@com  Sat Aug 26 22:29:10 2023
From: @@r@h@go@|ee @end|ng |rom gm@||@com (Sarah Goslee)
Date: Sat, 26 Aug 2023 16:29:10 -0400
Subject: [R-pkg-devel] What to do when a package is archived from CRAN
In-Reply-To: <08ba44ac-fd5c-4e45-b310-7ce9372ea1a3@gmail.com>
References: <08ba44ac-fd5c-4e45-b310-7ce9372ea1a3@gmail.com>
Message-ID: <CAM_vjukDYiedNa+O6_Gce5M9VAG9gm_h=WHxcFmk6ZtCk5suuw@mail.gmail.com>

Hi,

You can generally see what the reason is from the archive page, where it says:
A summary of the most recent check results can be obtained from the
check results archive.

On that page, https://cran-archive.r-project.org/web/checks/2023/2023-08-19_check_results_prqlr.html
is the note:

Version: 0.5.0
Check: installed package size
Result: NOTE
     installed size is 18.5Mb
     sub-directories of 1Mb or more:
     libs 18.2Mb

This is too big for CRAN, see
https://cran.r-project.org/web/packages/policies.html quoted here:

Packages should be of the minimum necessary size. Reasonable
compression should be used for data (not just .rda files) and PDF
documentation: CRAN will if necessary pass the latter through qpdf.

As a general rule, neither data nor documentation should exceed 5MB
(which covers several books). A CRAN package is not an appropriate way
to distribute course notes, and authors will be asked to trim their
documentation to a maximum of 5MB.

Where a large amount of data is required (even after compression),
consideration should be given to a separate data-only package which
can be updated only rarely (since older versions of packages are
archived in perpetuity).

Similar considerations apply to other forms of ?data?, e.g., .jar files.

Source package tarballs should if possible not exceed 10MB. It is much
preferred that third-party source software should be included within
the package (as e.g. a vendor.tar.xz file) than be downloaded at
installation: if this requires a larger tarball a modestly increased
limit can be requested at submission.

Sarah

On Sat, Aug 26, 2023 at 4:26?PM SHIMA Tatsuya <ts1s1andn at gmail.com> wrote:
>
> Hi,
>
> I noticed that my submitted package `prqlr` 0.5.0 was archived from CRAN
> on 2023-08-19.
> <https://CRAN.R-project.org/package=prqlr>
>
> I submitted prqlr 0.5.0 on 2023-08-13. I believe I have since only
> received word from CRAN that it passed the automated release process.
> <https://github.com/eitsupi/prqlr/pull/161>
> So I was very surprised to find out after I returned from my trip that
> this was archived.
>
> The CRAN page says "Archived on 2023-08-19 for policy violation. " but I
> don't know what exactly was the problem.
> I have no idea what more to fix as I believe I have solved all the
> problems when I submitted 0.5.0.
>
> Is there any way to know what exactly was the problem?
> (I thought I sent an e-mail to CRAN 5 days ago but have not yet received
> an answer, so I decided to ask my question on this mailing list,
> thinking that there is a possibility that there will be no answer to my
> e-mail, although I may have to wait a few weeks for an answer. My
> apologies if this idea is incorrect.)
>
> Best,
> Tatsuya
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel



-- 
Sarah Goslee (she/her)
http://www.sarahgoslee.com


From kry|ov@r00t @end|ng |rom gm@||@com  Sat Aug 26 23:22:20 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Sun, 27 Aug 2023 00:22:20 +0300
Subject: [R-pkg-devel] What to do when a package is archived from CRAN
In-Reply-To: <08ba44ac-fd5c-4e45-b310-7ce9372ea1a3@gmail.com>
References: <08ba44ac-fd5c-4e45-b310-7ce9372ea1a3@gmail.com>
Message-ID: <20230827002220.1ac419f9@Tarkus>

On Sat, 26 Aug 2023 11:46:44 +0900
SHIMA Tatsuya <ts1s1andn at gmail.com> wrote:

> I noticed that my submitted package `prqlr` 0.5.0 was archived from
> CRAN on 2023-08-19.
> <https://CRAN.R-project.org/package=prqlr>
> 
> I submitted prqlr 0.5.0 on 2023-08-13. I believe I have since only 
> received word from CRAN that it passed the automated release process. 

Sarah gave a good guess (although there are CRAN packages containing
C++ and Rust code with NOTEs about size of their libs, 18.2Mb is still
a lot), though I do find it strange that you didn't receive anything
from CRAN prior to having your package archived. I don't think I ever
had problems with e-mails being delivered from CRAN to GMail, but we
can't rule that out.

You've obviously made an effort to follow the Rust policy, and I don't
see any obvious problems with this part of the package, although I
haven't tried it myself to verify the installation working offline from
bundled source code.

You've also made an effort to list all the authors of the code
comprising your package in inst/AUTHORS, which is the right thing to do
to avoid making the list of authors in DESCRIPTION long enough to be
unreadable.

You licensed the package as MIT. Are your dependencies compatible with
MIT? All direct dependencies of your Rust code seem to be licensed
under either MIT or Apache-2.0, which seems to be compatible. You named
the copyright holder of your package as "prqlr authors", which may be a
problem. (I think I saw it somewhere that for MIT license, CRAN prefers
the copyright holder to be some kind of legal entity: either the legal
name of a person, or a company, or something like that.)

Could the Rust code or any of the dependencies accidentally write under
the user's home directory or take over the terminal or something like
that?

We might need a response from CRAN after all.

-- 
Best regards,
Ivan


From @|mon@urb@nek @end|ng |rom R-project@org  Sat Aug 26 23:57:08 2023
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Sun, 27 Aug 2023 09:57:08 +1200
Subject: [R-pkg-devel] What to do when a package is archived from CRAN
In-Reply-To: <08ba44ac-fd5c-4e45-b310-7ce9372ea1a3@gmail.com>
References: <08ba44ac-fd5c-4e45-b310-7ce9372ea1a3@gmail.com>
Message-ID: <69AF99EF-78EA-4305-9268-0CB118CEF4E9@R-project.org>

Tatsuya,

What you do is contact CRAN. I don't think anyone here can answer your question, only CRAN can, so ask there.

Generally, packages with sufficiently many Rust dependencies have to be handled manually as they break the size limit, so auto-rejections are normal. Archival is unusual, but it may have fallen through the cracks - but the way to find out is to ask.

One related issue with respect to CRAN policies that I don't see a good solution for is that inst/AUTHORS is patently unhelpful, because most of them say "foo (version ..): foo authors" with no contact, or real names or any links. That seems to be a problem stemming from the Rust community as there doesn't seem to be any accountability with respect to ownership and attribution. I don't know if it's because it's assumed that GitHub history is the canonical source with the provenance, but that gets lost when pulled into the package.

Cheers,
Simon

PS: Your README says "(Rust 1.65 or later)", but the version condition is missing from SystemRequirements.


> On Aug 26, 2023, at 2:46 PM, SHIMA Tatsuya <ts1s1andn at gmail.com> wrote:
> 
> Hi,
> 
> I noticed that my submitted package `prqlr` 0.5.0 was archived from CRAN on 2023-08-19.
> <https://CRAN.R-project.org/package=prqlr>
> 
> I submitted prqlr 0.5.0 on 2023-08-13. I believe I have since only received word from CRAN that it passed the automated release process. <https://github.com/eitsupi/prqlr/pull/161>
> So I was very surprised to find out after I returned from my trip that this was archived.
> 
> The CRAN page says "Archived on 2023-08-19 for policy violation. " but I don't know what exactly was the problem.
> I have no idea what more to fix as I believe I have solved all the problems when I submitted 0.5.0.
> 
> Is there any way to know what exactly was the problem?
> (I thought I sent an e-mail to CRAN 5 days ago but have not yet received an answer, so I decided to ask my question on this mailing list, thinking that there is a possibility that there will be no answer to my e-mail, although I may have to wait a few weeks for an answer. My apologies if this idea is incorrect.)
> 
> Best,
> Tatsuya
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 


From greg @end|ng |rom ||rm@n@y@h@com  Sun Aug 27 02:18:54 2023
From: greg @end|ng |rom ||rm@n@y@h@com (Greg Hunt)
Date: Sun, 27 Aug 2023 10:18:54 +1000
Subject: [R-pkg-devel] 
 Re-building vignettes had CPU time 9.2 times elapsed time
In-Reply-To: <54057A0B-8271-49A8-A615-FB8139595A5C@hiddenelephants.co.uk>
References: <CAAS8PAK+aiMgU1TvRfvb1PkQJNDiiZ2nSj5zjq9zZ2i7wBQBrQ@mail.gmail.com>
 <54057A0B-8271-49A8-A615-FB8139595A5C@hiddenelephants.co.uk>
Message-ID: <CAAS8PA+QNPPOcq-DQca1AqGb2h3is0WH=UYqkb44O4+QZug3yA@mail.gmail.com>

Tim,
I think that things like data.table have a different set of problems
depending on the environment.  Working out what the right degree of
parallelism for an IO workload is is a hard question that depends on the
characteristics of the IO subsystem, the characteristics of the dataset and
on what problem you really have (really how much its worth spending to
achieve an optimal answer).  It would be interesting to see how well
data.table would do with several tens of threads on several tens of
processors reading a file, I suspect it might not be pretty (coordination
overheads could be large relative to the actual gains from IO
parallelism), but its not a subject I've looked at.  It would not
surprise me if the right answer was to cap the number of threads, but that
cap would probably still be higher than the usual number of processors in
the average physical or virtual box.  This stuff is not easy and its
saturated with "it depends" answers.  The underlying problem here is that
to get optimal or optimal-enough behaviour, a 96-way or more box
will require different configuration of the software to an 8 or 16-way VM.


Greg

On Sat, 26 Aug 2023 at 18:15, Tim Taylor <tim.taylor at hiddenelephants.co.uk>
wrote:

> I?m definitely sympathetic to both sides but have come around to the view
> of Greg, Dirk et al. It seems sensible to have a default that benefits the
> majority of ?normal? users and require explicit action in shared
> environments not vice-versa.
>
> That is not to say that data.table could not do better with it?s
> heuristics (e.g. respecting CGroups settings as raised by Henrik in
> https://github.com/Rdatatable/data.table/issues/5620) but the current
> defaults (50%) seem reasonable for, dare I say, most users.
>
> Tim
>
> On 26 Aug 2023, at 03:20, Greg Hunt <greg at firmansyah.com> wrote:
>
> ?The question should be, in how many cases is the current behaviour a
> problem?  In a shared environment, sure, you have to be more careful.  I'd
> say don't let the teenagers in there. The CRAN build server does need to do
> something to protect itself and I don't greatly mind the 2 thread limit, I
> implemented it by hand in my examples and didn't think about it
> afterwards.  On most 8, 16 or 32 way environments, dedicated or
> semi-dedicated to a particular workload, the defaults make some level of
> sense and they are probably most of the use cases.  Protecting high
> processor count environments from people who don't know what they are doing
> would seem to be a mismatch between the people and the environment, not so
> much a matter of software.
>
> On Sat, 26 Aug 2023 at 11:49, Jeff Newmiller <jdnewmil at dcn.davis.ca.us>
> wrote:
>
> You have a really bizarre way of twisting what others are saying, Dirk. I
>
> have seen no-one here saying 'limit R to 2 threads' except for you, as a
>
> way to paint opposing views to be absurd.
>
>
> What _is_ being said is that users need to be in control_, but _the
>
> default needs to do least harm_ until those users take responsibility for
>
> that control. Do not turn the throttle up until the user is prepared for
>
> the consequences. Trying to subvert that responsibility into packages by
>
> default is going to make more trouble than giving the people using those
>
> packages simple examples of how to take that control.
>
>
> A similar problem happens when users discover .Rprofile and insert all
>
> those pesky library statements into it, making their scripts
>
> irreproducible. If data.table made a warp10() function that activated this
>
> current default performance setting then the user would be clearly at fault
>
> for using it in an inappropriate environment like a shared HPC or the CRAN
>
> servers. Don't put a brick on the accelerator of a teenager's car before
>
> they even figure out where the brakes are.
>
>
> On August 25, 2023 6:17:04 PM PDT, Dirk Eddelbuettel <edd at debian.org>
>
> wrote:
>
>
> On 26 August 2023 at 12:05, Simon Urbanek wrote:
>
> | In reality it's more people running R on their laptops vs the rest of
>
> the world.
>
>
> My point was that we also have 'single user on really Yuge workstation'.
>
>
> Plus we all know that those users are often not sysadmins, and do not have
>
> our levels of accumulated systems knowledge.
>
>
> So we should give _more_ power by default, not less.
>
>
> | [...] they will always be saying blatantly false things like "R is not
>
> for large data"
>
>
> By limiting R (and/or packages) to two threads we will only get more of
>
> these.  Our collective call.
>
>
> This whole thread is pretty sad, actually.
>
>
> Dirk
>
>
>
> --
>
> Sent from my phone. Please excuse my brevity.
>
>
> ______________________________________________
>
> R-package-devel at r-project.org mailing list
>
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>
>
>    [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>

	[[alternative HTML version deleted]]


From yut@n|@|n| @end|ng |rom gm@||@com  Sun Aug 27 04:19:28 2023
From: yut@n|@|n| @end|ng |rom gm@||@com (Hiroaki Yutani)
Date: Sun, 27 Aug 2023 11:19:28 +0900
Subject: [R-pkg-devel] What to do when a package is archived from CRAN
In-Reply-To: <69AF99EF-78EA-4305-9268-0CB118CEF4E9@R-project.org>
References: <08ba44ac-fd5c-4e45-b310-7ce9372ea1a3@gmail.com>
 <69AF99EF-78EA-4305-9268-0CB118CEF4E9@R-project.org>
Message-ID: <CALyqOb-5whKr4gmsxF6zxUofrTWWiGpF_OQJfycKzypDb57Y6Q@mail.gmail.com>

Simon,

> it's assumed that GitHub history is the canonical source with the
provenance, but that gets lost when pulled into the package.

No, not GitHub. You can usually find the ownership on crates.io. So, if you
want a target to blame, it's probably just a problem of the script to
auto-generate inst/AUTHORS in this specific case. But, clearly, Rust's
ecosystem works soundly under the existence of crates.io, so I think this
is the same kind of pain which you would feel if you use R without CRAN.

Sorry for nitpicking.

Best,
Yutani

2023?8?27?(?) 6:57 Simon Urbanek <simon.urbanek at r-project.org>:

> Tatsuya,
>
> What you do is contact CRAN. I don't think anyone here can answer your
> question, only CRAN can, so ask there.
>
> Generally, packages with sufficiently many Rust dependencies have to be
> handled manually as they break the size limit, so auto-rejections are
> normal. Archival is unusual, but it may have fallen through the cracks -
> but the way to find out is to ask.
>
> One related issue with respect to CRAN policies that I don't see a good
> solution for is that inst/AUTHORS is patently unhelpful, because most of
> them say "foo (version ..): foo authors" with no contact, or real names or
> any links. That seems to be a problem stemming from the Rust community as
> there doesn't seem to be any accountability with respect to ownership and
> attribution. I don't know if it's because it's assumed that GitHub history
> is the canonical source with the provenance, but that gets lost when pulled
> into the package.
>
> Cheers,
> Simon
>
> PS: Your README says "(Rust 1.65 or later)", but the version condition is
> missing from SystemRequirements.
>
>
> > On Aug 26, 2023, at 2:46 PM, SHIMA Tatsuya <ts1s1andn at gmail.com> wrote:
> >
> > Hi,
> >
> > I noticed that my submitted package `prqlr` 0.5.0 was archived from CRAN
> on 2023-08-19.
> > <https://CRAN.R-project.org/package=prqlr>
> >
> > I submitted prqlr 0.5.0 on 2023-08-13. I believe I have since only
> received word from CRAN that it passed the automated release process. <
> https://github.com/eitsupi/prqlr/pull/161>
> > So I was very surprised to find out after I returned from my trip that
> this was archived.
> >
> > The CRAN page says "Archived on 2023-08-19 for policy violation. " but I
> don't know what exactly was the problem.
> > I have no idea what more to fix as I believe I have solved all the
> problems when I submitted 0.5.0.
> >
> > Is there any way to know what exactly was the problem?
> > (I thought I sent an e-mail to CRAN 5 days ago but have not yet received
> an answer, so I decided to ask my question on this mailing list, thinking
> that there is a possibility that there will be no answer to my e-mail,
> although I may have to wait a few weeks for an answer. My apologies if this
> idea is incorrect.)
> >
> > Best,
> > Tatsuya
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From @|mon@urb@nek @end|ng |rom R-project@org  Sun Aug 27 05:07:50 2023
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Sun, 27 Aug 2023 15:07:50 +1200
Subject: [R-pkg-devel] What to do when a package is archived from CRAN
In-Reply-To: <CALyqOb-5whKr4gmsxF6zxUofrTWWiGpF_OQJfycKzypDb57Y6Q@mail.gmail.com>
References: <08ba44ac-fd5c-4e45-b310-7ce9372ea1a3@gmail.com>
 <69AF99EF-78EA-4305-9268-0CB118CEF4E9@R-project.org>
 <CALyqOb-5whKr4gmsxF6zxUofrTWWiGpF_OQJfycKzypDb57Y6Q@mail.gmail.com>
Message-ID: <44F7EFC1-8643-4942-BF42-CE2DFF1795F7@R-project.org>

Yutani,


> On Aug 27, 2023, at 2:19 PM, Hiroaki Yutani <yutani.ini at gmail.com> wrote:
> 
> Simon,
> 
> > it's assumed that GitHub history is the canonical source with the provenance, but that gets lost when pulled into the package.
> 
> No, not GitHub. You can usually find the ownership on crates.io <http://crates.io/>. So, if you want a target to blame, it's probably just a problem of the script to auto-generate inst/AUTHORS in this specific case. But, clearly, Rust's ecosystem works soundly under the existence of crates.io <http://crates.io/>, so I think this is the same kind of pain which you would feel if you use R without CRAN.
> 

Can you elaborate? I have not found anything that would have a list of authors in the sources. I fully agree that I know nothing about it, but even if you use R without CRAN, each package contains that information in the DESCRIPTION file since it's so crucial. So are you saying you have to use crates.io and do some extra step during the (misnamed) "vendor" step? (I didn't see the submitted tar ball of plqrl and its release on GitHub is not the actual package so can't check - thus just trying reverse-engineer what happens by looking at the dependencies which leads to GitHub).


> Sorry for nitpicking.
> 

Sure, good to get the fact straight.

Cheers,
Simon



> Best,
> Yutani
> 
> 2023?8?27?(?) 6:57 Simon Urbanek <simon.urbanek at r-project.org <mailto:simon.urbanek at r-project.org>>:
> Tatsuya,
> 
> What you do is contact CRAN. I don't think anyone here can answer your question, only CRAN can, so ask there.
> 
> Generally, packages with sufficiently many Rust dependencies have to be handled manually as they break the size limit, so auto-rejections are normal. Archival is unusual, but it may have fallen through the cracks - but the way to find out is to ask.
> 
> One related issue with respect to CRAN policies that I don't see a good solution for is that inst/AUTHORS is patently unhelpful, because most of them say "foo (version ..): foo authors" with no contact, or real names or any links. That seems to be a problem stemming from the Rust community as there doesn't seem to be any accountability with respect to ownership and attribution. I don't know if it's because it's assumed that GitHub history is the canonical source with the provenance, but that gets lost when pulled into the package.
> 
> Cheers,
> Simon
> 
> PS: Your README says "(Rust 1.65 or later)", but the version condition is missing from SystemRequirements.
> 
> 
> > On Aug 26, 2023, at 2:46 PM, SHIMA Tatsuya <ts1s1andn at gmail.com <mailto:ts1s1andn at gmail.com>> wrote:
> > 
> > Hi,
> > 
> > I noticed that my submitted package `prqlr` 0.5.0 was archived from CRAN on 2023-08-19.
> > <https://CRAN.R-project.org/package=prqlr <https://cran.r-project.org/package=prqlr>>
> > 
> > I submitted prqlr 0.5.0 on 2023-08-13. I believe I have since only received word from CRAN that it passed the automated release process. <https://github.com/eitsupi/prqlr/pull/161 <https://github.com/eitsupi/prqlr/pull/161>>
> > So I was very surprised to find out after I returned from my trip that this was archived.
> > 
> > The CRAN page says "Archived on 2023-08-19 for policy violation. " but I don't know what exactly was the problem.
> > I have no idea what more to fix as I believe I have solved all the problems when I submitted 0.5.0.
> > 
> > Is there any way to know what exactly was the problem?
> > (I thought I sent an e-mail to CRAN 5 days ago but have not yet received an answer, so I decided to ask my question on this mailing list, thinking that there is a possibility that there will be no answer to my e-mail, although I may have to wait a few weeks for an answer. My apologies if this idea is incorrect.)
> > 
> > Best,
> > Tatsuya
> > 
> > ______________________________________________
> > R-package-devel at r-project.org <mailto:R-package-devel at r-project.org> mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
> > 
> 
> ______________________________________________
> R-package-devel at r-project.org <mailto:R-package-devel at r-project.org> mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel <https://stat.ethz.ch/mailman/listinfo/r-package-devel>


	[[alternative HTML version deleted]]


From yut@n|@|n| @end|ng |rom gm@||@com  Sun Aug 27 07:36:47 2023
From: yut@n|@|n| @end|ng |rom gm@||@com (Hiroaki Yutani)
Date: Sun, 27 Aug 2023 14:36:47 +0900
Subject: [R-pkg-devel] What to do when a package is archived from CRAN
In-Reply-To: <44F7EFC1-8643-4942-BF42-CE2DFF1795F7@R-project.org>
References: <08ba44ac-fd5c-4e45-b310-7ce9372ea1a3@gmail.com>
 <69AF99EF-78EA-4305-9268-0CB118CEF4E9@R-project.org>
 <CALyqOb-5whKr4gmsxF6zxUofrTWWiGpF_OQJfycKzypDb57Y6Q@mail.gmail.com>
 <44F7EFC1-8643-4942-BF42-CE2DFF1795F7@R-project.org>
Message-ID: <CALyqOb_kk3UhssCj-sYif=3aRyVFCGVEk9yxA8s2DkFkPLTJWg@mail.gmail.com>

Simon,

Ok, let's take a look at a real example. The first item of inst/AUTHORS of
prqlr (GitHub version) is this:

    addr2line (version 0.20.0):
      addr2line authors

You can find addr2line's owners on crates.io [1], while its manifest file
(Cargo.toml) [2] doesn't contain the names of its owners or authors. In
Rust's manifest, the "authors" field is optional [3] unlike R. You might
argue "owners" is not the same as "authors," but at least crates.io
provides the names of those who are responsible for the crate.

Let's go back to your question.

> So are you saying you have to use crates.io and do some extra step during
the (misnamed) "vendor" step?

"cargo vendor" doesn't take care of generating the list of authors, so it's
not "during the vender step." It has to be done separately anyway. I was
just saying you **can** use crates.io in that step instead of searching for
the authors manually one by one (or filling it with "foo authors" when the
manifest file doesn't contain any names).

That said, I agree with you in general that the Rust community is
relatively loose about authorship and licensing when compared with R. I
don't think it's necessarily a problem, but the impedance mismatch is a
headache. I was just trying to point out this part of your opinion

> the Rust community as there doesn't seem to be any accountability with
respect to ownership and attribution.

was not quite true. I hope the R community and the Rust community have
respect for each other.

Best,
Yutani

[1]: https://crates.io/crates/addr2line
[2]: https://github.com/gimli-rs/addr2line/blob/0.20.0/Cargo.toml
[3]:
https://doc.rust-lang.org/cargo/reference/manifest.html#the-authors-field


2023?8?27?(?) 12:07 Simon Urbanek <simon.urbanek at r-project.org>:

> Yutani,
>
>
> On Aug 27, 2023, at 2:19 PM, Hiroaki Yutani <yutani.ini at gmail.com> wrote:
>
> Simon,
>
> > it's assumed that GitHub history is the canonical source with the
> provenance, but that gets lost when pulled into the package.
>
> No, not GitHub. You can usually find the ownership on crates.io. So, if
> you want a target to blame, it's probably just a problem of the script to
> auto-generate inst/AUTHORS in this specific case. But, clearly, Rust's
> ecosystem works soundly under the existence of crates.io, so I think this
> is the same kind of pain which you would feel if you use R without CRAN.
>
>
> Can you elaborate? I have not found anything that would have a list of
> authors in the sources. I fully agree that I know nothing about it, but
> even if you use R without CRAN, each package contains that information in
> the DESCRIPTION file since it's so crucial. So are you saying you have to
> use crates.io and do some extra step during the (misnamed) "vendor" step?
> (I didn't see the submitted tar ball of plqrl and its release on GitHub is
> not the actual package so can't check - thus just trying reverse-engineer
> what happens by looking at the dependencies which leads to GitHub).
>
>
> Sorry for nitpicking.
>
>
> Sure, good to get the fact straight.
>
> Cheers,
> Simon
>
>
>
> Best,
> Yutani
>
> 2023?8?27?(?) 6:57 Simon Urbanek <simon.urbanek at r-project.org>:
>
>> Tatsuya,
>>
>> What you do is contact CRAN. I don't think anyone here can answer your
>> question, only CRAN can, so ask there.
>>
>> Generally, packages with sufficiently many Rust dependencies have to be
>> handled manually as they break the size limit, so auto-rejections are
>> normal. Archival is unusual, but it may have fallen through the cracks -
>> but the way to find out is to ask.
>>
>> One related issue with respect to CRAN policies that I don't see a good
>> solution for is that inst/AUTHORS is patently unhelpful, because most of
>> them say "foo (version ..): foo authors" with no contact, or real names or
>> any links. That seems to be a problem stemming from the Rust community as
>> there doesn't seem to be any accountability with respect to ownership and
>> attribution. I don't know if it's because it's assumed that GitHub history
>> is the canonical source with the provenance, but that gets lost when pulled
>> into the package.
>>
>> Cheers,
>> Simon
>>
>> PS: Your README says "(Rust 1.65 or later)", but the version condition is
>> missing from SystemRequirements.
>>
>>
>> > On Aug 26, 2023, at 2:46 PM, SHIMA Tatsuya <ts1s1andn at gmail.com> wrote:
>> >
>> > Hi,
>> >
>> > I noticed that my submitted package `prqlr` 0.5.0 was archived from
>> CRAN on 2023-08-19.
>> > <https://CRAN.R-project.org/package=prqlr
>> <https://cran.r-project.org/package=prqlr>>
>> >
>> > I submitted prqlr 0.5.0 on 2023-08-13. I believe I have since only
>> received word from CRAN that it passed the automated release process. <
>> https://github.com/eitsupi/prqlr/pull/161>
>> > So I was very surprised to find out after I returned from my trip that
>> this was archived.
>> >
>> > The CRAN page says "Archived on 2023-08-19 for policy violation. " but
>> I don't know what exactly was the problem.
>> > I have no idea what more to fix as I believe I have solved all the
>> problems when I submitted 0.5.0.
>> >
>> > Is there any way to know what exactly was the problem?
>> > (I thought I sent an e-mail to CRAN 5 days ago but have not yet
>> received an answer, so I decided to ask my question on this mailing list,
>> thinking that there is a possibility that there will be no answer to my
>> e-mail, although I may have to wait a few weeks for an answer. My apologies
>> if this idea is incorrect.)
>> >
>> > Best,
>> > Tatsuya
>> >
>> > ______________________________________________
>> > R-package-devel at r-project.org mailing list
>> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> >
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>
>

	[[alternative HTML version deleted]]


From t|m@t@y|or @end|ng |rom h|ddene|eph@nt@@co@uk  Sun Aug 27 13:24:41 2023
From: t|m@t@y|or @end|ng |rom h|ddene|eph@nt@@co@uk (Tim Taylor)
Date: Sun, 27 Aug 2023 12:24:41 +0100
Subject: [R-pkg-devel] What to do when a package is archived from CRAN
In-Reply-To: <20230827002220.1ac419f9@Tarkus>
References: <20230827002220.1ac419f9@Tarkus>
Message-ID: <E8BAA352-B7D3-4C31-9AA3-D9C8C853B069@hiddenelephants.co.uk>

Could you have been caught out with the precompiled binary that serde started distributing in a few of it?s versions (https://github.com/serde-rs/serde/issues/2538)? That could have been a reason if you pinned a version with it present but only CRAN could confirm if that was the reason.

Tim

> On 26 Aug 2023, at 22:22, Ivan Krylov <krylov.r00t at gmail.com> wrote:
> 
> ?On Sat, 26 Aug 2023 11:46:44 +0900
> SHIMA Tatsuya <ts1s1andn at gmail.com> wrote:
> 
>> I noticed that my submitted package `prqlr` 0.5.0 was archived from
>> CRAN on 2023-08-19.
>> <https://CRAN.R-project.org/package=prqlr>
>> 
>> I submitted prqlr 0.5.0 on 2023-08-13. I believe I have since only 
>> received word from CRAN that it passed the automated release process. 
> 
> Sarah gave a good guess (although there are CRAN packages containing
> C++ and Rust code with NOTEs about size of their libs, 18.2Mb is still
> a lot), though I do find it strange that you didn't receive anything
> from CRAN prior to having your package archived. I don't think I ever
> had problems with e-mails being delivered from CRAN to GMail, but we
> can't rule that out.
> 
> You've obviously made an effort to follow the Rust policy, and I don't
> see any obvious problems with this part of the package, although I
> haven't tried it myself to verify the installation working offline from
> bundled source code.
> 
> You've also made an effort to list all the authors of the code
> comprising your package in inst/AUTHORS, which is the right thing to do
> to avoid making the list of authors in DESCRIPTION long enough to be
> unreadable.
> 
> You licensed the package as MIT. Are your dependencies compatible with
> MIT? All direct dependencies of your Rust code seem to be licensed
> under either MIT or Apache-2.0, which seems to be compatible. You named
> the copyright holder of your package as "prqlr authors", which may be a
> problem. (I think I saw it somewhere that for MIT license, CRAN prefers
> the copyright holder to be some kind of legal entity: either the legal
> name of a person, or a company, or something like that.)
> 
> Could the Rust code or any of the dependencies accidentally write under
> the user's home directory or take over the terminal or something like
> that?
> 
> We might need a response from CRAN after all.
> 
> -- 
> Best regards,
> Ivan
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

	[[alternative HTML version deleted]]


From t@1@1@ndn @end|ng |rom gm@||@com  Sun Aug 27 16:40:16 2023
From: t@1@1@ndn @end|ng |rom gm@||@com (SHIMA Tatsuya)
Date: Sun, 27 Aug 2023 23:40:16 +0900
Subject: [R-pkg-devel] What to do when a package is archived from CRAN
In-Reply-To: <CAM_vjukDYiedNa+O6_Gce5M9VAG9gm_h=WHxcFmk6ZtCk5suuw@mail.gmail.com>
References: <08ba44ac-fd5c-4e45-b310-7ce9372ea1a3@gmail.com>
 <CAM_vjukDYiedNa+O6_Gce5M9VAG9gm_h=WHxcFmk6ZtCk5suuw@mail.gmail.com>
Message-ID: <a807b157-4c0a-4dff-b050-2f0d9f570187@gmail.com>

Sarah,

Thanks for taking a look at this.
But what we see in the results page is the compiled size, and I think it 
is common for it to be huge.

For example, looking at the arrow package 12.0.1.1 
<https://CRAN.R-project.org/package=arrow 
<https://CRAN.R-project.org/package=arrow>>, the size of the lib seems 
to be 41MB.

Indeed, the size of the first submission of prqlr 0.5.0, which vendored 
all dependent crates, was 12 MB, which of course was not accepted by CRAN.
The second submission, which was eventually accepted, was submitted with 
the vendored tarballs removed, so the source package was smaller.
(By the way, I wrote the following comment when I submitted the second 
time I removed the tarball, which I thought asked for explicit 
permission to download, but I don't know if that was actually read by 
CRAN. 
<https://github.com/eitsupi/prqlr/pull/161/commits/9aba66647fa5e48da0a5983643a4df001721b3f7>)

Best,
Tatsuya

On 2023/08/27 5:29, Sarah Goslee wrote:
> Hi,
>
> You can generally see what the reason is from the archive page, where it says:
> A summary of the most recent check results can be obtained from the
> check results archive.
>
> On that page,https://cran-archive.r-project.org/web/checks/2023/2023-08-19_check_results_prqlr.html
> is the note:
>
> Version: 0.5.0
> Check: installed package size
> Result: NOTE
>       installed size is 18.5Mb
>       sub-directories of 1Mb or more:
>       libs 18.2Mb
>
> This is too big for CRAN, see
> https://cran.r-project.org/web/packages/policies.html  quoted here:
>
> Packages should be of the minimum necessary size. Reasonable
> compression should be used for data (not just .rda files) and PDF
> documentation: CRAN will if necessary pass the latter through qpdf.
>
> As a general rule, neither data nor documentation should exceed 5MB
> (which covers several books). A CRAN package is not an appropriate way
> to distribute course notes, and authors will be asked to trim their
> documentation to a maximum of 5MB.
>
> Where a large amount of data is required (even after compression),
> consideration should be given to a separate data-only package which
> can be updated only rarely (since older versions of packages are
> archived in perpetuity).
>
> Similar considerations apply to other forms of ?data?, e.g., .jar files.
>
> Source package tarballs should if possible not exceed 10MB. It is much
> preferred that third-party source software should be included within
> the package (as e.g. a vendor.tar.xz file) than be downloaded at
> installation: if this requires a larger tarball a modestly increased
> limit can be requested at submission.
>
> Sarah
>
> On Sat, Aug 26, 2023 at 4:26?PM SHIMA Tatsuya<ts1s1andn at gmail.com>  wrote:
>> Hi,
>>
>> I noticed that my submitted package `prqlr` 0.5.0 was archived from CRAN
>> on 2023-08-19.
>> <https://CRAN.R-project.org/package=prqlr>
>>
>> I submitted prqlr 0.5.0 on 2023-08-13. I believe I have since only
>> received word from CRAN that it passed the automated release process.
>> <https://github.com/eitsupi/prqlr/pull/161>
>> So I was very surprised to find out after I returned from my trip that
>> this was archived.
>>
>> The CRAN page says "Archived on 2023-08-19 for policy violation. " but I
>> don't know what exactly was the problem.
>> I have no idea what more to fix as I believe I have solved all the
>> problems when I submitted 0.5.0.
>>
>> Is there any way to know what exactly was the problem?
>> (I thought I sent an e-mail to CRAN 5 days ago but have not yet received
>> an answer, so I decided to ask my question on this mailing list,
>> thinking that there is a possibility that there will be no answer to my
>> e-mail, although I may have to wait a few weeks for an answer. My
>> apologies if this idea is incorrect.)
>>
>> Best,
>> Tatsuya
>>
>> ______________________________________________
>> R-package-devel at r-project.org  mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>
	[[alternative HTML version deleted]]


From t@1@1@ndn @end|ng |rom gm@||@com  Sun Aug 27 17:03:06 2023
From: t@1@1@ndn @end|ng |rom gm@||@com (SHIMA Tatsuya)
Date: Mon, 28 Aug 2023 00:03:06 +0900
Subject: [R-pkg-devel] What to do when a package is archived from CRAN
In-Reply-To: <CALyqOb_kk3UhssCj-sYif=3aRyVFCGVEk9yxA8s2DkFkPLTJWg@mail.gmail.com>
References: <08ba44ac-fd5c-4e45-b310-7ce9372ea1a3@gmail.com>
 <69AF99EF-78EA-4305-9268-0CB118CEF4E9@R-project.org>
 <CALyqOb-5whKr4gmsxF6zxUofrTWWiGpF_OQJfycKzypDb57Y6Q@mail.gmail.com>
 <44F7EFC1-8643-4942-BF42-CE2DFF1795F7@R-project.org>
 <CALyqOb_kk3UhssCj-sYif=3aRyVFCGVEk9yxA8s2DkFkPLTJWg@mail.gmail.com>
Message-ID: <e6f69030-7306-40dd-bd32-a32248ad1d43@gmail.com>

Simon,

Thank you for taking a look at this.

 > One related issue with respect to CRAN policies that I don't see a 
good solution for is that inst/AUTHORS is patently unhelpful, because 
most of them say "foo (version ..): foo authors" with no contact, or 
real names or any links.

I understand your thoughts, but if we look for the inst/AUTHOURS files 
contained in the packages on CRAN, I don't think they always contain the 
contact information.
For example, this is from the igraph package.
<https://github.com/cran/igraph/blob/5e22d808f0341fcaa8944fe893c0980000ce7656/inst/AUTHORS>

Also, I have listed the URLs of the dependent crates (the `repository` 
field of Cargo.toml) in the LICENSE.note file, so we can see where the 
dependent crates are being developed.

Best,
Tatsuya

On 2023/08/27 14:36, Hiroaki Yutani wrote:
> Simon,
>
> Ok, let's take a look at a real example. The first item of 
> inst/AUTHORS of prqlr (GitHub version) is this:
>
> ??? addr2line (version 0.20.0):
> ? ? ? addr2line authors
>
> You can find addr2line's owners on crates.io <http://crates.io> [1], 
> while its manifest file (Cargo.toml) [2] doesn't contain the names of 
> its owners or authors. In Rust's manifest, the "authors" field is 
> optional [3] unlike R. You might argue "owners" is not the same as 
> "authors," but at least crates.io <http://crates.io> provides the 
> names of those who are responsible for the crate.
>
> Let's go back to your question.
>
> > So are you saying you have to use crates.io <http://crates.io> and 
> do some extra step during the (misnamed) "vendor" step?
>
> "cargo vendor" doesn't take care of generating the list of authors, so 
> it's not "during the vender step." It has to be done separately 
> anyway. I was just saying you **can** use crates.io <http://crates.io> 
> in that step instead of searching for the authors manually one by one 
> (or filling it with "foo authors" when the manifest file doesn't 
> contain any names).
>
> That said, I agree with you in general that the Rust community is 
> relatively loose about authorship and licensing when compared with R. 
> I don't think it's necessarily a problem, but the impedance mismatch 
> is a headache. I was just trying to point out this part of your opinion
>
> > the Rust community as there doesn't seem to be any accountability 
> with respect to ownership and attribution.
>
> was not quite true. I hope the R community and the Rust community have 
> respect for each other.
>
> Best,
> Yutani
>
> [1]: https://crates.io/crates/addr2line
> [2]: https://github.com/gimli-rs/addr2line/blob/0.20.0/Cargo.toml
> [3]: 
> https://doc.rust-lang.org/cargo/reference/manifest.html#the-authors-field
>
>
> 2023?8?27?(?) 12:07 Simon Urbanek <simon.urbanek at r-project.org>:
>
>     Yutani,
>
>
>>     On Aug 27, 2023, at 2:19 PM, Hiroaki Yutani
>>     <yutani.ini at gmail.com> wrote:
>>
>>     Simon,
>>
>>     > it's assumed that GitHub history is the canonical source with
>>     the provenance, but that gets lost when pulled into the package.
>>
>>     No, not GitHub. You can usually find the ownership on crates.io
>>     <http://crates.io/>. So, if you want a target to blame, it's
>>     probably just a problem of the script to auto-generate
>>     inst/AUTHORS in this specific case. But, clearly, Rust's
>>     ecosystem works soundly under the existence of crates.io
>>     <http://crates.io/>, so I think this is the same kind of pain
>>     which you would feel if you use R without CRAN.
>>
>
>     Can you elaborate? I have not found anything that would have a
>     list of authors in the sources. I fully agree that I know nothing
>     about it, but even if you use R without CRAN, each package
>     contains that information in the DESCRIPTION file since it's so
>     crucial. So are you saying you have to use crates.io
>     <http://crates.io> and do some extra step during the (misnamed)
>     "vendor" step? (I didn't see the submitted tar ball of plqrl and
>     its release on GitHub is not the actual package so can't check -
>     thus just trying reverse-engineer what happens by looking at the
>     dependencies which leads to GitHub).
>
>
>>     Sorry for nitpicking.
>>
>
>     Sure, good to get the fact straight.
>
>     Cheers,
>     Simon
>
>
>
>>     Best,
>>     Yutani
>>
>>     2023?8?27?(?) 6:57 Simon Urbanek <simon.urbanek at r-project.org>:
>>
>>         Tatsuya,
>>
>>         What you do is contact CRAN. I don't think anyone here can
>>         answer your question, only CRAN can, so ask there.
>>
>>         Generally, packages with sufficiently many Rust dependencies
>>         have to be handled manually as they break the size limit, so
>>         auto-rejections are normal. Archival is unusual, but it may
>>         have fallen through the cracks - but the way to find out is
>>         to ask.
>>
>>         One related issue with respect to CRAN policies that I don't
>>         see a good solution for is that inst/AUTHORS is patently
>>         unhelpful, because most of them say "foo (version ..): foo
>>         authors" with no contact, or real names or any links. That
>>         seems to be a problem stemming from the Rust community as
>>         there doesn't seem to be any accountability with respect to
>>         ownership and attribution. I don't know if it's because it's
>>         assumed that GitHub history is the canonical source with the
>>         provenance, but that gets lost when pulled into the package.
>>
>>         Cheers,
>>         Simon
>>
>>         PS: Your README says "(Rust 1.65 or later)", but the version
>>         condition is missing from SystemRequirements.
>>
>>
>>         > On Aug 26, 2023, at 2:46 PM, SHIMA Tatsuya
>>         <ts1s1andn at gmail.com> wrote:
>>         >
>>         > Hi,
>>         >
>>         > I noticed that my submitted package `prqlr` 0.5.0 was
>>         archived from CRAN on 2023-08-19.
>>         > <https://CRAN.R-project.org/package=prqlr
>>         <https://cran.r-project.org/package=prqlr>>
>>         >
>>         > I submitted prqlr 0.5.0 on 2023-08-13. I believe I have
>>         since only received word from CRAN that it passed the
>>         automated release process.
>>         <https://github.com/eitsupi/prqlr/pull/161>
>>         > So I was very surprised to find out after I returned from
>>         my trip that this was archived.
>>         >
>>         > The CRAN page says "Archived on 2023-08-19 for policy
>>         violation. " but I don't know what exactly was the problem.
>>         > I have no idea what more to fix as I believe I have solved
>>         all the problems when I submitted 0.5.0.
>>         >
>>         > Is there any way to know what exactly was the problem?
>>         > (I thought I sent an e-mail to CRAN 5 days ago but have not
>>         yet received an answer, so I decided to ask my question on
>>         this mailing list, thinking that there is a possibility that
>>         there will be no answer to my e-mail, although I may have to
>>         wait a few weeks for an answer. My apologies if this idea is
>>         incorrect.)
>>         >
>>         > Best,
>>         > Tatsuya
>>         >
>>         > ______________________________________________
>>         > R-package-devel at r-project.org mailing list
>>         > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>         >
>>
>>         ______________________________________________
>>         R-package-devel at r-project.org mailing list
>>         https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>
	[[alternative HTML version deleted]]


From t@1@1@ndn @end|ng |rom gm@||@com  Sun Aug 27 17:17:01 2023
From: t@1@1@ndn @end|ng |rom gm@||@com (SHIMA Tatsuya)
Date: Mon, 28 Aug 2023 00:17:01 +0900
Subject: [R-pkg-devel] What to do when a package is archived from CRAN
In-Reply-To: <20230827002220.1ac419f9@Tarkus>
References: <08ba44ac-fd5c-4e45-b310-7ce9372ea1a3@gmail.com>
 <20230827002220.1ac419f9@Tarkus>
Message-ID: <723f8ff4-47d4-46bc-b2d4-fac01768349e@gmail.com>

Hi Ivan, thanks for taking the time to look at all the details of this.

 > You licensed the package as MIT. Are your dependencies compatible 
with MIT? All direct dependencies of your Rust code seem to be licensed 
under either MIT or Apache-2.0, which seems to be compatible.

I am not a legal expert, but as you have seen all of prqlr's dependent crates are compatible with the MIT license, and I interpret this to mean that there is no problem distributing anything containing them under the MIT license.

 > You named the copyright holder of your package as "prqlr authors", 
which may be a problem. (I think I saw it somewhere that for MIT 
license, CRAN prefers the copyright holder to be some kind of legal 
entity: either the legal name of a person, or a company, or something 
like that.)

I believe some popular R packages (e.g. dplyr) use this notation.

In the first submission of prqlr 0.5.0, CRAN pointed out that the role 
of "The authors of the dependency Rust crates" should be changed to 
author, but nothing else was pointed out.

Best,
Tatsuya

On 2023/08/27 6:22, Ivan Krylov wrote:
> On Sat, 26 Aug 2023 11:46:44 +0900
> SHIMA Tatsuya<ts1s1andn at gmail.com>  wrote:
>
>> I noticed that my submitted package `prqlr` 0.5.0 was archived from
>> CRAN on 2023-08-19.
>> <https://CRAN.R-project.org/package=prqlr>
>>
>> I submitted prqlr 0.5.0 on 2023-08-13. I believe I have since only
>> received word from CRAN that it passed the automated release process.
> Sarah gave a good guess (although there are CRAN packages containing
> C++ and Rust code with NOTEs about size of their libs, 18.2Mb is still
> a lot), though I do find it strange that you didn't receive anything
> from CRAN prior to having your package archived. I don't think I ever
> had problems with e-mails being delivered from CRAN to GMail, but we
> can't rule that out.
>
> You've obviously made an effort to follow the Rust policy, and I don't
> see any obvious problems with this part of the package, although I
> haven't tried it myself to verify the installation working offline from
> bundled source code.
>
> You've also made an effort to list all the authors of the code
> comprising your package in inst/AUTHORS, which is the right thing to do
> to avoid making the list of authors in DESCRIPTION long enough to be
> unreadable.
>
> You licensed the package as MIT. Are your dependencies compatible with
> MIT? All direct dependencies of your Rust code seem to be licensed
> under either MIT or Apache-2.0, which seems to be compatible. You named
> the copyright holder of your package as "prqlr authors", which may be a
> problem. (I think I saw it somewhere that for MIT license, CRAN prefers
> the copyright holder to be some kind of legal entity: either the legal
> name of a person, or a company, or something like that.)
>
> Could the Rust code or any of the dependencies accidentally write under
> the user's home directory or take over the terminal or something like
> that?
>
> We might need a response from CRAN after all.
>
	[[alternative HTML version deleted]]


From t@1@1@ndn @end|ng |rom gm@||@com  Sun Aug 27 17:28:30 2023
From: t@1@1@ndn @end|ng |rom gm@||@com (SHIMA Tatsuya)
Date: Mon, 28 Aug 2023 00:28:30 +0900
Subject: [R-pkg-devel] What to do when a package is archived from CRAN
In-Reply-To: <E8BAA352-B7D3-4C31-9AA3-D9C8C853B069@hiddenelephants.co.uk>
References: <20230827002220.1ac419f9@Tarkus>
 <E8BAA352-B7D3-4C31-9AA3-D9C8C853B069@hiddenelephants.co.uk>
Message-ID: <0651845e-34b0-4986-a575-0dd609777793@gmail.com>

Hi Tim, thank you for sharing this information. i didn't know this.

If this is the cause, the problem seems to have been resolved in the 
latest serde <https://github.com/serde-rs/serde/pull/2590>, so it seems 
to be possible to deal with it.

Best,
Tatsuya

On 2023/08/27 20:24, Tim Taylor wrote:
> Could you have been caught out with the precompiled binary that serde 
> started distributing in a few of it?s versions 
> (https://github.com/serde-rs/serde/issues/2538)? That could have been 
> a reason if you pinned a version with it present but only CRAN could 
> confirm if that was the reason.
>
> Tim
>
>> On 26 Aug 2023, at 22:22, Ivan Krylov <krylov.r00t at gmail.com> wrote:
>>
>> ?On Sat, 26 Aug 2023 11:46:44 +0900
>> SHIMA Tatsuya <ts1s1andn at gmail.com> wrote:
>>
>>> I noticed that my submitted package `prqlr` 0.5.0 was archived from
>>> CRAN on 2023-08-19.
>>> <https://CRAN.R-project.org/package=prqlr>
>>>
>>> I submitted prqlr 0.5.0 on 2023-08-13. I believe I have since only
>>> received word from CRAN that it passed the automated release process.
>>
>> Sarah gave a good guess (although there are CRAN packages containing
>> C++ and Rust code with NOTEs about size of their libs, 18.2Mb is still
>> a lot), though I do find it strange that you didn't receive anything
>> from CRAN prior to having your package archived. I don't think I ever
>> had problems with e-mails being delivered from CRAN to GMail, but we
>> can't rule that out.
>>
>> You've obviously made an effort to follow the Rust policy, and I don't
>> see any obvious problems with this part of the package, although I
>> haven't tried it myself to verify the installation working offline from
>> bundled source code.
>>
>> You've also made an effort to list all the authors of the code
>> comprising your package in inst/AUTHORS, which is the right thing to do
>> to avoid making the list of authors in DESCRIPTION long enough to be
>> unreadable.
>>
>> You licensed the package as MIT. Are your dependencies compatible with
>> MIT? All direct dependencies of your Rust code seem to be licensed
>> under either MIT or Apache-2.0, which seems to be compatible. You named
>> the copyright holder of your package as "prqlr authors", which may be a
>> problem. (I think I saw it somewhere that for MIT license, CRAN prefers
>> the copyright holder to be some kind of legal entity: either the legal
>> name of a person, or a company, or something like that.)
>>
>> Could the Rust code or any of the dependencies accidentally write under
>> the user's home directory or take over the terminal or something like
>> that?
>>
>> We might need a response from CRAN after all.
>>
>> -- 
>> Best regards,
>> Ivan
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From john@m@h@rro|d @end|ng |rom gm@||@com  Sun Aug 27 22:51:24 2023
From: john@m@h@rro|d @end|ng |rom gm@||@com (John Harrold)
Date: Sun, 27 Aug 2023 13:51:24 -0700
Subject: [R-pkg-devel] package submissions no auto-processed message
Message-ID: <CANAiAiXmjQe0Lr5fZtN+ZYU9=vqUpA47GZunp=J_TyLWG9K8MA@mail.gmail.com>

Howdy Folks,

I submitted a package on Friday. I got the normal email where you have to
click on the link to confirm. Then I got an email saying that the package
was uploaded. Normally after that I get an email saying the package was
auto-processed. That generally doesn't take very long (typically less than
an hour). I wanted to know if there was something on the backend that was
causing a delay, or if there was something wrong and I needed to resubmit
it.

Thank you,
John
:wq

	[[alternative HTML version deleted]]


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Sun Aug 27 23:23:07 2023
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Sun, 27 Aug 2023 23:23:07 +0200
Subject: [R-pkg-devel] package submissions no auto-processed message
In-Reply-To: <CANAiAiXmjQe0Lr5fZtN+ZYU9=vqUpA47GZunp=J_TyLWG9K8MA@mail.gmail.com>
References: <CANAiAiXmjQe0Lr5fZtN+ZYU9=vqUpA47GZunp=J_TyLWG9K8MA@mail.gmail.com>
Message-ID: <95bf78bc-7406-281f-651b-89162a180690@statistik.tu-dortmund.de>



On 27.08.2023 22:51, John Harrold wrote:
> Howdy Folks,
> 
> I submitted a package on Friday. I got the normal email where you have to
> click on the link to confirm. Then I got an email saying that the package
> was uploaded. Normally after that I get an email saying the package was
> auto-processed. That generally doesn't take very long (typically less than
> an hour). I wanted to know if there was something on the backend that was
> causing a delay, or if there was something wrong and I needed to resubmit
> it.

Not that I know. If you told us which package this is about ...

Best,
Uwe Ligges




> 
> Thank you,
> John
> :wq
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From ||u|@@rev|||@ @end|ng |rom gm@||@com  Sun Aug 27 23:30:51 2023
From: ||u|@@rev|||@ @end|ng |rom gm@||@com (=?UTF-8?Q?Llu=C3=ADs_Revilla?=)
Date: Sun, 27 Aug 2023 23:30:51 +0200
Subject: [R-pkg-devel] package submissions no auto-processed message
In-Reply-To: <CANAiAiXmjQe0Lr5fZtN+ZYU9=vqUpA47GZunp=J_TyLWG9K8MA@mail.gmail.com>
References: <CANAiAiXmjQe0Lr5fZtN+ZYU9=vqUpA47GZunp=J_TyLWG9K8MA@mail.gmail.com>
Message-ID: <CAN+W6_uX7kZ+dhBiYsJsS+LieHjbQGXGuQkc_2r=15uB9gFW_w@mail.gmail.com>

Hi,

Are you referring to your package formods?
I see it was released the same Friday 17 and it is already on CRAN.

If this is not the package, it might be on the backlog of packages
submitted to CRAN.
You can check the queue at:
https://r-hub.github.io/cransays/articles/dashboard.html

Best,

Llu?s


On Sun, 27 Aug 2023 at 23:16, John Harrold <john.m.harrold at gmail.com> wrote:

> Howdy Folks,
>
> I submitted a package on Friday. I got the normal email where you have to
> click on the link to confirm. Then I got an email saying that the package
> was uploaded. Normally after that I get an email saying the package was
> auto-processed. That generally doesn't take very long (typically less than
> an hour). I wanted to know if there was something on the backend that was
> causing a delay, or if there was something wrong and I needed to resubmit
> it.
>
> Thank you,
> John
> :wq
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Mon Aug 28 01:06:00 2023
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Mon, 28 Aug 2023 01:06:00 +0200
Subject: [R-pkg-devel] package submissions no auto-processed message
In-Reply-To: <CANAiAiUw8Z4HtK3BGijOuYXaw9EJmHpdAL3VBc1--PeHjceOAg@mail.gmail.com>
References: <CANAiAiXmjQe0Lr5fZtN+ZYU9=vqUpA47GZunp=J_TyLWG9K8MA@mail.gmail.com>
 <95bf78bc-7406-281f-651b-89162a180690@statistik.tu-dortmund.de>
 <CANAiAiUw8Z4HtK3BGijOuYXaw9EJmHpdAL3VBc1--PeHjceOAg@mail.gmail.com>
Message-ID: <a536e286-45eb-7058-51d1-203554004a14@statistik.tu-dortmund.de>

Thanks.This was pending a manual inspection for newbies (packages). 
ALthough, we also have no mail with test results (I guess a CRAN 
server's mail issue when this hot checked), so I just triggered new checks.

Best,
Uwe Ligges



On 28.08.2023 00:37, John Harrold wrote:
> Oh I'm sorry. It's the ruminate package.
> 
> On Sun, Aug 27, 2023 at 2:22?PM Uwe Ligges 
> <ligges at statistik.tu-dortmund.de 
> <mailto:ligges at statistik.tu-dortmund.de>> wrote:
> 
> 
> 
>     On 27.08.2023 22:51, John Harrold wrote:
>      > Howdy Folks,
>      >
>      > I submitted a package on Friday. I got the normal email where you
>     have to
>      > click on the link to confirm. Then I got an email saying that the
>     package
>      > was uploaded. Normally after that I get an email saying the
>     package was
>      > auto-processed. That generally doesn't take very long (typically
>     less than
>      > an hour). I wanted to know if there was something on the backend
>     that was
>      > causing a delay, or if there was something wrong and I needed to
>     resubmit
>      > it.
> 
>     Not that I know. If you told us which package this is about ...
> 
>     Best,
>     Uwe Ligges
> 
> 
> 
> 
>      >
>      > Thank you,
>      > John
>      > :wq
>      >
>      >? ? ? ?[[alternative HTML version deleted]]
>      >
>      > ______________________________________________
>      > R-package-devel at r-project.org
>     <mailto:R-package-devel at r-project.org> mailing list
>      > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>     <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
>


From john@m@h@rro|d @end|ng |rom gm@||@com  Mon Aug 28 00:37:50 2023
From: john@m@h@rro|d @end|ng |rom gm@||@com (John Harrold)
Date: Sun, 27 Aug 2023 15:37:50 -0700
Subject: [R-pkg-devel] package submissions no auto-processed message
In-Reply-To: <95bf78bc-7406-281f-651b-89162a180690@statistik.tu-dortmund.de>
References: <CANAiAiXmjQe0Lr5fZtN+ZYU9=vqUpA47GZunp=J_TyLWG9K8MA@mail.gmail.com>
 <95bf78bc-7406-281f-651b-89162a180690@statistik.tu-dortmund.de>
Message-ID: <CANAiAiUw8Z4HtK3BGijOuYXaw9EJmHpdAL3VBc1--PeHjceOAg@mail.gmail.com>

Oh I'm sorry. It's the ruminate package.

On Sun, Aug 27, 2023 at 2:22?PM Uwe Ligges <ligges at statistik.tu-dortmund.de>
wrote:

>
>
> On 27.08.2023 22:51, John Harrold wrote:
> > Howdy Folks,
> >
> > I submitted a package on Friday. I got the normal email where you have to
> > click on the link to confirm. Then I got an email saying that the package
> > was uploaded. Normally after that I get an email saying the package was
> > auto-processed. That generally doesn't take very long (typically less
> than
> > an hour). I wanted to know if there was something on the backend that was
> > causing a delay, or if there was something wrong and I needed to resubmit
> > it.
>
> Not that I know. If you told us which package this is about ...
>
> Best,
> Uwe Ligges
>
>
>
>
> >
> > Thank you,
> > John
> > :wq
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From |uc@r @end|ng |rom |edor@project@org  Mon Aug 28 01:12:47 2023
From: |uc@r @end|ng |rom |edor@project@org (=?UTF-8?Q?I=C3=B1aki_Ucar?=)
Date: Mon, 28 Aug 2023 01:12:47 +0200
Subject: [R-pkg-devel] 
 [Rd] R packages to send plottable data to external apps
In-Reply-To: <BL3PR11MB6338324A0CEDD90C3DDD013CBEE1A@BL3PR11MB6338.namprd11.prod.outlook.com>
References: <BL3PR11MB6338324A0CEDD90C3DDD013CBEE1A@BL3PR11MB6338.namprd11.prod.outlook.com>
Message-ID: <CALEXWq15oiL58nitHfNvKH00Chr07DeoMpiFpyXdqwbcxV_rZg@mail.gmail.com>

I think r-package-devel is a better place for this. CC'ing there.

On Sun, 27 Aug 2023 at 23:50, Mike Marchywka <marchywka at hotmail.com> wrote:
>
> I was curious what R packages, or indeed any other applications, exist
> to plot streamed data from arbitrary data generators. It need not
> be publication quality plotting but it should be easy to use  like
> an oscilloscope.

The last time I checked, there wasn't any R package suitable for
plotting high-throughput streaming data.

There's a nice command-line utility called trend [1] that I
extensively used in the past as an oscilloscope to visualize the
output from a DAQ card. I don't see any new development there, but it
does exactly what it promises; it's easy to use, quite configurable
and very fast. Old but gold.

I also explored VisPy, which is much more ambitious, but at that time
the API had a limitation that didn't allow me to achieve what I
required, and I haven't looked at it ever since, but the project seems
in good shape.

[1] https://www.thregr.org/wavexx/software/trend/
[2] https://vispy.org/

Hope it helps,
I?aki

> I was working on something called datascope that I
> am using for 1D finite difference monitoring and recently interfaced it
> to freefem. I also created an R package. If there is any interest in something
> like this I guess I could put it up somewhere when it is more usable
> or if you can suggest some similar popular packages that would be good
> too. Is there something I could drop-in to the attached code and get
> something like the attached output that could also be switched to other
> data sources?  This right now works via linux fifo and somewhat by UDP.
> It can queue data and stop making it if no one seems to be  consuming
> it depending on the channel.
>
> Thanks.
>
>  Mike Marchywka
> 44 Crosscreek Trail
> Jasper GA 30143
> was 306 Charles Cox Drive  Canton, GA 30115
> 470-758-0799
> 404-788-1216
>
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel



-- 
I?aki ?car


From john@m@h@rro|d @end|ng |rom gm@||@com  Mon Aug 28 01:45:53 2023
From: john@m@h@rro|d @end|ng |rom gm@||@com (John Harrold)
Date: Sun, 27 Aug 2023 16:45:53 -0700
Subject: [R-pkg-devel] package submissions no auto-processed message
In-Reply-To: <a536e286-45eb-7058-51d1-203554004a14@statistik.tu-dortmund.de>
References: <CANAiAiXmjQe0Lr5fZtN+ZYU9=vqUpA47GZunp=J_TyLWG9K8MA@mail.gmail.com>
 <95bf78bc-7406-281f-651b-89162a180690@statistik.tu-dortmund.de>
 <CANAiAiUw8Z4HtK3BGijOuYXaw9EJmHpdAL3VBc1--PeHjceOAg@mail.gmail.com>
 <a536e286-45eb-7058-51d1-203554004a14@statistik.tu-dortmund.de>
Message-ID: <CANAiAiWUmPRNgMtJ6E6Fe5oyccc0Xo=np3nHQ5Bn51JM3J-seA@mail.gmail.com>

I got it. Thanks Uwe.

On Sun, Aug 27, 2023 at 4:05?PM Uwe Ligges <ligges at statistik.tu-dortmund.de>
wrote:

> Thanks.This was pending a manual inspection for newbies (packages).
> ALthough, we also have no mail with test results (I guess a CRAN
> server's mail issue when this hot checked), so I just triggered new checks.
>
> Best,
> Uwe Ligges
>
>
>
> On 28.08.2023 00:37, John Harrold wrote:
> > Oh I'm sorry. It's the ruminate package.
> >
> > On Sun, Aug 27, 2023 at 2:22?PM Uwe Ligges
> > <ligges at statistik.tu-dortmund.de
> > <mailto:ligges at statistik.tu-dortmund.de>> wrote:
> >
> >
> >
> >     On 27.08.2023 22:51, John Harrold wrote:
> >      > Howdy Folks,
> >      >
> >      > I submitted a package on Friday. I got the normal email where you
> >     have to
> >      > click on the link to confirm. Then I got an email saying that the
> >     package
> >      > was uploaded. Normally after that I get an email saying the
> >     package was
> >      > auto-processed. That generally doesn't take very long (typically
> >     less than
> >      > an hour). I wanted to know if there was something on the backend
> >     that was
> >      > causing a delay, or if there was something wrong and I needed to
> >     resubmit
> >      > it.
> >
> >     Not that I know. If you told us which package this is about ...
> >
> >     Best,
> >     Uwe Ligges
> >
> >
> >
> >
> >      >
> >      > Thank you,
> >      > John
> >      > :wq
> >      >
> >      >       [[alternative HTML version deleted]]
> >      >
> >      > ______________________________________________
> >      > R-package-devel at r-project.org
> >     <mailto:R-package-devel at r-project.org> mailing list
> >      > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >     <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
> >
>

	[[alternative HTML version deleted]]


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Mon Aug 28 10:24:47 2023
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Mon, 28 Aug 2023 10:24:47 +0200
Subject: [R-pkg-devel] What to do when a package is archived from CRAN
In-Reply-To: <0651845e-34b0-4986-a575-0dd609777793@gmail.com>
References: <20230827002220.1ac419f9@Tarkus>
 <E8BAA352-B7D3-4C31-9AA3-D9C8C853B069@hiddenelephants.co.uk>
 <0651845e-34b0-4986-a575-0dd609777793@gmail.com>
Message-ID: <a7e4e703-7357-2819-75a8-ce2d3e9287dc@statistik.tu-dortmund.de>

Friends,

CRAN wrote initially to some rust using maintainers:

The CRAN policy on authorship/copyright is very clear:

"(?All components? includes any downloaded at installation or during use.) "

Please explain how your package complies if you believe it does.

Further, we ask that you use the 'cargo vendor' mechanism to avoid 
downloading during installation and limit the number of CPUs 'cargo 
build' can use during installation.  Both points are covered in 
<https://cran.r-project.org/web/packages/using_rust.html>."




Accepting a package that downloads crates from github happened 
automatically, but incorrectly (a false negative):
All the correspondence we see claims that the submission had bundled the 
rust code, but the version that got archived after publication was 104KB 
and did not.

So please simply follow the mails you got and fix the package folwing 
the "using_rust" documentation.

In addition, it was mentined already to get the authorship straight.

Best,
Uwe Ligges







On 27.08.2023 17:28, SHIMA Tatsuya wrote:
> Hi Tim, thank you for sharing this information. i didn't know this.
> 
> If this is the cause, the problem seems to have been resolved in the 
> latest serde <https://github.com/serde-rs/serde/pull/2590>, so it seems 
> to be possible to deal with it.
> 
> Best,
> Tatsuya
> 
> On 2023/08/27 20:24, Tim Taylor wrote:
>> Could you have been caught out with the precompiled binary that serde 
>> started distributing in a few of it?s versions 
>> (https://github.com/serde-rs/serde/issues/2538)? That could have been 
>> a reason if you pinned a version with it present but only CRAN could 
>> confirm if that was the reason.
>>
>> Tim
>>
>>> On 26 Aug 2023, at 22:22, Ivan Krylov <krylov.r00t at gmail.com> wrote:
>>>
>>> ?On Sat, 26 Aug 2023 11:46:44 +0900
>>> SHIMA Tatsuya <ts1s1andn at gmail.com> wrote:
>>>
>>>> I noticed that my submitted package `prqlr` 0.5.0 was archived from
>>>> CRAN on 2023-08-19.
>>>> <https://CRAN.R-project.org/package=prqlr>
>>>>
>>>> I submitted prqlr 0.5.0 on 2023-08-13. I believe I have since only
>>>> received word from CRAN that it passed the automated release process.
>>>
>>> Sarah gave a good guess (although there are CRAN packages containing
>>> C++ and Rust code with NOTEs about size of their libs, 18.2Mb is still
>>> a lot), though I do find it strange that you didn't receive anything
>>> from CRAN prior to having your package archived. I don't think I ever
>>> had problems with e-mails being delivered from CRAN to GMail, but we
>>> can't rule that out.
>>>
>>> You've obviously made an effort to follow the Rust policy, and I don't
>>> see any obvious problems with this part of the package, although I
>>> haven't tried it myself to verify the installation working offline from
>>> bundled source code.
>>>
>>> You've also made an effort to list all the authors of the code
>>> comprising your package in inst/AUTHORS, which is the right thing to do
>>> to avoid making the list of authors in DESCRIPTION long enough to be
>>> unreadable.
>>>
>>> You licensed the package as MIT. Are your dependencies compatible with
>>> MIT? All direct dependencies of your Rust code seem to be licensed
>>> under either MIT or Apache-2.0, which seems to be compatible. You named
>>> the copyright holder of your package as "prqlr authors", which may be a
>>> problem. (I think I saw it somewhere that for MIT license, CRAN prefers
>>> the copyright holder to be some kind of legal entity: either the legal
>>> name of a person, or a company, or something like that.)
>>>
>>> Could the Rust code or any of the dependencies accidentally write under
>>> the user's home directory or take over the terminal or something like
>>> that?
>>>
>>> We might need a response from CRAN after all.
>>>
>>> -- 
>>> Best regards,
>>> Ivan
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From tob|@@@|e|||nger @end|ng |rom @ge@@@t  Mon Aug 28 14:20:25 2023
From: tob|@@@|e|||nger @end|ng |rom @ge@@@t (Tobias Fellinger)
Date: Mon, 28 Aug 2023 14:20:25 +0200
Subject: [R-pkg-devel] boost software licence in cran package
Message-ID: <OF36FBBFC4.D96AA0DD-ONC1258A19.0042E92A-C1258A19.0043C9A8@ages.at>

Hello Everyone, 

is the BSL-1 licence generally accepted for CRAN submissions or only in 
cases where libraries/headers from outside the CRAN ecosystem which are 
already BSL licenced are shipped (like in the BH package)?

If so, should I include the licence in the package or just reference it as 
"BSL-1" in the licence field? (It is not listed in the standard licences 
here [1]).

Thanks in advance, Tobias

[1] https://www.r-project.org/Licenses/
This document should only be read by those persons to whom it is addressed and is not intended to be relied upon by any person without subsequent written confirmation of its contents. Accordingly, our company disclaim all responsibility and accept no liability (including in negligence) for the consequences for any person acting, or refraining from acting, on such information prior to the receipt by those persons of subsequent written confirmation.

If you have received this e-mail message in error, please notify us immediately by telephone. Please also destroy and delete the message from your computer. 

Any form of reproduction, dissemination, copying, disclosure, modification, distribution and/or publication of this e-mail message is strictly prohibited.
	[[alternative HTML version deleted]]


From t@1@1@ndn @end|ng |rom gm@||@com  Tue Aug 29 12:12:09 2023
From: t@1@1@ndn @end|ng |rom gm@||@com (SHIMA Tatsuya)
Date: Tue, 29 Aug 2023 19:12:09 +0900
Subject: [R-pkg-devel] What to do when a package is archived from CRAN
In-Reply-To: <a7e4e703-7357-2819-75a8-ce2d3e9287dc@statistik.tu-dortmund.de>
References: <20230827002220.1ac419f9@Tarkus>
 <E8BAA352-B7D3-4C31-9AA3-D9C8C853B069@hiddenelephants.co.uk>
 <0651845e-34b0-4986-a575-0dd609777793@gmail.com>
 <a7e4e703-7357-2819-75a8-ce2d3e9287dc@statistik.tu-dortmund.de>
Message-ID: <57d981a1-78ca-48cd-9871-14ca0ea55a5b@gmail.com>

Hi Uwe, thanks for the summary of the background.
Let me ask you a few questions about a couple of points.

 > Accepting a package that downloads crates from github

I don't think prqlr 0.5.0 downloads crates on GitHub.
prqlr <= 0.4.0 use crate on GitHub which I patched to support old Rust 
on Debian <https://github.com/PRQL/prql/pull/1561>, but with 0.5.0 I 
switched to installing from crates.io completely.
(This was made possible because Debian recently upgraded Rust for the 
first time in six months.)

 > All the correspondence we see claims that the submission had bundled 
the rust code, but the version that got archived after publication was 
104KB and did not.

I am aware that in the first submission of prqlr 0.5.0, the size of the 
source was 12MB due to the vendoring all Rust dependent crates and CRAN 
pointed out the size of 12MB as a reason for rejection.
That is why in my second submission I wrote the following comment that I 
had removed the vendoring tarball.

 > To reduce package size on CRAN, it does not vendor dependent Rust crates.

https://github.com/eitsupi/prqlr/pull/161/commits/9aba66647fa5e48da0a5983643a4df001721b3f7#diff-cf8c1cd4cfb6a9ceb5ba522a5711321831948fea41fbb0cd9f799506c7caca1bR22-R27

In other words, I did not claim to have bundled the Rust code.
And that second submission was accepted by CRAN and I have not received 
any further messages from CRAN.

I am aware that the CRAN policy says that we can ask CRAN for permission 
to download from the internet.
I intended to ask for that in this comment.

If I am doing this wrong, what should I do?

Thanks for reading this.

Best,
Tatsuya

On 2023/08/28 17:24, Uwe Ligges wrote:
> Friends,
>
> CRAN wrote initially to some rust using maintainers:
>
> The CRAN policy on authorship/copyright is very clear:
>
> "(?All components? includes any downloaded at installation or during 
> use.) "
>
> Please explain how your package complies if you believe it does.
>
> Further, we ask that you use the 'cargo vendor' mechanism to avoid 
> downloading during installation and limit the number of CPUs 'cargo 
> build' can use during installation.? Both points are covered in 
> <https://cran.r-project.org/web/packages/using_rust.html>."
>
>
>
>
> Accepting a package that downloads crates from github happened 
> automatically, but incorrectly (a false negative):
> All the correspondence we see claims that the submission had bundled 
> the rust code, but the version that got archived after publication was 
> 104KB and did not.
>
> So please simply follow the mails you got and fix the package folwing 
> the "using_rust" documentation.
>
> In addition, it was mentined already to get the authorship straight.
>
> Best,
> Uwe Ligges
>
>
>
>
>
>
>
> On 27.08.2023 17:28, SHIMA Tatsuya wrote:
>> Hi Tim, thank you for sharing this information. i didn't know this.
>>
>> If this is the cause, the problem seems to have been resolved in the 
>> latest serde <https://github.com/serde-rs/serde/pull/2590>, so it 
>> seems to be possible to deal with it.
>>
>> Best,
>> Tatsuya
>>
>> On 2023/08/27 20:24, Tim Taylor wrote:
>>> Could you have been caught out with the precompiled binary that 
>>> serde started distributing in a few of it?s versions 
>>> (https://github.com/serde-rs/serde/issues/2538)? That could have 
>>> been a reason if you pinned a version with it present but only CRAN 
>>> could confirm if that was the reason.
>>>
>>> Tim
>>>
>>>> On 26 Aug 2023, at 22:22, Ivan Krylov <krylov.r00t at gmail.com> wrote:
>>>>
>>>> ?On Sat, 26 Aug 2023 11:46:44 +0900
>>>> SHIMA Tatsuya <ts1s1andn at gmail.com> wrote:
>>>>
>>>>> I noticed that my submitted package `prqlr` 0.5.0 was archived from
>>>>> CRAN on 2023-08-19.
>>>>> <https://CRAN.R-project.org/package=prqlr>
>>>>>
>>>>> I submitted prqlr 0.5.0 on 2023-08-13. I believe I have since only
>>>>> received word from CRAN that it passed the automated release process.
>>>>
>>>> Sarah gave a good guess (although there are CRAN packages containing
>>>> C++ and Rust code with NOTEs about size of their libs, 18.2Mb is still
>>>> a lot), though I do find it strange that you didn't receive anything
>>>> from CRAN prior to having your package archived. I don't think I ever
>>>> had problems with e-mails being delivered from CRAN to GMail, but we
>>>> can't rule that out.
>>>>
>>>> You've obviously made an effort to follow the Rust policy, and I don't
>>>> see any obvious problems with this part of the package, although I
>>>> haven't tried it myself to verify the installation working offline 
>>>> from
>>>> bundled source code.
>>>>
>>>> You've also made an effort to list all the authors of the code
>>>> comprising your package in inst/AUTHORS, which is the right thing 
>>>> to do
>>>> to avoid making the list of authors in DESCRIPTION long enough to be
>>>> unreadable.
>>>>
>>>> You licensed the package as MIT. Are your dependencies compatible with
>>>> MIT? All direct dependencies of your Rust code seem to be licensed
>>>> under either MIT or Apache-2.0, which seems to be compatible. You 
>>>> named
>>>> the copyright holder of your package as "prqlr authors", which may 
>>>> be a
>>>> problem. (I think I saw it somewhere that for MIT license, CRAN 
>>>> prefers
>>>> the copyright holder to be some kind of legal entity: either the legal
>>>> name of a person, or a company, or something like that.)
>>>>
>>>> Could the Rust code or any of the dependencies accidentally write 
>>>> under
>>>> the user's home directory or take over the terminal or something like
>>>> that?
>>>>
>>>> We might need a response from CRAN after all.
>>>>
>>>> -- 
>>>> Best regards,
>>>> Ivan
>>>>
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Tue Aug 29 18:27:54 2023
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Tue, 29 Aug 2023 18:27:54 +0200
Subject: [R-pkg-devel] 
 Re-building vignettes had CPU time 9.2 times elapsed time
In-Reply-To: <C6E35AE4-FEAF-458A-AC3A-C067348D51B3@R-project.org>
References: <CAEJTLzMw03xw18DBoSWJUw9LmtF2gRMT+ze4puKZUtUmT8r3=A@mail.gmail.com>
 <25832.44957.847418.690770@rob.eddelbuettel.com>
 <CALK03d20nf5xhEvhM9RQmM=+pntkNNKrx_mSAoDZGFomPU9KCg@mail.gmail.com>
 <39fe6b86-4d6e-8d9b-96f6-0846c7d36e62@gmail.com>
 <25833.13005.539098.412130@rob.eddelbuettel.com>
 <C6E35AE4-FEAF-458A-AC3A-C067348D51B3@R-project.org>
Message-ID: <abd94b81-fea7-f44d-d6bf-567988a98ad8@statistik.tu-dortmund.de>

Dear all,

in today's R Core meeting both the CRAN team and R Core agree with 
Simon's suggestion below.

Let me repeat the key points:

- We will try to add some interface to R that allows for more unified 
control about the various ways of parallelisation. That should allow 
users to opt in for more than 2 cores and/or threads and/or processes. 
Details will follow as this is not simple.

- As long as users do not have simple ways of controlling how demanding 
code is (e.g., different ways of parallelizationare used even in nested 
ways), CRAN will further on protect users and enforce that packages do 
not use more than 2 cores by default.

Best,
Uwe Ligges



On 26.08.2023 02:05, Simon Urbanek wrote:
> 
> 
>> On Aug 26, 2023, at 11:01 AM, Dirk Eddelbuettel <edd at debian.org> wrote:
>>
>>
>> On 25 August 2023 at 18:45, Duncan Murdoch wrote:
>> | The real problem is that there are two stubborn groups opposing each
>> | other:  the data.table developers and the CRAN maintainers.  The former
>> | think users should by default dedicate their whole machine to
>> | data.table.  The latter think users should opt in to do that.
>>
>> No, it feels more like it is CRAN versus the rest of the world.
>>
> 
> 
> In reality it's more people running R on their laptops vs the rest of the world. Although people with laptops are the vast majority, they also are the least impacted by the decision going either way. I think Jeff summed up the core reasoning pretty well. Harm is done by excessive use, not other other way around.
> 
> That said, I think this thread is really missing the key point: there is no central mechanism that would govern the use of CPU resources. OMP_THREAD_LIMIT is just one of may ways and even that is vastly insufficient for reasons discussed (e.g, recursive use of processes). It is not CRAN's responsibility to figure out for each package what it needs to behave sanely - it has no way of knowing what type of parallelism is used, under which circumstances and how to control it. Only the package author knows that (hopefully), which is why it's on them. So instead of complaining here better use of time would be to look at what's being used in packages and come up with a unified approach to monitoring core usage and a mechanism by which the packages could self-govern to respect the desired limits. If there was one canonical place, it would be also easy for users to opt in/out as they desire - and I'd be happy to help if any components of it need to be in core R.
> 
> 
> 
>> Take but one example, and as I may have mentioned elsewhere, my day job consists in providing software so that (to take one recent example) bioinformatics specialist can slice huge amounts of genomics data.  When that happens on a dedicated (expensive) hardware with dozens of cores, it would be wasteful to have an unconditional default of two threads. It would be the end of R among serious people, no more, no less. Can you imagine how the internet headlines would go: "R defaults to two threads".
>>
> 
> If you run on such a machine then you or your admin certainly know how to set the desired limits. From experience the problem is exactly the opposite - it's far more common for users to not know how to not overload such a machine. As for internet headlines, they will always be saying blatantly false things like "R is not for large data" even though we have been using it to analyze terabytes of data per minute ...
> 
> Cheers,
> Simon
> 
> 
> 
>> And it is not just data.table as even in the long thread over in its repo we have people chiming in using OpenMP in their code (as data.table does but which needs a different setter than the data.table thread count).
>>
>> It is the CRAN servers which (rightly !!) want to impose constraints for when packages are tested.  Nobody objects to that.
>>
>> But some of us wonder if settings these defaults for all R user, all the time, unconditional is really the right thing to do.  Anyway, Uwe told me he will take it to an internal discussion, so let's hope sanity prevails.
>>
> 
>


From thom@@@petzo|dt @end|ng |rom tu-dre@den@de  Wed Aug 30 08:43:04 2023
From: thom@@@petzo|dt @end|ng |rom tu-dre@den@de (Thomas Petzoldt)
Date: Wed, 30 Aug 2023 08:43:04 +0200
Subject: [R-pkg-devel] Modernizing legacy Fortran:, REAL(kind=8)
Message-ID: <2c2d8db5-182f-11ac-4b9e-03f2e09ecb8c@tu-dresden.de>

Hi,

some package maintainers including me got a reminder from Prof. Brian 
Ripley to modernize REAL and INTEGER declarations using the KIND option:

On 29.08.2023 at 19:31 Prof Brian Ripley wrote:
> According to the Fortran standards, numerical values are just an 
> enumeration, and what e.g. real(kind=4) means (or even if it is 
> accepted) is implementation dependent.
>
> We see such constructs in packages 

[... line with packages deleted to avoid exposing the other packages and 
authors]

> Please change them to something portable (kind(1.0) or kind(1.0d0} are 
> commonly used, as is c_double from iso_c_binding).
>
> Before 2023-09-26 to safely retain your package on CRAN (some of you 
> have earlier deadlines for other issues).

We use a lot of legacy code that though partly modernized due to similar 
requests, still uses a mix of DOUBLE PRECISION and a few REAL(KIND=8) 
and COMPLEX(KIND=8). As the code will still remain legacy style with 
respect to some other constructs, I wonder what to use to go a step 
forward, but remain as consistent as possible, which is of course a 
compromise. I see the following options:

a) change REAL(kind=8) back to DOUBLE PRECISION that is again old style. 
It seems to be portable and is still widely used.

b) just formally change the few occurrences to:REAL(kind=0.0d) as 
suggested. It is easy, but inconsistency remains.

c) or, define "dp" as recommended in modern style guides and use it 
instead of REAL(kind=8) and the future also for DOUBLE PRECISION this way:

integer,parameter::dp=kind(0.0d0)

and then

real(dp)::a,b,c

However, this would need changes at many places, the mix between old and 
new constructswill generally get worse.

Another question is, that with either of these, we may not be sure to 
use 8 byte double. Changing this could influence for precision and 
pointer arithmetics.

Any recommendations? Thanks a lot!

Thomas


From @vr@h@m@@d|er @end|ng |rom gm@||@com  Wed Aug 30 10:01:37 2023
From: @vr@h@m@@d|er @end|ng |rom gm@||@com (Avraham Adler)
Date: Wed, 30 Aug 2023 04:01:37 -0400
Subject: [R-pkg-devel] Modernizing legacy Fortran:, REAL(kind=8)
Message-ID: <CAE1BEF4-78C8-422C-B90E-67CF72D59A9E@gmail.com>

?I?ve had no issues using the iso_c_binding schema. 

Avi

Sent from my iPhone

> On Aug 30, 2023, at 2:43 AM, Thomas Petzoldt <thomas.petzoldt at tu-dresden.de> wrote:
> 
> ?Hi,
> 
> some package maintainers including me got a reminder from Prof. Brian Ripley to modernize REAL and INTEGER declarations using the KIND option:
> 
>> On 29.08.2023 at 19:31 Prof Brian Ripley wrote:
>> According to the Fortran standards, numerical values are just an enumeration, and what e.g. real(kind=4) means (or even if it is accepted) is implementation dependent.
>> We see such constructs in packages
> 
> [... line with packages deleted to avoid exposing the other packages and authors]
> 
>> Please change them to something portable (kind(1.0) or kind(1.0d0} are commonly used, as is c_double from iso_c_binding).
>> Before 2023-09-26 to safely retain your package on CRAN (some of you have earlier deadlines for other issues).
> 
> We use a lot of legacy code that though partly modernized due to similar requests, still uses a mix of DOUBLE PRECISION and a few REAL(KIND=8) and COMPLEX(KIND=8). As the code will still remain legacy style with respect to some other constructs, I wonder what to use to go a step forward, but remain as consistent as possible, which is of course a compromise. I see the following options:
> 
> a) change REAL(kind=8) back to DOUBLE PRECISION that is again old style. It seems to be portable and is still widely used.
> 
> b) just formally change the few occurrences to:REAL(kind=0.0d) as suggested. It is easy, but inconsistency remains.
> 
> c) or, define "dp" as recommended in modern style guides and use it instead of REAL(kind=8) and the future also for DOUBLE PRECISION this way:
> 
> integer,parameter::dp=kind(0.0d0)
> 
> and then
> 
> real(dp)::a,b,c
> 
> However, this would need changes at many places, the mix between old and new constructswill generally get worse.
> 
> Another question is, that with either of these, we may not be sure to use 8 byte double. Changing this could influence for precision and pointer arithmetics.
> 
> Any recommendations? Thanks a lot!
> 
> Thomas
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From kry|ov@r00t @end|ng |rom gm@||@com  Wed Aug 30 11:58:03 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Wed, 30 Aug 2023 12:58:03 +0300
Subject: [R-pkg-devel] Modernizing legacy Fortran:, REAL(kind=8)
In-Reply-To: <2c2d8db5-182f-11ac-4b9e-03f2e09ecb8c@tu-dresden.de>
References: <2c2d8db5-182f-11ac-4b9e-03f2e09ecb8c@tu-dresden.de>
Message-ID: <20230830125803.0d0b7290@Tarkus>

On Wed, 30 Aug 2023 08:43:04 +0200
Thomas Petzoldt <thomas.petzoldt at tu-dresden.de> wrote:

> a) change REAL(kind=8) back to DOUBLE PRECISION that is again old
> style. It seems to be portable and is still widely used.

I don't have a reference as good as the Fortran standard, but Steve
Lionel said in Dr. Fortran [*] that DOUBLE PRECISION is still part of
the standard fixed-form syntax.

>  COMPLEX(KIND=8)

This could be particularly problematic if you're trying to interoperate
with C, but will probably not surface unless you use LTO:
https://bugs.r-project.org/show_bug.cgi?id=18430

Unfortunately, there's no standard DOUBLE COMPLEX.

-- 
Best regards,
Ivan

[*]
https://stevelionel.com/drfortran/2017/03/27/doctor-fortran-in-it-takes-all-kinds/


From em@nue|e@cord@no @end|ng |rom gm@||@com  Wed Aug 30 18:03:19 2023
From: em@nue|e@cord@no @end|ng |rom gm@||@com (Emanuele Cordano)
Date: Wed, 30 Aug 2023 18:03:19 +0200
Subject: [R-pkg-devel] DESCRITION error
Message-ID: <CAKw81f-EytkpfGntWs9Zo1HFDUzHpRnigWPAjKGcCfPnWSHO+w@mail.gmail.com>

Dear list,

I'm creating a package. At a first build, I found out the following error.
I parsed DESCRIPTION  file and I did not find any possible causes for this
error. I searched on the web , but I found no clear explanation of this
error. Have you ever experienced with this? What does this error mean ?
I'm using an Rstudio server, but it's the first time it happens after
building several other developed packages.


Error reading package DESCRIPTION: system error 71 (Protocol error)

Thank you
Best
Emanuele
-- 
Emanuele Cordano, PhD
Environmental Engineer / Ingegnere per l' Ambiente e il territorio nr.
3587 (Albo A - Provincia di Trento)
cell: +39 3282818564
email: emanuele.cordano at gmail.com,emanuele.cordano at rendena100.eu,
emanuele.cordano at eurac.edu
PEC: emanuele.cordano at ingpec.eu
URL: www.rendena100.eu
LinkedIn: https://www.linkedin.com/in/emanuele-cordano-31995333
GitHub: https://github.com/ecor

	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Wed Aug 30 18:23:23 2023
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Wed, 30 Aug 2023 12:23:23 -0400
Subject: [R-pkg-devel] DESCRITION error
In-Reply-To: <CAKw81f-EytkpfGntWs9Zo1HFDUzHpRnigWPAjKGcCfPnWSHO+w@mail.gmail.com>
References: <CAKw81f-EytkpfGntWs9Zo1HFDUzHpRnigWPAjKGcCfPnWSHO+w@mail.gmail.com>
Message-ID: <70faf716-f83c-309d-332d-e17dcdf3b1fd@gmail.com>

On 30/08/2023 12:03 p.m., Emanuele Cordano wrote:
> Dear list,
> 
> I'm creating a package. At a first build, I found out the following error.
> I parsed DESCRIPTION  file and I did not find any possible causes for this
> error. I searched on the web , but I found no clear explanation of this
> error. Have you ever experienced with this? What does this error mean ?
> I'm using an Rstudio server, but it's the first time it happens after
> building several other developed packages.
> 
> 
> Error reading package DESCRIPTION: system error 71 (Protocol error)

That error says that R couldn't read the DESCRIPTION file.  It sounds as 
though you are on Windows, your file is on a network share, and the 
server won't let you connect.  If that's the case, this link discusses 
the issue:

 
https://answers.microsoft.com/en-us/windows/forum/all/operating-system-error-71-this-remote-computer-has/74270db8-4522-4e24-a494-5bf75becc9da


From em@nue|e@cord@no @end|ng |rom gm@||@com  Wed Aug 30 18:32:19 2023
From: em@nue|e@cord@no @end|ng |rom gm@||@com (Emanuele Cordano)
Date: Wed, 30 Aug 2023 18:32:19 +0200
Subject: [R-pkg-devel] DESCRITION error
In-Reply-To: <70faf716-f83c-309d-332d-e17dcdf3b1fd@gmail.com>
References: <CAKw81f-EytkpfGntWs9Zo1HFDUzHpRnigWPAjKGcCfPnWSHO+w@mail.gmail.com>
 <70faf716-f83c-309d-332d-e17dcdf3b1fd@gmail.com>
Message-ID: <CAKw81f9UN6oEf998vT2O5Z_wKjHiSyCQXXyLLrVzV89hL4_CRA@mail.gmail.com>

Thanks . I?m working on Linux Ubuntu 20.04. I?m seeing the url you sent.


Il giorno mer 30 ago 2023 alle 18:23 Duncan Murdoch <
murdoch.duncan at gmail.com> ha scritto:

> On 30/08/2023 12:03 p.m., Emanuele Cordano wrote:
> > Dear list,
> >
> > I'm creating a package. At a first build, I found out the following
> error.
> > I parsed DESCRIPTION  file and I did not find any possible causes for
> this
> > error. I searched on the web , but I found no clear explanation of this
> > error. Have you ever experienced with this? What does this error mean ?
> > I'm using an Rstudio server, but it's the first time it happens after
> > building several other developed packages.
> >
> >
> > Error reading package DESCRIPTION: system error 71 (Protocol error)
>
> That error says that R couldn't read the DESCRIPTION file.  It sounds as
> though you are on Windows, your file is on a network share, and the
> server won't let you connect.  If that's the case, this link discusses
> the issue:
>
>
>
> https://answers.microsoft.com/en-us/windows/forum/all/operating-system-error-71-this-remote-computer-has/74270db8-4522-4e24-a494-5bf75becc9da
>
>
> --
Emanuele Cordano, PhD
Environmental Engineer / Ingegnere per l' Ambiente e il territorio nr.
3587 (Albo A - Provincia di Trento)
cell: +39 3282818564
email: emanuele.cordano at gmail.com,emanuele.cordano at rendena100.eu,
emanuele.cordano at eurac.edu
PEC: emanuele.cordano at ingpec.eu
URL: www.rendena100.eu
LinkedIn: https://www.linkedin.com/in/emanuele-cordano-31995333
GitHub: https://github.com/ecor

	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Wed Aug 30 18:35:11 2023
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Wed, 30 Aug 2023 12:35:11 -0400
Subject: [R-pkg-devel] DESCRITION error
In-Reply-To: <CAKw81f9UN6oEf998vT2O5Z_wKjHiSyCQXXyLLrVzV89hL4_CRA@mail.gmail.com>
References: <CAKw81f-EytkpfGntWs9Zo1HFDUzHpRnigWPAjKGcCfPnWSHO+w@mail.gmail.com>
 <70faf716-f83c-309d-332d-e17dcdf3b1fd@gmail.com>
 <CAKw81f9UN6oEf998vT2O5Z_wKjHiSyCQXXyLLrVzV89hL4_CRA@mail.gmail.com>
Message-ID: <114d1c12-0a62-f2ae-c354-0bd026d8910e@gmail.com>

If you are on Ubuntu, my guess is likely not relevant (unless maybe the 
server holding your files is running Windows).

Duncan Murdoch

On 30/08/2023 12:32 p.m., Emanuele Cordano wrote:
> Thanks . I?m working on Linux Ubuntu 20.04. I?m seeing the url you sent.
> 
> 
> Il giorno mer 30 ago 2023 alle 18:23 Duncan Murdoch 
> <murdoch.duncan at gmail.com <mailto:murdoch.duncan at gmail.com>> ha scritto:
> 
>     On 30/08/2023 12:03 p.m., Emanuele Cordano wrote:
>      > Dear list,
>      >
>      > I'm creating a package. At a first build, I found out the
>     following error.
>      > I parsed DESCRIPTION? file and I did not find any possible causes
>     for this
>      > error. I searched on the web , but I found no clear explanation
>     of this
>      > error. Have you ever experienced with this? What does this error
>     mean ?
>      > I'm using an Rstudio server, but it's the first time it happens after
>      > building several other developed packages.
>      >
>      >
>      > Error reading package DESCRIPTION: system error 71 (Protocol error)
> 
>     That error says that R couldn't read the DESCRIPTION file.? It
>     sounds as
>     though you are on Windows, your file is on a network share, and the
>     server won't let you connect.? If that's the case, this link discusses
>     the issue:
> 
> 
>     https://answers.microsoft.com/en-us/windows/forum/all/operating-system-error-71-this-remote-computer-has/74270db8-4522-4e24-a494-5bf75becc9da <https://answers.microsoft.com/en-us/windows/forum/all/operating-system-error-71-this-remote-computer-has/74270db8-4522-4e24-a494-5bf75becc9da>
> 
> 
> -- 
> Emanuele Cordano, PhD
> Environmental Engineer / Ingegnere per l'?Ambiente e il territorio nr.
> 3587 (Albo A - Provincia di Trento)
> cell: +39 3282818564 <tel:%2B39%203282818564>
> email: emanuele.cordano at gmail.com 
> <mailto:emanuele.cordano at gmail.com>,emanuele.cordano at rendena100.eu 
> <mailto:emanuele.cordano at rendena100.eu>,
> emanuele.cordano at eurac.edu <mailto:emanuele.cordano at eurac.edu>
> PEC: emanuele.cordano at ingpec.eu <mailto:emanuele.cordano at ingpec.eu>
> URL: www.rendena100.eu <http://www.rendena100.eu/>
> LinkedIn: https://www.linkedin.com/in/emanuele-cordano-31995333 
> <https://www.linkedin.com/in/emanuele-cordano-31995333>
> GitHub: https://github.com/ecor <https://github.com/ecor>
>


From t@1@1@ndn @end|ng |rom gm@||@com  Thu Aug 31 00:32:33 2023
From: t@1@1@ndn @end|ng |rom gm@||@com (SHIMA Tatsuya)
Date: Thu, 31 Aug 2023 07:32:33 +0900
Subject: [R-pkg-devel] What to do when a package is archived from CRAN
In-Reply-To: <57d981a1-78ca-48cd-9871-14ca0ea55a5b@gmail.com>
References: <20230827002220.1ac419f9@Tarkus>
 <E8BAA352-B7D3-4C31-9AA3-D9C8C853B069@hiddenelephants.co.uk>
 <0651845e-34b0-4986-a575-0dd609777793@gmail.com>
 <a7e4e703-7357-2819-75a8-ce2d3e9287dc@statistik.tu-dortmund.de>
 <57d981a1-78ca-48cd-9871-14ca0ea55a5b@gmail.com>
Message-ID: <697fb806-5962-48f3-950e-4fcabec0dd4c@gmail.com>

I submitted prqlr 0.5.1 yesterday, which is almost identical to prqlr 
0.5.0, and prqlr is now available again on CRAN.
Thanks to the CRAN reviewers for their quick reaction.

Best,
Tatsuya

On 2023/08/29 19:12, SHIMA Tatsuya wrote:
> Hi Uwe, thanks for the summary of the background.
> Let me ask you a few questions about a couple of points.
>
> > Accepting a package that downloads crates from github
>
> I don't think prqlr 0.5.0 downloads crates on GitHub.
> prqlr <= 0.4.0 use crate on GitHub which I patched to support old Rust 
> on Debian <https://github.com/PRQL/prql/pull/1561>, but with 0.5.0 I 
> switched to installing from crates.io completely.
> (This was made possible because Debian recently upgraded Rust for the 
> first time in six months.)
>
> > All the correspondence we see claims that the submission had bundled 
> the rust code, but the version that got archived after publication was 
> 104KB and did not.
>
> I am aware that in the first submission of prqlr 0.5.0, the size of 
> the source was 12MB due to the vendoring all Rust dependent crates and 
> CRAN pointed out the size of 12MB as a reason for rejection.
> That is why in my second submission I wrote the following comment that 
> I had removed the vendoring tarball.
>
> > To reduce package size on CRAN, it does not vendor dependent Rust 
> crates.
>
> https://github.com/eitsupi/prqlr/pull/161/commits/9aba66647fa5e48da0a5983643a4df001721b3f7#diff-cf8c1cd4cfb6a9ceb5ba522a5711321831948fea41fbb0cd9f799506c7caca1bR22-R27 
>
>
> In other words, I did not claim to have bundled the Rust code.
> And that second submission was accepted by CRAN and I have not 
> received any further messages from CRAN.
>
> I am aware that the CRAN policy says that we can ask CRAN for 
> permission to download from the internet.
> I intended to ask for that in this comment.
>
> If I am doing this wrong, what should I do?
>
> Thanks for reading this.
>
> Best,
> Tatsuya
>
> On 2023/08/28 17:24, Uwe Ligges wrote:
>> Friends,
>>
>> CRAN wrote initially to some rust using maintainers:
>>
>> The CRAN policy on authorship/copyright is very clear:
>>
>> "(?All components? includes any downloaded at installation or during 
>> use.) "
>>
>> Please explain how your package complies if you believe it does.
>>
>> Further, we ask that you use the 'cargo vendor' mechanism to avoid 
>> downloading during installation and limit the number of CPUs 'cargo 
>> build' can use during installation.? Both points are covered in 
>> <https://cran.r-project.org/web/packages/using_rust.html>."
>>
>>
>>
>>
>> Accepting a package that downloads crates from github happened 
>> automatically, but incorrectly (a false negative):
>> All the correspondence we see claims that the submission had bundled 
>> the rust code, but the version that got archived after publication 
>> was 104KB and did not.
>>
>> So please simply follow the mails you got and fix the package folwing 
>> the "using_rust" documentation.
>>
>> In addition, it was mentined already to get the authorship straight.
>>
>> Best,
>> Uwe Ligges
>>
>>
>>
>>
>>
>>
>>
>> On 27.08.2023 17:28, SHIMA Tatsuya wrote:
>>> Hi Tim, thank you for sharing this information. i didn't know this.
>>>
>>> If this is the cause, the problem seems to have been resolved in the 
>>> latest serde <https://github.com/serde-rs/serde/pull/2590>, so it 
>>> seems to be possible to deal with it.
>>>
>>> Best,
>>> Tatsuya
>>>
>>> On 2023/08/27 20:24, Tim Taylor wrote:
>>>> Could you have been caught out with the precompiled binary that 
>>>> serde started distributing in a few of it?s versions 
>>>> (https://github.com/serde-rs/serde/issues/2538)? That could have 
>>>> been a reason if you pinned a version with it present but only CRAN 
>>>> could confirm if that was the reason.
>>>>
>>>> Tim
>>>>
>>>>> On 26 Aug 2023, at 22:22, Ivan Krylov <krylov.r00t at gmail.com> wrote:
>>>>>
>>>>> ?On Sat, 26 Aug 2023 11:46:44 +0900
>>>>> SHIMA Tatsuya <ts1s1andn at gmail.com> wrote:
>>>>>
>>>>>> I noticed that my submitted package `prqlr` 0.5.0 was archived from
>>>>>> CRAN on 2023-08-19.
>>>>>> <https://CRAN.R-project.org/package=prqlr>
>>>>>>
>>>>>> I submitted prqlr 0.5.0 on 2023-08-13. I believe I have since only
>>>>>> received word from CRAN that it passed the automated release 
>>>>>> process.
>>>>>
>>>>> Sarah gave a good guess (although there are CRAN packages containing
>>>>> C++ and Rust code with NOTEs about size of their libs, 18.2Mb is 
>>>>> still
>>>>> a lot), though I do find it strange that you didn't receive anything
>>>>> from CRAN prior to having your package archived. I don't think I ever
>>>>> had problems with e-mails being delivered from CRAN to GMail, but we
>>>>> can't rule that out.
>>>>>
>>>>> You've obviously made an effort to follow the Rust policy, and I 
>>>>> don't
>>>>> see any obvious problems with this part of the package, although I
>>>>> haven't tried it myself to verify the installation working offline 
>>>>> from
>>>>> bundled source code.
>>>>>
>>>>> You've also made an effort to list all the authors of the code
>>>>> comprising your package in inst/AUTHORS, which is the right thing 
>>>>> to do
>>>>> to avoid making the list of authors in DESCRIPTION long enough to be
>>>>> unreadable.
>>>>>
>>>>> You licensed the package as MIT. Are your dependencies compatible 
>>>>> with
>>>>> MIT? All direct dependencies of your Rust code seem to be licensed
>>>>> under either MIT or Apache-2.0, which seems to be compatible. You 
>>>>> named
>>>>> the copyright holder of your package as "prqlr authors", which may 
>>>>> be a
>>>>> problem. (I think I saw it somewhere that for MIT license, CRAN 
>>>>> prefers
>>>>> the copyright holder to be some kind of legal entity: either the 
>>>>> legal
>>>>> name of a person, or a company, or something like that.)
>>>>>
>>>>> Could the Rust code or any of the dependencies accidentally write 
>>>>> under
>>>>> the user's home directory or take over the terminal or something like
>>>>> that?
>>>>>
>>>>> We might need a response from CRAN after all.
>>>>>
>>>>> -- 
>>>>> Best regards,
>>>>> Ivan
>>>>>
>>>>> ______________________________________________
>>>>> R-package-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From em@nue|e@cord@no @end|ng |rom gm@||@com  Thu Aug 31 08:46:12 2023
From: em@nue|e@cord@no @end|ng |rom gm@||@com (Emanuele Cordano)
Date: Thu, 31 Aug 2023 08:46:12 +0200
Subject: [R-pkg-devel] DESCRITION error
In-Reply-To: <114d1c12-0a62-f2ae-c354-0bd026d8910e@gmail.com>
References: <CAKw81f-EytkpfGntWs9Zo1HFDUzHpRnigWPAjKGcCfPnWSHO+w@mail.gmail.com>
 <70faf716-f83c-309d-332d-e17dcdf3b1fd@gmail.com>
 <CAKw81f9UN6oEf998vT2O5Z_wKjHiSyCQXXyLLrVzV89hL4_CRA@mail.gmail.com>
 <114d1c12-0a62-f2ae-c354-0bd026d8910e@gmail.com>
Message-ID: <CAKw81f92-RH97baXCcvFQco+snxdGLLvPYO_jT8XVy3uGNN2jQ@mail.gmail.com>

Dear List,

I thank you for the replies. Sorry for cross-posting. I solved the issue.
This error  occurred because I forgot to specify the item "Version:"  in
the DESCRIPTION file. "Protocol Error" , all mandatory items (from
protocol) should be specified in the DESCRIPTION file.

Thank you
Best
Emanuele


Il giorno mer 30 ago 2023 alle ore 18:35 Duncan Murdoch <
murdoch.duncan at gmail.com> ha scritto:

> If you are on Ubuntu, my guess is likely not relevant (unless maybe the
> server holding your files is running Windows).
>
> Duncan Murdoch
>
> On 30/08/2023 12:32 p.m., Emanuele Cordano wrote:
> > Thanks . I?m working on Linux Ubuntu 20.04. I?m seeing the url you sent.
> >
> >
> > Il giorno mer 30 ago 2023 alle 18:23 Duncan Murdoch
> > <murdoch.duncan at gmail.com <mailto:murdoch.duncan at gmail.com>> ha scritto:
> >
> >     On 30/08/2023 12:03 p.m., Emanuele Cordano wrote:
> >      > Dear list,
> >      >
> >      > I'm creating a package. At a first build, I found out the
> >     following error.
> >      > I parsed DESCRIPTION  file and I did not find any possible causes
> >     for this
> >      > error. I searched on the web , but I found no clear explanation
> >     of this
> >      > error. Have you ever experienced with this? What does this error
> >     mean ?
> >      > I'm using an Rstudio server, but it's the first time it happens
> after
> >      > building several other developed packages.
> >      >
> >      >
> >      > Error reading package DESCRIPTION: system error 71 (Protocol
> error)
> >
> >     That error says that R couldn't read the DESCRIPTION file.  It
> >     sounds as
> >     though you are on Windows, your file is on a network share, and the
> >     server won't let you connect.  If that's the case, this link
> discusses
> >     the issue:
> >
> >
> >
> https://answers.microsoft.com/en-us/windows/forum/all/operating-system-error-71-this-remote-computer-has/74270db8-4522-4e24-a494-5bf75becc9da
> <
> https://answers.microsoft.com/en-us/windows/forum/all/operating-system-error-71-this-remote-computer-has/74270db8-4522-4e24-a494-5bf75becc9da
> >
> >
> >
> > --
> > Emanuele Cordano, PhD
> > Environmental Engineer / Ingegnere per l' Ambiente e il territorio nr.
> > 3587 (Albo A - Provincia di Trento)
> > cell: +39 3282818564 <tel:%2B39%203282818564>
> > email: emanuele.cordano at gmail.com
> > <mailto:emanuele.cordano at gmail.com>,emanuele.cordano at rendena100.eu
> > <mailto:emanuele.cordano at rendena100.eu>,
> > emanuele.cordano at eurac.edu <mailto:emanuele.cordano at eurac.edu>
> > PEC: emanuele.cordano at ingpec.eu <mailto:emanuele.cordano at ingpec.eu>
> > URL: www.rendena100.eu <http://www.rendena100.eu/>
> > LinkedIn: https://www.linkedin.com/in/emanuele-cordano-31995333
> > <https://www.linkedin.com/in/emanuele-cordano-31995333>
> > GitHub: https://github.com/ecor <https://github.com/ecor>
> >
>
>

-- 
Emanuele Cordano, PhD
Environmental Engineer / Ingegnere per l' Ambiente e il territorio nr.
3587 (Albo A - Provincia di Trento)
cell: +39 3282818564
email: emanuele.cordano at gmail.com,emanuele.cordano at rendena100.eu,
emanuele.cordano at eurac.edu
PEC: emanuele.cordano at ingpec.eu
URL: www.rendena100.eu
LinkedIn: https://www.linkedin.com/in/emanuele-cordano-31995333
GitHub: https://github.com/ecor

	[[alternative HTML version deleted]]


From berryboe@@enkoo| @end|ng |rom hotm@||@com  Thu Aug 31 08:52:47 2023
From: berryboe@@enkoo| @end|ng |rom hotm@||@com (Berry Boessenkool)
Date: Thu, 31 Aug 2023 06:52:47 +0000
Subject: [R-pkg-devel] fortran integer(kind=)
In-Reply-To: <GV2PR02MB8770482021C0C4CA7B1639EFD5E6A@GV2PR02MB8770.eurprd02.prod.outlook.com>
References: <d3eaa058-6d46-c7d5-33f0-d8c0a18f1dcc@stats.ox.ac.uk>
 <GV2PR02MB8770482021C0C4CA7B1639EFD5E6A@GV2PR02MB8770.eurprd02.prod.outlook.com>
Message-ID: <GV2PR02MB877034AA18F7E1540B817AE8D5E5A@GV2PR02MB8770.eurprd02.prod.outlook.com>


Dear list members,

my R package dwdradar uses Fortran code with the input parameter integer(KIND=2):
https://github.com/brry/dwdradar/blob/master/src/binary_to_num.f90#L20
https://github.com/brry/dwdradar/blob/master/src/binary_to_num.f90#L55

The CRAN team wrote to change that (line breaks added):
According to the Fortran standards, numerical values are just an enumeration.
What e.g. real(kind=4) means (or even if it is accepted) is implementation dependent.
Please change them to something portable.
kind(1.0) or kind(1.0d0} are  commonly used, as is c_double from iso_c_binding.

There are differing(?) answers on stackoverflow that I don't understand:
https://stackoverflow.com/a/3170438

With what should I replace the current code?
A pointer to relevant info would already be highly appreciated.

Thanks ahead,
Berry

PS: I contacted the original author, but his Fortran skills also do not suffice to solve this issue...
PPS: a related issue came up in this list yesterday:
https://stat.ethz.ch/pipermail/r-package-devel/2023q3/009514.html


	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Thu Aug 31 09:29:54 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Thu, 31 Aug 2023 10:29:54 +0300
Subject: [R-pkg-devel] fortran integer(kind=)
In-Reply-To: <GV2PR02MB877034AA18F7E1540B817AE8D5E5A@GV2PR02MB8770.eurprd02.prod.outlook.com>
References: <d3eaa058-6d46-c7d5-33f0-d8c0a18f1dcc@stats.ox.ac.uk>
 <GV2PR02MB8770482021C0C4CA7B1639EFD5E6A@GV2PR02MB8770.eurprd02.prod.outlook.com>
 <GV2PR02MB877034AA18F7E1540B817AE8D5E5A@GV2PR02MB8770.eurprd02.prod.outlook.com>
Message-ID: <20230831102954.12cf47d0@Tarkus>

On Thu, 31 Aug 2023 06:52:47 +0000
Berry Boessenkool <berryboessenkool at hotmail.com> wrote:

> my R package dwdradar uses Fortran code with the input parameter
> integer(KIND=2):
> https://github.com/brry/dwdradar/blob/master/src/binary_to_num.f90#L20
> https://github.com/brry/dwdradar/blob/master/src/binary_to_num.f90#L55

The "raw" argument of the Fortran function originates from the
"dat" argument to the R function "bin2num", which, in turn, originates
from readBin(what = raw()):
https://github.com/brry/dwdradar/blob/master/R/bin2num.R#L21-L25
https://github.com/brry/dwdradar/blob/master/R/readRadarFile.R#L51

"Raw" vectors correspond to the C type unsigned char, which you seem to
be interpreting as 16-bit integers instead. (This might be a violation
of aliasing rules, but the compiler is not in a position to see it, and
it's been working for years.) The 16-bit integer type in Fortran can be
declared using the iso_c_binding module:

use, intrinsic :: iso_c_binding, only: c_int16_t
integer(KIND=c_int16_t),DIMENSION(Flength),INTENT(in)::raw

There's probably a safer and only slightly less performant way to
implement binary_to_num in R:

dat <- as.integer(dat)
# interpret the bytes as little-endian double-byte integers
dat <- dat[seq(1, length(dat), 2)] + 256 * dat[seq(2, length(dat), 2)]
# extract the 12-bit data
out <- bitwAnd(dat, 4095)
# set the missing flag
is.na(out) <- as.logical(bitwAnd(dat, bitwShiftL(1, 13)))
# set the negative flag
out <- -1 * as.logical(bitwAnd(dat, bitwShiftL(1, 14)))
# set the clutter flag
out[as.logical(bitwAnd(dat, bitwShiftL(1, 15)))] <- clutter

-- 
Best regards,
Ivan


From thom@@@petzo|dt @end|ng |rom tu-dre@den@de  Thu Aug 31 11:41:55 2023
From: thom@@@petzo|dt @end|ng |rom tu-dre@den@de (Thomas Petzoldt)
Date: Thu, 31 Aug 2023 11:41:55 +0200
Subject: [R-pkg-devel] Modernizing legacy Fortran:, REAL(kind=8)
In-Reply-To: <20230830125803.0d0b7290@Tarkus>
References: <2c2d8db5-182f-11ac-4b9e-03f2e09ecb8c@tu-dresden.de>
 <20230830125803.0d0b7290@Tarkus>
Message-ID: <e67eaa13-b392-a313-bcf3-5c9cfa4eed4a@tu-dresden.de>

On 30.08.2023 at 11:58 Ivan Krylov wrote:
> On Wed, 30 Aug 2023 08:43:04 +0200
> Thomas Petzoldt <thomas.petzoldt at tu-dresden.de> wrote:
> 
>> a) change REAL(kind=8) back to DOUBLE PRECISION that is again old
>> style. It seems to be portable and is still widely used.
> 
> I don't have a reference as good as the Fortran standard, but Steve
> Lionel said in Dr. Fortran [*] that DOUBLE PRECISION is still part of
> the standard fixed-form syntax.
> 
>>   COMPLEX(KIND=8)
> 
> This could be particularly problematic if you're trying to interoperate
> with C, but will probably not surface unless you use LTO:
> https://bugs.r-project.org/show_bug.cgi?id=18430
> 
> Unfortunately, there's no standard DOUBLE COMPLEX.
> 

Thank you, this helps. I had a look in Dr. Fortran myself and some other 
sites, but especially the COMPLEX definitions remain unclear.

I tried now the following, because the included original Fortran codes 
follow slightly different standards:

- replace COMPLEX(KIND=8) with DOUBLE COMPLEX in source files that use 
DOUBLE PRECISION otherwise

- replace real(kind=8) with real(kind=kind(0.0d0)) in the more modern 
source files

This is pragmatic and may not be the best way, but looks mostly 
consistent. Now I checked the package and everything was ok, but I was 
not able reproduce the warnings from the previous version.

I assume that I have to set an environment variable to see the warnings, 
but which one?

I use gfortran/gcc 13.2.1-1 on Fedora 38.

Thanks!

Thomas

-- 
https://tu-dresden.de/Members/thomas.petzoldt

From edd @end|ng |rom deb|@n@org  Thu Aug 31 14:54:29 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Thu, 31 Aug 2023 07:54:29 -0500
Subject: [R-pkg-devel] What to do when a package is archived from CRAN
In-Reply-To: <697fb806-5962-48f3-950e-4fcabec0dd4c@gmail.com>
References: <20230827002220.1ac419f9@Tarkus>
 <E8BAA352-B7D3-4C31-9AA3-D9C8C853B069@hiddenelephants.co.uk>
 <0651845e-34b0-4986-a575-0dd609777793@gmail.com>
 <a7e4e703-7357-2819-75a8-ce2d3e9287dc@statistik.tu-dortmund.de>
 <57d981a1-78ca-48cd-9871-14ca0ea55a5b@gmail.com>
 <697fb806-5962-48f3-950e-4fcabec0dd4c@gmail.com>
Message-ID: <25840.36229.529582.693181@rob.eddelbuettel.com>


On 31 August 2023 at 07:32, SHIMA Tatsuya wrote:
| I submitted prqlr 0.5.1 yesterday, which is almost identical to prqlr 
| 0.5.0, and prqlr is now available again on CRAN.
| Thanks to the CRAN reviewers for their quick reaction.

And it is gone again (per CRANberries). Never a dull moment with CRAN. 

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From ||u|@@rev|||@ @end|ng |rom gm@||@com  Thu Aug 31 16:24:32 2023
From: ||u|@@rev|||@ @end|ng |rom gm@||@com (=?UTF-8?Q?Llu=C3=ADs_Revilla?=)
Date: Thu, 31 Aug 2023 16:24:32 +0200
Subject: [R-pkg-devel] What to do when a package is archived from CRAN
In-Reply-To: <25840.36229.529582.693181@rob.eddelbuettel.com>
References: <20230827002220.1ac419f9@Tarkus>
 <E8BAA352-B7D3-4C31-9AA3-D9C8C853B069@hiddenelephants.co.uk>
 <0651845e-34b0-4986-a575-0dd609777793@gmail.com>
 <a7e4e703-7357-2819-75a8-ce2d3e9287dc@statistik.tu-dortmund.de>
 <57d981a1-78ca-48cd-9871-14ca0ea55a5b@gmail.com>
 <697fb806-5962-48f3-950e-4fcabec0dd4c@gmail.com>
 <25840.36229.529582.693181@rob.eddelbuettel.com>
Message-ID: <CAN+W6_s=xWcqok1Ahy-UaJ6TiJYWLiohLSPUHwptirr7uAratw@mail.gmail.com>

The reasons that CRAN has for this (from:
https://cran.r-project.org/src/contrib/PACKAGES.in) are:

X-CRAN-History: Archived on 2023-08-19 for policy violation.
  Downloading on installation from github.
  Unarchived on 2023-08-30.
X-CRAN-Comment: Archived on 2023-08-31 for policy violation.
  .
  Downloading on installation from github.

I see your file src/rust/Cargo.lock has some references to github.com
which is probably what has triggered this.
I'm sorry I cannot help further.

Good luck!


On Thu, 31 Aug 2023 at 14:54, Dirk Eddelbuettel <edd at debian.org> wrote:

>
> On 31 August 2023 at 07:32, SHIMA Tatsuya wrote:
> | I submitted prqlr 0.5.1 yesterday, which is almost identical to prqlr
> | 0.5.0, and prqlr is now available again on CRAN.
> | Thanks to the CRAN reviewers for their quick reaction.
>
> And it is gone again (per CRANberries). Never a dull moment with CRAN.
>
> Dirk
>
> --
> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From |uc@r @end|ng |rom |edor@project@org  Thu Aug 31 17:04:45 2023
From: |uc@r @end|ng |rom |edor@project@org (=?UTF-8?Q?I=C3=B1aki_Ucar?=)
Date: Thu, 31 Aug 2023 17:04:45 +0200
Subject: [R-pkg-devel] What to do when a package is archived from CRAN
In-Reply-To: <723f8ff4-47d4-46bc-b2d4-fac01768349e@gmail.com>
References: <08ba44ac-fd5c-4e45-b310-7ce9372ea1a3@gmail.com>
 <20230827002220.1ac419f9@Tarkus>
 <723f8ff4-47d4-46bc-b2d4-fac01768349e@gmail.com>
Message-ID: <CALEXWq1UPAL3NGKYpVhWmt=0FtKE95DDG7S8hdd-Ccr_QxBG0A@mail.gmail.com>

About licensing,

On Sun, 27 Aug 2023 at 17:30, SHIMA Tatsuya <ts1s1andn at gmail.com> wrote:
>
> Hi Ivan, thanks for taking the time to look at all the details of this.
>
>  > You licensed the package as MIT. Are your dependencies compatible
> with MIT? All direct dependencies of your Rust code seem to be licensed
> under either MIT or Apache-2.0, which seems to be compatible.
>
> I am not a legal expert, but as you have seen all of prqlr's dependent crates are compatible with the MIT license, and I interpret this to mean that there is no problem distributing anything containing them under the MIT license.

No, that's not what "compatibility" means. You cannot just take n
pieces of software, bundle them, and release them under a license of
your choice (unless their licenses enable you to do so via some
re-licensing clause, like the Artistic-2.0 license does).

That's not the case here. By licensing your package as MIT, you are
violating the terms of the Apache-2.0 license, because I assume that
you are not modifying those dependencies at all. So your work should
be both MIT and Apache-2.0 (and others, should they exist, and
provided they are compatible).

Best,
-- 
I?aki ?car


From @vr@h@m@@d|er @end|ng |rom gm@||@com  Thu Aug 31 18:32:24 2023
From: @vr@h@m@@d|er @end|ng |rom gm@||@com (Avraham Adler)
Date: Thu, 31 Aug 2023 16:32:24 +0000
Subject: [R-pkg-devel] Modernizing legacy Fortran:, REAL(kind=8)
In-Reply-To: <e67eaa13-b392-a313-bcf3-5c9cfa4eed4a@tu-dresden.de>
References: <2c2d8db5-182f-11ac-4b9e-03f2e09ecb8c@tu-dresden.de>
 <20230830125803.0d0b7290@Tarkus>
 <e67eaa13-b392-a313-bcf3-5c9cfa4eed4a@tu-dresden.de>
Message-ID: <CAL6gwnLmrDGtWfR5SE-nRTW95hXM4Lixe6OJNOrAr11eB7Gu2A@mail.gmail.com>

Hi, Thomas.

Since all the Fortran code must talk to R through SEXP's written in C,
wouldn't it make sense to use " C_DOUBLE_COMPLEX" and " C_DOUBLE" to ensure
maximum compatibility?

Thanks,

Avi

On Thu, Aug 31, 2023 at 9:42?AM Thomas Petzoldt <
thomas.petzoldt at tu-dresden.de> wrote:

> On 30.08.2023 at 11:58 Ivan Krylov wrote:
> > On Wed, 30 Aug 2023 08:43:04 +0200
> > Thomas Petzoldt <thomas.petzoldt at tu-dresden.de> wrote:
> >
> >> a) change REAL(kind=8) back to DOUBLE PRECISION that is again old
> >> style. It seems to be portable and is still widely used.
> >
> > I don't have a reference as good as the Fortran standard, but Steve
> > Lionel said in Dr. Fortran [*] that DOUBLE PRECISION is still part of
> > the standard fixed-form syntax.
> >
> >>   COMPLEX(KIND=8)
> >
> > This could be particularly problematic if you're trying to interoperate
> > with C, but will probably not surface unless you use LTO:
> > https://bugs.r-project.org/show_bug.cgi?id=18430
> >
> > Unfortunately, there's no standard DOUBLE COMPLEX.
> >
>
> Thank you, this helps. I had a look in Dr. Fortran myself and some other
> sites, but especially the COMPLEX definitions remain unclear.
>
> I tried now the following, because the included original Fortran codes
> follow slightly different standards:
>
> - replace COMPLEX(KIND=8) with DOUBLE COMPLEX in source files that use
> DOUBLE PRECISION otherwise
>
> - replace real(kind=8) with real(kind=kind(0.0d0)) in the more modern
> source files
>
> This is pragmatic and may not be the best way, but looks mostly
> consistent. Now I checked the package and everything was ok, but I was
> not able reproduce the warnings from the previous version.
>
> I assume that I have to set an environment variable to see the warnings,
> but which one?
>
> I use gfortran/gcc 13.2.1-1 on Fedora 38.
>
> Thanks!
>
> Thomas
>
> --
> https://tu-dresden.de/Members/thomas.petzoldt
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Thu Aug 31 23:52:34 2023
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Thu, 31 Aug 2023 23:52:34 +0200
Subject: [R-pkg-devel] What to do when a package is archived from CRAN
In-Reply-To: <CALEXWq1UPAL3NGKYpVhWmt=0FtKE95DDG7S8hdd-Ccr_QxBG0A@mail.gmail.com>
References: <08ba44ac-fd5c-4e45-b310-7ce9372ea1a3@gmail.com>
 <20230827002220.1ac419f9@Tarkus>
 <723f8ff4-47d4-46bc-b2d4-fac01768349e@gmail.com>
 <CALEXWq1UPAL3NGKYpVhWmt=0FtKE95DDG7S8hdd-Ccr_QxBG0A@mail.gmail.com>
Message-ID: <c5b23b67-391d-d6ba-b6c4-eb3af10bff10@statistik.tu-dortmund.de>

To clarify:
A packae must be single under a single license or a license and 
alternative licenes.
You cannot have 2 licenses at the same time, hence ou have to relicense 
anyway. Of course, you have to check whether the licneses allow for it 
or seek confirmation from all copyright holders.

If that (relicensing) is nt possible, you cannpt bundle such software 
components in a single package.

Best,
Uwe Ligges


On 31.08.2023 17:04, I?aki Ucar wrote:
> About licensing,
> 
> On Sun, 27 Aug 2023 at 17:30, SHIMA Tatsuya <ts1s1andn at gmail.com> wrote:
>>
>> Hi Ivan, thanks for taking the time to look at all the details of this.
>>
>>   > You licensed the package as MIT. Are your dependencies compatible
>> with MIT? All direct dependencies of your Rust code seem to be licensed
>> under either MIT or Apache-2.0, which seems to be compatible.
>>
>> I am not a legal expert, but as you have seen all of prqlr's dependent crates are compatible with the MIT license, and I interpret this to mean that there is no problem distributing anything containing them under the MIT license.
> 
> No, that's not what "compatibility" means. You cannot just take n
> pieces of software, bundle them, and release them under a license of
> your choice (unless their licenses enable you to do so via some
> re-licensing clause, like the Artistic-2.0 license does).
> 
> That's not the case here. By licensing your package as MIT, you are
> violating the terms of the Apache-2.0 license, because I assume that
> you are not modifying those dependencies at all. So your work should
> be both MIT and Apache-2.0 (and others, should they exist, and
> provided they are compatible).
> 
> Best,


From md@ncho @end|ng |rom bu@|ne@@-@c|ence@|o  Fri Sep  1 14:26:32 2023
From: md@ncho @end|ng |rom bu@|ne@@-@c|ence@|o (Matt Dancho)
Date: Fri, 1 Sep 2023 08:26:32 -0400
Subject: [R-pkg-devel] CRAN Detected Using More Than 2 Cores By Default
Message-ID: <CAN9wbhwOTwRiK4cvEEC92ukVqgiYPaQXRgcay7gd+3gjJgk1MQ@mail.gmail.com>

Hello,

First time caller. Long time listener. I have an issue identified in my
Modeltime R package version 1.2.8 CRAN submission.

*CRAN Issue*
Flavor: r-devel-linux-x86_64-debian-gcc
Check: tests, Result: NOTE
     Running 'testthat.R' [20s/7s]
   Running R code in 'testthat.R' had CPU time 2.7 times elapsed time

Flavor: r-devel-linux-x86_64-debian-gcc
Check: re-building of vignette outputs, Result: NOTE
   Re-building vignettes had CPU time 2.7 times elapsed time

both ratios indicate you are using more than 2 cores by default. Please
see the CRAN policies.


*Problem:*
When preparing relatively minor updates, I have submitted modeltime version
1.2.8 (
https://github.com/business-science/modeltime
) to CRAN but did not pass the incoming checks.

The error occurs on Debian indicating more than 2 cores are being used by
default.

I?m not sure how to detect where this is happening. Not how to fix it.

I do permit parallel processing in some modeltime functions but everything
is set to 1 core by default. The vignette and tests should be processed


Please let me know if you see something in my code that I could be missing
causing this issue.

Thanks, Matt

	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Fri Sep  1 16:04:53 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Fri, 1 Sep 2023 17:04:53 +0300
Subject: [R-pkg-devel] CRAN Detected Using More Than 2 Cores By Default
In-Reply-To: <CAN9wbhwOTwRiK4cvEEC92ukVqgiYPaQXRgcay7gd+3gjJgk1MQ@mail.gmail.com>
References: <CAN9wbhwOTwRiK4cvEEC92ukVqgiYPaQXRgcay7gd+3gjJgk1MQ@mail.gmail.com>
Message-ID: <20230901170453.3ce4f542@arachnoid>

? Fri, 1 Sep 2023 08:26:32 -0400
Matt Dancho <mdancho at business-science.io> ?????:

> Check: tests, Result: NOTE
>      Running 'testthat.R' [20s/7s]
>    Running R code in 'testthat.R' had CPU time 2.7 times elapsed time
> 
> Flavor: r-devel-linux-x86_64-debian-gcc
> Check: re-building of vignette outputs, Result: NOTE
>    Re-building vignettes had CPU time 2.7 times elapsed time

Here's the conclusion of a recent R-pkg-devel thread:
https://stat.ethz.ch/pipermail/r-package-devel/2023q3/009513.html

It might help to set the environment variable OMP_THREAD_LIMIT to 2 in
your tests and vignettes, but with examples (and, generally, with
defaults in your functions) it will be harder to achieve compliance:
https://github.com/Rdatatable/data.table/issues/5658#issuecomment-1700972630

I don't see an immediate dependency of your package that could be doing
something in parallel, but maybe you'll be able to find it after
reading the R-package-devel thread.

-- 
Best regards,
Ivan


From h@nyu@@ong @end|ng |rom duke@edu  Fri Sep  1 10:14:12 2023
From: h@nyu@@ong @end|ng |rom duke@edu (Hanyu Song)
Date: Fri, 1 Sep 2023 08:14:12 +0000
Subject: [R-pkg-devel] Python module dependency
Message-ID: <BN7PR05MB4466E057890E4D3BF9DC8883EFE4A@BN7PR05MB4466.namprd05.prod.outlook.com>

Hello,

I am writing an R package that depends on a very uncommonly used Python module named "ctef" and I have several questions about it:

a. How shall I write examples for the functions that depend on the Python module? Shall I just do:
#' @examplesIf reticulate::py_module_available('ctef')
#' my_function_that_depends_on_ctef(arg1, arg2)
in case the CRAN testing platform does not have the module?

b. I read from the documentation of the R package "reticulate" that we should delay load the Python modules, but it is not entirely clear to me how to do it.

Are the following lines of code sufficient for that purpose? Do I need to create any virtual environment?

#'  global reference to ctef
#'
#'@description
#'`ctef` will be initialized in .onLoad.
#'
ctef <- NULL

#' Delay load ctef module
#'
#' @description
#' `.onLoad` delays loading ctef module (will only be loaded when accessed via $).
#'
#' @param libname Library name
#' @param pkgname Package name
.onLoad <- function(libname, pkgname) {
    ctef <<- reticulate::import("ctef", delay_load = TRUE)

}

c. How shall I import the module in my R code? For now I included the import function in my_function_that_depends_on_ctef; see below:
my_function_that_depends_on_ctef <- function(X, k) {
 mod <- reticulate::import('ctef',delay_load = TRUE)
  input <- as.matrix(X)
  res <- mod$ctef$ctef(input,as.integer(k))
return(res)
}

Is this correct?

There are not many R packages that depend on a Python module, so the resources are quite limited. Thank you for your help.


Best,
Hanyu Song


	[[alternative HTML version deleted]]


From vo|ody@ @end|ng |rom m|nd@pr|ng@com  Fri Sep  1 16:51:46 2023
From: vo|ody@ @end|ng |rom m|nd@pr|ng@com (Vladimir Dergachev)
Date: Fri, 1 Sep 2023 10:51:46 -0400 (EDT)
Subject: [R-pkg-devel] Python module dependency
In-Reply-To: <BN7PR05MB4466E057890E4D3BF9DC8883EFE4A@BN7PR05MB4466.namprd05.prod.outlook.com>
References: <BN7PR05MB4466E057890E4D3BF9DC8883EFE4A@BN7PR05MB4466.namprd05.prod.outlook.com>
Message-ID: <alpine.DEB.2.22.394.2309011048480.14518@iridium>


Have you consider translating ctef into R ?

This would remove the dependencies and make your package much more robust.
And would make it much easier to pass CRAN checks.

Looking at ctef code it is pure Python and there aren't many lines. And in 
my experience, one line of R is worth 10 lines of Python :)

Also, ctef has a dependency on KMeans, so translating ctef into R will 
remove that too.

best

Vladimir Dergachev

On Fri, 1 Sep 2023, Hanyu Song wrote:

> Hello,
>
> I am writing an R package that depends on a very uncommonly used Python module named "ctef" and I have several questions about it:
>
> a. How shall I write examples for the functions that depend on the Python module? Shall I just do:
> #' @examplesIf reticulate::py_module_available('ctef')
> #' my_function_that_depends_on_ctef(arg1, arg2)
> in case the CRAN testing platform does not have the module?
>
> b. I read from the documentation of the R package "reticulate" that we should delay load the Python modules, but it is not entirely clear to me how to do it.
>
> Are the following lines of code sufficient for that purpose? Do I need to create any virtual environment?
>
> #'  global reference to ctef
> #'
> #'@description
> #'`ctef` will be initialized in .onLoad.
> #'
> ctef <- NULL
>
> #' Delay load ctef module
> #'
> #' @description
> #' `.onLoad` delays loading ctef module (will only be loaded when accessed via $).
> #'
> #' @param libname Library name
> #' @param pkgname Package name
> .onLoad <- function(libname, pkgname) {
>    ctef <<- reticulate::import("ctef", delay_load = TRUE)
>
> }
>
> c. How shall I import the module in my R code? For now I included the import function in my_function_that_depends_on_ctef; see below:
> my_function_that_depends_on_ctef <- function(X, k) {
> mod <- reticulate::import('ctef',delay_load = TRUE)
>  input <- as.matrix(X)
>  res <- mod$ctef$ctef(input,as.integer(k))
> return(res)
> }
>
> Is this correct?
>
> There are not many R packages that depend on a Python module, so the resources are quite limited. Thank you for your help.
>
>
> Best,
> Hanyu Song
>
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From kry|ov@r00t @end|ng |rom gm@||@com  Fri Sep  1 23:55:53 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Sat, 2 Sep 2023 00:55:53 +0300
Subject: [R-pkg-devel] Python module dependency
In-Reply-To: <BN7PR05MB4466E057890E4D3BF9DC8883EFE4A@BN7PR05MB4466.namprd05.prod.outlook.com>
References: <BN7PR05MB4466E057890E4D3BF9DC8883EFE4A@BN7PR05MB4466.namprd05.prod.outlook.com>
Message-ID: <20230902005553.1038260a@Tarkus>

On Fri, 1 Sep 2023 08:14:12 +0000
Hanyu Song <hanyu.song at duke.edu> wrote:

> b. I read from the documentation of the R package "reticulate" that
> we should delay load the Python modules, but it is not entirely clear
> to me how to do it.

> Do I need to create any virtual environment?

Not in the package code (unless the package is specifically designed to
manage python virtual environments and therefore clearly has user's
permission to access the filesystem). Virtual environments are here,
like R libraries, for the user to create and manage.

> Are the following lines of code sufficient for that purpose?
> 
> ctef <- NULL
> .onLoad <- function(libname, pkgname) {
>     ctef <<- reticulate::import("ctef", delay_load = TRUE)
> }

Yes, according to
https://cran.r-project.org/package=reticulate/vignettes/package.html.

It's important both to avoid a plain

ctef <- reticulate::import("ctef")

in the package namespace (because that's evaluated at source package
installation time / binary package build time, and you don't want to
capture references to a Python module that could have been moved since
the R package has been installed) and to delay it further using the
delay_load = TRUE argument (to let the user alter the Python search
path even after loading your R package that depends on the python
module).

> c. How shall I import the module in my R code?

Now that you have the object created above and initialised from
.onLoad, your function_that_depends_on_ctef should be able to just use
it:

function_that_depends_on_ctef <- function(X, k) {
 input <- as.matrix(X)
 ctef$ctef$ctef(input,as.integer(k))
}

Make sure to declare the dependency in SystemRequirements: of your
DESCRIPTION.

-- 
Best regards,
Ivan


From md@ncho @end|ng |rom bu@|ne@@-@c|ence@|o  Sat Sep  2 13:29:48 2023
From: md@ncho @end|ng |rom bu@|ne@@-@c|ence@|o (Matt Dancho)
Date: Sat, 2 Sep 2023 07:29:48 -0400
Subject: [R-pkg-devel] CRAN Detected Using More Than 2 Cores By Default
In-Reply-To: <20230901170453.3ce4f542@arachnoid>
References: <CAN9wbhwOTwRiK4cvEEC92ukVqgiYPaQXRgcay7gd+3gjJgk1MQ@mail.gmail.com>
 <20230901170453.3ce4f542@arachnoid>
Message-ID: <CAN9wbhxDy9vzgzj-XTT5jsMLJMJXWuQ+Z6k1v-N_WMmL-qJNFw@mail.gmail.com>

Thank you very much. I?ll try this and let you know.

On Fri, Sep 1, 2023 at 10:04 AM Ivan Krylov <krylov.r00t at gmail.com> wrote:

> ? Fri, 1 Sep 2023 08:26:32 -0400
> Matt Dancho <mdancho at business-science.io> ?????:
>
> > Check: tests, Result: NOTE
> >      Running 'testthat.R' [20s/7s]
> >    Running R code in 'testthat.R' had CPU time 2.7 times elapsed time
> >
> > Flavor: r-devel-linux-x86_64-debian-gcc
> > Check: re-building of vignette outputs, Result: NOTE
> >    Re-building vignettes had CPU time 2.7 times elapsed time
>
> Here's the conclusion of a recent R-pkg-devel thread:
> https://stat.ethz.ch/pipermail/r-package-devel/2023q3/009513.html
>
> It might help to set the environment variable OMP_THREAD_LIMIT to 2 in
> your tests and vignettes, but with examples (and, generally, with
> defaults in your functions) it will be harder to achieve compliance:
>
> https://github.com/Rdatatable/data.table/issues/5658#issuecomment-1700972630
>
> I don't see an immediate dependency of your package that could be doing
> something in parallel, but maybe you'll be able to find it after
> reading the R-package-devel thread.
>
> --
> Best regards,
> Ivan
>

	[[alternative HTML version deleted]]


From t@1@1@ndn @end|ng |rom gm@||@com  Sat Sep  2 15:03:22 2023
From: t@1@1@ndn @end|ng |rom gm@||@com (SHIMA Tatsuya)
Date: Sat, 2 Sep 2023 22:03:22 +0900
Subject: [R-pkg-devel] What to do when a package is archived from CRAN
In-Reply-To: <CAN+W6_s=xWcqok1Ahy-UaJ6TiJYWLiohLSPUHwptirr7uAratw@mail.gmail.com>
References: <20230827002220.1ac419f9@Tarkus>
 <E8BAA352-B7D3-4C31-9AA3-D9C8C853B069@hiddenelephants.co.uk>
 <0651845e-34b0-4986-a575-0dd609777793@gmail.com>
 <a7e4e703-7357-2819-75a8-ce2d3e9287dc@statistik.tu-dortmund.de>
 <57d981a1-78ca-48cd-9871-14ca0ea55a5b@gmail.com>
 <697fb806-5962-48f3-950e-4fcabec0dd4c@gmail.com>
 <25840.36229.529582.693181@rob.eddelbuettel.com>
 <CAN+W6_s=xWcqok1Ahy-UaJ6TiJYWLiohLSPUHwptirr7uAratw@mail.gmail.com>
Message-ID: <43c0b2fd-9169-449c-b12f-12d8cd8cb948@gmail.com>

Thanks Llu?s, I did not know I could find it there.

For this archive, CRAN sent me an e-mail urging me to stop downloading 
from crates.io and vendoring all Rust source code, even if it exceeds 5MB.

On 2023/08/31 23:24, Llu?s Revilla wrote:
> The reasons that CRAN has for this (from: 
> https://cran.r-project.org/src/contrib/PACKAGES.in) are:
> X-CRAN-History: Archived on 2023-08-19 for policy violation.
>    Downloading on installation from github.
>    Unarchived on 2023-08-30.
> X-CRAN-Comment: Archived on 2023-08-31 for policy violation.
>    .
>    Downloading on installation from github.
>
> I see your file src/rust/Cargo.lock has some references to github.com 
> <http://github.com> which is probably what has triggered this. I'm 
> sorry I cannot help further.
> Good luck!
>
> On Thu, 31 Aug 2023 at 14:54, Dirk Eddelbuettel <edd at debian.org> wrote:
>
>
>     On 31 August 2023 at 07:32, SHIMA Tatsuya wrote:
>     | I submitted prqlr 0.5.1 yesterday, which is almost identical to
>     prqlr
>     | 0.5.0, and prqlr is now available again on CRAN.
>     | Thanks to the CRAN reviewers for their quick reaction.
>
>     And it is gone again (per CRANberries). Never a dull moment with
>     CRAN.
>
>     Dirk
>
>     -- 
>     dirk.eddelbuettel.com <http://dirk.eddelbuettel.com> |
>     @eddelbuettel | edd at debian.org
>
>     ______________________________________________
>     R-package-devel at r-project.org mailing list
>     https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
	[[alternative HTML version deleted]]


From md@ncho @end|ng |rom bu@|ne@@-@c|ence@|o  Sat Sep  2 17:17:53 2023
From: md@ncho @end|ng |rom bu@|ne@@-@c|ence@|o (Matt Dancho)
Date: Sat, 2 Sep 2023 11:17:53 -0400
Subject: [R-pkg-devel] CRAN Detected Using More Than 2 Cores By Default
In-Reply-To: <CAN9wbhxDy9vzgzj-XTT5jsMLJMJXWuQ+Z6k1v-N_WMmL-qJNFw@mail.gmail.com>
References: <CAN9wbhwOTwRiK4cvEEC92ukVqgiYPaQXRgcay7gd+3gjJgk1MQ@mail.gmail.com>
 <20230901170453.3ce4f542@arachnoid>
 <CAN9wbhxDy9vzgzj-XTT5jsMLJMJXWuQ+Z6k1v-N_WMmL-qJNFw@mail.gmail.com>
Message-ID: <CAN9wbhzOarSc6K=LgLfZMbaM34XiA6_JCpaGNNMNpe_9ig=Gog@mail.gmail.com>

I was able to get it to work with your solution. Thanks a lot.

Solution was to set Sys.setenv(?OMP_THREAD_LIMIT?, ?1?) on load. I may
adjust this down the road but modeltime 1.2.8 is now on CRAN.

Thanks, Matt

On Sat, Sep 2, 2023 at 7:29 AM Matt Dancho <mdancho at business-science.io>
wrote:

> Thank you very much. I?ll try this and let you know.
>
> On Fri, Sep 1, 2023 at 10:04 AM Ivan Krylov <krylov.r00t at gmail.com> wrote:
>
>> ? Fri, 1 Sep 2023 08:26:32 -0400
>> Matt Dancho <mdancho at business-science.io> ?????:
>>
>> > Check: tests, Result: NOTE
>> >      Running 'testthat.R' [20s/7s]
>> >    Running R code in 'testthat.R' had CPU time 2.7 times elapsed time
>> >
>> > Flavor: r-devel-linux-x86_64-debian-gcc
>> > Check: re-building of vignette outputs, Result: NOTE
>> >    Re-building vignettes had CPU time 2.7 times elapsed time
>>
>> Here's the conclusion of a recent R-pkg-devel thread:
>> https://stat.ethz.ch/pipermail/r-package-devel/2023q3/009513.html
>>
>> It might help to set the environment variable
>> OMP_THREAD_LIMIT to 2 in
>> your tests and vignettes, but with examples (and, generally, with
>> defaults in your functions) it will be harder to achieve compliance:
>>
>> https://github.com/Rdatatable/data.table/issues/5658#issuecomment-1700972630
>>
>> I don't see an immediate dependency of your package that could be doing
>> something in parallel, but maybe you'll be able to find it after
>> reading the R-package-devel thread.
>>
>> --
>> Best regards,
>> Ivan
>>
>

	[[alternative HTML version deleted]]


From pro|jcn@@h @end|ng |rom gm@||@com  Sat Sep  2 20:34:08 2023
From: pro|jcn@@h @end|ng |rom gm@||@com (J C Nash)
Date: Sat, 2 Sep 2023 14:34:08 -0400
Subject: [R-pkg-devel] URL syntax causes R CMD build failure - a fix
Message-ID: <97289a48-a5f3-090e-454b-f6a07fba9962@gmail.com>

I'm posting this in case it helps some other developers getting build failure.

Recently package nlsr that I maintain got a message that it failed to build on
some platforms. The exact source of the problem is still to be illuminated,
but seems to be in knitr::render and/or pandoc or an unfortunate interaction.
An update to pandoc triggered a failure to process a vignette that had been
happily processed for several years. The error messages are unhelpful, at least
to me,

    Error at "nlsr-devdoc.knit.md" (line 5419, column 1):
    unexpected end of input
    Error: pandoc document conversion failed with error 64
    Execution halted

Unfortunately, adding "keep_md: TRUE" (you need upper case TRUE to save it when
there is no error of this type), did not save the intermediate file in this
case. However, searching for "pandoc error 64" presented one web page where the author
used brute force search of his document by removing / replacing sections to find
the line(s) that caused trouble. This is a little tedious, but effective. In my
case, the offending line turned out to be a copied and pasted URL

https://en.wikipedia.org/wiki/Levenberg%E2%80%93Marquardt_algorithm

The coded characters can be replaced by a hyphen, to give,

https://en.wikipedia.org/wiki/Levenberg-Marquardt_algorithm

and this, when pasted in Mozilla Firefox at least, will go to the appropriate
wikipedia page.

I'd be interested in hearing from others who have had similar difficulties. I
suspect this is relatively rare, and causing some sort of infelicity in the
output of knitr::render that then trips up some versions of pandoc, that may,
for instance, be now applying stricter rules to URL syntax.

Best,

John Nash


From jch@|| @end|ng |rom @c|tov@t|on@com  Sat Sep  2 20:50:57 2023
From: jch@|| @end|ng |rom @c|tov@t|on@com (John Carter Hall)
Date: Sat, 2 Sep 2023 18:50:57 +0000
Subject: [R-pkg-devel] R Package Development -- PDF Manual without Index
Message-ID: <PH0PR16MB5042F07F1E9AD74B4FA2CB05DCEBA@PH0PR16MB5042.namprd16.prod.outlook.com>

Hello R-Package-Devel Mailing List,

I am new to R package development, and am having to limp a project across the line after my organization has gone through significant changes in recent weeks.
As such, I am emailing to understand what I can do to solve an error I am having:

The Error

Flavor: r-devel-linux-x86_64-debian-gcc
Check: PDF version of manual without index, Result: ERROR

The Issue

For whatever reason, the R CMD check? desires different fields in the DESCRIPTION file than does the devtools::check() function (particularly w.r.t. the 'Author' field), and so I have to use devtools to build/check the package. The devtools::build_manual function, however, does not work, and so I am forced to utilize Rd2pdf to create my PDF manual.

I have to make the manual via Windows due to issues with an Ubuntu installation of my package. However, the package is intended for Linux/Debian audiences.

What I Need Help With

I believe I have the manual created. I do not know if this manual needs to be created when CRAN does their checks, but I have the document (I am comparing its appearance to the manual of ggplot2?, and the structure is similar). I do not know where it needs to be located. I have tried the root directory of the package, the doc? folder, etc... but nothing works.

What can I do?

Best,
Carter


	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Sat Sep  2 22:17:54 2023
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sat, 2 Sep 2023 16:17:54 -0400
Subject: [R-pkg-devel] R Package Development -- PDF Manual without Index
In-Reply-To: <PH0PR16MB5042F07F1E9AD74B4FA2CB05DCEBA@PH0PR16MB5042.namprd16.prod.outlook.com>
References: <PH0PR16MB5042F07F1E9AD74B4FA2CB05DCEBA@PH0PR16MB5042.namprd16.prod.outlook.com>
Message-ID: <c8c4e303-ed49-b01b-6934-9db696ce35d1@gmail.com>

On 02/09/2023 2:50 p.m., John Carter Hall wrote:
> Hello R-Package-Devel Mailing List,
> 
> I am new to R package development, and am having to limp a project across the line after my organization has gone through significant changes in recent weeks.
> As such, I am emailing to understand what I can do to solve an error I am having:
> 
> The Error
> 
> Flavor: r-devel-linux-x86_64-debian-gcc
> Check: PDF version of manual without index, Result: ERROR
> 
> The Issue
> 
> For whatever reason, the R CMD check? desires different fields in the DESCRIPTION file than does the devtools::check() function (particularly w.r.t. the 'Author' field), and so I have to use devtools to build/check the package. The devtools::build_manual function, however, does not work, and so I am forced to utilize Rd2pdf to create my PDF manual.

CRAN will use R CMD check, so if things aren't working there, they won't 
accept your package.
> 
> I have to make the manual via Windows due to issues with an Ubuntu installation of my package. However, the package is intended for Linux/Debian audiences.
> 
> What I Need Help With
> 
> I believe I have the manual created. I do not know if this manual needs to be created when CRAN does their checks, but I have the document (I am comparing its appearance to the manual of ggplot2?, and the structure is similar). I do not know where it needs to be located. I have tried the root directory of the package, the doc? folder, etc... but nothing works.

You don't need to make a manual at all.  CRAN will do that for you.

Duncan Murdoch


From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Sat Sep  2 22:45:14 2023
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Sat, 02 Sep 2023 13:45:14 -0700
Subject: [R-pkg-devel] R Package Development -- PDF Manual without Index
In-Reply-To: <PH0PR16MB5042F07F1E9AD74B4FA2CB05DCEBA@PH0PR16MB5042.namprd16.prod.outlook.com>
References: <PH0PR16MB5042F07F1E9AD74B4FA2CB05DCEBA@PH0PR16MB5042.namprd16.prod.outlook.com>
Message-ID: <B5DAD478-9113-4630-994B-4C8E09D5434A@dcn.davis.ca.us>

CRAN doesn't care about whether devtools is happy. R CMD check --as-cran needs to work, e.g. as in [1].

Devtools is a convenience tool to help put all of the necessary bits in the right places in your source code according to [2]. But if there is any disagreement about what works, devtools is never the definitive answer.

If you put your current package source code online, as in on GitHub and share that here, then someone may be able to help you bridge the gap to satisfy both devtools and CRAN.

[1] https://kbroman.org/pkg_primer/pages/check.html
[2] https://cran.r-project.org/doc/manuals/R-exts.html

On September 2, 2023 11:50:57 AM PDT, John Carter Hall <jchall at scitovation.com> wrote:
>Hello R-Package-Devel Mailing List,
>
>I am new to R package development, and am having to limp a project across the line after my organization has gone through significant changes in recent weeks.
>As such, I am emailing to understand what I can do to solve an error I am having:
>
>The Error
>
>Flavor: r-devel-linux-x86_64-debian-gcc
>Check: PDF version of manual without index, Result: ERROR
>
>The Issue
>
>For whatever reason, the R CMD check? desires different fields in the DESCRIPTION file than does the devtools::check() function (particularly w.r.t. the 'Author' field), and so I have to use devtools to build/check the package. The devtools::build_manual function, however, does not work, and so I am forced to utilize Rd2pdf to create my PDF manual.
>
>I have to make the manual via Windows due to issues with an Ubuntu installation of my package. However, the package is intended for Linux/Debian audiences.
>
>What I Need Help With
>
>I believe I have the manual created. I do not know if this manual needs to be created when CRAN does their checks, but I have the document (I am comparing its appearance to the manual of ggplot2?, and the structure is similar). I do not know where it needs to be located. I have tried the root directory of the package, the doc? folder, etc... but nothing works.
>
>What can I do?
>
>Best,
>Carter
>
>
>	[[alternative HTML version deleted]]
>
>______________________________________________
>R-package-devel at r-project.org mailing list
>https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
Sent from my phone. Please excuse my brevity.


From greg @end|ng |rom ||rm@n@y@h@com  Sat Sep  2 23:23:41 2023
From: greg @end|ng |rom ||rm@n@y@h@com (Greg Hunt)
Date: Sun, 3 Sep 2023 07:23:41 +1000
Subject: [R-pkg-devel] URL syntax causes R CMD build failure - a fix
In-Reply-To: <97289a48-a5f3-090e-454b-f6a07fba9962@gmail.com>
References: <97289a48-a5f3-090e-454b-f6a07fba9962@gmail.com>
Message-ID: <CAAS8PA+p0rJkE5Atq2rYrbBSFtmLbWsWii_NtwZkyhxG=hKg3g@mail.gmail.com>

The percent encoded characters appear to be valid in that URL, suggesting
that rejecting them is an error. That kind of error could occur when the
software processing them converts them back to a non-unicode character set.

On Sun, 3 Sep 2023 at 4:34 am, J C Nash <profjcnash at gmail.com> wrote:

> I'm posting this in case it helps some other developers getting build
> failure.
>
> Recently package nlsr that I maintain got a message that it failed to
> build on
> some platforms. The exact source of the problem is still to be illuminated,
> but seems to be in knitr::render and/or pandoc or an unfortunate
> interaction.
> An update to pandoc triggered a failure to process a vignette that had been
> happily processed for several years. The error messages are unhelpful, at
> least
> to me,
>
>     Error at "nlsr-devdoc.knit.md" (line 5419, column 1):
>     unexpected end of input
>     Error: pandoc document conversion failed with error 64
>     Execution halted
>
> Unfortunately, adding "keep_md: TRUE" (you need upper case TRUE to save it
> when
> there is no error of this type), did not save the intermediate file in this
> case. However, searching for "pandoc error 64" presented one web page
> where the author
> used brute force search of his document by removing / replacing sections
> to find
> the line(s) that caused trouble. This is a little tedious, but effective.
> In my
> case, the offending line turned out to be a copied and pasted URL
>
> https://en.wikipedia.org/wiki/Levenberg%E2%80%93Marquardt_algorithm
>
> The coded characters can be replaced by a hyphen, to give,
>
> https://en.wikipedia.org/wiki/Levenberg-Marquardt_algorithm
>
> and this, when pasted in Mozilla Firefox at least, will go to the
> appropriate
> wikipedia page.
>
> I'd be interested in hearing from others who have had similar
> difficulties. I
> suspect this is relatively rare, and causing some sort of infelicity in the
> output of knitr::render that then trips up some versions of pandoc, that
> may,
> for instance, be now applying stricter rules to URL syntax.
>
> Best,
>
> John Nash
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org  Sun Sep  3 00:30:21 2023
From: @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org (Spencer Graves)
Date: Sat, 2 Sep 2023 17:30:21 -0500
Subject: [R-pkg-devel] URL syntax causes R CMD build failure - a fix
In-Reply-To: <CAAS8PA+p0rJkE5Atq2rYrbBSFtmLbWsWii_NtwZkyhxG=hKg3g@mail.gmail.com>
References: <97289a48-a5f3-090e-454b-f6a07fba9962@gmail.com>
 <CAAS8PA+p0rJkE5Atq2rYrbBSFtmLbWsWii_NtwZkyhxG=hKg3g@mail.gmail.com>
Message-ID: <3c92fa11-44c7-cecc-6703-575394d8c539@effectivedefense.org>

I've encountered similar issues. However, it has been long enough ago 
that I don't remember enough details to say more without trying to 
update my CRAN packages to see what messages I get and maybe researching 
my notes from previous problems of this nature. Spencer Graves


On 9/2/23 4:23 PM, Greg Hunt wrote:
> The percent encoded characters appear to be valid in that URL, suggesting
> that rejecting them is an error. That kind of error could occur when the
> software processing them converts them back to a non-unicode character set.
> 
> On Sun, 3 Sep 2023 at 4:34 am, J C Nash <profjcnash at gmail.com> wrote:
> 
>> I'm posting this in case it helps some other developers getting build
>> failure.
>>
>> Recently package nlsr that I maintain got a message that it failed to
>> build on
>> some platforms. The exact source of the problem is still to be illuminated,
>> but seems to be in knitr::render and/or pandoc or an unfortunate
>> interaction.
>> An update to pandoc triggered a failure to process a vignette that had been
>> happily processed for several years. The error messages are unhelpful, at
>> least
>> to me,
>>
>>      Error at "nlsr-devdoc.knit.md" (line 5419, column 1):
>>      unexpected end of input
>>      Error: pandoc document conversion failed with error 64
>>      Execution halted
>>
>> Unfortunately, adding "keep_md: TRUE" (you need upper case TRUE to save it
>> when
>> there is no error of this type), did not save the intermediate file in this
>> case. However, searching for "pandoc error 64" presented one web page
>> where the author
>> used brute force search of his document by removing / replacing sections
>> to find
>> the line(s) that caused trouble. This is a little tedious, but effective.
>> In my
>> case, the offending line turned out to be a copied and pasted URL
>>
>> https://en.wikipedia.org/wiki/Levenberg%E2%80%93Marquardt_algorithm
>>
>> The coded characters can be replaced by a hyphen, to give,
>>
>> https://en.wikipedia.org/wiki/Levenberg-Marquardt_algorithm
>>
>> and this, when pasted in Mozilla Firefox at least, will go to the
>> appropriate
>> wikipedia page.
>>
>> I'd be interested in hearing from others who have had similar
>> difficulties. I
>> suspect this is relatively rare, and causing some sort of infelicity in the
>> output of knitr::render that then trips up some versions of pandoc, that
>> may,
>> for instance, be now applying stricter rules to URL syntax.
>>
>> Best,
>>
>> John Nash
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Sun Sep  3 16:29:07 2023
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Sun, 3 Sep 2023 16:29:07 +0200
Subject: [R-pkg-devel] URL syntax causes R CMD build failure - a fix
In-Reply-To: <3c92fa11-44c7-cecc-6703-575394d8c539@effectivedefense.org>
References: <97289a48-a5f3-090e-454b-f6a07fba9962@gmail.com>
 <CAAS8PA+p0rJkE5Atq2rYrbBSFtmLbWsWii_NtwZkyhxG=hKg3g@mail.gmail.com>
 <3c92fa11-44c7-cecc-6703-575394d8c539@effectivedefense.org>
Message-ID: <4e9e5a74-0e11-6b64-c4a8-3f2ad7f7b9c6@statistik.tu-dortmund.de>

John can you point us to an example?
Where is it in your package and what is the R CMD check output?

Guess: Within an Rd file you have to escape the %  characters otherwise 
they start a comment.

Best,
Uwe Ligges



On 03.09.2023 00:30, Spencer Graves wrote:
> I've encountered similar issues. However, it has been long enough ago 
> that I don't remember enough details to say more without trying to 
> update my CRAN packages to see what messages I get and maybe researching 
> my notes from previous problems of this nature. Spencer Graves
> 
> 
> On 9/2/23 4:23 PM, Greg Hunt wrote:
>> The percent encoded characters appear to be valid in that URL, suggesting
>> that rejecting them is an error. That kind of error could occur when the
>> software processing them converts them back to a non-unicode character 
>> set.
>>
>> On Sun, 3 Sep 2023 at 4:34 am, J C Nash <profjcnash at gmail.com> wrote:
>>
>>> I'm posting this in case it helps some other developers getting build
>>> failure.
>>>
>>> Recently package nlsr that I maintain got a message that it failed to
>>> build on
>>> some platforms. The exact source of the problem is still to be 
>>> illuminated,
>>> but seems to be in knitr::render and/or pandoc or an unfortunate
>>> interaction.
>>> An update to pandoc triggered a failure to process a vignette that 
>>> had been
>>> happily processed for several years. The error messages are 
>>> unhelpful, at
>>> least
>>> to me,
>>>
>>> ???? Error at "nlsr-devdoc.knit.md" (line 5419, column 1):
>>> ???? unexpected end of input
>>> ???? Error: pandoc document conversion failed with error 64
>>> ???? Execution halted
>>>
>>> Unfortunately, adding "keep_md: TRUE" (you need upper case TRUE to 
>>> save it
>>> when
>>> there is no error of this type), did not save the intermediate file 
>>> in this
>>> case. However, searching for "pandoc error 64" presented one web page
>>> where the author
>>> used brute force search of his document by removing / replacing sections
>>> to find
>>> the line(s) that caused trouble. This is a little tedious, but 
>>> effective.
>>> In my
>>> case, the offending line turned out to be a copied and pasted URL
>>>
>>> https://en.wikipedia.org/wiki/Levenberg%E2%80%93Marquardt_algorithm
>>>
>>> The coded characters can be replaced by a hyphen, to give,
>>>
>>> https://en.wikipedia.org/wiki/Levenberg-Marquardt_algorithm
>>>
>>> and this, when pasted in Mozilla Firefox at least, will go to the
>>> appropriate
>>> wikipedia page.
>>>
>>> I'd be interested in hearing from others who have had similar
>>> difficulties. I
>>> suspect this is relatively rare, and causing some sort of infelicity 
>>> in the
>>> output of knitr::render that then trips up some versions of pandoc, that
>>> may,
>>> for instance, be now applying stricter rules to URL syntax.
>>>
>>> Best,
>>>
>>> John Nash
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>>
>> ????[[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From pro|jcn@@h @end|ng |rom gm@||@com  Sun Sep  3 16:46:01 2023
From: pro|jcn@@h @end|ng |rom gm@||@com (J C Nash)
Date: Sun, 3 Sep 2023 10:46:01 -0400
Subject: [R-pkg-devel] URL syntax causes R CMD build failure - a fix
In-Reply-To: <4e9e5a74-0e11-6b64-c4a8-3f2ad7f7b9c6@statistik.tu-dortmund.de>
References: <97289a48-a5f3-090e-454b-f6a07fba9962@gmail.com>
 <CAAS8PA+p0rJkE5Atq2rYrbBSFtmLbWsWii_NtwZkyhxG=hKg3g@mail.gmail.com>
 <3c92fa11-44c7-cecc-6703-575394d8c539@effectivedefense.org>
 <4e9e5a74-0e11-6b64-c4a8-3f2ad7f7b9c6@statistik.tu-dortmund.de>
Message-ID: <031d54ed-9827-82c2-6423-51ac0351c553@gmail.com>

Thanks Uwe. I think you may have the reason, esp. if the url is output as LaTex
formatted text to the intermediate files.

 > Where is it in your package and what is the R CMD check output?

The issue was a failure to build the nlsr-devdoc.Rmd vignette. Unfortunately, the
messages were as below (indented). The package passed in May and earlier, and
failure occurred when pandoc updated recently on some platforms, so there is some
change in the toolchain that triggered this. While pandoc is a wonderful tool, its
message output can be very unhelpful. I've had difficulties outside of R converting
LaTex to epub for some of my historical novels. In those cases I've also seen apparent
success with "bits left out" which does upset the readers when the story has gaps.
I've never resolved the "why?", but have managed to work around, sometimes by simply
adding a vertical space (i.e., line ending), or otherwise rearranging text. It would
be nice to know the reason, but as with the present issue, the reward is not worth
the effort.

I've also seen awkwardness with currency symbols, though that may be my own lack of
detailed knowledge with LaTex. I need multiple currencies in some stories, and end
up editing with Sigil. I anticipate that some R users with vignettes that have
several currencies might want to check output.

Whether or not the url syntax that caused the present trouble is valid or not, the
percentage signs are likely worth avoiding if possible.

Thanks,

JN

On 2023-09-03 10:29, Uwe Ligges wrote:
> John can you point us to an example?
> Where is it in your package and what is the R CMD check output?
> 
> Guess: Within an Rd file you have to escape the %? characters otherwise they start a comment.
> 
> Best,
> Uwe Ligges
> 
> 
> 
> On 03.09.2023 00:30, Spencer Graves wrote:
>> I've encountered similar issues. However, it has been long enough ago that I don't remember enough details to say more 
>> without trying to update my CRAN packages to see what messages I get and maybe researching my notes from previous 
>> problems of this nature. Spencer Graves
>>
>>
>> On 9/2/23 4:23 PM, Greg Hunt wrote:
>>> The percent encoded characters appear to be valid in that URL, suggesting
>>> that rejecting them is an error. That kind of error could occur when the
>>> software processing them converts them back to a non-unicode character set.
>>>
>>> On Sun, 3 Sep 2023 at 4:34 am, J C Nash <profjcnash at gmail.com> wrote:
>>>
>>>> I'm posting this in case it helps some other developers getting build
>>>> failure.
>>>>
>>>> Recently package nlsr that I maintain got a message that it failed to
>>>> build on
>>>> some platforms. The exact source of the problem is still to be illuminated,
>>>> but seems to be in knitr::render and/or pandoc or an unfortunate
>>>> interaction.
>>>> An update to pandoc triggered a failure to process a vignette that had been
>>>> happily processed for several years. The error messages are unhelpful, at
>>>> least
>>>> to me,
>>>>
>>>> ???? Error at "nlsr-devdoc.knit.md" (line 5419, column 1):
>>>> ???? unexpected end of input
>>>> ???? Error: pandoc document conversion failed with error 64
>>>> ???? Execution halted
>>>>
>>>> Unfortunately, adding "keep_md: TRUE" (you need upper case TRUE to save it
>>>> when
>>>> there is no error of this type), did not save the intermediate file in this
>>>> case. However, searching for "pandoc error 64" presented one web page
>>>> where the author
>>>> used brute force search of his document by removing / replacing sections
>>>> to find
>>>> the line(s) that caused trouble. This is a little tedious, but effective.
>>>> In my
>>>> case, the offending line turned out to be a copied and pasted URL
>>>>
>>>> https://en.wikipedia.org/wiki/Levenberg%E2%80%93Marquardt_algorithm
>>>>
>>>> The coded characters can be replaced by a hyphen, to give,
>>>>
>>>> https://en.wikipedia.org/wiki/Levenberg-Marquardt_algorithm
>>>>
>>>> and this, when pasted in Mozilla Firefox at least, will go to the
>>>> appropriate
>>>> wikipedia page.
>>>>
>>>> I'd be interested in hearing from others who have had similar
>>>> difficulties. I
>>>> suspect this is relatively rare, and causing some sort of infelicity in the
>>>> output of knitr::render that then trips up some versions of pandoc, that
>>>> may,
>>>> for instance, be now applying stricter rules to URL syntax.
>>>>
>>>> Best,
>>>>
>>>> John Nash
>>>>
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>
>>>
>>> ????[[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From wo||g@ng@ro|ke @end|ng |rom upr@edu  Wed Sep  6 20:01:45 2023
From: wo||g@ng@ro|ke @end|ng |rom upr@edu (Wolfgang Rolke)
Date: Wed, 6 Sep 2023 18:01:45 +0000
Subject: [R-pkg-devel] Fw: [CRAN-pretest-archived] CRAN Submission
 moodlequizR 1.0.1
In-Reply-To: <01d9e0e5$Blat.v3.2.24$1910fd4a$64c86e0c@mail.statistik.tu-dortmund.de>
References: <20230906170210.66EA3A0174@xmpalantir.wu.ac.at>
 <01d9e0e5$Blat.v3.2.24$1910fd4a$64c86e0c@mail.statistik.tu-dortmund.de>
Message-ID: <BN7PR03MB380998D4E6A0CBB90BAAEBFF9BEFA@BN7PR03MB3809.namprd03.prod.outlook.com>

Hi,

I am trying to upload a package to CRAN but keep getting the error message below. The issue seems to be the use of attach in one of my routines. As I explain in the cran-comments.md this use of assign is intentional.

The routine paste.data is used by undergraduate student with very little R knowledge to transfer data from moodle quizzes into R. They can simply copy
  the data in moodle, switch to R and run paste.data(). The data is assigned to the global   environment under the name moodledata and can be used to find the solution to the moodle quiz. I have been using this routine with my students for several years without any problems.

What do I need to do to get passed this automatic check?

Thanks,
Wolfgang

________________________________
From: ligges at statistik.tu-dortmund.de <ligges at statistik.tu-dortmund.de>
Sent: Wednesday, September 6, 2023 1:10 PM
To: Wolfgang Rolke <wolfgang.rolke at upr.edu>
Cc: CRAN-submissions at R-project.org <CRAN-submissions at R-project.org>
Subject: [CRAN-pretest-archived] CRAN Submission moodlequizR 1.0.1

Dear maintainer,

package moodlequizR_1.0.1.tar.gz does not pass the incoming checks automatically, please see the following pre-tests:
Windows: <https://nam02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwin-builder.r-project.org%2Fincoming_pretest%2FmoodlequizR_1.0.1_20230906_190210%2FWindows%2F00check.log&data=05%7C01%7Cwolfgang.rolke%40upr.edu%7C1474424cdb4b4d000de008dbaefc36ac%7C0dfa5dc0036f461599e494af822f2b84%7C0%7C0%7C638296170522310534%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=4tpQtnwtdQtkukpqCr7A%2FlQU4yyBoPcuVmQpee8Pcog%3D&reserved=0<https://win-builder.r-project.org/incoming_pretest/moodlequizR_1.0.1_20230906_190210/Windows/00check.log>>
Status: 2 NOTEs
Debian: <https://nam02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwin-builder.r-project.org%2Fincoming_pretest%2FmoodlequizR_1.0.1_20230906_190210%2FDebian%2F00check.log&data=05%7C01%7Cwolfgang.rolke%40upr.edu%7C1474424cdb4b4d000de008dbaefc36ac%7C0dfa5dc0036f461599e494af822f2b84%7C0%7C0%7C638296170522310534%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=rPiju64v6gc0JXONoOL8sDVu0DcuWG86%2FVzUfG9%2BcL0%3D&reserved=0<https://win-builder.r-project.org/incoming_pretest/moodlequizR_1.0.1_20230906_190210/Debian/00check.log>>
Status: 2 NOTEs



Please fix all problems and resubmit a fixed version via the webform.
If you are not sure how to fix the problems shown, please ask for help on the R-package-devel mailing list:
<https://nam02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-package-devel&data=05%7C01%7Cwolfgang.rolke%40upr.edu%7C1474424cdb4b4d000de008dbaefc36ac%7C0dfa5dc0036f461599e494af822f2b84%7C0%7C0%7C638296170522310534%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=NayqCcEWXJ3PTWfsryDjgzZ38n8LHgrfwALTVPeFhcU%3D&reserved=0<https://stat.ethz.ch/mailman/listinfo/r-package-devel>>
If you are fairly certain the rejection is a false positive, please reply-all to this message and explain.

More details are given in the directory:
<https://nam02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwin-builder.r-project.org%2Fincoming_pretest%2FmoodlequizR_1.0.1_20230906_190210%2F&data=05%7C01%7Cwolfgang.rolke%40upr.edu%7C1474424cdb4b4d000de008dbaefc36ac%7C0dfa5dc0036f461599e494af822f2b84%7C0%7C0%7C638296170522310534%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=7KHGPJm55bAOy%2FkrFhp0vTV5Fl4nIOJmCQ004%2BPDrsA%3D&reserved=0<https://win-builder.r-project.org/incoming_pretest/moodlequizR_1.0.1_20230906_190210/>>
The files will be removed after roughly 7 days.

No strong reverse dependencies to be checked.

Best regards,
CRAN teams' auto-check service

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: 00details.log
URL: <https://stat.ethz.ch/pipermail/r-package-devel/attachments/20230906/fef7487c/attachment.log>

From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Wed Sep  6 22:56:11 2023
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Wed, 06 Sep 2023 13:56:11 -0700
Subject: [R-pkg-devel] Fw: [CRAN-pretest-archived] CRAN Submission
 moodlequizR 1.0.1
In-Reply-To: <BN7PR03MB380998D4E6A0CBB90BAAEBFF9BEFA@BN7PR03MB3809.namprd03.prod.outlook.com>
References: <20230906170210.66EA3A0174@xmpalantir.wu.ac.at>
 <01d9e0e5$Blat.v3.2.24$1910fd4a$64c86e0c@mail.statistik.tu-dortmund.de>
 <BN7PR03MB380998D4E6A0CBB90BAAEBFF9BEFA@BN7PR03MB3809.namprd03.prod.outlook.com>
Message-ID: <DE0A3CEA-3DB4-41BD-B0CA-D06B46AD34E9@dcn.davis.ca.us>

I don't know how you can negotiate with CRAN regarding attach, but one approach is to return the data frame and instruct your students to write

  moodledata <- paste.data()

instead of

  paste.data()

since either is just as obscure as the other in the mind of a beginner and the former promotes better understanding of R and good practice.

On September 6, 2023 11:01:45 AM PDT, Wolfgang Rolke via R-package-devel <r-package-devel at r-project.org> wrote:
>Hi,
>
>I am trying to upload a package to CRAN but keep getting the error message below. The issue seems to be the use of attach in one of my routines. As I explain in the cran-comments.md this use of assign is intentional.
>
>The routine paste.data is used by undergraduate student with very little R knowledge to transfer data from moodle quizzes into R. They can simply copy
>  the data in moodle, switch to R and run paste.data(). The data is assigned to the global   environment under the name moodledata and can be used to find the solution to the moodle quiz. I have been using this routine with my students for several years without any problems.
>
>What do I need to do to get passed this automatic check?
>
>Thanks,
>Wolfgang
>
>________________________________
>From: ligges at statistik.tu-dortmund.de <ligges at statistik.tu-dortmund.de>
>Sent: Wednesday, September 6, 2023 1:10 PM
>To: Wolfgang Rolke <wolfgang.rolke at upr.edu>
>Cc: CRAN-submissions at R-project.org <CRAN-submissions at R-project.org>
>Subject: [CRAN-pretest-archived] CRAN Submission moodlequizR 1.0.1
>
>Dear maintainer,
>
>package moodlequizR_1.0.1.tar.gz does not pass the incoming checks automatically, please see the following pre-tests:
>Windows: <https://nam02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwin-builder.r-project.org%2Fincoming_pretest%2FmoodlequizR_1.0.1_20230906_190210%2FWindows%2F00check.log&data=05%7C01%7Cwolfgang.rolke%40upr.edu%7C1474424cdb4b4d000de008dbaefc36ac%7C0dfa5dc0036f461599e494af822f2b84%7C0%7C0%7C638296170522310534%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=4tpQtnwtdQtkukpqCr7A%2FlQU4yyBoPcuVmQpee8Pcog%3D&reserved=0<https://win-builder.r-project.org/incoming_pretest/moodlequizR_1.0.1_20230906_190210/Windows/00check.log>>
>Status: 2 NOTEs
>Debian: <https://nam02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwin-builder.r-project.org%2Fincoming_pretest%2FmoodlequizR_1.0.1_20230906_190210%2FDebian%2F00check.log&data=05%7C01%7Cwolfgang.rolke%40upr.edu%7C1474424cdb4b4d000de008dbaefc36ac%7C0dfa5dc0036f461599e494af822f2b84%7C0%7C0%7C638296170522310534%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=rPiju64v6gc0JXONoOL8sDVu0DcuWG86%2FVzUfG9%2BcL0%3D&reserved=0<https://win-builder.r-project.org/incoming_pretest/moodlequizR_1.0.1_20230906_190210/Debian/00check.log>>
>Status: 2 NOTEs
>
>
>
>Please fix all problems and resubmit a fixed version via the webform.
>If you are not sure how to fix the problems shown, please ask for help on the R-package-devel mailing list:
><https://nam02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-package-devel&data=05%7C01%7Cwolfgang.rolke%40upr.edu%7C1474424cdb4b4d000de008dbaefc36ac%7C0dfa5dc0036f461599e494af822f2b84%7C0%7C0%7C638296170522310534%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=NayqCcEWXJ3PTWfsryDjgzZ38n8LHgrfwALTVPeFhcU%3D&reserved=0<https://stat.ethz.ch/mailman/listinfo/r-package-devel>>
>If you are fairly certain the rejection is a false positive, please reply-all to this message and explain.
>
>More details are given in the directory:
><https://nam02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwin-builder.r-project.org%2Fincoming_pretest%2FmoodlequizR_1.0.1_20230906_190210%2F&data=05%7C01%7Cwolfgang.rolke%40upr.edu%7C1474424cdb4b4d000de008dbaefc36ac%7C0dfa5dc0036f461599e494af822f2b84%7C0%7C0%7C638296170522310534%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=7KHGPJm55bAOy%2FkrFhp0vTV5Fl4nIOJmCQ004%2BPDrsA%3D&reserved=0<https://win-builder.r-project.org/incoming_pretest/moodlequizR_1.0.1_20230906_190210/>>
>The files will be removed after roughly 7 days.
>
>No strong reverse dependencies to be checked.
>
>Best regards,
>CRAN teams' auto-check service

-- 
Sent from my phone. Please excuse my brevity.


From |eo@m@d@ @end|ng |rom @yon|c@eu  Fri Sep  8 11:32:17 2023
From: |eo@m@d@ @end|ng |rom @yon|c@eu (Leonard Mada)
Date: Fri, 8 Sep 2023 12:32:17 +0300
Subject: [R-pkg-devel] How to fix Archived Package Rpdb?
Message-ID: <fbaf7d58-4939-4b50-ba0b-ca8beaf7c79c@syonic.eu>

Dear Members,

I would like to reanimate the archived package Rpdb:
https://cran.r-project.org/web/packages/Rpdb/index.html

1.) I have tried to contact the original author by email, but got no 
response.

2.) New Repository on GitHub
I have copied the existing code to a new repository on GitHub:
https://github.com/discoleo/Rpdb

- fixed the use of deprecated functions (rgl);
- fixed some bug with Roxygen2;
- I hope that all errors are now fixed;

2.b.) Description file
- I left the original author as the author (with the provided e-mail 
address): should I delete this email?
- I have added myself as maintainer;
- I have increased the last digit of the version number;
- I have added links to this new GitHub repository: I did not find any 
other links in the previous version (except to the pdb-format);
- updated the licence to GPL v3: the original does not specify any 
version number;


Is there anything else that needs to be done?


I may wait another 1 or 2 days and will try to submit the new version of 
the package.


Many thanks,


Leonard


From h@w|ckh@m @end|ng |rom gm@||@com  Fri Sep  8 17:59:35 2023
From: h@w|ckh@m @end|ng |rom gm@||@com (Hadley Wickham)
Date: Fri, 8 Sep 2023 08:59:35 -0700
Subject: [R-pkg-devel] How to fix Archived Package Rpdb?
In-Reply-To: <fbaf7d58-4939-4b50-ba0b-ca8beaf7c79c@syonic.eu>
References: <fbaf7d58-4939-4b50-ba0b-ca8beaf7c79c@syonic.eu>
Message-ID: <CABdHhvGXOaqESs5gz19V_508DyUaVoJbO_mQWV+-2XvWv8uqYQ@mail.gmail.com>

On Fri, Sep 8, 2023 at 6:02?AM Leonard Mada via R-package-devel
<r-package-devel at r-project.org> wrote:
>
> Dear Members,
>
> I would like to reanimate the archived package Rpdb:
> https://cran.r-project.org/web/packages/Rpdb/index.html
>
> 1.) I have tried to contact the original author by email, but got no
> response.
>
> 2.) New Repository on GitHub
> I have copied the existing code to a new repository on GitHub:
> https://github.com/discoleo/Rpdb
>
> - fixed the use of deprecated functions (rgl);
> - fixed some bug with Roxygen2;
> - I hope that all errors are now fixed;
>
> 2.b.) Description file
> - I left the original author as the author (with the provided e-mail
> address): should I delete this email?

It probably doesn't matter than much either way, but since the author
doesn't appear to respond to emails to that address, I personally
would lean towards deleting it.

> - I have added myself as maintainer;
> - I have increased the last digit of the version number;
> - I have added links to this new GitHub repository: I did not find any
> other links in the previous version (except to the pdb-format);
> - updated the licence to GPL v3: the original does not specify any
> version number;
>
>
> Is there anything else that needs to be done?

There are at least three 3 R CMD check failures you need to address:

* The Authors at R field in DESCRIPTION is incorrectly formed, you need
something like this:
    c(
      person("Leonard", "Mada", email = "leo.mada at syonic.eu", role = c("cre")),
      person("Julien", "Id?", role = c("aut"))
    )

* You need to add LICENSE to .Rbuildignore, or and IMO better, delete
that file and use usethis::use_gpl3_license() to the license in
markdown form, and correctly ignored for CRAN submission

* Many examples use `\%in\%` instead of `%in%.

To make these sorts of problems easier to spot in the future I'd
suggest setting up a GitHub action to automatically run R CMD check
every time you push to GitHub. One easy way to do that is to run
usethis::use_github_action("check-standard").

Hadley

-- 
http://hadley.nz


From yyyuehhu @end|ng |rom gm@||@com  Sat Sep  9 13:19:04 2023
From: yyyuehhu @end|ng |rom gm@||@com (Hu Yue)
Date: Sat, 9 Sep 2023 11:19:04 +0000
Subject: [R-pkg-devel] R CMD check --as-cran Warning in read.dcf(con,
 c(.get_standard_repository_db_fields(),
 "Path")) : URL 'https://CRAN.R-project.org/src/contrib/PACKAGES.gz': Timeout
 of 60 seconds was reached
Message-ID: <CH3PR10MB7932B2EB70AA47C93874CEC1FEECA@CH3PR10MB7932.namprd10.prod.outlook.com>

Hello,

I encountered a problem when running ?R CMD check ?as-cran? at the step ?checking CRAN incoming feasibility?.

The error message is as follows:

* checking CRAN incoming feasibility ...Warning in read.dcf(con, c(.get_standard_repository_db_fields(), "Path")) :

  URL 'https://CRAN.R-project.org/src/contrib/PACKAGES.gz': Timeout of 60 seconds was reached



Does anyone know how to deal with this issue?



Thanks,

Yue

	[[alternative HTML version deleted]]


From t|@goo||voto @end|ng |rom gm@||@com  Sat Sep  9 19:53:09 2023
From: t|@goo||voto @end|ng |rom gm@||@com (Tiago Olivoto)
Date: Sat, 9 Sep 2023 14:53:09 -0300
Subject: [R-pkg-devel] R CMD check --as-cran Warning in read.dcf(con,
 c(.get_standard_repository_db_fields(),
 "Path")) : URL 'https://CRAN.R-project.org/src/contrib/PACKAGES.gz': Timeout
 of 60 seconds was reached
In-Reply-To: <CH3PR10MB7932B2EB70AA47C93874CEC1FEECA@CH3PR10MB7932.namprd10.prod.outlook.com>
References: <CH3PR10MB7932B2EB70AA47C93874CEC1FEECA@CH3PR10MB7932.namprd10.prod.outlook.com>
Message-ID: <CAMyz+tVcUbKWr_k7_oCsGit0b6cVH25o+03wTGnVmcKLdyQA9Q@mail.gmail.com>

Hi,
I had a similar issue while submitting a bug fix of my package {pliman}
using devtools::release()

----------------
Have you checked on win-builder (with `check_win_devel()`)?

1: Absolutely
2: I forget
3: Not yet

Sele??o: 1
Error in utils::download.file("
https://cran.R-project.org/web/packages/packages.rds",  :
  download from 'https://cran.R-project.org/web/packages/packages.rds'
failed
In addition: Warning messages:
1: In utils::download.file("
https://cran.R-project.org/web/packages/packages.rds",  :
  downloaded length 0 != reported length 0
2: In utils::download.file("
https://cran.R-project.org/web/packages/packages.rds",  :
  URL 'https://cran.R-project.org/web/packages/packages.rds': Timeout of 60
seconds was reached
-------------------

Thanks
Olivoto

Em s?b., 9 de set. de 2023 ?s 14:45, Hu Yue <yyyuehhu at gmail.com> escreveu:

> Hello,
>
> I encountered a problem when running ?R CMD check ?as-cran? at the step
> ?checking CRAN incoming feasibility?.
>
> The error message is as follows:
>
> * checking CRAN incoming feasibility ...Warning in read.dcf(con,
> c(.get_standard_repository_db_fields(), "Path")) :
>
>   URL 'https://CRAN.R-project.org/src/contrib/PACKAGES.gz': Timeout of 60
> seconds was reached
>
>
>
> Does anyone know how to deal with this issue?
>
>
>
> Thanks,
>
> Yue
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Sat Sep  9 22:12:08 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Sat, 09 Sep 2023 20:12:08 +0000
Subject: [R-pkg-devel] R CMD check --as-cran Warning in read.dcf(con,
 c(.get_standard_repository_db_fields(),
 "Path")) : URL 'https://CRAN.R-project.org/src/contrib/PACKAGES.gz': Timeout
 of 60 seconds was reached
In-Reply-To: <CH3PR10MB7932B2EB70AA47C93874CEC1FEECA@CH3PR10MB7932.namprd10.prod.outlook.com>
References: <CH3PR10MB7932B2EB70AA47C93874CEC1FEECA@CH3PR10MB7932.namprd10.prod.outlook.com>
Message-ID: <56715C9C-6AC4-45D9-A6C9-58C3981EE61D@gmail.com>

9 ???????? 2023 ?. 11:19:04 UTC, Hu Yue <yyyuehhu at gmail.com> ?????:

>* checking CRAN incoming feasibility ...Warning in read.dcf(con, c(.get_standard_repository_db_fields(), "Path")) :
>
>  URL 'https://CRAN.R-project.org/src/contrib/PACKAGES.gz': Timeout of 60 seconds was reached
This is just your computer failing to communicate with CRAN.R-project.org. Could be a temporary problem with your connection or maybe on CRAN itself. This is not a problem with your package.
-- 
Best regards,
Ivan


From |eo@m@d@ @end|ng |rom @yon|c@eu  Sat Sep  9 20:15:11 2023
From: |eo@m@d@ @end|ng |rom @yon|c@eu (Leonard Mada)
Date: Sat, 9 Sep 2023 21:15:11 +0300
Subject: [R-pkg-devel] How to fix Archived Package Rpdb?
In-Reply-To: <CABdHhvGXOaqESs5gz19V_508DyUaVoJbO_mQWV+-2XvWv8uqYQ@mail.gmail.com>
References: <fbaf7d58-4939-4b50-ba0b-ca8beaf7c79c@syonic.eu>
 <CABdHhvGXOaqESs5gz19V_508DyUaVoJbO_mQWV+-2XvWv8uqYQ@mail.gmail.com>
Message-ID: <9db705e7-b6f9-4aad-be2d-defefa2a7919@syonic.eu>

Thank you very much for this help.


1.) I am a little bit unsure about the LICENSE file - see below (in-text).


2.) There is a new error in the meantime:

- the check works on Windows, but fails everywhere else with:

Warning: Found the following significant warnings:
 ? Warning: 'rgl.init' failed, running with 'rgl.useNULL = TRUE'.


Googling the web was not very informative either: it mentions something 
about quartz device - but I am uncertain what to do.


On 9/8/2023 6:59 PM, Hadley Wickham wrote:
> On Fri, Sep 8, 2023 at 6:02?AM Leonard Mada via R-package-devel
> <r-package-devel at r-project.org>  wrote:
>> Dear Members,
>>
>> I would like to reanimate the archived package Rpdb:
>> https://cran.r-project.org/web/packages/Rpdb/index.html
>>
>> [...]
>> 2.b.) Description file
>> - I left the original author as the author (with the provided e-mail
>> address): should I delete this email?
> It probably doesn't matter than much either way, but since the author
> doesn't appear to respond to emails to that address, I personally
> would lean towards deleting it.
>
>> - I have added myself as maintainer; [...]
>> - updated the licence to GPL v3: the original does not specify any
>> version number;
>>
>>
>> Is there anything else that needs to be done?
> There are at least three 3 R CMD check failures you need to address:
>
> * [...]
>
> * You need to add LICENSE to .Rbuildignore, or and IMO better, delete
> that file and use usethis::use_gpl3_license() to the license in
> markdown form, and correctly ignored for CRAN submission


If I understand correctly:

- delete the "LICENSE" file and use usethis::use_gpl3_license(), which 
adds the "LICENSE.md" file;

- should I also add some code to the DESCRIPTION file?

>
> * Many examples use `\%in\%` instead of `%in%.


Hopefully, this is fixed now. But it was quit a hassle to find out which 
files were affected. [I could have used gawk, but the error-reporting 
could be improved as well!]


Sincerely,


Leonard

>
> To make these sorts of problems easier to spot in the future I'd
> suggest setting up a GitHub action to automatically run R CMD check
> every time you push to GitHub. One easy way to do that is to run
> usethis::use_github_action("check-standard").
>
> Hadley
>
	[[alternative HTML version deleted]]


From yyyuehhu @end|ng |rom gm@||@com  Mon Sep 11 07:45:10 2023
From: yyyuehhu @end|ng |rom gm@||@com (Hu Yue)
Date: Mon, 11 Sep 2023 05:45:10 +0000
Subject: [R-pkg-devel] R CMD check --as-cran Warning in read.dcf(con,
 c(.get_standard_repository_db_fields(),
 "Path")) : URL 'https://CRAN.R-project.org/src/contrib/PACKAGES.gz': Timeout
 of 60 seconds was reached
In-Reply-To: <56715C9C-6AC4-45D9-A6C9-58C3981EE61D@gmail.com>
References: <CH3PR10MB7932B2EB70AA47C93874CEC1FEECA@CH3PR10MB7932.namprd10.prod.outlook.com>
 <56715C9C-6AC4-45D9-A6C9-58C3981EE61D@gmail.com>
Message-ID: <CH3PR10MB7932E3C84AE5BFE580054737FEF2A@CH3PR10MB7932.namprd10.prod.outlook.com>

Got it, thank you so much for the explanation.

Best,
Yue

From: Ivan Krylov <krylov.r00t at gmail.com>
Date: Sunday, September 10, 2023 at 4:12 AM
To: Hu Yue <yyyuehhu at gmail.com>, r-package-devel at r-project.org <r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] R CMD check --as-cran Warning in read.dcf(con, c(.get_standard_repository_db_fields(), "Path")) : URL 'https://CRAN.R-project.org/src/contrib/PACKAGES.gz': Timeout of 60 seconds was reached
9 ???????? 2023 ?. 11:19:04 UTC, Hu Yue <yyyuehhu at gmail.com> ?????:

>* checking CRAN incoming feasibility ...Warning in read.dcf(con, c(.get_standard_repository_db_fields(), "Path")) :
>
>  URL 'https://CRAN.R-project.org/src/contrib/PACKAGES.gz': Timeout of 60 seconds was reached
This is just your computer failing to communicate with CRAN.R-project.org. Could be a temporary problem with your connection or maybe on CRAN itself. This is not a problem with your package.
--
Best regards,
Ivan

	[[alternative HTML version deleted]]


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Tue Sep 12 15:02:25 2023
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Tue, 12 Sep 2023 15:02:25 +0200
Subject: [R-pkg-devel] How to fix Archived Package Rpdb?
In-Reply-To: <9db705e7-b6f9-4aad-be2d-defefa2a7919@syonic.eu>
References: <fbaf7d58-4939-4b50-ba0b-ca8beaf7c79c@syonic.eu>
 <CABdHhvGXOaqESs5gz19V_508DyUaVoJbO_mQWV+-2XvWv8uqYQ@mail.gmail.com>
 <9db705e7-b6f9-4aad-be2d-defefa2a7919@syonic.eu>
Message-ID: <3e78ca90-3076-2e13-1edb-e89bc72993fc@statistik.tu-dortmund.de>



On 09.09.2023 20:15, Leonard Mada via R-package-devel wrote:
> Thank you very much for this help.
> 
> 
> 1.) I am a little bit unsure about the LICENSE file - see below (in-text).
> 
> 
> 2.) There is a new error in the meantime:
> 
> - the check works on Windows, but fails everywhere else with:
> 
> Warning: Found the following significant warnings:
>   ? Warning: 'rgl.init' failed, running with 'rgl.useNULL = TRUE'.

On non Windows systems, You cannot use rgl if you do not have any X11 
available.
Support for Unix alikes is optional, so in packages X11() should be used 
conditionally after checking capabilities("X11").


> 
> Googling the web was not very informative either: it mentions something
> about quartz device - but I am uncertain what to do.
 >
> 
> On 9/8/2023 6:59 PM, Hadley Wickham wrote:
>> On Fri, Sep 8, 2023 at 6:02?AM Leonard Mada via R-package-devel
>> <r-package-devel at r-project.org>  wrote:
>>> Dear Members,
>>>
>>> I would like to reanimate the archived package Rpdb:
>>> https://cran.r-project.org/web/packages/Rpdb/index.html
>>>
>>> [...]
>>> 2.b.) Description file
>>> - I left the original author as the author (with the provided e-mail
>>> address): should I delete this email?
>> It probably doesn't matter than much either way, but since the author
>> doesn't appear to respond to emails to that address, I personally
>> would lean towards deleting it.


Do *not* delete any authours/copyright holders.


>>
>>> - I have added myself as maintainer; [...]
>>> - updated the licence to GPL v3: the original does not specify any
>>> version number;
>>>
>>>
>>> Is there anything else that needs to be done?
>> There are at least three 3 R CMD check failures you need to address:
>>
>> * [...]
>>
>> * You need to add LICENSE to .Rbuildignore, or and IMO better, delete
>> that file and use usethis::use_gpl3_license() to the license in
>> markdown form, and correctly ignored for CRAN submission
> 
> 
> If I understand correctly:
> 
> - delete the "LICENSE" file and use usethis::use_gpl3_license(), which
> adds the "LICENSE.md" file;
> 
> - should I also add some code to the DESCRIPTION file?

LICENSE: GPL-3

in the DESCRIPTION should be fine, and no license file unless you want 
to add additional restrictions that are permitted by GPL-3 such as 
attribution requirements.

No idea what usethis::use_gpl3_license() does.

Best,
Uwe Ligges


> 
>>
>> * Many examples use `\%in\%` instead of `%in%.
> 
> 
> Hopefully, this is fixed now. But it was quit a hassle to find out which
> files were affected. [I could have used gawk, but the error-reporting
> could be improved as well!]
> 
> 
> Sincerely,
> 
> 
> Leonard
> 
>>
>> To make these sorts of problems easier to spot in the future I'd
>> suggest setting up a GitHub action to automatically run R CMD check
>> every time you push to GitHub. One easy way to do that is to run
>> usethis::use_github_action("check-standard").
>>
>> Hadley
>>
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From @ron@@tk|n@ @end|ng |rom gm@||@com  Tue Sep 12 16:10:37 2023
From: @ron@@tk|n@ @end|ng |rom gm@||@com (Aron Atkins)
Date: Tue, 12 Sep 2023 10:10:37 -0400
Subject: [R-pkg-devel] published packages not showing updated macOS results
Message-ID: <CA+T4NJSJH_rTbam-eL-y4H6HYecvidMYtwJHNTwNrL7UqMwkRg@mail.gmail.com>

Hi.

It looks like macOS package publishing may have stalled. One of my
packages, rsconnect 1.1.0, arrived on CRAN about a week ago. It is built
almost everywhere, but r-release-macos* and r-release-macos-arm64 are still
showing results from the previous release.

Recent releases did see check failures on the r-release-macos-x86_64 host
(because its Pandoc installation was older than supported by one of our
dependencies). The rsconnect 1.1.0 release should address these failures,
but I am still waiting to see builds flow through.

https://cran.r-project.org/web/packages/rsconnect/index.html
https://cran.r-project.org/web/checks/check_results_rsconnect.html

Is someone able to look into this or otherwise offer advice?

Thanks,
Aron
-- 
email: aron.atkins at gmail.com
home: http://gweep.net/~aron/

	[[alternative HTML version deleted]]


From |eo@m@d@ @end|ng |rom @yon|c@eu  Wed Sep 13 20:01:56 2023
From: |eo@m@d@ @end|ng |rom @yon|c@eu (Leonard Mada)
Date: Wed, 13 Sep 2023 21:01:56 +0300
Subject: [R-pkg-devel] How to fix Archived Package Rpdb?
In-Reply-To: <3e78ca90-3076-2e13-1edb-e89bc72993fc@statistik.tu-dortmund.de>
References: <fbaf7d58-4939-4b50-ba0b-ca8beaf7c79c@syonic.eu>
 <CABdHhvGXOaqESs5gz19V_508DyUaVoJbO_mQWV+-2XvWv8uqYQ@mail.gmail.com>
 <9db705e7-b6f9-4aad-be2d-defefa2a7919@syonic.eu>
 <3e78ca90-3076-2e13-1edb-e89bc72993fc@statistik.tu-dortmund.de>
Message-ID: <9954b594-3b5e-4b8a-9516-17f72b057d7d@syonic.eu>

Thank you very much for your response.

I actually tried yesterday to publish the package to CRAN. 
Unfortunately, my computer seems to behave funny; and I did not receive 
a confirmatory e-mail either.

Messages & Errors:
? Package submission successful
? Check your email for confirmation link.
! Don't forget to tag this release once accepted by CRAN
Error in (function (..., row.names = NULL, check.rows = FALSE, 
check.names = TRUE,? :
 ? arguments imply differing number of rows: 1, 0
In addition: Warning messages:
1: In system2("git", c("rev-parse", "--abbrev-ref", "HEAD"), stdout = 
TRUE) :
 ? running command '"git" rev-parse --abbrev-ref HEAD' had status 127
2: In system2("git", c("status", "--porcelain=v1"), stdout = TRUE) :
 ? running command '"git" status --porcelain=v1' had status 127
3: In system2("git", c("rev-parse", "HEAD"), stdout = TRUE) :
 ? running command '"git" rev-parse HEAD' had status 127
? Setting active project to 'C:/.../Rpdb'

1.) I do not understand if this means, that the submission actually failed?

2.) Should I try to resubmit?
If yes: should I increase the version number to 2.3.2 (from 2.3.1)?

3.) Old questions
The remaining questions should be sorted out now:
- the issue was if to delete the e-mail from the original author;
- I left the e-mail for now; I will phase out the e-mail address, once I 
start to work on my own on the package (maybe I'll have some time next 
month);

Sincerely,

Leonard


On 9/12/2023 4:02 PM, Uwe Ligges wrote:
> On 09.09.2023 20:15, Leonard Mada via R-package-devel wrote:
>> Thank you very much for this help.
>>
>>
>> 1.) I am a little bit unsure about the LICENSE file - see below (in-text).
>>
>>
>> 2.) There is a new error in the meantime:
>>
>> - the check works on Windows, but fails everywhere else with:
>>
>> Warning: Found the following significant warnings:
>>    ? Warning: 'rgl.init' failed, running with 'rgl.useNULL = TRUE'.
> On non Windows systems, You cannot use rgl if you do not have any X11
> available.
> Support for Unix alikes is optional, so in packages X11() should be used
> conditionally after checking capabilities("X11").
>
>
>> Googling the web was not very informative either: it mentions something
>> about quartz device - but I am uncertain what to do.
>   >
>> On 9/8/2023 6:59 PM, Hadley Wickham wrote:
>>> On Fri, Sep 8, 2023 at 6:02?AM Leonard Mada via R-package-devel
>>> <r-package-devel at r-project.org>  wrote:
>>>> Dear Members,
>>>>
>>>> I would like to reanimate the archived package Rpdb:
>>>> https://cran.r-project.org/web/packages/Rpdb/index.html
>>>>
>>>> [...]
>>>> 2.b.) Description file
>>>> - I left the original author as the author (with the provided e-mail
>>>> address): should I delete this email?
>>> It probably doesn't matter than much either way, but since the author
>>> doesn't appear to respond to emails to that address, I personally
>>> would lean towards deleting it.
>
> Do *not* delete any authours/copyright holders.
>
>
>>>> - I have added myself as maintainer; [...]
>>>> - updated the licence to GPL v3: the original does not specify any
>>>> version number;
>>>>
>>>>
>>>> Is there anything else that needs to be done?
>>> There are at least three 3 R CMD check failures you need to address:
>>>
>>> * [...]
>>>
>>> * You need to add LICENSE to .Rbuildignore, or and IMO better, delete
>>> that file and use usethis::use_gpl3_license() to the license in
>>> markdown form, and correctly ignored for CRAN submission
>>
>> If I understand correctly:
>>
>> - delete the "LICENSE" file and use usethis::use_gpl3_license(), which
>> adds the "LICENSE.md" file;
>>
>> - should I also add some code to the DESCRIPTION file?
> LICENSE: GPL-3
>
> in the DESCRIPTION should be fine, and no license file unless you want
> to add additional restrictions that are permitted by GPL-3 such as
> attribution requirements.
>
> No idea what usethis::use_gpl3_license() does.
>
> Best,
> Uwe Ligges
>
>
>>> * Many examples use `\%in\%` instead of `%in%.
>>
>> Hopefully, this is fixed now. But it was quit a hassle to find out which
>> files were affected. [I could have used gawk, but the error-reporting
>> could be improved as well!]
>>
>>
>> Sincerely,
>>
>>
>> Leonard
>>
>>> To make these sorts of problems easier to spot in the future I'd
>>> suggest setting up a GitHub action to automatically run R CMD check
>>> every time you push to GitHub. One easy way to do that is to run
>>> usethis::use_github_action("check-standard").
>>>
>>> Hadley
>>>
>> 	[[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://eu01.z.antigena.com/l/BqUPANOmull40IBpV5HU5aA8TKzcKz3OPssdZ5liqRHrrkHEpivWqaEIC1k24tCEj5gaLW4Hr7LBQP5Bmhh0Wz1PyNzgLiQLK26ivAhsMrr2kA6V_Faoc~qljey3AojzFEHcOJh6NK4Y7Tm1Mo2ouslWDO9u_IwgzbNPy92hE3LAs3hF8m


From kry|ov@r00t @end|ng |rom gm@||@com  Wed Sep 13 21:18:39 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Wed, 13 Sep 2023 19:18:39 +0000
Subject: [R-pkg-devel] How to fix Archived Package Rpdb?
In-Reply-To: <9954b594-3b5e-4b8a-9516-17f72b057d7d@syonic.eu>
References: <fbaf7d58-4939-4b50-ba0b-ca8beaf7c79c@syonic.eu>
 <CABdHhvGXOaqESs5gz19V_508DyUaVoJbO_mQWV+-2XvWv8uqYQ@mail.gmail.com>
 <9db705e7-b6f9-4aad-be2d-defefa2a7919@syonic.eu>
 <3e78ca90-3076-2e13-1edb-e89bc72993fc@statistik.tu-dortmund.de>
 <9954b594-3b5e-4b8a-9516-17f72b057d7d@syonic.eu>
Message-ID: <B6541B44-C1C9-4EFF-910E-BF4793A18E37@gmail.com>

13 ???????? 2023 ?. 18:01:56 UTC, Leonard Mada via R-package-devel <r-package-devel at r-project.org> ?????:

>Error in (function (..., row.names = NULL, check.rows = FALSE, check.names = TRUE,? :
>? arguments imply differing number of rows: 1, 0

This is a bug in devtools where a value originating from subsetting a list using $ (which might be NULL, i.e. of length 0) is compared against a string (i.e. of length 1) using == (which fails) instead of identical() (which would have returned FALSE). Try submitting using the form at https://cran.r-project.org/.

>2.) Should I try to resubmit?
>If yes: should I increase the version number to 2.3.2 (from 2.3.1)?

If the package hasn't reached CRAN at all (looks like it hasn't), feel free to keep the version number. Otherwise it's best to increment it.

>- the issue was if to delete the e-mail from the original author;

My personal opinion is that a bouncing e-mail address can be removed. I think that we're all is in agreement that the _name_ of the original author must stay.


-- 
Best regards,
Ivan


From rmh @end|ng |rom temp|e@edu  Thu Sep 14 02:24:52 2023
From: rmh @end|ng |rom temp|e@edu (Richard M. Heiberger)
Date: Thu, 14 Sep 2023 00:24:52 +0000
Subject: [R-pkg-devel] is this expected behavior
Message-ID: <4A812DC2-74D2-4AEA-9E64-8CA6933B0FFA@temple.edu>

I have a demo file that uses a function defined in the package.
when I force the demo to be run with
R CMD check --test-dir=demo findme_1.0.tar.gz
then the function defined in the package is not recognized.

Here is the demo/findme.r file:

findme::findme()
findme()


Here is the result of:

R CMD check --test-dir=demo findme_1.0.tar.gz

* checking tests in ?demo? ...
  Running ?findme.r?
 ERROR
Running the tests in ?demo/findme.r? failed.
Complete output:
  > findme::findme()
  [1] "You found me"
  > findme()
  Error in findme() : could not find function "findme"
  Execution halted


The first line with the "::" executed.
The second line, which assumed the function in the current package
would be exported, was not found.

Is this the expected behavior?

Thanks
Rich

From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Thu Sep 14 03:24:54 2023
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Wed, 13 Sep 2023 18:24:54 -0700
Subject: [R-pkg-devel] is this expected behavior
In-Reply-To: <4A812DC2-74D2-4AEA-9E64-8CA6933B0FFA@temple.edu>
References: <4A812DC2-74D2-4AEA-9E64-8CA6933B0FFA@temple.edu>
Message-ID: <50743C20-4165-464C-B959-7C6FFCC7B089@dcn.davis.ca.us>

Yes.

Demo/test files need to use the library function to attach the package like any other user.

On September 13, 2023 5:24:52 PM PDT, "Richard M. Heiberger" <rmh at temple.edu> wrote:
>I have a demo file that uses a function defined in the package.
>when I force the demo to be run with
>R CMD check --test-dir=demo findme_1.0.tar.gz
>then the function defined in the package is not recognized.
>
>Here is the demo/findme.r file:
>
>findme::findme()
>findme()
>
>
>Here is the result of:
>
>R CMD check --test-dir=demo findme_1.0.tar.gz
>
>* checking tests in ?demo? ...
>  Running ?findme.r?
> ERROR
>Running the tests in ?demo/findme.r? failed.
>Complete output:
>  > findme::findme()
>  [1] "You found me"
>  > findme()
>  Error in findme() : could not find function "findme"
>  Execution halted
>
>
>The first line with the "::" executed.
>The second line, which assumed the function in the current package
>would be exported, was not found.
>
>Is this the expected behavior?
>
>Thanks
>Rich
>______________________________________________
>R-package-devel at r-project.org mailing list
>https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
Sent from my phone. Please excuse my brevity.


From @|mon@urb@nek @end|ng |rom R-project@org  Thu Sep 14 08:33:14 2023
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Thu, 14 Sep 2023 18:33:14 +1200
Subject: [R-pkg-devel] 
 published packages not showing updated macOS results
In-Reply-To: <CA+T4NJSJH_rTbam-eL-y4H6HYecvidMYtwJHNTwNrL7UqMwkRg@mail.gmail.com>
References: <CA+T4NJSJH_rTbam-eL-y4H6HYecvidMYtwJHNTwNrL7UqMwkRg@mail.gmail.com>
Message-ID: <E2E68889-7D8C-43AB-AE73-6DB91F130E75@R-project.org>

Aron,

one package managed to spawn a separate process that was blocking the build process (long story) and I was on the other side of the world. It should be fixed now, but it may take up to a day before the backlog is processed. In the future for faster response, please contact me directly - see "CRAN Binary Package Maintenance" on the CRAN Team webpage.

Cheers,
Simon


> On Sep 13, 2023, at 2:10 AM, Aron Atkins <aron.atkins at gmail.com> wrote:
> 
> Hi.
> 
> It looks like macOS package publishing may have stalled. One of my
> packages, rsconnect 1.1.0, arrived on CRAN about a week ago. It is built
> almost everywhere, but r-release-macos* and r-release-macos-arm64 are still
> showing results from the previous release.
> 
> Recent releases did see check failures on the r-release-macos-x86_64 host
> (because its Pandoc installation was older than supported by one of our
> dependencies). The rsconnect 1.1.0 release should address these failures,
> but I am still waiting to see builds flow through.
> 
> https://cran.r-project.org/web/packages/rsconnect/index.html
> https://cran.r-project.org/web/checks/check_results_rsconnect.html
> 
> Is someone able to look into this or otherwise offer advice?
> 
> Thanks,
> Aron
> -- 
> email: aron.atkins at gmail.com
> home: http://gweep.net/~aron/
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 


From edd @end|ng |rom deb|@n@org  Thu Sep 14 15:09:25 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Thu, 14 Sep 2023 08:09:25 -0500
Subject: [R-pkg-devel] Cadence of macOS builds at CRAN
Message-ID: <25859.1541.96092.862310@rob.eddelbuettel.com>


Simon,

A new package of mine [1] appeared on CRAN on Sep 5. Respecting the one week gap,
I made a small update on Sep 12.

Today is Sep 14. There are still no builds for
  macOS r-release (arm64)
  macOS r-oldrel (arm64)
  macOS r-release (x86_64)
but we do have two oldrel releases. Weirder still we have results for
macOS r-release (x86_64) even when the binary is not listed.

There is nothing tricky in the package or it dependencies.  Could you provide
an update of what should and can be expected in the macOS provision? Is this
a matter of intra-CRAN syncing between your builder(s) and the Vienna site?

Thanks as always,  Dirk

[1] https://cran.r-project.org/package=RcppInt64

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From @ron@@tk|n@ @end|ng |rom gm@||@com  Thu Sep 14 15:21:00 2023
From: @ron@@tk|n@ @end|ng |rom gm@||@com (Aron Atkins)
Date: Thu, 14 Sep 2023 09:21:00 -0400
Subject: [R-pkg-devel] Cadence of macOS builds at CRAN
In-Reply-To: <25859.1541.96092.862310@rob.eddelbuettel.com>
References: <25859.1541.96092.862310@rob.eddelbuettel.com>
Message-ID: <CA+T4NJT6=ob3RhNcO1a_TKLtXSzmFVaGEzSzdh0Gjg_EqhWR3g@mail.gmail.com>

Dirk,

Providing a partial answer: Simon replied earlier today to my related
question; macOS builds had been blocked, but are starting to flow again.

> one package managed to spawn a separate process that was blocking the
build process (long story) and I was on the other side of the world. It
should be fixed now, but it may take up to a day before the backlog is
processed.

https://stat.ethz.ch/pipermail/r-package-devel/2023q3/009562.html

Aron

On Thu, Sep 14, 2023 at 9:09?AM Dirk Eddelbuettel <edd at debian.org> wrote:

>
> Simon,
>
> A new package of mine [1] appeared on CRAN on Sep 5. Respecting the one
> week gap,
> I made a small update on Sep 12.
>
> Today is Sep 14. There are still no builds for
>   macOS r-release (arm64)
>   macOS r-oldrel (arm64)
>   macOS r-release (x86_64)
> but we do have two oldrel releases. Weirder still we have results for
> macOS r-release (x86_64) even when the binary is not listed.
>
> There is nothing tricky in the package or it dependencies.  Could you
> provide
> an update of what should and can be expected in the macOS provision? Is
> this
> a matter of intra-CRAN syncing between your builder(s) and the Vienna site?
>
> Thanks as always,  Dirk
>
> [1] https://cran.r-project.org/package=RcppInt64
>
> --
> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


-- 
email: aron.atkins at gmail.com
home: http://gweep.net/~aron/

	[[alternative HTML version deleted]]


From |eo@m@d@ @end|ng |rom @yon|c@eu  Thu Sep 14 21:40:33 2023
From: |eo@m@d@ @end|ng |rom @yon|c@eu (Leonard Mada)
Date: Thu, 14 Sep 2023 22:40:33 +0300
Subject: [R-pkg-devel] Spelling of PDB in Package Description
Message-ID: <fccf4595-d4a7-4d38-9d93-5cbb7a8fd8f9@syonic.eu>

Dear List Members,

After resubmitting the updated version of the Rpdb package (2.3.1), the 
following Notes were generated:

1.) Spelling PDB
https://win-builder.r-project.org/incoming_pretest/Rpdb_2.3.1_20230914_173458/Windows/00check.log
https://win-builder.r-project.org/incoming_pretest/Rpdb_2.3.1_20230914_173458/Debian/00check.log

The PDB stands for Protein Data Bank:
http://www.wwpdb.org/documentation/file-format-content/format33/v3.3.html

It should be the correct spelling (and was the same in the previous 
versions of the package).

2.)? Small Sample PDB Files
* checking for non-standard things in the check directory ...
NOTE Found the following files/directories: ?Rpdb.pdb?

There is a directory with 3 very small sample pdb-files. The directory 
was also present in the previous version.

How should I proceed? Or did I miss something?


Sincerely,


Leonard


From @vr@h@m@@d|er @end|ng |rom gm@||@com  Thu Sep 14 22:06:10 2023
From: @vr@h@m@@d|er @end|ng |rom gm@||@com (Avraham Adler)
Date: Thu, 14 Sep 2023 16:06:10 -0400
Subject: [R-pkg-devel] Spelling of PDB in Package Description
In-Reply-To: <fccf4595-d4a7-4d38-9d93-5cbb7a8fd8f9@syonic.eu>
References: <fccf4595-d4a7-4d38-9d93-5cbb7a8fd8f9@syonic.eu>
Message-ID: <68D8A343-08FE-4019-8CED-D9C79D2AD836@gmail.com>

Regarding PDB, in Rd format it?s best to wrap that in an \acronym{} tag. See section 2.3 of https://cran.r-project.org/doc/manuals/R-exts.html#Marking-text

Avi

Sent from my iPhone

> On Sep 14, 2023, at 3:40 PM, Leonard Mada via R-package-devel <r-package-devel at r-project.org> wrote:
> 
> ?Dear List Members,
> 
> After resubmitting the updated version of the Rpdb package (2.3.1), the following Notes were generated:
> 
> 1.) Spelling PDB
> https://win-builder.r-project.org/incoming_pretest/Rpdb_2.3.1_20230914_173458/Windows/00check.log
> https://win-builder.r-project.org/incoming_pretest/Rpdb_2.3.1_20230914_173458/Debian/00check.log
> 
> The PDB stands for Protein Data Bank:
> http://www.wwpdb.org/documentation/file-format-content/format33/v3.3.html
> 
> It should be the correct spelling (and was the same in the previous versions of the package).
> 
> 2.)  Small Sample PDB Files
> * checking for non-standard things in the check directory ...
> NOTE Found the following files/directories: ?Rpdb.pdb?
> 
> There is a directory with 3 very small sample pdb-files. The directory was also present in the previous version.
> 
> How should I proceed? Or did I miss something?
> 
> 
> Sincerely,
> 
> 
> Leonard
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

	[[alternative HTML version deleted]]


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Thu Sep 14 23:27:02 2023
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Thu, 14 Sep 2023 23:27:02 +0200
Subject: [R-pkg-devel] Spelling of PDB in Package Description
In-Reply-To: <68D8A343-08FE-4019-8CED-D9C79D2AD836@gmail.com>
References: <fccf4595-d4a7-4d38-9d93-5cbb7a8fd8f9@syonic.eu>
 <68D8A343-08FE-4019-8CED-D9C79D2AD836@gmail.com>
Message-ID: <83a02ef1-a982-a4b5-2e17-7ed918d1f768@statistik.tu-dortmund.de>

The spellng is fine and not a problem.

For
* checking for non-standard things in the check directory ... NOTE
Found the following files/directories:
   ?Rpdb.pdb?
You need to move this to ./inst or a subdirectory or, if data, consider 
./extdata See Writing R Extensions.

Best,
Uwe Ligges


On 14.09.2023 22:06, Avraham Adler wrote:
> Regarding PDB, in Rd format it?s best to wrap that in an \acronym{} tag. See section 2.3 of https://cran.r-project.org/doc/manuals/R-exts.html#Marking-text
> 
> Avi
> 
> Sent from my iPhone
> 
>> On Sep 14, 2023, at 3:40 PM, Leonard Mada via R-package-devel <r-package-devel at r-project.org> wrote:
>>
>> ?Dear List Members,
>>
>> After resubmitting the updated version of the Rpdb package (2.3.1), the following Notes were generated:
>>
>> 1.) Spelling PDB
>> https://win-builder.r-project.org/incoming_pretest/Rpdb_2.3.1_20230914_173458/Windows/00check.log
>> https://win-builder.r-project.org/incoming_pretest/Rpdb_2.3.1_20230914_173458/Debian/00check.log
>>
>> The PDB stands for Protein Data Bank:
>> http://www.wwpdb.org/documentation/file-format-content/format33/v3.3.html
>>
>> It should be the correct spelling (and was the same in the previous versions of the package).
>>
>> 2.)  Small Sample PDB Files
>> * checking for non-standard things in the check directory ...
>> NOTE Found the following files/directories: ?Rpdb.pdb?
>>
>> There is a directory with 3 very small sample pdb-files. The directory was also present in the previous version.
>>
>> How should I proceed? Or did I miss something?
>>
>>
>> Sincerely,
>>
>>
>> Leonard
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From |eo@m@d@ @end|ng |rom @yon|c@eu  Thu Sep 14 23:35:05 2023
From: |eo@m@d@ @end|ng |rom @yon|c@eu (Leonard Mada)
Date: Fri, 15 Sep 2023 00:35:05 +0300
Subject: [R-pkg-devel] Spelling of PDB in Package Description
In-Reply-To: <83a02ef1-a982-a4b5-2e17-7ed918d1f768@statistik.tu-dortmund.de>
References: <fccf4595-d4a7-4d38-9d93-5cbb7a8fd8f9@syonic.eu>
 <68D8A343-08FE-4019-8CED-D9C79D2AD836@gmail.com>
 <83a02ef1-a982-a4b5-2e17-7ed918d1f768@statistik.tu-dortmund.de>
Message-ID: <41c007e3-6f38-4d02-aa8f-a0e651c0f2f0@syonic.eu>

Dear Uwe,


I found out what is going on. There is an example:

## Write the pdb object in file "Rpdb.pdb" into the current directory
write.pdb(pdb, file = "Rpdb.pdb")


The example was present in the previous version as well. So I did not 
thought about it. I do not know how to handle this: although the example 
should probably remain.


Sincerely,


Leonard


On 9/15/2023 12:27 AM, Uwe Ligges wrote:
> The spellng is fine and not a problem.
>
> For
> * checking for non-standard things in the check directory ... NOTE
> Found the following files/directories:
> ? ?Rpdb.pdb?
> You need to move this to ./inst or a subdirectory or, if data, 
> consider ./extdata See Writing R Extensions.
>
> Best,
> Uwe Ligges
>
>
> On 14.09.2023 22:06, Avraham Adler wrote:
>> Regarding PDB, in Rd format it?s best to wrap that in an \acronym{} 
>> tag. See section 2.3 of 
>> https://cran.r-project.org/doc/manuals/R-exts.html#Marking-text
>>
>> Avi
>>
>> Sent from my iPhone
>>
>>> On Sep 14, 2023, at 3:40 PM, Leonard Mada via R-package-devel 
>>> <r-package-devel at r-project.org> wrote:
>>>
>>> ?Dear List Members,
>>>
>>> After resubmitting the updated version of the Rpdb package (2.3.1), 
>>> the following Notes were generated:
>>>
>>> 1.) Spelling PDB
>>> https://win-builder.r-project.org/incoming_pretest/Rpdb_2.3.1_20230914_173458/Windows/00check.log 
>>>
>>> https://win-builder.r-project.org/incoming_pretest/Rpdb_2.3.1_20230914_173458/Debian/00check.log 
>>>
>>>
>>> The PDB stands for Protein Data Bank:
>>> http://www.wwpdb.org/documentation/file-format-content/format33/v3.3.html 
>>>
>>>
>>> It should be the correct spelling (and was the same in the previous 
>>> versions of the package).
>>>
>>> 2.)? Small Sample PDB Files
>>> * checking for non-standard things in the check directory ...
>>> NOTE Found the following files/directories: ?Rpdb.pdb?
>>>
>>> There is a directory with 3 very small sample pdb-files. The 
>>> directory was also present in the previous version.
>>>
>>> How should I proceed? Or did I miss something?
>>>
>>>
>>> Sincerely,
>>>
>>>
>>> Leonard
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>> ????[[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Fri Sep 15 00:01:03 2023
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Fri, 15 Sep 2023 00:01:03 +0200
Subject: [R-pkg-devel] Spelling of PDB in Package Description
In-Reply-To: <41c007e3-6f38-4d02-aa8f-a0e651c0f2f0@syonic.eu>
References: <fccf4595-d4a7-4d38-9d93-5cbb7a8fd8f9@syonic.eu>
 <68D8A343-08FE-4019-8CED-D9C79D2AD836@gmail.com>
 <83a02ef1-a982-a4b5-2e17-7ed918d1f768@statistik.tu-dortmund.de>
 <41c007e3-6f38-4d02-aa8f-a0e651c0f2f0@syonic.eu>
Message-ID: <396724d1-258e-32c1-6c83-1318d75f4923@statistik.tu-dortmund.de>



On 14.09.2023 23:35, Leonard Mada wrote:
> Dear Uwe,
> 
> 
> I found out what is going on. There is an example:
> 
> ## Write the pdb object in file "Rpdb.pdb" into the current directory
> write.pdb(pdb, file = "Rpdb.pdb")
> 

In examples, you should write to tempdir(), if at all.

Best,
Uwe Ligges




> 
> The example was present in the previous version as well. So I did not 
> thought about it. I do not know how to handle this: although the example 
> should probably remain.
> 
> 
> Sincerely,
> 
> 
> Leonard
> 
> 
> On 9/15/2023 12:27 AM, Uwe Ligges wrote:
>> The spellng is fine and not a problem.
>>
>> For
>> * checking for non-standard things in the check directory ... NOTE
>> Found the following files/directories:
>> ? ?Rpdb.pdb?
>> You need to move this to ./inst or a subdirectory or, if data, 
>> consider ./extdata See Writing R Extensions.
>>
>> Best,
>> Uwe Ligges
>>
>>
>> On 14.09.2023 22:06, Avraham Adler wrote:
>>> Regarding PDB, in Rd format it?s best to wrap that in an \acronym{} 
>>> tag. See section 2.3 of 
>>> https://cran.r-project.org/doc/manuals/R-exts.html#Marking-text
>>>
>>> Avi
>>>
>>> Sent from my iPhone
>>>
>>>> On Sep 14, 2023, at 3:40 PM, Leonard Mada via R-package-devel 
>>>> <r-package-devel at r-project.org> wrote:
>>>>
>>>> ?Dear List Members,
>>>>
>>>> After resubmitting the updated version of the Rpdb package (2.3.1), 
>>>> the following Notes were generated:
>>>>
>>>> 1.) Spelling PDB
>>>> https://win-builder.r-project.org/incoming_pretest/Rpdb_2.3.1_20230914_173458/Windows/00check.log
>>>> https://win-builder.r-project.org/incoming_pretest/Rpdb_2.3.1_20230914_173458/Debian/00check.log
>>>>
>>>> The PDB stands for Protein Data Bank:
>>>> http://www.wwpdb.org/documentation/file-format-content/format33/v3.3.html
>>>>
>>>> It should be the correct spelling (and was the same in the previous 
>>>> versions of the package).
>>>>
>>>> 2.)? Small Sample PDB Files
>>>> * checking for non-standard things in the check directory ...
>>>> NOTE Found the following files/directories: ?Rpdb.pdb?
>>>>
>>>> There is a directory with 3 very small sample pdb-files. The 
>>>> directory was also present in the previous version.
>>>>
>>>> How should I proceed? Or did I miss something?
>>>>
>>>>
>>>> Sincerely,
>>>>
>>>>
>>>> Leonard
>>>>
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
>>> ????[[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From @hu|@|@cheung @end|ng |rom gm@||@com  Mon Sep 18 16:10:05 2023
From: @hu|@|@cheung @end|ng |rom gm@||@com (Shu Fai Cheung)
Date: Mon, 18 Sep 2023 22:10:05 +0800
Subject: [R-pkg-devel] Checking the number of cores used
Message-ID: <CAPVJd2UYAEOZj=i2rBRVp9v+_3fZ=VTK9Ky0fOfWxWdWZM4E_Q@mail.gmail.com>

Hi All,

I know we should not use more than 2 cores in tests, vignettes, etc. I
encountered and solved this issue before. However, I still committed
this mistake in a new package and would like find out where the cause
is.

I have a package that already has parallel processing disabled by
default and I did not enable parallel processing in the examples and
tests (except for one test, which is always skipped by skip()).
However, I was told that somewhere in the package more than 2 cores
are used.

I checked several times and even added a temporary 'stop()` to "trap"
parallel processing but still could not find where the source of the
problem is.

I checked the timing in the log in R CMD check results from winbuilder
but everything seems OK. The user time and elapsed time are similar
for all the examples.

Is there any quick way to check where things go wrong regarding the
number of cores? It is not easy to find the source of the problems
when there are many examples and tests.

Regards,
Shu Fai


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Tue Sep 19 11:02:41 2023
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Tue, 19 Sep 2023 11:02:41 +0200
Subject: [R-pkg-devel] Checking the number of cores used
In-Reply-To: <CAPVJd2UYAEOZj=i2rBRVp9v+_3fZ=VTK9Ky0fOfWxWdWZM4E_Q@mail.gmail.com>
References: <CAPVJd2UYAEOZj=i2rBRVp9v+_3fZ=VTK9Ky0fOfWxWdWZM4E_Q@mail.gmail.com>
Message-ID: <68aca5fd-63af-75a5-d97a-41cc357b9cb3@statistik.tu-dortmund.de>



On 18.09.2023 16:10, Shu Fai Cheung wrote:
> Hi All,
> 
> I know we should not use more than 2 cores in tests, vignettes, etc. I
> encountered and solved this issue before. However, I still committed
> this mistake in a new package and would like find out where the cause
> is.
> 
> I have a package that already has parallel processing disabled by
> default and I did not enable parallel processing in the examples and
> tests (except for one test, which is always skipped by skip()).
> However, I was told that somewhere in the package more than 2 cores
> are used.
> 
> I checked several times and even added a temporary 'stop()` to "trap"
> parallel processing but still could not find where the source of the
> problem is.
> 
> I checked the timing in the log in R CMD check results from winbuilder
> but everything seems OK. The user time and elapsed time are similar
> for all the examples.
> 
> Is there any quick way to check where things go wrong regarding the
> number of cores? It is not easy to find the source of the problems
> when there are many examples and tests.

If it is OK on winbuilder but not on Linux, then likely something makes 
use of multithreading.

Best,
Uwe Ligges



> Regards,
> Shu Fai
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From murdoch@dunc@n @end|ng |rom gm@||@com  Tue Sep 19 11:59:22 2023
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Tue, 19 Sep 2023 05:59:22 -0400
Subject: [R-pkg-devel] Checking the number of cores used
In-Reply-To: <CAPVJd2UYAEOZj=i2rBRVp9v+_3fZ=VTK9Ky0fOfWxWdWZM4E_Q@mail.gmail.com>
References: <CAPVJd2UYAEOZj=i2rBRVp9v+_3fZ=VTK9Ky0fOfWxWdWZM4E_Q@mail.gmail.com>
Message-ID: <5986f124-8ba6-4ee2-bd09-2035fb94f421@gmail.com>

On 18/09/2023 10:10 a.m., Shu Fai Cheung wrote:
> Hi All,
> 
> I know we should not use more than 2 cores in tests, vignettes, etc. I
> encountered and solved this issue before. However, I still committed
> this mistake in a new package and would like find out where the cause
> is.
> 
> I have a package that already has parallel processing disabled by
> default and I did not enable parallel processing in the examples and
> tests (except for one test, which is always skipped by skip()).
> However, I was told that somewhere in the package more than 2 cores
> are used.
> 
> I checked several times and even added a temporary 'stop()` to "trap"
> parallel processing but still could not find where the source of the
> problem is.
> 
> I checked the timing in the log in R CMD check results from winbuilder
> but everything seems OK. The user time and elapsed time are similar
> for all the examples.
> 
> Is there any quick way to check where things go wrong regarding the
> number of cores? It is not easy to find the source of the problems
> when there are many examples and tests.

If you run R CMD check <pkg> at the command line, it will produce a 
directory *.Rcheck containing a number of files.  One of those files 
will be *-Ex.timings, which will give the individual timings of each of 
the examples in your package.  Maybe you can recognize from those which 
of the examples are problematic ones, and add `proc.time()` calls to the 
example to figure out which line(s) cause the issue.

I don't remember whether winbuilder keeps the timings file when it runs 
a check.

Duncan Murdoch


From murdoch@dunc@n @end|ng |rom gm@||@com  Tue Sep 19 12:10:06 2023
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Tue, 19 Sep 2023 06:10:06 -0400
Subject: [R-pkg-devel] Checking the number of cores used
In-Reply-To: <5986f124-8ba6-4ee2-bd09-2035fb94f421@gmail.com>
References: <CAPVJd2UYAEOZj=i2rBRVp9v+_3fZ=VTK9Ky0fOfWxWdWZM4E_Q@mail.gmail.com>
 <5986f124-8ba6-4ee2-bd09-2035fb94f421@gmail.com>
Message-ID: <de73881f-15ef-4cbc-9bc2-a2aa750cafab@gmail.com>

Sorry, I missed the --as-cran option:  you run

  R CMD check --as-cran <pkg>

Duncan Murdoch

On 19/09/2023 5:59 a.m., Duncan Murdoch wrote:
> On 18/09/2023 10:10 a.m., Shu Fai Cheung wrote:
>> Hi All,
>>
>> I know we should not use more than 2 cores in tests, vignettes, etc. I
>> encountered and solved this issue before. However, I still committed
>> this mistake in a new package and would like find out where the cause
>> is.
>>
>> I have a package that already has parallel processing disabled by
>> default and I did not enable parallel processing in the examples and
>> tests (except for one test, which is always skipped by skip()).
>> However, I was told that somewhere in the package more than 2 cores
>> are used.
>>
>> I checked several times and even added a temporary 'stop()` to "trap"
>> parallel processing but still could not find where the source of the
>> problem is.
>>
>> I checked the timing in the log in R CMD check results from winbuilder
>> but everything seems OK. The user time and elapsed time are similar
>> for all the examples.
>>
>> Is there any quick way to check where things go wrong regarding the
>> number of cores? It is not easy to find the source of the problems
>> when there are many examples and tests.
> 
> If you run R CMD check <pkg> at the command line, it will produce a
> directory *.Rcheck containing a number of files.  One of those files
> will be *-Ex.timings, which will give the individual timings of each of
> the examples in your package.  Maybe you can recognize from those which
> of the examples are problematic ones, and add `proc.time()` calls to the
> example to figure out which line(s) cause the issue.
> 
> I don't remember whether winbuilder keeps the timings file when it runs
> a check.
> 
> Duncan Murdoch
>


From @hu|@|@cheung @end|ng |rom gm@||@com  Wed Sep 20 10:09:09 2023
From: @hu|@|@cheung @end|ng |rom gm@||@com (Shu Fai Cheung)
Date: Wed, 20 Sep 2023 16:09:09 +0800
Subject: [R-pkg-devel] Checking the number of cores used
In-Reply-To: <5986f124-8ba6-4ee2-bd09-2035fb94f421@gmail.com>
References: <CAPVJd2UYAEOZj=i2rBRVp9v+_3fZ=VTK9Ky0fOfWxWdWZM4E_Q@mail.gmail.com>
 <5986f124-8ba6-4ee2-bd09-2035fb94f421@gmail.com>
Message-ID: <CAPVJd2U7QhqvkgocA+OZrVMqh6Axgk0h5m8c9OYB0nZz-eXa6A@mail.gmail.com>

Thanks a lot. I don't have a physical linux box and so I need to use
rhub. But I don't know why there are no "-Ex.timings" files in the
check. E.g,

check(platform = "debian-gcc-release", show_status = FALSE, check_args
= "--as-cran")

I can only see these files in artifacts:

[ ]    00check.log    2023-09-20 08:00     3.4K
[ ]    00install.out    2023-09-20 08:00     702
[ ]    Rdlatex.log    2023-09-20 08:00     30K
[ ]    modelbpp-Ex.Rout    2023-09-20 08:00     28K
[ ]    modelbpp-manual.log    2023-09-20 08:00     19K

The case is the same for this, no "-Ex.timings" files:

check(platform = "windows-x86_64-release", show_status = FALSE,
check_args = "--as-cran")

Although I think I need to, I tried adding "--timings" but still do
not see the "-Ex.timings".

However, if I run the check locally in Windows 10 using R CMD check
with --as-cran, I can find the "-Ex.timings" files.

I can find the total time at the end of "-Ex.Rout" but I think this is
not what I need:

> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  10.963 0.161 13.589 0.302 0.081

Regards,
Shu Fai


On Tue, Sep 19, 2023 at 5:59?PM Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
>
> On 18/09/2023 10:10 a.m., Shu Fai Cheung wrote:
> > Hi All,
> >
> > I know we should not use more than 2 cores in tests, vignettes, etc. I
> > encountered and solved this issue before. However, I still committed
> > this mistake in a new package and would like find out where the cause
> > is.
> >
> > I have a package that already has parallel processing disabled by
> > default and I did not enable parallel processing in the examples and
> > tests (except for one test, which is always skipped by skip()).
> > However, I was told that somewhere in the package more than 2 cores
> > are used.
> >
> > I checked several times and even added a temporary 'stop()` to "trap"
> > parallel processing but still could not find where the source of the
> > problem is.
> >
> > I checked the timing in the log in R CMD check results from winbuilder
> > but everything seems OK. The user time and elapsed time are similar
> > for all the examples.
> >
> > Is there any quick way to check where things go wrong regarding the
> > number of cores? It is not easy to find the source of the problems
> > when there are many examples and tests.
>
> If you run R CMD check <pkg> at the command line, it will produce a
> directory *.Rcheck containing a number of files.  One of those files
> will be *-Ex.timings, which will give the individual timings of each of
> the examples in your package.  Maybe you can recognize from those which
> of the examples are problematic ones, and add `proc.time()` calls to the
> example to figure out which line(s) cause the issue.
>
> I don't remember whether winbuilder keeps the timings file when it runs
> a check.
>
> Duncan Murdoch
>


From @hu|@|@cheung @end|ng |rom gm@||@com  Wed Sep 20 10:27:31 2023
From: @hu|@|@cheung @end|ng |rom gm@||@com (Shu Fai Cheung)
Date: Wed, 20 Sep 2023 16:27:31 +0800
Subject: [R-pkg-devel] Checking the number of cores used
In-Reply-To: <68aca5fd-63af-75a5-d97a-41cc357b9cb3@statistik.tu-dortmund.de>
References: <CAPVJd2UYAEOZj=i2rBRVp9v+_3fZ=VTK9Ky0fOfWxWdWZM4E_Q@mail.gmail.com>
 <68aca5fd-63af-75a5-d97a-41cc357b9cb3@statistik.tu-dortmund.de>
Message-ID: <CAPVJd2Xmfmy1D+0qVkDs-PkgN9oBNPZXenDUkNDQr93fYHOcAA@mail.gmail.com>

Thanks for the suggestion. I will use rhub and a virtual machine to check again.

I read some previous posts and I thought I need to check the times to
see if there is any unintended usage of parallel processing, e.g., CPU
time > 2 x elapsed time. May I ask a few questions on this part?

This is from the "-Ex.Rout" file:

> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  14.94 0.27 15.26 NA NA

First, is this something I can ignore, unless the CPU time is
substantially larger than elapsed time? This is the total time but the
parallel process may be triggered in only one of the many examples.

Second, are the files "-Ex.timings", showing per-example timing, only
available on some platforms? I could get it locally in Windows, and
can find it in Winbuilder output. However, I could not find them in
the rhub platforms I tried, not even in the Windows platform. I
suppose adding "--as-cran" will also add "--timings"?

Third, the "testthat.Rout" file only shows the total time:

> proc.time()
   user  system elapsed
 13.530   0.291  29.492

I believe the user time is not useful as we can use two processes in
testthat. How can we detect the use of more than two cores in the
tests?

Last, how can we detect the use of more than two cores in vignettes? I
checked and couldn't find similar timing information on vignettes.

Sorry for asking so many questions. I would like to have a reliable
way to detect hidden use of parallel processing such that I can
prevent the problem from happening. I have some ideas which package I
imported is causing the problem but I have used it before without
problem. Therefore, I would like to see if I overlooked anything.

Regards,
Shu Fai

On Tue, Sep 19, 2023 at 5:02?PM Uwe Ligges
<ligges at statistik.tu-dortmund.de> wrote:
>
>
>
> On 18.09.2023 16:10, Shu Fai Cheung wrote:
> > Hi All,
> >
> > I know we should not use more than 2 cores in tests, vignettes, etc. I
> > encountered and solved this issue before. However, I still committed
> > this mistake in a new package and would like find out where the cause
> > is.
> >
> > I have a package that already has parallel processing disabled by
> > default and I did not enable parallel processing in the examples and
> > tests (except for one test, which is always skipped by skip()).
> > However, I was told that somewhere in the package more than 2 cores
> > are used.
> >
> > I checked several times and even added a temporary 'stop()` to "trap"
> > parallel processing but still could not find where the source of the
> > problem is.
> >
> > I checked the timing in the log in R CMD check results from winbuilder
> > but everything seems OK. The user time and elapsed time are similar
> > for all the examples.
> >
> > Is there any quick way to check where things go wrong regarding the
> > number of cores? It is not easy to find the source of the problems
> > when there are many examples and tests.
>
> If it is OK on winbuilder but not on Linux, then likely something makes
> use of multithreading.
>
> Best,
> Uwe Ligges
>
>
>
> > Regards,
> > Shu Fai
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel


From kry|ov@r00t @end|ng |rom gm@||@com  Wed Sep 20 11:08:32 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Wed, 20 Sep 2023 09:08:32 +0000
Subject: [R-pkg-devel] Checking the number of cores used
In-Reply-To: <CAPVJd2Xmfmy1D+0qVkDs-PkgN9oBNPZXenDUkNDQr93fYHOcAA@mail.gmail.com>
References: <CAPVJd2UYAEOZj=i2rBRVp9v+_3fZ=VTK9Ky0fOfWxWdWZM4E_Q@mail.gmail.com>
 <68aca5fd-63af-75a5-d97a-41cc357b9cb3@statistik.tu-dortmund.de>
 <CAPVJd2Xmfmy1D+0qVkDs-PkgN9oBNPZXenDUkNDQr93fYHOcAA@mail.gmail.com>
Message-ID: <CB7D8DC0-4969-4B9D-9210-B04E2191951F@gmail.com>

20 ???????? 2023 ?. 8:27:31 UTC, Shu Fai Cheung <shufai.cheung at gmail.com> ?????:

>Third, the "testthat.Rout" file only shows the total time:
>
>> proc.time()
>   user  system elapsed
> 13.530   0.291  29.492
>
>I believe the user time is not useful as we can use two processes in
>testthat. How can we detect the use of more than two cores in the
>tests?
R could report CPU and elapsed tme for each test file in tests/*.R, but with testthat, it only sees tests/testthat.R, which isn't very useful.

If you know R6, it should be possible to implement a CPUTimeReporter that would collect information about CPU and "wallclock" time taken by each individual test: https://testthat.r-lib.org/reference/Reporter.html

It may be worth submitting a feature request for such a reporter.
-- 
Best regards,
Ivan


From h@nyu@@ong @end|ng |rom duke@edu  Thu Sep 21 02:03:11 2023
From: h@nyu@@ong @end|ng |rom duke@edu (Hanyu Song)
Date: Thu, 21 Sep 2023 00:03:11 +0000
Subject: [R-pkg-devel] A simple question regarding examples
Message-ID: <BN7PR05MB446682F3EE8AA00D37021AFAEFF2A@BN7PR05MB4466.namprd05.prod.outlook.com>

Hello,

I have a simple question about including examples. My code depends on a rarely used Python module, so I am using the @examplesIf tag per Hadley Wickham's advice as follows:

#' @examplesIf reticulate::py_module_available('ctef')
#'  res <- my_func(input1, input2)

Unfortunately, my_func runs overtime during the CRAN check. To resolve this, do I simply use the less elegant approach as follows?

#' \dontrun{
#' if (reticulate::py_module_available('ctef')) {
#' res <- my_func(input1, input2)
#' }

Thank you,
Hanyu

	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Thu Sep 21 09:07:03 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Thu, 21 Sep 2023 10:07:03 +0300
Subject: [R-pkg-devel] A simple question regarding examples
In-Reply-To: <BN7PR05MB446682F3EE8AA00D37021AFAEFF2A@BN7PR05MB4466.namprd05.prod.outlook.com>
References: <BN7PR05MB446682F3EE8AA00D37021AFAEFF2A@BN7PR05MB4466.namprd05.prod.outlook.com>
Message-ID: <20230921100703.6370122e@Tarkus>

On Thu, 21 Sep 2023 00:03:11 +0000
Hanyu Song <hanyu.song at duke.edu> wrote:

> Unfortunately, my_func runs overtime during the CRAN check. To
> resolve this, do I simply use the less elegant approach as follows?
> 
> #' \dontrun{
> #' if (reticulate::py_module_available('ctef')) {
> #' res <- my_func(input1, input2)
> #' }

\dontrun{} is reserved for things that either cannot be guaranteed to
work (highly dependent on the user's system), involve examples of
interactive input/output (e.g. ?debugger), or are potentially too
destructive in case they break (e.g. ?connections). The \examples
section should include running code, which example(your_func) should
run. If there's only the \dontrun{} section, it won't pass the review.

For things that ought to work, it's best to reduce inputs further until
the example runs within the time limit. One remaining escape hatch is
\donttest{}, but R CMD check --as-cran still involves running
\donttest{} examples. Putting the whole example in a \donttest{}
section doesn't sound like a good idea either.

-- 
Best regards,
Ivan


From j@goreck| @end|ng |rom w|t@edu@p|  Thu Sep 21 09:46:26 2023
From: j@goreck| @end|ng |rom w|t@edu@p| (Jan Gorecki)
Date: Thu, 21 Sep 2023 09:46:26 +0200
Subject: [R-pkg-devel] safely allocate SEXP and handle failure
Message-ID: <CAOO9MKVAhjSF8rQOpjjem+O+GdTBKZ6k_=ePQCr-F+q0tzdQoA@mail.gmail.com>

Dear pkg developers

I would like to safely allocate R object from C. By safely I mean
that, I can test if allocation succeeded or failed, and then raise
exception myself.
R_alloc and allocVector both raises exception straightaway, so I am
not able to handle failed allocation myself.
In plain C it is something like that:

int *x = malloc(nx*sizeof(int));
if (!x) {
  my_fun_to_set_exception_signal();
  free(x);
  return;
}

How can I do it for creating SEXP object?

Best Regards,
Jan Gorecki


From kry|ov@r00t @end|ng |rom gm@||@com  Thu Sep 21 10:40:45 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Thu, 21 Sep 2023 11:40:45 +0300
Subject: [R-pkg-devel] safely allocate SEXP and handle failure
In-Reply-To: <CAOO9MKVAhjSF8rQOpjjem+O+GdTBKZ6k_=ePQCr-F+q0tzdQoA@mail.gmail.com>
References: <CAOO9MKVAhjSF8rQOpjjem+O+GdTBKZ6k_=ePQCr-F+q0tzdQoA@mail.gmail.com>
Message-ID: <20230921114045.330591f9@Tarkus>

On Thu, 21 Sep 2023 09:46:26 +0200
Jan Gorecki <j.gorecki at wit.edu.pl> wrote:

> I would like to safely allocate R object from C. By safely I mean
> that, I can test if allocation succeeded or failed, and then raise
> exception myself.
> R_alloc and allocVector both raises exception straightaway, so I am
> not able to handle failed allocation myself.

All R objects are subject to garbage collection (as potential garbage
or at least as a source of information about live objects), so they
have to be allocated by talking to the GC. (This also means that
R_alloc() is not a good way to create new SEXPs.)

It's not that it's impossible to return a failure code on allocation
failures instead of performing a longjmp() away from your code, but
since the rest of error handling in R works this way, extension code
has to always be ready to be longjmp()'d away from at every R API call.

How about catching the exception instead?

struct alloc_args { SEXPTYPE type; R_xlen_t len; };

static SEXP do_allocate(void * arguments) {
 struct alloc_args * args = arguments;
 return allocVector(args->type, args->len);
}

static SEXP maybe_allocate(SEXPTYPE type, R_xlen_t len) {
 struct alloc_args args = { .type = type, .len = len };
 return R_tryCatchError(do_allocate, &args, NULL, NULL);
} // returns R_NilValue on failure via the default tryCatch handler

Code is untested but should work according to WRE:
https://cran.r-project.org/doc/manuals/R-exts.html#Condition-handling-and-cleanup-code

-- 
Best regards,
Ivan


From ti@yiiiedi@iogs m@iii@g oii yse@gri@@com  Wed Sep 20 12:30:53 2023
From: ti@yiiiedi@iogs m@iii@g oii yse@gri@@com (ti@yiiiedi@iogs m@iii@g oii yse@gri@@com)
Date: Wed, 20 Sep 2023 12:30:53 +0200
Subject: [R-pkg-devel] tinyfiledialogs - The bindings are ready,
 but I need help to make of package of it
In-Reply-To: <mailman.9577.0.1695200891.55128.r-package-devel@r-project.org>
References: <mailman.9577.0.1695200891.55128.r-package-devel@r-project.org>
Message-ID: <e65f8a78-5bed-e9a1-ba14-cd9959dda17b@ysengrin.com>

https://tinyfiledialogs.sourceforge.net

Hi,

I am the author of tinyfiledialogs a cross-platform C C++ library 
(windows, Mac, Unix) which offers many modal dialogs and popup 
notifications (both for graphic and console modes). It aims to be 
extremely easy to use. There is no init, no main loop, and no external 
dependencies. It is used by hundreds projects on GitHub.

The following github call returns almost 15000 files (you need to be 
logged on github)

https://github.com/search?q=tinyfd+OR+tinyfiledialogs&type=code


With the latest version v3.14, I've just released the bindings for R.

I've been pointed to the documentation link on how to write a package,
but it would really help if someone who knows what to do could direct me.

Thanks in advance

Guillaume Vareille


 ??? # first load the included library (it could easily be compiled on 
the target machine)
 ??? dyn.load("tinyfiledialogsLinux64.so")

 ??? # then load the included R interface
 ??? tinyfd_openFileDialog <- function(aTitle, aDefaultPathAndFile , 
aNumOfFilterPatterns,
 ??? ??? ??? ??? aFilterPatterns, aSingleFilterDescription , 
aAllowMultipleSelects)
 ??? {
 ?? ?? result <- .C("tfd_openFileDialog",
 ?? ???????? charToRaw(aTitle),
 ??? ?? ? ?? lOpenFile = aDefaultPathAndFile ,
 ??????? ??? as.integer(aNumOfFilterPatterns) ,
 ??????? ??? aFilterPatterns ,
 ??????? ??? charToRaw(aSingleFilterDescription) ,
 ??????? ??? as.integer(aAllowMultipleSelects) )

 ?? ?? if ( result$lOpenFile == "NULL" ) return()
 ?? ?? else return(result$lOpenFile)
 ??? }

 ??? # now, you can call the dialog
 ??? lFilename <- tinyfd_openFileDialog( "a title" , 
"/Users/bardos/Documents/" , 1 , c ("*.txt","*.jpg") , "some files" , 0 )


From kry|ov@r00t @end|ng |rom gm@||@com  Thu Sep 21 11:33:47 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Thu, 21 Sep 2023 12:33:47 +0300
Subject: [R-pkg-devel] tinyfiledialogs - The bindings are ready,
 but I need help to make of package of it
In-Reply-To: <e65f8a78-5bed-e9a1-ba14-cd9959dda17b@ysengrin.com>
References: <mailman.9577.0.1695200891.55128.r-package-devel@r-project.org>
 <e65f8a78-5bed-e9a1-ba14-cd9959dda17b@ysengrin.com>
Message-ID: <20230921123347.5c8401ca@Tarkus>

Dear Guillaume Vareille,

? Wed, 20 Sep 2023 12:30:53 +0200
tinyfiledialogs at ysengrin.com ?????:

> I've been pointed to the documentation link on how to write a package,
> but it would really help if someone who knows what to do could direct
> me.

There's potentially a lot to tell. Converting the entire Writing R
Extensions [*] into e-mails is a poor use of one's time. Do you have
more specific questions? If you don't know where to start, try
utils::package.skeleton or the pkgKitten package (which aims to pass R
CMD check right from the start). There's also books like R Packages by
Hadley Wickham and Jennifer Bryan, but they mention a lot of techniques
and third-party dependencies that you don't have to use.

>  ??? # first load the included library (it could easily be compiled
> on the target machine)
>  ??? dyn.load("tinyfiledialogsLinux64.so")

You will need to put your source files into the src/ subdirectory of
the package and arrange for them to get compiled (see WRE 1.1.5 and
1.2.1). It's best to write a special entry point in order to let R know
about the functions you intend to call (see WRE 5.4).

Does your code have third-party dependencies? If you'd like to put the
package on CRAN, you will need to bundle your own code with the package
(since it's probably not available yet in major GNU/Linux
distributions, macOS recipes and MXE) but set up a ./configure script
to locate the third-party dependencies while the package is being
installed: https://cran.r-project.org/web/packages/external_libs.html

>  ?? ?? result <- .C("tfd_openFileDialog",
>  ?? ???????? charToRaw(aTitle),

In R, strings have encodings. A string can be stored in UTF-8, Latin-1,
the native locale encoding (which may include anything from
Windows-936 to KOI8-R) or even as arbitrary bytes, which admittedly
makes it less of a string (see ?Encoding).

x1 <- `Encoding<-`('fran\xe7ais', 'latin1')
x2 <- `Encoding<-`('fran\xc3\xa7ais', 'UTF-8')
x1 == x2 # TRUE, they encode the same characters
identical(charToRaw(x1), charToRaw(x2)) # not even the same length

Which encoding does tfd_openFileDialog() use for the file names and
paths? Does it work with UCRT on Windows in UTF-8 locale mode? (Can you
return a filename that is not representable in the ANSI codepage?) You
will probably need to convert the strings into a certain encoding before
passing them to tfd_openFileDialog(...) (e.g. enc2utf8(.)).

>  ?? ?? if ( result$lOpenFile == "NULL" ) return()

What happens if I create a file named NULL on my system and try to open
it?

Good luck, and I hope that your effort results in a good R package!

-- 
Best regards,
Ivan

[*] https://cran.r-project.org/doc/manuals/R-exts.html


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu Sep 21 12:44:44 2023
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 21 Sep 2023 06:44:44 -0400
Subject: [R-pkg-devel] A simple question regarding examples
In-Reply-To: <BN7PR05MB446682F3EE8AA00D37021AFAEFF2A@BN7PR05MB4466.namprd05.prod.outlook.com>
References: <BN7PR05MB446682F3EE8AA00D37021AFAEFF2A@BN7PR05MB4466.namprd05.prod.outlook.com>
Message-ID: <f944d404-7331-4c35-9ef6-445b66be2f7d@gmail.com>

On 20/09/2023 8:03 p.m., Hanyu Song wrote:
> Hello,
> 
> I have a simple question about including examples. My code depends on a rarely used Python module, so I am using the @examplesIf tag per Hadley Wickham's advice as follows:
> 
> #' @examplesIf reticulate::py_module_available('ctef')
> #'  res <- my_func(input1, input2)
> 
> Unfortunately, my_func runs overtime during the CRAN check. To resolve this, do I simply use the less elegant approach as follows?
> 
> #' \dontrun{
> #' if (reticulate::py_module_available('ctef')) {
> #' res <- my_func(input1, input2)
> #' }
> 

The @examplesIf comments are directed at Roxygen; R checks will never 
look at them.  R will run tests based on what is in the my_func.Rd 
examples section.  I'd guess that's pretty similar to your second 
version (except for the \dontrun part, which you shouldn't use, as Ivan 
said).

Duncan Murdoch


From kry|ov@r00t @end|ng |rom gm@||@com  Thu Sep 21 15:26:38 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Thu, 21 Sep 2023 16:26:38 +0300
Subject: [R-pkg-devel] tinyfiledialogs - The bindings are ready,
 but I need help to make of package of it
In-Reply-To: <e860d8e7-e2d7-0679-c660-10e566de3d47@ysengrin.com>
References: <mailman.9577.0.1695200891.55128.r-package-devel@r-project.org>
 <e65f8a78-5bed-e9a1-ba14-cd9959dda17b@ysengrin.com>
 <20230921123347.5c8401ca@Tarkus>
 <e860d8e7-e2d7-0679-c660-10e566de3d47@ysengrin.com>
Message-ID: <20230921162638.7a914608@arachnoid>

? Thu, 21 Sep 2023 15:02:12 +0200
Guillaume Vareille <guillaume at ysengrin.com> ?????:

> There are no dependencies

I see now, you're using dialog-style programs on Unix-like operating
systems. That's clever.

Note that CRAN packages are not allowed to take over the standard input
and standard output, so you might have to #ifdef that out of the code
for the R package, or maybe use R functions for terminal output instead
of standard input/output.

> and everything is considered/treated as UTF-8.

Also very useful. Make sure to use enc2utf8 then.

> I don't know what UCRT is

UCRT stands for "universal C runtime", a new standard C library
implementation that makes it possible to use UTF-8 as the "ANSI"
encoding on Windows. Much less important you use the "W" (wchar_t) APIs
on Windows.

> I was hoping to find a tldr version of the "how to write an
> extension".

Start with utils::package.skeleton or pkgKitten and fill in the blanks
until it both works and passes R CMD check --as-cran. (Start with R CMD
check without --as-cran to have a less intimidating list of things to
fix.)

> What files are supposed to be in my package ? the C file
> or the compiled shared libraries ?

The C file goes into src/. Also add useDynLib(YOURPACKAGENAME) to the
NAMESPACE file to avoid the need for dyn.load(potentially unknown path
to the shared library) in your R function. For best results, declare
your entry points as described in WRE 5.4.

> What else ? a documentation file? is there a model to follow?

Yes, any R function you export will need to have a corresponding help
page in a man/*.Rd file. You can start with prompt() to create a
skeleton to fill. I think that both utils::package.skeleton and
pkgKitten will make you such a skeleton as part of the package if you
give them an R function to put there.

(Let's keep Cc: r-package-devel at r-project.org so that others on the
list may offer their advice too.)

-- 
Best regards,
Ivan


From kry|ov@r00t @end|ng |rom gm@||@com  Thu Sep 21 16:37:06 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Thu, 21 Sep 2023 17:37:06 +0300
Subject: [R-pkg-devel] safely allocate SEXP and handle failure
In-Reply-To: <CAOO9MKV73=kAf5EqaaGn0kHRmbWwonp=H9_hJ8iFbFnQ+k5cKg@mail.gmail.com>
References: <CAOO9MKVAhjSF8rQOpjjem+O+GdTBKZ6k_=ePQCr-F+q0tzdQoA@mail.gmail.com>
 <20230921114045.330591f9@Tarkus>
 <CAOO9MKV73=kAf5EqaaGn0kHRmbWwonp=H9_hJ8iFbFnQ+k5cKg@mail.gmail.com>
Message-ID: <20230921173706.6310d2e5@arachnoid>

? Thu, 21 Sep 2023 15:10:56 +0200
Jan Gorecki <j.gorecki at wit.edu.pl> ?????:

> Do you by any chance know any examples of using
> R_withCallingErrorHandler? Or could you modify your example to use
> this instead?

Calling handlers are different from exiting handlers established by
tryCatch. Instead of replacing the value of an expression that raised a
condition with the return value of the exiting handler, calling
handlers get an opportunity to clean up or invoke a so-called restart,
but when they return, the execution continues:

withCallingHandlers(stop("fatal"), error = function(cond) {
 writeLines("I'm a calling handler, this is my argument:")
 str(cond)
})
# I'm a calling handler, this is my argument:
# List of 2
#  $ message: chr "fatal"
#  $ call   : language withCallingHandlers(stop("fatal"), ...
#  - attr(*, "class")= chr [1:3] "simpleError" "error" "condition"
# Error in withCallingHandlers(stop("fatal"), error = function(cond) { :
#   fatal

Since setting up restarts will involve calling into R, a complete
solution will involve much more code than R_tryCatchError.

-- 
Best regards,
Ivan


From |r|end|y @end|ng |rom yorku@c@  Thu Sep 21 18:33:35 2023
From: |r|end|y @end|ng |rom yorku@c@ (Michael L Friendly)
Date: Thu, 21 Sep 2023 16:33:35 +0000
Subject: [R-pkg-devel] roxygen style documentation for data sets
Message-ID: <YT1PR01MB3146467327C21594C977E187ABF8A@YT1PR01MB3146.CANPRD01.PROD.OUTLOOK.COM>

I have many datasets in a some of my packages, and always used `utils::promptData()` to generate the skeleton of a man/data.Rd file.
Now that I've switched to roxygen style, I have found no simple equivalent. In fact, with RStudio tools for generating documentation
for functions, it is surprising that documenting data has been overlooked.

I solved this problem by simply editing `utils::promptData()` to replace .Rd style with equivalent roxygen tags.

The result in now in a gist, https://gist.github.com/friendly/14f3ee1464213bb0b9fbcb489468383b
I called this function `use_data_doc()`, because I thought it would be a welcome addition to the usethis package.

I hope that someone on this list can advise how to make such a function available to all R package developers.

-Michael

---
Michael Friendly     Email: friendly AT yorku DOT ca
Professor, Psychology Dept.
York University      Voice: 416 736-2100 x66249
4700 Keele Street    Web: http://www.datavis.ca<http://www.datavis.ca/> | @datavisFriendly
Toronto, ONT  M3J 1P3 CANADA


	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Thu Sep 21 19:37:13 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Thu, 21 Sep 2023 20:37:13 +0300
Subject: [R-pkg-devel] roxygen style documentation for data sets
In-Reply-To: <YT1PR01MB3146467327C21594C977E187ABF8A@YT1PR01MB3146.CANPRD01.PROD.OUTLOOK.COM>
References: <YT1PR01MB3146467327C21594C977E187ABF8A@YT1PR01MB3146.CANPRD01.PROD.OUTLOOK.COM>
Message-ID: <20230921203713.252d80c1@arachnoid>

? Thu, 21 Sep 2023 16:33:35 +0000
Michael L Friendly <friendly at yorku.ca> ?????:

> I called this function `use_data_doc()`, because I thought it would
> be a welcome addition to the usethis package.
> 
> I hope that someone on this list can advise how to make such a
> function available to all R package developers.

Perhaps a pull request to https://github.com/r-lib/usethis/pulls ?

Should this function be considered a work derived from R? If yes, then
(in my non-lawyer opinion) it retains its ownership by R Core and being
licensed under GPL-2, which may be a problem for MIT-licensed usethis.

-- 
Best regards,
Ivan


From |r|end|y @end|ng |rom yorku@c@  Thu Sep 21 20:45:34 2023
From: |r|end|y @end|ng |rom yorku@c@ (Michael L Friendly)
Date: Thu, 21 Sep 2023 18:45:34 +0000
Subject: [R-pkg-devel] roxygen style documentation for data sets
In-Reply-To: <20230921203713.252d80c1@arachnoid>
References: <YT1PR01MB3146467327C21594C977E187ABF8A@YT1PR01MB3146.CANPRD01.PROD.OUTLOOK.COM>
 <20230921203713.252d80c1@arachnoid>
Message-ID: <YT1PR01MB31464E71F1A5F0100E488DE1ABF8A@YT1PR01MB3146.CANPRD01.PROD.OUTLOOK.COM>

Yes, if usethis is the most useful place for this to be, I suppose I should first flag this as an issue, and then issue a PR for my code.

I don't understand the fine distinctions between GPL-2 and MIT licensed code.

Perhaps some other developers can chime in here.

-Michael

-----Original Message-----
From: Ivan Krylov <krylov.r00t at gmail.com> 
Sent: Thursday, September 21, 2023 1:37 PM
To: Michael L Friendly <friendly at yorku.ca>
Cc: r-package-devel at r-project.org
Subject: Re: [R-pkg-devel] roxygen style documentation for data sets

? Thu, 21 Sep 2023 16:33:35 +0000
Michael L Friendly <friendly at yorku.ca> ?????:

> I called this function `use_data_doc()`, because I thought it would be 
> a welcome addition to the usethis package.
> 
> I hope that someone on this list can advise how to make such a 
> function available to all R package developers.

Perhaps a pull request to https://github.com/r-lib/usethis/pulls ?

Should this function be considered a work derived from R? If yes, then (in my non-lawyer opinion) it retains its ownership by R Core and being licensed under GPL-2, which may be a problem for MIT-licensed usethis.

--
Best regards,
Ivan

From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Thu Sep 21 21:23:21 2023
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Thu, 21 Sep 2023 12:23:21 -0700
Subject: [R-pkg-devel] [Tagged] Re: roxygen style documentation for data
 sets
In-Reply-To: <YT1PR01MB31464E71F1A5F0100E488DE1ABF8A@YT1PR01MB3146.CANPRD01.PROD.OUTLOOK.COM>
References: <YT1PR01MB3146467327C21594C977E187ABF8A@YT1PR01MB3146.CANPRD01.PROD.OUTLOOK.COM>
 <20230921203713.252d80c1@arachnoid>
 <YT1PR01MB31464E71F1A5F0100E488DE1ABF8A@YT1PR01MB3146.CANPRD01.PROD.OUTLOOK.COM>
Message-ID: <8A79C381-7C94-4F33-8E8E-1824EA93E55C@dcn.davis.ca.us>

None of us here are lawyers, but a simple google search should take you to discussions such as [1]. There is a long history of debates about the upsides and downsides of restricting how people can use your source code.

My short take is that a GPL license prevents anyone from stuffing your code into a proprietary box and selling it without your consent... they have to share just as much as you did. MIT doesn't prevent this hiding, so people working for companies are less likely to have trouble getting approval to use your code... but you may not have any access to their fixes either. Just different definitions of "freedom" playing out their implications.

[1] https://en.m.wikipedia.org/wiki/MIT_License#:~:text=The%20GNU%20GPL%20is%20explicit,license%20does%20not%20discuss%20patents.

On September 21, 2023 11:45:34 AM PDT, Michael L Friendly <friendly at yorku.ca> wrote:
>Yes, if usethis is the most useful place for this to be, I suppose I should first flag this as an issue, and then issue a PR for my code.
>
>I don't understand the fine distinctions between GPL-2 and MIT licensed code.
>
>Perhaps some other developers can chime in here.
>
>-Michael
>
>-----Original Message-----
>From: Ivan Krylov <krylov.r00t at gmail.com> 
>Sent: Thursday, September 21, 2023 1:37 PM
>To: Michael L Friendly <friendly at yorku.ca>
>Cc: r-package-devel at r-project.org
>Subject: Re: [R-pkg-devel] roxygen style documentation for data sets
>
>? Thu, 21 Sep 2023 16:33:35 +0000
>Michael L Friendly <friendly at yorku.ca> ?????:
>
>> I called this function `use_data_doc()`, because I thought it would be 
>> a welcome addition to the usethis package.
>> 
>> I hope that someone on this list can advise how to make such a 
>> function available to all R package developers.
>
>Perhaps a pull request to https://github.com/r-lib/usethis/pulls ?
>
>Should this function be considered a work derived from R? If yes, then (in my non-lawyer opinion) it retains its ownership by R Core and being licensed under GPL-2, which may be a problem for MIT-licensed usethis.
>
>--
>Best regards,
>Ivan
>______________________________________________
>R-package-devel at r-project.org mailing list
>https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
Sent from my phone. Please excuse my brevity.


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu Sep 21 21:58:01 2023
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 21 Sep 2023 15:58:01 -0400
Subject: [R-pkg-devel] roxygen style documentation for data sets
In-Reply-To: <YT1PR01MB3146467327C21594C977E187ABF8A@YT1PR01MB3146.CANPRD01.PROD.OUTLOOK.COM>
References: <YT1PR01MB3146467327C21594C977E187ABF8A@YT1PR01MB3146.CANPRD01.PROD.OUTLOOK.COM>
Message-ID: <0a753a93-97e9-4d98-8092-2a1a87c80207@gmail.com>

Hi Michael.

I don't know if you're an RStudio user, but this seems ideal as the 
basis for an RStudio plug-in.  Just install it, then when you want to 
generate docs for some dataset defined in R code, move to the start of 
the definition and hit some hot key to insert the documentation skeleton 
ahead of the data definition.

Duncan Murdoch

On 21/09/2023 12:33 p.m., Michael L Friendly wrote:
> I have many datasets in a some of my packages, and always used `utils::promptData()` to generate the skeleton of a man/data.Rd file.
> Now that I've switched to roxygen style, I have found no simple equivalent. In fact, with RStudio tools for generating documentation
> for functions, it is surprising that documenting data has been overlooked.
> 
> I solved this problem by simply editing `utils::promptData()` to replace .Rd style with equivalent roxygen tags.
> 
> The result in now in a gist, https://gist.github.com/friendly/14f3ee1464213bb0b9fbcb489468383b
> I called this function `use_data_doc()`, because I thought it would be a welcome addition to the usethis package.
> 
> I hope that someone on this list can advise how to make such a function available to all R package developers.
> 
> -Michael
> 
> ---
> Michael Friendly     Email: friendly AT yorku DOT ca
> Professor, Psychology Dept.
> York University      Voice: 416 736-2100 x66249
> 4700 Keele Street    Web: http://www.datavis.ca<http://www.datavis.ca/> | @datavisFriendly
> Toronto, ONT  M3J 1P3 CANADA
> 
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From j|ox @end|ng |rom mcm@@ter@c@  Thu Sep 21 22:05:22 2023
From: j|ox @end|ng |rom mcm@@ter@c@ (John Fox)
Date: Thu, 21 Sep 2023 16:05:22 -0400
Subject: [R-pkg-devel] roxygen style documentation for data sets
In-Reply-To: <YT1PR01MB3146467327C21594C977E187ABF8A@YT1PR01MB3146.CANPRD01.PROD.OUTLOOK.COM>
References: <YT1PR01MB3146467327C21594C977E187ABF8A@YT1PR01MB3146.CANPRD01.PROD.OUTLOOK.COM>
Message-ID: <30c5c011-cd44-402f-b228-8b73de5986a1@mcmaster.ca>

Hi Michael,

I'm no license expert either, but I too believe that while a 
GPL-licensed package can incorporate MIT-licensed code, an MIT-licensed 
package can't incorporate GPL-licensed code.

One solution, I think, would be to put your use_data_doc() in a separate 
GPL-licensed package, which then could be specified as a dependency of 
usethis. Of course, the usethis developers would have to agree.

I hope this helps,
  John


On 2023-09-21 12:33 p.m., Michael L Friendly wrote:
> Caution: External email.
> 
> 
> I have many datasets in a some of my packages, and always used `utils::promptData()` to generate the skeleton of a man/data.Rd file.
> Now that I've switched to roxygen style, I have found no simple equivalent. In fact, with RStudio tools for generating documentation
> for functions, it is surprising that documenting data has been overlooked.
> 
> I solved this problem by simply editing `utils::promptData()` to replace .Rd style with equivalent roxygen tags.
> 
> The result in now in a gist, https://gist.github.com/friendly/14f3ee1464213bb0b9fbcb489468383b
> I called this function `use_data_doc()`, because I thought it would be a welcome addition to the usethis package.
> 
> I hope that someone on this list can advise how to make such a function available to all R package developers.
> 
> -Michael
> 
> ---
> Michael Friendly     Email: friendly AT yorku DOT ca
> Professor, Psychology Dept.
> York University      Voice: 416 736-2100 x66249
> 4700 Keele Street    Web: http://www.datavis.ca<http://www.datavis.ca/> | @datavisFriendly
> Toronto, ONT  M3J 1P3 CANADA
> 
> 
>          [[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From |r|end|y @end|ng |rom yorku@c@  Thu Sep 21 22:30:11 2023
From: |r|end|y @end|ng |rom yorku@c@ (Michael L Friendly)
Date: Thu, 21 Sep 2023 20:30:11 +0000
Subject: [R-pkg-devel] roxygen style documentation for data sets
In-Reply-To: <0a753a93-97e9-4d98-8092-2a1a87c80207@gmail.com>
References: <YT1PR01MB3146467327C21594C977E187ABF8A@YT1PR01MB3146.CANPRD01.PROD.OUTLOOK.COM>
 <0a753a93-97e9-4d98-8092-2a1a87c80207@gmail.com>
Message-ID: <YT1PR01MB31462CB5D1BD34F8A9CDC0E3ABF8A@YT1PR01MB3146.CANPRD01.PROD.OUTLOOK.COM>

I am an RStudio user, and I could see this as a plugin somewhere, but I don't want to create a package just for this.

I'd rather that my code could be adopted somewhere in the framework of devtools/usethis/ ... 

It's so obvious that this tool should be there somewhere, particularly since RStudio makes it hard to work with .Rd files, except those generated by devtools (which shouldn't be
edited). E.g., I have many legacy .Rd files for data. I can't select example code and click Run, as one can do with roxygen documentation in .R files.

-Michael

-----Original Message-----
From: Duncan Murdoch <murdoch.duncan at gmail.com> 
Sent: Thursday, September 21, 2023 3:58 PM
To: Michael L Friendly <friendly at yorku.ca>; r-package-devel at r-project.org
Subject: Re: [R-pkg-devel] roxygen style documentation for data sets

Hi Michael.

I don't know if you're an RStudio user, but this seems ideal as the basis for an RStudio plug-in.  Just install it, then when you want to generate docs for some dataset defined in R code, move to the start of the definition and hit some hot key to insert the documentation skeleton ahead of the data definition.

Duncan Murdoch

On 21/09/2023 12:33 p.m., Michael L Friendly wrote:
> I have many datasets in a some of my packages, and always used `utils::promptData()` to generate the skeleton of a man/data.Rd file.
> Now that I've switched to roxygen style, I have found no simple 
> equivalent. In fact, with RStudio tools for generating documentation for functions, it is surprising that documenting data has been overlooked.
> 
> I solved this problem by simply editing `utils::promptData()` to replace .Rd style with equivalent roxygen tags.
> 
> The result in now in a gist, 
> https://gist.github.com/friendly/14f3ee1464213bb0b9fbcb489468383b
> I called this function `use_data_doc()`, because I thought it would be a welcome addition to the usethis package.
> 
> I hope that someone on this list can advise how to make such a function available to all R package developers.
> 
> -Michael
> 
> ---
> Michael Friendly     Email: friendly AT yorku DOT ca
> Professor, Psychology Dept.
> York University      Voice: 416 736-2100 x66249
> 4700 Keele Street    Web: http://www.datavis.ca<http://www.datavis.ca/> | @datavisFriendly
> Toronto, ONT  M3J 1P3 CANADA
> 
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list 
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Thu Sep 21 22:46:14 2023
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Thu, 21 Sep 2023 13:46:14 -0700
Subject: [R-pkg-devel] roxygen style documentation for data sets
In-Reply-To: <YT1PR01MB31462CB5D1BD34F8A9CDC0E3ABF8A@YT1PR01MB3146.CANPRD01.PROD.OUTLOOK.COM>
References: <YT1PR01MB3146467327C21594C977E187ABF8A@YT1PR01MB3146.CANPRD01.PROD.OUTLOOK.COM>
 <0a753a93-97e9-4d98-8092-2a1a87c80207@gmail.com>
 <YT1PR01MB31462CB5D1BD34F8A9CDC0E3ABF8A@YT1PR01MB3146.CANPRD01.PROD.OUTLOOK.COM>
Message-ID: <C44D9E2F-B504-4F57-A3D1-2D67C80C3A6B@dcn.davis.ca.us>

I thought roxygen supported documenting NULL constants for data.

I do think roxygen ought to be able to co-exist with Rd files... but the claim that documenting data requires Rd files smells fishy to me.

On September 21, 2023 1:30:11 PM PDT, Michael L Friendly <friendly at yorku.ca> wrote:
>I am an RStudio user, and I could see this as a plugin somewhere, but I don't want to create a package just for this.
>
>I'd rather that my code could be adopted somewhere in the framework of devtools/usethis/ ... 
>
>It's so obvious that this tool should be there somewhere, particularly since RStudio makes it hard to work with .Rd files, except those generated by devtools (which shouldn't be
>edited). E.g., I have many legacy .Rd files for data. I can't select example code and click Run, as one can do with roxygen documentation in .R files.
>
>-Michael
>
>-----Original Message-----
>From: Duncan Murdoch <murdoch.duncan at gmail.com> 
>Sent: Thursday, September 21, 2023 3:58 PM
>To: Michael L Friendly <friendly at yorku.ca>; r-package-devel at r-project.org
>Subject: Re: [R-pkg-devel] roxygen style documentation for data sets
>
>Hi Michael.
>
>I don't know if you're an RStudio user, but this seems ideal as the basis for an RStudio plug-in.  Just install it, then when you want to generate docs for some dataset defined in R code, move to the start of the definition and hit some hot key to insert the documentation skeleton ahead of the data definition.
>
>Duncan Murdoch
>
>On 21/09/2023 12:33 p.m., Michael L Friendly wrote:
>> I have many datasets in a some of my packages, and always used `utils::promptData()` to generate the skeleton of a man/data.Rd file.
>> Now that I've switched to roxygen style, I have found no simple 
>> equivalent. In fact, with RStudio tools for generating documentation for functions, it is surprising that documenting data has been overlooked.
>> 
>> I solved this problem by simply editing `utils::promptData()` to replace .Rd style with equivalent roxygen tags.
>> 
>> The result in now in a gist, 
>> https://gist.github.com/friendly/14f3ee1464213bb0b9fbcb489468383b
>> I called this function `use_data_doc()`, because I thought it would be a welcome addition to the usethis package.
>> 
>> I hope that someone on this list can advise how to make such a function available to all R package developers.
>> 
>> -Michael
>> 
>> ---
>> Michael Friendly     Email: friendly AT yorku DOT ca
>> Professor, Psychology Dept.
>> York University      Voice: 416 736-2100 x66249
>> 4700 Keele Street    Web: http://www.datavis.ca<http://www.datavis.ca/> | @datavisFriendly
>> Toronto, ONT  M3J 1P3 CANADA
>> 
>> 
>> 	[[alternative HTML version deleted]]
>> 
>> ______________________________________________
>> R-package-devel at r-project.org mailing list 
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>______________________________________________
>R-package-devel at r-project.org mailing list
>https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
Sent from my phone. Please excuse my brevity.


From murdoch@dunc@n @end|ng |rom gm@||@com  Thu Sep 21 22:50:24 2023
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 21 Sep 2023 16:50:24 -0400
Subject: [R-pkg-devel] roxygen style documentation for data sets
In-Reply-To: <YT1PR01MB31462CB5D1BD34F8A9CDC0E3ABF8A@YT1PR01MB3146.CANPRD01.PROD.OUTLOOK.COM>
References: <YT1PR01MB3146467327C21594C977E187ABF8A@YT1PR01MB3146.CANPRD01.PROD.OUTLOOK.COM>
 <0a753a93-97e9-4d98-8092-2a1a87c80207@gmail.com>
 <YT1PR01MB31462CB5D1BD34F8A9CDC0E3ABF8A@YT1PR01MB3146.CANPRD01.PROD.OUTLOOK.COM>
Message-ID: <ff4160ea-2f8f-4300-a95f-20399a2d5147@gmail.com>

I just found a couple of packages with add-ins that do something like 
this:  sinew (on CRAN) and docthis on Github at

  https://github.com/mdlincoln/docthis

I think neither of them is quite as smooth as the `Code | Insert Roxygen 
Skeleton` menu item in RStudio, but both do handle dataframes, and it 
doesn't.

Duncan Murdoch

On 21/09/2023 4:30 p.m., Michael L Friendly wrote:
> I am an RStudio user, and I could see this as a plugin somewhere, but I don't want to create a package just for this.
> 
> I'd rather that my code could be adopted somewhere in the framework of devtools/usethis/ ...
> 
> It's so obvious that this tool should be there somewhere, particularly since RStudio makes it hard to work with .Rd files, except those generated by devtools (which shouldn't be
> edited). E.g., I have many legacy .Rd files for data. I can't select example code and click Run, as one can do with roxygen documentation in .R files.
> 
> -Michael
> 
> -----Original Message-----
> From: Duncan Murdoch <murdoch.duncan at gmail.com>
> Sent: Thursday, September 21, 2023 3:58 PM
> To: Michael L Friendly <friendly at yorku.ca>; r-package-devel at r-project.org
> Subject: Re: [R-pkg-devel] roxygen style documentation for data sets
> 
> Hi Michael.
> 
> I don't know if you're an RStudio user, but this seems ideal as the basis for an RStudio plug-in.  Just install it, then when you want to generate docs for some dataset defined in R code, move to the start of the definition and hit some hot key to insert the documentation skeleton ahead of the data definition.
> 
> Duncan Murdoch
> 
> On 21/09/2023 12:33 p.m., Michael L Friendly wrote:
>> I have many datasets in a some of my packages, and always used `utils::promptData()` to generate the skeleton of a man/data.Rd file.
>> Now that I've switched to roxygen style, I have found no simple
>> equivalent. In fact, with RStudio tools for generating documentation for functions, it is surprising that documenting data has been overlooked.
>>
>> I solved this problem by simply editing `utils::promptData()` to replace .Rd style with equivalent roxygen tags.
>>
>> The result in now in a gist,
>> https://gist.github.com/friendly/14f3ee1464213bb0b9fbcb489468383b
>> I called this function `use_data_doc()`, because I thought it would be a welcome addition to the usethis package.
>>
>> I hope that someone on this list can advise how to make such a function available to all R package developers.
>>
>> -Michael
>>
>> ---
>> Michael Friendly     Email: friendly AT yorku DOT ca
>> Professor, Psychology Dept.
>> York University      Voice: 416 736-2100 x66249
>> 4700 Keele Street    Web: http://www.datavis.ca<http://www.datavis.ca/> | @datavisFriendly
>> Toronto, ONT  M3J 1P3 CANADA
>>
>>
>> 	[[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


From h@nyu@@ong @end|ng |rom duke@edu  Fri Sep 22 00:11:37 2023
From: h@nyu@@ong @end|ng |rom duke@edu (Hanyu Song)
Date: Thu, 21 Sep 2023 22:11:37 +0000
Subject: [R-pkg-devel] A simple question regarding examples
In-Reply-To: <f944d404-7331-4c35-9ef6-445b66be2f7d@gmail.com>
References: <BN7PR05MB446682F3EE8AA00D37021AFAEFF2A@BN7PR05MB4466.namprd05.prod.outlook.com>
 <f944d404-7331-4c35-9ef6-445b66be2f7d@gmail.com>
Message-ID: <BN7PR05MB446677F5FFC452D80807268BEFF8A@BN7PR05MB4466.namprd05.prod.outlook.com>

Hello Duncan and Ivan,

Thank you for your prompt response! Perhaps I should add that:

I don't think the Python module "ctef" exists on CRAN. Therefore, I am very surprised that the example below runs overtime, since all it has to do is to run reticulate::py_module_available('ctef'). If even this part is running overtime, I am not quite sure how to deal with it.

#' if (reticulate::py_module_available('ctef')) {
#' res <- my_func(input1, input2)
#' }

Looking forward to your reply.

Best,
Hanyu
________________________________
From: Duncan Murdoch <murdoch.duncan at gmail.com>
Sent: Thursday, September 21, 2023 6:44 AM
To: Hanyu Song <hanyu.song at duke.edu>; r-package-devel at r-project.org <r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] A simple question regarding examples

On 20/09/2023 8:03 p.m., Hanyu Song wrote:
> Hello,
>
> I have a simple question about including examples. My code depends on a rarely used Python module, so I am using the @examplesIf tag per Hadley Wickham's advice as follows:
>
> #' @examplesIf reticulate::py_module_available('ctef')
> #'  res <- my_func(input1, input2)
>
> Unfortunately, my_func runs overtime during the CRAN check. To resolve this, do I simply use the less elegant approach as follows?
>
> #' \dontrun{
> #' if (reticulate::py_module_available('ctef')) {
> #' res <- my_func(input1, input2)
> #' }
>

The @examplesIf comments are directed at Roxygen; R checks will never
look at them.  R will run tests based on what is in the my_func.Rd
examples section.  I'd guess that's pretty similar to your second
version (except for the \dontrun part, which you shouldn't use, as Ivan
said).

Duncan Murdoch

	[[alternative HTML version deleted]]


From ti@yiiiedi@iogs m@iii@g oii yse@gri@@com  Fri Sep 22 07:33:22 2023
From: ti@yiiiedi@iogs m@iii@g oii yse@gri@@com (ti@yiiiedi@iogs m@iii@g oii yse@gri@@com)
Date: Fri, 22 Sep 2023 07:33:22 +0200
Subject: [R-pkg-devel] tinyfiledialogs - The bindings are ready,
 but I need help to make of package of it
In-Reply-To: <20230921123347.5c8401ca@Tarkus>
References: <mailman.9577.0.1695200891.55128.r-package-devel@r-project.org>
 <e65f8a78-5bed-e9a1-ba14-cd9959dda17b@ysengrin.com>
 <20230921123347.5c8401ca@Tarkus>
Message-ID: <7d5ada13-9af7-f574-15ed-1ca8a7547f38@ysengrin.com>

Hi,

There are no dependencies and everything is considered/treated as UTF-8.
On windows, I internally do all the conversions between UTF-8 and UTF-16.
I also offer functions to convert between UTF-8 , UTF-16 and MBCS.
I don't know what UCRT is, but tinyfiledialogs is compatible with all 
versions of windows from XP to 11,
all the versions of mac since osx 10.2 and all the unix versions I have 
ever came accross.


I was hoping to find a tldr version of the "how to write an extension".
The source code is just one C file (+ header) and one R file for the 
interface.
What files are supposed to be in my package ? the C file or the compiled 
shared libraries ?
What else ? a documentation file ? is there a model to follow ?

thanks for your help

guillaume



On 9/21/23 11:33, Ivan Krylov wrote:
> Dear Guillaume Vareille,
>
> ? Wed, 20 Sep 2023 12:30:53 +0200
> tinyfiledialogs at ysengrin.com  ?????:
>
>> I've been pointed to the documentation link on how to write a package,
>> but it would really help if someone who knows what to do could direct
>> me.
> There's potentially a lot to tell. Converting the entire Writing R
> Extensions [*] into e-mails is a poor use of one's time. Do you have
> more specific questions? If you don't know where to start, try
> utils::package.skeleton or the pkgKitten package (which aims to pass R
> CMD check right from the start). There's also books like R Packages by
> Hadley Wickham and Jennifer Bryan, but they mention a lot of techniques
> and third-party dependencies that you don't have to use.
>
>>   ??? # first load the included library (it could easily be compiled
>> on the target machine)
>>   ??? dyn.load("tinyfiledialogsLinux64.so")
> You will need to put your source files into the src/ subdirectory of
> the package and arrange for them to get compiled (see WRE 1.1.5 and
> 1.2.1). It's best to write a special entry point in order to let R know
> about the functions you intend to call (see WRE 5.4).
>
> Does your code have third-party dependencies? If you'd like to put the
> package on CRAN, you will need to bundle your own code with the package
> (since it's probably not available yet in major GNU/Linux
> distributions, macOS recipes and MXE) but set up a ./configure script
> to locate the third-party dependencies while the package is being
> installed:https://cran.r-project.org/web/packages/external_libs.html
>
>>   ?? ?? result <- .C("tfd_openFileDialog",
>>   ?? ???????? charToRaw(aTitle),
> In R, strings have encodings. A string can be stored in UTF-8, Latin-1,
> the native locale encoding (which may include anything from
> Windows-936 to KOI8-R) or even as arbitrary bytes, which admittedly
> makes it less of a string (see ?Encoding).
>
> x1 <- `Encoding<-`('fran\xe7ais', 'latin1')
> x2 <- `Encoding<-`('fran\xc3\xa7ais', 'UTF-8')
> x1 == x2 # TRUE, they encode the same characters
> identical(charToRaw(x1), charToRaw(x2)) # not even the same length
>
> Which encoding does tfd_openFileDialog() use for the file names and
> paths? Does it work with UCRT on Windows in UTF-8 locale mode? (Can you
> return a filename that is not representable in the ANSI codepage?) You
> will probably need to convert the strings into a certain encoding before
> passing them to tfd_openFileDialog(...) (e.g. enc2utf8(.)).
>
>>   ?? ?? if ( result$lOpenFile == "NULL" ) return()
> What happens if I create a file named NULL on my system and try to open
> it?
>
> Good luck, and I hope that your effort results in a good R package!
>

	[[alternative HTML version deleted]]


From br@d|eyjeck @end|ng |rom gm@||@com  Fri Sep 22 10:06:38 2023
From: br@d|eyjeck @end|ng |rom gm@||@com (Brad Eck)
Date: Fri, 22 Sep 2023 09:06:38 +0100
Subject: [R-pkg-devel] tinyfiledialogs - The bindings are ready,
 but I need help to make of package of it
In-Reply-To: <7d5ada13-9af7-f574-15ed-1ca8a7547f38@ysengrin.com>
References: <mailman.9577.0.1695200891.55128.r-package-devel@r-project.org>
 <e65f8a78-5bed-e9a1-ba14-cd9959dda17b@ysengrin.com>
 <20230921123347.5c8401ca@Tarkus>
 <7d5ada13-9af7-f574-15ed-1ca8a7547f38@ysengrin.com>
Message-ID: <CALECgPZ3m9KxL8UfhWEy_BKBPCiQ=u3+CRH9nO25u5+dSgLMcQ@mail.gmail.com>

Dear Guillaume -

Here is a minimal example of an R package that uses C source:
https://github.com/bradleyjeck/fancyRpkg

As the timestamps show, I made this a few years ago, so some things might
not conform to the current version of Writing R Extensions.  But it should
get you started.

The motivation I had was to provide an R package that binds to a simulation
engine written in C.
That package is on CRAN and could be used as a more in depth example:
https://cran.r-project.org/package=epanet2toolkit

Hope this helps,

Brad



On Fri, Sep 22, 2023 at 6:33?AM <tinyfiledialogs at ysengrin.com> wrote:

> Hi,
>
> There are no dependencies and everything is considered/treated as UTF-8.
> On windows, I internally do all the conversions between UTF-8 and UTF-16.
> I also offer functions to convert between UTF-8 , UTF-16 and MBCS.
> I don't know what UCRT is, but tinyfiledialogs is compatible with all
> versions of windows from XP to 11,
> all the versions of mac since osx 10.2 and all the unix versions I have
> ever came accross.
>
>
> I was hoping to find a tldr version of the "how to write an extension".
> The source code is just one C file (+ header) and one R file for the
> interface.
> What files are supposed to be in my package ? the C file or the compiled
> shared libraries ?
> What else ? a documentation file ? is there a model to follow ?
>
> thanks for your help
>
> guillaume
>
>
>
> On 9/21/23 11:33, Ivan Krylov wrote:
> > Dear Guillaume Vareille,
> >
> > ? Wed, 20 Sep 2023 12:30:53 +0200
> > tinyfiledialogs at ysengrin.com  ?????:
> >
> >> I've been pointed to the documentation link on how to write a package,
> >> but it would really help if someone who knows what to do could direct
> >> me.
> > There's potentially a lot to tell. Converting the entire Writing R
> > Extensions [*] into e-mails is a poor use of one's time. Do you have
> > more specific questions? If you don't know where to start, try
> > utils::package.skeleton or the pkgKitten package (which aims to pass R
> > CMD check right from the start). There's also books like R Packages by
> > Hadley Wickham and Jennifer Bryan, but they mention a lot of techniques
> > and third-party dependencies that you don't have to use.
> >
> >>       # first load the included library (it could easily be compiled
> >> on the target machine)
> >>       dyn.load("tinyfiledialogsLinux64.so")
> > You will need to put your source files into the src/ subdirectory of
> > the package and arrange for them to get compiled (see WRE 1.1.5 and
> > 1.2.1). It's best to write a special entry point in order to let R know
> > about the functions you intend to call (see WRE 5.4).
> >
> > Does your code have third-party dependencies? If you'd like to put the
> > package on CRAN, you will need to bundle your own code with the package
> > (since it's probably not available yet in major GNU/Linux
> > distributions, macOS recipes and MXE) but set up a ./configure script
> > to locate the third-party dependencies while the package is being
> > installed:https://cran.r-project.org/web/packages/external_libs.html
> >
> >>         result <- .C("tfd_openFileDialog",
> >>               charToRaw(aTitle),
> > In R, strings have encodings. A string can be stored in UTF-8, Latin-1,
> > the native locale encoding (which may include anything from
> > Windows-936 to KOI8-R) or even as arbitrary bytes, which admittedly
> > makes it less of a string (see ?Encoding).
> >
> > x1 <- `Encoding<-`('fran\xe7ais', 'latin1')
> > x2 <- `Encoding<-`('fran\xc3\xa7ais', 'UTF-8')
> > x1 == x2 # TRUE, they encode the same characters
> > identical(charToRaw(x1), charToRaw(x2)) # not even the same length
> >
> > Which encoding does tfd_openFileDialog() use for the file names and
> > paths? Does it work with UCRT on Windows in UTF-8 locale mode? (Can you
> > return a filename that is not representable in the ANSI codepage?) You
> > will probably need to convert the strings into a certain encoding before
> > passing them to tfd_openFileDialog(...) (e.g. enc2utf8(.)).
> >
> >>         if ( result$lOpenFile == "NULL" ) return()
> > What happens if I create a file named NULL on my system and try to open
> > it?
> >
> > Good luck, and I hope that your effort results in a good R package!
> >
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From ti@yiiiedi@iogs m@iii@g oii yse@gri@@com  Fri Sep 22 10:15:02 2023
From: ti@yiiiedi@iogs m@iii@g oii yse@gri@@com (ti@yiiiedi@iogs m@iii@g oii yse@gri@@com)
Date: Fri, 22 Sep 2023 10:15:02 +0200
Subject: [R-pkg-devel] R interface to tinyfiledialog
In-Reply-To: <c3e5f2fe3999ed39beb5ec3a3e8d2bba@waternumbers.co.uk>
References: <c3e5f2fe3999ed39beb5ec3a3e8d2bba@waternumbers.co.uk>
Message-ID: <134a31fc-3490-01b9-08de-9d614ae9fa11@ysengrin.com>

I did my bindings using the easy .C interface
did you use the morecomplete .CALL ?

On 9/22/23 00:08, Paul Smith wrote:
> Hi,
>
> Following your email to the r-package-dev list I tidied up some 
> previous work I did with an R wrapper for the tinyfiledialog C code 
> into a package which can be found here
>
> https://github.com/waternumbers/tinyfiledialogR
>
> It is largely untested (except on my linux machine - KDE, openSUSE 
> tumbleweed) and not ready for CRAN but shows one way of interfacing to 
> the code.
>
> Feel free to fork or submit pull requests as you see fit.
>
> cheers
>
> Paul
>

	[[alternative HTML version deleted]]


From p@u| @end|ng |rom w@ternumber@@co@uk  Fri Sep 22 10:55:42 2023
From: p@u| @end|ng |rom w@ternumber@@co@uk (Paul Smith)
Date: Fri, 22 Sep 2023 09:55:42 +0100
Subject: [R-pkg-devel] tinyfiledialogs - The bindings are ready,
 but I need help to make of package of it
Message-ID: <1a4913a7ec5ca5cbbf182d459dd8d7fa@waternumbers.co.uk>

Hi Guillaume

As Ivan says there is a fair bit to packaging but not to much when you 
get used to it.

Since your email I've put a mostly untested package wrapping 
tingfiledialogs via Rcpp on github

https://github.com/waternumbers/tinyfiledialogR

It is far from fully tested but might help.

cheers

Paul

-- 
The information in this message and any attachments is l...{{dropped:9}}


From A@J@God|rey @end|ng |rom m@@@ey@@c@nz  Sat Sep 23 02:35:42 2023
From: A@J@God|rey @end|ng |rom m@@@ey@@c@nz (Jonathan Godfrey)
Date: Sat, 23 Sep 2023 00:35:42 +0000
Subject: [R-pkg-devel] .OnLoad v .OnAttach
Message-ID: <MEAPR01MB38290F58B66382B9A907CB4093FEA@MEAPR01MB3829.ausprd01.prod.outlook.com>

Hello all,

An issue has been raised for my BrailleR package.   https://github.com/ajrgodfrey/BrailleR/issues/97#issuecomment-1732136521

I do make use of an .OnLoad() function for various tasks, including creation of a folder to put stuff in. The user gets to choose if this is temporary or fixed if the session is interactive. (all in zzz.R

What risks do I face if any of this .OnLoad() are moved to .OnAttach()?

Thanks,
Jonathan




	[[alternative HTML version deleted]]


From ti@yiiiedi@iogs m@iii@g oii yse@gri@@com  Sat Sep 23 09:02:12 2023
From: ti@yiiiedi@iogs m@iii@g oii yse@gri@@com (ti@yiiiedi@iogs m@iii@g oii yse@gri@@com)
Date: Sat, 23 Sep 2023 09:02:12 +0200
Subject: [R-pkg-devel] tinyfiledialogs - The bindings are ready,
 but I need help to make of package of it
In-Reply-To: <1a4913a7ec5ca5cbbf182d459dd8d7fa@waternumbers.co.uk>
References: <1a4913a7ec5ca5cbbf182d459dd8d7fa@waternumbers.co.uk>
Message-ID: <5c69787f-0b7d-fb2f-0814-cdb03fb1d6fb@ysengrin.com>

Thanks to everybody for the help and input.
I happens that Paul was already working on preparing a tinyfiledialogs 
package for R !
As he seems to know what is doing much more than I do,
I will let him go ahead with the .Call version he is preparing and will 
provide assistance when needed.

thanks again.

guillaume

On 9/22/23 10:55, Paul Smith wrote:
> Hi Guillaume
>
> As Ivan says there is a fair bit to packaging but not to much when you 
> get used to it.
>
> Since your email I've put a mostly untested package wrapping 
> tingfiledialogs via Rcpp on github
>
> https://github.com/waternumbers/tinyfiledialogR
>
> It is far from fully tested but might help.
>
> cheers
>
> Paul
>

	[[alternative HTML version deleted]]


From r@||@@tubner @end|ng |rom gm@||@com  Sat Sep 23 10:42:25 2023
From: r@||@@tubner @end|ng |rom gm@||@com (Ralf Stubner)
Date: Sat, 23 Sep 2023 08:42:25 +0000
Subject: [R-pkg-devel] User defined RNG and code registration.
Message-ID: <CAFQwRQyN1rGYCUR5wf96dfaomtCdQ8SOjBLkxZ6GCKkUrLo8NA@mail.gmail.com>

Hi everybody,

Section 5.4 of WRE suggests to use `R_useDynamicSymbols(dll, FALSE);`
when registering C/C++ routines in R packages, and Rcpp does so
automatically. ?Random.user describes a way to hook a user- defined
RNG into R. However, it looks like these two things are not
compatible, i.e. `user_unif_rand` et al. are not found, if dynamic
symbols are not allowed. Or can one register these routines somehow
even though they are not following one of the standard calling
conventions?

Thanks
Ralf


From murdoch@dunc@n @end|ng |rom gm@||@com  Sat Sep 23 11:50:39 2023
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sat, 23 Sep 2023 05:50:39 -0400
Subject: [R-pkg-devel] .OnLoad v .OnAttach
In-Reply-To: <MEAPR01MB38290F58B66382B9A907CB4093FEA@MEAPR01MB3829.ausprd01.prod.outlook.com>
References: <MEAPR01MB38290F58B66382B9A907CB4093FEA@MEAPR01MB3829.ausprd01.prod.outlook.com>
Message-ID: <72daf1d4-857b-4102-ae95-63640dc28073@gmail.com>

On 22/09/2023 8:35 p.m., Jonathan Godfrey wrote:
> Hello all,
> 
> An issue has been raised for my BrailleR package.   https://github.com/ajrgodfrey/BrailleR/issues/97#issuecomment-1732136521
> 
> I do make use of an .OnLoad() function for various tasks, including creation of a folder to put stuff in. The user gets to choose if this is temporary or fixed if the session is interactive. (all in zzz.R
> 
> What risks do I face if any of this .OnLoad() are moved to .OnAttach()?

If you move code from .onLoad() to .onAttach(), it won't be executed if 
the user never calls library(BrailleR) or require(BrailleR).  (This is a 
little simplified; there are other ways to attach a package, but they 
are rarely used.  More details on loading vs attaching below.)

If some setup is required by functions in your package even if they are 
called from other packages, it belongs in .onLoad(). A less convenient 
approach is for those functions to check whether the setup has happened 
every time you call them, and execute it if not.

Here are the details of the differences:

Loading makes the exported functions in the package available to other 
packages that import them, or call them using BrailleR::fn syntax.  The 
latter is also possible for users, and also triggers loading.  Once a 
package is loaded it normally stays loaded for the whole session, so 
.onLoad() will only be called once.

Attaching puts your package on the search list so that exported 
functions are available to the user without the prefix.  It will always 
be preceded by loading.  A user triggers attaching by making calls to 
library() or require().

If another package "Depends" on BrailleR, then loading that package will 
cause BrailleR to be attached.  The guidelines recommend against this, 
so most packages will use "Imports" instead.  That triggers loading but 
not attaching.

Duncan Murdoch


From murdoch@dunc@n @end|ng |rom gm@||@com  Sat Sep 23 12:00:56 2023
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sat, 23 Sep 2023 06:00:56 -0400
Subject: [R-pkg-devel] User defined RNG and code registration.
In-Reply-To: <CAFQwRQyN1rGYCUR5wf96dfaomtCdQ8SOjBLkxZ6GCKkUrLo8NA@mail.gmail.com>
References: <CAFQwRQyN1rGYCUR5wf96dfaomtCdQ8SOjBLkxZ6GCKkUrLo8NA@mail.gmail.com>
Message-ID: <421be7b3-227e-4582-8747-cbf2566ff62f@gmail.com>

On 23/09/2023 4:42 a.m., Ralf Stubner wrote:
> Hi everybody,
> 
> Section 5.4 of WRE suggests to use `R_useDynamicSymbols(dll, FALSE);`
> when registering C/C++ routines in R packages, and Rcpp does so
> automatically. ?Random.user describes a way to hook a user- defined
> RNG into R. However, it looks like these two things are not
> compatible, i.e. `user_unif_rand` et al. are not found, if dynamic
> symbols are not allowed. Or can one register these routines somehow
> even though they are not following one of the standard calling
> conventions?

I don't know the answer here, but section 6.16 of WRE suggests that you 
could explicitly make your functions visible even if they default to 
invisible.

Duncan Murdoch


From kry|ov@r00t @end|ng |rom gm@||@com  Sat Sep 23 21:30:31 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Sat, 23 Sep 2023 22:30:31 +0300
Subject: [R-pkg-devel] User defined RNG and code registration.
In-Reply-To: <CAFQwRQyN1rGYCUR5wf96dfaomtCdQ8SOjBLkxZ6GCKkUrLo8NA@mail.gmail.com>
References: <CAFQwRQyN1rGYCUR5wf96dfaomtCdQ8SOjBLkxZ6GCKkUrLo8NA@mail.gmail.com>
Message-ID: <20230923223031.55e249ba@parabola>

? Sat, 23 Sep 2023 08:42:25 +0000
Ralf Stubner <ralf.stubner at gmail.com> ?????:

> ?Random.user describes a way to hook a user- defined
> RNG into R. However, it looks like these two things are not
> compatible, i.e. `user_unif_rand` et al. are not found, if dynamic
> symbols are not allowed.

You're right! Looking at the code, if R_useDynamicSymbols(dll, FALSE)
has been called for a DLL, the branch that calls dlsym() or
GetProcAddress() to find symbols from that library by their shared
object symbol names gets completely disabled; only the registered
function names known to R matter at this point.

> Or can one register these routines somehow even though they are not
> following one of the standard calling conventions?

It sounds unsatisfying, but if you register your user_unif_rand
function with the right name and any of the ABIs supported by R, it
sounds like it should work as long as you never call it using the
.Call/.C/.Fortran ABI it's registered for.

-- 
Best regards,
Ivan


From kry|ov@r00t @end|ng |rom gm@||@com  Sat Sep 23 21:46:34 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Sat, 23 Sep 2023 22:46:34 +0300
Subject: [R-pkg-devel] A simple question regarding examples
In-Reply-To: <BN7PR05MB446677F5FFC452D80807268BEFF8A@BN7PR05MB4466.namprd05.prod.outlook.com>
References: <BN7PR05MB446682F3EE8AA00D37021AFAEFF2A@BN7PR05MB4466.namprd05.prod.outlook.com>
 <f944d404-7331-4c35-9ef6-445b66be2f7d@gmail.com>
 <BN7PR05MB446677F5FFC452D80807268BEFF8A@BN7PR05MB4466.namprd05.prod.outlook.com>
Message-ID: <20230923224634.6b06a8fc@parabola>

? Thu, 21 Sep 2023 22:11:37 +0000
Hanyu Song <hanyu.song at duke.edu> ?????:

> Therefore, I am very surprised that the example below runs overtime,
> since all it has to do is to run
> reticulate::py_module_available('ctef'). If even this part is running
> overtime, I am not quite sure how to deal with it.

Can you show the precise message given to you by the check?

Are you able to reproduce the problem if you run R CMD check (for
example) in a virtual machine without a working Python installation?

It would explain the situation if the process was stuck asking the user
for (e.g.) permission to install miniconda, but these prompts are all
guarded by tests for interactive() and therefore shouldn't be happening.

-- 
Best regards,
Ivan


From r@||@@tubner @end|ng |rom gm@||@com  Sat Sep 23 23:35:48 2023
From: r@||@@tubner @end|ng |rom gm@||@com (Ralf Stubner)
Date: Sat, 23 Sep 2023 21:35:48 +0000
Subject: [R-pkg-devel] User defined RNG and code registration.
In-Reply-To: <421be7b3-227e-4582-8747-cbf2566ff62f@gmail.com>
References: <CAFQwRQyN1rGYCUR5wf96dfaomtCdQ8SOjBLkxZ6GCKkUrLo8NA@mail.gmail.com>
 <421be7b3-227e-4582-8747-cbf2566ff62f@gmail.com>
Message-ID: <CAFQwRQxKKec4o5B8fO-LPZQXD_QXJNbhSyNbOXmQduMoVDErTg@mail.gmail.com>

On Sat, Sep 23, 2023 at 10:00?AM Duncan Murdoch
<murdoch.duncan at gmail.com> wrote:

> I don't know the answer here, but section 6.16 of WRE suggests that you
> could explicitly make your functions visible even if they default to
> invisible.

Thanks Duncan. Unfortunately at least in my tests the visibility
settings did not alter whether R could find these routines.

Ralf


From r@||@@tubner @end|ng |rom gm@||@com  Sat Sep 23 23:37:33 2023
From: r@||@@tubner @end|ng |rom gm@||@com (Ralf Stubner)
Date: Sat, 23 Sep 2023 21:37:33 +0000
Subject: [R-pkg-devel] User defined RNG and code registration.
In-Reply-To: <20230923223031.55e249ba@parabola>
References: <CAFQwRQyN1rGYCUR5wf96dfaomtCdQ8SOjBLkxZ6GCKkUrLo8NA@mail.gmail.com>
 <20230923223031.55e249ba@parabola>
Message-ID: <CAFQwRQwmDDimWhhmceDtTJY=5ojp-0zTmCJEFmCqdTAYJPPsGQ@mail.gmail.com>

On Sat, Sep 23, 2023 at 7:30?PM Ivan Krylov <krylov.r00t at gmail.com> wrote:
> You're right! Looking at the code, if R_useDynamicSymbols(dll, FALSE)
> has been called for a DLL, the branch that calls dlsym() or
> GetProcAddress() to find symbols from that library by their shared
> object symbol names gets completely disabled; only the registered
> function names known to R matter at this point.

Thanks Ivan for the investigations! That explains my experiences.

> It sounds unsatisfying, but if you register your user_unif_rand
> function with the right name and any of the ABIs supported by R, it
> sounds like it should work as long as you never call it using the
> .Call/.C/.Fortran ABI it's registered for.

That is indeed unsatisfying, but looks like the best workaround for now.

Ralf


From j@goreck| @end|ng |rom w|t@edu@p|  Sun Sep 24 10:38:41 2023
From: j@goreck| @end|ng |rom w|t@edu@p| (Jan Gorecki)
Date: Sun, 24 Sep 2023 10:38:41 +0200
Subject: [R-pkg-devel] R_orderVector1 - algo: radix, shell, or another?
Message-ID: <CAOO9MKVpkoVS6jCKBEJy6Qpb6Uxu1hRze-2kOQ4AdoECwMebPg@mail.gmail.com>

Dear pkg developers,

Are there any ways to check which sorting algorithm is being used when
calling `order` function? Documentation at
https://stat.ethz.ch/R-manual/R-devel/library/base/html/sort.html
says it is radix for length < 2^31

On the other hand, I am using R_orderVector1, passing in double float
smaller than 2^31. Short description of it states
"Fast version of 1-argument case of R_orderVector".
Should I expect R_orderVector1 follow the same algo as R's order()? If so
it should be radix as well.

https://github.com/wch/r-source/blob/ed51d34ec195b89462a8531b9ef30b7b72e47204/src/main/sort.c#L1133

If there is no way to check sorting algo, could anyone describe which one
R_orderVector1 uses, and if there is easy API to use different ones from C?

Best Regards,
Jan Gorecki

	[[alternative HTML version deleted]]


From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Sun Sep 24 17:27:25 2023
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Sun, 24 Sep 2023 08:27:25 -0700
Subject: [R-pkg-devel] R_orderVector1 - algo: radix, shell, or another?
In-Reply-To: <CAOO9MKVpkoVS6jCKBEJy6Qpb6Uxu1hRze-2kOQ4AdoECwMebPg@mail.gmail.com>
References: <CAOO9MKVpkoVS6jCKBEJy6Qpb6Uxu1hRze-2kOQ4AdoECwMebPg@mail.gmail.com>
Message-ID: <9F2FDD23-CCAC-4C78-8068-1D97F358B109@dcn.davis.ca.us>

Have you read the output of

order

entered at the R console?


On September 24, 2023 1:38:41 AM PDT, Jan Gorecki <j.gorecki at wit.edu.pl> wrote:
>Dear pkg developers,
>
>Are there any ways to check which sorting algorithm is being used when
>calling `order` function? Documentation at
>https://stat.ethz.ch/R-manual/R-devel/library/base/html/sort.html
>says it is radix for length < 2^31
>
>On the other hand, I am using R_orderVector1, passing in double float
>smaller than 2^31. Short description of it states
>"Fast version of 1-argument case of R_orderVector".
>Should I expect R_orderVector1 follow the same algo as R's order()? If so
>it should be radix as well.
>
>https://github.com/wch/r-source/blob/ed51d34ec195b89462a8531b9ef30b7b72e47204/src/main/sort.c#L1133
>
>If there is no way to check sorting algo, could anyone describe which one
>R_orderVector1 uses, and if there is easy API to use different ones from C?
>
>Best Regards,
>Jan Gorecki
>
>	[[alternative HTML version deleted]]
>
>______________________________________________
>R-package-devel at r-project.org mailing list
>https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
Sent from my phone. Please excuse my brevity.


From j@goreck| @end|ng |rom w|t@edu@p|  Sun Sep 24 20:10:53 2023
From: j@goreck| @end|ng |rom w|t@edu@p| (Jan Gorecki)
Date: Sun, 24 Sep 2023 20:10:53 +0200
Subject: [R-pkg-devel] R_orderVector1 - algo: radix, shell, or another?
In-Reply-To: <9F2FDD23-CCAC-4C78-8068-1D97F358B109@dcn.davis.ca.us>
References: <CAOO9MKVpkoVS6jCKBEJy6Qpb6Uxu1hRze-2kOQ4AdoECwMebPg@mail.gmail.com>
 <9F2FDD23-CCAC-4C78-8068-1D97F358B109@dcn.davis.ca.us>
Message-ID: <CAOO9MKU-nmOeDRJzZVzs1iBKkaojhkkEstb+rgf1mP+LBbD9bw@mail.gmail.com>

Hi Jeff,

Yes I did. My question is about R_orderVector1 which is part of public R C
api.
Should I notice something relevant in the source of R's order?

Best
Jan

On Sun, Sep 24, 2023, 17:27 Jeff Newmiller <jdnewmil at dcn.davis.ca.us> wrote:

> Have you read the output of
>
> order
>
> entered at the R console?
>
>
> On September 24, 2023 1:38:41 AM PDT, Jan Gorecki <j.gorecki at wit.edu.pl>
> wrote:
> >Dear pkg developers,
> >
> >Are there any ways to check which sorting algorithm is being used when
> >calling `order` function? Documentation at
> >https://stat.ethz.ch/R-manual/R-devel/library/base/html/sort.html
> >says it is radix for length < 2^31
> >
> >On the other hand, I am using R_orderVector1, passing in double float
> >smaller than 2^31. Short description of it states
> >"Fast version of 1-argument case of R_orderVector".
> >Should I expect R_orderVector1 follow the same algo as R's order()? If so
> >it should be radix as well.
> >
> >
> https://github.com/wch/r-source/blob/ed51d34ec195b89462a8531b9ef30b7b72e47204/src/main/sort.c#L1133
> >
> >If there is no way to check sorting algo, could anyone describe which one
> >R_orderVector1 uses, and if there is easy API to use different ones from
> C?
> >
> >Best Regards,
> >Jan Gorecki
> >
> >       [[alternative HTML version deleted]]
> >
> >______________________________________________
> >R-package-devel at r-project.org mailing list
> >https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
> --
> Sent from my phone. Please excuse my brevity.
>

	[[alternative HTML version deleted]]


From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Sun Sep 24 20:39:07 2023
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Sun, 24 Sep 2023 11:39:07 -0700
Subject: [R-pkg-devel] R_orderVector1 - algo: radix, shell, or another?
In-Reply-To: <CAOO9MKU-nmOeDRJzZVzs1iBKkaojhkkEstb+rgf1mP+LBbD9bw@mail.gmail.com>
References: <CAOO9MKVpkoVS6jCKBEJy6Qpb6Uxu1hRze-2kOQ4AdoECwMebPg@mail.gmail.com>
 <9F2FDD23-CCAC-4C78-8068-1D97F358B109@dcn.davis.ca.us>
 <CAOO9MKU-nmOeDRJzZVzs1iBKkaojhkkEstb+rgf1mP+LBbD9bw@mail.gmail.com>
Message-ID: <79C665EB-A3F0-4746-867C-EC2129EB5CE8@dcn.davis.ca.us>

You asked how order works. From the R source you can follow which C functions are executed, and since you seem familiar with C you can answer your own question.

On September 24, 2023 11:10:53 AM PDT, Jan Gorecki <j.gorecki at wit.edu.pl> wrote:
>Hi Jeff,
>
>Yes I did. My question is about R_orderVector1 which is part of public R C
>api.
>Should I notice something relevant in the source of R's order?
>
>Best
>Jan
>
>On Sun, Sep 24, 2023, 17:27 Jeff Newmiller <jdnewmil at dcn.davis.ca.us> wrote:
>
>> Have you read the output of
>>
>> order
>>
>> entered at the R console?
>>
>>
>> On September 24, 2023 1:38:41 AM PDT, Jan Gorecki <j.gorecki at wit.edu.pl>
>> wrote:
>> >Dear pkg developers,
>> >
>> >Are there any ways to check which sorting algorithm is being used when
>> >calling `order` function? Documentation at
>> >https://stat.ethz.ch/R-manual/R-devel/library/base/html/sort.html
>> >says it is radix for length < 2^31
>> >
>> >On the other hand, I am using R_orderVector1, passing in double float
>> >smaller than 2^31. Short description of it states
>> >"Fast version of 1-argument case of R_orderVector".
>> >Should I expect R_orderVector1 follow the same algo as R's order()? If so
>> >it should be radix as well.
>> >
>> >
>> https://github.com/wch/r-source/blob/ed51d34ec195b89462a8531b9ef30b7b72e47204/src/main/sort.c#L1133
>> >
>> >If there is no way to check sorting algo, could anyone describe which one
>> >R_orderVector1 uses, and if there is easy API to use different ones from
>> C?
>> >
>> >Best Regards,
>> >Jan Gorecki
>> >
>> >       [[alternative HTML version deleted]]
>> >
>> >______________________________________________
>> >R-package-devel at r-project.org mailing list
>> >https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>> --
>> Sent from my phone. Please excuse my brevity.
>>

-- 
Sent from my phone. Please excuse my brevity.


From @|mon@urb@nek @end|ng |rom R-project@org  Sun Sep 24 21:25:33 2023
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Mon, 25 Sep 2023 08:25:33 +1300
Subject: [R-pkg-devel] R_orderVector1 - algo: radix, shell, or another?
In-Reply-To: <CAOO9MKU-nmOeDRJzZVzs1iBKkaojhkkEstb+rgf1mP+LBbD9bw@mail.gmail.com>
References: <CAOO9MKVpkoVS6jCKBEJy6Qpb6Uxu1hRze-2kOQ4AdoECwMebPg@mail.gmail.com>
 <9F2FDD23-CCAC-4C78-8068-1D97F358B109@dcn.davis.ca.us>
 <CAOO9MKU-nmOeDRJzZVzs1iBKkaojhkkEstb+rgf1mP+LBbD9bw@mail.gmail.com>
Message-ID: <B7711ED3-8C8C-406B-9B9F-736E96EDD9A1@R-project.org>

I think the logic Jeff had in mind is that R order() uses C do_order() for method="shell" and since do_order() uses orderVector1() by induction it is the shell-sort implementation.

order() itself uses whatever you specify in method=.

Cheers,
Simon


> On Sep 25, 2023, at 7:10 AM, Jan Gorecki <j.gorecki at wit.edu.pl> wrote:
> 
> Hi Jeff,
> 
> Yes I did. My question is about R_orderVector1 which is part of public R C
> api.
> Should I notice something relevant in the source of R's order?
> 
> Best
> Jan
> 
> On Sun, Sep 24, 2023, 17:27 Jeff Newmiller <jdnewmil at dcn.davis.ca.us> wrote:
> 
>> Have you read the output of
>> 
>> order
>> 
>> entered at the R console?
>> 
>> 
>> On September 24, 2023 1:38:41 AM PDT, Jan Gorecki <j.gorecki at wit.edu.pl>
>> wrote:
>>> Dear pkg developers,
>>> 
>>> Are there any ways to check which sorting algorithm is being used when
>>> calling `order` function? Documentation at
>>> https://stat.ethz.ch/R-manual/R-devel/library/base/html/sort.html
>>> says it is radix for length < 2^31
>>> 
>>> On the other hand, I am using R_orderVector1, passing in double float
>>> smaller than 2^31. Short description of it states
>>> "Fast version of 1-argument case of R_orderVector".
>>> Should I expect R_orderVector1 follow the same algo as R's order()? If so
>>> it should be radix as well.
>>> 
>>> 
>> https://github.com/wch/r-source/blob/ed51d34ec195b89462a8531b9ef30b7b72e47204/src/main/sort.c#L1133
>>> 
>>> If there is no way to check sorting algo, could anyone describe which one
>>> R_orderVector1 uses, and if there is easy API to use different ones from
>> C?
>>> 
>>> Best Regards,
>>> Jan Gorecki
>>> 
>>>      [[alternative HTML version deleted]]
>>> 
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> 
>> --
>> Sent from my phone. Please excuse my brevity.
>> 
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 


From kry|ov@r00t @end|ng |rom gm@||@com  Mon Sep 25 09:26:16 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Mon, 25 Sep 2023 10:26:16 +0300
Subject: [R-pkg-devel] R_orderVector1 - algo: radix, shell, or another?
In-Reply-To: <CAOO9MKVpkoVS6jCKBEJy6Qpb6Uxu1hRze-2kOQ4AdoECwMebPg@mail.gmail.com>
References: <CAOO9MKVpkoVS6jCKBEJy6Qpb6Uxu1hRze-2kOQ4AdoECwMebPg@mail.gmail.com>
Message-ID: <20230925102616.19ece03b@Tarkus>

? Sun, 24 Sep 2023 10:38:41 +0200
Jan Gorecki <j.gorecki at wit.edu.pl> ?????:

> https://github.com/wch/r-source/blob/ed51d34ec195b89462a8531b9ef30b7b72e47204/src/main/sort.c#L1133

> could anyone describe which one R_orderVector1 uses,

The body of the sorting algorithm is defined in the sort2_with_index
macro. This is shell sort. (I don't actually recognise sorting
algorithms on sight, but the "sincs" array gave it away:
<https://discourse.julialang.org/t/ironic-observation-about-sort-and-sortperm-speed-for-small-integers-vs-r/8715/3>.)

> and if there is easy API to use different ones from C?

No easy ones, I think. You could construct a call to order(..., method
= 'radix') from R or bundle a sort implementation of your own.

These are all undocumented implementation details. They could change in
a new version of R (although quite a lot of it hasn't changed in 11-22
years). Why are you looking for specific sorting algorithms? Could
there be a better way to solve your problem?

-- 
Best regards,
Ivan


From ||@t@ @end|ng |rom reve||e@net  Mon Sep 25 19:00:06 2023
From: ||@t@ @end|ng |rom reve||e@net (William Revelle)
Date: Mon, 25 Sep 2023 12:00:06 -0500
Subject: [R-pkg-devel] help with revdep_check
Message-ID: <2CB3C236-F772-4DE6-968D-27F5BA94DABC@revelle.net>

Dear friends,
I am trying to release a new update to psych and psychTools and am having problems with revdep_check

The error message from revdep_check is less than helpful:?

fn is 

fn  <-  "/Users/WR/Library/CloudStorage/Dropbox/psychTools/"

revdep_check(fn,num_workers=8)
?? CHECK ?????????????????????????????????????????????????????????????????????????????? 15 packages ??
[0/15] 00:00:15 | ETA:  ?s | (8) afex [I], bootnet [I], modnets [I], psych [I], alphaci [D], C...Error: Could not find tools necessary to compile a package
Call `pkgbuild::check_build_tools(debug = TRUE)` to diagnose the problem.
> check_build_tools(debug=TRUE)
Trying to compile a simple C file
Error: Could not find tools necessary to compile a package
Call `pkgbuild::check_build_tools(debug = TRUE)` to diagnose the problem.
rror: Could not find tools necessary to compile a package

Any suggestions would be appreciated. 

William Revelle		           personality-project.org/revelle.html
Professor			                   personality-project.org
Department of Psychology         www.wcas.northwestern.edu/psych/
Northwestern University	           www.northwestern.edu/
Use R for psychology                 personality-project.org/r
It is 90 seconds to midnight	   www.thebulletin.org


	[[alternative HTML version deleted]]


From ||@t@ @end|ng |rom reve||e@net  Mon Sep 25 19:00:06 2023
From: ||@t@ @end|ng |rom reve||e@net (William Revelle)
Date: Mon, 25 Sep 2023 12:00:06 -0500
Subject: [R-pkg-devel] help with revdep_check
Message-ID: <2CB3C236-F772-4DE6-968D-27F5BA94DABC@revelle.net>

Dear friends,
I am trying to release a new update to psych and psychTools and am having problems with revdep_check

The error message from revdep_check is less than helpful:?

fn is 

fn  <-  "/Users/WR/Library/CloudStorage/Dropbox/psychTools/"

revdep_check(fn,num_workers=8)
?? CHECK ?????????????????????????????????????????????????????????????????????????????? 15 packages ??
[0/15] 00:00:15 | ETA:  ?s | (8) afex [I], bootnet [I], modnets [I], psych [I], alphaci [D], C...Error: Could not find tools necessary to compile a package
Call `pkgbuild::check_build_tools(debug = TRUE)` to diagnose the problem.
> check_build_tools(debug=TRUE)
Trying to compile a simple C file
Error: Could not find tools necessary to compile a package
Call `pkgbuild::check_build_tools(debug = TRUE)` to diagnose the problem.
rror: Could not find tools necessary to compile a package

Any suggestions would be appreciated. 

William Revelle		           personality-project.org/revelle.html
Professor			                   personality-project.org
Department of Psychology         www.wcas.northwestern.edu/psych/
Northwestern University	           www.northwestern.edu/
Use R for psychology                 personality-project.org/r
It is 90 seconds to midnight	   www.thebulletin.org


	[[alternative HTML version deleted]]


From c@@rd|@g@bor @end|ng |rom gm@||@com  Mon Sep 25 19:24:48 2023
From: c@@rd|@g@bor @end|ng |rom gm@||@com (=?UTF-8?B?R8OhYm9yIENzw6FyZGk=?=)
Date: Mon, 25 Sep 2023 19:24:48 +0200
Subject: [R-pkg-devel] help with revdep_check
In-Reply-To: <2CB3C236-F772-4DE6-968D-27F5BA94DABC@revelle.net>
References: <2CB3C236-F772-4DE6-968D-27F5BA94DABC@revelle.net>
Message-ID: <CABtg=KmMDW+kzn+0hThE2wNVkZaJAwrs+1xCsmrLgQe3SH+icQ@mail.gmail.com>

Seems like you are on macOS. You need to install XCode or the Command
Line Tools to be able to compile packages with C/C++/Fortran code.

Gabor

On Mon, Sep 25, 2023 at 7:02?PM William Revelle <lists at revelle.net> wrote:
>
> Dear friends,
> I am trying to release a new update to psych and psychTools and am having problems with revdep_check
>
> The error message from revdep_check is less than helpful:?
>
> fn is
>
> fn  <-  "/Users/WR/Library/CloudStorage/Dropbox/psychTools/"
>
> revdep_check(fn,num_workers=8)
> ?? CHECK ?????????????????????????????????????????????????????????????????????????????? 15 packages ??
> [0/15] 00:00:15 | ETA:  ?s | (8) afex [I], bootnet [I], modnets [I], psych [I], alphaci [D], C...Error: Could not find tools necessary to compile a package
> Call `pkgbuild::check_build_tools(debug = TRUE)` to diagnose the problem.
> > check_build_tools(debug=TRUE)
> Trying to compile a simple C file
> Error: Could not find tools necessary to compile a package
> Call `pkgbuild::check_build_tools(debug = TRUE)` to diagnose the problem.
> rror: Could not find tools necessary to compile a package
>
> Any suggestions would be appreciated.
>
> William Revelle                    personality-project.org/revelle.html
> Professor                                          personality-project.org
> Department of Psychology         www.wcas.northwestern.edu/psych/
> Northwestern University            www.northwestern.edu/
> Use R for psychology                 personality-project.org/r
> It is 90 seconds to midnight       www.thebulletin.org
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From ||@t@ @end|ng |rom reve||e@net  Mon Sep 25 21:00:24 2023
From: ||@t@ @end|ng |rom reve||e@net (William Revelle)
Date: Mon, 25 Sep 2023 14:00:24 -0500
Subject: [R-pkg-devel] help with revdep_check
In-Reply-To: <CABtg=KmMDW+kzn+0hThE2wNVkZaJAwrs+1xCsmrLgQe3SH+icQ@mail.gmail.com>
References: <2CB3C236-F772-4DE6-968D-27F5BA94DABC@revelle.net>
 <CABtg=KmMDW+kzn+0hThE2wNVkZaJAwrs+1xCsmrLgQe3SH+icQ@mail.gmail.com>
Message-ID: <7028EC7F-20B3-4B11-81F0-1D3CA9A7C896@revelle.net>

Thanks.  Although I have had Xtools for quite a while, it had not been activated.  Installing a new copy made all the difference

Bill


> On Sep 25, 2023, at 12:24 PM, G?bor Cs?rdi <csardi.gabor at gmail.com> wrote:
> 
> Seems like you are on macOS. You need to install XCode or the Command
> Line Tools to be able to compile packages with C/C++/Fortran code.
> 
> Gabor
> 
> On Mon, Sep 25, 2023 at 7:02?PM William Revelle <lists at revelle.net> wrote:
>> 
>> Dear friends,
>> I am trying to release a new update to psych and psychTools and am having problems with revdep_check
>> 
>> The error message from revdep_check is less than helpful:?
>> 
>> fn is
>> 
>> fn  <-  "/Users/WR/Library/CloudStorage/Dropbox/psychTools/"
>> 
>> revdep_check(fn,num_workers=8)
>> ?? CHECK ?????????????????????????????????????????????????????????????????????????????? 15 packages ??
>> [0/15] 00:00:15 | ETA:  ?s | (8) afex [I], bootnet [I], modnets [I], psych [I], alphaci [D], C...Error: Could not find tools necessary to compile a package
>> Call `pkgbuild::check_build_tools(debug = TRUE)` to diagnose the problem.
>>> check_build_tools(debug=TRUE)
>> Trying to compile a simple C file
>> Error: Could not find tools necessary to compile a package
>> Call `pkgbuild::check_build_tools(debug = TRUE)` to diagnose the problem.
>> rror: Could not find tools necessary to compile a package
>> 
>> Any suggestions would be appreciated.
>> 
>> William Revelle                    personality-project.org/revelle.html
>> Professor                                          personality-project.org
>> Department of Psychology         www.wcas.northwestern.edu/psych/
>> Northwestern University            www.northwestern.edu/
>> Use R for psychology                 personality-project.org/r
>> It is 90 seconds to midnight       www.thebulletin.org
>> 
>> 
>>        [[alternative HTML version deleted]]
>> 
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel

William Revelle            personality-project.org/revelle.html
Professor                    personality-project.org
Department of Psychology         www.wcas.northwestern.edu/psych/
Northwestern University            www.northwestern.edu/
Use R for psychology                 personality-project.org/r
It is 90 seconds to midnight    www.thebulletin.org


