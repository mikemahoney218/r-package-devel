From obr|@o||@u @end|ng |rom gm@||@com  Sat Jul  1 07:58:05 2023
From: obr|@o||@u @end|ng |rom gm@||@com (obrl soil)
Date: Sat, 1 Jul 2023 05:58:05 +0000
Subject: [R-pkg-devel] How to request for an Non Maintainer update - NMU
In-Reply-To: <ME3PR01MB7944B16B926E4A1700E2ECCCD452A@ME3PR01MB7944.ausprd01.prod.outlook.com>
References: <ME3PR01MB7944B16B926E4A1700E2ECCCD452A@ME3PR01MB7944.ausprd01.prod.outlook.com>
Message-ID: <DB4PR05MB1055933A638174C5584A8D2B9FC2BA@DB4PR05MB10559.eurprd05.prod.outlook.com>

Hi,

A note for the list, since this may pop up again: ggtern is not abandoned, and is back on CRAN. The active development repo is on bitbucket at https://bitbucket.org/nicholasehamilton/ggtern/src/master/ 

There is also a github repo https://github.com/nicholasehamilton/ggtern that is not active, but does get pinged regularly because its not been made clear that development is ongoing elsewhere. The package DESCRIPTION URL field points to http://www.ggtern.com/, but its not obvious where the active repo is until you navigate to http://www.ggtern.com/docs/ and look at the dev url quoted. 

I wonder if it should be CRAN policy that the DESCRIPTION URL points only to an active repo, but I imagine there would be a significant policing burden associated with such a change.

L

From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Bernd.Gruber <Bernd.Gruber at canberra.edu.au>
Sent: Tuesday, June 6, 2023 6:04 PM
To: r-package-devel at r-project.org <r-package-devel at r-project.org>
Subject: [R-pkg-devel] How to request for an Non Maintainer update - NMU 
?
Hi everyone,

I am the maintainer of a package (dartR) that depends on ggtern (a package that seems not to be maintained anymore).
Currently the package was removed from CRAN (about 4 weeks ago) due to a simple error, which can be easily fixed. This was kindly achieved by Roger Bivand (simply the remove of a backslash does the trick).

In an github exchange he also suggested to have an non maintainer update (NMU) for the package in the short term (and find a replacement of orphan the package and find a new maintainer in the long term).

Here is my first question as I did not find an answer googling it.

How can I ask, request for an NMU? Would I simply write to CRAN and describe the situation and send the files that need to be replaced?

The second question is, how I would request to orphan the package and what is the procedure to find a new maintainer (as it relies on ggplot code and this is not really my strength, hence I would try to find someone else to take over).

Thanks a lot, Bernd



==============================================================================
Dr Bernd Gruber????????????????????????????????????????????? )/_
???????????????????????????????????????????????????????? _.--..---"-,--c_
Professor Ecological Modelling????????????????????? \|..'?????????? ._O__)_
Tel: (02) 6206 3804???????????????????????? ,=.??? _.+?? _ \..--( /
Fax: (02) 6201 2328?????????????????????????? \\.-''_.-' \ (???? \_
Institute for Applied Ecology????????????????? `'''?????? `\__?? /\
Faculty of Science and Technology????????????????????????? ')
University of Canberra?? ACT 2601 AUSTRALIA
Email: bernd.gruber at canberra.edu.au<mailto:bernd.gruber at canberra.edu.au>
WWW: bernd-gruber<https://researchprofiles.canberra.edu.au/en/persons/bernd-gruber>

Australian Government Higher Education Provider Number CRICOS #00212K
NOTICE & DISCLAIMER: This email and any files transmitted with it may contain
confidential or copyright material and are for the attention of the addressee
only. If you have received this email in error please notify us by email
reply and delete it from your system. The University of Canberra accepts
no liability for any damage caused by any virus transmitted by this email.
==============================================================================

[UC Logo]<http://www.canberra.edu.au>

[Research Festival,5-8 June 2023]<https://www.canberra.edu.au/about-uc/events/research-festival/research-festival-2023>



The Ngunnawal people are the Traditional Custodians of the ACT where UC's Bruce Campus is situated and are an integral and celebrated part of UC's culture. We also acknowledge other First Nations Peoples.

Australian Government Higher Education Registered Provider (CRICOS) #00212K. TEQSA Provider ID: PRV12003 (Australian University)
Email Disclaimer<https://www.canberra.edu.au/about-uc/disclaimer-copyright-privacy-accessibility>

[UC Facebook]<https://www.facebook.com/UniversityOfCanberra>??? [UC Twitter] <https://twitter.com/UniCanberra>???? [UC Instagram] <https://www.instagram.com/unicanberra/>???? [UC Linkedin] <https://au.linkedin.com/school/university-of-canberra/>???? [UC Youtube] <https://www.youtube.com/user/uniofcanberra>???? [University of Canberra] <http://www.canberra.edu.au>

??????? [[alternative HTML version deleted]]

______________________________________________
R-package-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel

From kry|ov@r00t @end|ng |rom gm@||@com  Sat Jul  1 21:00:06 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Sat, 1 Jul 2023 22:00:06 +0300
Subject: [R-pkg-devel] New R CMD check warnings for html files
In-Reply-To: <CAEO2ku+=nGbp2KqJNyXPPzFmo1nWGR7ePDL83cfC4AYm-WzK7Q@mail.gmail.com>
References: <CAEO2ku+=nGbp2KqJNyXPPzFmo1nWGR7ePDL83cfC4AYm-WzK7Q@mail.gmail.com>
Message-ID: <20230701220006.1ac80104@parabola>

? Fri, 30 Jun 2023 14:20:00 -0700
arilamstein at gmail.com ?????:

> However, when I run R CMD check I now get a ton of warnings in what I
> assume is the conversion of the man files from .Rd to .html files. I
> assume that CRAN will reject the package due to the warnings.
> However, I don't really understand the warnings, or why they are
> occurring now (they did not happen before).

roxygen2-7.2.3 seems to produce a lot of warnings on your source files.
I don't have a lot of experience with roxygen2, but they may be part of
the problem:

>> 38: [county.R:5] Undocumented R6 methods: initialize and clip
>> 39: [county.R:5] Undocumented R6 field: add_state_outline
>> 40: [county.R:5] Must use one @param for each argument
>> ? $initialize(user.df) is not documented

(and so on for more than 50 warnings... or is it something on my end?)

> The entire file has not changed in 3 years. When I run roxygenize()
> locally the .Rd file does look much (at all?) different than what was
> checked into github year ago

What does `git diff` say after you run roxygenise()? For me, latest
roxygen2 seems to lead to zero HTML warnings and zero Rd changes.

What are your versions of roxygen2 and HTML Tidy? Do you get the HTML
warnings when checking your package on R-hub, Win-Builder, or Mac
Builder?

-- 
Best regards,
Ivan


From chr|@ho|d @end|ng |rom p@yctc@org  Wed Jul  5 10:44:26 2023
From: chr|@ho|d @end|ng |rom p@yctc@org (Chris Evans)
Date: Wed, 5 Jul 2023 09:44:26 +0100
Subject: [R-pkg-devel] Help with a github/Rstudio mess
Message-ID: <fc59ef69-73fd-cb5e-fc96-3e13a5113115@psyctc.org>

I hope this is a legitimate question here.? I have a package of very 
simple functions: https://github.com/cpsyctc/CECPfuns.? For the forseeable
future it's really only to stop me constantly having to rewrite 
functions I use and it is only also used by probably two or three 
colleagues who
also use R and are even less IT/programming/R competent than I am and 
are very happy to use my functions.

I hadn't done any work on it for two years but came back to it yesterday 
and added a function (getCIforQuantiles).? There were warnings about
things that are deprecated now in some of the older functions but 
otherwise things seemed OK.? However, I got a pkgdown error and warning 
after
pushing the updated package to github:

Annotations
1 error and 1 warning
pkgdown
Failed to get R 4.3.1: Failed to get R 4.3.1: Failed to download version 
4.3.1: Error: Unexpected HTTP response: 404
r-lib/actions/setup-r at v1 is deprecated.
r-lib/actions/setup-r at v1 is deprecated. Please update your workflow to 
use the 'v2' version. Also look at the examples at 
https://github.com/r-lib/actions/tree/v2/examples because '@v2' 
workflows are much simpler than 'v1' workflows.

So I tweaked 
https://github.com/cpsyctc/CECPfuns/blob/main/.github/workflows/pkgdown.yaml 
to change
 ?? - uses: r-lib/actions/setup-r at v1
to
 ?? - uses: r-lib/actions/setup-r at v2
rather optimistically hoping that might make the warning go away.

Today I did some work on the new function (trivial, correcting one 
"!is.na(" to the correct "is.na(" !!!).? More importantly, I created the
test-getCIforQuantiles.R file for testthat to test the sanity checks and 
add three simple output checks.

I built the source package locally, committed the changes and tried to 
push the update to github (inside Rstudio) but I get:

 >>> /usr/bin/git push origin HEAD:refs/heads/main
To https://github.com/cpsyctc/CECPfuns.git
 ?! [rejected]??????? HEAD -> main (fetch first)
error: failed to push some refs to 'https://github.com/cpsyctc/CECPfuns.git'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.

OK.? So I try to pull thinking that made sense and that the change to 
pkgdown.yaml on github that I made yesterday is the offending change.

However, when I pull (in Rstudio again) I get this:

 >>> /usr/bin/git pull
fatal: pack has 6 unresolved deltas
fatal: fetch-pack: invalid index-pack output

I have never felt on top of the complexities of git and github but I'm 
clearly way out of my depth.? I am hoping someone here can see what
I need to do to get things back in synch and be able to get back to 
developing the package.

TIA,

Chris

-- 
Chris Evans (he/him)
Visiting Professor, UDLA, Quito, Ecuador & Honorary Professor, 
University of Roehampton, London, UK.
Work web site: https://www.psyctc.org/psyctc/
CORE site: http://www.coresystemtrust.org.uk/
Personal site: https://www.psyctc.org/pelerinage2016/


From murdoch@dunc@n @end|ng |rom gm@||@com  Wed Jul  5 11:03:11 2023
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Wed, 5 Jul 2023 05:03:11 -0400
Subject: [R-pkg-devel] Help with a github/Rstudio mess
In-Reply-To: <fc59ef69-73fd-cb5e-fc96-3e13a5113115@psyctc.org>
References: <fc59ef69-73fd-cb5e-fc96-3e13a5113115@psyctc.org>
Message-ID: <555198e1-0c39-f25a-8253-f115c4d2dbf9@gmail.com>

I think this isn't the right place to ask for this sort of help. Maybe 
stackoverflow instead?

What I'd do in this case is to rename the local dir holding the 
repository, then clone a new copy from Github.  Assuming that works, 
compare all the files to make sure that you have all recent changes,
commit any that were missed, then throw away the damaged one.

Duncan Murdoch

On 05/07/2023 4:44 a.m., Chris Evans wrote:
> I hope this is a legitimate question here.? I have a package of very
> simple functions: https://github.com/cpsyctc/CECPfuns.? For the forseeable
> future it's really only to stop me constantly having to rewrite
> functions I use and it is only also used by probably two or three
> colleagues who
> also use R and are even less IT/programming/R competent than I am and
> are very happy to use my functions.
> 
> I hadn't done any work on it for two years but came back to it yesterday
> and added a function (getCIforQuantiles).? There were warnings about
> things that are deprecated now in some of the older functions but
> otherwise things seemed OK.? However, I got a pkgdown error and warning
> after
> pushing the updated package to github:
> 
> Annotations
> 1 error and 1 warning
> pkgdown
> Failed to get R 4.3.1: Failed to get R 4.3.1: Failed to download version
> 4.3.1: Error: Unexpected HTTP response: 404
> r-lib/actions/setup-r at v1 is deprecated.
> r-lib/actions/setup-r at v1 is deprecated. Please update your workflow to
> use the 'v2' version. Also look at the examples at
> https://github.com/r-lib/actions/tree/v2/examples because '@v2'
> workflows are much simpler than 'v1' workflows.
> 
> So I tweaked
> https://github.com/cpsyctc/CECPfuns/blob/main/.github/workflows/pkgdown.yaml
> to change
>   ?? - uses: r-lib/actions/setup-r at v1
> to
>   ?? - uses: r-lib/actions/setup-r at v2
> rather optimistically hoping that might make the warning go away.
> 
> Today I did some work on the new function (trivial, correcting one
> "!is.na(" to the correct "is.na(" !!!).? More importantly, I created the
> test-getCIforQuantiles.R file for testthat to test the sanity checks and
> add three simple output checks.
> 
> I built the source package locally, committed the changes and tried to
> push the update to github (inside Rstudio) but I get:
> 
>   >>> /usr/bin/git push origin HEAD:refs/heads/main
> To https://github.com/cpsyctc/CECPfuns.git
>   ?! [rejected]??????? HEAD -> main (fetch first)
> error: failed to push some refs to 'https://github.com/cpsyctc/CECPfuns.git'
> hint: Updates were rejected because the remote contains work that you do
> hint: not have locally. This is usually caused by another repository pushing
> hint: to the same ref. You may want to first integrate the remote changes
> hint: (e.g., 'git pull ...') before pushing again.
> hint: See the 'Note about fast-forwards' in 'git push --help' for details.
> 
> OK.? So I try to pull thinking that made sense and that the change to
> pkgdown.yaml on github that I made yesterday is the offending change.
> 
> However, when I pull (in Rstudio again) I get this:
> 
>   >>> /usr/bin/git pull
> fatal: pack has 6 unresolved deltas
> fatal: fetch-pack: invalid index-pack output
> 
> I have never felt on top of the complexities of git and github but I'm
> clearly way out of my depth.? I am hoping someone here can see what
> I need to do to get things back in synch and be able to get back to
> developing the package.
>


From kry|ov@r00t @end|ng |rom gm@||@com  Wed Jul  5 11:12:29 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Wed, 5 Jul 2023 12:12:29 +0300
Subject: [R-pkg-devel] Help with a github/Rstudio mess
In-Reply-To: <fc59ef69-73fd-cb5e-fc96-3e13a5113115@psyctc.org>
References: <fc59ef69-73fd-cb5e-fc96-3e13a5113115@psyctc.org>
Message-ID: <20230705121229.5f36c7e9@Tarkus>

On Wed, 5 Jul 2023 09:44:26 +0100
Chris Evans <chrishold at psyctc.org> wrote:

> OK.? So I try to pull thinking that made sense and that the change to 
> pkgdown.yaml on github that I made yesterday is the offending change.

You are right about this.

> However, when I pull (in Rstudio again) I get this:
> 
>  >>> /usr/bin/git pull  
> fatal: pack has 6 unresolved deltas
> fatal: fetch-pack: invalid index-pack output

I think it should be possible to get your work online if you push it
into a separate branch:

git checkout -b test-getCIforQuantiles
git push -u origin test-getCIforQuantiles

This still leaves the problem of merging it back into "main", but at
least you'll have a separate copy you'll be able to get back to.

Your clone of the repo seems to have become corrupted somehow. People
on the Internet mention that this may be related to "shallow" clones
(made with git clone --depth=...). `git fsck --full` may provide more
information, but will probably not be able to fix the problem. Removing
the "origin" remote and adding it back again may fix the problem, or
not. https://phabricator.wikimedia.org/T46129 is the most informative
discussion of this problem I could find, and they couldn't solve it
either.

If you have any other important local branches, push them to GitHub (in
a similar manner: git push origin LOCAL_BRANCH_NAME:REMOTE_BRANCH_NAME).
Move your current clone of the repository away and create it anew using
`git clone`. Once you have merged the branches into appropriate places,
you will be able to remove them using git branch -d BRANCH_NAME
(locally) and git push origin :BRANCH_NAME (on GitHub).

-- 
Best regards,
Ivan


From chr|@ho|d @end|ng |rom p@yctc@org  Wed Jul  5 12:04:53 2023
From: chr|@ho|d @end|ng |rom p@yctc@org (Chris Evans)
Date: Wed, 5 Jul 2023 11:04:53 +0100
Subject: [R-pkg-devel] Help with a github/Rstudio mess
In-Reply-To: <20230705121229.5f36c7e9@Tarkus>
References: <fc59ef69-73fd-cb5e-fc96-3e13a5113115@psyctc.org>
 <20230705121229.5f36c7e9@Tarkus>
Message-ID: <bf04b911-3544-d9ac-2474-d16ea241385f@psyctc.org>

First, apologies for being off topic.? I guess I can see that this was 
pretty pure git/github/Rstudio with hindsight.? I am very leary of
stackoverflow, probably wrongly, but I find such a mix of misinformation 
and showboating there.? By contrast this list is a haven for me
to learn. However, point taken and I will try to be focused on the R 
package side if I post here again (quite possible as so much of this
is at my outer limits in skills and experience).

So huge thanks to Ivan for so much background: not sure if it's 
depressing or reassuring to see that this seems to be an erratic but known
thing.? Huge thanks to Duncan as I decided that I understood more of his 
suggested fix than of Ivan's so I would start there ... and it
simply worked!

Many thanks both and to all who have taught me so much here,

Chris

On 05/07/2023 10:12, Ivan Krylov wrote:
> On Wed, 5 Jul 2023 09:44:26 +0100
> Chris Evans <chrishold at psyctc.org> wrote:
>
>> OK.? So I try to pull thinking that made sense and that the change to
>> pkgdown.yaml on github that I made yesterday is the offending change.
> You are right about this.
>
>> However, when I pull (in Rstudio again) I get this:
>>
>>   >>> /usr/bin/git pull
>> fatal: pack has 6 unresolved deltas
>> fatal: fetch-pack: invalid index-pack output
> I think it should be possible to get your work online if you push it
> into a separate branch:
>
> git checkout -b test-getCIforQuantiles
> git push -u origin test-getCIforQuantiles
>
> This still leaves the problem of merging it back into "main", but at
> least you'll have a separate copy you'll be able to get back to.
>
> Your clone of the repo seems to have become corrupted somehow. People
> on the Internet mention that this may be related to "shallow" clones
> (made with git clone --depth=...). `git fsck --full` may provide more
> information, but will probably not be able to fix the problem. Removing
> the "origin" remote and adding it back again may fix the problem, or
> not. https://phabricator.wikimedia.org/T46129 is the most informative
> discussion of this problem I could find, and they couldn't solve it
> either.
>
> If you have any other important local branches, push them to GitHub (in
> a similar manner: git push origin LOCAL_BRANCH_NAME:REMOTE_BRANCH_NAME).
> Move your current clone of the repository away and create it anew using
> `git clone`. Once you have merged the branches into appropriate places,
> you will be able to remove them using git branch -d BRANCH_NAME
> (locally) and git push origin :BRANCH_NAME (on GitHub).
>
-- 
Chris Evans (he/him)
Visiting Professor, UDLA, Quito, Ecuador & Honorary Professor, 
University of Roehampton, London, UK.
Work web site: https://www.psyctc.org/psyctc/
CORE site: http://www.coresystemtrust.org.uk/
Personal site: https://www.psyctc.org/pelerinage2016/
E


From georg|@bo@hn@kov @end|ng |rom m@nche@ter@@c@uk  Wed Jul  5 13:14:21 2023
From: georg|@bo@hn@kov @end|ng |rom m@nche@ter@@c@uk (Georgi Boshnakov)
Date: Wed, 5 Jul 2023 11:14:21 +0000
Subject: [R-pkg-devel] Help with a github/Rstudio mess
In-Reply-To: <555198e1-0c39-f25a-8253-f115c4d2dbf9@gmail.com>
References: <fc59ef69-73fd-cb5e-fc96-3e13a5113115@psyctc.org>
 <555198e1-0c39-f25a-8253-f115c4d2dbf9@gmail.com>
Message-ID: <CWLP265MB3505057F50801DF8829455E1AE2FA@CWLP265MB3505.GBRP265.PROD.OUTLOOK.COM>

If I understand correctly, the errors come from github actions run on github. I think that you should update them first, since github switched to new versions in the meantime.

Georgi Boshnakov

Sent from Outlook for Android<https://aka.ms/AAb9ysg>
________________________________
From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Duncan Murdoch <murdoch.duncan at gmail.com>
Sent: Wednesday, July 5, 2023 10:03:11 AM
To: chrishold at psyctc.org <chrishold at psyctc.org>; r-package-devel at r-project.org <r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] Help with a github/Rstudio mess

I think this isn't the right place to ask for this sort of help. Maybe
stackoverflow instead?

What I'd do in this case is to rename the local dir holding the
repository, then clone a new copy from Github.  Assuming that works,
compare all the files to make sure that you have all recent changes,
commit any that were missed, then throw away the damaged one.

Duncan Murdoch

On 05/07/2023 4:44 a.m., Chris Evans wrote:
> I hope this is a legitimate question here.  I have a package of very
> simple functions: https://urldefense.com/v3/__https://github.com/cpsyctc/CECPfuns__;!!PDiH4ENfjr2_Jw!FZGzBDcbpIrmi_GwRh-AOLdv_s3ZxBSRedrQOny_05Q7aFCZq6Qz2deRH-xf1t-f2t_aYV98T4tnvzDCQlxqxh28IYKhYCCSSxRo1w$ [github[.]com].  For the forseeable
> future it's really only to stop me constantly having to rewrite
> functions I use and it is only also used by probably two or three
> colleagues who
> also use R and are even less IT/programming/R competent than I am and
> are very happy to use my functions.
>
> I hadn't done any work on it for two years but came back to it yesterday
> and added a function (getCIforQuantiles).  There were warnings about
> things that are deprecated now in some of the older functions but
> otherwise things seemed OK.  However, I got a pkgdown error and warning
> after
> pushing the updated package to github:
>
> Annotations
> 1 error and 1 warning
> pkgdown
> Failed to get R 4.3.1: Failed to get R 4.3.1: Failed to download version
> 4.3.1: Error: Unexpected HTTP response: 404
> r-lib/actions/setup-r at v1 is deprecated.
> r-lib/actions/setup-r at v1 is deprecated. Please update your workflow to
> use the 'v2' version. Also look at the examples at
> https://urldefense.com/v3/__https://github.com/r-lib/actions/tree/v2/examples__;!!PDiH4ENfjr2_Jw!FZGzBDcbpIrmi_GwRh-AOLdv_s3ZxBSRedrQOny_05Q7aFCZq6Qz2deRH-xf1t-f2t_aYV98T4tnvzDCQlxqxh28IYKhYCD0u-NayA$ [github[.]com] because '@v2'
> workflows are much simpler than 'v1' workflows.
>
> So I tweaked
> https://urldefense.com/v3/__https://github.com/cpsyctc/CECPfuns/blob/main/.github/workflows/pkgdown.yaml__;!!PDiH4ENfjr2_Jw!FZGzBDcbpIrmi_GwRh-AOLdv_s3ZxBSRedrQOny_05Q7aFCZq6Qz2deRH-xf1t-f2t_aYV98T4tnvzDCQlxqxh28IYKhYCCnQO2uOA$ [github[.]com]
> to change
>      - uses: r-lib/actions/setup-r at v1
> to
>      - uses: r-lib/actions/setup-r at v2
> rather optimistically hoping that might make the warning go away.
>
> Today I did some work on the new function (trivial, correcting one
> "!is.na(" to the correct "is.na(" !!!).  More importantly, I created the
> test-getCIforQuantiles.R file for testthat to test the sanity checks and
> add three simple output checks.
>
> I built the source package locally, committed the changes and tried to
> push the update to github (inside Rstudio) but I get:
>
>   >>> /usr/bin/git push origin HEAD:refs/heads/main
> To https://urldefense.com/v3/__https://github.com/cpsyctc/CECPfuns.git__;!!PDiH4ENfjr2_Jw!FZGzBDcbpIrmi_GwRh-AOLdv_s3ZxBSRedrQOny_05Q7aFCZq6Qz2deRH-xf1t-f2t_aYV98T4tnvzDCQlxqxh28IYKhYCCMv5veZQ$ [github[.]com]
>    ! [rejected]        HEAD -> main (fetch first)
> error: failed to push some refs to 'https://urldefense.com/v3/__https://github.com/cpsyctc/CECPfuns.git__;!!PDiH4ENfjr2_Jw!FZGzBDcbpIrmi_GwRh-AOLdv_s3ZxBSRedrQOny_05Q7aFCZq6Qz2deRH-xf1t-f2t_aYV98T4tnvzDCQlxqxh28IYKhYCCMv5veZQ$ [github[.]com]'
> hint: Updates were rejected because the remote contains work that you do
> hint: not have locally. This is usually caused by another repository pushing
> hint: to the same ref. You may want to first integrate the remote changes
> hint: (e.g., 'git pull ...') before pushing again.
> hint: See the 'Note about fast-forwards' in 'git push --help' for details.
>
> OK.  So I try to pull thinking that made sense and that the change to
> pkgdown.yaml on github that I made yesterday is the offending change.
>
> However, when I pull (in Rstudio again) I get this:
>
>   >>> /usr/bin/git pull
> fatal: pack has 6 unresolved deltas
> fatal: fetch-pack: invalid index-pack output
>
> I have never felt on top of the complexities of git and github but I'm
> clearly way out of my depth.  I am hoping someone here can see what
> I need to do to get things back in synch and be able to get back to
> developing the package.
>

______________________________________________
R-package-devel at r-project.org mailing list
https://urldefense.com/v3/__https://stat.ethz.ch/mailman/listinfo/r-package-devel__;!!PDiH4ENfjr2_Jw!FZGzBDcbpIrmi_GwRh-AOLdv_s3ZxBSRedrQOny_05Q7aFCZq6Qz2deRH-xf1t-f2t_aYV98T4tnvzDCQlxqxh28IYKhYCCPKVmhQw$ [stat[.]ethz[.]ch]

	[[alternative HTML version deleted]]


From @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org  Wed Jul  5 23:44:29 2023
From: @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org (Spencer Graves)
Date: Wed, 5 Jul 2023 16:44:29 -0500
Subject: [R-pkg-devel] GitHub Action not triggered by a commit to a fork
Message-ID: <2fdedef5-ab49-bd14-f6b4-825ac54b0e08@effectivedefense.org>

Hello:


	  Can someone help me understand why a commit to 
"https://github.com/sbgraves237/KFAS" does not trigger the GitHub 
Actions specified in ".github/workflows/check-standard.yaml"?


	  Thanks,
	  Spencer Graves


p.s.  This is a branch of helske/KFAS:master.  That may have something 
to do with the problem.


From d|ego@hern@ngomezherrero @end|ng |rom gm@||@com  Wed Jul  5 23:50:23 2023
From: d|ego@hern@ngomezherrero @end|ng |rom gm@||@com (=?UTF-8?Q?Diego_Hernang=C3=B3mez_Herrero?=)
Date: Wed, 5 Jul 2023 23:50:23 +0200
Subject: [R-pkg-devel] GitHub Action not triggered by a commit to a fork
In-Reply-To: <2fdedef5-ab49-bd14-f6b4-825ac54b0e08@effectivedefense.org>
References: <2fdedef5-ab49-bd14-f6b4-825ac54b0e08@effectivedefense.org>
Message-ID: <CAA-ibaz-ZF665+MXAfL=vA=2Gu28xMc1wbR0TjFYA_2FT+y-oQ@mail.gmail.com>

Hi,

GH actions are disabled by default on forks, have you checked <
https://github.com/sbgraves237/KFAS/actions> and clicked on the green
button?


Best

El mi?, 5 jul 2023 a las 23:45, Spencer Graves (<
spencer.graves at effectivedefense.org>) escribi?:

> Hello:
>
>
>           Can someone help me understand why a commit to
> "https://github.com/sbgraves237/KFAS" does not trigger the GitHub
> Actions specified in ".github/workflows/check-standard.yaml"?
>
>
>           Thanks,
>           Spencer Graves
>
>
> p.s.  This is a branch of helske/KFAS:master.  That may have something
> to do with the problem.
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


-- 



Have a nice day!

	[[alternative HTML version deleted]]


From @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org  Thu Jul  6 00:56:48 2023
From: @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org (Spencer Graves)
Date: Wed, 5 Jul 2023 17:56:48 -0500
Subject: [R-pkg-devel] GitHub Action not triggered by a commit to a fork
In-Reply-To: <CAA-ibaz-ZF665+MXAfL=vA=2Gu28xMc1wbR0TjFYA_2FT+y-oQ@mail.gmail.com>
References: <2fdedef5-ab49-bd14-f6b4-825ac54b0e08@effectivedefense.org>
 <CAA-ibaz-ZF665+MXAfL=vA=2Gu28xMc1wbR0TjFYA_2FT+y-oQ@mail.gmail.com>
Message-ID: <da45b8f9-c089-9e38-85ed-9240137ffba5@effectivedefense.org>

Hi, Diego:


	  Thanks for the reply.


On 7/5/23 4:50 PM, Diego Hernang?mez Herrero wrote:
> Hi,
> 
> GH actions are disabled by default on forks, have you checked 
> <https://github.com/sbgraves237/KFAS/actions 
> <https://github.com/sbgraves237/KFAS/actions>> and clicked on the green 
> button?


	  Got it.  I pushed another change, and that triggered GitHub Action.


	  Thanks again, Spencer Graves
> 
> 
> Best
> 
> El mi?, 5 jul 2023 a las 23:45, Spencer Graves 
> (<spencer.graves at effectivedefense.org 
> <mailto:spencer.graves at effectivedefense.org>>) escribi?:
> 
>     Hello:
> 
> 
>      ? ? ? ? ? Can someone help me understand why a commit to
>     "https://github.com/sbgraves237/KFAS
>     <https://github.com/sbgraves237/KFAS>" does not trigger the GitHub
>     Actions specified in ".github/workflows/check-standard.yaml"?
> 
> 
>      ? ? ? ? ? Thanks,
>      ? ? ? ? ? Spencer Graves
> 
> 
>     p.s.? This is a branch of helske/KFAS:master.? That may have something
>     to do with the problem.
> 
>     ______________________________________________
>     R-package-devel at r-project.org <mailto:R-package-devel at r-project.org>
>     mailing list
>     https://stat.ethz.ch/mailman/listinfo/r-package-devel
>     <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
> 
> 
> 
> -- 
> 
> 
> 
> Have a nice day!


From @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org  Thu Jul  6 01:50:33 2023
From: @pencer@gr@ve@ @end|ng |rom e||ect|vede|en@e@org (Spencer Graves)
Date: Wed, 5 Jul 2023 18:50:33 -0500
Subject: [R-pkg-devel] gfortran: command not found
Message-ID: <481d3cd0-b1fb-e1c7-a66a-4f1cca8a0826@effectivedefense.org>

Hello:


	  "R CMD build KFAS" under macOS 11.7.8 stopped with:


using C compiler: ?Apple clang version 12.0.5 (clang-1205.0.22.9)?
sh: gfortran: command not found
using SDK: ?MacOSX11.3.sdk?
gfortran -arch x86_64  -fPIC  -Wall -g -O2  -c  approx.f90 -o approx.o
make: gfortran: No such file or directory
make: *** [approx.o] Error 1
ERROR: compilation failed for package ?KFAS'


	  My web search suggests several different ways to fix this problem, 
but I don't know which to try.



	  Suggestions?
	  Thanks,
	  Spencer Graves


p.s.  I have both "brew" and "port" installed.  I recently used "port" 
to upgrade another software package.  A web search suggested the 
following:


sudo port install gcc48
sudo port select -set gcc mp-gcc48


	  However, this comment was posted roughly 9 years ago.  Below please 
find sessionInfo().


sessionInfo()
R version 4.3.1 (2023-06-16)
Platform: x86_64-apple-darwin20 (64-bit)
Running under: macOS Big Sur 11.7.8

Matrix products: default
BLAS: 
/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib 

LAPACK: 
/Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRlapack.dylib; 
  LAPACK version 3.11.0

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

time zone: America/Chicago
tzcode source: internal

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

loaded via a namespace (and not attached):
  [1] compiler_4.3.1  R6_2.5.1        magrittr_2.0.3  cli_3.6.1
  [5] tools_4.3.1     glue_1.6.2      rstudioapi_0.14 roxygen2_7.2.3
  [9] xml2_1.3.4      vctrs_0.6.2     stringi_1.7.12  knitr_1.42
[13] xfun_0.39       stringr_1.5.0   lifecycle_1.0.3 rlang_1.1.1
[17] purrr_1.0.1


From @|mon@urb@nek @end|ng |rom R-project@org  Thu Jul  6 01:57:35 2023
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Thu, 6 Jul 2023 11:57:35 +1200
Subject: [R-pkg-devel] gfortran: command not found
In-Reply-To: <481d3cd0-b1fb-e1c7-a66a-4f1cca8a0826@effectivedefense.org>
References: <481d3cd0-b1fb-e1c7-a66a-4f1cca8a0826@effectivedefense.org>
Message-ID: <AB038664-AD56-446E-99A0-6A7607A548F7@R-project.org>

To quote from the page you downloaded R from:

This release uses Xcode 14.2/14.3 and GNU Fortran 12.2. If you wish to compile R packages which contain Fortran code, you may need to download the corresponding GNU Fortran compiler from https://mac.R-project.org/tools. 



> On Jul 6, 2023, at 11:50 AM, Spencer Graves <spencer.graves at effectivedefense.org> wrote:
> 
> Hello:
> 
> 
> 	  "R CMD build KFAS" under macOS 11.7.8 stopped with:
> 
> 
> using C compiler: ?Apple clang version 12.0.5 (clang-1205.0.22.9)?
> sh: gfortran: command not found
> using SDK: ?MacOSX11.3.sdk?
> gfortran -arch x86_64  -fPIC  -Wall -g -O2  -c  approx.f90 -o approx.o
> make: gfortran: No such file or directory
> make: *** [approx.o] Error 1
> ERROR: compilation failed for package ?KFAS'
> 
> 
> 	  My web search suggests several different ways to fix this problem, but I don't know which to try.
> 
> 
> 
> 	  Suggestions?
> 	  Thanks,
> 	  Spencer Graves
> 
> 
> p.s.  I have both "brew" and "port" installed.  I recently used "port" to upgrade another software package.  A web search suggested the following:
> 
> 
> sudo port install gcc48
> sudo port select -set gcc mp-gcc48
> 
> 
> 	  However, this comment was posted roughly 9 years ago.  Below please find sessionInfo().
> 
> 
> sessionInfo()
> R version 4.3.1 (2023-06-16)
> Platform: x86_64-apple-darwin20 (64-bit)
> Running under: macOS Big Sur 11.7.8
> 
> Matrix products: default
> BLAS: /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib 
> LAPACK: /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0
> 
> locale:
> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
> 
> time zone: America/Chicago
> tzcode source: internal
> 
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
> 
> loaded via a namespace (and not attached):
> [1] compiler_4.3.1  R6_2.5.1        magrittr_2.0.3  cli_3.6.1
> [5] tools_4.3.1     glue_1.6.2      rstudioapi_0.14 roxygen2_7.2.3
> [9] xml2_1.3.4      vctrs_0.6.2     stringi_1.7.12  knitr_1.42
> [13] xfun_0.39       stringr_1.5.0   lifecycle_1.0.3 rlang_1.1.1
> [17] purrr_1.0.1
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 


From v|ncentv@nhee@ @end|ng |rom gm@||@com  Thu Jul  6 09:54:20 2023
From: v|ncentv@nhee@ @end|ng |rom gm@||@com (Vincent van Hees)
Date: Thu, 6 Jul 2023 09:54:20 +0200
Subject: [R-pkg-devel] Warning 'as.data.frame.POSIXct()' is deprecated
Message-ID: <CALnEB16CAR28kTtkvVcEOQj3Tmyc_rwCjckwexnQsA3_ZkFPCg@mail.gmail.com>

Dear all,

I see the following warning in my package test results:

```
Warning
Direct call of 'as.data.frame.POSIXct()' is deprecated.  Use
'as.data.frame.vector()' or 'as.data.frame()' instead
```

The warning is not always there and I struggle to make it reproducible. I
have encountered it in both Ubuntu 22.04 and in Windows 11, in both R 4.3.0
and 4.3.1, in both RStudio and in an GitHub Actions environment (example
<https://github.com/wadpac/GGIR/actions/runs/5463862340/jobs/9945096566>).
The warning gives the impression that I am doing something that R no longer
supports. However, I am not using the command as.data.frame.POSIXct()
anywhere directly in my code.

When I dive into the code where the warnings occur I see patterns like:

```
now = Sys.time()
df = data.frame (time = seq(now, now + 10, by =1),  B  = 1:11)
```

(this is a simplification of for example:
https://github.com/wadpac/GGIR/blob/master/tests/testthat/test_read.myacc.csv.R
)

Does this mean I am discouraged from putting a vector with POSIXct values
in a data.frame?
If yes, what would be the recommended work around?

I have been trying to find documentation or online discussions about this
warning but no luck so far. I see R NEWS
<https://cran.r-project.org/doc/manuals/r-release/NEWS.html> mentions
updates to POSIXct related objects several times in the past year but those
seem to be different issues.

Best,

Vincent

	[[alternative HTML version deleted]]


From t|m@t@y|or @end|ng |rom h|ddene|eph@nt@@co@uk  Thu Jul  6 10:26:06 2023
From: t|m@t@y|or @end|ng |rom h|ddene|eph@nt@@co@uk (Tim Taylor)
Date: Thu, 6 Jul 2023 09:26:06 +0100
Subject: [R-pkg-devel] Warning 'as.data.frame.POSIXct()' is deprecated
In-Reply-To: <CALnEB16CAR28kTtkvVcEOQj3Tmyc_rwCjckwexnQsA3_ZkFPCg@mail.gmail.com>
References: <CALnEB16CAR28kTtkvVcEOQj3Tmyc_rwCjckwexnQsA3_ZkFPCg@mail.gmail.com>
Message-ID: <1e8bc3aa-1614-3cd4-f0db-01735c152e7f@hiddenelephants.co.uk>

This *may* be an issue in lapply.? Let's see what others day. Reprex below

Sys.setenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_" = TRUE)
dat <- Sys.Date()
as.data.frame(dat)
#>????????? dat
#> 1 2023-07-06
lapply(dat, as.data.frame)
#> Warning: Direct call of 'as.data.frame.Date()' is deprecated.? Use
#> 'as.data.frame.vector()' or 'as.data.frame()' instead
#> [[1]]
#>?????? X[[i]]
#> 1 2023-07-06

Tim

On 06/07/2023 08:54, Vincent van Hees wrote:
> Dear all,
>
> I see the following warning in my package test results:
>
> ```
> Warning
> Direct call of 'as.data.frame.POSIXct()' is deprecated.  Use
> 'as.data.frame.vector()' or 'as.data.frame()' instead
> ```
>
> The warning is not always there and I struggle to make it reproducible. I
> have encountered it in both Ubuntu 22.04 and in Windows 11, in both R 4.3.0
> and 4.3.1, in both RStudio and in an GitHub Actions environment (example
> <https://github.com/wadpac/GGIR/actions/runs/5463862340/jobs/9945096566>).
> The warning gives the impression that I am doing something that R no longer
> supports. However, I am not using the command as.data.frame.POSIXct()
> anywhere directly in my code.
>
> When I dive into the code where the warnings occur I see patterns like:
>
> ```
> now = Sys.time()
> df = data.frame (time = seq(now, now + 10, by =1),  B  = 1:11)
> ```
>
> (this is a simplification of for example:
> https://github.com/wadpac/GGIR/blob/master/tests/testthat/test_read.myacc.csv.R
> )
>
> Does this mean I am discouraged from putting a vector with POSIXct values
> in a data.frame?
> If yes, what would be the recommended work around?
>
> I have been trying to find documentation or online discussions about this
> warning but no luck so far. I see R NEWS
> <https://cran.r-project.org/doc/manuals/r-release/NEWS.html> mentions
> updates to POSIXct related objects several times in the past year but those
> seem to be different issues.
>
> Best,
>
> Vincent
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From t|m@t@y|or @end|ng |rom h|ddene|eph@nt@@co@uk  Thu Jul  6 10:41:45 2023
From: t|m@t@y|or @end|ng |rom h|ddene|eph@nt@@co@uk (Tim Taylor)
Date: Thu, 6 Jul 2023 09:41:45 +0100
Subject: [R-pkg-devel] Warning 'as.data.frame.POSIXct()' is deprecated
In-Reply-To: <1e8bc3aa-1614-3cd4-f0db-01735c152e7f@hiddenelephants.co.uk>
References: <CALnEB16CAR28kTtkvVcEOQj3Tmyc_rwCjckwexnQsA3_ZkFPCg@mail.gmail.com>
 <1e8bc3aa-1614-3cd4-f0db-01735c152e7f@hiddenelephants.co.uk>
Message-ID: <15178f56-0d28-e7fa-000f-959c00dd63ca@hiddenelephants.co.uk>

Apologies - I've not had enough caffeine just yet. The reprex below 
highlights the issue but I think the code which implemented the change 
*may* need tweaking not lapply.

Tim

On 06/07/2023 09:26, Tim Taylor wrote:
> This *may* be an issue in lapply.? Let's see what others day. Reprex 
> below
>
> Sys.setenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_" = TRUE)
> dat <- Sys.Date()
> as.data.frame(dat)
> #>????????? dat
> #> 1 2023-07-06
> lapply(dat, as.data.frame)
> #> Warning: Direct call of 'as.data.frame.Date()' is deprecated.? Use
> #> 'as.data.frame.vector()' or 'as.data.frame()' instead
> #> [[1]]
> #>?????? X[[i]]
> #> 1 2023-07-06
>
> Tim
>
> On 06/07/2023 08:54, Vincent van Hees wrote:
>> Dear all,
>>
>> I see the following warning in my package test results:
>>
>> ```
>> Warning
>> Direct call of 'as.data.frame.POSIXct()' is deprecated.? Use
>> 'as.data.frame.vector()' or 'as.data.frame()' instead
>> ```
>>
>> The warning is not always there and I struggle to make it 
>> reproducible. I
>> have encountered it in both Ubuntu 22.04 and in Windows 11, in both R 
>> 4.3.0
>> and 4.3.1, in both RStudio and in an GitHub Actions environment (example
>> <https://github.com/wadpac/GGIR/actions/runs/5463862340/jobs/9945096566>). 
>>
>> The warning gives the impression that I am doing something that R no 
>> longer
>> supports. However, I am not using the command as.data.frame.POSIXct()
>> anywhere directly in my code.
>>
>> When I dive into the code where the warnings occur I see patterns like:
>>
>> ```
>> now = Sys.time()
>> df = data.frame (time = seq(now, now + 10, by =1),? B? = 1:11)
>> ```
>>
>> (this is a simplification of for example:
>> https://github.com/wadpac/GGIR/blob/master/tests/testthat/test_read.myacc.csv.R 
>>
>> )
>>
>> Does this mean I am discouraged from putting a vector with POSIXct 
>> values
>> in a data.frame?
>> If yes, what would be the recommended work around?
>>
>> I have been trying to find documentation or online discussions about 
>> this
>> warning but no luck so far. I see R NEWS
>> <https://cran.r-project.org/doc/manuals/r-release/NEWS.html> mentions
>> updates to POSIXct related objects several times in the past year but 
>> those
>> seem to be different issues.
>>
>> Best,
>>
>> Vincent
>>
>> ????[[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From v|ncentv@nhee@ @end|ng |rom gm@||@com  Thu Jul  6 14:31:54 2023
From: v|ncentv@nhee@ @end|ng |rom gm@||@com (Vincent van Hees)
Date: Thu, 6 Jul 2023 14:31:54 +0200
Subject: [R-pkg-devel] Warning 'as.data.frame.POSIXct()' is deprecated
In-Reply-To: <15178f56-0d28-e7fa-000f-959c00dd63ca@hiddenelephants.co.uk>
References: <CALnEB16CAR28kTtkvVcEOQj3Tmyc_rwCjckwexnQsA3_ZkFPCg@mail.gmail.com>
 <1e8bc3aa-1614-3cd4-f0db-01735c152e7f@hiddenelephants.co.uk>
 <15178f56-0d28-e7fa-000f-959c00dd63ca@hiddenelephants.co.uk>
Message-ID: <CALnEB17VsNZC5U_usC+qxXgx4ngZFwGpO2W_Tg8L6WQ9rm83Qg@mail.gmail.com>

Thanks, in that case the REPLEX for the issue may need to be:

> remember = Sys.getenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_")
> Sys.setenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_" = TRUE)
> data.frame(time = Sys.time())
                 time
1 2023-07-06 14:29:37
> data.frame(time = as.POSIXlt(Sys.time()))
                 time
1 2023-07-06 14:29:37
Warning message:
Direct call of 'as.data.frame.POSIXct()' is deprecated.  Use
'as.data.frame.vector()' or 'as.data.frame()' instead
> Sys.setenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_" = remember)

Vincent

On Thu, 6 Jul 2023 at 10:41, Tim Taylor <tim.taylor at hiddenelephants.co.uk>
wrote:

> Apologies - I've not had enough caffeine just yet. The reprex below
> highlights the issue but I think the code which implemented the change
> *may* need tweaking not lapply.
>
> Tim
>
> On 06/07/2023 09:26, Tim Taylor wrote:
> > This *may* be an issue in lapply.  Let's see what others day. Reprex
> > below
> >
> > Sys.setenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_" = TRUE)
> > dat <- Sys.Date()
> > as.data.frame(dat)
> > #>          dat
> > #> 1 2023-07-06
> > lapply(dat, as.data.frame)
> > #> Warning: Direct call of 'as.data.frame.Date()' is deprecated.  Use
> > #> 'as.data.frame.vector()' or 'as.data.frame()' instead
> > #> [[1]]
> > #>       X[[i]]
> > #> 1 2023-07-06
> >
> > Tim
> >
> > On 06/07/2023 08:54, Vincent van Hees wrote:
> >> Dear all,
> >>
> >> I see the following warning in my package test results:
> >>
> >> ```
> >> Warning
> >> Direct call of 'as.data.frame.POSIXct()' is deprecated.  Use
> >> 'as.data.frame.vector()' or 'as.data.frame()' instead
> >> ```
> >>
> >> The warning is not always there and I struggle to make it
> >> reproducible. I
> >> have encountered it in both Ubuntu 22.04 and in Windows 11, in both R
> >> 4.3.0
> >> and 4.3.1, in both RStudio and in an GitHub Actions environment (example
> >> <https://github.com/wadpac/GGIR/actions/runs/5463862340/jobs/9945096566>).
>
> >>
> >> The warning gives the impression that I am doing something that R no
> >> longer
> >> supports. However, I am not using the command as.data.frame.POSIXct()
> >> anywhere directly in my code.
> >>
> >> When I dive into the code where the warnings occur I see patterns like:
> >>
> >> ```
> >> now = Sys.time()
> >> df = data.frame (time = seq(now, now + 10, by =1),  B  = 1:11)
> >> ```
> >>
> >> (this is a simplification of for example:
> >>
> https://github.com/wadpac/GGIR/blob/master/tests/testthat/test_read.myacc.csv.R
> >>
> >> )
> >>
> >> Does this mean I am discouraged from putting a vector with POSIXct
> >> values
> >> in a data.frame?
> >> If yes, what would be the recommended work around?
> >>
> >> I have been trying to find documentation or online discussions about
> >> this
> >> warning but no luck so far. I see R NEWS
> >> <https://cran.r-project.org/doc/manuals/r-release/NEWS.html> mentions
> >> updates to POSIXct related objects several times in the past year but
> >> those
> >> seem to be different issues.
> >>
> >> Best,
> >>
> >> Vincent
> >>
> >>     [[alternative HTML version deleted]]
> >>
> >> ______________________________________________
> >> R-package-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From edd @end|ng |rom deb|@n@org  Thu Jul  6 15:14:31 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Thu, 6 Jul 2023 08:14:31 -0500
Subject: [R-pkg-devel] Warning 'as.data.frame.POSIXct()' is deprecated
In-Reply-To: <CALnEB17VsNZC5U_usC+qxXgx4ngZFwGpO2W_Tg8L6WQ9rm83Qg@mail.gmail.com>
References: <CALnEB16CAR28kTtkvVcEOQj3Tmyc_rwCjckwexnQsA3_ZkFPCg@mail.gmail.com>
 <1e8bc3aa-1614-3cd4-f0db-01735c152e7f@hiddenelephants.co.uk>
 <15178f56-0d28-e7fa-000f-959c00dd63ca@hiddenelephants.co.uk>
 <CALnEB17VsNZC5U_usC+qxXgx4ngZFwGpO2W_Tg8L6WQ9rm83Qg@mail.gmail.com>
Message-ID: <25766.48695.704943.188152@rob.eddelbuettel.com>


On 6 July 2023 at 14:31, Vincent van Hees wrote:
| Thanks, in that case the REPLEX for the issue may need to be:
| 
| > remember = Sys.getenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_")
| > Sys.setenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_" = TRUE)
| > data.frame(time = Sys.time())
|                  time
| 1 2023-07-06 14:29:37
| > data.frame(time = as.POSIXlt(Sys.time()))
|                  time
| 1 2023-07-06 14:29:37
| Warning message:
| Direct call of 'as.data.frame.POSIXct()' is deprecated.  Use
| 'as.data.frame.vector()' or 'as.data.frame()' instead
| > Sys.setenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_" = remember)

Does _not_ happen in a plain R session.

Does happen when `library(tidyverse)` is executed first. May come from
`tibble` or `vectors`, I have a habit of not using those much. 

Dirk
 
| Vincent
| 
| On Thu, 6 Jul 2023 at 10:41, Tim Taylor <tim.taylor at hiddenelephants.co.uk>
| wrote:
| 
| > Apologies - I've not had enough caffeine just yet. The reprex below
| > highlights the issue but I think the code which implemented the change
| > *may* need tweaking not lapply.
| >
| > Tim
| >
| > On 06/07/2023 09:26, Tim Taylor wrote:
| > > This *may* be an issue in lapply.  Let's see what others day. Reprex
| > > below
| > >
| > > Sys.setenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_" = TRUE)
| > > dat <- Sys.Date()
| > > as.data.frame(dat)
| > > #>          dat
| > > #> 1 2023-07-06
| > > lapply(dat, as.data.frame)
| > > #> Warning: Direct call of 'as.data.frame.Date()' is deprecated.  Use
| > > #> 'as.data.frame.vector()' or 'as.data.frame()' instead
| > > #> [[1]]
| > > #>       X[[i]]
| > > #> 1 2023-07-06
| > >
| > > Tim
| > >
| > > On 06/07/2023 08:54, Vincent van Hees wrote:
| > >> Dear all,
| > >>
| > >> I see the following warning in my package test results:
| > >>
| > >> ```
| > >> Warning
| > >> Direct call of 'as.data.frame.POSIXct()' is deprecated.  Use
| > >> 'as.data.frame.vector()' or 'as.data.frame()' instead
| > >> ```
| > >>
| > >> The warning is not always there and I struggle to make it
| > >> reproducible. I
| > >> have encountered it in both Ubuntu 22.04 and in Windows 11, in both R
| > >> 4.3.0
| > >> and 4.3.1, in both RStudio and in an GitHub Actions environment (example
| > >> <https://github.com/wadpac/GGIR/actions/runs/5463862340/jobs/9945096566>).
| >
| > >>
| > >> The warning gives the impression that I am doing something that R no
| > >> longer
| > >> supports. However, I am not using the command as.data.frame.POSIXct()
| > >> anywhere directly in my code.
| > >>
| > >> When I dive into the code where the warnings occur I see patterns like:
| > >>
| > >> ```
| > >> now = Sys.time()
| > >> df = data.frame (time = seq(now, now + 10, by =1),  B  = 1:11)
| > >> ```
| > >>
| > >> (this is a simplification of for example:
| > >>
| > https://github.com/wadpac/GGIR/blob/master/tests/testthat/test_read.myacc.csv.R
| > >>
| > >> )
| > >>
| > >> Does this mean I am discouraged from putting a vector with POSIXct
| > >> values
| > >> in a data.frame?
| > >> If yes, what would be the recommended work around?
| > >>
| > >> I have been trying to find documentation or online discussions about
| > >> this
| > >> warning but no luck so far. I see R NEWS
| > >> <https://cran.r-project.org/doc/manuals/r-release/NEWS.html> mentions
| > >> updates to POSIXct related objects several times in the past year but
| > >> those
| > >> seem to be different issues.
| > >>
| > >> Best,
| > >>
| > >> Vincent
| > >>
| > >>     [[alternative HTML version deleted]]
| > >>
| > >> ______________________________________________
| > >> R-package-devel at r-project.org mailing list
| > >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
| > >
| > > ______________________________________________
| > > R-package-devel at r-project.org mailing list
| > > https://stat.ethz.ch/mailman/listinfo/r-package-devel
| >
| 
| 	[[alternative HTML version deleted]]
| 
| ______________________________________________
| R-package-devel at r-project.org mailing list
| https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From edd @end|ng |rom deb|@n@org  Thu Jul  6 15:22:24 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Thu, 6 Jul 2023 08:22:24 -0500
Subject: [R-pkg-devel] Warning 'as.data.frame.POSIXct()' is deprecated
In-Reply-To: <25766.48695.704943.188152@rob.eddelbuettel.com>
References: <CALnEB16CAR28kTtkvVcEOQj3Tmyc_rwCjckwexnQsA3_ZkFPCg@mail.gmail.com>
 <1e8bc3aa-1614-3cd4-f0db-01735c152e7f@hiddenelephants.co.uk>
 <15178f56-0d28-e7fa-000f-959c00dd63ca@hiddenelephants.co.uk>
 <CALnEB17VsNZC5U_usC+qxXgx4ngZFwGpO2W_Tg8L6WQ9rm83Qg@mail.gmail.com>
 <25766.48695.704943.188152@rob.eddelbuettel.com>
Message-ID: <25766.49168.981543.584124@rob.eddelbuettel.com>


On 6 July 2023 at 08:14, Dirk Eddelbuettel wrote:
| 
| On 6 July 2023 at 14:31, Vincent van Hees wrote:
| | Thanks, in that case the REPLEX for the issue may need to be:
| | 
| | > remember = Sys.getenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_")
| | > Sys.setenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_" = TRUE)
| | > data.frame(time = Sys.time())
| |                  time
| | 1 2023-07-06 14:29:37
| | > data.frame(time = as.POSIXlt(Sys.time()))
| |                  time
| | 1 2023-07-06 14:29:37
| | Warning message:
| | Direct call of 'as.data.frame.POSIXct()' is deprecated.  Use
| | 'as.data.frame.vector()' or 'as.data.frame()' instead
| | > Sys.setenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_" = remember)
| 
| Does _not_ happen in a plain R session.
| 
| Does happen when `library(tidyverse)` is executed first. May come from
| `tibble` or `vectors`, I have a habit of not using those much. 

Err, no, wait. I may have confused myself here jumping between R-devel and
R (release).  Please disregard, and apologies for the noise.

In any event, assigning a POSIXlt (which is an 11-element list) to a single
column is not a great idiom and we had the POSIXct conversion there for a
while IIRC.

But assigning a POSIXct to a column should always work, and I would be
surprised to find a minimally complete reproducible example showing that it
does not.  

Dirk

| Dirk
|  
| | Vincent
| | 
| | On Thu, 6 Jul 2023 at 10:41, Tim Taylor <tim.taylor at hiddenelephants.co.uk>
| | wrote:
| | 
| | > Apologies - I've not had enough caffeine just yet. The reprex below
| | > highlights the issue but I think the code which implemented the change
| | > *may* need tweaking not lapply.
| | >
| | > Tim
| | >
| | > On 06/07/2023 09:26, Tim Taylor wrote:
| | > > This *may* be an issue in lapply.  Let's see what others day. Reprex
| | > > below
| | > >
| | > > Sys.setenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_" = TRUE)
| | > > dat <- Sys.Date()
| | > > as.data.frame(dat)
| | > > #>          dat
| | > > #> 1 2023-07-06
| | > > lapply(dat, as.data.frame)
| | > > #> Warning: Direct call of 'as.data.frame.Date()' is deprecated.  Use
| | > > #> 'as.data.frame.vector()' or 'as.data.frame()' instead
| | > > #> [[1]]
| | > > #>       X[[i]]
| | > > #> 1 2023-07-06
| | > >
| | > > Tim
| | > >
| | > > On 06/07/2023 08:54, Vincent van Hees wrote:
| | > >> Dear all,
| | > >>
| | > >> I see the following warning in my package test results:
| | > >>
| | > >> ```
| | > >> Warning
| | > >> Direct call of 'as.data.frame.POSIXct()' is deprecated.  Use
| | > >> 'as.data.frame.vector()' or 'as.data.frame()' instead
| | > >> ```
| | > >>
| | > >> The warning is not always there and I struggle to make it
| | > >> reproducible. I
| | > >> have encountered it in both Ubuntu 22.04 and in Windows 11, in both R
| | > >> 4.3.0
| | > >> and 4.3.1, in both RStudio and in an GitHub Actions environment (example
| | > >> <https://github.com/wadpac/GGIR/actions/runs/5463862340/jobs/9945096566>).
| | >
| | > >>
| | > >> The warning gives the impression that I am doing something that R no
| | > >> longer
| | > >> supports. However, I am not using the command as.data.frame.POSIXct()
| | > >> anywhere directly in my code.
| | > >>
| | > >> When I dive into the code where the warnings occur I see patterns like:
| | > >>
| | > >> ```
| | > >> now = Sys.time()
| | > >> df = data.frame (time = seq(now, now + 10, by =1),  B  = 1:11)
| | > >> ```
| | > >>
| | > >> (this is a simplification of for example:
| | > >>
| | > https://github.com/wadpac/GGIR/blob/master/tests/testthat/test_read.myacc.csv.R
| | > >>
| | > >> )
| | > >>
| | > >> Does this mean I am discouraged from putting a vector with POSIXct
| | > >> values
| | > >> in a data.frame?
| | > >> If yes, what would be the recommended work around?
| | > >>
| | > >> I have been trying to find documentation or online discussions about
| | > >> this
| | > >> warning but no luck so far. I see R NEWS
| | > >> <https://cran.r-project.org/doc/manuals/r-release/NEWS.html> mentions
| | > >> updates to POSIXct related objects several times in the past year but
| | > >> those
| | > >> seem to be different issues.
| | > >>
| | > >> Best,
| | > >>
| | > >> Vincent
| | > >>
| | > >>     [[alternative HTML version deleted]]
| | > >>
| | > >> ______________________________________________
| | > >> R-package-devel at r-project.org mailing list
| | > >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
| | > >
| | > > ______________________________________________
| | > > R-package-devel at r-project.org mailing list
| | > > https://stat.ethz.ch/mailman/listinfo/r-package-devel
| | >
| | 
| | 	[[alternative HTML version deleted]]
| | 
| | ______________________________________________
| | R-package-devel at r-project.org mailing list
| | https://stat.ethz.ch/mailman/listinfo/r-package-devel
| 
| -- 
| dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From e@ @end|ng |rom enr|co@chum@nn@net  Thu Jul  6 15:42:12 2023
From: e@ @end|ng |rom enr|co@chum@nn@net (Enrico Schumann)
Date: Thu, 06 Jul 2023 15:42:12 +0200
Subject: [R-pkg-devel] Warning 'as.data.frame.POSIXct()' is deprecated
In-Reply-To: <CALnEB17VsNZC5U_usC+qxXgx4ngZFwGpO2W_Tg8L6WQ9rm83Qg@mail.gmail.com>
 (Vincent van Hees's message of "Thu, 6 Jul 2023 14:31:54 +0200")
References: <CALnEB16CAR28kTtkvVcEOQj3Tmyc_rwCjckwexnQsA3_ZkFPCg@mail.gmail.com>
 <1e8bc3aa-1614-3cd4-f0db-01735c152e7f@hiddenelephants.co.uk>
 <15178f56-0d28-e7fa-000f-959c00dd63ca@hiddenelephants.co.uk>
 <CALnEB17VsNZC5U_usC+qxXgx4ngZFwGpO2W_Tg8L6WQ9rm83Qg@mail.gmail.com>
Message-ID: <87wmzdcg23.fsf@aldus>

On Thu, 06 Jul 2023, Vincent van Hees writes:

> Thanks, in that case the REPLEX for the issue may need to be:
>
>> remember = Sys.getenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_")
>> Sys.setenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_" = TRUE)
>> data.frame(time = Sys.time())
>                  time
> 1 2023-07-06 14:29:37
>> data.frame(time = as.POSIXlt(Sys.time()))
>                  time
> 1 2023-07-06 14:29:37
> Warning message:
> Direct call of 'as.data.frame.POSIXct()' is deprecated.  Use
> 'as.data.frame.vector()' or 'as.data.frame()' instead
>> Sys.setenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_" = remember)


I think it happens because

    data.frame(<POSIXlt>)

calls 'as.data.frame.POSIXlt' (per its S3-class), which
in turn directly calls 'as.data.frame.POSIXct':

    ## as.data.frame.POSIXlt
    function (x, row.names = NULL, optional = FALSE, ...) 
    {
        value <- as.data.frame.POSIXct(as.POSIXct(x), row.names, 
            optional, ...)
        if (!optional) 
            names(value) <- deparse1(substitute(x))
        value
    }
    <environment: namespace:base>

Kind regards
    Enrico

> Vincent
>
> On Thu, 6 Jul 2023 at 10:41, Tim Taylor <tim.taylor at hiddenelephants.co.uk>
> wrote:
>
>> Apologies - I've not had enough caffeine just yet. The reprex below
>> highlights the issue but I think the code which implemented the change
>> *may* need tweaking not lapply.
>>
>> Tim
>>
>> On 06/07/2023 09:26, Tim Taylor wrote:
>> > This *may* be an issue in lapply.  Let's see what others day. Reprex
>> > below
>> >
>> > Sys.setenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_" = TRUE)
>> > dat <- Sys.Date()
>> > as.data.frame(dat)
>> > #>          dat
>> > #> 1 2023-07-06
>> > lapply(dat, as.data.frame)
>> > #> Warning: Direct call of 'as.data.frame.Date()' is deprecated.  Use
>> > #> 'as.data.frame.vector()' or 'as.data.frame()' instead
>> > #> [[1]]
>> > #>       X[[i]]
>> > #> 1 2023-07-06
>> >
>> > Tim
>> >
>> > On 06/07/2023 08:54, Vincent van Hees wrote:
>> >> Dear all,
>> >>
>> >> I see the following warning in my package test results:
>> >>
>> >> ```
>> >> Warning
>> >> Direct call of 'as.data.frame.POSIXct()' is deprecated.  Use
>> >> 'as.data.frame.vector()' or 'as.data.frame()' instead
>> >> ```
>> >>
>> >> The warning is not always there and I struggle to make it
>> >> reproducible. I
>> >> have encountered it in both Ubuntu 22.04 and in Windows 11, in both R
>> >> 4.3.0
>> >> and 4.3.1, in both RStudio and in an GitHub Actions environment (example
>> >> <https://github.com/wadpac/GGIR/actions/runs/5463862340/jobs/9945096566>).
>>
>> >>
>> >> The warning gives the impression that I am doing something that R no
>> >> longer
>> >> supports. However, I am not using the command as.data.frame.POSIXct()
>> >> anywhere directly in my code.
>> >>
>> >> When I dive into the code where the warnings occur I see patterns like:
>> >>
>> >> ```
>> >> now = Sys.time()
>> >> df = data.frame (time = seq(now, now + 10, by =1),  B  = 1:11)
>> >> ```
>> >>
>> >> (this is a simplification of for example:
>> >>
>> https://github.com/wadpac/GGIR/blob/master/tests/testthat/test_read.myacc.csv.R
>> >>
>> >> )
>> >>
>> >> Does this mean I am discouraged from putting a vector with POSIXct
>> >> values
>> >> in a data.frame?
>> >> If yes, what would be the recommended work around?
>> >>
>> >> I have been trying to find documentation or online discussions about
>> >> this
>> >> warning but no luck so far. I see R NEWS
>> >> <https://cran.r-project.org/doc/manuals/r-release/NEWS.html> mentions
>> >> updates to POSIXct related objects several times in the past year but
>> >> those
>> >> seem to be different issues.
>> >>
>> >> Best,
>> >>
>> >> Vincent
>> >>
>> >>     [[alternative HTML version deleted]]
>> >>
>> >> ______________________________________________
>> >> R-package-devel at r-project.org mailing list
>> >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> >
>> > ______________________________________________
>> > R-package-devel at r-project.org mailing list
>> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel

-- 
Enrico Schumann
Lucerne, Switzerland
http://enricoschumann.net


From v|ncentv@nhee@ @end|ng |rom gm@||@com  Thu Jul  6 15:54:22 2023
From: v|ncentv@nhee@ @end|ng |rom gm@||@com (Vincent van Hees)
Date: Thu, 6 Jul 2023 15:54:22 +0200
Subject: [R-pkg-devel] Warning 'as.data.frame.POSIXct()' is deprecated
In-Reply-To: <25766.49168.981543.584124@rob.eddelbuettel.com>
References: <CALnEB16CAR28kTtkvVcEOQj3Tmyc_rwCjckwexnQsA3_ZkFPCg@mail.gmail.com>
 <1e8bc3aa-1614-3cd4-f0db-01735c152e7f@hiddenelephants.co.uk>
 <15178f56-0d28-e7fa-000f-959c00dd63ca@hiddenelephants.co.uk>
 <CALnEB17VsNZC5U_usC+qxXgx4ngZFwGpO2W_Tg8L6WQ9rm83Qg@mail.gmail.com>
 <25766.48695.704943.188152@rob.eddelbuettel.com>
 <25766.49168.981543.584124@rob.eddelbuettel.com>
Message-ID: <CALnEB16wamBT7XFT_4ThGoDZ8byv8CVD5ZE2bzmVgiiDdGKjQA@mail.gmail.com>

Thanks Dirk,
My plan will then be to revise my package to avoid using POSIXlt when
POSIXct is also sufficient, given that I am storing timestamps in
data.frames a lot. In the few instances where POSIXlt may be necessary I
will avoid storing them in a data.frame.
Vincent

On Thu, 6 Jul 2023 at 15:22, Dirk Eddelbuettel <edd at debian.org> wrote:

>
> On 6 July 2023 at 08:14, Dirk Eddelbuettel wrote:
> |
> | On 6 July 2023 at 14:31, Vincent van Hees wrote:
> | | Thanks, in that case the REPLEX for the issue may need to be:
> | |
> | | > remember = Sys.getenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_")
> | | > Sys.setenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_" = TRUE)
> | | > data.frame(time = Sys.time())
> | |                  time
> | | 1 2023-07-06 14:29:37
> | | > data.frame(time = as.POSIXlt(Sys.time()))
> | |                  time
> | | 1 2023-07-06 14:29:37
> | | Warning message:
> | | Direct call of 'as.data.frame.POSIXct()' is deprecated.  Use
> | | 'as.data.frame.vector()' or 'as.data.frame()' instead
> | | > Sys.setenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_" = remember)
> |
> | Does _not_ happen in a plain R session.
> |
> | Does happen when `library(tidyverse)` is executed first. May come from
> | `tibble` or `vectors`, I have a habit of not using those much.
>
> Err, no, wait. I may have confused myself here jumping between R-devel and
> R (release).  Please disregard, and apologies for the noise.
>
> In any event, assigning a POSIXlt (which is an 11-element list) to a single
> column is not a great idiom and we had the POSIXct conversion there for a
> while IIRC.
>
> But assigning a POSIXct to a column should always work, and I would be
> surprised to find a minimally complete reproducible example showing that it
> does not.
>
> Dirk
>
> | Dirk
> |
> | | Vincent
> | |
> | | On Thu, 6 Jul 2023 at 10:41, Tim Taylor <
> tim.taylor at hiddenelephants.co.uk>
> | | wrote:
> | |
> | | > Apologies - I've not had enough caffeine just yet. The reprex below
> | | > highlights the issue but I think the code which implemented the
> change
> | | > *may* need tweaking not lapply.
> | | >
> | | > Tim
> | | >
> | | > On 06/07/2023 09:26, Tim Taylor wrote:
> | | > > This *may* be an issue in lapply.  Let's see what others day.
> Reprex
> | | > > below
> | | > >
> | | > > Sys.setenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_" = TRUE)
> | | > > dat <- Sys.Date()
> | | > > as.data.frame(dat)
> | | > > #>          dat
> | | > > #> 1 2023-07-06
> | | > > lapply(dat, as.data.frame)
> | | > > #> Warning: Direct call of 'as.data.frame.Date()' is deprecated.
> Use
> | | > > #> 'as.data.frame.vector()' or 'as.data.frame()' instead
> | | > > #> [[1]]
> | | > > #>       X[[i]]
> | | > > #> 1 2023-07-06
> | | > >
> | | > > Tim
> | | > >
> | | > > On 06/07/2023 08:54, Vincent van Hees wrote:
> | | > >> Dear all,
> | | > >>
> | | > >> I see the following warning in my package test results:
> | | > >>
> | | > >> ```
> | | > >> Warning
> | | > >> Direct call of 'as.data.frame.POSIXct()' is deprecated.  Use
> | | > >> 'as.data.frame.vector()' or 'as.data.frame()' instead
> | | > >> ```
> | | > >>
> | | > >> The warning is not always there and I struggle to make it
> | | > >> reproducible. I
> | | > >> have encountered it in both Ubuntu 22.04 and in Windows 11, in
> both R
> | | > >> 4.3.0
> | | > >> and 4.3.1, in both RStudio and in an GitHub Actions environment
> (example
> | | > >> <
> https://github.com/wadpac/GGIR/actions/runs/5463862340/jobs/9945096566>).
> | | >
> | | > >>
> | | > >> The warning gives the impression that I am doing something that R
> no
> | | > >> longer
> | | > >> supports. However, I am not using the command
> as.data.frame.POSIXct()
> | | > >> anywhere directly in my code.
> | | > >>
> | | > >> When I dive into the code where the warnings occur I see patterns
> like:
> | | > >>
> | | > >> ```
> | | > >> now = Sys.time()
> | | > >> df = data.frame (time = seq(now, now + 10, by =1),  B  = 1:11)
> | | > >> ```
> | | > >>
> | | > >> (this is a simplification of for example:
> | | > >>
> | | >
> https://github.com/wadpac/GGIR/blob/master/tests/testthat/test_read.myacc.csv.R
> | | > >>
> | | > >> )
> | | > >>
> | | > >> Does this mean I am discouraged from putting a vector with POSIXct
> | | > >> values
> | | > >> in a data.frame?
> | | > >> If yes, what would be the recommended work around?
> | | > >>
> | | > >> I have been trying to find documentation or online discussions
> about
> | | > >> this
> | | > >> warning but no luck so far. I see R NEWS
> | | > >> <https://cran.r-project.org/doc/manuals/r-release/NEWS.html>
> mentions
> | | > >> updates to POSIXct related objects several times in the past year
> but
> | | > >> those
> | | > >> seem to be different issues.
> | | > >>
> | | > >> Best,
> | | > >>
> | | > >> Vincent
> | | > >>
> | | > >>     [[alternative HTML version deleted]]
> | | > >>
> | | > >> ______________________________________________
> | | > >> R-package-devel at r-project.org mailing list
> | | > >> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> | | > >
> | | > > ______________________________________________
> | | > > R-package-devel at r-project.org mailing list
> | | > > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> | | >
> | |
> | |     [[alternative HTML version deleted]]
> | |
> | | ______________________________________________
> | | R-package-devel at r-project.org mailing list
> | | https://stat.ethz.ch/mailman/listinfo/r-package-devel
> |
> | --
> | dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>
> --
> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>

	[[alternative HTML version deleted]]


From t|m@t@y|or @end|ng |rom h|ddene|eph@nt@@co@uk  Thu Jul  6 16:11:41 2023
From: t|m@t@y|or @end|ng |rom h|ddene|eph@nt@@co@uk (Tim Taylor)
Date: Thu, 6 Jul 2023 15:11:41 +0100
Subject: [R-pkg-devel] Warning 'as.data.frame.POSIXct()' is deprecated
In-Reply-To: <87wmzdcg23.fsf@aldus>
References: <CALnEB16CAR28kTtkvVcEOQj3Tmyc_rwCjckwexnQsA3_ZkFPCg@mail.gmail.com>
 <1e8bc3aa-1614-3cd4-f0db-01735c152e7f@hiddenelephants.co.uk>
 <15178f56-0d28-e7fa-000f-959c00dd63ca@hiddenelephants.co.uk>
 <CALnEB17VsNZC5U_usC+qxXgx4ngZFwGpO2W_Tg8L6WQ9rm83Qg@mail.gmail.com>
 <87wmzdcg23.fsf@aldus>
Message-ID: <4d7bc097-0ea9-96b2-81ea-36203a7f7310@hiddenelephants.co.uk>

Ah yes ... and reading the as.data.frame help we see (emphasis mine):

"... Direct calls to as.data.frame.<class>() are still possible (*base 
package!*), for 12 atomic base classes, but will deprecated ..."

So it does seem that a lot of these warnings are triggered by base R and 
updating this code may be a work in progress.


A little tangential (but related) to this though is still the fact that 
we can trigger the warning with:

lapply(Sys.Date(), as.data.frame)

so I wonder if the code in base/R/zzz.R 
(https://github.com/wch/r-source/blob/9f1940663f902174034a01197e55fd17c767213a/src/library/base/R/zzz.R#L664-L686) 
does need tweaking?

At this stage this is probably more a question for R-devel though.

Tim


On 06/07/2023 14:42, Enrico Schumann wrote:
> On Thu, 06 Jul 2023, Vincent van Hees writes:
>
>> Thanks, in that case the REPLEX for the issue may need to be:
>>
>>> remember = Sys.getenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_")
>>> Sys.setenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_" = TRUE)
>>> data.frame(time = Sys.time())
>>                   time
>> 1 2023-07-06 14:29:37
>>> data.frame(time = as.POSIXlt(Sys.time()))
>>                   time
>> 1 2023-07-06 14:29:37
>> Warning message:
>> Direct call of 'as.data.frame.POSIXct()' is deprecated.  Use
>> 'as.data.frame.vector()' or 'as.data.frame()' instead
>>> Sys.setenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_" = remember)
>
> I think it happens because
>
>      data.frame(<POSIXlt>)
>
> calls 'as.data.frame.POSIXlt' (per its S3-class), which
> in turn directly calls 'as.data.frame.POSIXct':
>
>      ## as.data.frame.POSIXlt
>      function (x, row.names = NULL, optional = FALSE, ...)
>      {
>          value <- as.data.frame.POSIXct(as.POSIXct(x), row.names,
>              optional, ...)
>          if (!optional)
>              names(value) <- deparse1(substitute(x))
>          value
>      }
>      <environment: namespace:base>
>
> Kind regards
>      Enrico
>
>> Vincent
>>
>> On Thu, 6 Jul 2023 at 10:41, Tim Taylor <tim.taylor at hiddenelephants.co.uk>
>> wrote:
>>
>>> Apologies - I've not had enough caffeine just yet. The reprex below
>>> highlights the issue but I think the code which implemented the change
>>> *may* need tweaking not lapply.
>>>
>>> Tim
>>>
>>> On 06/07/2023 09:26, Tim Taylor wrote:
>>>> This *may* be an issue in lapply.  Let's see what others day. Reprex
>>>> below
>>>>
>>>> Sys.setenv("_R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_" = TRUE)
>>>> dat <- Sys.Date()
>>>> as.data.frame(dat)
>>>> #>          dat
>>>> #> 1 2023-07-06
>>>> lapply(dat, as.data.frame)
>>>> #> Warning: Direct call of 'as.data.frame.Date()' is deprecated.  Use
>>>> #> 'as.data.frame.vector()' or 'as.data.frame()' instead
>>>> #> [[1]]
>>>> #>       X[[i]]
>>>> #> 1 2023-07-06
>>>>
>>>> Tim
>>>>
>>>> On 06/07/2023 08:54, Vincent van Hees wrote:
>>>>> Dear all,
>>>>>
>>>>> I see the following warning in my package test results:
>>>>>
>>>>> ```
>>>>> Warning
>>>>> Direct call of 'as.data.frame.POSIXct()' is deprecated.  Use
>>>>> 'as.data.frame.vector()' or 'as.data.frame()' instead
>>>>> ```
>>>>>
>>>>> The warning is not always there and I struggle to make it
>>>>> reproducible. I
>>>>> have encountered it in both Ubuntu 22.04 and in Windows 11, in both R
>>>>> 4.3.0
>>>>> and 4.3.1, in both RStudio and in an GitHub Actions environment (example
>>>>> <https://github.com/wadpac/GGIR/actions/runs/5463862340/jobs/9945096566>).
>>>>> The warning gives the impression that I am doing something that R no
>>>>> longer
>>>>> supports. However, I am not using the command as.data.frame.POSIXct()
>>>>> anywhere directly in my code.
>>>>>
>>>>> When I dive into the code where the warnings occur I see patterns like:
>>>>>
>>>>> ```
>>>>> now = Sys.time()
>>>>> df = data.frame (time = seq(now, now + 10, by =1),  B  = 1:11)
>>>>> ```
>>>>>
>>>>> (this is a simplification of for example:
>>>>>
>>> https://github.com/wadpac/GGIR/blob/master/tests/testthat/test_read.myacc.csv.R
>>>>> )
>>>>>
>>>>> Does this mean I am discouraged from putting a vector with POSIXct
>>>>> values
>>>>> in a data.frame?
>>>>> If yes, what would be the recommended work around?
>>>>>
>>>>> I have been trying to find documentation or online discussions about
>>>>> this
>>>>> warning but no luck so far. I see R NEWS
>>>>> <https://cran.r-project.org/doc/manuals/r-release/NEWS.html> mentions
>>>>> updates to POSIXct related objects several times in the past year but
>>>>> those
>>>>> seem to be different issues.
>>>>>
>>>>> Best,
>>>>>
>>>>> Vincent
>>>>>
>>>>>      [[alternative HTML version deleted]]
>>>>>
>>>>> ______________________________________________
>>>>> R-package-devel at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> 	[[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From dewey @end|ng |rom dunn|ngton@c@  Thu Jul  6 20:22:26 2023
From: dewey @end|ng |rom dunn|ngton@c@ (Dewey Dunnington)
Date: Thu, 06 Jul 2023 15:22:26 -0300
Subject: [R-pkg-devel] Best practices for CRAN package using Go
Message-ID: <399846c80a91ae21c96942890fc8d3b8@dunnington.ca>

Hi all,

I'm wondering if there is any precedent for using Go in a CRAN R 
package. Go is a particularly good language for writing database drivers 
for the Arrow Database Connectivity framework [1][2] and - importantly - 
there are several active developers writing these drivers from which R 
users might be able to benefit (notably, the Snowflake driver, for which 
there isn't currently a readily-available R connector).

I've wrapped two of these drivers for R that seem to build and install 
on MacOS, Linux, and Windows [3][4]; however, I am not sure if the 
pattern I used is suitable for CRAN or whether these packages will have 
to be GitHub-only for the foreseeable future. The pattern is roughly the 
same as for Rust (build a static library and link it), and the build 
process has similar requirements (a `go` binary with which `go build` 
can be run; the build process downloads dependencies as it goes just 
like `cargo build`).

Thanks in advance for any insight!

Cheers,

-dewey

[1] https://arrow.apache.org/adbc
[2] https://cran.r-project.org/package=adbcdrivermanager
[3] 
https://github.com/apache/arrow-adbc/tree/main/r/adbcflightsql#readme
[4] 
https://github.com/apache/arrow-adbc/tree/main/r/adbcsnowflake#readme


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Fri Jul  7 09:15:36 2023
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Fri, 7 Jul 2023 09:15:36 +0200
Subject: [R-pkg-devel] Warning 'as.data.frame.POSIXct()' is deprecated
In-Reply-To: <4d7bc097-0ea9-96b2-81ea-36203a7f7310@hiddenelephants.co.uk>
References: <CALnEB16CAR28kTtkvVcEOQj3Tmyc_rwCjckwexnQsA3_ZkFPCg@mail.gmail.com>
 <1e8bc3aa-1614-3cd4-f0db-01735c152e7f@hiddenelephants.co.uk>
 <15178f56-0d28-e7fa-000f-959c00dd63ca@hiddenelephants.co.uk>
 <CALnEB17VsNZC5U_usC+qxXgx4ngZFwGpO2W_Tg8L6WQ9rm83Qg@mail.gmail.com>
 <87wmzdcg23.fsf@aldus>
 <4d7bc097-0ea9-96b2-81ea-36203a7f7310@hiddenelephants.co.uk>
Message-ID: <25767.48024.101154.596908@stat.math.ethz.ch>

>>>>> Tim Taylor 
>>>>>     on Thu, 6 Jul 2023 15:11:41 +0100 writes:

    > Ah yes ... and reading the as.data.frame help we see (emphasis mine):
    > "... Direct calls to as.data.frame.<class>() are still possible (*base 
    > package!*), for 12 atomic base classes, but will deprecated ..."

    > So it does seem that a lot of these warnings are triggered by base R and 
    > updating this code may be a work in progress.


    > A little tangential (but related) to this though is still the fact that 
    > we can trigger the warning with:

    > lapply(Sys.Date(), as.data.frame)

    > so I wonder if the code in base/R/zzz.R 
    > (https://github.com/wch/r-source/blob/9f1940663f902174034a01197e55fd17c767213a/src/library/base/R/zzz.R#L664-L686) 
    > does need tweaking?

    > At this stage this is probably more a question for R-devel though.

Indeed. ... and so I've sent a long reply to you, Enrico,
Vincent *AND* the R-devel mailing list.  In its archives you see it here

     https://stat.ethz.ch/pipermail/r-devel/2023-July/082725.html

With thanks to Vincent, Tim, Enrico, (and Mikael who started
"moving" this to R-devel, see there).

Martin

--
Martin Maechler
ETH Zurich   and   R Core team


From yut@n|@|n| @end|ng |rom gm@||@com  Mon Jul 10 10:24:37 2023
From: yut@n|@|n| @end|ng |rom gm@||@com (Hiroaki Yutani)
Date: Mon, 10 Jul 2023 17:24:37 +0900
Subject: [R-pkg-devel] Is it a wrong assumption that ${R_HOME}/lib always
 exists?
Message-ID: <CALyqOb-9xoBMDg_Xd69Gmju1Fj8rqoRAA2344giXKPiKq=Nr-A@mail.gmail.com>

Hi,

My package, string2path, using Rust fails on the CRAN check of MKL [1],
with an error that seems irrelevant to MKL. The error says:

>   thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value:
Os { code: 2, kind: NotFound, message: "No such file or directory" }',
/data/gannet/ripley/R/packages/tests-MKL/string2path/src/rust/vendor/libR-sys/build.rs:637
:40

The line 637 of build.rs of libR-sys crate is here [2]:

    r_paths.library.canonicalize().unwrap().display()

Compared to the previous version, which didn't experience such a failure,
.canonicalize() was added, and it seems this is the cause. This method
normalizes the path expression like R's normalizePath(), and it fails
because the path specified didn't exist.

libR-sys assumes the path to R's shared libraries is `${R_HOME}/lib` on
Unix-alike platforms. Is it possible that this path doesn't exist on the
MKL server? Actually, it compiles fine on the other Linux platforms, so I'm
wondering what's different there from the other servers.

Best,
Yutani

[1]: https://cran.r-project.org/web/checks/check_results_string2path.html
[2]: https://github.com/extendr/libR-sys/blob/v0.5.0/build.rs#L637C1-L637C58

	[[alternative HTML version deleted]]


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Mon Jul 10 10:51:46 2023
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Mon, 10 Jul 2023 10:51:46 +0200
Subject: [R-pkg-devel] 
 Is it a wrong assumption that ${R_HOME}/lib always exists?
In-Reply-To: <CALyqOb-9xoBMDg_Xd69Gmju1Fj8rqoRAA2344giXKPiKq=Nr-A@mail.gmail.com>
References: <CALyqOb-9xoBMDg_Xd69Gmju1Fj8rqoRAA2344giXKPiKq=Nr-A@mail.gmail.com>
Message-ID: <25771.50850.238743.106346@stat.math.ethz.ch>

>>>>> Hiroaki Yutani 
>>>>>     on Mon, 10 Jul 2023 17:24:37 +0900 writes:

[...............]

Short answer to your questsion (from the 'Subject') is :    NO !
For an example, see below:

    > libR-sys assumes the path to R's shared libraries is
    > `${R_HOME}/lib` on Unix-alike platforms.

In some configurations, R does not need *any* shared libraries,
and there,  $R_HOME/lib  does *not* exist.

E.g., I have one of my R-devel versions installed (on Fedora
Linux) with

        ../R/configure --with-blas=-lflexiblas 

using the nice, currently Fedora/Redhat-only "flexiblas"
approach, with which I can nicely switch the versions of BLAS
and Lapack libraries that R works with from within R.

As that version of R is not "shared", i.e., no libR.so , *and*
gets both its BLAS and Lapack libraries from "external" (not
from R), there's no need for a ./lib/  and so none is created.

Martin Maechler
ETH Zurich  and  R Core Team


    > Is it possible
    > that this path doesn't exist on the MKL server? 

    > Actually, it compiles fine on the other Linux platforms,
    > so I'm wondering what's different there from the other
    > servers.


    > Best, Yutani
    > 	[[alternative HTML version deleted]]


From yut@n|@|n| @end|ng |rom gm@||@com  Mon Jul 10 11:41:29 2023
From: yut@n|@|n| @end|ng |rom gm@||@com (Hiroaki Yutani)
Date: Mon, 10 Jul 2023 18:41:29 +0900
Subject: [R-pkg-devel] 
 Is it a wrong assumption that ${R_HOME}/lib always exists?
In-Reply-To: <25771.50850.238743.106346@stat.math.ethz.ch>
References: <CALyqOb-9xoBMDg_Xd69Gmju1Fj8rqoRAA2344giXKPiKq=Nr-A@mail.gmail.com>
 <25771.50850.238743.106346@stat.math.ethz.ch>
Message-ID: <CALyqOb8YQgfR1zDY68HHEwiRfR-50upVih6So-aSPy35mMHp7Q@mail.gmail.com>

Thanks so much for the quick response. It answered everything!
It was my mistake that I didn't consider these types of installations.
I'll fix my package as soon as I can.

Best,
Yutani

2023?7?10?(?) 17:51 Martin Maechler <maechler at stat.math.ethz.ch>:

> >>>>> Hiroaki Yutani
> >>>>>     on Mon, 10 Jul 2023 17:24:37 +0900 writes:
>
> [...............]
>
> Short answer to your questsion (from the 'Subject') is :    NO !
> For an example, see below:
>
>     > libR-sys assumes the path to R's shared libraries is
>     > `${R_HOME}/lib` on Unix-alike platforms.
>
> In some configurations, R does not need *any* shared libraries,
> and there,  $R_HOME/lib  does *not* exist.
>
> E.g., I have one of my R-devel versions installed (on Fedora
> Linux) with
>
>         ../R/configure --with-blas=-lflexiblas
>
> using the nice, currently Fedora/Redhat-only "flexiblas"
> approach, with which I can nicely switch the versions of BLAS
> and Lapack libraries that R works with from within R.
>
> As that version of R is not "shared", i.e., no libR.so , *and*
> gets both its BLAS and Lapack libraries from "external" (not
> from R), there's no need for a ./lib/  and so none is created.
>
> Martin Maechler
> ETH Zurich  and  R Core Team
>
>
>     > Is it possible
>     > that this path doesn't exist on the MKL server?
>
>     > Actually, it compiles fine on the other Linux platforms,
>     > so I'm wondering what's different there from the other
>     > servers.
>
>
>     > Best, Yutani
>     >   [[alternative HTML version deleted]]
>
>

	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Mon Jul 10 16:09:51 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Mon, 10 Jul 2023 17:09:51 +0300
Subject: [R-pkg-devel] Best practices for CRAN package using Go
In-Reply-To: <399846c80a91ae21c96942890fc8d3b8@dunnington.ca>
References: <399846c80a91ae21c96942890fc8d3b8@dunnington.ca>
Message-ID: <20230710170951.35efc274@arachnoid>

? Thu, 06 Jul 2023 15:22:26 -0300
Dewey Dunnington <dewey at dunnington.ca> ?????:

> I've wrapped two of these drivers for R that seem to build and
> install on MacOS, Linux, and Windows [3][4]; however, I am not sure
> if the pattern I used is suitable for CRAN or whether these packages
> will have to be GitHub-only for the foreseeable future.

There are a few parts to following the CRAN policy [*] regarding
external dependencies.

I think (but don't know for sure) that your package will not be allowed
to download Go by itself. The policy says: "Only as a last resort and
with the agreement of the CRAN team should a package download
pre-compiled software."

An already installed Go should be able to "first look to see if [a
dependency] is already installed and if so is of a suitable version"
when installing the dependencies of the Go part of the code. The go.mod
and go.sum files specify the exact versions and checksums of the
dependencies, which satisfies the requirement for fixed dependency
versions ("it is acceptable to download them as part of installation,
but do ensure that the download is of a fixed version rather than the
latest"), so your package seems to be fine in this respect.

One more thing: when bootstrapping the source package, can you run go
mod vendor [**] in order to bundle *all* the Go dependencies together
with the package? Is the resulting directory prohibitively large? Would
it satisfy the CRAN policy preference to "include the library sources
in the package and compile them as part of package installation"
without requiring Internet access? Unfortunately, I don't know enough
about Go to answer these questions myself. I think that a small bundle
of vendored Go code would be preferrable for CRAN but *not* preferrable
for packaging in a GNU/Linux distro like Debian where dynamic linking
(in the widest possible sense) is a strong preference.

-- 
Best regards,
Ivan

[*] https://cran.r-project.org/web/packages/policies.html

[**] https://go.dev/ref/mod#vendoring


From kry|ov@r00t @end|ng |rom gm@||@com  Mon Jul 10 16:30:34 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Mon, 10 Jul 2023 17:30:34 +0300
Subject: [R-pkg-devel] A replacement idiom for \value{\item{\var{...}}{}}
Message-ID: <20230710173034.1c241295@arachnoid>

Hello R-package-devel,

I've got a function that returns a data.frame. The columns (and their
names) of the return value are parametrised by the arguments of the
function. See, for example, the following function:

foo <- function(n = 10, out.M = c(2, 3, 5))
 as.data.frame(setNames(
  lapply(out.M, \(M) M * runif(n)),
  paste0('fooval.', out.M)
 ))

If I call it as foo(out.M = 1), I get a data.frame containing a column
named fooval.1. If I call it as foo(), I get columns fooval.2,
fooval.3, and fooval.5 instead.

I would like to document this relationship between the arguments and
the output value like so:

\arguments{
 \item{out.M}{Return the foo vectors for every M value given here.}
 % more arguments that behave in a similar manner
}
% ...
\value{
 A \code{data.frame} containing the following columns:

 \item{fooval.\var{m}}{
  The foo values, for every \var{m} in \code{out.M}.
 }
 % more parametrised output columns to follow
}

It turns out that \value{} description lists now escape their \item{}
arguments, preventing me from using \var{} markup there, but only in
plain text and HTML outputs. I think that the change occurred in the
last year or so; old versions of R process markup in \item{} arguments
even in \value{} description lists, but they have other Rd problems. I
understand the motivation of the change: in \arguments{} and \value{}
environments, it makes sense to typeset \item{} headings as \code{}.

Should I try to fix Rd2latex (or at least file a ticket) to escape the
\item{...} arguments in \value{} (but not \describe{}!) environments
too?

What would be a better Rd idiom for such function argument ? output
component relationships?

-- 
Best regards,
Ivan


From @eb@meyer @end|ng |rom |@u@de  Mon Jul 10 20:08:23 2023
From: @eb@meyer @end|ng |rom |@u@de (Sebastian Meyer)
Date: Mon, 10 Jul 2023 20:08:23 +0200
Subject: [R-pkg-devel] 
 A replacement idiom for \value{\item{\var{...}}{}}
In-Reply-To: <20230710173034.1c241295@arachnoid>
References: <20230710173034.1c241295@arachnoid>
Message-ID: <ca3da5f8-8b0f-6465-15d7-1c730e08ff0e@fau.de>

Am 10.07.23 um 16:30 schrieb Ivan Krylov:
> Hello R-package-devel,
> 
> I've got a function that returns a data.frame. The columns (and their
> names) of the return value are parametrised by the arguments of the
> function. See, for example, the following function:
> 
> foo <- function(n = 10, out.M = c(2, 3, 5))
>   as.data.frame(setNames(
>    lapply(out.M, \(M) M * runif(n)),
>    paste0('fooval.', out.M)
>   ))
> 
> If I call it as foo(out.M = 1), I get a data.frame containing a column
> named fooval.1. If I call it as foo(), I get columns fooval.2,
> fooval.3, and fooval.5 instead.
> 
> I would like to document this relationship between the arguments and
> the output value like so:
> 
> \arguments{
>   \item{out.M}{Return the foo vectors for every M value given here.}
>   % more arguments that behave in a similar manner
> }
> % ...
> \value{
>   A \code{data.frame} containing the following columns:
> 
>   \item{fooval.\var{m}}{
>    The foo values, for every \var{m} in \code{out.M}.
>   }
>   % more parametrised output columns to follow
> }
> 
> It turns out that \value{} description lists now escape their \item{}
> arguments, preventing me from using \var{} markup there, but only in
> plain text and HTML outputs. I think that the change occurred in the
> last year or so; old versions of R process markup in \item{} arguments
> even in \value{} description lists, but they have other Rd problems. I
> understand the motivation of the change: in \arguments{} and \value{}
> environments, it makes sense to typeset \item{} headings as \code{}.

Thank you for the report. AFAICS, this only affects HTML conversion in R 
 >= 4.3.0. It is an "internally" known limitation (see corresponding 
source code comment in Rd2HTML).

OTOH, WRE does not clearly specify that \item labels in \arguments or 
\value could actually contain any markup. That said, the referenced 
"Parsing Rd files" document 
(<https://developer.r-project.org/parseRd.pdf>) does tell us that 
\item{}{} arguments are parsed as LaTeX-like text, \dots probably being 
the most common example.

> 
> Should I try to fix Rd2latex (or at least file a ticket) to escape the
> \item{...} arguments in \value{} (but not \describe{}!) environments
> too?

Yes, I think this belongs to "R-devel" and a problem report in Bugzilla 
would be useful; the problem being that Rd markup in \item labels is 
handled inconsistently by the Rd converters. It is currently unclear to 
me, however, which one is at fault here. Your example at least provides 
one (admittedly quiet special) use case for LaTeX-like content in an 
\item label of the \value section.

> 
> What would be a better Rd idiom for such function argument ? output
> component relationships?
> 

I think a workaround that currently works for your use case is to use 
\code{fooval.\var{m}} as the label (i.e., wrapped inside \code).

Best regards,

	Sebastian Meyer


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Wed Jul 12 09:40:20 2023
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Wed, 12 Jul 2023 09:40:20 +0200
Subject: [R-pkg-devel] issues with CRAN incoming submissions / summer break
 announcement
Message-ID: <7c654dd5-721a-cdb6-f432-94b9ddbae176@statistik.tu-dortmund.de>

Dear developers,

CRAN submissions are currently partly not possible due to some 
infrastructure issues. Please so NOT contact us if you see "Unpacking 
failed. Please make sure the tar.gz was created with R CMD build. [...]".

In addition, processing the CRAN incoming queue of packages (CRAN 
pretest) is currently delayed by 2 days.

Both issues are known and CRAN sysadmins will work on the issues.


Note that this year's CRAN submission summer break will be from Jul 21, 
2023 to Aug 7, 2023.

Best,
Uwe Ligges
for the CRAN team


From ru@@e||@g@@|mond @end|ng |rom gm@||@com  Wed Jul 12 15:41:11 2023
From: ru@@e||@g@@|mond @end|ng |rom gm@||@com (Russell Almond)
Date: Wed, 12 Jul 2023 09:41:11 -0400
Subject: [R-pkg-devel] Package Load fails to find 3rd Party DLL
Message-ID: <7feb7697-be2f-7bf8-3e7c-4276a0cb69c8@gmail.com>

I have an R package (RNetica available at 
https://ralmond.r-universe.dev/RNetica and 
https://github.com/ralmond/RNetica) which links to a 3rd party library 
Netica.dll, so RNetica.dll (built from my C code) calls the 3rd party code.

The config.win script downloads Netica.dll and moves it into the 
libs/x64 directory, where it should get loaded when RNetica.dll is 
loaded.? However this is not happening:

Here is the relevant portion of the build log (build is on R-universe, 
but I think it is the same script as CRAN):

```

cp 
"/d/a/ralmond/ralmond/RNETIC~1.RCH/00_PKG~1/RNetica/src/Netica/Netica_API_5
10/lib64/Netica.dll" 
"D:/a/ralmond/ralmond/RNetica.Rcheck/00LOCK-RNetica/00new/R
Netica/libs/x64"
 ? cp 
"/d/a/ralmond/ralmond/RNETIC~1.RCH/00_PKG~1/RNetica/src/Netica/Netica_API_5
10/lib64/Netica.lib" 
"D:/a/ralmond/ralmond/RNetica.Rcheck/00LOCK-RNetica/00new/R
Netica/libs/x64"
 ? C:\rtools43\x86_64-w64-mingw32.static.posix\bin\nm.exe: 'NeticaDLL': 
No such f
ile
 ? gcc -shared -s -static-libgcc -o RNetica.dll tmp.def Cases.o 
Continuous.o Edge
s.o Experience.o Inference.o Networks.o Node.o Random.o Registration.o 
Session.o
 ?-L. 
-LD:/a/ralmond/ralmond/RNetica.Rcheck/00LOCK-RNetica/00new/RNetica/libs/x64
 ?-lNetica -LC:/rtools43/x86_64-w64-mingw32.static.posix/lib/x64 
-LC:/rtools43/x8
6_64-w64-mingw32.static.posix/lib -LC:/R/bin/x64 -lR
 ? C:\rtools43\x86_64-w64-mingw32.static.posix\bin/ld.exe: internal 
error: aborti
ng at ../../binutils-2.40/ld/ldlang.c:527 in compare_section
 ? C:\rtools43\x86_64-w64-mingw32.static.posix\bin/ld.exe: please report 
this bug
 ? collect2.exe: error: ld returned 1 exit status
```

A little bit of searching on the internet, indicates that Windows 
sometimes reports Dll A not found when Dll A needs Dll B and it can't 
find B.

This used to work under older versions of R and the tool chain and I 
don't think I've changed anything related to the C side of the code.

1) Have the paths changed, so I no longer should be moving the (64 bit 
version of the) 3rd party DLL to `libs/x64`?

2) Is there something that has changed with the mingw tools (nm.exe and 
ld.exe) which are changing things?

3) Is there a change on how win32 and win64 variants are handled (I have 
both 32 and 64 bit copies of the 3rd party DLL, I just need to move them 
to the right places).

Thanks for any enlightenment you can offer,

 ??? --Russell Almond




-- 
Russell Almond
https://ralmond.net/

	[[alternative HTML version deleted]]


From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Wed Jul 12 16:00:14 2023
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Wed, 12 Jul 2023 07:00:14 -0700
Subject: [R-pkg-devel] Package Load fails to find 3rd Party DLL
In-Reply-To: <7feb7697-be2f-7bf8-3e7c-4276a0cb69c8@gmail.com>
References: <7feb7697-be2f-7bf8-3e7c-4276a0cb69c8@gmail.com>
Message-ID: <02C6131C-2CD4-41FA-9B32-B0B74969F86E@dcn.davis.ca.us>

Use of precompiled code is not allowed in CRAN. This looks like your package needs to be distributed elsewhere... e.g. via GitHub.

On July 12, 2023 6:41:11 AM PDT, Russell Almond <russell.g.almond at gmail.com> wrote:
>I have an R package (RNetica available at 
>https://ralmond.r-universe.dev/RNetica and 
>https://github.com/ralmond/RNetica) which links to a 3rd party library 
>Netica.dll, so RNetica.dll (built from my C code) calls the 3rd party code.
>
>The config.win script downloads Netica.dll and moves it into the 
>libs/x64 directory, where it should get loaded when RNetica.dll is 
>loaded.? However this is not happening:
>
>Here is the relevant portion of the build log (build is on R-universe, 
>but I think it is the same script as CRAN):
>
>```
>
>cp 
>"/d/a/ralmond/ralmond/RNETIC~1.RCH/00_PKG~1/RNetica/src/Netica/Netica_API_5
>10/lib64/Netica.dll" 
>"D:/a/ralmond/ralmond/RNetica.Rcheck/00LOCK-RNetica/00new/R
>Netica/libs/x64"
> ? cp 
>"/d/a/ralmond/ralmond/RNETIC~1.RCH/00_PKG~1/RNetica/src/Netica/Netica_API_5
>10/lib64/Netica.lib" 
>"D:/a/ralmond/ralmond/RNetica.Rcheck/00LOCK-RNetica/00new/R
>Netica/libs/x64"
> ? C:\rtools43\x86_64-w64-mingw32.static.posix\bin\nm.exe: 'NeticaDLL': 
>No such f
>ile
> ? gcc -shared -s -static-libgcc -o RNetica.dll tmp.def Cases.o 
>Continuous.o Edge
>s.o Experience.o Inference.o Networks.o Node.o Random.o Registration.o 
>Session.o
> ?-L. 
>-LD:/a/ralmond/ralmond/RNetica.Rcheck/00LOCK-RNetica/00new/RNetica/libs/x64
> ?-lNetica -LC:/rtools43/x86_64-w64-mingw32.static.posix/lib/x64 
>-LC:/rtools43/x8
>6_64-w64-mingw32.static.posix/lib -LC:/R/bin/x64 -lR
> ? C:\rtools43\x86_64-w64-mingw32.static.posix\bin/ld.exe: internal 
>error: aborti
>ng at ../../binutils-2.40/ld/ldlang.c:527 in compare_section
> ? C:\rtools43\x86_64-w64-mingw32.static.posix\bin/ld.exe: please report 
>this bug
> ? collect2.exe: error: ld returned 1 exit status
>```
>
>A little bit of searching on the internet, indicates that Windows 
>sometimes reports Dll A not found when Dll A needs Dll B and it can't 
>find B.
>
>This used to work under older versions of R and the tool chain and I 
>don't think I've changed anything related to the C side of the code.
>
>1) Have the paths changed, so I no longer should be moving the (64 bit 
>version of the) 3rd party DLL to `libs/x64`?
>
>2) Is there something that has changed with the mingw tools (nm.exe and 
>ld.exe) which are changing things?
>
>3) Is there a change on how win32 and win64 variants are handled (I have 
>both 32 and 64 bit copies of the 3rd party DLL, I just need to move them 
>to the right places).
>
>Thanks for any enlightenment you can offer,
>
> ??? --Russell Almond
>
>
>
>

-- 
Sent from my phone. Please excuse my brevity.


From dewey @end|ng |rom dunn|ngton@c@  Wed Jul 12 16:36:30 2023
From: dewey @end|ng |rom dunn|ngton@c@ (Dewey Dunnington)
Date: Wed, 12 Jul 2023 11:36:30 -0300
Subject: [R-pkg-devel] Best practices for CRAN package using Go
In-Reply-To: <20230710170951.35efc274@arachnoid>
References: <399846c80a91ae21c96942890fc8d3b8@dunnington.ca>
 <20230710170951.35efc274@arachnoid>
Message-ID: <d4522c8b37d7b8e1a3441a50c3988246@dunnington.ca>

Thank you! It seems I needed the refresher on CRAN policy regarding 
downloading sources: it seems like the go.sum/go.mod provide sufficient 
checksumming to comply with the policy, as you noted (with `go mod 
vendor` as a backup if this turns out to not be acceptable). Downloading 
Go is probably out based on the advice for Rust that explicitly forbids 
this.

Cheers!

-dewey

On 2023-07-10 11:09, Ivan Krylov wrote:
> ? Thu, 06 Jul 2023 15:22:26 -0300
> Dewey Dunnington <dewey at dunnington.ca> ?????:
> 
>> I've wrapped two of these drivers for R that seem to build and
>> install on MacOS, Linux, and Windows [3][4]; however, I am not sure
>> if the pattern I used is suitable for CRAN or whether these packages
>> will have to be GitHub-only for the foreseeable future.
> 
> There are a few parts to following the CRAN policy [*] regarding
> external dependencies.
> 
> I think (but don't know for sure) that your package will not be allowed
> to download Go by itself. The policy says: "Only as a last resort and
> with the agreement of the CRAN team should a package download
> pre-compiled software."
> 
> An already installed Go should be able to "first look to see if [a
> dependency] is already installed and if so is of a suitable version"
> when installing the dependencies of the Go part of the code. The go.mod
> and go.sum files specify the exact versions and checksums of the
> dependencies, which satisfies the requirement for fixed dependency
> versions ("it is acceptable to download them as part of installation,
> but do ensure that the download is of a fixed version rather than the
> latest"), so your package seems to be fine in this respect.
> 
> One more thing: when bootstrapping the source package, can you run go
> mod vendor [**] in order to bundle *all* the Go dependencies together
> with the package? Is the resulting directory prohibitively large? Would
> it satisfy the CRAN policy preference to "include the library sources
> in the package and compile them as part of package installation"
> without requiring Internet access? Unfortunately, I don't know enough
> about Go to answer these questions myself. I think that a small bundle
> of vendored Go code would be preferrable for CRAN but *not* preferrable
> for packaging in a GNU/Linux distro like Debian where dynamic linking
> (in the widest possible sense) is a strong preference.
> 
> --
> Best regards,
> Ivan
> 
> [*] https://cran.r-project.org/web/packages/policies.html
> 
> [**] https://go.dev/ref/mod#vendoring


From kry|ov@r00t @end|ng |rom gm@||@com  Wed Jul 12 18:29:14 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Wed, 12 Jul 2023 19:29:14 +0300
Subject: [R-pkg-devel] 
 A replacement idiom for \value{\item{\var{...}}{}}
In-Reply-To: <ca3da5f8-8b0f-6465-15d7-1c730e08ff0e@fau.de>
References: <20230710173034.1c241295@arachnoid>
 <ca3da5f8-8b0f-6465-15d7-1c730e08ff0e@fau.de>
Message-ID: <20230712192914.589b233c@arachnoid>

Dear Sebastian,

Thank you for the advice!

On Mon, 10 Jul 2023 20:08:23 +0200
Sebastian Meyer <seb.meyer at fau.de> wrote:

> I think a workaround that currently works for your use case is to use 
> \code{fooval.\var{m}} as the label (i.e., wrapped inside \code).

The workaround works well, but I think I agree that \item{fooval.<m>}{}
is the the better option here. (I'm tempted, but I shouldn't use
\item{\code{fooval.\var{<m>}}}, because \code{} arguments should be
syntactically valid R.)

I will also use \var{<m>} outside the \item headers, at least for now.

-- 
Best regards,
Ivan


From @|mon@urb@nek @end|ng |rom R-project@org  Thu Jul 13 01:01:20 2023
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Thu, 13 Jul 2023 11:01:20 +1200
Subject: [R-pkg-devel] Best practices for CRAN package using Go
In-Reply-To: <d4522c8b37d7b8e1a3441a50c3988246@dunnington.ca>
References: <399846c80a91ae21c96942890fc8d3b8@dunnington.ca>
 <20230710170951.35efc274@arachnoid>
 <d4522c8b37d7b8e1a3441a50c3988246@dunnington.ca>
Message-ID: <F85C4A1A-75FA-46C1-B2FC-1EF1E1F6E4F3@R-project.org>

Dewey,

you will definitely need to include all the necessary sources for your package. You may want to have a look at the "Using Rust"[1] document linked from the CRAN policy. I think Go is quite similar to Rust in that sense so you should use the same approach, i.e. checking for system and user installations (for go the official location is /usr/local/go/bin/go and it may not be on the PATH), declaring Go version dependency and making sure your package has included all module dependency sources (i.e. don't use install-time module resolution/download).

If you need to include a large source tar ball that is not permissible on CRAN, I'd recommend using Zenodo.org since it is specifically designed to facilitate longevity and reproducibility (as opposed to Github or other transient storage that may disappear at any point).

All that said, you may run into the same issues as Rust (errors and segfaults due to limited interoperability of compilers) so use with care and test well. External bindings like Rust or Go are only provided on "best effort" basis.

Cheers,
Simon

[1] - https://cran.r-project.org/web/packages/using_rust.html

PS: go is now available on the CRAN macOS builder machines and the Mac Builder (https://mac.r-project.org/macbuilder/submit.html).


> On 13/07/2023, at 2:36 AM, Dewey Dunnington <dewey at dunnington.ca> wrote:
> 
> Thank you! It seems I needed the refresher on CRAN policy regarding downloading sources: it seems like the go.sum/go.mod provide sufficient checksumming to comply with the policy, as you noted (with `go mod vendor` as a backup if this turns out to not be acceptable). Downloading Go is probably out based on the advice for Rust that explicitly forbids this.
> 
> Cheers!
> 
> -dewey
> 
> On 2023-07-10 11:09, Ivan Krylov wrote:
>> ? Thu, 06 Jul 2023 15:22:26 -0300
>> Dewey Dunnington <dewey at dunnington.ca> ?????:
>>> I've wrapped two of these drivers for R that seem to build and
>>> install on MacOS, Linux, and Windows [3][4]; however, I am not sure
>>> if the pattern I used is suitable for CRAN or whether these packages
>>> will have to be GitHub-only for the foreseeable future.
>> There are a few parts to following the CRAN policy [*] regarding
>> external dependencies.
>> I think (but don't know for sure) that your package will not be allowed
>> to download Go by itself. The policy says: "Only as a last resort and
>> with the agreement of the CRAN team should a package download
>> pre-compiled software."
>> An already installed Go should be able to "first look to see if [a
>> dependency] is already installed and if so is of a suitable version"
>> when installing the dependencies of the Go part of the code. The go.mod
>> and go.sum files specify the exact versions and checksums of the
>> dependencies, which satisfies the requirement for fixed dependency
>> versions ("it is acceptable to download them as part of installation,
>> but do ensure that the download is of a fixed version rather than the
>> latest"), so your package seems to be fine in this respect.
>> One more thing: when bootstrapping the source package, can you run go
>> mod vendor [**] in order to bundle *all* the Go dependencies together
>> with the package? Is the resulting directory prohibitively large? Would
>> it satisfy the CRAN policy preference to "include the library sources
>> in the package and compile them as part of package installation"
>> without requiring Internet access? Unfortunately, I don't know enough
>> about Go to answer these questions myself. I think that a small bundle
>> of vendored Go code would be preferrable for CRAN but *not* preferrable
>> for packaging in a GNU/Linux distro like Debian where dynamic linking
>> (in the widest possible sense) is a strong preference.
>> --
>> Best regards,
>> Ivan
>> [*] https://cran.r-project.org/web/packages/policies.html
>> [**] https://go.dev/ref/mod#vendoring
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 


From edd @end|ng |rom deb|@n@org  Thu Jul 13 02:02:57 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Wed, 12 Jul 2023 19:02:57 -0500
Subject: [R-pkg-devel] macOS results not mirrored/updated at CRAN
Message-ID: <25775.16177.937585.974774@rob.eddelbuettel.com>


Simon,

It looks like some result mirroring / pushing from your machines to CRAN fell
over.  One of my packages, digest 0.6.33, arrived on CRAN about a week ago,
is built almost everywhere (apart from macOS_release_x86_64 stuck at 0.6.32)
but the result page still has nags from the 0.6.31 build for macOS release
and one of the oldrel builds.

Could you look into that?  And if it is "just" general issue at CRAN as per
Uwe's email earlier I will happily wait.  But it has been in this frozen /
partial update of results state for a few days now.

Thanks,  Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From yut@n|@|n| @end|ng |rom gm@||@com  Thu Jul 13 02:37:41 2023
From: yut@n|@|n| @end|ng |rom gm@||@com (Hiroaki Yutani)
Date: Thu, 13 Jul 2023 09:37:41 +0900
Subject: [R-pkg-devel] Feedback on "Using Rust in CRAN packages"
Message-ID: <CALyqOb__9-M_rEJ20dz3T07aNKP9_BRG25jdQ248WJA0ShuFCA@mail.gmail.com>

Hi,

I'm glad to see CRAN now has its official policy about Rust [1]!
It seems it probably needs some feedback from those who are familiar with
the Rust workflow. I'm not an expert, but let me leave some quick feedback.
This email is sent to the R-package-devel mailing list as well as to cran@~
so that we can publicly discuss.

It seems most of the concern is about how to make the build deterministic.
In this regard, the policy should encourage including "Cargo.lock" file
[2]. Cargo.lock is created on the first compile, and the resolved versions
of dependencies are recorded. As long as this file exists, the dependency
versions are locked to the ones in this file, except when the package
author explicitly updates the versions.

Cargo.lock also records the SHA256 checksums of the crates if they are from
crates.io, Rust's official crate registry. If the checksums don't match,
the build will fail with the following message:

    error: checksum for `foo v0.1.2` changed between lock files

    this could be indicative of a few possible errors:

        * the lock file is corrupt
        * a replacement source in use (e.g., a mirror) returned a different
checksum
        * the source itself may be corrupt in one way or another

    unable to verify that `foo v0.1.2` is the same as when the lockfile was
generated

For dependencies from Git repositories, Cargo.lock records the commit
hashes. So, the version of the source code (not the version of the crate)
is uniquely determined. That said, unlike cargo.io, it's possible that the
commit or the Git repository itself has disappeared at the time of
building, which makes the build fail. So, it might be reasonable the CRAN
policy prohibits the use of Git dependency unless the source code is
bundled. I have no strong opinion here.

Accordingly, I believe this sentence

> In practice maintainers have found it nigh-impossible to meet these
conditions whilst downloading as they have too little control.

is not quite true. More specifically, these things

> The standard way to download a Rust ?crate? is by its version number, and
these have been changed without changing their number.
> Downloading a ?crate? normally entails downloading its dependencies, and
that is done without fixing their version numbers

won't happen if the R package does include Cargo.lock because

- if the crate is from crates.io, "the version can never be overwritten,
and the code cannot be deleted" there [3]
- if the crate is from a Git repository, the commit hash is unique in its
nature. The version of the crate might be the same between commits, but a
git dependency is specified by the commit hash, not the version of the
crate.

I'm keen to know what problems the CRAN maintainers have experienced that
Cargo.lock cannot solve. I hope we can help somehow to improve the policy.

Best,
Yutani

[1]: https://cran.r-project.org/web/packages/using_rust.html
[2]: https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
[3]: https://doc.rust-lang.org/cargo/reference/publishing.html

	[[alternative HTML version deleted]]


From @|mon@urb@nek @end|ng |rom R-project@org  Thu Jul 13 04:34:47 2023
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Thu, 13 Jul 2023 14:34:47 +1200
Subject: [R-pkg-devel] Feedback on "Using Rust in CRAN packages"
In-Reply-To: <CALyqOb__9-M_rEJ20dz3T07aNKP9_BRG25jdQ248WJA0ShuFCA@mail.gmail.com>
References: <CALyqOb__9-M_rEJ20dz3T07aNKP9_BRG25jdQ248WJA0ShuFCA@mail.gmail.com>
Message-ID: <389056FE-88DD-4A07-8FD1-63E0F286B3A8@R-project.org>

Yutani,

I'm not quite sure your reading fully matches the intent of the policy. Cargo.lock is not sufficient, it is expected that the package will provide *all* the sources, it is not expected to use cargo to resolve them from random (possibly inaccessible) places. So the package author is expected to either include the sources in the package *or* (if prohibitive due to extreme size) have a release tar ball available at a fixed, secure, reliable location (I was recommending Zenodo.org for that reason - GitHub is neither fixed nor reliable by definition).

Based on that, I'm not sure I fully understand the scope of your proposal for improvement. Carlo.lock is certainly the first step that the package author should take in creating the distribution tar ball so you can fix the versions, but it is not sufficient as the next step involves collecting the related sources. We don't want R users to be involved in that can of worms (especially since the lock file itself provides no guarantees of accessibility of the components and we don't want to have to manually inspect it), the package should be ready to be used which is why it has to do that step first. Does that explain the intent better? (In general, the downloading at install time is actually a problem, because it's not uncommon to use R in environments that have no Internet access, but the download is a concession for extreme cases where the tar balls may be too big to make it part of the package, but it's yet another can of worms...).

Cheers,
Simon



> On 13/07/2023, at 12:37 PM, Hiroaki Yutani <yutani.ini at gmail.com> wrote:
> 
> Hi,
> 
> I'm glad to see CRAN now has its official policy about Rust [1]!
> It seems it probably needs some feedback from those who are familiar with
> the Rust workflow. I'm not an expert, but let me leave some quick feedback.
> This email is sent to the R-package-devel mailing list as well as to cran@~
> so that we can publicly discuss.
> 
> It seems most of the concern is about how to make the build deterministic.
> In this regard, the policy should encourage including "Cargo.lock" file
> [2]. Cargo.lock is created on the first compile, and the resolved versions
> of dependencies are recorded. As long as this file exists, the dependency
> versions are locked to the ones in this file, except when the package
> author explicitly updates the versions.
> 
> Cargo.lock also records the SHA256 checksums of the crates if they are from
> crates.io, Rust's official crate registry. If the checksums don't match,
> the build will fail with the following message:
> 
>    error: checksum for `foo v0.1.2` changed between lock files
> 
>    this could be indicative of a few possible errors:
> 
>        * the lock file is corrupt
>        * a replacement source in use (e.g., a mirror) returned a different
> checksum
>        * the source itself may be corrupt in one way or another
> 
>    unable to verify that `foo v0.1.2` is the same as when the lockfile was
> generated
> 
> For dependencies from Git repositories, Cargo.lock records the commit
> hashes. So, the version of the source code (not the version of the crate)
> is uniquely determined. That said, unlike cargo.io, it's possible that the
> commit or the Git repository itself has disappeared at the time of
> building, which makes the build fail. So, it might be reasonable the CRAN
> policy prohibits the use of Git dependency unless the source code is
> bundled. I have no strong opinion here.
> 
> Accordingly, I believe this sentence
> 
>> In practice maintainers have found it nigh-impossible to meet these
> conditions whilst downloading as they have too little control.
> 
> is not quite true. More specifically, these things
> 
>> The standard way to download a Rust ?crate? is by its version number, and
> these have been changed without changing their number.
>> Downloading a ?crate? normally entails downloading its dependencies, and
> that is done without fixing their version numbers
> 
> won't happen if the R package does include Cargo.lock because
> 
> - if the crate is from crates.io, "the version can never be overwritten,
> and the code cannot be deleted" there [3]
> - if the crate is from a Git repository, the commit hash is unique in its
> nature. The version of the crate might be the same between commits, but a
> git dependency is specified by the commit hash, not the version of the
> crate.
> 
> I'm keen to know what problems the CRAN maintainers have experienced that
> Cargo.lock cannot solve. I hope we can help somehow to improve the policy.
> 
> Best,
> Yutani
> 
> [1]: https://cran.r-project.org/web/packages/using_rust.html
> [2]: https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
> [3]: https://doc.rust-lang.org/cargo/reference/publishing.html
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 


From kev|nu@hey @end|ng |rom gm@||@com  Thu Jul 13 04:50:26 2023
From: kev|nu@hey @end|ng |rom gm@||@com (Kevin Ushey)
Date: Wed, 12 Jul 2023 19:50:26 -0700
Subject: [R-pkg-devel] Feedback on "Using Rust in CRAN packages"
In-Reply-To: <389056FE-88DD-4A07-8FD1-63E0F286B3A8@R-project.org>
References: <CALyqOb__9-M_rEJ20dz3T07aNKP9_BRG25jdQ248WJA0ShuFCA@mail.gmail.com>
 <389056FE-88DD-4A07-8FD1-63E0F286B3A8@R-project.org>
Message-ID: <CAJXgQP2qZkTEYg5=GQ3Ka9jVsAumsMq1rkZaWD+JgxBQmNKrww@mail.gmail.com>

Package authors could use 'cargo vendor' to include Rust crate sources
directly in their source R packages. Would that be acceptable?

Presumedly, the vendored sources would be built using the versions
specified in an accompanying Cargo.lock as well.

https://doc.rust-lang.org/cargo/commands/cargo-vendor.html


On Wed, Jul 12, 2023, 7:35 PM Simon Urbanek <simon.urbanek at r-project.org>
wrote:

> Yutani,
>
> I'm not quite sure your reading fully matches the intent of the policy.
> Cargo.lock is not sufficient, it is expected that the package will provide
> *all* the sources, it is not expected to use cargo to resolve them from
> random (possibly inaccessible) places. So the package author is expected to
> either include the sources in the package *or* (if prohibitive due to
> extreme size) have a release tar ball available at a fixed, secure,
> reliable location (I was recommending Zenodo.org for that reason - GitHub
> is neither fixed nor reliable by definition).
>
> Based on that, I'm not sure I fully understand the scope of your proposal
> for improvement. Carlo.lock is certainly the first step that the package
> author should take in creating the distribution tar ball so you can fix the
> versions, but it is not sufficient as the next step involves collecting the
> related sources. We don't want R users to be involved in that can of worms
> (especially since the lock file itself provides no guarantees of
> accessibility of the components and we don't want to have to manually
> inspect it), the package should be ready to be used which is why it has to
> do that step first. Does that explain the intent better? (In general, the
> downloading at install time is actually a problem, because it's not
> uncommon to use R in environments that have no Internet access, but the
> download is a concession for extreme cases where the tar balls may be too
> big to make it part of the package, but it's yet another can of worms...).
>
> Cheers,
> Simon
>
>
>
> > On 13/07/2023, at 12:37 PM, Hiroaki Yutani <yutani.ini at gmail.com> wrote:
> >
> > Hi,
> >
> > I'm glad to see CRAN now has its official policy about Rust [1]!
> > It seems it probably needs some feedback from those who are familiar with
> > the Rust workflow. I'm not an expert, but let me leave some quick
> feedback.
> > This email is sent to the R-package-devel mailing list as well as to
> cran@~
> > so that we can publicly discuss.
> >
> > It seems most of the concern is about how to make the build
> deterministic.
> > In this regard, the policy should encourage including "Cargo.lock" file
> > [2]. Cargo.lock is created on the first compile, and the resolved
> versions
> > of dependencies are recorded. As long as this file exists, the dependency
> > versions are locked to the ones in this file, except when the package
> > author explicitly updates the versions.
> >
> > Cargo.lock also records the SHA256 checksums of the crates if they are
> from
> > crates.io, Rust's official crate registry. If the checksums don't match,
> > the build will fail with the following message:
> >
> >    error: checksum for `foo v0.1.2` changed between lock files
> >
> >    this could be indicative of a few possible errors:
> >
> >        * the lock file is corrupt
> >        * a replacement source in use (e.g., a mirror) returned a
> different
> > checksum
> >        * the source itself may be corrupt in one way or another
> >
> >    unable to verify that `foo v0.1.2` is the same as when the lockfile
> was
> > generated
> >
> > For dependencies from Git repositories, Cargo.lock records the commit
> > hashes. So, the version of the source code (not the version of the crate)
> > is uniquely determined. That said, unlike cargo.io, it's possible that
> the
> > commit or the Git repository itself has disappeared at the time of
> > building, which makes the build fail. So, it might be reasonable the CRAN
> > policy prohibits the use of Git dependency unless the source code is
> > bundled. I have no strong opinion here.
> >
> > Accordingly, I believe this sentence
> >
> >> In practice maintainers have found it nigh-impossible to meet these
> > conditions whilst downloading as they have too little control.
> >
> > is not quite true. More specifically, these things
> >
> >> The standard way to download a Rust ?crate? is by its version number,
> and
> > these have been changed without changing their number.
> >> Downloading a ?crate? normally entails downloading its dependencies, and
> > that is done without fixing their version numbers
> >
> > won't happen if the R package does include Cargo.lock because
> >
> > - if the crate is from crates.io, "the version can never be overwritten,
> > and the code cannot be deleted" there [3]
> > - if the crate is from a Git repository, the commit hash is unique in its
> > nature. The version of the crate might be the same between commits, but a
> > git dependency is specified by the commit hash, not the version of the
> > crate.
> >
> > I'm keen to know what problems the CRAN maintainers have experienced that
> > Cargo.lock cannot solve. I hope we can help somehow to improve the
> policy.
> >
> > Best,
> > Yutani
> >
> > [1]: https://cran.r-project.org/web/packages/using_rust.html
> > [2]: https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
> > [3]: https://doc.rust-lang.org/cargo/reference/publishing.html
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From @|mon@urb@nek @end|ng |rom R-project@org  Thu Jul 13 04:57:57 2023
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Thu, 13 Jul 2023 14:57:57 +1200
Subject: [R-pkg-devel] Feedback on "Using Rust in CRAN packages"
In-Reply-To: <CAJXgQP2qZkTEYg5=GQ3Ka9jVsAumsMq1rkZaWD+JgxBQmNKrww@mail.gmail.com>
References: <CALyqOb__9-M_rEJ20dz3T07aNKP9_BRG25jdQ248WJA0ShuFCA@mail.gmail.com>
 <389056FE-88DD-4A07-8FD1-63E0F286B3A8@R-project.org>
 <CAJXgQP2qZkTEYg5=GQ3Ka9jVsAumsMq1rkZaWD+JgxBQmNKrww@mail.gmail.com>
Message-ID: <E4BF4174-3CF2-4DF4-8BAB-22019C5CBD53@R-project.org>



> On 13/07/2023, at 2:50 PM, Kevin Ushey <kevinushey at gmail.com> wrote:
> 
> Package authors could use 'cargo vendor' to include Rust crate sources directly in their source R packages. Would that be acceptable?
> 


Yes, that is exactly what was suggested in the original thread.

Cheers,
Simon



> Presumedly, the vendored sources would be built using the versions specified in an accompanying Cargo.lock as well.
> 
> https://doc.rust-lang.org/cargo/commands/cargo-vendor.html
> 
> 
> On Wed, Jul 12, 2023, 7:35 PM Simon Urbanek <simon.urbanek at r-project.org> wrote:
> Yutani,
> 
> I'm not quite sure your reading fully matches the intent of the policy. Cargo.lock is not sufficient, it is expected that the package will provide *all* the sources, it is not expected to use cargo to resolve them from random (possibly inaccessible) places. So the package author is expected to either include the sources in the package *or* (if prohibitive due to extreme size) have a release tar ball available at a fixed, secure, reliable location (I was recommending Zenodo.org for that reason - GitHub is neither fixed nor reliable by definition).
> 
> Based on that, I'm not sure I fully understand the scope of your proposal for improvement. Carlo.lock is certainly the first step that the package author should take in creating the distribution tar ball so you can fix the versions, but it is not sufficient as the next step involves collecting the related sources. We don't want R users to be involved in that can of worms (especially since the lock file itself provides no guarantees of accessibility of the components and we don't want to have to manually inspect it), the package should be ready to be used which is why it has to do that step first. Does that explain the intent better? (In general, the downloading at install time is actually a problem, because it's not uncommon to use R in environments that have no Internet access, but the download is a concession for extreme cases where the tar balls may be too big to make it part of the package, but it's yet another can of worms...).
> 
> Cheers,
> Simon
> 
> 
> 
> > On 13/07/2023, at 12:37 PM, Hiroaki Yutani <yutani.ini at gmail.com> wrote:
> > 
> > Hi,
> > 
> > I'm glad to see CRAN now has its official policy about Rust [1]!
> > It seems it probably needs some feedback from those who are familiar with
> > the Rust workflow. I'm not an expert, but let me leave some quick feedback.
> > This email is sent to the R-package-devel mailing list as well as to cran@~
> > so that we can publicly discuss.
> > 
> > It seems most of the concern is about how to make the build deterministic.
> > In this regard, the policy should encourage including "Cargo.lock" file
> > [2]. Cargo.lock is created on the first compile, and the resolved versions
> > of dependencies are recorded. As long as this file exists, the dependency
> > versions are locked to the ones in this file, except when the package
> > author explicitly updates the versions.
> > 
> > Cargo.lock also records the SHA256 checksums of the crates if they are from
> > crates.io, Rust's official crate registry. If the checksums don't match,
> > the build will fail with the following message:
> > 
> >    error: checksum for `foo v0.1.2` changed between lock files
> > 
> >    this could be indicative of a few possible errors:
> > 
> >        * the lock file is corrupt
> >        * a replacement source in use (e.g., a mirror) returned a different
> > checksum
> >        * the source itself may be corrupt in one way or another
> > 
> >    unable to verify that `foo v0.1.2` is the same as when the lockfile was
> > generated
> > 
> > For dependencies from Git repositories, Cargo.lock records the commit
> > hashes. So, the version of the source code (not the version of the crate)
> > is uniquely determined. That said, unlike cargo.io, it's possible that the
> > commit or the Git repository itself has disappeared at the time of
> > building, which makes the build fail. So, it might be reasonable the CRAN
> > policy prohibits the use of Git dependency unless the source code is
> > bundled. I have no strong opinion here.
> > 
> > Accordingly, I believe this sentence
> > 
> >> In practice maintainers have found it nigh-impossible to meet these
> > conditions whilst downloading as they have too little control.
> > 
> > is not quite true. More specifically, these things
> > 
> >> The standard way to download a Rust ?crate? is by its version number, and
> > these have been changed without changing their number.
> >> Downloading a ?crate? normally entails downloading its dependencies, and
> > that is done without fixing their version numbers
> > 
> > won't happen if the R package does include Cargo.lock because
> > 
> > - if the crate is from crates.io, "the version can never be overwritten,
> > and the code cannot be deleted" there [3]
> > - if the crate is from a Git repository, the commit hash is unique in its
> > nature. The version of the crate might be the same between commits, but a
> > git dependency is specified by the commit hash, not the version of the
> > crate.
> > 
> > I'm keen to know what problems the CRAN maintainers have experienced that
> > Cargo.lock cannot solve. I hope we can help somehow to improve the policy.
> > 
> > Best,
> > Yutani
> > 
> > [1]: https://cran.r-project.org/web/packages/using_rust.html
> > [2]: https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
> > [3]: https://doc.rust-lang.org/cargo/reference/publishing.html
> > 
> >       [[alternative HTML version deleted]]
> > 
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> > 
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From yut@n|@|n| @end|ng |rom gm@||@com  Thu Jul 13 05:08:25 2023
From: yut@n|@|n| @end|ng |rom gm@||@com (Hiroaki Yutani)
Date: Thu, 13 Jul 2023 12:08:25 +0900
Subject: [R-pkg-devel] Feedback on "Using Rust in CRAN packages"
In-Reply-To: <CAJXgQP2qZkTEYg5=GQ3Ka9jVsAumsMq1rkZaWD+JgxBQmNKrww@mail.gmail.com>
References: <CALyqOb__9-M_rEJ20dz3T07aNKP9_BRG25jdQ248WJA0ShuFCA@mail.gmail.com>
 <389056FE-88DD-4A07-8FD1-63E0F286B3A8@R-project.org>
 <CAJXgQP2qZkTEYg5=GQ3Ka9jVsAumsMq1rkZaWD+JgxBQmNKrww@mail.gmail.com>
Message-ID: <CALyqOb9=ivxKMGCB_9EMf-5bkPSGP30fY1dn6hzE-v-+o2ZXvg@mail.gmail.com>

I actually use cargo vendor.

https://github.com/yutannihilation/string2path/blob/main/src/rust/vendor.sh

One thing to note is that, prior to R 4.3.0, the vendored directories hit
the Windows' path limit so I had to put them into a TAR file. I haven't
tested on R 4.3.0, but probably this problem is solved by this improvement.
So, if you target only R >= 4.3, you can just cargo vendor.

https://blog.r-project.org/2023/03/07/path-length-limit-on-windows/index.html

Best,
Yutani

2023?7?13?(?) 11:50 Kevin Ushey <kevinushey at gmail.com>:

> Package authors could use 'cargo vendor' to include Rust crate sources
> directly in their source R packages. Would that be acceptable?
>
> Presumedly, the vendored sources would be built using the versions
> specified in an accompanying Cargo.lock as well.
>
> https://doc.rust-lang.org/cargo/commands/cargo-vendor.html
>
>
> On Wed, Jul 12, 2023, 7:35 PM Simon Urbanek <simon.urbanek at r-project.org>
> wrote:
>
>> Yutani,
>>
>> I'm not quite sure your reading fully matches the intent of the policy.
>> Cargo.lock is not sufficient, it is expected that the package will provide
>> *all* the sources, it is not expected to use cargo to resolve them from
>> random (possibly inaccessible) places. So the package author is expected to
>> either include the sources in the package *or* (if prohibitive due to
>> extreme size) have a release tar ball available at a fixed, secure,
>> reliable location (I was recommending Zenodo.org for that reason - GitHub
>> is neither fixed nor reliable by definition).
>>
>> Based on that, I'm not sure I fully understand the scope of your proposal
>> for improvement. Carlo.lock is certainly the first step that the package
>> author should take in creating the distribution tar ball so you can fix the
>> versions, but it is not sufficient as the next step involves collecting the
>> related sources. We don't want R users to be involved in that can of worms
>> (especially since the lock file itself provides no guarantees of
>> accessibility of the components and we don't want to have to manually
>> inspect it), the package should be ready to be used which is why it has to
>> do that step first. Does that explain the intent better? (In general, the
>> downloading at install time is actually a problem, because it's not
>> uncommon to use R in environments that have no Internet access, but the
>> download is a concession for extreme cases where the tar balls may be too
>> big to make it part of the package, but it's yet another can of worms...).
>>
>> Cheers,
>> Simon
>>
>>
>>
>> > On 13/07/2023, at 12:37 PM, Hiroaki Yutani <yutani.ini at gmail.com>
>> wrote:
>> >
>> > Hi,
>> >
>> > I'm glad to see CRAN now has its official policy about Rust [1]!
>> > It seems it probably needs some feedback from those who are familiar
>> with
>> > the Rust workflow. I'm not an expert, but let me leave some quick
>> feedback.
>> > This email is sent to the R-package-devel mailing list as well as to
>> cran@~
>> > so that we can publicly discuss.
>> >
>> > It seems most of the concern is about how to make the build
>> deterministic.
>> > In this regard, the policy should encourage including "Cargo.lock" file
>> > [2]. Cargo.lock is created on the first compile, and the resolved
>> versions
>> > of dependencies are recorded. As long as this file exists, the
>> dependency
>> > versions are locked to the ones in this file, except when the package
>> > author explicitly updates the versions.
>> >
>> > Cargo.lock also records the SHA256 checksums of the crates if they are
>> from
>> > crates.io, Rust's official crate registry. If the checksums don't
>> match,
>> > the build will fail with the following message:
>> >
>> >    error: checksum for `foo v0.1.2` changed between lock files
>> >
>> >    this could be indicative of a few possible errors:
>> >
>> >        * the lock file is corrupt
>> >        * a replacement source in use (e.g., a mirror) returned a
>> different
>> > checksum
>> >        * the source itself may be corrupt in one way or another
>> >
>> >    unable to verify that `foo v0.1.2` is the same as when the lockfile
>> was
>> > generated
>> >
>> > For dependencies from Git repositories, Cargo.lock records the commit
>> > hashes. So, the version of the source code (not the version of the
>> crate)
>> > is uniquely determined. That said, unlike cargo.io, it's possible that
>> the
>> > commit or the Git repository itself has disappeared at the time of
>> > building, which makes the build fail. So, it might be reasonable the
>> CRAN
>> > policy prohibits the use of Git dependency unless the source code is
>> > bundled. I have no strong opinion here.
>> >
>> > Accordingly, I believe this sentence
>> >
>> >> In practice maintainers have found it nigh-impossible to meet these
>> > conditions whilst downloading as they have too little control.
>> >
>> > is not quite true. More specifically, these things
>> >
>> >> The standard way to download a Rust ?crate? is by its version number,
>> and
>> > these have been changed without changing their number.
>> >> Downloading a ?crate? normally entails downloading its dependencies,
>> and
>> > that is done without fixing their version numbers
>> >
>> > won't happen if the R package does include Cargo.lock because
>> >
>> > - if the crate is from crates.io, "the version can never be
>> overwritten,
>> > and the code cannot be deleted" there [3]
>> > - if the crate is from a Git repository, the commit hash is unique in
>> its
>> > nature. The version of the crate might be the same between commits, but
>> a
>> > git dependency is specified by the commit hash, not the version of the
>> > crate.
>> >
>> > I'm keen to know what problems the CRAN maintainers have experienced
>> that
>> > Cargo.lock cannot solve. I hope we can help somehow to improve the
>> policy.
>> >
>> > Best,
>> > Yutani
>> >
>> > [1]: https://cran.r-project.org/web/packages/using_rust.html
>> > [2]:
>> https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
>> > [3]: https://doc.rust-lang.org/cargo/reference/publishing.html
>> >
>> >       [[alternative HTML version deleted]]
>> >
>> > ______________________________________________
>> > R-package-devel at r-project.org mailing list
>> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>> >
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>
>

	[[alternative HTML version deleted]]


From yut@n|@|n| @end|ng |rom gm@||@com  Thu Jul 13 05:34:26 2023
From: yut@n|@|n| @end|ng |rom gm@||@com (Hiroaki Yutani)
Date: Thu, 13 Jul 2023 12:34:26 +0900
Subject: [R-pkg-devel] Feedback on "Using Rust in CRAN packages"
In-Reply-To: <389056FE-88DD-4A07-8FD1-63E0F286B3A8@R-project.org>
References: <CALyqOb__9-M_rEJ20dz3T07aNKP9_BRG25jdQ248WJA0ShuFCA@mail.gmail.com>
 <389056FE-88DD-4A07-8FD1-63E0F286B3A8@R-project.org>
Message-ID: <CALyqOb8C24csrQHV+kVUhgL1=Lk0bFF=+dMBU-uG+TOiSFmfNg@mail.gmail.com>

Hi Simon,

Thanks for the response. I thought

> download a specific version from a secure site and check that the
download is the expected code by some sort of checksum

refers to the usual process that's done by Cargo automatically. If it's
not, I think the policy should have a clear explanation. It seems it's not
only me who wondered why this policy doesn't mention Cargo.lock at all.

> it is not expected to use cargo to resolve them from random (possibly
inaccessible) places

Yes, I agree with you. So, I suggested the possibility of forbidding the
Git dependency. Or, do you call crates.io, Rust's official repository,
"random places"? If CRAN cannot trust even the official one of Rust, why
does CRAN have Rust at all?

That said, I agree with your concern about downloading via the Internet in
general. Downloading is one of the common sources of failure. If you want
to prevent cargo from downloading any source files, you can enforce adding
--offline option to "cargo build". While the package author might feel
unhappy, I think this would make your intent a bit clearer.

Best,
Yutani


2023?7?13?(?) 11:34 Simon Urbanek <simon.urbanek at r-project.org>:

> Yutani,
>
> I'm not quite sure your reading fully matches the intent of the policy.
> Cargo.lock is not sufficient, it is expected that the package will provide
> *all* the sources, it is not expected to use cargo to resolve them from
> random (possibly inaccessible) places. So the package author is expected to
> either include the sources in the package *or* (if prohibitive due to
> extreme size) have a release tar ball available at a fixed, secure,
> reliable location (I was recommending Zenodo.org for that reason - GitHub
> is neither fixed nor reliable by definition).
>
> Based on that, I'm not sure I fully understand the scope of your proposal
> for improvement. Carlo.lock is certainly the first step that the package
> author should take in creating the distribution tar ball so you can fix the
> versions, but it is not sufficient as the next step involves collecting the
> related sources. We don't want R users to be involved in that can of worms
> (especially since the lock file itself provides no guarantees of
> accessibility of the components and we don't want to have to manually
> inspect it), the package should be ready to be used which is why it has to
> do that step first. Does that explain the intent better? (In general, the
> downloading at install time is actually a problem, because it's not
> uncommon to use R in environments that have no Internet access, but the
> download is a concession for extreme cases where the tar balls may be too
> big to make it part of the package, but it's yet another can of worms...).
>
> Cheers,
> Simon
>
>
>
> > On 13/07/2023, at 12:37 PM, Hiroaki Yutani <yutani.ini at gmail.com> wrote:
> >
> > Hi,
> >
> > I'm glad to see CRAN now has its official policy about Rust [1]!
> > It seems it probably needs some feedback from those who are familiar with
> > the Rust workflow. I'm not an expert, but let me leave some quick
> feedback.
> > This email is sent to the R-package-devel mailing list as well as to
> cran@~
> > so that we can publicly discuss.
> >
> > It seems most of the concern is about how to make the build
> deterministic.
> > In this regard, the policy should encourage including "Cargo.lock" file
> > [2]. Cargo.lock is created on the first compile, and the resolved
> versions
> > of dependencies are recorded. As long as this file exists, the dependency
> > versions are locked to the ones in this file, except when the package
> > author explicitly updates the versions.
> >
> > Cargo.lock also records the SHA256 checksums of the crates if they are
> from
> > crates.io, Rust's official crate registry. If the checksums don't match,
> > the build will fail with the following message:
> >
> >    error: checksum for `foo v0.1.2` changed between lock files
> >
> >    this could be indicative of a few possible errors:
> >
> >        * the lock file is corrupt
> >        * a replacement source in use (e.g., a mirror) returned a
> different
> > checksum
> >        * the source itself may be corrupt in one way or another
> >
> >    unable to verify that `foo v0.1.2` is the same as when the lockfile
> was
> > generated
> >
> > For dependencies from Git repositories, Cargo.lock records the commit
> > hashes. So, the version of the source code (not the version of the crate)
> > is uniquely determined. That said, unlike cargo.io, it's possible that
> the
> > commit or the Git repository itself has disappeared at the time of
> > building, which makes the build fail. So, it might be reasonable the CRAN
> > policy prohibits the use of Git dependency unless the source code is
> > bundled. I have no strong opinion here.
> >
> > Accordingly, I believe this sentence
> >
> >> In practice maintainers have found it nigh-impossible to meet these
> > conditions whilst downloading as they have too little control.
> >
> > is not quite true. More specifically, these things
> >
> >> The standard way to download a Rust ?crate? is by its version number,
> and
> > these have been changed without changing their number.
> >> Downloading a ?crate? normally entails downloading its dependencies, and
> > that is done without fixing their version numbers
> >
> > won't happen if the R package does include Cargo.lock because
> >
> > - if the crate is from crates.io, "the version can never be overwritten,
> > and the code cannot be deleted" there [3]
> > - if the crate is from a Git repository, the commit hash is unique in its
> > nature. The version of the crate might be the same between commits, but a
> > git dependency is specified by the commit hash, not the version of the
> > crate.
> >
> > I'm keen to know what problems the CRAN maintainers have experienced that
> > Cargo.lock cannot solve. I hope we can help somehow to improve the
> policy.
> >
> > Best,
> > Yutani
> >
> > [1]: https://cran.r-project.org/web/packages/using_rust.html
> > [2]: https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
> > [3]: https://doc.rust-lang.org/cargo/reference/publishing.html
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
>
>

	[[alternative HTML version deleted]]


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Thu Jul 13 09:08:41 2023
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Thu, 13 Jul 2023 09:08:41 +0200
Subject: [R-pkg-devel] Feedback on "Using Rust in CRAN packages"
In-Reply-To: <CALyqOb9=ivxKMGCB_9EMf-5bkPSGP30fY1dn6hzE-v-+o2ZXvg@mail.gmail.com>
References: <CALyqOb__9-M_rEJ20dz3T07aNKP9_BRG25jdQ248WJA0ShuFCA@mail.gmail.com>
 <389056FE-88DD-4A07-8FD1-63E0F286B3A8@R-project.org>
 <CAJXgQP2qZkTEYg5=GQ3Ka9jVsAumsMq1rkZaWD+JgxBQmNKrww@mail.gmail.com>
 <CALyqOb9=ivxKMGCB_9EMf-5bkPSGP30fY1dn6hzE-v-+o2ZXvg@mail.gmail.com>
Message-ID: <f3e44a51-a06e-6aa0-b685-ce5908837483@gmail.com>


On 7/13/23 05:08, Hiroaki Yutani wrote:
> I actually use cargo vendor.
>
> https://github.com/yutannihilation/string2path/blob/main/src/rust/vendor.sh
>
> One thing to note is that, prior to R 4.3.0, the vendored directories hit
> the Windows' path limit so I had to put them into a TAR file. I haven't
> tested on R 4.3.0, but probably this problem is solved by this improvement.
> So, if you target only R >= 4.3, you can just cargo vendor.
>
> https://blog.r-project.org/2023/03/07/path-length-limit-on-windows/index.html

I wouldn't rely on that long paths on Windows are supported even in R >= 
4.3, because it requires at least Windows 10 1607, and it needs to be 
enabled system-wide in Windows - so, users/admins have to do that, and 
it impacts also other applications. The blog post has more details and 
recommendations.

Best
Tomas

>
> Best,
> Yutani
>
> 2023?7?13?(?) 11:50 Kevin Ushey <kevinushey at gmail.com>:
>
>> Package authors could use 'cargo vendor' to include Rust crate sources
>> directly in their source R packages. Would that be acceptable?
>>
>> Presumedly, the vendored sources would be built using the versions
>> specified in an accompanying Cargo.lock as well.
>>
>> https://doc.rust-lang.org/cargo/commands/cargo-vendor.html
>>
>>
>> On Wed, Jul 12, 2023, 7:35 PM Simon Urbanek <simon.urbanek at r-project.org>
>> wrote:
>>
>>> Yutani,
>>>
>>> I'm not quite sure your reading fully matches the intent of the policy.
>>> Cargo.lock is not sufficient, it is expected that the package will provide
>>> *all* the sources, it is not expected to use cargo to resolve them from
>>> random (possibly inaccessible) places. So the package author is expected to
>>> either include the sources in the package *or* (if prohibitive due to
>>> extreme size) have a release tar ball available at a fixed, secure,
>>> reliable location (I was recommending Zenodo.org for that reason - GitHub
>>> is neither fixed nor reliable by definition).
>>>
>>> Based on that, I'm not sure I fully understand the scope of your proposal
>>> for improvement. Carlo.lock is certainly the first step that the package
>>> author should take in creating the distribution tar ball so you can fix the
>>> versions, but it is not sufficient as the next step involves collecting the
>>> related sources. We don't want R users to be involved in that can of worms
>>> (especially since the lock file itself provides no guarantees of
>>> accessibility of the components and we don't want to have to manually
>>> inspect it), the package should be ready to be used which is why it has to
>>> do that step first. Does that explain the intent better? (In general, the
>>> downloading at install time is actually a problem, because it's not
>>> uncommon to use R in environments that have no Internet access, but the
>>> download is a concession for extreme cases where the tar balls may be too
>>> big to make it part of the package, but it's yet another can of worms...).
>>>
>>> Cheers,
>>> Simon
>>>
>>>
>>>
>>>> On 13/07/2023, at 12:37 PM, Hiroaki Yutani <yutani.ini at gmail.com>
>>> wrote:
>>>> Hi,
>>>>
>>>> I'm glad to see CRAN now has its official policy about Rust [1]!
>>>> It seems it probably needs some feedback from those who are familiar
>>> with
>>>> the Rust workflow. I'm not an expert, but let me leave some quick
>>> feedback.
>>>> This email is sent to the R-package-devel mailing list as well as to
>>> cran@~
>>>> so that we can publicly discuss.
>>>>
>>>> It seems most of the concern is about how to make the build
>>> deterministic.
>>>> In this regard, the policy should encourage including "Cargo.lock" file
>>>> [2]. Cargo.lock is created on the first compile, and the resolved
>>> versions
>>>> of dependencies are recorded. As long as this file exists, the
>>> dependency
>>>> versions are locked to the ones in this file, except when the package
>>>> author explicitly updates the versions.
>>>>
>>>> Cargo.lock also records the SHA256 checksums of the crates if they are
>>> from
>>>> crates.io, Rust's official crate registry. If the checksums don't
>>> match,
>>>> the build will fail with the following message:
>>>>
>>>>     error: checksum for `foo v0.1.2` changed between lock files
>>>>
>>>>     this could be indicative of a few possible errors:
>>>>
>>>>         * the lock file is corrupt
>>>>         * a replacement source in use (e.g., a mirror) returned a
>>> different
>>>> checksum
>>>>         * the source itself may be corrupt in one way or another
>>>>
>>>>     unable to verify that `foo v0.1.2` is the same as when the lockfile
>>> was
>>>> generated
>>>>
>>>> For dependencies from Git repositories, Cargo.lock records the commit
>>>> hashes. So, the version of the source code (not the version of the
>>> crate)
>>>> is uniquely determined. That said, unlike cargo.io, it's possible that
>>> the
>>>> commit or the Git repository itself has disappeared at the time of
>>>> building, which makes the build fail. So, it might be reasonable the
>>> CRAN
>>>> policy prohibits the use of Git dependency unless the source code is
>>>> bundled. I have no strong opinion here.
>>>>
>>>> Accordingly, I believe this sentence
>>>>
>>>>> In practice maintainers have found it nigh-impossible to meet these
>>>> conditions whilst downloading as they have too little control.
>>>>
>>>> is not quite true. More specifically, these things
>>>>
>>>>> The standard way to download a Rust ?crate? is by its version number,
>>> and
>>>> these have been changed without changing their number.
>>>>> Downloading a ?crate? normally entails downloading its dependencies,
>>> and
>>>> that is done without fixing their version numbers
>>>>
>>>> won't happen if the R package does include Cargo.lock because
>>>>
>>>> - if the crate is from crates.io, "the version can never be
>>> overwritten,
>>>> and the code cannot be deleted" there [3]
>>>> - if the crate is from a Git repository, the commit hash is unique in
>>> its
>>>> nature. The version of the crate might be the same between commits, but
>>> a
>>>> git dependency is specified by the commit hash, not the version of the
>>>> crate.
>>>>
>>>> I'm keen to know what problems the CRAN maintainers have experienced
>>> that
>>>> Cargo.lock cannot solve. I hope we can help somehow to improve the
>>> policy.
>>>> Best,
>>>> Yutani
>>>>
>>>> [1]: https://cran.r-project.org/web/packages/using_rust.html
>>>> [2]:
>>> https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
>>>> [3]: https://doc.rust-lang.org/cargo/reference/publishing.html
>>>>
>>>>        [[alternative HTML version deleted]]
>>>>
>>>> ______________________________________________
>>>> R-package-devel at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>>
>>> ______________________________________________
>>> R-package-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From yut@n|@|n| @end|ng |rom gm@||@com  Thu Jul 13 09:16:08 2023
From: yut@n|@|n| @end|ng |rom gm@||@com (Hiroaki Yutani)
Date: Thu, 13 Jul 2023 16:16:08 +0900
Subject: [R-pkg-devel] Feedback on "Using Rust in CRAN packages"
In-Reply-To: <f3e44a51-a06e-6aa0-b685-ce5908837483@gmail.com>
References: <CALyqOb__9-M_rEJ20dz3T07aNKP9_BRG25jdQ248WJA0ShuFCA@mail.gmail.com>
 <389056FE-88DD-4A07-8FD1-63E0F286B3A8@R-project.org>
 <CAJXgQP2qZkTEYg5=GQ3Ka9jVsAumsMq1rkZaWD+JgxBQmNKrww@mail.gmail.com>
 <CALyqOb9=ivxKMGCB_9EMf-5bkPSGP30fY1dn6hzE-v-+o2ZXvg@mail.gmail.com>
 <f3e44a51-a06e-6aa0-b685-ce5908837483@gmail.com>
Message-ID: <CALyqOb-Jp3aCRKDiHuQ0s8uu0O0KwNYE3qcNkYS9q23OYyBe7g@mail.gmail.com>

Thank you for the correction. I see.

Best,
Yutani

2023?7?13?(?) 16:08 Tomas Kalibera <tomas.kalibera at gmail.com>:

>
> On 7/13/23 05:08, Hiroaki Yutani wrote:
> > I actually use cargo vendor.
> >
> >
> https://github.com/yutannihilation/string2path/blob/main/src/rust/vendor.sh
> >
> > One thing to note is that, prior to R 4.3.0, the vendored directories hit
> > the Windows' path limit so I had to put them into a TAR file. I haven't
> > tested on R 4.3.0, but probably this problem is solved by this
> improvement.
> > So, if you target only R >= 4.3, you can just cargo vendor.
> >
> >
> https://blog.r-project.org/2023/03/07/path-length-limit-on-windows/index.html
>
> I wouldn't rely on that long paths on Windows are supported even in R >=
> 4.3, because it requires at least Windows 10 1607, and it needs to be
> enabled system-wide in Windows - so, users/admins have to do that, and
> it impacts also other applications. The blog post has more details and
> recommendations.
>
> Best
> Tomas
>
> >
> > Best,
> > Yutani
> >
> > 2023?7?13?(?) 11:50 Kevin Ushey <kevinushey at gmail.com>:
> >
> >> Package authors could use 'cargo vendor' to include Rust crate sources
> >> directly in their source R packages. Would that be acceptable?
> >>
> >> Presumedly, the vendored sources would be built using the versions
> >> specified in an accompanying Cargo.lock as well.
> >>
> >> https://doc.rust-lang.org/cargo/commands/cargo-vendor.html
> >>
> >>
> >> On Wed, Jul 12, 2023, 7:35 PM Simon Urbanek <
> simon.urbanek at r-project.org>
> >> wrote:
> >>
> >>> Yutani,
> >>>
> >>> I'm not quite sure your reading fully matches the intent of the policy.
> >>> Cargo.lock is not sufficient, it is expected that the package will
> provide
> >>> *all* the sources, it is not expected to use cargo to resolve them from
> >>> random (possibly inaccessible) places. So the package author is
> expected to
> >>> either include the sources in the package *or* (if prohibitive due to
> >>> extreme size) have a release tar ball available at a fixed, secure,
> >>> reliable location (I was recommending Zenodo.org for that reason -
> GitHub
> >>> is neither fixed nor reliable by definition).
> >>>
> >>> Based on that, I'm not sure I fully understand the scope of your
> proposal
> >>> for improvement. Carlo.lock is certainly the first step that the
> package
> >>> author should take in creating the distribution tar ball so you can
> fix the
> >>> versions, but it is not sufficient as the next step involves
> collecting the
> >>> related sources. We don't want R users to be involved in that can of
> worms
> >>> (especially since the lock file itself provides no guarantees of
> >>> accessibility of the components and we don't want to have to manually
> >>> inspect it), the package should be ready to be used which is why it
> has to
> >>> do that step first. Does that explain the intent better? (In general,
> the
> >>> downloading at install time is actually a problem, because it's not
> >>> uncommon to use R in environments that have no Internet access, but the
> >>> download is a concession for extreme cases where the tar balls may be
> too
> >>> big to make it part of the package, but it's yet another can of
> worms...).
> >>>
> >>> Cheers,
> >>> Simon
> >>>
> >>>
> >>>
> >>>> On 13/07/2023, at 12:37 PM, Hiroaki Yutani <yutani.ini at gmail.com>
> >>> wrote:
> >>>> Hi,
> >>>>
> >>>> I'm glad to see CRAN now has its official policy about Rust [1]!
> >>>> It seems it probably needs some feedback from those who are familiar
> >>> with
> >>>> the Rust workflow. I'm not an expert, but let me leave some quick
> >>> feedback.
> >>>> This email is sent to the R-package-devel mailing list as well as to
> >>> cran@~
> >>>> so that we can publicly discuss.
> >>>>
> >>>> It seems most of the concern is about how to make the build
> >>> deterministic.
> >>>> In this regard, the policy should encourage including "Cargo.lock"
> file
> >>>> [2]. Cargo.lock is created on the first compile, and the resolved
> >>> versions
> >>>> of dependencies are recorded. As long as this file exists, the
> >>> dependency
> >>>> versions are locked to the ones in this file, except when the package
> >>>> author explicitly updates the versions.
> >>>>
> >>>> Cargo.lock also records the SHA256 checksums of the crates if they are
> >>> from
> >>>> crates.io, Rust's official crate registry. If the checksums don't
> >>> match,
> >>>> the build will fail with the following message:
> >>>>
> >>>>     error: checksum for `foo v0.1.2` changed between lock files
> >>>>
> >>>>     this could be indicative of a few possible errors:
> >>>>
> >>>>         * the lock file is corrupt
> >>>>         * a replacement source in use (e.g., a mirror) returned a
> >>> different
> >>>> checksum
> >>>>         * the source itself may be corrupt in one way or another
> >>>>
> >>>>     unable to verify that `foo v0.1.2` is the same as when the
> lockfile
> >>> was
> >>>> generated
> >>>>
> >>>> For dependencies from Git repositories, Cargo.lock records the commit
> >>>> hashes. So, the version of the source code (not the version of the
> >>> crate)
> >>>> is uniquely determined. That said, unlike cargo.io, it's possible
> that
> >>> the
> >>>> commit or the Git repository itself has disappeared at the time of
> >>>> building, which makes the build fail. So, it might be reasonable the
> >>> CRAN
> >>>> policy prohibits the use of Git dependency unless the source code is
> >>>> bundled. I have no strong opinion here.
> >>>>
> >>>> Accordingly, I believe this sentence
> >>>>
> >>>>> In practice maintainers have found it nigh-impossible to meet these
> >>>> conditions whilst downloading as they have too little control.
> >>>>
> >>>> is not quite true. More specifically, these things
> >>>>
> >>>>> The standard way to download a Rust ?crate? is by its version number,
> >>> and
> >>>> these have been changed without changing their number.
> >>>>> Downloading a ?crate? normally entails downloading its dependencies,
> >>> and
> >>>> that is done without fixing their version numbers
> >>>>
> >>>> won't happen if the R package does include Cargo.lock because
> >>>>
> >>>> - if the crate is from crates.io, "the version can never be
> >>> overwritten,
> >>>> and the code cannot be deleted" there [3]
> >>>> - if the crate is from a Git repository, the commit hash is unique in
> >>> its
> >>>> nature. The version of the crate might be the same between commits,
> but
> >>> a
> >>>> git dependency is specified by the commit hash, not the version of the
> >>>> crate.
> >>>>
> >>>> I'm keen to know what problems the CRAN maintainers have experienced
> >>> that
> >>>> Cargo.lock cannot solve. I hope we can help somehow to improve the
> >>> policy.
> >>>> Best,
> >>>> Yutani
> >>>>
> >>>> [1]: https://cran.r-project.org/web/packages/using_rust.html
> >>>> [2]:
> >>> https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
> >>>> [3]: https://doc.rust-lang.org/cargo/reference/publishing.html
> >>>>
> >>>>        [[alternative HTML version deleted]]
> >>>>
> >>>> ______________________________________________
> >>>> R-package-devel at r-project.org mailing list
> >>>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>>>
> >>> ______________________________________________
> >>> R-package-devel at r-project.org mailing list
> >>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >>>
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From h@w|ckh@m @end|ng |rom gm@||@com  Thu Jul 13 20:38:24 2023
From: h@w|ckh@m @end|ng |rom gm@||@com (Hadley Wickham)
Date: Thu, 13 Jul 2023 13:38:24 -0500
Subject: [R-pkg-devel] Feedback on "Using Rust in CRAN packages"
In-Reply-To: <CALyqOb8C24csrQHV+kVUhgL1=Lk0bFF=+dMBU-uG+TOiSFmfNg@mail.gmail.com>
References: <CALyqOb__9-M_rEJ20dz3T07aNKP9_BRG25jdQ248WJA0ShuFCA@mail.gmail.com>
 <389056FE-88DD-4A07-8FD1-63E0F286B3A8@R-project.org>
 <CALyqOb8C24csrQHV+kVUhgL1=Lk0bFF=+dMBU-uG+TOiSFmfNg@mail.gmail.com>
Message-ID: <CABdHhvH7aOaXrZ7Z02Ku4yQES86gTrEG2akEZiMa1qdDc7URbg@mail.gmail.com>

> > it is not expected to use cargo to resolve them from random (possibly
> inaccessible) places
>
> Yes, I agree with you. So, I suggested the possibility of forbidding the
> Git dependency. Or, do you call crates.io, Rust's official repository,
> "random places"? If CRAN cannot trust even the official one of Rust, why
> does CRAN have Rust at all?

It's worth noting that crates.io is supported by the Rust foundation
(https://foundation.rust-lang.org). Judging from their most recent
annual report (https://foundation.rust-lang.org/static/publications/annual-reports/annual-report-2022.pdf),
where they reported a $880k surplus, I think they're probably going to
be around for a while.

Hadley

-- 
http://hadley.nz


From @|mon@urb@nek @end|ng |rom R-project@org  Fri Jul 14 00:49:17 2023
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Fri, 14 Jul 2023 10:49:17 +1200
Subject: [R-pkg-devel] Feedback on "Using Rust in CRAN packages"
In-Reply-To: <CALyqOb8C24csrQHV+kVUhgL1=Lk0bFF=+dMBU-uG+TOiSFmfNg@mail.gmail.com>
References: <CALyqOb__9-M_rEJ20dz3T07aNKP9_BRG25jdQ248WJA0ShuFCA@mail.gmail.com>
 <389056FE-88DD-4A07-8FD1-63E0F286B3A8@R-project.org>
 <CALyqOb8C24csrQHV+kVUhgL1=Lk0bFF=+dMBU-uG+TOiSFmfNg@mail.gmail.com>
Message-ID: <06675DF4-6655-4AB5-B636-1AE443A0B651@R-project.org>

Yutani,

[moving back to the original thread, please don't cross-post]


> On Jul 13, 2023, at 3:34 PM, Hiroaki Yutani <yutani.ini at gmail.com> wrote:
> 
> Hi Simon,
> 
> Thanks for the response. I thought
> 
>> download a specific version from a secure site and check that the
> download is the expected code by some sort of checksum
> 
> refers to the usual process that's done by Cargo automatically. If it's
> not, I think the policy should have a clear explanation. It seems it's not
> only me who wondered why this policy doesn't mention Cargo.lock at all.
> 


as explained. The instructions will be updated to make it clear that "cargo vendor" is the right tool here.


>> it is not expected to use cargo to resolve them from random (possibly
> inaccessible) places
> 
> Yes, I agree with you. So, I suggested the possibility of forbidding the Git dependency. Or, do you call crates.io, Rust's official repository, "random places"?


No, as I understand it, the lock file can have arbitrary URLs, that's what I was referring to.


> If CRAN cannot trust even the official one of Rust, why does CRAN have Rust at all?
> 


I don't see the connection - if you downloaded something in the past it doesn't mean you will be able to do so in the future. And CRAN has Rust because it sounded like a good idea to allow packages to use it, but I can see that it opened a can of worms that we trying to tame here.


> That said, I agree with your concern about downloading via the Internet in
> general. Downloading is one of the common sources of failure. If you want
> to prevent cargo from downloading any source files, you can enforce adding
> --offline option to "cargo build". While the package author might feel
> unhappy, I think this would make your intent a bit clearer.
> 


I'm not a cargo expert, but I thought cargo build --offline is not needed if the dependencies are already vendored? If you think cargo users need more help with the steps, then feel free to propose what the instructions should say (we really assume that the authors know what they are doing).

Cheers,
Simon


From h@w|ckh@m @end|ng |rom gm@||@com  Fri Jul 14 01:19:46 2023
From: h@w|ckh@m @end|ng |rom gm@||@com (Hadley Wickham)
Date: Thu, 13 Jul 2023 18:19:46 -0500
Subject: [R-pkg-devel] Feedback on "Using Rust in CRAN packages"
In-Reply-To: <06675DF4-6655-4AB5-B636-1AE443A0B651@R-project.org>
References: <CALyqOb__9-M_rEJ20dz3T07aNKP9_BRG25jdQ248WJA0ShuFCA@mail.gmail.com>
 <389056FE-88DD-4A07-8FD1-63E0F286B3A8@R-project.org>
 <CALyqOb8C24csrQHV+kVUhgL1=Lk0bFF=+dMBU-uG+TOiSFmfNg@mail.gmail.com>
 <06675DF4-6655-4AB5-B636-1AE443A0B651@R-project.org>
Message-ID: <CABdHhvFTo4dWm-v0Hwuoba9uiKffVMZQNuAy+YM_RL3gWmbOHw@mail.gmail.com>

> > If CRAN cannot trust even the official one of Rust, why does CRAN have Rust at all?
> >
>
> I don't see the connection - if you downloaded something in the past it doesn't mean you will be able to do so in the future. And CRAN has Rust because it sounded like a good idea to allow packages to use it, but I can see that it opened a can of worms that we trying to tame here.

Can you give a bit more detail about your concerns here? Obviously
crates.io isn't some random site on the internet, it's the official
repository of the Rust language, supported by the corresponding
foundation for the language. To me that makes it feel very much like
CRAN, where we can assume if you downloaded something in the past, you
can download something in the future.

Hadley

-- 
http://hadley.nz


From murdoch@dunc@n @end|ng |rom gm@||@com  Fri Jul 14 01:49:35 2023
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Thu, 13 Jul 2023 19:49:35 -0400
Subject: [R-pkg-devel] Feedback on "Using Rust in CRAN packages"
In-Reply-To: <CABdHhvFTo4dWm-v0Hwuoba9uiKffVMZQNuAy+YM_RL3gWmbOHw@mail.gmail.com>
References: <CALyqOb__9-M_rEJ20dz3T07aNKP9_BRG25jdQ248WJA0ShuFCA@mail.gmail.com>
 <389056FE-88DD-4A07-8FD1-63E0F286B3A8@R-project.org>
 <CALyqOb8C24csrQHV+kVUhgL1=Lk0bFF=+dMBU-uG+TOiSFmfNg@mail.gmail.com>
 <06675DF4-6655-4AB5-B636-1AE443A0B651@R-project.org>
 <CABdHhvFTo4dWm-v0Hwuoba9uiKffVMZQNuAy+YM_RL3gWmbOHw@mail.gmail.com>
Message-ID: <a4db0a6d-c42a-6464-f59e-32d42327b1b3@gmail.com>

On 13/07/2023 7:19 p.m., Hadley Wickham wrote:
>>> If CRAN cannot trust even the official one of Rust, why does CRAN have Rust at all?
>>>
>>
>> I don't see the connection - if you downloaded something in the past it doesn't mean you will be able to do so in the future. And CRAN has Rust because it sounded like a good idea to allow packages to use it, but I can see that it opened a can of worms that we trying to tame here.
> 
> Can you give a bit more detail about your concerns here? Obviously
> crates.io isn't some random site on the internet, it's the official
> repository of the Rust language, supported by the corresponding
> foundation for the language. To me that makes it feel very much like
> CRAN, where we can assume if you downloaded something in the past, you
> can download something in the future.

That last statement is true, but also sort of false: you should be able 
to download the same version of the package that you downloaded last 
time, but you might not be able to download a version of the package 
that works with the current version of R.

Duncan Murdoch


From @|mon@urb@nek @end|ng |rom R-project@org  Fri Jul 14 02:06:21 2023
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Fri, 14 Jul 2023 12:06:21 +1200
Subject: [R-pkg-devel] Feedback on "Using Rust in CRAN packages"
In-Reply-To: <CABdHhvFTo4dWm-v0Hwuoba9uiKffVMZQNuAy+YM_RL3gWmbOHw@mail.gmail.com>
References: <CALyqOb__9-M_rEJ20dz3T07aNKP9_BRG25jdQ248WJA0ShuFCA@mail.gmail.com>
 <389056FE-88DD-4A07-8FD1-63E0F286B3A8@R-project.org>
 <CALyqOb8C24csrQHV+kVUhgL1=Lk0bFF=+dMBU-uG+TOiSFmfNg@mail.gmail.com>
 <06675DF4-6655-4AB5-B636-1AE443A0B651@R-project.org>
 <CABdHhvFTo4dWm-v0Hwuoba9uiKffVMZQNuAy+YM_RL3gWmbOHw@mail.gmail.com>
Message-ID: <6EAE6A61-F6DB-4747-8D00-07DA4A3AE39F@R-project.org>



> On Jul 14, 2023, at 11:19 AM, Hadley Wickham <h.wickham at gmail.com> wrote:
> 
>>> If CRAN cannot trust even the official one of Rust, why does CRAN have Rust at all?
>>> 
>> 
>> I don't see the connection - if you downloaded something in the past it doesn't mean you will be able to do so in the future. And CRAN has Rust because it sounded like a good idea to allow packages to use it, but I can see that it opened a can of worms that we trying to tame here.
> 
> Can you give a bit more detail about your concerns here? Obviously
> crates.io isn't some random site on the internet, it's the official
> repository of the Rust language, supported by the corresponding
> foundation for the language. To me that makes it feel very much like
> CRAN, where we can assume if you downloaded something in the past, you
> can download something in the future.
> 

I was just responding to Yutani's question why we downloaded the Rust compilers on CRAN at all. This has really nothing to do with the previous discussion which is why I did say "I don't see the connection". Also I wasn't talking about crates.io anywhere in my responses in this thread. The only thing I wanted to discuss here was that I think the existing Rust model  ("vendor" into the package sources) seems like a good one to apply to Go, but that got somehow hijacked...

Cheers,
Simon


From edd @end|ng |rom deb|@n@org  Fri Jul 14 02:18:56 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Thu, 13 Jul 2023 19:18:56 -0500
Subject: [R-pkg-devel] Feedback on "Using Rust in CRAN packages"
In-Reply-To: <CABdHhvFTo4dWm-v0Hwuoba9uiKffVMZQNuAy+YM_RL3gWmbOHw@mail.gmail.com>
References: <CALyqOb__9-M_rEJ20dz3T07aNKP9_BRG25jdQ248WJA0ShuFCA@mail.gmail.com>
 <389056FE-88DD-4A07-8FD1-63E0F286B3A8@R-project.org>
 <CALyqOb8C24csrQHV+kVUhgL1=Lk0bFF=+dMBU-uG+TOiSFmfNg@mail.gmail.com>
 <06675DF4-6655-4AB5-B636-1AE443A0B651@R-project.org>
 <CABdHhvFTo4dWm-v0Hwuoba9uiKffVMZQNuAy+YM_RL3gWmbOHw@mail.gmail.com>
Message-ID: <25776.38000.34041.495290@rob.eddelbuettel.com>


The concerns over github going away (!!) (or altering references, tags,
releases, ...) may be somewhat alleviated by Software Heritage [1] covering
and 'preserving' it.  FWIW I briefly spoke about that iniative and a possible
CRAN connection at useR! in Toulouse four years ago [2].

I think I understand where CRAN is coming from. Builds for Debian have the
same requirements of 'everythin all at once better be local'.  Sadly what I
see in day to day life (hello cmake, hello vcpkg) moves firmly the other way.
We shall see how it all shakes out.

I would be very much in favor of workable rust (and then go, and so on)
solution. 

Dirk

[1] https://www.softwareheritage.org/
[2] https://dirk.eddelbuettel.com/papers/useR2019_swh_cran_talk.pdf

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From yut@n|@|n| @end|ng |rom gm@||@com  Fri Jul 14 02:58:20 2023
From: yut@n|@|n| @end|ng |rom gm@||@com (Hiroaki Yutani)
Date: Fri, 14 Jul 2023 09:58:20 +0900
Subject: [R-pkg-devel] Feedback on "Using Rust in CRAN packages"
In-Reply-To: <6EAE6A61-F6DB-4747-8D00-07DA4A3AE39F@R-project.org>
References: <CALyqOb__9-M_rEJ20dz3T07aNKP9_BRG25jdQ248WJA0ShuFCA@mail.gmail.com>
 <389056FE-88DD-4A07-8FD1-63E0F286B3A8@R-project.org>
 <CALyqOb8C24csrQHV+kVUhgL1=Lk0bFF=+dMBU-uG+TOiSFmfNg@mail.gmail.com>
 <06675DF4-6655-4AB5-B636-1AE443A0B651@R-project.org>
 <CABdHhvFTo4dWm-v0Hwuoba9uiKffVMZQNuAy+YM_RL3gWmbOHw@mail.gmail.com>
 <6EAE6A61-F6DB-4747-8D00-07DA4A3AE39F@R-project.org>
Message-ID: <CALyqOb9-uKX3P1xeic9yKxxHBOuiqjtbKeBD8S2AzQUfKMRzHA@mail.gmail.com>

Simin,

Sorry that my question was not clear. Let me clarify.

I think we all agree that "cargo vendor" is the primary option. Since
downloading without explicit permission is not allowed on CRAN in general,
it's reasonable. I'm happy that the instructions will describe it clearly.

But, some R packages have too large dependencies to bundle. In this case,
downloading can be allowed with "the explicit permission of the CRAN team,"
if I understand correctly. For this, I think Cargo's downloading mechanism
satisfy this requirement if (1) all the dependencies are from crates.io and
(2) Cargo.lock exists:

> download a specific version from a secure site and check that the
download is the expected code by some sort of checksum

Because Cargo downloads specific versions recorded in Cargo.lock, verifies
the checksums, and crates.io is the "secure site" that we can rely on as
Hadley wrote.

My question is, does CRAN allow Cargo to download the dependency sources on
CRAN? The policy says:

> So downloading of Rust ?crates? will in future require the explicit
permission of the CRAN team

To my eyes, this implies

- CRAN currently allows Cargo's downloading of dependency Rust crates even
without the permission
- CRAN will keep allowing Cargo's downloading if the package author asks
the permission

And, if CRAN doesn't allow it, I (and probably many Rust users) would like
to know why. As I described above, it should satisfy the requirement.

>  please don't cross-post

Sorry.

> I thought cargo build --offline is not needed if the dependencies are
already vendored?

Yes, you are right. --offline is not needed if vendering is properly
configured. But, this probably means you have to review the build
configurations in .cargo/config.toml or so, so I just thought it would be
easier for you to check if --offline is specified to the command. This
seems a bit off-topic, so please ignore.

Best,
Yutani


2023?7?14?(?) 9:06 Simon Urbanek <simon.urbanek at r-project.org>:

>
>
> > On Jul 14, 2023, at 11:19 AM, Hadley Wickham <h.wickham at gmail.com>
> wrote:
> >
> >>> If CRAN cannot trust even the official one of Rust, why does CRAN have
> Rust at all?
> >>>
> >>
> >> I don't see the connection - if you downloaded something in the past it
> doesn't mean you will be able to do so in the future. And CRAN has Rust
> because it sounded like a good idea to allow packages to use it, but I can
> see that it opened a can of worms that we trying to tame here.
> >
> > Can you give a bit more detail about your concerns here? Obviously
> > crates.io isn't some random site on the internet, it's the official
> > repository of the Rust language, supported by the corresponding
> > foundation for the language. To me that makes it feel very much like
> > CRAN, where we can assume if you downloaded something in the past, you
> > can download something in the future.
> >
>
> I was just responding to Yutani's question why we downloaded the Rust
> compilers on CRAN at all. This has really nothing to do with the previous
> discussion which is why I did say "I don't see the connection". Also I
> wasn't talking about crates.io anywhere in my responses in this thread.
> The only thing I wanted to discuss here was that I think the existing Rust
> model  ("vendor" into the package sources) seems like a good one to apply
> to Go, but that got somehow hijacked...
>
> Cheers,
> Simon
>
>

	[[alternative HTML version deleted]]


From yut@n|@|n| @end|ng |rom gm@||@com  Fri Jul 14 15:21:50 2023
From: yut@n|@|n| @end|ng |rom gm@||@com (Hiroaki Yutani)
Date: Fri, 14 Jul 2023 22:21:50 +0900
Subject: [R-pkg-devel] Feedback on "Using Rust in CRAN packages"
In-Reply-To: <CALyqOb9-uKX3P1xeic9yKxxHBOuiqjtbKeBD8S2AzQUfKMRzHA@mail.gmail.com>
References: <CALyqOb__9-M_rEJ20dz3T07aNKP9_BRG25jdQ248WJA0ShuFCA@mail.gmail.com>
 <389056FE-88DD-4A07-8FD1-63E0F286B3A8@R-project.org>
 <CALyqOb8C24csrQHV+kVUhgL1=Lk0bFF=+dMBU-uG+TOiSFmfNg@mail.gmail.com>
 <06675DF4-6655-4AB5-B636-1AE443A0B651@R-project.org>
 <CABdHhvFTo4dWm-v0Hwuoba9uiKffVMZQNuAy+YM_RL3gWmbOHw@mail.gmail.com>
 <6EAE6A61-F6DB-4747-8D00-07DA4A3AE39F@R-project.org>
 <CALyqOb9-uKX3P1xeic9yKxxHBOuiqjtbKeBD8S2AzQUfKMRzHA@mail.gmail.com>
Message-ID: <CALyqOb8pmTymO=5NkO7ZXnNjVLzovZapYfs1y7A64RZjuaQ7UA@mail.gmail.com>

I just found the policy is updated and I now understand why GitHub matters
in your opinion. Thanks for the clarification, I forgot this fact.

>  CRAN does not regard github.com (which hosts the index of crates.io) as
sufficiently reliable.

The good news is that, as of Rust 1.68, Cargo supports the "sparse" index
protocol [1][2]. In this case, the index is hosted at
https://index.crates.io/, crates.io's own infrastructure. So, if I
understand correctly, when all the CRAN servers have Cargo >=1.68
installed, CRAN is ready to believe crates.io is reliable?

Note that, at the time of writing this, the version on Debian testing is
still 1.66 [3] and it's not updated very frequently (about once a year?),
so it probably takes a while before the day.

Best,
Yutani


[1]:
https://blog.rust-lang.org/2023/03/09/Rust-1.68.0.html#cargos-sparse-protocol
[2]:
https://blog.rust-lang.org/inside-rust/2023/01/30/cargo-sparse-protocol.html
[3]: https://packages.debian.org/testing/cargo (it seems 0.66 means 1.66)

2023?7?14?(?) 9:58 Hiroaki Yutani <yutani.ini at gmail.com>:

> Simin,
>
> Sorry that my question was not clear. Let me clarify.
>
> I think we all agree that "cargo vendor" is the primary option. Since
> downloading without explicit permission is not allowed on CRAN in general,
> it's reasonable. I'm happy that the instructions will describe it clearly.
>
> But, some R packages have too large dependencies to bundle. In this case,
> downloading can be allowed with "the explicit permission of the CRAN team,"
> if I understand correctly. For this, I think Cargo's downloading mechanism
> satisfy this requirement if (1) all the dependencies are from crates.io
> and (2) Cargo.lock exists:
>
> > download a specific version from a secure site and check that the
> download is the expected code by some sort of checksum
>
> Because Cargo downloads specific versions recorded in Cargo.lock, verifies
> the checksums, and crates.io is the "secure site" that we can rely on as
> Hadley wrote.
>
> My question is, does CRAN allow Cargo to download the dependency sources
> on CRAN? The policy says:
>
> > So downloading of Rust ?crates? will in future require the explicit
> permission of the CRAN team
>
> To my eyes, this implies
>
> - CRAN currently allows Cargo's downloading of dependency Rust crates even
> without the permission
> - CRAN will keep allowing Cargo's downloading if the package author asks
> the permission
>
> And, if CRAN doesn't allow it, I (and probably many Rust users) would like
> to know why. As I described above, it should satisfy the requirement.
>
> >  please don't cross-post
>
> Sorry.
>
> > I thought cargo build --offline is not needed if the dependencies are
> already vendored?
>
> Yes, you are right. --offline is not needed if vendering is properly
> configured. But, this probably means you have to review the build
> configurations in .cargo/config.toml or so, so I just thought it would be
> easier for you to check if --offline is specified to the command. This
> seems a bit off-topic, so please ignore.
>
> Best,
> Yutani
>
>
> 2023?7?14?(?) 9:06 Simon Urbanek <simon.urbanek at r-project.org>:
>
>>
>>
>> > On Jul 14, 2023, at 11:19 AM, Hadley Wickham <h.wickham at gmail.com>
>> wrote:
>> >
>> >>> If CRAN cannot trust even the official one of Rust, why does CRAN
>> have Rust at all?
>> >>>
>> >>
>> >> I don't see the connection - if you downloaded something in the past
>> it doesn't mean you will be able to do so in the future. And CRAN has Rust
>> because it sounded like a good idea to allow packages to use it, but I can
>> see that it opened a can of worms that we trying to tame here.
>> >
>> > Can you give a bit more detail about your concerns here? Obviously
>> > crates.io isn't some random site on the internet, it's the official
>> > repository of the Rust language, supported by the corresponding
>> > foundation for the language. To me that makes it feel very much like
>> > CRAN, where we can assume if you downloaded something in the past, you
>> > can download something in the future.
>> >
>>
>> I was just responding to Yutani's question why we downloaded the Rust
>> compilers on CRAN at all. This has really nothing to do with the previous
>> discussion which is why I did say "I don't see the connection". Also I
>> wasn't talking about crates.io anywhere in my responses in this thread.
>> The only thing I wanted to discuss here was that I think the existing Rust
>> model  ("vendor" into the package sources) seems like a good one to apply
>> to Go, but that got somehow hijacked...
>>
>> Cheers,
>> Simon
>>
>>

	[[alternative HTML version deleted]]


From dewey @end|ng |rom dunn|ngton@c@  Fri Jul 14 16:36:11 2023
From: dewey @end|ng |rom dunn|ngton@c@ (Dewey Dunnington)
Date: Fri, 14 Jul 2023 11:36:11 -0300
Subject: [R-pkg-devel] Best practices for CRAN package using Go
In-Reply-To: <F85C4A1A-75FA-46C1-B2FC-1EF1E1F6E4F3@R-project.org>
References: <399846c80a91ae21c96942890fc8d3b8@dunnington.ca>
 <20230710170951.35efc274@arachnoid>
 <d4522c8b37d7b8e1a3441a50c3988246@dunnington.ca>
 <F85C4A1A-75FA-46C1-B2FC-1EF1E1F6E4F3@R-project.org>
Message-ID: <6133281842fd9c9256c4cf5472734f7b@dunnington.ca>

Simon,

Thanks! I look forward to packaging the next ADBC driver release and 
submitting.

Cheers,

-dewey

On 2023-07-12 20:01, Simon Urbanek wrote:
> Dewey,
> 
> you will definitely need to include all the necessary sources for your 
> package. You may want to have a look at the "Using Rust"[1] document 
> linked from the CRAN policy. I think Go is quite similar to Rust in 
> that sense so you should use the same approach, i.e. checking for 
> system and user installations (for go the official location is 
> /usr/local/go/bin/go and it may not be on the PATH), declaring Go 
> version dependency and making sure your package has included all module 
> dependency sources (i.e. don't use install-time module 
> resolution/download).
> 
> If you need to include a large source tar ball that is not permissible 
> on CRAN, I'd recommend using Zenodo.org since it is specifically 
> designed to facilitate longevity and reproducibility (as opposed to 
> Github or other transient storage that may disappear at any point).
> 
> All that said, you may run into the same issues as Rust (errors and 
> segfaults due to limited interoperability of compilers) so use with 
> care and test well. External bindings like Rust or Go are only provided 
> on "best effort" basis.
> 
> Cheers,
> Simon
> 
> [1] - https://cran.r-project.org/web/packages/using_rust.html
> 
> PS: go is now available on the CRAN macOS builder machines and the Mac 
> Builder (https://mac.r-project.org/macbuilder/submit.html).
> 
> 
>> On 13/07/2023, at 2:36 AM, Dewey Dunnington <dewey at dunnington.ca> 
>> wrote:
>> 
>> Thank you! It seems I needed the refresher on CRAN policy regarding 
>> downloading sources: it seems like the go.sum/go.mod provide 
>> sufficient checksumming to comply with the policy, as you noted (with 
>> `go mod vendor` as a backup if this turns out to not be acceptable). 
>> Downloading Go is probably out based on the advice for Rust that 
>> explicitly forbids this.
>> 
>> Cheers!
>> 
>> -dewey
>> 
>> On 2023-07-10 11:09, Ivan Krylov wrote:
>>> ? Thu, 06 Jul 2023 15:22:26 -0300
>>> Dewey Dunnington <dewey at dunnington.ca> ?????:
>>>> I've wrapped two of these drivers for R that seem to build and
>>>> install on MacOS, Linux, and Windows [3][4]; however, I am not sure
>>>> if the pattern I used is suitable for CRAN or whether these packages
>>>> will have to be GitHub-only for the foreseeable future.
>>> There are a few parts to following the CRAN policy [*] regarding
>>> external dependencies.
>>> I think (but don't know for sure) that your package will not be 
>>> allowed
>>> to download Go by itself. The policy says: "Only as a last resort and
>>> with the agreement of the CRAN team should a package download
>>> pre-compiled software."
>>> An already installed Go should be able to "first look to see if [a
>>> dependency] is already installed and if so is of a suitable version"
>>> when installing the dependencies of the Go part of the code. The 
>>> go.mod
>>> and go.sum files specify the exact versions and checksums of the
>>> dependencies, which satisfies the requirement for fixed dependency
>>> versions ("it is acceptable to download them as part of installation,
>>> but do ensure that the download is of a fixed version rather than the
>>> latest"), so your package seems to be fine in this respect.
>>> One more thing: when bootstrapping the source package, can you run go
>>> mod vendor [**] in order to bundle *all* the Go dependencies together
>>> with the package? Is the resulting directory prohibitively large? 
>>> Would
>>> it satisfy the CRAN policy preference to "include the library sources
>>> in the package and compile them as part of package installation"
>>> without requiring Internet access? Unfortunately, I don't know enough
>>> about Go to answer these questions myself. I think that a small 
>>> bundle
>>> of vendored Go code would be preferrable for CRAN but *not* 
>>> preferrable
>>> for packaging in a GNU/Linux distro like Debian where dynamic linking
>>> (in the widest possible sense) is a strong preference.
>>> --
>>> Best regards,
>>> Ivan
>>> [*] https://cran.r-project.org/web/packages/policies.html
>>> [**] https://go.dev/ref/mod#vendoring
>> 
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>>


From kry|ov@r00t @end|ng |rom gm@||@com  Fri Jul 14 17:14:41 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Fri, 14 Jul 2023 18:14:41 +0300
Subject: [R-pkg-devel] Package Load fails to find 3rd Party DLL
In-Reply-To: <7feb7697-be2f-7bf8-3e7c-4276a0cb69c8@gmail.com>
References: <7feb7697-be2f-7bf8-3e7c-4276a0cb69c8@gmail.com>
Message-ID: <20230714181441.03c47c08@arachnoid>

? Wed, 12 Jul 2023 09:41:11 -0400
Russell Almond <russell.g.almond at gmail.com> ?????:

>  ? C:\rtools43\x86_64-w64-mingw32.static.posix\bin\nm.exe:
> 'NeticaDLL': No such file

This is where the problem starts. You can retrace the steps that R
takes when building and installing the package by running sh
configure.win manually and then running something like
R_PACKAGE_DIR="$(pwd)" R CMD SHLIB -n *.c in the src subdirectory of
the package. That will in turn tell you the exact command lines to be
run while building your package, including the following:

 nm Cases.o Continuous.o Edges.o Experience.o Inference.o Networks.o \
  Node.o Random.o Registration.o Session.o NeticaDLL \
 | sed -n 's/^.* [BCDRT] / /p' \
 | sed -e '/[.]refptr[.]/d' -e '/[.]weak[.]/d' \
 | sed 's/[^ ][^ ]*/"&"/g' \
 >> tmp.def;

That "NeticaDLL" at the end of the list of object files doesn't belong
there. I think it gets added because it's among the dependencies of the
$(SHLIB) Make target. It would be best to make that target a real
object file that nm.exe can process. Otherwise, you could also write
your own .def file and skip its automatic generation.

After nm fails, you get a crash in the linker (while parsing the
resulting incomplete .def file?), which leaves your package without a
shared library to use:

> C:\rtools43\x86_64-w64-mingw32.static.posix\bin/ld.exe: internal
> error: aborting at ../../binutils-2.40/ld/ldlang.c:527 in
> compare_section
> C:\rtools43\x86_64-w64-mingw32.static.posix\bin/ld.exe: please report
> this bug

There must be a way to streamline this process. Maybe put all the
library-downloading and extraction code into a portable
tools/configure.R (to be launched manually from the configure shell
script), leaving src/Makevars only to compile your own code, link with
Netica using PKG_LIBS, then copy the additional Netica DLL from a
custom install.libs.R file?

-- 
Best regards,
Ivan


From ru@@e||@g@@|mond @end|ng |rom gm@||@com  Fri Jul 14 19:29:32 2023
From: ru@@e||@g@@|mond @end|ng |rom gm@||@com (Russell Almond)
Date: Fri, 14 Jul 2023 13:29:32 -0400
Subject: [R-pkg-devel] Package Load fails to find 3rd Party DLL
In-Reply-To: <20230714181441.03c47c08@arachnoid>
References: <7feb7697-be2f-7bf8-3e7c-4276a0cb69c8@gmail.com>
 <20230714181441.03c47c08@arachnoid>
Message-ID: <06ea7d13-ab84-dc3b-2c5d-1acb574260b1@gmail.com>

Thanks.? I know know the problem is in the Makevars.win; however, I'm 
still confused.

My `Makevars.win` had

| .PHONY:?? all NeticaDLL clean

| all: $(SHLIB)
| $(SHLIB): NeticaDLL
|
| NeticaDLL:
|? ? mkdir -p "$(INSTALL_LIB)"
|? ? cp "${NETICA_LIB}/Netica.dll" "${INSTALL_LIB}"
|??? cp "${NETICA_LIB}/Netica.lib" "${INSTALL_LIB}"

[BTW, I tried change this to

| all: NeticaDLL $(SHLIB)

and got the same problem.]

This looks very much like the `mylibs` example in 
https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Using-Makevars

So I'm confused.? Why is the Makevars -> Makefile conversion assuming 
that all targets of $(SHLIB) (or all) are executable files, ignoring the 
PHONY declaration?

Also, does the example in the Writing R Extensions manual still work?

 ??? --Russell



On 7/14/23 11:14 AM, Ivan Krylov wrote:
> ? Wed, 12 Jul 2023 09:41:11 -0400
> Russell Almond<russell.g.almond at gmail.com>  ?????:
>
>>   ? C:\rtools43\x86_64-w64-mingw32.static.posix\bin\nm.exe:
>> 'NeticaDLL': No such file
> This is where the problem starts. You can retrace the steps that R
> takes when building and installing the package by running sh
> configure.win manually and then running something like
> R_PACKAGE_DIR="$(pwd)" R CMD SHLIB -n *.c in the src subdirectory of
> the package. That will in turn tell you the exact command lines to be
> run while building your package, including the following:
>
>   nm Cases.o Continuous.o Edges.o Experience.o Inference.o Networks.o \
>    Node.o Random.o Registration.o Session.o NeticaDLL \
>   | sed -n 's/^.* [BCDRT] / /p' \
>   | sed -e '/[.]refptr[.]/d' -e '/[.]weak[.]/d' \
>   | sed 's/[^ ][^ ]*/"&"/g' \
>   >> tmp.def;
>
> That "NeticaDLL" at the end of the list of object files doesn't belong
> there. I think it gets added because it's among the dependencies of the
> $(SHLIB) Make target. It would be best to make that target a real
> object file that nm.exe can process. Otherwise, you could also write
> your own .def file and skip its automatic generation.
>
> After nm fails, you get a crash in the linker (while parsing the
> resulting incomplete .def file?), which leaves your package without a
> shared library to use:
>
>> C:\rtools43\x86_64-w64-mingw32.static.posix\bin/ld.exe: internal
>> error: aborting at ../../binutils-2.40/ld/ldlang.c:527 in
>> compare_section
>> C:\rtools43\x86_64-w64-mingw32.static.posix\bin/ld.exe: please report
>> this bug
> There must be a way to streamline this process. Maybe put all the
> library-downloading and extraction code into a portable
> tools/configure.R (to be launched manually from the configure shell
> script), leaving src/Makevars only to compile your own code, link with
> Netica using PKG_LIBS, then copy the additional Netica DLL from a
> custom install.libs.R file?
>
-- 
Russell Almond
https://ralmond.net/

	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Fri Jul 14 21:25:51 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Fri, 14 Jul 2023 22:25:51 +0300
Subject: [R-pkg-devel] Package Load fails to find 3rd Party DLL
In-Reply-To: <06ea7d13-ab84-dc3b-2c5d-1acb574260b1@gmail.com>
References: <7feb7697-be2f-7bf8-3e7c-4276a0cb69c8@gmail.com>
 <20230714181441.03c47c08@arachnoid>
 <06ea7d13-ab84-dc3b-2c5d-1acb574260b1@gmail.com>
Message-ID: <20230714222551.10428ef8@Tarkus>

On Fri, 14 Jul 2023 13:29:32 -0400
Russell Almond <russell.g.almond at gmail.com> wrote:

> So I'm confused.? Why is the Makevars -> Makefile conversion assuming 
> that all targets of $(SHLIB) (or all) are executable files, ignoring
> the PHONY declaration?

The $(SHLIB) target is defined in ${R_HOME}/share/make/winshlib.mk. In
particular, it says:

 echo EXPORTS > tmp.def; \
 $(NM) $^ | $(SED) -n $(SYMPAT) $(NM_FILTER) | \
  $(SED) $(ADDQU) >> tmp.def; \

Unfortunately for our case, the $^ automatic variable contains the
names of all prerequisites of the $(SHLIB) target [*], including .PHONY
ones. So as long as $(SHLIB) is declared to depend on NeticaDLL, this
string will get mentioned here.

Maybe it's a red herring. Maybe the message from nm about missing file
has always been harmless, and what we're seeing here is a bug in the
toolchain; perhaps ld.exe doesn't like something about Netica.lib so
much that it crashes. I think that's less likely. If you run the
commands manually but without mentioning NeticaDLL, do you get a DLL in
the end?

> Also, does the example in the Writing R Extensions manual still work?

It should. At the very least, rgl uses the same approach without any
apparent problems:
https://github.com/dmurdoch/rgl/blob/master/src/Makevars.ucrt
(But then it also provides rgl-win.def, which sidesteps the automatic
.def generation, and then has $(OBJECTS), not $^, linked into $(SHLIB).
You may have found a bug in winshlib.mk.)

There's also a different idiom, where all: but not $(SHLIB): depends on
the non-file target:
https://github.com/eddelbuettel/rprotobuf/blob/master/src/Makevars.win
(Not sure how the dependency resolution order is supposed to work in
this case. If winshlib.mk declares that all: depends on $(SHLIB) and
later Makevars declares that all: also depends on winlibs, why doesn't
Make attempt to build $(SHLIB) first, with no regard for winlibs?)

-- 
Best regards,
Ivan

[*]
https://www.gnu.org/software/make/manual/html_node/Automatic-Variables.html


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Sat Jul 15 00:33:40 2023
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Sat, 15 Jul 2023 00:33:40 +0200
Subject: [R-pkg-devel] 
 issues with CRAN incoming submissions / summer break announcement
In-Reply-To: <7c654dd5-721a-cdb6-f432-94b9ddbae176@statistik.tu-dortmund.de>
References: <7c654dd5-721a-cdb6-f432-94b9ddbae176@statistik.tu-dortmund.de>
Message-ID: <ac1a22d2-fd33-e9ef-2aac-8b1c05773bf5@statistik.tu-dortmund.de>



On 12.07.2023 09:40, Uwe Ligges wrote:
> Dear developers,
> 
> CRAN submissions are currently partly not possible due to some 
> infrastructure issues. Please so NOT contact us if you see "Unpacking 
> failed. Please make sure the tar.gz was created with R CMD build. [...]".
> 
> In addition, processing the CRAN incoming queue of packages (CRAN 
> pretest) is currently delayed by 2 days.
> 
> Both issues are known and CRAN sysadmins will work on the issues.

Both issues have been resolved.

Best,
Uwe Ligges


> 
> 
> Note that this year's CRAN submission summer break will be from Jul 21, 
> 2023 to Aug 7, 2023.
> 
> Best,
> Uwe Ligges
> for the CRAN team
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Sat Jul 15 01:08:08 2023
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Sat, 15 Jul 2023 01:08:08 +0200
Subject: [R-pkg-devel] 
 issues with CRAN incoming submissions / summer break announcement
In-Reply-To: <CADPubGSEALLrLABN7V5i5oh8OVF0OdfDS-u7F04G2krF9-gcig@mail.gmail.com>
References: <7c654dd5-721a-cdb6-f432-94b9ddbae176@statistik.tu-dortmund.de>
 <ac1a22d2-fd33-e9ef-2aac-8b1c05773bf5@statistik.tu-dortmund.de>
 <CADPubGSEALLrLABN7V5i5oh8OVF0OdfDS-u7F04G2krF9-gcig@mail.gmail.com>
Message-ID: <344dcfad-5d31-3840-b069-075860e2328f@statistik.tu-dortmund.de>

I know, this has to be removed by the sysadmins in Vienna.

Best,
Uwe



On 15.07.2023 01:05, James Lamb wrote:
> Thank you as always, Uwe!
> 
> By the way, the warning is still up on the submission page at 
> https://cran.r-project.org/submit.html 
> <https://cran.r-project.org/submit.html>.
> 
> image.png
> 
> Just sharing in case you hadn't noticed that yet.
> 
> Cheers,
> 
> -James
> 
> On Fri, Jul 14, 2023 at 5:33?PM Uwe Ligges 
> <ligges at statistik.tu-dortmund.de 
> <mailto:ligges at statistik.tu-dortmund.de>> wrote:
> 
> 
> 
>     On 12.07.2023 09:40, Uwe Ligges wrote:
>      > Dear developers,
>      >
>      > CRAN submissions are currently partly not possible due to some
>      > infrastructure issues. Please so NOT contact us if you see
>     "Unpacking
>      > failed. Please make sure the tar.gz was created with R CMD build.
>     [...]".
>      >
>      > In addition, processing the CRAN incoming queue of packages (CRAN
>      > pretest) is currently delayed by 2 days.
>      >
>      > Both issues are known and CRAN sysadmins will work on the issues.
> 
>     Both issues have been resolved.
> 
>     Best,
>     Uwe Ligges
> 
> 
>      >
>      >
>      > Note that this year's CRAN submission summer break will be from
>     Jul 21,
>      > 2023 to Aug 7, 2023.
>      >
>      > Best,
>      > Uwe Ligges
>      > for the CRAN team
>      >
>      > ______________________________________________
>      > R-package-devel at r-project.org
>     <mailto:R-package-devel at r-project.org> mailing list
>      > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>     <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
> 
>     ______________________________________________
>     R-package-devel at r-project.org <mailto:R-package-devel at r-project.org>
>     mailing list
>     https://stat.ethz.ch/mailman/listinfo/r-package-devel
>     <https://stat.ethz.ch/mailman/listinfo/r-package-devel>
> 
> 
> 
> -- 
> James Lamb
> GitHub <https://github.com/jameslamb>?| Twitter 
> <https://twitter.com/_jameslamb> | LinkedIn 
> <https://www.linkedin.com/in/jameslamb1/>


From edd @end|ng |rom deb|@n@org  Sun Jul 16 01:25:05 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Sat, 15 Jul 2023 18:25:05 -0500
Subject: [R-pkg-devel] macOS results not mirrored/updated at CRAN
In-Reply-To: <25775.16177.937585.974774@rob.eddelbuettel.com>
References: <25775.16177.937585.974774@rob.eddelbuettel.com>
Message-ID: <25779.10961.299898.418341@rob.eddelbuettel.com>


Simon,

On 12 July 2023 at 19:02, Dirk Eddelbuettel wrote:
| 
| Simon,
| 
| It looks like some result mirroring / pushing from your machines to CRAN fell
| over.  One of my packages, digest 0.6.33, arrived on CRAN about a week ago,
| is built almost everywhere (apart from macOS_release_x86_64 stuck at 0.6.32)
| but the result page still has nags from the 0.6.31 build for macOS release
| and one of the oldrel builds.
| 
| Could you look into that?  And if it is "just" general issue at CRAN as per
| Uwe's email earlier I will happily wait.  But it has been in this frozen /
| partial update of results state for a few days now.

digest on macOS x86_64 is still stuck at 0.6.31 results on the summary
displaying a now very stale and factually incorrect NOTE.

Can you please look into this?

Thanks,  Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From @|mon@urb@nek @end|ng |rom r-project@org  Sun Jul 16 04:31:15 2023
From: @|mon@urb@nek @end|ng |rom r-project@org (Simon Urbanek)
Date: Sun, 16 Jul 2023 14:31:15 +1200
Subject: [R-pkg-devel] macOS results not mirrored/updated at CRAN
In-Reply-To: <25779.10961.299898.418341@rob.eddelbuettel.com>
References: <25779.10961.299898.418341@rob.eddelbuettel.com>
Message-ID: <4D42E4F0-1D57-4A7B-9597-A8D52197B2D8@r-project.org>

I looked into it and there was no issue on the build machine or staging server, so it will require some more digging in the international waters .. hopefully sometime next week?

Cheers,
Simon


> On 16/07/2023, at 11:25, Dirk Eddelbuettel <edd at debian.org> wrote:
> 
> ?
> Simon,
> 
> On 12 July 2023 at 19:02, Dirk Eddelbuettel wrote:
> | 
> | Simon,
> | 
> | It looks like some result mirroring / pushing from your machines to CRAN fell
> | over.  One of my packages, digest 0.6.33, arrived on CRAN about a week ago,
> | is built almost everywhere (apart from macOS_release_x86_64 stuck at 0.6.32)
> | but the result page still has nags from the 0.6.31 build for macOS release
> | and one of the oldrel builds.
> | 
> | Could you look into that?  And if it is "just" general issue at CRAN as per
> | Uwe's email earlier I will happily wait.  But it has been in this frozen /
> | partial update of results state for a few days now.
> 
> digest on macOS x86_64 is still stuck at 0.6.31 results on the summary
> displaying a now very stale and factually incorrect NOTE.
> 
> Can you please look into this?
> 
> Thanks,  Dirk
> 
> -- 
> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
> 


From edd @end|ng |rom deb|@n@org  Sun Jul 16 04:54:22 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Sat, 15 Jul 2023 21:54:22 -0500
Subject: [R-pkg-devel] macOS results not mirrored/updated at CRAN
In-Reply-To: <4D42E4F0-1D57-4A7B-9597-A8D52197B2D8@r-project.org>
References: <25779.10961.299898.418341@rob.eddelbuettel.com>
 <4D42E4F0-1D57-4A7B-9597-A8D52197B2D8@r-project.org>
Message-ID: <25779.23518.499850.325589@rob.eddelbuettel.com>


On 16 July 2023 at 14:31, Simon Urbanek wrote:
| I looked into it and there was no issue on the build machine or staging server, so it will require some more digging in the international waters .. hopefully sometime next week?

Thanks for checking, sometimes one-offs happen.

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From murr@y@e||ord @end|ng |rom ot@go@@c@nz  Sun Jul 16 06:22:50 2023
From: murr@y@e||ord @end|ng |rom ot@go@@c@nz (Murray Efford)
Date: Sun, 16 Jul 2023 04:22:50 +0000
Subject: [R-pkg-devel] macOS results not mirrored/updated at CRAN
In-Reply-To: <25779.10961.299898.418341@rob.eddelbuettel.com>
References: <25775.16177.937585.974774@rob.eddelbuettel.com>
 <25779.10961.299898.418341@rob.eddelbuettel.com>
Message-ID: <SY4PR01MB56580500A52A8E91A06D1C53AC3AA@SY4PR01MB5658.ausprd01.prod.outlook.com>

For the record, the problem is more general: the r-release-macos-x86_64 CRAN checks of my package secr failed to update for 4.6.0 (2023-05-23) or 4.6.1 (2023-07-10) and remain stuck at version 4.5.10 (all MacOS binaries updated OK).

________________________________________
From: R-package-devel <r-package-devel-bounces at r-project.org> on behalf of Dirk Eddelbuettel <edd at debian.org>
Sent: 16 July 2023 11:25
To: Dirk Eddelbuettel
Cc: r-package-devel
Subject: Re: [R-pkg-devel] macOS results not mirrored/updated at CRAN


Simon,

On 12 July 2023 at 19:02, Dirk Eddelbuettel wrote:
|
| Simon,
|
| It looks like some result mirroring / pushing from your machines to CRAN fell
| over.  One of my packages, digest 0.6.33, arrived on CRAN about a week ago,
| is built almost everywhere (apart from macOS_release_x86_64 stuck at 0.6.32)
| but the result page still has nags from the 0.6.31 build for macOS release
| and one of the oldrel builds.
|
| Could you look into that?  And if it is "just" general issue at CRAN as per
| Uwe's email earlier I will happily wait.  But it has been in this frozen /
| partial update of results state for a few days now.

digest on macOS x86_64 is still stuck at 0.6.31 results on the summary
displaying a now very stale and factually incorrect NOTE.

Can you please look into this?

Thanks,  Dirk

--
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org

______________________________________________
R-package-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel


From rhe|p @end|ng |rom eoo@@dd@@n|  Sun Jul 16 13:30:24 2023
From: rhe|p @end|ng |rom eoo@@dd@@n| (Jan van der Laan)
Date: Sun, 16 Jul 2023 13:30:24 +0200
Subject: [R-pkg-devel] Issue with CPU time > 2.5 times elapsed time
Message-ID: <b59d150b-c90d-5731-980d-4b36e7443c52@dds.nl>


I am trying to upload a new version of the reclin2 package, but it fails 
the pre-tests on Debian with the following message:

 > * checking examples ... [14s/4s] NOTE
 > Examples with CPU time > 2.5 times elapsed time
 >                   user system elapsed ratio
 > select_threshold 3.700  0.122   0.455 8.400
 > select_n_to_m    4.228  0.180   0.623 7.075
 > * checking for unstated dependencies in ?tests? ... OK

See
https://win-builder.r-project.org/incoming_pretest/reclin2_0.3.1_20230716_124651/Debian/00check.log 
for the complete output.

I can't see why this happens and I can't seem to reproduce this on my 
machine. The examples do call makeCluster from parallel, but only start 
one thread. The code that is ran in the examples only call base-r 
functions and data.table functions. I can imagine data.table starting 
multiple threads. However the example consists only of 17 records; and 
data.table should not use more than two threads on that system anyway. 
So I don't see where the large difference between the two is coming 
from. Does anyone have a clue?

The code is here: https://github.com/djvanderlaan/reclin2 one of the 
examples that fails is here: 
https://github.com/djvanderlaan/reclin2/blob/master/R/select_threshold.R#L21. 


Thanks.
Jan


From rodr|go@tob@rc@rr|zo @end|ng |rom uw@@edu@@u  Mon Jul 17 05:30:23 2023
From: rodr|go@tob@rc@rr|zo @end|ng |rom uw@@edu@@u (Rodrigo Tobar Carrizo)
Date: Mon, 17 Jul 2023 03:30:23 +0000
Subject: [R-pkg-devel] Issue with CPU time > 2.5 times elapsed time
In-Reply-To: <b59d150b-c90d-5731-980d-4b36e7443c52@dds.nl>
References: <b59d150b-c90d-5731-980d-4b36e7443c52@dds.nl>
Message-ID: <SYCPR01MB4047A284AFED3005D25E5323A93BA@SYCPR01MB4047.ausprd01.prod.outlook.com>

Hi Jan,

I faced a similar issue recently with the imager package, see https://stat.ethz.ch/pipermail/r-package-devel/2023q2/009042.html for the email thread on this list. In your case, it's probably data.tables creating more threads than what you think are being created, but you might want to double-check.

It ultimately boils down to you having to constrain the number of threads your code and dependencies use during tests/vignettes/example runs. After guidance from Dirk, I painstakingly ended up doing exactly that for our package, see https://github.com/asgr/imager/compare/0ef8afd6249506bfec98c1250a0a2558149d88d9...47d59a942d04cef8bd7cb2d36be926d637e3df11

Regards,

Rodrigo

________________________________
Von: R-package-devel <r-package-devel-bounces at r-project.org> im Auftrag von Jan van der Laan <rhelp at eoos.dds.nl>
Gesendet: Sonntag, 16. Juli 2023 19:30
An: r-package-devel <r-package-devel at r-project.org>
Betreff: [R-pkg-devel] Issue with CPU time > 2.5 times elapsed time


I am trying to upload a new version of the reclin2 package, but it fails
the pre-tests on Debian with the following message:

 > * checking examples ... [14s/4s] NOTE
 > Examples with CPU time > 2.5 times elapsed time
 >                   user system elapsed ratio
 > select_threshold 3.700  0.122   0.455 8.400
 > select_n_to_m    4.228  0.180   0.623 7.075
 > * checking for unstated dependencies in ?tests? ... OK

See
https://aus01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwin-builder.r-project.org%2Fincoming_pretest%2Freclin2_0.3.1_20230716_124651%2FDebian%2F00check.log&data=05%7C01%7Crodrigo.tobarcarrizo%40uwa.edu.au%7Cd0dacf8919cc41c1eb7e08db85f01ec8%7C05894af0cb2846d8871674cdb46e2226%7C0%7C0%7C638251038592720229%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=pxDjGepeLXPXEYv4sKNsd1hHiXGaSDBM6BA%2FmJLsYrY%3D&reserved=0<https://win-builder.r-project.org/incoming_pretest/reclin2_0.3.1_20230716_124651/Debian/00check.log>
for the complete output.

I can't see why this happens and I can't seem to reproduce this on my
machine. The examples do call makeCluster from parallel, but only start
one thread. The code that is ran in the examples only call base-r
functions and data.table functions. I can imagine data.table starting
multiple threads. However the example consists only of 17 records; and
data.table should not use more than two threads on that system anyway.
So I don't see where the large difference between the two is coming
from. Does anyone have a clue?

The code is here: https://aus01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fdjvanderlaan%2Freclin2&data=05%7C01%7Crodrigo.tobarcarrizo%40uwa.edu.au%7Cd0dacf8919cc41c1eb7e08db85f01ec8%7C05894af0cb2846d8871674cdb46e2226%7C0%7C0%7C638251038592720229%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=YgID3y0ersGkKJp0H5QzpfENtecPYHlPE97HloJoo%2FM%3D&reserved=0<https://github.com/djvanderlaan/reclin2> one of the
examples that fails is here:
https://aus01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fdjvanderlaan%2Freclin2%2Fblob%2Fmaster%2FR%2Fselect_threshold.R%23L21&data=05%7C01%7Crodrigo.tobarcarrizo%40uwa.edu.au%7Cd0dacf8919cc41c1eb7e08db85f01ec8%7C05894af0cb2846d8871674cdb46e2226%7C0%7C0%7C638251038592720229%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=nLI1T7q5IBtfPmU8%2Buj0hJGcE1wMXTkACzEsO0KEntY%3D&reserved=0<https://github.com/djvanderlaan/reclin2/blob/master/R/select_threshold.R#L21>.


Thanks.
Jan

______________________________________________
R-package-devel at r-project.org mailing list
https://aus01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-package-devel&data=05%7C01%7Crodrigo.tobarcarrizo%40uwa.edu.au%7Cd0dacf8919cc41c1eb7e08db85f01ec8%7C05894af0cb2846d8871674cdb46e2226%7C0%7C0%7C638251038592720229%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=nQoVas1cmOUfDG0sh%2BXEyEjsDKYljaJXqy5tqRSzU%2BU%3D&reserved=0<https://stat.ethz.ch/mailman/listinfo/r-package-devel>

	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Mon Jul 17 11:30:39 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Mon, 17 Jul 2023 12:30:39 +0300
Subject: [R-pkg-devel] Package Load fails to find 3rd Party DLL
In-Reply-To: <20230714222551.10428ef8@Tarkus>
References: <7feb7697-be2f-7bf8-3e7c-4276a0cb69c8@gmail.com>
 <20230714181441.03c47c08@arachnoid>
 <06ea7d13-ab84-dc3b-2c5d-1acb574260b1@gmail.com>
 <20230714222551.10428ef8@Tarkus>
Message-ID: <20230717123039.64db63fa@arachnoid>

? Fri, 14 Jul 2023 22:25:51 +0300
Ivan Krylov <krylov.r00t at gmail.com> ?????:

> Maybe it's a red herring. Maybe the message from nm about missing file
> has always been harmless, and what we're seeing here is a bug in the
> toolchain; perhaps ld.exe doesn't like something about Netica.lib so
> much that it crashes. I think that's less likely. If you run the
> commands manually but without mentioning NeticaDLL, do you get a DLL
> in the end?

Judging by your build logs, this could be a toolchain bug. If you set
the *.lib file aside and only give the *.dll to the linker (using
-l:Netica.dll if necessary), does it still fail? I know that GCC can
link directly to *.dll files, without relying on import libraries.

-- 
Best regards,
Ivan


From ru@@e||@g@@|mond @end|ng |rom gm@||@com  Mon Jul 17 17:28:32 2023
From: ru@@e||@g@@|mond @end|ng |rom gm@||@com (Russell Almond)
Date: Mon, 17 Jul 2023 11:28:32 -0400
Subject: [R-pkg-devel] Package Load fails to find 3rd Party DLL
In-Reply-To: <20230717123039.64db63fa@arachnoid>
References: <7feb7697-be2f-7bf8-3e7c-4276a0cb69c8@gmail.com>
 <20230714181441.03c47c08@arachnoid>
 <06ea7d13-ab84-dc3b-2c5d-1acb574260b1@gmail.com>
 <20230714222551.10428ef8@Tarkus> <20230717123039.64db63fa@arachnoid>
Message-ID: <58aed791-76f5-98bd-3d9a-d00c818f7af3@gmail.com>

Thanks for the suggestion.  In previous versions of the build tools, I 
know I needed the .lib files.

I'm also not sure I'm copying the DLL files into the right directory, so 
that maybe the linker isn't seeing it.  This always confuses me as the 
location used to build and compile is (potentially) different from the 
test location and the final build location, and I'm not sure of the best 
way to refer to these directories in my script.  I'm thinking maybe I 
need to copy the DLL into the src directory.

Unfortunately, I don't have a windows box on which to easily test.  I'm 
trying to get a virtualBox setup working so I can test more quickly.

   --Russell


On 7/17/23 5:30 AM, Ivan Krylov wrote:
> ? Fri, 14 Jul 2023 22:25:51 +0300
> Ivan Krylov <krylov.r00t at gmail.com> ?????:
> 
>> Maybe it's a red herring. Maybe the message from nm about missing file
>> has always been harmless, and what we're seeing here is a bug in the
>> toolchain; perhaps ld.exe doesn't like something about Netica.lib so
>> much that it crashes. I think that's less likely. If you run the
>> commands manually but without mentioning NeticaDLL, do you get a DLL
>> in the end?
> 
> Judging by your build logs, this could be a toolchain bug. If you set
> the *.lib file aside and only give the *.dll to the linker (using
> -l:Netica.dll if necessary), does it still fail? I know that GCC can
> link directly to *.dll files, without relying on import libraries.
>


From ru@@e||@g@@|mond @end|ng |rom gm@||@com  Mon Jul 17 20:42:36 2023
From: ru@@e||@g@@|mond @end|ng |rom gm@||@com (Russell Almond)
Date: Mon, 17 Jul 2023 14:42:36 -0400
Subject: [R-pkg-devel] Package Load fails to find 3rd Party DLL
In-Reply-To: <20230717123039.64db63fa@arachnoid>
References: <7feb7697-be2f-7bf8-3e7c-4276a0cb69c8@gmail.com>
 <20230714181441.03c47c08@arachnoid>
 <06ea7d13-ab84-dc3b-2c5d-1acb574260b1@gmail.com>
 <20230714222551.10428ef8@Tarkus> <20230717123039.64db63fa@arachnoid>
Message-ID: <89f44a7f-78c0-0eaa-4f54-cd1f10272dc5@gmail.com>

Okay,  I've changed my Makevars.win so that it has:

PKG_LIBS = -L. -L${NETICA_LIB} -lNetica

and

all: NeticaDLL

where ${NETICA_LIB} is set to the appropriate lib subdirectory of the 
unpacked sources.  I'm no longer getting the nm.exe error, so it may be 
a bug in ld.exe.


| gcc -shared -s -static-libgcc -o RNetica.dll tmp.def Cases.o 
Continuous.o Edges.o Experience.o Inference.o Networks.o Node.o Random.o 
Registration.o Session.o -L. 
-L/c/Users/ralmond/Projects/RNetica/src/Netica/Netica_API_510/lib64 
-lNetica -LC:/rtools43/x86_64-w64-mingw32.static.posix/lib/x64 
-LC:/rtools43/x86_64-w64-mingw32.static.posix/lib 
-LC:/PROGRA~1/R/R-43~1.1/bin/x64 -lR
| C:\rtools43\x86_64-w64-mingw32.static.posix\bin/ld.exe: internal 
error: aborting at ../../binutils-2.40/ld/ldlang.c:527 in compare_section
| C:\rtools43\x86_64-w64-mingw32.static.posix\bin/ld.exe: please report 
this bug
| collect2.exe: error: ld returned 1 exit status

However, when I manually moved Netica.dll to the source directory, and 
removed NETICA_LIB from the path, it compiled correctly.

So, I'm guessing this is a bug in ld.exe, and in fact it is here:
https://github.com/msys2/MINGW-packages/issues/15469

So I'll see if I can try to fix my script to only copy the .dll and not 
the .lib.
	--Russell


On 7/17/23 5:30 AM, Ivan Krylov wrote:
> ? Fri, 14 Jul 2023 22:25:51 +0300
> Ivan Krylov <krylov.r00t at gmail.com> ?????:
> 
>> Maybe it's a red herring. Maybe the message from nm about missing file
>> has always been harmless, and what we're seeing here is a bug in the
>> toolchain; perhaps ld.exe doesn't like something about Netica.lib so
>> much that it crashes. I think that's less likely. If you run the
>> commands manually but without mentioning NeticaDLL, do you get a DLL
>> in the end?
> 
> Judging by your build logs, this could be a toolchain bug. If you set
> the *.lib file aside and only give the *.dll to the linker (using
> -l:Netica.dll if necessary), does it still fail? I know that GCC can
> link directly to *.dll files, without relying on import libraries.
>


From john@m@h@rro|d @end|ng |rom gm@||@com  Tue Jul 18 16:37:40 2023
From: john@m@h@rro|d @end|ng |rom gm@||@com (John Harrold)
Date: Tue, 18 Jul 2023 07:37:40 -0700
Subject: [R-pkg-devel] Check package without suggests
Message-ID: <CANAiAiVZ-xP_1BO8O5QZStcs506ZnVJyw1eYFuPr=ZSpcNOXOA@mail.gmail.com>

Howdy Folks,

I recent had a package start failing because I wasn't checking properly in
my tests to make sure my suggested packages were installed before running
tests. I think this is something new running on CRAN where packages are
tested with only the packages specified as Imports in the DESCRIPTION file
are installed. It took me a bit of back and forth to get all of these
issues worked out.  I was wondering if anyone has a good way to run R CMD
check with only the imports installed?  A github action, or a
specific platform on rhub?

Thank you,

John
:wq

	[[alternative HTML version deleted]]


From @ergue|@@oko| @end|ng |rom gm@||@com  Tue Jul 18 16:58:37 2023
From: @ergue|@@oko| @end|ng |rom gm@||@com (Serguei Sokol)
Date: Tue, 18 Jul 2023 16:58:37 +0200
Subject: [R-pkg-devel] Check package without suggests
In-Reply-To: <CANAiAiVZ-xP_1BO8O5QZStcs506ZnVJyw1eYFuPr=ZSpcNOXOA@mail.gmail.com>
References: <CANAiAiVZ-xP_1BO8O5QZStcs506ZnVJyw1eYFuPr=ZSpcNOXOA@mail.gmail.com>
Message-ID: <2a6dda88-990c-ee7a-63b1-7ed49fa030fd@gmail.com>

Is it possible that you have complicated the task unnecessarily?
Normally, you can just do

if (requireNamespace("<suggested_pkg>", quietly=TRUE)) {
  # do the tests involving <suggested_pkg>
}

Wasn't that enough?

Best,
Serguei.


Le 18/07/2023 ? 16:37, John Harrold a ?crit?:
> Howdy Folks,
> 
> I recent had a package start failing because I wasn't checking properly in
> my tests to make sure my suggested packages were installed before running
> tests. I think this is something new running on CRAN where packages are
> tested with only the packages specified as Imports in the DESCRIPTION file
> are installed. It took me a bit of back and forth to get all of these
> issues worked out.  I was wondering if anyone has a good way to run R CMD
> check with only the imports installed?  A github action, or a
> specific platform on rhub?
> 
> Thank you,
> 
> John
> :wq
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From kry|ov@r00t @end|ng |rom gm@||@com  Tue Jul 18 17:03:01 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Tue, 18 Jul 2023 18:03:01 +0300
Subject: [R-pkg-devel] Check package without suggests
In-Reply-To: <CANAiAiVZ-xP_1BO8O5QZStcs506ZnVJyw1eYFuPr=ZSpcNOXOA@mail.gmail.com>
References: <CANAiAiVZ-xP_1BO8O5QZStcs506ZnVJyw1eYFuPr=ZSpcNOXOA@mail.gmail.com>
Message-ID: <20230718180301.6e4c841f@arachnoid>

? Tue, 18 Jul 2023 07:37:40 -0700
John Harrold <john.m.harrold at gmail.com> ?????:

> I was wondering if anyone has a good way to run R CMD
> check with only the imports installed?

According to "R Internals", running R CMD check with the environment
variable _R_CHECK_DEPENDS_ONLY_ set to "TRUE" will populate a temporary
library with only the hard dependencies of the package (Depends and
Imports) before running the tests.

If this works, you should see a NOTE:

* checking package dependencies ... NOTE
Packages which this enhances but not available for checking: <...>

(This NOTE also happens during the CRAN check but doesn't count against
your package.)

One caveat is that the library pointed to by the .Library variable is
also available during the check. In a packaged R it's a system
directory where non-base or recommended packages are not normally
installed, so _R_CHECK_DEPENDS_ONLY_ works. If you're running a custom
build of R with a writeable .Library (say, a copy of R-devel in your
home directory), the packages end up being installed there by default
and therefore available to the package being checked, despite
_R_CHECK_DEPENDS_ONLY_=TRUE. For recommended packages, there exists a
separate environment variable _R_CHECK_NO_RECOMMENDED_=TRUE, which
makes R CMD check create fake recommended packages in the temporary
library, which fail to load.

-- 
Best regards,
Ivan


From john@m@h@rro|d @end|ng |rom gm@||@com  Tue Jul 18 17:15:05 2023
From: john@m@h@rro|d @end|ng |rom gm@||@com (John Harrold)
Date: Tue, 18 Jul 2023 08:15:05 -0700
Subject: [R-pkg-devel] Check package without suggests
In-Reply-To: <2a6dda88-990c-ee7a-63b1-7ed49fa030fd@gmail.com>
References: <CANAiAiVZ-xP_1BO8O5QZStcs506ZnVJyw1eYFuPr=ZSpcNOXOA@mail.gmail.com>
 <2a6dda88-990c-ee7a-63b1-7ed49fa030fd@gmail.com>
Message-ID: <CANAiAiVzjSEm46j0p7vtxP=iqHjgRHjs+LGYcSh9Fk+eOdiNDw@mail.gmail.com>

I want to check my package to make sure I'm properly using suggested
packages. I'm trying to catch mistakes where I forgot to do what you're
suggesting.

On Tue, Jul 18, 2023 at 7:58?AM Serguei Sokol <serguei.sokol at gmail.com>
wrote:

> Is it possible that you have complicated the task unnecessarily?
> Normally, you can just do
>
> if (requireNamespace("<suggested_pkg>", quietly=TRUE)) {
>   # do the tests involving <suggested_pkg>
> }
>
> Wasn't that enough?
>
> Best,
> Serguei.
>
>
> Le 18/07/2023 ? 16:37, John Harrold a ?crit :
> > Howdy Folks,
> >
> > I recent had a package start failing because I wasn't checking properly
> in
> > my tests to make sure my suggested packages were installed before running
> > tests. I think this is something new running on CRAN where packages are
> > tested with only the packages specified as Imports in the DESCRIPTION
> file
> > are installed. It took me a bit of back and forth to get all of these
> > issues worked out.  I was wondering if anyone has a good way to run R CMD
> > check with only the imports installed?  A github action, or a
> > specific platform on rhub?
> >
> > Thank you,
> >
> > John
> > :wq
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
>
>

	[[alternative HTML version deleted]]


From w|||ge@rty @end|ng |rom gm@||@com  Tue Jul 18 16:52:32 2023
From: w|||ge@rty @end|ng |rom gm@||@com (William Gearty)
Date: Tue, 18 Jul 2023 10:52:32 -0400
Subject: [R-pkg-devel] Check package without suggests
In-Reply-To: <CANAiAiVZ-xP_1BO8O5QZStcs506ZnVJyw1eYFuPr=ZSpcNOXOA@mail.gmail.com>
References: <CANAiAiVZ-xP_1BO8O5QZStcs506ZnVJyw1eYFuPr=ZSpcNOXOA@mail.gmail.com>
Message-ID: <CADH2hDmUtXXXcXYXmub1dbTST+NyH6tPVW=y907ZEdgY1NykRA@mail.gmail.com>

Hi John,

You need to set the R CMD check environment variable
_R_CHECK_FORCE_SUGGESTS_ to FALSE/0. You should be able to do this
with the env_vars
argument in rhub::check(). You can also achieve this with github actions by
customizing your yaml file (example here:
https://github.com/willgearty/deeptime/blob/master/.github/workflows/R-CMD-check.yaml#L57
).

Best,
Will

------------------------------
*William Gearty*
*Lerner-Gray Postdoctoral Research Fellow*
Division of Paleontology
American Museum of Natural History
williamgearty.com



On Tue, Jul 18, 2023 at 10:38?AM John Harrold <john.m.harrold at gmail.com>
wrote:

> Howdy Folks,
>
> I recent had a package start failing because I wasn't checking properly in
> my tests to make sure my suggested packages were installed before running
> tests. I think this is something new running on CRAN where packages are
> tested with only the packages specified as Imports in the DESCRIPTION file
> are installed. It took me a bit of back and forth to get all of these
> issues worked out.  I was wondering if anyone has a good way to run R CMD
> check with only the imports installed?  A github action, or a
> specific platform on rhub?
>
> Thank you,
>
> John
> :wq
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From g@br|e|@b|@|n @end|ng |rom @p@gov@br  Tue Jul 18 18:37:46 2023
From: g@br|e|@b|@|n @end|ng |rom @p@gov@br (Gabriel Constantino Blain)
Date: Tue, 18 Jul 2023 16:37:46 +0000
Subject: [R-pkg-devel] Package PowerSDI NOTES
Message-ID: <CPYP284MB15437A8686D73F4501F312DBA738A@CPYP284MB1543.BRAP284.PROD.OUTLOOK.COM>

Dears,
I submitted my R package to CRAN.
However, it didn't pass the CRAN checks because of 2 notes:
Note 1:
Flavor: r-devel-linux-x86_64-debian-gcc, r-devel-windows-x86_64
Check: CRAN incoming feasibility, Result: NOTE
  Maintainer: 'Gabriel Constantino Blain <gabriel.blain at sp.gov.br>'
  New submission
    Possibly misspelled words in DESCRIPTION:
    EP (14:45)
    NASAPOWER (11:18)
    OperatSDI (12:9)
    PowerSDI (7:18, 13:9)
    SPEI (3:31, 7:50, 10:20)
    SPI (3:23, 7:42, 10:12)
    ScientSDI (9:19)
    evapotranspitation (13:44)
    subperiods (15:76)
Note 2:
Flavor: r-devel-windows-x86_64
Check: examples, Result: NOTE
  Examples with CPU (user + system) or elapsed time > 10s
             user system elapsed
  ScientSDI 82.71   0.75   88.00
  Reference 29.75   0.05   29.80
  Accuracy  10.02   1.11   11.12
Flavor: r-devel-linux-x86_64-debian-gcc
Check: examples, Result: NOTE
  Examples with CPU (user + system) or elapsed time > 5s
              user system elapsed
  ScientSDI 52.674  0.176  57.765
  Reference 20.749  0.148  20.898
  Accuracy   6.001  0.024   6.024

Regarding note 1, not all the words are misspelled,
EP, SPI and SPEI are acronyms
OperatSDI and ScientSDI are functions of my package
PowerSDI is the name of my package's name
 NASAPOWER is the project's name.

Regarding note 2, I don't know what's wrong. Is it related to the time to run the examples (>5s)? If is it so, it is not an error. There are so many calculations that it does take some time to do it.

The package is available at https://github.com/gabrielblain/PowerSDI
I really appreciate any help you can provide.
Best regards
Gabriel

	[[alternative HTML version deleted]]


From @vr@h@m@@d|er @end|ng |rom gm@||@com  Tue Jul 18 20:24:45 2023
From: @vr@h@m@@d|er @end|ng |rom gm@||@com (Avraham Adler)
Date: Tue, 18 Jul 2023 21:24:45 +0300
Subject: [R-pkg-devel] Package PowerSDI NOTES
In-Reply-To: <CPYP284MB15437A8686D73F4501F312DBA738A@CPYP284MB1543.BRAP284.PROD.OUTLOOK.COM>
References: <CPYP284MB15437A8686D73F4501F312DBA738A@CPYP284MB1543.BRAP284.PROD.OUTLOOK.COM>
Message-ID: <A40C34DD-C140-4C26-9833-107EBBD5E493@gmail.com>

Hello, Gabriel. 

CRAN policy is to rarely, if ever, allow long-running examples. It would be best if you could give an example of the function which requires as little run time as possible. Perhaps pre-compute some stages?

Avi

Sent from my iPhone

> On Jul 18, 2023, at 9:07 PM, Gabriel Constantino Blain <gabriel.blain at sp.gov.br> wrote:
> 
> ?Dears,
> I submitted my R package to CRAN.
> However, it didn't pass the CRAN checks because of 2 notes:
> Note 1:
> Flavor: r-devel-linux-x86_64-debian-gcc, r-devel-windows-x86_64
> Check: CRAN incoming feasibility, Result: NOTE
>  Maintainer: 'Gabriel Constantino Blain <gabriel.blain at sp.gov.br>'
>  New submission
>    Possibly misspelled words in DESCRIPTION:
>    EP (14:45)
>    NASAPOWER (11:18)
>    OperatSDI (12:9)
>    PowerSDI (7:18, 13:9)
>    SPEI (3:31, 7:50, 10:20)
>    SPI (3:23, 7:42, 10:12)
>    ScientSDI (9:19)
>    evapotranspitation (13:44)
>    subperiods (15:76)
> Note 2:
> Flavor: r-devel-windows-x86_64
> Check: examples, Result: NOTE
>  Examples with CPU (user + system) or elapsed time > 10s
>             user system elapsed
>  ScientSDI 82.71   0.75   88.00
>  Reference 29.75   0.05   29.80
>  Accuracy  10.02   1.11   11.12
> Flavor: r-devel-linux-x86_64-debian-gcc
> Check: examples, Result: NOTE
>  Examples with CPU (user + system) or elapsed time > 5s
>              user system elapsed
>  ScientSDI 52.674  0.176  57.765
>  Reference 20.749  0.148  20.898
>  Accuracy   6.001  0.024   6.024
> 
> Regarding note 1, not all the words are misspelled,
> EP, SPI and SPEI are acronyms
> OperatSDI and ScientSDI are functions of my package
> PowerSDI is the name of my package's name
> NASAPOWER is the project's name.
> 
> Regarding note 2, I don't know what's wrong. Is it related to the time to run the examples (>5s)? If is it so, it is not an error. There are so many calculations that it does take some time to do it.
> 
> The package is available at https://github.com/gabrielblain/PowerSDI
> I really appreciate any help you can provide.
> Best regards
> Gabriel
> 
>    [[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From kry|ov@r00t @end|ng |rom gm@||@com  Tue Jul 18 20:30:17 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Tue, 18 Jul 2023 21:30:17 +0300
Subject: [R-pkg-devel] Package PowerSDI NOTES
In-Reply-To: <CPYP284MB15437A8686D73F4501F312DBA738A@CPYP284MB1543.BRAP284.PROD.OUTLOOK.COM>
References: <CPYP284MB15437A8686D73F4501F312DBA738A@CPYP284MB1543.BRAP284.PROD.OUTLOOK.COM>
Message-ID: <20230718213017.28e8bb3c@Tarkus>

On Tue, 18 Jul 2023 16:37:46 +0000
Gabriel Constantino Blain <gabriel.blain at sp.gov.br> wrote:

> Regarding note 1, not all the words are misspelled,

This is fine, especially if you add a comment to your package
submission.

> Regarding note 2, I don't know what's wrong. Is it related to the
> time to run the examples (>5s)? If is it so, it is not an error.
> There are so many calculations that it does take some time to do it.

I'm sorry, but it's a policy of CRAN to require examples that run "for
no more than a few seconds each":
https://cran.r-project.org/web/packages/policies.html

I know it may be non-trivial, but I hope it's possible to reduce the
amount of data processed by your examples until they take around 5
seconds or less on a typical computer. For example, could it be
possible to reduce the date range of the ScientSDI example to one year
and/or increase(?) the TS parameter?

-- 
Best regards,
Ivan


From murdoch@dunc@n @end|ng |rom gm@||@com  Tue Jul 18 21:11:45 2023
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Tue, 18 Jul 2023 15:11:45 -0400
Subject: [R-pkg-devel] Package PowerSDI NOTES
In-Reply-To: <CPYP284MB15437A8686D73F4501F312DBA738A@CPYP284MB1543.BRAP284.PROD.OUTLOOK.COM>
References: <CPYP284MB15437A8686D73F4501F312DBA738A@CPYP284MB1543.BRAP284.PROD.OUTLOOK.COM>
Message-ID: <92e931a4-8e58-0e0d-2838-288f39cf059d@gmail.com>

On 18/07/2023 12:37 p.m., Gabriel Constantino Blain wrote:
> Dears,
> I submitted my R package to CRAN.
> However, it didn't pass the CRAN checks because of 2 notes:
> Note 1:
> Flavor: r-devel-linux-x86_64-debian-gcc, r-devel-windows-x86_64
> Check: CRAN incoming feasibility, Result: NOTE
>    Maintainer: 'Gabriel Constantino Blain <gabriel.blain at sp.gov.br>'
>    New submission
>      Possibly misspelled words in DESCRIPTION:
>      EP (14:45)
>      NASAPOWER (11:18)
>      OperatSDI (12:9)
>      PowerSDI (7:18, 13:9)
>      SPEI (3:31, 7:50, 10:20)
>      SPI (3:23, 7:42, 10:12)
>      ScientSDI (9:19)
>      evapotranspitation (13:44)
>      subperiods (15:76)
> Note 2:
> Flavor: r-devel-windows-x86_64
> Check: examples, Result: NOTE
>    Examples with CPU (user + system) or elapsed time > 10s
>               user system elapsed
>    ScientSDI 82.71   0.75   88.00
>    Reference 29.75   0.05   29.80
>    Accuracy  10.02   1.11   11.12
> Flavor: r-devel-linux-x86_64-debian-gcc
> Check: examples, Result: NOTE
>    Examples with CPU (user + system) or elapsed time > 5s
>                user system elapsed
>    ScientSDI 52.674  0.176  57.765
>    Reference 20.749  0.148  20.898
>    Accuracy   6.001  0.024   6.024
> 
> Regarding note 1, not all the words are misspelled,
> EP, SPI and SPEI are acronyms
> OperatSDI and ScientSDI are functions of my package
> PowerSDI is the name of my package's name
>   NASAPOWER is the project's name.

Writing R Extensions section 1.1.1 describes some rules for quoting 
non-English words.  I think they imply OperatSDI, ScientSDI and PowerSDI 
should be in single quotes.  I am not sure whether that also applies to 
your other non-English words.

Duncan Murdoch

> 
> Regarding note 2, I don't know what's wrong. Is it related to the time to run the examples (>5s)? If is it so, it is not an error. There are so many calculations that it does take some time to do it.
> 
> The package is available at https://github.com/gabrielblain/PowerSDI
> I really appreciate any help you can provide.
> Best regards
> Gabriel
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From bbo|ker @end|ng |rom gm@||@com  Tue Jul 18 23:33:59 2023
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Tue, 18 Jul 2023 17:33:59 -0400
Subject: [R-pkg-devel] Package PowerSDI NOTES
In-Reply-To: <92e931a4-8e58-0e0d-2838-288f39cf059d@gmail.com>
References: <CPYP284MB15437A8686D73F4501F312DBA738A@CPYP284MB1543.BRAP284.PROD.OUTLOOK.COM>
 <92e931a4-8e58-0e0d-2838-288f39cf059d@gmail.com>
Message-ID: <014be75b-8cd4-5f47-7c58-73b89ae7972e@gmail.com>

   See also

https://ropensci.org/blog/2022/01/21/ropensci-news-digest-january-2022/#to-quote-or-not-to-quote-non-existing-words-in-description

https://stat.ethz.ch/R-manual/R-patched/library/utils/html/aspell-utils.html

On 2023-07-18 3:11 p.m., Duncan Murdoch wrote:
> On 18/07/2023 12:37 p.m., Gabriel Constantino Blain wrote:
>> Dears,
>> I submitted my R package to CRAN.
>> However, it didn't pass the CRAN checks because of 2 notes:
>> Note 1:
>> Flavor: r-devel-linux-x86_64-debian-gcc, r-devel-windows-x86_64
>> Check: CRAN incoming feasibility, Result: NOTE
>> ?? Maintainer: 'Gabriel Constantino Blain <gabriel.blain at sp.gov.br>'
>> ?? New submission
>> ???? Possibly misspelled words in DESCRIPTION:
>> ???? EP (14:45)
>> ???? NASAPOWER (11:18)
>> ???? OperatSDI (12:9)
>> ???? PowerSDI (7:18, 13:9)
>> ???? SPEI (3:31, 7:50, 10:20)
>> ???? SPI (3:23, 7:42, 10:12)
>> ???? ScientSDI (9:19)
>> ???? evapotranspitation (13:44)
>> ???? subperiods (15:76)
>> Note 2:
>> Flavor: r-devel-windows-x86_64
>> Check: examples, Result: NOTE
>> ?? Examples with CPU (user + system) or elapsed time > 10s
>> ????????????? user system elapsed
>> ?? ScientSDI 82.71?? 0.75?? 88.00
>> ?? Reference 29.75?? 0.05?? 29.80
>> ?? Accuracy? 10.02?? 1.11?? 11.12
>> Flavor: r-devel-linux-x86_64-debian-gcc
>> Check: examples, Result: NOTE
>> ?? Examples with CPU (user + system) or elapsed time > 5s
>> ?????????????? user system elapsed
>> ?? ScientSDI 52.674? 0.176? 57.765
>> ?? Reference 20.749? 0.148? 20.898
>> ?? Accuracy?? 6.001? 0.024?? 6.024
>>
>> Regarding note 1, not all the words are misspelled,
>> EP, SPI and SPEI are acronyms
>> OperatSDI and ScientSDI are functions of my package
>> PowerSDI is the name of my package's name
>> ? NASAPOWER is the project's name.
> 
> Writing R Extensions section 1.1.1 describes some rules for quoting 
> non-English words.? I think they imply OperatSDI, ScientSDI and PowerSDI 
> should be in single quotes.? I am not sure whether that also applies to 
> your other non-English words.
> 
> Duncan Murdoch
> 
>>
>> Regarding note 2, I don't know what's wrong. Is it related to the time 
>> to run the examples (>5s)? If is it so, it is not an error. There are 
>> so many calculations that it does take some time to do it.
>>
>> The package is available at https://github.com/gabrielblain/PowerSDI
>> I really appreciate any help you can provide.
>> Best regards
>> Gabriel
>>
>> ????[[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From bbo|ker @end|ng |rom gm@||@com  Tue Jul 18 23:51:03 2023
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Tue, 18 Jul 2023 17:51:03 -0400
Subject: [R-pkg-devel] "Version contains leading zeroes" note: clarity
Message-ID: <d36d84e6-d4ac-5256-dec5-1b28bdcc6c54@gmail.com>

   Hi folks,

   I got the dreaded

Version contains leading zeroes

NOTE from a package check - the version was 0.0.1.000.

until I dug into the code and found the regex "(^|[.-])0[0-9]+" I didn't 
realize the restriction was on leading zeroes *within a version 
component* - I was interpreting it as leftmost in the whole version 
(i.e., the initial 0).

   I eventually found the documentation in ?package_version (feels like 
it should also be pointed to somewhere in Writing R Extensions?

Numeric versions are sequences of one or more non-negative
      integers, usually (e.g., in package ?DESCRIPTION? files)
      represented as character strings with the elements of the sequence
      concatenated and separated by single ?.? or ?-? characters.  R
      package versions consist of at least two such integers, an R
      system version of exactly three (major, minor and patchlevel).

Doesn't say anything about leading zero(e)s here ...

   "Zeroes" looks weird to me, but I see that "zeroes" is used on 26 
lines in .Rd files in the R code base, while "zeros" is used on 36 lines 
... so close to a tie. (Maybe someone wants to clean this up ... ? 
Maybe a mini-project for the R bug sprint at the end of the summer?

   Also, I'm sure this has been asked a few 100 times but: a new-to-CRAN 
maintainer triggers a NOTE.  Is there any way that a new user would know 
that this was informational only?  (There is also a 
Note_to_CRAN_maintainers 
<https://github.com/r-devel/r-svn/blob/0252cdbf14c73acd26ae2090df3c04aa6118b523/src/library/tools/R/check.R#L6009>: 
wouldn't that be more appropriate here?)

   cheers
    Ben Bolker


From henr|k@bengt@@on @end|ng |rom gm@||@com  Wed Jul 19 09:21:46 2023
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Wed, 19 Jul 2023 09:21:46 +0200
Subject: [R-pkg-devel] Check package without suggests
In-Reply-To: <CADH2hDmUtXXXcXYXmub1dbTST+NyH6tPVW=y907ZEdgY1NykRA@mail.gmail.com>
References: <CANAiAiVZ-xP_1BO8O5QZStcs506ZnVJyw1eYFuPr=ZSpcNOXOA@mail.gmail.com>
 <CADH2hDmUtXXXcXYXmub1dbTST+NyH6tPVW=y907ZEdgY1NykRA@mail.gmail.com>
Message-ID: <CAFDcVCR_931ZkBY4b+EFnEm0cE0Os5rfaK1xkmrD7v46u6Z8tw@mail.gmail.com>

Hello,

this is *not* a new behavior on CRAN, at least on (re-)submissions to
CRAN.  The package has to pass R CMD check --as-cran with all OK. If
one of the Suggests:ed package is not installed, but one of your
examples or package tests needed it, that would be detected by the
check system.

The win-builder service is will detect this
(https://win-builder.r-project.org/).

See <https://github.com/HenrikBengtsson/port4me/blob/develop/.github/workflows/R-CMD-check.yaml>
for an example how to do this on GitHub Actions.

If you're on macOS, and have installed R the default way, it takes
more work to test on that platform. It works out of the box on Linux
and MS Windows.  See the '[R-SIG-Mac] CRAN installer for macOS -
directory permissions' thread started in April 2022
<https://stat.ethz.ch/pipermail/r-sig-mac/2022-April/014371.html>,
continued in May 2022
<https://stat.ethz.ch/pipermail/r-sig-mac/2022-May/thread.html>, and
June 2022 <https://stat.ethz.ch/pipermail/r-sig-mac/2022-June/014469.html>.
It was then renamed to 'System-wide site library [Was: CRAN installer
for macOS - directory permissions]' in June 2022
<https://stat.ethz.ch/pipermail/r-sig-mac/2022-June/014501.html>.

/Henrik

On Tue, Jul 18, 2023 at 8:07?PM William Gearty <willgearty at gmail.com> wrote:
>
> Hi John,
>
> You need to set the R CMD check environment variable
> _R_CHECK_FORCE_SUGGESTS_ to FALSE/0. You should be able to do this
> with the env_vars
> argument in rhub::check(). You can also achieve this with github actions by
> customizing your yaml file (example here:
> https://github.com/willgearty/deeptime/blob/master/.github/workflows/R-CMD-check.yaml#L57
> ).
>
> Best,
> Will
>
> ------------------------------
> *William Gearty*
> *Lerner-Gray Postdoctoral Research Fellow*
> Division of Paleontology
> American Museum of Natural History
> williamgearty.com
>
>
>
> On Tue, Jul 18, 2023 at 10:38?AM John Harrold <john.m.harrold at gmail.com>
> wrote:
>
> > Howdy Folks,
> >
> > I recent had a package start failing because I wasn't checking properly in
> > my tests to make sure my suggested packages were installed before running
> > tests. I think this is something new running on CRAN where packages are
> > tested with only the packages specified as Imports in the DESCRIPTION file
> > are installed. It took me a bit of back and forth to get all of these
> > issues worked out.  I was wondering if anyone has a good way to run R CMD
> > check with only the imports installed?  A github action, or a
> > specific platform on rhub?
> >
> > Thank you,
> >
> > John
> > :wq
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-package-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-package-devel
> >
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From J||@n@W@ng @end|ng |rom tu|t@@edu  Wed Jul 19 17:11:33 2023
From: J||@n@W@ng @end|ng |rom tu|t@@edu (Wang, Jifan)
Date: Wed, 19 Jul 2023 15:11:33 +0000
Subject: [R-pkg-devel] Reference in the DESCRIPTION file
Message-ID: <MN2PR05MB7039C50C0E46C1BD61AF94CF9B39A@MN2PR05MB7039.namprd05.prod.outlook.com>

Hi all,
I was asked to add references describing the methods in my package. I plan to publish a paper describing this package and methods in details, but I wanted to refer the CRAN page in our paper. I have described the method briefly in the function documentation. I wonder what is the order of publishing a paper vs. submitting to CRAN. Is it fine to respond in the resubmission saying that we do not have the reference now but will add it later?

Thank you,
Jifan


	[[alternative HTML version deleted]]


From ru@@e||@g@@|mond @end|ng |rom gm@||@com  Wed Jul 19 20:55:04 2023
From: ru@@e||@g@@|mond @end|ng |rom gm@||@com (Russell Almond)
Date: Wed, 19 Jul 2023 14:55:04 -0400
Subject: [R-pkg-devel] Package Load fails to find 3rd Party DLL
In-Reply-To: <20230717123039.64db63fa@arachnoid>
References: <7feb7697-be2f-7bf8-3e7c-4276a0cb69c8@gmail.com>
 <20230714181441.03c47c08@arachnoid>
 <06ea7d13-ab84-dc3b-2c5d-1acb574260b1@gmail.com>
 <20230714222551.10428ef8@Tarkus> <20230717123039.64db63fa@arachnoid>
Message-ID: <0b9d4329-36b5-3a5d-d224-5080fda581ae@gmail.com>

Not sure if I reported the success here or not.

Copying the 3rd party DLL, but not the .lib file, to the src directory 
does work around the bug in the linker.

The complete working solution can be seen at 
https://github.com/ralmond/RNetica.

Thanks for the help.
	--Russell


On 7/17/23 5:30 AM, Ivan Krylov wrote:
> ? Fri, 14 Jul 2023 22:25:51 +0300
> Ivan Krylov <krylov.r00t at gmail.com> ?????:
> 
>> Maybe it's a red herring. Maybe the message from nm about missing file
>> has always been harmless, and what we're seeing here is a bug in the
>> toolchain; perhaps ld.exe doesn't like something about Netica.lib so
>> much that it crashes. I think that's less likely. If you run the
>> commands manually but without mentioning NeticaDLL, do you get a DLL
>> in the end?
> 
> Judging by your build logs, this could be a toolchain bug. If you set
> the *.lib file aside and only give the *.dll to the linker (using
> -l:Netica.dll if necessary), does it still fail? I know that GCC can
> link directly to *.dll files, without relying on import libraries.
>


From @p@@nder@on @end|ng |rom gm@||@com  Wed Jul 19 22:18:44 2023
From: @p@@nder@on @end|ng |rom gm@||@com (Steven P Sanderson II)
Date: Wed, 19 Jul 2023 16:18:44 -0400
Subject: [R-pkg-devel] Reference in the DESCRIPTION file
In-Reply-To: <MN2PR05MB7039C50C0E46C1BD61AF94CF9B39A@MN2PR05MB7039.namprd05.prod.outlook.com>
References: <MN2PR05MB7039C50C0E46C1BD61AF94CF9B39A@MN2PR05MB7039.namprd05.prod.outlook.com>
Message-ID: <CALXsb3J07hK4qxbDj_wxEHesXgg-O=kNQwoTBrMO73piehB+fQ@mail.gmail.com>

It should be, I have done this, I do not have a paper published for my
packages so there is nothing to refer to for them. This can be the case for
a great many packages.

On Wed, Jul 19, 2023 at 2:26?PM Wang, Jifan <Jifan.Wang at tufts.edu> wrote:

> Hi all,
> I was asked to add references describing the methods in my package. I plan
> to publish a paper describing this package and methods in details, but I
> wanted to refer the CRAN page in our paper. I have described the method
> briefly in the function documentation. I wonder what is the order of
> publishing a paper vs. submitting to CRAN. Is it fine to respond in the
> resubmission saying that we do not have the reference now but will add it
> later?
>
> Thank you,
> Jifan
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>


-- 
Steven P Sanderson II, MPH
Book on Lulu <http://goo.gl/lmrlFI>
Personal Site <http://www.spsanderson.com>

	[[alternative HTML version deleted]]


From J||@n@W@ng @end|ng |rom tu|t@@edu  Wed Jul 19 22:24:47 2023
From: J||@n@W@ng @end|ng |rom tu|t@@edu (Wang, Jifan)
Date: Wed, 19 Jul 2023 20:24:47 +0000
Subject: [R-pkg-devel] [External] Re:  Reference in the DESCRIPTION file
In-Reply-To: <CALXsb3J07hK4qxbDj_wxEHesXgg-O=kNQwoTBrMO73piehB+fQ@mail.gmail.com>
References: <MN2PR05MB7039C50C0E46C1BD61AF94CF9B39A@MN2PR05MB7039.namprd05.prod.outlook.com>
 <CALXsb3J07hK4qxbDj_wxEHesXgg-O=kNQwoTBrMO73piehB+fQ@mail.gmail.com>
Message-ID: <MN2PR05MB70397A5E24CC60EC97F7986C9B39A@MN2PR05MB7039.namprd05.prod.outlook.com>

Perfect, thank you!

From: Steven P Sanderson II <spsanderson at gmail.com>
Sent: Wednesday, July 19, 2023 4:19 PM
To: Wang, Jifan <Jifan.Wang at tufts.edu>
Cc: r-package-devel at r-project.org
Subject: [External] Re: [R-pkg-devel] Reference in the DESCRIPTION file

It should be, I have done this, I do not have a paper published for my packages so there is nothing to refer to for them. This can be the case for a great many packages.

On Wed, Jul 19, 2023 at 2:26?PM Wang, Jifan <Jifan.Wang at tufts.edu<mailto:Jifan.Wang at tufts.edu>> wrote:
Hi all,
I was asked to add references describing the methods in my package. I plan to publish a paper describing this package and methods in details, but I wanted to refer the CRAN page in our paper. I have described the method briefly in the function documentation. I wonder what is the order of publishing a paper vs. submitting to CRAN. Is it fine to respond in the resubmission saying that we do not have the reference now but will add it later?

Thank you,
Jifan


        [[alternative HTML version deleted]]

______________________________________________
R-package-devel at r-project.org<mailto:R-package-devel at r-project.org> mailing list
https://stat.ethz.ch/mailman/listinfo/r-package-devel


--
Steven P Sanderson II, MPH
Book on Lulu<http://goo.gl/lmrlFI>
Personal Site<http://www.spsanderson.com>

Caution: This message originated from outside of the Tufts University organization. Please exercise caution when clicking links or opening attachments. When in doubt, email the TTS Service Desk at it at tufts.edu<mailto:it at tufts.edu> or call them directly at 617-627-3376.


	[[alternative HTML version deleted]]


From og@n@m@nc@rc| @end|ng |rom gm@||@com  Thu Jul 20 22:56:31 2023
From: og@n@m@nc@rc| @end|ng |rom gm@||@com (Ogan Mancarci)
Date: Thu, 20 Jul 2023 13:56:31 -0700
Subject: [R-pkg-devel] Re-submission of removed package
Message-ID: <CADPf3_0H1Tpek1HB8uzwh3ZpxV_hF5ha_MRCK4s1PSY9LRDzSw@mail.gmail.com>

I am an author but not the maintainer of the package staplr that was
recently removed from CRAN. I have been trying to reach the maintainer to
resubmit the package after the required fixes but was unsuccessful in
doing so. I have submitted the package myself but it appears that it
requires approval from the creator to finalise submission which I am unsure
if we'll get. What is the procedure to follow in this case?

Cheers,
Ogan

	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Thu Jul 20 23:16:52 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Fri, 21 Jul 2023 00:16:52 +0300
Subject: [R-pkg-devel] Re-submission of removed package
In-Reply-To: <CADPf3_0H1Tpek1HB8uzwh3ZpxV_hF5ha_MRCK4s1PSY9LRDzSw@mail.gmail.com>
References: <CADPf3_0H1Tpek1HB8uzwh3ZpxV_hF5ha_MRCK4s1PSY9LRDzSw@mail.gmail.com>
Message-ID: <20230721001652.220eee36@Tarkus>

On Thu, 20 Jul 2023 13:56:31 -0700
Ogan Mancarci <ogan.mancarci at gmail.com> wrote:

> I have been trying to reach the maintainer to resubmit the package
> after the required fixes but was unsuccessful in doing so. I have
> submitted the package myself but it appears that it requires approval
> from the creator to finalise submission which I am unsure if we'll
> get. What is the procedure to follow in this case?

Would you like to become the maintainer instead?

Here's what CRAN policy has to say:

>> Explain any change in the maintainer?s email address and if possible
>> send confirmation from the previous address (by a separate email to
>> CRAN-submissions at R-project.org) or explain why it is not possible. 
 -- https://cran.r-project.org/web/packages/policies.html

I think you can change the Maintainer: field and note the original
maintainer being unreachable in the submission comment. I would expect
it to take some time to confirm that the original maintainer is
actually unavailable.

-- 
Best regards,
Ivan


From og@n@m@nc@rc| @end|ng |rom gm@||@com  Fri Jul 21 00:56:19 2023
From: og@n@m@nc@rc| @end|ng |rom gm@||@com (Ogan Mancarci)
Date: Thu, 20 Jul 2023 15:56:19 -0700
Subject: [R-pkg-devel] Re-submission of removed package
In-Reply-To: <20230721001652.220eee36@Tarkus>
References: <CADPf3_0H1Tpek1HB8uzwh3ZpxV_hF5ha_MRCK4s1PSY9LRDzSw@mail.gmail.com>
 <20230721001652.220eee36@Tarkus>
Message-ID: <CADPf3_2wLDdT+GK0Qs-=VL6YfgbP-XBFqh+tXr5NU-s6pHmOpw@mail.gmail.com>

I would if the maintainer really is unavailable but it is possible that
it's just a rather long vacation so I'm happy to wait while, especially
since the package remains available on github regardless.

But just to confirm, there aren't any shorter term workarounds that'd bring
the package back without changing maintainers? If so I will give a bit more
time before re-submitting with myself as the maintainer.

Cheers,
Ogan

On Thu, Jul 20, 2023 at 2:16?PM Ivan Krylov <krylov.r00t at gmail.com> wrote:

> On Thu, 20 Jul 2023 13:56:31 -0700
> Ogan Mancarci <ogan.mancarci at gmail.com> wrote:
>
> > I have been trying to reach the maintainer to resubmit the package
> > after the required fixes but was unsuccessful in doing so. I have
> > submitted the package myself but it appears that it requires approval
> > from the creator to finalise submission which I am unsure if we'll
> > get. What is the procedure to follow in this case?
>
> Would you like to become the maintainer instead?
>
> Here's what CRAN policy has to say:
>
> >> Explain any change in the maintainer?s email address and if possible
> >> send confirmation from the previous address (by a separate email to
> >> CRAN-submissions at R-project.org) or explain why it is not possible.
>  -- https://cran.r-project.org/web/packages/policies.html
>
> I think you can change the Maintainer: field and note the original
> maintainer being unreachable in the submission comment. I would expect
> it to take some time to confirm that the original maintainer is
> actually unavailable.
>
> --
> Best regards,
> Ivan
>

	[[alternative HTML version deleted]]


From joh@nne@@r@nke @end|ng |rom jrwb@de  Fri Jul 21 09:43:49 2023
From: joh@nne@@r@nke @end|ng |rom jrwb@de (Johannes Ranke)
Date: Fri, 21 Jul 2023 09:43:49 +0200
Subject: [R-pkg-devel] Undocumented code objects:   '.__global__'
Message-ID: <2910383.Icojqenx9y@ryz>

Dear all,

while preparing a maintenance release of a dated package of mine, I was struck 
by this WARNING from the R-devel version of win-builder:

* checking for missing documentation entries ... WARNING
Undocumented code objects:
  '.__global__'

I don't understand where this code object '__global__' may come from. I 
checked in the R/*.R sources as well as in the data/*.rda files.

The package source lives here:

https://cgit.jrwb.de/drfit

Kind regards,

Johannes


From kry|ov@r00t @end|ng |rom gm@||@com  Fri Jul 21 09:47:52 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Fri, 21 Jul 2023 10:47:52 +0300
Subject: [R-pkg-devel] Undocumented code objects:   '.__global__'
In-Reply-To: <2910383.Icojqenx9y@ryz>
References: <2910383.Icojqenx9y@ryz>
Message-ID: <20230721104752.7d55d431@Tarkus>

On Fri, 21 Jul 2023 09:43:49 +0200
Johannes Ranke <johannes.ranke at jrwb.de> wrote:

> * checking for missing documentation entries ... WARNING
> Undocumented code objects:
>   '.__global__'
> 
> I don't understand where this code object '__global__' may come from.

It's an implementation detail of utils::globalVariables(). Normally, R
CMD check wouldn't complain about it, but because of exportPattern(".")
in your NAMESPACE it's exported, and thus considered to be a part of
your package's API, and thus required to be documented.

It may involve more typing, but export()ing individual functions will
prevent your package from exporting some other non-API object by
accident.

-- 
Best regards,
Ivan


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Fri Jul 21 13:39:21 2023
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Fri, 21 Jul 2023 13:39:21 +0200
Subject: [R-pkg-devel] Re-submission of removed package
In-Reply-To: <CADPf3_2wLDdT+GK0Qs-=VL6YfgbP-XBFqh+tXr5NU-s6pHmOpw@mail.gmail.com>
References: <CADPf3_0H1Tpek1HB8uzwh3ZpxV_hF5ha_MRCK4s1PSY9LRDzSw@mail.gmail.com>
 <20230721001652.220eee36@Tarkus>
 <CADPf3_2wLDdT+GK0Qs-=VL6YfgbP-XBFqh+tXr5NU-s6pHmOpw@mail.gmail.com>
Message-ID: <b5d83bba-250e-2f7f-2f88-9b84dad4be47@statistik.tu-dortmund.de>



On 21.07.2023 00:56, Ogan Mancarci wrote:
> I would if the maintainer really is unavailable but it is possible that
> it's just a rather long vacation so I'm happy to wait while, especially
> since the package remains available on github regardless.
> 
> But just to confirm, there aren't any shorter term workarounds that'd bring
> the package back without changing maintainers? If so I will give a bit more
> time before re-submitting with myself as the maintainer.

Right.

Best,
Uwe Ligges




> Cheers,
> Ogan
> 
> On Thu, Jul 20, 2023 at 2:16?PM Ivan Krylov <krylov.r00t at gmail.com> wrote:
> 
>> On Thu, 20 Jul 2023 13:56:31 -0700
>> Ogan Mancarci <ogan.mancarci at gmail.com> wrote:
>>
>>> I have been trying to reach the maintainer to resubmit the package
>>> after the required fixes but was unsuccessful in doing so. I have
>>> submitted the package myself but it appears that it requires approval
>>> from the creator to finalise submission which I am unsure if we'll
>>> get. What is the procedure to follow in this case?
>>
>> Would you like to become the maintainer instead?
>>
>> Here's what CRAN policy has to say:
>>
>>>> Explain any change in the maintainer?s email address and if possible
>>>> send confirmation from the previous address (by a separate email to
>>>> CRAN-submissions at R-project.org) or explain why it is not possible.
>>   -- https://cran.r-project.org/web/packages/policies.html
>>
>> I think you can change the Maintainer: field and note the original
>> maintainer being unreachable in the submission comment. I would expect
>> it to take some time to confirm that the original maintainer is
>> actually unavailable.
>>
>> --
>> Best regards,
>> Ivan
>>
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From joh@nne@@r@nke @end|ng |rom jrwb@de  Fri Jul 21 14:40:30 2023
From: joh@nne@@r@nke @end|ng |rom jrwb@de (Johannes Ranke)
Date: Fri, 21 Jul 2023 14:40:30 +0200
Subject: [R-pkg-devel] Undocumented code objects:   '.__global__'
In-Reply-To: <20230721104752.7d55d431@Tarkus>
References: <2910383.Icojqenx9y@ryz> <20230721104752.7d55d431@Tarkus>
Message-ID: <5256815.LvFx2qVVIh@ryz>

Am Freitag, 21. Juli 2023, 09:47:52 CEST schrieb Ivan Krylov:
> On Fri, 21 Jul 2023 09:43:49 +0200
> 
> Johannes Ranke <johannes.ranke at jrwb.de> wrote:
> > * checking for missing documentation entries ... WARNING
> > 
> > Undocumented code objects:
> >   '.__global__'
> > 
> > I don't understand where this code object '__global__' may come from.
> 
> It's an implementation detail of utils::globalVariables(). Normally, R
> CMD check wouldn't complain about it, but because of exportPattern(".")
> in your NAMESPACE it's exported, and thus considered to be a part of
> your package's API, and thus required to be documented.
> 
> It may involve more typing, but export()ing individual functions will
> prevent your package from exporting some other non-API object by
> accident.

Thanks, Ivan, for your insightful coment!

Specifying exports in the NAMESPACE file solved it.

Kind regards,

Johannes


From edd @end|ng |rom deb|@n@org  Sat Jul 22 14:26:08 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Sat, 22 Jul 2023 07:26:08 -0500
Subject: [R-pkg-devel] macOS results not mirrored/updated at CRAN
In-Reply-To: <SY4PR01MB56580500A52A8E91A06D1C53AC3AA@SY4PR01MB5658.ausprd01.prod.outlook.com>
References: <25775.16177.937585.974774@rob.eddelbuettel.com>
 <25779.10961.299898.418341@rob.eddelbuettel.com>
 <SY4PR01MB56580500A52A8E91A06D1C53AC3AA@SY4PR01MB5658.ausprd01.prod.outlook.com>
Message-ID: <25787.51936.871790.433852@rob.eddelbuettel.com>


Simon,

This still persists. As Murray reported, it happened for a while now, it is
still happening eg package tiledb has been rebuilt everywhere [1] since the
upload a few days ago -- yet the results page still reports builds two
uploads ago [2] for both arm64 variants of your macOS setup.

Can you take a look, please?

Thanks in advance,  Dirk


[1] https://cran.r-project.org/package=tiledb
[2] https://cran.r-project.org/web/checks/check_results_tiledb.html
-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From trb5me @end|ng |rom v|rg|n|@@edu  Sat Jul 22 02:51:41 2023
From: trb5me @end|ng |rom v|rg|n|@@edu (taylor brown)
Date: Fri, 21 Jul 2023 20:51:41 -0400
Subject: [R-pkg-devel] DESCRIPTION file question
Message-ID: <B7AE607C-2D14-47AD-B6BF-90796F82196A@virginia.edu>

Hi everyone,

I have a question about the DESCRIPTION file of an R package that has some c++ dependencies. 

This package of mine builds c++ code during an interactive R session, but does not contain any source c++ in itself. The c++ files make reference to some dependencies that are made available by other third party R packages.

LinkingTo is the appropriate field for the DESCRIPTION file (usually) here, not Imports, but if If I remove the dependencies (BH and RcppEigen) from the Imports field, the code examples in the vignette will fail to build on a fresh machine. 

The NOTES in my build mention that, because I have no src/ directory, LinkingTo is ignored. Simultaneously, there is another note that mentions Imports is also excessive. 

It?s kind of a catch 22. It feels like my options are either add the Imports lines and ignore the NOTE, or add a superfluous src/ directory to silence the NOTE. Which option is the preferred one? Or is there a third?

Best,

Taylor R. Brown, Ph.D.
Assistant Professor of Statistics, General Faculty
Department of Statistics
University of Virginia
	[[alternative HTML version deleted]]


From edd @end|ng |rom deb|@n@org  Sat Jul 22 23:07:03 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Sat, 22 Jul 2023 16:07:03 -0500
Subject: [R-pkg-devel] DESCRIPTION file question
In-Reply-To: <B7AE607C-2D14-47AD-B6BF-90796F82196A@virginia.edu>
References: <B7AE607C-2D14-47AD-B6BF-90796F82196A@virginia.edu>
Message-ID: <25788.17655.652585.247570@rob.eddelbuettel.com>


Taylor,

I believe we have been over this at StackOverflow but you may by now have
deleted the question/

On 21 July 2023 at 20:51, taylor brown via R-package-devel wrote:
| I have a question about the DESCRIPTION file of an R package that has some c++ dependencies. 
| 
| This package of mine builds c++ code during an interactive R session, but
|  does not contain any source c++ in itself. The c++ files make reference to
|  some dependencies that are made available by other third party R packages.
|
| LinkingTo is the appropriate field for the DESCRIPTION file (usually) here, not Imports, but if If I remove the dependencies (BH and RcppEigen) from the Imports field, the code examples in the vignette will fail to build on a fresh machine. 
| 
| The NOTES in my build mention that, because I have no src/ directory, LinkingTo is ignored. Simultaneously, there is another note that mentions Imports is also excessive. 

As your package has no src/ directory and does no compilation itself, you do
not need / have no use for LinkingTo to provide the include/ directory of one
or more listed packages.

(If you have offer that compilation ability in a helper function you need to
tell the deal with it in the function. You can use `requireNamespace()` to
check if a package is present, warn or error if not, and compute the include/
directory location using R helper functions such as system.file().)

| It?s kind of a catch 22. It feels like my options are either add the Imports lines and ignore the NOTE, or add a superfluous src/ directory to silence the NOTE. Which option is the preferred one? Or is there a third?

I think all you need is in Writing R Extensions. For us to help you more a
concrete example, maybe even from a mock package, would help.

Cheers, Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From edd @end|ng |rom deb|@n@org  Sun Jul 23 00:22:20 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Sat, 22 Jul 2023 17:22:20 -0500
Subject: [R-pkg-devel] DESCRIPTION file question
In-Reply-To: <25788.17655.652585.247570@rob.eddelbuettel.com>
References: <B7AE607C-2D14-47AD-B6BF-90796F82196A@virginia.edu>
 <25788.17655.652585.247570@rob.eddelbuettel.com>
Message-ID: <25788.22172.342211.311432@rob.eddelbuettel.com>


On 22 July 2023 at 16:07, Dirk Eddelbuettel wrote:
| 
| Taylor,
| 
| I believe we have been over this at StackOverflow but you may by now have
| deleted the question/
| 
| On 21 July 2023 at 20:51, taylor brown via R-package-devel wrote:
| | I have a question about the DESCRIPTION file of an R package that has some c++ dependencies. 
| | 
| | This package of mine builds c++ code during an interactive R session, but
| |  does not contain any source c++ in itself. The c++ files make reference to
| |  some dependencies that are made available by other third party R packages.
| |
| | LinkingTo is the appropriate field for the DESCRIPTION file (usually) here, not Imports, but if If I remove the dependencies (BH and RcppEigen) from the Imports field, the code examples in the vignette will fail to build on a fresh machine. 
| | 
| | The NOTES in my build mention that, because I have no src/ directory, LinkingTo is ignored. Simultaneously, there is another note that mentions Imports is also excessive. 
| 
| As your package has no src/ directory and does no compilation itself, you do
| not need / have no use for LinkingTo to provide the include/ directory of one
| or more listed packages.
| 
| (If you have offer that compilation ability in a helper function you need to
| tell the deal with it in the function. You can use `requireNamespace()` to
| check if a package is present, warn or error if not, and compute the include/
| directory location using R helper functions such as system.file().)
| 
| | It?s kind of a catch 22. It feels like my options are either add the Imports lines and ignore the NOTE, or add a superfluous src/ directory to silence the NOTE. Which option is the preferred one? Or is there a third?
| 
| I think all you need is in Writing R Extensions. For us to help you more a
| concrete example, maybe even from a mock package, would help.

PS An existing example is provided by the 'inline' package, originally by
Oleg Sklyar, extented by many, and maintained by me for some time. It lets
you work on code in C, C++, Fortran, ... and it compiles, links and loads it
for you from an R session just you seem to desire.

And 'inline' has no LinkingTo and only one Imports for 'methods' as it uses
some S4.

Hth, Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From @|mon@urb@nek @end|ng |rom R-project@org  Sun Jul 23 01:17:15 2023
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Sun, 23 Jul 2023 11:17:15 +1200
Subject: [R-pkg-devel] macOS results not mirrored/updated at CRAN
In-Reply-To: <25787.51936.871790.433852@rob.eddelbuettel.com>
References: <25775.16177.937585.974774@rob.eddelbuettel.com>
 <25779.10961.299898.418341@rob.eddelbuettel.com>
 <SY4PR01MB56580500A52A8E91A06D1C53AC3AA@SY4PR01MB5658.ausprd01.prod.outlook.com>
 <25787.51936.871790.433852@rob.eddelbuettel.com>
Message-ID: <D4DA5737-AD56-42FE-A8C7-6202DA1F8D80@R-project.org>

Drik,

thanks. I have tried to address the problem and the actual sync problem for big-sur-x86_64 was fixed (as you can the see the results have been updated after you reported it), but apparently there was another, independent, problem with the cron jobs on that machine. I have changed the way the results sync is triggered, so hopefully that will make it more reliable.

Cheers,
Simon


> On Jul 23, 2023, at 12:26 AM, Dirk Eddelbuettel <edd at debian.org> wrote:
> 
> 
> Simon,
> 
> This still persists. As Murray reported, it happened for a while now, it is
> still happening eg package tiledb has been rebuilt everywhere [1] since the
> upload a few days ago -- yet the results page still reports builds two
> uploads ago [2] for both arm64 variants of your macOS setup.
> 
> Can you take a look, please?
> 
> Thanks in advance,  Dirk
> 
> 
> [1] https://cran.r-project.org/package=tiledb
> [2] https://cran.r-project.org/web/checks/check_results_tiledb.html
> -- 
> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
> 


From trb5me @end|ng |rom v|rg|n|@@edu  Mon Jul 24 20:26:15 2023
From: trb5me @end|ng |rom v|rg|n|@@edu (Taylor R. Brown)
Date: Mon, 24 Jul 2023 14:26:15 -0400
Subject: [R-pkg-devel] DESCRIPTION file question
In-Reply-To: <25788.22172.342211.311432@rob.eddelbuettel.com>
References: <B7AE607C-2D14-47AD-B6BF-90796F82196A@virginia.edu>
 <25788.17655.652585.247570@rob.eddelbuettel.com>
 <25788.22172.342211.311432@rob.eddelbuettel.com>
Message-ID: <CANXUWnB=D28reuotb8N8QPLUd97-6QzhUDk6CQqX7LNsOKxddA@mail.gmail.com>

Hi Dirk,

Yes, that helps very much. Thank you.

Right, my package calls out to inline::cxxfunction() to interface with one
particular c++ library. inline is a much more ambitious project obviously,
and I get how it can't require everything as a dependency.

Regarding your first paragraph, okay I'm on board now. I think we're both
looking at the same passage in Writing R Extensions, too. I had some
grammatical confusion. When I read

"Specifying a package in ?LinkingTo? suffices if these are C/C++ headers
containing source code or static linking is done at installation"

it sounds like it's referring to c/c++ headers being included at
potentially other times besides installation. In other words, it sounds
like "at installation" only applies to the second of those two conditions.
However, if I continue on reading that same paragraph, I now think that "at
installation" applies to both conditions. It even gives explicit
instructions regarding what to do about vignettes requiring packages, which
is my exact situation.

I just removed everything from both LinkingTo and Imports, stuck them in
Suggests, and now all the notes are silenced after checking on a variety of
OSes. Thanks again.

Best,
Taylor





On Sat, Jul 22, 2023 at 6:27?PM Dirk Eddelbuettel <edd at debian.org> wrote:

>
> On 22 July 2023 at 16:07, Dirk Eddelbuettel wrote:
> |
> | Taylor,
> |
> | I believe we have been over this at StackOverflow but you may by now have
> | deleted the question/
> |
> | On 21 July 2023 at 20:51, taylor brown via R-package-devel wrote:
> | | I have a question about the DESCRIPTION file of an R package that has
> some c++ dependencies.
> | |
> | | This package of mine builds c++ code during an interactive R session,
> but
> | |  does not contain any source c++ in itself. The c++ files make
> reference to
> | |  some dependencies that are made available by other third party R
> packages.
> | |
> | | LinkingTo is the appropriate field for the DESCRIPTION file (usually)
> here, not Imports, but if If I remove the dependencies (BH and RcppEigen)
> from the Imports field, the code examples in the vignette will fail to
> build on a fresh machine.
> | |
> | | The NOTES in my build mention that, because I have no src/ directory,
> LinkingTo is ignored. Simultaneously, there is another note that mentions
> Imports is also excessive.
> |
> | As your package has no src/ directory and does no compilation itself,
> you do
> | not need / have no use for LinkingTo to provide the include/ directory
> of one
> | or more listed packages.
> |
> | (If you have offer that compilation ability in a helper function you
> need to
> | tell the deal with it in the function. You can use `requireNamespace()`
> to
> | check if a package is present, warn or error if not, and compute the
> include/
> | directory location using R helper functions such as system.file().)
> |
> | | It?s kind of a catch 22. It feels like my options are either add the
> Imports lines and ignore the NOTE, or add a superfluous src/ directory to
> silence the NOTE. Which option is the preferred one? Or is there a third?
> |
> | I think all you need is in Writing R Extensions. For us to help you more
> a
> | concrete example, maybe even from a mock package, would help.
>
> PS An existing example is provided by the 'inline' package, originally by
> Oleg Sklyar, extented by many, and maintained by me for some time. It lets
> you work on code in C, C++, Fortran, ... and it compiles, links and loads
> it
> for you from an R session just you seem to desire.
>
> And 'inline' has no LinkingTo and only one Imports for 'methods' as it uses
> some S4.
>
> Hth, Dirk
>
> --
> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>


-- 
Taylor R. Brown, Ph.D.
Assistant Professor of Statistics, General Faculty
Department of Statistics
University of Virginia

	[[alternative HTML version deleted]]


From pro|jcn@@h @end|ng |rom gm@||@com  Wed Jul 26 15:37:38 2023
From: pro|jcn@@h @end|ng |rom gm@||@com (J C Nash)
Date: Wed, 26 Jul 2023 09:37:38 -0400
Subject: [R-pkg-devel] Changes to checks on NEWS?
Message-ID: <33b8892d-b3cd-b7b8-7ffe-30ba8e2c7f8e@gmail.com>


In work on an upgrade to my optimx package, I added to my (plain text) NEWS
file.

The lines

VERSION 2023-06-25

       o This is a MAJOR revision and overhaul of the optimx package and its components.
       o Fixed CITATION file based on R CMD check --as-cran complaints
         regarding requirement for person() and bibentry() changes.

pass R CMD check --as-cran

but

VERSION 2023-06-25

     This is a MAJOR revision and overhaul of the optimx package and its components.
       o Fixed CITATION file based on R CMD check --as-cran complaints
         regarding requirement for person() and bibentry() changes.

give a NOTE that news cannot process the chunk/lines in NEWS.

R CMD check    passes. (i.e., CRAN checks are tripping the NOTE).

I don't see anything about this in Writing R Extensions at moment.

Does anyone have information on what may have changed. I'd like to avoid NOTEs if possible,
and since I'm using a plain-text NEWS, don't believe this should trigger one.

The version that passes was the result of some almost random tries to see what would
trigger a note.

Cheers,

John Nash


From kry|ov@r00t @end|ng |rom gm@||@com  Wed Jul 26 16:03:25 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Wed, 26 Jul 2023 17:03:25 +0300
Subject: [R-pkg-devel] Changes to checks on NEWS?
In-Reply-To: <33b8892d-b3cd-b7b8-7ffe-30ba8e2c7f8e@gmail.com>
References: <33b8892d-b3cd-b7b8-7ffe-30ba8e2c7f8e@gmail.com>
Message-ID: <20230726170325.410e9c1b@arachnoid>

? Wed, 26 Jul 2023 09:37:38 -0400
J C Nash <profjcnash at gmail.com> ?????:

> I'd like to avoid NOTEs if possible, and since I'm using a plain-text
> NEWS, don't believe this should trigger one.

Plain-text NEWS files are parsed according to the rules specified in
help(news), which is admittedly laconic in its description. If you run
tools:::.news_reader_default('https://cran.r-project.org/web/packages/optimx/NEWS')
(or news(package = 'optimx')), you can see that R's news() already
misunderstands some of the contents of your NEWS file.

A relatively recent change (r82543, July 2022) set
_R_CHECK_NEWS_IN_PLAIN_TEXT_=TRUE for R CMD check --as-cran and started
verifying that R's plain text "news reader" function could actually
parse plain-text NEWS files without warnings or errors.

I think that if you rename NEWS to ChangeLog, R will leave the file
alone, but CRAN will offer it to users as plain text.

-- 
Best regards,
Ivan


From pro|jcn@@h @end|ng |rom gm@||@com  Wed Jul 26 16:18:15 2023
From: pro|jcn@@h @end|ng |rom gm@||@com (J C Nash)
Date: Wed, 26 Jul 2023 10:18:15 -0400
Subject: [R-pkg-devel] Changes to checks on NEWS?
In-Reply-To: <20230726170325.410e9c1b@arachnoid>
References: <33b8892d-b3cd-b7b8-7ffe-30ba8e2c7f8e@gmail.com>
 <20230726170325.410e9c1b@arachnoid>
Message-ID: <a0de0fc4-a35c-97de-00e5-c94a3da36cbf@gmail.com>

Thanks for the info, though it seems odd that CRAN wants to
parse a plain text file that is purely for information, since it
should have no impact on the current package or any other. I suppose
there might be character set issues to check. The motive for parsing
it eludes me.

Does anyone know if there are plans to use NEWS for some purpose in
the future i.e., to actually track changes beyond package maintainer's
comments?

Cheers, and thanks again.

JN


On 2023-07-26 10:03, Ivan Krylov wrote:
> ? Wed, 26 Jul 2023 09:37:38 -0400
> J C Nash <profjcnash at gmail.com> ?????:
> 
>> I'd like to avoid NOTEs if possible, and since I'm using a plain-text
>> NEWS, don't believe this should trigger one.
> 
> Plain-text NEWS files are parsed according to the rules specified in
> help(news), which is admittedly laconic in its description. If you run
> tools:::.news_reader_default('https://cran.r-project.org/web/packages/optimx/NEWS')
> (or news(package = 'optimx')), you can see that R's news() already
> misunderstands some of the contents of your NEWS file.
> 
> A relatively recent change (r82543, July 2022) set
> _R_CHECK_NEWS_IN_PLAIN_TEXT_=TRUE for R CMD check --as-cran and started
> verifying that R's plain text "news reader" function could actually
> parse plain-text NEWS files without warnings or errors.
> 
> I think that if you rename NEWS to ChangeLog, R will leave the file
> alone, but CRAN will offer it to users as plain text.
>


From murdoch@dunc@n @end|ng |rom gm@||@com  Wed Jul 26 16:25:05 2023
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Wed, 26 Jul 2023 10:25:05 -0400
Subject: [R-pkg-devel] Changes to checks on NEWS?
In-Reply-To: <a0de0fc4-a35c-97de-00e5-c94a3da36cbf@gmail.com>
References: <33b8892d-b3cd-b7b8-7ffe-30ba8e2c7f8e@gmail.com>
 <20230726170325.410e9c1b@arachnoid>
 <a0de0fc4-a35c-97de-00e5-c94a3da36cbf@gmail.com>
Message-ID: <aba5b1d8-b7b1-800b-039d-3636b6b38c96@gmail.com>

On 26/07/2023 10:18 a.m., J C Nash wrote:
> Thanks for the info, though it seems odd that CRAN wants to
> parse a plain text file that is purely for information, since it
> should have no impact on the current package or any other. I suppose
> there might be character set issues to check. The motive for parsing
> it eludes me.
> 
> Does anyone know if there are plans to use NEWS for some purpose in
> the future i.e., to actually track changes beyond package maintainer's
> comments?

NEWS has been used for a long time by the utils::news() function, which 
in turn is used by the HTML help system.

Duncan Murdoch

> 
> Cheers, and thanks again.
> 
> JN
> 
> 
> On 2023-07-26 10:03, Ivan Krylov wrote:
>> ? Wed, 26 Jul 2023 09:37:38 -0400
>> J C Nash <profjcnash at gmail.com> ?????:
>>
>>> I'd like to avoid NOTEs if possible, and since I'm using a plain-text
>>> NEWS, don't believe this should trigger one.
>>
>> Plain-text NEWS files are parsed according to the rules specified in
>> help(news), which is admittedly laconic in its description. If you run
>> tools:::.news_reader_default('https://cran.r-project.org/web/packages/optimx/NEWS')
>> (or news(package = 'optimx')), you can see that R's news() already
>> misunderstands some of the contents of your NEWS file.
>>
>> A relatively recent change (r82543, July 2022) set
>> _R_CHECK_NEWS_IN_PLAIN_TEXT_=TRUE for R CMD check --as-cran and started
>> verifying that R's plain text "news reader" function could actually
>> parse plain-text NEWS files without warnings or errors.
>>
>> I think that if you rename NEWS to ChangeLog, R will leave the file
>> alone, but CRAN will offer it to users as plain text.
>>
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From pro|jcn@@h @end|ng |rom gm@||@com  Wed Jul 26 17:45:40 2023
From: pro|jcn@@h @end|ng |rom gm@||@com (J C Nash)
Date: Wed, 26 Jul 2023 11:45:40 -0400
Subject: [R-pkg-devel] Changes to checks on NEWS?
In-Reply-To: <aba5b1d8-b7b1-800b-039d-3636b6b38c96@gmail.com>
References: <33b8892d-b3cd-b7b8-7ffe-30ba8e2c7f8e@gmail.com>
 <20230726170325.410e9c1b@arachnoid>
 <a0de0fc4-a35c-97de-00e5-c94a3da36cbf@gmail.com>
 <aba5b1d8-b7b1-800b-039d-3636b6b38c96@gmail.com>
Message-ID: <b0ab0a5d-06f5-2d85-1adf-bb21bca70177@gmail.com>

The important information is in the body of the man page for news(),
i.e., found by
    ?utils::news

and this explains why putting an "o" in front of a line clears the
NOTE. Once I realized that CRAN is running this, I could see the
"why". Thanks.

JN

On 2023-07-26 10:25, Duncan Murdoch wrote:
> 
> NEWS has been used for a long time by the utils::news() function, which in turn is used by the HTML help system.
> 
> Duncan Murdoch
>


From remme|t @end|ng |rom yorku@c@  Tue Aug  1 04:15:37 2023
From: remme|t @end|ng |rom yorku@c@ (Tarmo K Remmel)
Date: Tue, 1 Aug 2023 02:15:37 +0000
Subject: [R-pkg-devel] CRAN HTML Warning
Message-ID: <E1D9F85A-A8C9-4A2D-9163-57D57742F8E1@yorku.ca>

Hello,

I have recently updated my ShapePattern package to deal with the looming retirement of rgeos and rgdal packages. That all works well. However, the  checks for CRAN throw a series of warnings when the HTML validation is performed (one example set of warnings below). A set of identical warnings are produced for each .Rd file in my package). These seem to be generated for the automatically produced HTML files during the build/check processing.

R CMD check --as-cran ShapePattern_3.0.0.tar.gz
(All checks are OK until)...
Found the following HTML validation problems:
CARsimu.html:4:1 (CARsimu.Rd:3): Warning: <link> inserting "type" attribute
CARsimu.html:12:1 (CARsimu.Rd:3): Warning: <script> proprietary attribute "onload"
CARsimu.html:12:1 (CARsimu.Rd:3): Warning: <script> inserting "type" attribute
CARsimu.html:17:1 (CARsimu.Rd:3): Warning: <table> lacks "summary" attribute
CARsimu.html:38:1 (CARsimu.Rd:14): Warning: <table> lacks "summary" attribute

Is there something that I can do to remedy these warnings? Can they be ignored during a submission to CRAN?

Insights welcome as I am at a loss here. I?m not finding any discussion about this online.

Thank you,

Tarmo



Tarmo K Remmel ? Professor
Faculty of Environmental & Urban Change

YORK UNIVERSITY
North 430 Ross Building ? 4700<x-apple-data-detectors://3/0> Keele<x-apple-data-detectors://3/0> Street<x-apple-data-detectors://3/0>
Toronto ON ? Canada M3J 1P3
T 416.736.2100<tel:416.736.2100;22496> ext<tel:416.736.2100;22496> 22496<tel:416.736.2100;22496> F 416.736.5988<tel:416.736.5988>
Twitter: @TKRspatial ? Skype: tarmoremmel
remmelt at yorku.ca<mailto:remmelt at yorku.ca> ? www.yorku.ca/remmelt <http://www.yorku.ca/remmelt>
This electronic mail (e-mail), including any attachments, is intended only for the recipient(s) to whom it is addressed and may contain information that is privileged, confidential and/or exempt from disclosure. No waiver of privilege, confidentiality or any other protection is intended by virtue of its communication by the internet. Any unauthorized use, dissemination or copying is strictly prohibited. If you have received this e-mail in error, or are not named as a recipient, please immediately notify the sender and destroy all copies of it.


	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Tue Aug  1 21:46:51 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Tue, 1 Aug 2023 22:46:51 +0300
Subject: [R-pkg-devel] CRAN HTML Warning
In-Reply-To: <E1D9F85A-A8C9-4A2D-9163-57D57742F8E1@yorku.ca>
References: <E1D9F85A-A8C9-4A2D-9163-57D57742F8E1@yorku.ca>
Message-ID: <20230801224651.597e12a0@parabola>

? Tue, 1 Aug 2023 02:15:37 +0000
Tarmo K Remmel <remmelt at yorku.ca> ?????:

> CARsimu.html:4:1 (CARsimu.Rd:3): Warning: <link> inserting "type"
> attribute
> CARsimu.html:12:1 (CARsimu.Rd:3): Warning: <script> proprietary
> attribute "onload"
> CARsimu.html:12:1 (CARsimu.Rd:3): Warning: <script> inserting "type"
> attribute
> CARsimu.html:17:1 (CARsimu.Rd:3): Warning: <table> lacks "summary"
> attribute
> CARsimu.html:38:1 (CARsimu.Rd:14): Warning: <table> lacks "summary"
> attribute

Unless you're seeing these warning on Win-Builder, Mac Builder, or
R-hub, it's likely that the version of HTML Tidy
<https://www.html-tidy.org/> installed on your computer is too old and
produces these warnings because it expects HTML4 instead of HTML5.
Check again using one of these services (or upgrade your local Tidy
installation) to make sure, but I think your package is fine.

(Maybe R CMD check could get a better test for versions of HTML Tidy
that are too old for HTML5 produced from R documentation.)

-- 
Best regards,
Ivan


From remme|t @end|ng |rom yorku@c@  Wed Aug  2 21:01:11 2023
From: remme|t @end|ng |rom yorku@c@ (Tarmo K Remmel)
Date: Wed, 2 Aug 2023 19:01:11 +0000
Subject: [R-pkg-devel] CRAN HTML Warning
In-Reply-To: <20230801224651.597e12a0@parabola>
References: <E1D9F85A-A8C9-4A2D-9163-57D57742F8E1@yorku.ca>
 <20230801224651.597e12a0@parabola>
Message-ID: <1A727D43-5F40-4C53-B3E2-CF62ABEBBA1F@yorku.ca>

Thank you Ivan, updating HTML Tidy solved my issue. Such a relief.

Tarmo



Tarmo K Remmel ? Professor
Faculty of Environmental & Urban Change

YORK UNIVERSITY
North 430 Ross Building ? 4700<x-apple-data-detectors://3/0> Keele<x-apple-data-detectors://3/0> Street<x-apple-data-detectors://3/0>
Toronto ON ? Canada M3J 1P3
T 416.736.2100<tel:416.736.2100;22496> ext<tel:416.736.2100;22496> 22496<tel:416.736.2100;22496> F 416.736.5988<tel:416.736.5988>
Twitter: @TKRspatial ? Skype: tarmoremmel
remmelt at yorku.ca<mailto:remmelt at yorku.ca> ? www.yorku.ca/remmelt <http://www.yorku.ca/remmelt>
This electronic mail (e-mail), including any attachments, is intended only for the recipient(s) to whom it is addressed and may contain information that is privileged, confidential and/or exempt from disclosure. No waiver of privilege, confidentiality or any other protection is intended by virtue of its communication by the internet. Any unauthorized use, dissemination or copying is strictly prohibited. If you have received this e-mail in error, or are not named as a recipient, please immediately notify the sender and destroy all copies of it.

On Aug 1, 2023, at 3:46 PM, Ivan Krylov <krylov.r00t at gmail.com> wrote:

? Tue, 1 Aug 2023 02:15:37 +0000
Tarmo K Remmel <remmelt at yorku.ca> ?????:

CARsimu.html:4:1 (CARsimu.Rd:3): Warning: <link> inserting "type"
attribute
CARsimu.html:12:1 (CARsimu.Rd:3): Warning: <script> proprietary
attribute "onload"
CARsimu.html:12:1 (CARsimu.Rd:3): Warning: <script> inserting "type"
attribute
CARsimu.html:17:1 (CARsimu.Rd:3): Warning: <table> lacks "summary"
attribute
CARsimu.html:38:1 (CARsimu.Rd:14): Warning: <table> lacks "summary"
attribute

Unless you're seeing these warning on Win-Builder, Mac Builder, or
R-hub, it's likely that the version of HTML Tidy
<https://www.html-tidy.org/> installed on your computer is too old and
produces these warnings because it expects HTML4 instead of HTML5.
Check again using one of these services (or upgrade your local Tidy
installation) to make sure, but I think your package is fine.

(Maybe R CMD check could get a better test for versions of HTML Tidy
that are too old for HTML5 produced from R documentation.)

--
Best regards,
Ivan


	[[alternative HTML version deleted]]


From biii m@iii@g oii de@@ey@ws  Sat Aug  5 18:26:20 2023
From: biii m@iii@g oii de@@ey@ws (biii m@iii@g oii de@@ey@ws)
Date: Sat, 5 Aug 2023 12:26:20 -0400
Subject: [R-pkg-devel] Possible bug in Codoc checking with R CMD Check
Message-ID: <02ec01d9c7b9$918ceef0$b4a6ccd0$@denney.ws>

Hello,

 

I have a function that is used to generate LaTeX code for reporting.  When
doing R CMD check, I get an error that the "\\ldots" argument does not match
between the code and documentation.  I think that the error is coming from
the Codoc check in R CMD check not escaping the backslash before ldots.  Is
my diagnosis correct?  If so, what is the best way to report this as a bug
in R CMD check?

 

The R CMD check warning:

 

Warning: Codoc mismatches from documentation object
'topic_long_table_header':

topic_long_table_header

  Code: function(x, col_names = NULL, above_col_names = "\\hline",

                 below_col_names = "\\hline",

                 subsequent_page_notification = "\\ldots continued",

                 latex_header = NULL, verbatim = NULL)

  Docs: function(x, col_names = NULL, above_col_names = "\\hline",

                 below_col_names = "\\hline",

                 subsequent_page_notification = "\... continued",

                 latex_header = NULL, verbatim = NULL)

  Mismatches in argument default values:

    Name: 'subsequent_page_notification' Code: "\\ldots continued" Docs:
"\... continued"

 

The function looks like:

 

topic_long_table_header <- function(x,

                                    col_names=NULL,

                                    above_col_names="\\hline",
below_col_names="\\hline",

                                    subsequent_page_notification="\\ldots
continued",

                                    latex_header=NULL,

                                    verbatim=NULL) {

 # do stuff here

}

 

The .Rd file (generated by roxygen2) looks like:

 

topic_long_table_header(

  x,

  col_names = NULL,

  above_col_names = "\\\\hline",

  below_col_names = "\\\\hline",

  subsequent_page_notification = "\\\\ldots continued",

  latex_header = NULL,

  verbatim = NULL

)

 

If looking in more detail would help, relevant parts of the GitHub repo are:

 

https://github.com/billdenney/TopicLongTableR/blob/main/R/topic_long_table_h
eader_footer.R

https://github.com/billdenney/TopicLongTableR/blob/main/man/topic_long_table
_header.Rd

https://github.com/billdenney/TopicLongTableR/actions/runs/5771551599/job/15
645624146#step:6:99

 

Thanks,

 

Bill


	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Sat Aug  5 21:43:02 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Sat, 5 Aug 2023 22:43:02 +0300
Subject: [R-pkg-devel] Possible bug in Codoc checking with R CMD Check
In-Reply-To: <02ec01d9c7b9$918ceef0$b4a6ccd0$@denney.ws>
References: <02ec01d9c7b9$918ceef0$b4a6ccd0$@denney.ws>
Message-ID: <20230805224302.5b43c4e7@parabola>

? Sat, 5 Aug 2023 12:26:20 -0400
<bill at denney.ws> ?????:

> I think that the error is coming from
> the Codoc check in R CMD check not escaping the backslash before
> ldots.  Is my diagnosis correct?  If so, what is the best way to
> report this as a bug in R CMD check?

>   Mismatches in argument default values:
> 
>     Name: 'subsequent_page_notification' Code: "\\ldots continued"
> Docs: "\... continued"

I think you're right. You can see the code doing the string
substitution in tools:::.parse_usage_as_much_as_possible.
Unfortunately, expressing "replace \whatever but only if the backslash
is not escaped" using regular expressions is hard; for example,
\\\whatever ought to be interpreted as an escaped backslash followed by
a non-escaped \whatever, and so on. A negative look-behind assertion
wouldn't do the right thing in this case.

Send an e-mail to R-devel at r-project.org to discuss a potential
solution, but be ready to file a problem report on R Bugzilla in order
to make sure that it's not forgotten (which takes more steps but may be
"more right"). See https://r-project.org/bugs.html for the official
instructions.

Meanwhile, I can suggest omitting the "\\ldots continued" default value
from the Rd file as a workaround. WRE is not explicit about this, but
missing default argument values currently don't count against you
during a codoc() check, which is useful if the actual expression used
to compute the default value is unwieldy.

-- 
Best regards,
Ivan


From d@n@gro@e @end|ng |rom |@nc@@ter@@c@uk  Mon Aug  7 14:58:30 2023
From: d@n@gro@e @end|ng |rom |@nc@@ter@@c@uk (Grose, Daniel)
Date: Mon, 7 Aug 2023 12:58:30 +0000
Subject: [R-pkg-devel] clang issue
Message-ID: <LO2P265MB41510EE6A06AF9D6F6781AD6BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>

Hi

My package submission fails due to --------



In file included from MeanAnomalyMV.cpp:7:
In file included from ./Functions_mean.h:4:
In file included from usr/local/clang-trunk/bin../include/c++/v1/vector:321:
In file included from
usr/local/clang-trunk/bin../include/c++/v1/__format/formatter_bool.h:20:
In file included from
usr/local/clang-trunk/bin../include/c++/v1/__format/formatter_integral.h:32:
In file included from usr/local/clang-trunk/bin../include/c++/v1/locale:202:
usr/local/clang-trunk/bin../include/c++/v1/__locale:962:34: error: too
many arguments provided to function-like macro invocation
   962 |     int length(state_type& __st, const extern_type* __frm,
const extern_type* __end, size_t __mx) const
       |                                  ^
/data/gannet/ripley/R/R-flang/include/Rinternals.h:968:9: note: macro
'length' defined here
   968 | #define length(x)               Rf_length(x)
       |         ^
...

Please define R_NO_REMAP and fix the fallout: it has Rinternals.h
included all over the place in both .h and .cpp files.  It must not be
included before <vector> nor any other C++ header.

Please fix and resubmit.

--------------------------------------------

I have tried to reproduce the error using clang-15 on Ubuntu-22.04, but everything seems fine --

 clang-15 -std=gnu++17 -I"/usr/share/R/include" -DNDEBUG -DBOOST_ALLOW_DEPRECATED_HEADERS -DR_NO_REMAP -I'/home/grosedj/R-packages/Rcpp/include' -I'/home/grosedj/R-packages/BH/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-a3XuZ5/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c MeanAnomalyMV.cpp -o MeanAnomalyMV.o


Any ideas ?

Many thanks,

Daniel Grose




	[[alternative HTML version deleted]]


From edd @end|ng |rom deb|@n@org  Mon Aug  7 15:13:38 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Mon, 7 Aug 2023 08:13:38 -0500
Subject: [R-pkg-devel] clang issue
In-Reply-To: <LO2P265MB41510EE6A06AF9D6F6781AD6BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
References: <LO2P265MB41510EE6A06AF9D6F6781AD6BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
Message-ID: <25808.60930.221146.150878@rob.eddelbuettel.com>


Daniel,

This is not new, and not related to clang.

On 7 August 2023 at 12:58, Grose, Daniel wrote:
| Any ideas ?

Add a line

   #define R_NO_REMAP 1

before _any_ inclusion of R headers. See Section 6 of Writing R Extensions.

If you use eg Rcpp it is done for you when you include Rcpp headers.

Cheers, Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From d@n@gro@e @end|ng |rom |@nc@@ter@@c@uk  Mon Aug  7 15:16:33 2023
From: d@n@gro@e @end|ng |rom |@nc@@ter@@c@uk (Grose, Daniel)
Date: Mon, 7 Aug 2023 13:16:33 +0000
Subject: [R-pkg-devel] [External] Re:  clang issue
In-Reply-To: <25808.60930.221146.150878@rob.eddelbuettel.com>
References: <LO2P265MB41510EE6A06AF9D6F6781AD6BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
 <25808.60930.221146.150878@rob.eddelbuettel.com>
Message-ID: <LO2P265MB4151E71C52A3A129B2E45BB2BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>

Hi Dirk

Thanks for the quick response.

I thought  -DR_NO_REMAP in Makevars would set R_NO_REMAP across all compilation units. Is this not the case ?

Thanks,

Dan
________________________________
From: Dirk Eddelbuettel <edd at debian.org>
Sent: 07 August 2023 14:13
To: Grose, Daniel <dan.grose at lancaster.ac.uk>
Cc: r-package-devel at r-project.org <r-package-devel at r-project.org>
Subject: [External] Re: [R-pkg-devel] clang issue

This email originated outside the University. Check before clicking links or attachments.

Daniel,

This is not new, and not related to clang.

On 7 August 2023 at 12:58, Grose, Daniel wrote:
| Any ideas ?

Add a line

   #define R_NO_REMAP 1

before _any_ inclusion of R headers. See Section 6 of Writing R Extensions.

If you use eg Rcpp it is done for you when you include Rcpp headers.

Cheers, Dirk

--
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org

	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Mon Aug  7 15:32:53 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Mon, 7 Aug 2023 16:32:53 +0300
Subject: [R-pkg-devel] [External] Re:  clang issue
In-Reply-To: <LO2P265MB4151E71C52A3A129B2E45BB2BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
References: <LO2P265MB41510EE6A06AF9D6F6781AD6BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
 <25808.60930.221146.150878@rob.eddelbuettel.com>
 <LO2P265MB4151E71C52A3A129B2E45BB2BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
Message-ID: <20230807163253.52f87a1c@parabola>

? Mon, 7 Aug 2023 13:16:33 +0000
"Grose, Daniel" <dan.grose at lancaster.ac.uk> ?????:

> I thought  -DR_NO_REMAP in Makevars would set R_NO_REMAP across all
> compilation units. Is this not the case ?

It should have worked. Can we see the code? Is there a visible compiler
command line in the check results that you quoted in the first message?

-- 
Best regards,
Ivan


From d@n@gro@e @end|ng |rom |@nc@@ter@@c@uk  Mon Aug  7 15:38:54 2023
From: d@n@gro@e @end|ng |rom |@nc@@ter@@c@uk (Grose, Daniel)
Date: Mon, 7 Aug 2023 13:38:54 +0000
Subject: [R-pkg-devel] [External] Re:  clang issue
In-Reply-To: <20230807163253.52f87a1c@parabola>
References: <LO2P265MB41510EE6A06AF9D6F6781AD6BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
 <25808.60930.221146.150878@rob.eddelbuettel.com>
 <LO2P265MB4151E71C52A3A129B2E45BB2BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
 <20230807163253.52f87a1c@parabola>
Message-ID: <LO2P265MB4151351FAC451BB01A8DC63EBE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>

Hi Ivan

No - unfortunately not. I cannot reproduce the error locally so I posted the snippet that Uwe Ligges sent me regarding the failed CRAN submission. That is all of the information I have.

For now I will follow Dirk's advice and see if the CRAN submission gets accepted.

Thanks for your help.

Best wishes,
Dan
________________________________
From: Ivan Krylov <krylov.r00t at gmail.com>
Sent: 07 August 2023 14:32
To: Grose, Daniel <dan.grose at lancaster.ac.uk>
Cc: Dirk Eddelbuettel <edd at debian.org>; r-package-devel at r-project.org <r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] [External] Re: clang issue

? Mon, 7 Aug 2023 13:16:33 +0000
"Grose, Daniel" <dan.grose at lancaster.ac.uk> ?????:

> I thought  -DR_NO_REMAP in Makevars would set R_NO_REMAP across all
> compilation units. Is this not the case ?

It should have worked. Can we see the code? Is there a visible compiler
command line in the check results that you quoted in the first message?

--
Best regards,
Ivan

	[[alternative HTML version deleted]]


From edd @end|ng |rom deb|@n@org  Mon Aug  7 15:53:06 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Mon, 7 Aug 2023 08:53:06 -0500
Subject: [R-pkg-devel] [External] Re:  clang issue
In-Reply-To: <LO2P265MB4151351FAC451BB01A8DC63EBE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
References: <LO2P265MB41510EE6A06AF9D6F6781AD6BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
 <25808.60930.221146.150878@rob.eddelbuettel.com>
 <LO2P265MB4151E71C52A3A129B2E45BB2BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
 <20230807163253.52f87a1c@parabola>
 <LO2P265MB4151351FAC451BB01A8DC63EBE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
Message-ID: <25808.63298.413970.189167@rob.eddelbuettel.com>


On 7 August 2023 at 13:38, Grose, Daniel wrote:
| No - unfortunately not. I cannot reproduce the error locally so I posted the
| snippet that Uwe Ligges sent me regarding the failed CRAN submission. That is
| all of the information I have.
| 
| For now I will follow Dirk's advice and see if the CRAN submission gets
| accepted.

Yes as Ivan state using PKG_CFLAGS etc should be equivalent but there can be
pitfalls if you eg set PKG_CFLAGS but also have a C++ (or Fortran) file.

So as Ivan already asked: what is you repo?  We can help better (and faster)
with reproducible code.

Best, Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From d@n@gro@e @end|ng |rom |@nc@@ter@@c@uk  Mon Aug  7 15:55:17 2023
From: d@n@gro@e @end|ng |rom |@nc@@ter@@c@uk (Grose, Daniel)
Date: Mon, 7 Aug 2023 13:55:17 +0000
Subject: [R-pkg-devel] [External] Re:  clang issue
In-Reply-To: <25808.63298.413970.189167@rob.eddelbuettel.com>
References: <LO2P265MB41510EE6A06AF9D6F6781AD6BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
 <25808.60930.221146.150878@rob.eddelbuettel.com>
 <LO2P265MB4151E71C52A3A129B2E45BB2BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
 <20230807163253.52f87a1c@parabola>
 <LO2P265MB4151351FAC451BB01A8DC63EBE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
 <25808.63298.413970.189167@rob.eddelbuettel.com>
Message-ID: <LO2P265MB4151D7C1F0C28A57E4BCEBB7BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>

Hi Ivan/Dirk

As I say - I cannot reproduce the error myself. I will try asking Uwe Ligges for more information.

Best wishes,
Dan
________________________________
From: Dirk Eddelbuettel <edd at debian.org>
Sent: 07 August 2023 14:53
To: Grose, Daniel <dan.grose at lancaster.ac.uk>
Cc: Ivan Krylov <krylov.r00t at gmail.com>; Dirk Eddelbuettel <edd at debian.org>; r-package-devel at r-project.org <r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] [External] Re: clang issue


On 7 August 2023 at 13:38, Grose, Daniel wrote:
| No - unfortunately not. I cannot reproduce the error locally so I posted the
| snippet that Uwe Ligges sent me regarding the failed CRAN submission. That is
| all of the information I have.
|
| For now I will follow Dirk's advice and see if the CRAN submission gets
| accepted.

Yes as Ivan state using PKG_CFLAGS etc should be equivalent but there can be
pitfalls if you eg set PKG_CFLAGS but also have a C++ (or Fortran) file.

So as Ivan already asked: what is you repo?  We can help better (and faster)
with reproducible code.

Best, Dirk

--
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org

	[[alternative HTML version deleted]]


From edd @end|ng |rom deb|@n@org  Mon Aug  7 17:19:04 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Mon, 7 Aug 2023 10:19:04 -0500
Subject: [R-pkg-devel] [External] Re:  clang issue
In-Reply-To: <LO2P265MB4151D7C1F0C28A57E4BCEBB7BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
References: <LO2P265MB41510EE6A06AF9D6F6781AD6BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
 <25808.60930.221146.150878@rob.eddelbuettel.com>
 <LO2P265MB4151E71C52A3A129B2E45BB2BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
 <20230807163253.52f87a1c@parabola>
 <LO2P265MB4151351FAC451BB01A8DC63EBE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
 <25808.63298.413970.189167@rob.eddelbuettel.com>
 <LO2P265MB4151D7C1F0C28A57E4BCEBB7BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
Message-ID: <25809.2920.490117.377050@rob.eddelbuettel.com>


On 7 August 2023 at 13:55, Grose, Daniel wrote:
| As I say - I cannot reproduce the error myself. I will try asking Uwe Ligges
| for more information.

Methinks you are doing it wrong. We created the r-package-devel list years
ago to take load away from the overworked CRAN maintainers who are "on the
critical path" and a bottleneck we would rather see lightened.

Also, you were asked twice to share your repo or package. As you won't I
stop here as you seemingly do not want us to help you. Your call.

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From d@n@gro@e @end|ng |rom |@nc@@ter@@c@uk  Mon Aug  7 17:52:38 2023
From: d@n@gro@e @end|ng |rom |@nc@@ter@@c@uk (Grose, Daniel)
Date: Mon, 7 Aug 2023 15:52:38 +0000
Subject: [R-pkg-devel] [External] Re:  clang issue
In-Reply-To: <25809.2920.490117.377050@rob.eddelbuettel.com>
References: <LO2P265MB41510EE6A06AF9D6F6781AD6BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
 <25808.60930.221146.150878@rob.eddelbuettel.com>
 <LO2P265MB4151E71C52A3A129B2E45BB2BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
 <20230807163253.52f87a1c@parabola>
 <LO2P265MB4151351FAC451BB01A8DC63EBE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
 <25808.63298.413970.189167@rob.eddelbuettel.com>
 <LO2P265MB4151D7C1F0C28A57E4BCEBB7BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
 <25809.2920.490117.377050@rob.eddelbuettel.com>
Message-ID: <LO2P265MB4151E819F9C8F1BD738E202CBE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>

Hi Dirk

My apologies. I thought you were asking for compiler output. You can find the code at


https://github.com/grosed/anomaly

[https://opengraph.githubassets.com/866d37f560339c5ee145d5cd7e40edf768223cf08b8e9f35ae97e14d1f2b47f5/grosed/anomaly]<https://github.com/grosed/anomaly>
GitHub - grosed/anomaly<https://github.com/grosed/anomaly>
Contribute to grosed/anomaly development by creating an account on GitHub.
github.com


in the version-4.3.0 branch.

Many thanks,
Dan
________________________________
From: Dirk Eddelbuettel <edd at debian.org>
Sent: 07 August 2023 16:19
To: Grose, Daniel <dan.grose at lancaster.ac.uk>
Cc: Dirk Eddelbuettel <edd at debian.org>; Ivan Krylov <krylov.r00t at gmail.com>; r-package-devel at r-project.org <r-package-devel at r-project.org>
Subject: Re: [R-pkg-devel] [External] Re: clang issue


On 7 August 2023 at 13:55, Grose, Daniel wrote:
| As I say - I cannot reproduce the error myself. I will try asking Uwe Ligges
| for more information.

Methinks you are doing it wrong. We created the r-package-devel list years
ago to take load away from the overworked CRAN maintainers who are "on the
critical path" and a bottleneck we would rather see lightened.

Also, you were asked twice to share your repo or package. As you won't I
stop here as you seemingly do not want us to help you. Your call.

Dirk

--
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org

	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Mon Aug  7 20:01:28 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Mon, 7 Aug 2023 21:01:28 +0300
Subject: [R-pkg-devel] [External] Re:  clang issue
In-Reply-To: <LO2P265MB4151E819F9C8F1BD738E202CBE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
References: <LO2P265MB41510EE6A06AF9D6F6781AD6BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
 <25808.60930.221146.150878@rob.eddelbuettel.com>
 <LO2P265MB4151E71C52A3A129B2E45BB2BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
 <20230807163253.52f87a1c@parabola>
 <LO2P265MB4151351FAC451BB01A8DC63EBE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
 <25808.63298.413970.189167@rob.eddelbuettel.com>
 <LO2P265MB4151D7C1F0C28A57E4BCEBB7BE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
 <25809.2920.490117.377050@rob.eddelbuettel.com>
 <LO2P265MB4151E819F9C8F1BD738E202CBE0CA@LO2P265MB4151.GBRP265.PROD.OUTLOOK.COM>
Message-ID: <20230807210128.6db4ba49@parabola>

? Mon, 7 Aug 2023 15:52:38 +0000
"Grose, Daniel" <dan.grose at lancaster.ac.uk> ?????:

> https://github.com/grosed/anomaly

Ah, so this is why I couldn't find your package on CRAN. Now I can see
the compiler log, together with the compiler command line:
https://www.stats.ox.ac.uk/pub/bdr/clang17/anomaly.log

It looks like -DR_NO_REMAP is missing from src/Makevars, both in the
last archived version on CRAN and in the version-4.3.0 branch, but if
you add it to the line with PKG_CPPFLAGS, it should work.

If it's too much to fix, at least make sure to move any R-related
#includes below the system #includes. MeanAnomalyMV.cpp originally blew
up because (1) -DR_NO_REMAP was missing from the compiler command line,
(2) Rinternals.h was included, which provides #define length(x), and
(3) a standard C++ header was included, which tried to define a
function named length. Moving the R headers below the standard C++
headers would have prevented it.

It may also help to change the interface of MeanAnomalyMV so that it
either (1) uses Rcpp, enjoying built-in R_NO_REMAP or (2) works purely
in terms of R and C types, avoiding the need to #include <vector> and
<string>.

Hope you'll succeed in getting the package back in shape!

-- 
Best regards,
Ivan


From v|ncentv@nhee@ @end|ng |rom gm@||@com  Tue Aug  8 13:29:55 2023
From: v|ncentv@nhee@ @end|ng |rom gm@||@com (Vincent van Hees)
Date: Tue, 8 Aug 2023 13:29:55 +0200
Subject: [R-pkg-devel] my experiences of maintaining an R package for 10
 years
Message-ID: <CALnEB16LVC=WUwvEybaw1HJuUYrve1fY4_MbGVvrN7zfxcVE+A@mail.gmail.com>

Dear all,

This is not a question.
I just put a blog post online with a lengthy overview of how I have
developed and maintained the R package GGIR as available on CRAN for
the past 10 years:
https://www.accelting.com/updates/10th-anniversary-of-ggir/

The package itself is probably not of interest to anyone here as it is
very research domain specific, but you may find it interesting to read
about my personal journey to grow the package into a popular tool
within the research field it is designed for: human movement and sleep
research.

Thanks,

Vincent


From edd @end|ng |rom deb|@n@org  Tue Aug  8 14:45:35 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Tue, 8 Aug 2023 07:45:35 -0500
Subject: [R-pkg-devel] macOS results not mirrored/updated at CRAN
In-Reply-To: <D4DA5737-AD56-42FE-A8C7-6202DA1F8D80@R-project.org>
References: <25775.16177.937585.974774@rob.eddelbuettel.com>
 <25779.10961.299898.418341@rob.eddelbuettel.com>
 <SY4PR01MB56580500A52A8E91A06D1C53AC3AA@SY4PR01MB5658.ausprd01.prod.outlook.com>
 <25787.51936.871790.433852@rob.eddelbuettel.com>
 <D4DA5737-AD56-42FE-A8C7-6202DA1F8D80@R-project.org>
Message-ID: <25810.14575.345108.235926@rob.eddelbuettel.com>


Simon,

This is still an issue for arm64.  Uploaded tiledb and RQuantLib yesterday,
both already built binaries for macOS (thank you!) but on the x86_64 ones are
on the results page.  Can you take another peek at this?

Thanks so much,  Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From thom@@@petzo|dt @end|ng |rom tu-dre@den@de  Wed Aug  9 16:26:42 2023
From: thom@@@petzo|dt @end|ng |rom tu-dre@den@de (Thomas Petzoldt)
Date: Wed, 9 Aug 2023 16:26:42 +0200
Subject: [R-pkg-devel] preventing auto-update of R and c2d4u r-cran-*
 packages on Ubuntu 22.04
Message-ID: <31ae1e4f-3f95-cf6a-ef45-a93d4967b16e@tu-dresden.de>

Hi,

I am running a couple of? shiny servers with several apps that are based 
around own CRAN packages. It worked stable for years, but due to the 
growing number of packages, the compile time for regular manual package 
installation and updates became inconvenient.

Therefore, I have been very happy to use pre-compiled packages from the 
c2d4u repository: deb 
https://ppa.launchpadcontent.net/c2d4u.team/c2d4u4.0+/ubuntu/ jammy main

This is indeed a great service, thanks to Dirk Edelbuettel, mark Rutter 
and the complete team! The downside is, that now the r-cran-* binaries 
are installed automatically, together with the system update. I 
experienced now repeated cases that crashed some of the shiny apps, 
mainly due to conflicts between the binary packages and other packages 
installed from sources.

My question: what is best practise, to disallow automatic updates for 
all r-cran-* packages? Uncommenting the complete package source in the 
apt/sources.list.d/cd4u...list file? Fiddling around with? 
/etc/apt/preferences ?

The ideal approach would be to put a plain textfile of all installed 
r-cran packages somewhere to the system, where packages that are to be 
upgraded (or oppositely: pinned) are just commented or outcommented.

Thanks in advance,

Thomas


From edd @end|ng |rom deb|@n@org  Wed Aug  9 16:41:29 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Wed, 9 Aug 2023 09:41:29 -0500
Subject: [R-pkg-devel] preventing auto-update of R and c2d4u r-cran-*
 packages on Ubuntu 22.04
In-Reply-To: <31ae1e4f-3f95-cf6a-ef45-a93d4967b16e@tu-dresden.de>
References: <31ae1e4f-3f95-cf6a-ef45-a93d4967b16e@tu-dresden.de>
Message-ID: <25811.42393.429393.518363@rob.eddelbuettel.com>


On 9 August 2023 at 16:26, Thomas Petzoldt wrote:
| I am running a couple of? shiny servers with several apps that are based 
| around own CRAN packages. It worked stable for years, but due to the 
| growing number of packages, the compile time for regular manual package 
| installation and updates became inconvenient.
| 
| Therefore, I have been very happy to use pre-compiled packages from the 
| c2d4u repository: deb 
| https://ppa.launchpadcontent.net/c2d4u.team/c2d4u4.0+/ubuntu/ jammy main

These days you also have r2u which has all of CRAN ie 20k binaries (each, for
two Ubuntu flavors). See  https://eddelbuettel.github.io/r2u
 
| This is indeed a great service, thanks to Dirk Edelbuettel, mark Rutter

That would be Michael Rutter.

| and the complete team! The downside is, that now the r-cran-* binaries 
| are installed automatically, together with the system update. I 
| experienced now repeated cases that crashed some of the shiny apps, 
| mainly due to conflicts between the binary packages and other packages 
| installed from sources.

If you use r2u (as I do on a laptop, an ec2 server, all my CI testing for
work and testing for months now) you get all packages and do not need to
mix.  Try r2u, it's good.
 
| My question: what is best practise, to disallow automatic updates for 
| all r-cran-* packages? Uncommenting the complete package source in the 
| apt/sources.list.d/cd4u...list file? Fiddling around with? 
| /etc/apt/preferences ?
| 
| The ideal approach would be to put a plain textfile of all installed 
| r-cran packages somewhere to the system, where packages that are to be 
| upgraded (or oppositely: pinned) are just commented or outcommented.

That is very Debian / Ubuntu specific question.  Can I ask you to bring it to
the dedicated list r-sig-debian ?

>From the top of my head I can think of setting package status 'hold' (a
simpler per-package approach) or setting specific apt pinning values to not
alter packages from specific repos, see the manual pages.

But please ask on r-sig-debian. This list is for generic R packaging questions.

Thanks, Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From thom@@@petzo|dt @end|ng |rom tu-dre@den@de  Wed Aug  9 17:00:03 2023
From: thom@@@petzo|dt @end|ng |rom tu-dre@den@de (Thomas Petzoldt)
Date: Wed, 9 Aug 2023 17:00:03 +0200
Subject: [R-pkg-devel] preventing auto-update of R and c2d4u r-cran-*
 packages on Ubuntu 22.04
In-Reply-To: <25811.42393.429393.518363@rob.eddelbuettel.com>
References: <31ae1e4f-3f95-cf6a-ef45-a93d4967b16e@tu-dresden.de>
 <25811.42393.429393.518363@rob.eddelbuettel.com>
Message-ID: <fab18f12-bece-3050-e6ed-35da493150df@tu-dresden.de>

Hi Dirk,

thank you very much dirk for the quick response. I was aware that 
r-package-devel may not be the optimal place ;-) but hoped to address 
the right audience between r-devel and r-help.

Many thanks also for the suggestions, especially r2u and sorry for 
confusing the name of Michael.

Thomas

Am 09.08.2023 um 16:41 schrieb Dirk Eddelbuettel:
> On 9 August 2023 at 16:26, Thomas Petzoldt wrote:
> | I am running a couple of? shiny servers with several apps that are based
> | around own CRAN packages. It worked stable for years, but due to the
> | growing number of packages, the compile time for regular manual package
> | installation and updates became inconvenient.
> |
> | Therefore, I have been very happy to use pre-compiled packages from the
> | c2d4u repository: deb
> | https://ppa.launchpadcontent.net/c2d4u.team/c2d4u4.0+/ubuntu/ jammy main
>
> These days you also have r2u which has all of CRAN ie 20k binaries (each, for
> two Ubuntu flavors). See  https://eddelbuettel.github.io/r2u
>   
> | This is indeed a great service, thanks to Dirk Edelbuettel, mark Rutter
>
> That would be Michael Rutter.
>
> | and the complete team! The downside is, that now the r-cran-* binaries
> | are installed automatically, together with the system update. I
> | experienced now repeated cases that crashed some of the shiny apps,
> | mainly due to conflicts between the binary packages and other packages
> | installed from sources.
>
> If you use r2u (as I do on a laptop, an ec2 server, all my CI testing for
> work and testing for months now) you get all packages and do not need to
> mix.  Try r2u, it's good.
>   
> | My question: what is best practise, to disallow automatic updates for
> | all r-cran-* packages? Uncommenting the complete package source in the
> | apt/sources.list.d/cd4u...list file? Fiddling around with
> | /etc/apt/preferences ?
> |
> | The ideal approach would be to put a plain textfile of all installed
> | r-cran packages somewhere to the system, where packages that are to be
> | upgraded (or oppositely: pinned) are just commented or outcommented.
>
> That is very Debian / Ubuntu specific question.  Can I ask you to bring it to
> the dedicated list r-sig-debian ?
>
>  From the top of my head I can think of setting package status 'hold' (a
> simpler per-package approach) or setting specific apt pinning values to not
> alter packages from specific repos, see the manual pages.
>
> But please ask on r-sig-debian. This list is for generic R packaging questions.
>
> Thanks, Dirk


From em@nue|e@cord@no @end|ng |rom gm@||@com  Wed Aug  9 17:06:01 2023
From: em@nue|e@cord@no @end|ng |rom gm@||@com (Emanuele Cordano)
Date: Wed, 9 Aug 2023 17:06:01 +0200
Subject: [R-pkg-devel] LICENSE file in an R package for CRAN submission
Message-ID: <CAKw81f9o8MYv9x5-j54G-reur8q+DXQY1vdmmV0HfZJnFnjghg@mail.gmail.com>

Dear list,

is there a way to put the LICENSE file within an R package like in Github,
I have an R package on Github with a a LICENSE file compliant to Github and
containing the text of the licence citing in the DESCRIPION file. But when
I check the package , I obatained the following output:

* checking top-level files ... NOTE
File
  LICENSE

is not mentioned in the DESCRIPTION file.

How can I solve this?
Thank you
best
Emanuele Cordano
-- 
Emanuele Cordano, PhD
Environmental Engineer / Ingegnere per l' Ambiente e il territorio nr.
3587 (Albo A - Provincia di Trento)
cell: +39 3282818564
email: emanuele.cordano at gmail.com,emanuele.cordano at rendena100.eu,
emanuele.cordano at eurac.edu
PEC: emanuele.cordano at ingpec.eu
URL: www.rendena100.eu
LinkedIn: https://www.linkedin.com/in/emanuele-cordano-31995333
GitHub: https://github.com/ecor

	[[alternative HTML version deleted]]


From bbo|ker @end|ng |rom gm@||@com  Wed Aug  9 17:15:30 2023
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Wed, 9 Aug 2023 11:15:30 -0400
Subject: [R-pkg-devel] LICENSE file in an R package for CRAN submission
In-Reply-To: <CAKw81f9o8MYv9x5-j54G-reur8q+DXQY1vdmmV0HfZJnFnjghg@mail.gmail.com>
References: <CAKw81f9o8MYv9x5-j54G-reur8q+DXQY1vdmmV0HfZJnFnjghg@mail.gmail.com>
Message-ID: <db993691-1d48-632f-1ab0-c2868da8a4fc@gmail.com>

    You have two choices:

* put LICENSE in your .Rbuildignore file so that it shows up on Github 
but is excluded from the package

* follow the instructions in 
https://cran.r-project.org/doc/manuals/R-exts.html#Licensing to refer to 
LICENSE in your DESCRIPTION file. However, CRAN generally prefers that 
you use a standard license ("GPL-2", "GPL-3"), to make it easier for 
them to know that you've really complied with their openness 
requirements, and that you *not* include a license file that is 
redundant with that spec:

 > Whereas you should feel free to include a license file in your source 
distribution, please do not arrange to install yet another copy of the 
GNU COPYING or COPYING.LIB files but refer to the copies on 
https://www.R-project.org/Licenses/ and included in the R distribution 
(in directory share/licenses). Since files named LICENSE or LICENCE will 
be installed, do not use these names for standard license files. To 
include comments about the licensing rather than the body of a license, 
use a file named something like LICENSE.note.

On 2023-08-09 11:06 a.m., Emanuele Cordano wrote:
> Dear list,
> 
> is there a way to put the LICENSE file within an R package like in Github,
> I have an R package on Github with a a LICENSE file compliant to Github and
> containing the text of the licence citing in the DESCRIPION file. But when
> I check the package , I obatained the following output:
> 
> * checking top-level files ... NOTE
> File
>    LICENSE
> 
> is not mentioned in the DESCRIPTION file.
> 
> How can I solve this?
> Thank you
> best
> Emanuele Cordano

-- 
Dr. Benjamin Bolker
Professor, Mathematics & Statistics and Biology, McMaster University
Director, School of Computational Science and Engineering
(Acting) Graduate chair, Mathematics & Statistics
 > E-mail is sent at my convenience; I don't expect replies outside of 
working hours.


From kry|ov@r00t @end|ng |rom gm@||@com  Wed Aug  9 17:15:39 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Wed, 9 Aug 2023 18:15:39 +0300
Subject: [R-pkg-devel] LICENSE file in an R package for CRAN submission
In-Reply-To: <CAKw81f9o8MYv9x5-j54G-reur8q+DXQY1vdmmV0HfZJnFnjghg@mail.gmail.com>
References: <CAKw81f9o8MYv9x5-j54G-reur8q+DXQY1vdmmV0HfZJnFnjghg@mail.gmail.com>
Message-ID: <20230809181539.520265a4@Tarkus>

On Wed, 9 Aug 2023 17:06:01 +0200
Emanuele Cordano <emanuele.cordano at gmail.com> wrote:

> I have an R package on Github with a a LICENSE file compliant to
> Github and containing the text of the licence citing in the
> DESCRIPION file. But when I check the package , I obatained the
> following output:
> 
> * checking top-level files ... NOTE
> File
>   LICENSE
> 
> is not mentioned in the DESCRIPTION file.

What is the license? If it's something like GPL, just add LICENSE to
.Rbuildignore so that it stays in the repo, satisfying GitHub, but
doesn't get included inside the package file, satisfying R CMD check.

If it's something like MIT where you have to name the copyright holder
and the copyright year, things become more complicated.

See <https://cran.r-project.org/doc/manuals/R-exts.html#Licensing> for
the precise requirements.

-- 
Best regards,
Ivan


From edd @end|ng |rom deb|@n@org  Wed Aug  9 17:17:30 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Wed, 9 Aug 2023 10:17:30 -0500
Subject: [R-pkg-devel] preventing auto-update of R and c2d4u r-cran-*
 packages on Ubuntu 22.04
In-Reply-To: <fab18f12-bece-3050-e6ed-35da493150df@tu-dresden.de>
References: <31ae1e4f-3f95-cf6a-ef45-a93d4967b16e@tu-dresden.de>
 <25811.42393.429393.518363@rob.eddelbuettel.com>
 <fab18f12-bece-3050-e6ed-35da493150df@tu-dresden.de>
Message-ID: <25811.44554.983497.36842@rob.eddelbuettel.com>


Hi Thomas,

On 9 August 2023 at 17:00, Thomas Petzoldt wrote:
| thank you very much dirk for the quick response. I was aware that 
| r-package-devel may not be the optimal place ;-) but hoped to address 
| the right audience between r-devel and r-help.
| 
| Many thanks also for the suggestions, especially r2u and sorry for 
| confusing the name of Michael.

I have one more idea but I'll wait for you to post on r-sig-debian.

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From bbo|ker @end|ng |rom gm@||@com  Wed Aug  9 17:17:47 2023
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Wed, 9 Aug 2023 11:17:47 -0400
Subject: [R-pkg-devel] LICENSE file in an R package for CRAN submission
In-Reply-To: <db993691-1d48-632f-1ab0-c2868da8a4fc@gmail.com>
References: <CAKw81f9o8MYv9x5-j54G-reur8q+DXQY1vdmmV0HfZJnFnjghg@mail.gmail.com>
 <db993691-1d48-632f-1ab0-c2868da8a4fc@gmail.com>
Message-ID: <229060ad-b2f8-3237-b97b-91df62d13a74@gmail.com>

In case you're thinking of putting the package on CRAN, note also from 
the CRAN policy https://cran.r-project.org/web/packages/policies.html:

 > Packages with licenses not listed at 
https://svn.r-project.org/R/trunk/share/licenses/license.db will 
generally not be accepted.

On 2023-08-09 11:15 a.m., Ben Bolker wrote:
>  ?? You have two choices:
> 
> * put LICENSE in your .Rbuildignore file so that it shows up on Github 
> but is excluded from the package
> 
> * follow the instructions in 
> https://cran.r-project.org/doc/manuals/R-exts.html#Licensing to refer to 
> LICENSE in your DESCRIPTION file. However, CRAN generally prefers that 
> you use a standard license ("GPL-2", "GPL-3"), to make it easier for 
> them to know that you've really complied with their openness 
> requirements, and that you *not* include a license file that is 
> redundant with that spec:
> 
>  > Whereas you should feel free to include a license file in your source 
> distribution, please do not arrange to install yet another copy of the 
> GNU COPYING or COPYING.LIB files but refer to the copies on 
> https://www.R-project.org/Licenses/ and included in the R distribution 
> (in directory share/licenses). Since files named LICENSE or LICENCE will 
> be installed, do not use these names for standard license files. To 
> include comments about the licensing rather than the body of a license, 
> use a file named something like LICENSE.note.
> 
> On 2023-08-09 11:06 a.m., Emanuele Cordano wrote:
>> Dear list,
>>
>> is there a way to put the LICENSE file within an R package like in 
>> Github,
>> I have an R package on Github with a a LICENSE file compliant to 
>> Github and
>> containing the text of the licence citing in the DESCRIPION file. But 
>> when
>> I check the package , I obatained the following output:
>>
>> * checking top-level files ... NOTE
>> File
>> ?? LICENSE
>>
>> is not mentioned in the DESCRIPTION file.
>>
>> How can I solve this?
>> Thank you
>> best
>> Emanuele Cordano
> 

-- 
Dr. Benjamin Bolker
Professor, Mathematics & Statistics and Biology, McMaster University
Director, School of Computational Science and Engineering
(Acting) Graduate chair, Mathematics & Statistics
 > E-mail is sent at my convenience; I don't expect replies outside of 
working hours.


From h@w|ckh@m @end|ng |rom gm@||@com  Wed Aug  9 17:35:24 2023
From: h@w|ckh@m @end|ng |rom gm@||@com (Hadley Wickham)
Date: Wed, 9 Aug 2023 10:35:24 -0500
Subject: [R-pkg-devel] LICENSE file in an R package for CRAN submission
In-Reply-To: <CAKw81f9o8MYv9x5-j54G-reur8q+DXQY1vdmmV0HfZJnFnjghg@mail.gmail.com>
References: <CAKw81f9o8MYv9x5-j54G-reur8q+DXQY1vdmmV0HfZJnFnjghg@mail.gmail.com>
Message-ID: <CABdHhvG1syisnotuCVGNk1Zte_Hj9U+XFsLj_ZfAs388gR2XNw@mail.gmail.com>

If you're using one of the licenses supported by usethis
(https://usethis.r-lib.org/reference/licenses.html), you can just call
the appropriate function and it will do all the setup required to be
both CRAN and GitHub compatible.

Hadley

On Wed, Aug 9, 2023 at 10:10?AM Emanuele Cordano
<emanuele.cordano at gmail.com> wrote:
>
> Dear list,
>
> is there a way to put the LICENSE file within an R package like in Github,
> I have an R package on Github with a a LICENSE file compliant to Github and
> containing the text of the licence citing in the DESCRIPION file. But when
> I check the package , I obatained the following output:
>
> * checking top-level files ... NOTE
> File
>   LICENSE
>
> is not mentioned in the DESCRIPTION file.
>
> How can I solve this?
> Thank you
> best
> Emanuele Cordano
> --
> Emanuele Cordano, PhD
> Environmental Engineer / Ingegnere per l' Ambiente e il territorio nr.
> 3587 (Albo A - Provincia di Trento)
> cell: +39 3282818564
> email: emanuele.cordano at gmail.com,emanuele.cordano at rendena100.eu,
> emanuele.cordano at eurac.edu
> PEC: emanuele.cordano at ingpec.eu
> URL: www.rendena100.eu
> LinkedIn: https://www.linkedin.com/in/emanuele-cordano-31995333
> GitHub: https://github.com/ecor
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel



-- 
http://hadley.nz


From n|u|tz @end|ng |rom gm@||@com  Thu Aug 10 17:56:22 2023
From: n|u|tz @end|ng |rom gm@||@com (Neal Fultz)
Date: Thu, 10 Aug 2023 08:56:22 -0700
Subject: [R-pkg-devel] preventing auto-update of R and c2d4u r-cran-*
 packages on Ubuntu 22.04
In-Reply-To: <fab18f12-bece-3050-e6ed-35da493150df@tu-dresden.de>
References: <31ae1e4f-3f95-cf6a-ef45-a93d4967b16e@tu-dresden.de>
 <25811.42393.429393.518363@rob.eddelbuettel.com>
 <fab18f12-bece-3050-e6ed-35da493150df@tu-dresden.de>
Message-ID: <CAL9B2veROMdW+jtKY5OJSAyEG6fHxh1faZ-E9jwbKF5yE9cc3Q@mail.gmail.com>

In the past, I've extracted the pre-built debian packages into the user's
personal folder, instead of installing them via apt. It worked (but it was
not fun), and was pretty manual.  That might interact a bit better with
some of the third party tools for dealing with dependencies in shiny apps,
compared to system-wide installs; ymmv.

On Wed, Aug 9, 2023 at 8:00?AM Thomas Petzoldt <
thomas.petzoldt at tu-dresden.de> wrote:

> Hi Dirk,
>
> thank you very much dirk for the quick response. I was aware that
> r-package-devel may not be the optimal place ;-) but hoped to address
> the right audience between r-devel and r-help.
>
> Many thanks also for the suggestions, especially r2u and sorry for
> confusing the name of Michael.
>
> Thomas
>
> Am 09.08.2023 um 16:41 schrieb Dirk Eddelbuettel:
> > On 9 August 2023 at 16:26, Thomas Petzoldt wrote:
> > | I am running a couple of  shiny servers with several apps that are
> based
> > | around own CRAN packages. It worked stable for years, but due to the
> > | growing number of packages, the compile time for regular manual package
> > | installation and updates became inconvenient.
> > |
> > | Therefore, I have been very happy to use pre-compiled packages from the
> > | c2d4u repository: deb
> > | https://ppa.launchpadcontent.net/c2d4u.team/c2d4u4.0+/ubuntu/ jammy
> main
> >
> > These days you also have r2u which has all of CRAN ie 20k binaries
> (each, for
> > two Ubuntu flavors). See  https://eddelbuettel.github.io/r2u
> >
> > | This is indeed a great service, thanks to Dirk Edelbuettel, mark Rutter
> >
> > That would be Michael Rutter.
> >
> > | and the complete team! The downside is, that now the r-cran-* binaries
> > | are installed automatically, together with the system update. I
> > | experienced now repeated cases that crashed some of the shiny apps,
> > | mainly due to conflicts between the binary packages and other packages
> > | installed from sources.
> >
> > If you use r2u (as I do on a laptop, an ec2 server, all my CI testing for
> > work and testing for months now) you get all packages and do not need to
> > mix.  Try r2u, it's good.
> >
> > | My question: what is best practise, to disallow automatic updates for
> > | all r-cran-* packages? Uncommenting the complete package source in the
> > | apt/sources.list.d/cd4u...list file? Fiddling around with
> > | /etc/apt/preferences ?
> > |
> > | The ideal approach would be to put a plain textfile of all installed
> > | r-cran packages somewhere to the system, where packages that are to be
> > | upgraded (or oppositely: pinned) are just commented or outcommented.
> >
> > That is very Debian / Ubuntu specific question.  Can I ask you to bring
> it to
> > the dedicated list r-sig-debian ?
> >
> >  From the top of my head I can think of setting package status 'hold' (a
> > simpler per-package approach) or setting specific apt pinning values to
> not
> > alter packages from specific repos, see the manual pages.
> >
> > But please ask on r-sig-debian. This list is for generic R packaging
> questions.
> >
> > Thanks, Dirk
>
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
>

	[[alternative HTML version deleted]]


From @|mon@urb@nek @end|ng |rom R-project@org  Fri Aug 11 05:22:45 2023
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Fri, 11 Aug 2023 15:22:45 +1200
Subject: [R-pkg-devel] macOS results not mirrored/updated at CRAN
In-Reply-To: <25810.14575.345108.235926@rob.eddelbuettel.com>
References: <25775.16177.937585.974774@rob.eddelbuettel.com>
 <25779.10961.299898.418341@rob.eddelbuettel.com>
 <SY4PR01MB56580500A52A8E91A06D1C53AC3AA@SY4PR01MB5658.ausprd01.prod.outlook.com>
 <25787.51936.871790.433852@rob.eddelbuettel.com>
 <D4DA5737-AD56-42FE-A8C7-6202DA1F8D80@R-project.org>
 <25810.14575.345108.235926@rob.eddelbuettel.com>
Message-ID: <625F1940-4187-4629-8701-44BD1E8CCC0A@R-project.org>

Dirk,

thanks - one of those annoying cases where a script works in the login shell, but not in the cron job -- hopefully fixed.

Cheers,
Simon


> On 9/08/2023, at 12:45 AM, Dirk Eddelbuettel <edd at debian.org> wrote:
> 
> 
> Simon,
> 
> This is still an issue for arm64.  Uploaded tiledb and RQuantLib yesterday,
> both already built binaries for macOS (thank you!) but on the x86_64 ones are
> on the results page.  Can you take another peek at this?
> 
> Thanks so much,  Dirk
> 
> -- 
> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
> 


From thom@@@petzo|dt @end|ng |rom tu-dre@den@de  Fri Aug 11 07:54:38 2023
From: thom@@@petzo|dt @end|ng |rom tu-dre@den@de (Thomas Petzoldt)
Date: Fri, 11 Aug 2023 07:54:38 +0200
Subject: [R-pkg-devel] preventing auto-update of R and c2d4u r-cran-*
 packages on Ubuntu 22.04
In-Reply-To: <CAL9B2veROMdW+jtKY5OJSAyEG6fHxh1faZ-E9jwbKF5yE9cc3Q@mail.gmail.com>
References: <31ae1e4f-3f95-cf6a-ef45-a93d4967b16e@tu-dresden.de>
 <25811.42393.429393.518363@rob.eddelbuettel.com>
 <fab18f12-bece-3050-e6ed-35da493150df@tu-dresden.de>
 <CAL9B2veROMdW+jtKY5OJSAyEG6fHxh1faZ-E9jwbKF5yE9cc3Q@mail.gmail.com>
Message-ID: <33deb4ee-dcd4-2ec3-4320-25b728bdbf61@tu-dresden.de>



On 10.08.2023 at 17:56 Neal Fultz wrote:
> In the past, I've extracted the pre-built debian packages into the 
> user's personal folder, instead of installing them via apt. It worked 
> (but it was not fun), and was pretty manual.? That might interact a bit 
> better with some of the third party tools for dealing with dependencies 
> in shiny apps, compared to system-wide installs; ymmv.

Thank you for the suggestion. My implemented approach works indeed 
similar to this.

After moving this discussion to R-SIG-Debian 
(https://stat.ethz.ch/pipermail/r-sig-debian/2023-August/thread.html), 
Dirk Eddelbuettel suggested five different approaches.

I made indeed a snapshot (a local copy) of the complete "site-library" 
folder to another place of the file system (e.g. 
"site-library-snapshot"). In the .Renviron file of the shiny user, the 
environment variable R_LIBS_USER then points to this location. The base 
packages from "library" are conservative, so I decided to use them from 
the original position.

Finally, an rmarkdown script provided by the shiny-server can report the 
value of .libPaths() and versions and locations of installed packages:

installed.packages()[,2:3]

This works well, except for a package that contained relative symbolic 
links to the file system.

Thomas



From edd @end|ng |rom deb|@n@org  Fri Aug 11 15:09:41 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Fri, 11 Aug 2023 08:09:41 -0500
Subject: [R-pkg-devel] preventing auto-update of R and c2d4u r-cran-*
 packages on Ubuntu 22.04
In-Reply-To: <33deb4ee-dcd4-2ec3-4320-25b728bdbf61@tu-dresden.de>
References: <31ae1e4f-3f95-cf6a-ef45-a93d4967b16e@tu-dresden.de>
 <25811.42393.429393.518363@rob.eddelbuettel.com>
 <fab18f12-bece-3050-e6ed-35da493150df@tu-dresden.de>
 <CAL9B2veROMdW+jtKY5OJSAyEG6fHxh1faZ-E9jwbKF5yE9cc3Q@mail.gmail.com>
 <33deb4ee-dcd4-2ec3-4320-25b728bdbf61@tu-dresden.de>
Message-ID: <25814.13077.692566.548117@rob.eddelbuettel.com>


On 11 August 2023 at 07:54, Thomas Petzoldt wrote:
| After moving this discussion to R-SIG-Debian 
| (https://stat.ethz.ch/pipermail/r-sig-debian/2023-August/thread.html), 
| Dirk Eddelbuettel suggested five different approaches.
| 
| I made indeed a snapshot (a local copy) of the complete "site-library" 
| folder to another place of the file system (e.g. 
| "site-library-snapshot"). In the .Renviron file of the shiny user, the 
| environment variable R_LIBS_USER then points to this location. The base 
| packages from "library" are conservative, so I decided to use them from 
| the original position.
| 
| Finally, an rmarkdown script provided by the shiny-server can report the 
| value of .libPaths() and versions and locations of installed packages:
| 
| installed.packages()[,2:3]
| 
| This works well, except for a package that contained relative symbolic 
| links to the file system.

Perfect, and thanks for reporting back.

One other exception would be 'bad' packages with a hard code installation
path (via rpath or install_name_tool) but luckily CRAN outlaws that so it
should be rare (but 'been there, done that' and had to fix a package or two
of mine). In short, 'should work most of the time as described here'.

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From pro|jcn@@h @end|ng |rom gm@||@com  Fri Aug 11 22:41:01 2023
From: pro|jcn@@h @end|ng |rom gm@||@com (J C Nash)
Date: Fri, 11 Aug 2023 16:41:01 -0400
Subject: [R-pkg-devel] CRAN test complaints about package that passes most
 platforms
Message-ID: <64f9f1a8-139b-918e-8397-43b9f923f473@gmail.com>

My nlsr package was revised mid-February. After CRAN approved it, I got a
message that it was "failing" M1Mac tests. The issue turned out to be ANOTHER
package that was being used in an example in a vignette. Because M1 does not
provide the IEEE 754 80 bit registers, a method in package minqa did not
"converge", that is, it did not pass a termination test. Relaxing a tolerance
got a "pass" on the test service for M1 Mac then available. This issue can
be found by searching the web, though it probably deserves some clarity in
R documentation somewhere. The presentation of such problems can, of course,
take many forms.

There was a minor revision to nlsr in May to rationalize the names of some functions
to produce summary information about solutions. This seemed to give no issues until
now.

Two days ago, however, I received a msg that the (unchanged!) package is failing tests
on M1 and on Fedora clang r-devel tests in building some vignettes. The messages
are about pandoc and a missing file "framed.sty". All other tests showing on
CRAN are OK. When I try with R-hub I seem to get even more complaints than
the messages from CRAN, but about the same issues, and about vignette
building.

2 queries:

- Is anyone else getting similar messages? If so, it may be useful to share
notes to try to get this resolved. It seems within reason that the issue is
some unfortunate detail in Fedora and M1 that interacts with particular
syntax in the vignette, or that the setup of those machines is inadequate.
Comparing notes may reveal what is causing complaints and help to fix either
in the .Rmd vignettes or in the pandoc structure.

- Is there an M1Mac test platform to which packages can be submitted? Brian
Ripley did have one, but trying the link I used before seems not to present
a submission dialog.

I'd like to be helpful, but have a suspicion that a humble package developer
is being used as a stooge to find and fix software glitches outside of R. However,
if it's a matter of an unfortunate mismatch of document and processor, I'll be
happy to help document and fix it.

It would be a pity if vignettes cause enough trouble that developers simply don't
include them.

Best,

John Nash


From roy@mende|@@ohn @end|ng |rom no@@@gov  Fri Aug 11 22:56:05 2023
From: roy@mende|@@ohn @end|ng |rom no@@@gov (Roy Mendelssohn - NOAA Federal)
Date: Fri, 11 Aug 2023 13:56:05 -0700
Subject: [R-pkg-devel] 
 CRAN test complaints about package that passes most platforms
In-Reply-To: <64f9f1a8-139b-918e-8397-43b9f923f473@gmail.com>
References: <64f9f1a8-139b-918e-8397-43b9f923f473@gmail.com>
Message-ID: <F9234AB8-A2B5-4FD8-80CE-B2F05412FD1E@noaa.gov>



> On Aug 11, 2023, at 1:41 PM, J C Nash <profjcnash at gmail.com> wrote:
> 
> - Is there an M1Mac test platform to which packages can be submitted? Brian
> Ripley did have one, but trying the link I used before seems not to present
> a submission dialog.

Perhaps:

https://mac.r-project.org/macbuilder/submit.html

-Roy

**********************
"The contents of this message do not reflect any position of the U.S. Government or NOAA."
**********************
Roy Mendelssohn
Supervisory Operations Research Analyst
NOAA/NMFS
Environmental Research Division
Southwest Fisheries Science Center
***Note new street address***
110 McAllister Way
Santa Cruz, CA 95060
Phone: (831)-420-3666
Fax: (831) 420-3980
e-mail: Roy.Mendelssohn at noaa.gov www: https://www.pfeg.noaa.gov/

"Old age and treachery will overcome youth and skill."
"From those who have been given much, much will be expected" 
"the arc of the moral universe is long, but it bends toward justice" -MLK Jr.


From |ent|nj @end|ng |rom @hutt|ethre@d@com  Sat Aug 12 15:10:37 2023
From: |ent|nj @end|ng |rom @hutt|ethre@d@com (Jamie Lentin)
Date: Sat, 12 Aug 2023 14:10:37 +0100
Subject: [R-pkg-devel] gdb availability on r-devel-linux-x86_64-fedora-gcc
Message-ID: <0c6f536870145fa037b2553ce5bb8f1f@shuttlethread.com>

Hello list,

Our package gadget3[0] has just started failing the "donttest" 
additional check[1] on r-devel-linux-x86_64-fedora-gcc, specifically:-

   > # Build the model in an isolated R session w/debugger
   > writeLines(TMB::gdbsource(g3_tmb_adfun(cpp, compile_flags = "-g", 
output_script = TRUE)))
   Error in system(cmd, intern = TRUE, ignore.stdout = FALSE, 
ignore.stderr = TRUE) :
     error in running command
   Calls: writeLines -> <Anonymous> -> system
   Execution halted

The system call in question is done by the TMB package[2], and not ours 
to tinker with:

   cmd <- paste("R --vanilla < ",file," -d gdb --debugger-args=\"-x",
                gdbscript,"\"")
   txt <- system(cmd,intern=TRUE,ignore.stdout=FALSE,ignore.stderr=TRUE)

My only vaguely reasonable guess is that gdb isn't available on the host 
in question (certainly R will be!). How likely is this? Is it worth 
trying to resubmit with the call wrapped with an "if (gdb is on the 
path)"?

If this is a silly idea, which I suspect it is, would a resubmission 
removing the example be accepted or just raise red flags? This is 
obviously cheating---and it's a useful example I'd rather keep---but I'm 
not sure we have many other options available to us.

This example isn't a problem when run elsewhere. The TMB package itself 
isn't failing[3], but there doesn't seem to be any examples exercising 
TMB::gdbsource() there.

Thanks for any help!

[0] https://CRAN.R-project.org/package=gadget3
[1] https://www.stats.ox.ac.uk/pub/bdr/donttest/gadget3.out
[2] 
https://github.com/kaskr/adcomp/blob/master/TMB/R/gdbsource.R#L40-L42
[3] https://cran.r-project.org/web/checks/check_results_TMB.html


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Sat Aug 12 18:12:35 2023
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Sat, 12 Aug 2023 18:12:35 +0200
Subject: [R-pkg-devel] 
 gdb availability on r-devel-linux-x86_64-fedora-gcc
In-Reply-To: <0c6f536870145fa037b2553ce5bb8f1f@shuttlethread.com>
References: <0c6f536870145fa037b2553ce5bb8f1f@shuttlethread.com>
Message-ID: <f49a77aa-c424-588c-0f46-c8d5004634dd@statistik.tu-dortmund.de>



On 12.08.2023 15:10, Jamie Lentin wrote:
> Hello list,
> 
> Our package gadget3[0] has just started failing the "donttest" 
> additional check[1] on r-devel-linux-x86_64-fedora-gcc, specifically:-
> 
>  ? > # Build the model in an isolated R session w/debugger
>  ? > writeLines(TMB::gdbsource(g3_tmb_adfun(cpp, compile_flags = "-g", 
> output_script = TRUE)))
>  ? Error in system(cmd, intern = TRUE, ignore.stdout = FALSE, 
> ignore.stderr = TRUE) :
>  ??? error in running command
>  ? Calls: writeLines -> <Anonymous> -> system
>  ? Execution halted
> 
> The system call in question is done by the TMB package[2], and not ours 
> to tinker with:
> 
>  ? cmd <- paste("R --vanilla < ",file," -d gdb --debugger-args=\"-x",
>  ?????????????? gdbscript,"\"")
>  ? txt <- system(cmd,intern=TRUE,ignore.stdout=FALSE,ignore.stderr=TRUE)
> 
> My only vaguely reasonable guess is that gdb isn't available on the host 
> in question (certainly R will be!). How likely is this? Is it worth 
> trying to resubmit with the call wrapped with an "if (gdb is on the path)"?


I guess it is really not available as that system got an update.
Note that you package does not declare any SystemRequirements. Please do 
so and mention gdb.

Wrapping it in "if (gdb is on the path)" seems a good solution.

Best,
Uwe Ligges


> 
> If this is a silly idea, which I suspect it is, would a resubmission 
> removing the example be accepted or just raise red flags? This is 
> obviously cheating---and it's a useful example I'd rather keep---but I'm 
> not sure we have many other options available to us.
> 
> This example isn't a problem when run elsewhere. The TMB package itself 
> isn't failing[3], but there doesn't seem to be any examples exercising 
> TMB::gdbsource() there.
> 
> Thanks for any help!
> 
> [0] https://CRAN.R-project.org/package=gadget3
> [1] https://www.stats.ox.ac.uk/pub/bdr/donttest/gadget3.out
> [2] https://github.com/kaskr/adcomp/blob/master/TMB/R/gdbsource.R#L40-L42
> [3] https://cran.r-project.org/web/checks/check_results_TMB.html
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From edd @end|ng |rom deb|@n@org  Sat Aug 12 23:19:33 2023
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Sat, 12 Aug 2023 16:19:33 -0500
Subject: [R-pkg-devel] 
 gdb availability on r-devel-linux-x86_64-fedora-gcc
In-Reply-To: <f49a77aa-c424-588c-0f46-c8d5004634dd@statistik.tu-dortmund.de>
References: <0c6f536870145fa037b2553ce5bb8f1f@shuttlethread.com>
 <f49a77aa-c424-588c-0f46-c8d5004634dd@statistik.tu-dortmund.de>
Message-ID: <25815.63333.522184.604529@rob.eddelbuettel.com>


On 12 August 2023 at 18:12, Uwe Ligges wrote:
| On 12.08.2023 15:10, Jamie Lentin wrote:
| > The system call in question is done by the TMB package[2], and not ours 
| > to tinker with:
| > 
| >  ? cmd <- paste("R --vanilla < ",file," -d gdb --debugger-args=\"-x",
| >  ?????????????? gdbscript,"\"")
| >  ? txt <- system(cmd,intern=TRUE,ignore.stdout=FALSE,ignore.stderr=TRUE)
| > 
| > My only vaguely reasonable guess is that gdb isn't available on the host 
| > in question (certainly R will be!). How likely is this? Is it worth 
| > trying to resubmit with the call wrapped with an "if (gdb is on the path)"?
| 
| 
| I guess it is really not available as that system got an update.
| Note that you package does not declare any SystemRequirements. Please do 
| so and mention gdb.
| 
| Wrapping it in "if (gdb is on the path)" seems a good solution.

Seconded esp as some systems may have lldb instead of gdb, or neither.
Adding a simple `if (nzchar(Sys.which("gdb")))` should get you there.

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Sun Aug 13 00:52:14 2023
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Sun, 13 Aug 2023 00:52:14 +0200
Subject: [R-pkg-devel] 
 gdb availability on r-devel-linux-x86_64-fedora-gcc
In-Reply-To: <25815.63333.522184.604529@rob.eddelbuettel.com>
References: <0c6f536870145fa037b2553ce5bb8f1f@shuttlethread.com>
 <f49a77aa-c424-588c-0f46-c8d5004634dd@statistik.tu-dortmund.de>
 <25815.63333.522184.604529@rob.eddelbuettel.com>
Message-ID: <00d5c596-4fa9-9659-a53b-e0eaf18ee24d@statistik.tu-dortmund.de>



On 12.08.2023 23:19, Dirk Eddelbuettel wrote:
> 
> On 12 August 2023 at 18:12, Uwe Ligges wrote:
> | On 12.08.2023 15:10, Jamie Lentin wrote:
> | > The system call in question is done by the TMB package[2], and not ours
> | > to tinker with:
> | >
> | >  ? cmd <- paste("R --vanilla < ",file," -d gdb --debugger-args=\"-x",
> | >  ?????????????? gdbscript,"\"")
> | >  ? txt <- system(cmd,intern=TRUE,ignore.stdout=FALSE,ignore.stderr=TRUE)
> | >
> | > My only vaguely reasonable guess is that gdb isn't available on the host
> | > in question (certainly R will be!). How likely is this? Is it worth
> | > trying to resubmit with the call wrapped with an "if (gdb is on the path)"?
> |
> |
> | I guess it is really not available as that system got an update.
> | Note that you package does not declare any SystemRequirements. Please do
> | so and mention gdb.
> |
> | Wrapping it in "if (gdb is on the path)" seems a good solution.
> 
> Seconded esp as some systems may have lldb instead of gdb, or neither.
> Adding a simple `if (nzchar(Sys.which("gdb")))` should get you there.
> 
> Dirk
> 


Note that also

1. The machine does not have R on the path (but Rdev)
2. you need to use a current pandoc. Citing Professor Ripley: "The 
platforms failing are using pandoc 3.1.6 or (newly updated, M1mac) 3.1.6.1"

Best,
Uwe Ligges


From m|ketopper123 @end|ng |rom gm@||@com  Sun Aug 13 07:49:01 2023
From: m|ketopper123 @end|ng |rom gm@||@com (Michael Topper)
Date: Sat, 12 Aug 2023 22:49:01 -0700
Subject: [R-pkg-devel] Examples are too long in computation for CRAN
Message-ID: <CAN6696sn9Hc5=R50uK_iG=2DY+uffjjA+h+jgRsxv==VjPJ1gA@mail.gmail.com>

Hello all,

Not sure how to handle this, as it had not been an issue on my previous
CRAN submissions. It appears that some of my examples/tests are taking too
long to run for CRAN's standards. Is there a way around this other than the
simple "change the example" or "change the test"?

Moreover, is there any insight as to why this would happen on the third
update of the package rather than on the first or second?

Thanks in advance, and see below for the NOTE:


Flavor: r-devel-linux-x86_64-debian-gcc
Check: examples, Result: NOTE
  Examples with CPU (user + system) or elapsed time > 5s
                    user system elapsed
  panelsummary     9.574  0.273   0.817
  panelsummary_raw 6.048  0.164   0.450
  Examples with CPU time > 2.5 times elapsed time
                    user system elapsed  ratio
  panelsummary_raw 6.048  0.164   0.450 13.804
  panelsummary     9.574  0.273   0.817 12.053
  clean_raw        3.684  0.064   0.514  7.292

Flavor: r-devel-linux-x86_64-debian-gcc
Check: tests, Result: NOTE
    Running 'testthat.R' [54s/6s]
  Running R code in 'testthat.R' had CPU time 9.3 times elapsed time

	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Sun Aug 13 08:14:42 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Sun, 13 Aug 2023 09:14:42 +0300
Subject: [R-pkg-devel] Examples are too long in computation for CRAN
In-Reply-To: <CAN6696sn9Hc5=R50uK_iG=2DY+uffjjA+h+jgRsxv==VjPJ1gA@mail.gmail.com>
References: <CAN6696sn9Hc5=R50uK_iG=2DY+uffjjA+h+jgRsxv==VjPJ1gA@mail.gmail.com>
Message-ID: <20230813091442.37cc6189@parabola>

? Sat, 12 Aug 2023 22:49:01 -0700
Michael Topper <miketopper123 at gmail.com> ?????:

> It appears that some of my examples/tests are taking too
> long to run for CRAN's standards.

I don't think they are running too long; I think they are too parallel.
The elapsed time is below 1s, but the "user" time (CPU time spent in
the process) is 7 to 13 times that. This suggests that your code
resulted in starting more threads than CRAN allows (up to 2 if you have
to test parallellism). Are you using OpenMP? data.table? makeCluster()?
It's simplest to always to default to a parallelism factor of 2 in
examples an tests, because determining the right number is a hard
problem. (What if the computer is busy doing something else? What if
the BLAS is already parallel enough?)

> Moreover, is there any insight as to why this would happen on the
> third update of the package rather than on the first or second?

The rule has always depended on the particular system running the
checks (five seconds on my 12-year-old ThinkPad or on my ultraportative
with an Intel Atom that had snails in its ancestry?). Maybe some
dependency of your package has updated and started creating threads
where it previously didn't.

-- 
Best regards,
Ivan


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Sun Aug 13 08:26:23 2023
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Sun, 13 Aug 2023 08:26:23 +0200
Subject: [R-pkg-devel] Examples are too long in computation for CRAN
In-Reply-To: <20230813091442.37cc6189@parabola>
References: <CAN6696sn9Hc5=R50uK_iG=2DY+uffjjA+h+jgRsxv==VjPJ1gA@mail.gmail.com>
 <20230813091442.37cc6189@parabola>
Message-ID: <f033518a-c19a-a27d-c229-a5523ea92ed8@statistik.tu-dortmund.de>



On 13.08.2023 08:14, Ivan Krylov wrote:
> ? Sat, 12 Aug 2023 22:49:01 -0700
> Michael Topper <miketopper123 at gmail.com> ?????:
> 
>> It appears that some of my examples/tests are taking too
>> long to run for CRAN's standards.
> 
> I don't think they are running too long; I think they are too parallel.
> The elapsed time is below 1s, but the "user" time (CPU time spent in
> the process) is 7 to 13 times that. This suggests that your code
> resulted in starting more threads than CRAN allows (up to 2 if you have
> to test parallellism). Are you using OpenMP? data.table? makeCluster()?
> It's simplest to always to default to a parallelism factor of 2 in
> examples an tests, because determining the right number is a hard
> problem. (What if the computer is busy doing something else? What if
> the BLAS is already parallel enough?)
> 
>> Moreover, is there any insight as to why this would happen on the
>> third update of the package rather than on the first or second?
> 
> The rule has always depended on the particular system running the
> checks (five seconds on my 12-year-old ThinkPad or on my ultraportative
> with an Intel Atom that had snails in its ancestry?). Maybe some
> dependency of your package has updated and started creating threads
> where it previously didn't.
> 


Good points, not only for examples and tests, but also for defaults.

On shared resources (such as clusters) users may not expect the 
parallelization you use and then overallocate the resources.

Example: 20 cores available to the user who runs makeCluster() for 
paallelization, but the underlying code does multihreading on 20 cores. 
Then we end up in 20*20 threads on the machine slowing down the machine 
and processes of other uers.
Hence, defaults should also not be more than 2. Simply allow the user to 
ask for more.

Best,
Uwe Ligges


From m|ketopper123 @end|ng |rom gm@||@com  Sun Aug 13 09:59:40 2023
From: m|ketopper123 @end|ng |rom gm@||@com (Michael Topper)
Date: Sun, 13 Aug 2023 00:59:40 -0700
Subject: [R-pkg-devel] Examples are too long in computation for CRAN
In-Reply-To: <f033518a-c19a-a27d-c229-a5523ea92ed8@statistik.tu-dortmund.de>
References: <CAN6696sn9Hc5=R50uK_iG=2DY+uffjjA+h+jgRsxv==VjPJ1gA@mail.gmail.com>
 <20230813091442.37cc6189@parabola>
 <f033518a-c19a-a27d-c229-a5523ea92ed8@statistik.tu-dortmund.de>
Message-ID: <CAN6696sCCmHsMxUzBhA1WH7xJzxPUS=e8fTPyxmjGW0KGuO=Qg@mail.gmail.com>

I have tried the following:

   - Trimming down the examples substantially to only run 1 regression
   per-function.
   - Setting the nthreads argument to 2 in fixest::feels() in case this is
   the problem as suggested.
   - Tried to use skip_cran_test() on the tests that include fixest
   regressions

However, while the time has substantially been trimmed down, it still does
not pass. At this point, I'm not sure what the next step is.

Below is the results:

Flavor: r-devel-linux-x86_64-debian-gcc
Check: examples, Result: NOTE
  Examples with CPU time > 2.5 times elapsed time
                    user system elapsed ratio
  panelsummary_raw 3.354  0.054   0.461 7.393
  clean_raw        3.436  0.091   0.571 6.177
  panelsummary     3.636  0.136   0.824 4.578

Flavor: r-devel-linux-x86_64-debian-gcc
Check: tests, Result: NOTE
    Running 'testthat.R' [39s/4s]
  Running R code in 'testthat.R' had CPU time 8.7 times elapsed time

On Sat, Aug 12, 2023 at 11:26?PM Uwe Ligges <ligges at statistik.tu-dortmund.de>
wrote:

>
>
> On 13.08.2023 08:14, Ivan Krylov wrote:
> > ? Sat, 12 Aug 2023 22:49:01 -0700
> > Michael Topper <miketopper123 at gmail.com> ?????:
> >
> >> It appears that some of my examples/tests are taking too
> >> long to run for CRAN's standards.
> >
> > I don't think they are running too long; I think they are too parallel.
> > The elapsed time is below 1s, but the "user" time (CPU time spent in
> > the process) is 7 to 13 times that. This suggests that your code
> > resulted in starting more threads than CRAN allows (up to 2 if you have
> > to test parallellism). Are you using OpenMP? data.table? makeCluster()?
> > It's simplest to always to default to a parallelism factor of 2 in
> > examples an tests, because determining the right number is a hard
> > problem. (What if the computer is busy doing something else? What if
> > the BLAS is already parallel enough?)
> >
> >> Moreover, is there any insight as to why this would happen on the
> >> third update of the package rather than on the first or second?
> >
> > The rule has always depended on the particular system running the
> > checks (five seconds on my 12-year-old ThinkPad or on my ultraportative
> > with an Intel Atom that had snails in its ancestry?). Maybe some
> > dependency of your package has updated and started creating threads
> > where it previously didn't.
> >
>
>
> Good points, not only for examples and tests, but also for defaults.
>
> On shared resources (such as clusters) users may not expect the
> parallelization you use and then overallocate the resources.
>
> Example: 20 cores available to the user who runs makeCluster() for
> paallelization, but the underlying code does multihreading on 20 cores.
> Then we end up in 20*20 threads on the machine slowing down the machine
> and processes of other uers.
> Hence, defaults should also not be more than 2. Simply allow the user to
> ask for more.
>
> Best,
> Uwe Ligges
>


-- 
Michael Topper
B.S. Economics and Mathematics, University of California San Diego 2015
M.A. Economics, San Diego State University 2018
Mobile: (805) 914-4285
miketopper123 at gmail.com

	[[alternative HTML version deleted]]


From kry|ov@r00t @end|ng |rom gm@||@com  Sun Aug 13 10:42:59 2023
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Sun, 13 Aug 2023 11:42:59 +0300
Subject: [R-pkg-devel] Examples are too long in computation for CRAN
In-Reply-To: <CAN6696sCCmHsMxUzBhA1WH7xJzxPUS=e8fTPyxmjGW0KGuO=Qg@mail.gmail.com>
References: <CAN6696sn9Hc5=R50uK_iG=2DY+uffjjA+h+jgRsxv==VjPJ1gA@mail.gmail.com>
 <20230813091442.37cc6189@parabola>
 <f033518a-c19a-a27d-c229-a5523ea92ed8@statistik.tu-dortmund.de>
 <CAN6696sCCmHsMxUzBhA1WH7xJzxPUS=e8fTPyxmjGW0KGuO=Qg@mail.gmail.com>
Message-ID: <20230813114259.77e21bbe@parabola>

? Sun, 13 Aug 2023 00:59:40 -0700
Michael Topper <miketopper123 at gmail.com> ?????:

>    - Setting the nthreads argument to 2 in fixest::feels() in case
> this is the problem as suggested.

Any chance you could be hitting some other code paths in the fixest
package while working on the objects returned by fixest::feols()?

Try running trace(fixest::getFixest_nthreads) and then running examples
in the same R session. Assuming that (1) your only problem is fixest
and (2) every fixest function that uses OpenMP consults
getFixest_nthreads() by default, it should be possible to catch them
this way.

If you see a call but aren't sure about its origin, try tracer =
quote(traceback()) or tracer = quote(browser()). (As a precaution,
untrace() the function before trace()ing it again.)

FWIW, modelsummary depends on both fixest and data.table, but it
doesn't look like you're creating threads via these.

>    - Tried to use skip_cran_test() on the tests that include fixest
>    regressions

For tests, there's one more option: fixest::setFixest_nthreads(1) at
the beginning of the file. This should eliminate any extra threads
originating from fixest. If you do this and the problem persists, it
must be something else. Unfortunately, this is global state, and using
this in examples will involve saving the previous value and then
restoring it later.

(If you had separate test files in tests/*.R, R would be able to tell
you which one causes excessive CPU time. Unfortunately, testthat idioms
and core R idioms don't work well together.)

It really is unfortunate that you cannot reproduce this without a
computer with a lot of cores and working OpenMP.

-- 
Best regards,
Ivan


From |ent|nj @end|ng |rom @hutt|ethre@d@com  Sun Aug 13 19:25:11 2023
From: |ent|nj @end|ng |rom @hutt|ethre@d@com (Jamie Lentin)
Date: Sun, 13 Aug 2023 18:25:11 +0100
Subject: [R-pkg-devel] 
 gdb availability on r-devel-linux-x86_64-fedora-gcc
In-Reply-To: <00d5c596-4fa9-9659-a53b-e0eaf18ee24d@statistik.tu-dortmund.de>
References: <0c6f536870145fa037b2553ce5bb8f1f@shuttlethread.com>
 <f49a77aa-c424-588c-0f46-c8d5004634dd@statistik.tu-dortmund.de>
 <25815.63333.522184.604529@rob.eddelbuettel.com>
 <00d5c596-4fa9-9659-a53b-e0eaf18ee24d@statistik.tu-dortmund.de>
Message-ID: <7403d24efd019db3cb61e88d637650ee@shuttlethread.com>

Thanks both!

On 2023-08-12 23:52, Uwe Ligges wrote:
> On 12.08.2023 23:19, Dirk Eddelbuettel wrote:
>> 
>> On 12 August 2023 at 18:12, Uwe Ligges wrote:
>> | On 12.08.2023 15:10, Jamie Lentin wrote:
>> | > The system call in question is done by the TMB package[2], and not 
>> ours
>> | > to tinker with:
>> | >
>> | >  ? cmd <- paste("R --vanilla < ",file," -d gdb 
>> --debugger-args=\"-x",
>> | >  ?????????????? gdbscript,"\"")
>> | >  ? txt <- 
>> system(cmd,intern=TRUE,ignore.stdout=FALSE,ignore.stderr=TRUE)
>> | >
>> | > My only vaguely reasonable guess is that gdb isn't available on 
>> the host
>> | > in question (certainly R will be!). How likely is this? Is it 
>> worth
>> | > trying to resubmit with the call wrapped with an "if (gdb is on 
>> the path)"?
>> |
>> | I guess it is really not available as that system got an update.
>> | Note that you package does not declare any SystemRequirements. 
>> Please do
>> | so and mention gdb.

It's TMB::gdbsource() that's calling system("R -d gdb"), so presumably 
the SystemRequirements should live there rather than gadget3? I can 
raise an issue suggesting this.

>> | Wrapping it in "if (gdb is on the path)" seems a good solution.
>> 
>> Seconded esp as some systems may have lldb instead of gdb, or neither.
>> Adding a simple `if (nzchar(Sys.which("gdb")))` should get you there.
>> 
>> Dirk
>> 
> 
> Note that also
> 
> 1. The machine does not have R on the path (but Rdev)

Okay, I'll check for "all(nzchar(Sys.which(c('gdb', 'R'))))". This is 
overkill somewhat, and the example won't run in some environments that 
TMB::gdbsource() should work in. However, at least it'll check it does 
work for the relatively default case.

> 2. you need to use a current pandoc. Citing Professor Ripley: "The
> platforms failing are using pandoc 3.1.6 or (newly updated, M1mac)
> 3.1.6.1"

I'll be sure to try upgrading before resubmitting.

Thanks again for your help!

> Best,
> Uwe Ligges


From bbo|ker @end|ng |rom gm@||@com  Sun Aug 13 21:17:09 2023
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Sun, 13 Aug 2023 15:17:09 -0400
Subject: [R-pkg-devel] status of "possibly invalid URL/403 error" NOTEs?
Message-ID: <af047398-58dd-1289-c719-2aa1441595da@gmail.com>

   I have a package whose documentation includes the reference 
\doi{10.1137/18M1186411} which redirects here:
https://epubs.siam.org/doi/10.1137/18M1186411

Running R CMD check --as-cran on the package gives

Found the following (possibly) invalid URLs:
   URL: https://epubs.siam.org/doi/10.1137/18M1186411
     From: man/llig.Rd
     Status: 403
     Message: Forbidden

   I can access this perfectly well in the browser.

   Is there any way to avoid this (other than, say, including the URL in 
a form that does *not* provide a link so that R CMD check won't try to 
access it? (As Uwe Ligges says 
[here](https://stat.ethz.ch/pipermail/r-package-devel/2020q1/005195.html) 
(for a more obviously problematic case), "mention the URL in plain text 
but not link"

   Here Hadley Wickham says that these NOTEs can be ignored

https://twitter.com/hadleywickham/status/1358170607314235392

but "Hadley said it on twitter" is not an ideal source. The CRAN 
repository policy says that packages must pass checks without 
"significant" notes, but it's always hard to know what's significant and 
what's not ...

   There's a thread here: 
https://stat.ethz.ch/pipermail/r-package-devel/2020q1/005171.html

    Tangentially: is there a more convenient way to search the 
r-package-devel archives than googling (e.g.) 
"site:https://stat.ethz.ch/pipermail/r-package-devel  403" ?


From @vr@h@m@@d|er @end|ng |rom gm@||@com  Sun Aug 13 22:57:53 2023
From: @vr@h@m@@d|er @end|ng |rom gm@||@com (Avraham Adler)
Date: Sun, 13 Aug 2023 16:57:53 -0400
Subject: [R-pkg-devel] status of "possibly invalid URL/403 error" NOTEs?
In-Reply-To: <af047398-58dd-1289-c719-2aa1441595da@gmail.com>
References: <af047398-58dd-1289-c719-2aa1441595da@gmail.com>
Message-ID: <715F42AD-E205-43E6-9819-175FABA38B7E@gmail.com>

I had a similar issue with a paper on JSTOR. Usually CRAN let it through. However, I eventually switched from URL to DOI and now the user needs to find the free source so to rid myself of the constant hassle. CRAN really doesn?t like redirects. I guess you could wrap it in \code{} so as not to hyperlink. 

Avi

Sent from my iPhone

> On Aug 13, 2023, at 3:17 PM, Ben Bolker <bbolker at gmail.com> wrote:
> 
> ?  I have a package whose documentation includes the reference \doi{10.1137/18M1186411} which redirects here:
> https://epubs.siam.org/doi/10.1137/18M1186411
> 
> Running R CMD check --as-cran on the package gives
> 
> Found the following (possibly) invalid URLs:
>  URL: https://epubs.siam.org/doi/10.1137/18M1186411
>    From: man/llig.Rd
>    Status: 403
>    Message: Forbidden
> 
>  I can access this perfectly well in the browser.
> 
>  Is there any way to avoid this (other than, say, including the URL in a form that does *not* provide a link so that R CMD check won't try to access it? (As Uwe Ligges says [here](https://stat.ethz.ch/pipermail/r-package-devel/2020q1/005195.html) (for a more obviously problematic case), "mention the URL in plain text but not link"
> 
>  Here Hadley Wickham says that these NOTEs can be ignored
> 
> https://twitter.com/hadleywickham/status/1358170607314235392
> 
> but "Hadley said it on twitter" is not an ideal source. The CRAN repository policy says that packages must pass checks without "significant" notes, but it's always hard to know what's significant and what's not ...
> 
>  There's a thread here: https://stat.ethz.ch/pipermail/r-package-devel/2020q1/005171.html
> 
>   Tangentially: is there a more convenient way to search the r-package-devel archives than googling (e.g.) "site:https://stat.ethz.ch/pipermail/r-package-devel  403" ?
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Sun Aug 13 23:02:33 2023
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Sun, 13 Aug 2023 23:02:33 +0200
Subject: [R-pkg-devel] status of "possibly invalid URL/403 error" NOTEs?
In-Reply-To: <715F42AD-E205-43E6-9819-175FABA38B7E@gmail.com>
References: <af047398-58dd-1289-c719-2aa1441595da@gmail.com>
 <715F42AD-E205-43E6-9819-175FABA38B7E@gmail.com>
Message-ID: <04475695-33b8-b0e6-2bf9-079908b7963d@statistik.tu-dortmund.de>



On 13.08.2023 22:57, Avraham Adler wrote:
> I had a similar issue with a paper on JSTOR. Usually CRAN let it through. However, I eventually switched from URL to DOI and now the user needs to find the free source so to rid myself of the constant hassle. CRAN really doesn?t like redirects. I guess you could wrap it in \code{} so as not to hyperlink.
> 
> Avi
> 
> Sent from my iPhone
> 
>> On Aug 13, 2023, at 3:17 PM, Ben Bolker <bbolker at gmail.com> wrote:
>>
>> ?  I have a package whose documentation includes the reference \doi{10.1137/18M1186411} which redirects here:
>> https://epubs.siam.org/doi/10.1137/18M1186411
>>
>> Running R CMD check --as-cran on the package gives
>>
>> Found the following (possibly) invalid URLs:
>>   URL: https://epubs.siam.org/doi/10.1137/18M1186411
>>     From: man/llig.Rd
>>     Status: 403
>>     Message: Forbidden


CRAN will snpect this manually and let is pass.

Best,
Uwe Ligges


>>   I can access this perfectly well in the browser.
>>
>>   Is there any way to avoid this (other than, say, including the URL in a form that does *not* provide a link so that R CMD check won't try to access it? (As Uwe Ligges says [here](https://stat.ethz.ch/pipermail/r-package-devel/2020q1/005195.html) (for a more obviously problematic case), "mention the URL in plain text but not link"
>>
>>   Here Hadley Wickham says that these NOTEs can be ignored
>>
>> https://twitter.com/hadleywickham/status/1358170607314235392
>>
>> but "Hadley said it on twitter" is not an ideal source. The CRAN repository policy says that packages must pass checks without "significant" notes, but it's always hard to know what's significant and what's not ...
>>
>>   There's a thread here: https://stat.ethz.ch/pipermail/r-package-devel/2020q1/005171.html
>>
>>    Tangentially: is there a more convenient way to search the r-package-devel archives than googling (e.g.) "site:https://stat.ethz.ch/pipermail/r-package-devel  403" ?
>>
>> ______________________________________________
>> R-package-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel


From @|mon@urb@nek @end|ng |rom R-project@org  Sun Aug 13 23:10:53 2023
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Mon, 14 Aug 2023 09:10:53 +1200
Subject: [R-pkg-devel] 
 gdb availability on r-devel-linux-x86_64-fedora-gcc
In-Reply-To: <7403d24efd019db3cb61e88d637650ee@shuttlethread.com>
References: <0c6f536870145fa037b2553ce5bb8f1f@shuttlethread.com>
 <f49a77aa-c424-588c-0f46-c8d5004634dd@statistik.tu-dortmund.de>
 <25815.63333.522184.604529@rob.eddelbuettel.com>
 <00d5c596-4fa9-9659-a53b-e0eaf18ee24d@statistik.tu-dortmund.de>
 <7403d24efd019db3cb61e88d637650ee@shuttlethread.com>
Message-ID: <EC20B2C6-3751-434D-A87E-A3D098853864@R-project.org>



> On 14/08/2023, at 5:25 AM, Jamie Lentin <lentinj at shuttlethread.com> wrote:
> 
> Thanks both!
> 
> On 2023-08-12 23:52, Uwe Ligges wrote:
>> On 12.08.2023 23:19, Dirk Eddelbuettel wrote:
>>> On 12 August 2023 at 18:12, Uwe Ligges wrote:
>>> | On 12.08.2023 15:10, Jamie Lentin wrote:
>>> | > The system call in question is done by the TMB package[2], and not ours
>>> | > to tinker with:
>>> | >
>>> | >    cmd <- paste("R --vanilla < ",file," -d gdb --debugger-args=\"-x",
>>> | >                 gdbscript,"\"")
>>> | >    txt <- system(cmd,intern=TRUE,ignore.stdout=FALSE,ignore.stderr=TRUE)
>>> | >
>>> | > My only vaguely reasonable guess is that gdb isn't available on the host
>>> | > in question (certainly R will be!). How likely is this? Is it worth
>>> | > trying to resubmit with the call wrapped with an "if (gdb is on the path)"?
>>> |
>>> | I guess it is really not available as that system got an update.
>>> | Note that you package does not declare any SystemRequirements. Please do
>>> | so and mention gdb.
> 
> It's TMB::gdbsource() that's calling system("R -d gdb"), so presumably the SystemRequirements should live there rather than gadget3? I can raise an issue suggesting this.
> 
>>> | Wrapping it in "if (gdb is on the path)" seems a good solution.
>>> Seconded esp as some systems may have lldb instead of gdb, or neither.
>>> Adding a simple `if (nzchar(Sys.which("gdb")))` should get you there.
>>> Dirk
>> Note that also
>> 1. The machine does not have R on the path (but Rdev)
> 
> Okay, I'll check for "all(nzchar(Sys.which(c('gdb', 'R'))))". This is overkill somewhat, and the example won't run in some environments that TMB::gdbsource() should work in. However, at least it'll check it does work for the relatively default case.
> 

Please note that it should not be calling some random program called R - it should be calling the R instance it's running in (as Uwe pointed out there may be several) so possibly something like file.path(R.home(),"bin","R")

Cheers,
Simon


>> 2. you need to use a current pandoc. Citing Professor Ripley: "The
>> platforms failing are using pandoc 3.1.6 or (newly updated, M1mac)
>> 3.1.6.1"
> 
> I'll be sure to try upgrading before resubmitting.
> 
> Thanks again for your help!
> 
>> Best,
>> Uwe Ligges
> 
> ______________________________________________
> R-package-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-package-devel
> 


